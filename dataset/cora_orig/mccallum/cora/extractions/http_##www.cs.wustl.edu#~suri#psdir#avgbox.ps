URL: http://www.cs.wustl.edu/~suri/psdir/avgbox.ps
Refering-URL: http://www.cs.wustl.edu/~suri/research.html
Root-URL: http://www.cs.wustl.edu
Title: Analysis of a Bounding Box Heuristic for Object Intersection  
Author: Yunhong Zhou Subhash Suri 
Abstract: Bounding boxes are commonly used in computer graphics and other fields to improve the performance of algorithms that should process only the intersecting objects. A bounding-box based heuristic avoids unnecessary intersection processing by eliminating the pairs whose bounding boxes are disjoint. Empirical evidence suggests that the heuristic works well in many practical applications, although its worst-case performance can be bad for certain pathological inputs. What is a pathological input, however, is not well-understood, and consequently there is no guarantee that the heuristic will always work well in a specific application. In this paper, we analyze the performance of bounding box heuristic in terms of two natural shape parameters, aspect ratio and scale factor. These parameters can be used to realistically measure the degree to which the objects are pathologically shaped. We derive tight worst-case bounds on the performance for bounding box heuristic. One of the significant contributions of our paper is that we only require that objects be well-shaped on average. Somewhat surprisingly, the bounds are significantly different from the case when all objects are well-shaped. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. D. Cohen, M. C. Lin, D. Manocha and M. K. Ponamgi. I-COLLIDE: </author> <title> An interactive and exact collision detection system for large-scale environments. </title> <booktitle> Proc. of ACM Interactive 3D Graphics Conference, </booktitle> <pages> pp. 189-196, </pages> <year> 1995. </year>
Reference-contexts: Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130. Email: suri@cs.wustl.edu. 1 Animation algorithms also exploit bounding boxes, especially collision detection algorithms for path planning [12] and the simulation of physically based motion <ref> [1, 11, 15] </ref>. While there is ample empirical evidence that the bounding box heuristic improves performance in practice, the goal of formally proving that bounding boxes maintain high performance in the worst case has remained elusive.
Reference: [2] <author> M. de Berg. </author> <title> Linear size binary space partitions for fat objects. </title> <booktitle> Proc. 3rd European Symposium on Algorithms, </booktitle> <pages> pp. 252-263, </pages> <year> 1995. </year>
Reference-contexts: Additional results on fat or uncluttered objects can be found in <ref> [2, 3, 9] </ref>. Our work is motivated less by the desire to show better combinatorial bounds for well-behaved geometric structures, and more by the desire to validate an accepted belief that bounding boxes improve the performance of object intersection algorithms.
Reference: [3] <author> M. de Berg, M. Katz, A. F. van der Stappen and J. Vleugels. </author> <title> Realistic input models for geometric algorithms. </title> <booktitle> Proc. 13th ACM Symposium on Computational Geometry, </booktitle> <pages> pp. 294-303, </pages> <year> 1997. </year>
Reference-contexts: Additional results on fat or uncluttered objects can be found in <ref> [2, 3, 9] </ref>. Our work is motivated less by the desire to show better combinatorial bounds for well-behaved geometric structures, and more by the desire to validate an accepted belief that bounding boxes improve the performance of object intersection algorithms.
Reference: [4] <author> A. Efrat and M. Sharir. </author> <title> On the complexity of the union of fat objects in the plane. </title> <booktitle> Proc. 13th ACM Symposium on Computational Geometry, </booktitle> <pages> pp. 104-112, </pages> <year> 1997. </year>
Reference-contexts: In each case, we show a matching lower bound. To the best of our knowledge, Theorems 1.1 and 1.2 represent the first average-shape results in computational geometry. Previously, most shape-dependent work had relied on assuming a worst-case bound for each object <ref> [4, 13] </ref>. Such an assumption is frequently hard to justify in practice, since the real-world scenes almost always contain a few unusual and pathologically shaped elements, and yet on average the objects are well-shaped. <p> Efrat and Sharir <ref> [4] </ref> generalize this result to show that the union of n convex objects has complexity O (n 1+" ) provided that each object is fat and each pair of objects intersects only in a constant number of points.
Reference: [5] <author> J. D. Foley, A. van Dam, S. K. Feiner, J. F. </author> <title> Hughes Computer Graphics: </title> <booktitle> Principles and Practice (2nd Edition in C). </booktitle> <publisher> Addison Wesley, </publisher> <year> 1996. </year>
Reference-contexts: We are only interested in the "filtering" aspect of the heuristic, meaning the extent to which the heuristic is effective in discarding pairs of non-intersecting objects. The bounding box heuristic is used in rendering algorithms, including the traditional visible-surface determination <ref> [5] </ref>, the view-frustum culling [8], as well as the recent image-based techniques that reconstruct new images from the reprojected pixels of reference images [14].
Reference: [6] <author> A. Garcia-Alonso, N. Serrano and J. Flaquer. </author> <title> Solving the Collision Detection Problem. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 14, </volume> <pages> pp. 36-43, </pages> <year> 1995. </year>
Reference-contexts: The bounding box heuristic is also common in algorithms for modeling, including techniques that define complex shapes as Boolean combinations of simpler shapes [10], or that verify the clearance of parts in an assembly <ref> [6] </ref>. fl Research supported by NSF grants 9628190 and 9501494. y Department of Computer Science, Washington University, St. Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130.
Reference: [7] <author> S. Gottschalk, M. C. Lin and D. Manocha. OBBTree: </author> <title> A hierarchical structure for rapid interference detection. </title> <booktitle> Proc. ACM SIGGRAPH, </booktitle> <pages> pp. 171-180, </pages> <year> 1996. </year>
Reference: [8] <author> N. Greene. </author> <title> Detecting Intersection of a Rectangular Solid and a Convex Polyhedron. </title> <booktitle> Graphics Gems IV, </booktitle> <pages> pp. 83-110, </pages> <year> 1994. </year> <month> 22 </month>
Reference-contexts: We are only interested in the "filtering" aspect of the heuristic, meaning the extent to which the heuristic is effective in discarding pairs of non-intersecting objects. The bounding box heuristic is used in rendering algorithms, including the traditional visible-surface determination [5], the view-frustum culling <ref> [8] </ref>, as well as the recent image-based techniques that reconstruct new images from the reprojected pixels of reference images [14].
Reference: [9] <author> D. Halperin and M. H. Overmars. </author> <title> Spheres, Molecules, and Hidden Surface Removal. </title> <booktitle> Proc. 10th ACM Symposium on Computational Geometry, </booktitle> <pages> pp. 113-122, </pages> <year> 1994. </year>
Reference-contexts: Additional results on fat or uncluttered objects can be found in <ref> [2, 3, 9] </ref>. Our work is motivated less by the desire to show better combinatorial bounds for well-behaved geometric structures, and more by the desire to validate an accepted belief that bounding boxes improve the performance of object intersection algorithms.
Reference: [10] <author> C. Hoffmann. </author> <title> Geometric and Solid Modeling. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1989. </year>
Reference-contexts: The bounding box heuristic is also common in algorithms for modeling, including techniques that define complex shapes as Boolean combinations of simpler shapes <ref> [10] </ref>, or that verify the clearance of parts in an assembly [6]. fl Research supported by NSF grants 9628190 and 9501494. y Department of Computer Science, Washington University, St. Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130.
Reference: [11] <author> J. T. Klosowski, M. Held, J. S. B. Mitchell, H. Sowizral, and K. Zikan. </author> <title> Real-time collision detection for motion simulation within complex environments. </title> <note> Submitted for journal publication. A preliminary version appeared in ACM SIGGRAPH'96 Visual Proceedings, pp. 151, </note> <year> 1996. </year>
Reference-contexts: Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130. Email: suri@cs.wustl.edu. 1 Animation algorithms also exploit bounding boxes, especially collision detection algorithms for path planning [12] and the simulation of physically based motion <ref> [1, 11, 15] </ref>. While there is ample empirical evidence that the bounding box heuristic improves performance in practice, the goal of formally proving that bounding boxes maintain high performance in the worst case has remained elusive.
Reference: [12] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130. Email: suri@cs.wustl.edu. 1 Animation algorithms also exploit bounding boxes, especially collision detection algorithms for path planning <ref> [12] </ref> and the simulation of physically based motion [1, 11, 15]. While there is ample empirical evidence that the bounding box heuristic improves performance in practice, the goal of formally proving that bounding boxes maintain high performance in the worst case has remained elusive.
Reference: [13] <author> J. Matousek, J. Pach, M. Sharir, S. Sifrony and E. Welzl. </author> <title> Fat triangles determine linearly many holes. </title> <journal> SIAM J. on Computing, </journal> <volume> 23, </volume> <pages> pp. 154-169, </pages> <year> 1994. </year>
Reference-contexts: In each case, we show a matching lower bound. To the best of our knowledge, Theorems 1.1 and 1.2 represent the first average-shape results in computational geometry. Previously, most shape-dependent work had relied on assuming a worst-case bound for each object <ref> [4, 13] </ref>. Such an assumption is frequently hard to justify in practice, since the real-world scenes almost always contain a few unusual and pathologically shaped elements, and yet on average the objects are well-shaped. <p> One of the first nontrivial results in this direction is by Matousek et al. <ref> [13] </ref>, who showed that the union of n fat triangles has complexity O (n log log n), as opposed to fi (n 2 ) for arbitrary triangles; a triangle is fat if its minimum angle exceeds ffi, for a constant ffi &gt; 0.
Reference: [14] <author> L. McMillan. </author> <title> An Image-Based Approach to Three-Dimensional Computer Graphics. </title> <type> Ph.D. Thesis, </type> <institution> University of North Carolina at Chapel Hill, </institution> <year> 1997. </year>
Reference-contexts: The bounding box heuristic is used in rendering algorithms, including the traditional visible-surface determination [5], the view-frustum culling [8], as well as the recent image-based techniques that reconstruct new images from the reprojected pixels of reference images <ref> [14] </ref>.
Reference: [15] <author> M. P. Moore and J. Wilhelms. </author> <title> Collision Detection and Response for Computer Animation. </title> <booktitle> Proc. of SIGGRAPH '88, published as Computer Graphics, </booktitle> <volume> 22, </volume> <pages> pp. 289-298, </pages> <year> 1988. </year>
Reference-contexts: Louis, MO 63130. Email: yzhou@cs.wustl.edu. z Department of Computer Science, Washington University, St. Louis, MO 63130. Email: suri@cs.wustl.edu. 1 Animation algorithms also exploit bounding boxes, especially collision detection algorithms for path planning [12] and the simulation of physically based motion <ref> [1, 11, 15] </ref>. While there is ample empirical evidence that the bounding box heuristic improves performance in practice, the goal of formally proving that bounding boxes maintain high performance in the worst case has remained elusive.
Reference: [16] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference: [17] <author> A. Smith, Y. Kitamura, H. Takemura and F. Kishino. </author> <title> A Simple and Efficient Method for Accurate Collision Detection among Deformable Objects in Arbitrary Motion. </title> <booktitle> Proc. of the IEEE Virtual Reality Annual International Symposium, </booktitle> <pages> pp. 136-145, </pages> <year> 1995. </year>
Reference: [18] <author> S. Suri, P. M. Hubbard and J. F. Hughes. </author> <title> Collision Detection in Aspect and Scale Bounded Polyhedra. </title> <booktitle> Proc. of 9th Annual Symposium on Discrete Algorithms, </booktitle> <year> 1998. </year> <month> 23 </month>
Reference-contexts: The proofs of Theorems 1.1 and 1.2 require several new ideas and combinatorial bounds, because only the average aspect ratio of the input objects is bounded. Consequently, the proofs are significantly more complicated than those in <ref> [18] </ref>, which deals with the case of all objects being well-shaped. In particular, we believe that some of the key technical results, such as Lemma 2.1 and Lemma 4.3, will be useful in other applications. Finally, our Theorem 1.3 settles the open problem left in [18], giving a tight bound for <p> more complicated than those in <ref> [18] </ref>, which deals with the case of all objects being well-shaped. In particular, we believe that some of the key technical results, such as Lemma 2.1 and Lemma 4.3, will be useful in other applications. Finally, our Theorem 1.3 settles the open problem left in [18], giving a tight bound for scenes in which all objects are well-shaped. 1.3 Related Work Our analysis of the bounding box heuristic is related to the idea of "realistic input models," which has become a topic of recent interest in computational geometry. <p> Our work is motivated less by the desire to show better combinatorial bounds for well-behaved geometric structures, and more by the desire to validate an accepted belief that bounding boxes improve the performance of object intersection algorithms. In an earlier paper, Suri, Hubbard and Hughes <ref> [18] </ref> considered this problem, but their result required every object to have a bounded aspect ratio. Briefly, the result in [18] shows that if there are n objects, each with aspect ratio at most ff, and if the set has scale factor oe, then ae = O (ff oe 1=2 log <p> In an earlier paper, Suri, Hubbard and Hughes <ref> [18] </ref> considered this problem, but their result required every object to have a bounded aspect ratio. Briefly, the result in [18] shows that if there are n objects, each with aspect ratio at most ff, and if the set has scale factor oe, then ae = O (ff oe 1=2 log 2 oe). <p> In order to maintain average aspect ratio bound ff avg , there cannot be more than n=2 j such objects.) We will need the following fact, which follows easily from a result proved in <ref> [18] </ref>. 6 B B B B B B B 4 6 object in B 3 depicts its square core. Core grid Size s grid Box B 7 Lemma 2.2 Let B be a size ff avg box in the tiling described above. <p> We begin with a simple lemma, which handles the case of objects with the same bounding box size. This follows easily from a result in <ref> [18] </ref>, but we include a proof for completeness. Lemma 4.1 Let S be a set of n objects where each object has core size 1 and aspect ratio at most ff. Then, ae (S) = O (ff). Proof.
References-found: 18

