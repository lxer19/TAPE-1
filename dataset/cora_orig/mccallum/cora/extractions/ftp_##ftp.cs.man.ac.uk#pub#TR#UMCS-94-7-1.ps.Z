URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-94-7-1.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-94-7-1.html
Root-URL: http://www.cs.man.ac.uk
Title: A Reified Temporal Logic For Nonlinear Planning  
Author: Ying Zhang, Howard Barringer 
Affiliation: Computer Science University of Manchester  
Pubnum: Technical Report UMCS-94-7-1  
Abstract-found: 0
Intro-found: 1
Reference: <author> Allen, James F. </author> <year> 1990. </year> <title> Formal Models of Planning. Pages 50-54 of: </title> <editor> Allen, J., Hendler, J., & Tate, A. (eds), </editor> <booktitle> Readings in Planning. </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In addition, deductive planning systems are more expressive than classical planning systems because of their use of formal logics <ref> (Allen, 1990) </ref>. Most of the deductive planning systems are state-based. In these systems, to describe the fact that most of the properties that hold true in a state will remain true after an execution of an action requires an enormous number of axioms. This problem is called frame problem.
Reference: <author> Allen, James F. </author> <year> 1991a. </year> <title> Planning as Temporal Reasoning. </title> <booktitle> Pages 3-14 of: Proceedings of the 12th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: The basic considerations for such a temporal logic will be discussed in the next section. 1 This formula is expressed as 8t 0 :In (t 0 ; t) =) :P (t 0 ) in <ref> (Allen, 1991a) </ref> 2 This will be explained in the next section. 9 3.1 Syntax Given DV : a set of data variables, T V : a set of temporal variables which is disjoint from DV , DF : a set of data function symbols, T F : a set of temporal
Reference: <author> Allen, James F. </author> <year> 1991b. </year> <title> Temporal Reasoning and Planning. </title> <editor> In: Allen, James F., Kautz, H., Pelavin, R., & Tenenberg, J. (eds), </editor> <booktitle> Reasoning about Plans. </booktitle> <address> San Mateo, CA: </address> <publisher> Morgan Kaufmann Publishers, Inc. </publisher>
Reference-contexts: Vilian and Kautz (86) showed that computing the consequences of temporal assertions is computationally intractable in the interval-based representation. To avoid this NP-hard execution time problem, the completeness of Allen's temporal reasoner, which is the heart of Allen's planner, has to be sacrificed <ref> (Allen, 1991b) </ref>, i.e. some inconsistencies cannot be discovered by the temporal reasoner. As a result, soundness and completeness of the planner cannot be guaranteed. As indicated, several formal logics have been applied to deductive planning, but none is completely satisfactory and widely accepted by planning researchers.
Reference: <author> Allen, James F., & Koomen, J. A. </author> <year> 1983. </year> <title> Planning Using a Temporal World Model. </title> <booktitle> In: Proceedings of the 8th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: It's no loss that we can not work our way from one state to the "next" any more, that was always a bad idea." In Allen's planning system, the persistence assumption is simply expressed as a general proposition constraint <ref> (Allen & Koomen, 1983) </ref>: "Two intervals associated with the same proposition are equal or one is strictly before the other; in other words, if P holds over T p1 and T p2 , then T p1 (&lt;&gt;=)T p2 ." The formula T p1 (&lt;&gt;=)T p2 expresses that the interval T p1 <p> In our case, the language that we use is proposed solely for planning. Instead of adopting the persistence assumption as a constraint as in <ref> (Allen & Koomen, 1983) </ref>, we prefer to interpret the assertion of a property directly over the maximal time intervals. 5 In other words, we prefer to interpret the assertions of properties over series of disjoint time intervals. Such kind of assertion interpretation for properties is consistent with that for actions.
Reference: <author> Allen, J.F. </author> <year> 1984. </year> <title> Towards a General Theory of Action and Time. </title> <journal> Artificial Intelligence, </journal> <volume> 23, </volume> <pages> 123-154. </pages>
Reference-contexts: This main axiom schemata corresponds to Allen's main proposition constraint <ref> (Allen, 1984) </ref>. 3.3.2 Assertions over Arbitrary Intervals In our temporal logic, assertions of proposition types are interpreted over the necessarily maximal time intervals.
Reference: <author> Allen, J.F., & Hayes, P.J. </author> <year> 1985. </year> <title> A Common-Sense Theory of Time. </title> <booktitle> Pages 528-531 of: Proceedings of the 9th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: In Allen's interval temporal logic, time is linear and any two time intervals are exclusively related by one of the thirteen temporal relations. In fact, for any two derived time points in this logic, either one precedes the other or they are equal (Theorem 8 in <ref> (Allen & Hayes, 1985) </ref>). In McDermott's point-based temporal logic, time branches only into the future. McDermott (82) stated that the future is really indeterminate. "The future may be unknown, but there is only one past".
Reference: <author> Biundo, S., Dengler, D., & Koehler, J. </author> <year> 1992. </year> <title> Deductive Planning and Plan Reuse in a Command Language Environment. </title> <booktitle> Pages 628-632 of: Proceedings of the 10th European Conference on Artificial Intelligence. </booktitle>
Reference: <author> Chapman, David. </author> <year> 1987. </year> <title> Planning for Conjunctive Goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32, </volume> <pages> 333-377. </pages>
Reference-contexts: Deductive planning systems based on various situation logics (Green, 1969; Waldinger, 1977; Kowalski, 1979; Manna & Waldinger, 1980; Manna & Waldinger, 1986) and dynamic logics (Rosenschein, 1981; Kautz, 1982) fall into this category. Linear planning is believed to be exponentially less efficient than nonlinear planning <ref> (Chapman, 1987) </ref> and has rarely been adopted since NOAH (Sacerdoti, 1975). Furthermore, because of this linearity restriction, concurrent actions and interval actions cannot be represented and reasoned about. Allen's work (Allen & Koomen, 1983; Allen, 1991a; Allen, 1991b) is an exception. <p> The deleted-condition conflicts can be easily detected in linear planning. In classical nonlinear planning, to avoid deleted-condition conflict, instead of being asserted to be true, a property has to be asserted to be necessarily true <ref> (Chapman, 1987) </ref> at every step in a nonlinear plan. A nonlinear plan is a partial description of a set of linear plans and each of its linear plans is called a completion of the nonlinear plan. <p> In nonlinear planning, we are only concerned with the necessary truth. Failing to maintain the necessary truth of properties in nonlinear planning leads to deleted-condition conflicts. To maintain the computational advantage of a reified temporal logic, we do not intend to introduce modal operators (such as fl in <ref> (Chapman, 1987) </ref> ) to distinguish necessary truth assertions from other kinds of truth assertions.
Reference: <author> Christensen, Jens. </author> <year> 1990. </year> <title> A Hierarchical Planner that Generates its Own Hierarchies. </title> <booktitle> Pages 1004-1009 of: Proceedings of AAAI-90. </booktitle>
Reference: <author> Christensen, Jens, & Grove, A. </author> <year> 1991. </year> <title> A formal Model for Classical Planning. </title> <booktitle> Pages 246-251 of: Poceedings of the 12th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Cranefield, Stephen J. S. </author> <year> 1990. </year> <title> Planning for Behaviour-Based Robotic Assembly: A Logical Framework. </title> <type> Ph.D. thesis, </type> <institution> University of Edinburgh. </institution>
Reference-contexts: The second reason is that modal temporal logics are less expressive than reified temporal logics <ref> (Cranefield, 1990) </ref>, which we will discuss next. For any modal temporal logic, there exists a reified temporal logic which can be used as its meta-language. <p> The semantics of any modal temporal language can be encoded by a reified temporal language. In this way, the natural and compact expressiveness of modal temporal logics can be combined with the computational advantage of first order logic <ref> (Cranefield, 1990) </ref>. Kowalski (79) pointed out that the ability of reasoning about object level formulae avoids part of frame problem. <p> A plan step can be understood as an execution of an action. There is no way that a plan step can be connected with a time duration. Therefore, assertions of actions and properties are also interpreted at time points. The assertion interpretations in Cranefield's plan specification logic <ref> (Cranefield, 1990) </ref> and in Pednault's work (Pednault, 1991) are similar to that of Christensen. In Allen's formalism, assertions over time points are actually ruled out. Assertions of proposition types (properties, events and processes) are interpreted exclusively over time intervals.
Reference: <author> Currie, Ken, & Tate, Austin. </author> <year> 1989 </year> <month> (May). </month> <title> O-Plan: the Open Planning Architecture. </title> <type> Tech. </type> <institution> rept. AIAI-TR-67. Artificial Intelligence Applications Institute, University of Edinburgh, Edinburgh. </institution>
Reference: <author> Dean, T. </author> <year> 1985. </year> <title> Temporal Reasoning Involving Counterfactuals and Disjunctions. </title> <booktitle> In: Proceedings of the 9th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Fari~nas del Cerro, Luis. </author> <year> 1982. </year> <title> A simple Deduction Method for Modal Logic. </title> <journal> Information Processing Letters, </journal> <volume> 14(2). </volume>
Reference: <author> Fari~nas del Cerro, Luis, & Herzig, A. </author> <year> 1988. </year> <title> Quantified Modal Logic and Unification Theory. </title> <type> Tech. </type> <institution> rept. Rapport LSI n o 293. IRIT, Universite Paul Sabatier. </institution>
Reference: <author> Fari~nas del Cerro, Luis, & Herzig, A. </author> <year> 1989. </year> <title> Deterministic Modal Logics for Automated Deduction. </title> <editor> In: Brazdil, P., & Konolige, K. (eds), </editor> <title> Machine Learning, Meta Reasoning and Logics. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference: <author> Fari~nas del Cerro, Luis, & Herzig, A. </author> <year> 1990. </year> <title> Automated Quantified Modal Logic. </title> <booktitle> In: Proc. ECAI 90. </booktitle>
Reference: <author> Fikes, R. E., & Nilsson, N. J. </author> <year> 1971. </year> <title> STRIPS: a New Approach to the Application of Theorem Proving to Problem Solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2, </volume> <pages> 189-208. </pages>
Reference-contexts: The dominant view of actions in planning is that actions are state transformations, i.e. functions from one state to another. The truth values of properties are asserted over states. This view of actions underlies all the state-based classical planning systems (STRIPS <ref> (Fikes & Nilsson, 1971) </ref> and its successors) and state-based deductive planning systems. As a function from one state to another, an action thus uniquely defines a resulting state. Therefore, simultaneous and overlapping actions are difficult to express in these systems.
Reference: <author> Frisch, A. M., & Scherl, R. B. </author> <year> 1990 </year> <month> (Sep. </month> <title> 10 -14). A Constraint Logic Approach to Modal Deduction. </title> <booktitle> Pages 234-250 of: Proc. European Workshop JELIA 90, </booktitle> <publisher> LNCS 478. </publisher>
Reference-contexts: non-modal language, and then to adopt a non-modal theorem proving method, for example various resolution methods (Fari~nas del Cerro, 1982; Fari~nas del Cerro & Herzig, 1988; Fari~nas del Cerro & Herzig, 1989; Fari~nas del Cerro & Herzig, 1990; Ohlbach, 1988), the matrix method (Wallen, 1987) or the constraint logic approach <ref> (Frisch & Scherl, 1990) </ref>. The second reason is that modal temporal logics are less expressive than reified temporal logics (Cranefield, 1990), which we will discuss next. For any modal temporal logic, there exists a reified temporal logic which can be used as its meta-language.
Reference: <author> Green, Cordell. </author> <year> 1969. </year> <title> Application of Theorem Proving to Problem Solving. </title> <booktitle> Pages 741-747 of: Proceedings of the 1st International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Halpern, J.K., & Shoham, Y. </author> <year> 1986. </year> <title> A Propositional Modal Logic of Time Intervals. </title> <booktitle> In: Proceedings Symposium on Logic in Computer Science. </booktitle> <volume> 22 Halphern, </volume> <editor> J. Y., Manna, Z., & Moszkowski, B. </editor> <year> 1983. </year> <title> A High-Level Semantics Based on Interval Logic. </title> <booktitle> Pages 278-291 of: Proceedings of ICALP-83, Lecture Notes in Computer Science 154. </booktitle> <publisher> Springer Verlag. </publisher>
Reference: <author> Kautz, H. A. </author> <year> 1982. </year> <title> Planning Within First-Order Dynamic Logic. </title> <booktitle> Pages 19-26 of: Proceedings of the CSCSI/SCEIO. </booktitle>
Reference: <author> Kowalski, R. </author> <year> 1979. </year> <title> Logic for Problem Solving. </title> <publisher> New-York: Elsevier North-Holland, Inc. </publisher>
Reference-contexts: Shoham (87) pointed out that this method "accords no special status of time, neither conceptual nor notational". It is this problem which causes part of the frame problem 2 <ref> (Kowalski, 1979) </ref>. With time listed as a pair of the ordinary arguments, there is nothing in general one can say about the temporal aspect of assertions. At most, one can describe temporal aspect about a specific predicate. This leads to a large number of frame axioms in planning.
Reference: <author> Lin, Yunqing. </author> <year> 1991. </year> <title> Two Theories of Time. </title> <journal> Journal of Applied Non-Classical Logics, </journal> <volume> 1(1), </volume> <pages> 37-63. </pages>
Reference-contexts: Then T rue (N OT (N OT (P )); t i ; t j ) () T rue (P; t i ; t j ) 3 In <ref> (Lin, 1991) </ref>, this is expressed as a lemma (Lemma 3): 8:P:9Start (P ); End (P ):(P 2 Start (P ) ^ End (P ) ^ Start (P ) OE End (P )) and a formal proof is given. 4 According to Shoham's definition, a proposition type is point-point-liquid if whenever it
Reference: <author> Manna, Z., & Waldinger, R. </author> <year> 1980. </year> <title> A Deductive Approach to Program Synthesis. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 2(1), </volume> <pages> 90-121. </pages>
Reference: <author> Manna, Z., & Waldinger, R. </author> <year> 1986. </year> <title> A Theory of Plans. Pages 11-45 of: </title> <editor> Georgeff, M., & Lansky, A. (eds), </editor> <booktitle> Proceeding of the 1986 Workshop on Reasoning About Actions and Plans. </booktitle>
Reference: <author> McCarthy, J., & Hayes, P.J. </author> <year> 1969. </year> <title> Some Philosophical Problems from the Standpoint of Artificial Intelligence. </title> <journal> Machine Intelligence, </journal> <volume> 4, </volume> <pages> 463-502. </pages>
Reference-contexts: Following McDermott's and Shoham's practice, we term the non-temporal component of an assertion a proposition type. In planning, assertions of proposition types can be interpreted over either time points, time intervals or both. In situation calculus <ref> (McCarthy & Hayes, 1969) </ref> and some other formal languages for planning (Manna & Waldinger, 1986; Rosenschein, 1981), assertions of proposition types are interpreted over situations.
Reference: <author> McDermott, D.V. </author> <year> 1982. </year> <title> A Temporal Logic for Reasoning About Processes and Plans. </title> <journal> Cognitive Science, </journal> <volume> 6, </volume> <pages> 101-155. </pages>
Reference-contexts: In an interval temporal logic, however, there is no term to refer to the world when the next action occurs. The frame problem "becomes the problem of inferring what is true at the end of an arbitrary interval" <ref> (McDermott, 1982) </ref>. The most widely accepted approach to handle the frame problem in planning is to adopt the STRIPS assumption. In STRIPS representation, operators are structures consisting of a precondition list, a delete list and an add list.
Reference: <author> Miller, D., Firby, R. J., & Dean, T. </author> <year> 1985. </year> <title> Deadlines, Travel Time and Robot Problem Solving. </title> <booktitle> Pages 1052-1054 of: Proceedings of the 9th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Moszkowski, B. </author> <year> 1986. </year> <title> Executing Temporal Logic Programs. </title> <publisher> Cambridge University Press. </publisher>
Reference: <author> Ohlbach, Hans J. </author> <year> 1988. </year> <title> A Resolution Calculus for Modal Logics. </title> <booktitle> Pages 500-516 of: Proceedings of the 9th International Conference on Automated Deduction, </booktitle> <publisher> LNCS 310. Springer Verlag. </publisher>
Reference: <author> Pednault, E. P. D. </author> <year> 1991. </year> <title> Generalizing Nonlinear Planning to Handle Complex Goals and Actions with Context-Dependent Effects. </title> <booktitle> In: Proceedings 12th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: There is no way that a plan step can be connected with a time duration. Therefore, assertions of actions and properties are also interpreted at time points. The assertion interpretations in Cranefield's plan specification logic (Cranefield, 1990) and in Pednault's work <ref> (Pednault, 1991) </ref> are similar to that of Christensen. In Allen's formalism, assertions over time points are actually ruled out. Assertions of proposition types (properties, events and processes) are interpreted exclusively over time intervals. In McDermott's temporal logic, assertions of facts are interpreted over time points.
Reference: <author> Reichgelt, H. </author> <year> 1987. </year> <title> Semantics for Reified Temporal Logic. Pages 49-61 of: </title> <editor> Hallam, J., & Mellish, C. (eds), </editor> <booktitle> Advances in Artificial Intelligence (Proc. AISB conf., </booktitle> <publisher> University of Edinburgh). Wiley. </publisher>
Reference-contexts: For example, On (t 1 ; t 2 ; A; B) can be used to express that the block A is on the top of block B over the time interval (t 1 ; t 2 ). Apart from in earlier works, this "naive first order treatment of time" <ref> (Reichgelt, 1987) </ref> is adopted neither in AI nor in theoretical computer science. Shoham (87) pointed out that this method "accords no special status of time, neither conceptual nor notational". It is this problem which causes part of the frame problem 2 (Kowalski, 1979).
Reference: <author> Rosenschein, S. J. </author> <year> 1981. </year> <title> Plan Synthesis: A Logical Perspective. </title> <booktitle> In: Proceedings of the 7th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Sacerdoti, Earl D. </author> <year> 1975. </year> <title> The Non-linear Nature of Plans. </title> <booktitle> In: Proceedings of the 4th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: Linear planning is believed to be exponentially less efficient than nonlinear planning (Chapman, 1987) and has rarely been adopted since NOAH <ref> (Sacerdoti, 1975) </ref>. Furthermore, because of this linearity restriction, concurrent actions and interval actions cannot be represented and reasoned about. Allen's work (Allen & Koomen, 1983; Allen, 1991a; Allen, 1991b) is an exception.
Reference: <author> Shoham, Yoav. </author> <year> 1987. </year> <title> Temporal Logics in AI: Semantical and Ontological Considerations. </title> <journal> Artificial Intelligence, </journal> <volume> 33, 89 -104. </volume> <pages> 23 Tate, </pages> <address> Austin. </address> <year> 1986. </year> <title> Goals Structures, </title> <editor> Holding Periods and "Clouds". In: Georgeff, M., & Lansky, A. (eds), </editor> <booktitle> Proceedings of the Workshop Reasoning about Actions and Plans. </booktitle>
Reference-contexts: Unlike fact types, event types are exclusively interpreted over time intervals (Occur (t1,t2, E)). In theoretical computer science and in AI, both kinds of assertion interpretation can be found. For a detailed discussion of this issue, see <ref> (Shoham, 1987) </ref>. In a temporal logic for classical planning, the proposition types to be asserted over time are actions and properties. We discuss the assertions for the two types separately. 2.2.1 Assertion for Actions In the earlier planning systems, actions are assumed to be instantaneous and atomic. <p> Unlike a property type, the assertion of an action over a time interval cannot be expressed as an abbreviation of some formula that consists of assertions over time points. Actions are specific events and they correspond to both the "gestalt type" and "solid type" in <ref> (Shoham, 1987) </ref>. As defined by Shoham, a proposition type is gestalt if it never 4 holds over two time intervals one of which properly contains the other. A proposition type is solid if it never holds over two properly overlapping time intervals.
Reference: <author> Tsang, E. P. K. </author> <year> 1987 </year> <month> (April). </month> <title> TLP ATemporal Planner. </title> <booktitle> In: Proc. AISB-87. </booktitle>
Reference: <author> Vere, S. A. </author> <year> 1983. </year> <title> Planning in Time: Windows and Durations for Activities and Goals. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-5(3), </volume> <pages> 246-267. </pages>
Reference-contexts: To reason about the real world, some of the planning systems focus on reasoning about actions which take time. In (Allen & Koomen, 1983; McDermott, 1982; Allen, 1991a) actions (events) are asserted exclusively over time intervals. In <ref> (Vere, 1983) </ref>, actions are intervals with numerical endpoints. Unlike a property type, the assertion of an action over a time interval cannot be expressed as an abbreviation of some formula that consists of assertions over time points.
Reference: <author> Vere, S. A. </author> <year> 1985a. </year> <title> Splicing Plans to Achieve Misordered Goals. </title> <booktitle> Pages 1016-1021 of: Proceedings of the 9th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Vere, S. A. </author> <year> 1985b. </year> <title> Temporal Scope of Assertions and Window Cutoff. </title> <booktitle> Pages 1055-1059 of: Proceedings of the 9th International Joint Conference on Artificial Intelligence. </booktitle>
Reference: <author> Vilain, Marc, & Kautz, Henry. </author> <year> 1986. </year> <title> Constraint Propagation Algorithms for Temporal Reasoning. </title> <booktitle> Pages 377-382 of: Proceedings of AAAI-86. </booktitle>
Reference-contexts: However, as Shoham pointed out, point-based formulas are more concise and more intuitive. Furthermore, in planning, considering implementation, we believe that to deal with one 6 precedence relation among time points is easier than to deal with thirteen temporal re-lations among time intervals. Vilian and Kautz <ref> (Vilain & Kautz, 1986) </ref> showed that computing the consequences of temporal assertions is computationally intractable in the interval-vased representation.
Reference: <author> Waldinger, R. </author> <year> 1977. </year> <title> Achieve Several Goals Simultaneously. Pages 94 -137 of: </title> <editor> Elcock, E. W., & Michie, D. (eds), </editor> <booktitle> Machine Intelligence 8. </booktitle> <publisher> Ellis Horwood Limited and John Wiley. </publisher>
Reference: <author> Wallen, L. A. </author> <year> 1987. </year> <title> Matrix Proof Methods for Modal Logic. </title> <booktitle> In: Proceedings of the 10th International Joint Conference on Artificial Intelligence. </booktitle>
Reference-contexts: to translate modal logics first into some non-modal language, and then to adopt a non-modal theorem proving method, for example various resolution methods (Fari~nas del Cerro, 1982; Fari~nas del Cerro & Herzig, 1988; Fari~nas del Cerro & Herzig, 1989; Fari~nas del Cerro & Herzig, 1990; Ohlbach, 1988), the matrix method <ref> (Wallen, 1987) </ref> or the constraint logic approach (Frisch & Scherl, 1990). The second reason is that modal temporal logics are less expressive than reified temporal logics (Cranefield, 1990), which we will discuss next.
Reference: <author> Zhang, Ying. </author> <year> 1994 </year> <month> (May). </month> <title> Constraint Logic Planning: A Formal Framework for Nonlinear Planning. </title> <type> Ph.D. thesis, </type> <institution> Manchester Univ., Computer Science Dept. </institution> <month> 24 </month>
Reference-contexts: In this language, we can prove that NOTs cancel out for both properties and actions as long as both the proposition types and their negations hold true only over the maximal non-point interval (refer to <ref> (Zhang, 1994) </ref>). Theorem 1 Let P be a proposition type, (t i ; t j ) is a non-point time interval. <p> For example, the property On (B; T ) holds true over the interval that is started from T 0 and is ended at t 2 . To provide a formal framework for nonlinear planning, in <ref> (Zhang, 1994) </ref>, we proposed a set of restrictions on actions. We showed that the set of restrictions can prevent actions from being improperly defined. We also argued that actions in most of the problem domains either satisfy the restrictions or can be reasonably modified to satisfy the restrictions. <p> 1 ) =) T 1 4 t 1 _ T 1 4 T 0 is not satisfied in the temporal model of P, shown in Figure 4. 19 T 0 T t 2 On (B,C) Clear (B) On (A,T) Clear (C) Clear (A) Clear (B) Puton (B,T,C) Puton (A,T,B) In <ref> (Zhang, 1994) </ref>, we showed that, from a set of domain constraints, we can obtained a set of temporal formulas, which we termed action constraints. <p> Directly upon the temporal logic, we build our deductive nonlinear planning framework, constraint logic planning. In <ref> (Zhang, 1994) </ref>, we proved that our constraint logic planning is sound, complete and is efficient. 6 Acknowledgements We would like to thank Behnam Bani-Eqbal, David Carlisle, Clare Dixon, Rajeev Gore and Ian Pratt who read an early version of this report and gave valuable comments. <p> This paper is a modified version of part of Zhang's Ph.D. thesis <ref> (Zhang, 1994) </ref>. The work was supported by the British Council and the State Education Commission of China.
References-found: 44

