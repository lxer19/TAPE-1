URL: ftp://ftp.cs.arizona.edu/schooner/papers/asia-hpc-95.ps.Z
Refering-URL: http://www.cs.arizona.edu/schooner/html-files/publications.html
Root-URL: http://www.cs.arizona.edu
Email: -patrick, rick-@cs.arizona.edu  
Title: Constructing Scientific Meta-Computations  
Author: Patrick T. Homer Richard D. Schlichting 
Address: Tucson, Arizona 85721, USA  
Affiliation: Department of Computer Science The University of Arizona  
Abstract: The increasing complexity of High Performance Computing (HPC) applications, especially scientific simulations, has led to the development of the meta-computation model of scientific applications. In this model, an application is constructed from a collection of independent software components potentially written in different programming languages and targeted for different machine architectures. A software interconnection system is then used to connect these heterogeneous components spanning the Internet into a single logical program, and to provide configuration and control capabilities over the resulting computation. This paper describes the meta-computation model, the current state of an interconnection system called Schooner that provides the software infrastructure needed to realize this model, and the use of the model in an on-going NASA jet engine simulation and monitoring project. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Advanced Visual Systems Inc. </author> <title> AVS Developers Guide (Release 4.0), Part number: 320-0013-02, Rev B, Advanced Visual Systems Inc., </title> <address> Waltham, MA, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: The Turbofan Engine System Simulator (TESS) provides a complete one-dimensional transient thermodynamic aircraft engine simulation [25]. TESS represents each of the principal components of an engine as a module in the AVS scientific visualization system <ref> [1] </ref>. An engine is constructed in AVS by connecting the TESS modules to represent the airow through the engine. The particular engine to be modeled is determined by the modules chosen to represent the engine, and the inputs to each module.
Reference: [2] <author> A. A. Afjeh, P. T. Homer, H. Lewandowski, J. A. Reed, and R. D. Schlichting. </author> <title> Development of an intelligent monitoring and control system for a heterogeneous numerical propulsion system simulation. </title> <booktitle> Proceedings 28th Annual Simulation Symposium, </booktitle> <address> Phoenix, AZ (April 1995), </address> <pages> 278-287. </pages>
Reference-contexts: In a parallel development, a graphical interface and expert system are under construction that will allow the user to monitor the execution progress of engine components, and provide assistance in steering the simulation <ref> [2] </ref>. The Turbofan Engine System Simulator (TESS) provides a complete one-dimensional transient thermodynamic aircraft engine simulation [25]. TESS represents each of the principal components of an engine as a module in the AVS scientific visualization system [1].
Reference: [3] <author> A. A. Afjeh, G. R. Follen, P. T. Homer, H. Lewandowski, J. A. Reed and R. D. Schlich-ting. </author> <title> Numerical Propulsion System Simulation 1D/3D Zooming and Monitoring in Jet Engine Simulation. Entry in the Heterogeneous Computing Challenge, </title> <booktitle> Supercomputing 94, </booktitle> <address> Washington, D.C. </address> <month> (November </month> <year> 1994). </year>
Reference-contexts: task is implemented by a component registration procedure for exported procedures and a export fann prog ( "pin" val float, "pout" val float, "tin" val float, "tout" val float, "xspool" val float, "cshift" res float, "hout" res float, "eout" res float, "pmap1" var array [14] of float, "pmap2" var array <ref> [14, 12, 3] </ref> of float, "pmap3" var array [3] of float) table lookup function. On the first call to an imported procedure, a component sends a lookup request to the Manager. <p> for exported procedures and a export fann prog ( "pin" val float, "pout" val float, "tin" val float, "tout" val float, "xspool" val float, "cshift" res float, "hout" res float, "eout" res float, "pmap1" var array [14] of float, "pmap2" var array [14, 12, 3] of float, "pmap3" var array <ref> [3] </ref> of float) table lookup function. On the first call to an imported procedure, a component sends a lookup request to the Manager. Beyond the basic interconnection tasks, the runtime implements two advanced features, both added as a direct result of the needs of scientific collaborations. <p> The ADPAC instances were executed on nodes of an IBM RS6000 cluster located at NASA Lewis Research Center <ref> [3] </ref>. 5. Other Approaches to Heterogeneity Other researchers have recognized that heterogeneity is important in some contexts, and have developed systems that may duplicate certain aspects of Schooners functionality. These systems can be divided into three categories based on the type of problem each is designed to solve.
Reference: [4] <author> G. T. Almes, A. P. Black, E. D. Lazowska, and J. D. Noe. </author> <title> The Eden system: A technical review. </title> <journal> IEEE Transactions on Software Engineering SE-11, </journal> <month> 1 (January </month> <year> 1985), </year> <pages> 43-59. </pages>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers <ref> [4, 7, 28, 33] </ref>. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC [6], and Cicero/ Nestor [21].
Reference: [5] <author> A. Beguelin, J. J. Dongarra, G. A. Geist, R. Manchek, and V. S. Sunderam. </author> <title> Graphical development tools for network-based concurrent supercomputing. </title> <booktitle> Supercomputing 91, </booktitle> <address> Albuquerque, NM (November 1991), </address> <pages> 435-444. </pages>
Reference-contexts: These systems can be divided into three categories based on the type of problem each is designed to solve. The first category contains message-passing libraries that are designed to facilitate the implementation of parallel algorithms. These include PVM <ref> [5, 29] </ref>, p4 [8], and Zipcode [27], as well as the recent Message Passing Interface (MPI) [24] standard that has grown from the success of these earlier systems.
Reference: [6] <author> B. N. Bershad, D. T. Ching, E. D. Lazowska, J. Sanislo, and M. Schwartz. </author> <title> A remote procedure call facility for interconnecting heterogeneous computer systems. </title> <journal> IEEE Transactions on Software Engineering SE-13, </journal> <month> 8 (August </month> <year> 1987), </year> <pages> 880-894. </pages>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers [4, 7, 28, 33]. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC <ref> [6] </ref>, and Cicero/ Nestor [21]. The primary distinction between this work and Schooner is again one of orientation: the main aim of these systems is to support interpro-cess communication for client/server style operating system services rather than application-level programs. 6.
Reference: [7] <author> A. D. Birrell and B. J. Nelson. </author> <title> Implementing remote procedure calls. </title> <journal> ACM Transactions on Computer Systems 2, </journal> <month> 1 (Feb. </month> <year> 1984), </year> <pages> 39-59. </pages>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers <ref> [4, 7, 28, 33] </ref>. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC [6], and Cicero/ Nestor [21].
Reference: [8] <author> R. Butler and E. Lusk. </author> <title> Users Guide to the p4 Parallel Programming System. </title> <type> Technical Report ANL-92/17. </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory. </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: These systems can be divided into three categories based on the type of problem each is designed to solve. The first category contains message-passing libraries that are designed to facilitate the implementation of parallel algorithms. These include PVM [5, 29], p4 <ref> [8] </ref>, and Zipcode [27], as well as the recent Message Passing Interface (MPI) [24] standard that has grown from the success of these earlier systems.
Reference: [9] <author> S. Chen, M. M. Eshaghian, A. Khokhar, and M. E. Shaaban. </author> <title> A selection theory and methodology for heterogeneous supercomputing. </title> <booktitle> Proceedings: Workshop on Heterogeneous Processing, </booktitle> <address> Newport Beach, CA (April 1993), </address> <pages> 15-22. </pages>
Reference-contexts: The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [10] <author> R. W. Claus, A. L. Evans, and G. J. Follen. </author> <title> Multidisciplinary propulsion simulation using NPSS. </title> <booktitle> 4th AIAA/USAF/NASA/OAI Symposium on Multi-disciplinary Analysis and Optimization, </booktitle> <address> Cleveland, OH (September 1992). </address>
Reference-contexts: Engine Simulation and Monitoring The Numerical Propulsion System Simulation (NPSS) project is a multi-year effort sponsored by NASA to improve the state-of-the-art in jet engine simulation <ref> [10, 11] </ref>. Two goals of this project are to experiment with steering engine simulations and to combine low and high-fidelity engine component simulations.
Reference: [11] <author> R. W. Claus, A. L. Evans, J. K. Lylte, and L. D. Nichols. </author> <title> Numerical propulsion system simulation. </title> <booktitle> Computing Systems in Engineering 2, </booktitle> <month> 4 (April </month> <year> 1991), </year> <pages> 357-364. </pages>
Reference-contexts: Engine Simulation and Monitoring The Numerical Propulsion System Simulation (NPSS) project is a multi-year effort sponsored by NASA to improve the state-of-the-art in jet engine simulation <ref> [10, 11] </ref>. Two goals of this project are to experiment with steering engine simulations and to combine low and high-fidelity engine component simulations.
Reference: [12] <author> CLIPS Reference Manual, </author> <title> Basic Programming Guide. Software Technology Branch, </title> <type> Lyndon B. </type> <institution> Johnson Space Center. </institution> <note> CLIPS Version 5.1, September 10, </note> <year> 1991. </year>
Reference-contexts: task is implemented by a component registration procedure for exported procedures and a export fann prog ( "pin" val float, "pout" val float, "tin" val float, "tout" val float, "xspool" val float, "cshift" res float, "hout" res float, "eout" res float, "pmap1" var array [14] of float, "pmap2" var array <ref> [14, 12, 3] </ref> of float, "pmap3" var array [3] of float) table lookup function. On the first call to an imported procedure, a component sends a lookup request to the Manager. <p> A watch-dog process is created on each machine executing ADPAC to monitor ADPACs output and send results to the monitoring tool. An expert system is under development using CLIPS and will assist the user in monitoring and steering the results of the ADPAC runs <ref> [12] </ref>. Currently, the prototype expert system detects and reports several types of warnings. ADPAC tool. The TESS simulation executes on an AVS-equipped workstation. The monitoring tool and expert system execute on another workstation.
Reference: [13] <author> R. F. Freund and H. J. Siegel. </author> <title> Guest editors introduction: </title> <booktitle> Heterogeneous processing. IEEE Computer 26, </booktitle> <month> 6 (June </month> <year> 1993), </year> <pages> 13-17. </pages>
Reference-contexts: The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [14] <author> P. B. Gibbons. </author> <title> A stub generator for multilan-guage RPC in heterogeneous environments. </title> <journal> IEEE Transactions on Software Engineering SE-13, </journal> <month> 1 (January </month> <year> 1987), </year> <pages> 77-87. </pages>
Reference-contexts: The binding task is implemented by a component registration procedure for exported procedures and a export fann prog ( "pin" val float, "pout" val float, "tin" val float, "tout" val float, "xspool" val float, "cshift" res float, "hout" res float, "eout" res float, "pmap1" var array <ref> [14] </ref> of float, "pmap2" var array [14, 12, 3] of float, "pmap3" var array [3] of float) table lookup function. On the first call to an imported procedure, a component sends a lookup request to the Manager. <p> task is implemented by a component registration procedure for exported procedures and a export fann prog ( "pin" val float, "pout" val float, "tin" val float, "tout" val float, "xspool" val float, "cshift" res float, "hout" res float, "eout" res float, "pmap1" var array [14] of float, "pmap2" var array <ref> [14, 12, 3] </ref> of float, "pmap3" var array [3] of float) table lookup function. On the first call to an imported procedure, a component sends a lookup request to the Manager. <p> The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers [4, 7, 28, 33]. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus <ref> [14] </ref>, HRPC [6], and Cicero/ Nestor [21]. The primary distinction between this work and Schooner is again one of orientation: the main aim of these systems is to support interpro-cess communication for client/server style operating system services rather than application-level programs. 6.
Reference: [15] <author> E. J. Hall, R. A. Delaney, and J. L. Bettner. </author> <title> Investigation of Advanced Counterrotation Blade Configuration Concepts for High Speed Turboprop Systems, Task 5 Unsteady Counterrotation Ducted Propfan Analysis Computer Program Users Manual, </title> <institution> NASA CR-187125, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: The particular engine to be modeled is determined by the modules chosen to represent the engine, and the inputs to each module. The fan component chosen for integration into TESS is the Advanced Ducted Propfan Analysis Code (ADPAC) <ref> [15] </ref>. Originally developed for the study of high-speed ducted propfan aircraft propulsion systems, ADPAC has become a general solver for turbomachinery components.
Reference: [16] <author> R. Hayes. UTS: </author> <title> A Type System for Facilitating Data Communication, </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, University of Arizona, </institution> <month> August </month> <year> 1989. </year>
Reference-contexts: parts that comprise the Schooner system: a specification language, an intermediate data representation and accompanying data exchange library, a set of stub compilers, and a runtime support system. 3.1 UTS The Universal Type System (UTS) combines two of the four Schooner services: an intermediate data representation and a specification language <ref> [16, 17] </ref>. The intermediate data representation allows data to be represented in a machine and language-independent manner. It includes most simple data types, plus full support for array and record types and procedure parameters. Library routines are provided to convert data to and from the UTS representation.
Reference: [17] <author> R. Hayes and R. D. Schlichting. </author> <title> Facilitating mixed language programming in distributed systems. </title> <journal> IEEE Transactions on Software Engineering SE-13, </journal> <month> 12 (December </month> <year> 1987), </year> <pages> 1254-1264. </pages>
Reference-contexts: parts that comprise the Schooner system: a specification language, an intermediate data representation and accompanying data exchange library, a set of stub compilers, and a runtime support system. 3.1 UTS The Universal Type System (UTS) combines two of the four Schooner services: an intermediate data representation and a specification language <ref> [16, 17] </ref>. The intermediate data representation allows data to be represented in a machine and language-independent manner. It includes most simple data types, plus full support for array and record types and procedure parameters. Library routines are provided to convert data to and from the UTS representation.
Reference: [18] <author> P. T. Homer and R. D. Schlichting. </author> <title> A software platform for constructing scientific applications from heterogeneous resources. </title> <journal> Journal of Parallel and Distributed Computing 21, </journal> <month> (June </month> <year> 1994), </year> <pages> 301-315. </pages>
Reference-contexts: Section four illustrates the use of the system with a jet engine simulation being developed as part of NASAs Numerical Propulsion System Simulation (NPSS) project. Section five offers concluding remarks. Other papers have described earlier work with the Schooner system <ref> [18, 19] </ref> while a dissertation [20] describes the development of the system in some detail. 2. Interconnection Systems Two specific problems can be identified when considering HPC applications that require access to heterogeneous hardware and software resources.
Reference: [19] <author> P. T. Homer and R. D. Schlichting. </author> <title> Using Schooner to support distribution and heterogeneity in the Numerical Propulsion System Simulation project. </title> <journal> Concurrency: Practice and Experience 6, </journal> <month> 4 (June </month> <year> 1994) </year> <month> 271-287. </month>
Reference-contexts: Section four illustrates the use of the system with a jet engine simulation being developed as part of NASAs Numerical Propulsion System Simulation (NPSS) project. Section five offers concluding remarks. Other papers have described earlier work with the Schooner system <ref> [18, 19] </ref> while a dissertation [20] describes the development of the system in some detail. 2. Interconnection Systems Two specific problems can be identified when considering HPC applications that require access to heterogeneous hardware and software resources.
Reference: [20] <author> P. T. Homer. </author> <title> Constructing Scientific Applications from Heterogeneous Resources. </title> <type> Ph.D. Dissertation, Technical Report 94-33, </type> <institution> Department of Computer Science, University of Arizona, </institution> <month> December </month> <year> 1994. </year>
Reference-contexts: Section four illustrates the use of the system with a jet engine simulation being developed as part of NASAs Numerical Propulsion System Simulation (NPSS) project. Section five offers concluding remarks. Other papers have described earlier work with the Schooner system [18, 19] while a dissertation <ref> [20] </ref> describes the development of the system in some detail. 2. Interconnection Systems Two specific problems can be identified when considering HPC applications that require access to heterogeneous hardware and software resources.
Reference: [21] <author> Y. Huang and C. V. Ravishankar. </author> <title> Designing an agent synthesis system for cross-RPC communication. </title> <journal> IEEE Transactions on Software Engineering 20, </journal> <month> 3 (March </month> <year> 1994), </year> <pages> 188-198. </pages>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers [4, 7, 28, 33]. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC [6], and Cicero/ Nestor <ref> [21] </ref>. The primary distinction between this work and Schooner is again one of orientation: the main aim of these systems is to support interpro-cess communication for client/server style operating system services rather than application-level programs. 6.
Reference: [22] <author> M. B. Jones, R. F. Rashid and M. R. Thompson. Matchmaker: </author> <title> An interface specification language for distributed processing. </title> <booktitle> Proceedings of the 12th Symposium on Principles of Programming Languages, </booktitle> <address> New Orleans, </address> <month> LA (January </month> <year> 1985), </year> <pages> 225-235. </pages>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers [4, 7, 28, 33]. Several of these systems also emphasize heterogeneity, including Matchmaker <ref> [22] </ref>, Horus [14], HRPC [6], and Cicero/ Nestor [21]. The primary distinction between this work and Schooner is again one of orientation: the main aim of these systems is to support interpro-cess communication for client/server style operating system services rather than application-level programs. 6.
Reference: [23] <author> A. A. Khokhar, V. K. Prasanna, M. E. Shaaban and C. Wang. </author> <title> Heterogeneous computing: Challenges and opportunities. </title> <booktitle> IEEE Computer 26, </booktitle> <month> 6 (June </month> <year> 1993), </year> <pages> 18-27. </pages>
Reference-contexts: This paper describes an alternative model in which HPC applications are constructed as heterogeneous distributed programs or meta-computations <ref> [23] </ref>. In this model, the application is composed of multiple components potentially executing on diverse hardware as before, but with a software interconnection system being used to combine the components into a single logical program. <p> The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [24] <author> Message Passing Interface Forum. </author> <title> Document for a Standard Message-Passing Interface. </title> <address> March 22, </address> <year> 1994. </year>
Reference-contexts: The first category contains message-passing libraries that are designed to facilitate the implementation of parallel algorithms. These include PVM [5, 29], p4 [8], and Zipcode [27], as well as the recent Message Passing Interface (MPI) <ref> [24] </ref> standard that has grown from the success of these earlier systems.
Reference: [25] <author> J. A. Reed. </author> <title> Development of an interactive graphical aircraft propulsion system simulator. </title> <institution> Master of Science Thesis, University of Toledo, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: In a parallel development, a graphical interface and expert system are under construction that will allow the user to monitor the execution progress of engine components, and provide assistance in steering the simulation [2]. The Turbofan Engine System Simulator (TESS) provides a complete one-dimensional transient thermodynamic aircraft engine simulation <ref> [25] </ref>. TESS represents each of the principal components of an engine as a module in the AVS scientific visualization system [1]. An engine is constructed in AVS by connecting the TESS modules to represent the airow through the engine.
Reference: [26] <author> S. L. Scott and J. Potter. </author> <title> A framework for the virtual heterogeneous associative machine. </title> <booktitle> Proceedings: Workshop on Heterogeneous Processing 94, </booktitle> <address> Cancun, Mexico (April 1994). </address>
Reference-contexts: The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [27] <author> A. Skjellum. </author> <title> Scalable libraries in a heterogeneous environment. </title> <booktitle> Proceedings of the 2nd International Symposium on High-Performance Distributed Computing, </booktitle> <address> Spokane, WA (July 1993), </address> <pages> 13-20. </pages>
Reference-contexts: These systems can be divided into three categories based on the type of problem each is designed to solve. The first category contains message-passing libraries that are designed to facilitate the implementation of parallel algorithms. These include PVM [5, 29], p4 [8], and Zipcode <ref> [27] </ref>, as well as the recent Message Passing Interface (MPI) [24] standard that has grown from the success of these earlier systems.
Reference: [28] <author> Sun Microsystems, Inc. </author> <title> Network Programming Guide (Revision A). Part number 800-3850-10. Sun Microsystems, </title> <publisher> Inc., </publisher> <address> Mountain View, CA, </address> <month> March </month> <year> 1990. </year>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers <ref> [4, 7, 28, 33] </ref>. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC [6], and Cicero/ Nestor [21].
Reference: [29] <author> V. S. Sunderam. </author> <title> PVM: A framework for parallel distributed computing. </title> <journal> Concurrency: Practice and Experience 2, </journal> <month> 4 (December </month> <year> 1990), </year> <pages> 315-339. </pages>
Reference-contexts: These systems can be divided into three categories based on the type of problem each is designed to solve. The first category contains message-passing libraries that are designed to facilitate the implementation of parallel algorithms. These include PVM <ref> [5, 29] </ref>, p4 [8], and Zipcode [27], as well as the recent Message Passing Interface (MPI) [24] standard that has grown from the success of these earlier systems.
Reference: [30] <institution> Transportable Applications Environment Plus. </institution> <note> Programmers Manual, Version 5.2. </note> <institution> Goddard Space Flight Center, National Aeronautics and Space Administration. </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: A tool has been developed to allow the user to monitor the intermediate and final results of the ADPAC runs. This monitoring tool, constructed using the TAE+ GUI toolkit <ref> [30] </ref>, reports the residual a measure of how well ADPAC is converging detects warnings, and reports final results for each ADPAC instance. A watch-dog process is created on each machine executing ADPAC to monitor ADPACs output and send results to the monitoring tool.
Reference: [31] <author> M. Wang, S. Kim, M. A. Nichols, R. F. Freund, H. J. Siegel, and W. G. Nation. </author> <title> Augmenting the optimal selection theory for superconcurrency. </title> <booktitle> Proceedings of the 1st Workshop on Heterogeneous Processing, </booktitle> <address> Beverly Hills, CA (March 1992), </address> <pages> 13-21. </pages>
Reference-contexts: The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [32] <author> C. C. Weems, Jr. </author> <title> Image understanding: A driving application for research in heterogeneous parallel processing. </title> <booktitle> Proceedings of the 2nd Workshop on Heterogeneous Processing, </booktitle> <address> Newport Beach, CA (April 1993), </address> <pages> 119-126. </pages>
Reference-contexts: The second category seeks to exploit inherent heterogeneity to achieve parallel speedup within a given problem domain through a combination of approaches that includes both hardware and software-based solutions <ref> [9, 13, 23, 26, 31, 32] </ref>. Hardware research includes the design of multiprocessor, heterogeneous machines that combine processors in unique ways to exploit both the parallelism and heterogeneity present in the target applications.
Reference: [33] <institution> Xerox Corp. </institution> <month> Courier: </month> <title> The Remote Procedure Call Protocol. Xerox System Integration Standard XSIS 038112, </title> <institution> Xerox Corp., Stam-ford CT, </institution> <month> December </month> <year> 1981. </year>
Reference-contexts: The third category includes systems that are related to Schooners RPC mechanism. These other RPC schemes have features such as external data representations, specification languages, and stub compilers <ref> [4, 7, 28, 33] </ref>. Several of these systems also emphasize heterogeneity, including Matchmaker [22], Horus [14], HRPC [6], and Cicero/ Nestor [21].
References-found: 33

