URL: http://www.cs.berkeley.edu/~xjam/compcon97.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~xjam/personal.htm
Root-URL: 
Title: Grendel: A Web Browser with End User Extensibility  
Author: Brian M. Dennis and Michael A. Harrison 
Address: Berkeley  
Affiliation: Computer Science Division University of California,  
Abstract: Electronic documents, particularly those on the World Wide Web, have an inherent structure which can be utilized. However, the tools to do so have typically been oriented towards professional programmers. We present scripting language features that can be incorporated into tools that manipulate structured network documents. This set of language features allows us to build visual tools to specify transformations on such documents. Subsequently, transformation scripting, is opened up to a broad class of users. This allows the tools to be easily extended by end users. World Wide Web browsers serve as a class of tools that can take advantage of this technique. We discuss our experimental browser, Grendel, which has an embedded scripting language, CrossJam, based upon transformation scripting. Grendel has a number of novel applications and a simple visual tool, Spar, to assist in scripting the browser's behavior. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ken Arnold and James Gosling. </author> <title> The Java Programming Languag. </title> <publisher> Addison Wesley, </publisher> <year> 1996. </year>
Reference-contexts: The pattern matching is the combination of Wright's [21] Scheme based matching for destructuring and the NeWS [12] system's use of objects as patterns. Network programming elements and threads have appeared in a number of popular languages including Perl [19], Java <ref> [1] </ref>, and GNU Emacs Lisp. HTML browsers have existed since the dawn of the World Wide Web. We are unaware of any other browsers that feature any level of scripting much less the specific design we have outlined.
Reference: [2] <author> Tim Berners-Lee, Robert Cailliau, Jean-Francois Groff, and Bernd Pollermann. </author> <title> World-Wide Web: The information universe. </title> <journal> Electronic Networking: Research, Applications, and Policy, </journal> <volume> 1(2) </volume> <pages> 52-58, </pages> <month> Spring </month> <year> 1992. </year> <note> Available via ftp://ftp.w3.org/pub/www/doc/ENRAP 9202.ps.Z. </note>
Reference-contexts: 1 Introduction As we rely more and more on the information repository known as the World Wide Web <ref> [2] </ref> our documents come under the requirements of this globally networked environment. Since the agents of the Web (servers, browsers, indexers, editors, crawlers, etc.) are programs, documents are required to conform to formal specifications. This conformity allows programs to derive higher level meaning, or structure, from the document.
Reference: [3] <author> James Clark. SP. </author> <note> http://www.jclark.com/sp/index.html. </note>
Reference-contexts: Grendel is built out of a number of publicly available software packages. The major one is the MrEd [9] user interface programming environment from the Rice PLT group. This is a Scheme based toolkit for building user interfaces akin to Tcl/Tk. We also use Jim Clark's SP <ref> [3] </ref> package to parse SGML [11] in general and HTML in particular. A small library of network code from Olin Shivers' SCSH [18] package was also used in Grendel. Grendel, through MrEd, captures user gestures and maps them into Scheme functions.
Reference: [4] <author> William Clinger and Jonathan Rees. </author> <title> Revised 4 report on the algorithmic language Scheme, </title> <month> November </month> <year> 1991. </year>
Reference-contexts: Good language designers do not design programming languages completely from scratch. Basic programming constructs such as syntax, iteration, control flow, procedural abstraction, etc. need not be reinvented. In that spirit, CrossJam is based upon the Scheme <ref> [4] </ref> programming language. Scheme is a dialect of Lisp designed to have an exceptionally clear and simple semantics. A wide range of programming paradigms are easily expressible in Scheme, albeit with a certain level of verbosity.
Reference: [5] <author> W3 Consortium. Amaya. </author> <note> http://www.w3.org/pub/Amaya/. </note>
Reference-contexts: Unfortunately, today's Web agents allow for little or no customization regarding how the agent operates on these structured documents. Microsoft's Internet Explorer [6] and Netscape's Navigator [7] are completely closed systems with little more customization than a small set of control panels. Even the W3 Consortium's Amaya <ref> [5] </ref> follows this trend. Some HTTP servers have embedded scripting languages but few allow for document transformations and all require sophisticated programming skills for extension. Our solution is to introduce a scripting language entitled CrossJam into these Web agents that can be used to interact with their operation.
Reference: [6] <institution> Microsoft Corporation. Microsoft Internet Explorer. </institution> <note> http://www.microsoft.com/ie/default.asp. </note>
Reference-contexts: There must be some means by which end users can alter their tools to fit tasks at hand. Unfortunately, today's Web agents allow for little or no customization regarding how the agent operates on these structured documents. Microsoft's Internet Explorer <ref> [6] </ref> and Netscape's Navigator [7] are completely closed systems with little more customization than a small set of control panels. Even the W3 Consortium's Amaya [5] follows this trend. Some HTTP servers have embedded scripting languages but few allow for document transformations and all require sophisticated programming skills for extension.
Reference: [7] <author> Netscape Communications Corporation. </author> <title> Netscape Navigator handbook. </title> <address> http://home.netscape.com. </address>
Reference-contexts: There must be some means by which end users can alter their tools to fit tasks at hand. Unfortunately, today's Web agents allow for little or no customization regarding how the agent operates on these structured documents. Microsoft's Internet Explorer [6] and Netscape's Navigator <ref> [7] </ref> are completely closed systems with little more customization than a small set of control panels. Even the W3 Consortium's Amaya [5] follows this trend. Some HTTP servers have embedded scripting languages but few allow for document transformations and all require sophisticated programming skills for extension.
Reference: [8] <author> R. Fielding, J. Gettys, J. C. Mogul, H. Frystyk, and T. Berners-Lee. </author> <type> Hypertext transfer protocol - HTTP/1.1. Technical report, </type> <institution> HTTP Working Group, </institution> <year> 1996. </year>
Reference-contexts: Users can typically make some user interface elements appear or disappear. Adding new ones to the browser is impossible. We know of no way to add a button to Netscape Navigator's toolbar. Resource Control. We wanted to be able to control some of the elements in the HTTP protocol <ref> [8] </ref> such as cookies, client authentication, and content negotiation. We also wanted to be able to script such notions as the access rights of applets on a per host basis. Rendering. Changing font sizes and text colors seems to be the upper limit of rendering control in browsers.
Reference: [9] <author> Robby Findler, Matthew Flatt, and Julian Smart. </author> <title> The MrEd Reference Manual. </title> <institution> Department of Computer Science, Rice University, Rice University, </institution> <address> 6100 Main Street, Houston, TX 77005-1892, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: Grendel can automatically insert the tagged address if the user prefers. Grendel is built out of a number of publicly available software packages. The major one is the MrEd <ref> [9] </ref> user interface programming environment from the Rice PLT group. This is a Scheme based toolkit for building user interfaces akin to Tcl/Tk. We also use Jim Clark's SP [3] package to parse SGML [11] in general and HTML in particular.
Reference: [10] <author> International Organization for Standardisation. </author> <title> Information technology text and office systems document style semantics and specification language (DSSSL), 1994. Draft International Standard. </title>
Reference-contexts: Providing an environment for building and transforming structured documents is the basic function of compilers. Ensemble is the latest in a long line of efforts to apply compiler oriented program analysis techniques to an editing environment. Structured document transformation is also a popular concept in the SGML community. DSSSL <ref> [10] </ref> is an ISO standard language for transforming SGML documents. DSSSL has a number of surface features in common with CrossJam. However, CrossJam is a much smaller language and provides a much simpler model of transformation.
Reference: [11] <author> Charles F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, </publisher> <address> Oxford and New York, </address> <year> 1990. </year>
Reference-contexts: The major one is the MrEd [9] user interface programming environment from the Rice PLT group. This is a Scheme based toolkit for building user interfaces akin to Tcl/Tk. We also use Jim Clark's SP [3] package to parse SGML <ref> [11] </ref> in general and HTML in particular. A small library of network code from Olin Shivers' SCSH [18] package was also used in Grendel. Grendel, through MrEd, captures user gestures and maps them into Scheme functions. At appropriate points, HTTP requests are made to HTTP servers on the network.
Reference: [12] <author> James Gosling, David S.H. Rosenthal, and Michelle Arden. </author> <title> The NeWS Book. </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: The language features that appear in CrossJam are not new though the combination and orientation is. CrossJam is strongly influenced by KR, the object system in the Garnet [15] user interface system. The pattern matching is the combination of Wright's [21] Scheme based matching for destructuring and the NeWS <ref> [12] </ref> system's use of objects as patterns. Network programming elements and threads have appeared in a number of popular languages including Perl [19], Java [1], and GNU Emacs Lisp. HTML browsers have existed since the dawn of the World Wide Web.
Reference: [13] <author> Bil Lewis, Dan LaLiberte, </author> <title> and the GNU Manual Group. GNU Emacs Lisp Reference Manual. Free Software Foundation, </title> <address> Cambridge, MA, 1.01 edition, </address> <month> April </month> <year> 1990. </year>
Reference-contexts: This verbosity, among other things, is what has hindered acceptance of Scheme among day-to-day programmers. We used Scheme as a base language for a number of pragmatic reasons. First, we wanted an analog to GNU Emacs Lisp <ref> [13] </ref> but with cleaner semantics. Second, there were a number of high quality freely available embeddable Scheme implementations. These implementations were also easily augmented with domain specific features needed for Cross-Jam. Lastly, the author's familiarity with programming in Lisp-like languages came to bear.
Reference: [14] <author> Hakon Wium Lie and Bert Bos. </author> <title> Cascading style sheets, level 1. </title> <type> Technical Report REC-CSS1, </type> <institution> W3 Consortium, </institution> <address> Cambridge, MA, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: We also wanted to be able to script such notions as the access rights of applets on a per host basis. Rendering. Changing font sizes and text colors seems to be the upper limit of rendering control in browsers. While Cascading Style Sheets <ref> [14] </ref> are now available and quite easy to author, we wanted to get away from the whole notion of having to hand write code to control how the browser renders documents.
Reference: [15] <author> Brad A. Myers, Dario Giuse, Roger B. Dannenberg, Brad Vander Zanden, David Kosbie, Ed Pervin, An-drew Mickish, and Phillipe Marchal. Garnet: </author> <title> Comprehensive support for graphical highly-interactive user interfaces. </title> <journal> IEEE Computer, </journal> <volume> 23(11), </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: The techniques described here could be used by professionals in deploying SGML-like applications for end users. The language features that appear in CrossJam are not new though the combination and orientation is. CrossJam is strongly influenced by KR, the object system in the Garnet <ref> [15] </ref> user interface system. The pattern matching is the combination of Wright's [21] Scheme based matching for destructuring and the NeWS [12] system's use of objects as patterns. Network programming elements and threads have appeared in a number of popular languages including Perl [19], Java [1], and GNU Emacs Lisp.
Reference: [16] <author> John Ousterhout. </author> <title> TCL: An embeddable command language. </title> <booktitle> In Proceedings of the 1990 USENIX Winter Conference, </booktitle> <pages> pages 133-146, </pages> <year> 1990. </year>
Reference-contexts: GnuScape aka Emacs W3 [17] is a browser that operates in an environment similar to Grendel, but has no scripting features specific to structured network documents. Similarly, there are a number of browsers written in high level languages such as Tcl <ref> [16] </ref> and Python [20]. While these browsers do have a scripting language it has little to no orientation towards transforming structured network documents.
Reference: [17] <author> William Perry. Emacs-W3. </author> <note> http://www.cs.indiana.edu/l/www/elisp/w3/docs.html. </note>
Reference-contexts: HTML browsers have existed since the dawn of the World Wide Web. We are unaware of any other browsers that feature any level of scripting much less the specific design we have outlined. GnuScape aka Emacs W3 <ref> [17] </ref> is a browser that operates in an environment similar to Grendel, but has no scripting features specific to structured network documents. Similarly, there are a number of browsers written in high level languages such as Tcl [16] and Python [20].
Reference: [18] <author> Olin Shivers. </author> <title> Scsh Reference Manual. </title> <institution> MIT Laboratory for Computer Science, </institution> <address> 0.1 beta edition, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: This is a Scheme based toolkit for building user interfaces akin to Tcl/Tk. We also use Jim Clark's SP [3] package to parse SGML [11] in general and HTML in particular. A small library of network code from Olin Shivers' SCSH <ref> [18] </ref> package was also used in Grendel. Grendel, through MrEd, captures user gestures and maps them into Scheme functions. At appropriate points, HTTP requests are made to HTTP servers on the network.
Reference: [19] <author> Larry Wall and Randal L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> Sebastopol, CA, </address> <year> 1991. </year>
Reference-contexts: The pattern matching is the combination of Wright's [21] Scheme based matching for destructuring and the NeWS [12] system's use of objects as patterns. Network programming elements and threads have appeared in a number of popular languages including Perl <ref> [19] </ref>, Java [1], and GNU Emacs Lisp. HTML browsers have existed since the dawn of the World Wide Web. We are unaware of any other browsers that feature any level of scripting much less the specific design we have outlined.
Reference: [20] <author> Aaron Watters, Guido van Rossum, and James Ahlstrom. </author> <title> Internet Programming with Python. </title> <publisher> MIS Press/Henry Holt, </publisher> <year> 1996. </year>
Reference-contexts: GnuScape aka Emacs W3 [17] is a browser that operates in an environment similar to Grendel, but has no scripting features specific to structured network documents. Similarly, there are a number of browsers written in high level languages such as Tcl [16] and Python <ref> [20] </ref>. While these browsers do have a scripting language it has little to no orientation towards transforming structured network documents.
Reference: [21] <author> Andrew K. Wright and Bruce F. Duba. </author> <title> Pattern Matching for Scheme. </title> <institution> Department of Computer Science, Rice University, Houston, TX, </institution> <note> version 1.03 edition, </note> <month> October </month> <year> 1993. </year> <month> ftp://titan.cs.rice.edu/public/wright/match.tar.Z. </month>
Reference-contexts: The language features that appear in CrossJam are not new though the combination and orientation is. CrossJam is strongly influenced by KR, the object system in the Garnet [15] user interface system. The pattern matching is the combination of Wright's <ref> [21] </ref> Scheme based matching for destructuring and the NeWS [12] system's use of objects as patterns. Network programming elements and threads have appeared in a number of popular languages including Perl [19], Java [1], and GNU Emacs Lisp. HTML browsers have existed since the dawn of the World Wide Web.
References-found: 21

