URL: http://www.cs.tamu.edu/people/miket/fftr.ps.gz
Refering-URL: http://www.cs.tamu.edu/people/miket/
Root-URL: http://www.cs.tamu.edu
Email: fmiketg@cs.tamu.edu  
Title: Design and Implementation of the FFT Algorithm on HyperCube MIMD Supercomputers  
Author: Michael E. Thomadakis 
Date: July 17, 1993  
Address: College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Abstract: The purpose of this study is to develop a parallel algorithm for the Fast-Fourier Transform method on Distributed Memory MIMD supercomputers, implement it on the nCube supercomputer and study the factors that affect the performance of the underlying machine. For the purpose of completeness we present necessary mathematical underpinings of the Fourier Transform and derive its Fast version. We develop the parallel algorithm and we show how it maps to the actual parallel machine. We execute a number of experiments for each sub-cube and problem size and we present the results from the executions. The nCube is an adequate machine for developing parallel algorithms with regular structure, like the FFT. We have observed that activity in the operating system that runs on the nCube nodes or the host machine can affect the performance of the parallel programs running on sub-cube partitions. We have also felt the need to allow communication overlap with computation, which is not possible by only using the parallel C language ncc. Without overlap many applications which wait until communication completes, waste valuable time underutilizing the processors. Another potential problem is communication buffer overflow. Remote nodes may start transmitting data which are received by the destination PEs but if not explicitly read off by the application will create communication buffer shortage very quickly. It should be possible by the application to clean-up the communication buffers of the node it executes so that other more useful or urgent communication can take place. Buffer overflow may also create deadlock situations where a node cannot send messsages to another node if its buffer is full of received but unretrieved messages. Another issue is the high operating system overhead in processing mesages. The hardware is capable of delivering low latency and relatively high bandwidth to applications. The high communication set-up cost and subsequent processing overhead does not allow applications benefit from the low latency messaging capabilities. Lastly, there is no resource management in the communicaion sub-system to share the band-width among different unrelated applications. This may create unfairness problems, as well as, give rise to deadlock situations even when an applicaiton running by itself would be deadlock-free. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Aho, A. V., J. E. Hopcroft, and J. D. Ullman. </author> <title> The Design and Analysis of Computer Algorithms, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1974. </year>
Reference-contexts: The properties of the Principal Unity Roots lead to the development of the FFT algorithm. 2.1 Principal N -th Roots of Unity The Discrete Fourier Transform (DFT) is defined over an arbitrary commutative ring R, (R; +; ; 0; 1) <ref> [1] </ref>. An element ! 2 R, which satisfies: ! 6= 1; P N 1 (1) is said to be a Principal N -th Root of Unity. <p> For a complete proof, see <ref> [1] </ref>. 2.4 A Small Example for N = 4 An example may illustrate the form of the coefficient matrix . Let N = 4, thus ! 4 = exp ( i2 2 + sin 2 = i.
Reference: [2] <author> Joseph, Jaja. </author> <title> An Introduction to Parallel Algorithms. </title> <address> Adisson-Wesley, Reading, MA, </address> <year> 1992. </year> <title> [3] nCube 2 Processor Manual. Release 2.0, </title> <year> 1992. </year>
References-found: 2

