URL: ftp://ftp.cc.gatech.edu/pub/groups/ai/goel/ieeexpert97.ps
Refering-URL: http://www.cs.gatech.edu/aimosaic/faculty/goel/ABSTRACTS-summary.html
Root-URL: 
Email: goel@cc.gatech.edu  
Title: Design, Analogy, and Creativity  
Author: Ashok K. Goel 
Note: This article is intended for the IEEE Expert Special Issue on AI in Design.  
Date: April 11, 1997  
Address: Atlanta, GA 30332-0280  
Affiliation: College of Computing Georgia Institute of Technology  
Abstract: : 
Abstract-found: 1
Intro-found: 1
Reference: [Bhatta 1995] <author> S. Bhatta. </author> <title> Model-Based Analogy in Innovative Device Design. </title> <type> Ph.D. Dissertation, </type> <institution> College of Computing, Georgia Institute of Technology, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: Three Theories of Analogy-Based Creative Design: SYN, DSSUA, and IDEAL I have selected to focus on three theories that appear to exemplify recent work on analogy-based creative design. The three theories are instantiated in operational computer systems called DSSUA [Qian and Gero 1992], IDEAL <ref> [Bhatta 1995; Bhatta and Goel 1996; Bhatta, Goel and Prabhakar 1994] </ref>, and SYN [Borner et al 1996]. DSSUA was developed in the early nineties in Australia. IDEAL was developed in the early to mid nineties in U.S.A, and SYN was developed in the mid nineties in Germany.
Reference: [Bhatta and Goel 1996] <author> S. Bhatta and A. Goel. </author> <title> From Design Experiences to Generic Mechanisms: Model-Based Learning in Analogical Design. </title> <booktitle> Artificial Intelligence in Engineering Design, Analysis and Manufacturing, Special Issue on Machine Learning in Design, </booktitle> <volume> 10 </volume> <pages> 131-136, </pages> <year> 1996. </year>
Reference-contexts: Three Theories of Analogy-Based Creative Design: SYN, DSSUA, and IDEAL I have selected to focus on three theories that appear to exemplify recent work on analogy-based creative design. The three theories are instantiated in operational computer systems called DSSUA [Qian and Gero 1992], IDEAL <ref> [Bhatta 1995; Bhatta and Goel 1996; Bhatta, Goel and Prabhakar 1994] </ref>, and SYN [Borner et al 1996]. DSSUA was developed in the early nineties in Australia. IDEAL was developed in the early to mid nineties in U.S.A, and SYN was developed in the mid nineties in Germany. <p> The article has benefited from constructive critiques by David Brown, William Birmingham, and four anonymous re 23 viewers. Figures 1 and 2 in this article have been adapted from [Qian and Gero 1992]; Figures 3, 4 and 5 have been adapted from <ref> [Bhatta and Goel 1996] </ref>. During the writing of this article, Goel was supported in part by design-related research grants from NSF (DMI-94-20405) and DARPA (F33615-93-1-1338).
Reference: [Bhatta, Goel and Prabhakar 1994] <author> S. Bhatta, A. Goel and S. Prabhakar. </author> <title> Innovation in Analogical Design: A Model-Based Approach. </title> <booktitle> In Proc. Third International Conference on Artificial Intelligence in Design, </booktitle> <address> Lausanne, Switzerland, August 1994, </address> <publisher> Kluwer Academic Publishers, </publisher> <pages> pp. 57-74. </pages>
Reference-contexts: Three Theories of Analogy-Based Creative Design: SYN, DSSUA, and IDEAL I have selected to focus on three theories that appear to exemplify recent work on analogy-based creative design. The three theories are instantiated in operational computer systems called DSSUA [Qian and Gero 1992], IDEAL <ref> [Bhatta 1995; Bhatta and Goel 1996; Bhatta, Goel and Prabhakar 1994] </ref>, and SYN [Borner et al 1996]. DSSUA was developed in the early nineties in Australia. IDEAL was developed in the early to mid nineties in U.S.A, and SYN was developed in the mid nineties in Germany. <p> This short description of IDEAL does not cover many aspects of its processing. For example, IDEAL also uses design patterns for assimilating information on a design failure and reinterpreting the design problem <ref> [Bhatta, Goel and Prabhakar 1994] </ref>. In addition, it refines the abstracted design patterns in subsequent design episodes. Note that IDEAL uses generic design patterns for cross-domain analogical transfer.
Reference: [Borner et al 1996] <author> K. Borner, E. Pippig, E. Tammer and C. Coulon. </author> <title> Structural Similarity and Adaptation. </title> <booktitle> In Proc. Third European Workshop on Case-Based Reasoning, Laussane, November 1996, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> pp. 58-75. </pages>
Reference-contexts: The three theories are instantiated in operational computer systems called DSSUA [Qian and Gero 1992], IDEAL [Bhatta 1995; Bhatta and Goel 1996; Bhatta, Goel and Prabhakar 1994], and SYN <ref> [Borner et al 1996] </ref>. DSSUA was developed in the early nineties in Australia. IDEAL was developed in the early to mid nineties in U.S.A, and SYN was developed in the mid nineties in Germany.
Reference: [Brown 1996] <author> D.C. Brown. </author> <title> Routineness Revisited. In Mechanical Design: Theory and Methodology, </title> <editor> M. Waldron and K. Waldron (editors), </editor> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 195-208. </pages>
Reference: [Brown and Chandrasekaran 1989] <author> D.C. Brown and B. Chandrasekaran. </author> <title> Design Problem Solving: Knowledge Structures and Control Strategies. </title> <address> London, UK: </address> <publisher> Pitman, </publisher> <year> 1989. </year>
Reference: [Carbonell 1983] <author> J. Carbonell. </author> <title> Learning by Analogy: Formulating and Generalizing Plans from Past Experience. Machine Learning: An Artificial Intelligence Approach, </title> <editor> R. Michalski, J. Car-bonell and T. Mitchell (editors). </editor> <address> Palo Alto, CA: </address> <publisher> Tioga, </publisher> <year> 1983. </year>
Reference-contexts: The case-based strategy nevertheless fits many tasks in variant design and some tasks in adaptive design. 2 The case-based reasoning literature often makes a distinction between transformational analogy and derivational analogy <ref> [Carbonell 1983] </ref>. In transformational case-based reasoning, the solution S old for P old is modified to obtain the solution S new for P new . The modification knowledge typically is associative, and often is based on domain-specific heuristics.
Reference: [Falkenhainer, Forbus and Gentner 1989] <author> B. Falkenhainer, K. Forbus and D. Gentner. </author> <title> The Structure-Mapping Engine: Algorithms and Examples. </title> <journal> Artificial Intelligence, </journal> <volume> 41-1:63, </volume> <year> 1989. </year>
Reference-contexts: In general, analogical transfer requires the use of generic abstractions, where the abstractions typically express the structure of relationships between generic types of objects and processes. The analogical reasoning literature in AI (e.g. [Winston 1980]), in cognitive psychology (e.g. [Gick and Holyoak 1983]), and in cognitive science (e.g., <ref> [Falkenhainer, Forbus and Gentner 1989] </ref>), all suggests that the generic abstractions are not merely abstractions over features of objects, but that they capture the relational structure among objects and processes.
Reference: [Gero 1990] <author> J. Gero. </author> <title> Design Prototypes: A Knowledge Representation Schema for Design. </title> <journal> AI Magazine, </journal> <volume> 11(4) </volume> <pages> 26-36. </pages>
Reference: [Gick and Holyoak 1983] <author> M. Gick and K. Holyoak. </author> <title> Schema Induction and Analogical Transfer. </title> <journal> Cognitive Psychology, </journal> <volume> 15 </volume> <pages> 1-38, </pages> <year> 1983. </year>
Reference-contexts: In general, analogical transfer requires the use of generic abstractions, where the abstractions typically express the structure of relationships between generic types of objects and processes. The analogical reasoning literature in AI (e.g. [Winston 1980]), in cognitive psychology (e.g. <ref> [Gick and Holyoak 1983] </ref>), and in cognitive science (e.g., [Falkenhainer, Forbus and Gentner 1989]), all suggests that the generic abstractions are not merely abstractions over features of objects, but that they capture the relational structure among objects and processes.
Reference: [Goel 1992] <author> A. Goel. </author> <title> Integrating Case-Based and Model-Based Reasoning: A Computational Model of Design Problem Solving. </title> <journal> AI Magazine, </journal> <volume> 13(2) </volume> <pages> 50-54, </pages> <month> Summer </month> <year> 1992. </year> <month> 24 </month>
Reference-contexts: domains are identical? This question is directly related to the issue of creativity in design because if P old and P new are almost identical problems, then S old is unlikely to suggest 3 The article by Maher and Gomez in this special issue presents an overview of case-based design. <ref> [Goel 1992] </ref> describes an early theory of using model-based methods for design modification in case-based design. [Wills and Kolodner 1996] discuss some issues in pushing traditional case-based reasoning towards innovative design. 6 changes to the variables characterizing P new .
Reference: [Newell and Simon 1972] <author> A. Newell and H. Simon. </author> <title> Human Problem Solving. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, </publisher> <year> 1972. </year>
Reference: [Pahl and Beitz 1984] <author> G. Pahl and W. Beitz. </author> <booktitle> Engineering Design, The Design Counil, </booktitle> <address> London, </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The modification knowledge typically is associative, and often is based on domain-specific heuristics. In derivational case-based reasoning, the processing trace of generating the solution S old for P old by the method of problem space search is used to guide the adaptation of S old . Although both 2 <ref> [Pahl and Beitz 1984] </ref> provide characterizations and examples of variant and adaptive design. 5 methods have been tried in design, they have had only limited success.
Reference: [Qian and Gero 1992] <author> L. Qian and J. Gero. </author> <title> A Design Support System Using Analogy. </title> <booktitle> In Proc. Second International Conference on AI in Design, </booktitle> <pages> pp. 795-813, </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Three Theories of Analogy-Based Creative Design: SYN, DSSUA, and IDEAL I have selected to focus on three theories that appear to exemplify recent work on analogy-based creative design. The three theories are instantiated in operational computer systems called DSSUA <ref> [Qian and Gero 1992] </ref>, IDEAL [Bhatta 1995; Bhatta and Goel 1996; Bhatta, Goel and Prabhakar 1994], and SYN [Borner et al 1996]. DSSUA was developed in the early nineties in Australia. <p> Bhatta, William Mur-dock and Todd Griffith helped with the preparation of this article. The article has benefited from constructive critiques by David Brown, William Birmingham, and four anonymous re 23 viewers. Figures 1 and 2 in this article have been adapted from <ref> [Qian and Gero 1992] </ref>; Figures 3, 4 and 5 have been adapted from [Bhatta and Goel 1996]. During the writing of this article, Goel was supported in part by design-related research grants from NSF (DMI-94-20405) and DARPA (F33615-93-1-1338).
Reference: [Vosniadou and Ortony 1989] <author> S. Vosniadou and A. Ortony. </author> <title> Similarity and Analogical Reasoning, </title> <publisher> Cambridge University Press, </publisher> <year> 1989. </year>
Reference: [Wills and Kolodner 1996] <author> L. Wills and J. Kolodner. </author> <title> Towards More Creative Case-Based Design Systems. In Case-Based Reasoning: Experiences, Lessons, and Future Directions, </title> <editor> D. Leake (editor), </editor> <publisher> AAAI/MIT Press, </publisher> <year> 1996, </year> <pages> pp. 81-91. </pages>
Reference-contexts: if P old and P new are almost identical problems, then S old is unlikely to suggest 3 The article by Maher and Gomez in this special issue presents an overview of case-based design. [Goel 1992] describes an early theory of using model-based methods for design modification in case-based design. <ref> [Wills and Kolodner 1996] </ref> discuss some issues in pushing traditional case-based reasoning towards innovative design. 6 changes to the variables characterizing P new . In general, analogical transfer requires the use of generic abstractions, where the abstractions typically express the structure of relationships between generic types of objects and processes.
Reference: [Winston 1980] <author> P. Winston. </author> <title> Learning and Reasoning by Analogy. </title> <journal> CACM, </journal> <pages> 23(12)689-703, </pages> <year> 1980. </year> <month> 25 </month>
Reference-contexts: In general, analogical transfer requires the use of generic abstractions, where the abstractions typically express the structure of relationships between generic types of objects and processes. The analogical reasoning literature in AI (e.g. <ref> [Winston 1980] </ref>), in cognitive psychology (e.g. [Gick and Holyoak 1983]), and in cognitive science (e.g., [Falkenhainer, Forbus and Gentner 1989]), all suggests that the generic abstractions are not merely abstractions over features of objects, but that they capture the relational structure among objects and processes.
References-found: 17

