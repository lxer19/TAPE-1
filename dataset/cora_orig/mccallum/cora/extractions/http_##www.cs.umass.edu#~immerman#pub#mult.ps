URL: http://www.cs.umass.edu/~immerman/pub/mult.ps
Refering-URL: http://www.cs.umass.edu/~landau/alg_alg.html
Root-URL: 
Title: The Complexity of Iterated Multiplication  
Author: Neil Immerman and Susan Landau 
Date: 116(1) (1995), 103-116  
Note: appeared in Information and Computation  
Address: Amherst, MA 01003  
Affiliation: Computer Science Department University of Massachusetts  
Abstract: For a monoid G, the iterated multiplication problem is the computation of the product of n elements from G. By refining known completeness arguments, we show that as G varies over a natural series of important groups and monoids, the iterated multiplication problems are complete for most natural, low-level complexity classes. The completeness is with respect to "first-order projections" low-level reductions that do not ob scure the algebraic nature of these problems.
Abstract-found: 1
Intro-found: 1
Reference: [All88] <author> Eric Allender (1988), </author> <title> Isomorphisms and 1-L Reductions, </title> <journal> J. Computer Sys. Sci. </journal> <volume> 36, </volume> <pages> 336-350. </pages>
Reference: [All89] <author> Eric Allender (1989), </author> <title> P-Uniform Circuit Complexity, </title> <journal> JACM, </journal> <volume> 36, 912 - 928. </volume>
Reference: [ABI] <author> E. Allender,N. Immerman,J. </author> <month> Balcazar </month> <year> (1993), </year> <title> A First-Order Isomor-phism Theorem, </title> <booktitle> STACS, </booktitle> <pages> 163-174. </pages>
Reference-contexts: We would like to know whether or not Q (M n (bool)) fop Q Corollary 4.6. 4 Very recently this conjecture has been proved, in fact, all problems complete for such C via fops are first-order isomorphic, <ref> [ABI] </ref>. 24 We hope that first-order projections become a useful tool for applying al-gebraic methods to prove complexity theoretic lower bounds. For example, suppose that T is complete for a complexity class C via first-order projections and let S be any problem.
Reference: [Bar] <editor> David Barrington (1989), </editor> <booktitle> Bounded-Width Polynomial-Size Branching Programs Recognize Exactly Those Languages in NC 1 , JCSS 38), </booktitle> <pages> 150-164. </pages>
Reference-contexts: The same is true for Q (M 3 (bool)) and Q Proof This follows from Barrington's Theorem <ref> [Bar] </ref> together with a few observations about uniformity from [BIS]. In particular, Proposition 6.4 in [BIS] says that Q (S 5 ) is complete for NC 1 via DLOGTIME reductions. From [BIS] we also know that DLOGTIME is contained in FO.
Reference: [BIS] <author> D. Barrington, N. Immerman, H. </author> <month> Straubing </month> <year> (1990), </year> <title> On Uniformity Within NC 1 , JCSS 41, </title> <journal> No. </journal> <volume> 3, 274 - 306. </volume>
Reference-contexts: For the classes above NC 1 this may be taken to be logspace computable. Alternatively, we would say that the circuit class is polynomial-time uniform if this map is computable in polynomial-time. For NC 1 and below we assume logtime uniformity or equivalently first-order uniformity <ref> [BIS] </ref>. We discuss uniformity in detail in x3. Beame, Cook, and Hoover have shown: Theorem 2.2 ([BCH]) Iterated integer multiplication (Problem Q putable by polynomial-time uniform NC 1 circuits. Beame, Cook, and Hoover proved Theorem 2.2 by using the Chinese Remainder Theorem. <p> Remember that the variables range over a finite universe, f0; 1; : : : ; n 1g, for some value of n. Thus they may be thought of as (log n)-bit numbers. In <ref> [BIS] </ref> it is shown that BIT is definable in FOM (wo BIT), if we assume that the majority quantifier may apply to pairs of individual variables. (By "wo BIT" we mean without the logical relation BIT.) Thus FOM = FOM (wo BIT), whereas FO 6= FO (wo BIT). (To see the <p> Conjecture 7 in x6. 14 Thus for all the iterated multiplication problems Q (M ) that we have been discussing, we have a corresponding operator, also written Q (M ). Note that these operators are a generalization of the "monoidal quantifiers" of <ref> [BIS] </ref>. As an example, let us look at the operator form of the GAP problem, cf. Example 3.5. <p> This justifies the following, Definition 4.3 (First-Order Turing Reductions) Given problems S and T we will say that S is first-order Turing reducible to T (S fo t T ) iff S 2 (FO + T ). See Theorem 8.1 of <ref> [BIS] </ref> where four other conditions are given that are equivalent to S fo t T , including the condition that S has DLOGTIME uniform circuits that are AC 0 circuits except that they may also include T gates. <p> The same is true for Q (M 3 (bool)) and Q Proof This follows from Barrington's Theorem [Bar] together with a few observations about uniformity from <ref> [BIS] </ref>. In particular, Proposition 6.4 in [BIS] says that Q (S 5 ) is complete for NC 1 via DLOGTIME reductions. From [BIS] we also know that DLOGTIME is contained in FO. An examination of the proof in [BIS] shows that the DLOGTIME reduction is in fact a projection: Each choice <p> The same is true for Q (M 3 (bool)) and Q Proof This follows from Barrington's Theorem [Bar] together with a few observations about uniformity from <ref> [BIS] </ref>. In particular, Proposition 6.4 in [BIS] says that Q (S 5 ) is complete for NC 1 via DLOGTIME reductions. From [BIS] we also know that DLOGTIME is contained in FO. An examination of the proof in [BIS] shows that the DLOGTIME reduction is in fact a projection: Each choice of which element of S 5 <p> The same is true for Q (M 3 (bool)) and Q Proof This follows from Barrington's Theorem [Bar] together with a few observations about uniformity from <ref> [BIS] </ref>. In particular, Proposition 6.4 in [BIS] says that Q (S 5 ) is complete for NC 1 via DLOGTIME reductions. From [BIS] we also know that DLOGTIME is contained in FO. An examination of the proof in [BIS] shows that the DLOGTIME reduction is in fact a projection: Each choice of which element of S 5 to take depends on a single bit of the input. <p> from Barrington's Theorem [Bar] together with a few observations about uniformity from <ref> [BIS] </ref>. In particular, Proposition 6.4 in [BIS] says that Q (S 5 ) is complete for NC 1 via DLOGTIME reductions. From [BIS] we also know that DLOGTIME is contained in FO. An examination of the proof in [BIS] shows that the DLOGTIME reduction is in fact a projection: Each choice of which element of S 5 to take depends on a single bit of the input. Furthermore, determining which bit it depends on is a DLOGTIME and thus first-order computation.
Reference: [BCH] <author> Paul Beame, Steve Cook, H. </author> <title> James Hoover (1986), Log Depth Circuits for Division and Related Problems, </title> <journal> SIAM J. Comput. </journal> <volume> 15:4, </volume> <pages> 994-1003. </pages>
Reference-contexts: The main contribution of this paper is to show that these previously-known completeness results hold with respect to first-order projections. These extremely low-level reductions are defined in Section 3. A very surprising fact reported in <ref> [BCH, Rei] </ref> is that iterated integer multiplication is in P-uniform ThC 0 but not known to be in (uniform) ThC 0 , or even in L. Usually, uniformity does not pose as a serious issue for complexity classes, at least non-randomized ones. <p> All of the above steps can be carried out in NC 1 once we are given a polynomial-size table consisting of information such as the discrete log tables for each of the first n 2 primes. Reif pointed out that the <ref> [BCH] </ref> proofs goes through when NC 1 is replaced by the (perhaps smaller) class ThC 0 . Theorem 2.3 ([Rei]) Iterated integer multiplication (Problem Q putable by polynomial-time uniform ThC 0 circuits. We find it quite surprising that Theorem 2.2 seems to require polynomial-time uniformity.
Reference: [BM] <author> Martin Beaudry and Pierre McKenzie (1992), </author> <title> Circuits, matrices, and nonassociative computation, </title> <booktitle> 7th Structure in Complexity Theory Symp., </booktitle> <pages> 94-106. 25 </pages>
Reference: [BLM] <author> F. Bedard, F. Lemieux and P. </author> <title> McKenzie (1990), Extensions to Bar--rington's M -program model, </title> <booktitle> 5th IEEE Structure in Complexity Theory Symp., </booktitle> <pages> 200-210. </pages> <note> Revised version to appear in Theoret. Comp. Sci. </note>
Reference: [BC] <author> Michael Ben-Or and Richard Cleve (1992), </author> <title> Computing Algebraic Formulas Using A Constant Number of Registers, </title> <journal> SIAM J. Comput. </journal> <volume> 21, </volume> <pages> 54-58. </pages>
Reference-contexts: We note that Barrington's construction and thus this proof goes through for any finite monoid such as Q (M 3 (bool)) or Q (M 3 (F 2 )) that contains a non solvable group. See also <ref> [BC] </ref> where it is shown that any "algebraic NC 1 " 20 circuit over some ring R can be written as an iterated multiplication problem over M 3 (R). In particular, since NC 1 = boolean NC 1 , and boolean algebra embeds in F 2 , the result from [BC] <p> <ref> [BC] </ref> where it is shown that any "algebraic NC 1 " 20 circuit over some ring R can be written as an iterated multiplication problem over M 3 (R). In particular, since NC 1 = boolean NC 1 , and boolean algebra embeds in F 2 , the result from [BC] gives an alternate proof that Q projection complete for NC 1 . Define fop (DET) to be the closure of DET under first-order projections. Recall that DET* is the closure of DET under NC 1 reductions.
Reference: [Ber] <author> Stuart Berkowitz (1984), </author> <title> On Computing Determinant in Small Parallel Time Using a Small Numbers of Processors, </title> <journal> Information Processing Letters, </journal> <volume> 18, No. 3, </volume> <pages> 147-150. </pages>
Reference-contexts: Proof It suffices to write DET as a first-order projection of Q tually Berkowitz <ref> [Ber] </ref> has already done all of the hard work for us. Let A be an n fi n integer matrix.
Reference: [BH] <author> Len Berman and Juris Hartmanis (1977), </author> <title> On Polynomial Time Iso-morphisms of Complete Sets, </title> <booktitle> Proc. Third Theor. Comput. Sci. GI Conf., </booktitle> <publisher> (Springer-Verlag LNCS No. </publisher> <pages> 48), 1-15. </pages>
Reference-contexts: This is true iff PERM 62 fop ( Q (M n (Z))). Thus this result would imply among other things that NL does not contain #P, cf. [vzG, Cai]. 7. We conjecture that a low-level version of the "isomorphism conjecture" <ref> [BH] </ref>, [You] should hold: For the complexity classes C = NL, P, NP, all problems complete for C via first-order projections are logspace isomorphic. 4 8.
Reference: [BDHM] <author> Gerhard Buntrock, Carsten Damm, Ulrich Hertrampf, and Christoph Meinel (1992), </author> <title> Structure and Importance of Logspace-MOD Class, </title> <journal> Math. Systems Theory25, </journal> <pages> 223-237. </pages>
Reference: [Cai] <author> Jin-yi Cai (1990), </author> <title> A Note on the Determinant and Permanent Problem, </title> <journal> Information and Computation, </journal> <volume> 84, No. 1, </volume> <pages> 119-127. </pages>
Reference-contexts: This is true iff PERM 62 fop ( Q (M n (Z))). Thus this result would imply among other things that NL does not contain #P, cf. <ref> [vzG, Cai] </ref>. 7. We conjecture that a low-level version of the "isomorphism conjecture" [BH], [You] should hold: For the complexity classes C = NL, P, NP, all problems complete for C via first-order projections are logspace isomorphic. 4 8.
Reference: [Coo71] <author> Stephen Cook (1971), </author> <title> The Complexity of Theorem&lt; Proving Procedures, </title> <booktitle> Proc. Third Annual ACM STOC Symp., </booktitle> <pages> 151-158. </pages>
Reference-contexts: This means that the resulting universe has size jj ^ I (A)jj = jjAjj 2 , when size 2jjAjj would easily have sufficed. A more general definition of first-order interpretation would allow some of the coordinates of ^ I (A) to be restricted, thus allowing greater efficiency. In <ref> [Coo71] </ref>, Cook proved that the boolean satisfiability problem (SAT) is NP complete via polynomial-time Turing reductions. Over the years SAT has been shown complete via weaker and weaker reductions, e.g. polynomial-time 13 many-one [Kar], logspace many-one [Jon], one-way logspace many-one [HIM].
Reference: [Coo85] <author> Stephen Cook (1985), </author> <title> A Taxonomy of Problems with Fast Parallel Algorithms, </title> <booktitle> Information and Control 64, </booktitle> <pages> 2-22. </pages>
Reference-contexts: Definition 4.4. 5 Completeness Proofs We next show that the iterated multiplication problems that we have been discussing remain complete for their complexity classes via first-order projections. The first theorem is a refinement of the result from <ref> [Coo85] </ref> that iterated Boolean matrix multiplication is complete for NL fl via NC 1 reductions. Theorem 5.1 Iterated Boolean matrix multiplication is complete for NL via quantifier-free projections. Proof First observe that Q (M n (bool)) 2 NL.
Reference: [CM] <author> Stephen Cook and Pierre McKenzie (1987), </author> <title> Problems Complete for Deterministic Logarithmic Space, </title> <journal> J. </journal> <volume> Algorithms 8, </volume> <pages> 385-394. </pages>
Reference-contexts: It follows by the transitivity of qfp (Lemma 3.7) that Q (M n (bool)) is complete for NL via quantifier-free projections. Theorem 5.2 Iterated multiplication of elements of S n is complete for L via first-order projections. Proof In <ref> [CM] </ref> it is shown that this problem is complete for L via NC 1 reductions. By modifying Cook and McKenzie's argument we will show that 1GAP fop (S n ). The theorem then follows from Fact 4.1. <p> It is not hard to see that the sequence e x ; G (e x ); 2 G (e x ); : : : is a depth first traversal of the connected component of G containing x. (This is Proposition 1 in <ref> [CM] </ref>.) It follows that for any graph G, G 2 1GAP iff for some r, r G maps the edge leaving 0 to an edge entering m.
Reference: [Dah] <author> Elias Dahlhaus (1984), </author> <title> Reduction to NP-Complete Problems by Interpretations, </title> <booktitle> Lecture Notes In Computer Science, </booktitle> <publisher> Springer-Verlag, </publisher> <pages> 357-365. </pages>
Reference: [End] <author> Herbert Enderton (1972), </author> <title> A Mathematical Introduction to Logic, </title> <publisher> Academic Press. </publisher>
Reference-contexts: We spend the rest of this paper discussing uniformity and reductions. 4 3 Reductions In this section we describe first-order interpretations. These are very low-level many-one reductions, given by interpretations a standard concept from logic for translating one language into another <ref> [End, Imm87] </ref>. We define a very weak version of first-order interpretations, namely first-order projections. These are first-order interpretations that are at the same time projections in the sense of Valiant [Val]. We will see that the completeness results listed in Figure 2 all hold via first-order projections. <p> Thus the formula can only talk about bit positions, and not bit values. The choice of literals depends only on n. In order to make this definition, we must first define first-order interpretations. 7 These are a standard notion from logic for translating one theory into another, cf. <ref> [End] </ref>, modified so that the transformation is also a many-one reduction, [Imm87]. (For readers familiar with databases, a first-order interpretation is exactly a many-one reduction that is definable as a first-order query.) Definition 3.3 (First-Order Interpretations) Let and t be two vocabularies, with t = hR a 1 1 ; :
Reference: [GKT] <author> F. Green, J. Kobler,J. </author> <title> Toran (1992), The Power of the Middle Bit, </title> <booktitle> Seventh IEEE Structure in Complexity Theory Symp., </booktitle> <pages> 111-117. </pages>
Reference-contexts: Note also that this is intimately connected with a similar kind of bit separation that is important in Toda's theorem, [Tod89]. A solution to this problem would give a simplified and generalized version of that theorem. See <ref> [GKT] </ref> for related work. 2. (S n ) 6 fop (S 5 ): This is true iff NC 1 is strictly contained in L. 3. (Z) fop (S 5 ): This is true iff Q 4. (S 5 ) fop (Z): This would imply that NC 1 is contained in polynomial
Reference: [HIM] <author> Juris Hartmanis, Neil Immerman, and Stephen Mahaney (1978), </author> <title> One-Way Log Tape Reductions, </title> <booktitle> 19th IEEE FOCS Symposium, </booktitle> <pages> 65-72. </pages>
Reference-contexts: In [Coo71], Cook proved that the boolean satisfiability problem (SAT) is NP complete via polynomial-time Turing reductions. Over the years SAT has been shown complete via weaker and weaker reductions, e.g. polynomial-time 13 many-one [Kar], logspace many-one [Jon], one-way logspace many-one <ref> [HIM] </ref>. We find it astounding that SAT remains NP complete via reductions that are provably much weaker than L. <p> Our intuitive feeling when we started this work was that the coding does not matter very much 22 as long as it is sensibly done. However, upon further reflection, we found that the coding really can matter in some cases. An example from the literature is Theorem 4.2 from <ref> [HIM] </ref> which says that there are P-complete and NP-complete sets via logspace reductions that because of the coding are not complete via one-way logspace reductions.
Reference: [Imm87] <author> Neil Immerman (1987), </author> <title> Languages That Capture Complexity Classes, </title> <journal> SIAM J. Comput. </journal> <volume> 16, No. 4, </volume> <pages> 760-778. 26 </pages>
Reference-contexts: We spend the rest of this paper discussing uniformity and reductions. 4 3 Reductions In this section we describe first-order interpretations. These are very low-level many-one reductions, given by interpretations a standard concept from logic for translating one language into another <ref> [End, Imm87] </ref>. We define a very weak version of first-order interpretations, namely first-order projections. These are first-order interpretations that are at the same time projections in the sense of Valiant [Val]. We will see that the completeness results listed in Figure 2 all hold via first-order projections. <p> We will see that the completeness results listed in Figure 2 all hold via first-order projections. The value of this observation is that first-order projections are sufficiently low-level that they retain the full algebraic character of the problems. (In <ref> [Imm87] </ref> a reduction called "projection translations" were defined. These are equivalent to what we now call "quantifier-free projections" (qfp's). <p> Our notation follows the conventions of Descriptive Complexity. See <ref> [Imm87, Imm89] </ref> for more detail and motivation. We will code all inputs as finite logical structures. For example, the input for problem Q (Z) - n n-bit integers is just a binary string b 0 : : : b n 2 1 . <p> The advantage of this approach is that when we consider our inputs as first-order structures we may write properties of them in variants of first-order logic. It is a pleasant surprise that first-order logic provides elegant characterizations of most natural complexity classes <ref> [Imm87] </ref>. <p> The choice of literals depends only on n. In order to make this definition, we must first define first-order interpretations. 7 These are a standard notion from logic for translating one theory into another, cf. [End], modified so that the transformation is also a many-one reduction, <ref> [Imm87] </ref>. (For readers familiar with databases, a first-order interpretation is exactly a many-one reduction that is definable as a first-order query.) Definition 3.3 (First-Order Interpretations) Let and t be two vocabularies, with t = hR a 1 1 ; : : : ; R a r r ; c 1 ; <p> The above would be a quantifier-free projection except that BIT is needed to say that v r+1 = v r + 2 r . The details of expressing BIT as a qfp of Q (M n (bool)) are complicated and so we omit them here. (See <ref> [Imm87, Lemma 3.2, Cor. 3.8] </ref> where it is shown that BIT is a qfp of GAP.) In any case, it follows from Theorem 5.1 that Q Q (M n (bool)). ( (M n (bool)) qfp Q (M n (Z))): Again every element of M n (bool) may be thought of as <p> Fact 4.1 (<ref> [Imm87] </ref>) 1GAP, GAP, AGAP are complete for L, NL, P, respectively via quantifier-free projections. We next discuss the proof of Fact 4.1 in [Imm87] because it sheds light on quantifier-free projections and when they exist. Each of the problems 1GAP, GAP, and AGAP have an operator version which is called DTC, TC, and ATC, respectively. <p> Thus it remains to show that BIT 2 (FO (wo BIT) + Q But this follows because BIT 2 (FO (wo BIT) + DTC) <ref> [Imm87] </ref>; and, (FO (wo BIT) + DTC) (FO (wo BIT) + (M n (F 2 ))) This last inclusion is obvious because DTC is applicable only when the number of paths under consideration is either 1 or 0, and Q (M n (F 2 )) gives the parity of the number <p> Furthermore, Q is complete for L via quantifier-free projections. The following lemma was proved in <ref> [Imm87] </ref>, (except that there (FO + TC) was written as (FO + pos TC) because we didn't yet know that this was equal to (FO + TC)).
Reference: [Imm88] <author> Neil Immerman (1988), </author> <title> Nondeterministic Space is Closed Under Complementation, </title> <journal> SIAM J. Comput. </journal> <volume> 17, No. 5, </volume> <pages> 935-938. </pages>
Reference-contexts: Theorem 2.8 ([CM]) Q (S n ) is complete for L via NC 1 reductions. Theorem 2.9 ([Coo85]) Q (M n (bool)) is complete for NL* via NC 1 reduc tions. (Note, that by <ref> [Imm88] </ref>, NL* is equal to NL.) Theorem 2.10 ([Coo85, Ber]) Q (M n (Z)) is complete for DET* via NC 1 re ductions.
Reference: [Imm89] <author> Neil Immerman (1989), </author> <title> Descriptive and Computational Complexity, Computational Complexity Theory, </title> <editor> ed. J. Hartmanis, </editor> <booktitle> Proc. Symp. in Applied Math., </booktitle> <volume> 38, </volume> <publisher> American Mathematical Society, </publisher> <pages> 75-91. </pages>
Reference-contexts: Our notation follows the conventions of Descriptive Complexity. See <ref> [Imm87, Imm89] </ref> for more detail and motivation. We will code all inputs as finite logical structures. For example, the input for problem Q (Z) - n n-bit integers is just a binary string b 0 : : : b n 2 1 .
Reference: [Imm89b] <author> Neil Immerman (1989), </author> <title> Expressibility and Parallel Complexity, </title> <journal> SIAM J. of Comput 18, </journal> <pages> 625-638. </pages>
Reference: [Jon] <author> Neil Jones (1973), </author> <title> Reducibility Among Combinatorial Problems in Log n Space, </title> <booktitle> Proc. Seventh Annual Princeton Conf. Info. Sci. and Systems, </booktitle> <pages> 547-551. </pages>
Reference-contexts: In [Coo71], Cook proved that the boolean satisfiability problem (SAT) is NP complete via polynomial-time Turing reductions. Over the years SAT has been shown complete via weaker and weaker reductions, e.g. polynomial-time 13 many-one [Kar], logspace many-one <ref> [Jon] </ref>, one-way logspace many-one [HIM]. We find it astounding that SAT remains NP complete via reductions that are provably much weaker than L.
Reference: [Kar] <author> Richard Karp (1972), </author> <title> Reducibility Among Combinatorial Problems, in Complexity of Computations, </title> <editor> R.E.Miller and J.W.Thatcher, eds., </editor> <publisher> Plenum Press,85-104. </publisher>
Reference-contexts: In [Coo71], Cook proved that the boolean satisfiability problem (SAT) is NP complete via polynomial-time Turing reductions. Over the years SAT has been shown complete via weaker and weaker reductions, e.g. polynomial-time 13 many-one <ref> [Kar] </ref>, logspace many-one [Jon], one-way logspace many-one [HIM]. We find it astounding that SAT remains NP complete via reductions that are provably much weaker than L.
Reference: [Lin] <author> Stephen Lindell (1992), </author> <title> A Purely Logical Characterization of Circuit Uniformity, </title> <booktitle> Seventh IEEE Structure in Complexity Theory, </booktitle> <pages> 185-192. </pages>
Reference-contexts: See also <ref> [Lin] </ref> for further discussion of BIT.) In fact, the following are completely syntactic definitions for the uniform classes AC 0 and ThC 0 : Fact 3.1 ([BIS]) FO = AC 0 and FOM = ThC 0 . <p> This is the reason we have omitted BIT from the allowable logical formulas in our definition of quantifier-free interpretations and quantifier-free projections. However, BIT on tuples is definable in FO (with BIT), so we retain BIT when talking about full first-order interpretations and first-order projections, cf. <ref> [Lin] </ref>. It follows immediately from the definitions that: Proposition 3.4 Let ; t , and I be as in Definition 3.3.
Reference: [LG] <author> Laszlo Lovasz and Peter Gacs (1977), </author> <title> Some Remarks on Generalized Spectra, </title> <journal> Zeitchr. f. math, Logik und Grundlagen d. Math, Bd. </journal> <volume> 23, </volume> <pages> 547-554. </pages>
Reference: [Rei] <author> John Reif (1987), </author> <title> On Threshold Circuits and Polynomial Computation, </title> <booktitle> Second Annual Structure in Complexity Theory Symp., </booktitle> <pages> 118-123. </pages>
Reference-contexts: The main contribution of this paper is to show that these previously-known completeness results hold with respect to first-order projections. These extremely low-level reductions are defined in Section 3. A very surprising fact reported in <ref> [BCH, Rei] </ref> is that iterated integer multiplication is in P-uniform ThC 0 but not known to be in (uniform) ThC 0 , or even in L. Usually, uniformity does not pose as a serious issue for complexity classes, at least non-randomized ones.
Reference: [Ruz] <author> Larry Ruzzo (1981), </author> <title> On Uniform Circuit Complexity, </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 21, No. 2, </volume> <pages> 365-383. </pages>
Reference: [Ste] <author> Iain Stewart (1992), </author> <title> Using the Hamiltonian Operator to Capture NP, </title> <note> to appear in J. Comput. System Sci. </note>
Reference: [Sze] <author> Robert Szelepcsenyi (1988), </author> <title> The Method of Forced Enumeration for Nondeterministic Automata, </title> <journal> Acta Informatica 26, </journal> <pages> 279-284. </pages>
Reference: [Tod89] <editor> Seinosuke Toda (1989), </editor> <booktitle> On the Computational Power of PP and P,30th IEEE FOCS Symp., </booktitle> <pages> 514-519. </pages>
Reference-contexts: The question is then how to write this existential 23 statement as an arithmetic expression. Note also that this is intimately connected with a similar kind of bit separation that is important in Toda's theorem, <ref> [Tod89] </ref>. A solution to this problem would give a simplified and generalized version of that theorem.
Reference: [Val] <author> L.G. </author> <title> Valiant (1982), Reducibility By Algebraic Projections, </title> <journal> L'En-seignement mathematique, </journal> <volume> 28, </volume> <pages> 3-4, 253-68. </pages>
Reference-contexts: We define a very weak version of first-order interpretations, namely first-order projections. These are first-order interpretations that are at the same time projections in the sense of Valiant <ref> [Val] </ref>. We will see that the completeness results listed in Figure 2 all hold via first-order projections. The value of this observation is that first-order projections are sufficiently low-level that they retain the full algebraic character of the problems. (In [Imm87] a reduction called "projection translations" were defined. <p> See also [Lin] for further discussion of BIT.) In fact, the following are completely syntactic definitions for the uniform classes AC 0 and ThC 0 : Fact 3.1 ([BIS]) FO = AC 0 and FOM = ThC 0 . First-Order Interpretations and Projections In <ref> [Val] </ref>, Valiant defined the projection, an extremely low-level many-one reduction. Projections are weak enough to preserve the algebraic structure of problems such as iterated multiplications. For this reason we find it particularly interesting that projections suffice for proving completeness properties of various iterated multiplication problems.
Reference: [vzG] <author> Joachim von zur Gathen (1987), </author> <title> Permanent and Determinant, </title> <journal> Linear Algebra Appl. </journal> <volume> 96, </volume> <pages> 87-100. </pages>
Reference-contexts: This is true iff PERM 62 fop ( Q (M n (Z))). Thus this result would imply among other things that NL does not contain #P, cf. <ref> [vzG, Cai] </ref>. 7. We conjecture that a low-level version of the "isomorphism conjecture" [BH], [You] should hold: For the complexity classes C = NL, P, NP, all problems complete for C via first-order projections are logspace isomorphic. 4 8.
Reference: [You] <author> Paul Young (1990), Juris Hartmanis: </author> <title> Fundamental Contributions to Isomorphism Problems, in Complexity Theory Retrospective, </title> <editor> Alan Selman, ed., </editor> <publisher> Springer-Verlag, </publisher> <pages> 28-58. 27 </pages>
Reference-contexts: This is true iff PERM 62 fop ( Q (M n (Z))). Thus this result would imply among other things that NL does not contain #P, cf. [vzG, Cai]. 7. We conjecture that a low-level version of the "isomorphism conjecture" [BH], <ref> [You] </ref> should hold: For the complexity classes C = NL, P, NP, all problems complete for C via first-order projections are logspace isomorphic. 4 8.
References-found: 36

