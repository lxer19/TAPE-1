URL: http://www.cs.utexas.edu/users/dmcl/papers/ps/SIGCOMM96.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/allpapers.html
Root-URL: 
Email: E-mail: fpawang,vin,hcchengg@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Title: Start-time Fair Queuing: A Scheduling Algorithm for Integrated Services Packet Switching Networks  
Author: Pawan Goyal, Harrick M. Vin, and Haichen Cheng 
Web: URL: http://www.cs.utexas.edu/users/dmcl  
Address: Taylor Hall 2.124, Austin, Texas 78712-1188  
Affiliation: Distributed Multimedia Computing Laboratory Department of Computer Sciences, University of Texas at Austin  
Abstract: We present Start-time Fair Queuing (SFQ) algorithm that is com-putationally efficient, achieves fairness regardless of variation in a server capacity, and has the smallest fairness measure among all known fair scheduling algorithms. We analyze its throughput, single server delay, and end-to-end delay guarantee for variable rate Fluctuation Constrained (FC) and Exponentially Bounded Fluctuation (EBF) servers. We show that SFQ is better suited than Weighted Fair Queuing for integrated services networks and it is strictly better than Self Clocked Fair Queuing. To support heterogeneous services and multiple protocol families in integrated services networks, we present a hierarchical SFQ scheduler and derive its performance bounds. Our analysis demonstrates that SFQ is suitable for integrated services networks since it: (1) achieves low average as well as maximum delay for low-throughput applications (e.g., interactive audio, telnet, etc.); (2) provides fairness which is desirable for VBR video; (3) provides fairness, regardless of variation in a server capacity, for throughput-intensive, flow-controlled data applications; (4) enables hierarchical link sharing which is desirable for managing heterogeneity; and (5) is computationally efficient. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Baruah, G. Koren, B. Mishra, A. Raghunathan, L. Rosier, and D. Shasha. </author> <title> On-line Scheduling in the Presence of Overload. </title> <booktitle> In Proceeding of Foundations of Computer Science, </booktitle> <pages> pages 100-110, </pages> <year> 1991. </year>
Reference-contexts: This is desirable as hard real-time services may use a scheduling algorithm that performs well when there is no overbooking; soft real-time services may prefer to use a scheduling algorithm that provides QoS guarantees and/or minimizes deadline violations in presence of overbooking <ref> [1] </ref>; and best effort services may use a fair scheduler for throughput intensive flow-controlled data applications. The requirements of hierarchical link sharing is specified by a tree, referred to as link-sharing structure, in which each node, other than possibly leaf nodes, denotes an aggregation of flows [6].
Reference: [2] <author> D.D. Clark, S. Shenker, and L. Zhang. </author> <title> Supporting Real-Time Applications in an Integrated Services Packet Network. </title> <booktitle> In Proceedingsof ACM SIGCOMM, </booktitle> <pages> pages 14-26, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Whereas the isolation property enables a server to provide stronger guarantees to the flow and is highly desirable when sources may be malicious <ref> [2, 5, 16, 19] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification [9].
Reference: [3] <author> R.L. Cruz. </author> <title> Service Burstiness and Dynamic Burstiness Measures: A Framework. </title> <journal> Journal of High Speed Networks, </journal> <volume> 2 </volume> <pages> 105-127, </pages> <year> 1992. </year>
Reference-contexts: It is possible that some may reach the conclusion that this analysis would hold even if the throughput of a server was modeled by a Service Burstiness server which is similar to a FC server <ref> [3] </ref>.
Reference: [4] <author> J. Davin and A. Heybey. </author> <title> A Simulation Study of Fair Queueing and Policy Enforcement. </title> <journal> Computer Communication Review, </journal> <volume> 20(5) </volume> <pages> 23-29, </pages> <month> October </month> <year> 1990. </year> <month> 12 </month>
Reference-contexts: Though FQS has advantages for processor scheduling, it is not known to have any advantage over WFQ for scheduling packets in a network. Moreover, since it utilizes v (t) as defined in (3), it has all the disadvantages of WFQ. 3 Self Clocked Fair Queuing (SCFQ), originally proposed in <ref> [4] </ref> and later analyzed in [7], was designed to reduce the computational complexity of fair scheduling algorithms like WFQ. SCFQ also schedules packets in the increasing order of finish tags.
Reference: [5] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and Simulation of a Fair Queueing Algorithm. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 1-12, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Hence, fair scheduling algorithms are desirable for video applications. * Data applications: To support low-throughput, interactive data applications (e.g., telnet), scheduling algorithms must provide low average delay. On the other hand, to support throughput-intensive, flow-controlled applications in heterogeneous, large-scale, decentralized networks, scheduling algorithms must allocate bandwidth fairly <ref> [5, 15, 19] </ref>. Due to the coexistence of VBR video sources and data sources in integrated services networks, the bandwidth available to data applications may vary significantly over time. <p> Several fair scheduling algorithms that achieve value of H (f;m) close to the lower bound have been proposed in the literature. The earliest known fair scheduling algorithm is Weighted Fair Queuing (WFQ) <ref> [5] </ref> (also referred to as Packet-by-Packet Generalized Processor Sharing (PGPS) [18]). WFQ was designed to emulate a hypothetical bit-by-bit weighted round robin server in which the number of bits of a flow served in a round is proportional to the weight of the flow. <p> Whereas the isolation property enables a server to provide stronger guarantees to the flow and is highly desirable when sources may be malicious <ref> [2, 5, 16, 19] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification [9].
Reference: [6] <author> S. Floyd and V. Jacobson. </author> <title> Link-sharing and Resource Management Models for Packet Networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4), </volume> <month> August </month> <year> 1995. </year>
Reference-contexts: Furthermore, since such networks will support a wide variety of services and multiple protocol families, the scheduling algorithm should facilitate hierarchical link sharing <ref> [6, 20] </ref>. Finally, to facilitate its implementation in high-speed networks, it should be computation-ally efficient. A scheduling algorithm that achieves all of these objectives is the subject of investigation in this paper. 1.2 Relation To Previous Work Each unit of data transmission at the network level is a packet. <p> Since, C can be chosen arbitrarily, this example illustrates the unfairness that can result when the actual capacity is greater than the capacity being assumed. Thus, WFQ fails to provide fairness over variable rate servers. As we will outline in Section 3, to be useful for hierarchical link sharing <ref> [6, 20] </ref>, a scheduling algorithm must provide fairness over variable rate servers. Consequently, WFQ fails to meet two key requirements (i.e., fairness over variable rate servers and support for hierarchical link sharing) of a fair scheduling algorithm for integrated services networks. <p> In the next section, we show that it enables hierarchical link sharing, and thus meets all the requirements of a scheduling algorithm for integrated services networks. 10 3 Hierarchical Link Sharing Hierarchical link sharing is an ideal mechanism for managing heterogeneity in integrated services networks <ref> [6, 20] </ref>. It can be used by a network to support services that provide heterogeneous QoS as well as multiple protocol families that support different traffic types and/or congestion control mechanisms. <p> The requirements of hierarchical link sharing is specified by a tree, referred to as link-sharing structure, in which each node, other than possibly leaf nodes, denotes an aggregation of flows <ref> [6] </ref>. Each node in the tree is referred to as a class and has a weight associated with it. The objective of a mechanism implementing hierarchical link sharing is to distribute the bandwidth allocated to a class among its subclasses fairly, i.e., in proportion to the weights [20]. <p> Since SFQ fairly allocates bandwidth regardless of the server behavior, this simple recursive hierarchical scheduling ensures that bandwidth allocated to a class is fairly allocated between the subclasses and thereby achieves the objective of hierarchical link sharing. Moreover, in contrast to link sharing mechanism in <ref> [6] </ref>, it provides bounds on various performance measures: * Throughput Guarantee: Consider a class f that is a subclass of the root class. Let the link be FC server with parameters (C; ffi (C)) and let the set of the subclasses of the root class be denoted by Q.
Reference: [7] <author> S.J. Golestani. </author> <title> A Self-Clocked Fair Queueing Scheme for High Speed Applications. </title> <booktitle> In Proceedings of INFO-COM'94, </booktitle> <year> 1994. </year>
Reference-contexts: The objective of fair packet scheduling algorithms is to ensure that j r f W m (t 1 ;t 2 ) j is as close to 0 as possible. How ever, it has been shown in <ref> [7] </ref> that if a packet scheduling algorithm guarantees that j W f (t 1 ;t 2 ) r m j H (f; m) for all inter vals [t 1 ; t 2 ] then H (f; m) 1 2 l max r f l max r m , where H (f; <p> Moreover, since it utilizes v (t) as defined in (3), it has all the disadvantages of WFQ. 3 Self Clocked Fair Queuing (SCFQ), originally proposed in [4] and later analyzed in <ref> [7] </ref>, was designed to reduce the computational complexity of fair scheduling algorithms like WFQ. SCFQ also schedules packets in the increasing order of finish tags. However, it achieves efficiency over WFQ by approximating v (t) with the finish tag of the packet in service at time t. <p> It has been shown that the value of H (f; m) for SCFQ is ( l max r f l max r m ), which is only a factor of two away from the lower bound <ref> [7] </ref>. The main limitation of SCFQ is that it increases the maximum delay incurred by the packets significantly.
Reference: [8] <author> P. Goyal, S. S. Lam, and H. M. Vin. </author> <title> Determining End-to-End Delay Bounds In Heterogeneous Networks. </title> <note> In ACM/Springer-Verlag Multimedia Systems Journal (to appear), </note> <year> 1996. </year> <title> Also appeared in the Proceedings of the Workshop on Network and Operating System Support for Digital Audio and Video, </title> <month> April </month> <year> 1995. </year>
Reference-contexts: Specifically, if Q is the set of flows served by a server and C its capacity, then packets of flow f may incur P n2Q^n6=f n C more delay in SCFQ than in WFQ <ref> [8] </ref>. This may be unacceptably large in many cases. WFQ and SCFQ sort and schedule packets in the increasing order of finish tags. Hence, per packet computational complexity is O (logQ) where Q is the number of flows served by the server. <p> A deadline guarantee based on expected arrival time has been referred to as delay guarantee <ref> [8, 16] </ref>. Theorems 4 and 5 establish the delay guarantee of SFQ for FC and EBF servers, respectively.
Reference: [9] <author> P. Goyal and H. M. Vin. </author> <title> Generalized Guaranteed Rate Scheduling Algorithms: A Framework. </title> <type> Technical Report TR-95-30, </type> <institution> The University of Texas at Austin, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Specifically, a tight bound on the departure time of a packet at a constant rate server employing SCFQ, given in <ref> [9] </ref>, is: L SCF Q (p f ) EAT (p f ; r f ) + n2Q^n6=f n + j r f Since ffi (C) = 0 for a constant rate server, the difference in maximum delay that a packet may incur at servers employing SCFQ and SFQ is: j r <p> Whereas the isolation property enables a server to provide stronger guarantees to the flow and is highly desirable when sources may be malicious [2, 5, 16, 19], independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification <ref> [9] </ref>. <p> servers to provide similar guarantees, in what follows, we derive end-to-end delay guarantee. 9 2.4 End-to-End Delay Guarantee The objective is to determine the deadline guarantee of a network of servers based on the expected arrival time of a packet at the first server on the path of a flow <ref> [9] </ref>. To do so, let the i th server along the path of a flow be denoted as server i. Also, let there be K servers on the path of a flow and let each of the server guarantee a deadline to a packet based on its expected arrival time. <p> Using this argument recursively, a network of servers can guarantee a deadline to a packet based on the expected arrival time of the packet at the first server. This method has been used in <ref> [9] </ref> to derive end-to-end delay guarantee of a network of servers that employ algorithms in the class of Guaranteed Rate (GR) scheduling algorithms. However, the end-to-end delay guarantee presented in [9] assumes that each of the server provides a deterministic bound on the departure time of a packet. <p> This method has been used in <ref> [9] </ref> to derive end-to-end delay guarantee of a network of servers that employ algorithms in the class of Guaranteed Rate (GR) scheduling algorithms. However, the end-to-end delay guarantee presented in [9] assumes that each of the server provides a deterministic bound on the departure time of a packet. Consequently, even though SFQ belongs to GR, the guarantee is not applicable to a network which may have some SFQ EBF servers. To analyze such networks, we generalize the method presented in [9]. <p> <ref> [9] </ref> assumes that each of the server provides a deterministic bound on the departure time of a packet. Consequently, even though SFQ belongs to GR, the guarantee is not applicable to a network which may have some SFQ EBF servers. To analyze such networks, we generalize the method presented in [9]. Observe that SFQ delay guarantee for both FC and EBF servers can be rewritten as: P L SF Q (p f ) EAT (p f ; r f ) + fi f + fl 1 Be (65) where fl 0. <p> As Corollary 1 illustrates, the end-to-end guarantee, like the single server guarantee, is based on the expected arrival time of a packet and hence is independent of the behavior of other flows and any particular flow characterization. Moreover, as illustrated in <ref> [9] </ref>, it can be used to determine various QoS parameters like upper bound on end-to-end delay, packet loss probability and buffer requirement for any traffic specification. Hence, such a guarantee is highly desirable. To derive Corollary 1, we have only required the scheduling algorithm at each server to satisfy (66).
Reference: [10] <author> P. Goyal and H. M. Vin. </author> <title> Network Algorithms and Protocol for Multimedia Servers. </title> <booktitle> In Proceedings of INFO-COM'96, </booktitle> <pages> pages 1371-1379, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Audio applications: To maintain adequate interactivity for such applications, scheduling algorithms must provide low average and maximum delay. * Video applications: Variable bit rate (VBR) video sources, which are expected to impose significant requirements on network resources, have unpredictable as well as highly variable bit rate requirement at multiple time-scales <ref> [10, 12, 14] </ref>. These features impose two key requirements on network resource management: Due to the difficulty in predicting the bit rate requirement of VBR video sources, video channels may utilize more than the reserved bandwidth.
Reference: [11] <author> P. Goyal, H. M. Vin, and H. Cheng. </author> <title> Start-time Fair Queuing: A Scheduling Algorithm for Integrated Services Packet Switching Networks. </title> <type> Technical Report TR-96-02, </type> <institution> The University of Texas at Austin, </institution> <month> January </month> <year> 1996. </year> <note> Available via URL http://www.cs.utexas.edu/users/dmcl. </note>
Reference-contexts: Since a (C; 0) FC server is a constant rate server, the following analysis is also valid for constant rate servers. We present the proofs of only few results; the rest of the proofs are presented in <ref> [11] </ref>. 2.1 Fairness Guarantee To prove that SFQ is fair, we need to prove a bound on j W f (t 1 ;t 2 ) r m j for any interval in which both flows f and m are backlogged. <p> In case delay guarantee of WFQ is required, SFQ can be combined with non work-conserving Virtual Clock to derive Fair airport scheduling algorithm that provides the delay guarantee of WFQ and efficiently achieves fairness even over variable rate servers <ref> [11] </ref>. Thus, since SFQ addresses the drawbacks of WFQ while achieving its delay guarantee if desired, it is better suited than WFQ for integrated services networks.
Reference: [12] <author> P. Goyal, H. M. Vin, C. Shen, and P.J. Shenoy. </author> <title> A Reliable, Adaptive Protocol for Video Transport. </title> <booktitle> In Proceedings of INFOCOM'96, </booktitle> <pages> pages 1080-1090, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Audio applications: To maintain adequate interactivity for such applications, scheduling algorithms must provide low average and maximum delay. * Video applications: Variable bit rate (VBR) video sources, which are expected to impose significant requirements on network resources, have unpredictable as well as highly variable bit rate requirement at multiple time-scales <ref> [10, 12, 14] </ref>. These features impose two key requirements on network resource management: Due to the difficulty in predicting the bit rate requirement of VBR video sources, video channels may utilize more than the reserved bandwidth.
Reference: [13] <author> A. Greenberg and N. </author> <title> Madras. How Fair is Fair Queuing. </title> <journal> The Journal of ACM, </journal> <volume> 39(3) </volume> <pages> 568-598, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Furthermore, this would make the computation of v (t) even more expensive, thereby making WFQ infeasible for high speed networks. Fair Queuing based on Start-time (FQS), proposed in <ref> [13] </ref>, computes start tag and finish tag of a packet exactly as in WFQ. However, instead of scheduling packets in the increasing order of finish tags, it schedules packets in the increasing order of start tags.
Reference: [14] <author> M. Grossglauser, S. Keshav, and D. Tse. RCBR: </author> <title> A Simple and Efficient Service for Multiple Time-Scale Traffic. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <year> 1995. </year>
Reference-contexts: Audio applications: To maintain adequate interactivity for such applications, scheduling algorithms must provide low average and maximum delay. * Video applications: Variable bit rate (VBR) video sources, which are expected to impose significant requirements on network resources, have unpredictable as well as highly variable bit rate requirement at multiple time-scales <ref> [10, 12, 14] </ref>. These features impose two key requirements on network resource management: Due to the difficulty in predicting the bit rate requirement of VBR video sources, video channels may utilize more than the reserved bandwidth.
Reference: [15] <author> S. Keshav. </author> <title> A Control-Theoretic Approach to Flow Control. </title> <booktitle> In Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pages 3-15, </pages> <year> 1991. </year>
Reference-contexts: Hence, fair scheduling algorithms are desirable for video applications. * Data applications: To support low-throughput, interactive data applications (e.g., telnet), scheduling algorithms must provide low average delay. On the other hand, to support throughput-intensive, flow-controlled applications in heterogeneous, large-scale, decentralized networks, scheduling algorithms must allocate bandwidth fairly <ref> [5, 15, 19] </ref>. Due to the coexistence of VBR video sources and data sources in integrated services networks, the bandwidth available to data applications may vary significantly over time.
Reference: [16] <author> S.S. Lam and G.G. Xie. </author> <title> Burst Scheduling: Architecture and Algorithm for Switching Packet Video. </title> <booktitle> In Proceedings of INFOCOM'95, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: A deadline guarantee based on expected arrival time has been referred to as delay guarantee <ref> [8, 16] </ref>. Theorems 4 and 5 establish the delay guarantee of SFQ for FC and EBF servers, respectively. <p> Whereas the isolation property enables a server to provide stronger guarantees to the flow and is highly desirable when sources may be malicious <ref> [2, 5, 16, 19] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification [9].
Reference: [17] <author> K. Lee. </author> <title> Performance Bounds in Communication Networks With Variable-Rate Links. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 126-136, </pages> <year> 1995. </year>
Reference-contexts: To accommodate links whose capacity fluctuates over time (for example, flow-controlled and broadcast medium links), this analysis is carried out for servers which can be modeled as either Fluctuation Constrained (FC) or Exponentially Bounded Fluctuation (EBF) servers <ref> [17] </ref>. To the best of our knowledge, this is the first analysis of a fair or a real-time scheduling algorithm for such servers. To support hierarchical link sharing, we present a hierarchical SFQ scheduler. <p> Two server models, termed Fluctuation Constrained (FC) server and Exponentially Bounded Fluctuation (EBF) server, that have bounded fluctuation in service rate and are suitable for modeling many variable rate servers have been introduced in <ref> [17] </ref>. A FC server has two parameters; average rate C (bits/s) and burstiness ffi (C) (bits). Intuitively, an FC server, in any interval during a busy period, does at most ffi (C) less work than an equivalent constant rate server. <p> Hence, Theorem 4 can be used to determine the delay guarantee of the lower priority flows. Similarly, if the aggregate arrival process of the high priority flows can be modeled as poisson process, then the residual bandwidth can be modeled as EBF server <ref> [17] </ref> and Theorem 5 can be used to determine the delay guarantee. 5 The proof methods of Theorem 4 and 5 can be used to derive delay guarantee of FC and EBF SCFQ servers. 8 Theorem 4 demonstrates that maximum delay of a packet in SFQ is significantly smaller than in
Reference: [18] <author> A.K. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, MIT, </institution> <year> 1992. </year>
Reference-contexts: Unfair scheduling algorithms, such as Virtual Clock [24], Delay EDD [23], etc., penalize channels for the use of idle bandwidth and do not provide any QoS guarantee in the presence of congestion <ref> [18] </ref>. Fair scheduling algorithms, on the other hand, guarantee that, regardless of prior usage or congestion, bandwidth would be allocated fairly [18]. Hence, fair scheduling algorithms are desirable for video applications. * Data applications: To support low-throughput, interactive data applications (e.g., telnet), scheduling algorithms must provide low average delay. <p> such as Virtual Clock [24], Delay EDD [23], etc., penalize channels for the use of idle bandwidth and do not provide any QoS guarantee in the presence of congestion <ref> [18] </ref>. Fair scheduling algorithms, on the other hand, guarantee that, regardless of prior usage or congestion, bandwidth would be allocated fairly [18]. Hence, fair scheduling algorithms are desirable for video applications. * Data applications: To support low-throughput, interactive data applications (e.g., telnet), scheduling algorithms must provide low average delay. <p> Several fair scheduling algorithms that achieve value of H (f;m) close to the lower bound have been proposed in the literature. The earliest known fair scheduling algorithm is Weighted Fair Queuing (WFQ) [5] (also referred to as Packet-by-Packet Generalized Processor Sharing (PGPS) <ref> [18] </ref>). WFQ was designed to emulate a hypothetical bit-by-bit weighted round robin server in which the number of bits of a flow served in a round is proportional to the weight of the flow.
Reference: [19] <author> S. Shenker. </author> <title> Making Greed Work in Networks: A Game-Theoretic Analysis of Switch Service Disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM'94, </booktitle> <pages> pages 47-57, </pages> <year> 1994. </year>
Reference-contexts: Hence, fair scheduling algorithms are desirable for video applications. * Data applications: To support low-throughput, interactive data applications (e.g., telnet), scheduling algorithms must provide low average delay. On the other hand, to support throughput-intensive, flow-controlled applications in heterogeneous, large-scale, decentralized networks, scheduling algorithms must allocate bandwidth fairly <ref> [5, 15, 19] </ref>. Due to the coexistence of VBR video sources and data sources in integrated services networks, the bandwidth available to data applications may vary significantly over time. <p> Whereas the isolation property enables a server to provide stronger guarantees to the flow and is highly desirable when sources may be malicious <ref> [2, 5, 16, 19] </ref>, independence of delay guarantee from traffic characterization enables a server to provide various QoS guarantees to flows conforming to any specification [9].
Reference: [20] <author> S. Shenker, L. Zhang, and D. Clark. </author> <title> A Scheduling Service Model and a Scheduling Architecture for an Integrated Services Packet Networks. </title> <note> Available via anonymous ftp from ftp://ftp.parc.xerox.com/pub/archfin.ps, </note> <year> 1995. </year>
Reference-contexts: Furthermore, since such networks will support a wide variety of services and multiple protocol families, the scheduling algorithm should facilitate hierarchical link sharing <ref> [6, 20] </ref>. Finally, to facilitate its implementation in high-speed networks, it should be computation-ally efficient. A scheduling algorithm that achieves all of these objectives is the subject of investigation in this paper. 1.2 Relation To Previous Work Each unit of data transmission at the network level is a packet. <p> Since, C can be chosen arbitrarily, this example illustrates the unfairness that can result when the actual capacity is greater than the capacity being assumed. Thus, WFQ fails to provide fairness over variable rate servers. As we will outline in Section 3, to be useful for hierarchical link sharing <ref> [6, 20] </ref>, a scheduling algorithm must provide fairness over variable rate servers. Consequently, WFQ fails to meet two key requirements (i.e., fairness over variable rate servers and support for hierarchical link sharing) of a fair scheduling algorithm for integrated services networks. <p> In the next section, we show that it enables hierarchical link sharing, and thus meets all the requirements of a scheduling algorithm for integrated services networks. 10 3 Hierarchical Link Sharing Hierarchical link sharing is an ideal mechanism for managing heterogeneity in integrated services networks <ref> [6, 20] </ref>. It can be used by a network to support services that provide heterogeneous QoS as well as multiple protocol families that support different traffic types and/or congestion control mechanisms. <p> Each node in the tree is referred to as a class and has a weight associated with it. The objective of a mechanism implementing hierarchical link sharing is to distribute the bandwidth allocated to a class among its subclasses fairly, i.e., in proportion to the weights <ref> [20] </ref>. This objective can be achieved by a hierarchical scheduler that considers each class, other than the leaf classes, as a virtual server and uses a fair scheduler to schedule the virtual servers.
Reference: [21] <author> M. Shreedhar and G. Varghese. </author> <title> Efficient Fair Queuing Using Deficit Round Robin. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 231-242, </pages> <year> 1995. </year>
Reference-contexts: WFQ and SCFQ sort and schedule packets in the increasing order of finish tags. Hence, per packet computational complexity is O (logQ) where Q is the number of flows served by the server. To reduce this per packet computational complexity, Deficit Round Robin (DRR) was proposed in <ref> [21] </ref>. It is a derivative of weighted round robin algorithm designed to accommodate variable length packets of a flow. Though the per packet computational complexity of DRR is O (1) per packet, it has the following two limitations: 1.
Reference: [22] <author> D. Stiliadis and A. Varma. </author> <title> Design and Analysis of Frame-based Fair Queueing: A New Traffic Scheduling Algorithm for Packet Switched Networks. </title> <note> In Proceedings of SIGMETRICS'96 (to appear), </note> <year> 1996. </year>
Reference-contexts: Furthermore, it demonstrates that SFQ has the smallest fairness measure among all the known scheduling algorithms <ref> [22] </ref>. Observe that to establish Theorem 1, we did not make any assumptions about the service rate of the server. Hence, Theorem 1 holds regardless of the characteristics of the server.
Reference: [23] <author> H. Zhang and S. Keshav. </author> <title> Comparison of Rate-Based Service Disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 113-121, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Since such over-booking may yield persistent congestion, a network should provide some QoS guarantees even in the presence of conges tion. Unfair scheduling algorithms, such as Virtual Clock [24], Delay EDD <ref> [23] </ref>, etc., penalize channels for the use of idle bandwidth and do not provide any QoS guarantee in the presence of congestion [18]. Fair scheduling algorithms, on the other hand, guarantee that, regardless of prior usage or congestion, bandwidth would be allocated fairly [18].
Reference: [24] <author> L. Zhang. VirtualClock: </author> <title> A New Traffic Control Algorithm for Packet Switching Networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'90, </booktitle> <pages> pages 19-29, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Since such over-booking may yield persistent congestion, a network should provide some QoS guarantees even in the presence of conges tion. Unfair scheduling algorithms, such as Virtual Clock <ref> [24] </ref>, Delay EDD [23], etc., penalize channels for the use of idle bandwidth and do not provide any QoS guarantee in the presence of congestion [18]. Fair scheduling algorithms, on the other hand, guarantee that, regardless of prior usage or congestion, bandwidth would be allocated fairly [18]. <p> A scheduling algorithm that achieves all of these objectives is the subject of investigation in this paper. 1.2 Relation To Previous Work Each unit of data transmission at the network level is a packet. We refer to the sequence of packets transmitted by a source as a flow <ref> [24] </ref>. Each packet within a flow is serviced by a sequence of servers (or switching elements) along the path from the source to the destination in the network.
Reference: [25] <author> Q. Zheng and K. Shin. </author> <title> On the Abilitiy of Establishing Real-Time Channels in Point-to-Point Packet-switching Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 42(3) </volume> <pages> 1096-1105, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Hence, conditions stronger than (69) which have lower computational complexity have been developed in <ref> [25] </ref>. The theorem holds under the stronger conditions as well. * Delay shifting: This involves the reduction of the maximum delay of certain flows at the expense of increasing the delay of others.
References-found: 25

