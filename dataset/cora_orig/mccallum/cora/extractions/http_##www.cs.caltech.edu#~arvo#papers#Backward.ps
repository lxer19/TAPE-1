URL: http://www.cs.caltech.edu/~arvo/papers/Backward.ps
Refering-URL: http://www.cs.caltech.edu/~arvo/papers.html
Root-URL: http://www.cs.caltech.edu
Title: Backward Ray Tracing  
Author: James Arvo 
Date: August, 1986  
Address: Chelmsford, MA  
Affiliation: Apollo Computer, Inc.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Cohen, M. F., and Greenberg, D. P. </author> <title> The hemi-cube: A radiosity solution for complex environments. </title> <booktitle> Computer Graphics 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 75-84. </pages>
Reference-contexts: A notable omission from the repertoire of ray tracing, however, is diffuse reflection of indirect light. Though several new algorithms have been introduced which simulate multiple diffuse reflections of light in polygonal environments <ref> [1, 4] </ref>, ray tracing continues to neglect these higher order effects, and consequently falls short of a truly global model of illumination. These notes describe a simple extension to ray tracing which takes a first step toward alleviating this deficiency. <p> Hence, the intensity associated with a data point in the illumination map is given by Intensity (u; v) = E (u; v) fi fi fi @ @v T (u; v) fi fi fi where (u; v) 2 <ref> [0; 1] </ref> fi [0; 1] corresponds to one of the data points, and E (u; v) is its accumulated energy after the illumination phase. After dividing each data point by its corresponding area, the illumination map represents intensity and is ready for use by the shader. <p> Hence, the intensity associated with a data point in the illumination map is given by Intensity (u; v) = E (u; v) fi fi fi @ @v T (u; v) fi fi fi where (u; v) 2 <ref> [0; 1] </ref> fi [0; 1] corresponds to one of the data points, and E (u; v) is its accumulated energy after the illumination phase. After dividing each data point by its corresponding area, the illumination map represents intensity and is ready for use by the shader. <p> This could produce great improvements in quality and performance over the point sampling method. * The use of illumination maps in this algorithm is quite similar to the use of form factors in the radiosity algorithm <ref> [1] </ref>. In fact, illumination maps could provide a means of combining the radiosity algorithm with ray tracing.
Reference: [2] <author> Cook, R. L. </author> <title> Distributed ray tracing. </title> <booktitle> Computer Graphics 18, 3 (1984), </booktitle> <pages> 137-145. </pages>
Reference-contexts: Simulation of effects such as reflection and refraction have been the hallmarks of ray tracing since its introduction [5]. With the advent of stochastic ray tracing <ref> [2] </ref>, the range of effects expanded to include motion blur, soft shadows, depth of field, and both blurry reflections and translucency. A notable omission from the repertoire of ray tracing, however, is diffuse reflection of indirect light.
Reference: [3] <author> Heckbert, P. S., and Hanrahan, P. </author> <title> Beam tracing polygonal objects. </title> <booktitle> Computer Graphics 18, </booktitle> <month> 3 (July </month> <year> 1984), </year> <pages> 119-127. 6 </pages>
Reference-contexts: In contrast, Heckbert and Hanrahan <ref> [3] </ref> have suggested a rather elegant technique for approximating diffuse reflection of specularly reflected and refracted light in polygonal environments which uses "light beam tracing." A similar technique could probably be employed to trace "shafts" of light (polygonal cross-section defined by infinitesimal rays) in the setting of a more general ray
Reference: [4] <author> Nishita, T., and Nakamae, E. </author> <title> Continuous tone representation of 3-D objects taking account of shadows and interreflection. </title> <booktitle> Computer Graphics 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 23-30. </pages>
Reference-contexts: A notable omission from the repertoire of ray tracing, however, is diffuse reflection of indirect light. Though several new algorithms have been introduced which simulate multiple diffuse reflections of light in polygonal environments <ref> [1, 4] </ref>, ray tracing continues to neglect these higher order effects, and consequently falls short of a truly global model of illumination. These notes describe a simple extension to ray tracing which takes a first step toward alleviating this deficiency.

References-found: 4

