URL: ftp://ftp.cs.huji.ac.il/users/clag/icmc96/icmc96.ps
Refering-URL: http://www.cs.huji.ac.il/~clag/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email:clag@cs.huji.ac.il, dang@cs.huji.ac.il, jeff@cs.huji.ac.il, lehmann@cs.huji.ac.il  
Phone: ph: 011-972-2-658-5353 fax: 011-972-2-658-5439  
Title: NetNeg: A Hybrid Interactive Architecture for Composing Polyphonic Music in Real Time  
Author: Claudia V. Goldman Dan Gang Jeffrey S. Rosenschein Daniel Lehmann 
Note: The network produces aesthetic melodies based on the training examples it was given. The agents choose which are the next notes in the two-part melodies by negotiating over the possible combinations of notes suggested by the network. Supported by the Eshkol Fellowship, Israeli Ministry of Science Partially supported by the Jean and Helene Alfassa fund  
Web: url: http://www.cs.huji.ac.il/f~ clag; dangg  
Address: Givat Ram, Jerusalem, Israel  
Affiliation: Insitute of Computer Science The Hebrew University  
Abstract: There are musical activities in which we are faced with symbolic and sub-symbolic processes. This research focuses on the question whether there is any advantage in integrating a neural network together with a distributed artificial intelligence approach in the musical domain. In this work, we present a new approach for composing and analyzing polyphonic music. As a case study, we began experimenting with first species two-part counterpoint melodies. Our system design is inspired by the cognitive process of a human musician. We have developed a hybrid system composed of a connectionist module and an agent-based module to combine the symbolic and sub-symbolic levels to achieve this task. 
Abstract-found: 1
Intro-found: 1
Reference: [BG88] <editor> A. H. Bond and L. Gasser, editors. </editor> <booktitle> Readings in Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Mateo, California, </address> <year> 1988. </year>
Reference-contexts: Nevertheless, some of these aesthetic processes might have a symbolic representation and might be specified by a rule-based system. We also think the research in Distributed Artificial Intelligence (DAI) <ref> [BG88] </ref> can contribute to developing new methods for computer music. <p> Our system, NetNeg, is composed of two main sub-systems. It creates both counterpoint parts dynamically. One sub-system is implemented by a modified version of Jordan's sequential neural network [Jor86]. The second one is a two-agent model based on Distributed Artificial Intelligence <ref> [BG88] </ref>. These agents negotiate with one another to maximize the global utility of the whole system, which for our purposes should be interpreted as the global quality of the composition. <p> We suggest to enable the musician to encode his knowledge (e.g., rules for a known style, or rules he has invented), intuitions (i.e. fuzzy concepts about the music he is interested in composing), and aesthetic taste, in different modules. The system will be composed of agents <ref> [BG88] </ref>. The agents will communicate, cooperate and share tasks in order to improve the global performance of the system. Each agent knows rules of a specific style and heuristic rules that take into consideration different aspects of the problem, that the system is aimed at solving.
Reference: [GL95] <author> D. Gang and D. Lehmann. </author> <title> Harmonizing melodies with neural nets. </title> <booktitle> In Procs. of ICMC, </booktitle> <address> Banff, Canada, </address> <year> 1995. </year>
Reference-contexts: Another work that investigates how the cognitive process can guide the design of the architecture of a system that is involved in some musical activity can be found in <ref> [GL95] </ref>. The system is composed of a connectionist module and an agent-based module. The agents decide upon the notes in both melodies. The neural network predicts the expectation for every note to be the next one in the melody.
Reference: [Jep92] <author> K. Jeppesen. </author> <title> Counterpoint The Polyphonic Vocal Style of the Six teenth Century. </title> <publisher> Dover, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: NetNeg is composed of two sub-systems: a connectionist sub-system and a DAI-based subsystem. Each part of the melody is produced independently by a neural network. In the training phase, the network learned to reproduce a series of learning examples that were taken from <ref> [Jep92] </ref>. In the generalization phase, the network predicts in the output layer a vector of expectations for the next note in the melody. Each agent receives a different output vector from the network. <p> Each agent, then, receives a new input based on this output and the negotiation step is repeated until the melody is completed. We define the system utility function to express the rules given by Jeppesen in <ref> [Jep92] </ref>. A pair of notes is considered legal according to the following rules: 1. The intervals between pairs of notes in the two part melodies should not be dissonant. 2. There should be perfect consonance in the first and last place of the melody. 3. <p> We have considered the contrary motion in this function because this type of motion produces the most natural and appropriate effect for this kind of music (as noticed by Jeppe-sen <ref> [Jep92] </ref>). 4 Experiments We have first run every subsystem separately to examine the ability of each one of the two approaches (i.e, Neural Nets and agents) in order to cope with the general problem. We, then run the integrated system, and present results from all these simulations. <p> There are too many steps in V2 (i.e., there is no balance between the skips and the steps). 4.3 Running NetNeg In this subsection we present the main simulations performed on the whole system. In the training phase, the network learned to reproduce four melodies that were taken from <ref> [Jep92] </ref>. See In the generalization phase, given a specific vector of plan units, the network produces a new cantus firmi. We have chosen two different plan vectors for the net that will output the notes for each agent. <p> Comparing with the simulation run with the agents alone, no redundancy was found in this example. Nevertheless, there is a contour problem as pointed in (1) and (2) in A1's melody in Figure 3. According to Jeppesen <ref> [Jep92] </ref> it is preferred to descend by a step and then perform a descending skip. After a descending skip, we are expected to have a compensating ascending movement. In (3), we prefer to approach the last note by a step. A2's melody is perfect with regard to the contour.
Reference: [Jor86] <author> M.I. Jordan. </author> <title> Attractor dynamics and parallelism in a connectionist sequential machine. </title> <booktitle> In Procs. of The Eighth Annual Conference of the Cognitive Science Society, </booktitle> <address> Hillsdale, N.J., </address> <year> 1986. </year>
Reference-contexts: Our system, NetNeg, is composed of two main sub-systems. It creates both counterpoint parts dynamically. One sub-system is implemented by a modified version of Jordan's sequential neural network <ref> [Jor86] </ref>. The second one is a two-agent model based on Distributed Artificial Intelligence [BG88]. These agents negotiate with one another to maximize the global utility of the whole system, which for our purposes should be interpreted as the global quality of the composition.
Reference: [Miy91] <author> Y. Miyata. </author> <note> A User's Guide to PlaNet Version 5.6. </note> <institution> Computer Science Dept., University of Colorado, Boulder, </institution> <year> 1991. </year>
Reference-contexts: Then, the network will predict another output vector given this new context and the initial values of the plan units. This pro cess continues sequentially until the melodies are completed. 3.1 The Connectionist Subsystem Each part of the melody is produced independently by a neural network impemented in Planet <ref> [Miy91] </ref>. Todd [Tod89] has already suggested a sequential neural network that can learn a sequence of melody notes. Currently, our neural network is based on the same idea, although we have extended it to include the representation of the contour of the melody.
Reference: [MLM + 92] <author> T. A. Montgomery, J. Lee, D. J. Musliner, E. H. Durfee, D. Damouth, and Y. </author> <title> So. MICE Users Guide. </title> <institution> Artificial Intelligence Laboratory, Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, Michigan, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: Each agent receives the 13-length vector, and feed the state units with their agreement (see this new context and the initial values of the plan units. This process continues sequentially until the melodies are completed. 3.2 The DAI-Based Subsystem We have implemented the agent module using the Mice testbed <ref> [MLM + 92] </ref>. We consider each part (i.e., voice) of the melody as an agent. Each agent's goal is to compose his melody by choosing the right notes.
Reference: [RZ94] <author> J. S. Rosenschein and G. Zlotkin. </author> <title> Rules of Encounter:Designing Conventions for Automated Negotiation Among Computers. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1994. </year>
Reference-contexts: Were the agent alone in the system, he would have chosen the note that got the highest activation from the neural network, meaning that this note is the one most expected to be next in the melody. But, in order to compose species, both agents will have to negotiate <ref> [RZ94] </ref> over all the other possible combinations to obtain a globally superior result. In principle, each agent can suggest any of the n possible notes received from the network. Not all of these pairs of notes combinations are legal according to the rules of the species.
Reference: [Tod89] <author> P.M. Todd. </author> <title> A connectionist approach to algorithmic composition. </title> <journal> Computer Music Journal, </journal> <volume> 13 </volume> <pages> 27-43, </pages> <year> 1989. </year>
Reference-contexts: This pro cess continues sequentially until the melodies are completed. 3.1 The Connectionist Subsystem Each part of the melody is produced independently by a neural network impemented in Planet [Miy91]. Todd <ref> [Tod89] </ref> has already suggested a sequential neural network that can learn a sequence of melody notes. Currently, our neural network is based on the same idea, although we have extended it to include the representation of the contour of the melody. <p> In the generalization phase we have chosen to interpolate the values of the plan units to produce new melodies. Todd <ref> [Tod89] </ref> demonstrated that the resulting sequences have non-linear similarities to the sequences in the learning set depending on the activations of the plan units. An example of a typical result follows: The plan vector: (0.3 0.7 0.3 0.7).
Reference: [WFG + 95] <editor> M. Wooldridge, K. Fischer, P. Gmy-trasiewicz, N. Jennings, J. Muller, and M. Tambe, editors. </editor> <booktitle> Working Notes of the IJCAI95 Workshop on Agent Theories, Architectures, and Languages. </booktitle> <address> Montreal, Canada, </address> <year> 1995. </year>
Reference-contexts: For example, an interesting 1 research question to investigate is the analogy between the dynamics of the performance of a group of musical instruments or voices in a vocal ensemble to agents <ref> [WFG + 95] </ref> and their interactions in the DAI sense. The primary purpose of our work is to build a hybrid system architecture for composing polyphonic music in real time. This system can serve as an interactive work tool for a composer or as a real time performance tool.
References-found: 9

