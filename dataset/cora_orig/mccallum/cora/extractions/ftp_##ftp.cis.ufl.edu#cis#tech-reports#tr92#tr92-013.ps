URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr92/tr92-013.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr92-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Synthesizing a Global Net State from Synchronized Local Pieces  
Author: P. David Stotts J. Cyrano Ruiz 
Keyword: Key words: Petri nets, modular representation, decomposition, state space compaction, reuse. CR categories: F.1.1 (Petri nets) D.2.4 (verification)  
Note: This work is based upon work supported by the National Science Foundation under grant numbers IRI-9007746 and IRI-9015439. Internet electronic mail address: pds@cis.ufl.edu. Internet electronic mail address: ruiz@cs.umd.edu.  
Address: College park, MD 20742 Gainesville, FL 32611  
Affiliation: Department of Computer and Department of Reliability Engineering Information Sciences University of Maryland University of Florida  
Abstract: A traditional problem with state space analysis for concurrent systems has been the exponential explosion in the size of the state space relative to the size of the system. This explosion not only consumes an exponential amount of time in generating a state space, but an exponential amount of storage space as well. In this report we show a technique that attacks both the storage half and the time half of this problem. A synchronous net set is a collection of Petri nets that together model a system of concurrent processes. Rather than combine the process models into a large net for analysis, we keep the nets separate and allow special transitions to synchronize their respective executions implicitly. Analysis is done by computing and storing the state spaces for the individual nets, and then virtually combining the state spaces when a system-wide state query is performed. This approach saves a large amount of storage space over using a global net state space, and for certain conditions requires less time for querying the state space. In addition, it promotes modular models, in that a change to one net model requires recomputation of only the corresponding (relatively small) individual state space, rather than recomputation of the entire system-wide state space. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> G. Berthelot, G. Roucairol, and R. Valk. </author> <title> reductions of nets and parallel programs. </title> <editor> In W. Brauer, editor, </editor> <booktitle> LNCS 84: Net Theory and Applications, </booktitle> <pages> pages 277-290. </pages> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: That is, the method builds reduced spaces based on specific features of the questions to be answered. Other methods for dealing with state explosion are similarly tailored to specific questions [2]. Still other methods <ref> [3, 4, 1] </ref> are hierarchical in nature, that is, a place or a transition can be expanded into a more detailed net "structure".
Reference: [2] <author> J. Billington. </author> <title> Protocol engineering and nets. </title> <booktitle> In Proceedings of the 8th European Workshop on Application and Theory of Petri Nets, </booktitle> <pages> pages 137-156, </pages> <year> 1987. </year>
Reference-contexts: That is, the method builds reduced spaces based on specific features of the questions to be answered. Other methods for dealing with state explosion are similarly tailored to specific questions <ref> [2] </ref>. Still other methods [3, 4, 1] are hierarchical in nature, that is, a place or a transition can be expanded into a more detailed net "structure".
Reference: [3] <author> G. Comparin, G. A. Lanzarone, K. Lautenbach, A. Pagnoni, W. Panzeri, and A. Torgano. </author> <title> Guidelines on using net analysis techniques with large specifications. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> LNCS 222: Advances in Petri Nets 1985, </booktitle> <pages> pages 142-161. </pages> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: That is, the method builds reduced spaces based on specific features of the questions to be answered. Other methods for dealing with state explosion are similarly tailored to specific questions [2]. Still other methods <ref> [3, 4, 1] </ref> are hierarchical in nature, that is, a place or a transition can be expanded into a more detailed net "structure".
Reference: [4] <author> L. Czaja. </author> <title> Making nets abstract and structured. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> LNCS 222: Advances in Petri Nets 1985, </booktitle> <pages> pages 181-202. </pages> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: That is, the method builds reduced spaces based on specific features of the questions to be answered. Other methods for dealing with state explosion are similarly tailored to specific questions [2]. Still other methods <ref> [3, 4, 1] </ref> are hierarchical in nature, that is, a place or a transition can be expanded into a more detailed net "structure".
Reference: [5] <author> C. A. R. Hoare. </author> <title> Communicating sequential processes. </title> <journal> Communications of the ACM, </journal> <volume> 21(8) </volume> <pages> 666-677, </pages> <year> 1978. </year>
Reference-contexts: Petri nets in this manner are reusable, or modular. 13 Our analysis technique assumes the process structure of the total system is created a priori, as if it were derived, say, from a parallel program or other system description (like CSP <ref> [5] </ref>). An interesting problem that we have not yet worked on is to try and identify processes within existing global nets, thereby making this technique applicable to existing large models. The technique would be to identify loosely connected subnets, and make the connecting transitions ff-transitions.
Reference: [6] <author> Richard M. Karp and Raymond E. Miller. </author> <title> Parallel program schemata. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 3 </volume> <pages> 147-195, </pages> <month> May </month> <year> 1969. </year>
Reference-contexts: PROOF: The sets of firing sequences 1 ; . . . ; k are computable, given each N i and each corresponding i , as explained for example in <ref> [6] </ref>.
Reference: [7] <author> Donald Knuth. </author> <title> The Art of Computer Programming: Fundamental Algorithms (Volume 1). </title> <publisher> Addison Wesley, </publisher> <year> 1970. </year>
Reference-contexts: This is essentially the reason we do not need to distinguish between occurrences of non ff-transitions. Any partial ordering can be `completed' (in a consistent way) into a total ordering, for instance via a topological sort <ref> [7] </ref>. In our case, transforming this partial ordering of the occurrences of the ff-transitions into a total ordering, can be interpreted as consistently `merging' the individual firing sequences t i into a global firing sequence.
Reference: [8] <author> Wolfgang Reisig. </author> <title> Petri Nets: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Let e refer generically to a transition which may be either normal or an ff-transition. 3 We use the older ffi (; t) = 0 notation rather than the often preferred [t &gt; 0 found in Reisig <ref> [8] </ref>.
Reference: [9] <author> Antti Valmari. </author> <title> State Space Generation: Efficiency and Practicality. </title> <type> Ph.D. dissertation, </type> <institution> Tam-pere University of Technology, Tampere, Finland, </institution> <year> 1988. </year> <note> Issued as Technical Publication No. 55. </note>
Reference-contexts: 1 Background The problem of state-space explosion in the analysis of concurrent systems is an old and still-troublesome problem. Several advances have recently been made in alleviating some of this problem in the context of Petri net system models. Specifically, Valmari has worked on an approach <ref> [9, 10] </ref> that uses hueristics specific to the question being asked to pre-prune sections of a state space that are likely to be unimportant in the context of the analyses.
Reference: [10] <author> Antti Valmari. </author> <title> Stubborn sets for reduced state space generation. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> LNCS 483: Advances in Petri Nets 1990, </booktitle> <pages> pages 491-515. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <month> 14 </month>
Reference-contexts: 1 Background The problem of state-space explosion in the analysis of concurrent systems is an old and still-troublesome problem. Several advances have recently been made in alleviating some of this problem in the context of Petri net system models. Specifically, Valmari has worked on an approach <ref> [9, 10] </ref> that uses hueristics specific to the question being asked to pre-prune sections of a state space that are likely to be unimportant in the context of the analyses.
References-found: 10

