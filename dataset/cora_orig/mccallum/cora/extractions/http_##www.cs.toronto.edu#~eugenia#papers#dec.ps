URL: http://www.cs.toronto.edu/~eugenia/papers/dec.ps
Refering-URL: http://www.cs.toronto.edu/~eugenia/publications.html
Root-URL: http://www.cs.toronto.edu
Email: eugenia@cs.toronto.edu  
Title: Automata Theory for Reasoning about Actions  
Author: Eugenia Ternovskaia 
Address: Toronto  
Affiliation: Department of Computer Science, University of  
Abstract: In this paper, we show decidability of a rather expressive fragment of the situation calculus. We allow second order quantification over finite and infinite sets of situations. We do not impose a domain closure assumption on actions; therefore, infinite and even uncountable domains are allowed. The decision procedure is based on automata accepting infinite trees. 
Abstract-found: 1
Intro-found: 1
Reference: [ Gelfond and Lifschitz, 1993 ] <author> M. Gelfond and V. Lifs-chitz. </author> <title> Representing action and change by logic programs. </title> <journal> J. of Logic Programming, </journal> <volume> 17 </volume> <pages> 301-322, </pages> <year> 1993. </year>
Reference-contexts: This language is second order, with quantification over finite and infinite sets of situations. The domain closure axiom for actions is not assumed, therefore infinite and even uncountable domains are allowed. Similar work has been done for the action language A proposed in <ref> [ Gelfond and Lifschitz, 1993 ] </ref> . Liber-atore [ Liberatore, 1997 ] studied the complexity of deciding whether a set of statements in this language is consistent, and specified which restrictions of A lead to tractability and which do not.
Reference: [ Liberatore, 1997 ] <author> P. Liberatore. </author> <title> The complexity of the language A. </title> <booktitle> Linkoping Electronic Articles in Computer and Information Science, </booktitle> <volume> 2, </volume> <year> 1997. </year>
Reference-contexts: The domain closure axiom for actions is not assumed, therefore infinite and even uncountable domains are allowed. Similar work has been done for the action language A proposed in [ Gelfond and Lifschitz, 1993 ] . Liber-atore <ref> [ Liberatore, 1997 ] </ref> studied the complexity of deciding whether a set of statements in this language is consistent, and specified which restrictions of A lead to tractability and which do not. The author describes a reduction from propositional satisfiability to consistency in A thus showing NP-completeness of the problem.
Reference: [ Lin and Reiter, 1994 ] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> J. of Logic and Computation, </journal> <volume> 4(5) </volume> <pages> 665-678, </pages> <year> 1994. </year>
Reference-contexts: Since the language of the situation calculus is more expressive (we allow second order quantification), the reduction from propositional satisfiability cannot be applied. Here, we reduce the problem of decidability of the basic action theory D (cf. <ref> [ Lin and Reiter, 1994 ] </ref> ) to the emptiness problem for a tree automaton. The emptiness problem is to determine whether the language accepted by a tree automaton is empty.
Reference: [ Miller and Shanahan, 1994 ] <author> R. Miller and M. Shana-han. </author> <title> Narratives in the situation calculus. </title> <journal> J. of Logic and Computation (Special Issue on Actions and Processes), </journal> <volume> 4(5) </volume> <pages> 513-530, </pages> <year> 1994. </year>
Reference: [ Reiter, 1991 ] <author> R. Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In Vladimir Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 359-380. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991. </year>
Reference-contexts: axioms, D ss , have the form 8a 8s F (do (a; s)) j [fl + F (a; s)]: Formula fl + F (a; s) (respectively, fl F (a; s)) denotes a first order formula specifying the conditions under which fluent F is true (respectively, false) in the successor situation <ref> [ Reiter, 1991 ] </ref> . The only free variables of these formulae are those among a, s. The unique name axioms, D una , specify that any two actions with different names are not equal.
Reference: [ Sandewall, 1994 ] <author> E. Sandewall. </author> <title> Features and Fluents: The Representation of Knowledge about Dynamic Systems. </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference: [ Ternovskaia, 1998 ] <author> E. Ternovskaia. </author> <title> Inductive definabil-ity and the situation calculus. In Transaction and Change in Logic Databases, </title> <booktitle> volume 1472 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: Indeed, it can be shown that the class of tree-like structures is completely characterized by the induction principle on situations and unique name assumptions for situations <ref> [ Ternovskaia, 1998 ] </ref> . The properties of the prefix relation @ are as follows. s 6@ S 0 ; (3) Formula s v s 0 is an abbreviation for s @ s 0 _ s = s 0 .
Reference: [ Thomas, 1990 ] <author> W. Thomas. </author> <title> Automata on infinite objects. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 134-191. </pages> <year> 1990. </year> <month> 6 </month>
Reference-contexts: Both Buchi and Rabin tree automata are closed under union, intersection and projection. The famous Rabin complementation theorem holds for Rabin tree automata, but fails for Buchi tree automata. More information about tree automata can be found in the excellent survey <ref> [ Thomas, 1990 ] </ref> . Example 1 Consider the infinite labeled tree represented in Figure 1. This tree has the following property. The label of the root is :F . The son wA 0 of every node w is always labeled with F .
References-found: 8

