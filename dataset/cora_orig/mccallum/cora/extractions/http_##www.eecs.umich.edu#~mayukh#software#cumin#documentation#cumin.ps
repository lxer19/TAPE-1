URL: http://www.eecs.umich.edu/~mayukh/software/cumin/documentation/cumin.ps
Refering-URL: http://www.eecs.umich.edu/~mayukh/cuminHome.html
Root-URL: http://www.eecs.umich.edu
Email: email: mayukh@eecs.umich.edu  
Phone: Phone: (734) 647 7660  
Title: CUMIN: A circuit optimization framework using SPICE  
Author: Mayukh Bhattacharya 
Address: Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: CUMIN is a quick-and-dirty C program framework for optimizing circuits using SPICE. The basic algorithm is a direct search optimization method based on the pattern search technique developed by Hooke and Jeeves [1]. The user needs to write a minimal amount of C code (a couple of subroutines) pertaining to the SPICE netlist of his/her circuit and the definition of the cost function which the user wants to minimize. The source code and examples are available from the author by request or can be downloaded from http://www.eecs.umich.edu/mayukh/cuminHome.html. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Hooke and T. A. Jeeves, </author> <title> Direct Search Solutions of Numerical and Statistical Problems, </title> <journal> Journal of The Association for Computing Machineries, </journal> <volume> vol. 8, </volume> <pages> pp. 212229, </pages> <month> Apr </month> <year> 1961. </year>
Reference-contexts: This is made possible by asking the user to do some very straightforward C programming by which he/she can define the variable portions of the SPICE netlist and the cost function. What CUMIN does on its own are: * Implement Hooke and Jeeves pattern search algorithm <ref> [1] </ref>. * Generate the SPICE files corresponding to the various sample points. * Run SPICE (or equivalent simulator) on the SPICE files. * Read the output of the SPICE run and return the time and the voltages of the various nodes which the user wants to monitor. <p> The portion of the file which needs to be modified is clearly demarcated in the file by the following comment lines: /** USER NEEDS TO MAKE CHANGES BELOW **/ /** **/ Here, the user can make use of the array elements x [0], x <ref> [1] </ref>, ..., which correspond to the values of the different variable parameters, in the exact same order that the user specified in hjsetup. For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x [3], x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a <p> the user can make use of the array elements x [0], x <ref> [1] </ref>, ..., which correspond to the values of the different variable parameters, in the exact same order that the user specified in hjsetup. For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x [3], x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a pulse waveform with respect to the parameter x [3] (which is the fourth parameter as defined by the user). 4 File: HJuserCost.c The user needs to define the cost function in file HJuserCost.c. <p> In such cases, it is advisable to resort to setting the ASCII RAWFILE flag and compiling a version of SPICE3. * When CUMIN exits under normal circumstances, the optimal SPICE netlist is stored in file hjOp tim.spice. * Hooke and Jeeves' pattern search algorithm <ref> [1] </ref> was chosen because it is very easy to code and gives reasonably good results within a short time. However, the simplicity of the algorithm has caused it to have many limitations.
Reference: [2] <author> L. W. Nagel, </author> <title> Spice2: A computer program to simulate semiconductor circuits, </title> <type> Tech. Rep. Report No. </type> <institution> ERL-M520, University of California, Berkeley, Electronics Research Laboratory, </institution> <month> May </month> <year> 1975. </year>
Reference-contexts: 1 Introduction CUMIN was written to optimize circuits which have been designed using Berkeley SPICE3 circuit simulation program <ref> [2] </ref>. Minor modifications will be necessary for using CUMIN to optimize circuits using other SPICE-like simulators (e.g. SPECTRE). Early versions of CUMIN were used by its author to size transistors and optimize certain device characteristics in order to meet performance specifications for a wide range of circuits (digital and analog).
Reference: [3] <author> G. Derringer and R. Suich, </author> <title> Simultaneous optimization of several response variables, </title> <journal> Journal of Quality Technology, </journal> <volume> vol. 12, </volume> <pages> pp. 214219, </pages> <month> October </month> <year> 1980. </year>
Reference-contexts: For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x <ref> [3] </ref>, x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a pulse waveform with respect to the parameter x [3] (which is the fourth parameter as defined by the user). 4 File: HJuserCost.c The user needs to define the cost function in file HJuserCost.c. <p> For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x <ref> [3] </ref>, x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a pulse waveform with respect to the parameter x [3] (which is the fourth parameter as defined by the user). 4 File: HJuserCost.c The user needs to define the cost function in file HJuserCost.c. <p> For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x <ref> [3] </ref>, x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a pulse waveform with respect to the parameter x [3] (which is the fourth parameter as defined by the user). 4 File: HJuserCost.c The user needs to define the cost function in file HJuserCost.c. <p> For instance: fprintf (fpnew,"vdata1 data1 0 pulse (%.3f 1.0 %.3fn %.3fn %.3fn" %.3fn %.3fn)"n", x [1], x <ref> [3] </ref>, x [3]/20.0, x [3]/20.0, x [3], 2.0*x [3]); defines a pulse waveform with respect to the parameter x [3] (which is the fourth parameter as defined by the user). 4 File: HJuserCost.c The user needs to define the cost function in file HJuserCost.c. Just as in the case of HJuserSpice.c, the portion of the file that the user needs to change is clearly demarcated. <p> In such cases, the overall cost function can be defined as a combination of the cost functions corresponding to the individual performance specifications. The combination can be made in several different ways (e.g. arithmetic mean, geometric mean, etc.). The user may find the reference <ref> [3] </ref> to be an interesting starting point while exploring different cost function possibilities. 5 The SPICE template file The template file is a user defined SPICE netlist file which will be appended to the CUMIN generated SPICE netlist before feeding it to SPICE for simulation.
Reference: [4] <author> V. Litovski and M. Zwolinski, </author> <title> VLSI circuit simulation and optimization. </title> <publisher> Chapman and Hall, </publisher> <year> 1997. </year>
Reference-contexts: A number of books <ref> [4, 5] </ref> and papers (for example, [6]) document the state-of-the-art in this area. CUMIN is a very trivial optimization program which does not intend to rival any of the state-of-the-art techniques that are mentioned in these sources.
Reference: [5] <author> R. E. Massara, </author> <title> Optimization Methods in Electronic Circuit Design. </title> <publisher> Longman Scientific and Technical, </publisher> <year> 1991. </year>
Reference-contexts: A number of books <ref> [4, 5] </ref> and papers (for example, [6]) document the state-of-the-art in this area. CUMIN is a very trivial optimization program which does not intend to rival any of the state-of-the-art techniques that are mentioned in these sources. <p> However, the simplicity of the algorithm has caused it to have many limitations. Different variations of the basic Hooke and Jeeves' algorithm are available in the literature <ref> [5] </ref> which offer significant improvements. Perhaps some day someone will add those to CUMIN! * One of the termination conditions of CUMIN is the maximum number of iterations allowed. This is defined in the header file HJdefs.h by MAXITER.
Reference: [6] <author> R. K. Brayton, G. D. Hachtel, and A. L. Sangiovanni-Vincentelli, </author> <title> A Survey of Optimization Techniques for Integrated-Circuit Design, </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 69, </volume> <pages> pp. 13341363, </pages> <month> Oct </month> <year> 1981. </year>
Reference-contexts: A number of books [4, 5] and papers (for example, <ref> [6] </ref>) document the state-of-the-art in this area. CUMIN is a very trivial optimization program which does not intend to rival any of the state-of-the-art techniques that are mentioned in these sources.
Reference: [7] <author> A. Brown and G. Mahoney, </author> <title> Nonlinear Programming is Essential to the Designer in Optimizing Circuits, </title> <journal> Electronic Design, </journal> <volume> vol. 16, </volume> <pages> pp. 9095, </pages> <month> Oct </month> <year> 1968. </year> <month> 5 </month>
Reference-contexts: Please feel free to send information about such tools to the author by email and help him enrich his knowledge base in this area. The author is aware that Hooke and Jeeves' pattern search algorithm has previously been successfully applied to circuit optimization <ref> [7] </ref> but he has not had a chance to use such software and does not know if the source code of such implementations are available freely or not. 8 Acknowledgements The author of CUMIN wishes to thank fellow PhD candidates Alejandro Gonzalez and Shriram Kulkarni for being the beta testers of
References-found: 7

