URL: http://graphics.lcs.mit.edu/~seth/pubs/visglobillum.ps.Z
Refering-URL: http://graphics.lcs.mit.edu/~seth/pubs/pubs.html
Root-URL: 
Title: Global Visibility Algorithms for Illumination Computations  
Author: Seth Teller Pat Hanrahan 
Keyword: CR Categories and Subject Descriptors: I.3.5 [Computational Geometry and Object Modeling]: Geometric Algorithms, Languages, and Systems; I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism Radiosity; J.2 [Physical Sciences and Engineering]: Engineering. Additional Key Words: Hidden surface removal, visibility space, radiosity, global illumination, algorithmic triage.  
Address: Jerusalem  
Affiliation: Institute of Computer Science Hebrew University of  Department of Computer Science Princeton University  
Note: Computer Graphics (Proceedings SIGGRAPH '94) pp. 443--450 Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requres a fee and/or specific permission.  
Abstract: The most expensive geometric operation in image synthesis is visibility determination. Classically this is solved with hidden surface removal algorithms that render only the parts of the scene visible from a point. Global illumination calculations, however, may require information between any two points in the scene. This paper describes global visibility algorithms that preprocess polygon databases in order to accelerate visibility determination during illumination calculations. These algorithms are sensitive to the output complexity in visibility space; that is, how many pairs of objects are mutually visible. Furthermore, the algorithms are incremental so that they work well with progressive refinement and hierarchical methods of image synthesis. The algorithms are conservative, but exact; that is, when they return visibility predicates they can be proved true. However sometimes they do not return either totally visible or totally invisible, but partially visible, even though in the same situation a better algorithm might return the exact answer. In this paper we describe the algorithms and their implementation, and show that, in a scene with low average visual complexity, they can dramatically accelerate conventional radiosity programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Airey, J. M. </author> <title> Increasing Update Rates in the Building Walkthrough System with Automatic Model-Space Subdivision and Potentially Visible Set Calculations. </title> <type> PhD thesis, </type> <institution> UNC Chapel Hill, </institution> <year> 1990. </year>
Reference-contexts: We present a novel blocker maintenance technique involving linespace, a five-dimensional representation of 3D lines (i.e., light rays). The algorithms we present are of interest in several ways. First, they comprise a practical treatment of visibility issues for unrestricted (i.e., non-axial) three-dimensional environments, in contrast to previous work <ref> [1, 8, 24] </ref>. Second, the conservative visibility description we compute identification of all mutually visible pairs, and the blocker set for each pair is a natural, output-sensitive way of characterizing visibility among polygons or more general objects, for any algorithms that require information about occlusion and/or illumination.
Reference: [2] <author> Baum, D. R., Mann, S., Smith, K. P., and Winget, J. M. </author> <title> Making Radiosity Usable: Automatic Preprocessing and Meshing Techniques for the Generation of Accurate Radiosity Solutions. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIGGRAPH '91) 25, </volume> <month> 4 </month> <year> (1991), </year> <month> 5160. </month>
Reference-contexts: The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling <ref> [2, 6, 11, 16] </ref> or point-to-area visibility [3, 4] techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant.
Reference: [3] <author> Campbell III, A., and Fussell, D. S. </author> <title> An Analytic Approach to Illumination with Area Light Sources. </title> <type> Tech. Rep. </type> <institution> TR-91-25, Department of Computer Sciences, UT Austin, </institution> <year> 1991. </year>
Reference-contexts: The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling [2, 6, 11, 16] or point-to-area visibility <ref> [3, 4] </ref> techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant.
Reference: [4] <author> Chin, N., and Feiner, S. </author> <title> Fast Object-Precision Shadow Generation for Area Light Sources Using BSP Trees. </title> <booktitle> In Proc. 1992 Symposium on Interactive 3D Graphics (1992), </booktitle> <pages> pp. 2130. </pages>
Reference-contexts: The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling [2, 6, 11, 16] or point-to-area visibility <ref> [3, 4] </ref> techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant.
Reference: [5] <author> Cohen, M. F., Chen, S. E., Wallace, J. R., and Green-berg, D. P. </author> <title> A Progressive Refinement Approach to Fast Radiosity Image Generation. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIGGRAPH '88) 22, </volume> <month> 4 </month> <year> (1988), </year> <month> 7584. </month>
Reference-contexts: The most efficient global illumination algorithms operate iteratively based on error criteria. Examples are hierarchical radiosity, where surfaces are subdivided with respect to each other according to potential light transfers between them [11], and progressive refinement methods where light is transferred among surfaces in order of brightness <ref> [5] </ref>. Thus, the visibility algorithms should be lazy and sensitive to required precision. They should also allow refinement so that more precise determinations can be made as needed. Conservative triage. Both the preprocessing and maintenance methods use conservative triage to avoid the combinatorial complexity of exact visibility determination.
Reference: [6] <author> Cohen, M. F., and Greenberg, D. P. </author> <title> The Hemi-Cube: A Radiosity Solution for Complex Environments. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIGGRAPH '85) 19, </volume> <month> 3 </month> <year> (1985), </year> <month> 3140. </month>
Reference-contexts: The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling <ref> [2, 6, 11, 16] </ref> or point-to-area visibility [3, 4] techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant.
Reference: [7] <author> Fuchs, H., Kedem, Z., and Naylor, B. </author> <title> On visible surface generation by a priori tree structures. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIG-GRAPH '80) 14, </volume> <month> 3 </month> <year> (1980), </year> <month> 124133. </month>
Reference-contexts: The space embedding the geometric model is subdivided into convex polyhedral cells, typically separated by polygons (Figure 2). The construction is based on BSP trees <ref> [7] </ref>, but the visibility algorithms we subsequently present are provably correct for any spatial subdivision satisfying a few geometric criteria [22]. First, a polyhedral root volume is constructed as the convex hull of P .
Reference: [8] <author> Funkhouser, T. A., S equin, C. H., and Teller, S. </author> <title> Management of Large Amounts of Data in Interactive Building Walk-throughs. </title> <booktitle> In Proc. 1992 Workshop on Interactive 3D Graphics (1992), </booktitle> <pages> pp. 1120. </pages>
Reference-contexts: We present a novel blocker maintenance technique involving linespace, a five-dimensional representation of 3D lines (i.e., light rays). The algorithms we present are of interest in several ways. First, they comprise a practical treatment of visibility issues for unrestricted (i.e., non-axial) three-dimensional environments, in contrast to previous work <ref> [1, 8, 24] </ref>. Second, the conservative visibility description we compute identification of all mutually visible pairs, and the blocker set for each pair is a natural, output-sensitive way of characterizing visibility among polygons or more general objects, for any algorithms that require information about occlusion and/or illumination. <p> The average length of a tested inter-cell portal sequence was just over 5 portals. This is consistent with our experience using a ten-thousand polygon, five-thousand cell axial model, in which the average portal sequence length was less than ten <ref> [8, 22] </ref>. A histogram of observed portal sequence lengths and stabbing percentages is shown in Figure 13. The inter-cell visibility determination uses a depth-first-search through the cell adjacency graph, applying an incremental stabbing predicate and visible volume computation at each step.
Reference: [9] <author> Gigus, Z., Canny, J., and Seidel, R. </author> <title> Efficiently Computing and Representing Aspect Graphs of Polyhedral Objects. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence 13, </journal> <volume> 6 (1991), </volume> <pages> 542551. </pages>
Reference-contexts: For example, the fastest algorithm currently known for computing a complete description of the interocclusion due to a polyhedral object of n vertices can take O (n 6 lg n) time <ref> [9] </ref>. This paper describes global visibility algorithms that analyze the entire visibility space, and are applicable to a range of illumination problems. Here, we apply them to a hierarchical radiosity algorithm.
Reference: [10] <author> Haines, E. A., and Wallace, J. R. </author> <title> Shaft Culling for Efficient Ray-Traced Radiosity. </title> <booktitle> In Proc. 2 nd Eurographics Workshop on Rendering (May 1991). </booktitle>
Reference-contexts: One could simply compute the set of blockers as those polygons incident on a convex volume containing S and R (as in <ref> [10] </ref>). However, the visibility graph and reaching portal sequence generally yield a better (i.e., smaller) blocker list. Denote the convex hull of all vertices of S and R as conv (S; R). Clearly any blocker B must be incident on conv (S; R) to contribute to B (S; R).
Reference: [11] <author> Hanrahan, P., Salzman, D., and Aupperle, L. </author> <title> A Rapid Hierarchical Radiosity Algorithm. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIG-GRAPH '91) 25, </volume> <month> 4 </month> <year> (1991), 197206. </year>
Reference-contexts: Incremental visibility maintenance. The most efficient global illumination algorithms operate iteratively based on error criteria. Examples are hierarchical radiosity, where surfaces are subdivided with respect to each other according to potential light transfers between them <ref> [11] </ref>, and progressive refinement methods where light is transferred among surfaces in order of brightness [5]. Thus, the visibility algorithms should be lazy and sensitive to required precision. They should also allow refinement so that more precise determinations can be made as needed. Conservative triage. <p> This was extended to 3D axial rectangles in [22]. This paper treats the case of convex polygons in general position. The global visibility algorithms described here have been implemented with a global illumination system that computes radiosity values for polygonal scenes <ref> [11] </ref>. The algorithm maintains a hierarchy of interactions between subdivided polygons at different levels of detail. <p> Perhaps surprisingly, we show that these conservative overestimated blocker lists are generally smaller than those maintained by existing algorithms. 4. Blocker Maintenance. In a hierarchical radiosity algorithm, polygons (patches, in radiosity parlance) are allowed to exchange radiant energy only when the interaction satisfies some specified global error bound <ref> [11] </ref>. Otherwise, the patches are subdivided, and interaction is recommenced among the child patches. It is natural to consider how the conservative visibility graph among the patches can be incrementally maintained under subdivision. <p> Finally, we show that the use of these algorithms dramatically improves the time and space efficiency of an existing radiosity computation <ref> [11] </ref>. 3 Spatial Subdivision The geometric model is specified as a set P of convex polygons (Figure 1). The space embedding the geometric model is subdivided into convex polyhedral cells, typically separated by polygons (Figure 2). <p> In the hierarchical radiosity algorithm, when the energetic interaction between two patches can not be characterized to within the global error bound, one of the patches of the interaction is symmetrically subdivided, and its children are allowed to interact with the other patch <ref> [11] </ref>. Clearly, interactions between either patch and the children of its counterpart are highly coherent. The tube data structure exploits this coherence to perform efficient and accurate visibility reclassification after subdivision. <p> As before, many instances of total invisibility, partial visibility, and total visibility are discovered quickly. Other situations are considered too complex to analyze completely, and we ``punt'' and classify the interaction as partially visible (perhaps causing further subdivision <ref> [11] </ref>). Consider an interaction (S; R) and a single potential blocker B (Figure 10). We wish to determine, without extensive analysis, whether all, none, or some of the lines through S and R stab the blocker B. <p> The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling <ref> [2, 6, 11, 16] </ref> or point-to-area visibility [3, 4] techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant. <p> The work and storage expended for the incremental visibility maintenance also serves to accelerate the sampling done to establish inter-patch energy transfer (i.e., to estimate form factors). The ray/blocker machinery is simply applied to random sample rays (as used in <ref> [11] </ref>). The cost of each ray/blocker test is four 5D inner products. 7 Results 7.1 Spatial Subdivision We implemented the spatial subdivision, propagation, interference, and maintenance algorithms described, and instrumented their execution for the data set shown in Figure 1. <p> Since the time complexity of the radiosity algorithm is proportional to the number of interactions, the visibility preprocessing significantly decreased the computation done by the radiosity algorithm. Moreover, the modified radiosity algorithm was more accurate, since no partially visible interactions were missed due to sampling errors (as in <ref> [11] </ref>). 7.5 Blocker Visualization All of the algorithms described in this paper were implemented using visualization tools that allowed interactive inspection of complex data structures. Figures 15 through 17 depict the use of this tool to investigate some interesting partial interactions.
Reference: [12] <author> Heckbert, P. S. </author> <title> Simulating Global Illumination Using Adaptive Meshing. </title> <type> PhD thesis, </type> <institution> Computer Sciences Department, UC Berkeley, </institution> <month> June </month> <year> 1991. </year>
Reference-contexts: Only blockers can occlude a specified source from a specified emitter. Thus, the blocker list formulation is applicable to the problem of discontinuity meshing in the presence of area light sources <ref> [12, 13, 14, 21] </ref>, as well as to the construction of an ``oracle'' to decide which, if any, among a collection of discontinuities should be meshed upon earliest. We showed that the visibility analysis significantly accelerated a radiosity computation in a polygonal environment.
Reference: [13] <author> Lischinski, D., Tampieri, F., and Greenberg, D. P. </author> <title> Discontinuity Meshing for Accurate Radiosity. </title> <journal> IEEE Computer Graphics and Applications 12, </journal> <volume> 6 (1992), </volume> <pages> 2539. </pages>
Reference-contexts: Only blockers can occlude a specified source from a specified emitter. Thus, the blocker list formulation is applicable to the problem of discontinuity meshing in the presence of area light sources <ref> [12, 13, 14, 21] </ref>, as well as to the construction of an ``oracle'' to decide which, if any, among a collection of discontinuities should be meshed upon earliest. We showed that the visibility analysis significantly accelerated a radiosity computation in a polygonal environment.
Reference: [14] <author> Lischinski, D., Tampieri, F., and Greenberg, D. P. </author> <title> Combining Hierarchical Radiosity and Discontinuity Meshing. </title> <journal> Computer Graphics (Proc. </journal> <note> SIGGRAPH '93) 27 (1993). </note>
Reference-contexts: Only blockers can occlude a specified source from a specified emitter. Thus, the blocker list formulation is applicable to the problem of discontinuity meshing in the presence of area light sources <ref> [12, 13, 14, 21] </ref>, as well as to the construction of an ``oracle'' to decide which, if any, among a collection of discontinuities should be meshed upon earliest. We showed that the visibility analysis significantly accelerated a radiosity computation in a polygonal environment.
Reference: [15] <author> Megiddo, N. </author> <title> Linear programming in linear time when the dimension is fixed. </title> <journal> Journal of the ACM 31 (1984), </journal> <volume> 114127. </volume>
Reference-contexts: The O (n) positive halfspaces of the planes are inspected for an intersection with the c BSP halfspaces bounding the reached cell in time O (n + c) with a linear programming algorithm <ref> [15, 19] </ref>.
Reference: [16] <author> Nishita, T., and Nakamae, E. </author> <title> Half-Tone Representation of 3-D Objects Illuminated by Area Sources or Polyhedron Sources. </title> <booktitle> In Proc. IEEE COMPSAC, </booktitle> <year> 1983 (1983), </year> <pages> pp. 237242. </pages>
Reference-contexts: The linespace algorithms guarantee conservative visibility, in that blockers are only discarded from interactions if they are definitely known to be disjoint. Existing algorithms use point-sampling <ref> [2, 6, 11, 16] </ref> or point-to-area visibility [3, 4] techniques and therefore do not guarantee correct inter-area visibility determination. In contrast, we establish exact visibility information where possible, and adaptively subdivide until the uncertainty of visibility estimation in the remaining cases is so small as to be unimportant.
Reference: [17] <author> Plantinga, H. </author> <title> An algorithm for finding the weakly visible faces from a polygon in 3D. </title> <type> Tech. Rep. 9211, </type> <institution> U of Pittsburgh, </institution> <year> 1992. </year>
Reference-contexts: Establishment of improved algorithms for the determination of inter-polygon visibility in the presence of multiple blockers is an active area of research <ref> [17, 21, 25] </ref>. An exact algorithm was presented in [21], but is not yet sufficiently robust for application here. The work and storage expended for the incremental visibility maintenance also serves to accelerate the sampling done to establish inter-patch energy transfer (i.e., to estimate form factors).
Reference: [18] <author> Plantinga, W., and Dyer, C. </author> <title> An algorithm for constructing the aspect graph. </title> <booktitle> In Proc. 27 th Annual IEEE Symposium on Foundations of Computer Science (1986), </booktitle> <pages> pp. 123131. </pages>
Reference-contexts: The volume visible to a polygon in the presence of polygonal occluders is, in general, bounded by quadratic surfaces <ref> [18] </ref>. An algorithm for computing this volume was implemented and described in [21], but is not yet sufficiently robust for use on complex models. Consequently, we have developed a simpler algorithm that computes a polyhedral volume guaranteed to enclose the exact visible region.
Reference: [19] <author> Seidel, R. </author> <title> Small-dimensional linear programming and convex hulls made easy. </title> <booktitle> Discrete and Computational Geometry (1991), </booktitle> <pages> 423434. </pages>
Reference-contexts: The O (n) positive halfspaces of the planes are inspected for an intersection with the c BSP halfspaces bounding the reached cell in time O (n + c) with a linear programming algorithm <ref> [15, 19] </ref>.
Reference: [20] <author> Sommerville, D. </author> <title> Analytical Geometry of Three Dimensions. </title> <publisher> Cambridge University Press, </publisher> <year> 1959. </year>
Reference-contexts: Finally, when neither complete visibility nor complete occlusion can be quickly determined, the status of the child interaction remains partially visible. 6.1 Linespace The tube structure efficiently encodes the set of all lines between S and R, using a five-dimensional line representation known as Plucker coordinates <ref> [20] </ref>, or simply linespace. Lines in three dimensions correspond to hyperplanes and points in linespace. <p> In practice, there is one caveat to using the linespace representation [23]. The only portion of linespace corresponding to 3D lines with real coefficients are those linespace points lying on a 4D manifold known as the Plucker quadric <ref> [20] </ref>; all other linespace points correspond to 3D lines with complex coefficients. Fortunately, the algorithms used in this paper need never consider the Plucker quadric, since they manipulate only lines known a priori to have real coefficients.
Reference: [21] <author> Teller, S. </author> <title> Computing the Antipenumbra Cast by an Area Light Source. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIGGRAPH '92) 26, </volume> <month> 2 </month> <year> (1992), </year> <month> 139148. </month>
Reference-contexts: The volume visible to a polygon in the presence of polygonal occluders is, in general, bounded by quadratic surfaces [18]. An algorithm for computing this volume was implemented and described in <ref> [21] </ref>, but is not yet sufficiently robust for use on complex models. Consequently, we have developed a simpler algorithm that computes a polyhedral volume guaranteed to enclose the exact visible region. <p> Lines in three dimensions correspond to hyperplanes and points in linespace. Any two 3D rays a and b can be oriented by considering their linespace counterparts fl a , a 5D hyperplane, and b , a 5D point (details of the mapping can be found in <ref> [21] </ref>). The signed distance of b from fl a determines the sense in which the lines ``go around'' each other in 3D; if b lies on fl a the lines a and b are coplanar. <p> stabs the interiors of S and R, L must lie in the appropriate signed halfspaces h k of the hyperplanes fl S k and fl R k Thus, the set of all lines through S and R corresponds to the interior of a five-dimensional convex polytope " k h k <ref> [21] </ref>. Rather than attempt to compute this polytope directly, we can manipulate the vertices of its intersection with the Plucker quadric, which are comparatively easy to generate. <p> Establishment of improved algorithms for the determination of inter-polygon visibility in the presence of multiple blockers is an active area of research <ref> [17, 21, 25] </ref>. An exact algorithm was presented in [21], but is not yet sufficiently robust for application here. The work and storage expended for the incremental visibility maintenance also serves to accelerate the sampling done to establish inter-patch energy transfer (i.e., to estimate form factors). <p> Establishment of improved algorithms for the determination of inter-polygon visibility in the presence of multiple blockers is an active area of research [17, 21, 25]. An exact algorithm was presented in <ref> [21] </ref>, but is not yet sufficiently robust for application here. The work and storage expended for the incremental visibility maintenance also serves to accelerate the sampling done to establish inter-patch energy transfer (i.e., to estimate form factors). <p> Only blockers can occlude a specified source from a specified emitter. Thus, the blocker list formulation is applicable to the problem of discontinuity meshing in the presence of area light sources <ref> [12, 13, 14, 21] </ref>, as well as to the construction of an ``oracle'' to decide which, if any, among a collection of discontinuities should be meshed upon earliest. We showed that the visibility analysis significantly accelerated a radiosity computation in a polygonal environment.
Reference: [22] <author> Teller, S. </author> <title> Visibility Computations in Densely Occluded Polyhedral Environments. </title> <type> PhD thesis, </type> <institution> CS Dept., UC Berkeley, </institution> <year> 1992. </year>
Reference-contexts: The visibility algorithms presented here generalize previous work on preprocessing environments for interactive walkthroughs. In [24], an algorithm was given to preprocess a 2D environment of axial line segments, such as floorplans. This was extended to 3D axial rectangles in <ref> [22] </ref>. This paper treats the case of convex polygons in general position. The global visibility algorithms described here have been implemented with a global illumination system that computes radiosity values for polygonal scenes [11]. The algorithm maintains a hierarchy of interactions between subdivided polygons at different levels of detail. <p> The space embedding the geometric model is subdivided into convex polyhedral cells, typically separated by polygons (Figure 2). The construction is based on BSP trees [7], but the visibility algorithms we subsequently present are provably correct for any spatial subdivision satisfying a few geometric criteria <ref> [22] </ref>. First, a polyhedral root volume is constructed as the convex hull of P . While polygons of sufficient size are present, a polygon is chosen whose support plane is to partition the remainder of the set. <p> The algorithm is a straightforward construction that, using separating tangent planes, performs a kind of internal pivoting over the edges and vertices occurring along the portal sequence. We treat the algorithm briefly here; details can be found in <ref> [22] </ref>. The algorithm exploits the fact that for each portal edge, at most two separating planes can contribute a face to polyhedral bounds on the illuminated volume (Figure 5), since at most one vertex from each halfspace of the associated portal can span a relevant plane with the edge. <p> The visible volume in the reached cell due to the augmented sequence is then tested for incidence with the appropriate subset of polygons stored in the reached cell. (The notion of conservative inter-polygon visibility can be simply extended to treat visibility between general objects <ref> [22] </ref>.) in which ``polygons'' and ``portals'' are line segments. A source cell S (Figure 6-i) establishes inter-cell visibility to a cell R via some portal sequence. The polygon B in S can have no interaction with R's interior, and it is not considered further. <p> The average length of a tested inter-cell portal sequence was just over 5 portals. This is consistent with our experience using a ten-thousand polygon, five-thousand cell axial model, in which the average portal sequence length was less than ten <ref> [8, 22] </ref>. A histogram of observed portal sequence lengths and stabbing percentages is shown in Figure 13. The inter-cell visibility determination uses a depth-first-search through the cell adjacency graph, applying an incremental stabbing predicate and visible volume computation at each step.
Reference: [23] <author> Teller, S., and Hohmeyer, M. E. </author> <title> Computing the Lines Piercing Four Lines. </title> <type> Tech. Rep. </type> <institution> UCB/CSD 91/665, Computer Science Department, UC Berkeley, </institution> <year> 1991. </year>
Reference-contexts: This ``sidedness'' property can be used to represent the set of lines through a collection of convex polygons. In practice, there is one caveat to using the linespace representation <ref> [23] </ref>. The only portion of linespace corresponding to 3D lines with real coefficients are those linespace points lying on a 4D manifold known as the Plucker quadric [20]; all other linespace points correspond to 3D lines with complex coefficients.
Reference: [24] <author> Teller, S., and S equin, C. H. </author> <title> Visibility Preprocessing for Interactive Walkthroughs. </title> <journal> Computer Graphics (Proc. </journal> <volume> SIGGRAPH '91) 25, </volume> <month> 4 </month> <year> (1991), </year> <month> 6169. </month>
Reference-contexts: Of course, for this to work we need either another visibility algorithm to complete the analysis, or we must expect the situation to simplify eventually (e.g., through subdivision). The visibility algorithms presented here generalize previous work on preprocessing environments for interactive walkthroughs. In <ref> [24] </ref>, an algorithm was given to preprocess a 2D environment of axial line segments, such as floorplans. This was extended to 3D axial rectangles in [22]. This paper treats the case of convex polygons in general position. <p> We present a novel blocker maintenance technique involving linespace, a five-dimensional representation of 3D lines (i.e., light rays). The algorithms we present are of interest in several ways. First, they comprise a practical treatment of visibility issues for unrestricted (i.e., non-axial) three-dimensional environments, in contrast to previous work <ref> [1, 8, 24] </ref>. Second, the conservative visibility description we compute identification of all mutually visible pairs, and the blocker set for each pair is a natural, output-sensitive way of characterizing visibility among polygons or more general objects, for any algorithms that require information about occlusion and/or illumination.
Reference: [25] <author> Zhao, J., and Dobkin, D. </author> <type> Personal communication, </type> <year> 1992. </year>
Reference-contexts: Establishment of improved algorithms for the determination of inter-polygon visibility in the presence of multiple blockers is an active area of research <ref> [17, 21, 25] </ref>. An exact algorithm was presented in [21], but is not yet sufficiently robust for application here. The work and storage expended for the incremental visibility maintenance also serves to accelerate the sampling done to establish inter-patch energy transfer (i.e., to estimate form factors).
References-found: 25

