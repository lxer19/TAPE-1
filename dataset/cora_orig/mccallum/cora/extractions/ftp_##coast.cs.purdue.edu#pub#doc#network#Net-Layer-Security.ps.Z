URL: ftp://coast.cs.purdue.edu/pub/doc/network/Net-Layer-Security.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ30.html
Root-URL: http://www.cs.purdue.edu
Title: The Architecture and Implementation of Network-Layer Security Under Unix  
Abstract: swIPe is a network-layer security protocol for the IP protocol suite. This paper presents the architecture, design philosophy, and performance of an implementation of swIPe under several variants of Unix. swIPe provides authentication, integrity, and confidentiality of IP datagrams, and is completely compatible with the existing IP infrastructure. To maintain this compatibility, swIPe is implemented using an encapsulation protocol. Mechanism (the details of the protocol) is decoupled from policy (what and when to protect) and key management. swIPe under Unix is implemented using a virtual network interface. The parts of the implementation that process incoming and outgoing packets are entirely in the kernel; parameter setting and exception handling, however, are managed by user-level processes. The performance of swIPe on modern workstations is primarily limited only by the speed of the underlying authentication and encryption algorithms; the mechanism overhead is negligible in our pro totype.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. M. Bellovin. </author> <title> Pseudo-Network Drivers and Virtual Networks Extended Abstract. </title> <booktitle> In Usenix Conference Proceedings, </booktitle> <pages> pages 229244. </pages> <publisher> Usenix, </publisher> <month> January </month> <year> 1990. </year>
Reference-contexts: This virtual interface appears to the rest of the system as if it were a conventional network interface; this technique is similar in spirit to the one described in <ref> [1] </ref>. Recall that conceptually, the policy engine filters all outgoing IP datagrams to determine whether the packet requires processing by swIPe. Since in our prototype only the destination IP address is used to select these packets, we use the existing BSD routing mechanism as our primary outgoing policy filter.
Reference: [2] <author> Matt Blaze. </author> <title> A cryptographic file system for Unix. </title> <booktitle> In First ACM Conference on Communications and Computing Security, </booktitle> <address> Fairfax, VA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Source authentication: network addresses are authenticated as part of the protocol. It is important to point out that swIPes protections are limited to the context of the network. Data not on the network itself, such as files, window contents, etc., may still require other protection mechanisms (e.g., CFS <ref> [2] </ref>). 2. swIPe Protocol Overview A complete specification of the swIPe protocol is beyond the scope of this paper. The reader is referred to [6] for the authoritative protocol description. This section gives a brief overview of the important features in swIPe.
Reference: [3] <author> W. Diffie and M. E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory-, </journal> <volume> IT-22:644654, </volume> <year> 1976. </year>
Reference: [4] <author> D. P. Anderson et al. </author> <title> A Protocol for Secure Communication in Large Distributed Systems. </title> <type> Technical Report UCB/CSD 87/342, </type> <institution> University of California, Berkeley, </institution> <month> February </month> <year> 1987. </year>
Reference: [5] <author> John Ioannidis. </author> <title> Protocols for Mobile Internetworking. </title> <type> Ph.D. thesis, </type> <institution> Columbia University in the City of New York, </institution> <year> 1993. </year>
Reference: [6] <author> John Ioannidis, Matt Blaze, and Phil Karn. swIPe: </author> <title> The IP Security Protocol. </title> <note> To appear. </note>
Reference-contexts: Data not on the network itself, such as files, window contents, etc., may still require other protection mechanisms (e.g., CFS [2]). 2. swIPe Protocol Overview A complete specification of the swIPe protocol is beyond the scope of this paper. The reader is referred to <ref> [6] </ref> for the authoritative protocol description. This section gives a brief overview of the important features in swIPe. Briey, a swIPe system consists of three conceptual entities on top of the ordinary IP mechanisms: the security processing engine, the key management engine, and the policy engine.
Reference: [7] <author> John Ioannidis, Dan Duchamp, and Gerald Q. Maguire Jr. </author> <title> IP-Based Protocols for Mobile Internet-working. </title> <booktitle> In Proceedings of SIGCOMM91, </booktitle> <pages> pages 235245. </pages> <publisher> ACM, </publisher> <month> September </month> <year> 1991. </year>
Reference: [8] <author> ISO/IEC JTC1/SC6. </author> <title> ISO-IEC DIS 11577 Information Technology Telecommunications and Information Exchange Between Systems Network Layer Security Protocol, </title> <month> November 29 </month> <year> 1992. </year>

References-found: 8

