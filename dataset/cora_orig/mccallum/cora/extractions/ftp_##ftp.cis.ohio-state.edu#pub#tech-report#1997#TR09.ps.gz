URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/1997/TR09.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/~sundar/research.html
Root-URL: 
Email: (sundar,panda,saday)@cis.ohio-state.edu djayasim@mipos2.intel.com  
Title: Hybrid Algorithms for Complete Exchange in 2D Meshes  
Author: N. S. Sundar D. N. Jayasimha D. K. Panda P. Sadayappan 
Note: 1 Work done while at the  
Address: MS RN2-02  2200 Mission College Blvd Columbus, OH 43210 Santa Clara, CA 95052-8119  
Affiliation: Dept. of Computer Information Science Intel Corporation,  The Ohio State University  Dept. of Computer and Information Science, The Ohio State University.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> B. Abali, F. Ozguner, and A. Bataineh. </author> <title> Balanced parallel sort on hypercube multiprocessors. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 4(5) </volume> <pages> 572-581, </pages> <year> 1993. </year> <month> 35 </month>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. <p> Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting <ref> [2, 1, 15, 22] </ref>. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17].
Reference: [2] <author> David A. Bader, David R. Helman, and Joseph JaJa. </author> <title> Practical parallel algo-rithms for personalized communication and integer sorting. </title> <type> Technical Report UMIACS TR 95-101, </type> <institution> Institute for Advanced Computer Studies, University of Maryland, </institution> <year> 1995. </year> <note> http://www.umiacs.umd.edu/research/EXPAR/papers/3548.html. </note>
Reference-contexts: Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting <ref> [2, 1, 15, 22] </ref>. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17].
Reference: [3] <author> Vasanth Bala, Jehoshua Bruck, Robert Cypher, Pablo Elustondo, Alex Ho, Ching-Tien Ho, Shlomo Kipnis, and Marc Snir. </author> <title> CCL: A portable and tunable collective communication library for scalable parallel computers. </title> <booktitle> Proceedings of the 8th International Parallel Processing Symposium, </booktitle> <pages> pages 835-844, </pages> <year> 1994. </year>
Reference-contexts: Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22]. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in <ref> [3, 4] </ref>. A survey of collective communication algorithms, including those for complete exchange, is given in [17]. Multiphase algorithms have been proposed for the hypercube [7] and these same algorithms have been implemented on a 2D mesh [8]. This paper has several features that distinguish it from past studies.
Reference: [4] <author> Mike Barnett, Satya Gupta, David G. Payne, Lance Shuler, Robert van de Geijn, and Jerrell Watts. </author> <title> Building a high-performance collective communication library. </title> <booktitle> Proceedings of the Scalable High Performance Computing Conference, </booktitle> <pages> pages 835-844, </pages> <year> 1994. </year>
Reference-contexts: Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22]. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in <ref> [3, 4] </ref>. A survey of collective communication algorithms, including those for complete exchange, is given in [17]. Multiphase algorithms have been proposed for the hypercube [7] and these same algorithms have been implemented on a 2D mesh [8]. This paper has several features that distinguish it from past studies.
Reference: [5] <author> D.P. Bertsekas, C. Ozveren, G.D. Stamoulis, P. Tseng, and J.N. Tsitsiklis. </author> <title> Optimal communication algorithms for hypercubes. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 11 </volume> <pages> 263-275, </pages> <year> 1991. </year>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24].
Reference: [6] <author> Shahid H. Bokhari. </author> <title> Complete exchange on the iPSC-860. </title> <type> Technical Report 91-4, </type> <institution> ICASE, NASA Langley Research Center, </institution> <month> January </month> <year> 1991. </year>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers <ref> [29, 6, 19] </ref>. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22]. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries.
Reference: [7] <author> Shahid H. Bokhari. </author> <title> Multiphase complete exchange on a circuit switched hypercube. </title> <booktitle> Proceedings of the International Conference on Parallel Processing, </booktitle> <address> pages I-525 - I-529, </address> <year> 1991. </year> <note> Also appeared as NASA ICASE Report 91-5. </note> <institution> ICASE, NASA Langley Research Center, </institution> <year> 1991. </year>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. <p> The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17]. Multiphase algorithms have been proposed for the hypercube <ref> [7] </ref> and these same algorithms have been implemented on a 2D mesh [8]. This paper has several features that distinguish it from past studies. It hybridizes two algorithms that have been specifically formulated for meshes: Cyclic Exchange and Direct Exchange.
Reference: [8] <author> Shahid H. Bokhari. </author> <title> Multiphase complete exchange on Paragon, SP2, and CS-2. </title> <journal> IEEE Parallel & Distributed Technology, </journal> <volume> 4(3) </volume> <pages> 45-59, </pages> <month> Fall </month> <year> 1996. </year>
Reference-contexts: The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17]. Multiphase algorithms have been proposed for the hypercube [7] and these same algorithms have been implemented on a 2D mesh <ref> [8] </ref>. This paper has several features that distinguish it from past studies. It hybridizes two algorithms that have been specifically formulated for meshes: Cyclic Exchange and Direct Exchange.
Reference: [9] <author> Shahid H. Bokhari and H. Berryman. </author> <title> Complete exchange on a circuit switched mesh. </title> <booktitle> Proceedings of the Scalable High Performance Computing Conference, </booktitle> <pages> pages 300-306, </pages> <year> 1992. </year>
Reference-contexts: Q then forwards the data blocks towards their respective destinations in subsequent phases. This combining or indirect approach typically takes a divide-and-conquer strategy. For example, Bokhari and Berryman <ref> [9] </ref> developed two algorithms that use this approach called Binary Exchange and Quadrant Exchange. Binary Exchange recursively divides the mesh into halves while Quadrant Exchange organizes the mesh in quadrants. The latter has been shown to be faster than the former. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture <ref> [9, 21, 28, 27, 24] </ref>. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22].
Reference: [10] <author> V.V. Dimakopoulos and N.J. Dimopoulos. </author> <title> Optimal total exchange in linear arrays and rings. </title> <booktitle> Proceedings of the International Symposium on Parallel Architectures, Algorithms and Networks., </booktitle> <pages> pages 230-237, </pages> <year> 1994. </year>
Reference-contexts: The complete exchange problem has been extensively studied on various topologies such as hypercubes [14, 6, 7, 5, 1, 19, 26] and tori [23]. Solutions have also been formulated for linear arrays and rings <ref> [10] </ref> and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19].
Reference: [11] <author> Message Passing Interface Forum. </author> <title> MPI: A message-passing interface standard. </title> <type> Technical report, </type> <institution> University of Tennessee, Knoxville, TN, </institution> <month> June </month> <year> 1995. </year> <note> Version 1.1. http://www.mcs.anl.gov/mpi/mpi-report-1.1/mpi-report.html. 36 </note>
Reference-contexts: This pattern arises in many important problems such as multidimensional FFT, matrix transposition and sorting. It is one of the collective communication primitives defined by the MPI <ref> [11] </ref> message passing interface standard. Since complete exchange is communication intensive, its effective implementation in wire-sparse topologies like 2D meshes is a challenging problem.
Reference: [12] <author> Al Geist, Adam Beguelin, Jack Dongarra, Weicheng Jiang, Robert Manchek, and Vaidy Sunderam. </author> <title> PVM: Parallel Virtual Machine | A User's Guide and Tutorial for Networked Parallel Computing. </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: It is a distributed memory machine with the interconnect being a 3-dimensional torus. This installation of T3D has 128 processing nodes, structured as 8 fi 4 fi 4. The message-passing model is supported on the T3D with a native implementation of the Parallel Virtual Machine (PVM) <ref> [12] </ref> communication library. So, the hybrids were implemented using PVM. Certain factors had to be taken care of in the implementation; these are described in the Appendix.
Reference: [13] <author> Satya Gupta, Stuart Hawkinson, and Bruce Baxter. </author> <title> A binary interleaved algorithm for complete exchange on a mesh architecture. </title> <type> Technical report, </type> <institution> Intel Corporation, </institution> <year> 1993. </year> <type> Personal Communication. </type>
Reference-contexts: The latter has been shown to be faster than the former. Sundar et al. [24] proposed another combining algorithm called Cyclic Exchange, which recursively divides the mesh into quadrants. (Such an algorithm was also proposed independently by Gupta et al. <ref> [13] </ref>.) This was demonstrated to be faster than Quadrant Exchange for a wide range of mesh sizes and data block sizes. The direct exchange and the indirect (combining) approach have complementary strengths.
Reference: [14] <author> S. Lennart Johnsson and Ching-Tien Ho. </author> <title> Optimum broadcasting and personalized communication in hypercubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(9) </volume> <pages> 1249-1268, </pages> <month> September </month> <year> 1989. </year>
Reference-contexts: Past approaches to performing complete exchange on 2D meshes have taken one of two distinct approaches. The direct exchange approach involves each processor directly sending a block of data to every other processor in the system. For example, the Optimal algorithm for hypercubes <ref> [14] </ref>, in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. [28, 27] evaluate algorithms that take this approach. <p> A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24].
Reference: [15] <author> M. Kaufmann, J.F. Sibeyn, and T. Suel. </author> <title> Derandomizing algorithms for routing and sorting on meshes. </title> <booktitle> Proceedings of the 5th Symposium on Discrete Algorithms, </booktitle> <pages> pages 69-79, </pages> <year> 1994. </year>
Reference-contexts: Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting <ref> [2, 1, 15, 22] </ref>. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17].
Reference: [16] <author> Y.-D. Lyuu and E. Schenfeld. </author> <title> Total exchange on a reconfigurable parallel architecture. </title> <booktitle> Proceedings of the 5th IEEE Symposium on Parallel and Distributed Processing, </booktitle> <pages> pages 2-10, </pages> <year> 1993. </year>
Reference-contexts: The complete exchange problem has been extensively studied on various topologies such as hypercubes [14, 6, 7, 5, 1, 19, 26] and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures <ref> [16, 18] </ref> with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19].
Reference: [17] <author> Philip K. McKinley, Yih-jia Tsai, and David F. Robinson. </author> <title> A survey of collective communication in wormhole-routed massively parallel computers. </title> <type> Technical Report MSU-CPS-94-35, </type> <institution> Michigan State University, </institution> <month> June </month> <year> 1994. </year> <month> ftp://ftp.cps.msu.edu/pub/crg/PAPERS/msu-cps-94-35.ps.Z. </month>
Reference-contexts: Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in <ref> [17] </ref>. Multiphase algorithms have been proposed for the hypercube [7] and these same algorithms have been implemented on a 2D mesh [8]. This paper has several features that distinguish it from past studies. It hybridizes two algorithms that have been specifically formulated for meshes: Cyclic Exchange and Direct Exchange.
Reference: [18] <author> S.R. Ohring and S.K. Das. </author> <title> Efficient communication in the folded Petersen interconnection networks. </title> <booktitle> Proceedings of the 6th International Parallel Architectures and Languages Europe Conference, </booktitle> <pages> pages 25-36, </pages> <year> 1994. </year>
Reference-contexts: The complete exchange problem has been extensively studied on various topologies such as hypercubes [14, 6, 7, 5, 1, 19, 26] and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures <ref> [16, 18] </ref> with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19].
Reference: [19] <author> T. Schmiermund and S.R. Seidel. </author> <title> A communication model for the intel iPSC/2. </title> <type> Technical Report CS-TR 9002, </type> <institution> Dept. of Computer Science, Michigan Tech. University, </institution> <month> April </month> <year> 1990. </year>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers <ref> [29, 6, 19] </ref>. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22]. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries.
Reference: [20] <author> Herbert Schwetman. </author> <title> Introduction to process-oriented simulation and CSIM. </title> <booktitle> Proceedings of the Winter Simulation Conference, </booktitle> <year> 1990. </year>
Reference-contexts: The results of the simulation study are presented in this section and those of the implementation in Section 8. The performance of CE, DE and their hybrids, with and without the use of barriers, were studied using simulation. The simulator was written in C, using the CSIM simulation package <ref> [20] </ref>. It models a wormhole-routed network with k-ary n-cube topology, at the flit level in detail. The simulator reports the completion time, the average latency of all messages and the average ideal (contention-free) latency. Several parameters were varied for the simulation study using a combinatorial design.
Reference: [21] <author> David S. Scott. </author> <title> Efficient all-to-all communication patterns in hypercube and mesh topologies. </title> <booktitle> Proceedings of the 6th Conference on Distributed Memory Concurrent Computers, </booktitle> <pages> pages 398-403, </pages> <year> 1991. </year>
Reference-contexts: For example, the Optimal algorithm for hypercubes [14], in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. [28, 27] evaluate algorithms that take this approach. Scott <ref> [21] </ref> has proven that, in an a fi a mesh, the number of contention-free communication steps, each of which overlaps messages between several processor pairs, must be at least 1 4 a 3 . <p> The paper also investigates the use of barriers, implemented either in hardware or software, to reduce contention, thereby improving performance. A counter-intuitive experimental observation is presented and explained, where higher message startup costs actually reduce completion 3 time. The paper is organized as follows. Section 2 describes Direct Exchange <ref> [21] </ref> and presents an analytical model which is applicable when the algorithmic steps execute in synchrony (as in an SIMD architecture or in an MIMD architecture with barrier synchronization between steps). Section 3 presents Cyclic Exchange and presents analytical models for it, both with and without the assumption of synchrony. <p> a flit to cross a mesh link t s Message startup overhead K the number of steps in a hybrid algorithm that are carried out with Direct Exchange p logarithm of the mesh size i.e. mesh size is 2 p fi 2 p 2 Direct Exchange There are several algorithms <ref> [21, 28, 27] </ref> for complete exchange that schedule a direct communication between every pair of processors. The main issues in this approach are the large number of message startups and contention for the central links of the mesh, which form a bottleneck. <p> are a 2 2 nodes on either half of the mesh, so that a 4 4 data blocks need to cross the central links, but there are only a central links; therefore there need to be at least a 3 4 sequential steps. 2.1 The methodology of direct exchange Scott <ref> [21] </ref> presented a scheme to generate complete exchange algorithms which achieve the above lower bound when a is a multiple of 4. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture <ref> [9, 21, 28, 27, 24] </ref>. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22].
Reference: [22] <author> T. Suel. </author> <title> Routing and sorting on meshes with row and column buses. </title> <type> Technical Report UTA//CS-TR-94-09, </type> <institution> Dept. of Computer Sciences, University of Texas at Austin, </institution> <month> October </month> <year> 1994. </year> <month> 37 </month>
Reference-contexts: Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting <ref> [2, 1, 15, 22] </ref>. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries. The question of performing collective communication efficiently has been addressed in [3, 4]. A survey of collective communication algorithms, including those for complete exchange, is given in [17].
Reference: [23] <author> Young-Joo Suh and Sudhakar Yalamanchili. </author> <title> Algorithms for all-to-all personalized exchange in 2D and 3D tori. </title> <booktitle> Proceedings of the 10th International Parallel Processing Symposium, </booktitle> <pages> pages 808-814, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes [14, 6, 7, 5, 1, 19, 26] and tori <ref> [23] </ref>. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24].
Reference: [24] <author> N.S. Sundar, D.N. Jayasimha, D.K. Panda, and P. Sadayappan. </author> <title> Complete exchange in 2D meshes. </title> <booktitle> Proceedings of the Scalable High Performance Computing Conference, </booktitle> <pages> pages 406-413, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: For example, Bokhari and Berryman [9] developed two algorithms that use this approach called Binary Exchange and Quadrant Exchange. Binary Exchange recursively divides the mesh into halves while Quadrant Exchange organizes the mesh in quadrants. The latter has been shown to be faster than the former. Sundar et al. <ref> [24] </ref> proposed another combining algorithm called Cyclic Exchange, which recursively divides the mesh into quadrants. (Such an algorithm was also proposed independently by Gupta et al. [13].) This was demonstrated to be faster than Quadrant Exchange for a wide range of mesh sizes and data block sizes. <p> Q then forwards the appropriate data blocks to the various submeshes within that submesh. This gives a recursive structure to the combining algorithms known today. The Cyclic Exchange (CE) algorithm <ref> [24] </ref> works on a 2D circuit-switched or wormhole-routed mesh. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture <ref> [9, 21, 28, 27, 24] </ref>. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22].
Reference: [25] <author> N.S. Sundar, D.N. Jayasimha, D.K. Panda, and P. Sadayappan. </author> <title> Hybrid direct/indirect algorithms for complete exchange in 2D meshes. </title> <type> Technical Report OSU-CISRC-12/95-TR52, </type> <institution> Dept. of Computer and Information Science, The Ohio State University, </institution> <year> 1995. ftp://ftp.cis.ohio-state.edu/pub/tech-report/1995/TR52.ps.gz. </year>
Reference: [26] <author> R. </author> <title> Take. A routing method for all-to-all burst on hypercube networks. </title> <booktitle> Proceedings of the 35th National Conference of Information Processing Society of Japan, </booktitle> <pages> pages 151-152, </pages> <year> 1987. </year> <title> (In Japanese). </title>
Reference-contexts: A review of past literature and their differences in approach with this work is provided in this section. The complete exchange problem has been extensively studied on various topologies such as hypercubes <ref> [14, 6, 7, 5, 1, 19, 26] </ref> and tori [23]. Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24].
Reference: [27] <author> Rajeev Thakur and Alok Choudhary. </author> <title> All-to-all communication on meshes with wormhole routing. </title> <booktitle> Proceedings of the 8th International Parallel Processing Symposium, </booktitle> <pages> pages 561-565, </pages> <month> April </month> <year> 1994. </year> <note> http://www.mcs.anl.gov/home/thakur/ipps94allto-all.ps. </note>
Reference-contexts: The direct exchange approach involves each processor directly sending a block of data to every other processor in the system. For example, the Optimal algorithm for hypercubes [14], in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. <ref> [28, 27] </ref> evaluate algorithms that take this approach. Scott [21] has proven that, in an a fi a mesh, the number of contention-free communication steps, each of which overlaps messages between several processor pairs, must be at least 1 4 a 3 . <p> a flit to cross a mesh link t s Message startup overhead K the number of steps in a hybrid algorithm that are carried out with Direct Exchange p logarithm of the mesh size i.e. mesh size is 2 p fi 2 p 2 Direct Exchange There are several algorithms <ref> [21, 28, 27] </ref> for complete exchange that schedule a direct communication between every pair of processors. The main issues in this approach are the large number of message startups and contention for the central links of the mesh, which form a bottleneck. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture <ref> [9, 21, 28, 27, 24] </ref>. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22].
Reference: [28] <author> Rajeev Thakur, Alok Choudhary, and Geoffrey Fox. </author> <title> Complete exchange on a wormhole routed mesh. </title> <type> Technical Report SCCS-505, </type> <institution> Northeast Parallel Architectures Center, Syracuse University, </institution> <month> July </month> <year> 1993. </year> <note> http://www.npac.syr.edu/techreports/html/0500/abs-0505.html. </note>
Reference-contexts: The direct exchange approach involves each processor directly sending a block of data to every other processor in the system. For example, the Optimal algorithm for hypercubes [14], in which every processor exchanges data with processor myid i in step i, can be adapted for meshes. Thakur et al. <ref> [28, 27] </ref> evaluate algorithms that take this approach. Scott [21] has proven that, in an a fi a mesh, the number of contention-free communication steps, each of which overlaps messages between several processor pairs, must be at least 1 4 a 3 . <p> a flit to cross a mesh link t s Message startup overhead K the number of steps in a hybrid algorithm that are carried out with Direct Exchange p logarithm of the mesh size i.e. mesh size is 2 p fi 2 p 2 Direct Exchange There are several algorithms <ref> [21, 28, 27] </ref> for complete exchange that schedule a direct communication between every pair of processors. The main issues in this approach are the large number of message startups and contention for the central links of the mesh, which form a bottleneck. <p> Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture <ref> [9, 21, 28, 27, 24] </ref>. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers [29, 6, 19]. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22].
Reference: [29] <author> Rajeev Thakur, Ravi Ponnusamy, Alok Choudhary, and Geoffrey Fox. </author> <title> Complete exchange on the CM-5 and Touchstone Delta. </title> <journal> Journal of Supercomputing, </journal> <volume> 8 </volume> <pages> 305-328, </pages> <year> 1995. </year> <title> Related WWW URLs * PVM : http://www.epm.ornl.gov/pvm/pvm_home.html * Cray T3D : http://www.cray.com/PUBLIC/product-info/mpp/CRAY_T3D.html </title>
Reference-contexts: Solutions have also been formulated for linear arrays and rings [10] and other architectures [16, 18] with circuit-switching. Several studies have focussed on the 2D mesh architecture [9, 21, 28, 27, 24]. Another class of studies has aimed at an efficient solution to complete exchange on specific parallel computers <ref> [29, 6, 19] </ref>. Many papers have analyzed the problem in the context of specific applications such as parallel sorting [2, 1, 15, 22]. Efficient implementation of complete exchange is a significant issue for designers of collective communication libraries.
References-found: 29

