URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/arup/pub/www/papers/mobile94.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/arup/pub/www/resume.html
Root-URL: 
Title: Mobility: A Medium for Computation, Communication, and Control  
Author: Arup Mukherjee Daniel P. Siewiorek 
Address: 5000 Forbes Avenue Pittsburgh, PA 15213  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: The advent of ubiquitous mobile computing has widely been regarded as the convergence of pager-like communications technology and laptop-like computational power, enabling applications that span both realms of functionality. However, ubiquitous mobile computing, coupled with the proliferation of microprocessor-controlled appliances and networking, creates another important new application arena: that in which mobile computers act as controllers for, and interfaces to, appliances and services in the surrounding environment. This position paper explores the convergence of computation with communications and control applications, and the models of mobile computing that consequently arise. Established applications and models are positioned relative to this framework, and hitherto unexplored control-based models of mobile computation are described. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. A. Landay and T. </author> <title> Kaufmann, </title> <booktitle> User Interface Issues in Mobile Computing, in Proceedings of the 4th IEEE Workshop on Workstation Operating Systems, </booktitle> <address> (Napa, CA), </address> <pages> pp. 40-47, </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Mobile computing technology is often (e.g., in <ref> [1] </ref>) regarded as the convergence of tools from two distinct walks of life, namely communications (e.g., telephones and pagers) and data manipulation or computation 1 (e.g., laptop computers).
Reference: [2] <author> M. Satyanarayanan, J. J. Kistler, L. B. Mummert, M. R. Ebling, P. Kumar, and Q. Lu, </author> <title> Experience with Disconnected Operation in a Mobile Environment, </title> <booktitle> in Proceedings of the Usenix Mobile and Location-Independent Computing Symposium, </booktitle> <address> (Cambridge, MA), </address> <publisher> Usenix, </publisher> <month> August </month> <year> 1993. </year>
Reference-contexts: Many mobile applications built to date reflect this heritage, and much effort has been devoted to enhancing desktop applications to reap the benefits of mobility (e.g. via the Coda filesystem <ref> [2] </ref>), and to extending pagers and mobile telephones to exploit additional computing power (e.g., PARCtabs used to read e-mail [3]). Even the computational models underlying these applications usually focus on how exactly the data manipulation performed by an application is partitioned by the communication it performs. <p> The workstation model has also spurred the development of submodels converting class I desktop applications to class IV mobile applications, with varying degrees of application awareness (e.g., low awareness in the case of Coda <ref> [2] </ref>, and high awareness in [5]). 4 Control-oriented models Control-oriented applications, like communications-oriented applications, must, by definition, span at least two entities, although the two entities need not be physically separated.
Reference: [3] <author> B. N. Schilit, N. Adams, R. Gold, M. M. Tso, and R. </author> <title> Want, </title> <booktitle> The PARCTAB Mobile Computing System, in Proceedings of the 4th IEEE Workshop on Workstation Operating Systems, </booktitle> <address> (Napa, CA), </address> <publisher> IEEE, </publisher> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Many mobile applications built to date reflect this heritage, and much effort has been devoted to enhancing desktop applications to reap the benefits of mobility (e.g. via the Coda filesystem [2]), and to extending pagers and mobile telephones to exploit additional computing power (e.g., PARCtabs used to read e-mail <ref> [3] </ref>). Even the computational models underlying these applications usually focus on how exactly the data manipulation performed by an application is partitioned by the communication it performs. However, mobile computation can also be viewed as the convergence of remote controls and laptop computers.
Reference: [4] <author> D. Duchamp, </author> <title> Issues in Wireless Mobile Computing, </title> <booktitle> in Proceedings of the Third Workshop on Workstation Operating Systems, </booktitle> <address> (Key Biscayne, FL), </address> <publisher> IEEE, </publisher> <month> April </month> <year> 1992. </year>
Reference-contexts: However, on current mobile computing devices, which have limited communications capability, the resolution of this issue is the characteristic that differentiates models. Two commonly cited models, the terminal and workstation models, as described by <ref> [4] </ref>, represent the two extremes of partitioning. The terminal model of mobile computing views mobile machines as input devices, which relay all data to a remote server (i.e. on the other end of the communication channel). No data manipulation is done on the mobile unit itself.
Reference: [5] <author> D. Goldberg and M. Tso, </author> <title> How to Program Networked Portable Computers, </title> <booktitle> in Proceedings of the 4th IEEE Workshop on Workstation Operating Systems, </booktitle> <address> (Napa, CA), </address> <pages> pp. 30-33, </pages> <publisher> IEEE, </publisher> <month> October </month> <year> 1993. </year>
Reference-contexts: code, (<ref> [5] </ref>) have been considered, but have not become very popular. The workstation model has also spurred the development of submodels converting class I desktop applications to class IV mobile applications, with varying degrees of application awareness (e.g., low awareness in the case of Coda [2], and high awareness in [5]). 4 Control-oriented models Control-oriented applications, like communications-oriented applications, must, by definition, span at least two entities, although the two entities need not be physically separated. However, the distinction between controller and controllee ensures that there is a well-defined interface, or control protocol, between the two.
Reference: [6] <author> M. Satyanarayanan, </author> <title> Mobile Computing: Past, Present, & Future, </title> <booktitle> in Proceedings of the IBM Workshop on Mobile Computing, </booktitle> <institution> (Austin, TX), IBM, </institution> <month> January </month> <year> 1994. </year>
Reference-contexts: As you walk, you point to items of interest on the map. A short video describing [...] the site is displayed, and the accompanying audio commentary is heard on the headphones. ... <ref> [6] </ref> Although the above scenario might seem like an in nodes of a graph, with an arbitrary number of partitions induced by communication.
Reference: [7] <author> B. R. Badrinath, A. Bakre, T. Imielinski, and R. Marantz, </author> <title> Handling Mobile Clients: A Case for Indirect Interaction, </title> <booktitle> in Proceedings of the 4th IEEE Workshop on Workstation Operating Systems, </booktitle> <pages> pp. 91-97, </pages> <publisher> IEEE, </publisher> <year> 1993. </year>
Reference: [8] <author> B. N. Schilit, M. M. Theimer, and B. B. Welch, </author> <title> Customizing Mobile Applications, </title> <booktitle> in Proceedings of the Usenix Mobile and Location-Independent Computing Symposium, </booktitle> <address> (Cam-bridge, MA), </address> <pages> pp. 129-138, </pages> <publisher> Usenix, </publisher> <month> August </month> <year> 1993. </year>
References-found: 8

