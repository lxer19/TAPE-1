URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/Moller_Polinomial_CFP.ps.gz
Refering-URL: http://www.cse.psu.edu/~catuscia/teaching/cg520/papers_and_books/
Root-URL: http://www.cse.psu.edu
Title: A polynomial algorithm for deciding bisimilarity of normed context-free processes  
Author: Yoram Hirshfeld Mark Jerrum Faron Moller 
Note: Dedicated to Robin Milner on the occasion of his 60th birthday.  
Address: The King's Buildings, Mayfield Road, Edinburgh EH9 3JZ, Scotland  
Affiliation: Department of Computer Science, University of Edinburgh,  
Abstract: 2 = NP NP : their algorithm guesses a proof of equivalence and validates this proof in polynomial time using oracles freely answering questions which are in NP. In this paper we improve on this result by presenting a polynomial-time algorithm which solves this problem. As a corollary, we have a polynomial algorithm for the equivalence problem for simple context-free grammars.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.M. Baeten, J.A. Bergstra and J.W. Klop. </author> <title> Decidability of bisimulation equivalence for processes generating context-free languages. </title> <booktitle> In Proceedings of PARLE 87, </booktitle> <editor> J.W. de Bakker, A.J. Nijman, P.C. Treleaven (eds), </editor> <booktitle> Lecture Notes in Computer Science 259, </booktitle> <address> pp93-114, </address> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: However, Christensen, Huttel and Stirling recently proved the remarkable result that bisimilarity is in fact decidable over the class of context-free processes [6], those processes which can be defined by context-free grammars in Greibach normal form. Previously this result was shown by Baeten, Bergstra and Klop <ref> [1] </ref> for the simpler case of normed context-free processes, those defined by grammars in which all variables may rewrite to finite words. It has also been demonstrated that no other equivalence in Glabbeek's linear-time/branching-time spectrum [7] is decidable over this class [9], which places bisimilarity in a favourable light indeed. <p> Viewed less as a theoretical question, decidability is only half of the story of a property of systems; in order to be applicable the decision procedure must be computationally tractable as well. The techniques of <ref> [1, 6] </ref> require extensive searches, making these unsuitable for implementation. <p> The techniques of [1, 6] require extensive searches, making these unsuitable for implementation. Though there has been little success in simplifying the technique of [6] for general context-free processes, there have been several simplifications to the proof of <ref> [1] </ref> for normed processes [2, 8, 14] which exploit certain decomposability properties enjoyed within this subclass but not in general. However, the best of these techniques still only yields an exponential-time algorithm. <p> If each such ff is of length at most k, then it is in k-GNF. The class of CFGs in GNF corresponds to the class of processes defined by guarded systems of recursive equations over the basic process algebra (BPA) of <ref> [1] </ref>. Every CFG in GNF in this sense defines a (context-free) process as follows. <p> These are all straightforward. 2 The main result on which we shall build regarding this process class, originally proved in <ref> [1] </ref>, is given by the following. Theorem 2.7 Bisimilarity is decidable for normed context-free processes. What we provide in this paper is a procedure of relatively low complexity for deciding bisimilarity of normed context-free processes.
Reference: [2] <author> D. Caucal. Graphes canoniques des graphes algebriques. </author> <note> Informatique Theorique et Applications (RAIRO) 24(4), pp339-352, </note> <year> 1990. </year>
Reference-contexts: The techniques of [1, 6] require extensive searches, making these unsuitable for implementation. Though there has been little success in simplifying the technique of [6] for general context-free processes, there have been several simplifications to the proof of [1] for normed processes <ref> [2, 8, 14] </ref> which exploit certain decomposability properties enjoyed within this subclass but not in general. However, the best of these techniques still only yields an exponential-time algorithm. <p> must have that ff p fi q , Hence by Lemma 2.11 we have that ff 1 ff p1 fi 1 fi q1 from which our result then follows by Lemma 2.10. 2 One further result concerning bisimilarity which we rely on pertains to Caucal bases, otherwise known as self-bisimulations <ref> [2] </ref>. 6 Definition 2.14 For any binary relation B over processes, let B j be the congruence closure of B wrt sequential composition.
Reference: [3] <author> D. Caucal. </author> <title> A fast algorithm to decide on the equivalence of stateless DPDA. </title> <note> Infor-matique Theorique et Applications (RAIRO) 27(1), pp23-48, </note> <year> 1993. </year>
Reference-contexts: Prior to the current paper, the most efficient decision procedure known was due to Caucal <ref> [3] </ref>, and had time complexity O (n 3 v). It is important to note here that v is in general exponential in n. The remainder of the paper is organised as follows. <p> The time complexity was improved to O (n 3 v) by Caucal <ref> [3] </ref>. Since v is in general exponential in n, the above decision procedures have, respectively, doubly exponential and singly exponential time complexities. To obtain a polynomial-time decision procedure we merely note that, in the case of simple grammars, language equivalence and bisimulation equivalence coincide.
Reference: [4] <author> S. Christensen, Y. Hirshfeld and F. Moller. </author> <title> Decomposability, decidability and axioma-tisability for bisimulation equivalence on basic parallel processes. </title> <booktitle> In Proceedings of LICS93. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: This result improves considerably on the time complexity of decision procedures that can be extracted from from the tableau systems of Christensen, Hirshfeld and Moller <ref> [4, 5] </ref>. 14
Reference: [5] <author> S. Christensen, Y. Hirshfeld and F. Moller. </author> <title> Bisimulation equivalence is decidable for basic parallel processes. </title> <booktitle> In Proceedings of CONCUR93, </booktitle> <editor> E. Best (ed), </editor> <booktitle> Lecture Notes in Computer Science 715, </booktitle> <address> pp143-157, </address> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: This result improves considerably on the time complexity of decision procedures that can be extracted from from the tableau systems of Christensen, Hirshfeld and Moller <ref> [4, 5] </ref>. 14
Reference: [6] <author> S. Christensen, H. Huttel and C. Stirling. </author> <title> Bisimulation equivalence is decidable for all context-free processes. </title> <booktitle> In Proceedings of CONCUR 92, </booktitle> <editor> W.R. Cleaveland (ed), </editor> <booktitle> Lecture Notes in Computer Science 630, </booktitle> <address> pp138-147. </address> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: This theoretical notion is put into practice particularly within Milner's Calculus of Communicating Systems (CCS) [18]. This equivalence is undecidable over the whole calculus CCS. However, Christensen, Huttel and Stirling recently proved the remarkable result that bisimilarity is in fact decidable over the class of context-free processes <ref> [6] </ref>, those processes which can be defined by context-free grammars in Greibach normal form. Previously this result was shown by Baeten, Bergstra and Klop [1] for the simpler case of normed context-free processes, those defined by grammars in which all variables may rewrite to finite words. <p> Viewed less as a theoretical question, decidability is only half of the story of a property of systems; in order to be applicable the decision procedure must be computationally tractable as well. The techniques of <ref> [1, 6] </ref> require extensive searches, making these unsuitable for implementation. <p> The techniques of [1, 6] require extensive searches, making these unsuitable for implementation. Though there has been little success in simplifying the technique of <ref> [6] </ref> for general context-free processes, there have been several simplifications to the proof of [1] for normed processes [2, 8, 14] which exploit certain decomposability properties enjoyed within this subclass but not in general. However, the best of these techniques still only yields an exponential-time algorithm.
Reference: [7] <author> R.J. van Glabbeek. </author> <title> The linear time-branching time spectrum. </title> <booktitle> In Proceedings of CONCUR 90, </booktitle> <editor> J. Baeten, J.W. Klop (eds), </editor> <booktitle> Lecture Notes in Computer Science 458, </booktitle> <address> pp278-297. </address> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Previously this result was shown by Baeten, Bergstra and Klop [1] for the simpler case of normed context-free processes, those defined by grammars in which all variables may rewrite to finite words. It has also been demonstrated that no other equivalence in Glabbeek's linear-time/branching-time spectrum <ref> [7] </ref> is decidable over this class [9], which places bisimilarity in a favourable light indeed. Viewed less as a theoretical question, decidability is only half of the story of a property of systems; in order to be applicable the decision procedure must be computationally tractable as well.
Reference: [8] <author> J.F. Groote. </author> <title> A short proof of the decidability of bisimulation for normed BPA processes. </title> <journal> Information Processing Letters 42, </journal> <volume> pp167-171, </volume> <year> 1991. </year>
Reference-contexts: The techniques of [1, 6] require extensive searches, making these unsuitable for implementation. Though there has been little success in simplifying the technique of [6] for general context-free processes, there have been several simplifications to the proof of [1] for normed processes <ref> [2, 8, 14] </ref> which exploit certain decomposability properties enjoyed within this subclass but not in general. However, the best of these techniques still only yields an exponential-time algorithm.
Reference: [9] <author> J.F. Groote and H. Huttel. </author> <title> Undecidable equivalences for basic process algebra. </title> <booktitle> Information and Computation, </booktitle> <year> 1994. </year>
Reference-contexts: It has also been demonstrated that no other equivalence in Glabbeek's linear-time/branching-time spectrum [7] is decidable over this class <ref> [9] </ref>, which places bisimilarity in a favourable light indeed. Viewed less as a theoretical question, decidability is only half of the story of a property of systems; in order to be applicable the decision procedure must be computationally tractable as well.
Reference: [10] <author> Y. Hirshfeld, M. Jerrum and F. Moller, </author> <title> A polynomial algorithm for deciding bisim-ulation equivalence of normed Basic Parallel Processes, </title> <institution> Department of Computer Science Research Report, University of Edinburgh. </institution> <note> (In preparation.) </note>
Reference-contexts: Very recently the authors have also developed a polynomial-time algorithm to decide bisimulation equivalence of an analogue of BPA (called BPP) in which commutative (par allel) composition replaces noncommutative (sequential) composition <ref> [10] </ref>. This result improves considerably on the time complexity of decision procedures that can be extracted from from the tableau systems of Christensen, Hirshfeld and Moller [4, 5]. 14
Reference: [11] <author> Y. Hirshfeld and F. Moller. </author> <title> A fast deterministic algorithm for deciding bisimilarity of normed context-free processes. </title> <institution> Department of Computer Science Research Report. University of Edinburgh, </institution> <year> 1994. </year>
Reference-contexts: The outer (existential) quantification is dismissed by employing a deterministic procedure for constructing the decomposition function g fl . The original motivation for the work presented here was to find an efficient deterministic implementation of the problem. This aspect is explored in <ref> [11] </ref>, where we explore an optimised version of the algorithm underlying the co-NP algorithm. <p> The algorithm runs in time which is linearly bounded by the norm of the processes being compared, and although this is potentially exponential in the size of the problem, it is still worth considering to be efficient. Indeed, with the optimisations described in <ref> [11] </ref>, it is reasonable to expect that our polynomial-time algorithm may well be less efficient in practice than this exponential algorithm.
Reference: [12] <author> Y. Hirshfeld and F. Moller. </author> <title> Algorithms for Normed Processes. </title> <booktitle> In Proceedings of the VIII Banff Higher-Order Workshop, </booktitle> <month> August, </month> <year> 1994. </year>
Reference: [13] <author> J.E. Hopcroft and J.D. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison Wesley, </publisher> <year> 1979. </year> <month> 15 </month>
Reference-contexts: A process is weakly normed iff its initial state has a finite norm, and it is normed iff all of its states have finite norm. The class of processes in which we shall be interested is a subclass of those generated by context-free grammars, as defined for example in <ref> [13] </ref> as follows.
Reference: [14] <author> H. Huttel and C. Stirling. </author> <title> Actions speak louder than words: proving bisimilarity for context-free processes. </title> <booktitle> In Proceedings of LICS'91, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <address> pp376-386, </address> <year> 1991. </year>
Reference-contexts: The techniques of [1, 6] require extensive searches, making these unsuitable for implementation. Though there has been little success in simplifying the technique of [6] for general context-free processes, there have been several simplifications to the proof of [1] for normed processes <ref> [2, 8, 14] </ref> which exploit certain decomposability properties enjoyed within this subclass but not in general. However, the best of these techniques still only yields an exponential-time algorithm.
Reference: [15] <author> D.T. Huynh and L. Tian. </author> <title> Deciding bisimilarity of normed context-free processes is in P 2 . Journal of Theoretical Computer Science 123, </title> <address> pp183-197, </address> <year> 1994. </year>
Reference-contexts: However, the best of these techniques still only yields an exponential-time algorithm. Huynh and Tian <ref> [15] </ref> investigated the problem from a structural point of view, and obtained the best upper bound previously known on its complexity. <p> Thus language equivalence of simple grammars may be checked in polynomial time by the procedure presented in the previous section. 6 Conclusions We have demonstrated a polynomial-time algorithm for deciding bisimilarity between normed context-free processes. Previously, the best complexity bound, due to Huynh and Tian <ref> [15] </ref>, put the problem in P 2 = NP NP . Our approach is initially similar to their proof of membership in P 2 .
Reference: [16] <author> D.E. Knuth, J.H. Morris, and V.R. Pratt, </author> <title> Fast pattern matching in strings, </title> <note> SIAM Journal on Computing 6 (1977), pp323-350. </note>
Reference: [17] <author> A. Korenjak and J. Hopcroft. </author> <title> Simple deterministic languages. </title> <booktitle> In Proceedings of 7th IEEE Switching and Automata Theory conference. </booktitle> <address> pp36-46, </address> <year> 1966. </year>
Reference-contexts: As a corollary, we obtain the first polynomial-time algorithm for deciding (language) equivalence of simple context-free grammars. (See Section 5 for a definition of a "simple" grammar.) The equivalence problem for simple grammars was first considered in the 1960s by Koren-jak and Hopcroft <ref> [17] </ref>, who presented a decision procedure with time complexity O (n v ), where n is the size of the grammar (i.e., the total length in symbols of all the productions) and v is the shortest word generated by the grammar. <p> The equivalence problem for simple grammars was first considered by Korenjak and Hopcroft <ref> [17] </ref>, who presented a decision procedure with time complexity O (n v ), where n is the size of the grammar (i.e., the total length in symbols of all the productions) and v is the shortest word generated by the grammar.
Reference: [18] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: In the realm of process algebras, a fundamental idea is that of bisimilarity [20], a notion of equivalence which is strictly finer than language equivalence. This theoretical notion is put into practice particularly within Milner's Calculus of Communicating Systems (CCS) <ref> [18] </ref>. This equivalence is undecidable over the whole calculus CCS. However, Christensen, Huttel and Stirling recently proved the remarkable result that bisimilarity is in fact decidable over the class of context-free processes [6], those processes which can be defined by context-free grammars in Greibach normal form.
Reference: [19] <author> R. Milner and F. Moller. </author> <title> Unique decomposition of processes. </title> <journal> Journal of Theoretical Computer Science 107, </journal> <volume> pp357-363, </volume> <year> 1993. </year>
Reference-contexts: Lemma 2.10 If ff fi and ff 0 fi 0 then ffff 0 fifi 0 . Proof It is straightforward to show that n (ffff 0 ; fifi 0 ) : ff fi; ff 0 fi 0 o is a bisimulation. 2 More importantly, motivated by <ref> [19] </ref> we have a unique prime decomposition result for weakly normed (and hence normed) processes. To demonstrate this we first prove a cancellation lemma. Lemma 2.11 If fffl fifl and fl is weakly normed, then ff fi.
Reference: [20] <author> D.M.R. Park. </author> <title> Concurrency and Automata on Infinite Sequences. </title> <booktitle> Lecture Notes in Computer Science 104, </booktitle> <address> pp168-183, </address> <publisher> Springer Verlag, </publisher> <year> 1981. </year>
Reference-contexts: However, these results are generally negative, such as the classic result regarding the undecidability of language equivalence over context-free grammars. In the realm of process algebras, a fundamental idea is that of bisimilarity <ref> [20] </ref>, a notion of equivalence which is strictly finer than language equivalence. This theoretical notion is put into practice particularly within Milner's Calculus of Communicating Systems (CCS) [18]. This equivalence is undecidable over the whole calculus CCS. <p> Clearly every normed CFG in GNF gives rise to a normed process. We can also see immediately the following basic fact regarding processes. Lemma 2.4 norm (fffi) = norm (ff) + norm (fi). The notion of process equivalence in which we are interested is bisimulation equivalence <ref> [20] </ref> as defined as follows. 4 Definition 2.5 Let (S; A; !; s 0 ) be a process.
Reference: [21] <author> L.J. Stockmeyer. </author> <title> The polynomial time hierarchy. </title> <journal> Journal of Theoretical Computer Science 3, </journal> <volume> pp1-22, </volume> <year> 1977. </year>
Reference-contexts: They showed that the problem of deciding bisimilarity of normed context-free processes lies in the class P 2 = NP NP , the second level of the polynomial-time hierarchy of Meyer and Stock-meyer <ref> [21] </ref>. Their algorithm non-deterministically guesses a proof of the equivalence of two processes, and then attempts to validate the proof in polynomial time using oracles freely answering questions which are in NP.
References-found: 21

