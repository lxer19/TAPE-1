URL: http://graphics.stanford.edu/~slusallek/Papers/pg98.ps.gz
Refering-URL: http://graphics.stanford.edu/~slusallek/cv.html
Root-URL: http://www.cs.stanford.edu
Email: fstamminger,slusallek,seidelg@informatik.uni-erlangen.de  
Title: Bounded Clustering Finding Good Bounds on Clustered Light Transport  
Author: Marc Stamminger, Philipp Slusallek, and Hans-Peter Seidel 
Affiliation: Computer Graphics Group, University of Erlangen  
Abstract: Clustering is a very efficient technique to apply finite element methods to the computation of radiosity solutions of complex scenes. Both computation time and memory consumption can be reduced dramatically by grouping the primitives of the input scene into a hierarchy of clusters and allowing for light exchange between all levels of this hierarchy. However, problems can arise due to clustering, when gross approximations about a cluster's content result in unsatisfactory solutions or unnecessary computations. In the clustering approach for diffuse global illumination described in this paper, light exchange between two objects | patches or clusters | is bounded by using geometrical and shading information provided by every object through a uniform interface. With this uniform view of various kinds of objects, comparable and reliable error bounds on the light exchange can be computed, which then guide a standard hierarchical radiosity algorithm. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Per H. Christensen, Dani Lischinski, Eric Stollnitz, and David H. Salesin. </author> <title> Clustering for glossy global illumination. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 16(1) </volume> <pages> 3-33, </pages> <month> January </month> <year> 1997. </year>
Reference-contexts: In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. Applying the same idea of adaptive subdivision to this unified hierarchy extends the speedup to the complete scene <ref> [16, 2, 13, 4, 1] </ref>. There are two major issues with any hierarchical method: the design of an efficient refiner for the adaptive subdivision and of an accurate estimator to compute the actual interaction coefficients. <p> An extension to clusters seems difficult. Smits et al. [16] estimate an upper bound on the form factor integrand by stochastically sampling the integrand. The obtained upper bound is mostly too pessimistic, because the intrinsic properties of a cluster such as self-occlusion are not accounted for. Christensen et al. <ref> [2, 1] </ref> extended the clustering ap proach to glossy surfaces. They also use conservative bounds on the interaction between two clusters. However, since in this approach clusters have been approximated as points these bounds are actually not conservative with respect to the original clusters that have finite extent. <p> Since nothing in the above framework prevents its application to non-diffuse environments, it would be interesting to extend the approach in this direction. The same framework could be applied to <ref> [1] </ref> and could be used to overcome their restriction to approximations with point clusters.
Reference: [2] <author> Per H. Christensen, Eric J. Stollnitz, David Salesin, and Tony D. DeRose. </author> <title> Wavelet radiance. </title> <booktitle> In Fifth Eurographics Workshop on Rendering, </booktitle> <pages> pages 287-301, </pages> <address> Darmstadt, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. Applying the same idea of adaptive subdivision to this unified hierarchy extends the speedup to the complete scene <ref> [16, 2, 13, 4, 1] </ref>. There are two major issues with any hierarchical method: the design of an efficient refiner for the adaptive subdivision and of an accurate estimator to compute the actual interaction coefficients. <p> An extension to clusters seems difficult. Smits et al. [16] estimate an upper bound on the form factor integrand by stochastically sampling the integrand. The obtained upper bound is mostly too pessimistic, because the intrinsic properties of a cluster such as self-occlusion are not accounted for. Christensen et al. <ref> [2, 1] </ref> extended the clustering ap proach to glossy surfaces. They also use conservative bounds on the interaction between two clusters. However, since in this approach clusters have been approximated as points these bounds are actually not conservative with respect to the original clusters that have finite extent.
Reference: [3] <author> Jo~ao L. D. Comba and Jorge Stolfi. </author> <title> Affine arithmetic and its applications to computer graphics. </title> <booktitle> In Anais do VII Sibgrapi, </booktitle> <pages> pages 9-18, </pages> <year> 1993. </year> <note> Available from http://www.dcc.unicamp.br/~stolfi/EXPORT/papers/affine-arith. </note>
Reference-contexts: The definition of addition, multiplication and division on the min/max-values is that of Interval Arithmetic [10]. Using Interval Arithmetic for our computations is certainly not optimal. We are optimistic that using Affine Artihmetic <ref> [3] </ref> instead may result in better range computations, as it has been shown for other rendering applications [8, 7]. The algorithm described below should be easy to transform. In the following, we describe how the light transport between two objects can be computed using the above definitions.
Reference: [4] <author> S. Gibson and R. J. Hubbold. </author> <title> Efficient hierarchical refinement and clustering for radiosity in complex environements. </title> <journal> Computer Graphics Forum, </journal> <volume> 15(5) </volume> <pages> 297-310, </pages> <month> dec </month> <year> 1996. </year>
Reference-contexts: In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. Applying the same idea of adaptive subdivision to this unified hierarchy extends the speedup to the complete scene <ref> [16, 2, 13, 4, 1] </ref>. There are two major issues with any hierarchical method: the design of an efficient refiner for the adaptive subdivision and of an accurate estimator to compute the actual interaction coefficients. <p> They also use conservative bounds on the interaction between two clusters. However, since in this approach clusters have been approximated as points these bounds are actually not conservative with respect to the original clusters that have finite extent. The refiner does not account for this fact either. Finally, in <ref> [4] </ref>, deterministic sampling at the receiver is used for the refiner. For patch-to-patch interactions, the illumination for some sample points at the receiver is computed analytically, which is only possible for very few types of sending geometries (e.g. polygons), and the variation of illumination values is used as refinement criterion. <p> A novel way of computing conservative bounds on reflectance described by procedural shaders by using affine arithmetic has been described in [8]. Sampling with mipmaps has been used in <ref> [4] </ref>. <p> Nevertheless it must be seen, that using interval arithmetic, the bounds are also wider than necessary and thus for non-critical cases not as tight as those obtained in particular by Gibson's method <ref> [4] </ref>. 3.5. Self-interaction As with all non-convex objects, we have to take into consideration self-interaction within the clusters, i.e. that a concave object illuminates itself. The question of how to compute such a self-form factor has only be treated marginally in previous publications. <p> Of course such a sampling scheme is not conservative anymore, because the results "total visibility" or "total occlusion" only mean that no sample ray was found prooving the opposite. If partial occlusion is detected, the minimum value of the transport is set to zero, as it is done in <ref> [4] </ref>. However, this simple approach does not deliver satisfactory results: because our algorithm computes conservative bounds for unoccluded light transport, these bounds are usually wider than necessary. Thus, decreasing the lower bound to zero does not relatively increase the error approximation as much as it should. <p> Clustered Light Source To show how a solution can be improved exploiting the benefits of our object interface, we computed a solution to a very simple scene of an empty room with a box light source emitting light only on one side. As also noticed by others (e.g. <ref> [4] </ref>), light sources inside a cluster are very likely to create artifacts that can be seen in Fig. 6 (left half). Because the box light is inside a cluster, the cluster exhibits a very nonuniform external appearance. <p> These problems are usually solved by putting light sources always on top of the clustering hierarchy, or by always refining clusters with light sources first <ref> [4] </ref>. In our approach, they can also be solved by computing better bounds on the light leaving the cluster.
Reference: [5] <author> Steven J. Gortler, Peter Schroder, Michael Cohen, and Pat M. Hanrahan. </author> <title> Wavelet radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27 </volume> <pages> 221-230, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: introduction of clustering, which extends the idea of hierarchically computing light exchange between objects in the environment. This resulted in a reduced computational complexity of O (n) or O (n log n) compared to the quadratic nature of the original algorithm. For early hierarchical algorithms <ref> [6, 5] </ref> this speedup was restricted to adaptive subdivision of input primitives. In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof.
Reference: [6] <author> Pat Hanrahan, David Salzman, and Larry Aupperle. </author> <title> A rapid hierarchical radiosity algorithm. </title> <booktitle> Computer Graphics (SIGGRAPH '91 Proceedings), </booktitle> <volume> 25(4) </volume> <pages> 197-206, </pages> <year> 1991. </year>
Reference-contexts: introduction of clustering, which extends the idea of hierarchically computing light exchange between objects in the environment. This resulted in a reduced computational complexity of O (n) or O (n log n) compared to the quadratic nature of the original algorithm. For early hierarchical algorithms <ref> [6, 5] </ref> this speedup was restricted to adaptive subdivision of input primitives. In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. <p> Previous Work In the original hierarchical radiosity method and many of its derivations, the estimated amount of transported light, i.e. exitant light at the receiver induced directly by the sender, is also used for the refiner, i.e. the amount of transported light is used as error approximation <ref> [6] </ref>. A very fast method to compute interactions between clusters is presented in [13], where clusters are approximated by isotropic volumetric objects. Again, the error is estimated by considering only the amount of transported light.
Reference: [7] <author> W. Heidrich and H.-P. Seidel. </author> <title> Ray-tracing procedural displacement shaders. </title> <booktitle> In Proceedings of Graphics Interface '98, </booktitle> <year> 1998. </year>
Reference-contexts: Using Interval Arithmetic for our computations is certainly not optimal. We are optimistic that using Affine Artihmetic [3] instead may result in better range computations, as it has been shown for other rendering applications <ref> [8, 7] </ref>. The algorithm described below should be easy to transform. In the following, we describe how the light transport between two objects can be computed using the above definitions. We start by computing the range of directions of all connecting rays of the sender P to the receiver Q.
Reference: [8] <author> Wolfgang Heidrich, Philipp Slusallek, and Hans-Peter Sei-del. </author> <title> Sampling procedural shaders using affine arithmetic. </title> <journal> ACM Transactions on Graphics, </journal> <year> 1998. </year>
Reference-contexts: Using Interval Arithmetic for our computations is certainly not optimal. We are optimistic that using Affine Artihmetic [3] instead may result in better range computations, as it has been shown for other rendering applications <ref> [8, 7] </ref>. The algorithm described below should be easy to transform. In the following, we describe how the light transport between two objects can be computed using the above definitions. We start by computing the range of directions of all connecting rays of the sender P to the receiver Q. <p> A novel way of computing conservative bounds on reflectance described by procedural shaders by using affine arithmetic has been described in <ref> [8] </ref>. Sampling with mipmaps has been used in [4].
Reference: [9] <author> Dani Lischinski, Brian Smits, and Donald P. Greenberg. </author> <title> Bounds and error estimates for radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <pages> pages 67-74, </pages> <year> 1994. </year>
Reference-contexts: In [15] the isotropy assumption is lifted by using spherical harmonics to represent the anisotropic radiance distribution of a cluster. A better refiner would estimate the range of illumination values on the receiver due to the sender <ref> [16, 9] </ref>. If the illumination on the receiving object varies strongly, sender and/or receiver have to be subdivided. <p> Conservative bounds restricted to the interaction of surface patches are described in <ref> [9] </ref>, but require complex geometric computations. An extension to clusters seems difficult. Smits et al. [16] estimate an upper bound on the form factor integrand by stochastically sampling the integrand.
Reference: [10] <author> Ramon E. Moore. </author> <title> Interval Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1966. </year>
Reference-contexts: In this sense, "computing hSi" means finding an upper and a lower bound on S and a proper approximation. The definition of addition, multiplication and division on the min/max-values is that of Interval Arithmetic <ref> [10] </ref>. Using Interval Arithmetic for our computations is certainly not optimal. We are optimistic that using Affine Artihmetic [3] instead may result in better range computations, as it has been shown for other rendering applications [8, 7]. The algorithm described below should be easy to transform.
Reference: [11] <author> H. Schirmacher. Hierarchische volumen-radiosity. </author> <type> Technical Report 9, </type> <institution> Universitat Erlangen-Nurnberg, </institution> <year> 1996. </year>
Reference-contexts: The question of how to compute such a self-form factor has only be treated marginally in previous publications. Our results showed that computing self-form factors by numerical integration using sampling does not deliver very useful results due to singularities in the integrand <ref> [11] </ref>. We use a very simple, but probably much more effective method. Our approach is based on the fact that in closed scenes all form factors from an object sum up to one ( j F ij = 1).
Reference: [12] <author> Leon A. Shirman and Salim S. Abi-Ezzi. </author> <title> The cone of normals technique for fast processing of curved patches. </title> <booktitle> Computer Graphics Forum (EUROGRAPHICS '93 Proceedings), </booktitle> <volume> 12(3) </volume> <pages> 261-272, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Computing Bounds on the Interaction To compute bounds on interactions between any two objects (clusters, surfaces, and surface elements), we need access to several values depending on both the sending and the receiving object, as for instance their bounding box, cone of normals <ref> [12] </ref> or exitant radiance in some direction. All objects allow to query these values using a common set of methods, abstracting from the concrete type of each object.
Reference: [13] <author> Fran~cois Sillion. </author> <title> A unified hierarchical algorithm for global illumination with scattering volumes and object clusters. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 1(3), </volume> <month> September </month> <year> 1995. </year>
Reference-contexts: In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. Applying the same idea of adaptive subdivision to this unified hierarchy extends the speedup to the complete scene <ref> [16, 2, 13, 4, 1] </ref>. There are two major issues with any hierarchical method: the design of an efficient refiner for the adaptive subdivision and of an accurate estimator to compute the actual interaction coefficients. <p> A very fast method to compute interactions between clusters is presented in <ref> [13] </ref>, where clusters are approximated by isotropic volumetric objects. Again, the error is estimated by considering only the amount of transported light. <p> Nevertheless, it is a sampling approach with all the problems that can arise from sampling. Furthermore, a method to analytically compute illumination is not available for clusters, which makes a unified view to different kinds of objects difficult. The authors use the isotropic cluster model of Sillion et al. <ref> [13] </ref> with an anisotropy correction. Intra-cluster visibility, that is visibility of objects inside a cluster with respect to the cluster's environment, is also considered separately. <p> This can again be computed from the cone of normals and . If the cone of normals is not available, we must fall back to (0; 1=4; 1), where 1=4 is the expected positive cosine value for randomly distributed surfaces in a cluster <ref> [13] </ref>. Given the range of cosine values hcos (Q; )i, we can compute the range of irradiance values due to a sender P as: hE P (Q)i = hL (P; )i h (P; Q)i hcos (Q; )i hv (Q; )i.
Reference: [14] <author> Fran~cois Sillion and George Drettakis. </author> <title> Feature-based control of visibility error: A multi-resolution clustering algorithm for global illumination. </title> <booktitle> Computer Graphics (SIG-GRAPH '95 Proceedings), </booktitle> <pages> pages 145-152, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Note that using Gib-son's sampled bounds and setting the lower bound to zero results in a better relative error increase. 5.2. Visibility Accelleration In order to speed up visibility computation, we reuse the cluster hierarchy also as a hierarchical spatial density approximation, as proposed in <ref> [14] </ref>. If a ray is to be shot through the scene, the ray traverses the cluster hierarchy. When the ray does not intersect the bounding box of a cluster, the complete subtree can be skipped for intersection tests. <p> If there is an intersection with the clusters the ray can either traverse its children, or the attenuation of the ray through the cluster can be approximated by considering the cluster as a volumetric object with homogenous density without taking a further look at the children, as also described in <ref> [14] </ref>. The resulting speedup and quality depends on how the cluster's density is approximated and on the decision whether a cluster can be assumed to be homogenous with respect to a certain ray or not. <p> As a result, we only use the expected transparency approximation of the cluster, if the size of the cluster is smaller than the cross-section of the set of all rays between the objects. Note, that this criterion is orthogonal to the feature-based visibility approach by Sillion et al. <ref> [14] </ref>. Our approach exploits coherence between visibility rays, while the feature-based approach is based on the coherence within the cluster.
Reference: [15] <author> Fran~cois Sillion, George Drettakis, and Cyril Soler. </author> <title> A clustering algorithm for radiance calculation in general environments. </title> <booktitle> In Rendering Techniques '95 (Proceedings of Sixth Eurographics Workshop on Rendering), </booktitle> <pages> pages 196-205. </pages> <publisher> Springer, </publisher> <month> August </month> <year> 1995. </year>
Reference-contexts: However, the oracle and form factor computation do not differentiate between patches and clusters and even volumetric objects can be handled easily. In <ref> [15] </ref> the isotropy assumption is lifted by using spherical harmonics to represent the anisotropic radiance distribution of a cluster. A better refiner would estimate the range of illumination values on the receiver due to the sender [16, 9].
Reference: [16] <author> Brian Smits, James Arvo, and Donald Greenberg. </author> <title> A clustering algorithm for radiosity in complex environments. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <pages> pages 435-442, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: In contrast, clustering algorithms group all primitives into a single hierarchy of clusters, which consist of other clusters, surface elements, or subdivisions thereof. Applying the same idea of adaptive subdivision to this unified hierarchy extends the speedup to the complete scene <ref> [16, 2, 13, 4, 1] </ref>. There are two major issues with any hierarchical method: the design of an efficient refiner for the adaptive subdivision and of an accurate estimator to compute the actual interaction coefficients. <p> In [15] the isotropy assumption is lifted by using spherical harmonics to represent the anisotropic radiance distribution of a cluster. A better refiner would estimate the range of illumination values on the receiver due to the sender <ref> [16, 9] </ref>. If the illumination on the receiving object varies strongly, sender and/or receiver have to be subdivided. <p> Conservative bounds restricted to the interaction of surface patches are described in [9], but require complex geometric computations. An extension to clusters seems difficult. Smits et al. <ref> [16] </ref> estimate an upper bound on the form factor integrand by stochastically sampling the integrand. The obtained upper bound is mostly too pessimistic, because the intrinsic properties of a cluster such as self-occlusion are not accounted for. Christensen et al. [2, 1] extended the clustering ap proach to glossy surfaces.
Reference: [17] <author> Marc Stamminger, Wolfram Nitsch, Philipp Slusallek, and Hans-Peter Seidel. </author> <title> Isotropic clustering for hierarchical ra-diosity | implementation and experiences. </title> <booktitle> In Proceedings Fifth International Conference in Central Europe on Computer Graphics and Visualization | WSCG '97, </booktitle> <year> 1997. </year>
Reference-contexts: Some refiners use this value as a basis for the refine-ment decision. Up to now, all computation have been made using strictly conservative bounds. This has the benefit that it can be assured that no light transport can be missed due to sampling problems <ref> [17] </ref>. Initial tessellation, which is necessary for other algorithms, can be completely omitted, the algorithm can work on all kind of input objects.
Reference: [18] <author> Marc Stamminger, Philipp Slusallek, and Hans-Peter Seidel. </author> <title> Bounded radiosity illumination on general surfaces and clusters. </title> <booktitle> Computer Graphics Forum (EUROGRAPHICS '97 Proceedings), </booktitle> <volume> 16(3), </volume> <month> September </month> <year> 1997. </year>
Reference-contexts: In the presented approach, this reasoning is based on computing upper and lower bounds on the light exchange and each of the individual terms used to compute these values. The algorithm is a continuation of work presented in <ref> [18] </ref>, where a simpler approach is used to uniformly handle arbitrarily shaped surfaces for diffuse radios-ity computations. However, it turned out that a cluster's behaviour differs strongly from that of an ordinary patch object. <p> An example for such a bound hi cone can be seen in Fig. 3. The computation of this cone given B P Q is simple <ref> [18] </ref>. Because the range described by a cone is easier to handle, but often much larger than necessary, both descriptions of are provided to the following computations. We denote both bounds by hi. <p> This approach is the same as the method described in <ref> [18] </ref>. For convex objects, hv (P; )i is always (1; 1; 1). Due to difficulties finding good bounds for visibility, one would use hv (P; )i = (0; v; 1) in the case of complex clusters, where v can for instance be determined by sampling (see Section 5).
References-found: 18

