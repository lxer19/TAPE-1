URL: ftp://ftp.cs.kun.nl/pub/SoftwEng.InfSyst/articles/EISPlea.ps.Z
Refering-URL: http://www.sci.kun.nl/afdis/publist.html
Root-URL: 
Email: eis@cs.kun.nl  
Title: Evolving Information Systems: Beyond Temporal Information Systems  
Author: E.D. Falkenberg, J.L.H. Oei, H.A. Proper 
Address: Toernooiveld 1, 6525 ED Nijmegen, The Netherlands  
Affiliation: University of Nijmegen,  
Abstract: Published as: E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. Evolving Information Systems: Beyond Temporal Information Systems. In A.M. Tjoa and I. Ramos, editors, Proceedings of the Data Base and Expert System Applications Conference (DEXA 92), pages 282-287, Valencia, Spain, September 1992. Abstract Nowadays, in order for an organisation to be competitive, it must be able to adapt quickly to its dynamic environment. In this paper, we discuss the need for information systems which are capable to evolve to the same extent as organisations do. Requirements of evolving organisations on their information systems are identified, followed by alternative approaches to adequate information systems development life cycles. We adopt an evolutionary approach resulting in so-called evolving information systems. On the basis of requirements and an architecture for these evolving information systems, the distinction from traditional information systems is explained. Traditional information systems, including temporal information systems, appear to be degenerations of our evolving information systems. A conceptual framework for update in evolving information systems is derived from the requirements. An event level, a recording level and a correction level are distinguished in this framework for update. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T.M.A. </author> <title> Bemelmans. Business Information Systems and Automation. (In Dutch: </title> <institution> Bestuurlijke infor-matiesystemen en automatisering). Stenfert Kroese, Leiden, </institution> <note> 3d revised edition, </note> <year> 1987. </year>
Reference-contexts: In <ref> [1] </ref>, the adaptability of (information) systems is termed flexibility in a broader sense, and the ability of a (information) system to continue to function in a satisfactory way without having to change the information system, although the organisation has changed, is termed flexibility in a narrower sense. <p> With respect to flexibility in a broader sense consider figure 1, which is taken from <ref> [1] </ref>. In this figure the dotted lines represent the evolution of the information system, whereas the solid lines represent the evolution of the information needs.
Reference: [2] <editor> S. Brinkkemper and E.D. Falkenberg. </editor> <title> Three Dichotomies in the Information System Methodology. </title> <editor> In P.W.G. Bots, H.G. Sol, and I.G. Sprinkhuizen-Kuyper, editors, </editor> <booktitle> Informatiesystemen in beweging (Information Systems on the move). </booktitle> <publisher> Kluwer Bedrijfswetenschappen, </publisher> <year> 1991. </year>
Reference-contexts: In a traditional information system in which the schema (type) vs. instance dichotomy (e.g. <ref> [2] </ref>) is applied to the application model, only the instances can be updated. That is, schema specifications, as well as activity and behaviour specifications (which are usually hidden in programming procedures), cannot be updated in traditional information systems.
Reference: [3] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Toward a Unified View of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <month> March </month> <year> 1976. </year>
Reference: [4] <author> G.B. Davis. </author> <title> Strategies for Information Requirements Determination. </title> <editor> In Robert Galliers, editor, </editor> <booktitle> INFORMATION ANALYSIS: Selected readings, chapter 13. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: This evolutionary approach can be regarded as an advanced kind of prototyping. Prototyping resulted from the observation that in a significant percentage of cases, as is argued in <ref> [4] </ref>, requirements for the systems can not be established correctly and completely in advance. Even information systems which are based on correctly elicitated requirements may be rejected by users, or require substantial rework to make them fit the actual needs of the user.
Reference: [5] <author> E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. </author> <title> A Conceptual Framework for Evolving Information Systems. </title> <editor> In H.G. Sol and R.L. Crosslin, editors, </editor> <booktitle> Dynamic Modelling of Information Systems II, </booktitle> <pages> pages 353-375. </pages> <publisher> North-Holland, </publisher> <year> 1992. </year> <month> 12 </month>
Reference-contexts: An information system reflects an organisation correctly if and only if there exists an isomorphism between the states in the information system and the states in the organisation system representing the organisation domain (universe of discourse), see e.g. <ref> [5] </ref> and [10]. In [5] it is also argued that the order in which the events occured in the organisation should be preserved by the mapping. <p> An information system reflects an organisation correctly if and only if there exists an isomorphism between the states in the information system and the states in the organisation system representing the organisation domain (universe of discourse), see e.g. <ref> [5] </ref> and [10]. In [5] it is also argued that the order in which the events occured in the organisation should be preserved by the mapping. This requirement is needed because recordings of several events may interfere with eachother, such that a different order may result in a different state of the information system. <p> Note that the roll-back performed by the correction is implicitly present in this figure. In the same way corrections requiring the removal or insertion of a recording of an event can be represented. In <ref> [5] </ref> more examples are given and elaborated. 11 * fi AMS 0 AM History 0 -Rec (e 1 at t 1 ) * fi AMS 0 ffi fl e 1 AM History 1 -Rec (e 2 at t 2 ) * fi AMS 0 ffi fl * fi AMS 2 -
Reference: [6] <author> E.D. Falkenberg, J.L.H. Oei, and H.A. Proper. </author> <title> A Metamodel for Update in Information Systems. </title> <type> Technical Report 92-05, </type> <institution> Department of Information Systems, University of Nijmegen, The Nether-lands, </institution> <year> 1992. </year>
Reference: [7] <author> C. Gane and T. Sarson. </author> <title> Structured System Analysis: Tools and techniques. IST Databooks. </title> <publisher> Mac-Donald Douglas Corporation, </publisher> <address> St. Louis, </address> <year> 1986. </year>
Reference: [8] <author> H.J. Genrich and K. Lautenbach. </author> <title> System Modelling with High-Level Petri-Nets. </title> <journal> Theoretical Computer Science, </journal> <volume> 13 </volume> <pages> 109-136, </pages> <year> 1981. </year>
Reference: [9] <author> A.H.M. ter Hofstede, H.A. Proper, and Th.P. van der Weide. </author> <title> Data Modelling in Complex Application Domains. </title> <editor> In P. Loucopoulos, editor, </editor> <booktitle> Proceedings of the Fourth International Conference CAiSE'92 on Advanced Information Systems Engineering, volume 593 of Lecture Notes in Computer Science, </booktitle> <pages> pages 364-377, </pages> <address> Manchester, United Kingdom, May 1992. </address> <publisher> Springer-Verlag. </publisher>
Reference: [10] <author> A.H.M. ter Hofstede and Th.P. van der Weide. </author> <title> Expressiveness in conceptual data modelling. </title> <journal> Data & Knowledge Engineering, </journal> <volume> 10(1) </volume> <pages> 65-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: An information system reflects an organisation correctly if and only if there exists an isomorphism between the states in the information system and the states in the organisation system representing the organisation domain (universe of discourse), see e.g. [5] and <ref> [10] </ref>. In [5] it is also argued that the order in which the events occured in the organisation should be preserved by the mapping. <p> cause state transitions on the correction level. 6.1 The event level It is generally assumed that the universe of discourse described in an information system, contains a set of stable states, and that there are a number of actions that result in a change of state (state transitions) (see eg <ref> [10] </ref>). The states and state transitions in an universe of discourse are modelled in an information system. This means that the state of an organisation at a particular point of time is modelled by a set of application model elements.
Reference: [11] <author> F. Land. </author> <title> Adapting to Changing User Requirements. </title> <editor> In Robert Galliers, editor, </editor> <booktitle> INFORMATION ANALYSIS: Selected readings, chapter 12. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: An attempt to accomplish this goal would be to try to shorten or even abolish the traditional life cycle process of information system development as illustrated in figure 2, which is taken from [20]. In <ref> [11] </ref>, six approaches to shorten or abolish this expensive life cycle process of information system development have been identified.
Reference: [12] <editor> P. Lindgreen, editor. </editor> <title> A Framework of Information Systems Concepts. </title> <booktitle> Interim Report of the IFIP WG 8.1 Task Group FRISCO, </booktitle> <year> 1990. </year>
Reference-contexts: However, it should be noted that not all temporal systems are evolving information systems. As we have seen in this section evolving information systems have to meet additional requirements. 4 The Architecture for Evolving Information Systems In our systems view on organisations, which is conform the approach taken in <ref> [12] </ref>, an or-ganisation system is considered to be a set of interrelated actors, activities, states and points of time. Actors perform certain activities resulting in a change of state at a certain point of time.
Reference: [13] <author> M. Lundeberg, G. Goldkuhl, and A. Nilsson. </author> <title> Information Systems Development A Systematic Approach. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1981. </year>
Reference: [14] <author> C.L. McClure. </author> <title> CASE is Software Automation. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1989. </year>
Reference: [15] <author> B. Meyer. </author> <title> Object-oriented software construction. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1988. </year>
Reference-contexts: In the context of software engineering, the (re-)use of software modules ([20]) illustrates the strategy of reusability. The reusability of (software) objects is also the major claim of the object-oriented approach (eg <ref> [15] </ref>). Most approaches to information systems development, including the ones which support the reuse of products, demand for an actual replacement of the information system by another information system in case of a structural change.
Reference: [16] <author> J.L.H. Oei, H.A. Proper, and E.D. Falkenberg. </author> <title> Modelling the Evolution of Information Systems. </title> <type> Technical Report 92-36, </type> <institution> Department of Information Systems, University of Nijmegen, The Nether-lands, </institution> <year> 1992. </year>
Reference-contexts: To accomplish these corrections, it must be possible to go back in the sequence of performed recordings. The operation accomplishing this task, is called a roll-back. As shown in <ref> [16] </ref>, insertions, removals, and replacements of recordings can be mapped onto roll-backs and (re-)recordings. In snapshot systems there is no support of time, and consequently, no order can be preserved.
Reference: [17] <editor> T.W. Olle, J. Hagelstein, I.G. Macdonald, C. Rolland, H.G. Sol, F.J.M. van Assche, and A.A. Verrijn-Stuart. </editor> <title> Information Systems Methodologies: A Framework for Understanding. </title> <publisher> Addison-Wesley, </publisher> <year> 1988. </year>
Reference-contexts: Products developed in a CASE-tool during the analysis and design phase of an information system (eg schemas, repositories, etc.) can serve as a starting point for the analysis and design phase of a new information system to be developed ([14], <ref> [17] </ref>). In the context of software engineering, the (re-)use of software modules ([20]) illustrates the strategy of reusability. The reusability of (software) objects is also the major claim of the object-oriented approach (eg [15]).
Reference: [18] <author> C. Rolland and C. Richard. </author> <title> The REMORA Methodologie for Information System Design and Management. </title> <editor> In T.W. Olle, H.G. Sol, and A.A. Verrijn-Stuart, editors, </editor> <booktitle> Information Systems Design Methodologies: A Comparative Review, </booktitle> <pages> pages 369-426. </pages> <address> North-Holland/IFIP, </address> <year> 1982. </year>
Reference: [19] <author> R. Snodgrass and I. Ahn. </author> <title> Temporal Databases. </title> <journal> IEEE Computer, </journal> <volume> 19(9) </volume> <pages> 35-42, </pages> <year> 1986. </year>
Reference-contexts: These point of times are called the recording time of events. Our notion of event time and recording time is identical to the notions of valid time and transaction time, respectively, as discussed in <ref> [19] </ref>. (The reason for this renaming is that the new names correspond better to the level architecture we will introduce in section 6.) The classification which is made in [19] is based on the basis of support of valid and transaction time. <p> of event time and recording time is identical to the notions of valid time and transaction time, respectively, as discussed in <ref> [19] </ref>. (The reason for this renaming is that the new names correspond better to the level architecture we will introduce in section 6.) The classification which is made in [19] is based on the basis of support of valid and transaction time. Conform this classification (which distinguishes snapshot-, historical-, rollback-, and temporal systems), evolving information systems are temporal systems because of the fact that both valid and transaction time are supported.
Reference: [20] <author> I. Sommerville. </author> <title> Software Engineering. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: An attempt to accomplish this goal would be to try to shorten or even abolish the traditional life cycle process of information system development as illustrated in figure 2, which is taken from <ref> [20] </ref>. In [11], six approaches to shorten or abolish this expensive life cycle process of information system development have been identified. <p> The final prototype resulting from this iterative process will be the information system which becomes part of the organisation. The prototyping process is illustrated in figure 3 which is taken from <ref> [20] </ref>. In our approach to evolving information systems, the prototyping strategy is not restricted to the development phase of an information system, but is also followed in the operation and maintenance phase.
Reference: [21] <author> A.A. Verrijn-Stuart. </author> <title> Some Reflections on the Namur Conference on Information Systems Concepts. </title> <editor> In E.D. Falkenberg and P. Lindgreen, editors, </editor> <title> Information System Concepts: An In-depth Analysis. </title> <address> North-Holland/IFIP, </address> <year> 1989. </year>
Reference-contexts: In case of a highly dynamic organisation, this latter percentage is likely to be even higher. (Note that our notion of information systems in this paper is that of information systems in the narrower sense as explained in section 4 and in <ref> [21] </ref>). <p> In this paper, however, the specific aspects of distributed information systems are not taken in consideration. The restriction to a computerized actor performing information system processing activities, corresponds to what has been defined in <ref> [21] </ref> as an information system in the narrower sense `IS (N)'. In this paper, whenever we use the term information systems, information systems in the narrower sense are meant. Conform this systems view on organisations and information systems, a general architecture for information systems is presented.
Reference: [22] <author> J.J.V.R. Wintraecken. </author> <title> The NIAM Information Analysis Method: Theory and Practice. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1990. </year> <month> 13 </month>
References-found: 22

