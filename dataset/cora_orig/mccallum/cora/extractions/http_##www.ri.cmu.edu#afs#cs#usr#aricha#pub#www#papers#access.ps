URL: http://www.ri.cmu.edu/afs/cs/usr/aricha/pub/www/papers/access.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/aricha/pub/www/home.html
Root-URL: 
Title: Accessing Nearby Copies of Replicated Objects in a Distributed Environment  
Author: C. Greg Plaxton Rajmohan Rajaraman Andrea W. Richa 
Abstract: Consider a set of shared objects in a distributed network, where several copies of each object may exist at any given time. To ensure both fast access to the objects as well as efficient utilization of network resources, it is desirable that each access request be satisfied by a copy "close" to the requesting node. Unfortunately, it is not clear how to efficiently achieve this goal in a dynamic, distributed environment in which large numbers of objects are continuously being created, replicated, and destroyed. In this paper, we design a simple randomized algorithm for accessing shared objects that tends to satisfy each access request with a nearby copy. The algorithm is based on a novel mechanism to maintain and distribute information about object locations, and requires only a small amount of additional memory at each node. We analyze our access scheme for a class of cost functions that captures the hierarchical nature of wide-area networks. We show that under the particular cost model considered: (i) the expected cost of an individual access is asymptotically optimal, and (ii) if objects are sufficiently large, the memory used for objects dominates the additional memory used by our algorithm with high probability. We also address dynamic changes in both the network as well as the set of object copies. A preliminary version of this paper appeared in Proceedings of the 9th Annual ACM Symposium on Parallel Algorithms and Architectures (SPAA), pages 311-320, June 1997. Invited submission to special issue of Theory of Computing Systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch, Y. Bartal, and A. Fiat. </author> <title> Distributed paging for general networks. </title> <booktitle> In Proceedings of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 574-583, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: The basic problem of locating an object arises in every distributed system [11], and was formalized by Mullender and Vitanyi [12] as an instance of the distributed matchmaking problem. Awerbuch and Peleg [3], and subsequently Bartal et al. [4] and Awerbuch et al. <ref> [1] </ref>, give near-optimal solutions in terms of cost to a related problem by defining sparse-neighborhood covers of graphs. Their studies do not address the overhead due to control information and hence, natural extensions of their results to our problem may require an additional memory of m words at some node. <p> In Section 2, we defined the ball of radius r around a node u, M (u; r). Now we define the ball of size k around node u, N (u; k), for any u in V and any integer k in <ref> [1; n] </ref> 3 : Let N (u; k) denote the unique set of k nodes such that for any v in N (u; k) and w not in N (u; k), c (u; v) is less than c (u; w). <p> Let N (u; S) and N (u; S) denote N (u; n (u; S)) and N (u; n (u; S)), respectively. Lemma 5.2 Let u be in V , let S be a subset of V , and let k be in <ref> [1; n] </ref>. Then N (u; k) is a subset (resp., superset) of S if and only if N (u; k) is a subset of N (u; S) (resp., superset of N (u; S)). <p> We now consider ` 2. Let E j denote the event that the random walk does not reach node 0 in the first j steps. That is, E j is the event that w 0 k is nonzero for all k in <ref> [1; j] </ref>. For all j, let ff j denote the probability that w 0 j+1 is 1 and E j+1 holds, given that w 0 1 is 1. For convenience, we assume that ff 1 equals 1=(p q).
Reference: [2] <author> B. Awerbuch and D. Peleg. </author> <title> Routing with polynomial communication space tradeoff. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 5 </volume> <pages> 151-162, </pages> <year> 1990. </year>
Reference-contexts: However, their cost model, which is based on the ultrametric, is different from ours. Also, their algorithms are primarily designed for problems associated with "hot spots" (i.e., popular objects). A closely related problem is that of designing a dynamic routing scheme for networks <ref> [2, 6] </ref>. Such a scheme involves maintaining routing tables at different nodes of the network in much the same way as our additional memory.
Reference: [3] <author> B. Awerbuch and D. Peleg. </author> <title> Sparse partitions. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 503-513, </pages> <year> 1990. </year>
Reference-contexts: The basic problem of locating an object arises in every distributed system [11], and was formalized by Mullender and Vitanyi [12] as an instance of the distributed matchmaking problem. Awerbuch and Peleg <ref> [3] </ref>, and subsequently Bartal et al. [4] and Awerbuch et al. [1], give near-optimal solutions in terms of cost to a related problem by defining sparse-neighborhood covers of graphs.
Reference: [4] <author> Y. Bartal, A. Fiat, and Y. Rabani. </author> <title> Competitive algorithms for distributed data management. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 39-47, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The basic problem of locating an object arises in every distributed system [11], and was formalized by Mullender and Vitanyi [12] as an instance of the distributed matchmaking problem. Awerbuch and Peleg [3], and subsequently Bartal et al. <ref> [4] </ref> and Awerbuch et al. [1], give near-optimal solutions in terms of cost to a related problem by defining sparse-neighborhood covers of graphs.
Reference: [5] <author> H. Chernoff. </author> <title> A measure of the asymptotic efficiency for tests of a hypothesis based on the sum of observations. </title> <journal> Annals of Mathematical Statistics, </journal> <volume> 23 </volume> <pages> 493-509, </pages> <year> 1952. </year>
Reference-contexts: It follows from Chernoff bounds <ref> [5] </ref> that the number of nodes for which u is a root primary (i; j)-neighbor is O (log n) whp. We now consider secondary and nonroot primary neighbors.
Reference: [6] <author> S. Dolev, E. Kranakis, D. Krizanc, and D. Peleg. Bubbles: </author> <title> Adaptative routing scheme for high-speed dynamic networks. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 528-537, </pages> <year> 1995. </year>
Reference-contexts: However, their cost model, which is based on the ultrametric, is different from ours. Also, their algorithms are primarily designed for problems associated with "hot spots" (i.e., popular objects). A closely related problem is that of designing a dynamic routing scheme for networks <ref> [2, 6] </ref>. Such a scheme involves maintaining routing tables at different nodes of the network in much the same way as our additional memory. <p> The fourth measure is adaptability , which is defined as the number of nodes whose auxiliary memory is updated upon the addition or removal of a node. (Our notion of adaptability is analogous to that of <ref> [6] </ref>.) 3 The Access Scheme In this section, we present our access scheme for shared objects. We assume that n is a power of 2 b , where b is a fixed positive integer to be specified later (see the beginning of Section 5).
Reference: [7] <author> R. L. Graham, D. E. Knuth, and O. Patashnik. </author> <title> Concrete Mathematics. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: We note that for all i, ` i (!) equals z 0 (!). The following lemma, which describes a probabilistic recurrence relation for the length of an excursion in ! 0 , is proved using a classical combinatorial result known as Raney's lemma <ref> [7, 15] </ref>. Lemma 5.20 Let p and q satisfy the inequality 1 p (p q) 2 . <p> Let fi m denote the probability that the following conditions hold given that w 0 1 = 1: (i) E 2m+1 holds, (ii) w 0 2m+1 = 1, and (iii) the edge (1; 1) is not traversed in any of the first 2m + 1 steps. Using Raney's lemma <ref> [7, 15] </ref>, we have fi m = 1 2m+1 m (p (1 p)) m .
Reference: [8] <author> J. D. Guyton and M. F. Schwartz. </author> <title> Locating nearby copies of replicated Internet servers. </title> <booktitle> In Proceedings of ACM SIGCOMM, </booktitle> <pages> pages 288-298, </pages> <year> 1995. </year>
Reference-contexts: However, we note that their schemes are designed for arbitrary cost functions, whereas we have focused on optimizing performance for a restricted class of cost functions. In recent work, access schemes for certain Internet applications have been described in <ref> [8, 9, 17] </ref>. Some of the ideas in our scheme are similar to those in [17]; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. <p> In recent work, access schemes for certain Internet applications have been described in [8, 9, 17]. Some of the ideas in our scheme are similar to those in [17]; however, the two schemes differ considerably in the details. Moreover, the schemes of <ref> [8] </ref> and [17] have not been analyzed. As in our study, the results of [9] concerning locality assume a restricted cost model. However, their cost model, which is based on the ultrametric, is different from ours.
Reference: [9] <author> D. Karger, E. Lehman, F. T. Leighton, M. Levine, D. Lewin, and R. Panigrahy. </author> <title> Consistent hashing and random trees: Distributed caching protocols for relieving hot spots on the World Wide Web. </title> <booktitle> In Proceedings of the 29th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 654-663, </pages> <month> May </month> <year> 1997. </year> <month> 25 </month>
Reference-contexts: However, we note that their schemes are designed for arbitrary cost functions, whereas we have focused on optimizing performance for a restricted class of cost functions. In recent work, access schemes for certain Internet applications have been described in <ref> [8, 9, 17] </ref>. Some of the ideas in our scheme are similar to those in [17]; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. <p> Some of the ideas in our scheme are similar to those in [17]; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. As in our study, the results of <ref> [9] </ref> concerning locality assume a restricted cost model. However, their cost model, which is based on the ultrametric, is different from ours. Also, their algorithms are primarily designed for problems associated with "hot spots" (i.e., popular objects).
Reference: [10] <author> R. Karp, M. Luby, and F. Meyer auf der Heide. </author> <title> Efficient PRAM simulation on a distributed memory machine. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Comput ing, </booktitle> <pages> pages 318-326, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The basic problem of sharing memory in distributed systems has been studied extensively in different forms. Most of the earlier work in this area, e.g., emulations of PRAM on completely-connected distributed-memory machines (e.g., <ref> [10, 16] </ref>) or bounded-degree networks (e.g., [14]), and algorithms for providing concurrent access to a set of shared objects [13], assume that each of the nodes of the network has knowledge of a hash function that indicates the location of any copy of any object.
Reference: [11] <author> S. J. Mullender, </author> <title> editor. Distributed Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: The basic problem of locating an object arises in every distributed system <ref> [11] </ref>, and was formalized by Mullender and Vitanyi [12] as an instance of the distributed matchmaking problem. Awerbuch and Peleg [3], and subsequently Bartal et al. [4] and Awerbuch et al. [1], give near-optimal solutions in terms of cost to a related problem by defining sparse-neighborhood covers of graphs.
Reference: [12] <author> S. J. Mullender and P. M. B. Vitanyi. </author> <title> Distributed match-making. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: The basic problem of locating an object arises in every distributed system [11], and was formalized by Mullender and Vitanyi <ref> [12] </ref> as an instance of the distributed matchmaking problem. Awerbuch and Peleg [3], and subsequently Bartal et al. [4] and Awerbuch et al. [1], give near-optimal solutions in terms of cost to a related problem by defining sparse-neighborhood covers of graphs.
Reference: [13] <author> C. G. Plaxton and R. Rajaraman. </author> <title> Fast fault-tolerant concurrent access to shared objects. </title> <booktitle> In Proceedings of the 37th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 570-579, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: Most of the earlier work in this area, e.g., emulations of PRAM on completely-connected distributed-memory machines (e.g., [10, 16]) or bounded-degree networks (e.g., [14]), and algorithms for providing concurrent access to a set of shared objects <ref> [13] </ref>, assume that each of the nodes of the network has knowledge of a hash function that indicates the location of any copy of any object.
Reference: [14] <author> A. G. Ranade. </author> <title> How to emulate shared memory. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 42 </volume> <pages> 307-326, </pages> <year> 1991. </year>
Reference-contexts: The basic problem of sharing memory in distributed systems has been studied extensively in different forms. Most of the earlier work in this area, e.g., emulations of PRAM on completely-connected distributed-memory machines (e.g., [10, 16]) or bounded-degree networks (e.g., <ref> [14] </ref>), and algorithms for providing concurrent access to a set of shared objects [13], assume that each of the nodes of the network has knowledge of a hash function that indicates the location of any copy of any object.
Reference: [15] <author> G. N. Raney. </author> <title> Functional composition patterns and power series reversion. </title> <journal> Transactions Amer ican Mathematical Society, </journal> <volume> 94 </volume> <pages> 441-451, </pages> <year> 1960. </year>
Reference-contexts: We note that for all i, ` i (!) equals z 0 (!). The following lemma, which describes a probabilistic recurrence relation for the length of an excursion in ! 0 , is proved using a classical combinatorial result known as Raney's lemma <ref> [7, 15] </ref>. Lemma 5.20 Let p and q satisfy the inequality 1 p (p q) 2 . <p> Let fi m denote the probability that the following conditions hold given that w 0 1 = 1: (i) E 2m+1 holds, (ii) w 0 2m+1 = 1, and (iii) the edge (1; 1) is not traversed in any of the first 2m + 1 steps. Using Raney's lemma <ref> [7, 15] </ref>, we have fi m = 1 2m+1 m (p (1 p)) m .
Reference: [16] <author> E. Upfal and A. Wigderson. </author> <title> How to share memory in a distributed system. </title> <journal> Journal of the ACM, </journal> <volume> 34 </volume> <pages> 116-127, </pages> <year> 1987. </year>
Reference-contexts: The basic problem of sharing memory in distributed systems has been studied extensively in different forms. Most of the earlier work in this area, e.g., emulations of PRAM on completely-connected distributed-memory machines (e.g., <ref> [10, 16] </ref>) or bounded-degree networks (e.g., [14]), and algorithms for providing concurrent access to a set of shared objects [13], assume that each of the nodes of the network has knowledge of a hash function that indicates the location of any copy of any object.
Reference: [17] <author> M. van Steen, F. J. Hauck, and A. S. Tanenbaum. </author> <title> A model for worldwide tracking of distributed objects. </title> <booktitle> In Proceedings of TINA '96, </booktitle> <pages> pages 203-212, </pages> <month> September </month> <year> 1996. </year>
Reference-contexts: However, we note that their schemes are designed for arbitrary cost functions, whereas we have focused on optimizing performance for a restricted class of cost functions. In recent work, access schemes for certain Internet applications have been described in <ref> [8, 9, 17] </ref>. Some of the ideas in our scheme are similar to those in [17]; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. <p> In recent work, access schemes for certain Internet applications have been described in [8, 9, 17]. Some of the ideas in our scheme are similar to those in <ref> [17] </ref>; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. As in our study, the results of [9] concerning locality assume a restricted cost model. However, their cost model, which is based on the ultrametric, is different from ours. <p> In recent work, access schemes for certain Internet applications have been described in [8, 9, 17]. Some of the ideas in our scheme are similar to those in <ref> [17] </ref>; however, the two schemes differ considerably in the details. Moreover, the schemes of [8] and [17] have not been analyzed. As in our study, the results of [9] concerning locality assume a restricted cost model. However, their cost model, which is based on the ultrametric, is different from ours. Also, their algorithms are primarily designed for problems associated with "hot spots" (i.e., popular objects).
References-found: 17

