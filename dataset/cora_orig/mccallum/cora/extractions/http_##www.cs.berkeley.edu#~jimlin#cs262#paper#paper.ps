URL: http://www.cs.berkeley.edu/~jimlin/cs262/paper/paper.ps
Refering-URL: http://www.cs.berkeley.edu/~jimlin/cs262/
Root-URL: http://www.cs.berkeley.edu
Email: -danyelf, jimlin, wittman-@cs.berkeley.edu  
Title: A Multiplatform Construction of Lock-Free, Non-Blocking Data Structures  
Author: Danyel Fisher, James Lin, and Michael Wittman 
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division University of California  
Abstract: Concurrent stacks and queues are useful for many parallel applications and operating systems. Access to these data structures must be synchronized so that correctness is guaranteed. Using locks for synchronization may slow performance, and increases the chances of starvation and deadlock. We have implemented lock-free, non-blocking stacks and queues that avoid such issues for Solaris on SPARC-V9 compliant CPUs, and Unix and 32-bit Windows on Intel Pentium or above. The implementation of the data structures do not implement original algorithms, but they are the only widely-available implementations of lock-free, non-blocking queues and stacks on several platforms of which we know. Unfortunately, there is a bug that causes enqueuing to fail on the order of every 10,000 operations. We are in the process of finding and fixing the cause of the bug. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Herlihy, Maurice. </author> <title> Wait-Free Synchronizations. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 11(1), pp.124149, </volume> <month> January, </month> <year> 1991. </year>
Reference: <author> Herlihy, Maurice. </author> <title> A Methodology for Implementing Highly Concurrent Data Objects. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 15(5), pp.745 770, </volume> <month> November, </month> <year> 1993. </year>
Reference: <author> Israeli, Amos and Rappoport, Lihu. </author> <title> Disjoint-Access-Parallel Implementations of Strong Shared Memory Primitives. </title> <booktitle> Proceedings of the 13th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <address> Los Angeles, CA. pp.151160, </address> <month> August </month> <year> 1994. </year>
Reference: <author> Massalin, Henry and Pu, Calton. </author> <title> A Lock-Free Multiprocessor OS Kernel. </title> <type> Technical report CUCS-005-91, </type> <institution> Columbia University, </institution> <year> 1991. </year>
Reference: <author> Michael, Maged M. and Scott, Michael L. </author> <title> Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms. </title> <booktitle> Proceedings of the 15th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <address> Philadelphia, PA. </address> <pages> pp 267-276, </pages> <month> May </month> <year> 1996. </year>
Reference: <author> Turek, J., Shasha, D., and Prakash, S. </author> <title> Locking Without Blocking: Making Lock-Based Concurrent Data Structure Algorithms Non-Blocking. </title> <booktitle> Proceedings of the 1992 Prinicples of Database Systems, </booktitle> <pages> pp 212-222, </pages> <year> 1992. </year>

References-found: 6

