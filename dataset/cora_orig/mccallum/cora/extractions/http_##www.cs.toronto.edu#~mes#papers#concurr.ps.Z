URL: http://www.cs.toronto.edu/~mes/papers/concurr.ps.Z
Refering-URL: http://www.cs.toronto.edu/~mes/papers/printed.html
Root-URL: 
Email: e-mail: (mes,eugenia)@ai.toronto.edu  
Title: Logical Formalization of Concurrent Actions for Multi-Agent Systems  
Author: Mikhail Soutchanski and Eugenia Ternovskaia 
Address: 10 King's College Road, SF3303 Toronto University, Toronto (Ontario), M5S 1A4, Canada  
Affiliation: Dep. of Computer Science,  
Abstract: This paper presents a logical approach to formalization of some aspects of multi-agent systems in an incompletely known world. The contribution on this regard is as follows. We formalized reasoning about concurrent actions inside the situation calculus framework which has the sufficiently clear and well-understood semantics to express different aspects of agent theory. Conclusions can be drawn by default about results of a group of concurrent actions which may include unknown or unspecified actions. The approach allows to examine all models corresponding both to different assumptions about possible failures in performing of one or another action, and to assumptions whether a particular action was executed really. This provides an opportunity to predict the consequence of joint activity of agents operating in complex environment and to explain apparently unexpected changes. These results are achieved by choosing a suitable circumscription policy. The approach provides a general and formal framework for design and verification of wide class of agent-oriented systems such as telecommunication systems, network management, and evolving distributed data bases.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> C.Baral, </author> <title> M.Gelfond Representing concurrent actions in extended logic programming. </title> <booktitle> Proc. of the 13th IJCAI, </booktitle> <year> 1993, </year> <pages> 866-871 </pages>
Reference-contexts: More detailed comparison can be found in our paper [20]. The papers <ref> [1, 14] </ref> also dealt with the representation of concurrent actions inside the framework of the situation calculus has appeared practically simultaneously with [20]. The paper [1] proposed an approach based upon a specific formal language A. <p> More detailed comparison can be found in our paper [20]. The papers [1, 14] also dealt with the representation of concurrent actions inside the framework of the situation calculus has appeared practically simultaneously with [20]. The paper <ref> [1] </ref> proposed an approach based upon a specific formal language A. In that paper, the authors provided a translation into the language of extended logic programming and prove its soundness. It is difficult to compare our approaches because our languages differs considerably.
Reference: 2. <author> J.M.Crawford, D.W. </author> <title> Etherington Formalizing Reasoning About Change: A Qualitative Reasoning Approach (Preliminary Report) In: </title> <booktitle> Amer. Assoc. of Artif. Intell., 10th National Conference on Artif. Intell., </booktitle> <year> 1992, </year> <pages> 577-583. </pages>
Reference-contexts: Without such circumscription it would be possible for some of the models to permit superfluously wide extents of the predicate. We will use the pointwise circumscription [10] to deal with the frame problem. We take J.Crawford and D.Etherington's <ref> [2] </ref> suggestion into consideration. 1 They introduced two abnormality predicates to capture the following two ideas. First, when an action typically has certain effects, but the list of all combinations of circumstances in which the action may fail to have these effects is too long to be generated explicitly. <p> Making assumptions about failures to perform one or another action corresponds in our framework to holding predicate W rong fixed. Making assumptions about what (in particular, uncanny and/or unconscious) actions have been executed corresponds to fixing the predicate T ype. Our minimization policy is based on <ref> [2] </ref>. We will divide the minimization process into three stages in accordance with the above informal description. At the first stage, the predicate Ab is circumscribed pointwisely [10] with Holds varying on situations other then current and having T ype and W rong fixed 7 .
Reference: 3. <author> B.Dunin-Keplicz, </author> <title> J.Treur Compositional formal specification of multi-agent systems, (this volume) </title>
Reference: 4. <author> M.Gelfond, V.Lifschitz, </author> <title> A.Rabinov What are the limitations of the situation calculus ? In: Essays for Bledsoe, (Ed. by R.Boyer), </title> <publisher> Kluwer Academic, </publisher> <year> 1991, </year> <pages> 167-177 </pages>
Reference: 5. <editor> G.N.Kartha Soundness and completeness theorems for three formalisations of action. </editor> <booktitle> Proc. of the 13th IJCAI, </booktitle> <year> 1993, </year> <pages> 724-729 </pages>
Reference-contexts: Note, that although circumscription gives rise to a second order formulas, there is a wide class of circumscribed theories of actions which are either equivalent to a first order formula <ref> [5] </ref> or to a formula in a more expressive fixpoint logic obtained by adding the least fixed point formation rule to first order logic [6]. 5.2 Description of Our Circumscription Policy Given a complete description of some multi-agent system, as a set of statement in first-order logic, we can predict possible <p> The paper [1] proposed an approach based upon a specific formal language A. In that paper, the authors provided a translation into the language of extended logic programming and prove its soundness. It is difficult to compare our approaches because our languages differs considerably. However, the paper <ref> [5] </ref> seems the most promising in this regard. The authors of [14] also proposed the method for reasoning about concurrent actions. Their approach is similar to our one to some extent, because it is based on the situation calculus and circumscription too.
Reference: 6. <author> Ph.G.Kolaitis, </author> <title> Ch.H.Papadimitriou Some computational aspects of circumscription. </title> <journal> J. of the ACM, </journal> <volume> 37, </volume> <year> 1990, </year> <pages> 1-14 </pages>
Reference-contexts: gives rise to a second order formulas, there is a wide class of circumscribed theories of actions which are either equivalent to a first order formula [5] or to a formula in a more expressive fixpoint logic obtained by adding the least fixed point formation rule to first order logic <ref> [6] </ref>. 5.2 Description of Our Circumscription Policy Given a complete description of some multi-agent system, as a set of statement in first-order logic, we can predict possible behaviors of the system by listing facts which are true in each situation achievable from the current one. <p> It is important to note that correspondence between the situation calculus with action types and the explicit time-line temporal calculus established by Weber [22] facilitates future progress. A matter of prime concern is how to compute circumscription algorithmically <ref> [6] </ref>. This point will be addressed in our future work. Acknowledgements: We are indebted to A.Bondarenko and M.Shanahan for discussions, to R.Miller for detailed list of questions and comments, to Slava Ivanov and company Brokinvest for support by computing facilities, to Y.Gouz for help in telecommunications.
Reference: 7. <institution> K.Konolidge A first-order formalisation of knowledge and action for a multi-agent planning system. </institution> <note> In: Machine Intelligence, </note> <editor> v. </editor> <volume> 10, </volume> <editor> (Eds. J.E.Hayes, D.Michie, Y.- H.Pao), </editor> <address> Chichester, </address> <publisher> Ellis Horwood Ltd., </publisher> <year> 1982, </year> <pages> 41-71 </pages>
Reference-contexts: We would like also to describe agent's beliefs (explicitly represented in a subset of our language), deductions and communications. In order to allow this, the syntax of the underlying language must includes terms for formulas so that they can appear as arguments in predicates <ref> [7, 16, 17] </ref>. A first-order language so endowed with terms is called usually the reified language 3 . In accordance with a long standing tradition, in our notation we distinguish two sorts of reified formulas. <p> For example, let belief be Horn formulas composed from no more than, say, 21 disjuncts, such that each belief may contain inside no more than one level of belief nesting. 5 We can ascribe to the agents certain (even varying from one 4 Interested reader can find further details in <ref> [7, 16, 17, 24] </ref>. 5 Thus, an agent is able to believe that someone believes that "Inform", however this agent is not able to believe that someone believes that the agent believes that "Inf orm". agent to another) deductive power, if we add to a logical theory suitable axioms, for example,
Reference: 8. <editor> V.Lifschitz Toward a metatheory of action. </editor> <booktitle> Proc. of the 2nd Int'l Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <editor> (Eds. J.Allen, R.Fikes, E.Sandewall), </editor> <year> 1991, </year> <month> p.376-387 </month>
Reference: 9. <editor> V.Lifschitz Computing circumscription. </editor> <booktitle> Proc. 9th IJCAI, </booktitle> <year> 1985, </year> <pages> 121-127 </pages>
Reference-contexts: This axioms are used here in the form proposed by F.Lin&Y.Shoham 5 Circumscription Policies As usually, whenever some circumscription policy is formulated we assume that sort and arity of each predicate variable exactly correspond to sort and arity of the initial predicate constant. 5.1 Preliminary Definitions We will denote (see <ref> [9, 10] </ref>) by Circum (A (P; Z); P ; Z) the global circumscription of the predicate P in the formula A (P; Z) with Z allowed to vary to represent the formula: A (P; Z) & :9p; z (A (p; z) & p &lt; P ) (9) where z is a
Reference: 10. <author> V.Lifschitz Pointwise circumscription: </author> <title> preliminary report. </title> <booktitle> In: Amer. Assoc. of Ar-tif. Intell., 5th National Conference on Artif. Intell., 1986, v.1, p. </booktitle> <pages> 406-410 </pages>
Reference-contexts: To prevent causal rules from undesirable applying, T ype should be circumscribed. Without such circumscription it would be possible for some of the models to permit superfluously wide extents of the predicate. We will use the pointwise circumscription <ref> [10] </ref> to deal with the frame problem. We take J.Crawford and D.Etherington's [2] suggestion into consideration. 1 They introduced two abnormality predicates to capture the following two ideas. <p> This axioms are used here in the form proposed by F.Lin&Y.Shoham 5 Circumscription Policies As usually, whenever some circumscription policy is formulated we assume that sort and arity of each predicate variable exactly correspond to sort and arity of the initial predicate constant. 5.1 Preliminary Definitions We will denote (see <ref> [9, 10] </ref>) by Circum (A (P; Z); P ; Z) the global circumscription of the predicate P in the formula A (P; Z) with Z allowed to vary to represent the formula: A (P; Z) & :9p; z (A (p; z) & p &lt; P ) (9) where z is a <p> We remind also that <ref> [10] </ref> defined the pointwise circumscription of P in A (P,Z) with the predicate Z allowed to vary only on the part V of its domain, where V is a -expression uV (u) of the same arity as Z (u), which has no parameters and contains neither P nor Z: A (P <p> which has no parameters and contains neither P nor Z: A (P ) & :9x; z [P (x) & 8u (:V (u) z (u) Z (u)) & A (y (P (y)& x 6= y); z)]: In the sequel we will need more flexible circumscription policies that also were defined by <ref> [10] </ref>. Let V be -expression xuV (x; u) whose arity equals the sum of the arities of P and Z, and V x is the function uV (x; u) which maps every value of x into the set of all values of u satisfying V (x; u). <p> Our minimization policy is based on [2]. We will divide the minimization process into three stages in accordance with the above informal description. At the first stage, the predicate Ab is circumscribed pointwisely <ref> [10] </ref> with Holds varying on situations other then current and having T ype and W rong fixed 7 .
Reference: 11. <author> F.Lin, </author> <title> R.Reiter State Constraints Revisited. </title> <journal> J. of Logic and Computation, </journal> <note> 4 (1994), (to appear) </note>
Reference-contexts: Our approach also dealt with ramification problem, because implicit effects of actions can be found from constraints on the values of fluents. In this regard, the important distinctions proposed in <ref> [11] </ref> should be taken into account. In our opinion, the concurrent actions representation must be used for reasoning about changes extended in time, because it may happen that continuous changes are overlapped in time [21].
Reference: 12. <editor> E.Sandewall Filter preferential entailment for the logic of action in almost contin-uous worlds. </editor> <booktitle> Proc. of 11th IJCAI, </booktitle> <year> 1989, </year> <pages> 894-899 </pages>
Reference-contexts: Second, s/he can assume that an unforeseen action took place concurrently with the actions which definitely occurred and that action was the reason for the observed phenomena. 1 The idea of "filtering" appropriate models via special axioms encoding observations has been proposed by E.Sandewall in <ref> [12] </ref>. 3 Language We describe in this section the language of situation calculus and briefly review the syntactic approach to representing beliefs. 3.1 Situation Calculus We will consider a subset of MSFOL 2 .
Reference: 13. <author> E.Sandewall Features and Fluents: </author> <title> A Systematic Approach to the Representation of Knowledge about Dynamical Systems. </title> <type> Technical Report LiTH-IDA-R-94-15, </type> <note> 1994 (to be published by Oxford Un. Press) </note>
Reference: 14. <author> F.Lin, Y.Shoham. </author> <title> Concurrent actions in the situation calculus. </title> <booktitle> In: Amer. Assoc. of Artif. Intell., 10th National Conference on Artif. Intell., 1992, v.1, p. </booktitle> <pages> 590-595 </pages>
Reference-contexts: More detailed comparison can be found in our paper [20]. The papers <ref> [1, 14] </ref> also dealt with the representation of concurrent actions inside the framework of the situation calculus has appeared practically simultaneously with [20]. The paper [1] proposed an approach based upon a specific formal language A. <p> In that paper, the authors provided a translation into the language of extended logic programming and prove its soundness. It is difficult to compare our approaches because our languages differs considerably. However, the paper [5] seems the most promising in this regard. The authors of <ref> [14] </ref> also proposed the method for reasoning about concurrent actions. Their approach is similar to our one to some extent, because it is based on the situation calculus and circumscription too. <p> Because global actions which will be executed are described by explicit enumeration of what primitive actions they contain as the components, there is no need to circumscribe In. After the closer comparison of two approaches it turns out that for <ref> [14] </ref> the issue of concurrent actions which cancel out each other's effects is more complicated then for us. They have to ensure that compound actions inherit the effects of their components [19]. <p> So, the method was very natural and it provided a monotonic solution to the action-oriented frame-problem <ref> [14] </ref>. <p> We coped with the fluent oriented frame problem and the complexity of our solution is less than the complexity of monotonic solution. We proposed the nonmonotonic way to tackle the action-oriented frame-problem <ref> [14] </ref>. The problem of complete characterization of the preconditions ( qualification problem) can be overcame by the circumscription of the predicate W rong. Our approach also dealt with ramification problem, because implicit effects of actions can be found from constraints on the values of fluents.
Reference: 15. <author> J.McCarthy, </author> <title> P.Hayes Some philosophical problems from the standpoint of artificial intelligence. </title> <booktitle> In: Machine Intelligence, v. </booktitle> <volume> 4, </volume> <editor> (Eds. B.Meltzer and D.Michie), </editor> <publisher> Edinburgh University Press, </publisher> <year> 1969, </year> <pages> p. 463-502 </pages>
Reference: 16. <editor> J.McCarthy First order theories of individual concepts and propositions. </editor> <booktitle> In: Machine Intelligence, v. </booktitle> <volume> 9, </volume> <editor> (Eds. J.E.Hayes, D.Michie, L.I.Mikulich), </editor> <address> Chichester, </address> <publisher> Ellis Horwood Ltd., </publisher> <year> 1979, </year> <month> p.120-147 </month>
Reference-contexts: We would like also to describe agent's beliefs (explicitly represented in a subset of our language), deductions and communications. In order to allow this, the syntax of the underlying language must includes terms for formulas so that they can appear as arguments in predicates <ref> [7, 16, 17] </ref>. A first-order language so endowed with terms is called usually the reified language 3 . In accordance with a long standing tradition, in our notation we distinguish two sorts of reified formulas. <p> For example, let belief be Horn formulas composed from no more than, say, 21 disjuncts, such that each belief may contain inside no more than one level of belief nesting. 5 We can ascribe to the agents certain (even varying from one 4 Interested reader can find further details in <ref> [7, 16, 17, 24] </ref>. 5 Thus, an agent is able to believe that someone believes that "Inform", however this agent is not able to believe that someone believes that the agent believes that "Inf orm". agent to another) deductive power, if we add to a logical theory suitable axioms, for example,
Reference: 17. <institution> L.Morgenstern A first order theory of planning, </institution> <note> knowledge, </note> <editor> and action. In: </editor> <title> The-oretial Aspects of Reasoning about Knowledge (Ed. by J.Halpern), </title> <booktitle> Proc. of the conference held March 19-22, 1986, </booktitle> <publisher> Morgan Kaufmann Publ. </publisher>
Reference-contexts: We would like also to describe agent's beliefs (explicitly represented in a subset of our language), deductions and communications. In order to allow this, the syntax of the underlying language must includes terms for formulas so that they can appear as arguments in predicates <ref> [7, 16, 17] </ref>. A first-order language so endowed with terms is called usually the reified language 3 . In accordance with a long standing tradition, in our notation we distinguish two sorts of reified formulas. <p> For example, let belief be Horn formulas composed from no more than, say, 21 disjuncts, such that each belief may contain inside no more than one level of belief nesting. 5 We can ascribe to the agents certain (even varying from one 4 Interested reader can find further details in <ref> [7, 16, 17, 24] </ref>. 5 Thus, an agent is able to believe that someone believes that "Inform", however this agent is not able to believe that someone believes that the agent believes that "Inf orm". agent to another) deductive power, if we add to a logical theory suitable axioms, for example, <p> One of the most important problems here is the knowledge precondition problem <ref> [17] </ref>. Because of space limitations, we will not discuss these questions deeper. 4 Axioms We divide axioms on several groups in accordance with their intention. We will discuss here only general case. Illustrating examples will be considered further.
Reference: 18. <editor> R.Reiter The frame problem in the situation calculus: </editor> <title> a simple solution (sometimes) and a completeness result for goal regression. </title> <booktitle> In: Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <publisher> Academic Press, </publisher> <address> San Diego (CA),1991, </address> <pages> 359-380. </pages>
Reference: 19. <author> M.Shanahan E-mail message N frigate.do.395 Date: </author> <note> Wednesday, 20th January 1993, 13:12:01. </note>
Reference-contexts: After the closer comparison of two approaches it turns out that for [14] the issue of concurrent actions which cancel out each other's effects is more complicated then for us. They have to ensure that compound actions inherit the effects of their components <ref> [19] </ref>. Moreover, they concerned themselves with the problem how to take into account the fact that for an action A 10 to override the effect of some global action fA 1 ; A 2 g itself must not be overridden by another action A 23 .
Reference: 20. <author> M.E.Soutchanski, </author> <title> E.A.Ternovskaia Logical theory of concurrent actions. In: </title> <journal> Soviet J. of Computer and System Sciences, </journal> <year> 1993, </year> <month> vol.31. </month>
Reference-contexts: More detailed comparison can be found in our paper <ref> [20] </ref>. The papers [1, 14] also dealt with the representation of concurrent actions inside the framework of the situation calculus has appeared practically simultaneously with [20]. The paper [1] proposed an approach based upon a specific formal language A. <p> More detailed comparison can be found in our paper <ref> [20] </ref>. The papers [1, 14] also dealt with the representation of concurrent actions inside the framework of the situation calculus has appeared practically simultaneously with [20]. The paper [1] proposed an approach based upon a specific formal language A. In that paper, the authors provided a translation into the language of extended logic programming and prove its soundness. It is difficult to compare our approaches because our languages differs considerably. <p> We have achieved the same result without compound actions, because we divide the dynamic component of the situational ontology on two distinct primitives. In our previous paper <ref> [20] </ref> we also dealt with concurrent actions representation, but we proposed another approach. Instead of using the predicate W rong, in order to represent actions which cancel each other effects, we used another method. <p> Suppose that we know about a simple action that it can be executed only if some other actions fA 1 ; :::; A n g are not executed concurrently. In <ref> [20] </ref> we simply added conjunctively to the left side of the causal rule formulas :T ype (o; A i ) (i = 1; ::; n), to say explicitly what actions the performing operator should not contain.
Reference: 21. <editor> E.A.Ternovskaia Interval situation calculus. </editor> <booktitle> Proc. of the W/Sh 'Logic and Change', held 8th August 1994, during 11th ECAI, </booktitle> <year> 1994, </year> <pages> 153-165 </pages>
Reference-contexts: The general approach to logical representation of reasoning about processes extended in time is described in <ref> [21] </ref> Holds (Ready (c 1 ); s)&Holds (Ready (c 2 ); s) &T ype (o; SendSignal (c 1 ))&T ype (o; SendSignal (c 2 )) &:W rong (o; SendSignal (c 1 ); s; Communication (c 1 ; c 2 )) &:W rong (o; SendSignal (c 2 ); s; Communication (c 1 <p> In this regard, the important distinctions proposed in [11] should be taken into account. In our opinion, the concurrent actions representation must be used for reasoning about changes extended in time, because it may happen that continuous changes are overlapped in time <ref> [21] </ref>. It is important to note that correspondence between the situation calculus with action types and the explicit time-line temporal calculus established by Weber [22] facilitates future progress. A matter of prime concern is how to compute circumscription algorithmically [6]. This point will be addressed in our future work.
Reference: 22. <editor> J.C.Weber On the representation of concurrent actions in the situational calculus. </editor> <booktitle> Proc. of the 8th Biennual Confer. of Canadian Society of Computat. Study of Intelligence, </booktitle> <address> Ottava, </address> <month> 22-23 May, </month> <year> 1990, </year> <pages> 28-32. </pages>
Reference-contexts: Section 7 compares our approach with other works. The last Section 8 notes some possible extensions and summarizes our proposal. 2 Preliminaries In this section we briefly describe approaches from which our work originates. Our approach to concurrent actions representation stem from the idea of J.Weber <ref> [22] </ref>. He proposed to represent the dynamic component of the situational calculus ontological scheme by two distinct ontological entities. The first of them is a single action, second one is an operator. Roughly speaking, an operator is simultaneously performing actions, however it is an independent entity. <p> It is important to note that correspondence between the situation calculus with action types and the explicit time-line temporal calculus established by Weber <ref> [22] </ref> facilitates future progress. A matter of prime concern is how to compute circumscription algorithmically [6]. This point will be addressed in our future work.
Reference: 23. <institution> M.Wooldridge The logic of an agent-oriented testbed for DAI, </institution> <note> (this volume) </note>
Reference: 24. <author> M.Wooldridge, </author> <title> M.Fisher A first-order branching time logic of multi-agent systems. </title> <booktitle> Proc. of the 10th ECAI, </booktitle> <year> 1992, </year> <month> 234-238. </month> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: For example, let belief be Horn formulas composed from no more than, say, 21 disjuncts, such that each belief may contain inside no more than one level of belief nesting. 5 We can ascribe to the agents certain (even varying from one 4 Interested reader can find further details in <ref> [7, 16, 17, 24] </ref>. 5 Thus, an agent is able to believe that someone believes that "Inform", however this agent is not able to believe that someone believes that the agent believes that "Inf orm". agent to another) deductive power, if we add to a logical theory suitable axioms, for example,
References-found: 24

