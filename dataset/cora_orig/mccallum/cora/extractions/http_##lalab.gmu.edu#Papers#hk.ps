URL: http://lalab.gmu.edu/Papers/hk.ps
Refering-URL: http://www.cs.wisc.edu/icml98/schedule.html
Root-URL: 
Email: tecuci@gmu.edu  hkeeling@gmu.edu  
Title: Teaching an Agent to Test Students  
Author: Gheorghe Tecuci Harry Keeling 
Address: 4400 University Dr., Fairfax, VA 22030-4444  4400 University Dr. Fairfax, VA 22030-4444  
Affiliation: Dept. of Computer Science George Mason University  Dept. of Computer Science George Mason University  
Abstract: This paper presents an innovative application of the Disciple Learning Agent Shell to the building of an educational agent that generates history tests for middle school students, to assist in the assessment of their understanding and use of higher-order thinking skills. Disciple is an apprenticeship, multistrategy learning agent that can be taught by an expert how to perform domainspecific tasks in a way that resembles the way an apprentice would be taught by the expert. Disciple has been taught by an educator to generate and answer basic test questions and to explain the answers. From its interaction with the educational expert, Disciple has learned general rules that allow it to generate a large number of new test questions for students, together with hints, answers, and explanations of the answers. As a result, it can guide the students during their practice of higher-order thinking skills as they would be directly guided by the educator. The Disciple agent is also a useful tool for the educator, being able to generate a different exam for each student in the class. It has been experimentally evaluated by history experts, students and teachers, with very promising results. The work on developing this educational agent illustrates an integration of machine learning, knowledge acquisition, problem solving and intelligent-tutoring systems in the context of computer-based assessment involving multimedia documents. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Beyer, B. </author> <year> (1987). </year> <title> Practical Strategies for the Teaching of Thinking. </title> <publisher> Allyn and Bacon, Inc. </publisher> <address> Boston, MA. </address>
Reference: <author> Beyer, B. </author> <year> (1988). </year> <title> Developing a Thinking Skills Program. </title> <publisher> Allyn and Bacon, Inc. </publisher> <address> Boston, MA. </address>
Reference: <author> Bloom, B. </author> <year> (1956). </year> <title> Taxonomy of Educational Objectives </title> . 
Reference: <editor> David McKay Co., </editor> <publisher> Inc. </publisher> <address> New York. </address>
Reference: <author> DeJong, G. and Mooney, R. </author> <year> (1986). </year> <title> "Explanation-Based Learning: An Alternative View," </title> <journal> Machine Learning , Vol. </journal> <volume> 1, </volume> <pages> pp. 145-176. </pages>
Reference: <author> Fontana, L., Debe, C., White, C. and Cates, W. </author> <year> (1993). </year> <title> Multimedia: Gateway to Higher-Order Thinking Skills in Progress. </title> <booktitle> In Proc. of the National Convention of the Association for Educational Communications and Technology. </booktitle>
Reference: <author> Gruber, T. R. </author> <year> (1993). </year> <title> Toward principles for the design of ontologies used for knowledge sharing. </title> <editor> In Guarino, N. and Poli, R. (editors), </editor> <title> Formal Ontology in Conceptual Analysis and Knowledge Representation , Kluwer Academic. </title>
Reference-contexts: BUILDING THE TEST GENERATION AGENT The knowledge base of any Disciple agent contains an ontology <ref> (Gruber, 1993) </ref> and a set of rules. To build the test generation agent the educator (possibly assisted by a knowledge engineer) has to first develop the agents ontology and then to teach the agent how to generate test questions.
Reference: <author> Hamburger H. and Tecuci G. </author> <year> (1998). </year> <title> Toward a Unification of Human-Computer Learning and Tutoring, </title> <note> submitted to ITS98. </note>
Reference-contexts: examples and explanations, and then it is able to provide similar examples and explanations to the students (as part of the generated tests), it could be considered as being a preliminary example of a new type of educational agent that can be taught by an educator to teach the students <ref> (Hamburger and Tecuci, 1998) </ref>. From the point of view of the artificial intelligence research, this work shows an integration of machine learning and knowledge acquisition with problem solving and intelligent-tutoring systems.
Reference: <author> Lenat, D. B. and Guha, R. V. </author> <year> (1990). </year> <title> Building Large Knowledge-Based Systems: Representation and Inference in the CYC Project . Addison-Wesley, </title> <address> Reading, Massachusetts. </address>
Reference: <editor> Michalski, R.S. and Tecuci, G., Eds. </editor> <booktitle> (1994) Machine Learning: A Multistrategy Approach Volume 4, </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: The central idea of the Disciple approach is to facilitate the agent building process by the use of synergism at three different levels. First, there is synergism between different learning methods employed by the agent <ref> (Michalski and Tecuci, 1994) </ref>. By integrating complementary learning methods (such as inductive learning from examples, explanation-based learning, learning by analogy, learning by experimentation) in a dynamic way, the Disciple agent is able to learn from the human expert in situations in which no single strategy learning method would be sufficient.
Reference: <author> Mitchell, T.M., Keller, T., and Kedar-Cabelli, S., </author> <title> "Explanation-Based Generalization: A Unifying View," </title> <journal> Machine Learning, </journal> <volume> Vol. 1, </volume> <pages> pp. 47-80, </pages> <year> 1986. </year>
Reference: <author> Mitchell T.M., Mahadevan S., and Steinberg L.I. </author> <year> (1985). </year> <title> LEAP: A Learning Apprentice System for VLSI Design, </title> <booktitle> in Proc. IJCAI-85. </booktitle>
Reference-contexts: They form a team in which the agent solves the more routine but labor intensive parts of the problem and the expert solves the more creative ones. In the process, the agent learns from the expert, gradually evolving toward an "intelligent" agent <ref> (Mitchell et al., 1985) </ref>. We claim that the Disciple approach significantly reduces the involvement of the knowledge engineer in the process of building an intelligent agent, most of the work being done directly by the domain expert.
Reference: <author> Quillian, M. R. </author> <year> (1968). </year> <title> Semantic Memory, </title> <editor> In Minsky, M. (editor), </editor> <booktitle> Semantic Information Processing , pp. </booktitle> <pages> 227-270, </pages> <address> Cambridge, Mass: </address> <publisher> MIT Press. </publisher>
Reference: <editor> Tecuci, G. and Kodratoff, Y. (editors), </editor> <year> (1995). </year> <title> Machine Learning and Knowledge Acquisition: Integrated Approaches, </title> <publisher> Academic Press. </publisher>
Reference-contexts: Second, there is synergism between experts teaching of the agent and the agents learning from the expert <ref> (Tecuci and Kodratoff, 1995) </ref>. For instance, the expert may select representative examples to teach the agent, may provide explanations, and may answer agents questions.
Reference: <editor> Tecuci G. </editor> <title> (1998) Building Intelligent Agents: An Apprenticeship Multistrategy Learning Theory, Methodology, Tool and Case Studies, </title> <publisher> Academic Press, to appear. </publisher>
Reference-contexts: 1. INTRODUCTION For several years we have been developing the Disciple theory, methodology and tool for building intelligent agents <ref> (Tecuci, 1998) </ref>. The defining feature of the Disciple approach to building agents is that a person teaches the agent how to perform domainspecific tasks. <p> examples and explanations, and then it is able to provide similar examples and explanations to the students (as part of the generated tests), it could be considered as being a preliminary example of a new type of educational agent that can be taught by an educator to teach the students <ref> (Hamburger and Tecuci, 1998) </ref>. From the point of view of the artificial intelligence research, this work shows an integration of machine learning and knowledge acquisition with problem solving and intelligent-tutoring systems.
References-found: 15

