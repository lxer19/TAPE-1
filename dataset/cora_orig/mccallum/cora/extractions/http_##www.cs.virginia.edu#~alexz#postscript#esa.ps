URL: http://www.cs.virginia.edu/~alexz/postscript/esa.ps
Refering-URL: http://www.cs.virginia.edu/~alexz/abstract/esa_abs.html
Root-URL: http://www.cs.virginia.edu
Title: Approaching the 5/4-Approximation for Rectilinear Steiner Trees  give efficient algorithms to find approximations of such  
Author: Piotr Berman Ulrich Fomeier Marek Karpinski Michael Kaufmann Alexander Zelikovsky k 
Keyword: Algorithms, approximations, Steiner tree  
Note: 48 1:271, respectively, and  
Date: September 29, 1995  
Abstract: The rectilinear Steiner tree problem requires a shortest tree spanning a given vertex subset in the plane with rectilinear distance. It was proved that the output length of Zelikovsky's [25] and Berman/Ramaiyer [3] heuristics is at most 1.375 and 97 72 1:347 of the optimal length, respectively. It was claimed that these bounds are not tight. Here we improve these bounds to 1.3125 and 61 quality. We also prove that for Zelikovsky's heuristic this bound cannot be less than 1.3. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proc. of 33d Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> 14-23, </pages> <year> 1992. </year>
Reference-contexts: NSP belongs to M AXSN P -class [5], so the constant factor approximation algorithm exists [22] and for some " &gt; 1, "-approximation is N P -complete <ref> [1] </ref>.
Reference: [2] <author> V. Arora, V. Santosh, H. Saran and V. Vazirani. </author> <title> A limited-backtrack greedy schema for approximation algorithms. </title> <type> Manuscripts, </type> <year> 1993. </year>
Reference: [3] <author> P. Berman and V. Ramaiyer. </author> <title> Improved approximations for the Steiner tree problem. </title> <booktitle> In Proc. of 3d Annual ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> 325-334, </pages> <year> 1992. </year>
Reference-contexts: A well-known minimum spanning tree heuristic for the Steiner tree problem approximates a Steiner minimal tree with a minimum length spanning tree (MST) of a complete graph G S . Hwang [14] proved that the performance ratio of this heuristic equals exactly 3 2 . Zelikovsky [25] and Berman/Ramaiyer <ref> [3] </ref> gave two better heuristics for RSP. Now we give a more precise analysis of the performance ratio of these heuristics. Our results are the following: 1. Zelikovsky's algorithm has a performance ratio of at most 1.3125 and at least 1.3. 2. <p> The Berman/Ramaiyer algorithm has a performance ratio of at most 61 48 1:271. 3. The now best approximation of factor 1.271 can be found in time O (n log 3 n) considerably improving the previous approximation <ref> [3] </ref> not only in quality, but also in efficiency. The previous time bound was O (n 3:5 ). In the next subsection we review the two approaches of Zelikovsky and Berman/Ramaiyer. In Sections 2, 3 and 4 we derive new estimations for the qualities of the approximations. <p> So t 2 is the length of the MST of G S and Hwang [14] proved that t 2 3 2 s. Zelikovsky [25] proved that t 3 5 4 s. Berman/Ramaiyer <ref> [3] </ref> proved that in general t k 2k1 2k2 s. It is easy to see that that these bounds are tight for k = 2; 3 but there is a conjecture that t k 2k 2k1 s for k 4. <p> Zelikovsky's heuristic uses a greedy choice of triples, so further we call it greedy algorithm (GA). The Berman/Ramaiyer approach is more involved <ref> [3] </ref>. It consists of two phases. Evaluation Phase. <p> or GA has a length at most t 2 + 3 (2) How we can bound the values (1) and (2)? It is not difficult to see that t fl 3 t 3 and t fl (1) and (2) are at most 11 8 s and 97 72 s, respectively <ref> [3] </ref>. In the next section we elaborate tools for a better bound of t fl 3 and construct two appropriate spanning trees of S (a new proof t 2 1:5s). <p> In <ref> [3] </ref> and [9] the following useful restriction has been shown for triples and can easily be generalized for quadruples: Lemma 9 There is a minimal 4-restricted Steiner tree using only tree stars where the rectangles defined by the point sets fu,vg, fv,wg and fw,zg are empty, i.e. they contain no other <p> So we run an involved version of the algorithm described in <ref> [3] </ref> with four phases: a Triple Insertion Phase, a Quadruple Insertion Phase, a Selection Phase and a Construction Phase (Tab. 7). <p> This paper almost closes the first approach to improve the approximation ratio for rectilinear Steiner trees, bringing the ratio down from 3/2 [14], via 11/8 <ref> [25, 3] </ref> now to 61/48, which is very close 24 to 5/4. A slight improvement might be achievable by considering the triples and quadruples together in the Berman/Ramaiyer-algorithm instead of separating them. But the next really important question is to jump below the 5/4-barrier.
Reference: [4] <author> M. Bern, R. L. Graham. </author> <title> The Shortest-Network Problem. </title> <journal> Sci. American, </journal> <volume> 1, </volume> <pages> 66-71, </pages> <year> 1989. </year>
Reference-contexts: We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends <ref> [4] </ref>. In the rectilinear case, the distance between two points is the sum of the differences of their x and ycoordinates. The rectilinear Steiner tree problem (RSP) got recently new importance in the development of techniques for VLSI routing [16, 18].
Reference: [5] <author> M. Bern and P. Plassmann. </author> <title> The Steiner problems with edge lengths 1 and 2. </title> <journal> Inform. Process. Lett. </journal> <volume> 32: </volume> <pages> 171-176, </pages> <year> 1989. </year>
Reference-contexts: The quality of an approximation algorithm is measured by its performance ratio: an upper bound of the ratio between the achieved length and the optimal length. NSP belongs to M AXSN P -class <ref> [5] </ref>, so the constant factor approximation algorithm exists [22] and for some " &gt; 1, "-approximation is N P -complete [1].
Reference: [6] <author> D. Du and F.K. Hwang. </author> <title> An approach for proving lower bounds: solution of Gilbert-Pollak's conjecture on Steiner ratio. </title> <booktitle> In Proc. of 31st Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> 76-85, </pages> <year> 1990. </year>
Reference: [7] <author> D. Du, Y. Zhang and Q. Feng. </author> <title> On better heuristic for Euclidean Steiner minimum trees. </title> <booktitle> In Proc. of 32nd Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> 431-439, </pages> <year> 1991. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4].
Reference: [8] <author> D. Eppstein, </author> <title> G.F. Italiano, </title> <editor> et al. </editor> <title> Maintaining of a Minimum Spanning Forest in a Dynamic Planar Graph. </title> <booktitle> Proceedings, 1st ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> 1-11, </pages> <year> 1990. </year>
Reference-contexts: Its approximation ratio is at most 61 48 + 7 (232 r2 ) . For the running time the only problem is maintaining an MST in Phase 3. But since the structure always stays planar we can use the data structure introduced in <ref> [8] </ref> that allows maintaining an MST 20 Phase 1: E := fd (u; v) : u; v 2 Sg; M := M ST (E); Compute the triples t 3 i and store them; repeat r m log n times: Sort the triples due to their gains in decreasing order; compute j: <p> So every pair of edges that ever appear in the course of the algorithm has no crossing. This allows 23 in the Selection Phase maintaining an MST in time O (log n) per step <ref> [8] </ref>. Thus the time bound of Theorem 6 is proved.
Reference: [9] <author> U. Fomeier, M. Kaufmann and A. Zelikovsky. </author> <title> Faster Approximation Algorithms for the Rectilinear Steiner Tree Problem. </title> <booktitle> Lect. Notes in Comp. Sc. </booktitle> <volume> 762, </volume> <pages> 533-542, </pages> <year> 1993. </year>
Reference-contexts: In this section we show that it is sufficient to regard only a linear number of triples and quadruples. In <ref> [9] </ref> we have shown analogous results just for triples: Lemma 8 It is sufficient to consider O (n) triples and this set can be constructed in time O (nlog 2 n). <p> Since the only condition for our triples is that at the end of triple insertion there is no more triple with positive gain, we can use the triples constructed in <ref> [9] </ref>. So it remains to show that a linear number of quadruples is enough for our algorithm. From Fig. 1 we know that all quadruples have one of the shapes shown in Fig. 13 and Fig. 14. For a point p, p.x and p.y denote its x- and y-coordinate respectively. <p> In [3] and <ref> [9] </ref> the following useful restriction has been shown for triples and can easily be generalized for quadruples: Lemma 9 There is a minimal 4-restricted Steiner tree using only tree stars where the rectangles defined by the point sets fu,vg, fv,wg and fw,zg are empty, i.e. they contain no other points. <p> Proof. The proof is easy and can be found in <ref> [9] </ref>; the two candidates for z can be found as follows: Let c be the projection of w on the Steiner chain and D the 45 ffi diagonal through c with positive gradient. <p> But then the distance between the Steiner points is larger than 2a 1 and the cross quadruple is long. - So the number of short cross quadruples with given left root and bottom point is constant ( 2). We can apply the proof given in <ref> [9] </ref> for triples and get an analogous result: Lemma 20 If there are at least two cross quadruples with the same left root, their bottom points cannot be bottom points of other left roots. <p> From the coordinates of these points we compute the maximal empty butterfly for point v. Then we construct the corresponding vertical line segments and store them in a segment tree. 6.2 Cross Quadruples Now we describe how to compute cross quadruples: We use the denotations of Fig. 12. In <ref> [9] </ref> we gave an algorithm to find a linear number of (left,bottom)-pairs for triples. And to complete the triples, we had to show how to find the top points. <p> Here we only have to describe how to find the two possible pairs of points w and z to a given pair of left and bottom points u and v. For then we can apply the algorithm given in <ref> [9] </ref>: Lemma 21 The operations on the left and bottom points can be performed in time O (n log 2 n). So let u and v be a given pair of a left root and a bottom point. <p> We need only time O (n log n) for these operations and O (n log 2 n) time for the operations on the left and bottom points as being described in <ref> [9] </ref>. As a final step we have to test the conditions for our candidates, e.g. if a 1 is still the minimum distance between the corresponding points and the adjacent Steiner points, etc. <p> In the next section, we try to speed up the algorithm to achieve a better running time. We generalize the parameterized method presented in <ref> [9] </ref> to be applicable to triples and quadruples. 7 A Faster Approximation The main idea is not to update the whole configuration after each step, since this is costly. <p> The algorithm chooses these new edges in such a way that the structure remains planar (we shall show later that this is always possible). The main difference to the algorithm described in <ref> [9] </ref> is that we now have to run a Selection Phase which we could avoid in the case of considering only triples. <p> Phase 1 is the same as in the algorithm in <ref> [9] </ref>, so we only analyze Phase 2. The loss due to a) and b) is easily counted: In [9] we proved how much loss we get finishing after O (log n) rounds and ignoring stars with artificial edges. <p> Phase 1 is the same as in the algorithm in <ref> [9] </ref>, so we only analyze Phase 2. The loss due to a) and b) is easily counted: In [9] we proved how much loss we get finishing after O (log n) rounds and ignoring stars with artificial edges. Analogously we can state that the total loss here can be bounded by the fraction 1 96 r2 + 3 m of the total gain. <p> The introduction of new techniques for estimat ing the length of different classes of Steiner trees enables to considerably improve the best known approximation factors. Somewhat surprisingly, the same time bounds of O (n log 2 n) can be achieved as before <ref> [9] </ref>, although we have to use much more involved methods. This paper almost closes the first approach to improve the approximation ratio for rectilinear Steiner trees, bringing the ratio down from 3/2 [14], via 11/8 [25, 3] now to 61/48, which is very close 24 to 5/4.
Reference: [10] <author> G. Frederickson. </author> <title> Data Structures for On-Line Updating of Minimum Spanning Trees, with Applications. </title> <journal> SIAM Journal of Computing, </journal> <volume> 14, </volume> <pages> 781-789, </pages> <year> 1985. </year>
Reference-contexts: The operations of the algorithm itself are mainly update-operations on a minimum spanning tree, which can be performed in time O ( p n) each <ref> [10] </ref>. We conclude this subsection with the following theorem: Theorem 5 For any rectilinear Steiner tree problem an 1.271-approximation can be found in time O (n 3=2 ). In the next section, we try to speed up the algorithm to achieve a better running time.
Reference: [11] <author> M. R. Garey, D. S. Johnson. </author> <title> The Rectilinear Steiner Problem is NP-Complete. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 32, </volume> <pages> 826-834, </pages> <year> 1977. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4]. <p> The final version we want to mention is the network Steiner problem (NSP) where the point set is a subset of the vertices and the tree edges must belong to the graph. All these problems are N P -complete <ref> [11, 15] </ref>, so many approximation algorithms for Steiner minimal trees appeared in the last two decades. The quality of an approximation algorithm is measured by its performance ratio: an upper bound of the ratio between the achieved length and the optimal length.
Reference: [12] <author> E. N. Gilbert, H. O. Pollak. </author> <title> Steiner Minimal Trees. </title> <journal> SIAM J. Appl. Math., </journal> <volume> 32, </volume> <pages> 826-834, </pages> <year> 1977. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4]. <p> T is called a full Steiner tree if all terminals are leaves in T . We can split T at terminals with degree more than one into edge-disjoint full Steiner trees which are called full Steiner components of T <ref> [12] </ref>. T is called k-restricted if every full component of T has at most k terminals. The length of the shortest krestricted Steiner tree of S is denoted by t k = t k (S), and s = t n denotes the length of the optimal Steiner tree.
Reference: [13] <author> M. Hanan. </author> <title> On Steiner's Problem with Rectilinear Distance. </title> <journal> SIAM J. Appl. </journal> <volume> Math.,14, </volume> <pages> 255-265, </pages> <year> 1966. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4].
Reference: [14] <author> F. K. Hwang. </author> <title> On Steiner Minimal Trees with Rectilinear Distance. </title> <journal> SIAM J. Appl. </journal> <volume> Math.,30, </volume> <pages> 104-114, </pages> <year> 1976. </year>
Reference-contexts: A well-known minimum spanning tree heuristic for the Steiner tree problem approximates a Steiner minimal tree with a minimum length spanning tree (MST) of a complete graph G S . Hwang <ref> [14] </ref> proved that the performance ratio of this heuristic equals exactly 3 2 . Zelikovsky [25] and Berman/Ramaiyer [3] gave two better heuristics for RSP. Now we give a more precise analysis of the performance ratio of these heuristics. Our results are the following: 1. <p> The length of the shortest krestricted Steiner tree of S is denoted by t k = t k (S), and s = t n denotes the length of the optimal Steiner tree. So t 2 is the length of the MST of G S and Hwang <ref> [14] </ref> proved that t 2 3 2 s. Zelikovsky [25] proved that t 3 5 4 s. Berman/Ramaiyer [3] proved that in general t k 2k1 2k2 s. <p> i + i=1 i d (C) i=1 i + i=1 i : To prove Lemma 1 it is sufficient to note that by definition of fl i , d (T ff ) = i=1 i = i=1 i + i=1 i = t fl n X fl ff - Hwang <ref> [14] </ref> proved that there is a minimal Steiner tree for which an arbitrary full component may have only the two possible types (i) and (ii) in Fig. 1. <p> terminal set of F , we obtain the following Lemma 4 The terminals of a Steiner component can be spanned with two trees T op and Bot of the total length d (T op) + d (Bot) 3d (F ) j=1 p X Rest j - (9) Corollary 1 (Hwang <ref> [14] </ref>) For any instance of RSP, 2t 2 3s - 3 A Performance Ratio of BR3 and GA Theorem 1 For any instance of the rectilinear Steiner tree problem, 6t 2 + 8t fl Proof. It is sufficient to prove inequality (10) for a full Steiner tree F . <p> Somewhat surprisingly, the same time bounds of O (n log 2 n) can be achieved as before [9], although we have to use much more involved methods. This paper almost closes the first approach to improve the approximation ratio for rectilinear Steiner trees, bringing the ratio down from 3/2 <ref> [14] </ref>, via 11/8 [25, 3] now to 61/48, which is very close 24 to 5/4. A slight improvement might be achievable by considering the triples and quadruples together in the Berman/Ramaiyer-algorithm instead of separating them. But the next really important question is to jump below the 5/4-barrier.
Reference: [15] <author> R. M. Karp. </author> <title> Reducibility among combinatorial problems. </title> <editor> In Miller and Thatcher (eds.), </editor> <title> Complexity of Computer Computations, </title> <publisher> Plenum Press, </publisher> <address> New York, 85-103, </address> <year> 1972. </year>
Reference-contexts: The final version we want to mention is the network Steiner problem (NSP) where the point set is a subset of the vertices and the tree edges must belong to the graph. All these problems are N P -complete <ref> [11, 15] </ref>, so many approximation algorithms for Steiner minimal trees appeared in the last two decades. The quality of an approximation algorithm is measured by its performance ratio: an upper bound of the ratio between the achieved length and the optimal length.
Reference: [16] <author> B. Korte, H. J. Promel, A. Steger. </author> <title> Steiner Trees in VLSI-Layouts. </title> <editor> In Korte et al.: </editor> <title> Paths, Flows and VLSI-Layout, </title> <publisher> Springer, </publisher> <year> 1990. </year>
Reference-contexts: In the rectilinear case, the distance between two points is the sum of the differences of their x and ycoordinates. The rectilinear Steiner tree problem (RSP) got recently new importance in the development of techniques for VLSI routing <ref> [16, 18] </ref>. The final version we want to mention is the network Steiner problem (NSP) where the point set is a subset of the vertices and the tree edges must belong to the graph.
Reference: [17] <author> F. T. Leighton and S. Rao. </author> <title> An approximate max-flow min-cut theorem for uniform multicom-modity flow problems with application to approximation algorithms. </title> <booktitle> In Proc. of 29th Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> 422-431, </pages> <year> 1988. </year>
Reference: [18] <author> Th. Lengauer. </author> <title> Combinatorial Algorithms for Integrated Circuit Layout. </title> <publisher> John Wiley, </publisher> <year> 1990. </year>
Reference-contexts: In the rectilinear case, the distance between two points is the sum of the differences of their x and ycoordinates. The rectilinear Steiner tree problem (RSP) got recently new importance in the development of techniques for VLSI routing <ref> [16, 18] </ref>. The final version we want to mention is the network Steiner problem (NSP) where the point set is a subset of the vertices and the tree edges must belong to the graph.
Reference: [19] <author> K. Mehlhorn. </author> <title> Data Structures and Algorithms III: Multidimensional Data Structures and Computational Geometry. </title> <publisher> Springer, </publisher> <year> 1985. </year> <month> 25 </month>
Reference-contexts: The built-up of the data structure and all the queries can be performed in time O (n log 2 n) <ref> [19] </ref>. From the coordinates of these points we compute the maximal empty butterfly for point v. Then we construct the corresponding vertical line segments and store them in a segment tree. 6.2 Cross Quadruples Now we describe how to compute cross quadruples: We use the denotations of Fig. 12. <p> If there is no z 1 corresponding to w 1 , we can stop immediately with a negative result. A direct implementation of the range queries as being described in <ref> [19] </ref> is sufficient to find all the points w and z provided that the left and bottom points are given.
Reference: [20] <author> V. J. Rayward-Smith, </author> <title> The computation of nearly minimal Steiner trees in graphs. </title> <journal> International J. Math. Ed. Sci. Tech. </journal> <volume> 14: </volume> <pages> 15-23, </pages> <year> 1983. </year>
Reference: [21] <author> D. Richards. </author> <title> Fast Heuristic Algorithms for Rectilinear Steiner Trees. </title> <journal> Algorithmica, </journal> <volume> 4, </volume> <pages> 191-207, </pages> <year> 1989. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4].
Reference: [22] <author> H. Takahashi and A. </author> <title> Matsuyama. An approximate solution for the Steiner problem in graphs. </title> <journal> Math. Japonica, </journal> <volume> 24: </volume> <pages> 573-577, </pages> <year> 1980. </year>
Reference-contexts: The quality of an approximation algorithm is measured by its performance ratio: an upper bound of the ratio between the achieved length and the optimal length. NSP belongs to M AXSN P -class [5], so the constant factor approximation algorithm exists <ref> [22] </ref> and for some " &gt; 1, "-approximation is N P -complete [1].
Reference: [23] <author> B. M. Waxman and M. Imase. </author> <title> Worst case-performance of Rayward-Smith's Steiner tree heuristic. </title> <journal> Inform. Process. Lett. </journal> <volume> 29: </volume> <pages> 283-287, </pages> <year> 1988. </year>
Reference: [24] <author> Y. F. Wu, P. Widmayer, C. K. Wong. </author> <title> A Faster Approximation Algorithm for the Steiner Problem in Graphs. </title> <journal> Acta Informatica 23, </journal> <pages> 223-229, </pages> <year> 1986. </year>
Reference-contexts: A Steiner tree is a tree in the plane which contains S. The Steiner tree problem is to find the Steiner tree of minimal length. There are several versions of the problem, extensively described in the literature <ref> [7, 11, 12, 13, 21, 24] </ref>. We will describe the three most important versions: The Euclidean Steiner problem is the version where the tree edges are straight lines and the length of an edge is the Euclidean distance between its ends [4].
Reference: [25] <author> A. Z. Zelikovsky. </author> <title> An 11/8-approximation Algorithm for the Steiner Problem on Networks with Rectilinear Distance. In Sets, Graphs and Numbers. </title> <journal> Coll. Math. Soc. J. </journal> <volume> Bolyai 60: </volume> <pages> 733-745, </pages> <year> 1992. </year>
Reference-contexts: A well-known minimum spanning tree heuristic for the Steiner tree problem approximates a Steiner minimal tree with a minimum length spanning tree (MST) of a complete graph G S . Hwang [14] proved that the performance ratio of this heuristic equals exactly 3 2 . Zelikovsky <ref> [25] </ref> and Berman/Ramaiyer [3] gave two better heuristics for RSP. Now we give a more precise analysis of the performance ratio of these heuristics. Our results are the following: 1. Zelikovsky's algorithm has a performance ratio of at most 1.3125 and at least 1.3. 2. <p> So t 2 is the length of the MST of G S and Hwang [14] proved that t 2 3 2 s. Zelikovsky <ref> [25] </ref> proved that t 3 5 4 s. Berman/Ramaiyer [3] proved that in general t k 2k1 2k2 s. It is easy to see that that these bounds are tight for k = 2; 3 but there is a conjecture that t k 2k 2k1 s for k 4. <p> It was proved that the output of this heuristic, which consists of chosen triples and the rest of MST-edges, has length at most t 2 +t 3 2 <ref> [25] </ref>. Zelikovsky's heuristic uses a greedy choice of triples, so further we call it greedy algorithm (GA). The Berman/Ramaiyer approach is more involved [3]. It consists of two phases. Evaluation Phase. <p> This paper almost closes the first approach to improve the approximation ratio for rectilinear Steiner trees, bringing the ratio down from 3/2 [14], via 11/8 <ref> [25, 3] </ref> now to 61/48, which is very close 24 to 5/4. A slight improvement might be achievable by considering the triples and quadruples together in the Berman/Ramaiyer-algorithm instead of separating them. But the next really important question is to jump below the 5/4-barrier.
Reference: [26] <author> A.Z. Zelikovsky. </author> <title> A Faster Approximation Algorithm for the Steiner Tree Problem in Graphs. </title> <journal> Inform. Process. Lett. </journal> <volume> 46: </volume> <pages> 79-83, </pages> <year> 1993. </year> <month> 26 </month>
Reference-contexts: By Lemma 2, fl i = x i x fl ind (e i ) = ffi i : (3) Let g (z i ) denote the gain of a triangle z i with edges a, b, c. We may assume that ind (c) = ind (b) &gt; ind (a) <ref> [26] </ref>.
References-found: 26

