URL: ftp://coast.cs.purdue.edu/pub/doc/morris_worm/mit.PS.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ29.html
Root-URL: http://www.cs.purdue.edu
Title: With Microscope and Tweezers: An Analysis of the Internet Virus of November 1988  
Author: Mark W. Eichin and Jon A. Rochlis 
Date: February 9, 1989  
Address: 77 Massachusetts Avenue, E40-311 Cambridge, MA 02139  
Affiliation: Massachusetts Institute of Technology  
Abstract: In early November 1988 the Internet, a collection of networks consisting of 60,000 host computers implementing the TCP/IP protocol suite, was attacked by a virus, a program which broke into computers on the network and which spread from one machine to another. This paper is a detailed analysis of the virus programitself, as well as the reactions of the besieged Internet community. We discuss the structure of the actual program, as well as the strategies the virus used to reproduce itself. We present the chronology of events as seen by our team at MIT, one of a handful of groups around the country working to take apart the virus, in an attempt to discover its secrets and to learn the network's vulnerabilities. We describe the lessons that this incident has taught the Internet community and topics for future consideration and resolution. A detailed routine by routine description of the virus program including the contents of its built in dictionary is provided. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Hinden, J. Haverty, and A. Sheltzer, </author> <title> ``The DARPA Internet: Interconnecting Heterogeneous Computer Networks with Gateways,'' </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 16, num. 9, </volume> <pages> pp. 38-48, </pages> <month> September </month> <year> 1983. </year>
Reference: [2] <author> J. S. Quarterman and J. C. Hoskins, </author> <title> ``Notable Computer Networks,'' </title> <journal> in Communications of the ACM, </journal> <volume> vol. 29, num. 10, </volume> <pages> pp. 932-971, </pages> <month> October </month> <year> 1986. </year>
Reference: [3] <author> S. E. Luria, S. J. Gould, and S. Singer, </author> <title> A View of Life. </title> <address> Menlo Park, California: </address> <publisher> Benjamin/Cummings Publishing Company, Inc., </publisher> <year> 1981. </year>
Reference-contexts: When the host cell reproduces it unwittingly reproduces the viral genes. At some point in the future, the viral genes are activated and many virons are produced by the cell. These proceed to break out of the cell and seek out other cells to infect <ref> [3] </ref>. Some single strand DNA viruses do not kill the host cell; they use the machinery of the host cell to reproduce (perhaps slowing normal celluar growth by diverting resources) and exit the cells in a non-destructive manner [4]. A ``worm'' is an organism with an elongated segmented body.
Reference: [4] <author> J. Watson et al., </author> <title> Molecular Biology of the Gene. </title> <address> Menlo Park, California: </address> <publisher> Benjamin/Cummings Publishing Company, Inc., </publisher> <year> 1987. </year>
Reference-contexts: Some single strand DNA viruses do not kill the host cell; they use the machinery of the host cell to reproduce (perhaps slowing normal celluar growth by diverting resources) and exit the cells in a non-destructive manner <ref> [4] </ref>. A ``worm'' is an organism with an elongated segmented body. Because of the shape of their bodies worms can snake around obstacles and work their way into unexpected places. Some worms, for example the tapeworm, are parasites.
Reference: [5] <author> G. G. Simpson and W. S. Beck, </author> <title> Life: An Introduction to Biology. </title> <address> New York, New York: </address> <publisher> Harcourt, Brace and Ward, Inc., </publisher> <year> 1965. </year>
Reference-contexts: These worms reproduce by shedding one of their segments which contains many eggs. They have difficulty in reaching new hosts, since they usually leave an infected host through its excretory system and may not readily come into contact with another host <ref> [5] </ref>. In deciding which term fits the program which infected the Internet, we must decide which part of the system is analogous to the ``host''. Possibilities include the network, host computers, programs, and processes. We must also consider the actions of the program and its structure.
Reference: [6] <author> L. Castro et al., </author> <title> ``Post Mortem of 3 November ARPANET/MILNET Attack.'' </title> <institution> National Computer Security Center, </institution> <address> Ft. Meade MD, </address> <month> 8 November </month> <year> 1988. </year>
Reference-contexts: The infection never spread beyond the Internet even though there were gateways to other types of networks. One could view the infection as a worm, which ``wiggled'' throughout the network. But as Beckman points out <ref> [6] </ref> the program didn't have connected ``segments'' in any sense. Thus it can't be a worm. A model showing the computers as the ``host'' is more promising. The infection of 2 November entered the hosts, reproduced, and exited in search of new hosts to infect. <p> Lawrence Livermore National Laboratories went as far as requiring all passwords be changed, and modifying the password changing program to test new passwords against the lists that include the passwords attacked by the virus <ref> [6] </ref>. 5 However, both sets of binaries were still compiled, consuming pro cessor time on an attacked machine. 6 3 Chronology This is a description of the chronology of the virus, as seen from MIT. <p> The events described took place between Wednesday 2 November 1988 and Friday 11 November 1988. All times are stated in eastern standard time. 3.1 Wednesday: Genesis Gene Myers <ref> [6] </ref> of the NCSC analyzed the Cornell 6 mailer logs. He found that testing of the sendmail attack first occurred on 19 October 1988 and continued through 28 Octo-ber 1988. <p> Backups are good. It may be cheaper to restore from backups than to try to figure out what damage an attacker has done <ref> [6] </ref>. * Defenses must be at the host level, not the network level. Mike Muuss and Cliff Stoll have made this point quite eloquently [6]. The network performed its function perfectly and should not be faulted; the tragic flaws were in several application programs. <p> Backups are good. It may be cheaper to restore from backups than to try to figure out what damage an attacker has done <ref> [6] </ref>. * Defenses must be at the host level, not the network level. Mike Muuss and Cliff Stoll have made this point quite eloquently [6]. The network performed its function perfectly and should not be faulted; the tragic flaws were in several application programs. Attempts to fix the network are misguided. <p> Thus it is frequently automatically purged. If we log helpful information, but find it is quickly purged, we have not improved the situtation much at all. Mike Muuss-points out that frequently one can retrieve such infor mation from backups <ref> [6] </ref>, but this is not always true. * Denial of service attacks are easy. The Internet is amazingly vulnerable to such attacks. These attacks are quite difficult to prevent, but we could be much better prepared to identify their sources than we are today.
Reference: [7] <author> P. J. Denning, </author> <title> ``Computer Viruses,'' </title> <journal> American Scientist, </journal> <volume> vol. 766, </volume> <pages> pp. 236-238, </pages> <month> May-June </month> <year> 1988. </year>
Reference-contexts: Some people might argue that since the host was not destroyed in this process, that the infecting program was more like a worm than a virus. But, as mentioned earlier, not all viruses destroy their host cells. Denning <ref> [7] </ref> defines a computer worm as a program which enters a workstation and disables it. In that sense the infection could be considered a worm, but we reject this definition. The infected computers were affected but not all were ``disabled''. <p> The infected computers were affected but not all were ``disabled''. There is also no analog to the segments of a biological worm. Denning has described how many personal computer programs have been infected by viral programs <ref> [7] </ref>. These are frequently analogous to lysogenetic viruses because they modify the actual program code as stored in the computer's secondary storage. As the infected programs are copied from computer to computer through normal software distribution, the viral code is also copied.
Reference: [8] <author> D. Seeley, </author> <title> ``A Tour of the Worm,'' </title> <booktitle> in USENIX Association Winter Conference 1989 Proceedings, </booktitle> <pages> pp. 287-304, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: Conversely, there are people interested in the intricate detail of how and why certain routines were used; there should be enough detail here to satisfy them as well. Readers will also find Seely <ref> [8] </ref> and Spafford's [9] papers interesting. 1.4 Major Points This section provides an outline of the how the virus attacked and who it attacked. It also lists several things the virus did not do, but which many people seem to have attributed to the virus.
Reference: [9] <author> E. H. Spafford, </author> <title> ``The Internet Worm Program: An Analysis,'' </title> <journal> ACM SIGCOM, </journal> <volume> vol. 19, </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: Conversely, there are people interested in the intricate detail of how and why certain routines were used; there should be enough detail here to satisfy them as well. Readers will also find Seely [8] and Spafford's <ref> [9] </ref> papers interesting. 1.4 Major Points This section provides an outline of the how the virus attacked and who it attacked. It also lists several things the virus did not do, but which many people seem to have attributed to the virus. <p> The routines mentioned here are not intended to be an exhaustive list of the routines we worked on. 16 It turned out that we were wrong and the version of crypt was not the same as library version <ref> [9] </ref>. Not everything you do at 3:00am turns out to be right. of the target machines in many different places on the ``host'' computer we could also see how the virus cre ated its lists of targets. * Isolation.
Reference: [10] <author> K. Harrenstien, </author> <title> ``NAME/FINGER Protocol Protocol,'' Request For Comments NIC/RFC 742, Network Working Group, USC ISI, </title> <month> Novemeber </month> <year> 1977. </year>
Reference-contexts: All of the following points are described in more detail in Section 2. 1.4.1 How it entered * sendmail (needed debug mode, as in SunOS binary re leases) * finger <ref> [10] </ref> (only VAX hosts were victims) * remote execution system, using * rexec * rsh 1.4.2 Who it attacked * accounts with obvious passwords, such as * none at all * the user name * the user name appended to itself * the ``nickname'' * the last name * the last
Reference: [11] <author> J. </author> <title> Markoff, ``Computer Snarl: A `Back Door' Ajar,'' </title> <address> New York Times, p. B10, </address> <month> 7 November </month> <year> 1988. </year>
Reference-contexts: Debugging mode has many features, including the ability to send a mail message with a program as the recipient (i.e. the program would run, with all of its input coming from the body of the message). This is inappropriate and rumor <ref> [11] </ref> has it that the author included this feature to allow him to circumvent security on a machine he was using for testing. It certainly exceeds the intended design of the Simple Mail Transfer Protocol (SMTP) [12]. <p> The virus was tested or launched at 5:01:59pm. The logs show it infecting a second Cornell machine at 5:04pm. This may have been the genesis of the virus, but that is disputed by reports in the New York Times <ref> [11] </ref> in which Paul Graham of Harvard states the virus started on a machine at the MIT AI Lab via remote login from Cornell. Cliff Stoll of Harvard also believes that the virus was started from the MIT AI Lab. <p> list on Saturday 5 November 1988, he acknowledged being the author of the Thursday morning message and stated he had posted the message anonymously because ``at the time I didn't want to answer questions about how I knew.'' 8 An ``obscure electronic bulletin board'', according to the New York Times <ref> [11] </ref>. Nothing could be further from the truth. net 9 , being sure sendmail was compiled without the debug command, and not running rexecd. Mike Patton, Network Manager for the MIT Laboratory for Computer Science (LCS), was the first to point out to us the peculiarities of this posting.
Reference: [12] <author> J. B. Postel, </author> <title> ``Simple Mail Transfer Protocol,'' Request For Comments NIC/RFC 821, Network Working Group, USC ISI, </title> <month> August </month> <year> 1982. </year>
Reference-contexts: This is inappropriate and rumor [11] has it that the author included this feature to allow him to circumvent security on a machine he was using for testing. It certainly exceeds the intended design of the Simple Mail Transfer Protocol (SMTP) <ref> [12] </ref>. Specification of a program to execute when mail is received is normally allowed in the sendmail aliases file or users' .forward files directly, for vacation 2 , mail archive programs, and personal mail sorters. It is not normally allowed for incoming connections. <p> On 29 October 1988, there was an increased level of testing; Gene believes the virus author was attempting to send the binaries over the SMTP connections, an attempt which was bound to fail since the SMTP is only defined for 7 bit ASCII data transfers <ref> [12] </ref>. The author appeared to go back to the drawing board, returning with the ``grappling hook'' program (see section A.7) on Wednesday 2 Novem-ber 1988. The virus was tested or launched at 5:01:59pm. The logs show it infecting a second Cornell machine at 5:04pm.
Reference: [13] <author> S. Bellovin, </author> <title> ``The worm and the debug option,'' in Forum on Risks to the Public in Computers and Related Systems, vol. </title> <type> 7, num. 74, </type> <institution> ACM Committee on Computers and Public Policy, </institution> <month> 10 November </month> <year> 1988. </year>
Reference-contexts: The fact that debug was enabled by default was reported to Berkeley by several sources during the 4.2BSD release. The 4.3BSD release as well as Sun releases still had this option enabled by default <ref> [13] </ref>. The then current release of Ultrix did not have debug mode enabled, but the beta test version of the newest release did have debug enabled (it was disabled before finally being shipped).
Reference: [14] <author> J. Collyer, </author> <title> ``Risks of unchecked input in C programs,'' in Forum on Risks to the Public in Computers and Related Systems, vol. </title> <type> 7, num. 74, </type> <institution> ACM Committee on Computers and Public Policy, </institution> <month> 10 November </month> <year> 1988. </year>
Reference-contexts: The library function in question turns out to be a backward-compatibility routine, which should not have been needed after 1979 <ref> [14] </ref>. Only 4.3BSD VAX machines were attacked this way. The virus did not attempt a Sun specific attack on finger and its VAX attack failed when invoked on a Sun target.
Reference: [15] <author> J. Saltzer and M. Schroeder, </author> <title> ``The Protection of Information in Computer Systems,'' </title> <booktitle> in Proc. IEEE, </booktitle> <volume> vol. 63, num. 9, </volume> <pages> pp. 1278-1308, </pages> <publisher> IEEE, </publisher> <month> September </month> <year> 1975. </year>
Reference-contexts: The principle of ``least privilege'' <ref> [15] </ref> is violated by the existence of this password file. Typical programs have no need for a list of user names and password strings, so this privileged information should not be available to them.
Reference: [16] <author> J. Steiner, C. Neuman, and J. Schiller, </author> <title> ``Kerberos: An Authentication Service for Open Network Systems,'' </title> <booktitle> in USENIX Association Winter Conference 1988 Proceedings, </booktitle> <pages> pp. 191-202, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: The principle of ``least privilege'' [15] is violated by the existence of this password file. Typical programs have no need for a list of user names and password strings, so this privileged information should not be available to them. For example, Project Athena's network authentication system, Kerberos <ref> [16] </ref>, keeps passwords on a central server which logs authentication requests, thus hiding the list of valid user names. <p> It also trusts the machine, rather than any property of the user, leaving the account open to attack at all times rather than when the user is present <ref> [16] </ref>. The virus took advantage of the latter flaw to propagate between accounts on trusted machines.
Reference: [17] <author> M. R. Horton, </author> <title> ``How to Read the Network News,'' UNIX User's Supplementary Documents, </title> <month> April </month> <year> 1986. </year> <month> 28 </month>
Reference-contexts: This meant that one could not simply look at the binary to determine what constants the virus refered to (e.g. what files it opened). But it was a weak method of hiding the strings; it delayed efforts to understand the virus, but not for very long. 4 USENET news <ref> [17] </ref> was an effective side-channel of information spread, although a number of sites disabled that as well. 2.3 Flaws The virus also had a number of flaws, ranging from the subtle to the clumsy.
Reference: [18] <author> P. Mockapetris, </author> <title> ``Domain Names Concepts And Facilities,'' Request For Comments NIC/RFC 1034, Network Working Group, USC ISI, </title> <month> November </month> <year> 1987. </year>
Reference-contexts: were noted, if not the machines they came from. 2.3.3 Vulnerabilities not used The virus did not exploit a number of obvious opportunities. * When looking for lists of hosts to attack, it could have done ``zone transfers'' from the Internet domain name servers to find names of valid hosts <ref> [18] </ref>. Many of these records also include host type, so the search could have limited itself to the appropriate processor and operating system types. * It did not attack both machine types consistently.
Reference: [19] <author> J. </author> <title> Markoff, ``Author of Computer `Virus' Is Son of U.S. Electronic Security Expert,'' </title> <address> New York Times, p. A1, </address> <month> 5 November </month> <year> 1988. </year>
Reference-contexts: Later it was reported that the alleged author of the virus was a Cornell graduate student <ref> [19] </ref>. was infected. It was running a version of sendmail with the debug command turned on.
Reference: [20] <author> P. G. Neumann, ed., </author> <title> Forum on Risks to the Public in Computers and Related Systems, vol. </title> <type> 7, num. 69, </type> <institution> ACM Committee on Computers and Public Policy, </institution> <month> 3 November </month> <year> 1988. </year> <title> [21] ???, ``College Whiz ``Put Virus in Computers'','' </title> <address> Boston Herald, p. 1, </address> <month> 5 November </month> <year> 1988. </year>
Reference-contexts: In reality it only sometimes used telnet to ``qualify'' a machine for later attack, and only used rsh and rexec to take advantage of passwords it had guessed. A risks@kl.sri.com digest <ref> [20] </ref> came out at 6:52pm. It included a message from Cliff Stoll which described the spread of the virus on MILNET and suggested that MIL-NET sites might want to remove themselves from the network.
Reference: [22] <author> J. </author> <title> Markoff, ``U.S. Is Moving to Restrict Access To Facts About Computer Virus,'' </title> <address> New York Times, p. A28, </address> <month> 11 November </month> <year> 1988. </year>
Reference-contexts: Eventually the President of Purdue was called and the file was deleted. The New York Times ran a heavily slanted story about the incident on Friday 11 November 1988 <ref> [22] </ref>. Several mistakes were made here. First the NCSC was concerned about the wrong thing. The disassembled virus was not important and was trivial for any infected site to generate.
Reference: [23] <author> J. Mogul and J. B. Postel, </author> <title> ``Internet Standard Subnet-ting Procedure,'' Request For Comments NIC/RFC 950, Network Working Group, USC ISI, </title> <month> August </month> <year> 1985. </year>
Reference-contexts: It tries to get the point-to-point address of the interface, skipping the loop-back address. It also stores the netmask for that network <ref> [23] </ref>. Finally, it kills off the process id given with the ``-p'' option. It also changes the current process group, so that it doesn't die when the parent exits. Once this is cleaned up, it falls into the doit routine which performs the rest of the work.
Reference: [24] <author> G. Spafford, </author> <title> ``A cure!!!!!,'' in Forum on Risks to the Public in Computers and Related Systems, vol. </title> <type> 7, num. 70, </type> <institution> ACM Committee on Computers and Public Policy, </institution> <month> 3 November </month> <year> 1988. </year>
Reference-contexts: author had been as careful with error checking here as he tried to be elsewhere, he would have noted the error ``socket not connected'' every time this routine is invoked. 21 This name was actually in the symbol table of the distributed binary! 22 Although it was suggested very early <ref> [24] </ref>. A.4.2 Phase 0 The first phase of the cracksome routines reads through the /etc/hosts.equiv file to find machine names that would be likely targets.
Reference: [25] <author> R. W. Baldwin, </author> <title> Rule Based Analysis of Computer Security. </title> <type> PhD thesis, </type> <institution> MIT EE, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: It also reads the /.rhosts file, which lists the set of machines that this machine trusts root access from. Note that it does not take advantage of the trust itself <ref> [25] </ref> but merely uses the names as a list of additional machines to attack.
Reference: [26] <author> G. Spafford, </author> <title> ``A worm ``condom'','' in Forum on Risks to the Public in Computers and Related Systems, vol. </title> <type> 7, num. 70, </type> <institution> ACM Committee on Computers and Public Policy, </institution> <month> 3 November </month> <year> 1988. </year> <month> 29 </month>
Reference-contexts: to host This routine searches the host list for a given named host, returns the list entry describing it, and optionally adds it to the list if it isn't there already. 24 Since the delete command used (rm -f) did not remove directories, creating a directory /usr/tmp/sh stoped the virus <ref> [26] </ref>.
References-found: 25

