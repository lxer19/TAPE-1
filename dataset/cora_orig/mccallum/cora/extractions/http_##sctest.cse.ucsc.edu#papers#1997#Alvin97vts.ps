URL: http://sctest.cse.ucsc.edu/papers/1997/Alvin97vts.ps
Refering-URL: http://www.cse.ucsc.edu/~fjf/publications.html
Root-URL: http://www.cse.ucsc.edu
Email: alvinj@sdt1.hpl.com  fjf@cse.ucsc.edu  
Title: A Methodology for Characterizing Cell Testability Alvin Jee Semiconductor Diagnosis and Test  
Author:  F. Joel Ferguson 
Address: Street Milpitas, CA 95035  Santa Cruz, CA 95064  
Affiliation: South Main  University of California at Santa Cruz  
Abstract: There is an increasing amount of effort spent in designing integrated circuits to be more testable in hopes of increasing quality levels. Most of this effort has focused on modifying the schematic-level design of circuits to improve their stuck-at fault coverage. However, many researchers have shown that a circuits's stuck-at fault coverage is not an accurate predictor of IC quality for low values of DPM. This work focuses on improving the testability of cells at the level of abstraction that directly interacts with the manufacturing defects-the physical design level. We first define a metric for measuring the effective testability of a cell. The effective testability of a cell is based on the physical design of the cell, the circuit in which the cell is used, and the methods that will be used to test the circuit. We then show how this metric is used to guide cell design for testability. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Chess, A. Freitas, F. J. Ferguson, and T. Larrabee. </author> <title> Testing CMOS logic gates for realistic shorts. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 395-402. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: The realistically possible faults were extracted for each cell using the Carafe IFA tool [4]. In this work, only the shorts are analyzed. The behavior of each short is then determined using the CShort application <ref> [1] </ref>. The final step of the effective testability assessment procedure is to combine the cell input pattern profiles for the circuits and the set of cell input patterns that detect each fault with equation /refCellTestability to produce an effective testability number for each cell type.
Reference: [2] <author> F. J. Ferguson. </author> <title> Inductive Fault Analysis of VLSI Circuits. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, Department of Electrical and Computer Engineering, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: In this paper a fault is defined as a change in the circuit-level description of the circuit. Examples include electrical shorts and opens, and extra and missing devices. Defects that cause faults are called critical defects. Procedures such as Inductive Fault Analysis (IFA) <ref> [2] </ref> and Inductive Contamination Analysis of abstraction. (a) Failure mechanism-a particle on a mask, (b) defect-extra metal between two wires, (c)fault-wire shorted to power, and (d) behavior-line stuck-at logic 1. (ICA) [7] can be used to determine which defects are critical and determine the resulting faults.
Reference: [3] <author> J. Galiay, Y. Crouzet, and M. Vergniault. </author> <title> Physical versus logical fault models in MOS LSI circuits: Impact on their testability. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(6):527-531, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: Cell designers can use this testability measure to modify the physical design of the cells to increase the cells' testabilities. Other researchers have proposed changing the physical design of cells to make them more testable. They usually concentrate on making them testable for line stuck-at faults <ref> [3] </ref>, or to prevent sequential behavior [8, 13, 11]. What is missing from this previous work is a quantitative testability measure that can be applied to find the increase or decrease in testability after a change in the cell's physical design.
Reference: [4] <author> A. Jee. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <type> Technical Report UCSC-CRL-91-24, </type> <institution> University of California at Santa Cruz, Computer Engineering Department, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: After the cell input pattern profiles have been generated, each cell is analyzed to determine which faults may exist in them given their physical designs. The realistically possible faults were extracted for each cell using the Carafe IFA tool <ref> [4] </ref>. In this work, only the shorts are analyzed. The behavior of each short is then determined using the CShort application [1].
Reference: [5] <author> A. Jee. </author> <title> A Methodology for Characterizing Cell Testability. </title> <type> PhD thesis, </type> <institution> University of California, Santa Cruz, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: Previous research shows that a majority of the defects in standard cell circuit that are not detected by stuck-at test are those that occur within the standard cells of the circuit <ref> [5, 6] </ref>. This metric ties together the defects and faults that affect the function of the cells with the circuits in which the cells are used and the methods used to test the circuit.
Reference: [6] <author> A. Jee and F. J. Ferguson. </author> <title> An analysis of shorts in cmos standard cells circuits. </title> <booktitle> In Proceedings of the IEEE International ASIC Conference and Exhibit, </booktitle> <pages> pages 362-365. </pages> <publisher> IEEE, </publisher> <year> 1994. </year>
Reference-contexts: Previous research shows that a majority of the defects in standard cell circuit that are not detected by stuck-at test are those that occur within the standard cells of the circuit <ref> [5, 6] </ref>. This metric ties together the defects and faults that affect the function of the cells with the circuits in which the cells are used and the methods used to test the circuit.
Reference: [7] <author> J. Khare and W. Maly. </author> <title> Inductive contamination analysis (ICA) with sram applications. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 552-560. </pages> <publisher> IEEE, </publisher> <year> 1995. </year>
Reference-contexts: Defects that cause faults are called critical defects. Procedures such as Inductive Fault Analysis (IFA) [2] and Inductive Contamination Analysis of abstraction. (a) Failure mechanism-a particle on a mask, (b) defect-extra metal between two wires, (c)fault-wire shorted to power, and (d) behavior-line stuck-at logic 1. (ICA) <ref> [7] </ref> can be used to determine which defects are critical and determine the resulting faults. These electrical faults may then cause changes in the function or behavior of the circuit.
Reference: [8] <author> S. Koeppe. </author> <title> Optimal layout to avoid CMOS stuck-open faults. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 829-835. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: Other researchers have proposed changing the physical design of cells to make them more testable. They usually concentrate on making them testable for line stuck-at faults [3], or to prevent sequential behavior <ref> [8, 13, 11] </ref>. What is missing from this previous work is a quantitative testability measure that can be applied to find the increase or decrease in testability after a change in the cell's physical design.
Reference: [9] <author> T. Larrabee. </author> <title> Efficient generation of test patterns using Boolean Difference. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 795-801. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: As stated above, the first step is to generate a set of tests for the circuit using the existing test pattern generator. We used the Nemesis test pattern generator <ref> [9] </ref> to generate stuck-at tests for the circuits. The circuit is simulated using the generated test set as input to determine, for each cell in the circuit, which cell input patterns will detect faults within the cells. The Nemesis fault simulator was used at this step.
Reference: [10] <author> T. Larrabee. </author> <title> Efficient Generation of Test Patterns Using Boolean Satisfiabilivty. </title> <type> PhD thesis, </type> <institution> Stanford University, Department of Computer Science, </institution> <month> February </month> <year> 1990. </year>
Reference-contexts: Table 1 shows the number of vectors in each test set for the various circuits. The patterns generated by Nemesis I and Nemesis II are generated to target the stuck-at faults of the circuit by the Nemesis ATPG <ref> [10] </ref>. Nemesis I and Nemesis II are two different implementations of the same ATPG algorithm. The primary difference between the two versions is in the random pattern generator that is used before the deterministic pattern generation algorithm is invoked. Three random pattern sets of differing lengths were also used.
Reference: [11] <author> M. E. Levitt and J. A. Abraham. </author> <title> Physical design of testable VLSI: Techniques and experiments. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 25(2) </volume> <pages> 474-481, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Other researchers have proposed changing the physical design of cells to make them more testable. They usually concentrate on making them testable for line stuck-at faults [3], or to prevent sequential behavior <ref> [8, 13, 11] </ref>. What is missing from this previous work is a quantitative testability measure that can be applied to find the increase or decrease in testability after a change in the cell's physical design.
Reference: [12] <author> P. Maxwell, R. Aitken, V. Johansen, and I. Chiang. </author> <title> The effects of different test sets on quality level prediction: </title> <booktitle> When is 80 In Proceedings of International Test Conference, </booktitle> <pages> pages 358-364. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: Many design-for-test (DFT) techniques have been developed to improve the testability of circuits. These techniques typically gauge the increase in testability via the coverage of the traditional stuck-at faults. However, researchers have shown that a higher coverage of stuck-at faults may not necessarily translate to higher quality levels <ref> [12] </ref>. since stuck-at tests do not detect many of the defects that occur in circuits. Thus, modifying circuits to increase their stuck-at fault testability may not guarantee an increase in expected quality levels.
Reference: [13] <author> S. Reddy, M. Reddy, and J. Kuhl. </author> <title> On testable design for CMOS logic circuits. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 435-445. </pages> <publisher> IEEE, </publisher> <year> 1983. </year> <month> 7 </month>
Reference-contexts: Other researchers have proposed changing the physical design of cells to make them more testable. They usually concentrate on making them testable for line stuck-at faults [3], or to prevent sequential behavior <ref> [8, 13, 11] </ref>. What is missing from this previous work is a quantitative testability measure that can be applied to find the increase or decrease in testability after a change in the cell's physical design.
References-found: 13

