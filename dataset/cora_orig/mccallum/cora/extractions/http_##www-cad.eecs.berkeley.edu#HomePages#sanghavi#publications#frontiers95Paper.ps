URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/frontiers95Paper.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/sanghavi/publications/publications.html
Root-URL: http://www.cs.berkeley.edu
Title: A Parallel Graph Partitioner on a Distributed Memory Multiprocessor  
Author: Premal Buch Jagesh Sanghavi Alberto Sangiovanni-Vincentelli 
Address: Berkeley, CA 94720  
Affiliation: University of California,  
Abstract: In order to realize the full potential of speed-up by parallelization, it is essential to partition a problem into small tasks with minimal interactions without making this process itself a bottleneck. We present a method for graph partitioning that is suitable for parallel implementation and scales well with the number of processors and the problem size. Our algorithm uses hierarchical partitioning. It exploits the parallel resources to minimize the dependence on the starting point with multiple starts at the higher levels of the hierarchy. These decrease at the lower levels as it zeroes in on the final partitioning. This is followed by a last-gasp phase that randomly collapses partitions and repartitions to further improve the quality of the final solution. Each individual 2-way partitioning step can be performed by any standard partitioning algorithm. Results are presented on a set of benchmarks representing connectivity graphs of device and circuit simulation problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Fiduccia, C. M., and R. M. Mattheyses, </author> <title> A Linear Time Heuristic for Improving Network Partitions, </title> <booktitle> Proc. 19th Design Automation Conference, </booktitle> <pages> pp. 175-181, </pages> <year> 1982. </year>
Reference: [2] <author> Hohan, Z., Mathur, K. K., Johnsson, S. L., and T. J. R. Hughes, </author> <title> An Efficient Communication Strategy for Finite Element Methods on the Connection Machine-5 System, </title> <type> Thinking Machines Technical Report, no. 256, </type> <month> May </month> <year> 1993. </year>
Reference: [3] <author> Kirkpatrick, S., C. D. Gelatt, and M. P. Vecchi, </author> <title> Optimization by Simulated Annealing, </title> <journal> Science, </journal> <volume> vol. 220, no. 4598, </volume> <pages> pp. 671-680, </pages> <month> May 13, </month> <year> 1983. </year>
Reference-contexts: Most of the heuristics fall under one of the four categories: direct methods, group migration methods, spectral methods, simulated annealing. The group migration methods [1][4] and the simulated annealing based methods <ref> [3] </ref> are the most prevalent among these. The Fiduccia-Mattheyses (FM) heuristic is among the most popular of the group migration based methods. [6] presents an m-way partitioning heuristic.
Reference: [4] <author> Kernighan, B. W., and S. Lin, </author> <title> An Efficient Heuristic Procedure for Partitioning Graphs, </title> <journal> Bell System Technical Journal, </journal> <volume> vol. 49, no. 2, </volume> <pages> pp. 291-307, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: In case of partitioning, this drawback is not restrictive since it is possible to obtain good quality partitions by achieving pairwise optimality through exhaustive collapse-and-repartition as outlined in our algorithm. <ref> [4] </ref> reports that it may be necessary to make multiple passes at achieving pairwise optimality, since one collapse-and-repartition can affect the optimality of some other pair. In practice though, it is found that the algorithm converged in very few passes. <p> CPU Time of sequential on DEC 5000: 8227.9s. Could not complete on SunSparc4 (comparable to each processor node of CM-5) similar costs. This corroborates our expectations in Sec--tion 3.2 As suggested in <ref> [4] </ref>, we do find that the number of passes required to converge to a final solution is not very large. Each pass though can be computationally quite expensive.
Reference: [5] <author> Krishnamurthy, B., and P. Mellema, </author> <title> On the Evaluation of Mincut Partitioning Algorithms for VLSI Networks, </title> <booktitle> IEEE International Symposium on Circuits and Systems, </booktitle> <pages> pp. 12-15, </pages> <year> 1983. </year>
Reference-contexts: The group migration methods [1][4] and the simulated annealing based methods [3] are the most prevalent among these. The Fiduccia-Mattheyses (FM) heuristic is among the most popular of the group migration based methods. [6] presents an m-way partitioning heuristic. Thinking Machines Inc. has developed a spectral methods based partitioner, <ref> [5] </ref> which is one of the few parallel tools available in this area. 2.2 Why a Parallel Partitioner? Most of the above algorithms are available as good sequential partitioning tools, with linear complexity O (e), in the number of edges.
Reference: [6] <author> Sanchis, L. A., </author> <title> Multiple-Way Network Partitioning, </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 38, no. 1, </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: The group migration methods [1][4] and the simulated annealing based methods [3] are the most prevalent among these. The Fiduccia-Mattheyses (FM) heuristic is among the most popular of the group migration based methods. <ref> [6] </ref> presents an m-way partitioning heuristic.
References-found: 6

