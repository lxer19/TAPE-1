URL: http://www.isi.edu/soar/jihie/papers/ml93.ps
Refering-URL: http://www.isi.edu/soar/jihie/chunking.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: jihie@isi.edu, rosenbloom@isi.edu  
Title: Constraining Learning with Search Control  
Author: Jihie Kim and Paul S. Rosenbloom 
Address: 4676 Admiralty Way Marina del Rey, CA 90292, U.S.A.  
Affiliation: Information Sciences Institute and Computer Science Department University of Southern California  
Abstract: Many learning systems must confront the problem of run time after learning being greater than run time before learning. This utility problem has been a particular focus of research in explanation-based learning. In past work we have examined an approach to the utility problem that is based on restricting the expressiveness of the rule language so as to guarantee polynomial bounds on the cost of using learned rules. In this article we propose a new approach that limits the cost of learned rules without guaranteeing an a priori bound on the match process or restricting the expressibility of rule conditions. By making the learning mechanism sensitive to the control knowledge utilized during the problem solving that led to the creation of the new rule | i.e., by incorporating such control knowledge into the explanation | the cost of using the learned rule becomes bounded by the cost of the problem solving from which it was learned.
Abstract-found: 1
Intro-found: 1
Reference: <author> Doorenbos, B., Tambe, M., & Newell, A. </author> <year> (1992). </year> <title> Learning 10,000 chunks: </title> <booktitle> What's it like out there? Proceedings of the Tenth National Conference on Artificial Intelligence. </booktitle> <pages> (pp. 830-836). </pages>
Reference: <author> Doorenbos, B. </author> <year> (1992). </year> <note> Soar6 release notes. </note>
Reference: <author> Doorenbos, B. </author> <year> (1993). </year> <title> Matching 100,000 learned rules. </title> <booktitle> Proceedings of the Eleventh National Conference on Artificial Intelligence. (to appear). </booktitle>
Reference: <author> Laird, J., Rosenbloom, P., & Newell, A. </author> <year> (1986). </year> <title> Overgeneralization during knowledge compilation in Soar. </title> <booktitle> Proceedings of the Workshop on Knowledge Compilation. </booktitle> <pages> (pp. 46-57). </pages>
Reference-contexts: In exchange for this weakening of the guarantee, this new approach shows potential for ameliorating both of the negative side effects introduced by unique-attributes. One additional positive side-effect of the search-control approach is that it removes one possible source of overgeneralization in Soar <ref> (Laird, Rosenbloom, and Newell 1986) </ref>. Though search control is not supposed to affect the correctness of results generated in problem spaces, it sometimes unavoidably does.
Reference: <author> Minton, S. </author> <year> (1988). </year> <title> Quantitative results concerning the utility of explanation-based learning. </title> <booktitle> Proceedings of the Seventh National Conference on Artificial Intelligence. </booktitle> <pages> (pp. 564-569). </pages>
Reference-contexts: 1 Introduction The identification of the utility problem in explana-nation-based learning <ref> (Minton 1988) </ref>, has prompted considerable research on how to assure | or at least to improve the chances | that learned knowledge which is intended to speed up system performance will in fact do so, rather than slow it down.
Reference: <author> Minton, S. </author> <year> (1993). </year> <type> Personal Communication. </type>
Reference-contexts: As a result, when a new rule is acquired from a trace of this problem solving, the control rules are not included as part of the explanation of the result. This omission, which turns out to also be the approach taken in PRODIGY <ref> (Minton 1993) </ref> 1 , increases the generality of the learned rules, while it should not affect their correctness. 2 The problem with this approach, however, is that the learned rules are not now constrained by the path actually taken in the problem space, and thus can perform an exponential amount of
Reference: <author> Rosenbloom, P. S., Laird, J. E., & Newell, A. </author> <year> (1987). </year> <title> Knowlege level learning in Soar. </title> <booktitle> Proceedings of the Sixth National Conference on Artificial Intelligence. </booktitle> <pages> (pp. 499-504). </pages>
Reference: <author> Rosenbloom, P. S. & Aasman, J. </author> <year> (1990). </year> <title> Knowledge level and inductive uses of chunking (EBL). </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence. </booktitle> <pages> (pp. 821-827). </pages>
Reference-contexts: For example, with suitable control knowledge in the Grid Task <ref> (Tambe, Newell, and Rosenbloom 1990) </ref> it is possible to solve the problem of finding a path between two nodes in time that is linear in the length of the path. <p> The resulting choice is thus made in such a way that no explanation of the selection among the indifferent alternatives is possible based just on the initial situation. Consider an example from the Grid Task | a problem known to lead to expensive chunks <ref> (Tambe, Newell, and Rosenbloom 1990) </ref> | shown in Figure 2-a. The problem is to go from point F to point P, a path of length four. Because point F is connected to four adjacent points, four operators are suggested by rule operator-goto (Figure 2-b) 3 . <p> Eight-puzzle Task Average CPU Time (sec) Before Learning After Learning Original 5.31 9.75 Search control 5.30 1.55 Unique-attribute 5.72 1.21 Table 2: Average CPU time in the Eight-puzzle Task. Table 2 compares these three methods on the Eight-puzzle Task | another task known to produce expensive chunks <ref> (Tambe, Newell and Rosenbloom 1990) </ref>. In the multi-attribute representation, a state points to nine bindings (using attribute ^ binding), each of which connects a cell from the static 3x3 structure of the board to a tile.
Reference: <author> Rosenbloom, P. S., Laird, J. E., Newell, A., & McCarl, R. </author> <year> (1991). </year> <title> A preliminary analysis of the Soar architecture as a basis for general intelligence. </title> <booktitle> Artificial Intelligence 47. </booktitle> <pages> (pp. 289-325). </pages>
Reference-contexts: Our own efforts on the utility problem have focused on two subissues with respect to Soar, an architecture that combines general problem solving abilities with a chunking mechanism that is a variant of explanation-based learning <ref> (Rosenbloom, Laird, Newell, and McCarl 1991) </ref>. The first subissue is the problem of expensive chunks (Tambe, Newell, and Rosenbloom, 1990; Tambe and Rosenbloom 1990), in which individual learned rules are so expensive to use that the system suffers a slow down from learning.
Reference: <author> Shell, P. & Carbonell, J. </author> <year> (1991). </year> <title> Empirical and analytic performance of iterative operators. </title> <booktitle> The 13th Annual Conference of The Cognitive Science Society. </booktitle> <pages> (pp. 898-902). </pages>
Reference-contexts: This approach is closest in spirit to that taken in <ref> (Shell and Carbonell, 1991) </ref>. In that work, iterative paths found during problem-space search resulted in the addition of iterative constructs to the macro-operators acquired from the search. These iterative macro-operators are then used in a way that guarantees that they take the same path followed in the problem space.
Reference: <author> Tambe, M. </author> <year> (1991). </year> <title> Eliminating combinatorics from production match. </title> <type> PhD thesis, </type> <institution> Computer Science Department, Carnegie Mellon University Tambe, </institution> <note> M., </note> <author> Newell, A., & Rosenbloom, P. </author> <year> (1990). </year> <title> The problem of expensive chunks and its solution by restricting expressiveness. </title> <journal> Machine Learning, </journal> <volume> Vol. 5. </volume> <pages> (pp. </pages> <note> 299-348) Tambe, </note> <author> M., & Rosenbloom, P. </author> <year> (1990). </year> <title> A framework for investigating production system formulations with polynomially bounded match. </title> <booktitle> Proceedings of the Eighth National Conference on Artificial Intelligence. </booktitle> <pages> (pp. 693-700). </pages>
Reference-contexts: The difference in run times after learning between the search-control version and the unique-attribute version in Table 1 is also due to the extra conditions in the search-control-version chunks. However, this yields only a minor effect, as analyzed in <ref> (Tambe 1991) </ref>. The unmodified version of Soar learned general enough chunks from the first problem to cover all of the other length-six problems. The other two approaches needed to learn additional chunks for each new problem. In these problems, both learned the same number of rules with the same generality.
Reference: <author> Vera, A., Lewis R. L., & Lerch F. J. </author> <year> (1993). </year> <title> Situated decision-making and recognition-based learning: Applying symbolic theories to interactive tasks. </title> <booktitle> Proceedings of the Fifteenth Annual Conference of the Cognitive Science Society. (to appear). </booktitle>
Reference-contexts: With this option no longer available, a new approach must be employed. One possibility that was actually already under investigation independently of this work, is a form of situated reconstruction, in which reconstruction is guided by features of the immediate situation other than those to be reconstructed <ref> (Vera, Lewis and Lerch 1993) </ref>. In addition to investigating options for knowledge-level learning, several other issues need near-term attention.
References-found: 12

