URL: http://www.cis.udel.edu/~sethi/papers/96/tr96-02.ps
Refering-URL: http://www.cis.udel.edu/~sethi/netman/qos.html
Root-URL: http://www.cis.udel.edu
Title: Analysis of a Soft Real-Time Random Access Protocol  
Author: Michael J. Markowski and Adarshpal S. Sethi 
Keyword: Random access algorithms, Real-time communication protocols, Time constrained communications, Multiple-access protocols.  
Affiliation: Department of Computer and Information Sciences University of Delaware, Newark, DE  
Abstract: A communications network that is part of a soft real-time system may need to transmit messages within a bounded delay, but may allow some messages to miss this bound and be dropped within a maximum pre-specified rate of message loss. In this paper, we describe a media access protocol for soft real-time systems implemented on a slotted radio channel with binary feedback. The protocol is based on the Gallager FCFS window-splitting algorithm, but incorporates strict delay bounds using packet laxities. We present an analytic model for this protocol by examining the probable lengths of the collision resolution intervals given the current lag at any time. Both analytic and simulation results are obtained to study the maximum input traffic rates that can be sustained for various laxities, delay bounds, and message loss rates.
Abstract-found: 1
Intro-found: 1
Reference: [Arv91] <author> K. Arvind. </author> <title> Protocols for Distributed Real-Time Systems. </title> <type> PhD thesis, </type> <institution> University of Massachusetts at Amherst, </institution> <year> 1991. </year>
Reference-contexts: Subsequently, Zhao et al. [ZSR90] proposed a window splitting protocol which always performed in simulation at least as well as the virtual time protocols and often better. Less complex window splitting algorithms are presented for both hard and soft real-time systems by Arvind <ref> [Arv91] </ref> where protocol operations are simulated and some worst case performance analysis is also presented. Paterakis et al. [PGPK89] present a simple protocol appropriate for soft real-time systems and perform an in-depth analysis of it.
Reference: [BG92] <author> Dimitri Bertsekas and Robert Gallager. </author> <title> Data Networks. </title> <publisher> Prentice Hall, </publisher> <address> second edition, </address> <year> 1992. </year>
Reference-contexts: We follow Paterakis' technique of analysis in this paper and analyze a more complicated protocol which again would be suitable for use in a soft real-time environment. The protocol is the Gallager algorithm [Gal78], <ref> [BG92] </ref> with binary feedback and our addition of strict delay bounds. 2 Algorithm In this protocol, a packet has a single property of interest, its laxity.
Reference: [Gal78] <author> R. G. Gallager. </author> <title> Conflict resolution in random access broadcast networks. </title> <booktitle> Proceedings of the AFOSR Workshop in Communications Theory Applications, </booktitle> <pages> pages 74-76, </pages> <year> 1978. </year>
Reference-contexts: We follow Paterakis' technique of analysis in this paper and analyze a more complicated protocol which again would be suitable for use in a soft real-time environment. The protocol is the Gallager algorithm <ref> [Gal78] </ref>, [BG92] with binary feedback and our addition of strict delay bounds. 2 Algorithm In this protocol, a packet has a single property of interest, its laxity. <p> If another collision occurs, the window is split in half, and the CRA recurses first on the left half and then on the right. The CRA behaves similarly to the classical FCFS splitting algorithm <ref> [Gal78] </ref> with a few differences: packets in a window following a collision are ordered by laxity rather than by node arrival time, and feedback is binary rather than ternary. We further impose a bound T which is the maximum number of slots a CRI may comprise.
Reference: [GMPK87] <author> L. Georgiadis, L. F. Merakos, and P. Papantoni-Kazakos. </author> <title> A method for the delay analysis of random multiple-access algorithms whose delay process is regenerative. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> SAC-5(6):1051-1062, </volume> <month> July </month> <year> 1987. </year>
Reference-contexts: Later we present simulation results for the case where initial laxities are not identical. Considering lags of 1 slot as regeneration points, a single CRI is one cycle of a regenerative stochastic process as pointed out by Georgiadis et al. <ref> [GMPK87] </ref>. Defining Z = Efff 1 g as the number of packets successfully transmitted in a collision resolution interval (CRI), and H = Efh 1 g as the expected length of a CRI, then Z=H is the traffic rate of successful packets.
Reference: [MK85] <author> M. L. Molle and L. Kleinrock. </author> <title> Virtual time CSMA: Why two clocks are better than one. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-33(9):919-933, </volume> <month> September </month> <year> 1985. </year> <month> 14 </month>
Reference-contexts: Approaches to limiting or removing these shortcomings for time constrained communication have concentrated on two methods: the use of virtual time clocks, and window splitting techniques. Virtual time clocks were first proposed by Molle and Kleinrock <ref> [MK85] </ref> and based on message arrival time. This has the advantage of making transmission of queued messages fairer.
Reference: [PGPK89] <author> M. Paterakis, L. Georgiadis, and P. Papantoni-Kazakos. </author> <title> Full sensing window random-access algorithm for messages with strict delay constraints. </title> <journal> Algorith-mica, </journal> <volume> 4 </volume> <pages> 318-328, </pages> <year> 1989. </year>
Reference-contexts: Less complex window splitting algorithms are presented for both hard and soft real-time systems by Arvind [Arv91] where protocol operations are simulated and some worst case performance analysis is also presented. Paterakis et al. <ref> [PGPK89] </ref> present a simple protocol appropriate for soft real-time systems and perform an in-depth analysis of it. We follow Paterakis' technique of analysis in this paper and analyze a more complicated protocol which again would be suitable for use in a soft real-time environment. <p> l u;d will be defined in detail in subsequent sections but is simply the length of the CRI which begins at time t and ends at time t 0 . 3 3 Analysis 3.1 Notation Our notation and analysis technique are based on the methodology presented by Paterakis et al. <ref> [PGPK89] </ref>. As mentioned, two considerations vital to successful transmission of a packet are the current lag d and the number of slots u to be examined. <p> So, taking expectations and denoting H d = Efh d g, yields H d = &gt; &gt; &lt; Efl d;d g + m=2 Efl ;d g + m=1 (7) This system of equations is finite because of the bounded nature of the algorithm. See Paterakis <ref> [PGPK89] </ref> for further mathematical discussion. The system is represented by an n fi n + 1 matrix where all elements are the conditional probabilities except for the rightmost column. That column is made up of (the negatives of) the expected values. The expected values of CRI lengths are derived below. <p> That column is made up of (the negatives of) the expected values. The expected values of CRI lengths are derived below. Equation 6 above is taken directly from Paterakis et al. <ref> [PGPK89] </ref> since it is a general description of any bounded CRA. Equation 7, the expected value, addresses the analytical details specific to the bounded Gallager CRA. <p> Similarly, while there is a maximum laxity value, it is also desirable to design to a significantly smaller average delay. Continuing to follow the notation of Paterakis et al. <ref> [PGPK89] </ref>, we call these design parameters e 1 , for the fraction of packets transmitted successfully, and e 2 , for the delay experienced by an average packet. <p> It would be interesting to compare this protocol with the simpler protocol analyzed by Paterakis et al. <ref> [PGPK89] </ref>, and to see if a hybrid protocol can be developed including features of both. It would also be interesting to extend this analysis to channels with ternary feedback, and see how those protocols would perform within the context of a soft real-time system.
Reference: [RZ87] <author> K. Ramamritham and W. Zhao. </author> <title> Virtual time CSMA protocols for hard real-time communication. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 13(8) </volume> <pages> 938-952, </pages> <year> 1987. </year>
Reference-contexts: Virtual time clocks were first proposed by Molle and Kleinrock [MK85] and based on message arrival time. This has the advantage of making transmission of queued messages fairer. The method was adapted by Ramamritham and Zhao <ref> [RZ87] </ref> to take into account various time related properties of a packet for soft real-time systems and shown via simulation to work better than protocols not designed for real-time use.
Reference: [ZSR90] <author> W. Zhao, J. A. Stankovic, and K. Ramamritham. </author> <title> A window protocol for transmission of time-constrained messages. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(9) </volume> <pages> 1186-1203, </pages> <month> September </month> <year> 1990. </year> <month> 15 </month>
Reference-contexts: The method was adapted by Ramamritham and Zhao [RZ87] to take into account various time related properties of a packet for soft real-time systems and shown via simulation to work better than protocols not designed for real-time use. Subsequently, Zhao et al. <ref> [ZSR90] </ref> proposed a window splitting protocol which always performed in simulation at least as well as the virtual time protocols and often better.
References-found: 8

