URL: http://www.cs.umd.edu/projects/hermes/publications/postscripts/sigmod96.ps
Refering-URL: http://www.cs.umd.edu/projects/hermes/publications/abstracts/cost.html
Root-URL: 
Email: sibel@cs.umd.edu  candan@cs.umd.edu  yannis@db.stanford.edu  vs@cs.umd.edu  
Title: Query Caching and Optimization in Distributed Mediator Systems  
Author: S. Adal K.S. Candan Y. Papakonstantinou V.S. Subrahmanian 
Affiliation: University of Maryland  University of Maryland  Stanford University  University of Maryland  
Note: To appear in the Proceedings of Sigmod 1996 Conference on Management of Data, pp. 137-148.  
Abstract: Query processing and optimization in mediator systems that access distributed non-proprietary sources pose many novel problems. Cost-based query optimization is hard because the mediator does not have access to source statistics information and furthermore it may not be easy to model the source's performance. At the same time, querying remote sources may be very expensive because of high connection overhead, long computation time, financial charges, and temporary unavailability. We propose a cost-based optimization technique that caches statistics of actual calls to the sources and consequently estimates the cost of the possible execution plans based on the statistics cache. We investigate issues pertaining to the design of the statistics cache and experimentally analyze various tradeoffs. We also present a query result caching mechanism that allows us to effectively use results of prior queries when the source is not readily available. We employ the novel invariants mechanism, which shows how semantic information about data sources may be used to discover cached query results of interest. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul and A. Bonner. </author> <title> (1991) Objects and view., </title> <booktitle> In Proc. of the ACM SIGMOD Conf. on Management of Data, </booktitle> <pages> pp. 238-247, </pages> <year> 1991. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [2] <author> S. Abiteboul, S. Cluet, and T. Milo. </author> <title> (1993) Querying and updating the file., </title> <booktitle> In Proc. Int. Conf. on Very Large Data Bases (VLDB), </booktitle> <pages> pp. 73-84, </pages> <year> 1993. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [3] <author> S. Adal, K.S. Candan, Su-Shing Chen, K. </author> <title> Erol and V.S. Subrahmanian. (1995) Advanced Video Information System: Data Structures and Query Processing., </title> <note> Accepted for publication in the ACM-Springer Multimedia Systems Journal. </note>
Reference-contexts: Executing Remote Calls with Caching and/or Invariants: Figure 5 shows a small representative sample of the times obtained when running queries that required accessing data/operations in a video retrieval package called AVIS <ref> [3] </ref>. It is easy to see from these figures that using caches always leads to savings in time when the software/data is located at remote sites.
Reference: [4] <author> S. Adal and V.S. Subrahmanian. </author> <title> (1994) Amalgamating Knowledge Bases, III: Algorithms, data structures and query processing. </title> <type> Technical Report CS-TR-3124, </type> <institution> Computer Science Department, University of Maryland, </institution> <month> Aug </month> <year> 1993. </year> <note> Accepted for publication in Journal of Logic Programming. (http://www.cs.umd.edu/projects/hermes/ publications/abstracts/akbiii.ps) </note>
Reference-contexts: In particular, the user of a mediated system sends queries to the mediator, which in turn sends appropriate subqueries to different software packages and/or databases in the mediated system. The HERMES project (short for HEterogeneous Reasoning and MEdiator System) at the University of Maryland <ref> [28, 4, 27, 20] </ref> and the TSIMMIS project at Stanford University [41] provide frameworks for handling different types of heterogeneity that exist between programs and databases. In this paper we focus on issues related to query processing and optimization in mediator systems that access distributed non-proprietary information sources.
Reference: [5] <author> S. Adal and R. Emery. </author> <title> (1995) A Uniform Framework For Integrating Knowledge In Heterogeneous Knowledge Systems, </title> <booktitle> Proc. of the Eleventh International Conference on Data Engineering, </booktitle> <pages> pp. 513-520. </pages> <address> (http://www.cs.umd.edu/projects/hermes/ publications/abstracts/cons.ps) </address>
Reference-contexts: Note that HERMES uses a logic based language extended with special constructs to access external software. The details of the language can be found in <ref> [5, 28] </ref>. In HERMES, external programs are referred to as domains and they are viewed as black boxes that allow certain operations to be performed by outside sources.
Reference: [6] <author> S. Adal and V.S. Subrahmanian. </author> <title> (1995) Intelligent Caching in Heterogeneous Reasoning and Mediator Systems, </title> <booktitle> Proc. of the Second International Conference on Building and Sharing of Very Large-Scale Knowledge Bases (ed. </booktitle> <address> N. Mars), pps 247-256, </address> <publisher> IOS Press, Twente, </publisher> <address> The Netherlands, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Invariants were first introduced in <ref> [6] </ref>. In this paper, we concentrate on the performance issues related to invariants. The decision as to when to use CIM can be performed both online or 138 o*ine. We investigate the conditions under which the cache is useful and how to use this information during optimization.
Reference: [7] <author> J. Blakeley, N. Coburn, and P.-A. Larson. </author> <title> (1989) Updating derived relations: Detecting irrelevant and 146 autonomously computable updates., </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 14(3) </volume> <pages> 369-400, </pages> <year> 1989. </year>
Reference: [8] <author> Stefano Ceri and Jennifer Widom. </author> <title> Deriving Production Rules for Incremental View Maintenance., </title> <booktitle> Proc. of the 17th VLDB Conference, </booktitle> <year> 1991. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [9] <author> U. Dayal. </author> <title> (1989) Queries and views in a object-oriented databases., </title> <booktitle> In Int. Workshop on Database Programming Languages, </booktitle> <year> 1989. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [10] <author> U. Dayal and H. Hwang. </author> <title> (1984) View definition and generalization for database integration in a multi-database system., </title> <journal> IEEE Trans. Software Eng., </journal> <volume> SE-10(6):628-644, </volume> <year> 1984. </year>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs <ref> [10, 21] </ref> and relational DBMSs, object-oriented DBMSs and/or file systems [11, 15, 24, 16, 17]. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [11] <author> N. Gehani, H. Jagadish, and W. Roome. </author> <year> (1994) </year> <month> OdeFS: </month> <title> A file system interface to an object-oriented database., </title> <booktitle> Proc. Int. Conf. on Very Large Databases (VLDB), </booktitle> <pages> pp. 249-260, </pages> <year> 1994. </year>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs [10, 21] and relational DBMSs, object-oriented DBMSs and/or file systems <ref> [11, 15, 24, 16, 17] </ref>. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [12] <author> Ashish Gupta, Dinesh Katiyar, and Inderpal Singh Mumick. </author> <title> (1992) Counting Solutions to the View Maintenance Problem., </title> <booktitle> In Workshop on Deductive Databases, JICSLP, </booktitle> <year> 1992. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [13] <author> A. Gupta, </author> <title> I.S. Mumick and V.S. Subrahmanian. (1993) Maintaining Views Incrementally., </title> <booktitle> Proc. 1993 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> Wash-ington, DC. </address>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [14] <author> E. Hanson. </author> <title> (1987) A performance analysis of view materialization strategies., </title> <booktitle> In Proc. of the ACM SIGMOD Conf. on Management of Data, </booktitle> <pages> pp. 440-453, </pages> <year> 1987. </year>
Reference: [15] <author> A. Kemper, C. Kilger, G. Moerkotte. </author> <title> (1994) Function Materialization in Object Bases: Design, Realization, and Evaluation., </title> <journal> IEEE Transactions on Knowledge and Data Engineering, Vol.6, </journal> <volume> No.4, </volume> <month> August </month> <year> 1994. </year>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs [10, 21] and relational DBMSs, object-oriented DBMSs and/or file systems <ref> [11, 15, 24, 16, 17] </ref>. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [16] <author> Laks V.S. Lakshmanan, F. </author> <title> Sadri amd I.N. Subrama-nian. (1993) On the logical foundations of schema integration and evolution in Heterogeneous Database Systems., </title> <booktitle> Proc. </booktitle> <address> DOOD-93, Phoenix, Arizona. </address>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs [10, 21] and relational DBMSs, object-oriented DBMSs and/or file systems <ref> [11, 15, 24, 16, 17] </ref>. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [17] <author> Laks V.S. Lakshmanan, F. </author> <title> Sadri amd I.N. Subrama-nian. (1995) Logic and Algebraic Languages for Interoperability in Multidatabase Systems, </title> <note> submitted to Journal of Logic Programming. </note>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs [10, 21] and relational DBMSs, object-oriented DBMSs and/or file systems <ref> [11, 15, 24, 16, 17] </ref>. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [18] <author> S. Leach and J. Lu. </author> <title> (1994) Computing Annotated Logic Programs., </title> <booktitle> Proceedings of the 11th International Conference on Logic Programming (ed. </booktitle> <editor> P. Van Henten-ryck), </editor> <publisher> MIT Press, </publisher> <address> pps 257-271. </address>
Reference: [19] <author> J. Lu, G. Moerkotte, J. Schue, </author> <title> V.S. Subrahmanian. (1995) Efficient Maintenance of Materialized Mediated Views, </title> <booktitle> Proc. 1995 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems. However, it is only recently that materialized views were studied in the context of mediated systems <ref> [19] </ref>. Consequently, very little work has been done on how to effectively use such materialized mediated views to effectively process queries [33, 34, 39, 40].
Reference: [20] <author> J. Lu, A. Nerode and V.S. Subrahmanian. </author> <title> (1993) Hybrid Knowledge Bases, Accepted for publication in: </title> <journal> IEEE Trans. on Knowledge and Data Engineering. </journal>
Reference-contexts: In particular, the user of a mediated system sends queries to the mediator, which in turn sends appropriate subqueries to different software packages and/or databases in the mediated system. The HERMES project (short for HEterogeneous Reasoning and MEdiator System) at the University of Maryland <ref> [28, 4, 27, 20] </ref> and the TSIMMIS project at Stanford University [41] provide frameworks for handling different types of heterogeneity that exist between programs and databases. In this paper we focus on issues related to query processing and optimization in mediator systems that access distributed non-proprietary information sources.
Reference: [21] <author> A. Motro. </author> <year> (1987) </year> <month> Superviews: </month> <title> Virtual integration of multiple databases., </title> <journal> IEEE Trans. Software Eng., </journal> <volume> 13(7) </volume> <pages> 785-798, </pages> <year> 1987. </year>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs <ref> [10, 21] </ref> and relational DBMSs, object-oriented DBMSs and/or file systems [11, 15, 24, 16, 17]. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [22] <author> I. S. Mumick. </author> <title> (1991) Query Optimization in Deductive and Relational Databases., </title> <type> Ph.D. Thesis, </type> <institution> Stanford University, </institution> <address> CA 94305, </address> <year> 1991. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [23] <author> M. Scholl, C. Laasch, and M. Tresch. </author> <title> (1991) Updatable views in object-oriented databases., </title> <booktitle> In Proc. Int. Conf. on Deductive and Object-Oriented Databases (DOOD), </booktitle> <year> 1991. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [24] <author> A. Sheth and J. Larson. </author> <title> (1990) Federated database systems for managing distributed, heterogeneous and autonomous databases., </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: For example, there have been several efforts to integrate multiple relational DBMSs [10, 21] and relational DBMSs, object-oriented DBMSs and/or file systems <ref> [11, 15, 24, 16, 17] </ref>. Our approach in this paper differs from the above approaches in the following ways: first, in most of the above approaches, there are well-developed cost models for evaluating the behavior of queries.
Reference: [25] <author> Oded Shmueli and Alon Itai. </author> <title> (1984) Maintenance of Views. </title> <booktitle> In Sigmod Record, </booktitle> <volume> 14(2) </volume> <pages> 240-255, </pages> <year> 1984. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [26] <author> M. Stonebraker, A. Jhingran, J. Goh, and S. Potami-anos. </author> <title> (1990) On rules, procedures, caching and views in data base systems.. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pp. 281-290, </pages> <year> 1990. </year>
Reference-contexts: For example, it is very difficult to generate a cost model for the face recognition or the video retrieval or terrain reasoning/path planning sources of HERMES. Work on caching in databases has been done extensively through the notion of a materialized view <ref> [1, 2, 8, 9, 12, 13, 22, 23, 25, 26] </ref>. These papers show how views (and their materializations) may be defined for different kinds of databases such as relational DBMSs, object-oriented DBMSs, and object-relational systems.
Reference: [27] <author> V.S. Subrahmanian. </author> <title> (1994) Amalgamating Knowledge Bases., </title> <journal> ACM Trans. on Database Systems, </journal> <volume> 19, 2, </volume> <pages> pps 291-331, </pages> <year> 1994. </year>
Reference-contexts: In particular, the user of a mediated system sends queries to the mediator, which in turn sends appropriate subqueries to different software packages and/or databases in the mediated system. The HERMES project (short for HEterogeneous Reasoning and MEdiator System) at the University of Maryland <ref> [28, 4, 27, 20] </ref> and the TSIMMIS project at Stanford University [41] provide frameworks for handling different types of heterogeneity that exist between programs and databases. In this paper we focus on issues related to query processing and optimization in mediator systems that access distributed non-proprietary information sources.
Reference: [28] <author> V.S. Subrahmanian, S. Adal, A. Brink, R. Emery, J. Lu, A. Rajput, T.J. Rogers, R. Ross. </author> <year> (1994) </year> <month> HER-MES: </month> <title> A Heterogeneous Reasoning and Mediator System, </title> <note> submitted for publication. (http://www.cs.umd.edu/projects/hermes/ overview/paper) </note>
Reference-contexts: In particular, the user of a mediated system sends queries to the mediator, which in turn sends appropriate subqueries to different software packages and/or databases in the mediated system. The HERMES project (short for HEterogeneous Reasoning and MEdiator System) at the University of Maryland <ref> [28, 4, 27, 20] </ref> and the TSIMMIS project at Stanford University [41] provide frameworks for handling different types of heterogeneity that exist between programs and databases. In this paper we focus on issues related to query processing and optimization in mediator systems that access distributed non-proprietary information sources. <p> Note that HERMES uses a logic based language extended with special constructs to access external software. The details of the language can be found in <ref> [5, 28] </ref>. In HERMES, external programs are referred to as domains and they are viewed as black boxes that allow certain operations to be performed by outside sources.
Reference: [29] <author> G. Wiederhold. </author> <booktitle> (1992) Mediators in the Architecture of Future Information Systems, IEEE Computer, </booktitle> <month> March </month> <year> 1992, </year> <month> pps 38-49. </month>
Reference-contexts: This vast quantity of data has been gathered, organized, and stored by a small army of individuals, working for different organizations on varied problems in ways that were best suited to accomplish the task in question. Wiederhold <ref> [29] </ref> proposed the concept of a mediator as a way of formulating fl This research was partially supported by the Air Force Wright Laboratory Aeronautical Systems Center under ARPA Contract F33615-93-1-1339, by the Army Research Office under grant DAAH-04-95-10174, by the Air Force Office of Scientific Research under grant F49620-93-1-0065, by
Reference: [30] <author> G Wiederhold, S. Jajodia, and W. Litwin. </author> <title> (1993) Integrating temporal data in a heterogeneous environment., In Temporal Databases, </title> <address> Benjamin/Cummings, </address> <month> Jan </month> <year> 1993. </year>
Reference: [31] <author> P. Selinger, M. Astrahan, D. Chamberlin, R. Lorie and T. Price. </author> <title> (1979) Access Path Selection in a Relational Database Management System., </title> <booktitle> Proc. of the 1979 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pp. 22-34. </pages>
Reference-contexts: Cost-Estimates: Some of the external sources may have well-understood cost estimates for the queries 137 that are sent to them. For example, in relational DBMSs, cost models have well known characteristics <ref> [31, 32, 33] </ref>.) However, in other cases, cost estimates may be hard to obtain for example, in several domains that exist within HERMES (face recognition system, terrain reasoning system, transportation logistics planning system,video retrieval system ) it is extremely difficult to develop a reasonable cost model.
Reference: [32] <author> D. Chimenti, R. Gamboa and R. Krishnamurty. </author> <title> (1989) Towards an open architecture for LDL., </title> <booktitle> Proc. of the 15th International VLDB Conference, </booktitle> <pages> pp. 195-203, </pages> <address> Amsterdam, The Netherlands, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: Cost-Estimates: Some of the external sources may have well-understood cost estimates for the queries 137 that are sent to them. For example, in relational DBMSs, cost models have well known characteristics <ref> [31, 32, 33] </ref>.) However, in other cases, cost estimates may be hard to obtain for example, in several domains that exist within HERMES (face recognition system, terrain reasoning system, transportation logistics planning system,video retrieval system ) it is extremely difficult to develop a reasonable cost model.
Reference: [33] <author> S. Chaudhuri and K. Shim. </author> <title> (1993) Query Optimization in the Presence of Foreign Functions., </title> <booktitle> Proc. of the 19th VLDB Conference. </booktitle>
Reference-contexts: Cost-Estimates: Some of the external sources may have well-understood cost estimates for the queries 137 that are sent to them. For example, in relational DBMSs, cost models have well known characteristics <ref> [31, 32, 33] </ref>.) However, in other cases, cost estimates may be hard to obtain for example, in several domains that exist within HERMES (face recognition system, terrain reasoning system, transportation logistics planning system,video retrieval system ) it is extremely difficult to develop a reasonable cost model. <p> However, it is only recently that materialized views were studied in the context of mediated systems [19]. Consequently, very little work has been done on how to effectively use such materialized mediated views to effectively process queries <ref> [33, 34, 39, 40] </ref>. A materialized mediated view may be viewed as a domain cache and hence, all the algorithms in this paper deal with how to effectively use such caches to process queries (and optimize them) in a distributed heterogeneous database management system.
Reference: [34] <author> S. Chaudhuri, R. Krishnamurty, S. Potamianos and K. Shim. </author> <title> (1995) Optimizing Queries with Materialized Views, </title> <booktitle> Proc. of International Conference on Data Engineering, </booktitle> <pages> pp. 109-200, </pages> <year> 1995. </year>
Reference-contexts: However, it is only recently that materialized views were studied in the context of mediated systems [19]. Consequently, very little work has been done on how to effectively use such materialized mediated views to effectively process queries <ref> [33, 34, 39, 40] </ref>. A materialized mediated view may be viewed as a domain cache and hence, all the algorithms in this paper deal with how to effectively use such caches to process queries (and optimize them) in a distributed heterogeneous database management system.
Reference: [35] <author> J. D. Ullman. </author> <booktitle> Principles of Database and Knowledge Base Systems, </booktitle> <volume> volume 2. </volume> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: The complete description of the modules will be given in the following sections. The optimizer consists of four components described below. First, the rule rewriter takes a program and a query as input, and finds different possible rewritings of the original program allowed by the possible adornments <ref> [35] </ref> of it. For simplicity we assume that domain calls are always ground, i.e. in a call of the form in (X,d:f (Args)), we require Args to be ground, but X can be either ground or variable. <p> The module then decides on the best plan for executing the given query. We will not give the details of rule rewriting and rule cost estimation due to space restrictions, <ref> [35] </ref> gives a detailed discussion on this subject. In this paper we assume that there are two modes of operation for the mediator. The first mode is the all answers mode where the mediator calculates all the answers automatically.
Reference: [36] <author> C.M. Chen and N. Rousopoulos. </author> <title> (1994) Adaptive Selectivity Estimation Using Query Feedback., </title> <booktitle> Proc. of the 1994 ACM-SIGMOD Conference on Management of Data, </booktitle> <pages> pp. 161 - 172. </pages>
Reference-contexts: The mediator may not know the function that best characterizes the time it takes to evaluate the calls. Hence using curve fitting techniques <ref> [36] </ref> to approximate the costs may not be practical since we do not know the shape of the function. Also, cost functions do not easily adapt to abrupt and unexpected changes in the costs of domain calls.
Reference: [37] <author> H. Tamaki and T. Sato. </author> <title> (1986) OLD Resolution with Tabulation, </title> <booktitle> Proc. 3rd Intl. Conf. on Logic Programming (ed. </booktitle> <editor> E. Shapiro), </editor> <address> pps 84-98, </address> <publisher> Springer. </publisher>
Reference-contexts: In addition to this work, there has been work on caching in the deductive database community through the use of OLDT-resolution <ref> [37, 38] </ref>. Our work effectively shows how such caches may be defined when views access non-logical data representations and software packages and furthermore, through the use of invariants, shows how such caches may be effectively used.
Reference: [38] <author> D.S. Warren. </author> <title> (1992) Memoing for Logic Programs, </title> <journal> Comm. of the ACM, </journal> <volume> 35, 3, </volume> <pages> pps 94-111. </pages>
Reference-contexts: In addition to this work, there has been work on caching in the deductive database community through the use of OLDT-resolution <ref> [37, 38] </ref>. Our work effectively shows how such caches may be defined when views access non-logical data representations and software packages and furthermore, through the use of invariants, shows how such caches may be effectively used.
Reference: [39] <author> X. Qian. </author> <title> (1995) Query folding., </title> <booktitle> To appear in the Proc. of the 1996 IEEE Data Engineering Conf., </booktitle> <institution> Technical Report SRI-CSL-95-09, Computer Science Laboratory, SRI International, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: However, it is only recently that materialized views were studied in the context of mediated systems [19]. Consequently, very little work has been done on how to effectively use such materialized mediated views to effectively process queries <ref> [33, 34, 39, 40] </ref>. A materialized mediated view may be viewed as a domain cache and hence, all the algorithms in this paper deal with how to effectively use such caches to process queries (and optimize them) in a distributed heterogeneous database management system.
Reference: [40] <author> S. Adal and X. Qian. </author> <title> (1995) Query Transformation in Heterogeneous Reasoning Systems., </title> <note> Submitted for publication. 147 </note>
Reference-contexts: However, it is only recently that materialized views were studied in the context of mediated systems [19]. Consequently, very little work has been done on how to effectively use such materialized mediated views to effectively process queries <ref> [33, 34, 39, 40] </ref>. A materialized mediated view may be viewed as a domain cache and hence, all the algorithms in this paper deal with how to effectively use such caches to process queries (and optimize them) in a distributed heterogeneous database management system.
Reference: [41] <author> S. Chawathe, H. Garcia-Molina, J. Hammer, K. Ire--land, Y. Papakonstantinou, J. Ullman, and J. Widom. </author> <title> (1994) The TSIMMIS Project: Integration of Heterogeneous Information Sources., </title> <booktitle> In Proceedings of IPSJ Conference, </booktitle> <address> Tokyo, Japan, </address> <month> October </month> <year> 1994. </year> <note> (Also available via anonymous FTP from host db.stanford.edu, file /pub/chawathe/1994/tsimmis-overview.ps.) </note>
Reference-contexts: The HERMES project (short for HEterogeneous Reasoning and MEdiator System) at the University of Maryland [28, 4, 27, 20] and the TSIMMIS project at Stanford University <ref> [41] </ref> provide frameworks for handling different types of heterogeneity that exist between programs and databases. In this paper we focus on issues related to query processing and optimization in mediator systems that access distributed non-proprietary information sources. We make the following contributions: 1.
Reference: [42] <author> W. Du and R. Krishnamurthy and M.-C. Shan. </author> <title> (1992) Query Optimization in Heterogeneous Database Management Systems., </title> <booktitle> In Proc. VLDB Vonference, </booktitle> <pages> pp. 277-291, </pages> <address> Vancouver, Canada, </address> <year> 1992. </year>
Reference-contexts: An extensive discussion of the differences and the need for novel research in the area of optimization in mediated systems appears in [44]. The most important difference is the absence of statistics of non-proprietary sources. <ref> [42, 43] </ref> find out the performance behavior of a non-proprietary source by probing it with carefully organized sample queries and applying regression methods for estimating various parameters of a predetermined cost model. Their method is very effective but it is inapplicable when we do not have a predetermined cost model.
Reference: [43] <author> Q. Zhu and P.-A. Larson. </author> <title> (1994) A Query Sampling Method for Estimating Local Cost Parameters in a Multidatabase System., </title> <booktitle> Proc. IEEE Data Engineering Conf., </booktitle> <pages> pp. 144-153, </pages> <year> 1994. </year>
Reference-contexts: An extensive discussion of the differences and the need for novel research in the area of optimization in mediated systems appears in [44]. The most important difference is the absence of statistics of non-proprietary sources. <ref> [42, 43] </ref> find out the performance behavior of a non-proprietary source by probing it with carefully organized sample queries and applying regression methods for estimating various parameters of a predetermined cost model. Their method is very effective but it is inapplicable when we do not have a predetermined cost model.
Reference: [44] <author> H. Lu and B.-C. Ooi and C.-H. Goh. </author> <title> (1993) Multi-database Query Optimization: Issues and Solutions., </title> <booktitle> Proc. </booktitle> <volume> RIDE-IMS '93, </volume> <pages> pp. 137-143, </pages> <year> 1993. </year>
Reference-contexts: An extensive discussion of the differences and the need for novel research in the area of optimization in mediated systems appears in <ref> [44] </ref>. The most important difference is the absence of statistics of non-proprietary sources. [42, 43] find out the performance behavior of a non-proprietary source by probing it with carefully organized sample queries and applying regression methods for estimating various parameters of a predetermined cost model.
References-found: 44

