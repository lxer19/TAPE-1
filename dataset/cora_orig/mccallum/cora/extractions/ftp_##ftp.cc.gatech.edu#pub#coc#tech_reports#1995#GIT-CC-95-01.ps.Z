URL: ftp://ftp.cc.gatech.edu/pub/coc/tech_reports/1995/GIT-CC-95-01.ps.Z
Refering-URL: http://www.cs.gatech.edu/tech_reports/index.95.html
Root-URL: 
Title: The Effect of Re-dialing in a Personal Communications Services Network  
Author: Christopher D. Carothers Yi-Bing Lin Richard M. Fujimoto 
Address: Atlanta, Georgia 30332  Morristown, New Jersey 07960  Atlanta, Georgia 30332  
Affiliation: College of Computing Georgia Institute of Technology  Bellcore  College of Computing Georgia Institute of Technology  
Abstract: This paper studies the effect of re-dial in a personal communications services (PCS) network. The re-dialing problem for PCS is different from the plain old telephone service (POTS). When using POTS, if a customer receives a busy signal in making a call, or the call does connect in a timely manner, the customer may make a re-dial call in an attempt to get a connection. Likewise, it is anticipated personal communications services (PCS) network subscribers may also make re-dial attempts when the original call attempt is unsuccessful. However, unlike POTS, PCS has the added complexity of keeping a call connected while the originating caller and/or the terminating caller is moving. Because of this complexity, the effect of re-dial on nomadic communications is a challenging problem that has implications on the design and analysis of PCS networks. Accordingly, this paper presents a model for studying the effect of re-dial on PCS networks. Using this model, several analytical results are derived. These results are then used to validate a Time Warp based, distributed, simulation of the PCS re-dial model. Using the distributed simulation, we vary (i) the probability of re-dial, (ii) the re-dial rate, and (iii) portable mobility and examined each parameters effect on (a) the probability of forced termination, (b) the probability of new call block (c) the call incompletion probability (d) expected number of re-dials before a new call attempt is accepted or rejected and (e) calls accepted per simulated second. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Brown. </author> <title> Calendar queues: A fast O(1) priority queue implementation for the simulation event set problem. </title> <journal> Communications of the ACM, </journal> <volume> 31(10) </volume> <pages> 1220-1227, </pages> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: It is anticipated that most simulations will contain far more entities than processors, so each processor will typically contain hundreds or thousands of entities (LPs). A priority queue data structure called the calendar queue <ref> [1] </ref> is used in each processor to efficiently select the next entity to execute. The processor's scheduler always selects the entity containing the smallest timestamped event as the next one for execution. Each entity includes a linear list to hold the unprocessed events (method invocations) scheduled for that entity.
Reference: [2] <author> C. D. Carothers, R. M. Fujimoto, Y-B. Lin, and P. </author> <title> England. Distributed Simulation of Large-Scale PCS Networks. </title> <booktitle> In 2 nd International Workshop on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, </booktitle> <pages> pages 2-6. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> Feburary </month> <year> 1994. </year>
Reference-contexts: C r = 0&lt;i<1 i i (1 ) ci (6) 3 The Parallel Simulation Technique Based on our experience in PCS Radio Port level simulations, good confidence intervals in the output statistics can only be obtained when the length of time simulated is very long <ref> [2] </ref>. For example, to simulate just call arrivals with re-dial capability and call hand-offs at the Radio Port, the number of events processed in each run is between 10,000,000 and 100,000,000. Because of the large number events that need to be processed, execution times for the simulation are very high. <p> Had only a single workstation been used, it would have taken almost 1:5 hours to complete a simulation run. For a more detailed examination of PCS network performance under Time Warp, the reader is referred to <ref> [2] </ref>. 4 Discussion In this section, we first validate our simulation model against the analytic equations for p o , p nc , and N r presented in Section 2. Next, the simulation results concerning the impact of re-dialing on a PCS network are presented and discussed.
Reference: [3] <author> R. M. Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of the ACM, </journal> <volume> 33(10) </volume> <pages> 30-53, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [8, 9, 3, 4] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation [7]. Any time an LP determines that it has processed events out of timestamp order, it rolls back those events, and reexecutes them.
Reference: [4] <author> R. M. Fujimoto and D. M. Nicol. </author> <title> State of the art in parallel simulation. </title> <booktitle> In 1992 Winter Simulation Conference Proceedings, </booktitle> <pages> pages 122-127, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [8, 9, 3, 4] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation [7]. Any time an LP determines that it has processed events out of timestamp order, it rolls back those events, and reexecutes them.
Reference: [5] <author> G.A. Geist, A. Beguelin, J. Dongarra, W. Jiang, R. Manchek, V. Sunderam. </author> <title> PVM 3 User's Guide and Reference Manual. </title> <institution> Oak Ridge National Laboratory, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: The Parallel Virtual Machine (PVM v3.2) message passing system for heterogeneous collections of networked computers is used to provide communications support for the sending of messages between workstations. For a detailed description of PVM see <ref> [5] </ref>. While the performance of the simulation is not the primary focus of this paper we feel it should be briefly mentioned. The results presented in this study are the product of over 150 executions of the distributed simulator. Each run simulates over 5; 000; 000 new call attempts.
Reference: [6] <author> J.C.-I. Chuang. </author> <title> Autonomous adaptive frequency assignment of TDMA portable radio systems. </title> <journal> IEEE Trans. Veh. Technol., </journal> <month> August </month> <year> 1991. </year>
Reference-contexts: 1 Introduction This paper studies the effect of re-dialing in a personal communications services (PCS) network. In a PCS network, the service area is populated with a large number of radio ports with each providing coverage in its vicinity. We consider a fixed or quasi-static channel assignment <ref> [6] </ref> where a group of channels (time slots, frequencies, spreading codes or a combination of these) are assigned to each port. When a call arrives at the coverage area of a port, the destination (or the originating) portable is connected if a channel is available. Otherwise, the call is blocked.
Reference: [7] <author> D. R. Jefferson. </author> <title> Virtual time. </title> <journal> ACM TOPLAS, </journal> <volume> 7(3) </volume> <pages> 404-425, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: The synchronization issue has been widely studied (e.g., see [8, 9, 3, 4]). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation <ref> [7] </ref>. Any time an LP determines that it has processed events out of timestamp order, it rolls back those events, and reexecutes them.
Reference: [8] <author> J. Misra. </author> <title> Distributed-discrete event simulation. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(1) </volume> <pages> 39-65, </pages> <month> March </month> <year> 1986. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [8, 9, 3, 4] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation [7]. Any time an LP determines that it has processed events out of timestamp order, it rolls back those events, and reexecutes them.
Reference: [9] <author> R. Richter and J. C. Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1) </volume> <pages> 99-113, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: The synchronization mechanism must ensure that each LP processes events in timestamp order in order to prevent events in the simulated future from affecting those in the past. The synchronization issue has been widely studied (e.g., see <ref> [8, 9, 3, 4] </ref>). The Time Warp mechanism uses a detection-and-recovery protocol to synchronize the computation [7]. Any time an LP determines that it has processed events out of timestamp order, it rolls back those events, and reexecutes them.
Reference: [10] <author> W.C. Wong. </author> <title> Packet reservation multiple access in a metropolitan microcellular radio environment. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> 11(6) </volume> <pages> 918-925, </pages> <year> 1993. </year>
Reference-contexts: Throughout this study, the following assumptions and notations are used. 2 3 * The call arrivals to a portable are a Poisson process. * The portable residual times in a coverage area are exponentially distributed with the mean 1= as suggested in <ref> [10] </ref>. * The call holding time is exponentially distributed with the mean 1=. * The interval between two re-dials (for the same portable) is exponentially distributed with the mean 1=fl. * ff is the probability that a portable (or the caller to the portable) decides to re-dial after a call attempt
Reference: [11] <author> Y.-B. Lin, L.-F. Chang and A. Noerpel. </author> <title> A PCS Hand-off Model and Its Application. </title> <note> Submitted for publication, </note> <year> 1994. </year>
Reference-contexts: An incomplete call is either blocked as a new call or it may make several successful hand-offs before it is forced terminated. The call incompletion probability p nc for general portable residual time distribution was derived in <ref> [11, 12] </ref>. We provide a simple alternative derivation of p nc for the exponential residual time distribution as follows. Consider a conversation of a portable. Suppose that the portable crosses i coverage areas before the conversation is successfully terminated or forced terminated. <p> y Thus, the expected number N h of hand-offs before a call termination (either a successful termination or a forced termination) is N h = 1i&lt;1 = 1i&lt;1 " + (1 p f ) # i1 " (1 p f ) # (1 p o ) Following the reasoning in <ref> [11] </ref>, p nc is derived as follows. Consider an observation period where N new call attempts arrives at a coverage area. Every new call attempt is expected to generate N h hand-off call attempts.
Reference: [12] <author> Y.-B. Lin, S. Mohan, and A. Noerpel. </author> <title> Queueing Priority Channel Assignment Strategies for Handoff and Initial Access for a PCS Network. </title> <note> To appear in the spcial issue of Future PCS Technologies on IEEE Trans. </note> <institution> Veh. Technol., </institution> <year> 1994. </year> <month> 18 </month>
Reference-contexts: An incomplete call is either blocked as a new call or it may make several successful hand-offs before it is forced terminated. The call incompletion probability p nc for general portable residual time distribution was derived in <ref> [11, 12] </ref>. We provide a simple alternative derivation of p nc for the exponential residual time distribution as follows. Consider a conversation of a portable. Suppose that the portable crosses i coverage areas before the conversation is successfully terminated or forced terminated.
References-found: 12

