URL: http://www.neci.nj.nec.com:80/tr/neci-tr-95-8.ps
Refering-URL: http://www.neci.nj.nec.com:80/tr/
Root-URL: 
Email: mlm@bimage.tipas.lt.ee  hstone|ingemar@research.nj.nec.com  
Phone: 2300  
Title: Optimizing Murty's Ranked Assignment Method  
Author: Matt L. Miller Harold S. Stone and Ingemar J. Cox 
Address: P.O. Box 964 ARP-3  LITHUANIA  4 Independence Way Princeton, NJ 08540 U.S.A.  
Affiliation: Baltic Images  Vilnius  NEC Research Institute  
Abstract: c flNEC Research Institute, Technical Report 95 08. Abstract We describe an implementation of an algorithm due to Murty for determining a ranked set of solutions to assignment problems. The intended use of the algorithm is in the context of multi-target tracking, where it has been shown that real-time multi-target tracking is now feasible, but many other uses of the algorithm are also possible. Three optimizations are discussed: (1) inheriting dual variables and partial solutions during partitioning, (2) sorting subproblems by lower cost bounds before solving and (3) partitioning in an optimized order. When used to find the 100 best solutions to random 100 fi 100 assignment problems, these optimizations produce a speedup of over a factor of 20, finding all 100 solutions in about 0:6 seconds. For a random cost matrix, the average time complexity for finding k solutions to random N fi N problems appears to be nearly linear in both k and N , for sufficiently large k.
Abstract-found: 1
Intro-found: 1
Reference: [BM71] <author> M. Bellmore and J. C. Malone. </author> <title> Pathology of traveling-salesman subtour-elimination algorithms. </title> <journal> Operations Research, </journal> <volume> 19 </volume> <pages> 278-307, </pages> <year> 1971. </year>
Reference-contexts: Section 4 then describes the three optimizations we employed in the implementation of Murty's algorithm. The first optimization, inheriting dual variables and partial solutions during partitioning, is a well known technique <ref> [BM71] </ref> which reduces the worst case time of Murty's algorithm from O (kN 4 ) to O (kN 3 ). The second 1 optimization of Section 4.2 is also straightforward [BM71] and while it does not reduce the worst case performance, the average time is substantially improved. <p> The first optimization, inheriting dual variables and partial solutions during partitioning, is a well known technique <ref> [BM71] </ref> which reduces the worst case time of Murty's algorithm from O (kN 4 ) to O (kN 3 ). The second 1 optimization of Section 4.2 is also straightforward [BM71] and while it does not reduce the worst case performance, the average time is substantially improved. The third optimization, Section 4.3, partitioning in an optimized order, is believed to be novel. Again, the worst case time is unaffected. <p> In fact, Murty's algorithm can be used to find the k-best solutions to a large class of entirely different graph problems, simply by replacing the routine for finding the best assignment with a routine that solves a different problem <ref> [BM71] </ref>. When used in the Murty method, the JV assignment algorithm allows a 5 number of optimizations that dramatically improve both the average-case and worst-case execution times. We describe the three main optimizations below.
Reference: [CM95] <author> I. J. Cox and M. L. Miller. </author> <title> On finding ranked assignments with application to multi-target tracking and motion correspondence. </title> <journal> IEEE Trans. on Aerospace and Electronic Systems, </journal> <volume> 32(1) </volume> <pages> 486-489, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction In earlier work <ref> [CM95] </ref>, we showed that the k-best hypotheses of Reid's multiple hypothesis tracking algorithm (MHT) [Rei79] could be efficiently generated in O (N 4 ) worst case time using an algorithm due to Murty [Mur68]. <p> However, in the average case, we see a substantial reduction in the number of problems that must be solved. 4.3 Partitioning in an optimized order As successive solutions to the problem are computed, the average size of subproblems that are solved and partitioned decreases <ref> [CM95] </ref>. As the problem size decreases, so does the computation time required to find a successive solution. It is possible to decrease computation time dramatically by carefully selecting the order in which the partitioning is performed. <p> Further work is needed to determine whether these properties hold for real problems. Finally, in the context of multi-target tracking, Murty's algorithm can easily be modified to handle of false alarms and skipped measurements (costs for leaving rows and columns unassigned) <ref> [CM95] </ref> allowing Reid's algorithm to be completely implemented. Note that an iteration of the MHT algorithm strictly requires 15 16 the determination of the globally best k hypotheses from k parent hypotheses, not the k-best solutions to a single problem. However, Cox and Miller [CM95] pointed out that a simple modification <p> for leaving rows and columns unassigned) <ref> [CM95] </ref> allowing Reid's algorithm to be completely implemented. Note that an iteration of the MHT algorithm strictly requires 15 16 the determination of the globally best k hypotheses from k parent hypotheses, not the k-best solutions to a single problem. However, Cox and Miller [CM95] pointed out that a simple modification of Murty's algorithm accommodates this with no additional overhead. In summary, this paper and our companion paper [CMDN95] presents strong evidence that the real-time data association problem has been solved. There remains to show that this algorithm works as well on actual non-random data.
Reference: [CMDN95] <author> I. J. Cox, M. L. Miller, R. Danchick, and G. E. Newnam. </author> <title> A comparison of two algorithms for determining ranked assignments with application to multi-target tracking and motion correspondence. </title> <type> Technical report, </type> <institution> NEC Research Institute, </institution> <year> 1995. </year>
Reference-contexts: However, Cox and Miller [CM95] pointed out that a simple modification of Murty's algorithm accommodates this with no additional overhead. In summary, this paper and our companion paper <ref> [CMDN95] </ref> presents strong evidence that the real-time data association problem has been solved. There remains to show that this algorithm works as well on actual non-random data.
Reference: [DN93] <author> R. Danchick and G. E. Newnam. </author> <title> A fast method for finding the exact N -best hypotheses for multitarget tracking. </title> <journal> IEEE Trans. Aerospace and Electronic Systems, </journal> <volume> 29(2) </volume> <pages> 555-560, </pages> <year> 1993. </year>
Reference-contexts: In a companion paper to this, we compared Murty's algorithm to that of Danchick and Newnam <ref> [DN93] </ref> and showed that real-time multi-target tracking is now feasible in some circumstances. In this paper, we describe three optimizations to the original algorithm of Murty that improve performance by several orders of magnitude when applied to a large collection of randomly generated problems.
Reference: [Gab78] <author> H. N. Gabow. </author> <title> Finding the best solutions: the cost c problem and finding matches. </title> <booktitle> In Proc. 16th Annual Allerton Conf. on Communications, Control and Computing, </booktitle> <pages> pages 242-251, </pages> <year> 1978. </year>
Reference-contexts: In this paper, we describe three optimizations to the original algorithm of Murty that improve performance by several orders of magnitude when applied to a large collection of randomly generated problems. These optimizations are useful to any application in which a ranked set of assignments is need. Gabow <ref> [Gab78] </ref> has also studied the complexity of finding the k-best solutions. He showed a complexity bound for finding the kth best matching for a bipartite graph with N nodes and M arcs to be O (k min (N 3 ; M N log N )). This bounds the worst-case time.
Reference: [JV87] <author> R. Jonker and A. Volgenant. </author> <title> A shortest path algorithm for dense and sparse linear assignment problems. </title> <journal> Computing, </journal> <volume> 38 </volume> <pages> 325-340, </pages> <year> 1987. </year>
Reference-contexts: The cost of a solution is the sum of the l's in its triples. The k-best solutions are those with the k lowest costs. The single best solution to P 0 can be found using one of the classical methods of solving assignment problems <ref> [Kuh55, JV87] </ref>. We use Jonker and Volgenant's method [JV87], which has worst-case time O (N 3 ), where N is the number of nodes in the graph. This algorithm will be discussed in the next section. <p> The k-best solutions are those with the k lowest costs. The single best solution to P 0 can be found using one of the classical methods of solving assignment problems [Kuh55, JV87]. We use Jonker and Volgenant's method <ref> [JV87] </ref>, which has worst-case time O (N 3 ), where N is the number of nodes in the graph. This algorithm will be discussed in the next section. <p> While the current partial solution is incomplete (not all z's are assigned to y's), 2.1. Add one new assignment to the solution by a process called "augmentation". 2.2. Adjust the dual variables. or very similar basic outlines as this, see <ref> [JV87] </ref>, and these are referred to as shortest augmenting path algorithms. These algorithms are distinguished from each other by how steps 1, 2.1, and 2.2 are implemented, but fortunately, none of these steps is critical for the optimizations to Murty's method. <p> Thus a new lower bound can be computed by finding the minimum slack of a partial solution. The JV algorithm <ref> [JV87] </ref> only works on problems with equal numbers of y's and z's, and always yields a complete assignment.
Reference: [Kuh55] <author> H. W. Kuhn. </author> <title> The Hungarian method for the assignment problem. </title> <journal> Naval Research Logistical Quarterly, </journal> <volume> 2 </volume> <pages> 83-97, </pages> <year> 1955. </year>
Reference-contexts: The cost of a solution is the sum of the l's in its triples. The k-best solutions are those with the k lowest costs. The single best solution to P 0 can be found using one of the classical methods of solving assignment problems <ref> [Kuh55, JV87] </ref>. We use Jonker and Volgenant's method [JV87], which has worst-case time O (N 3 ), where N is the number of nodes in the graph. This algorithm will be discussed in the next section.
Reference: [Mur68] <author> K. G. Murty. </author> <title> An algorithm for ranking all the assignments in order of increasing cost. </title> <journal> Operations Research, </journal> <volume> 16 </volume> <pages> 682-687, </pages> <year> 1968. </year>
Reference-contexts: 1 Introduction In earlier work [CM95], we showed that the k-best hypotheses of Reid's multiple hypothesis tracking algorithm (MHT) [Rei79] could be efficiently generated in O (N 4 ) worst case time using an algorithm due to Murty <ref> [Mur68] </ref>. In a companion paper to this, we compared Murty's algorithm to that of Danchick and Newnam [DN93] and showed that real-time multi-target tracking is now feasible in some circumstances.
Reference: [Rei79] <author> D. B. Reid. </author> <title> An algorithm for tracking multiple targets. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> AC-24(6):843-854, </volume> <month> December </month> <year> 1979. </year> <month> 17 </month>
Reference-contexts: 1 Introduction In earlier work [CM95], we showed that the k-best hypotheses of Reid's multiple hypothesis tracking algorithm (MHT) <ref> [Rei79] </ref> could be efficiently generated in O (N 4 ) worst case time using an algorithm due to Murty [Mur68]. In a companion paper to this, we compared Murty's algorithm to that of Danchick and Newnam [DN93] and showed that real-time multi-target tracking is now feasible in some circumstances.
References-found: 9

