URL: http://www.cs.iastate.edu/tech-reports/TR93-12.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: 
Title: Deterministic Top-down Tree Transducers with Iterated Look-ahead  
Author: TR - Giora Slutzki and Sandor Vagvolgyi 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: May 25, 1993  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A.V. Aho, J.D. Ullman, </author> <title> Translations on a context-free grammar, </title> <note> Information and Control 19 (1971) 439-475. </note>
Reference-contexts: 1 Introduction Top-down tree transducers (the induced class of tree transformations is denoted by TT) were originally introduced [16],[18] as models of syntax-directed translation <ref> [1] </ref>. It was immediately shown [16],[18] that top-down tree transformations are not closed under composition, i.e.
Reference: [2] <author> B.S. Baker, </author> <title> Tree transductions and families of tree languages, </title> <type> Ph.D. Thesis, Technical Report, </type> <institution> TR-9-73, Center for Research in Computing Technology, Harvard University, </institution> <year> 1973, </year> <title> see also in: </title> <booktitle> Proceedings of the 5th ACM Symposium on Theory of Computing (1973) 200-206. </booktitle>
Reference-contexts: 1 Introduction Top-down tree transducers (the induced class of tree transformations is denoted by TT) were originally introduced [16],[18] as models of syntax-directed translation [1]. It was immediately shown [16],[18] that top-down tree transformations are not closed under composition, i.e. T T T T 2 , and it was conjectured <ref> [2] </ref> [14] [15] that iterating composition of fl On leave from Research Group on Theory of Automata, Hungarian Academy of Sciences, supported by a grant from the Soros Foundation. 1 T T gives rise to a proper hierarchy.
Reference: [3] <author> J. Engelfriet, </author> <title> Bottom-up and top-down tree transformations a comparison, </title> <note> Mathematical Systems Theory 9 (1975) 198-231. </note>
Reference-contexts: It is well known that DR R or equivalently DT A T A; a proof can be found in <ref> [3] </ref> or [13]. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in [4]. It transpired that they have a number of nice properties, especially in the deterministic case.
Reference: [4] <author> J. Engelfriet, </author> <title> Top-down tree transducers with regular look-ahead, </title> <note> Mathematical Systems Theory 10 (1976/1977) 289-303. </note>
Reference-contexts: Top-down (deterministic and nondeterministic) tree transducers with regular look-ahead (the classes of the induced tree transformations are denoted respectively by DT T R and T T R ) were introduced and studied in <ref> [4] </ref>. (The regular look-ahead is a look-ahead computable by a nondeterministic top-down tree automaton, see, for example, [19].) It was shown there that DT T R is closed under composition, whereas T T R is not. <p> That is, (DT T R ) 2 = DT T R and T T R (T T R ) 2 . Indeed it easily follows from the results of <ref> [4] </ref> and [5] that, as in the case without look-ahead, iterating composition of top-down tree transducers with regular look-ahead produces a proper hierarchy, i.e. for all n 0, (T T R ) n (T T R ) n+1 . <p> It is again easy to show that T T DR is not closed under composition and that iterating composition gives rise to a proper hierarchy, i.e. for every n 0, (T T DR ) n (T T DR ) n+1 . Indeed, by the results in <ref> [4] </ref>, [5], the three "iterated-composition" hierarchies T T n (n 1), (T T R ) n (n 1), and (T T DR ) n (n 1), each being proper on its own, mesh into a single hierarchy: T T n (T T DR ) n (T T R ) n T <p> It is well known that DR R or equivalently DT A T A; a proof can be found in [3] or [13]. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in <ref> [4] </ref>. It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], [8], [9]. Following [4], Fulop <p> in <ref> [4] </ref>. It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], [8], [9]. Following [4], Fulop and Vagvolgyi [10], [11] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages. <p> The class of all tree transformations defined by all tt C 's (respectively dtt C 's, ta C 's, and dta C 's) is denoted by T T C (respectively DT T C , T A C , and DT A C ). The following result was proved in <ref> [4] </ref>. Proposition 2.3 Let A be a tt R . Then dom (t A ) 2 R: By Proposition 2.3, we can iterate the look-ahead tree languages, without leaving R, as follows.
Reference: [5] <author> J. Engelfriet, </author> <title> Three hierarchies of transducers, </title> <note> Mathematical Systems Theory 15 (1982) 95-125. </note>
Reference-contexts: This conjecture was finally proved by Engelfriet <ref> [5] </ref>, see also [6]; that is, it was proved that for all n 0, T T n T T n+1 . Interestingly, deterministic top-down tree transformations (denoted by DTT) are also not closed under composition, i.e. <p> That is, (DT T R ) 2 = DT T R and T T R (T T R ) 2 . Indeed it easily follows from the results of [4] and <ref> [5] </ref> that, as in the case without look-ahead, iterating composition of top-down tree transducers with regular look-ahead produces a proper hierarchy, i.e. for all n 0, (T T R ) n (T T R ) n+1 . <p> It is again easy to show that T T DR is not closed under composition and that iterating composition gives rise to a proper hierarchy, i.e. for every n 0, (T T DR ) n (T T DR ) n+1 . Indeed, by the results in [4], <ref> [5] </ref>, the three "iterated-composition" hierarchies T T n (n 1), (T T R ) n (n 1), and (T T DR ) n (n 1), each being proper on its own, mesh into a single hierarchy: T T n (T T DR ) n (T T R ) n T T
Reference: [6] <author> J. Engelfriet, G. Rozenberg, and G. Slutzki, </author> <title> Tree Transducers, L systems, and two-way machines, </title> <journal> J. Comput. System Sci. </journal> <month> 20 </month> <year> (1980) </year> <month> 150-202. </month>
Reference-contexts: This conjecture was finally proved by Engelfriet [5], see also <ref> [6] </ref>; that is, it was proved that for all n 0, T T n T T n+1 . Interestingly, deterministic top-down tree transformations (denoted by DTT) are also not closed under composition, i.e.
Reference: [7] <author> J. Engelfriet and H. Vogler, </author> <title> Macro tree transducers, </title> <journal> J. Comput. System Sci. </journal> <month> 31 </month> <year> (1985) </year> <month> 71-146. </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts <ref> [7] </ref>, [8], [9]. Following [4], Fulop and Vagvolgyi [10], [11] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages.
Reference: [8] <author> J. Engelfriet and H. Vogler, </author> <title> Pushdown machines for the macro tree transducer, </title> <type> Theoret. </type> <institution> Comput. Sci. </institution> <month> 42 </month> <year> (1986) </year> <month> 251-368. 24 </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], <ref> [8] </ref>, [9]. Following [4], Fulop and Vagvolgyi [10], [11] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages.
Reference: [9] <author> J. Engelfriet and H. Vogler, </author> <title> High level tree transducers and iterated pushdown trans-ducers, </title> <journal> Acta Inform. </journal> <month> 26 </month> <year> (1988) </year> <month> 131-192. </month>
Reference-contexts: It transpired that they have a number of nice properties, especially in the deterministic case. For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], [8], <ref> [9] </ref>. Following [4], Fulop and Vagvolgyi [10], [11] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages.
Reference: [10] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Top-down tree transducers with determinstic top-down look-ahead, </title> <journal> Inform. Process. Lett. </journal> <volume> 33 (1989/90) 3-5. </volume>
Reference-contexts: Interestingly, deterministic top-down tree transformations (denoted by DTT) are also not closed under composition, i.e. DT T DT T 2 , but Fulop and Vagvolgyi <ref> [10] </ref> have shown that DT T 2 = DT T 3 . Thus, in the deterministic case, the hierarchy DT T n (n 1) collapses to the second level. <p> For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], [8], [9]. Following [4], Fulop and Vagvolgyi <ref> [10] </ref>, [11] defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages.
Reference: [11] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Variants of top-down tree transducers with look-ahead, </title> <note> Mathematical Systems Theory 21 (1989) 125-145. </note>
Reference-contexts: Of course, because of closure under composition, the corresponding deterministic hierarchy collapses to the first level. In <ref> [11] </ref> Fulop and Vagvolgyi introduced and studied deterministic and nondeterministic top-down tree transducers with deterministic top-down look-ahead (the classes of the induced tree transformations are denoted respectively by DT T DR and T T DR ). The deterministic top-down look-ahead is a look-ahead computable by a deterministic top-down tree automaton. <p> The main thrust in <ref> [11] </ref> was the study of deterministic top-down tree transducers with deterministic top-down look-ahead (denoted, as mentioned above, by DT T DR ). It was shown there that DT T DR is not closed under composition, but the question of whether iterating composition leads to a proper hierarchy was left open. <p> For example, the class of deterministic top-down tree tree transforma tions with regular look-ahead is closed under composition. The concept of look-ahead also 5 proved useful in other contexts [7], [8], [9]. Following [4], Fulop and Vagvolgyi [10], <ref> [11] </ref> defined and studied top-down tree transducers and deterministic top-down tree automata with deterministic top-down look-ahead capacity. Let C be a class of tree languages.
Reference: [12] <author> Z. Fulop and S. Vagvolgyi, </author> <title> Iterated deterministic top-down look-ahead, </title> <booktitle> in: Proc. FCT'89, Lecture Notes in Computer Science, </booktitle> <volume> Vol. </volume> <publisher> 380 (Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1989) </year> <month> 175-184. </month>
Reference-contexts: This question was recently settled in [17] : for every n 0, (DT T DR ) n (DT T DR ) n+1 . The proof in [17] uses the following classes of tree languages defined previously in <ref> [12] </ref>: DR 0 = DR where dom (DT A DR n ) is the class of all tree languages recognized by deterministic top-down tree automata with look-ahead languages from the class DR n (as previously mentioned, DR is the class of all tree languages recognized by deterministic top-down tree automata without <p> Fulop and Vagvolgyi <ref> [12] </ref> proved that these classes form a proper hierarchy 2 within the class of recognizable tree languages (which, recall, was denoted by R), i.e. for every n 0, DR n DR n+1 . <p> Let DR 0 = DR and let, for n 1, DR n be the class of tree languages recognizable by deterministic top-down tree automata with DR n1 look-ahead. By Proposition 2.3, DR n R for every n 0. Fulop and Vagvolgyi <ref> [12] </ref> proved the following result. Proposition 2.4 For each n 1, DR n1 DR n . 3 The Results First we prove two preparatory lemmas.
Reference: [13] <author> F. Gecseg and M. Steinby, </author> <title> Tree Automata (Akademiai Kiado, </title> <address> Budapest, </address> <year> 1984). </year>
Reference-contexts: It is well known that DR R or equivalently DT A T A; a proof can be found in [3] or <ref> [13] </ref>. Top-down tree transducers with look-ahead, one of the main topics of this paper, were defined in [4]. It transpired that they have a number of nice properties, especially in the deterministic case.
Reference: [14] <author> W.F. Ogden, W.C. </author> <title> Rounds, Composition of n transducers, </title> <booktitle> in: Proceedings of the 4th ACM Symposium on Theory of Computing (1972) 198-206. </booktitle>
Reference-contexts: It was immediately shown [16],[18] that top-down tree transformations are not closed under composition, i.e. T T T T 2 , and it was conjectured [2] <ref> [14] </ref> [15] that iterating composition of fl On leave from Research Group on Theory of Automata, Hungarian Academy of Sciences, supported by a grant from the Soros Foundation. 1 T T gives rise to a proper hierarchy.
Reference: [15] <author> C.R. Perrault, </author> <title> Intercalation lemmas for tree transducer languages, </title> <journal> J. Comput. System Sci. </journal> <month> 13 </month> <year> (1976) </year> <month> 246-277. </month>
Reference-contexts: It was immediately shown [16],[18] that top-down tree transformations are not closed under composition, i.e. T T T T 2 , and it was conjectured [2] [14] <ref> [15] </ref> that iterating composition of fl On leave from Research Group on Theory of Automata, Hungarian Academy of Sciences, supported by a grant from the Soros Foundation. 1 T T gives rise to a proper hierarchy.
Reference: [16] <author> W. C. </author> <title> Rounds, Mappings and grammars on trees, </title> <note> Mathematical Systems Theory 4 (1970) 257-287. </note>
Reference: [17] <author> G. Slutzki and S. Vagvolgyi, </author> <title> A Hierarchy of Deterministic Top-down Tree Transformations, </title> <type> Technical Report, TR 93-10a, </type> <institution> Department of Computer Science, Iowa State University, </institution> <month> April </month> <year> 1993, </year> <note> see also in: Proc. FCT '93, to appear. </note>
Reference-contexts: It was shown there that DT T DR is not closed under composition, but the question of whether iterating composition leads to a proper hierarchy was left open. This question was recently settled in <ref> [17] </ref> : for every n 0, (DT T DR ) n (DT T DR ) n+1 . The proof in [17] uses the following classes of tree languages defined previously in [12]: DR 0 = DR where dom (DT A DR n ) is the class of all tree languages recognized <p> This question was recently settled in <ref> [17] </ref> : for every n 0, (DT T DR ) n (DT T DR ) n+1 . The proof in [17] uses the following classes of tree languages defined previously in [12]: DR 0 = DR where dom (DT A DR n ) is the class of all tree languages recognized by deterministic top-down tree automata with look-ahead languages from the class DR n (as previously mentioned, DR is the class <p> Fulop and Vagvolgyi [12] proved that these classes form a proper hierarchy 2 within the class of recognizable tree languages (which, recall, was denoted by R), i.e. for every n 0, DR n DR n+1 . In <ref> [17] </ref> the authors defined and studied deterministic top-down tree transducers with DR n look-ahead (the class of the induced tree transformations is denoted by DT T DR n ) and have shown that (DT T DR ) n+1 DT T DR n (yy) which intuitively means that composition of (n+1) many <p> Then DT T DR n DT T DR ffi DT T DR n1 by Theorem 3.4 DT T DR ffi (DT T DR ) n by the induction hypothesis. = (DT T DR ) n+1 : We now recall two results from <ref> [17] </ref>. The first one states that the composition of n + 1 dtt DR 's can be simulated by a single dtt DR n , and the second one states that iterating the compositions of dtt DR 's gives rise to a proper hiearachy.
Reference: [18] <author> J. W. Thatcher, </author> <title> Generalized 2 sequential machine maps, </title> <journal> J. Comput. System Sci. </journal> <month> 4 </month> <year> (1970) </year> <month> 339-367. </month>
Reference: [19] <author> J. W. Thatcher, </author> <title> Tree automata: an informal survey, </title> <editor> in: A. V. Aho, ed., </editor> <booktitle> Currents in the Theory of Computing (Prentice-Hall, </booktitle> <address> Englewood Cliffs, </address> <year> 1973) </year> <month> 143-172. 25 </month>
Reference-contexts: Top-down (deterministic and nondeterministic) tree transducers with regular look-ahead (the classes of the induced tree transformations are denoted respectively by DT T R and T T R ) were introduced and studied in [4]. (The regular look-ahead is a look-ahead computable by a nondeterministic top-down tree automaton, see, for example, <ref> [19] </ref>.) It was shown there that DT T R is closed under composition, whereas T T R is not. That is, (DT T R ) 2 = DT T R and T T R (T T R ) 2 .
References-found: 19

