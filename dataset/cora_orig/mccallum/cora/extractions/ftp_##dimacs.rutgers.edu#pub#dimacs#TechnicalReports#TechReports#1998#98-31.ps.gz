URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1998/98-31.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1998.html
Root-URL: http://www.cs.rutgers.edu
Email: E-mail: mkrivel@math.ias.edu  E-mail: sudakov@math.tau.ac.il  
Title: Approximate coloring of uniform hypergraphs  
Author: by Michael Krivelevich ; Benny Sudakov 
Note: 2 Research supported by an IAS/DIMACS Postdoctoral Fellowship. DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs-Research, Bell Labs, Bellcore and NEC Research Institute. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Address: Princeton, New Jersey 08540, USA.  Tel Aviv 69978, Israel.  
Affiliation: School of Mathematics Institute for Advanced Study  Department of Mathematics, Sackler Faculty of Exact Sciences Tel Aviv University  
Abstract: DIMACS Technical Report 98-31 July 1998 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, P. Kelsen, S. Mahajan and H. Ramesh, </author> <title> Coloring 2-colorable hypergraphs with a sublinear number of colors, </title> <journal> Nordic J. Comput. </journal> <volume> 3 (1996), </volume> <pages> 425-439. </pages>
Reference-contexts: The first non-trivial case of approximately coloring 2-colorable hypergraphs has recently been considered in papers of Chen and Frieze [9] and of Kelsen, Mahajan and Ramesh ([15], a journal version appeared in <ref> [1] </ref>). Both papers arrived independently to practically identical results. They presented an algorithm for coloring a 2-colorable r-uniform hypergraph in O (n 11=r ) colors, using an idea closely related to the basic idea of Wigderson's coloring algorithm [19].
Reference: [2] <author> N. Alon and J. H. Spencer, </author> <title> The probabilistic method, </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: We get an independent set U of size jU j X Y 1 4 (n=t) 1=(r1) . The above described randomized algorithm can be easily derandomized using standard derandomization techniques (see, e.g., <ref> [2] </ref>, Ch. 15). 2 We denote the algorithm described in Proposition 3.2 by I (H; t). Here are its formal specifications.
Reference: [3] <author> B. Berger and J. Rompel, </author> <title> A better performance guarantee for approximate graph coloring, </title> <booktitle> Algorithmica 5 (1990), </booktitle> <pages> 459-466. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], <ref> [3] </ref>, [11], [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. <p> The main idea of Wigderson's algorithm was quite simple: if a graph is k-colorable then the neighborhood N (v) of any vertex v 2 V (G) is (k1)-colorable, thus opening a way for recursion. Berger and Rompel <ref> [3] </ref> further improved Johnson's result by presenting an algorithm whose approximation ratio is better than that of Wigderson's algorithm by a factor of log n= log log n. <p> Finally, Halldorsson [11] came up with an approximation algorithm that uses at most (G)n (log log n) 2 =(log n) 3 colors, currently best known result. His contribution is based on Ramsey-type arguments for finding a large independent set from his paper with Boppana [6]. Both papers <ref> [3] </ref> and [11] proceed by repeatedly finding a large independent set, coloring it by a fresh color and discharging it quite a common approach in graph coloring algorithms. We will also adopt this strategy. <p> It is worth noting that the idea of partitioning the vertex set of a k-colorable hypergraph H on n into bins of size k log k n and performing an exhaustive search for an independent set of size log k n in each bin is due to Berger and Rompel <ref> [3] </ref>. Let Algorithm B (H; k) Input: An integer k 2 and a hypergraph H = (V; E). Output: A subset U of V (H) of size jU j = h k (jV (H)j). 1. n = jV (H)j; h = h k (n); 3.
Reference: [4] <author> A. Blum, </author> <title> New approximation algorithms for graph coloring, </title> <editor> J. </editor> <booktitle> ACM 31 (1994), </booktitle> <pages> 470-516. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], [11], <ref> [4] </ref>, [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case.
Reference: [5] <author> A. Blum and D. Karger, </author> <title> An ~ O(n 3=14 )-coloring algorithm for 3-colorable graphs, </title> <journal> Inform. Process. Lett. </journal> <volume> 61 (1997), </volume> <pages> 49-53. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], [11], [4], [14], <ref> [5] </ref>) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. <p> We develop an algorithm whose performance guarantee for hypergraphs on n vertices is ~ O (n 9=41 ), thus slightly improving over the result of Chen and Frieze [9] and of Kelsen, Mahajan and Ramesh [15]. Similarly to the improvement of Blum and Karger <ref> [5] </ref> of the Karger-Motwani-Sudan algorithm for coloring 3-colorable graphs, an improvement here is achieved by gaining some advantage in the case of dense hypergraphs. Final Section 5 is devoted to concluding remarks. <p> We will achieve an improvement by using a more sophisticated idea in the case of dense hypergraphs. This approach is somewhat similar to that of the paper of Blum and Karger <ref> [5] </ref>, where they improve the bound of Karger, Motwani and Sudan for coloring 3-colorable graphs by using more elaborate techniques for the dense case. Here is a brief outline of our algorithm.
Reference: [6] <author> R. Boppana and M. M. Halldorsson, </author> <title> Approximating maximum independent sets by excluding subgraphs, </title> <booktitle> Bit 32 (1992), </booktitle> <pages> 180-196. </pages>
Reference-contexts: Finally, Halldorsson [11] came up with an approximation algorithm that uses at most (G)n (log log n) 2 =(log n) 3 colors, currently best known result. His contribution is based on Ramsey-type arguments for finding a large independent set from his paper with Boppana <ref> [6] </ref>. Both papers [3] and [11] proceed by repeatedly finding a large independent set, coloring it by a fresh color and discharging it quite a common approach in graph coloring algorithms. We will also adopt this strategy. <p> It is not clear how to define a notion of the neighborhood of a subset in order to apply the Berger-Rompel approach. Also, bounds - 4 - on the hypergraph Ramsey numbers are too weak to lead to algorithmic applications in the spirit of <ref> [6] </ref>, [11]. However, something from the graph case can still be rescued. Both papers [9] and [15], dealing with the case of 2-colorable hypergraphs, noticed that the main idea behind Wigderson's algorithm is still usable for the hypergraph case. <p> Finally, we find an independent set of size ~ (jV (H 3 )j 4=5 ) = ~ (n 32=41 ) in H 3 using a reminiscent of the subgraph exclusion technique applied by Boppana and Halldorsson <ref> [6] </ref>. Now we give a detailed description of the algorithm. To simplify the presentation we try to avoid the use of specific constants in some of the expressions below, hiding them in the standard O; -notation, the exact values of the corresponding constants can easily be - 11 - calculated. <p> Our aim is to find a large independent set in a hypergraph with the above properties. - 12 - At this point we apply subhypergraph exclusion techniques, similarly to the algorithm of Boppana and Halldorsson for finding a large independent set in graphs <ref> [6] </ref>. Our main tool is the following proposition. Proposition 4.1 Let 0 &lt; a &lt; b 1 be fixed numbers. Let G be a fixed r-uniform hypergraph with independence ratio ir (G) = a.
Reference: [7] <author> J. Brown, </author> <title> The complexity of generalized graph colorings, </title> <journal> Discrete Applied Math. </journal> <volume> 69 (1996), </volume> <pages> 257-270. </pages>
Reference-contexts: However, much less is known about the general case. Lovasz [17] showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable. Additional results on complexity of hypergraph coloring were obtained in [18], [8], <ref> [7] </ref>. These hardness results give rise to attempts of developing algorithms for approximate uniform hypergraph coloring, aiming to use a small but possibly non-optimal number of colors. <p> Phelps and Rodl proved in [18] that it is NP -complete to check k-colorability of r-uniform hypergraphs for all k; r 3, even when restricted to linear hypergraphs. Brown and Corneil [8] presented a polynomial transformation from k-chromatic graphs to k-chromatic r-uniform hypergraphs. Finally, Brown showed in <ref> [7] </ref> that, unless P = N P , it is impossible to check in polynomial time 2-colorability of r-uniform hypergraphs for any r 3. However, we are not aware about any result showing that it is also hard to approximate the chromatic number of r-uniform hypergraphs, where r 3.
Reference: [8] <author> J. Brown and D. Corneil, </author> <title> Graph properties and hypergraph colourings, </title> <journal> Discrete Math. </journal> <volume> 98 (1991), </volume> <pages> 81-93. </pages>
Reference-contexts: However, much less is known about the general case. Lovasz [17] showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable. Additional results on complexity of hypergraph coloring were obtained in [18], <ref> [8] </ref>, [7]. These hardness results give rise to attempts of developing algorithms for approximate uniform hypergraph coloring, aiming to use a small but possibly non-optimal number of colors. <p> Phelps and Rodl proved in [18] that it is NP -complete to check k-colorability of r-uniform hypergraphs for all k; r 3, even when restricted to linear hypergraphs. Brown and Corneil <ref> [8] </ref> presented a polynomial transformation from k-chromatic graphs to k-chromatic r-uniform hypergraphs. Finally, Brown showed in [7] that, unless P = N P , it is impossible to check in polynomial time 2-colorability of r-uniform hypergraphs for any r 3.
Reference: [9] <author> H. Chen and A. Frieze, </author> <title> Coloring bipartite hypergraphs, </title> <booktitle> in: Proc. 5 th Intern. IPCO Conference, Lecture Notes in Comp. Sci. 1084 (1996), </booktitle> <pages> 345-358. - 15 </pages> - 
Reference-contexts: These hardness results give rise to attempts of developing algorithms for approximate uniform hypergraph coloring, aiming to use a small but possibly non-optimal number of colors. The first non-trivial case of approximately coloring 2-colorable hypergraphs has recently been considered in papers of Chen and Frieze <ref> [9] </ref> and of Kelsen, Mahajan and Ramesh ([15], a journal version appeared in [1]). Both papers arrived independently to practically identical results. <p> In Section 4 we consider the special case of 3-uniform 2-colorable hypergraphs. We develop an algorithm whose performance guarantee for hypergraphs on n vertices is ~ O (n 9=41 ), thus slightly improving over the result of Chen and Frieze <ref> [9] </ref> and of Kelsen, Mahajan and Ramesh [15]. Similarly to the improvement of Blum and Karger [5] of the Karger-Motwani-Sudan algorithm for coloring 3-colorable graphs, an improvement here is achieved by gaining some advantage in the case of dense hypergraphs. Final Section 5 is devoted to concluding remarks. <p> Also, bounds - 4 - on the hypergraph Ramsey numbers are too weak to lead to algorithmic applications in the spirit of [6], [11]. However, something from the graph case can still be rescued. Both papers <ref> [9] </ref> and [15], dealing with the case of 2-colorable hypergraphs, noticed that the main idea behind Wigderson's algorithm is still usable for the hypergraph case. Let us describe now the main instrument of these papers, playing a key role in our arguments as well. <p> For a hypergraph H = (V; E) and a subset of vertices S V , let N (S) = fv 2 V : S [ fvg 2 Eg. The following procedure is used in both papers <ref> [9] </ref> and [15]. Procedure Reduce (H; S) Input: A hypergraph H = (V; E) and a vertex subset S V . Output: A hypergraph H 0 = (V; E 0 ). 1. Delete from E the set of edges fS [ fvg : v 2 N (S)g; 2. <p> Also, the neighborhood of v 2 V is defined as N (v) = fu 2 V n fvg : 9w 2 V; (u; v; w) 2 E (H)g. The independence ratio ir (H) of H is ir (H) = ff (H)=jV j. Both papers <ref> [9] </ref> and [15] noticed that the special case of 3-uniform 2-colorable hypergraphs is different from other cases. <p> We refer the reader to [15] for a relevant discussion. In our algorithm we will use the semidefinite programming subroutine of <ref> [9] </ref>, [15] to find a large independent set. Their analysis yields the existence of the following procedure. - 10 - Procedure Semidef (H) Input: A 3-uniform 2-colorable hypergraph H = (V; E) on n vertices with m n edges. <p> As we have seen before (Prop. 3.6), such an algorithm can be then used to color H in O (n 9=41 (log n) 81=82 ) colors, thus giving a (slight) improvement over the result of <ref> [9] </ref>, [15] in the exponent of n (2=9 = 0:222 : : :, 9=41 = 0:219 : : :). The main idea of the algorithm from [9], [15] is quite simple (given the existence of procedure Semidef ): if there is a pair of vertices u; v 2 H such that <p> be then used to color H in O (n 9=41 (log n) 81=82 ) colors, thus giving a (slight) improvement over the result of <ref> [9] </ref>, [15] in the exponent of n (2=9 = 0:222 : : :, 9=41 = 0:219 : : :). The main idea of the algorithm from [9], [15] is quite simple (given the existence of procedure Semidef ): if there is a pair of vertices u; v 2 H such that d (u; v) = ~ (n 7=9 ), then either N (u; v) is independent, thus providing an independent set of a desired size, or one <p> We have also presented two approximate hyper-graph coloring algorithms. Our general approximation algorithm has approximation ratio O (n (log log n) 2 =(log n) 2 )) for hypergraphs on n vertices. For the special case of 3-uniform 2-colorable hypergraphs, discussed in <ref> [9] </ref>, [15], we combine the semidefinite programming approach of these papers with a more sophisticated treatment of the dense case to get an algorithm that colors such hypergraphs on n vertices in ~ O (n 9=41 ) colors, improving previously known results.
Reference: [10] <author> U. Feige and J. Kilian, </author> <title> Zero knowledge and the chromatic number, </title> <booktitle> in: Proc. 11 th Annual IEEE Conf. on Computational Complexity, </booktitle> <year> 1996. </year>
Reference-contexts: of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], [11], [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], <ref> [10] </ref>) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. Lovasz [17] showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable. <p> However, we are not aware about any result showing that it is also hard to approximate the chromatic number of r-uniform hypergraphs, where r 3. For the graph case (r = 2), Feige and Kilian showed in <ref> [10] </ref>, using the result of H-astad [12], that if N P does not have efficient randomized algorithms, then there is no polynomial time algorithm for approximating the chromatic number of an n vertex graph within a factor of n 1* , for any fixed * &gt; 0. <p> Therefore G and H as defined above have the same number of vertices, and their chromatic numbers have the same order. Applying now the result of Feige and Kilian <ref> [10] </ref>, we get the following theorem. Theorem 2.1 Let r 3 be fixed.
Reference: [11] <author> M. M. Halldorsson, </author> <title> A still better performance guarantee for approximate graph coloring, </title> <journal> Inform. Process. Lett. </journal> <volume> 45 (1993), </volume> <pages> 19-23. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], <ref> [11] </ref>, [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. <p> Repeatedly finding such S and deleting it and its neighborhood leads to finding an independent set of size (log k n) 2 . Finally, Halldorsson <ref> [11] </ref> came up with an approximation algorithm that uses at most (G)n (log log n) 2 =(log n) 3 colors, currently best known result. His contribution is based on Ramsey-type arguments for finding a large independent set from his paper with Boppana [6]. Both papers [3] and [11] proceed by repeatedly <p> Finally, Halldorsson <ref> [11] </ref> came up with an approximation algorithm that uses at most (G)n (log log n) 2 =(log n) 3 colors, currently best known result. His contribution is based on Ramsey-type arguments for finding a large independent set from his paper with Boppana [6]. Both papers [3] and [11] proceed by repeatedly finding a large independent set, coloring it by a fresh color and discharging it quite a common approach in graph coloring algorithms. We will also adopt this strategy. <p> It is not clear how to define a notion of the neighborhood of a subset in order to apply the Berger-Rompel approach. Also, bounds - 4 - on the hypergraph Ramsey numbers are too weak to lead to algorithmic applications in the spirit of [6], <ref> [11] </ref>. However, something from the graph case can still be rescued. Both papers [9] and [15], dealing with the case of 2-colorable hypergraphs, noticed that the main idea behind Wigderson's algorithm is still usable for the hypergraph case. <p> As for the performance guarantee, it can be derived from the following easy proposition, proven, for example, implicitly in the paper of Halldorsson <ref> [11] </ref>. Proposition 3.6 An iterative application of an algorithm that guarantees finding an independent set of size f (n) = O (n 1* ) in a hypergraph H on n vertices for some fixed * &gt; 0, produces a coloring of H with O (n=f (n)) colors. Corollary 3.7 1. <p> One of them is to develop a general approximation algorithm, aiming to match the approximation ratio O (n (log log n) 2 =(log n) 3 ) of the best known graph coloring algorithm due to Halldorsson <ref> [11] </ref>. Another interesting problem is to come up with a more involved algorithm for the case of r-uniform 2-colorable hypergraphs for r 4. Also, new ideas for the dense case of 3-uniform 2-colorable hypergraphs may lead to a further improvement in this case.
Reference: [12] <author> J. H-astad, </author> <title> Clique is hard to approximate within n 1* , in: </title> <booktitle> Proc. 37 th IEEE FOCS, IEEE (1996), </booktitle> <pages> 627-636. </pages>
Reference-contexts: However, we are not aware about any result showing that it is also hard to approximate the chromatic number of r-uniform hypergraphs, where r 3. For the graph case (r = 2), Feige and Kilian showed in [10], using the result of H-astad <ref> [12] </ref>, that if N P does not have efficient randomized algorithms, then there is no polynomial time algorithm for approximating the chromatic number of an n vertex graph within a factor of n 1* , for any fixed * &gt; 0.
Reference: [13] <author> D. S. Johnson, </author> <title> Worst case behaviour of graph coloring algorithms, </title> <booktitle> in: Proc. 5th S.E. Conf. on Combinatorics, Graph Theory and Computing, Congr. Numer. 10 (1974), </booktitle> <pages> 512-527. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. <ref> [13] </ref>, [19], [3], [11], [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. <p> As we have already mentioned in the introduction, this question is relatively well-studied. The first result on approximate graph coloring belongs to Johnson <ref> [13] </ref>, who in 1974 proposed an algorithm with approximation ratio of order n= log n, where n denotes the number of vertices in a graph G. The next step was taken by Wigderson [19], whose algorithm achieves approximation ratio O (n (log log n) 2 =(log n) 2 ).
Reference: [14] <author> D. Karger, R. Motwani and M. Sudan, </author> <title> Approximate graph coloring by semidefinite programming, </title> <booktitle> in: Proc. 26 th ACM FOCS, </booktitle> <publisher> ACM Press (1994), </publisher> <pages> 2-13. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], [11], [4], <ref> [14] </ref>, [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. <p> Another result of the above mentioned two papers is an algorithm for coloring 3-uniform 2-colorable hypergraphs in ~ O (n 2=9 ) colors. The latter algorithm exploits the semidefinite programming approach, much in the spirit of the Karger-Motwani-Sudan coloring algorithm <ref> [14] </ref>. Nothing seems to have been known about general approximate coloring algorithms (that is, when the chromatic number of a hypergraph is not give in advance) and also about the hardness of this approximation problem. <p> Both papers [9] and [15] noticed that the special case of 3-uniform 2-colorable hypergraphs is different from other cases. The reason for this difference stems from the fact that for this particular case the semidefinite programming approach, pioneered for coloring problems by Karger, Motwani and Sudan <ref> [14] </ref>, can be applied here as well. We refer the reader to [15] for a relevant discussion. In our algorithm we will use the semidefinite programming subroutine of [9], [15] to find a large independent set.
Reference: [15] <author> P. Kelsen, S. Mahajan and H. Ramesh, </author> <title> Approximate hypergraph coloring, </title> <booktitle> in: Proc. 5 th Scandinavian Workshop on Algorithm Theory, Lecture Notes in Comp. Sci. 1097 (1996), </booktitle> <pages> 41-52. </pages>
Reference-contexts: In Section 4 we consider the special case of 3-uniform 2-colorable hypergraphs. We develop an algorithm whose performance guarantee for hypergraphs on n vertices is ~ O (n 9=41 ), thus slightly improving over the result of Chen and Frieze [9] and of Kelsen, Mahajan and Ramesh <ref> [15] </ref>. Similarly to the improvement of Blum and Karger [5] of the Karger-Motwani-Sudan algorithm for coloring 3-colorable graphs, an improvement here is achieved by gaining some advantage in the case of dense hypergraphs. Final Section 5 is devoted to concluding remarks. <p> Also, bounds - 4 - on the hypergraph Ramsey numbers are too weak to lead to algorithmic applications in the spirit of [6], [11]. However, something from the graph case can still be rescued. Both papers [9] and <ref> [15] </ref>, dealing with the case of 2-colorable hypergraphs, noticed that the main idea behind Wigderson's algorithm is still usable for the hypergraph case. Let us describe now the main instrument of these papers, playing a key role in our arguments as well. <p> For a hypergraph H = (V; E) and a subset of vertices S V , let N (S) = fv 2 V : S [ fvg 2 Eg. The following procedure is used in both papers [9] and <ref> [15] </ref>. Procedure Reduce (H; S) Input: A hypergraph H = (V; E) and a vertex subset S V . Output: A hypergraph H 0 = (V; E 0 ). 1. Delete from E the set of edges fS [ fvg : v 2 N (S)g; 2. <p> Also, the neighborhood of v 2 V is defined as N (v) = fu 2 V n fvg : 9w 2 V; (u; v; w) 2 E (H)g. The independence ratio ir (H) of H is ir (H) = ff (H)=jV j. Both papers [9] and <ref> [15] </ref> noticed that the special case of 3-uniform 2-colorable hypergraphs is different from other cases. The reason for this difference stems from the fact that for this particular case the semidefinite programming approach, pioneered for coloring problems by Karger, Motwani and Sudan [14], can be applied here as well. <p> The reason for this difference stems from the fact that for this particular case the semidefinite programming approach, pioneered for coloring problems by Karger, Motwani and Sudan [14], can be applied here as well. We refer the reader to <ref> [15] </ref> for a relevant discussion. In our algorithm we will use the semidefinite programming subroutine of [9], [15] to find a large independent set. <p> We refer the reader to <ref> [15] </ref> for a relevant discussion. In our algorithm we will use the semidefinite programming subroutine of [9], [15] to find a large independent set. Their analysis yields the existence of the following procedure. - 10 - Procedure Semidef (H) Input: A 3-uniform 2-colorable hypergraph H = (V; E) on n vertices with m n edges. <p> As we have seen before (Prop. 3.6), such an algorithm can be then used to color H in O (n 9=41 (log n) 81=82 ) colors, thus giving a (slight) improvement over the result of [9], <ref> [15] </ref> in the exponent of n (2=9 = 0:222 : : :, 9=41 = 0:219 : : :). The main idea of the algorithm from [9], [15] is quite simple (given the existence of procedure Semidef ): if there is a pair of vertices u; v 2 H such that d <p> then used to color H in O (n 9=41 (log n) 81=82 ) colors, thus giving a (slight) improvement over the result of [9], <ref> [15] </ref> in the exponent of n (2=9 = 0:222 : : :, 9=41 = 0:219 : : :). The main idea of the algorithm from [9], [15] is quite simple (given the existence of procedure Semidef ): if there is a pair of vertices u; v 2 H such that d (u; v) = ~ (n 7=9 ), then either N (u; v) is independent, thus providing an independent set of a desired size, or one can <p> We have also presented two approximate hyper-graph coloring algorithms. Our general approximation algorithm has approximation ratio O (n (log log n) 2 =(log n) 2 )) for hypergraphs on n vertices. For the special case of 3-uniform 2-colorable hypergraphs, discussed in [9], <ref> [15] </ref>, we combine the semidefinite programming approach of these papers with a more sophisticated treatment of the dense case to get an algorithm that colors such hypergraphs on n vertices in ~ O (n 9=41 ) colors, improving previously known results.
Reference: [16] <author> S. Khanna, N. Linial and M. Safra, </author> <title> On the hardness of approximating the chromatic number, </title> <booktitle> in: Proc. 2 nd Israeli Symposium on Theor. Comp. Sci., IEEE (1992), </booktitle> <pages> 250-260. </pages>
Reference-contexts: case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], [19], [3], [11], [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. <ref> [16] </ref>, [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. Lovasz [17] showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable.
Reference: [17] <author> L. Lovasz, </author> <title> Coverings and colorings of hypergraphs, </title> <booktitle> in: Proc. 4 th S.E. Conf. on Combinatorics, Graph Theory and Computing, 1973, </booktitle> <publisher> Utilitas Math., </publisher> <pages> 3-12. </pages>
Reference-contexts: We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. Lovasz <ref> [17] </ref> showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable. Additional results on complexity of hypergraph coloring were obtained in [18], [8], [7]. <p> Final Section 5 is devoted to concluding remarks. All logarithms are natural unless written explicitly otherwise. 2 Hardness of approximation Several results on hardness of calculating exactly the chromatic number of r-uniform hyper-graphs have been known previously. Lovasz <ref> [17] </ref> showed that it is N P -complete to decide whether a given 3-uniform hypergraph H is 2-colorable. Phelps and Rodl proved in [18] that it is NP -complete to check k-colorability of r-uniform hypergraphs for all k; r 3, even when restricted to linear hypergraphs.
Reference: [18] <author> K. Phelps and V. Rodl, </author> <title> On the algorithmic complexity of coloring simple hypergraphs and Steiner triple systems, </title> <booktitle> Combinatorica 4 (1984), </booktitle> <pages> 79-88. </pages>
Reference-contexts: We will briefly survey these developments in the subsequent sections of the paper. However, much less is known about the general case. Lovasz [17] showed that it is N P -hard to determine whether a 3-uniform hypergraph is 2-colorable. Additional results on complexity of hypergraph coloring were obtained in <ref> [18] </ref>, [8], [7]. These hardness results give rise to attempts of developing algorithms for approximate uniform hypergraph coloring, aiming to use a small but possibly non-optimal number of colors. <p> Lovasz [17] showed that it is N P -complete to decide whether a given 3-uniform hypergraph H is 2-colorable. Phelps and Rodl proved in <ref> [18] </ref> that it is NP -complete to check k-colorability of r-uniform hypergraphs for all k; r 3, even when restricted to linear hypergraphs. Brown and Corneil [8] presented a polynomial transformation from k-chromatic graphs to k-chromatic r-uniform hypergraphs.
Reference: [19] <author> A. Wigderson, </author> <title> Improving the performance guarantee for approximate graph coloring, </title> <editor> J. </editor> <booktitle> ACM 30 (1983), </booktitle> <pages> 729-735. </pages>
Reference-contexts: The special case r = 2 (i.e. the case of graphs) is relatively well studied and many results have been obtained in both positive (that is, good approximation algorithms, see e.g. [13], <ref> [19] </ref>, [3], [11], [4], [14], [5]) and negative (that is, by showing the hardness of approximating the chromatic number under some natural complexity assumptions, see e.g. [16], [10]) directions. We will briefly survey these developments in the subsequent sections of the paper. <p> Both papers arrived independently to practically identical results. They presented an algorithm for coloring a 2-colorable r-uniform hypergraph in O (n 11=r ) colors, using an idea closely related to the basic idea of Wigderson's coloring algorithm <ref> [19] </ref>. Another result of the above mentioned two papers is an algorithm for coloring 3-uniform 2-colorable hypergraphs in ~ O (n 2=9 ) colors. The latter algorithm exploits the semidefinite programming approach, much in the spirit of the Karger-Motwani-Sudan coloring algorithm [14]. <p> In Section 3 we present an approximation algorithm for coloring r-uniform hypergraphs - 2 - on n vertices, whose performance guarantee is O (n (log log n) 2 =(log n) 2 ), thus matching the approximation ratio of Wigderson's algorithm <ref> [19] </ref>. This algorithm is quite similar in a spirit to the algorithm of Wigderson, though technically somewhat more complicated. In Section 4 we consider the special case of 3-uniform 2-colorable hypergraphs. <p> The first result on approximate graph coloring belongs to Johnson [13], who in 1974 proposed an algorithm with approximation ratio of order n= log n, where n denotes the number of vertices in a graph G. The next step was taken by Wigderson <ref> [19] </ref>, whose algorithm achieves approximation ratio O (n (log log n) 2 =(log n) 2 ). The main idea of Wigderson's algorithm was quite simple: if a graph is k-colorable then the neighborhood N (v) of any vertex v 2 V (G) is (k1)-colorable, thus opening a way for recursion. <p> Therefore we get the following result. Theorem 3.8 For every fixed r 3, coloring of hypergraphs of dimension r on n vertices is O (n (log log n) 2 =(log n) 2 )) approximable. This bound matches the bound of Wigderson <ref> [19] </ref> for graph coloring. 4 Coloring 3-uniform 2-colorable hypergraphs Let us start this section by defining terminology and notation to be used later.
References-found: 19

