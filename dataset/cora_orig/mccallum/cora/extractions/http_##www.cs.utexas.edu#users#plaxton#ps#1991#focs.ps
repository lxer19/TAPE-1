URL: http://www.cs.utexas.edu/users/plaxton/ps/1991/focs.ps
Refering-URL: http://www.cs.utexas.edu/users/plaxton/html/conference.html
Root-URL: http://www.cs.utexas.edu
Title: for all m n and some positive constant ff, 0 &lt; ff &lt; 1. The
Author: jExtract(m; m ffi M. Ajtai, J. Komlos, and E. Szemeredi. U. Feige, D. Peleg, P. Raghavan, and E. Upfal. [] R. L. Graham, D. E. Knuth, and O. Patashnik. [] D. J. Kleitman, A. R. Meyer, R. L. Rivest, J. Spencer, and K. Winklemann. [] D. E. Knuth. [] F. T. Leighton. [] F. T. Leighton and C. G. Plaxton. [] A. Lubotzky, R. Phillips, and P. Sarnak. Ramanugan [] M. S. Paterson. [] A. Pelc. [] L. Rudolph. [] A. C. Yao and F. F. Yao. 
Keyword: Upfal. Fault tolerant sorting network.  
Address: Addison-Wesley, Reading, MA, 1989.  Reading, MA, 1973.  San Mateo, CA, 1991.  
Affiliation: Concrete Mathematics.  Morgan-Kaufmann,  
Date: October 1990.  128-137, May 1990.  264-274, October 1990.  May 1986.  
Note: greater than log n. 7 Final Remarks References [1]  Combinatorica, 3:1-19, 1983. [2] N. Alon. Eigenvalues and expanders. Combinatorica, 6:83-96, 1986. [3] S. Assaf and E.  In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, pages 275-284,  [4] K. E. Batcher. Sorting networks and their applications. In Proceedings of the AFIPS Spring Joint Computer Conference, vol. 32, pages 307-314, 1968. [5]  Computing with unreliable information. In Proceedings of the 22nd Annual ACM Symposium on Theory of Computing, pages  The Art of Computer Programming, volume 3. Addison-Wesley,  A (fairly) simple circuit that (usually) sorts. In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, pages  Proceedings of the 18th Annual ACM Symposium on Theory of Computing,  SIAM J. Comput., 14:120-128, 1985. 12  
Abstract: 1ffi=3 for all m n and where ffi is an arbitray constant in (0; 1). The circuit is very similar to that defined in Section 5.3. The main difference is that we cannot take advantage of the redundancy trick; as a result, our destructive-fault-tolerant *-halvers require k log n (as opposed to k = (log m)). This would be problematic were it not for the fact that we cut off the recursion before any subproblems involving The structure of the third gadget is virtually unchanged from Section 5.3, and establishes the bound of Equation 10. In this case, we run AKS as long the upper bound on the size of the smallest set of strange elements in any bag is We have used some of the ideas underlying the Type IV bound of Section 5.2 to design sorting circuits that are smaller than the classic Batcher circuits, and that are also passive-fault-tolerant. For example, we have constructed a 1024-input circuit that correctly sorts 99% of input permutations within 48 levels if there are no faults. If = :01 (i.e., if 1% of the comparators sustain passive faults), then the same circuit correctly sorts 91% of all input permutations within 49 levels, and if = :02, the circuit correctly sorts 91% of input permutations within 50 levels. (With = :05, we can sort 80% of input permutations within 60 levels.) These results compare favorably to the best known deterministic sorting circuits. For example, the best previously known circuit for sorting 1024 inputs has depth 55, and has essentially no fault-tolerance. small values of m begin to arise.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> An O(n log n) sorting network. </title> <journal> Combinatorica, </journal> <volume> 3 </volume> <pages> 1-19, </pages> <year> 1983. </year>
Reference: [2] <author> N. Alon. </author> <title> Eigenvalues and expanders. </title> <journal> Combinatorica, </journal> <volume> 6 </volume> <pages> 83-96, </pages> <year> 1986. </year>
Reference: [3] <author> S. Assaf and E. Upfal. </author> <title> Fault tolerant sorting network. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 275-284, </pages> <month> October </month> <year> 1990. </year>
Reference: [4] <author> K. E. Batcher. </author> <title> Sorting networks and their applications. </title> <booktitle> In Proceedings of the AFIPS Spring Joint Computer Conference, </booktitle> <volume> vol. 32, </volume> <pages> pages 307-314, </pages> <year> 1968. </year>
Reference: [5] <author> U. Feige, D. Peleg, P. Raghavan, and E. Upfal. </author> <title> Computing with unreliable information. </title> <booktitle> In Proceedings of the 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 128-137, </pages> <month> May </month> <year> 1990. </year>
Reference: [6] <author> R. L. Graham, D. E. Knuth, and O. Patashnik. </author> <title> Concrete Mathematics. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference: [7] <author> D. J. Kleitman, A. R. Meyer, R. L. Rivest, J. Spencer, and K. Winklemann. </author> <title> Coping with errors in binary search procedures. </title> <journal> JCSS, </journal> <volume> 20 </volume> <pages> 396-404, </pages> <year> 1980. </year>
Reference: [8] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, </booktitle> <volume> volume 3. </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference: [9] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees and Hypercubes. </title> <publisher> Morgan-Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference: [10] <author> F. T. Leighton and C. G. Plaxton. </author> <title> A (fairly) simple circuit that (usually) sorts. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 264-274, </pages> <month> October </month> <year> 1990. </year>
Reference: [11] <author> A. Lubotzky, R. Phillips, and P. Sarnak. </author> <title> Ramanugan conjecture and explicit construction of expanders. </title> <booktitle> In Proceedings of the 18th Annual ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1986. </year>
Reference: [12] <author> M. S. Paterson. </author> <title> Improved sorting networks with O(log n) depth. </title> <journal> Algorithmica, </journal> <volume> 5 </volume> <pages> 75-92, </pages> <year> 1990. </year>
Reference: [13] <author> A. Pelc. </author> <title> Searching with known error probability. </title> <journal> Theoretical Computer Science, </journal> <volume> 63 </volume> <pages> 185-202, </pages> <year> 1989. </year>
Reference: [14] <author> L. Rudolph. </author> <title> A robust sorting network. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34:326-335, </volume> <year> 1985. </year>

References-found: 14

