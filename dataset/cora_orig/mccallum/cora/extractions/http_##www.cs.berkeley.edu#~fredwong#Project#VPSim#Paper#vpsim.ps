URL: http://www.cs.berkeley.edu/~fredwong/Project/VPSim/Paper/vpsim.ps
Refering-URL: http://www.cs.berkeley.edu/~dmartin/cs267/projects/
Root-URL: http://www.cs.berkeley.edu
Email: ffredwong@CS.Berkeley.EDUg  
Title: Design and Implementation of Parallel Virtual Processors Simulator  
Author: Frederick Wong 
Date: May 15, 1998  
Affiliation: Computer Science Division Department of Electrical Engineering and Computer Science University of California, Berkeley  
Abstract: Parallel VirtualProcessors Simulator (VPSIM) is a pro-totyping simulator which provides a highly portable and efficient parallel simulation environment for analyzing parallel program. VPSIM is written on top of Message Passing Interface (MPI) for portability. Its modularity design provides an easy-to-use tool for parallel programmer to analyze the scalability, load balancing aspects of the parallel program. This paper describes the design and limitations of the current implementation on Berkeley NOW cluster. The simulation result of the benchmark LU in NAS Parallel Benchmarks 2.2 suite shows that, despite the drawbacks from the current implementation, VPSIM performs very well in estimating the benchmark's profile. 
Abstract-found: 1
Intro-found: 1
Reference: [ACM98] <editor> Scheduling with Implicit Information in Distributed Systems - Andrea C. Arpaci-Dusseau, David E. Culler, Alan M. Mainwaring. </editor> <address> UC Berkeley, </address> <year> 1998. </year>
Reference-contexts: In addition, the current implementation of MPI on the NOW cluster is not suitable for this type of simulations, where active processes might be busy polling the network for incoming messages but the corresponding sender has not been scheduled by the operating system. Implicit scheduling <ref> [ACM98] </ref> of MPI implementation 7 can helps to ease this problem.
Reference: [NPB97] <institution> The NAS Parallel Benchmarks Home Page - http://science.nas.nasa.gov/Software/NPB/index.html 7 The MPI with implicit scheduling has completed but has not been released yet. </institution> <note> The implementation is still undergoes a series of testing and analysis. 7 nodes. </note> <editor> Bottom: </editor> <title> The simulated time breakdown of LU Class B on 32 8 </title>
Reference-contexts: 1 Introduction The primarly goal of writing program in parallel is to reduce the overall running time of the program by putting more hardware to the system. The NAS Parallel Benchmarks suite <ref> [NPB97] </ref> developed by the Numerical Aerodynamic Simulation group at NASA, has been widely used by the parallel community to evaluate the parallel systems. The suite consists of seven programs derived from computational fluid dynamics applications. Each parallel benchmarks are highly tuned to explore the potential parallalism of the computational kernel.
Reference: [WMA97] <institution> Architectural Requirements and Analysis of the NAS Parallel Benchmarks - Frederick Wong, Richard Martin, Remzi Arpaci-Dusseau, David Culler. UC Berkeley, </institution> <year> 1997. </year>
Reference-contexts: Previous work at Univerity of Calfornia, Berkeley has shown that the Berkeley Network Of Workstations (NOW) cluster is highly scalable and is able to achieve linear to super-linear speedup on the NPB 2.2 suite <ref> [WMA97] </ref>. Figure 1 shows that all benchmarks, except FT and IS 1 , have super-linear or linear speedup. Given this graph, one might expect the highly scalable system is the results of low-latency communication layer and the highly tuned benchmarks for load balancing. <p> Despite the fact that user time might not be a very precise indicator of the running time of the simulation, it is still better than using the wallclock time which will heavily over-estimate by undesirable kernel activities. 3.2 Simulation Skew due to Caching Previous studies including <ref> [WMA97] </ref> and [WW98] suggested that the performance of a parallel program can be substansously influenced by the cache architecture. As point out by [WW98], cache effects play an important role in determining the speedup performance of NPB 2.2 on SGI Origin 2000 system.
Reference: [WW98] <institution> Scalibility of NAS Parallel Benchmark 2.2 on SGI Origin 2000 - Frederick Wong, David Wu. UC Berkeley, </institution> <year> 1998. </year> <month> 9 </month>
Reference-contexts: Despite the fact that user time might not be a very precise indicator of the running time of the simulation, it is still better than using the wallclock time which will heavily over-estimate by undesirable kernel activities. 3.2 Simulation Skew due to Caching Previous studies including [WMA97] and <ref> [WW98] </ref> suggested that the performance of a parallel program can be substansously influenced by the cache architecture. As point out by [WW98], cache effects play an important role in determining the speedup performance of NPB 2.2 on SGI Origin 2000 system. <p> simulation, it is still better than using the wallclock time which will heavily over-estimate by undesirable kernel activities. 3.2 Simulation Skew due to Caching Previous studies including [WMA97] and <ref> [WW98] </ref> suggested that the performance of a parallel program can be substansously influenced by the cache architecture. As point out by [WW98], cache effects play an important role in determining the speedup performance of NPB 2.2 on SGI Origin 2000 system. This raised the concern about the impact of processes context switches on the cache miss rate.
References-found: 4

