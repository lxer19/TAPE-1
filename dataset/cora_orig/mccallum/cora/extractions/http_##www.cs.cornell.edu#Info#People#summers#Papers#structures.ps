URL: http://www.cs.cornell.edu/Info/People/summers/Papers/structures.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/summers/structures.html
Root-URL: 
Email: summers@cs.cornell.edu  
Title: Toward a Taxonomy of Logical Document Structures  
Author: Kristen Summers 
Address: Ithaca, NY 14853  
Affiliation: Department of Computer Science Cornell University  
Abstract: The automated discovery of logical structure in text documents is an important problem that has recently received a good deal of attention; it can enable the creation of flexible and sophisticated document manipulation tools that will greatly increase the impact of electronic documents. This paper addresses aspects of the nature of the logical structures to be found, in order to develop categories of structures that reflect the variance in requirements for discovery and the variance in significance for applications. A complete taxonomy is not developed, but relevant attributes are identified in three forms of categorization: fundamental, based on structure definitions; discovery, based on required observables to find structures; and usage, based on roles structures play in applications. The attributes themselves are independent of the choice of particular logical structures to consider in a given application, and their direct implications are discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James Allan, Jim Davis, Dean Krafft, Daniela Rus, and Devika Subramanian. </author> <title> Information agents for building hyperlinks, </title> <year> 1993. </year>
Reference-contexts: tree for the present paper is given in Figure 1. (Other trees may be formed by including different degrees of granularity or organizing the components differently.) It should be clear that browsing may proceed based on tree navigation [4], hyperlink-ing may be performed by observing significant relationships between node values <ref> [1] </ref>, a form of retrieval may be achieved by specifying tree locations of interest (and attributes they must have) [5, 13], the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations of the same document can be achieved by applying the corresponding style <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [2] <author> Dennis S. Arnon. Scrimshaw: </author> <title> A language for document queries and transformations. </title> <publisher> Electronic Publishing, </publisher> <pages> 6(4) 385-396, </pages> <year> 1993. </year>
Reference-contexts: be achieved by specifying tree locations of interest (and attributes they must have) [5, 13], the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations of the same document can be achieved by applying the corresponding style rules to a single tree <ref> [2, 8] </ref>. <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [3] <author> Henry S. Baird. </author> <title> Anatomy of a versatile page reader. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 80(7) </volume> <pages> 1059-1065, </pages> <year> 1992. </year>
Reference-contexts: The required information about the document style ranges from very specific and precise to fairly general ideas about the ways in which it is possible to convey logical information through formatting. This information is presented as a grammar, and the document layout is parsed in <ref> [3, 9, 11, 12] </ref>. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in [6, 7, 16, 18, 21, 22, 23, 24, 25].
Reference: [4] <author> Victoria A. Burrill. VORTEXT: </author> <title> VictORias TEXT reading and authoring system. </title> <editor> In J. C. van Vliet, editor, </editor> <booktitle> Text Processing and Document Manipulation: Proceedings of the International Conference, British Computer Society Workshop Series, </booktitle> <pages> pages 43-57, </pages> <address> Nottingham, April 1986. </address> <publisher> Cambridge University Press. </publisher>
Reference-contexts: and in evaluating their performance. 1.1 Logical Document Structure A logical structure tree for the present paper is given in Figure 1. (Other trees may be formed by including different degrees of granularity or organizing the components differently.) It should be clear that browsing may proceed based on tree navigation <ref> [4] </ref>, hyperlink-ing may be performed by observing significant relationships between node values [1], a form of retrieval may be achieved by specifying tree locations of interest (and attributes they must have) [5, 13], the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1. <p> In the absence of strong empirical evidence, however, certain general observations can be made, based on the natures of commonly suggested applications. * In hierarchical browsing as described in <ref> [4, 21] </ref>, structures at higher levels of the tree are more significant than those at lower levels. Since this browsing is based on tree navigation, starting from the root, higher-level structures will be used for earlier decisions, on which later decisions will in part rely.
Reference: [5] <author> Charles L. A. Clarke, G. V. Cormack, and F. J. Burkowski. </author> <title> An algebra for structured text search and a framework for its implementation, </title> <month> August </month> <year> 1994. </year> <note> url: ftp://cs-archive.uwater-loo.ca/cs-archive/CS-94-30/structxt.dvi. </note>
Reference-contexts: of granularity or organizing the components differently.) It should be clear that browsing may proceed based on tree navigation [4], hyperlink-ing may be performed by observing significant relationships between node values [1], a form of retrieval may be achieved by specifying tree locations of interest (and attributes they must have) <ref> [5, 13] </ref>, the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations of the same document can be achieved by applying the corresponding style rules to a single tree [2, 8]. <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [6] <author> Denise Derrien and Michel Habib. </author> <title> Approche ob-jet pour l'analyse de la structure logique des documents. </title> <editor> In Jacques Andre and Jean Bezivin, editors, </editor> <booktitle> Woodman '89: Workshop on Object-Oriented Document Manipulation, </booktitle> <pages> pages 226-235, </pages> <publisher> Rennes, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [7] <author> Floriana Esposito, Donato Malerba, and Gio-vanni Semeraro. </author> <title> Multistrategy learning for document recognition. </title> <journal> Applied Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 33-84, </pages> <year> 1994. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [8] <author> An Feng and Toshiro Wakayama. SIMON: </author> <title> A grammar based transformation system for structured documents. </title> <publisher> Electronic Publishing, </publisher> <address> 6(4), </address> <year> 1993. </year>
Reference-contexts: be achieved by specifying tree locations of interest (and attributes they must have) [5, 13], the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations of the same document can be achieved by applying the corresponding style rules to a single tree <ref> [2, 8] </ref>.
Reference: [9] <author> Hiromichi Fujisawa, Yasuaki Nakano, and Kiy--omichi Kurino. </author> <title> Segmentation methods for character recognition: From segmentation to document structure analysis. </title> <booktitle> In Proceedings of the IEEE, </booktitle> <volume> volume 80, </volume> <pages> pages 1079-1092, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The required information about the document style ranges from very specific and precise to fairly general ideas about the ways in which it is possible to convey logical information through formatting. This information is presented as a grammar, and the document layout is parsed in <ref> [3, 9, 11, 12] </ref>. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in [6, 7, 16, 18, 21, 22, 23, 24, 25].
Reference: [10] <author> Richard Furuta. </author> <title> An object-based taxonomy for abstract structure in document models. </title> <journal> The Computer Journal, </journal> <volume> 32(6) </volume> <pages> 494-504, </pages> <year> 1989. </year>
Reference-contexts: user? This paper does not provide a complete answer to these questions, but it does identify many attributes that will need to be considered 3 The approaches to logical structure discovery cited here focus on the problem of finding the logical structure in this sense (called the primary structure in <ref> [10] </ref>); other relationships can often be derived directly from a combination of this tree, effective optical character recognition, and a small amount of text analysis. in the attempt to find such an organization of logical document structures. <p> These applications include, but are not limited to, those discussed in Subsection 1.1. Representation Discussions of types of logical structure representation can be found in <ref> [10, 17] </ref>. [10] provides a taxonomy of full structural hierarchies, considering attributes such as the choice of atomic unit of structure. [17] formalizes and extends ODA (Office Document Architecture) in an object-oriented framework; in the process, an object taxonomy is presented that distinguishes between layout and logical objects and between simple <p> These applications include, but are not limited to, those discussed in Subsection 1.1. Representation Discussions of types of logical structure representation can be found in [10, 17]. <ref> [10] </ref> provides a taxonomy of full structural hierarchies, considering attributes such as the choice of atomic unit of structure. [17] formalizes and extends ODA (Office Document Architecture) in an object-oriented framework; in the process, an object taxonomy is presented that distinguishes between layout and logical objects and between simple and composite
Reference: [11] <author> Tao Hu and Rolf Ingold. </author> <title> A mixed approach toward an efficient logical structure recognition from document images. </title> <publisher> Electronic Publishing, </publisher> <pages> 6(4) 457-468, </pages> <year> 1993. </year>
Reference-contexts: The required information about the document style ranges from very specific and precise to fairly general ideas about the ways in which it is possible to convey logical information through formatting. This information is presented as a grammar, and the document layout is parsed in <ref> [3, 9, 11, 12] </ref>. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in [6, 7, 16, 18, 21, 22, 23, 24, 25].
Reference: [12] <author> Rolf Ingold. </author> <title> Text structure recognition in optical reading. </title> <editor> In Jacques Andre, Richard Furuta, and Vincent Quint, editors, </editor> <title> Structured Documents, </title> <booktitle> The Cambridge Series on Electronic Publishing, </booktitle> <pages> pages 133-141. </pages> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference-contexts: That is, logical structure lies at the intersection of content and layout; a logical segment must both be distinguished by its layout (thus the concept of a cohesive text passage is content only) and have meaning as a semantic unit (thus boldfaced text is layout 2 <ref> [12] </ref> recommends further distinguishing the geometry of a document, which includes line breaks, page breaks, etc., from the layout, which describes only the formatting guidelines, such as left-justification. only). <p> The required information about the document style ranges from very specific and precise to fairly general ideas about the ways in which it is possible to convey logical information through formatting. This information is presented as a grammar, and the document layout is parsed in <ref> [3, 9, 11, 12] </ref>. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in [6, 7, 16, 18, 21, 22, 23, 24, 25].
Reference: [13] <author> Michael H. Kay. </author> <title> Textmaster document filing and retrieval using ODA. </title> <editor> In J. C. van Vliet, editor, </editor> <booktitle> Text Processing and Document Manipulation: Proceedings of the International Conference, British Computer Society Workshop Series, </booktitle> <pages> pages 125-139, </pages> <address> Nottingham, April 1986. </address> <publisher> Cambridge University Press. </publisher>
Reference-contexts: of granularity or organizing the components differently.) It should be clear that browsing may proceed based on tree navigation [4], hyperlink-ing may be performed by observing significant relationships between node values [1], a form of retrieval may be achieved by specifying tree locations of interest (and attributes they must have) <ref> [5, 13] </ref>, the reuse of document portions will be eased by this kind of retrieval [15], and multiple style instantiations of the same document can be achieved by applying the corresponding style rules to a single tree [2, 8]. <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [14] <author> Christopher Lewis, Daniela Rus, and Matthew Scott. </author> <title> A structure detector for tables. </title> <type> Forthcoming Technical Report. </type>
Reference-contexts: piece of text. (Height is a special case of contours.) Both of these kinds of cues may be necessary; for instance, the contours of an indented list provide its characteristic shape of a hanging indent, but the shape of a table is recognized by the internal shape of its columniza-tion <ref> [14] </ref>.
Reference: [15] <author> Keith McAlpine and Paul Golder. </author> <title> A new architecture for a collaborative authoring system: </title> <booktitle> Collaborwriter. Computer Supported Cooperative Work, </booktitle> <volume> 2 </volume> <pages> 159-174, </pages> <year> 1994. </year>
Reference-contexts: based on tree navigation [4], hyperlink-ing may be performed by observing significant relationships between node values [1], a form of retrieval may be achieved by specifying tree locations of interest (and attributes they must have) [5, 13], the reuse of document portions will be eased by this kind of retrieval <ref> [15] </ref>, and multiple style instantiations of the same document can be achieved by applying the corresponding style rules to a single tree [2, 8]. <p> Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [16] <author> Masaaki Mizuno, Yoshitake Tsuji, Toshiyuki Tanaka, Haruhiko Tanaka, Masao Iwashita, and Tsutomu Temma. </author> <title> Document recognition system with layout structure generator. </title> <journal> NEC Research and Development, </journal> <volume> 32(2) </volume> <pages> 430-437, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [17] <author> Makoto Murata. </author> <title> An object-oriented interpretation of ODA. </title> <editor> In Jacques Andre and Jean Bezivin, editors, </editor> <booktitle> Woodman '89: Workshop on Object-Oriented Document Manipulation, </booktitle> <pages> pages 91-100, </pages> <publisher> Rennes, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: These applications include, but are not limited to, those discussed in Subsection 1.1. Representation Discussions of types of logical structure representation can be found in <ref> [10, 17] </ref>. [10] provides a taxonomy of full structural hierarchies, considering attributes such as the choice of atomic unit of structure. [17] formalizes and extends ODA (Office Document Architecture) in an object-oriented framework; in the process, an object taxonomy is presented that distinguishes between layout and logical objects and between simple <p> These applications include, but are not limited to, those discussed in Subsection 1.1. Representation Discussions of types of logical structure representation can be found in [10, 17]. [10] provides a taxonomy of full structural hierarchies, considering attributes such as the choice of atomic unit of structure. <ref> [17] </ref> formalizes and extends ODA (Office Document Architecture) in an object-oriented framework; in the process, an object taxonomy is presented that distinguishes between layout and logical objects and between simple and composite objects.
Reference: [18] <author> Gilbert B. Porter and Emil V. Rainero. </author> <title> Document reconstruction: A system for recovering document structure from layout. </title> <booktitle> In Proceedings of the Conference on Electronic Publishing, </booktitle> <pages> pages 127-141, </pages> <year> 1992. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [19] <author> T. V. Raman. </author> <title> Audio System for Technical Readings. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <month> May </month> <year> 1994. </year> <note> url: http://www.cs.cornell.edu/Info/People/raman/phd-thesis/. </note>
Reference-contexts: Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [20] <author> Daniela Rus and Devika Subramanian. </author> <title> Multimedia RISSC Informatics: Retrieving Information with Simple Structural Components. </title> <booktitle> In Proceedings of the ACM Conference on Information and Knowledge Management, </booktitle> <address> Washington DC, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
Reference: [21] <author> Daniela Rus and Kristen Summers. </author> <title> Using white space for automated document structuring. </title> <booktitle> In Proceedings of the Workshop on Principles of Document Processing, </booktitle> <address> Seeheim, </address> <year> 1994. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26]. <p> Since geometry involves the shapes formed by the marks on the paper or screen, its contribution can (inversely) be found by an analysis of the white space in a document <ref> [21] </ref>. 3.2 Marking Observables Marking observables consist of non-linguistic marks on the paper or screen; this includes attributes like font type and weight, as well as non-alphanumeric symbols, such as bullet points and rule lines. <p> In the absence of strong empirical evidence, however, certain general observations can be made, based on the natures of commonly suggested applications. * In hierarchical browsing as described in <ref> [4, 21] </ref>, structures at higher levels of the tree are more significant than those at lower levels. Since this browsing is based on tree navigation, starting from the root, higher-level structures will be used for earlier decisions, on which later decisions will in part rely.
Reference: [22] <author> Yasuo Tanosaki, Kenji Suzuki, Kiyoshi Kikuchi, and Motoshi Kurihara. </author> <title> A logical structure analysis system for documents. </title> <booktitle> In Proceedings of the Second International Syposium on Interopera-ble Information Systems, </booktitle> <pages> pages 221-228, </pages> <address> Tokyo, </address> <month> November </month> <year> 1988. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [23] <author> Dacheng Wang and Sargur N. Srihari. </author> <title> Classification of newspaper image blocks using texture analysis. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 47 </volume> <pages> 327-352, </pages> <year> 1989. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [24] <author> Toyohide Watanabe, Qin Luo, and Noboru Sugie. </author> <title> Structure recognition methods for various types of documents. </title> <journal> Machine Vision and Applications, </journal> <volume> 6 </volume> <pages> 163-176, </pages> <year> 1993. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [25] <author> K. Y. Wong, R.G. Casey, and F. M. Wahl. </author> <title> Document analysis system. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 26(6) </volume> <pages> 647-656, </pages> <month> Novem-ber </month> <year> 1982. </year>
Reference-contexts: This information is presented as a grammar, and the document layout is parsed in [3, 9, 11, 12]. Other approaches of varying degrees of similarity to parsing and based on varying degrees of knowledge specificity, are pre sented in <ref> [6, 7, 16, 18, 21, 22, 23, 24, 25] </ref>. Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in [1, 2, 4, 5, 13, 15, 19, 20, 26].
Reference: [26] <author> Haviland Wright. </author> <title> SGML frees information. </title> <journal> Byte, </journal> <volume> 17, </volume> <month> June </month> <year> 1992. </year>
Reference-contexts: Applications Applications of the solution (which may be represented as a separate hierarchy, with pointers to document locations, or as a marked-up version of the document) are discussed in <ref> [1, 2, 4, 5, 13, 15, 19, 20, 26] </ref>. These applications include, but are not limited to, those discussed in Subsection 1.1.
References-found: 26

