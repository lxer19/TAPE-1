URL: http://www.robotics.stanford.edu/~hhg/doc/sens_graph/nbv_proposal.ps.gz
Refering-URL: http://www.robotics.stanford.edu/~hhg/doc/sens_graph/
Root-URL: http://www.robotics.stanford.edu
Email: hallholt@cs.stanford.edu hhg@flamingo.stanford.edu  
Title: A Range-Data Acquisition Simulator for Rapid Algorithm Verification  1 Overview of the pro ject  
Author: Olaf A. Hall-Holt Hector H. Gonzalez-Ba~nos 
Note: 2 The simulator  
Affiliation: Computer Science Department Stanford University  
Abstract: Our project consists in building a simulator of a range-data acquisition system that allows us to test experimentally the performance of different range-data processing algorithms. We are mainly interested in a framework that provides us with the possibility of quickly testing the performance of algorithms that align multiple views and/or compute the next best view. The goal is to write a simulator that represents as faithfully as possible the mechanics behind the data acquisition process of different range-finder sensors. The mechanics include ray-tracing, motion constraints over the sensor, random noise, camera occlusions, localization errors, etc. The input of the simulator will be the set of polyhedra describing the synthethic scene, the type of sensor being emulated, and its calibration parameters. The output will be a set of spatial coordinates representing the acquired data from a particular sensor configuration. The simulator will be used to run experiments related with next best view computation, the robustness of range-image alignment algorithms against sensor localization errors (an important issue in mobile robotics), and the effect of different camera/laser geometries in the number of required views needed to capture a scene. The core of the simulator consists on defining a base range-finder class. The base class defines operations common to all range-finder sensors. Different sensor types will inherit the common methods from the basic class, and will include methods specific to the sensor. The range-finder class is the cornerstone of the simulator, and a good class structure will allow transparent use of the simulator by other programs. The range-finder class will support the following operations: specify sensor calibration parameters (baseline, camera orientation with respect to the laser, resolution, etc.), add random noise to the data acquisition process, specify the sensor configuration, and scan the scene. The scan methods will return information in two possible formats: as spatial coordinates representing the range-data, and as a list of those scene polygons (from the synthetic model) seen by the scan operation. Scan methods will compute point visibility by first doing ray-tracing, and then verifying that the point is in the field of view of the range-finder camera. The implementation of the range-finder class will include functions already developed by Brian Curless. This include the basic ray-tracing operations, image registration, and conversions of the range-image into an occupancy grid representation or a decimated triangular mesh. 
Abstract-found: 1
Intro-found: 1
References-found: 0

