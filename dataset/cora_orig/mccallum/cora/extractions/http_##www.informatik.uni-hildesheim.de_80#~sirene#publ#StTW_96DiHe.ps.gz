URL: http://www.informatik.uni-hildesheim.de:80/~sirene/publ/StTW_96DiHe.ps.gz
Refering-URL: http://www.informatik.uni-hildesheim.de:80/~sirene/lit/sirene.lit.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fsti,gts,wmig@zurich.ibm.com  
Title: Diffie-Hellman Key Distribution Extended to Group Communication  
Author: Michael Steiner Gene Tsudik Michael Waidner 
Address: CH-8803 Ruschlikon, Switzerland  
Affiliation: IBM Zurich Research Laboratory  
Abstract: Ever since 2-party Diffie-Hellman key exchange was first proposed in 1976, there have been efforts to extend its simplicity and elegance to a group setting. Notable solutions have been proposed by Ingemarsson et al. (in 1982) and Burmester/Desmedt (in 1994). In this paper, we consider a class of protocols that we call natural extensions of Diffie-Hellman to the n-party case. After demonstrating the security of the entire class based on the intractability of the Diffie-Hellman problem we introduce two novel and practical protocols and compare them to the previous results. We argue that our protocols are optimal with respect to certain aspects of protocol complexity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Whitfield Diffie and Martin Hellman. </author> <title> New directions in cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-22(6):644-654, </volume> <month> November </month> <year> 1976. </year>
Reference-contexts: 1 Introduction It has been almost twenty years since Diffie-Hellman (DH) 2-party key exchange was first proposed in <ref> [1] </ref>. In the meantime, there have been many attempts to extend its elegance and simplicity to the group setting. The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. <p> Request permissions from Publications Dept, ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. 2 Generic n-Party Diffie-Hellman Key Distribution 2.1 Notation The following notation is used throughout the paper: n number of participants in the protocol i; j; k indices of group members (ranging in <ref> [1; n] </ref>) M i i-th group member; i 2 [1; n] q order of the algebraic group ff exponentiation base; generator in the algebraic group delimited by q N i random exponent generated by group member M i S; T subsets of fN 1 ; : : : ; N n <p> Dept, ACM Inc., fax +1 (212) 869-0481, or permissions@acm.org. 2 Generic n-Party Diffie-Hellman Key Distribution 2.1 Notation The following notation is used throughout the paper: n number of participants in the protocol i; j; k indices of group members (ranging in <ref> [1; n] </ref>) M i i-th group member; i 2 [1; n] q order of the algebraic group ff exponentiation base; generator in the algebraic group delimited by q N i random exponent generated by group member M i S; T subsets of fN 1 ; : : : ; N n g (S) product of all elements in subset S <p> N n g (S) product of all elements in subset S K n group key shared among n members (we also use K when n is obvious) 2.2 Generic Protocol We consider a family of protocols that we refer to as "natural" extensions of the original, 2-party Diffie-Hellman key exchange <ref> [1] </ref> to n parties. Like in the 2-party case, all participants M 1 ; : : : ; M n agree a priori on a cyclic group, G, of order q, and a generator, ff, of this group G. <p> ff N 1 N 2 N 3 g and forwards to M 5 : fff N 1 ; ff N 1 N 2 ; ff N 1 N 2 N 3 ; ff N 1 N 2 N 3 N 4 g. ! Stage 1 (Upflow): Round i; i 2 <ref> [1; n 1] </ref> M ni M ni+1 fff (N k jk =2 [i;j]) jj 2 [1; i]g Stage 2 (Downflow): Round (n 1 + i); i 2 [1; n 1] To summarize the upflow stage, each group member performs one exponentiation and an upflow message between M i and M i+1 <p> N 1 ; ff N 1 N 2 ; ff N 1 N 2 N 3 ; ff N 1 N 2 N 3 N 4 g. ! Stage 1 (Upflow): Round i; i 2 [1; n 1] M ni M ni+1 fff (N k jk =2 [i;j]) jj 2 <ref> [1; i] </ref>g Stage 2 (Downflow): Round (n 1 + i); i 2 [1; n 1] To summarize the upflow stage, each group member performs one exponentiation and an upflow message between M i and M i+1 contains i intermediate values. <p> N 2 N 3 ; ff N 1 N 2 N 3 N 4 g. ! Stage 1 (Upflow): Round i; i 2 <ref> [1; n 1] </ref> M ni M ni+1 fff (N k jk =2 [i;j]) jj 2 [1; i]g Stage 2 (Downflow): Round (n 1 + i); i 2 [1; n 1] To summarize the upflow stage, each group member performs one exponentiation and an upflow message between M i and M i+1 contains i intermediate values. <p> Of course, the start ing participant automatically becomes M 1 . 2. No synchronization The protocol assumes asynchronous operation; no clock or round synchronization is necessary. 1 Assuming atomic, one-message broadcast. M i M i+1 fff fN k jk2 [1;i]^k6=jg j j 2 <ref> [1; i] </ref>g; ff N 1 fl:::flN i Stage 1 (Upflow): round i; i 2 [1; n 1] M i M n fff fN k jk2 [1;n]^k6=ig j i 2 [1; n]g Stage 2 (Broadcast): round n 3. Small number of exponentiations Number of exponentiations depends on the participant's index i. <p> No synchronization The protocol assumes asynchronous operation; no clock or round synchronization is necessary. 1 Assuming atomic, one-message broadcast. M i M i+1 fff fN k jk2 [1;i]^k6=jg j j 2 [1; i]g; ff N 1 fl:::flN i Stage 1 (Upflow): round i; i 2 <ref> [1; n 1] </ref> M i M n fff fN k jk2 [1;n]^k6=ig j i 2 [1; n]g Stage 2 (Broadcast): round n 3. Small number of exponentiations Number of exponentiations depends on the participant's index i. On the average, each M i will perform n=2 exponentiations. 4. <p> M i M i+1 fff fN k jk2 [1;i]^k6=jg j j 2 [1; i]g; ff N 1 fl:::flN i Stage 1 (Upflow): round i; i 2 [1; n 1] M i M n fff fN k jk2 [1;n]^k6=ig j i 2 <ref> [1; n] </ref>g Stage 2 (Broadcast): round n 3. Small number of exponentiations Number of exponentiations depends on the participant's index i. On the average, each M i will perform n=2 exponentiations. 4. <p> Since GDH.1/2 both require (i + 1) exponentiations from every M i , the computational burden increases as the group size grows. The same, of course, is true for message sizes. M i M i+1 ff fN k jk2 [1;i]g Stage 1 (Upflow): Round i; i 2 <ref> [1; n 2] </ref> M i M n1 ff fN k jk2 [1;n1]g Stage 2 (Broadcast): Round n 1 M i M n ff fN k jk2 [1;n1]^k6=ig Stage 3 (Response): Round n M i M n fff fN k jk2 [1;n]^k6=ig j i 2 [1; n 1]g Stage 4 (Broadcast): Round <p> 1 (Upflow): Round i; i 2 [1; n 2] M i M n1 ff fN k jk2 [1;n1]g Stage 2 (Broadcast): Round n 1 M i M n ff fN k jk2 [1;n1]^k6=ig Stage 3 (Response): Round n M i M n fff fN k jk2 [1;n]^k6=ig j i 2 <ref> [1; n 1] </ref>g Stage 4 (Broadcast): Round n + 1 In order to address these concerns we construct a protocol that is quite different from GDH.1/2 (see Figure 3.4.) The protocol consists of four stages. <p> M n generates a new exponent ^ N n and computes a new upflow message (using ^ N n , not N n ): fff fN k jk2 [1;i]^k6=jg j j 2 <ref> [1; n] </ref>g; ff N 1 fl:::flN n1 fl ^ N n and sends it to the new member, M n+1 . 3. M n+1 generates its own exponent and computes the new key K n+1 = ff N 1 fl:::fl ^ N n flN n+1 4. <p> M n+1 generates its own exponent and computes the new key K n+1 = ff N 1 fl:::fl ^ N n flN n+1 4. Finally, as in the normal protocol run, M n+1 computes n sub-keys of the form: fff fN k jk2 [1;i]^k6=jg j; 2 <ref> [1; n] </ref>g and broadcasts to the other group members. Member addition in GDH.3 is almost identical to that in GDH.2. <p> Protocol extensions for member deletion in both GDH.2 and GDH.3 are very similar to those for member addition. Let M p be the member slated for removal from the group. We assume, for the moment, that p 2 <ref> [1; n 1] </ref>, i.e., p 6= n. M n , once again, plays a special role by generating a new exponent ^ N n . This time, however, M n computes a new set of n 2 sub-keys: fff fN k jk2 [1;i]^k6=jg j j 2 [1; n 1] ^ k <p> moment, that p 2 <ref> [1; n 1] </ref>, i.e., p 6= n. M n , once again, plays a special role by generating a new exponent ^ N n . This time, however, M n computes a new set of n 2 sub-keys: fff fN k jk2 [1;i]^k6=jg j j 2 [1; n 1] ^ k 6= pg and broadcasts them to all group members.
Reference: [2] <author> D. Steer, L. Strawczynski, W. Diffie, and M. Wiener. </author> <title> A secure audio teleconference system. </title> <editor> In S. Goldwasser, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO '88, number 403 in Lecture Notes in Computer Science, </booktitle> <pages> pages 520-528, </pages> <address> Santa Barbara, CA, USA, August 1990. </address> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany. </address>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: <ref> [2] </ref>, [3], [4], [5], [6], [7], [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange.
Reference: [3] <author> Ingemar Ingemarsson, Donald Tang, and C. Wong. </author> <title> A conference key distribution system. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 28(5) </volume> <pages> 714-720, </pages> <month> September </month> <year> 1982. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], <ref> [3] </ref>, [4], [5], [6], [7], [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange. <p> A detailed and up-to-date discussion of this subject can be found in [7]. 4.1 Ingemarsson et al. The protocol depicted in Figure 4 is one of the family of protocols proposed by Ingemarsson et al. in <ref> [3] </ref>. (See also [14].) This protocol hereafter referred to as ING requires a synchronous startup and completes in (n 1) rounds. The participants must be arranged in a logical ring.
Reference: [4] <author> Hugh Harney, Carl Muckenhirn, and Thomas Rivers. </author> <title> Group key management protocol (gkmp) architecture. </title> <type> INTERNET-DRAFT, </type> <month> September </month> <year> 1994. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], <ref> [4] </ref>, [5], [6], [7], [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange.
Reference: [5] <author> Yi Mu, Yuliang Zheng, and Yan-Xia Lin. </author> <title> Quantum conference key distribution systems. </title> <type> Technical Report 94-6, </type> <institution> University of Wollongong, NSW, Australia, </institution> <year> 1994. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], [4], <ref> [5] </ref>, [6], [7], [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange.
Reference: [6] <author> Chin Chen Chang, Tzong Chen Wu, and C.P. Chen. </author> <title> The design of a conference key distribution system. </title> <booktitle> In Advances in Cryptology AUSCRYPT '92, Lecture Notes in Computer Science, </booktitle> <pages> pages 467-474. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], [4], [5], <ref> [6] </ref>, [7], [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange.
Reference: [7] <author> Michael K.Just. </author> <title> Methods of multi-party cryptographic key establishment. </title> <type> Master's thesis, </type> <institution> Ottwa Carleton Institute for Computer Science, Caleton University, </institution> <address> Ot-tawa, Ontario, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], [4], [5], [6], <ref> [7] </ref>, [8], [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange. <p> A detailed and up-to-date discussion of this subject can be found in <ref> [7] </ref>. 4.1 Ingemarsson et al. The protocol depicted in Figure 4 is one of the family of protocols proposed by Ingemarsson et al. in [3]. (See also [14].) This protocol hereafter referred to as ING requires a synchronous startup and completes in (n 1) rounds.
Reference: [8] <author> Tzonelih Hwang. </author> <title> Cryptosystem for group oriented cryptography. </title> <editor> In I.B. Damgard, editor, </editor> <booktitle> Advances in Cryptology - EUROCRYPT '90, number 473 in Lecture Notes in Computer Science, </booktitle> <pages> pages 352-360. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], [4], [5], [6], [7], <ref> [8] </ref>, [9].) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange.
Reference: [9] <author> Mike Burmester and Yvo Desmedt. </author> <title> A secure and efficient conference key distribution system. </title> <editor> In I.B. Damgard, editor, </editor> <booktitle> Advances in Cryptology - EURO-CRYPT '94, Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin Germany, </address> <year> 1994. </year>
Reference-contexts: The main motivating factor is the increasing popularity of various types of group-ware applications and the need of doing it securely. Since key distribution is the cornerstone of secure group communication, it has naturally received a lot of attention. (See, for example: [2], [3], [4], [5], [6], [7], [8], <ref> [9] </ref>.) Unfortunately some of the results are of only theoretical interest, while the security of some others remains unproven. In this paper we consider a class of protocols that we call "natural" extensions of the 2-party Diffie-Hellman key exchange. <p> message size n (n 1) exponentiations per M i n total exponentiations n 2 We note that, since ING falls into the class of "natural" extensions of Diffie-Hellman 2-party protocol, the proof of security in Section 2.3 applies to it as well. 4.2 Burmester/Desmedt Protocol Burmester and Desmedt present in <ref> [9] </ref> a much more efficient protocol. Their protocol is executed in only three rounds: 1. Each user M i generates its random exponent N i and broadcasts z i = ff N i . 2. <p> Our protocols do not provide authentication of the participants. It should be possible to augment them to provide authentication in a manner similar to that described in <ref> [9] </ref> or [15]. Another issue to address is protocol extensions for handling periodic re-keying. Finally, more formal (and convincing) arguments need to be developed to support optimality/minimality claims in Section 3.3. 4 the version of Burmester/Desmedt protocol without simultaneous broadcast. 5 In other words, all participants do the same thing.
Reference: [10] <author> Claus P. Schnorr. </author> <title> Efficient signature generation by smart cards. </title> <journal> Journal of Cryptology, </journal> <volume> 4(3) </volume> <pages> 161-174, </pages> <year> 1991. </year>
Reference-contexts: Groups of this type are used, e.g., in <ref> [10] </ref> and [11]. The indistinguishability of the 2-party key is considered, e.g., in [12].
Reference: [11] <institution> The digital signature standard proposed by NIST. CACM, </institution> <month> 35(7) </month> <pages> 36-40, </pages> <month> Jul </month> <year> 1992. </year>
Reference-contexts: Groups of this type are used, e.g., in [10] and <ref> [11] </ref>. The indistinguishability of the 2-party key is considered, e.g., in [12].
Reference: [12] <author> Stefan Brands. </author> <title> An efficient off-line electronic cash system based on the representation problem. </title> <type> Technical Report CS-R9323, </type> <institution> CWI, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: Groups of this type are used, e.g., in [10] and [11]. The indistinguishability of the 2-party key is considered, e.g., in <ref> [12] </ref>.

Reference: [14] <author> Bruce Schneier. </author> <title> Applied Cryptography: Protocols, Algorithms, and Source Code in C. </title> <publisher> John Wiley & Sons, Inc, </publisher> <year> 1994. </year>
Reference-contexts: A detailed and up-to-date discussion of this subject can be found in [7]. 4.1 Ingemarsson et al. The protocol depicted in Figure 4 is one of the family of protocols proposed by Ingemarsson et al. in [3]. (See also <ref> [14] </ref>.) This protocol hereafter referred to as ING requires a synchronous startup and completes in (n 1) rounds. The participants must be arranged in a logical ring.
Reference: [15] <author> Michael Steiner, Gene Tsudik, and Michael Waidner. </author> <title> Refinement and extension of encrypted key exchange. </title> <journal> ACM Operating System Review, </journal> <volume> 29(3) </volume> <pages> 22-30, </pages> <month> July </month> <year> 1995. </year> <month> 7 </month>
Reference-contexts: Our protocols do not provide authentication of the participants. It should be possible to augment them to provide authentication in a manner similar to that described in [9] or <ref> [15] </ref>. Another issue to address is protocol extensions for handling periodic re-keying. Finally, more formal (and convincing) arguments need to be developed to support optimality/minimality claims in Section 3.3. 4 the version of Burmester/Desmedt protocol without simultaneous broadcast. 5 In other words, all participants do the same thing.
References-found: 14

