URL: http://robotics.eecs.berkeley.edu/~wents/cdc94_endoscopy.ps.Z
Refering-URL: http://robotics.eecs.berkeley.edu/~mcenk/medical/
Root-URL: 
Title: DESIGN AND CONTROL OF A SIMPLIFIED STEWART PLATFORM FOR ENDOSCOPY  
Author: Jeff M. Wendlandt S. Shankar Sastry 
Address: Berkeley  
Affiliation: Intelligent Machines and Robotics Laboratory University of California at  
Abstract: This paper presents the development of a workspace controller for a newly designed platform. The platform is designed to manipulate endoscopic tools and is actuated by tendons to meet the small scale requirements in en-doscopy. The tendon actuation provides challenges to the controller design since the number of degrees of freedom equals the number of tendons. In typical tendon-driven systems, the number of tendons is greater than the number of degrees of freedom. This paper presents the kinematic and dynamic analysis of the manipulator and presents a workspace controller for the tendon driven system. Simulation as well as experimental results are presented for the controlled system. The results demonstrate the effectiveness of the controller in tracking a step response and a circular trajectory at 2.0Hz and greater. The device is similar to the Stewart platform and the basic design can be used in applications where the full range of motion of the Stewart platform is not required. Applications of the device range between targeting systems, snake-like robots, and endoscopy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Deno, R. Murray, K. Pister, and S. Sastry. </author> <title> Finger-like biomechanical robots. </title> <type> ERL technical report, </type> <institution> University of California at Berkeley, 1992. Department of EECS. </institution>
Reference-contexts: The null space is one dimensional, and the null vector is de noted nv. The coefficient, , is calculated so that the sum in (21) produces tension forces in the three tendons above a tension offset. F tendons = T + This is the same method described in <ref> [1] </ref> for producing tendon forces in tension. Tension is a negative force since it decreases the length of the tendon. The desired tendon force is then converted to a pulse width modulated signal to produce a torque in the motors.
Reference: [2] <author> J. Funda and R.P. Paul. </author> <title> A comparison of transforms and quaternions in robotics. </title> <booktitle> In IEEE International Conference on Robotics and Automation, </booktitle> <address> Philadel-phia, </address> <year> 1988. </year>
Reference-contexts: Notice that the map is not defined when z 3 = 1. The inverse map is given by (z 1 ; z 2 ; z 3 ) = (ut; vt; t 1) (2) where t = 2 1+u 2 +v 2 . As stated in <ref> [2] </ref>, the rotation matrix formed by rotating about an axis k = (k x ; k y ; k z ) T by an angle is given by Rot (k; ) = k x k x v + c k y k x v k z s k z k x
Reference: [3] <author> S. Hirose. </author> <title> Biologically Inspired Robots: Snake-Like Lo-comotors and Manipulators. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1993. </year>
Reference-contexts: Linear or hydraulic actuators which produce force in both directions can replace the tendons. The original design which led to the endo-platform design is similar to a design in <ref> [3] </ref> which attaches an elastic tube between two plates. The rigid tubes and the spring used in the endo-platform approximate a spherical joint about a fixed point. The pivot point resists side forces better than the elastic tube design. <p> The pivot point resists side forces better than the elastic tube design. Also, pivoting at a point instead of bending the entire tube uses less space transversal to the tool axis as the tool is pointed. As in <ref> [3] </ref>, the platforms can be combined to create a snake-like robot. The first section after the introduction presents the kinematic model along with the kinematic analysis. Special coordinates are selected which simplify the dynamic analysis presented in Section 3.
Reference: [4] <author> MathWorks, Natick, Ma. </author> <title> Matlab Reference Guide, </title> <year> 1992. </year>
Reference-contexts: Lynx, a real-time unix operating system donated from Lynx Real-Time Systems, Inc., runs the control loop at 500Hz on a 486DX-33MHz IBM clone. The PD gains were designed in Matlab <ref> [4] </ref> using the linear quadratic regulator based on the linear error dynamics at the origin.
Reference: [5] <author> R. Murray, Z. Li, and S. Sastry. </author> <title> A Mathematical Introduction to Robotic Manipulation. </title> <publisher> CRC Press, </publisher> <address> Boca Raton, Fl, </address> <year> 1994. </year>
Reference-contexts: The body angular velocity is needed for the determination of the kinetic energy used in calculating the dynamic equations. The body angular velocity, ! b , written as a skew-symmetric matrix is ^! b = R T _ R. See <ref> [5] </ref> for more details on this description of the body angular velocity. <p> See <ref> [5] </ref> for a derivation. C ij _ ; = 2 k=1 @M ij + @ j @M jk Performing these calculations and multiplying on the right by the vector _ produces the Coriolis vector. The vector of potential forces is the force from the spring at the spherical joint. <p> The error and error velocity pass through gain matrices to produce a desired torque in the tool coordinates. The spring force in the current configuration is computed and is added to the desired torque from the PD controller. This is a modified PD controller described in <ref> [5] </ref> however the inertial and Coriolis forces are ignored in this particular controller.
Reference: [6] <author> C. Nguyen, Z. Zhou, S. Antranzi, and C. Campbell. </author> <title> Efficient computation of forward kinematics and jaco-bian matrix of a stewart platform-based manipulator. </title> <booktitle> In IEEE Proceedings of SOUTHEASTCON, </booktitle> <address> Williams-burg, Va., </address> <year> 1991. </year>
Reference-contexts: This information is used to calculate the tool coordinates as well as the velocity of the tool in these coordinates. The inverse kinematics of the platform are solved easily while the forward kinematics are difficult to solve. This also occurs in the Stewart platform. See <ref> [6] </ref> for more details on the Stewart platform. The equations relating the tool coordinates are nonlinear and difficult to invert. The equations are in the appendix of [7]. The controller numerically solves for the roots of polynomials and produces a vector, p := (u; v; 0) T . <p> The velocity of the length of the tendons and J p 1 ( p ) are used to calculate the velocity in the tool coordinates assuming no twist. This velocity is _ p . This is similar to the method of calculating the velocity in <ref> [6] </ref>. The velocity and the position information are subtracted from the desired trajectory and an error, e = pdes p , and error velocity, _e, are formed. The error and error velocity pass through gain matrices to produce a desired torque in the tool coordinates.
Reference: [7] <author> J. Wendlandt. </author> <title> Milli robotics for endoscopy. </title> <type> ERL technical report, </type> <institution> University of California at Berkeley, 1994. Department of EECS. </institution>
Reference-contexts: The manipulator is a wrist-like manipulator and provides the ability to point a tool at a desired location. The device is useful for applications which do not need the full motion of the Stewart platform. The device is originally designed as a manipulator for endoscopy <ref> [7] </ref>. Endoscopy is a minimally invasive surgical procedure used to examine and operate in the gastrointestinal tract. The working prototype called the endo-platform is shown in Figure 1. It consists of two platforms separated by rigid tubes and a spring-like device attaching the tubes. <p> The distances are then calculated by determining the magnitude of the vector joining the two points in the XYZ frame. This procedure defines a map from (u; v; fl) to (l 1 ; l 2 ; l 3 ) space. This function and its differential are contained in <ref> [7] </ref>. Assuming that fl = 0 for all time results in a jacobian which is a 3 fi 2 matrix. The body angular velocity is needed for the determination of the kinetic energy used in calculating the dynamic equations. <p> This also occurs in the Stewart platform. See [6] for more details on the Stewart platform. The equations relating the tool coordinates are nonlinear and difficult to invert. The equations are in the appendix of <ref> [7] </ref>. The controller numerically solves for the roots of polynomials and produces a vector, p := (u; v; 0) T . The first two columns of the ja-cobian are calculated with p . The third column is ignored since we assume that fl = 0. <p> This can always be accomplished if the null space is spanned by a vector with entries with the same sign. Depending on the geometry, this will not occur for certain configurations of the tool. See <ref> [7] </ref> for more details. 5. Simulation and Experimental Results The system was simulated in Mathematica [8] with parameters measured from the prototype shown in Figure 1. The spring model in (19) was used in the controller and in the dynamic model.
Reference: [8] <author> S. Wolfram. </author> <title> Mathematica: A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <address> RedWood City, </address> <note> second edition, </note> <year> 1991. </year>
Reference-contexts: The body angular velocity, ! b , written as a skew-symmetric matrix is ^! b = R T _ R. See [5] for more details on this description of the body angular velocity. Carrying out the calculations in Mathematica <ref> [8] </ref> results in the following expression: ! b = t ( _u sin (fl) _v cos (fl)) _fl + t ( _uv u _v) : (9) This completes the development of the kinematics. 3. Dynamic Model The robot dynamic equations are developed in this section. <p> Depending on the geometry, this will not occur for certain configurations of the tool. See [7] for more details. 5. Simulation and Experimental Results The system was simulated in Mathematica <ref> [8] </ref> with parameters measured from the prototype shown in Figure 1. The spring model in (19) was used in the controller and in the dynamic model. The current parameters are d = 0:8cm, dt = 0:5cm, rt = 0:6cm, and rb = 0:6cm.
References-found: 8

