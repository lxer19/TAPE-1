URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1998/98-44.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1998.html
Root-URL: http://www.cs.rutgers.edu
Title: List Update Problem  
Author: by Bela Csaba Sachin Lodha 
Affiliation: Dept. of Computer Science Rutgers University,  Dept. of Computer Science Rutgers University,  
Address: Address:  New Brunswick, New Jersey 08854  New Brunswick, New Jersey 08854  
Note: September  Address:  DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs-Research, Bell Labs, Bellcore and NEC Research Institute. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Email: Email: lodha@paul.rutgers.edu  
Phone: 2  
Date: 1998  
Abstract: DIMACS Technical Report 98-44 
Abstract-found: 1
Intro-found: 1
Reference: [A-95] <author> S. Albers, </author> <title> "Improved randomized on-line algorithms for the list update problem", </title> <booktitle> In Proc. of the 6th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pp. 412-419, </pages> <year> 1995. </year>
Reference-contexts: Then came Karp and Raghavan, who proved in [KR-90] that c 2 for any deterministic on-line algorithm implying MTF is an optimal on-line strategy. Later Suzanne Albers gave Timestamp (0) algorithm in <ref> [A-95] </ref> which is again optimal in on-line setting.
Reference: [BIRS-95] <author> A. Borodin, S. Irani, P. Raghavan, B. Schieber, </author> <title> "Competitive paging with locality of reference", </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50, </volume> <pages> pp. 244-258, </pages> <year> 1995. </year>
Reference-contexts: Therefore, the statement of theorem 1 follows from these lemmas and lemma 1 and lemma 2 proven above. 4 Access Graphs Knowing the pattern in the request sequence, can one hope to improve the performance of an online algorithm? Such question has already been investigated for the paging problem in <ref> [BIRS-95] </ref>. In that paper, they make use of "access graphs" to enhance the working of an on-line algorithm. 4.1 Model and Algorithm Our assumption is that once an item i is requested, the next requested item j comes from a "small" pool of items depending only on i.
Reference: [CD-97] <author> B. Csaba, G. Danyi, </author> <title> "Server problems and regular languages", </title> <journal> Acta Cybernetica, </journal> <volume> 13, </volume> <pages> pp. 23-39, </pages> <year> 1997. </year>
Reference-contexts: If we keep this configuration static, then we can pay not more than n=2 on the average, which can be proven as the optimal cost. We will prove theorem 1 only for "atomic" languages. It will follow for the remaining cases from <ref> [CD-97] </ref>. 2 Otherwise, we can discard all but one item with the same key value. - 3 -3.1 Algorithm and Proof Lemma 1 If L is a finite subset of V fl , then there is a 1-competitive deterministic on-line algorithm for L. <p> ff T (i 0 ; j 0 ) + n M l ff (6) But from equations 3 and 2 respectively C 0 C + n M l ff (7) Proof of theorem 1 We derive our notion of ONREG from the one of ON REG 0 in the paper <ref> [CD-97] </ref>. In that paper, it is proved that for the union and concatenation of two ON REG 0 languages there is a 1-competitive deterministic on-line algorithm (refer to Lemma 3:2 and Lemma 3:3 in [CD-97]). <p> We derive our notion of ONREG from the one of ON REG 0 in the paper <ref> [CD-97] </ref>. In that paper, it is proved that for the union and concatenation of two ON REG 0 languages there is a 1-competitive deterministic on-line algorithm (refer to Lemma 3:2 and Lemma 3:3 in [CD-97]).
Reference: [KR-90] <author> R. Karp, P. Raghavan, </author> <title> Personal communication transmitted through [RWS-94]. </title>
Reference-contexts: This notion of competitiveness first appeared in [ST-85] and since then it has been most useful in analyzing the performance of on-line algorithms. 1.2 Previous Work Sleator and Tarjan, [ST-85], were first to show that Move-To-Front is a 2 competitive strategy. Then came Karp and Raghavan, who proved in <ref> [KR-90] </ref> that c 2 for any deterministic on-line algorithm implying MTF is an optimal on-line strategy. Later Suzanne Albers gave Timestamp (0) algorithm in [A-95] which is again optimal in on-line setting.
Reference: [RW-96] <author> N. Reingold, J. Westbrook, </author> <title> "Off-line algorithms for the list update problem", </title> <journal> Information Processing Letters, </journal> <volume> 60, </volume> <pages> pp. 75-80, </pages> <year> 1996. </year>
Reference-contexts: For them, we give two different optimal on-line strategies. 1 since the request sequence is of finite length, we can do so in a finite amount of time <ref> [RW-96] </ref> - 2 -2 Preliminaries Let L denote a doubly linked list containing n different items. Without loss of generality, we can assume that their keys are unique and they range from 1 to n. 2 Every order of the items in the list defines a configuration.
Reference: [RWS-94] <author> N. Reingold, J. Westbrook, D. Sleator, </author> <title> "Randomized competitive algorithms for the list update problem", </title> <journal> Algorithmica, </journal> <volume> 11, </volume> <pages> pp. 15-32, </pages> <year> 1994. </year>
Reference: [ST-85] <author> D.D. Sleator, R.E. Tarjan, </author> <title> "Amortized efficiency of list update and paging rules", </title> <journal> Communications of the ACM, </journal> <volume> 28, </volume> <pages> pp. 202-208, </pages> <year> 1985. </year>
Reference-contexts: Now if we could find a constant K such that 8 C A () c C OP T () + K (1) then we say A is c-competitive. This notion of competitiveness first appeared in <ref> [ST-85] </ref> and since then it has been most useful in analyzing the performance of on-line algorithms. 1.2 Previous Work Sleator and Tarjan, [ST-85], were first to show that Move-To-Front is a 2 competitive strategy. <p> This notion of competitiveness first appeared in <ref> [ST-85] </ref> and since then it has been most useful in analyzing the performance of on-line algorithms. 1.2 Previous Work Sleator and Tarjan, [ST-85], were first to show that Move-To-Front is a 2 competitive strategy. Then came Karp and Raghavan, who proved in [KR-90] that c 2 for any deterministic on-line algorithm implying MTF is an optimal on-line strategy.
Reference: [T-93] <author> B. Teia, </author> <title> "A lower bound for randomized list update algorithms", </title> <journal> Information Processing Letters, </journal> <volume> 47, </volume> <pages> pp. 5-9, </pages> <year> 1993. </year>
Reference-contexts: Later Suzanne Albers gave Timestamp (0) algorithm in [A-95] which is again optimal in on-line setting. In the case of randomized on-line algorithm setting, Teia showed a lower bound of 1:5 for the competitive ratio c in <ref> [T-93] </ref>, but with an oblivious adversary who is the least powerful among all standard adversaries. 1.3 Motivation It is natural to think whether knowing the structure of the request sequence could be of any help or not, ie beating the barrier of 2 on the competitive ratio of on-line algorithms.
References-found: 8

