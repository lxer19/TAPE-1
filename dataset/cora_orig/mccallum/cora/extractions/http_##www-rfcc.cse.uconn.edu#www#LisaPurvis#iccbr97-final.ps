URL: http://www-rfcc.cse.uconn.edu/www/LisaPurvis/iccbr97-final.ps
Refering-URL: http://www-rfcc.cse.uconn.edu/www/LisaHome.html
Root-URL: 
Email: E-Mail: flpurvis,athalyeg@wrc.xerox.com  
Title: Towards Improving Case Adaptability with a Genetic Algorithm  
Author: Lisa Purvis and Salil Athalye 
Address: 800 Phillips Road, 128-51E Webster, NY 14580  
Affiliation: Xerox Corporation,  
Abstract: Case combination is a difficult problem in Case Based Reasoning, as sub-cases often exhibit conflicts when merged together. In our previous work we formalized case combination by representing each case as a constraint satisfaction problem, and used the minimum conflicts algorithm to systematically synthesize the global solution. However, we also found instances of the problem in which the minimum conflicts algorithm does not perform case combination efficiently. In this paper we describe those situations in which initially retrieved cases are not easily adaptable, and propose a method by which to improve case adaptability with a genetic algorithm. We introduce a fitness function that maintains as much retrieved case information as possible, while also perturbing a sub-solution to allow subsequent case combination to proceed more efficiently.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> P.E. Raue A. Eiben and Zs. Ruttkay. </author> <title> Solving constraint satisfaction problems using genetic algorithms. </title> <booktitle> In Proceedings of the IEEE World Conference on Computational Intelligence, </booktitle> <pages> pages 543-547, </pages> <year> 1994. </year>
Reference-contexts: Therefore, our focus is on improving adaptability with a genetic algorithm after retrieval and matching. Genetic Algorithms have been applied to solving the CSP <ref> [1, 21, 22] </ref>, with a focus on the genetic representation and the reproduction mechanisms that enable efficient constraint optimization. Rojas [18] has investigated GAs in the CSP context, with a focus on a selection mechanism that uses information about the connectivity of the constraint network.
Reference: 2. <author> Dean Allemang. </author> <title> Review of the first european workshop on case based reasoning. Case-Based Reasoning Newsletter, </title> <type> 2, </type> <year> 1993. </year>
Reference-contexts: 1 Introduction One of the more difficult problems in Case Based Reasoning (CBR) is how to adapt a case to fit the new situation requirements <ref> [2, 3, 11] </ref>. It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution [7].
Reference: 3. <author> Andrew Kinley David B. Leake and David Wilson. </author> <title> Learning to improve case adaptation by introspective reasoning and cbr. </title> <booktitle> In Proceedings of the First International Conference on Case Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 229-240, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction One of the more difficult problems in Case Based Reasoning (CBR) is how to adapt a case to fit the new situation requirements <ref> [2, 3, 11] </ref>. It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution [7].
Reference: 4. <author> Lawrence Davis. </author> <title> Handbook of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Delete the old population to make room for new population. 5. Evaluate new chromosomes and insert them into the population. 6. If time is up, stop and return the best chromosome; if not, go to 3. Fig. 5. Operation of a Genetic Algorithm <ref> [4] </ref> red green blue green red blue var1 var2 .... (gene1) (gene2) chromosome Fig. 6. Variable and Value Representation as a Chromosome tation is shown in Fig. 6.
Reference: 5. <author> A. Goel. </author> <title> Integration of Case-Based Reasoning and Model-Based Reasoning for Adaptive Design Problem Solving. </title> <type> PhD thesis, </type> <institution> Ohio State University, </institution> <year> 1989. </year>
Reference-contexts: Case adaptability issues have been addressed in DEJA VU [19], where adaptability is assessed based on specially formulated adaptation knowledge, and is used to guide retrieval. Huang and Miles [8] calculate the conflict propagation potential of a case to assess ease of adaptation during retrieval. In KRITIK <ref> [5] </ref>, candidate cases that satisfy certain functional specifications are preferred during retrieval, as those tend to have more easily adaptable matches.
Reference: 6. <author> K. Haigh and M. Veloso. </author> <title> Route planning by analogy. </title> <booktitle> In Proceedings of the First International Conference on Case Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 169-180, </pages> <year> 1995. </year>
Reference-contexts: Section 5 concludes the paper with a summary and discussion of future work. 2 Related Work Other recent systems that have addressed the multi-case adaptation issue are EADOCS [15], PRODIGY <ref> [6] </ref>, CAPlan [14], and IDIOM [9]. In EADOCS, each case addresses one feature of the new problem, and each case is used to adapt the corresponding solution feature.
Reference: 7. <author> Kefeng Hua and Boi Faltings. </author> <title> Exploring case-based building design cadre. </title> <booktitle> In Artificial Intelligence in Engineering Design, Analysis, and Manufacturing, </booktitle> <year> 1993. </year>
Reference-contexts: It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution <ref> [7] </ref>. Our previous work on case combination via constraint satisfaction techniques [16, 17] provided a formalized methodology for combining cases. Each case was formulated as a constraint satisfaction problem (CSP), and the cases were then combined by applying the minimum conflicts algorithm [20].
Reference: 8. <author> Y. Huang and R. Miles. </author> <title> A case based method for solving relatively stable dy-namic constraint satisfaction problems. </title> <booktitle> In Proceedings of the First International Conference on Case Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 481-490, </pages> <year> 1995. </year>
Reference-contexts: Case adaptability issues have been addressed in DEJA VU [19], where adaptability is assessed based on specially formulated adaptation knowledge, and is used to guide retrieval. Huang and Miles <ref> [8] </ref> calculate the conflict propagation potential of a case to assess ease of adaptation during retrieval. In KRITIK [5], candidate cases that satisfy certain functional specifications are preferred during retrieval, as those tend to have more easily adaptable matches.
Reference: 9. <author> C. Lottaz I. Smith and B. Faltings. </author> <title> Spatial composition using cases: </title> <booktitle> Idiom. In Proceedings of the First International Conference on Case Based Reasoning, Ses-imbra, Portugal, </booktitle> <pages> pages 88-97, </pages> <year> 1995. </year>
Reference-contexts: Section 5 concludes the paper with a summary and discussion of future work. 2 Related Work Other recent systems that have addressed the multi-case adaptation issue are EADOCS [15], PRODIGY [6], CAPlan [14], and IDIOM <ref> [9] </ref>. In EADOCS, each case addresses one feature of the new problem, and each case is used to adapt the corresponding solution feature.
Reference: 10. <author> M. Brand et al. L. Birnbaum, G. Collins. </author> <title> A model-based approach to the construction of adaptive case-based planning systems. </title> <booktitle> In Proceedings of the Case Based Reasoning Workshop, </booktitle> <address> Florida, USA, </address> <year> 1989. </year>
Reference-contexts: Huang and Miles [8] calculate the conflict propagation potential of a case to assess ease of adaptation during retrieval. In KRITIK [5], candidate cases that satisfy certain functional specifications are preferred during retrieval, as those tend to have more easily adaptable matches. Birnbaum et al. <ref> [10] </ref> and Leake & Fox [12] index cases on the basis of their adaptability, avoiding cases with feature combinations that were difficult to adapt in previous problem-solving episodes.
Reference: 11. <author> David Leake. </author> <title> Workshop report: The aaai'93 workshop on case based reasoning. </title> <journal> AI Magazine, </journal> <pages> pages 63-64, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction One of the more difficult problems in Case Based Reasoning (CBR) is how to adapt a case to fit the new situation requirements <ref> [2, 3, 11] </ref>. It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution [7].
Reference: 12. <author> David Leake and S. Fox. </author> <title> Using introspective reasoning to guide index refinement. </title> <booktitle> In Proceedings of the Sixteenth International Conference of the Cognitive Science Society, </booktitle> <pages> pages 313-318, </pages> <year> 1992. </year>
Reference-contexts: In KRITIK [5], candidate cases that satisfy certain functional specifications are preferred during retrieval, as those tend to have more easily adaptable matches. Birnbaum et al. [10] and Leake & Fox <ref> [12] </ref> index cases on the basis of their adaptability, avoiding cases with feature combinations that were difficult to adapt in previous problem-solving episodes.
Reference: 13. <author> Kazuo Miyashita and Katia Sycara. </author> <title> Improving system performance in case-based iterative optimization through knowledge filtering. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 371-376, </pages> <year> 1995. </year>
Reference-contexts: As soon as values to the left and to the right of the boundary are changed, the retrieved case information is destroyed. The utility of knowledge is the cost of solving a problem with the knowledge item versus solving the problem without it <ref> [13] </ref>. The vacillation of the algorithm causes a loss of case utility, as the case can no longer efficiently guide the algorithm towards a solution. At the same time, it is impossible to determine case utility during retrieval and matching in multi-case combination.
Reference: 14. <author> H. Munoz and J. Huellen. </author> <title> Retrieving cases in structured domains by using goal dependencies. </title> <booktitle> In Proceedings of the First International Conference on Case Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 241-252, </pages> <year> 1995. </year>
Reference-contexts: Section 5 concludes the paper with a summary and discussion of future work. 2 Related Work Other recent systems that have addressed the multi-case adaptation issue are EADOCS [15], PRODIGY [6], CAPlan <ref> [14] </ref>, and IDIOM [9]. In EADOCS, each case addresses one feature of the new problem, and each case is used to adapt the corresponding solution feature.
Reference: 15. <editor> B.D. Netten and R.A. Vingerhoeds. </editor> <title> Adaptation for conceptual design in eadocs. </title> <booktitle> In Proceedings of the ECAI'96 Workshop on Case Adaptation, </booktitle> <address> Budapest, Hungary, </address> <year> 1996. </year>
Reference-contexts: Section 5 concludes the paper with a summary and discussion of future work. 2 Related Work Other recent systems that have addressed the multi-case adaptation issue are EADOCS <ref> [15] </ref>, PRODIGY [6], CAPlan [14], and IDIOM [9]. In EADOCS, each case addresses one feature of the new problem, and each case is used to adapt the corresponding solution feature.
Reference: 16. <author> Lisa Purvis. </author> <title> Intelligent Design Problem Solving Using Case-Based and Constraint-Based Techniques. </title> <type> PhD thesis, </type> <institution> The University of Connecticut, </institution> <year> 1995. </year>
Reference-contexts: It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution [7]. Our previous work on case combination via constraint satisfaction techniques <ref> [16, 17] </ref> provided a formalized methodology for combining cases. Each case was formulated as a constraint satisfaction problem (CSP), and the cases were then combined by applying the minimum conflicts algorithm [20]. <p> The formalized methodology enables application of this adaptation process to any problem that can be formulated as a discrete, static or dynamic CSP. Our system COMPOSER implemented this adaptation methodology and tested it on assembly sequence and configuration design problems <ref> [16] </ref>. The results showed that starting with solutions from the case base provides better performance for the combination than does starting from scratch [16]. However, experiments performed with COMPOSER also showed that the existing case solutions did not always combine easily. <p> Our system COMPOSER implemented this adaptation methodology and tested it on assembly sequence and configuration design problems <ref> [16] </ref>. The results showed that starting with solutions from the case base provides better performance for the combination than does starting from scratch [16]. However, experiments performed with COMPOSER also showed that the existing case solutions did not always combine easily. In some situations, search performance towards the global solution was not improved by starting with solutions from the case base. <p> Our experiments with assembly sequence generation and configuration design problems showed that the minimum conflicts algorithm cannot perform an efficient case combination when there are a large number of highly constrained, initially inconsistent edge variables <ref> [16] </ref>. This situation corresponds to that shown in Fig. 2, where two sub-solutions are combined. Each sub-solution is individually consistent, since it came from the case base, but the two solutions are inconsistent with one another. This inconsistency is caused by conflicts at the edge variables. <p> The utility of old solutions when used effectively during combination can be seen in Fig. 3. These results were obtained from our system COMPOSER, which combines sub-cases using the minimum conflicts algorithm. The assembly sequence problems used as experiments are described in detail in <ref> [16] </ref>. Figure 3 shows the empirical finding that the use of old solutions from the case base greatly reduces the number of backtracks necessary to find a solution (i.e., the cases maintain high utility in combination). the minimum conflicts algorithm ineffective for case combination.
Reference: 17. <author> Lisa Purvis and Pearl Pu. </author> <title> Adaptation using constraint satisfaction techniques. </title> <booktitle> In Proceedings of the First International Conference on Case-Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 289-300, </pages> <year> 1995. </year>
Reference-contexts: It is especially difficult in domains where it is necessary to combine several cases to find a new solution, as local inconsistencies among the sub-cases often prevent efficient synthesis of the global solution [7]. Our previous work on case combination via constraint satisfaction techniques <ref> [16, 17] </ref> provided a formalized methodology for combining cases. Each case was formulated as a constraint satisfaction problem (CSP), and the cases were then combined by applying the minimum conflicts algorithm [20].
Reference: 18. <author> Maria Cristina Riff Rojas. </author> <title> From quasi-solutions to solution: An evolutionary algorithm to solve csp. </title> <booktitle> In Proceedings of the Principles and Practice of Constraint Programming Conference (CP96), </booktitle> <pages> pages 367-381, </pages> <year> 1996. </year>
Reference-contexts: Therefore, our focus is on improving adaptability with a genetic algorithm after retrieval and matching. Genetic Algorithms have been applied to solving the CSP [1, 21, 22], with a focus on the genetic representation and the reproduction mechanisms that enable efficient constraint optimization. Rojas <ref> [18] </ref> has investigated GAs in the CSP context, with a focus on a selection mechanism that uses information about the connectivity of the constraint network. Our work also considers the network topology, and additionally incorporates information about the sub-problem partitioning of the network. <p> In these types of critical constraints, the effect of changing the value of one variable would be reflected in its other constraints (we will call this the variable's propagation potential). In Rojas <ref> [18] </ref>, the evaluation function favors those chromosomes whose violated constraints have a low propagation potential. For example, in the network shown in Figure 7, the constraint C1 between V1 and V3 is more important to satisfy than the constraint C2 between V1 and V2.
Reference: 19. <author> Barry Smyth and Mark T. Keane. </author> <title> Experiments on adaptation-guided retrieval in case-based design. </title> <booktitle> In Proceedings of the First International Conference on Case Based Reasoning, </booktitle> <address> Sesimbra, Portugal, </address> <pages> pages 313-324, </pages> <year> 1995. </year>
Reference-contexts: In our work, the many matching cases are retrieved at one time from the case base during retrieval, and then these cases are all used simultaneously by the repair algorithm to find a solution to the new problem. Case adaptability issues have been addressed in DEJA VU <ref> [19] </ref>, where adaptability is assessed based on specially formulated adaptation knowledge, and is used to guide retrieval. Huang and Miles [8] calculate the conflict propagation potential of a case to assess ease of adaptation during retrieval.
Reference: 20. <author> A. Philips Steven Minton, M. Johnston and P. Laird. </author> <title> Minimizing conflicts: A heuristic repair method for constraint satisfaction and scheduling problems. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 161-205, </pages> <year> 1992. </year>
Reference-contexts: Our previous work on case combination via constraint satisfaction techniques [16, 17] provided a formalized methodology for combining cases. Each case was formulated as a constraint satisfaction problem (CSP), and the cases were then combined by applying the minimum conflicts algorithm <ref> [20] </ref>. The formalized methodology enables application of this adaptation process to any problem that can be formulated as a discrete, static or dynamic CSP. Our system COMPOSER implemented this adaptation methodology and tested it on assembly sequence and configuration design problems [16]. <p> This inconsistency is caused by conflicts at the edge variables. Since there are at most 3 pairs of nodes in conflict, this situation may seem promising: as it did to Minton in his initial experiments with the minimum conflicts algorithm <ref> [20] </ref>. However, to achieve a global solution, the boundary between the consistent sub-solutions must be pushed completely to the right or left during repair. Pushing the boundary to the right or left causes new sub-problem conflicts, which in turn increases the total number of conflicts. <p> Since there is no ad Edge Variables consistent sub-caseconsistent sub-case Fig. 2. Two sub-solutions that are far from global solution when combined ditional information available to direct the heuristic, the boundary tends to vacillate back and forth <ref> [20] </ref>. The situation, when considered from the perspective of case combination, is even less promising. As soon as values to the left and to the right of the boundary are changed, the retrieved case information is destroyed.
Reference: 21. <author> E.P.K. Tsang and T. Warwick. </author> <title> Applying genetic algorithms to constraint satisfaction optimization problems. </title> <booktitle> In Proceedings of the European Conference on Artificial Intelligence, </booktitle> <address> Stockholm, Sweden, </address> <pages> pages 649-654, </pages> <year> 1990. </year>
Reference-contexts: Therefore, our focus is on improving adaptability with a genetic algorithm after retrieval and matching. Genetic Algorithms have been applied to solving the CSP <ref> [1, 21, 22] </ref>, with a focus on the genetic representation and the reproduction mechanisms that enable efficient constraint optimization. Rojas [18] has investigated GAs in the CSP context, with a focus on a selection mechanism that uses information about the connectivity of the constraint network. <p> Efficiency of case combination decreases as case utility decreases a progression towards an improved solution, and to examine multiple regions of the search space via crossover and mutation operators <ref> [21] </ref>, thereby enabling an escape from initial local minima. We intend to provide the GA with knowledge of the global constraint network topology and the sub-case partitioning of the network. Doing so ensures that only one sub-case is perturbed, leaving the rest of the cases' utilities intact.
Reference: 22. <author> T. Warwick. </author> <title> A GA Approach to Constraint Satisfaction Problems. </title> <type> PhD thesis, </type> <institution> University of Essex, </institution> <address> Colchester, UK, </address> <year> 1995. </year>
Reference-contexts: Therefore, our focus is on improving adaptability with a genetic algorithm after retrieval and matching. Genetic Algorithms have been applied to solving the CSP <ref> [1, 21, 22] </ref>, with a focus on the genetic representation and the reproduction mechanisms that enable efficient constraint optimization. Rojas [18] has investigated GAs in the CSP context, with a focus on a selection mechanism that uses information about the connectivity of the constraint network.
References-found: 22

