URL: http://www.merl.com/reports/TR96-13/TR96-13.ps.gz
Refering-URL: http://www.merl.com/reports/TR96-13/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Introduction to Finite-State Devices in Natural Language Processing  
Author: Emmanuel Roche and Yves Schabes 
Date: June 1996  June 1996  
Web: http://www.merl.com  
Note: Draft. 1 MITSUBISHI ELECTRIC RESEARCH LABORATORIES  MERL-TR-96-13  
Pubnum: TR-96-13  
Abstract: The theory of finite-state automata (FSA) is rich and finite-state automata techniques have been used in a wide range of domains, such as switching theory, pattern matching, pattern recognition, speech processing, hand writing recognition, optical character recognition, encryption algorithm, data compression, indexing and operating system analysis (Petri-net). Finite-State devices such as Finite-State Automata, Graphs and Finite-State Transducers have been known since the emergence of Computer Science and are extensively used in areas as various as program compilation, hardware modeling or database management. In Computational Linguistics, although they were known for a long time, more powerful formalisms such as context-free grammars or unification grammars have been preferred. However, recent mathematical and algorithmic results in the field of finite-state technology have had a great impact on the representation of electronic dictionaries and natural language processing. As a result, a new language technology is emerging out of both industrial and academic research. This book presents fundamental finite-state algorithms and approaches from the perspective of natural language processing. In this chapter, we describe the basic notions of finite-state automata and finite-state transducers. We also describe the fundamental properties of these machines while illustrating their use. We give simple formal language examples as well as natural language examples. We also illustrate some of the main algorithms used with finite-state automata and transducers. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Berstel, Jean. </author> <year> 1979. </year> <title> Transductions and Context-Free Languages. </title> <publisher> Teubner, Stuttgart. </publisher>
Reference: <author> Blattner, Merra and Tom Head. </author> <year> 1977. </year> <journal> Single-valued a-transducers. Journal of Computer and System Sciences, </journal> <volume> 15 </volume> <pages> 310-327. </pages> <note> MERL-TR-96-13 June 1996 Draft. 64 Choffrut, </note> <author> Christian. </author> <year> 1977. </year> <title> Une caracterisation des fonctions sequentielles et des fonctions sous-sequentielles en tant que relations rationnelles. </title> <journal> Theoretical Computer Science, </journal> 5:325-338. 
Reference: <author> Eilenberg, Samuel. </author> <year> 1974. </year> <title> Automata, languages, and machines, Volume A. </title> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference-contexts: By contrast, the transducer of Figure 27 representing the same transduction is unambiguous. Obviously, any transduction represented by an unambiguous transducer is functional and the following theorem shows that the converse is true too. Theorem 3 <ref> (Eilenberg 74) </ref> Any rational function t can be represented by an unambiguous transducer if t (*) = ; or f*g. We will now describe an algorithm that, given any transducer representing a function, builds an unambiguous transducer representing the same function.
Reference: <author> Eilenberg, Samuel. </author> <year> 1976. </year> <title> Automata, </title> <booktitle> languages, and machines, Volume B. </booktitle> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference: <author> Hopcroft, John E. </author> <year> 1971. </year> <title> An nlogn algorithm for minimizing the states in a finite automaton. </title> <editor> In Z. Kohavi, editor, </editor> <title> The Theory of Machines and Computations. </title> <publisher> Academic Press, </publisher> <pages> pages 189-196. </pages>
Reference-contexts: Furthermore, a deterministic automaton can be reduced to an equivalent automaton which has a minimal number of states <ref> (Hopcroft, 1971) </ref>. This results optimally minimize the space of deterministic finite-state automata. Those two results combined give an optimal time and space representation for finite-state automata.
Reference: <author> Kaplan, Ronald M. and Martin Kay. </author> <year> 1994. </year> <title> Regular models of phonological rule systems. </title> <journal> Computational Linguistics, </journal> <volume> 20(3) </volume> <pages> 331-378. </pages>
Reference: <author> Karttunen, Lauri, Ronald M. Kaplan, and Annie Zaenen. </author> <year> 1992. </year> <title> Two-level morphology with composition. </title> <booktitle> In Proceedings of the 14 th International Conference on Computational Linguistics (COLING'92). </booktitle>
Reference: <author> Kleene, Stephen C. </author> <year> 1956. </year> <title> Representation of events in nerve nets and finite automata. </title> <editor> In C.E. Shannon and J.McCarthy, editors, </editor> <title> Automata Studies. </title> <publisher> Princeton University Press. Mohri, Mehryar. </publisher> <year> 1994a. </year> <title> Minimisation of sequential transducers. </title> <booktitle> In Lecture Notes in Computer Science, Proceedings of the Conference on Computational Pattern Matching 1994. </booktitle> <publisher> Springer-Verlag. Mohri, Mehryar. </publisher> <year> 1994b. </year> <title> On some applications of finite-state automata theory to natural language processing. </title>
Reference-contexts: Kleene's theorem is one the first and most important results about finite-state automata. It relates the class of language generated by finite-state automata to some closure properties. This result makes finite-state automata a very versatile descriptive framework. Theorem 1 <ref> (Kleene, 1956) </ref> The family of languages over fl that are regular is equal to the least family of languages over fl that contains the empty set, the singleton sets, and that is closed under star, concatenation and union. This theorem equivalently relates finite-state automata with a syntactic description.
Reference: <author> Perrin, Dominique. </author> <year> 1990. </year> <title> Finite automata. </title> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 2-56. </pages>
Reference: <author> Reutenauer, Christophe. </author> <year> 1991. </year> <title> Subsequential functions: characterizations, minimization, examples. </title> <booktitle> In Proceedings of Internantional Meeting of Young Computer Scientists, Lecture Notes in Computer Science. </booktitle> <address> MERL-TR-96-13 June 1996 Draft. 65 Roche, Emmanuel. </address> <year> 1992. </year> <title> Text disambiguation by finite-state automata: an algorithm and experiments on corpora. </title> <booktitle> In COLING-92. Proceedings of the Conference, </booktitle> <address> Nantes. </address>
Reference: <author> Salomaa, Arto and Matti Soittola. </author> <year> 1978. </year> <title> Automata-Theoretic Aspects of Formal Power Series. Springer-Verlag, </title> <booktitle> Texts and Monographs in Computer Science. </booktitle>
Reference: <author> Salomaa, A. </author> <year> 1973. </year> <title> Formal Languages. </title> <publisher> Academic Press, </publisher> <address> New York, NY. </address>
Reference: <author> Sch-utzenberger, Marcel Paul. </author> <year> 1961. </year> <title> A remark on finite transducers. </title> <journal> Information and Control, </journal> <volume> 4 </volume> <pages> 185-187. </pages>
Reference: <author> Sch-utzenberger, Marcel Paul. </author> <year> 1976. </year> <title> Sur les relations rationnelles entre monodes libres. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 243-259. </pages>
Reference: <author> Sch-utzenberger, Marcel Paul. </author> <year> 1977. </year> <title> Sur une variante des fonctions sequen-tielles. </title> <journal> Theoretical Computer Science, </journal> <volume> 4 </volume> <pages> 47-57. </pages> <month> MERL-TR-96-13 June </month> <year> 1996 </year>
References-found: 15

