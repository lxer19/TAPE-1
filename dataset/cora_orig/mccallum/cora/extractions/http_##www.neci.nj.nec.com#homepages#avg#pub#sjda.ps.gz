URL: http://www.neci.nj.nec.com/homepages/avg/pub/sjda.ps.gz
Refering-URL: http://www.neci.nj.nec.com/homepages/avg/webpub/node2.html
Root-URL: 
Title: GLOBAL PRICE UPDATES HELP  matching, a push-relabel algorithm that uses global updates runs in O  
Author: ANDREW V. GOLDBERG AND ROBERT KENNEDY p log n 
Date: September 4, 1996.  
Note: tite  best cost-scaling bound known) is presented. Date:  
Address: STANFORD, CA 94305  
Affiliation: COMPUTER SCIENCE DEPARTMENT STANFORD UNIVERSITY  
Abstract: Periodic global updates of dual variables have been shown to yield a substantial speed advantage in implementations of push-relabel algorithms for the maximum flow and minimum cost flow problems. In this paper, we show that in the context of the bipartite matching and assignment problems, global updates yield a theoretical improvement as well. For bipar time (matching the best bound known) and performs worse by a factor of p n without the updates. A similar result holds for the assignment problem, for which an algorithm that assumes integer costs in the range [ C; : : : ; C ] and that runs in time O p (matching the Andrew V. Goldberg was supported in part by ONR Young Investigator Award N00014-91-J-1855 and NSF Grant CCR-9307045. Robert Kennedy was supported by the above mentioned ONR and NSF grants. Current addresses: Andrew V. Goldberg, NEC Research Institute, inc., Princeton, NJ 08540, USA, avg@research.nj.nec.com. Robert Kennedy, Silicon Graphics, Inc., 2011 North Shoreline Blvd., MS 10U-178, Mountain View, CA 94043, USA, robert@theory.stanford.edu. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. J. Anderson and J. C. Setubal. </author> <title> Goldberg's Algorithm for the Maximum Flow in Perspective: a Computational Study. </title> <editor> In D. S. Johnson and C. C. McGeoch, editors, </editor> <title> Network Flows and Matching: </title> <booktitle> First DIMACS Implementation Challenge, </booktitle> <pages> pages 1-18. </pages> <publisher> AMS, </publisher> <year> 1993. </year>
Reference-contexts: 1. Introduction. The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem <ref> [1, 2, 19] </ref>. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems [11]. <p> Under this condition the execution will have to perform (n 2 ) relabelings, and these relabelings will require (nm) time. Given ~n 2 Z and ~m 2 <ref> [1; ~n 2 =4] </ref>, we construct a graph G as follows: G is the complete bipartite graph with V = X [ Y , where X = 1; 2; : : : ; ~n + ~n 2 4 ~m ' ) ( $ p 2 : It is straightforward to check
Reference: [2] <author> U. Derigs and W. Meier. </author> <title> Implementing Goldberg's Max-Flow Algorithm | A Computational Investigation. </title> <journal> ZOR | Methods and Models of Operations Research, </journal> <volume> 33 </volume> <pages> 383-403, </pages> <year> 1989. </year>
Reference-contexts: 1. Introduction. The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem <ref> [1, 2, 19] </ref>. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems [11].
Reference: [3] <author> R. B. Dial. </author> <title> Algorithm 360: Shortest Path Forest with Topological Ordering. </title> <journal> Comm. ACM, </journal> <volume> 12 </volume> <pages> 632-633, </pages> <year> 1969. </year>
Reference-contexts: @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ @ large max processing; O (nm=k) time other processing; O (n 2 =k) time -ffi = k max = k work <ref> [3] </ref>. At every refine, the first global update is performed immediately after saturating all residual arcs with negative reduced cost.
Reference: [4] <author> E. A. Dinic. </author> <title> Algorithm for Solution of a Problem of Maximum Flow in Networks with Power Estimation. </title> <journal> Soviet Math. Dokl., </journal> <volume> 11 </volume> <pages> 1277-1280, </pages> <year> 1970. </year>
Reference-contexts: Several algorithms for the bipartite matching problem run in O ( p nm) time. 1 Hopcroft and Karp [15] first proposed an algorithm that achieves this bound. Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz <ref> [4] </ref> runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in [12, 20].
Reference: [5] <author> S. Even and R. E. Tarjan. </author> <title> Network Flow and Testing Graph Connectivity. </title> <journal> SIAM J. Comput., </journal> <volume> 4 </volume> <pages> 507-518, </pages> <year> 1975. </year>
Reference-contexts: Several algorithms for the bipartite matching problem run in O ( p nm) time. 1 Hopcroft and Karp [15] first proposed an algorithm that achieves this bound. Karzanov [17, 16] and Even and Tarjan <ref> [5] </ref> proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in [12, 20]. <p> To study the behavior of the algorithm during the remainder of its execution, we exploit the structure of matching networks by appealing to a combinatorial lemma. The following lemma is a special case of a well-known decomposition theorem [7] (see also <ref> [5] </ref>). The proof depends mainly on the fact that for a matching network G, the in-degree of v 2 X in G f is 1 e f (v) and the out-degree of w 2 Y in G f is 1 + e f (w) for any integral pseudoflow f .
Reference: [6] <author> T. Feder and R. Motwani. </author> <title> Clique Partitions, Graph Compression and Speeding-up Algorithms. </title> <booktitle> In Proc. 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 123-133, </pages> <year> 1991. </year>
Reference-contexts: Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in [12, 20]. Feder and Motwani <ref> [6] </ref> give a "graph compression" technique that combines with the algorithm of Dinitz to yield an O p log (n 2 =m) algorithm. This is the best time bound known for the problem. The most relevant theoretical results on the assignment problem are as follows. <p> Choosing k = fi ( p n ) to balance the two terms, we see that the Minimum Distance Discharge algorithm with global updates runs in O ( p nm) time. 5. Improved Performance through Graph Compression Feder and Motwani <ref> [6] </ref> give an algorithm that runs in o ( p nm) time and produces a com pressed representation G fl fl ) of a bipartite graph in which all adjacency information is preserved, but that has asymptotically fewer edges if the original graph G = (V ; E) is dense. <p> An edge fx; yg appears in E if and only if either fx; yg 2 E fl fl contains a length-two path from x to y through some node of W . The following theorem is slightly specialized from Feder and Motwani's Theorem 3.1 <ref> [6] </ref>, which details the performance of their algorithm Compress: Theorem 5.1. Let ffi 2 (0; 1) and let G = (V = X [ Y; E) be an undirected bipartite graph with jXj = jY j = n and jEj = m n 2ffi . <p> The overall time bound follows from the O (log (nC)) bound on the number of scaling iterations, giving the following theorem: Theorem 9.8. The Minimum Change Discharge algorithm with global updates computes a minimum cost circulation in a matching network in O p time. Graph compression methods <ref> [6] </ref> do not apply to graphs with weights because the compressed graph preserves only adjacency information and cannot encode arbitrary edge weights. Hence the Feder-Motwani techniques cannot improve performance in the assignment problem context. 10.
Reference: [7] <author> L. R. Ford, Jr. and D. R. Fulkerson. </author> <title> Flows in Networks. </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, NJ, </address> <year> 1962. </year>
Reference-contexts: Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method <ref> [7] </ref> were proposed in [12, 20]. Feder and Motwani [6] give a "graph compression" technique that combines with the algorithm of Dinitz to yield an O p log (n 2 =m) algorithm. This is the best time bound known for the problem. <p> Indeed, any integral flow in G can be interpreted conveniently as a matching in G: the matching is exactly the edges corresponding to those arcs a 2 X fi Y with f (a) = 1. It is a well-known fact <ref> [7] </ref> that a maximum flow in G corresponds to a maximum matching in G. For a given pseudoflow f , the residual capacity of an arc a 2 E is u f (a) = u (a) f (a). <p> To study the behavior of the algorithm during the remainder of its execution, we exploit the structure of matching networks by appealing to a combinatorial lemma. The following lemma is a special case of a well-known decomposition theorem <ref> [7] </ref> (see also [5]).
Reference: [8] <author> H. N. Gabow and R. E. Tarjan. </author> <title> Almost-Optimal Speed-ups of Algorithms for Matching and Related Problems. </title> <booktitle> In Proc. 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 514-527, </pages> <year> 1988. </year>
Reference-contexts: An algorithm using an idea similar to global updates with the same running time appeared in <ref> [8] </ref>. Two-phase algorithms with the same running time appeared in [12, 20]. The first phase of these algorithms is based on the push-relabel method and the second phase is based on the successive augmentation approach. <p> We developed global updates from an implementation heuristic for the minimum cost circulation problem [11], but in retrospect they prove similar in the assignment context to the one-processor Hungarian Search technique developed in <ref> [8] </ref>. Immediately after each global update, the algorithm rebuilds the buckets in O (n) time and sets to zero. As in the unweighted case, we have the following easy bound on the extra work done by the algorithm in selecting nodes to process: Lemma 9.1. <p> We denote a path from node u to node v in such a decomposition by (u ; v). The following lemma is similar in spirit to those in <ref> [8] </ref> and [12], although the single-phase push-relabel framework of our algorithm changes the structure of the proof. Let E (f ) denote the total excess in pseudoflow f , i.e., P e f (v)&gt;0 e f (v).
Reference: [9] <author> H. N. Gabow and R. E. Tarjan. </author> <title> Faster Scaling Algorithms for Network Problems. </title> <journal> SIAM J. Comput., </journal> <volume> 18 </volume> <pages> 1013-1036, </pages> <year> 1989. </year>
Reference-contexts: The best currently known strongly polynomial time bound of O is achieved by the classical Hungarian method of Kuhn [18]. Under the assumption that the input costs are integers in the range [ C; : : : ; C ], Gabow and Tarjan <ref> [9] </ref> use cost-scaling and blocking flow techniques to obtain an O p time algorithm. An algorithm using an idea similar to global updates with the same running time appeared in [8]. Two-phase algorithms with the same running time appeared in [12, 20].
Reference: [10] <author> A. V. Goldberg. </author> <title> Efficient Graph Algorithms for Sequential and Parallel Computers. </title> <type> PhD thesis, </type> <institution> M.I.T., </institution> <month> January </month> <year> 1987. </year> <note> (Also available as Technical Report TR-374, </note> <institution> Lab. for Computer Science, M.I.T., </institution> <year> 1987). </year>
Reference-contexts: 1. Introduction. The push-relabel method <ref> [10, 13] </ref> is the best currently known way for solving the maximum flow problem [1, 2, 19]. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems [11]. <p> 1. Introduction. The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem [1, 2, 19]. This method extends to the minimum cost flow problem using cost-scaling <ref> [10, 14] </ref>, and an implementation of this technique has proven very competitive on a wide class of problems [11]. In both contexts, the idea of periodic global updates of node distances or prices has been critical to obtaining the best running times in practice.
Reference: [11] <author> A. V. Goldberg. </author> <title> An Efficient Implementation of a Scaling Minimum-Cost Flow Algorithm. </title> <booktitle> In Proc. 3rd Integer Prog. and Combinatorial Opt. Conf., </booktitle> <pages> pages 251-266, </pages> <year> 1993. </year>
Reference-contexts: The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem [1, 2, 19]. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems <ref> [11] </ref>. In both contexts, the idea of periodic global updates of node distances or prices has been critical to obtaining the best running times in practice. <p> We developed global updates from an implementation heuristic for the minimum cost circulation problem <ref> [11] </ref>, but in retrospect they prove similar in the assignment context to the one-processor Hungarian Search technique developed in [8]. Immediately after each global update, the algorithm rebuilds the buckets in O (n) time and sets to zero.
Reference: [12] <author> A. V. Goldberg, S. A. Plotkin, and P. M. Vaidya. </author> <title> Sublinear-Time Parallel Algorithms for Matching and Related Problems. </title> <journal> J. Algorithms, </journal> <volume> 14 </volume> <pages> 180-213, </pages> <year> 1993. </year>
Reference-contexts: Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in <ref> [12, 20] </ref>. Feder and Motwani [6] give a "graph compression" technique that combines with the algorithm of Dinitz to yield an O p log (n 2 =m) algorithm. This is the best time bound known for the problem. The most relevant theoretical results on the assignment problem are as follows. <p> An algorithm using an idea similar to global updates with the same running time appeared in [8]. Two-phase algorithms with the same running time appeared in <ref> [12, 20] </ref>. The first phase of these algorithms is based on the push-relabel method and the second phase is based on the successive augmentation approach. <p> A relabel operation applies to an active node v that is not the tail of any admissible arc. The operation sets p (v) to the smallest value allowed by the *-optimality constraints, namely max (v;w)2E f otherwise. The analysis of cost-scaling push-relabel algorithms is based on the following facts <ref> [12, 14] </ref>. During a scaling iteration 16 A.V. GOLDBERG AND R. <p> We denote a path from node u to node v in such a decomposition by (u ; v). The following lemma is similar in spirit to those in [8] and <ref> [12] </ref>, although the single-phase push-relabel framework of our algorithm changes the structure of the proof. Let E (f ) denote the total excess in pseudoflow f , i.e., P e f (v)&gt;0 e f (v).
Reference: [13] <author> A. V. Goldberg and R. E. Tarjan. </author> <title> A New Approach to the Maximum Flow Problem. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 35 </volume> <pages> 921-940, </pages> <year> 1988. </year>
Reference-contexts: 1. Introduction. The push-relabel method <ref> [10, 13] </ref> is the best currently known way for solving the maximum flow problem [1, 2, 19]. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems [11]. <p> Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method <ref> [13] </ref> and the augmenting path method [7] were proposed in [12, 20]. Feder and Motwani [6] give a "graph compression" technique that combines with the algorithm of Dinitz to yield an O p log (n 2 =m) algorithm. This is the best time bound known for the problem. <p> See Figure 2. Our analysis of the push-relabel method is based on the following facts. See <ref> [13] </ref> for details; note that arcs in a matching network have unit capacities and thus push (v; w) saturates the arc (v; w). * For all nodes v, we have 0 d (v) 2n. * Distance labels do not decrease during the computation. * relabel (v) increases d (v). * The <p> The above facts imply that any push-relabel algorithm runs in O (nm) time given that the work involved in selecting the next operation to apply does not exceed the work involved in applying these operations. This can be easily achieved using the following simple data structure (see <ref> [13] </ref> for details). We maintain a current arc for every node. Initially the first arc in the node's arc list is current. <p> Such an operation can be accomplished with O (m) work that amounts to two breadth-first-search computations. Validity of the resulting distance labeling is a straightforward consequence of the definition. Note that a global update cannot decrease any node's distance label <ref> [13] </ref>.
Reference: [14] <author> A. V. Goldberg and R. E. Tarjan. </author> <title> Finding Minimum-Cost Circulations by Successive Approximation. </title> <journal> Math. of Oper. Res., </journal> <volume> 15 </volume> <pages> 430-466, </pages> <year> 1990. </year> <title> 24 A.V. </title> <editor> GOLDBERG AND R. </editor> <publisher> KENNEDY </publisher>
Reference-contexts: 1. Introduction. The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem [1, 2, 19]. This method extends to the minimum cost flow problem using cost-scaling <ref> [10, 14] </ref>, and an implementation of this technique has proven very competitive on a wide class of problems [11]. In both contexts, the idea of periodic global updates of node distances or prices has been critical to obtaining the best running times in practice. <p> A relabel operation applies to an active node v that is not the tail of any admissible arc. The operation sets p (v) to the smallest value allowed by the *-optimality constraints, namely max (v;w)2E f otherwise. The analysis of cost-scaling push-relabel algorithms is based on the following facts <ref> [12, 14] </ref>. During a scaling iteration 16 A.V. GOLDBERG AND R.
Reference: [15] <author> J. E. Hopcroft and R. M. Karp. </author> <title> An n 5=2 Algorithm for Maximum Matching in Bipartite Graphs. </title> <journal> SIAM J. Comput., </journal> <volume> 2 </volume> <pages> 225-231, </pages> <year> 1973. </year>
Reference-contexts: In both contexts, the idea of periodic global updates of node distances or prices has been critical to obtaining the best running times in practice. Several algorithms for the bipartite matching problem run in O ( p nm) time. 1 Hopcroft and Karp <ref> [15] </ref> first proposed an algorithm that achieves this bound. Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem.
Reference: [16] <editor> A. V. Karzanov. O nakhozhdenii maksimal'nogo potoka v setyakh spetsial'nogo vida i nekotorykh prilozheniyakh. In Matematicheskie Voprosy Upravleniya Proizvodstvom, </editor> <volume> volume 5. </volume> <publisher> Moscow State University Press, </publisher> <address> Moscow, </address> <year> 1973. </year> <title> In Russian; title translation: On Finding Maximum Flows in Network with Special Structure and Some Applications. </title>
Reference-contexts: Several algorithms for the bipartite matching problem run in O ( p nm) time. 1 Hopcroft and Karp [15] first proposed an algorithm that achieves this bound. Karzanov <ref> [17, 16] </ref> and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in [12, 20].
Reference: [17] <editor> A. V. Karzanov. Tochnaya otzenka algoritma nakhojdeniya maksimalnogo potoka, primenennogo k zadache "o predstavitelyakh". </editor> <booktitle> In Problems in Cibernetics, </booktitle> <volume> volume 5, </volume> <pages> pages 66-70. </pages> <publisher> Nauka, </publisher> <address> Moscow, </address> <year> 1973. </year> <title> In Russian; title translation: The exact time bound for a maximum flow algorithm applied to the set representatives problem. </title>
Reference-contexts: Several algorithms for the bipartite matching problem run in O ( p nm) time. 1 Hopcroft and Karp [15] first proposed an algorithm that achieves this bound. Karzanov <ref> [17, 16] </ref> and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in [12, 20].
Reference: [18] <author> H. W. Kuhn. </author> <title> The Hungarian Method for the Assignment Problem. </title> <journal> Naval Res. Logist. Quart., </journal> <volume> 2 </volume> <pages> 83-97, </pages> <year> 1955. </year>
Reference-contexts: This is the best time bound known for the problem. The most relevant theoretical results on the assignment problem are as follows. The best currently known strongly polynomial time bound of O is achieved by the classical Hungarian method of Kuhn <ref> [18] </ref>. Under the assumption that the input costs are integers in the range [ C; : : : ; C ], Gabow and Tarjan [9] use cost-scaling and blocking flow techniques to obtain an O p time algorithm.
Reference: [19] <author> Q. C. Nguyen and V. Venkateswaran. </author> <title> Implementations of Goldberg-Tarjan Maximum Flow Algorithm. </title> <editor> In D. S. Johnson and C. C. McGeoch, editors, </editor> <title> Network Flows and Matching: </title> <booktitle> First DIMACS Implementation Challenge, </booktitle> <pages> pages 19-42. </pages> <publisher> AMS, </publisher> <year> 1993. </year>
Reference-contexts: 1. Introduction. The push-relabel method [10, 13] is the best currently known way for solving the maximum flow problem <ref> [1, 2, 19] </ref>. This method extends to the minimum cost flow problem using cost-scaling [10, 14], and an implementation of this technique has proven very competitive on a wide class of problems [11].
Reference: [20] <author> J. B. Orlin and R. K. Ahuja. </author> <title> New Scaling Algorithms for the Assignment and Minimum Cycle Mean Problems. </title> <journal> Math. Prog., </journal> <volume> 54 </volume> <pages> 41-56, </pages> <year> 1992. </year> <title> GLOBAL PRICE UPDATES HELP 25 </title>
Reference-contexts: Karzanov [17, 16] and Even and Tarjan [5] proved that the blocking flow algorithm of Dinitz [4] runs in this time when applied to the bipartite matching problem. Two-phase algorithms based on a combination of the push-relabel method [13] and the augmenting path method [7] were proposed in <ref> [12, 20] </ref>. Feder and Motwani [6] give a "graph compression" technique that combines with the algorithm of Dinitz to yield an O p log (n 2 =m) algorithm. This is the best time bound known for the problem. The most relevant theoretical results on the assignment problem are as follows. <p> An algorithm using an idea similar to global updates with the same running time appeared in [8]. Two-phase algorithms with the same running time appeared in <ref> [12, 20] </ref>. The first phase of these algorithms is based on the push-relabel method and the second phase is based on the successive augmentation approach.
References-found: 20

