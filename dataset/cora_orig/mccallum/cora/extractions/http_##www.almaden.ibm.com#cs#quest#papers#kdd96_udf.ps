URL: http://www.almaden.ibm.com/cs/quest/papers/kdd96_udf.ps
Refering-URL: http://www.almaden.ibm.com/cs/quest/publications.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Developing Tightly-Coupled Data Mining Applications on a Relational Database System  
Author: Rakesh Agrawal and Kyuseok Shim 
Address: 650 Harry Road, San Jose, CA 95120  
Affiliation: IBM Almaden Research Center  
Abstract: We present a methodology for tightly coupling data mining applications to database systems to build high-performance applications, without requiring any change to the database software. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agrawal, R., and Shim, K. </author> <year> 1995. </year> <title> Developing tightly-coupled applications on IBM DB2/CS relational database system: Methodology and experience. </title> <type> Research Report RJ 10005 (89094), </type> <institution> IBM Almaden Research Center, </institution> <address> San Jose, California. </address> <note> Available from http://www.almaden.ibm.com/cs/quest. </note>
Reference-contexts: Six real-life customer datasets were used in the experiment. These datasets were obtained from department stores, supermarkets, and mail-order companies. We observed that in all cases, tight-coupling gives more than two fold performance advantage over loose-coupling. See <ref> (Agrawal & Shim 1995) </ref> for details of the performance experiments and results. We would like to mention that work is underway to improve the performance of the implementation of the user-defined functions in DB2/CS. The tightly-coupled implementation would directly benefit from any performance gains from this effort.
Reference: <author> Agrawal, R., and Srikant, R. </author> <year> 1994. </year> <title> Fast Algorithms for Mining Association Rules. </title> <booktitle> In Proc. of the 20th Int'l Conference on Very Large Databases. </booktitle>
Reference-contexts: A record consists of a transaction id and an item id; all the items belonging to the same transaction id represent a transaction. The input data comes naturally sorted by transaction id. Overview of the Apriori Algorithm Our case study uses the Apriori algorithm for mining association rules <ref> (Agrawal & Srikant 1994) </ref>. The problem of mining association rules is decomposed into two subproblems: i) find all frequent itemsets that occur in a specified minimum number of transaction, called min-support; ii) use the frequent itemsets to generate the desired rules.
Reference: <author> Agrawal, R.; Imielinski, T.; and Swami, A. </author> <year> 1993. </year> <title> Mining association rules between sets of items in large databases. </title> <booktitle> In Proc. of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> 207-216. </pages>
Reference-contexts: Our approach is based on a novel way of using the user-defined functions in SQL statements. A major attraction of our methodology is that it does not require changes to the database software. We validated our methodology by tightly-coupling the problem of mining association rules <ref> (Agrawal, Imielinski, & Swami 1993) </ref> on IBM DB2/CS relational database system (Chamberlin 1996). Empirical evaluation using real-life data shows nearly two-fold performance advantage for tight-coupling over loose-coupling. The programming effort in converting the loosely-coupled application to a tightly-coupled one was minimal.
Reference: <author> Chamberlin, D. </author> <year> 1996. </year> <title> Using the New DB2: IBM's Object-Relational Database System. </title> <publisher> Morgan Kauf-mann. </publisher>
Reference-contexts: A major attraction of our methodology is that it does not require changes to the database software. We validated our methodology by tightly-coupling the problem of mining association rules (Agrawal, Imielinski, & Swami 1993) on IBM DB2/CS relational database system <ref> (Chamberlin 1996) </ref>. Empirical evaluation using real-life data shows nearly two-fold performance advantage for tight-coupling over loose-coupling. The programming effort in converting the loosely-coupled application to a tightly-coupled one was minimal.
References-found: 4

