URL: ftp://ftp.cs.rochester.edu/pub/u/fuentes/icra97.ps.gz
Refering-URL: http://www.cs.rochester.edu/u/fuentes/fuentespub.html
Root-URL: 
Email: ffuentes,nelsong@cs.rochester.edu  
Title: Learning Dextrous Manipulation Skills Using the Evolution Strategy  
Author: Olac Fuentes and Randal C. Nelson 
Address: Rochester NY 14627  
Affiliation: Computer Science Department University of Rochester  
Abstract: This paper presents an approach based on the evolution strategy for autonomous learning of dextrous manipulation primitives with a dextrous robot hand. We use heuristics derived from observations made on human hands to reduce the degrees of freedom of the task and make learning possible. Our system does not rely on simulation; all the experimentation is performed the 16-degree-of-freedom Utah/MIT hand. We present experimental results that show that accurate dextrous manipulation skills can be learned in a period of a few minutes. We also show the application of the learned primitives to perform an assembly task. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Arbib, T. Iberall, and D. Lyons. </author> <title> Coordinated control programs for movements of the hand. </title> <type> Technical Report 83-25, </type> <institution> Department of Computer and Information Science, University of Massachusetts at Amherst, Amherst, Massachusetts, </institution> <year> 1983. </year>
Reference-contexts: Observations made on human hands offer some clues about how to deal with the problem of the high dimensionality of the parameter space of dextrous manipulators. Arbib et al. <ref> [1] </ref> introduced the concept of virtual fingers as a model for task representation at higher levels in the human central nervous system. In this model, a virtual finger is composed of one or more real fingers working together to solve a problem in a task.
Reference: [2] <author> E. H. L. Arts and J. Korst. </author> <title> Simulated Annealing and Bolzmann Machines. </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1989. </year>
Reference-contexts: If successful mutations occur very often, it means that convergence could be sped-up by increasing the step size. The evolution strategy has been shown to be globally convergent given unbounded running time [4]. Similar results have also been shown for simulated annealing <ref> [2] </ref> and genetic algorithms [5]. Of more practical interest, the evolution strategy has been shown in many applications to converge quickly and be relatively insensitive to local minima.
Reference: [3] <author> R. E. Bellman. </author> <title> Dynamic Programming. </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1957. </year>
Reference-contexts: However, machine learning of robotic tasks using dextrous manipulators is extremely difficult, due mainly to the high dimensionality of the parameter space of these robots. Conventional approaches to this problem face the well-known curse of dimensionality <ref> [3] </ref>, which essentially states that the number of samples required to learn a task grows exponentially with the number of parameters of the task.
Reference: [4] <author> J. Born. </author> <title> Evolutionsstrategien zur numerischen L osung von Adaptationsaufgaben. </title> <type> PhD thesis, </type> <institution> Humboldt Universitat, </institution> <address> Berlin, Germany, </address> <year> 1978. </year>
Reference-contexts: If successful mutations occur very often, it means that convergence could be sped-up by increasing the step size. The evolution strategy has been shown to be globally convergent given unbounded running time <ref> [4] </ref>. Similar results have also been shown for simulated annealing [2] and genetic algorithms [5]. Of more practical interest, the evolution strategy has been shown in many applications to converge quickly and be relatively insensitive to local minima.
Reference: [5] <author> A. E. Eiben, E. H. L. Aarts, and K. M. V. Hee. </author> <title> Global convergence of genetic algorithms: an infinite Markov chain analysis. </title> <booktitle> In Proceedings of the First International Conference on Parallel Problem Solving from Nature, </booktitle> <pages> pages 4-12, </pages> <address> Berlin, Germany, 1991. </address> <publisher> Springer. </publisher>
Reference-contexts: If successful mutations occur very often, it means that convergence could be sped-up by increasing the step size. The evolution strategy has been shown to be globally convergent given unbounded running time [4]. Similar results have also been shown for simulated annealing [2] and genetic algorithms <ref> [5] </ref>. Of more practical interest, the evolution strategy has been shown in many applications to converge quickly and be relatively insensitive to local minima. The evolution strategy is generally preferable to genetic algorithms for solving problems that deal with the optimization of functions of real numbers 1 .
Reference: [6] <author> O. Fuentes and R. C. Nelson. </author> <title> Morphing hands and virtual tools (or what good is an extra degree of freedom?). </title> <type> Technical Report 551, </type> <institution> Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: Iberall [9] has shown how the hand can be used as essentially three different grippers by changing the mapping of virtual fingers to real fingers. A generalization of virtual fingers, called a virtual tool <ref> [6, 14] </ref>, has been proposed as a way of dealing with the redundant degrees of freedom of complex robotic systems.
Reference: [7] <author> O. Fuentes and R. C. Nelson. </author> <title> Experiments on dextrous manipulation without prior object models. </title> <type> Technical Report 606, </type> <institution> Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: Although few quantitative results for other systems have been reported, the quality of the manipulations seems comparable to the one obtained by other systems where the manipulations are programmed by hand, such as <ref> [7, 11, 12, 17] </ref>. perceptual goal [25; 0; 0; 0; 0; 0]. perceptual goal [0; 25; 0; 0; 0; 0] perceptual goal [0; 0; 10; 0; 0; 0] of the generation.
Reference: [8] <author> T. Grossman and Y. Davidor. </author> <title> An investigation of a genetic algorithm in continuous parameter space. </title> <type> Technical Report CS92-20, </type> <institution> The Weizmann Institute of Science, Department of Applied Mathematics and Computer Science, Revhovot, Israel, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Another candidate virtual finger command x i e is then obtained by adding to the parent a vector with magnitude i in the estimated direction of the gradient. 1 Some modifications to the original binary-valued representation have been proposed and used somewhat successfully <ref> [8] </ref> x i jz i j After executing the commands encoded by x i , x i m and e , we obtain the perceptions p (x i ), p (x i m ) and p (x i the objective function values f (g; p (x i )), f (g; p
Reference: [9] <author> T. Iberall. </author> <title> The nature of human prehension: Three dextrous hands in one. </title> <booktitle> In Proceedings of the 1987 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 396-401, </pages> <address> Raleigh, North Carolina, </address> <year> 1987. </year>
Reference-contexts: The use of virtual fingers limits the degrees of freedom to those needed for a task, rather than the number of physical degrees of freedom the hand, human or robotic, has. Iberall <ref> [9] </ref> has shown how the hand can be used as essentially three different grippers by changing the mapping of virtual fingers to real fingers.
Reference: [10] <author> S. Jacobsen, E. Iversen, D. Knutti, R. Johnson, and K. Bigger. </author> <title> Design of the Utah/MIT Dextrous Hand. </title> <booktitle> In Proceedings of the 1986 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 96-102, </pages> <year> 1986. </year>
Reference-contexts: Goals Joint Angles g 1 g 2 g m j 1 x 1;1 x 1;2 x 1;m Table 1: Table to be filled-up by the learning algorithm 3 Experimental Results The algorithms described in the previous section were implemented in our vision and robotics lab using the Utah/MIT dextrous hand <ref> [10] </ref>. We used an Ascension flock of birds tm magnetic sensor attached to the object being manipulated for position and orientation sensing. For tactile sensing we used Interlink tm pressure-sensitive resistors, which were taped to the object. The experimental setup is shown in figure 1. <p> Similarly, figure 3 shows a translation along the y axis using the sequence [0; 25; 0]; [0; 0; 0]; [0; 25; 0]. Figure 4 shows the sequence <ref> [0; 0; 10] </ref>; [0; 0; 0]; [0; 0; 10] to perform a movement along the z axis. Intermediate positions (not shown) where obtained using the nearest neighbors approach, as explained in Section 2. <p> Similarly, figure 3 shows a translation along the y axis using the sequence [0; 25; 0]; [0; 0; 0]; [0; 25; 0]. Figure 4 shows the sequence <ref> [0; 0; 10] </ref>; [0; 0; 0]; [0; 0; 10] to perform a movement along the z axis. Intermediate positions (not shown) where obtained using the nearest neighbors approach, as explained in Section 2. <p> other systems have been reported, the quality of the manipulations seems comparable to the one obtained by other systems where the manipulations are programmed by hand, such as [7, 11, 12, 17]. perceptual goal [25; 0; 0; 0; 0; 0]. perceptual goal [0; 25; 0; 0; 0; 0] perceptual goal <ref> [0; 0; 10; 0; 0; 0] </ref> of the generation. The perceptual goal also included maintaining a constant force applied by each finger, equal to the force measured at the start of the manipulation. After approximately 25 generations a good level of performance is attained.
Reference: [11] <author> M. Jagersand, O. Fuentes, and R. C. Nelson. </author> <title> Acquiring visual-motor models for precision manipulation with robot hands. </title> <booktitle> In Proceedings of the Fourth European Conference on Computer Vision, </booktitle> <publisher> Cambridge, </publisher> <editor> U. K., </editor> <year> 1996. </year>
Reference-contexts: Although few quantitative results for other systems have been reported, the quality of the manipulations seems comparable to the one obtained by other systems where the manipulations are programmed by hand, such as <ref> [7, 11, 12, 17] </ref>. perceptual goal [25; 0; 0; 0; 0; 0]. perceptual goal [0; 25; 0; 0; 0; 0] perceptual goal [0; 0; 10; 0; 0; 0] of the generation.
Reference: [12] <author> P. Michelman and P. Allen. </author> <title> Compliant manipulation with a dexterous robot hand. </title> <booktitle> In Proceedings of the 1993 IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 711-716, </pages> <address> Atlanta, Georgia, </address> <year> 1993. </year>
Reference-contexts: Although few quantitative results for other systems have been reported, the quality of the manipulations seems comparable to the one obtained by other systems where the manipulations are programmed by hand, such as <ref> [7, 11, 12, 17] </ref>. perceptual goal [25; 0; 0; 0; 0; 0]. perceptual goal [0; 25; 0; 0; 0; 0] perceptual goal [0; 0; 10; 0; 0; 0] of the generation.
Reference: [13] <author> S. Narasimhan. </author> <title> Dexterous robot hands: Kinematics and control. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, Cambridge, Massachusetts, </institution> <month> November </month> <year> 1988. </year>
Reference-contexts: On average, each primitive was learned in about 50 generations using the algorithm described in Section 2. The algorithm was 3 This observation has been used in other systems (e. g. <ref> [13] </ref>) for computing the inverse kinematics of the Utah/MIT hand. run until the precision exceeded a predefined threshold. Each trial move took about one second. With three trials moves per generation and including other delays, each primitive was learned in a little over three minutes on average.
Reference: [14] <author> R. C. Nelson, M. Jagersand, and O. Fuentes. </author> <title> Virtual tools: A framework for simplifying sensory-motor control in complex robotic systems. </title> <type> Technical Report 576, </type> <institution> Computer Science Department, University of Rochester, Rochester, </institution> <address> New York, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Iberall [9] has shown how the hand can be used as essentially three different grippers by changing the mapping of virtual fingers to real fingers. A generalization of virtual fingers, called a virtual tool <ref> [6, 14] </ref>, has been proposed as a way of dealing with the redundant degrees of freedom of complex robotic systems.
Reference: [15] <author> I. Rechenberg. </author> <title> Evolutionsstrategie: Optimierung technis-cher Systeme nach Prinzipien der biologischen Evolution. </title> <publisher> Frommann-Holzboog Verlag, Stuttgart, </publisher> <year> 1973. </year>
Reference-contexts: Therefore we have to resort to optimization techniques that are better at dealing with local minima and handling an apparently non-deterministic environment. The optimization method we use is a modification of the well-known evolution strategy <ref> [15, 16] </ref>, augmented with an extrapolation operation in addition to the standard mutation operator. 2.1 The evolution strategy The evolution strategy is family of iterative probabilistic optimization algorithms loosely based on biological evolution. <p> The choice of 1 5 as a constant to modify and is based on Rechenberg's 1/5 success rule <ref> [15] </ref> and was proven to be optimal for a restricted kind of object functions and has been observed to work well in practice. The goal of the learning algorithm is to fill-up a table containing virtual finger commands and indexed by object and perceptual goal, as shown in table 1.
Reference: [16] <author> H.-P. Schwefel. </author> <title> Numerical Optimization of Computer Models. </title> <publisher> John Wiley & Sons, Ltd., </publisher> <year> 1981. </year>
Reference-contexts: Therefore we have to resort to optimization techniques that are better at dealing with local minima and handling an apparently non-deterministic environment. The optimization method we use is a modification of the well-known evolution strategy <ref> [15, 16] </ref>, augmented with an extrapolation operation in addition to the standard mutation operator. 2.1 The evolution strategy The evolution strategy is family of iterative probabilistic optimization algorithms loosely based on biological evolution.
Reference: [17] <author> T. H. Speeter. </author> <title> Primitive Based Control of the Utah/MIT Dextrous Hand. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <pages> pages 866-877, </pages> <address> Sacramento, California, </address> <year> 1991. </year>
Reference-contexts: New manipulations can be obtained by scaling and adding or subtracting the primitives. This method is similar to Speeter's motion primitives <ref> [17] </ref>, the main difference being that in his system the primitives were supplied by the programmer, while in ours they are learned automatically. <p> These primitives can be scaled and combined by adding them for performing tasks, as done in <ref> [17] </ref>. <p> Although few quantitative results for other systems have been reported, the quality of the manipulations seems comparable to the one obtained by other systems where the manipulations are programmed by hand, such as <ref> [7, 11, 12, 17] </ref>. perceptual goal [25; 0; 0; 0; 0; 0]. perceptual goal [0; 25; 0; 0; 0; 0] perceptual goal [0; 0; 10; 0; 0; 0] of the generation.
References-found: 17

