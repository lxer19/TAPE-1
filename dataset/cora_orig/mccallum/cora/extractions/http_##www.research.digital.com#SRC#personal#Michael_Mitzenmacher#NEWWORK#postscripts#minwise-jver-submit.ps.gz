URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/postscripts/minwise-jver-submit.ps.gz
Refering-URL: http://www.research.digital.com/SRC/personal/Michael_Mitzenmacher/NEWWORK/papers.html
Root-URL: http://www.research.digital.com
Email: E-mail: af1p@andrew.cmu.edu  E-mail: michaelm@pa.dec.com.  
Title: Min-Wise Independent Permutations  
Author: Andrei Z. Broder Moses Charikar Alan M. Frieze Michael Mitzenmacher 
Keyword: Pr(minf(X)g  
Note: Part of this work was done while this author was visiting Digital SRC. Supported in part by NSF grant CCR9530974.  
Address: Pittsburgh, Pennsylva-nia 15213, USA.  130 Lytton Avenue, Palo Alto, CA 94301, USA.  
Affiliation: Department of Mathematical Sciences, Carnegie Mellon University,  Digital SRC,  
Abstract: We define and study the notion of min-wise independent families of permutations. We say that F S n is min-wise independent if for any set X [n] and any x 2 X, when is chosen at random in F we have In other words we require that all the elements of any fixed set X have an equal chance to become the minimum element of the image of X under . Our research was motivated by the fact that such a family (under some relaxations) is essential to the algorithm used in practice by the AltaVista web index software to detect and filter near-duplicate documents. However, in the course of our investigation we have discovered interesting and challenging theoretical questions related to this concept we present the solutions to some of them and we list the rest as open problems. y Computer Science Department, Stanford University, CA 94305, USA. E-mail: moses@cs.stanford.edu. Part of this work was done while this author was a summer intern at Digital SRC. Supported by the Pierre and Christine Lamond Fellowship and in part by an ARO MURI Grant DAAH04-96-1-0007 and NSF Award CCR-9357849, with matching funds from IBM, Schlumberger Foundation, Shell Foundation, and Xerox Corporation. fl Digital SRC, 130 Lytton Avenue, Palo Alto, CA 94301, USA. E-mail: broder@pa.dec.com.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, M. Dietzfelbinger, P. B. Miltersen, E. Petrank, and G. Tardos. </author> <booktitle> Is linear hashing good? In Proceedings of the Twenty-Ninth Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 465-474, </pages> <address> El Paso, Texas, </address> <month> 4-6 May </month> <year> 1997. </year>
Reference-contexts: We consider pair-wise independent families, for which there are numerous practical implementations. In particular we are interested in linear transformations, since they are used in the AltaVista implementation and are known to perform better in some situations than other pair-wise independent families (see <ref> [1] </ref>). The way we evaluate this performance is to consider a set X and study the distribution of the minimum of the image of X.
Reference: [2] <author> N. Alon, O. Goldreich, J. Hastad, and R. Peralta. </author> <title> Simple constructions of almost k-wise independent random variables. Random Structures and Algorithms, </title> <booktitle> 3(3) </booktitle> <pages> 289-304, </pages> <year> 1992. </year>
Reference-contexts: We then continue recursively. Our construction of these hash functions is based on the explicit construction of almost k-wise independent distributions on N bit binary strings. We use the following result from <ref> [2] </ref>: Proposition 1 We can construct a family of N bit strings which are ffi away (in the L 1 norm) from k-wise independence, such that log jF j is at most k +2 log ( k log N 2ffi )+2.
Reference: [3] <author> N. Alon and J. H. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> John Wiley and Sons, </publisher> <year> 1992. </year>
Reference-contexts: In this section, we prove some existential upper bounds and constructive upper bounds as well as derive lower bounds for the approximate problem. 3.1 Existential Upper Bounds We obtain existential upper bounds on the sizes of approximately min-wise independent families via the probabilistic method <ref> [3] </ref>, by simply choosing a number of random permutations from S n . <p> Let B (x; X) be the event jA (x; X) f jXj j &gt; * f event B (x; X) is considered a bad event for the pair (x; X). We will be interested in bounding the probability of bad events. Applying Chernoff bounds (see for example <ref> [3] </ref>), we have Pr (B (x; X)) &lt; 2e 3jXj 2e f* 2 This must hold for all pairs (x; X) such that x 2 X [n]. There are n2 n1 such pairs.
Reference: [4] <author> T. M. Apostol. </author> <title> Introduction to Analytic Number Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1976. </year>
Reference-contexts: This holds for every j 2 f1; 2; : : : ng, so the lcm of f1; 2; : : : ng must divide jF j. That the lcm of the first n numbers has size e no (n) is a well known fact of number theory <ref> [4, p. 76] </ref>. 2 Remark 1 This proof also gives a lower bound of e ko (k) for restricted min-wise independent families. Also, note that the proof does not require that the members of F be distinct. Hence the theorem holds even if F contains duplicates of some permutations.
Reference: [5] <author> T. Berners-Lee, R. Cailliau, A. Loutonen, H. F. Nielsen, and A. </author> <title> Secret. The world-wide web. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 76-82, </pages> <year> 1994. </year>
Reference-contexts: As explained below, this definition is motivated by the fact that such a family (under some relaxations) is essential to the algorithm currently used in practice by the AltaVista Web indexing software [23] to detect and filter near-duplicate documents. The Web <ref> [5] </ref> has undergone exponential growth since its birth, and this has lead to the proliferation of documents that are identical or near identical. Experiments indicate that over 20% of the publicly available documents on the web are duplicates or near-duplicates.
Reference: [6] <author> B. Bollobas. </author> <title> Combinatorics: Set Systems, Hypergraphs, Families of Vectors, and Combinatorial Probability. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: Since the distribution of X is uniform on V (G a ), H (X) = log jV (G a )j = log n1 j . Let a max be the maximum size of an independent set in G a . By the Erd-os-Ko-Rado theorem (see, for example, <ref> [6, Chapter 7] </ref>), the maximum size is achieved by the set of vertices corresponding to s element subsets of [n 1] all of which contain some fixed element. Thus a max = i s1 .
Reference: [7] <author> A. Z. Broder. </author> <title> On the resemblance and containment of documents. In Proceedings of Compression and Complexity of SEQUENCES 1997. </title> <note> To appear. </note>
Reference-contexts: For a very large collection of documents this is not feasible, and a sampling mechanism per document is necessary. 3 It turns out that the problem can be reduced to a set intersection problem by a process called shingling. (See <ref> [7, 11] </ref> for details.) Via shingling each document D gets an associated set S D . <p> For details see <ref> [7, 8, 11] </ref>.) In practice, as in the case of hashing discussed above, we have to deal with the sad reality that it is impossible to choose uniformly at random in S n .
Reference: [8] <author> A. Z. Broder. </author> <title> Filtering near-duplicate documents. </title> <booktitle> In Proceedings of FUN 98, </booktitle> <year> 1998. </year> <note> To appear. </note>
Reference-contexts: For details see <ref> [7, 8, 11] </ref>.) In practice, as in the case of hashing discussed above, we have to deal with the sad reality that it is impossible to choose uniformly at random in S n .
Reference: [9] <author> A. Z. Broder, M. Charikar, A. Frieze, and M. Mitzenmacher. </author> <title> Min-wise independent permutations. </title> <booktitle> In Proceedings of the Thirtieth Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 327-336, </pages> <year> 1998. </year>
Reference-contexts: Given these connections, as well as the history of the development of pairwise independence, we expect that the concept of min-wise independence will prove useful in many future applications. A preliminary version of this work has appeared in <ref> [9] </ref>. Since then new con structions have been proposed by Indyk [18] and others [25]. The use of min-wise independent families for derandomization is discussed in [10]. 2 Exact Min-Wise Independence In this section, we provide bounds for the size of families that are exactly min-wise independent.
Reference: [10] <author> A. Z. Broder, M. Charikar, and M. Mitzenmacher. </author> <title> Derandomization using min-wise independent permutations. </title> <type> Draft manuscript. </type>
Reference-contexts: A preliminary version of this work has appeared in [9]. Since then new con structions have been proposed by Indyk [18] and others [25]. The use of min-wise independent families for derandomization is discussed in <ref> [10] </ref>. 2 Exact Min-Wise Independence In this section, we provide bounds for the size of families that are exactly min-wise independent. We begin by determining a lower bound, demonstrating that the size of the family F must grow exponentially with n. Theorem 1 Let F be min-wise independent.
Reference: [11] <author> A. Z. Broder, S. C. Glassman, M. S. Manasse, and G. Zweig. </author> <title> Syntactic clustering of the Web. </title> <booktitle> In Proceedings of the Sixth International World Wide Web Conference, </booktitle> <pages> pages 391-404, </pages> <year> 1997. </year> <month> 34 </month>
Reference-contexts: For a very large collection of documents this is not feasible, and a sampling mechanism per document is necessary. 3 It turns out that the problem can be reduced to a set intersection problem by a process called shingling. (See <ref> [7, 11] </ref> for details.) Via shingling each document D gets an associated set S D . <p> For details see <ref> [7, 8, 11] </ref>.) In practice, as in the case of hashing discussed above, we have to deal with the sad reality that it is impossible to choose uniformly at random in S n .
Reference: [12] <author> A. Z. Broder and A. R. Karlin. </author> <title> Multilevel adaptive hashing. </title> <booktitle> In Proceedings of the First Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 43-53, </pages> <address> San Francisco, California, </address> <month> 22-24 Jan. </month> <year> 1990. </year>
Reference-contexts: In other words, limited randomness suffices. Furthermore, there exist universal families of size O (jM j 2 ) that can be easily implemented in practice. Thus, universal hash functions are very useful in the design of adaptive hash schemes (see e.g. <ref> [12, 16] </ref>) and are actually used in commercial high-performance products (see e.g. [24]).
Reference: [13] <author> J. L. Carter and M. N. Wegman. </author> <title> Universal classes of hash functions. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 18(2) </volume> <pages> 143-154, </pages> <month> Apr. </month> <year> 1979. </year>
Reference-contexts: This holds if the function is chosen uniformly at random from all possible functions until a suitable one is found but not necessarily if the search is limited to a smaller set of functions. This situation has led Carter and Wegman <ref> [13] </ref> to the concept of universal hashing.
Reference: [14] <author> E. Cohen. </author> <title> Estimating the size of the transitive closure in linear time. </title> <booktitle> In Proceedings of the Thrity-Fifth Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 190-200, </pages> <year> 1994. </year>
Reference-contexts: Cohen uses the properties of the minimum element of a random permutation to estimate the size of the transitive closure, as well as to solve similar related problems <ref> [14] </ref>. Given these connections, as well as the history of the development of pairwise independence, we expect that the concept of min-wise independence will prove useful in many future applications. A preliminary version of this work has appeared in [9].
Reference: [15] <author> T. Cover and J. Thomas. </author> <title> Elements of Information Theory. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1991. </year>
Reference-contexts: This fact allows us to obtain a lower bound on the size of F using graph entropy. We review briefly the basic facts about graph entropy. We begin with some standard concepts from information theory (see <ref> [15] </ref>.) Note that in what follows we will use X to be a random variable, and not a set as previously, for notational convenience.
Reference: [16] <author> M. Dietzfelbinger, A. Karlin, K. Mehlhorn, F. M. auf der Heide, H. Rohnert, and R. E. Tarjan. </author> <title> Dynamic perfect hashing: Upper and lower bounds. </title> <journal> SIAM J. Comput., </journal> <volume> 23(4) </volume> <pages> 738-761, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: In other words, limited randomness suffices. Furthermore, there exist universal families of size O (jM j 2 ) that can be easily implemented in practice. Thus, universal hash functions are very useful in the design of adaptive hash schemes (see e.g. <ref> [12, 16] </ref>) and are actually used in commercial high-performance products (see e.g. [24]).
Reference: [17] <author> G. H. Hardy and E. M. Wright. </author> <title> An Introduction to the Theory of Numbers. </title> <publisher> Oxford University Press, </publisher> <address> fifth edition, </address> <year> 1979. </year>
Reference-contexts: Hence (10) is equivalent to 1 1 X 1 X 1 = 2 j=k+1 j 3 (a;j)=1;1aj a We now employ a common transformation known as Mobius inversion (see, for example, the standard number theory text by Hardy and Wright <ref> [17, 16.6.3] </ref>). The Mobius inversion yields 1 1 X 1 X j = 2 j=k+1 j 3 rjj r 1ar a From here we may proceed with straightforward algebraic manipulation.
Reference: [18] <author> P. Indyk. </author> <type> Personal communication. </type>
Reference-contexts: Given these connections, as well as the history of the development of pairwise independence, we expect that the concept of min-wise independence will prove useful in many future applications. A preliminary version of this work has appeared in [9]. Since then new con structions have been proposed by Indyk <ref> [18] </ref> and others [25]. The use of min-wise independent families for derandomization is discussed in [10]. 2 Exact Min-Wise Independence In this section, we provide bounds for the size of families that are exactly min-wise independent. <p> Subsequent to our original proof, Piotr Indyk suggested a simpler proof for this bound <ref> [18] </ref>, so we do not present it here. 4.2 Linear Families, Upper and Lower Bounds We derive further bounds by considering specifically linear transformations.
Reference: [19] <author> D. Karger, E. Lehman, T. Leighton, M. Levine, D. Lewin, and R. Panigrahy. </author> <title> Consistent hashing and random trees: distributed caching protocols for relieving hot spots on the World Wide Web. </title> <booktitle> In Proceedings of the Twenty-Ninth Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 654-663, </pages> <address> El Paso, Texas, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: For example, the property of min-wise independence appears to be a key feature of the monotone ranged hash functions described in <ref> [19] </ref>. Cohen uses the properties of the minimum element of a random permutation to estimate the size of the transitive closure, as well as to solve similar related problems [14].
Reference: [20] <author> J. Korner. </author> <title> Fredman-Komlos bounds and information theory. </title> <journal> SIAM J. Alg. Disc. Meth., </journal> <volume> 7(4) </volume> <pages> 560-570, </pages> <year> 1986. </year>
Reference-contexts: Similarly, we associate all symmetric a-triples satisfied by a permutation oe with the edges of another, 17 smaller graph G oe;a . We then show, using the concept of graph entropy introduced by Korner <ref> [20] </ref>, that many smaller graphs G oe;a are required to cover the edges of the larger graph G a . This argument will lead to our lower bound. We now formally define the graphs G a and G oe;a . <p> Y are random variables with finite ranges, then their mutual information is given by I (X ^ Y ) = (H (X) H (X j Y )) = H (X) + H (Y ) H ((X; Y )): The following definition and results about graph entropy are taken from Korner <ref> [20] </ref>. Definition 3 (Graph Entropy) Let G = (V; E) be a graph. Let P be a probability distribution on the vertex set V . Let A (G) denote the set of all independent sets of G.
Reference: [21] <author> D. E. Knuth. </author> <title> The Art of Computer Programming, Vol. I: Fundamental Algorithms. </title> <publisher> Addison-Wesley, </publisher> <address> second edition, </address> <year> 1973. </year>
Reference-contexts: it easily by computing the probability that (Z; a) is satisfied for the family S n , which is 1 (nr) ( n . (Thus we obtain the combinatorial identity r X (1) i r ! n r + i 1 i r The hint for its algebraic derivation is <ref> [21, equation 1.2.6.24] </ref>.) The magnitude of the coefficient of * is at most 2 r nr .
Reference: [22] <author> M. Luby and A. Wigderson. </author> <title> Pairwise independence and derandomization. </title> <type> Technical Report TR-95-035, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <year> 1995. </year>
Reference-contexts: Moreover, the concept of 1 We use log for log 2 throughout. 2 pairwise independence has important theoretical applications. (See the excellent survey by Luby and Wigderson <ref> [22] </ref>.) It is often convenient to consider permutations rather than functions. Let S n be the set of all permutations of [n].
Reference: [23] <author> R. Seltzer, E. J. Ray, and D. S. Ray. </author> <title> The Alta Vista Search Revolution : How to Find Anything on the Internet. </title> <publisher> McGraw-Hill, </publisher> <year> 1996. </year> <month> 35 </month>
Reference-contexts: Uniform distributions are natural in this setting, since in practice they are simple to represent. As explained below, this definition is motivated by the fact that such a family (under some relaxations) is essential to the algorithm currently used in practice by the AltaVista Web indexing software <ref> [23] </ref> to detect and filter near-duplicate documents. The Web [5] has undergone exponential growth since its birth, and this has lead to the proliferation of documents that are identical or near identical. Experiments indicate that over 20% of the publicly available documents on the web are duplicates or near-duplicates.
Reference: [24] <author> R. J. Souza, P. Krishnakumar, C. M. Ozveren, R. J. Simcoe, B. A. Spinney, R. E. Thomas, and R. J. Walsh. GIGAswitch: </author> <title> A high-performance packet-switching platform. </title> <journal> DIGITAL Technical Journal, </journal> <volume> 6(1) </volume> <pages> 9-22, </pages> <year> 1994. </year>
Reference-contexts: Furthermore, there exist universal families of size O (jM j 2 ) that can be easily implemented in practice. Thus, universal hash functions are very useful in the design of adaptive hash schemes (see e.g. [12, 16]) and are actually used in commercial high-performance products (see e.g. <ref> [24] </ref>). Moreover, the concept of 1 We use log for log 2 throughout. 2 pairwise independence has important theoretical applications. (See the excellent survey by Luby and Wigderson [22].) It is often convenient to consider permutations rather than functions. Let S n be the set of all permutations of [n].
Reference: [25] <author> D. </author> <title> Zuckerman. </title> <type> Personal communication. 36 </type>
Reference-contexts: A preliminary version of this work has appeared in [9]. Since then new con structions have been proposed by Indyk [18] and others <ref> [25] </ref>. The use of min-wise independent families for derandomization is discussed in [10]. 2 Exact Min-Wise Independence In this section, we provide bounds for the size of families that are exactly min-wise independent.
References-found: 25

