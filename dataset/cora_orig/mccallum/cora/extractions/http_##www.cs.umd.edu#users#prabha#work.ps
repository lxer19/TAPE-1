URL: http://www.cs.umd.edu/users/prabha/work.ps
Refering-URL: http://www.cs.umd.edu/users/prabha/pub.html
Root-URL: 
Email: prabha@iitm.ernet.in svr@iitm.ernet.in  
Title: Synchronization Models For Multimedia Presentation With User Participation  
Author: B. Prabhakaran S.V. Raghavan 
Keyword: Key Words MultiMedia Synchronization, MultiMedia Streams, Timed Petri Nets, Dynamic Timed Petri Nets, OCPN, A-OCPN.  
Address: Madras 600 036, India.  
Affiliation: Network Systems Laboratory Department of Computer Science and Engineering Indian Institute of Technology  
Abstract: This paper addresses the key issue of providing flexible multimedia presentation with user participation and suggests synchronization models which can specify the user participation during the presentation. We study Petri nets based models like Petri-net-based Hypertext model and the Object Composition Petri Nets (OCPN). We suggest a Dynamic Timed Petri Nets structure which can model pre-emptions and modifications to the temporal characteristics of the net. This structure can be adopted by the OCPN to facilitate modeling of multimedia synchronization characteristics with dynamic user participation. We show that the suggested enhancements for the Dynamic Timed Petri Nets satisfy all the properties of the Petri nets theory and we use the suggested enhancements to model typical scenarios in a multimedia presentation with user inputs. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J.L. Peterson, </author> <title> Petri Net Theory and The Modeling of Systems, </title> <publisher> Prentice-Hall Inc., </publisher> <year> 1981. </year>
Reference-contexts: to be pre-empted and deferred, or pre-empted and terminated, or pre-empted and the durations of execution have to be modified. 3 Multimedia Presentation Synchronization Modeling Petri Nets as a modeling tool have the ability to describe real-time process requirements as well as interprocess timing relationships, as required for multimedia presentations <ref> [1, 2] </ref>. A Petri net is a bipartite graph consisting of `place' nodes and `transition' nodes. Places, represented by circles, are used to represent conditions; transitions, drawn as bars, are used to represent events. <p> The execution of the pre-empted process can be continued after the zoom operation is completed. Subnet Replacement for the Augmented OCPN Models : We can use the hierarchical modeling property of the Petri nets and replace subnets of a Petri net by equivalent abstract places <ref> [1] </ref>. We can combine the Augmented OCPN models for different operations skip, reverse presentation, freeze, restart and presentation speed scaling to form a subnet and replace the subnets by an equivalent abstract place, as shown in Figure 8.
Reference: 2. <author> J.E. Coolahan. Jr., and N. Roussopoulos, </author> <title> `Timing requirements for Time-Driven Systems Using Augmented Petri Nets', </title> <journal> IEEE Trans. Software Eng., </journal> <volume> vol. SE-9, </volume> <month> Sept. </month> <year> 1983, </year> <pages> pp 603-616 </pages>
Reference-contexts: Petri nets have been used to specify browsing semantics in hypertext applications [4, 7]. Little and Ghafoor [5, 9] have proposed a new model called the Object Composition Petri Nets (OCPN) (based on Timed Petri nets <ref> [2] </ref>), which enables the formal specification and modeling of multimedia composition with intermedia timing. Petri nets have the distinct advantage that they can 1 specify real-time requirements and they are also amenable to analyses including Markov process modeling. <p> to be pre-empted and deferred, or pre-empted and terminated, or pre-empted and the durations of execution have to be modified. 3 Multimedia Presentation Synchronization Modeling Petri Nets as a modeling tool have the ability to describe real-time process requirements as well as interprocess timing relationships, as required for multimedia presentations <ref> [1, 2] </ref>. A Petri net is a bipartite graph consisting of `place' nodes and `transition' nodes. Places, represented by circles, are used to represent conditions; transitions, drawn as bars, are used to represent events. <p> For the purpose of modeling time-driven systems, the notion of time was introduced in Petri nets, calling them as Timed Petri Nets (TPN) <ref> [2] </ref>. In TPN models, the basic Petri net model is augmented by attaching an execution time variable to each node in the net. The node in the Petri net can either be the place or the transition. In a marked TPN, a set of tokens are assigned to places. <p> this work, we would like to consider random user behaviour where one can possibly initiate operations like skip or reverse presentation at any point of time. 6 3.2 The Object Composition Petri Nets The Object Composition Petri Nets (OCPN) model is a modification of the Timed Petri Nets (TPN) model <ref> [2] </ref> and can be used for modeling the synchronization requirements for multimedia objects [5, 9]. The OCPN augments the conventional Petri net models with values of time, as durations, and resource utilization on the places in the net.
Reference: 3. <author> W.M. Zuberek, </author> <title> `M-Timed Petri nets, Priorities, Pre-Emptions and Performance Evaluation of Systems', </title> <booktitle> Advances in Petri nets 1985, Lecture Notes in Computer Science (LNCS 222), </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: Execution of a Petri net process might have to be interrupted in order to carry out another higher priority activity. Pre-emption of the on-going execution of a Petri net process can be modeled using escape arcs to interrupt the execution of a process <ref> [3] </ref>. In this section, we examine Petri net based models for the purpose of describing the synchronization characteristics of the multimedia components. 5 3.1 Hypertext Models Using Timed Petri Nets Timed Petri nets concept has been used to specify the browsing semantics in the Trellis Hypertext System [4, 7]. <p> In <ref> [3] </ref>, Zuberek has proposed a Petri net model which can handle `interrupts', called the pre-emptive Petri net. The pre-emptive Petri net proposed by Zuberek assigns firing times for the transitions and also allows the transitions to be pre-empted by providing escape arcs. <p> The set of reachable states can be determined by following the analysis for the Zuberek model of the Pre-emptive nets <ref> [3] </ref>. The difference is that instead of the firing transitions being interrupted, here active places with locked tokens get interrupted. The detailed discussions are given in Appendix I.
Reference: 4. <author> P.D. Stotts and R. Frutta, </author> <title> `Petri-Net-Based Hypertext : Document Structure With Browsing Semantics', </title> <journal> ACM Trans. on Office Information Systems, </journal> <volume> Vol. 7, No. 1, </volume> <month> Jan </month> <year> 1989, </year> <pages> pp. </pages> <address> 3- 29. </address>
Reference-contexts: Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships [8, 11, 12, 13]. Petri nets have been used to specify browsing semantics in hypertext applications <ref> [4, 7] </ref>. Little and Ghafoor [5, 9] have proposed a new model called the Object Composition Petri Nets (OCPN) (based on Timed Petri nets [2]), which enables the formal specification and modeling of multimedia composition with intermedia timing. <p> In this section, we examine Petri net based models for the purpose of describing the synchronization characteristics of the multimedia components. 5 3.1 Hypertext Models Using Timed Petri Nets Timed Petri nets concept has been used to specify the browsing semantics in the Trellis Hypertext System <ref> [4, 7] </ref>. The Petri net based Hypertext model allow browsing events to be initiated by the reader or by the document itself.
Reference: 5. <author> T.D.C. Little and A Ghafoor, </author> <title> `Synchronization and Storage Models for Multimedia Objects', </title> <journal> IEEE J. on Selected Areas of Communication, </journal> <volume> vol. 8, no. 3, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 413-427. </pages>
Reference-contexts: Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships [8, 11, 12, 13]. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7]. Little and Ghafoor <ref> [5, 9] </ref> have proposed a new model called the Object Composition Petri Nets (OCPN) (based on Timed Petri nets [2]), which enables the formal specification and modeling of multimedia composition with intermedia timing. <p> possibly initiate operations like skip or reverse presentation at any point of time. 6 3.2 The Object Composition Petri Nets The Object Composition Petri Nets (OCPN) model is a modification of the Timed Petri Nets (TPN) model [2] and can be used for modeling the synchronization requirements for multimedia objects <ref> [5, 9] </ref>. The OCPN augments the conventional Petri net models with values of time, as durations, and resource utilization on the places in the net. <p> This token is `returned' to the pre-empted place on the receipt of restart input. Here again, the boundedness criteria is not affected. A Petri net place is safe if k = 1. OCPNs are proved to be safe <ref> [5, 9] </ref>, and since the models constructed using the Augmented OCPN do not violate the k-boundedness, the Augmented OCPNs are also safe. <p> The Augmented OCPN model for handling user inputs (like skip, freeze, restart, reverse presentation and speed scaling) can be incorporated in the presentation algorithm for object retrieval given in <ref> [5, 9] </ref> and the multimedia presentation can be made more flexible. The basic OCPN model can represent the relationship in time for any two atomic processes specified by temporal intervals [5, 9]. <p> skip, freeze, restart, reverse presentation and speed scaling) can be incorporated in the presentation algorithm for object retrieval given in <ref> [5, 9] </ref> and the multimedia presentation can be made more flexible. The basic OCPN model can represent the relationship in time for any two atomic processes specified by temporal intervals [5, 9]. Using the temporal relationships between the various streams and the nature of the user input to the presentation sequence, we can identify the primary, dependent secondary and independent secondary streams (as discussed in Sec.2.1). <p> Since the input and output places of the transitions are different, the boundedness criteria for the net construction is not violated. OCPNs are proved to be safe <ref> [5, 9] </ref>. This construction for the skip operation does not affect the safeness of the A-OCPN model as the boundedness criteria is not violated.
Reference: 6. <author> Steinmetz, </author> <title> `Synchronization Properties in Multimedia Systems', </title> <journal> IEEE J. on Selected Areas of Communication, </journal> <volume> vol. 8, no. 3, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 401-412. </pages>
Reference: 7. <author> P.D. Stotts and R. Frutta, </author> <title> `Temporal Hyperprogramming', </title> <journal> Journal of Visual Languages and Computing, </journal> <month> Sept. </month> <year> 1990, </year> <pages> pp. 237-253. </pages>
Reference-contexts: Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships [8, 11, 12, 13]. Petri nets have been used to specify browsing semantics in hypertext applications <ref> [4, 7] </ref>. Little and Ghafoor [5, 9] have proposed a new model called the Object Composition Petri Nets (OCPN) (based on Timed Petri nets [2]), which enables the formal specification and modeling of multimedia composition with intermedia timing. <p> In this section, we examine Petri net based models for the purpose of describing the synchronization characteristics of the multimedia components. 5 3.1 Hypertext Models Using Timed Petri Nets Timed Petri nets concept has been used to specify the browsing semantics in the Trellis Hypertext System <ref> [4, 7] </ref>. The Petri net based Hypertext model allow browsing events to be initiated by the reader or by the document itself.
Reference: 8. <author> S. Gibbs, </author> <title> `Composite Multimedia and Active Objects', </title> <booktitle> Proc. OOPSLA '91, </booktitle> <pages> pp. 97-112. </pages>
Reference-contexts: One approach is to represent the relationships using a parallel language like paradigm which can be parsed during presentation to the user [10]. Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships <ref> [8, 11, 12, 13] </ref>. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7].
Reference: 9. <author> T.D.C. Little, </author> <title> Synchronization For Distributed Multimedia Database Systems, </title> <type> PhD Dissertation, </type> <institution> Syracuse University, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships [8, 11, 12, 13]. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7]. Little and Ghafoor <ref> [5, 9] </ref> have proposed a new model called the Object Composition Petri Nets (OCPN) (based on Timed Petri nets [2]), which enables the formal specification and modeling of multimedia composition with intermedia timing. <p> possibly initiate operations like skip or reverse presentation at any point of time. 6 3.2 The Object Composition Petri Nets The Object Composition Petri Nets (OCPN) model is a modification of the Timed Petri Nets (TPN) model [2] and can be used for modeling the synchronization requirements for multimedia objects <ref> [5, 9] </ref>. The OCPN augments the conventional Petri net models with values of time, as durations, and resource utilization on the places in the net. <p> This token is `returned' to the pre-empted place on the receipt of restart input. Here again, the boundedness criteria is not affected. A Petri net place is safe if k = 1. OCPNs are proved to be safe <ref> [5, 9] </ref>, and since the models constructed using the Augmented OCPN do not violate the k-boundedness, the Augmented OCPNs are also safe. <p> The Augmented OCPN model for handling user inputs (like skip, freeze, restart, reverse presentation and speed scaling) can be incorporated in the presentation algorithm for object retrieval given in <ref> [5, 9] </ref> and the multimedia presentation can be made more flexible. The basic OCPN model can represent the relationship in time for any two atomic processes specified by temporal intervals [5, 9]. <p> skip, freeze, restart, reverse presentation and speed scaling) can be incorporated in the presentation algorithm for object retrieval given in <ref> [5, 9] </ref> and the multimedia presentation can be made more flexible. The basic OCPN model can represent the relationship in time for any two atomic processes specified by temporal intervals [5, 9]. Using the temporal relationships between the various streams and the nature of the user input to the presentation sequence, we can identify the primary, dependent secondary and independent secondary streams (as discussed in Sec.2.1). <p> Since the input and output places of the transitions are different, the boundedness criteria for the net construction is not violated. OCPNs are proved to be safe <ref> [5, 9] </ref>. This construction for the skip operation does not affect the safeness of the A-OCPN model as the boundedness criteria is not violated.
Reference: 10. <author> J. Stefani, L. Hazard and F. Horn, </author> <title> `Computational model for distributed multimedia applications based on a synchronous programming language', </title> <journal> Computer Communication, Butterworth- Hienmann Ltd., </journal> <volume> vol. 15, no. 2, </volume> <month> March </month> <year> 1992, </year> <month> pp.114-128. </month>
Reference-contexts: Different approaches have been used to model the temporal relationships of the multimedia components. One approach is to represent the relationships using a parallel language like paradigm which can be parsed during presentation to the user <ref> [10] </ref>. Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships [8, 11, 12, 13]. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7].
Reference: 11. <author> R. Steinmetz and T. Meyer, </author> <title> `Modeling Distributed Multimedia Applications', </title> <booktitle> Proc. Int. Workshop on Adv. Comm. and Applications for High Speed Networks, </booktitle> <address> Munich, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: One approach is to represent the relationships using a parallel language like paradigm which can be parsed during presentation to the user [10]. Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships <ref> [8, 11, 12, 13] </ref>. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7].
Reference: 12. <author> Bulterman, </author> <title> `Synchronization of Multi-sourced Multimedia Data For Heterogeneous Target Systems', </title> <booktitle> Proc. 3rd Int. Workshop on Network and Operating System Support For Digital Audio and Video, </booktitle> <address> San Diego, CA, USA, </address> <month> Nov. 92. </month>
Reference-contexts: One approach is to represent the relationships using a parallel language like paradigm which can be parsed during presentation to the user [10]. Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships <ref> [8, 11, 12, 13] </ref>. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7].
Reference: 13. <editor> J.C. Fritzsche, et al, </editor> <title> `An Abstract View on Multimedia Devices in Distributed Systems', </title> <booktitle> Proc. Networks '92, </booktitle> <address> Trivandrum, </address> <month> Oct. </month> <year> 1992. </year> <month> 27 </month>
Reference-contexts: One approach is to represent the relationships using a parallel language like paradigm which can be parsed during presentation to the user [10]. Another approach is to use object-oriented techniques for describing the components composing the multimedia presentation and their relationships <ref> [8, 11, 12, 13] </ref>. Petri nets have been used to specify browsing semantics in hypertext applications [4, 7].
Reference: 14. <author> A. Campbell, et al, </author> <title> `Orchestration Services For Distributed Multimedia Synchroniza--tion', </title> <booktitle> Proc. 4th IFIP Conference on High Performance Networking, </booktitle> <address> Belgium, </address> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: If an intermediate storage is used for storing the information during the stoppage, then issues like treatment of buffer overflow should also be modeled. This Augmented OCPN model can be used for deriving the Quality of Service (QoS) requirements for event-driven synchronization in distributed, multimedia presentation applications <ref> [14, 15] </ref>.
Reference: 15. <author> H. Leopold, et al, </author> <title> `Towards an Integrated Quality of Service Architecture (QoS-A) for Distributed Multimedia Communications', </title> <booktitle> Proc. 4th IFIP Conference on High Performance Networking, </booktitle> <address> Belgium, </address> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: If an intermediate storage is used for storing the information during the stoppage, then issues like treatment of buffer overflow should also be modeled. This Augmented OCPN model can be used for deriving the Quality of Service (QoS) requirements for event-driven synchronization in distributed, multimedia presentation applications <ref> [14, 15] </ref>.
Reference: 16. <author> S. Ramanathan and P. Venkat Rangan, </author> <title> `Adaptive Feedback Techniques For Synchronization Multimedia Retrieval Over Integrated Networks', </title> <journal> IEEE Transactions on Networking, </journal> <month> April </month> <year> 1993. </year> <month> 28 </month>
References-found: 16

