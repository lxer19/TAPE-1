URL: http://dimacs.rutgers.edu/Challenges/Sixth/documentation/general.ps
Refering-URL: http://dimacs.rutgers.edu/Challenges/Sixth/
Root-URL: http://www.cs.rutgers.edu
Title: Challenge: Near Neighbor Searches  
Author: http://www.dimacs.rutgers.edu/Challenges/Sixth/ 
Date: August 19, 1998 (revised timeline)  
Affiliation: General Information  
Note: The Sixth DIMACS Implementation  
Abstract-found: 0
Intro-found: 1
Reference: [AM92] <author> Pankaj Agarwal and Jir i Matousek. </author> <title> Ray shooting and parametric search. </title> <booktitle> In Proc. 24th ACM Symp. Theory Comp., </booktitle> <pages> pages 517-526, </pages> <year> 1992. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q.
Reference: [AMN + 94] <author> Sunil Arya, David Mount, Nathan Netanyahu, Ruth Silverman, and Angela Wu. </author> <title> An optimal algorithm for approximate nearest neighbor searching. </title> <booktitle> In Proc. 5th ACM Symp. on Discrete Algorithms, </booktitle> <pages> pages 573-583, </pages> <year> 1994. </year>
Reference-contexts: q). * N r (q) All points within distance r or less from q [Bri95]. * N * (q) If the true nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q) <ref> [AMN + 94, Cla94, Cla97, Kle97] </ref>. * N *;k (q) If the kth nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q).
Reference: [Ben75] <author> Jon L. Bentley. </author> <title> Multidimensional binary search trees used for associative searching. </title> <journal> Communication of the ACM, </journal> <volume> 18(9) </volume> <pages> 509-517, </pages> <year> 1975. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q.
Reference: [Ben80] <author> J. L. Bentley. </author> <title> Multidimensional divide-and-conquer. </title> <journal> Commun. ACM, </journal> <volume> 23(4) </volume> <pages> 214-229, </pages> <year> 1980. </year>
Reference: [Bri95] <author> Sergey Brin. </author> <title> Near neighbor search in large metric spaces. </title> <booktitle> In Proc. 21st Inter. Conf. on Very Large Data Bases, </booktitle> <pages> pages 574-584, </pages> <year> 1995. </year>
Reference-contexts: A general algorithm for these problems may rely only on a black-box oracle for the similarity of two points. For example, previous researchers have consider such general algorithms which require only that a distance function satisfies the triangle inequality and thus forms a metric space <ref> [Bri95, Cla97, FS82, Uhl91, Yia93] </ref>. However, when examining a data set from a very specific application, much stronger results may be possible. One possibility is that the additional problem structure can be used to improve the performance for one of the general algorithms above. <p> which are closest) [Cla88, Cla97, DL76, Mei93]. * N k (q) The nearest k points to q (if not unique, the set of all points for which there are at most k 1 points nearer to q). * N r (q) All points within distance r or less from q <ref> [Bri95] </ref>. * N * (q) If the true nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q) [AMN + 94, Cla94, Cla97, Kle97]. * N *;k (q) If the kth nearest point
Reference: [BS76] <author> J. L. Bentley and M. I. Shamos. </author> <title> Divide-and-conquer in multidimensional space. </title> <booktitle> In Proc. 8th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 220-230, </pages> <year> 1976. </year>
Reference: [BWY80] <author> J. L. Bentley, B. W. Weide, and A. C. Yao. </author> <title> Optimal expected-time algorithms for closest-point problems. </title> <journal> ACM Trans. Math. Softw., </journal> <volume> 6 </volume> <pages> 563-580, </pages> <year> 1980. </year>
Reference: [Cla88] <author> Kenneth Clarkson. </author> <title> A randomized algorithm for closest-point queries. </title> <journal> SIAM J. Comput., </journal> <volume> 17(4) </volume> <pages> 830-847, </pages> <year> 1988. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q. <p> form a query which asks an algorithm to return a single member 2 of the set, or a query which asks an algorithm to return the entire set. * N (q) The point which is the nearest to q (if not unique, the set of all points which are closest) <ref> [Cla88, Cla97, DL76, Mei93] </ref>. * N k (q) The nearest k points to q (if not unique, the set of all points for which there are at most k 1 points nearer to q). * N r (q) All points within distance r or less from q [Bri95]. * N *
Reference: [Cla94] <author> Kenneth Clarkson. </author> <title> An algorithm for approximate closest-point queries. </title> <booktitle> In Proc. 10th ACM Symp. on Computational Geometry, </booktitle> <pages> pages 160-164, </pages> <year> 1994. </year>
Reference-contexts: q). * N r (q) All points within distance r or less from q [Bri95]. * N * (q) If the true nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q) <ref> [AMN + 94, Cla94, Cla97, Kle97] </ref>. * N *;k (q) If the kth nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q).
Reference: [Cla97] <author> Kenneth Clarkson. </author> <title> Nearest neighbor queries in metric spaces. </title> <booktitle> In Proc. 39th ACM Symp. Theory Comp., </booktitle> <pages> pages 609-617, </pages> <year> 1997. </year>
Reference-contexts: A general algorithm for these problems may rely only on a black-box oracle for the similarity of two points. For example, previous researchers have consider such general algorithms which require only that a distance function satisfies the triangle inequality and thus forms a metric space <ref> [Bri95, Cla97, FS82, Uhl91, Yia93] </ref>. However, when examining a data set from a very specific application, much stronger results may be possible. One possibility is that the additional problem structure can be used to improve the performance for one of the general algorithms above. <p> form a query which asks an algorithm to return a single member 2 of the set, or a query which asks an algorithm to return the entire set. * N (q) The point which is the nearest to q (if not unique, the set of all points which are closest) <ref> [Cla88, Cla97, DL76, Mei93] </ref>. * N k (q) The nearest k points to q (if not unique, the set of all points for which there are at most k 1 points nearer to q). * N r (q) All points within distance r or less from q [Bri95]. * N * <p> q). * N r (q) All points within distance r or less from q [Bri95]. * N * (q) If the true nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q) <ref> [AMN + 94, Cla94, Cla97, Kle97] </ref>. * N *;k (q) If the kth nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q).
Reference: [DDS92] <author> M. T. Dickerson, R. L. Drysdale, and J. R. Sack. </author> <title> Simple algorithms for enumerating interpoint distances and finding k nearest neighbors. </title> <journal> Internat. J. Comput. Geom. Appl., </journal> <volume> 2(3) </volume> <pages> 221-239, </pages> <year> 1992. </year> <month> 7 </month>
Reference: [DL76] <author> David Dobkin and Richard Lipton. </author> <title> Multidimensional searching problems. </title> <journal> SIAM J. Comput., </journal> <volume> 5(2) </volume> <pages> 181-186, </pages> <year> 1976. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q. <p> form a query which asks an algorithm to return a single member 2 of the set, or a query which asks an algorithm to return the entire set. * N (q) The point which is the nearest to q (if not unique, the set of all points which are closest) <ref> [Cla88, Cla97, DL76, Mei93] </ref>. * N k (q) The nearest k points to q (if not unique, the set of all points for which there are at most k 1 points nearer to q). * N r (q) All points within distance r or less from q [Bri95]. * N *
Reference: [FS82] <author> C. Feustel and L. Shapiro. </author> <title> The nearest neighbor problem in an abstract metric space. </title> <journal> Pattern Recognition Letters, </journal> <volume> 1 </volume> <pages> 125-128, </pages> <year> 1982. </year>
Reference-contexts: A general algorithm for these problems may rely only on a black-box oracle for the similarity of two points. For example, previous researchers have consider such general algorithms which require only that a distance function satisfies the triangle inequality and thus forms a metric space <ref> [Bri95, Cla97, FS82, Uhl91, Yia93] </ref>. However, when examining a data set from a very specific application, much stronger results may be possible. One possibility is that the additional problem structure can be used to improve the performance for one of the general algorithms above.
Reference: [IMRV97] <author> Piotr Indyk, Rajeev Motwani, Prabhakar Raghavan, and Santosh Vempala. </author> <title> Locality-preserving hashing in multidimensional spaces. </title> <booktitle> In Proc. 39th ACM Symp. Theory Comp., </booktitle> <pages> pages 618-625, </pages> <year> 1997. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q. <p> We can consider combining the above sets, for instance asking an algorithm to return the entire set N r (q) " N k (q), is equivalent to asking for the k nearest neighbor to q, except throwing out any of those which are at distance greater than r <ref> [IMRV97] </ref>. Furthermore, we can consider approximate versions of the problems, for instance having an algorithm minimizing the value of *, while being able to return a member of N * (q).
Reference: [Kle97] <author> Jon Kleinberg. </author> <title> Two algorithms for nearest-neighbor search in high dimensions. </title> <booktitle> In Proc. 39th ACM Symp. Theory Comp., </booktitle> <pages> pages 599-608, </pages> <year> 1997. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q. <p> q). * N r (q) All points within distance r or less from q [Bri95]. * N * (q) If the true nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q) <ref> [AMN + 94, Cla94, Cla97, Kle97] </ref>. * N *;k (q) If the kth nearest point p has distance d (p; q), this set consists of all points p 0 for which d (p 0 ; q) (1 + *)d (p; q).
Reference: [Mat91] <author> Jir i Matousek. </author> <title> Reporting points in halfspaces. </title> <booktitle> In Proc. 32nd Symp. on Found. Comput. Sci., </booktitle> <pages> pages 207-215, </pages> <year> 1991. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q.
Reference: [Mei93] <author> Stefan Meiser. </author> <title> Point location in arrangements of hyperplanes. </title> <journal> Information and Computation, </journal> <volume> 106(2) </volume> <pages> 286-303, </pages> <year> 1993. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q. <p> form a query which asks an algorithm to return a single member 2 of the set, or a query which asks an algorithm to return the entire set. * N (q) The point which is the nearest to q (if not unique, the set of all points which are closest) <ref> [Cla88, Cla97, DL76, Mei93] </ref>. * N k (q) The nearest k points to q (if not unique, the set of all points for which there are at most k 1 points nearer to q). * N r (q) All points within distance r or less from q [Bri95]. * N *
Reference: [MS97] <author> Nimrod Megiddo and Uri Shaft. </author> <title> Efficient nearest neighbor indexing based on a collection of space filling curves. </title> <type> Technical Report IBM Research Report RJ 10093 (91909), </type> <institution> IBM Almaden Research Center, </institution> <address> San Jose California, </address> <year> 1997. </year>
Reference: [Mul91] <author> Ketan Mulmuley. </author> <title> Randomized multidimensional search trees: Further results in dynamic sampling (extended abstract). </title> <booktitle> In Proc. 32nd Symp. on Found. Comput. Sci., </booktitle> <pages> pages 216-227, </pages> <year> 1991. </year>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q.
Reference: [Sam89] <author> Hanan Samet. </author> <title> The Design and Analysis of Spatial Data Structures. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Ma, </address> <year> 1989. </year>
Reference: [Uhl91] <author> Jeffrey K. Uhlmann. </author> <title> Satisfying general proximity/similarity queries with metric trees. </title> <journal> Information Processing Letters, </journal> <volume> 40(4) </volume> <pages> 175-179, </pages> <year> 1991. </year>
Reference-contexts: A general algorithm for these problems may rely only on a black-box oracle for the similarity of two points. For example, previous researchers have consider such general algorithms which require only that a distance function satisfies the triangle inequality and thus forms a metric space <ref> [Bri95, Cla97, FS82, Uhl91, Yia93] </ref>. However, when examining a data set from a very specific application, much stronger results may be possible. One possibility is that the additional problem structure can be used to improve the performance for one of the general algorithms above.
Reference: [Vai89] <author> P. M. Vaidya. </author> <title> An O(n log n) algorithm for the all-nearest-neighbors problem. </title> <journal> Discrete and Computational Geometry, </journal> <volume> 4 </volume> <pages> 101-115, </pages> <year> 1989. </year>
Reference: [Yia93] <author> Peter Yianilos. </author> <title> Data structures and algorithms for nearest neighbor search in general metric spaces. </title> <booktitle> In Proc. 4th ACM Symp. on Discrete Algorithms, </booktitle> <pages> pages 311-321, </pages> <year> 1993. </year>
Reference-contexts: A general algorithm for these problems may rely only on a black-box oracle for the similarity of two points. For example, previous researchers have consider such general algorithms which require only that a distance function satisfies the triangle inequality and thus forms a metric space <ref> [Bri95, Cla97, FS82, Uhl91, Yia93] </ref>. However, when examining a data set from a very specific application, much stronger results may be possible. One possibility is that the additional problem structure can be used to improve the performance for one of the general algorithms above.
Reference: [YY85] <author> Andrew Yao and Frances Yao. </author> <title> A general approach to d-dimensional geometric queries. </title> <booktitle> In Proc. 17th ACM Symp. Theory Comput., </booktitle> <pages> pages 163-168, </pages> <year> 1985. </year> <month> 8 </month>
Reference-contexts: For example, an important special case is when the data set consists of d-dimensional points in Euclidean space. Researchers have considered near neighbor queries for Euclidean spaces in both low and high dimensions <ref> [AM92, Ben75, Cla88, DL76, IMRV97, Kle97, Mat91, Mei93, Mul91, YY85] </ref>. 2.2 Possible Queries and Responses Given a query point q, the most traditional goal may be to return a point of the original data set which is closest to q.
References-found: 24

