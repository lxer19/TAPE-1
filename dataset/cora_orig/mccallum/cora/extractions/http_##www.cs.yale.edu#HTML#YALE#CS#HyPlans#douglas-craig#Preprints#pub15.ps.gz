URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/Preprints/pub15.ps.gz
Refering-URL: http://www.cs.yale.edu/HTML/YALE/CS/HyPlans/douglas-craig/ccd-preprints.html
Root-URL: http://www.cs.yale.edu
Title: Parallel Domain Reduction Method  Numerical Methods for Partial Differential Equations.  
Author: Franco Brezzi del C. N. R. Craig C. Douglas P. O. Box L. Donatella Marini del C. N. R. 
Keyword: Abbreviated Title: Domain Reduction Methods Keywords: partial differential equations, parallel multigrid, domain decomposition, direct method  
Address: 27100 Pavia (Italia)  Heights, NY 10598  27100 Pavia (Italia)  
Affiliation: Dipartimento di Meccanica Strutturale e Istituto di Analisi  Universita di Pavia  Mathematical Sciences Department IBM Research Division Thomas J. Watson Research Center  Yorktown  Istituto di Analisi  Universita di Pavia  
Note: A  Numerica  Numerica  AMS(MOS) subject classification: 35, 65 To appear in  
Abstract: IBM Research Report RC 13778 (revised) Abstract: We relate a particular version of a parallel multigrid method analyzed by C. Douglas, W. L. Miranker, and B. F. Smith ([4, 6]) to the domain decomposition method of D. Funaro, L. D. Marini, A. Quarteroni, and P. Zanolli ([7, 8]). We show that the parallel multigrid method is reducing computation to a small portion of the domain and then extending the solution to the entire domain using the correct reflections to get the exact solution. We extend a particular example to double the parallelism in a nonobvious manner. While the techniques of this paper are applied to two dimensional problems, they can be applied to higher dimensional problems in an obvious manner. 
Abstract-found: 1
Intro-found: 0
Reference: [1] <author> C. C. Douglas, </author> <title> Multi-grid algorithms with applications to elliptic boundary-value problems, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 21 (1984), </volume> <pages> pp. 236-254. </pages>
Reference-contexts: In this case, a standard multigrid method, possibly parallelized, can be used to reduce the cost of solving each of the subproblems to (at worst) O (N=d), where d is the number of subproblems (see <ref> [1, 2, 3] </ref>). (In contrast, some problems in pattern recognition are equivalent to solving a central difference discretization on a uniform mesh of (5), but must be solved more accurately.) We conclude by noting that domain reduction is a technique which should be viewed as a mathematical preprocessing of a boundary
Reference: [2] <author> C. C. Douglas, </author> <title> Multi-grid algorithms for elliptic boundary-value problems, </title> <type> Ph.D. Thesis, </type> <institution> Yale University, </institution> <month> May, </month> <year> 1982. </year> <note> Also, available as Computer Science Department Technical Report 223. </note>
Reference-contexts: In this case, a standard multigrid method, possibly parallelized, can be used to reduce the cost of solving each of the subproblems to (at worst) O (N=d), where d is the number of subproblems (see <ref> [1, 2, 3] </ref>). (In contrast, some problems in pattern recognition are equivalent to solving a central difference discretization on a uniform mesh of (5), but must be solved more accurately.) We conclude by noting that domain reduction is a technique which should be viewed as a mathematical preprocessing of a boundary
Reference: [3] <author> C. C. Douglas and J. Mandel, </author> <title> Convergence of the domain reduction method with inexact solvers, </title> <institution> IBM Research Report, </institution> <year> 1988. </year> <month> 7 </month>
Reference-contexts: In this case, a standard multigrid method, possibly parallelized, can be used to reduce the cost of solving each of the subproblems to (at worst) O (N=d), where d is the number of subproblems (see <ref> [1, 2, 3] </ref>). (In contrast, some problems in pattern recognition are equivalent to solving a central difference discretization on a uniform mesh of (5), but must be solved more accurately.) We conclude by noting that domain reduction is a technique which should be viewed as a mathematical preprocessing of a boundary
Reference: [4] <author> C. C. Douglas and W. L. Miranker, </author> <title> Constructive interference in parallel algorithms, </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 25 (1988), </volume> <pages> pp. 376-398. </pages>
Reference: [5] <author> C. C. Douglas and W. L. Miranker, </author> <title> Some nontelescoping parallel algorithms based on serial multi-grid/aggregation/disaggregation techniques, in Multigrid Methods: Theory, Applications, and Supercomputing, </title> <editor> S. F. McCormick (editor), </editor> <publisher> Marcel Dekker, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp. 167-176. </pages>
Reference: [6] <author> C. C. Douglas and B. F. Smith, </author> <title> Using symmetries and antisymmetries to analyze a parallel multigrid algorithm, </title> <note> to appear in SIAM J. Numer. Anal., 26 (1989). </note>
Reference-contexts: 1 . If we take P jk = R fl then algorithm PMG converges in one iteration with no smoothing. The proof of each of these statements is given in <ref> [6] </ref>. Let us analyze a particular class of problems. <p> Using these operators, the proof of one iteration convergence with no smoothing is a simple consequence of the linearity of the operator L (cf., <ref> [6] </ref>). Consider a specific example of particular simplicity, namely Poisson's equation: u = 0 on @ D = @ Using the operators R ijk , each of the operators L ijk = 4. The boundary conditions are specified in the definitions of the corresponding ijk .
Reference: [7] <author> D. Funaro and A. Quarteroni and P. Zanolli, </author> <title> An iterative procedure with interface relaxation for domain decomposition methods, </title> <note> to appear in SIAM J. Numer. Anal., 25 (1988). </note>
Reference-contexts: by N's) along each side of the domains: 0 1 N D 00 0 1 D D 0 1 D D 10 0 1 D D because we do not actually distribute the four subdomains in this manner.) This formulation is remarkably similar to that of domain decomposition methods (see <ref> [7, 8] </ref>). There is one major computational difference between the two methods: in domain decomposition, we solve the four smaller problems encompassing the entire domain, pass boundary information to the neighbors, and continue solving smaller problems for a number of iterations.
Reference: [8] <author> L. D. Marini and A. Quarteroni, </author> <title> A relaxation procedure for domain decomposition methods using finite elements, </title> <note> submitted to Numer. Math. 8 </note>
Reference-contexts: by N's) along each side of the domains: 0 1 N D 00 0 1 D D 0 1 D D 10 0 1 D D because we do not actually distribute the four subdomains in this manner.) This formulation is remarkably similar to that of domain decomposition methods (see <ref> [7, 8] </ref>). There is one major computational difference between the two methods: in domain decomposition, we solve the four smaller problems encompassing the entire domain, pass boundary information to the neighbors, and continue solving smaller problems for a number of iterations.
References-found: 8

