URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3388/3388.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: e-mail: petrakis@ced.tuc.gr  e-mail: christos@cs.umd.edu  
Title: Similarity Searching in Large Image DataBases  
Author: Euripides G.M. Petrakis Christos Faloutsos 
Keyword: Index Terms: image database, image retrieval by content, query by example, image content representation, attributed relational graph, image indexing, R-tree, similarity searching.  
Address: PO BOX 134 Chania, GR 73100 Greece.  
Affiliation: MUltimedia Systems Institute of Crete (MUSIC), Technical University of Crete,  Institute for Systems Research (ISR) and Department of Computer Science University of Maryland.  
Abstract: We propose a method to handle approximate searching by image content in large image databases. Image content is represented by attributed relational graphs holding features of objects and relationships between objects. The method relies on the assumption that a fixed number of "labeled" or "expected" objects (e.g., "heart", "lungs" etc.) are common in all images of a given application domain in addition to a variable number of "unexpected" or "unlabeled" objects (e.g., "tumor", "hematoma" etc.). The method can answer queries by example such as "find all X-rays that are similar to Smith's X-ray". The stored images are mapped to points in a multidimensional space and are indexed using state-of-the-art database methods (R-trees). The proposed method has several desirable properties: (a) Database search is approximate so that all images up to a pre-specified degree of similarity (tolerance) are retrieved, (b) it has no "false dismissals" (i.e., all images qualifying query selection criteria are retrieved) and (c) it scales-up well as the database grows. We implemented the method and ran experiments on a database of synthetic (but realistic) medical images. The experiments showed that our method significantly outperforms sequential scanning by up to an order of magnitude. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Walid G. Aref and Hanan Samet. </author> <title> Optimization strategies for spatial query processing. </title> <booktitle> Proc. of VLDB (Very Large Data Bases), </booktitle> <pages> pages 81-90, </pages> <month> September </month> <year> 1991. </year> <month> 29 </month>
Reference-contexts: Several spatial access methods have been proposed. A recent survey can be found in [51]. These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees <ref> [25, 1] </ref> or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27].
Reference: [2] <author> Jeffrey R. Bach, Santanu Paul, and Ramesh Jain. </author> <title> A Visual Information Management System for the Interactive Retrieval of Faces. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 5(4) </volume> <pages> 619-627, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Notice that this is a general setting. One special case is the case where all objects are unlabeled (k = 0). Another special case is when all objects are labeled (u = 0) in all images as was the case in <ref> [2] </ref>. <p> However, such retrievals are less time efficient (i.e., matching is not polynomial). 8 3.1.2 Approximate Searching in Image Databases A system designed to support the segmentation, the description, as well as the interactive retrieval of facial images from an IDB is presented in <ref> [2] </ref>. A-priori knowledge regarding the kind and the positioning of expected image objects (e.g., face outline, nose, eyes etc.) is employed and used to guide the segmentation of face images into disjoint regions corresponding to the above objects.
Reference: [3] <author> S. Back, H. Neumann, and H. S. Stiehl. </author> <title> On Segmenting Computed Tomograms. </title> <booktitle> In Computer Assisted Radiology, CAR89, </booktitle> <pages> pages 691-696, </pages> <address> Berlin, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: We can easily identify three labeled objects namely, spine (object 2), liver (object 1) and body outline (object 0). Henceforth, the number of labeled objects in all images will be k = 3. Techniques for the automatic segmentation and recognition of tomographic images do exist <ref> [3, 33, 17, 48] </ref>. In general, image automatic segmentation and labeling of the components are outside the scope of this paper.
Reference: [4] <author> Dana H. Ballard and Christopher M. Brown. </author> <title> Computer Vision. </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: Such image descriptions are represented by relational structures such as Attributed Relational Graphs (ARGs) <ref> [4, 11] </ref>. In an ARG, the objects are represented by graph nodes and the relationships between objects are represented by arcs between such nodes. Both nodes and arcs are labeled by attributes corresponding to properties (features) of objects and relationships respectively. (numbered 0 through 3) and its corresponding ARG. <p> Matching between ARGs is a well known problem and has been studied extensively in the Computer Vision literature <ref> [23, 54, 4, 18] </ref>. Specifically, matching a query and a stored graph is treated as a subgraph isomorphism problem. 0 can only be associated with object 0 of the image of Figure 1 since, this is the only object having the same label with it. <p> The problem becomes harder if the query or the original image contain many unlabeled objects or objects with the same label. Then matching becomes a hard combinatorial problem. In comparisons between ARGs, we need a measure of the "goodness" of matching. A measure of goodness is defined in <ref> [4] </ref>: Let Q be a query image consisting of q objects and S be a stored image consisting of s objects. Let F () be a mapping from objects in Q to objects in S (e.g., such 5 a mapping associates objects with the same labels).
Reference: [5] <author> Nobert Beckmann, Hans-Peter Kriegel, Ralf Scneider, and Bernhard Seeger. </author> <title> The R fl -tree: An Efficient and Robust Access Method for Points and Rectangles. </title> <booktitle> In Proceedings of the 1990 ACM SIGMOD, </booktitle> <pages> pages 322-331, </pages> <address> Atlantic City, NJ, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Extensions, variations and improvements to the original R-tree structure include the packed R-trees [50], the R + -tree [53] and the R fl -tree <ref> [5] </ref>. 4 Proposed Solution In this work, we use the R-tree as the underlying method for indexing images by content. The reason for our choice is that the R-tree is more robust in high-dimensionality address spaces.
Reference: [6] <author> J.L. Bentley. </author> <title> Multidimensional binary search trees used for associative searching. </title> <journal> CACM, </journal> <volume> 18(9) </volume> <pages> 509-517, </pages> <month> September </month> <year> 1975. </year>
Reference-contexts: These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees <ref> [6, 7] </ref>, k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27]. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects. A geometric object is represented by its Minimum Bounding Rectangle (MBR).
Reference: [7] <author> Jon Louis Bentley and Jerome H. Friedman. </author> <title> Data Structures for Range Searching. </title> <journal> ACM Computing Surveys, </journal> <volume> 11(4) </volume> <pages> 397-409, </pages> <month> December </month> <year> 1979. </year>
Reference-contexts: These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees <ref> [6, 7] </ref>, k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27]. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects. A geometric object is represented by its Minimum Bounding Rectangle (MBR).
Reference: [8] <author> Elizabeth Binaghi, Isabella Gagliardi, and Raimondo Schettini. </author> <title> Indexing and Fuzzy Logic-Based Retrieval of Color Images. In Visual Database Systems, II, </title> <journal> IFIP Transactions A-7, </journal> <pages> pages 79-92. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Thus, the paper does not show how to handle queries of the form "find the images where a red ball is close to a yellow rectangle". Other methods supporting retrieval of images based on the colors in a scene are proposed in <ref> [8, 55, 34] </ref>. Additional work on image content retrieval includes: The technique of [56] deals with the problem of image content retrieval based on spatial relationships between objects when images are rotated.
Reference: [9] <author> Robert C. Bolles and Ronald A. Cain. </author> <title> Recognizing and Locating Partially Visible Objects: The Local-Feature-Focus Method. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 1(3) </volume> <pages> 57-82, </pages> <year> 1982. </year>
Reference-contexts: In addition, retrievals can be greatly accelerated if the stored images are indexed. So far, most of the methods which have been developed, perform either exact match retrievals (e.g., 2-D strings [15]) or exhaustive (sequential) database search (e.g., <ref> [9, 40, 19] </ref>). 7 Approaches to combine approximate database search and indexing do exist [31, 20]. However, such techniques do not support image retrievals by content (i.e., based on properties of objects contained in images and on relationships between objects).
Reference: [10] <author> Chin-Chen Chang and Suh-Yin Lee. </author> <title> Retrieval of Similar Pictures on Pictorial Databases. </title> <journal> Pattern Recognition, </journal> <volume> 24(7) </volume> <pages> 675-680, </pages> <year> 1991. </year>
Reference-contexts: The problem of image retrieval is then transformed into one of string matching: All 2-D strings containing the 2-D string of the query as a substring, are considered similar to it and are retrieved. To speedup retrievals, methods for indexing 2-D strings in a database has been proposed in <ref> [10, 46, 45] </ref>. Extensions of 2-D strings to treat various types of image properties has been proposed in [46]. Representations such as 2-D G strings [14] and 2-D C strings [36], have also been proposed and deal with situations of overlapping objects with complex shapes.
Reference: [11] <author> Shi-Kuo Chang. </author> <title> Principles of Pictorial Information Systems Design. </title> <publisher> Prentice Hall International Editions, </publisher> <year> 1989. </year>
Reference-contexts: Such image descriptions are represented by relational structures such as Attributed Relational Graphs (ARGs) <ref> [4, 11] </ref>. In an ARG, the objects are represented by graph nodes and the relationships between objects are represented by arcs between such nodes. Both nodes and arcs are labeled by attributes corresponding to properties (features) of objects and relationships respectively. (numbered 0 through 3) and its corresponding ARG. <p> Addressing such issues has become object of intensive research activities in many areas of Computer Science over the past few years <ref> [57, 11, 35, 13] </ref>. Advances mainly in the areas of Databases and Computer Vision research resulted in methods which can be used for image archiving, retrieval and IDB design work. <p> We call this R-tree "(k; 1) R-tree". The graph file together with the (k; 1) R-tree form the "index structure". In the IDB literature <ref> [11] </ref>, the image file store and the index structure are called "physical" and "logical" database respectively. There is a plethora of alternative designs (e.g., R-trees holding vectors for (k; 2) sub-images). We considered several of them and experimented with them all.
Reference: [12] <author> Shi-Kuo Chang and King-Sun Fu. </author> <title> A Relational Database System for Images. </title> <editor> In Shi-Kuo Chang and King-Sun Fu, editors, </editor> <booktitle> Pictorial Information Systems, </booktitle> <pages> pages 288-321. </pages> <publisher> Springer-Verlag, </publisher> <year> 1980. </year>
Reference-contexts: this goal by using ARG representations of image content in combination with state-of-the-art database techniques for indexing in many dimensions, called "spatial access methods". 3.1.1 Exact Match Searching in Image Databases Once an image description has been derived, it can be easily represented in database storage structures (e.g., database relations) <ref> [12, 43] </ref>. Such image representations can be used to answer queries specifying simple constraints on object property values or relationships.
Reference: [13] <author> Shi-Kuo Chang and Arding Hsu. </author> <title> Image Information Systems: Where Do We Go From Where? IEEE Transactions on Knowledge and Data Engineering, </title> <booktitle> 4(5) </booktitle> <pages> 431-442, </pages> <year> 1992. </year>
Reference-contexts: Addressing such issues has become object of intensive research activities in many areas of Computer Science over the past few years <ref> [57, 11, 35, 13] </ref>. Advances mainly in the areas of Databases and Computer Vision research resulted in methods which can be used for image archiving, retrieval and IDB design work.
Reference: [14] <author> Shi-Kuo Chang, Erland Jungert, and Y. Li. </author> <title> Representation and Retrieval of Symbolic Pictures Using Generalized 2-D Strings. </title> <booktitle> In SPIE Proceedings, Visual Communications and Image Processing, </booktitle> <pages> pages 1360-1372, </pages> <address> Philadelphia, </address> <month> November </month> <year> 1989. </year>
Reference-contexts: To speedup retrievals, methods for indexing 2-D strings in a database has been proposed in [10, 46, 45]. Extensions of 2-D strings to treat various types of image properties has been proposed in [46]. Representations such as 2-D G strings <ref> [14] </ref> and 2-D C strings [36], have also been proposed and deal with situations of overlapping objects with complex shapes. However, such representations are not as simple and compact as the original 2-D strings.
Reference: [15] <author> Shi-Kuo Chang, Qing-Yun Shi, and Cheng-Wen Yan. </author> <title> Iconic Indexing by 2-D Strings. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 9(3) </volume> <pages> 413-428, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: The design of appropriate image similarity/distance functions is a key issue here. In addition, retrievals can be greatly accelerated if the stored images are indexed. So far, most of the methods which have been developed, perform either exact match retrievals (e.g., 2-D strings <ref> [15] </ref>) or exhaustive (sequential) database search (e.g., [9, 40, 19]). 7 Approaches to combine approximate database search and indexing do exist [31, 20]. However, such techniques do not support image retrievals by content (i.e., based on properties of objects contained in images and on relationships between objects). <p> Such image representations can be used to answer queries specifying simple constraints on object property values or relationships. Queries by example are difficult to be processed. 2-D strings <ref> [15] </ref> provide an approach to efficient image content representation and reduced complexity (i.e., polynomial) matching in image databases. 2-D strings assume that image objects are identified prior to storage so that a unique name or class is assigned to each one. <p> Our approach allows for continuous, quantitative estimates of similarity. Older methods, such as 2-D strings <ref> [15] </ref>, give binary (i.e., "yes/no") answers while, others are time consuming and cannot be used to support retrievals in large databases [37]. In addition, image content representation methods based on strings have been proven to be ineffective in capturing image content and may yield inaccurate retrievals.
Reference: [16] <author> S. Christodoulakis, M. Theodoridou, F. Ho, M. Papa, and A. Pathria. </author> <title> Multimedia Document Presentation, Information Extraction and Document Formation in MINOS: A Model and a System. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 4(4) </volume> <pages> 345-383, </pages> <month> October </month> <year> 1986. </year> <month> 30 </month>
Reference-contexts: Combining results from both areas is an important next step. 3.1 Image Retrieval by Content Image content can be described indirectly through attributes (e.g., subject, speaker, etc.) or text (e.g., captions) <ref> [16] </ref>. However, queries by image content require that, prior to storage, images are processed, appropriate descriptions of their content are extracted, stored in the database and used in retrievals. Retrievals by image content is not an exact process (two images are rarely identical).
Reference: [17] <author> Silvana Dellepiane, Giovanni Venturi, and Gianni Vernazza. </author> <title> Model Generation and Model Matching of Real Images by a Fuzzy Approach. </title> <journal> Pattern Recognition, </journal> <volume> 25(2) </volume> <pages> 115-137, </pages> <year> 1992. </year>
Reference-contexts: We can easily identify three labeled objects namely, spine (object 2), liver (object 1) and body outline (object 0). Henceforth, the number of labeled objects in all images will be k = 3. Techniques for the automatic segmentation and recognition of tomographic images do exist <ref> [3, 33, 17, 48] </ref>. In general, image automatic segmentation and labeling of the components are outside the scope of this paper.
Reference: [18] <author> M. A. Eshera and King-Sun Fu. </author> <title> A Graph Distance Measure for Image Analysis. </title> <journal> IEEE Transactions on Systems Man and Cybernetics, </journal> <volume> SMC-14(3):353-363, </volume> <year> 1984. </year>
Reference-contexts: Matching between ARGs is a well known problem and has been studied extensively in the Computer Vision literature <ref> [23, 54, 4, 18] </ref>. Specifically, matching a query and a stored graph is treated as a subgraph isomorphism problem. 0 can only be associated with object 0 of the image of Figure 1 since, this is the only object having the same label with it.
Reference: [19] <author> M. A. Eshera and King-Sun Fu. </author> <title> An Image Understanding System Using Attributed Symbolic Representation and Inexact Graph-Matching. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 8(5) </volume> <pages> 604-618, </pages> <year> 1986. </year>
Reference-contexts: In addition, retrievals can be greatly accelerated if the stored images are indexed. So far, most of the methods which have been developed, perform either exact match retrievals (e.g., 2-D strings [15]) or exhaustive (sequential) database search (e.g., <ref> [9, 40, 19] </ref>). 7 Approaches to combine approximate database search and indexing do exist [31, 20]. However, such techniques do not support image retrievals by content (i.e., based on properties of objects contained in images and on relationships between objects).
Reference: [20] <author> Christos Faloutsos, Ron Barber, Myron Flickner, Wayne Niblack, Dragutin Petkovic, and William Eq-uitz. </author> <title> Efficient and effective querying by image content. </title> <journal> J. of Intelligent Information Systems, </journal> 3(3/4):231-262, July 1994. 
Reference-contexts: So far, most of the methods which have been developed, perform either exact match retrievals (e.g., 2-D strings [15]) or exhaustive (sequential) database search (e.g., [9, 40, 19]). 7 Approaches to combine approximate database search and indexing do exist <ref> [31, 20] </ref>. However, such techniques do not support image retrievals by content (i.e., based on properties of objects contained in images and on relationships between objects). <p> The method did not address the issue of false dismissals, nor the problem of retrieving images by specifying properties of objects and relationships between objects. In the QBIC project of IBM <ref> [20] </ref>, an indexing method for queries on color, shape and texture is proposed. The main contribution in this paper was a technique to handle the cases where the distance function is not an Euclidean distance including "cross-talk" of attributes.
Reference: [21] <author> Christos Faloutsos and Ibrahim Kamel. </author> <title> Beyond uniformity and independence: Analysis of r-trees using the concept of fractal dimension. </title> <booktitle> Proc. ACM SIGACT-SIGMOD-SIGART PODS, </booktitle> <pages> pages 4-13, </pages> <month> May </month> <year> 1994. </year> <note> Also available as CS-TR-3198, UMIACS-TR-93-130. </note>
Reference-contexts: In cases where a large number of image attributes are used for indexing, dimensionality reduction might make the R-tree faster. (b) It may help us predict the selectivity (i.e., response-set size) and subsequently, the response time of our method. In <ref> [21] </ref> we show how to estimate the performance of R-trees using the concept of fractal dimension, which, in our case, is 3. 27 tolerance t for (k,1) queries.
Reference: [22] <author> Christos Faloutsos and Shari Roseman. </author> <title> Fractals for Secondary Key Retrieval. </title> <type> Technical Report UMIACS-TR-89-47, </type> <institution> CS-TR-2242, University of Maryland, Colledge Park, Maryland, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: A recent survey can be found in [51]. These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" <ref> [22, 30] </ref>; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27]. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects.
Reference: [23] <author> Martin A. Fischler and Robert A. Elschlager. </author> <title> The Representation and Matching of Pictorial Structures. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-22(1):67-92, </volume> <year> 1973. </year>
Reference-contexts: Matching between ARGs is a well known problem and has been studied extensively in the Computer Vision literature <ref> [23, 54, 4, 18] </ref>. Specifically, matching a query and a stored graph is treated as a subgraph isomorphism problem. 0 can only be associated with object 0 of the image of Figure 1 since, this is the only object having the same label with it.
Reference: [24] <author> Keinosuke Fukunaga. </author> <title> Introduction to Statistical Pattern Recognition. </title> <publisher> Academic Press, </publisher> <year> 1990. </year> <note> 2nd Edition. </note>
Reference-contexts: It also plots the line of a linear regression. It is interesting to note that the line gives a good approximation. The slope of the line is 3. The slope of such diagrams is related to the "correlation fractal dimension" [52], which is similar to the "effective dimensionality" <ref> [24] </ref>. This implies that our data points in feature space follow a skewed distribution: If they were uniformly distributed in a f -dimensional feature space, then the slope should be f (i.e., the number of neighbors within distance t should increase with the t f ).
Reference: [25] <author> I. </author> <title> Gargantini. An effective way to represent quadtrees. </title> <journal> Comm. of ACM (CACM), </journal> <volume> 25(12) </volume> <pages> 905-910, </pages> <month> December </month> <year> 1982. </year>
Reference-contexts: Several spatial access methods have been proposed. A recent survey can be found in [51]. These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees <ref> [25, 1] </ref> or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27].
Reference: [26] <author> O. Gunther. </author> <title> The cell tree: an index for geometric data. </title> <note> Memorandum No. </note> <institution> UCB/ERL M86/89, Univ. of California, Berkeley, </institution> <month> December </month> <year> 1986. </year>
Reference-contexts: following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees <ref> [26] </ref> etc.). One of the most characteristic approaches in the last class is the R-tree [27]. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects. A geometric object is represented by its Minimum Bounding Rectangle (MBR).
Reference: [27] <author> Antonin Guttman. R-trees: </author> <title> A Dynamic Index Structure for Spatial Searching. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <pages> pages 47-57, </pages> <month> June </month> <year> 1984. </year>
Reference-contexts: One of the most characteristic approaches in the last class is the R-tree <ref> [27] </ref>. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects. A geometric object is represented by its Minimum Bounding Rectangle (MBR).
Reference: [28] <author> K. Hinrichs and J. Nievergelt. </author> <title> The Grid-File: A Data Structure to Support Proximity Queries on Spatial Objects. </title> <type> Technical Report 54, </type> <institution> Institut fur Informatik, ETH, </institution> <address> Zurich, </address> <month> July </month> <year> 1983. </year>
Reference-contexts: Several spatial access methods have been proposed. A recent survey can be found in [51]. These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space <ref> [28] </ref>; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" [22, 30]; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.).
Reference: [29] <author> Hou, Hsu, Liu, and Chiu. </author> <title> A content-based indexing technique using relative geometry features. </title> <booktitle> SPIE 92, </booktitle> <volume> 1662 </volume> <pages> 59-68, </pages> <year> 1992. </year>
Reference-contexts: The encoding of relationships, called "arrangement", is independent of image rotation, and describes the sequence in which the neighbors of each object are arranged around it. The work in <ref> [29] </ref> deals with the problem of indexing for medical images. Given a picture, the four "most important" objects are taken and their centers of mass are used to represent their spatial relationships.
Reference: [30] <author> H. V. Jagadish. </author> <title> Linear Clustering of Objects with Multiple Attributes. </title> <booktitle> In Proceedings of ACM SIGMOD, </booktitle> <pages> pages 332-342, </pages> <address> Atlantic City, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: A recent survey can be found in [51]. These methods can be grouped into the following classes: (a) Methods that transform rectangles into points in a higher dimensionality space [28]; (b) methods that use linear quad-trees [25, 1] or, equivalently, the "z-ordering" [41] or other "space filling curves" <ref> [22, 30] </ref>; and finally, (c) methods based on trees (k-d-trees [6, 7], k-d-B-trees [49], hB-trees [39], cell-trees [26] etc.). One of the most characteristic approaches in the last class is the R-tree [27]. The R-tree can be envisioned as an extension of the B-tree for multidimensional objects.
Reference: [31] <author> H. V. Jagadish. </author> <title> A retrieval technique for similar shapes. </title> <booktitle> In International Conference on Management of Data, SIGMOD 91, </booktitle> <pages> pages 208-217, </pages> <address> Denver, CO, </address> <month> May </month> <year> 1991. </year> <note> ACM. </note>
Reference-contexts: So far, most of the methods which have been developed, perform either exact match retrievals (e.g., 2-D strings [15]) or exhaustive (sequential) database search (e.g., [9, 40, 19]). 7 Approaches to combine approximate database search and indexing do exist <ref> [31, 20] </ref>. However, such techniques do not support image retrievals by content (i.e., based on properties of objects contained in images and on relationships between objects). <p> However, database search is exhaustive and the method cannot handle efficiently queries by example. The authors do not provide experimental results. An attempt to combine indexing and approximate database search is described in <ref> [31] </ref>. The main idea is to extract f features from each image, thus mapping images into points in a f - dimensional space. Once this is achieved, any spatial access method can be used to handle range and nearest-neighbor queries efficiently.
Reference: [32] <author> R. Jain and W. </author> <title> Niblack. </title> <booktitle> Nsf workshop on visual information management, </booktitle> <month> February </month> <year> 1992. </year> <month> 31 </month>
Reference-contexts: Advances mainly in the areas of Databases and Computer Vision research resulted in methods which can be used for image archiving, retrieval and IDB design work. However, as observed in <ref> [32] </ref>, there is a need for increased communication between the vision and the database communities to deal with the above issues.
Reference: [33] <author> Ioannis Kapouleas. </author> <title> Segmentation and Feature Extraction for Magnetic Resonance Brain Image Analysis. </title> <booktitle> In Proceedings of 10th International Conference on Pattern Recognition, </booktitle> <pages> pages 583-590, </pages> <address> Atlantic City, New Jersey, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: We can easily identify three labeled objects namely, spine (object 2), liver (object 1) and body outline (object 0). Henceforth, the number of labeled objects in all images will be k = 3. Techniques for the automatic segmentation and recognition of tomographic images do exist <ref> [3, 33, 17, 48] </ref>. In general, image automatic segmentation and labeling of the components are outside the scope of this paper.
Reference: [34] <author> Toshikazu Kato, Takio Kurita, Nobuyuki Otsu, and Kyoji Hirata. </author> <title> A Sketch Retrieval Method for Full Color Image Database Query by Visual Example. </title> <booktitle> In Proceedings of 11th International Conference On Pattern Recognition, </booktitle> <pages> pages 530-533, </pages> <address> The Hague, The Netherlands, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Thus, the paper does not show how to handle queries of the form "find the images where a red ball is close to a yellow rectangle". Other methods supporting retrieval of images based on the colors in a scene are proposed in <ref> [8, 55, 34] </ref>. Additional work on image content retrieval includes: The technique of [56] deals with the problem of image content retrieval based on spatial relationships between objects when images are rotated.
Reference: [35] <author> Petros Kofakis and Stelios C. Orphanoudakis. </author> <title> Image Indexing by Content. </title> <editor> In M. Osteaux et. al., </editor> <publisher> editor, </publisher>
Reference-contexts: Addressing such issues has become object of intensive research activities in many areas of Computer Science over the past few years <ref> [57, 11, 35, 13] </ref>. Advances mainly in the areas of Databases and Computer Vision research resulted in methods which can be used for image archiving, retrieval and IDB design work.
References-found: 35

