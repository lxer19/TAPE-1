URL: http://ftp.eecs.umich.edu/people/rundenst/papers/r-94-12.ps
Refering-URL: http://ftp.eecs.umich.edu/people/rundenst/papers/
Root-URL: http://www.eecs.umich.edu
Email: email: -chaudhry, moyne, rundenst-@eecs.umich.edu  
Title: Designing Databases with Fuzzy Data and Rules for Application to Discrete Control  
Author: Nauman Chaudhry, James Moyne, and Elke A. Rundensteiner 
Keyword: Imprecise and uncertain information, manufacturing databases, database design, rule modeling, supervisory control.  
Note: 1.0 Introduction  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: Many real world systems and applications must deal with imprecise or vague data. For such systems, information management components are needed that provide support for managing this imprecise data. Fuzzy theory allows us to model imprecise or vague data. The use of fuzzy theory also allows us to model vague knowledge. There have been several proposals for extending relational database systems in order to represent as well as query fuzzy data. However, little work has been done in modeling uncertainty at the conceptual schema level or in developing higher level conceptual models for fuzzy rules. To fill the first gap, the authors have proposed a design methodology for fuzzy relational databases. This methodology prescribes a sequence of steps to implement a fuzzy relational database from a proposed extended fuzzy Entity-Relationship model. In this paper, we also propose a generic data model to represent fuzzy rules. Generic methods are also presented which allow decision making based on these fuzzy rules. A working prototype of the fuzzy database has been built for a discrete control system, namely a semiconductor manufacturing process supervisory control system, which needs to handle fuzzy data and rules. Many real world systems and applications, such as control systems and genome applications, must deal with imprecise or vague data. For such systems, information management components are needed that provide support for managing this imprecise data. Fuzzy theory allows us to model imprecise or vague data. The use of fuzzy theory also allows us to model vague knowledge. Significant work has been done in incorporating fuzziness in relational databases (RDBs), but little has been done in modeling fuzziness in conceptual data models. To fill this gap, we have proposed a design methodology for developing fuzzy RDBs [CMR94]. This methodology, based on the Entity-Relationship (ER) design methodology of Teorey et. al. [TYF86], prescribes a sequence of steps to implement a fuzzy RDB from an extended fuzzy ER model. However, there seems to be no previous work in developing higher level conceptual models for fuzzy rules. In this paper, we propose a generic data model to represent fuzzy rules using the ER data model. The general design methodology for fuzzy RDBs is shown to be also applicable to the fuzzy rule model. The syntax chosen for the fuzzy rules allows expression of explicit advise against a consequent in addition to the traditional advise for a consequent. This implies that the fired rules can have conicting advises. New techniques are proposed for making decisions on these rules so as to allow decision making on contradictory information. We also show the application of these techniques to develop a fuzzy run-to-run (R2R) control system. This fuzzy system augments a R2R control framework previously developed at the University of Michigan to provide supervisory control of VLSI manufacturing processes [CTM93], [MEE93]. Specifically this framework supports R2R process control which is a form of sequential (discrete) control that utilizes data from the last process run or a series of previous runs to derive a better model for the next run. At the heart of this framework is a Generic Cell Controller (GCC) module that serves as an enabler to support the R2R control algorithm, and coordinates control and information ow between the various R2R control modules [MoM92]. The GCC functions as a reactive device and, in the current implementation, responds to messages received from external controllers or users. A central component of the GCC is a control database. This database contains the control information for the GCC that is used to match incoming messages into appropriate control actions. The use of a database provides for a generic, portable and compact implementation, and thus offers significant advantages over the traditional approach of hard 
Abstract-found: 1
Intro-found: 1
Reference: [Bal87] <author> J. Baldwin, </author> <title> Evidential Support Logic Programming, </title> <booktitle> Fuzzy Sets and Systems 24 (1987), </booktitle> <pages> 1-26. </pages>
Reference-contexts: Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL <ref> [Bal87] </ref>, which is based on Prolog and extensions to logic programming. In [BuT89] a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized. We have adapted this technique into our R2R system.
Reference: [Bal94] <author> J. Baldwin, </author> <title> FRIL: a support logic programming system, in AI and Computer Power: The impact on statistics, </title> <editor> ed. D. Hand, </editor> <publisher> Chapman and Hall, </publisher> <year> 1994. </year>
Reference-contexts: Decision making for such a rule base, however, is not discussed in [BuT89], and hence we have proposed a method for such decision making in the present paper. <ref> [Bal94] </ref> discusses methods for combining evidence from rules in a rule base, where the grade of the rule is expressed as a probability interval (called the support pair), as opposed to a single grade as used in this paper.
Reference: [BuP82] <author> B. Buckles and F. Petry, </author> <title> A fuzzy representation for relational databases, </title> <booktitle> Fuzzy Sets and Systems 7 (1982), </booktitle> <pages> 213-226. </pages>
Reference-contexts: Section 7 contains a summary of related work, while in Section 8 conclusions and a summary of future work are presented. 2.0 Fuzzy Databases and Systems In this section a brief introduction to some concepts of fuzzy sets is given [Zad65], followed by an introduction to fuzzy RDBs <ref> [BuP82] </ref>, [Uma82], [PrT84],[RaM88]. 2.1 Fuzzy Sets Let U be a classical set of objects, called the universe of discourse, and let u denote an element of U.
Reference: [BuT89] <author> J. Buckley and D. Tucker, </author> <title> Second generation fuzzy expert system, </title> <booktitle> Fuzzy Sets and Systems 31 (1989), </booktitle> <pages> 271-284. </pages>
Reference-contexts: If error &lt; 1 s, then Ultramax, 0.6. Rule 3. If error = low, then NOT LinearApp, 0.6. Now Rule 3s consequent is in conict with Rule 1s consequent. In this system we utilize the concepts used in the fuzzy expert system described in <ref> [BuT89] </ref> to handle contradictory information. A particular action may appear as a consequent in more than one rule. It may appear negated in some rules and non-negated in others. <p> Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming. In <ref> [BuT89] </ref> a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized. We have adapted this technique into our R2R system. <p> This particular representation with two confidences allows decision making based on, not only the evidence for a particular control thread, but also the evidence against that particular control thread. Decision making for such a rule base, however, is not discussed in <ref> [BuT89] </ref>, and hence we have proposed a method for such decision making in the present paper. [Bal94] discusses methods for combining evidence from rules in a rule base, where the grade of the rule is expressed as a probability interval (called the support pair), as opposed to a single grade as
Reference: [CMR94] <author> N. Chaudhry, J. Moyne and E. Rundensteiner, </author> <title> A design methodology for databases with uncertain data, </title> <booktitle> Proceedings of the Seventh International Working Conference on Scientific and Statistical Database Management, </booktitle> <month> September </month> <year> 1994, </year> <pages> 32-41. 21 </pages>
Reference-contexts: Significant work has been done in incorporating fuzziness in relational databases (RDBs), but little has been done in modeling fuzziness in conceptual data models. To fill this gap, we have proposed a design methodology for developing fuzzy RDBs <ref> [CMR94] </ref>. This methodology, based on the Entity-Relationship (ER) design methodology of Teorey et. al. [TYF86], prescribes a sequence of steps to implement a fuzzy RDB from an extended fuzzy ER model. However, there seems to be no previous work in developing higher level conceptual models for fuzzy rules. <p> If error = low, then Ultramax, 0.6. 4.2 Modeling Fuzzy Rules The control information for the Generic Cell Controller (GCC) is kept in a database. Using the same database for storing the fuzzy rules facilitates ease in adding, deleting and modifying rules at run-time. As reported in <ref> [CMR94] </ref>, we have developed an extended fuzzy ER model to handle the modeling of imprecise data during the design phase of a database. Since we now propose to also manage rules in our R2R database, we must extend our fuzzy ER model to capture fuzzy rules. <p> No general framework has been previously developed for incorporating different types of rules which decide among an arbitrary number of algorithms. Little work has been carried out for ER design of fuzzy data (see <ref> [CMR94] </ref> for more discussion), and to our knowledge no work has been carried out for ER design of fuzzy rules. Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system. <p> The use of fuzzy theory also allows us to model vague knowledge. Significant work has been done in incorporating fuzziness in RDBs, but little has been done in modeling fuzziness in conceptual data models. To fill this gap, a design methodology for developing fuzzy RDBs has been proposed <ref> [CMR94] </ref>. However, there seems to be no previous work in developing higher level conceptual models for fuzzy rules. In this paper, we have described an ER model for representing fuzzy rules. The general design methodology for fuzzy RDBs is shown to be also applicable to the fuzzy rule model.
Reference: [CTM93] <author> N. Chaudhry, R. Telfeyan, B. Moore, H. Etemad and J. </author> <title> Moyne, A run-to-run control framework for VLSI manufacturing, </title> <booktitle> Techcon 93 Conference Proceedings, </booktitle> <month> September </month> <year> 1993, </year> <pages> 31-33. </pages>
Reference-contexts: We also show the application of these techniques to develop a fuzzy run-to-run (R2R) control system. This fuzzy system augments a R2R control framework previously developed at the University of Michigan to provide supervisory control of VLSI manufacturing processes <ref> [CTM93] </ref>, [MEE93]. Specifically this framework supports R2R process control which is a form of sequential (discrete) control that utilizes data from the last process run or a series of previous runs to derive a better model for the next run. <p> The scope of application of these algorithms is not very well-defined. However, there does not appear to exist any single algorithm that may be used throughout the entire range of R2R control and optimization <ref> [CTM93] </ref>, [MEE93]. Fortunately, the ranges of applicability of these algorithms can be roughly expressed in terms of the process being near or far from its optimum. It is important to exploit this knowledge - even if vague - to aid in the selection of control algorithms.
Reference: [FCL94] <author> FuzzyCLIPS Version 6.02, </author> <title> Users Guide, </title> <institution> Knowledge Systems Laboratory, Institute for Information Technology, National Research Council Canada. </institution>
Reference-contexts: Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system. Some examples of expert systems using a high-level language include FLISP [Sos90] in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS <ref> [FCL94] </ref> which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming. In [BuT89] a fuzzy expert system FLOPS is described, in which the notion of Upper and Lower confidence values for fuzzy rules is utilized.
Reference: [Hu92] <author> A. Hu, </author> <title> An Optimal Bayesian Process Controller for Flexible Manufacturing Processes, </title> <editor> Ph. D. dissertation, </editor> <publisher> MIT 1992. </publisher>
Reference-contexts: The desired functionality of this module is depicted in Figure 3. In recent years, various algorithms have been developed for R2R optimization and control, e.g., Ultramax 1 , and a linear approximation-based control algorithm <ref> [Hu92] </ref>. The scope of application of these algorithms is not very well-defined. However, there does not appear to exist any single algorithm that may be used throughout the entire range of R2R control and optimization [CTM93], [MEE93]. <p> In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications [Lee90]. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm <ref> [Hu92] </ref>. However, the resulting systems are static; they only choose between the different modes and have no provisions for extension to choose between an arbitrary number of different algorithms. No general framework has been previously developed for incorporating different types of rules which decide among an arbitrary number of algorithms.
Reference: [Lee90] <author> C. Lee, </author> <title> Fuzzy Logic in Control Systems: </title> <journal> Fuzzy Logic Controller-Part 1, IEEE Transactions on Systems, Man, and Cybernetics 20, </journal> <volume> 2 (March/April 1990), </volume> <pages> 404-418. </pages>
Reference-contexts: However, a better translation employs fuzzy theory, and thus we define a new entity ActiveEquipment F on top of the entity ActiveEquipment by mapping each instance of ActiveEquipment into the fuzzy sets low, medium, high and very-high based on the attribute NumberOfProcesses. We adapt the fuzzification operator defined in <ref> [Lee90] </ref> for this purpose. This operator has the effect of transforming crisp data into fuzzy data and is defined by: x = fuzzifier (x o ) where x o is a crisp input value from a process; x is a fuzzy set. <p> In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications <ref> [Lee90] </ref>. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm [Hu92]. However, the resulting systems are static; they only choose between the different modes and have no provisions for extension to choose between an arbitrary number of different algorithms.
Reference: [MoM92] <author> J. Moyne and L. McAfee, </author> <title> A Generic Cell Controller for the Automated VLSI Manufacturing Facility, </title> <journal> IEEE Transactions on Semiconductor Manufacturing 5, </journal> <month> 2 (May </month> <year> 1992), </year> <pages> 77-87. </pages>
Reference-contexts: At the heart of this framework is a Generic Cell Controller (GCC) module that serves as an enabler to support the R2R control algorithm, and coordinates control and information ow between the various R2R control modules <ref> [MoM92] </ref>. The GCC functions as a reactive device and, in the current implementation, responds to messages received from external controllers or users. A central component of the GCC is a control database. <p> At the heart of this framework is a Generic Cell Controller (GCC) module that serves as an enabler to support the R2R control algorithm, and coordinates control and information ow between the various R2R control modules <ref> [MoM92] </ref>. The GCC functions as a reactive device and, in the current implementation, responds to messages received from external controllers or users. A central component of the GCC is a control database. The use of databases for implementing R2R control of semiconductor manufacturing is relatively new [Moy91].
Reference: [Moy91] <author> J. </author> <title> Moyne, Generic Cell Controlling Method and Apparatus for Computer Integrated Manufacturing System, Patent Application filed with the United States Patent and Trademark Office August 1991. </title>
Reference-contexts: The GCC functions as a reactive device and, in the current implementation, responds to messages received from external controllers or users. A central component of the GCC is a control database. The use of databases for implementing R2R control of semiconductor manufacturing is relatively new <ref> [Moy91] </ref>. The GCC database contains the control information for the GCC that is used to match incoming messages into appropriate control actions. The use of a database provides for a generic, portable and compact implementation, and thus offers significant advantages over the traditional approach of hard-coding the controller information. <p> DontUse ultramax 0.70 0.90 linearApp 0.40 0.80 19 Decision advises use of AlgorithmName Use 1 - DontUse ultramax 0.70 0.90 ULTRAMAX CONTROL ALGORITHM INVOKED Module: Database Updater Method: Update Recipe Arguments: 6,101 User-&gt; 7.0 Related Work The use of databases for implementing R2R control of semiconductor manufacturing is relatively new <ref> [Moy91] </ref>. In particular, to our knowledge, fuzzy databases have not been previously utilized for control of semiconductor manufacturing, even though fuzzy theory has been used for control applications [Lee90]. Researchers have applied Statistical Process Control (SPC) techniques to choose between different modes of a particular algorithm [Hu92].
Reference: [MEE93] <author> J. Moyne, H. Etemad and M. Elta, </author> <title> A run-to-run control framework for VLSI manufacturing, </title> <booktitle> SPIE Conference on Microelectronic Processes, Sensors, and Controls, </booktitle> <month> (Sep. </month> <year> 1993), </year> <pages> 379-390. </pages>
Reference-contexts: We also show the application of these techniques to develop a fuzzy run-to-run (R2R) control system. This fuzzy system augments a R2R control framework previously developed at the University of Michigan to provide supervisory control of VLSI manufacturing processes [CTM93], <ref> [MEE93] </ref>. Specifically this framework supports R2R process control which is a form of sequential (discrete) control that utilizes data from the last process run or a series of previous runs to derive a better model for the next run. <p> The scope of application of these algorithms is not very well-defined. However, there does not appear to exist any single algorithm that may be used throughout the entire range of R2R control and optimization [CTM93], <ref> [MEE93] </ref>. Fortunately, the ranges of applicability of these algorithms can be roughly expressed in terms of the process being near or far from its optimum. It is important to exploit this knowledge - even if vague - to aid in the selection of control algorithms.
Reference: [PrT84] <author> H. Prade and C. Testemale, </author> <title> Generalizing database relational algebra for the treatment of incomplete or uncertain information and vague queries, </title> <booktitle> Information Sciences 34 (1984), </booktitle> <pages> 115-143. </pages>
Reference: [RaM88] <author> K. Raju and A. Majumdar, </author> <title> Fuzzy Functional Dependencies and Lossless Join Decomposition of Fuzzy Relational Database Systems, </title> <journal> ACM TODS 13, </journal> <month> 2 (June </month> <year> 1988), </year> <pages> 129-166. </pages>
Reference: [RuB92] <author> Rundensteiner, E. A., and Bic, </author> <title> L.,Evaluating Aggregates in Possibilistic Relational Databases, </title> <journal> Data and Knowledge Engineering Journal 7, </journal> <year> 1992, </year> <month> 239--267. </month>
Reference-contexts: Possibility Distribution: A possibility distribution for a variable A defined on the domain of discourse U can be defined by a fuzzy subset F of U in the following way <ref> [RuB92] </ref>: The degree of possibility that the given variable A takes u as value is equal to the membership value of u in F. Formally, the membership function m F is identical to the possibility distribution function , i.e. . <p> First, we present the fuzzy relation construct that expresses the imprecision in the degree of membership of a tuple in a relation, and then the possibilistic relation construct that expresses the imprecision in a data value <ref> [RuB92] </ref>. Fuzzy Relation: Let U be the Cartesian product of n universes of discourse U 1 , U 2 ,..., U n . Then an n-ary fuzzy relation r in U is a relation which is characterized by a n-variate membership function ranging over U, i.e. .
Reference: [SEC89] <institution> E5-89 SEMI Equipment Communications Standard 2 Message Content (SECS-II), 1989 SEMI Standards, </institution> <note> Vol. 2. </note> <institution> Equipment Automation, Semiconductor Equipment and Materials International. </institution>
Reference: [Sin94] <author> P. Singer, Chemical-mechanical Polishing: </author> <title> A new focus on consumables, </title> <booktitle> Semiconductor International, </booktitle> <month> Feb. </month> <year> 1994, </year> <pages> 48-52. </pages>
Reference-contexts: The implementation resides on a Sun SPARC workstation using an Oracle database. One of the processes currently being controlled is a Chemical-mechanical Polishing (CMP) process which is becoming increasingly popular to planarize VLSI manufacturing wafers containing devices with geometries of 0.35 mm or less <ref> [Sin94] </ref>. In this section, we describe the implementation of the fuzzy R2R controller for application to controlling a CMP process. 6.1 Fuzzy R2R Controller Implementation in the GCC We use the fuzzy ER design methodology to implement the controller database. Step 1.
Reference: [Sos90] <author> Z. Sosnowski, </author> <title> FLISP - A Language for Processing Fuzzy Data, Fuzzy Sets and Systems, </title> <booktitle> 37 (1990), </booktitle> <pages> 23-32. </pages>
Reference-contexts: Fuzzy rule systems previously have been implemented primarily as expert systems, rather than using a database system. Some examples of expert systems using a high-level language include FLISP <ref> [Sos90] </ref> in which the language LISP is extended to allow representation and manipulation of fuzzy data; FuzzyCLIPS [FCL94] which is written in C; and FRIL [Bal87], which is based on Prolog and extensions to logic programming.
Reference: [Spa92] <author> C. Spanos, </author> <title> Statistical process control in semiconductor manufacturing, </title> <booktitle> Proceedings of the IEEE, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: These rules will most likely be expressed in terms of natural language, with many vague and imprecise terms. In addition there may be generic Statistical Process Control (SPC) rules <ref> [Spa92] </ref>, and other mathematical rules formulated from an analysis of the available control threads, that provide a general indication of the suitability of the algorithm to the optimization/control of the current process run.
Reference: [TYF86] <author> T. Teorey, D. Yang and J. Fry, </author> <title> A logical design methodology for relational databases using the extended entity-relationship model, </title> <journal> ACM Computing Surveys 18, </journal> <month> 2 (June </month> <year> 1986) </year> <month> 197-222. </month>
Reference-contexts: To fill this gap, we have proposed a design methodology for developing fuzzy RDBs [CMR94]. This methodology, based on the Entity-Relationship (ER) design methodology of Teorey et. al. <ref> [TYF86] </ref>, prescribes a sequence of steps to implement a fuzzy RDB from an extended fuzzy ER model. However, there seems to be no previous work in developing higher level conceptual models for fuzzy rules. <p> Some basic concepts and their ER representations are shown in Figure 4. 4.2.1 Fuzzy Conceptual Design Methodology The following design methodology for fuzzy relational databases is an extension of the design methodologies for crisp relational databases, such as <ref> [TYF86] </ref>: Step 1: Constructing an extended fuzzy ER data model. Construct the traditional ER model. Attach f to the entities and relationships that are fuzzy (see Figure 5). Show the DBfuzzifier 1 construct for the crisp entities whose attributes need to be fuzzified. 1.
Reference: [Uma82] <author> M. Umano, Freedom-0: </author> <title> A fuzzy DB system, in Fuzzy Information and Decision Processes, </title> <editor> eds. M. Gupta and E. Sanchez, </editor> <publisher> North-Holland, </publisher> <year> 1982. </year>
Reference-contexts: Section 7 contains a summary of related work, while in Section 8 conclusions and a summary of future work are presented. 2.0 Fuzzy Databases and Systems In this section a brief introduction to some concepts of fuzzy sets is given [Zad65], followed by an introduction to fuzzy RDBs [BuP82], <ref> [Uma82] </ref>, [PrT84],[RaM88]. 2.1 Fuzzy Sets Let U be a classical set of objects, called the universe of discourse, and let u denote an element of U.
Reference: [Zad65] <author> L. Zadeh, </author> <title> Fuzzy Sets, </title> <booktitle> Information and Control 8 (1965), </booktitle> <pages> 338-353. </pages>
Reference-contexts: Section 7 contains a summary of related work, while in Section 8 conclusions and a summary of future work are presented. 2.0 Fuzzy Databases and Systems In this section a brief introduction to some concepts of fuzzy sets is given <ref> [Zad65] </ref>, followed by an introduction to fuzzy RDBs [BuP82], [Uma82], [PrT84],[RaM88]. 2.1 Fuzzy Sets Let U be a classical set of objects, called the universe of discourse, and let u denote an element of U.
References-found: 22

