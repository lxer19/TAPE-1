URL: ftp://ftp.gmd.de/ml-archive/GMD/papers/ML49.ps
Refering-URL: http://nathan.gmd.de/projects/ml/lit/mlpublist.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: What online Machine Learning can do for Knowledge Acquisition A Case Study  
Author: Edgar Sommer Katharina Morik Jean-Michel Andre, Marc Uszynski 
Date: August 1992  
Address: (I3.KI) P.O.Box 1316, D-5205 St. Augustin 1, Germany  P.O.Box 500 500, D-4600 Dortmund 50, Germany  Nozay, 91460 Marcoussis, France  
Affiliation: German National Research Center for Computer Science (GMD) AI Research Division  University Dortmund Computer Science Department, LS 8  Alcatel Alsthom Recherche Route de  
Abstract: This paper reports on the development of a realistic knowledge-based application using the MOBAL system. Some problems and requirements resulting from industrial-caliber tasks are formulated. A step-by-step account of the construction of a knowledge base for such a task demonstrates how the interleaved use of several learning algorithms in concert with an inference engine and a graphical interface can fulfill those requirements. Design, analysis, revision, refinement and extension of a working model are combined in one incremental process. This illustrates the balanced cooperative modeling approach. The case study is taken from the telecommunications domain and more precisely deals with security management in telecommunications networks. MOBAL would be used as part of a security management tool for acquiring, validating and refining a security policy. The modeling approach is compared with other approaches, such as KADS and stand-alone machine learning. 
Abstract-found: 1
Intro-found: 1
Reference: [Bar82] <author> G.R. Barber. </author> <title> Office Semantics. </title> <type> Ph.D. Thesis, </type> <institution> Dept. of Electrical Engineering, MIT, </institution> <address> Cambridge, MA, </address> <year> 1982. </year>
Reference-contexts: Both, the initial design of an appropriate model and the subsequent augmentations of the domain are incremental. The call for incremental knowledge bases has a long tradition in various branches of AI, among them Office Automation (see e.g. <ref> [Bar82] </ref> [SvMV90]). In Knowledge Acquisition, however, the top-down approach of stepwise refinement is still dominating. The top-down approach requires a user to first carefully design the application before the model becomes operational. The operational model cannot be changed together with its documentation, i.e. the description of the model.
Reference: [BB87] <author> John H. Boose and Jeffrey M. Bradshaw. </author> <title> Expertise transfer and complex problems using AQUINAS as a knowledge acquisition workbench for expert systems. </title> <journal> Int. Journal of Man-Machine Studies, </journal> <volume> 26 </volume> <pages> 3-28, </pages> <year> 1987. </year>
Reference-contexts: First, the application is specified at diverse levels and diverse aspects. Second, the operational model is designed and implemented. A similar approach is supported by keats [MRDE91]. * Repertory grids have been used especially for knowledge elicitation. Systems using these techniques are for example, kss0 [SG87] and aquinas <ref> [BB87] </ref>. * The framework of kl-one has become a standard in the field of Knowledge Representation [BS85]. It is a restriction of first order logic which can easily be graphically presented to the user.
Reference: [Boo89] <author> John Boose. </author> <title> A survey of knowledge acquisition techniques and tools. </title> <journal> Knowledge Acquisition, </journal> <volume> 1(1) </volume> <pages> 3-38, </pages> <year> 1989. </year>
Reference-contexts: The latter case will be indicated by " - " in the table below. These criteria are less finely grained than those used in <ref> [Boo89] </ref> and finer grained than those used in [SW90] because they are to cover machine learning, knowledge acquisition, knowledge representation or specification, and integrated systems. They need not cover all the elicitation techniques which are condensed into the criterion of data origin.
Reference: [BS85] <author> R. J. Brachman and J.G. Schmolze. </author> <title> An overview of the KL-ONE knowledge representation system. </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <year> 1985. </year>
Reference-contexts: A similar approach is supported by keats [MRDE91]. * Repertory grids have been used especially for knowledge elicitation. Systems using these techniques are for example, kss0 [SG87] and aquinas [BB87]. * The framework of kl-one has become a standard in the field of Knowledge Representation <ref> [BS85] </ref>. It is a restriction of first order logic which can easily be graphically presented to the user. It is specialized for classification tasks. * Stand-alone relational learning algorithms such as golem [MF92] or foil [Qui90] discover rules (i.e. Horn clauses) in examples (i.e. ground facts).
Reference: [CKB87] <author> Bojan Cestnik, Igor Kononenko, and Ivan Bratko. </author> <title> ASSISTANT 86: A knowledge-elicitation tool for sophisticated users. </title> <editor> In I. Bratko and N. Lavrac, editors, </editor> <booktitle> Progress in Machine Learning, </booktitle> <pages> pages 31-45. </pages> <publisher> Sigma Press, </publisher> <address> Wilmslow, GB, </address> <year> 1987. </year>
Reference: [EHR83] <author> Werner Emde, Christopher U. Habel, and Claus-Rainer Rollinger. </author> <title> The discovery of the equator or concept driven learning. </title> <booktitle> In IJCAI-83, </booktitle> <pages> pages 455 - 458, </pages> <address> Los Altos, CA, 1983. </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Among them are those from real applications. The success of machine learning can easily be illustrated by applications of algorithms using an attribute-value representation [CKB87],[Mic89], but many realistic applications require a relational representation. Learning algorithms for relational representations in restricted first order logic have been created only recently <ref> [EHR83] </ref>, [Qui90]. The MOBAL system employs a relational learning algorithm, RDT [KW92].
Reference: [Emd89] <author> Werner Emde. </author> <title> An inference engine for representing multiple theories. </title> <editor> In K. Morik, editor, </editor> <booktitle> Knowledge Representation and Organization in Machine Learning, </booktitle> <pages> pages 148-176. </pages> <publisher> Springer, </publisher> <address> New York, Berlin, Tokio, </address> <year> 1989. </year> <note> auch: KIT-Report Nr. 64, </note> <institution> TU Berlin, </institution> <year> 1988. </year>
Reference-contexts: Using STT to pinpoint "holes" in the knowledge base is an example. Underlying this and other facilities discussed in the following is the fact that MOBAL integrates a powerful inference engine with the knowledge base and the various tools. The inference engine IM2 <ref> [Emd89] </ref> applies rules to the knowledge base using both forward and backward chaining, so that the effects are visible immediately. If the user does not agree with the effects, s/he may simply delete the entire rule or some facts.
Reference: [KBD + 89] <author> Georg Klinker, Casey Boyd, David Dong, Jon Maiman, John McDermott, and Robert Schnelbach. </author> <title> Building expert systems with KNACK. </title> <journal> KNowledge Acquisition, </journal> <volume> 1(3) </volume> <pages> 299-320, </pages> <year> 1989. </year>
Reference-contexts: It is specialized for classification tasks. * Stand-alone relational learning algorithms such as golem [MF92] or foil [Qui90] discover rules (i.e. Horn clauses) in examples (i.e. ground facts). This list of approaches is not complete. Some approaches which are not covered by this list are protege [Mus89] or knack <ref> [KBD + 89] </ref>. If needed, they will be mentioned in the comparison.
Reference: [Kie88] <author> J.-U. Kietz. </author> <title> Incremental and reversible acquisition of taxonomies. </title> <type> Technical Report KIT-Report 66, </type> <address> Berlin, </address> <month> Oktober </month> <year> 1988. </year> <note> Also in Proc. EKAW-88. </note>
Reference-contexts: As it turns out, adding new information requires subsequent analysis for incompleteness, so that from an engineering point of view, there is no reason to distinguish it from fixing incompleteness (see Section 4.8). 4.4 Classes of Objects To discover both kinds of incompleteness, MOBAL's tool STT <ref> [Kie88] </ref> computes a sort taxonomy, in which terms are put into sets according to which predicates they occur in as arguments . A lattice of classes is then computed from the subset relations between these sets [MS91].
Reference: [Kie90] <author> Jorg-Uwe Kietz. </author> <title> MOBAL's program interface. Internal Technical Memo 4.5/G, Machine Learning Toolbox ESPRIT Project P2154, </title> <month> October </month> <year> 1990. </year>
Reference-contexts: ESPRIT project Machine Learning Toolbox (MLT) has developed a Common Knowledge Representation Language (CKRL) which is supported by MOBAL, both as input and as output [Kie91]. A third possibility is the connection of data source, such as a database program, via MOBAL's programming interface <ref> [Kie90] </ref>. In principle, a knowledge base in MOBAL is an evolving model and data can be both read in and successively input by hand.
Reference: [Kie91] <author> Joerg-Uwe Kietz. </author> <title> Mobal's ckrl interface. </title> <type> Technical report, </type> <institution> GMD, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: This is one of several ways of getting data into the system. ESPRIT project Machine Learning Toolbox (MLT) has developed a Common Knowledge Representation Language (CKRL) which is supported by MOBAL, both as input and as output <ref> [Kie91] </ref>. A third possibility is the connection of data source, such as a database program, via MOBAL's programming interface [Kie90]. In principle, a knowledge base in MOBAL is an evolving model and data can be both read in and successively input by hand.
Reference: [Kli91] <author> Volker Klingspor. </author> <title> Mobal's predicate structuring tool. </title> <type> Technical report, </type> <institution> GMD, </institution> <month> September </month> <year> 1991. </year> <title> What online ML can do for KA A Case Study 26 </title>
Reference-contexts: Such selective learning passes are much quicker than complete ones. 4.6.4 Discovering and Utilizing Inferential Structure The predicate topology tool PST <ref> [Kli91] </ref> is a means of classifying the predicates used in a domain. Intuitively, PST does this by grouping predicates that appear as premises of certain rules, as opposed to those that appear as conclusions.
Reference: [KVRD91] <author> Werner Karbach, Angi Voss, R.Schukey, and Uwe Drouven. MODEL-K: </author> <title> Pro-totyping at the knowledge level. </title> <editor> In J. Rault, editor, </editor> <booktitle> Procs. 11th International Conference on Expert Systems and Their Applications, </booktitle> <volume> volume 1, </volume> <pages> pages 501 - 511, </pages> <address> Avignon, </address> <year> 1991. </year>
Reference-contexts: The inference engine of MOBAL, with data dependency handling, detects contradictions of facts and finds the rules and facts which produced the contradiction. As soon as the conceptual model becomes operational by using a representation formalism (as proposed in [Wet90] or <ref> [KVRD91] </ref>), the distinction between the conceptual and the design model vanishes. Then, the approach becomes similar to the one illustrated by MOBAL, except that no learning tool is integrated. Therefore, Frank van Harmelen and John Balder [vHB92] proposed a formal but not operational language solwly for specification.
Reference: [KW92] <author> Jorg-Uwe Kietz and Stefan Wrobel. </author> <title> Controlling the complexity of learning in logic through syntactic and task-oriented models. </title> <editor> In Stephen Muggleton, editor, </editor> <booktitle> Inductive Logic Programming, chapter 16. ap, </booktitle> <address> apa, </address> <year> 1992. </year>
Reference-contexts: Learning algorithms for relational representations in restricted first order logic have been created only recently [EHR83], [Qui90]. The MOBAL system employs a relational learning algorithm, RDT <ref> [KW92] </ref>. <p> As pointed out in Section 4.3, these examples will in general be incomplete, so we cannot allow the learning component to make the closed world assumption. To fullfil these criteria, MOBAL's relational learning component RDT <ref> [KW92] </ref> treats the entire knowledge base as (incomplete) background knowledge and the available examples of the may-operate predicate as examples. RDT searches for rules that correctly deduce the available examples of access privileges from the available background knowledge. Among those found was the rule cited in Section 2.
Reference: [LDG91] <author> Nada Lavrac, Saso Dzeroski, and Marko Grobelnik. </author> <title> Learning nonrecursive definitions of relations with linus. </title> <editor> In Yves Kodratoff, editor, </editor> <booktitle> Proc. Fifth European Working Session on Learning (EWSL), </booktitle> <pages> pages 265-281. </pages> <publisher> Springer, </publisher> <year> 1991. </year>
Reference-contexts: A indeterminate relational representation allows our model to be compact and homogenous (a single three-placed predicate for may-operate rather than 10,000 5 The LINUS system <ref> [LDG91] </ref> performs this type of transformation from relational to attribute/value format. What online ML can do for KA A Case Study 12 What online ML can do for KA A Case Study 13 one-placed predicates) and independant of the number of objects in the domain.
Reference: [MF90] <author> Stephen Muggleton and Cao Feng. </author> <title> Efficient induction of logic programs. </title> <booktitle> In alt90, </booktitle> <address> Tokyo, 1990. </address> <publisher> Ohmsha Publishers. </publisher>
Reference-contexts: MOBAL's inference engine does not apply such faulty rules (non-generative rules in the terminology of <ref> [MF90] </ref>). What online ML can do for KA A Case Study 25 Edgar Sommer. The former members, Christian Haider and Volker Klingspor, also contributed to the system development. Work on MOBAL is being conducted within the Machine Learning Toolbox.
Reference: [MF92] <author> Stephan Muggleton and Cao Feng. </author> <title> Efficient induction of logic programs. </title> <editor> In Stephen Muggleton, editor, </editor> <booktitle> Inductive Logic Programming, chapter 13, </booktitle> <pages> pages 281-298. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1992. </year>
Reference-contexts: Note that in this representation, the relation is indeterminate; a user is related with several switches and with several operations. Hence, an easy restriction for machine learning, the ij-determinate clauses <ref> [MF92] </ref>, is impossible for this application. From these characteristics we can infer the following requirements which a knowledge acquisition system has to fulfil: * The incomplete knowledge requires the system to detect missing concepts. * Learning from incomplete data is frequently handled by applying the closed world assumption. <p> It is a restriction of first order logic which can easily be graphically presented to the user. It is specialized for classification tasks. * Stand-alone relational learning algorithms such as golem <ref> [MF92] </ref> or foil [Qui90] discover rules (i.e. Horn clauses) in examples (i.e. ground facts). This list of approaches is not complete. Some approaches which are not covered by this list are protege [Mus89] or knack [KBD + 89]. If needed, they will be mentioned in the comparison.
Reference: [Mic89] <author> Donald Michie. </author> <title> New commercial oppertunities using information technology. </title> <editor> In Freksa Brauer, editor, </editor> <booktitle> Wissensbasierte Systeme, </booktitle> <pages> pages 64-71, </pages> <address> Berlin, Heidelberg, new York, Tokio, 1989. </address> <publisher> Springer. </publisher>
Reference: [Mic91] <author> Ryszard Michalski. </author> <title> Inferential learning theory as a basis for multistrategy task-adaptive learning. </title> <editor> In Michalski and Tecuci, editors, </editor> <booktitle> Multistrategy Learning. </booktitle> <institution> George Mason University, USA, </institution> <year> 1991. </year>
Reference-contexts: Learning modus: A learning algorithm can be called by the knowledge acquisition system, integrated into it, or can be completely missing. The algorithm can be a one-shot or incremental one. If several learning algorithms are integrated and can be used in different modes, this is indicated as "multistrategy" <ref> [Mic91] </ref>. Verifyability: Integrity and consistency can be manually checked by the knowledge engineer who compares the specification with the implementation or inspects the acquired model.
Reference: [Mor89] <author> Katharina Morik. </author> <title> Sloppy modeling. </title> <editor> In Katharina Morik, editor, </editor> <booktitle> Knowledge Representation and Organization in Machine Learning, </booktitle> <pages> pages 107-134. </pages> <publisher> Springer Verlag, </publisher> <address> Berlin, New York, </address> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: A knowledge acquisition system should support revisions at any step of the modeling cycle. This means to putting the burden of a 'sloppy' knowledge engineer on the system. MOBAL is a system which supports sloppy modeling <ref> [Mor89] </ref>. Section 2 briefly describes the application domain, and section 3 gives an overview of the MOBAL system. The incremental knowledge acquisition process is then detailed in section 4. Conclusions relating to the application domain and to the MOBAL system are given in section 5.
Reference: [Mor91] <author> Katharina Morik. </author> <title> Balanced cooperative modeling. </title> <editor> In Ryszard Michalski and Gheorghe Tecuci, editors, </editor> <booktitle> Proc. Workshop on Multistrategy Learning, </booktitle> <address> Harpers Ferry, </address> <year> 1991. </year> <note> also to appear in the Machine Learning Journal. </note>
Reference-contexts: The MOBAL system used here supports the balanced cooperative modeling approach <ref> [Mor91] </ref>. Many databases for attribute-value representations exist for machine learning. Among them are those from real applications. The success of machine learning can easily be illustrated by applications of algorithms using an attribute-value representation [CKB87],[Mic89], but many realistic applications require a relational representation.
Reference: [MRDE91] <author> Enrico Motta, Tim Rajan, John Domingue, and Marc Eisenstadt. </author> <title> Methodological foundations of KEATS, the knowledge engineer's assistant. </title> <journal> Knowledge Acquisition, </journal> <volume> 3(1) </volume> <pages> 21-47, </pages> <year> 1991. </year>
Reference-contexts: First, the application is specified at diverse levels and diverse aspects. Second, the operational model is designed and implemented. A similar approach is supported by keats <ref> [MRDE91] </ref>. * Repertory grids have been used especially for knowledge elicitation. Systems using these techniques are for example, kss0 [SG87] and aquinas [BB87]. * The framework of kl-one has become a standard in the field of Knowledge Representation [BS85].
Reference: [MS91] <author> Katharina Morik and Edgar Sommer. MLT deliverable 4.3.1/g: </author> <title> Balanced cooperative modelling using MOBAL 1.0: User guide. </title> <type> Technical report, </type> <institution> GMD, </institution> <month> September </month> <year> 1991. </year>
Reference-contexts: A lattice of classes is then computed from the subset relations between these sets <ref> [MS91] </ref>. For instance, MOBAL constructed the class of all employees implicit but not explicit in the data because these terms all appear in n-th place of certain facts.
Reference: [Mus89] <author> Marc Musen. </author> <title> Automated support for building and extending expert models. </title> <journal> Machine Learning, </journal> 4(3/4):347-376, 1989. Special Issue on Knowledge Acquisition edited by Sandra Marcus. 
Reference-contexts: It is specialized for classification tasks. * Stand-alone relational learning algorithms such as golem [MF92] or foil [Qui90] discover rules (i.e. Horn clauses) in examples (i.e. ground facts). This list of approaches is not complete. Some approaches which are not covered by this list are protege <ref> [Mus89] </ref> or knack [KBD + 89]. If needed, they will be mentioned in the comparison.
Reference: [Qui90] <author> J.R. Quinlan. </author> <title> Learning logical definitions from relations. </title> <journal> Machine Learning, </journal> <volume> 5(3):239 - 266, </volume> <year> 1990. </year>
Reference-contexts: Among them are those from real applications. The success of machine learning can easily be illustrated by applications of algorithms using an attribute-value representation [CKB87],[Mic89], but many realistic applications require a relational representation. Learning algorithms for relational representations in restricted first order logic have been created only recently [EHR83], <ref> [Qui90] </ref>. The MOBAL system employs a relational learning algorithm, RDT [KW92]. <p> It is a restriction of first order logic which can easily be graphically presented to the user. It is specialized for classification tasks. * Stand-alone relational learning algorithms such as golem [MF92] or foil <ref> [Qui90] </ref> discover rules (i.e. Horn clauses) in examples (i.e. ground facts). This list of approaches is not complete. Some approaches which are not covered by this list are protege [Mus89] or knack [KBD + 89]. If needed, they will be mentioned in the comparison. <p> Although a comparison of RDT and other learning algorithms is not a central topic in this paper, different algorithms can be and have been integrated into MOBAL. A brief review of testing FOIL <ref> [Qui90] </ref> on the SPEED data may be of interest. The comparison shows the effect of the closed world assumption (indicated as "completeable" in the table).
Reference: [Sch92] <institution> Special issue on the KADS approach to knowledge engineering. </institution> <note> In Guus Schreiber, </note> <editor> editor, </editor> <title> Knowledge Acquisition Journal, volume 4. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: What online ML can do for KA A Case Study 21 5.2 Knowledge Acquisition and Machine Learning In order to clarify the approach of balanced cooperative modeling illustrated by MOBAL, we compare it with other approaches to modeling, as follows: * kads [WB86] has become a most important modeling approach <ref> [Sch92] </ref> which follows a two-step procedure. First, the application is specified at diverse levels and diverse aspects. Second, the operational model is designed and implemented. A similar approach is supported by keats [MRDE91]. * Repertory grids have been used especially for knowledge elicitation.
Reference: [SG87] <author> Mildred Shaw and Brian Gaines. </author> <title> Techniques for knowledge acquisition and transfer. </title> <journal> Int. Journal of Man-Machine Studies, </journal> <volume> 27 329-35-, </volume> <year> 1987. </year> <title> What online ML can do for KA A Case Study 27 </title>
Reference-contexts: First, the application is specified at diverse levels and diverse aspects. Second, the operational model is designed and implemented. A similar approach is supported by keats [MRDE91]. * Repertory grids have been used especially for knowledge elicitation. Systems using these techniques are for example, kss0 <ref> [SG87] </ref> and aquinas [BB87]. * The framework of kl-one has become a standard in the field of Knowledge Representation [BS85]. It is a restriction of first order logic which can easily be graphically presented to the user.
Reference: [Som92] <author> E. Sommer. </author> <title> Towards rule set analysis: </title> <note> Explaining uncoveredness. to appear, </note> <year> 1992. </year>
Reference-contexts: Performance Statistics MOBAL also offers statistics about rules, which include information on other rules with the same conclusion, information on coverage and on extensional redundancy. A major direction of current work is the development of a tool for rule set analysis and subsequent restructuring <ref> [Som92] </ref>. Rule Models Another method of evaluating rules involves rule models. Every rule in MOBAL is an instance of a rule model, and several rules may be derived from one model. Rule models are special rules where the predicates are variable.
Reference: [SvMV90] <author> Edgar Sommer, Frank von Martial, and Frank Victor. Pragma: </author> <title> a system for actively capturing procedural knowledge via a graphical interface. </title> <booktitle> In Proc. </booktitle> <address> ECAI-90, </address> <year> 1990. </year>
Reference-contexts: Both, the initial design of an appropriate model and the subsequent augmentations of the domain are incremental. The call for incremental knowledge bases has a long tradition in various branches of AI, among them Office Automation (see e.g. [Bar82] <ref> [SvMV90] </ref>). In Knowledge Acquisition, however, the top-down approach of stepwise refinement is still dominating. The top-down approach requires a user to first carefully design the application before the model becomes operational. The operational model cannot be changed together with its documentation, i.e. the description of the model.
Reference: [SW90] <author> Mildred Shaw and Brian Woodward. </author> <title> Modeling expert knowledge. </title> <journal> KNowledge Acquisition, </journal> <volume> 2(3) </volume> <pages> 179-206, </pages> <year> 1990. </year>
Reference-contexts: The latter case will be indicated by " - " in the table below. These criteria are less finely grained than those used in [Boo89] and finer grained than those used in <ref> [SW90] </ref> because they are to cover machine learning, knowledge acquisition, knowledge representation or specification, and integrated systems. They need not cover all the elicitation techniques which are condensed into the criterion of data origin.
Reference: [vHB92] <author> Frank van Harmelen and John Balder. Ml2: </author> <title> A formal language for KADS models of expertise. </title> <journal> Knowledge Acquisition, </journal> <volume> 4(1):127 - 161, </volume> <year> 1992. </year>
Reference-contexts: Then, the approach becomes similar to the one illustrated by MOBAL, except that no learning tool is integrated. Therefore, Frank van Harmelen and John Balder <ref> [vHB92] </ref> proposed a formal but not operational language solwly for specification. They aim is to automatically check the consistency, completeness, and soundness of the formal specification, but this has not yet been done. Comparing MOBAL with one-shot learning algorithms means comparing two very different things.
Reference: [WB86] <author> B.J. Wielinga and J.A. Breuker. </author> <title> Models of expertise. </title> <booktitle> In Proceedings of ECAI-86, </booktitle> <pages> pages 306 - 318, </pages> <year> 1986. </year>
Reference-contexts: What online ML can do for KA A Case Study 21 5.2 Knowledge Acquisition and Machine Learning In order to clarify the approach of balanced cooperative modeling illustrated by MOBAL, we compare it with other approaches to modeling, as follows: * kads <ref> [WB86] </ref> has become a most important modeling approach [Sch92] which follows a two-step procedure. First, the application is specified at diverse levels and diverse aspects. Second, the operational model is designed and implemented.
Reference: [Wet90] <author> Thomas Wetter. </author> <title> First order logic foundation of the KADS conceptual model. </title> <editor> In Bob Wielinga, John Boose, Brian Gaines, Guus Schreiber, and Maarten van Someren, editors, </editor> <booktitle> Current Trends in Knowledge Acquisition, pages 356- 375. </booktitle> <publisher> IOS, </publisher> <address> Amsterdam, Washington, Tokyo, </address> <year> 1990. </year>
Reference-contexts: The inference engine of MOBAL, with data dependency handling, detects contradictions of facts and finds the rules and facts which produced the contradiction. As soon as the conceptual model becomes operational by using a representation formalism (as proposed in <ref> [Wet90] </ref> or [KVRD91]), the distinction between the conceptual and the design model vanishes. Then, the approach becomes similar to the one illustrated by MOBAL, except that no learning tool is integrated. Therefore, Frank van Harmelen and John Balder [vHB92] proposed a formal but not operational language solwly for specification.
Reference: [Wro90] <author> Stefan Wrobel. </author> <title> Design goals for sloppy modeling systems. </title> <editor> In John Boose and Brian Gaines, editors, </editor> <booktitle> The Foundations of Knowledge Acquisition, </booktitle> <pages> pages 357 - 373. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1990. </year> <note> Also appeared in Intern. Journal of Man-Machine Studies. </note>
Reference-contexts: Consequently, the existence of a distinct class 8 in the taxonomy shows the user that there are some covers facts missing in the knowledge base. Once these are entered, class 8 disappears from the taxonomy. Another way of discovering implicit concepts is handled by MOBAL's concept learning component CLT <ref> [Wro90] </ref>. In the SPEED application, MOBAL discovered that the set of terms the user called "employees" could be partitioned into subsets according to which operations they were permitted to perform. This resulted in two concepts, concept1 and concept2. <p> In this case, MOBAL's What online ML can do for KA A Case Study 19 knowledge revision component KRT must be invoked <ref> [Wro90] </ref>. In the course of knowledge revision, KRT offers suggestions as to the responsible rule (blame assignment) and disallows the offending fact by noting it as an exception to the rule.
Reference: [Wroon] <author> Stefan Wrobel. </author> <title> Representation adjustment by demand-driven concept formation. </title> <note> in preparation. </note>
Reference-contexts: Then more involved revising becomes necessary, in which the rule is reformulated so that it no longer covers the exceptions. This may involve searching for new concepts to distinguish between exceptions and correct applications, which is handled by CLT <ref> [Wroon] </ref>. 4.8 Adding Knowledge The facilities for adding new knowledge have basically been described in the previous sections, because in an incremental system such as MOBAL, it makes no difference whether changes in the knowledge base are caused by inference (translation, generation, learned rules, input rules), retraction, revision, reading in or
References-found: 35

