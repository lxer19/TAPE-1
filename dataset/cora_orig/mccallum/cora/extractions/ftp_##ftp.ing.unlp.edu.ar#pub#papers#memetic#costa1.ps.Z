URL: ftp://ftp.ing.unlp.edu.ar/pub/papers/memetic/costa1.ps.Z
Refering-URL: http://www.ing.unlp.edu.ar/cetad/mos/memetic_home.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An evolutionary tabu search algorithm and the NHL scheduling problem  
Author: Daniel Costa 
Keyword: Combinatorial optimization, genetic algorithms, natural evolution, tabu search, scheduling.  
Date: May 5, 1994  
Address: ORWP 92-11  
Affiliation: Departement de Mathematiques Ecole Polytechnique Federale de Lausanne  
Abstract: We present in this paper a new evolutionary procedure for solving general optimization problems that combines efficiently the mechanisms of genetic algorithms and tabu search. In order to explore the solution space properly interaction phases are interspersed with periods of optimization in the algorithm. An adaptation of this search principle to the National Hockey League (NHL) problem is discussed. The hybrid method developed in this paper is well suited for Open Shop Scheduling problems (OSSP). The results obtained appear to be quite satisfactory. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Booker L.,"Improving Search in Genetic Algorithms", </editor> <title> Genetic Algorithms and Simulated Annealing, </title> <editor> ed. </editor> <publisher> Davis (Pitman, London and Morgan Kaufmann Publishers, Inc., </publisher> <year> 1987), </year> <pages> 61-73. </pages>
Reference-contexts: Descendants of GAs embody more and more an evolution that goes beyond the connotations of the term "genetic" [11]. Most of the innovations result from the introduction of problem specific knowledge into standard GAs which have shown their limits when applied to constrained optimization problems <ref> [1] </ref>. Grefenstette [14] has shown that it is possible to exploit problem specific knowledge in virtually every phase of a GA. Another trend in the evolution of GAs that goes somewhat in the same direction is the incorporation of local search heuristics into GAs.
Reference: [2] <institution> Costa D.,"On the use of some known methods for T-colorings of graphs", </institution> <note> Annals of Operations Research 41 (1993), 343-358. </note>
Reference-contexts: Both methods would appear to be appropriate for the scheduling problem treated in this paper. However we will concentrate on TS since it seems to be more efficient than SA. The superiority of TS over SA was shown in <ref> [2, 18] </ref> when dealing with problems related to graph coloring. We expect the same conclusion with other types of COPs. Detailed explanations about the SA procedure can be found in the technical literature [3, 20]. The basic ideas of TS are sketched in section 3. <p> To diversify a bit the exploration in the search space once in a while, the size of the tabu list is randomly generated between two given bounds t min and t max <ref> [2] </ref>. The aspiration criterion presented in section 3 has been slightly modified in this adaptation of TS.
Reference: [3] <author> Eglese R.W.,"Simulated Annealing: </author> <title> A tool for Operational Research", </title> <booktitle> European J. of Operational Research 46 (1990), </booktitle> <pages> 271-281. </pages>
Reference-contexts: The superiority of TS over SA was shown in [2, 18] when dealing with problems related to graph coloring. We expect the same conclusion with other types of COPs. Detailed explanations about the SA procedure can be found in the technical literature <ref> [3, 20] </ref>. The basic ideas of TS are sketched in section 3. We present in section 4 a mixed optimization method developed by Moscato [22]. In this approach periods of separate search are interspersed with interaction phases.
Reference: [4] <author> Ferland J.A., </author> <title> Fleurent C.,"Computer aided scheduling for a sport league, </title> <booktitle> INFOR 29-1 (1991), </booktitle> <pages> 14-25. </pages>
Reference-contexts: His conclusion was: "Due to the unpredictability of some constraints and the human relationships involved in others, it is impractical to expect that a computer program will ever produce a final schedule which would require no tuning or adjustment". J. Ferland and C. Fleurent <ref> [4] </ref> on a second attempt proposed a decision support system for building the schedule in an interactive manner. <p> Various computational experiments are reported at the end of this section. 6.1 Generation of an initial population of schedules The method we adopted to generate an initial schedule is somewhat similar to the one presented in <ref> [4] </ref>. Road trips are built sequentially for each team in the League while meeting every essential constraint.
Reference: [5] <author> Fleurent C., Ferland J.A., </author> <title> "Allocating games for the NHL using integer programming", </title> <note> Operations Research 41-4 (1993), 649-654. </note>
Reference-contexts: All teams play 4 games (2H,2A) against each of the teams in the other Division of their Conference and 2 games (1H,1A) against each of the teams in the other Conference. A procedure based on integer linear programming to generate game allocation scenarios is proposed in <ref> [5] </ref>. The season begins in early October and ends in early April (26-28 weeks). In 1992-93, the NHL and the NHL Players' Association decided to play extra games in neutral sites for promotional purposes. For the second successive year, teams play two games in non-NHL cities during the 1993-94 season.
Reference: [6] <author> Fraser W., </author> <title> "The role of computer simulation in building the National Hockey League Schedule", IBM Canada Limited, </title> <address> Montreal, Quebec, Canada (1982). </address>
Reference-contexts: Some changes are performed by the team managers to allow the central scheduler to find a final schedule satisfying the requirements of all the clubs in the League. To our knowledge the NHL scheduling problem has already been tackled twice in the literature. W. Fraser <ref> [6] </ref> developed a `road trip simulator' module which has proven to be rather inflexible for properly scheduling all games.
Reference: [7] <author> Goldberg D.E., </author> <title> "Genetic algorithms in search, optimization, and machine learning", </title> <publisher> Addison Wesley (1989). </publisher>
Reference-contexts: This evolutionary approach, developed by Holland [19] in the 70's, is applicable to a broad range of COPs. It is beyond the scope of this article to present GAs in detail. We sketch here the mechanisms of a simple GA. General explanations about GAs can be found in <ref> [7, 21] </ref>. Let us first make a short comment regarding the terminology which will subsequently be used. The objective function f is often called fitness function in the GAs literature. <p> Roughly speaking this theorem says that highly fit, short-defining-length substrings (we call them building blocks) are propagated generation to generation by giving exponentially increasing samples to the observed best (see <ref> [7] </ref> for more details). The field of GAs has kept evolving since the first developments by Holland. Descendants of GAs embody more and more an evolution that goes beyond the connotations of the term "genetic" [11].
Reference: [8] <author> Glover F., </author> <title> "Future paths for integer programming and links to artificial intelligence", </title> <booktitle> Computers and Operations Research 13 (1986), </booktitle> <pages> 533-549. 21 </pages>
Reference-contexts: However, the principles underlying the two algorithms are fundamentally different. Whereas GAs deal with a population of solutions evolving naturally, TS consists of an iterative search procedure on individual solutions. This technique was developed independently by Glover <ref> [8] </ref> and Hansen and Jaumard [16]. For a good introduction to TS, the reader is referred to [9, 10, 12, 25]. Let us define the notion of neighborhood N (s) for each solution s in X.
Reference: [9] <author> Glover F., </author> <note> "Tabu search-part I", ORSA Journal on Computing 1 (1989), 190-206. </note>
Reference-contexts: Whereas GAs deal with a population of solutions evolving naturally, TS consists of an iterative search procedure on individual solutions. This technique was developed independently by Glover [8] and Hansen and Jaumard [16]. For a good introduction to TS, the reader is referred to <ref> [9, 10, 12, 25] </ref>. Let us define the notion of neighborhood N (s) for each solution s in X. By definition N (s) is the set of solutions in X reachable from s via a slight modification m.
Reference: [10] <author> Glover F., </author> <title> "Tabu search-part II", </title> <journal> ORSA Journal on Computing 2 (1990), </journal> <pages> 4-32. </pages>
Reference-contexts: Whereas GAs deal with a population of solutions evolving naturally, TS consists of an iterative search procedure on individual solutions. This technique was developed independently by Glover [8] and Hansen and Jaumard [16]. For a good introduction to TS, the reader is referred to <ref> [9, 10, 12, 25] </ref>. Let us define the notion of neighborhood N (s) for each solution s in X. By definition N (s) is the set of solutions in X reachable from s via a slight modification m.
Reference: [11] <author> Glover F., </author> <title> "Scatter Search and Star-Paths : Beyond the genetic metaphor", </title> <type> Working Paper, </type> <institution> University of Colorado, Boulder (1993). </institution>
Reference-contexts: The field of GAs has kept evolving since the first developments by Holland. Descendants of GAs embody more and more an evolution that goes beyond the connotations of the term "genetic" <ref> [11] </ref>. Most of the innovations result from the introduction of problem specific knowledge into standard GAs which have shown their limits when applied to constrained optimization problems [1]. Grefenstette [14] has shown that it is possible to exploit problem specific knowledge in virtually every phase of a GA.
Reference: [12] <author> Glover F.,Taillard E., </author> <title> de Werra D.,"A user's guide to tabu search", </title> <journal> Annals of Operations Research 41 (1993), </journal> <pages> 3-38. </pages>
Reference-contexts: Whereas GAs deal with a population of solutions evolving naturally, TS consists of an iterative search procedure on individual solutions. This technique was developed independently by Glover [8] and Hansen and Jaumard [16]. For a good introduction to TS, the reader is referred to <ref> [9, 10, 12, 25] </ref>. Let us define the notion of neighborhood N (s) for each solution s in X. By definition N (s) is the set of solutions in X reachable from s via a slight modification m.
Reference: [13] <author> Gonzales T., </author> <title> Sahni S.,"Open Shop Scheduling to minimize Finish Time", </title> <journal> Journal of the Association for Computing Machinery 23-4 (1976), </journal> <pages> 665-679. </pages>
Reference-contexts: of the algorithm have not been carried out in this study. 6.6 A variant of the NHL problem The NHL problem can be seen as a generalization of two problems commonly related in the technical literature: the multi-person traveling salesman problem (m-TSP) [15] and the open shop scheduling problem (OSSP) <ref> [13] </ref>. In order to demonstrate the effectiveness of ETS method in a more general way we generate here a variant of the NHL problem that can be seen as a multiple-constraint preemptive OSSP.
Reference: [14] <editor> Grefenstette J.,"Incorporating Problem Specific Knowledge into Genetic Algorithms", </editor> <title> Genetic Algorithms and Simulated Annealing, </title> <editor> ed. </editor> <publisher> Davis (Pitman, London and Morgan Kaufmann Publishers, Inc., </publisher> <year> 1987), </year> <pages> 42-60. </pages>
Reference-contexts: Descendants of GAs embody more and more an evolution that goes beyond the connotations of the term "genetic" [11]. Most of the innovations result from the introduction of problem specific knowledge into standard GAs which have shown their limits when applied to constrained optimization problems [1]. Grefenstette <ref> [14] </ref> has shown that it is possible to exploit problem specific knowledge in virtually every phase of a GA. Another trend in the evolution of GAs that goes somewhat in the same direction is the incorporation of local search heuristics into GAs.
Reference: [15] <author> Gromicho J., Paix~ao, </author> <title> Bronco I.,"Exact Solution of Multiple Traveling Salesman Problems",Combinatorial Optimization (New Frontiers in Theory and Practice), </title> <booktitle> NATO ASI Serie F, </booktitle> <volume> Vol. </volume> <month> 82 </month> <year> (1992). </year>
Reference-contexts: Investigations to evaluate the speed-up of the algorithm have not been carried out in this study. 6.6 A variant of the NHL problem The NHL problem can be seen as a generalization of two problems commonly related in the technical literature: the multi-person traveling salesman problem (m-TSP) <ref> [15] </ref> and the open shop scheduling problem (OSSP) [13]. In order to demonstrate the effectiveness of ETS method in a more general way we generate here a variant of the NHL problem that can be seen as a multiple-constraint preemptive OSSP.
Reference: [16] <author> Hansen P., Jaumard B., </author> <title> "Algorithms for the maximum satisfiability problem", </title> <note> RUT-COR Research Report 43-87, </note> <institution> Rutgers University (1987). </institution>
Reference-contexts: However, the principles underlying the two algorithms are fundamentally different. Whereas GAs deal with a population of solutions evolving naturally, TS consists of an iterative search procedure on individual solutions. This technique was developed independently by Glover [8] and Hansen and Jaumard <ref> [16] </ref>. For a good introduction to TS, the reader is referred to [9, 10, 12, 25]. Let us define the notion of neighborhood N (s) for each solution s in X. By definition N (s) is the set of solutions in X reachable from s via a slight modification m.
Reference: [17] <author> Hertz A., </author> <title> "Finding a feasible course schedule using tabu search", </title> <booktitle> Discrete Applied Mathematics 35 (1992), </booktitle> <pages> 255-270. </pages>
Reference-contexts: The size and the structure of X, as well as the complexity of f , result directly from the way of partitioning the set C. Some criteria are presented in <ref> [17] </ref>. A game should never be scheduled on a day if such an assignement induces nothing but an unacceptable schedule. On the other hand a conflict between two games is not a sufficient condition for hindering an assignement.
Reference: [18] <author> Hertz A.,de Werra D., </author> <title> "Using tabu search techniques for graph coloring", </title> <booktitle> Computing 39 (1987), </booktitle> <pages> 345-351. </pages>
Reference-contexts: Both methods would appear to be appropriate for the scheduling problem treated in this paper. However we will concentrate on TS since it seems to be more efficient than SA. The superiority of TS over SA was shown in <ref> [2, 18] </ref> when dealing with problems related to graph coloring. We expect the same conclusion with other types of COPs. Detailed explanations about the SA procedure can be found in the technical literature [3, 20]. The basic ideas of TS are sketched in section 3.
Reference: [19] <author> Holland J.H., </author> <booktitle> "Adaptation in natural and artificial systems", </booktitle> <address> Ann Arbor: </address> <publisher> University of Michigan Press (1975). </publisher>
Reference-contexts: We show also that our procedure is well suited for solving preemptive 2 Open Shop Scheduling problems (OSSP) derived from the NHL problem. 2 Genetic Algorithms Genetic algorithms define an optimization strategy derived from natural evolution rules. This evolutionary approach, developed by Holland <ref> [19] </ref> in the 70's, is applicable to a broad range of COPs. It is beyond the scope of this article to present GAs in detail. We sketch here the mechanisms of a simple GA. General explanations about GAs can be found in [7, 21].
Reference: [20] <author> Kirkpatrick S., </author> <title> Gelatt C.D., Vecchi M.P.,"Optimization by Simulated Annealing", </title> <booktitle> Science 220 (1983), </booktitle> <pages> 671-680. </pages>
Reference-contexts: The superiority of TS over SA was shown in [2, 18] when dealing with problems related to graph coloring. We expect the same conclusion with other types of COPs. Detailed explanations about the SA procedure can be found in the technical literature <ref> [3, 20] </ref>. The basic ideas of TS are sketched in section 3. We present in section 4 a mixed optimization method developed by Moscato [22]. In this approach periods of separate search are interspersed with interaction phases.
Reference: [21] <author> Liepins G.E., </author> <title> Hilliard M.R.,"Genetic Algorithms: </title> <booktitle> Foundations and Applications", Annals of Operations Research 21 (1989), </booktitle> <pages> 31-58. </pages>
Reference-contexts: This evolutionary approach, developed by Holland [19] in the 70's, is applicable to a broad range of COPs. It is beyond the scope of this article to present GAs in detail. We sketch here the mechanisms of a simple GA. General explanations about GAs can be found in <ref> [7, 21] </ref>. Let us first make a short comment regarding the terminology which will subsequently be used. The objective function f is often called fitness function in the GAs literature.
Reference: [22] <editor> Moscato P.,"An introduction to population approaches for optimization and hierarchical objective functions: </editor> <title> A discussion on the role of tabu search", </title> <journal> Annals of Operations Research 41 (1993), </journal> <pages> 85-121. </pages>
Reference-contexts: We expect the same conclusion with other types of COPs. Detailed explanations about the SA procedure can be found in the technical literature [3, 20]. The basic ideas of TS are sketched in section 3. We present in section 4 a mixed optimization method developed by Moscato <ref> [22] </ref>. In this approach periods of separate search are interspersed with interaction phases. After having discussed the advantages of this mixed strategy we consider in section 5 a highly constrained COP: the National Hockey League (NHL) scheduling problem. <p> The question which now arises naturally is the following: "Can TS and GAs be combined efficiently to create a new hybrid strategy taking advantage of their complementary features ?" The answer is yes. Such a concept was developed recently by Moscato <ref> [22] </ref> for tackling some test problems. His model is based on a set of individuals, called agents, which are arranged topologically around a `ring'. Periods of competition, cooperation 6 and individual optimization intersperse throughout the process according to well defined rules.
Reference: [23] <author> Muhlenbein H.,Georges-Schleuter M., </author> <title> Kramer O.,"Evolution Algorithms in Combinatorial Optimization", </title> <booktitle> Parallel Computing 7 (1988), </booktitle> <pages> 65-88. </pages>
Reference-contexts: Grefenstette [14] has shown that it is possible to exploit problem specific knowledge in virtually every phase of a GA. Another trend in the evolution of GAs that goes somewhat in the same direction is the incorporation of local search heuristics into GAs. Muhlenbein et al <ref> [23] </ref> had some success in developing parallel GAs that allow individuals in the population to improve their fitness by local improvement. 4 3 Tabu search In the same spirit as GAs, TS is a general heuristic devised for solving large COPs.
Reference: [24] <author> Perusch M., </author> <title> "Simulated Annealing applied to a single machine scheduling problem with sequence dependent set up times and due dates", Research Report 86-84, Techis-che Universitat Graz (1986). [25] de Werra D.,Hertz A.,"Tabu search techniques: a tutorial and an application to neural networks", </title> <booktitle> OR Spektrum 11 (1989), </booktitle> <pages> 131-141. 22 </pages>
Reference-contexts: The distance d kl (in hundred of miles) between team k and team l (k; l 2 J ) refers now to the set up cost for a machine M i to process T il after T ik (cf <ref> [24] </ref> for an application of such a model). Every machine needs a maintenance service once in a while.
References-found: 24

