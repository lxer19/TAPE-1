URL: http://www.cs.arizona.edu/people/toni/papers/resolution-focs96.ps
Refering-URL: http://www.cs.arizona.edu/people/toni/
Root-URL: http://www.cs.arizona.edu
Email: beame@cs.washington.edu  toni@cs.arizona.edu  
Title: Simplified and Improved Resolution Lower Bounds  
Author: Paul Beame Toniann Pitassi 
Address: Box 352350 Seattle, WA 98195  Tucson, AZ 85721  
Affiliation: Computer Science and Engineering University of Washington  Computer Science Department University of Arizona  
Abstract: We give simple new lower bounds on the lengths of Resolution proofs for the pigeonhole principle and for randomly generated formulas. For random formulas, our bounds significantly extend the range of formula sizes for which non-trivial lower bounds are known. For example, we show that with probability approaching 1, any Resolution refutation of a randomly chosen 3-CNF formula with at most n 6=5* clauses requires exponential size. Previous bounds applied only when the number of clauses was at most linear in the number of variables. For the pigeonhole principle our bound is a small improvement over previous bounds. Our proofs are more elementary than previous arguments, and establish a connection between Resolution proof size and maximum clause size. 
Abstract-found: 1
Intro-found: 1
Reference: [BFU] <author> Broder, A., Frieze, A., and Upfal, E., </author> <title> "On the sat-isfiability and maximum satisfiability of random 3-CNF formulas," </title> <booktitle> Proceedings of the Fourth ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1993. </year>
Reference-contexts: This is well-explained by some important theoretical results. Namely, it is shown in [FS] that if we generate a 3-CNF formula at random with at most 3:003n clauses, then with high probability f is satisfiable. (See <ref> [CRe, CF, BFU] </ref> for previous satisfiability results.) Moreover, to prove their results, [FS], as well as earlier papers, actually exhibit probabilistic, linear-time Resolution-based algorithms that will find a satisfying assignment almost certainly.
Reference: [B] <author> Buss, S. </author> <title> "Polynomial size proofs of the propositional pigeonhole principle," </title> <journal> Journal of Symbolic Logic, v. </journal> <volume> 52 (1987), </volume> <pages> pp. 916-927. </pages>
Reference: [BP] <author> Buss, S., and Pitassi, T., </author> <title> "Resolution and the weak pigeonhole principle," </title> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: Buss and Pitassi <ref> [BP] </ref> showed that there exists a Resolution refutation of :P HP m n when m 2 p n log n of size 2 n log n . However, when m is polynomial in n, we conjecture that any Resolution refutation of :P HP m n requires superpolynomial size.
Reference: [BT] <author> Buss, S., and Turan , G., </author> <title> "Resolution proofs of generalized pigeonhole principles," </title> <booktitle> Theoretical Computer Science, 62 (1988) pp. </booktitle> <pages> 311-317. </pages>
Reference-contexts: We note that this improves somewhat upon Haken's bound of 2 n=577 although our major interest is in its simpler proof rather than in the better size bound. Buss and Turan <ref> [BT] </ref> extend Haken's argument to show that :P HP m n requires superpolynomial size Res olution lower bounds as long as m &lt; n 2 = log n.
Reference: [CF] <author> Chao, M.T., and Franco, J., </author> <title> "Probabilistic analysis of a generalization of the unit-clause literal selection heuristics," </title> <journal> Information Science, </journal> <volume> 51, </volume> <year> 1990, </year> <pages> pp. 289-314. </pages>
Reference-contexts: This is well-explained by some important theoretical results. Namely, it is shown in [FS] that if we generate a 3-CNF formula at random with at most 3:003n clauses, then with high probability f is satisfiable. (See <ref> [CRe, CF, BFU] </ref> for previous satisfiability results.) Moreover, to prove their results, [FS], as well as earlier papers, actually exhibit probabilistic, linear-time Resolution-based algorithms that will find a satisfying assignment almost certainly.
Reference: [CEI] <author> Clegg, M., Edmonds, J., and Impagliazzo, J., </author> <title> "Using the Grobner basis algorithm to find proofs of un-satisfiability," </title> <booktitle> Proceedings of the 28th ACM Symposium on Theory of Computing, </booktitle> <year> 1996, </year> <pages> pp. 174-183. </pages>
Reference-contexts: The inspiration for our lower bounds are recent deterministic simulations of Resolution, due to Clegg, Edmonds and Impagliazzo <ref> [CEI] </ref>. These simulations are, in a sense, universal search procedures for Resolution proofs in that they work reasonably well whenever any Resolution-based procedure would succeed. <p> Often these proofs do not reuse derived clauses and such proofs are called tree-like Resolution proofs, since the graph representation for such a proof is a tree. The size of a Resolution refutation is the number of clauses in the derivation. Recently Clegg, Edmonds, and Impagliazzo <ref> [CEI] </ref> showed how to search deterministically for a Resolu tion proof of size S in time 2 O ( p n log S log n ). <p> Because his refutation is tree-like, the above simulation shows that there is a quasipolyno-mial time algorithm that almost certainly finds refutations of 3-CNF formulas with more than 2n 2 =3 clauses. In the general case we remove large clauses rather than high degree terms as was in done in <ref> [CEI] </ref>.
Reference: [CRe] <author> Chvatal , V., Reed, B., </author> <title> "Mick gets some (the odds are on his side)," </title> <booktitle> Proceedings of the 33rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 620-627, </pages> <year> 1992. </year>
Reference-contexts: This is well-explained by some important theoretical results. Namely, it is shown in [FS] that if we generate a 3-CNF formula at random with at most 3:003n clauses, then with high probability f is satisfiable. (See <ref> [CRe, CF, BFU] </ref> for previous satisfiability results.) Moreover, to prove their results, [FS], as well as earlier papers, actually exhibit probabilistic, linear-time Resolution-based algorithms that will find a satisfying assignment almost certainly.
Reference: [CS] <author> Chvatal , V., Szemeredi , E., </author> <title> "Many hard examples for Resolution," </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> Vol. 35, </volume> <pages> pp. 759-768, </pages> <year> 1988. </year>
Reference-contexts: Many researchers also use rather straightforward implementations of Resolution as theorem provers, although in this case the theoretical justification is not so evident. One important test case is to consider randomly generated k-CNF formulas with larger numbers of clauses. It is not hard to show <ref> [CS] </ref> that if there are more than 2 k n ln 2 clauses then a random k-CNF formula is almost certainly unsatisfiable (and for 3-CNF formulas this has been improved in [FP, KMPS] with the latter showing that this holds for as little as 4:758n clauses.) In a beautiful paper, Chvatal <p> there are more than 2 k n ln 2 clauses then a random k-CNF formula is almost certainly unsatisfiable (and for 3-CNF formulas this has been improved in [FP, KMPS] with the latter showing that this holds for as little as 4:758n clauses.) In a beautiful paper, Chvatal and Szemeredi <ref> [CS] </ref> showed that Resolution-based theorem-provers must perform badly on such random formulas provided the number of clauses is not too large. <p> show that almost certainly any 3-CNF formula with O (n) clauses requires an exponential length Resolution refutation (even ignoring the complexity of searching for it.) Fu [Fu] recently extended this lower bound to apply when the number of clauses is larger but for 3-CNF formulas it is no improvement on <ref> [CS] </ref>. In this paper, we give new lower bounds for Resolution refutations that are notably simpler than previous proofs. We show, among other things, that random k CNF formulas are hard for Resolution well outside the range of clause/variable ratios implied by the results of [CS]. <p> it is no improvement on <ref> [CS] </ref>. In this paper, we give new lower bounds for Resolution refutations that are notably simpler than previous proofs. We show, among other things, that random k CNF formulas are hard for Resolution well outside the range of clause/variable ratios implied by the results of [CS]. In particular, we show that for any * &gt; 0, when m n 6=5* , with high probability a random 3-CNF formula with m clauses and n variables requires an exponential size Resolution refutation. <p> The original lower bounds for general Resolution use the "bottleneck counting" argument of Haken [H]. This was introduced in [H] to show exponential lower bounds for Resolution refutations of the pigeonhole principle and further developed in [U] and <ref> [CS] </ref> to give more general bounds on Resolution refutations. (Most recently it was used to prove monotone circuit lower bounds [H2].) The bottleneck counting idea is fundamentally very simple. Each clause in the proof is viewed as allowing certain truth assignments to flow through it, namely those that it falsifies. <p> Proof: The argument is similar to the proof of (x; y)-sparsity of F in <ref> [CS] </ref> with two exceptions. Firstly, we do not have to worry about small sets for (xn=2; xn; y)-sparsity and secondly, we have to take into account effects of the restriction . Let S be a fixed subset of the n variables of size s xn.
Reference: [CR] <author> Cook, S., Reckhow, R., </author> <title> "The relative efficiency of propositional proof systems," </title> <journal> Journal of Symbolic Logic, </journal> <volume> 44, </volume> <year> 1979, </year> <pages> pp. 36-50. </pages>
Reference: [FP] <author> Franco, J., and Pauli, M., </author> <title> "Probabilistic analysis of the Davis Putnam procedure for solving the satisfi-ability problem," </title> <journal> Discrete Applied Mathematics, </journal> <volume> 5, </volume> <year> 1983, </year> <month> pp.77-87. </month>
Reference-contexts: It is not hard to show [CS] that if there are more than 2 k n ln 2 clauses then a random k-CNF formula is almost certainly unsatisfiable (and for 3-CNF formulas this has been improved in <ref> [FP, KMPS] </ref> with the latter showing that this holds for as little as 4:758n clauses.) In a beautiful paper, Chvatal and Szemeredi [CS] showed that Resolution-based theorem-provers must perform badly on such random formulas provided the number of clauses is not too large.
Reference: [FS] <author> Frieze, A., and Suen, S., </author> <title> "Analysis of simple heuristics for random instances of 3SAT," </title> <type> Manuscript, </type> <year> 1993. </year>
Reference-contexts: It is an empirical observation that rather straightforward implementations of Resolution work well as satisfiability testers for many 3-SAT problems. This is well-explained by some important theoretical results. Namely, it is shown in <ref> [FS] </ref> that if we generate a 3-CNF formula at random with at most 3:003n clauses, then with high probability f is satisfiable. (See [CRe, CF, BFU] for previous satisfiability results.) Moreover, to prove their results, [FS], as well as earlier papers, actually exhibit probabilistic, linear-time Resolution-based algorithms that will find a <p> This is well-explained by some important theoretical results. Namely, it is shown in <ref> [FS] </ref> that if we generate a 3-CNF formula at random with at most 3:003n clauses, then with high probability f is satisfiable. (See [CRe, CF, BFU] for previous satisfiability results.) Moreover, to prove their results, [FS], as well as earlier papers, actually exhibit probabilistic, linear-time Resolution-based algorithms that will find a satisfying assignment almost certainly. Many researchers also use rather straightforward implementations of Resolution as theorem provers, although in this case the theoretical justification is not so evident.
Reference: [Fu] <author> Fu, X. </author> <title> "On the complexity of proof systems," </title> <type> PhD Thesis, </type> <institution> University of Toronto, </institution> <year> 1995. </year>
Reference-contexts: In particular, they show that almost certainly any 3-CNF formula with O (n) clauses requires an exponential length Resolution refutation (even ignoring the complexity of searching for it.) Fu <ref> [Fu] </ref> recently extended this lower bound to apply when the number of clauses is larger but for 3-CNF formulas it is no improvement on [CS]. In this paper, we give new lower bounds for Resolution refutations that are notably simpler than previous proofs. <p> Since the base case is 1, we get time roughly n log S . Fu <ref> [Fu] </ref> has shown that any 3-CNF formula with more than 2n 2 =3 clauses has a linear size Resolution refutation. <p> Xudong Fu <ref> [Fu] </ref> used the same technique and extended the range of number of clauses for which exponential lower bounds apply to m n (k1)=4 . (For k 5 this is no improvement.) We now give a simpler proof of the lower bound for random k-CNF formulas. <p> It also remains to close the gap between the range of the number of clauses where we have nontrivial lower bounds for random k-CNF formulas and those where we have good upper bounds. The best upper bounds for random k-CNF formulas currently known are due to Fu <ref> [Fu] </ref> who shows that there is a constant c k such that random k-CNF formulas with at least c k n k1 clauses have short Resolution proofs almost certainly. It would be interesting to know whether or not this property has a strong threshold behavior.
Reference: [H] <author> Haken, A. </author> <title> "The intractability of Resolution," </title> <journal> Theoretical Computer Science, </journal> <volume> 39, </volume> <year> 1985. </year> <pages> pp. 297-308. </pages>
Reference-contexts: This inspires our lower bounds since proving a lower bound for Resolution becomes a matter of showing that this particular simulation cannot terminate very quickly. The original lower bounds for general Resolution use the "bottleneck counting" argument of Haken <ref> [H] </ref>. This was introduced in [H] to show exponential lower bounds for Resolution refutations of the pigeonhole principle and further developed in [U] and [CS] to give more general bounds on Resolution refutations. (Most recently it was used to prove monotone circuit lower bounds [H2].) The bottleneck counting idea is fundamentally <p> This inspires our lower bounds since proving a lower bound for Resolution becomes a matter of showing that this particular simulation cannot terminate very quickly. The original lower bounds for general Resolution use the "bottleneck counting" argument of Haken <ref> [H] </ref>. This was introduced in [H] to show exponential lower bounds for Resolution refutations of the pigeonhole principle and further developed in [U] and [CS] to give more general bounds on Resolution refutations. (Most recently it was used to prove monotone circuit lower bounds [H2].) The bottleneck counting idea is fundamentally very simple. <p> Note that the number of clauses in :P HP m n is m As in the lower bound proof of Haken <ref> [H] </ref>, a truth assignment to the underlying variables P i;j is critical if it defines a one-to-one, onto map from n 1 pigeons to n 1 holes, with the remaining pigeon not mapped to any hole. A critical assignment where i is the pigeon left out is called i-critical. <p> But this contradicts the following lemma (originally due to Haken <ref> [H] </ref>) which states that such a refutation must have a clause of size 2 (n 0 ) 2 =9 &gt; 2 (0:45n 2 )=9 = n 2 =10. Lemma 1: Any Resolution refutation of :P HP n n1 must have a clause with 2n 2 =9 literals. <p> The argument presented here can be modified to re-prove their result. 4 Lower Bounds for Random k-CNF formulas Chvatal and Szemeredi applied the bottleneck counting technique of Haken <ref> [H] </ref> as formalized by Urquhart [U] to prove that random k-CNF formulas with at most cn clauses, for any constant c, require exponential size Resolution proofs.
Reference: [H2] <author> Haken, A. </author> <title> "Counting bottlenecks to show monotone P 6= N P ," Proceedings of 36th Symposium on Foundations of Computer Science, </title> <booktitle> 1995, </booktitle> <pages> pp. 36-40. </pages>
Reference-contexts: This was introduced in [H] to show exponential lower bounds for Resolution refutations of the pigeonhole principle and further developed in [U] and [CS] to give more general bounds on Resolution refutations. (Most recently it was used to prove monotone circuit lower bounds <ref> [H2] </ref>.) The bottleneck counting idea is fundamentally very simple. Each clause in the proof is viewed as allowing certain truth assignments to flow through it, namely those that it falsifies.
Reference: [KMPS] <author> Kamath, A., Motwani, R., Palem, K., and Spi-rakis, P., </author> <title> "Tail bounds for occupancy and the sat-isfiability threshold conjecture," </title> <booktitle> Proceedings from the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994, </year> <pages> pp. 592-603. </pages>
Reference-contexts: It is not hard to show [CS] that if there are more than 2 k n ln 2 clauses then a random k-CNF formula is almost certainly unsatisfiable (and for 3-CNF formulas this has been improved in <ref> [FP, KMPS] </ref> with the latter showing that this holds for as little as 4:758n clauses.) In a beautiful paper, Chvatal and Szemeredi [CS] showed that Resolution-based theorem-provers must perform badly on such random formulas provided the number of clauses is not too large.
Reference: [T] <author> Tseitin, G.S. </author> <title> "On the complexity of derivations in the propositional calculus," Studies in Mathematics and Mathematical Logic, Part II, A.O. </title> <editor> Slisenko, ed., </editor> <year> 1970, </year> <pages> pp. 115-125. </pages>
Reference: [U] <author> Urquhart, A., </author> <title> "Hard examples for Resolution," </title> <journal> Journal of ACM, </journal> <volume> Vol. 34, </volume> <year> 1987, </year> <pages> pp. 209-219. </pages>
Reference-contexts: The original lower bounds for general Resolution use the "bottleneck counting" argument of Haken [H]. This was introduced in [H] to show exponential lower bounds for Resolution refutations of the pigeonhole principle and further developed in <ref> [U] </ref> and [CS] to give more general bounds on Resolution refutations. (Most recently it was used to prove monotone circuit lower bounds [H2].) The bottleneck counting idea is fundamentally very simple. <p> The argument presented here can be modified to re-prove their result. 4 Lower Bounds for Random k-CNF formulas Chvatal and Szemeredi applied the bottleneck counting technique of Haken [H] as formalized by Urquhart <ref> [U] </ref> to prove that random k-CNF formulas with at most cn clauses, for any constant c, require exponential size Resolution proofs. Their proof technique first proves that almost certainly a hypergraph defined by a random k-CNF formula satisfies a certain sparseness property with two different choices of parameters.
References-found: 17

