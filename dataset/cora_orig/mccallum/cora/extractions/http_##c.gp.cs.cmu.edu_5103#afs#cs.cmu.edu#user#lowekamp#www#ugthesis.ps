URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/lowekamp/www/ugthesis.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/user/lowekamp/www/und_research.html
Root-URL: http://www.cs.cmu.edu
Title: The Cellular Automata Paradigm for the Parallel Solution of Heat Transfer Problems  
Author: by Bruce B. Lowekamp c flBruce B. Lowekamp and VPI SU Advisor: Layne T. Watson Mark S. Cramer Calvin J. Ribbens 
Degree: Senior honors thesis submitted to the faculty of the Department of Computer Science in partial fulfillment of the requirements for the degree of BACHELOR OF SCIENCE (IN HONORS) in Computer Science  APPROVED:  
Affiliation: Blacksburg, Virginia  
Date: 1994  May, 1994  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. P. Bertsekas and J. N. Tsitlikis, </author> <title> Parallel and Distributed Computation, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1989. </year>
Reference-contexts: On the other hand, an implicit finite difference scheme, for example, will be increasingly unable to make efficient use of a parallel processor as it attempts to utilize more processors <ref> [1] </ref>.
Reference: [2] <author> W. Cheney and D. Kincaid, </author> <title> Numerical Mathematics and Computing, </title> <address> Brooks/Cole, Monterey, CA, </address> <year> 1980. </year>
Reference: [3] <author> M. Chester, </author> <title> Second Sound in Solids, </title> <journal> Phys. Rev., </journal> <volume> vol. 131, </volume> <pages> pp. 2013-2015, </pages> <year> 1963. </year>
Reference-contexts: The mask is determined by finding an explicit discrete formulation for the diffusion problem. An ab initio technique is generally preferred, as it allows us to fully exploit the capabilities of cellular automata. Using random walks, a discrete formulation of the diffusion problem is derived in <ref> [18, 3] </ref>. The temperature is represented as T (jx; k) = T k j , where x represents the distance between cells and k is used to index the iterations.
Reference: [4] <author> C. F. Gerald and P. O. Wheatley, </author> <title> Applied Numerical Analysis, 4th ed., </title> <publisher> Addison Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: Poorly designed equations can easily destroy the solution due to numerical difficulties, but by giving careful attention to the numerical aspects of the solution, it is possible to perform the calculations stably and accurately. Information needed to handle the calculations correctly is given in many standard texts <ref> [8, 13, 4] </ref>. The rules for the cells are similar to the rules for the diffusion problem: 1. Get the temperature and heat flux fi L , fi R , Q L , and Q R from the left and right neighboring cells. 13 CHAPTER 3. CELLULAR AUTOMATA ALGORITHM 2.
Reference: [5] <author> D. E. Glass and D. S. McRae, </author> <title> Variable Specific Heat and Thermal Relaxation Parameter in Hyperbolic Heat Conduction, </title> <journal> J. Thermophysics, </journal> <volume> vol. 4, </volume> <pages> pp. 252-255, </pages> <year> 1990. </year>
Reference-contexts: The oscillations observed at the shock occur because of the numerical difficulties inherent in modeling waves with discontinuities. Such oscillations are produced by nearly all methods when attempting to solve such problems, such as the solutions presented in <ref> [5] </ref>. and ff = 0:1, along with a solution generated using spline collocation. Initial values were identical to those used in calculating Figure 4.2.
Reference: [6] <author> D. E. Glass, M. N. Ozisik, D. S. McRae, and B. Vick, </author> <title> Hyperbolic Heat Conduction with Temperature-Dependent Thermal Conductivity, </title> <journal> J. Appl. Phys., </journal> <volume> vol. 59, </volume> <pages> pp. 1861-1865, </pages> <year> 1986. </year>
Reference-contexts: RESULTS automata solution with diamonds. ff = 0:1. For this problem, the left boundary conditions were Q = 1 and fi = 2 e ktff=2 . The right boundary conditions were @Q=@x = 0 and @fi=@x = 0. As pointed out in <ref> [6] </ref>, the front of the disturbance is a shock having a speed slightly larger than that of the linear (fi = 0) theory. Between the shock and the left boundary, the heat flux and the temperature increase in a nearly linear fashion for the time scales considered.
Reference: [7] <author> M. E. Gurtin and A. C. Pipkin, </author> <title> A General Theory of Heat Conduction with Finite Wave Speeds, Archive for Rational Mechanics and Analysis, </title> <journal> vol. </journal> <volume> 31, </volume> <pages> pp. 543-548, </pages> <year> 1969. </year>
Reference: [8] <author> C. Hirsch, </author> <title> Numerical Computation of Internal and External Flows, </title> <journal> vol. </journal> <volume> 1, </volume> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: Using the following definitions: Q k j = Q (jx; kt), fi k t &gt; 0, the most obvious approach is to use first order forward differences. However, these 12 CHAPTER 3. CELLULAR AUTOMATA ALGORITHM definitions result in inherently unstable calculations <ref> [8, 13] </ref>. Guided by the classical theory of differential equations, the leapfrog scheme is used instead: t Q = Q k+1 j ; (3.3) j fi k1 x Q = Q k j1 ; j+1 fi k This technique is described in [13, 8]. <p> Guided by the classical theory of differential equations, the leapfrog scheme is used instead: t Q = Q k+1 j ; (3.3) j fi k1 x Q = Q k j1 ; j+1 fi k This technique is described in <ref> [13, 8] </ref>. Because the telegraph equation employed here is nonlinear and hyperbolic, the cellular automata solution will be unstable due to discontinuities which appear in the solution. <p> Because the telegraph equation employed here is nonlinear and hyperbolic, the cellular automata solution will be unstable due to discontinuities which appear in the solution. To compensate for this, an artificial viscosity is added to Equation (3.2) <ref> [8] </ref>, producing the rules for the cells: Q k+1 j 2ffQ k j t (1 + *fifi k j )(fi k j1 ) x -x j1 2Q k j+1 ) fi k+1 j (Q k j1 ) x (fi k j + fi k x 2 ; where is an arbitrary <p> Poorly designed equations can easily destroy the solution due to numerical difficulties, but by giving careful attention to the numerical aspects of the solution, it is possible to perform the calculations stably and accurately. Information needed to handle the calculations correctly is given in many standard texts <ref> [8, 13, 4] </ref>. The rules for the cells are similar to the rules for the diffusion problem: 1. Get the temperature and heat flux fi L , fi R , Q L , and Q R from the left and right neighboring cells. 13 CHAPTER 3. CELLULAR AUTOMATA ALGORITHM 2. <p> To calculate the speedup, it is necessary to determine the best serial algorithm, implement it on a single processor of the parallel machine, and compare the speed of the new parallel algorithm to the serial algorithm's speed <ref> [8] </ref>. It is difficult just to determine the best serial algorithm, so we will not attempt to evaluate the speedup of this algorithm analytically.
Reference: [9] <author> D. D. Joseph and L. Preziosi, </author> <title> Heat Waves, </title> <journal> Reviews of Modern Physics, </journal> <volume> vol. 61, </volume> <pages> pp. 41-73, </pages> <year> 1989. </year>
Reference: [10] <author> Madsen, N. K. and R. F. Sincovec, </author> <title> PDECOL|Collocation Software for Partial Differential Equations, </title> <journal> ACM|Trans. Math. Software, </journal> <volume> vol. 5, </volume> <pages> pp. 326-351, </pages> <year> 1979. </year>
Reference: [11] <author> M. N. Ozisik, </author> <title> Basic Heat Transfer, </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1977. </year>
Reference-contexts: Figure 4.1 gives results for the heat equation solved with the cellular automata rule given in Equation (3.1) with T (t; x 0 ) = 1 and T (t; x 1 ) = 0 compared to the analytical result, which is just the error function <ref> [11] </ref>: T (x; t) = p Z 1 p e 2 =4 d: (4.1) The results obtained using the cellular automata and the analytical solution are virtually indistinguishable. problem using the linear form (fi = 0) of the telegraph equation, Equation (3.4) with ff = 0:1.
Reference: [12] <author> M. N. Ozisik and D. Y. Tzou, </author> <title> On the Wave Theory in Heat Conduction, </title> <booktitle> Proceedings of the Symposium on Fundamental Issues in Small Scale Heat Transfer, </booktitle> <address> Anaheim, CA, </address> <pages> pp. 13-28, </pages> <year> 1992. </year>
Reference: [13] <author> W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Vetterling, </author> <title> Numerical Recipes: The Art of Scientific Computation, 1st ed., </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989. </year> <title> REFERENCES </title>
Reference-contexts: Using the following definitions: Q k j = Q (jx; kt), fi k t &gt; 0, the most obvious approach is to use first order forward differences. However, these 12 CHAPTER 3. CELLULAR AUTOMATA ALGORITHM definitions result in inherently unstable calculations <ref> [8, 13] </ref>. Guided by the classical theory of differential equations, the leapfrog scheme is used instead: t Q = Q k+1 j ; (3.3) j fi k1 x Q = Q k j1 ; j+1 fi k This technique is described in [13, 8]. <p> Guided by the classical theory of differential equations, the leapfrog scheme is used instead: t Q = Q k+1 j ; (3.3) j fi k1 x Q = Q k j1 ; j+1 fi k This technique is described in <ref> [13, 8] </ref>. Because the telegraph equation employed here is nonlinear and hyperbolic, the cellular automata solution will be unstable due to discontinuities which appear in the solution. <p> Poorly designed equations can easily destroy the solution due to numerical difficulties, but by giving careful attention to the numerical aspects of the solution, it is possible to perform the calculations stably and accurately. Information needed to handle the calculations correctly is given in many standard texts <ref> [8, 13, 4] </ref>. The rules for the cells are similar to the rules for the diffusion problem: 1. Get the temperature and heat flux fi L , fi R , Q L , and Q R from the left and right neighboring cells. 13 CHAPTER 3. CELLULAR AUTOMATA ALGORITHM 2.
Reference: [14] <author> K. Preston and M. J. B. Duff, </author> <title> Modern Cellular Automata, Theory and Applications, </title> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: Unfortunately, there was no practical application for it at the time, given the current state of computing. Presently, the cellular automata paradigm is used to solve a wide variety of problems, from simulation of nerve depolarization [20] to graphic imaging <ref> [14] </ref>. Cellular automata can be used to represent any system which can be viewed as a set of small, identically functioning units. A large number of these units, following simple rules, can model a very complex system. A general overview of cellular automata is presented in [14]. 2.1 Conway's Life The <p> [20] to graphic imaging <ref> [14] </ref>. Cellular automata can be used to represent any system which can be viewed as a set of small, identically functioning units. A large number of these units, following simple rules, can model a very complex system. A general overview of cellular automata is presented in [14]. 2.1 Conway's Life The best way to explain cellular automata is by example. The canonical example of cellular automata is Conway's Life [14], often referred to as the game of life. Cells are arranged on a grid, and each cell can have two states, 1 or 0. <p> A large number of these units, following simple rules, can model a very complex system. A general overview of cellular automata is presented in <ref> [14] </ref>. 2.1 Conway's Life The best way to explain cellular automata is by example. The canonical example of cellular automata is Conway's Life [14], often referred to as the game of life. Cells are arranged on a grid, and each cell can have two states, 1 or 0. Each cell changes its state based on the state of its eight nearest neighbors. The cells interact according to the following rules: 1. <p> These simple rules create an amazing number of patterns which repeat, generate other patterns, etc. Extensive study has been devoted to these topics and the reader is referred to an appropriate text, such as <ref> [14] </ref>. 2.2 Diffusion Conway's Life is interesting, but it does not explain how cellular automata can be used to solve heat transfer problems. As an example, consider the diffusion problem posed in Section 1.1.
Reference: [15] <author> K. K. Tamma and R. R. Namburu, </author> <title> Hyperbolic Heat-Conduction Problems: Numerical Simulations via Explicit Lax-Wendroff Based Finite Element Formulations, </title> <journal> J. Ther-mophysics, </journal> <volume> vol. 5, </volume> <pages> pp. 232-239, </pages> <year> 1990. </year>
Reference: [16] <author> M. J. Quinn, </author> <title> Parallel Computing, Theory and Practice, </title> <publisher> McGraw Hill, </publisher> <address> New York, </address> <year> 1993. </year>
Reference: [17] <author> M. J. Quinn, </author> <title> Designing Efficient Algorithms for Parallel Computers, </title> <publisher> McGraw Hill, </publisher> <address> New York, </address> <year> 1987. </year>
Reference: [18] <author> Y. Taitel, </author> <title> On the Parabolic, Hyperbolic, and Discrete Formulation of the Heat Conduction Equation, </title> <journal> Int. J. Heat Mass Transfer, </journal> <volume> vol. 15, </volume> <pages> pp. 369-371, </pages> <year> 1972. </year>
Reference-contexts: The mask is determined by finding an explicit discrete formulation for the diffusion problem. An ab initio technique is generally preferred, as it allows us to fully exploit the capabilities of cellular automata. Using random walks, a discrete formulation of the diffusion problem is derived in <ref> [18, 3] </ref>. The temperature is represented as T (jx; k) = T k j , where x represents the distance between cells and k is used to index the iterations.
Reference: [19] <author> D. Y. Tzou, </author> <title> Thermal Shock Phenomena Under High Rate Response in Solids, </title> <journal> Annual Review of Heat Transfer, </journal> <volume> vol. 4, </volume> <pages> pp. 111-185. </pages>
Reference: [20] <author> J. R. Weimar, J. J. Tyson, and L. T. Watson, </author> <title> Diffusion and wave propagation in cellular automaton models of excitable media, </title> <journal> Phys. D, </journal> <volume> vol. 55, </volume> <pages> pp. 309-327, </pages> <year> 1992. </year>
Reference-contexts: The cellular automata paradigm was suggested in 1946 by Wiener [21]. Unfortunately, there was no practical application for it at the time, given the current state of computing. Presently, the cellular automata paradigm is used to solve a wide variety of problems, from simulation of nerve depolarization <ref> [20] </ref> to graphic imaging [14]. Cellular automata can be used to represent any system which can be viewed as a set of small, identically functioning units. A large number of these units, following simple rules, can model a very complex system.
Reference: [21] <author> N. Wiener and A. Rosenbluth, </author> <title> The Mathematical Formulation of the Problem of Conduction of Impulses in a Network of Connected Excitable Elements, Specifically in Cardiac Muscle, </title> <journal> Arch. Inst. Cardiol. Mexico, </journal> <volume> vol. 16, </volume> <pages> pp. 205-265, </pages> <year> 1946. </year> <month> 25 </month>
Reference-contexts: This definition is necessarily vague. The attraction of the cellular automata paradigm is in the simplicity of its basic premises compared to its intrinsic usefulness in solving complex problems. The cellular automata paradigm was suggested in 1946 by Wiener <ref> [21] </ref>. Unfortunately, there was no practical application for it at the time, given the current state of computing. Presently, the cellular automata paradigm is used to solve a wide variety of problems, from simulation of nerve depolarization [20] to graphic imaging [14].
References-found: 21

