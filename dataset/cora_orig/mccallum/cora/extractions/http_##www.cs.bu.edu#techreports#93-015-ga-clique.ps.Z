URL: http://www.cs.bu.edu/techreports/93-015-ga-clique.ps.Z
Refering-URL: http://cs-www.bu.edu/techreports/Home.html
Root-URL: 
Email: carter@cs.bu.edu  park@cs.bu.edu  
Phone: Phone: 617 353-8919 Fax: 617 353-6457  
Title: How good are genetic algorithms at finding large cliques: an experimental study  
Author: Bob Carter 
Note: Part of this research was presented at the 2nd DIMACS Implementation Challenge on Combinatorial Optimiza tion, DIMACS,  Supported in part by NSF grant CCR-9204284  
Date: October 10, 1993  October, 1993.  
Address: Park  Boston, MA 02215  
Affiliation: Kihong  Boston University Computer Science Department  
Pubnum: BU-CS-93-015  
Abstract: This paper investigates the power of genetic algorithms at solving the MAX-CLIQUE problem. We measure the performance of a standard genetic algorithm on an elementary set of problem instances consisting of embedded cliques in random graphs. We indicate the need for improvement, and introduce a new genetic algorithm, the multi-phase annealed GA, which exhibits superior performance on the same problem set. As we scale up the problem size and test on "hard" benchmark instances, we notice a degraded performance in the algorithm caused by premature convergence to local minima. To alleviate this problem, a sequence of modifications are implemented ranging from changes in input representation to systematic local search. The most recent version, called union GA, incorporates the features of union cross-over, greedy replacement, and diversity enhancement. It shows a marked speed-up in the number of iterations required to find a given solution, as well as some improvement in the clique size found. We discuss issues related to the SIMD implementation of the genetic algorithms on a Thinking Machines CM-5, which was necessitated by the intrinsically high time complexity (O(n 3 )) of the serial algorithm for computing one iteration. Our preliminary conclusions are: (1) a genetic algorithm needs to be heavily customized to work "well" for the clique problem; (2) a GA is computationally very expensive, and its use is only recommended if it is known to find larger cliques than other algorithms; (3) although our customization effort is bringing forth continued improvements, there is no clear evidence, at this time, that a GA will have better success in circumventing local minima. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs: a new characterization of NP. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 2-13, </pages> <year> 1992. </year>
Reference-contexts: Furthermore, recent work in interactive proof systems has shown that unless P = NP, finding a good approximation to the maximum clique size is as hard as solving the exact problem <ref> [5, 1] </ref>. This, coupled with the special year on Combinatorial Optimization at DIMACS and its Implementation Challenge, has motivated us to approach the MAX-CLIQUE problem from the genetic algorithms perspective. We proceed in three stages.
Reference: [2] <author> E. Balas and C. Yu. </author> <title> Finding a maximum clique in an arbitrary graph. </title> <journal> SIAM Journal on Computing, </journal> <volume> 15(4) </volume> <pages> 1054-1068, </pages> <year> 1986. </year>
Reference-contexts: In contrast, not much work has been done on the maximum clique problem, and this paper is an effort in this direction. Our test ground is MAX-CLIQUE, an NP-complete problem. The need to find large cliques arises in numerous pratical areas <ref> [2] </ref>, and many constraint satisfaction problems can be naturally cast as MAX-CLIQUE. Furthermore, recent work in interactive proof systems has shown that unless P = NP, finding a good approximation to the maximum clique size is as hard as solving the exact problem [5, 1].
Reference: [3] <author> B. Bollobas and P. Erdos. </author> <title> Cliques in Random Graphs. </title> <journal> Mathematical Proceedings of the Cam-bridge Philosophical Society, </journal> <volume> 80 </volume> <pages> 419-427, </pages> <year> 1976. </year>
Reference-contexts: For a typical test graph G 2 64=k=0:5 (not shown here), disregarding the embedded k-clique and looking only at the 64-node 0:5-random graph, one may estimate (very roughly) the maximum clique size to be around 8, using the threshold function 2 log 1 p p p p <ref> [3] </ref>. The actual size of the embedded clique corresponding to normalized clique size 0:2 is 13. The height at 0:2 for the multi-phase simple case is 0:6 which corresponds to a clique size of 8.
Reference: [4] <author> K. De Jong and W. Spears. </author> <title> Using genetic algorithms to solve NP-complete Problems. </title> <booktitle> In Proc. 4th International Conf. on Genetic Algorithms, </booktitle> <pages> pp. 124-132, </pages> <year> 1991. </year>
Reference-contexts: Recent work in this regard includes [11, 12, 10]. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem <ref> [9, 4, 13, 8] </ref>.
Reference: [5] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 2-12, </pages> <year> 1991. </year>
Reference-contexts: Furthermore, recent work in interactive proof systems has shown that unless P = NP, finding a good approximation to the maximum clique size is as hard as solving the exact problem <ref> [5, 1] </ref>. This, coupled with the special year on Combinatorial Optimization at DIMACS and its Implementation Challenge, has motivated us to approach the MAX-CLIQUE problem from the genetic algorithms perspective. We proceed in three stages.
Reference: [6] <author> D. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: 1 Introduction This paper investigates the power of genetic algorithms at solving the MAX-CLIQUE problem. Genetic algorithms <ref> [7, 6] </ref> are general-purpose optimization methods that have gained wide popularity in recent years. <p> This process is called the building-block hypothesis, and Holland's schema theorem <ref> [7, 6] </ref> is a formalization thereof. For monotonic objective functions, it is possible to prove optimality of a genetic algorithm capturing a form of "biased mixing" [10].
Reference: [7] <author> J. Holland. </author> <title> Adaptation in Natural and Artificial Systems. </title> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction This paper investigates the power of genetic algorithms at solving the MAX-CLIQUE problem. Genetic algorithms <ref> [7, 6] </ref> are general-purpose optimization methods that have gained wide popularity in recent years. <p> This process is called the building-block hypothesis, and Holland's schema theorem <ref> [7, 6] </ref> is a formalization thereof. For monotonic objective functions, it is possible to prove optimality of a genetic algorithm capturing a form of "biased mixing" [10].
Reference: [8] <author> P. Jog, J. Suh, and D. Gucht. </author> <title> Parallel Genetic Algorithms Applied to the Traveling Salesman Problem. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 1(4) </volume> <pages> 515-529, </pages> <year> 1991. </year>
Reference-contexts: Recent work in this regard includes [11, 12, 10]. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem <ref> [9, 4, 13, 8] </ref>.
Reference: [9] <author> B. Manderick, M. de Weger and P. Spiessens. </author> <title> The genetic algorithm and the structure of the fitness landscape. </title> <booktitle> Proc. 4th International Conf. on Genetic Algorithms, </booktitle> <pages> pp. 143-150, </pages> <year> 1991. </year>
Reference-contexts: Recent work in this regard includes [11, 12, 10]. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem <ref> [9, 4, 13, 8] </ref>.
Reference: [10] <author> K. Park. </author> <title> A lower-bound result on the power of genetic algorithms. </title> <booktitle> In Proc. 5th International Conf. on Genetic Algorithms, </booktitle> <pages> pp. 200-201, </pages> <year> 1993. </year>
Reference-contexts: As with simulated annealing, it is an open problem as to how powerful genetic algorithms are at solving combinatorial optimization problems, and few rigorous characterizations exist. Recent work in this regard includes <ref> [11, 12, 10] </ref>. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem [9, 4, 13, 8]. <p> This process is called the building-block hypothesis, and Holland's schema theorem [7, 6] is a formalization thereof. For monotonic objective functions, it is possible to prove optimality of a genetic algorithm capturing a form of "biased mixing" <ref> [10] </ref>. In our experiments, we have noticed that even with encodings that try to assign labels to the vertices that preserve the neighborhood structure of the given graph, most cliques turn out to have labels that are spread out which is intuitively clear for random graphs.
Reference: [11] <author> Y. Rabinovich and A. Wigderson. </author> <title> Analysis of a simple genetic algorithm. </title> <booktitle> In Proc. 4th International Conf. on Genetic Algorithms, </booktitle> <pages> pp. 215-221, </pages> <year> 1991. </year>
Reference-contexts: As with simulated annealing, it is an open problem as to how powerful genetic algorithms are at solving combinatorial optimization problems, and few rigorous characterizations exist. Recent work in this regard includes <ref> [11, 12, 10] </ref>. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem [9, 4, 13, 8].
Reference: [12] <author> Y. Rabinovich, A. Sinclair and A. Wigderson. </author> <title> Quadratic dynamical systems. </title> <booktitle> In Proc. 33rd IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 304-313, </pages> <year> 1992. </year> <month> 18 </month>
Reference-contexts: As with simulated annealing, it is an open problem as to how powerful genetic algorithms are at solving combinatorial optimization problems, and few rigorous characterizations exist. Recent work in this regard includes <ref> [11, 12, 10] </ref>. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem [9, 4, 13, 8].
Reference: [13] <author> D. Whitley, T. Starkweather, and D. Fuquay. </author> <title> Scheduling problems and traveling salesman: the genetic edge recombination operator. </title> <booktitle> In Proc. 3rd International Conf. on Genetic Algorithms, </booktitle> <pages> pp. 133-140, </pages> <year> 1989. </year>
Reference-contexts: Recent work in this regard includes [11, 12, 10]. On the empirical side, a large body of work exists in applying genetic algorithms to different application areas, as well as experimental evaluation on hard combinatorial optimization problems, notably the traveling salesman problem <ref> [9, 4, 13, 8] </ref>.
References-found: 13

