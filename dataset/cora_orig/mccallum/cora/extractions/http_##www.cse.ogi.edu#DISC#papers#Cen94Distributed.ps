URL: http://www.cse.ogi.edu/DISC/papers/Cen94Distributed.ps
Refering-URL: http://www.cse.ogi.edu/DISC/projects/rowena/projects.html
Root-URL: http://www.cse.ogi.edu
Email: walpole@cse.ogi.edu  
Title: A Distributed Real-Time MPEG Video Audio Player  
Author: Shanwei Cen, Calton Pu, Richard Staehli and Jonathan Walpole scen, calton, staehli, 
Affiliation: Department of Computer Science and Engineering Oregon Graduate Institute of Science and Technology  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> H. Massalin and C. Pu. </author> <title> Fine-Grain Adaptive Scheduling Using Feedback. </title> <journal> Computing System, </journal> <volume> 3(1) </volume> <pages> 139-173, </pages> <month> Winter </month> <year> 1990. </year>
Reference-contexts: Our approach does not rely on the presence of NTP in the target environment and we believe that the software feedback approach and support for user-specified QoS result in a higher degree of adaptability and efficiency. The idea of software feedback originated from Synthesis operating system <ref> [1] </ref> [2].
Reference: [2] <author> Calton Pu and Robert M. Fuhrer. </author> <title> Feedback-Based Scheduling: a Toolbox Approach. </title> <booktitle> Fourth Workshop on Workstation Operating Systems. </booktitle> <month> Oct. </month> <pages> 14-15, </pages> <year> 1993. </year>
Reference-contexts: Our approach does not rely on the presence of NTP in the target environment and we believe that the software feedback approach and support for user-specified QoS result in a higher degree of adaptability and efficiency. The idea of software feedback originated from Synthesis operating system [1] <ref> [2] </ref>. <p> We also intend to evaluate and refine the synchronization and QoS control feedback mechanisms and explore approaches to building more general implementations of software feedback mechanisms. In particular, we are exploring the idea of a software feedback toolkit <ref> [2] </ref>. In the area of QoS specification, we are extending the player to incorporate user specification of QoS along more dimensions (there are many including spatial and temporal resolution, color quantization, synchronization accuracy etc).
Reference: [3] <author> Ketan Patel et. al. </author> <title> Performance of a Software MPEG Video Decoder. </title> <booktitle> ACM multimedia'93, </booktitle> <address> Anaheim, California. </address> <month> August </month> <year> 1993. </year>
Reference-contexts: The implementation uses code modified from the Berkeley MPEG decoder <ref> [3] </ref>, and a Motif interface modified from a version implemented by Daeron Meyer of The Geometry Center, University of Minnesota. Initial experiments with the Player have been conducted with a video stream of 1516 192x144 sized frames, and a companion audio stream.
Reference: [4] <author> Lawrence A. Rowe and Brian C. Smith. </author> <title> A Continuous Media Player. </title> <booktitle> Proc. 3rd NOSSDAV. </booktitle> <address> San Diego, California. </address> <month> November </month> <year> 1992. </year>
Reference-contexts: This means the 24 fps case plays more smoothly. We expect that a fully refined feedback QoS mechanism will be able to achieve the optimal frame-rate when the users specified frame-rate can not be met. 5 Related Work Berkeley Continuous Media System <ref> [4] </ref> [5] shares several common ideas with the player outlined here. The main distinction is that the Berkeley system uses the Network Time Protocol (NTP) for synchronization between the client and servers.
Reference: [5] <author> Lawrence A. Rowe et. al. </author> <title> MPEG Video in Software: Representation, Transmission and Playback. High Speed Networking and Multimedia Computing, </title> <booktitle> Symp. </booktitle> <institution> on Elec. Imaging Sci. & Tech., </institution> <address> San Jose, CA, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: This means the 24 fps case plays more smoothly. We expect that a fully refined feedback QoS mechanism will be able to achieve the optimal frame-rate when the users specified frame-rate can not be met. 5 Related Work Berkeley Continuous Media System [4] <ref> [5] </ref> shares several common ideas with the player outlined here. The main distinction is that the Berkeley system uses the Network Time Protocol (NTP) for synchronization between the client and servers.
Reference: [6] <author> Thomas M. Levergood et. al. AudioFile: </author> <title> a Network-Transparent System for Distributed Audio Applications. </title> <booktitle> Proc. the USENIX Summer Conference, </booktitle> <month> June, </month> <year> 1993. </year>
Reference-contexts: Related work is outlined in Section 5. Finally, Section 6 discusses future work and concludes the paper. 2 System Architecture a client, an audio and video server, and an output environment with a video device such as X Windows and an audio device such as AudioFile <ref> [6] </ref>. The server runs on a host as a daemon. It accepts requests for video and audio stream access, and forks video and audio server sessions for service. The client is a set of collaborating processes: the controller (CTR), the video buffer (VB), and the video decoder (VD).
Reference: [7] <author> Richard Staehli, Jonathan Walpole and David Maier. </author> <title> Quality of Service Specifications for Multimedia Presentations. </title> <type> Technique Report CS/E 94-033. </type> <institution> Oregon Graduate Institute of Science & Technology. </institution> <month> November, </month> <year> 1994. </year> <month> 5 </month>
Reference-contexts: The dimensions along which quality can be specified in the current version of the Player are video frame-rate and audio sampling rate. In future versions of the player we hope to support quality adjustment in other dimensions as well <ref> [7] </ref>. Supporting QoS explicitly allows us to manage system resources more efficiently by feeding the actual playing quality observed at the client back to the video server.
References-found: 7

