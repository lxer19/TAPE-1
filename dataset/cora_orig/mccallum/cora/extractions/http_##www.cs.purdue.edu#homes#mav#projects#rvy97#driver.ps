URL: http://www.cs.purdue.edu/homes/mav/projects/rvy97/driver.ps
Refering-URL: http://www.cs.purdue.edu/homes/mav/projects/dom_dec.html
Root-URL: http://www.cs.purdue.edu
Title: Analysis of a non-overlapping domain decomposition method for Elliptic Partial Differential Equations 1  
Author: J.R. Rice, E.A. Vavalis Daoqi Yang 
Address: West Lafayette, IN 47907  Detroit, MI 48127.  
Affiliation: Purdue University, Computer Science Department,  Wayne State University, Department of Mathematics,  
Abstract: In this study we analyze a non-overlapping domain decomposition method for the solution of elliptic Partial Differential Equation (PDE) problems. This domain decomposition method involves the solution of Dirichlet and Neumann PDE problems on each subdomain, coupled with smoothing operations on the interfaces of the subdomains. The convergence analysis of the method at the differential equation level is presented. The numerical results confirm the theoretical ones and exhibit the computational efficiency of the method. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Funaro, A. Quarteroni, and P. Zanolli. </author> <title> An iterative procedure with interface relaxation for domain decomposition methods. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 25(6) </volume> <pages> 1213-1236, </pages> <year> 1988. </year>
Reference-contexts: However, theoretical analysis and numerical experiments will show that we can simply set them equal to 1=2 for many important computations. Several domain decomposition schemes similar to our method have been recently proposed and analyzed (see [4]). In particular, in the one considered by Funaro, Quarteroni and Zanolli <ref> [1] </ref>, Neumann values are passed from one subdomain to its neighbor, while Dirichlet values are received from its neighbor. Expected convergence and numerical performance results were obtained. However, the subdomain problems in this method are not parallelizable, since information passing is required between subdomains at the same iteration level. <p> We consider the model problem given by u + flu = f in [x 1 ; x 2 ] fi <ref> [1; 1] </ref>; u = 0 on @; (9) where x 1 ; x 2 &gt; 0 and fl is a positive constant. We then split the domain into the two subdomains 1 [x 1 ; 0] fi [1; 1] and 2 [0; x 2 ] fi [1; 1], so that the <p> u + flu = f in [x 1 ; x 2 ] fi <ref> [1; 1] </ref>; u = 0 on @; (9) where x 1 ; x 2 &gt; 0 and fl is a positive constant. We then split the domain into the two subdomains 1 [x 1 ; 0] fi [1; 1] and 2 [0; x 2 ] fi [1; 1], so that the interface line is at x = 0. <p> x 2 ] fi <ref> [1; 1] </ref>; u = 0 on @; (9) where x 1 ; x 2 &gt; 0 and fl is a positive constant. We then split the domain into the two subdomains 1 [x 1 ; 0] fi [1; 1] and 2 [0; x 2 ] fi [1; 1], so that the interface line is at x = 0. <p> A systematic performance evaluation of the proposed and similar domain decomposition methods is under way [4] and will be presented elsewhere. Here we show that, at least in certain cases of practical importance, the method proposed here outperforms the methods proposed by Funaro, Quarteroni and Zanolli <ref> [1] </ref>, and Lions [2]. For this we have implemented these three methods using the ELLPACK software system [3]. <p> Single precision is used for all calculations. The initial guesses are always taken to be zero. The errors are evaluated in the L 1 norm over the two subdomains at each iteration. We select the following model problems defined on <ref> [0; 1] </ref> fi [0; 1]. Example 1: @ 2 u @x 2 @ 2 u @y 2 = f , in , u = g, on @. The functions f and g are 9 Table 1 Numerical results for Example 1 with interface at x = 0:5. <p> Single precision is used for all calculations. The initial guesses are always taken to be zero. The errors are evaluated in the L 1 norm over the two subdomains at each iteration. We select the following model problems defined on <ref> [0; 1] </ref> fi [0; 1]. Example 1: @ 2 u @x 2 @ 2 u @y 2 = f , in , u = g, on @. The functions f and g are 9 Table 1 Numerical results for Example 1 with interface at x = 0:5. <p> that the exact solution is u (x; y) = 3e x+y x (1 x)y (1 y): We denote the domain decomposition methods as follows: Method 1: the method described in this paper with ff = fi = 1 2 , Method 2: the method proposed by Funaro, Quarteroni, and Zanolli <ref> [1] </ref> with = 1 Method 3: the method proposed by Lions [2] with = 1. <p> The numerical results from Tables 4-4 show that our method performs quite well, being slightly better than Method 2 <ref> [1] </ref> and much better than Method 3 [2]. Note that the subdomain problems at each iteration level in our method are completely independent and thus the computation is easily parallelizable, while the subdomain problems at each iteration level in Method 2 [1] can not be fully parallelized in such a natural <p> performs quite well, being slightly better than Method 2 <ref> [1] </ref> and much better than Method 3 [2]. Note that the subdomain problems at each iteration level in our method are completely independent and thus the computation is easily parallelizable, while the subdomain problems at each iteration level in Method 2 [1] can not be fully parallelized in such a natural way. Table 3 Numerical results for Example 2 with interface at x = 0:5. The errors are shown in the L 1 norm.
Reference: [2] <author> P.L. Lions. </author> <title> On the Schartz alternating method III: A variant for nonoverlapping subdomains. </title> <editor> In R. Glowinski, G.H. Golub, G.A. Meurant, and J. Periaux, editors, </editor> <title> Domain Decomposition Methods for Partial Differential Equations, </title> <address> pages 202-223, </address> <publisher> SIAM, </publisher> <year> 1988. </year>
Reference-contexts: Expected convergence and numerical performance results were obtained. However, the subdomain problems in this method are not parallelizable, since information passing is required between subdomains at the same iteration level. In Lions <ref> [2] </ref>, a convex combination of Neumann and Dirichlet data is passed from each subdomain to its neighbors. This method allows an arbitrary decomposition of the domain and each subdomain problem plays the same role in the computation. <p> A systematic performance evaluation of the proposed and similar domain decomposition methods is under way [4] and will be presented elsewhere. Here we show that, at least in certain cases of practical importance, the method proposed here outperforms the methods proposed by Funaro, Quarteroni and Zanolli [1], and Lions <ref> [2] </ref>. For this we have implemented these three methods using the ELLPACK software system [3]. <p> x (1 x)y (1 y): We denote the domain decomposition methods as follows: Method 1: the method described in this paper with ff = fi = 1 2 , Method 2: the method proposed by Funaro, Quarteroni, and Zanolli [1] with = 1 Method 3: the method proposed by Lions <ref> [2] </ref> with = 1. Table 4 and Table 4 contain the errors in the L 1 norm in the case of equal sized subdomains, while Table 4 and Table 4 contain the errors in the L 1 norm in the case of unequal sized subdomains. <p> The numerical results from Tables 4-4 show that our method performs quite well, being slightly better than Method 2 [1] and much better than Method 3 <ref> [2] </ref>. Note that the subdomain problems at each iteration level in our method are completely independent and thus the computation is easily parallelizable, while the subdomain problems at each iteration level in Method 2 [1] can not be fully parallelized in such a natural way.
Reference: [3] <author> J.R. Rice and R.F. Boisvert. </author> <title> Solving Elliptic Problems Using ELLPACK. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: Here we show that, at least in certain cases of practical importance, the method proposed here outperforms the methods proposed by Funaro, Quarteroni and Zanolli [1], and Lions [2]. For this we have implemented these three methods using the ELLPACK software system <ref> [3] </ref>. It is important to point out here that we have observed by experimenting in the ELLPACK framework that the usage of different PDE discretization meth ods (various Galerkin, finite difference and collocation) does not affect the convergence properties of the method.
Reference: [4] <author> J.R. Rice, P. Tsompanopoulou, </author> <title> and E.A. Vavalis. Review and performance interface relaxation methods for elliptic PDEs. </title> <type> Technical Report CSD-TR-97-004, </type> <institution> Purdue University, W. Lafayette IN, </institution> <year> 1997. </year>
Reference-contexts: However, theoretical analysis and numerical experiments will show that we can simply set them equal to 1=2 for many important computations. Several domain decomposition schemes similar to our method have been recently proposed and analyzed (see <ref> [4] </ref>). In particular, in the one considered by Funaro, Quarteroni and Zanolli [1], Neumann values are passed from one subdomain to its neighbor, while Dirichlet values are received from its neighbor. Expected convergence and numerical performance results were obtained. <p> A systematic performance evaluation of the proposed and similar domain decomposition methods is under way <ref> [4] </ref> and will be presented elsewhere. Here we show that, at least in certain cases of practical importance, the method proposed here outperforms the methods proposed by Funaro, Quarteroni and Zanolli [1], and Lions [2]. For this we have implemented these three methods using the ELLPACK software system [3].
Reference: [5] <author> Daoqi Yang. </author> <title> A parallel domain decomposition algorithm for elliptic problems. </title> <journal> J. Comp. Math., </journal> <note> 14:to appear, 1997. 11 </note>
Reference-contexts: Preprint submitted to Elsevier Science 27 August 1997 yet given in the literature. In particular in [6] a convergence analysis of the method is carried out at a differential level using Hilbert space techniques. In <ref> [5] </ref> the Galerkin finite element method and the hybrid mixed finite element method are employed to give discrete versions of this method. In this note, we apply Fourier analysis to show the fast convergence rate of this domain decomposition method in case of constant coefficients and two rectangular subdomains.
Reference: [6] <author> Daoqi Yang. </author> <title> A parallel iterative nonovelapping domain decomposition procedure for elliptic problems. </title> <journal> IMA J. Numer. Anal., </journal> <volume> 16 </volume> <pages> 75-91, </pages> <year> 1996. </year> <month> 12 </month>
Reference-contexts: Preprint submitted to Elsevier Science 27 August 1997 yet given in the literature. In particular in <ref> [6] </ref> a convergence analysis of the method is carried out at a differential level using Hilbert space techniques. In [5] the Galerkin finite element method and the hybrid mixed finite element method are employed to give discrete versions of this method.
References-found: 6

