URL: ftp://ftp.cs.columbia.edu/reports/reports-1994/cucs-002-94.ps
Refering-URL: http://www.cs.columbia.edu/~library/1994.html
Root-URL: http://www.cs.columbia.edu
Email: fip, jrkg@cs.columbia.edu  
Title: Error Detection and Recovery in Two Dimensional Topological Navigation  
Author: Il-Pyung Park and John R. Kender 
Keyword: Relevant Categories: Qualitative vision, Vision-guided robotics  
Web: CUCS-002-94  
Address: New York, NY 10027  
Affiliation: Department of Computer Science Columbia University  
Abstract: In this paper we describe error detection and error recovery methods applicable to navigation in large scale unstructured environmental navigation. We relax the assumption of error-free following of topological landmarks; the navigator is "permitted" to make mistakes during its journey. The error detection method involves the navigator observing its immediate surrounding and checking for one of several types of disparities. The error recovery method is based on a simple fixed set of movements which is triggered by the navigator's local observation. Alternately described, this work characterizes those environments in which robust topological navigation is possible, including those landmarks which, literally, "can't be missed". These methods have been implemented on our qualitative environmental navigation system consisting of a camera mounted IBM 7575 robot arm. 
Abstract-found: 1
Intro-found: 1
Reference: [AHU74] <author> Alfred Aho, John Hopcroft, and Jeffery Ullman. </author> <title> The Design and Analysis of Computer Algorithms. </title> <publisher> Addison Wesley, </publisher> <year> 1974. </year>
Reference-contexts: As we can see, F and G have 0-columns, therefore are not reachable. This reachability domain problem can be solved by a version of "topological sorting" algorithm and therefore within time complexity O (jEj + jV j) <ref> [AHU74] </ref>. Figures 9 shows an example of error recoverable parkways formed in a larger domain.
Reference: [GK78] <author> K. Chidananda Gowda and G. Krishna. </author> <title> Agglomerative clustering using the concept of mutual nearest neighborhood. </title> <journal> Pattern Recognition, </journal> <volume> 10:pp105-112, </volume> <year> 1978. </year>
Reference: [KL89] <author> John. R. Kender and Avram. Leff. </author> <title> Why direction-giving is hard: The complexity of linear navigation by landmarks. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 19(6) </volume> <pages> 1656-1658, </pages> <year> 1989. </year>
Reference: [KPY90] <author> John R. Kender, Il-Pyung Park, and David Yang. </author> <title> A formalization and implementation of topological visual navigation in two dimensions. </title> <booktitle> In SPIE International Symposia, </booktitle> <year> 1990. </year>
Reference: [Kui79] <author> B. Kuipers. </author> <title> On representing commonsense knowledge. </title> <booktitle> In Associative networks, </booktitle> <pages> pages 393-408. </pages> <publisher> Academic Press, </publisher> <year> 1979. </year>
Reference: [Par93] <author> Il-Pyung Park. </author> <title> Qualitative Environmental Navigation: Theory and Practice. </title> <type> PhD thesis, </type> <institution> Columbia University, </institution> <year> 1993. </year>
Reference-contexts: We define that object b is connected to object a, if a is at a reference position (one of 4 corners of the view window) and b can be identified as a unique landmark by a qualitative description vocabulary (isolated, obvious, etc.) <ref> [Par93] </ref>. By applying the connected component algorithm using the above definition of "connectedness", we can then generate discrete sets of connected components. We define parkway to be such a connected component. <p> Prior to the navigational task, the map-maker carefully examines the environment and generates a path that is least affected by error, thereby preventing the navigator from making mistakes. This has been described, analyzed, tested, and measured experimentally in <ref> [Par93] </ref>, and in some cases, closed form results have been obtained. The second method is "error recovery", 5 and is accomplished by the navigator during its navigational task. At each "check-point", which is a landmark, the navigator examines its immediate surrounding to verify that it is on the correct course.
Reference: [PK93a] <author> Il-Pyung Park and John R. Kender. </author> <title> Qualitative environmental navigation. </title> <booktitle> In Proceedings of the Image Understanding Workshop, </booktitle> <year> 1993. </year> <month> 19 </month>
Reference-contexts: 1 Introduction Our navigational environment consists of identically featured objects scattered randomly on a flat surface [PK93b] <ref> [PK93a] </ref>. This simplification of the world emphasizes the spatial and topological problems of doing vision and navigation in a large and unstructured environment. That is, an object cannot be described by its intrinsic attributes, such as shape, size, or color.
Reference: [PK93b] <author> Il-Pyung Park and John R. Kender. </author> <title> Using isolated landmarks and trajectories in robot navigation. </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: 1 Introduction Our navigational environment consists of identically featured objects scattered randomly on a flat surface <ref> [PK93b] </ref> [PK93a]. This simplification of the world emphasizes the spatial and topological problems of doing vision and navigation in a large and unstructured environment. That is, an object cannot be described by its intrinsic attributes, such as shape, size, or color. <p> So, if there are features that are sensible by the navigator, they are used to filter the perceptions of the map-maker and the navigator. 1.1 The map-maker and the navigator Here, we briefly describe a navigational system for a such environment as presented in <ref> [PK93b] </ref>. The purpose of the map-maker is to generate a custom map, consisting of directional instructions, so that the navigator will be able to find its way to the destination by executing each of the 1 only houses instructions in a sequence. <p> We define parkway to be such a connected component. For the purpose of this paper, we concentrate on a specific type of parkway called "isolated parkway, which consists of isolated landmarks <ref> [PK93b] </ref>. Traveling within a single parkway is then simply following visible landmarks. This guarantees that the robot does not move via metric information outside its sensible region, thus eliminating the possibility of a dead reckoning error.
Reference: [Stu92] <author> Elizabeth Stuck. </author> <title> Detecting and Diagnosing Mistakes in Inexact Vision-based Navigation. </title> <type> PhD thesis, </type> <institution> University of Minnesota, </institution> <year> 1992. </year>
Reference-contexts: If the signature of the wrongly chosen object is different from the signature of the correct isolated landmark object, then the mistake can be identified by comparing the desired signature to the currently observed 1 Our error recovery method can be classified as "forward recovery", as defined in <ref> [Stu92] </ref>, because it replans to get back on track, instead of retracing its traveled route. 6 one. Therefore, in order for a landmark to be error detectable, it needs to have a unique signature within its neighborhood. Implementation of the Observe () function depends on the capabilities of the navigator.
Reference: [SVW85] <author> L. A. Streeter, D. Vitello, and S. A. Wonsiewica. </author> <title> How to tell people wherer to go: Comparing navigational aids. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 22 </volume> <pages> 549-562, </pages> <year> 1985. </year>
Reference-contexts: This simple, almost dumb, navigator model is justified by our 2 purposes in this project: (1) Efficiency of navigation (2) Low cost navigation (3) Finding the lower bounds of navigator's intelligence without sacrificing the performance (4) Humans seem to prefer this model <ref> [SVW85] </ref>. 1.2 Parkways and Trajectories Prior to the navigation, the map-maker captures the entire world by taking the image of the world from a global location. The positions of the populated objects are recorded. The map-maker further abstracts the world into a directed graph data structure, with vertices and edges.
References-found: 10

