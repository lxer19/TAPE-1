URL: http://www.win.tue.nl/~maubach/Research/Papers/maubach-paper24.ps
Refering-URL: http://www.win.tue.nl/~maubach/Research/papers.html
Root-URL: http://www.win.tue.nl
Title: LOCAL BISECTION REFINEMENT FOR N-SIMPLICIAL GRIDS GENERATED BY REFLECTION*  
Author: JOSEPH M. MAUBACH 
Keyword: n  many tetrahedral grids using additional closure refinement to avoid incompatibilities. Key words. grid generation, grid refinement  
Date: 000-000, October 1993 000  
Note: SIAM J. EXAMPLE FILES c fl1993 Society for Industrial and Applied Mathematics Vol. 1, No. 1, pp.  grid and may possibly be applied to  AMS subject classification. 65M50  
Abstract: A simple local bisection refinement algorithm for the adaptive refinement of n-simplicial grids is presented. The algorithm requires that the vertices of each simplex are ordered in a special way relative to those in neighboring simplices. It is proven that certain regular simplicial grids on [0; 1] n have this property, and it is discussed to which more general grids this method is applicable. The edges to be bisected are determined by an ordering of the simplex vertices, without local or global computation or communication. Further, the number of congruency classes in a locally refined grid turns out to be bounded above by n, independent on of the level of refinement. Simplicial grids of higher dimension are frequently used to approximate solution manifolds of parametrized equations, as for instance in Allgower and Georg [1] and Rheinboldt [24]. They are also used for the determination of fixed points of functions from R , as described in Todd [30]. In two and three dimensions, such grids of triangles respectively tetrahedrons are used for the computation of finite element solutions of partial differential equations, as for example in Axelsson and Barker [3], Bank and Welfert [6], Mitchell [22] and Rivara [26]. The new method is applicable to any triangular n
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Allgower and K. Georg, </author> <title> Generation of triangulations by reflections, </title> <publisher> Utilitas Mathemat-ica, </publisher> <month> 16 </month> <year> (1979), </year> <pages> pp. 123-129. </pages>
Reference-contexts: Finally, one can also cover regions with component grids of type G, as for n-cube type grids is done by Henshaw and Chesshire in [17]. The remainder of this paper is organized as follows. First, in section 2, the construction of the coarse grid of n-simplices covering <ref> [0; 1] </ref> n is shortly introduced, mainly relying on results obtained in [1]. Thereafter, section 3 introduces the bisection step. <p> The remainder of this paper is organized as follows. First, in section 2, the construction of the coarse grid of n-simplices covering [0; 1] n is shortly introduced, mainly relying on results obtained in <ref> [1] </ref>. Thereafter, section 3 introduces the bisection step. Section 4 exploits the bisection step in order to demonstrate that the number of congruency classes is bounded above by n, independent on the level of refinement, and section 5 employs the bisection step in the recursive local bisection grid refinement algorithm. <p> Finally, section 7 provides some conclusions, and is followed by a list of references. 2. The coarse grid. This section presents the coarse simplicial grid on <ref> [0; 1] </ref> n , which, with the use of reflections, can be used to create a coarse simplicial grid covering an k 1 fi fi k n grid of cubes covering [a 1 ; b 1 ] fi fi [a n ; b n ]. <p> Thereafter, a definition of congruency is provided, and at the end of this section it is shown that the simplices of the coarse grid are congruent to each other. In the sequel, the prefix `n-' will often be omitted, in order to simplify the notation. The simplicial grid on <ref> [0; 1] </ref> n will be generated with the use of n-permutations. <p> For the covering of <ref> [0; 1] </ref> n the following so called reference simplex (different from that usually found in finite element methods) is needed. <p> This is of importance, as the bisection step proposed in the section 3 exploits the ordering of the vertices. In <ref> [1] </ref> it is shown, that the collection of simplices fT : an n-permutation g, covers the unit cube such that all simplices are compatible, i.e., every face of every simplex is shared with at most one other simplex. <p> Now consider the algorithm below, for the generation of the coarse simplicial grid covering <ref> [0; 1] </ref> n . <p> As an example of a coarse grid, consider the six tetrahedrons covering <ref> [0; 1] </ref> 3 T (1 2 3) : (0; 0; 0); (1; 0; 0); (1; 1; 0); (1; 1; 1) T (2 1 3) : (0; 0; 0); (0; 1; 0); (1; 1; 0); (1; 1; 1) T (3 2 1) : (0; 0; 0); (0; 0; 1); (0; 1; 1); <p> a single cube, a coarse grid of k 1 fi fi k n cubes (filled with simplices) covering [a 1 ; b 1 ] fi fi [a n ; b n ] is constructed by reflecting the above coarse grid cube across its faces in all coordinate directions, as in <ref> [1] </ref>. 3. The bisection step. This section introduces the n-dimensional bisection step for n-simplices, and examines the descendants obtained with repeated application of this bisection step. The number of congruency classes obtained by the proposed bisection step is determined in section 4. <p> This is caused by the fact that edge x 0 x k is bisected, and by the fact that the descendants each get one of the two vertices x 0 and x k . As the parent is the union of its descendants, and as the coarse grid covers <ref> [0; 1] </ref> n , it can be concluded, that any grid resulting from the repeated application of this bisection step will properly cover [0; 1] n . Secondly, the above bisection step may lead to grid incompatibilities, as it only fo-cusses on one simplex, neglecting its neighboring simplices. <p> As the parent is the union of its descendants, and as the coarse grid covers <ref> [0; 1] </ref> n , it can be concluded, that any grid resulting from the repeated application of this bisection step will properly cover [0; 1] n . Secondly, the above bisection step may lead to grid incompatibilities, as it only fo-cusses on one simplex, neglecting its neighboring simplices. In order to avoid these incompatibilities, the bisection step is incorporated in the local bisection refinement algorithm presented in section 5. <p> Also, observe that the congruency mapping y = 2 (x <ref> [1; 0; 1] </ref> t ) maps T 3 onto (0; 0; 0); (0; 0; 1); (0; 1; 1); (1; 1; 1). Hence, y = 2R (x [1; 0; 1] t ) with R = Diag (1; 1; 1) maps T 3 onto the coarse grid tetrahedron T (3 2 1) , <p> Also, observe that the congruency mapping y = 2 (x <ref> [1; 0; 1] </ref> t ) maps T 3 onto (0; 0; 0); (0; 0; 1); (0; 1; 1); (1; 1; 1). Hence, y = 2R (x [1; 0; 1] t ) with R = Diag (1; 1; 1) maps T 3 onto the coarse grid tetrahedron T (3 2 1) , which 8 joseph m. maubach at its turn is congruent with T (1 3 2) . <p> This layer has the form of a curve, closely resembling the straight line y = 0: 45x. The grid is generated as follows. First, a coarse grid of small squares is generated on a 8 by 5 division of the domain <ref> [0; 1] </ref> fi [0; 0: 625]. Secondly, each rectangle is covered with a coarse grid of two triangles, analogously to the coarse grid covering [0; 1] 2 . <p> The grid is generated as follows. First, a coarse grid of small squares is generated on a 8 by 5 division of the domain <ref> [0; 1] </ref> fi [0; 0: 625]. Secondly, each rectangle is covered with a coarse grid of two triangles, analogously to the coarse grid covering [0; 1] 2 . Then, for every level k, a finite element solution is computed on the grid of level k, and those those triangles where the gradient of the computed finite element solution is larger than a certain threshold are bisected. <p> Note that the grid is compatible, and that all angles are either 1 4 , or 1 As a second example, consider some applications of the bisection refinement applied to the three-dimensional unit-cube <ref> [0; 1] </ref> 3 , shown in figure 5 figure 10. <p> This makes this bisection method eminently applicable for grid refinement in parallel. The refinement algorithm is applicable to a variety of grids, as long as the vertices of every simplex in the grid are properly ordered. This paper proves that special regular grids of simplices on <ref> [0; 1] </ref> n admit the desired ordering of the vertices. In addition, it is argumented that the refinement method is also applicable to grids which are the image of (part of) the (maybe locally refined) special grid on [0; 1] n under a non-singular mapping. <p> This paper proves that special regular grids of simplices on <ref> [0; 1] </ref> n admit the desired ordering of the vertices. In addition, it is argumented that the refinement method is also applicable to grids which are the image of (part of) the (maybe locally refined) special grid on [0; 1] n under a non-singular mapping. The bisection method is applicable to every triangular grid as it is equivalent to Mitchell's method in [22], and can possibly be applied to many tetrahedral grids with the use of additional closure refinement. <p> Aarden for the indication that n-dimensional bisection refinement should be possible. local bisection refinement for n-simplicial grids 17 Fig. 1 Newest vertex bisection refinement in two dimensions. Fig. 2 n-dimensional bisection refinement in two dimensions. 18 joseph m. maubach Fig. 3 Triangular grid 12 on <ref> [0; 1] </ref> fi [0; 0: 625]. Fig. 4 Magnification of grid 12 shown in figure 3. local bisection refinement for n-simplicial grids 19 Fig. 5 A cube which is six levels refined in the plane f (x; y; z): z = 0g.
Reference: [2] <author> D. C. Arney and J. E. Flaherty, </author> <title> An adaptive mesh-moving and local refinement method for time-dependent partial differential equations, </title> <journal> A.C.M. Transactions on Mathematical Software, </journal> <volume> 16 (1990), </volume> <pages> pp. 48-71. </pages>
Reference-contexts: Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty <ref> [2] </ref>. Some techniques guarantee the resulting grid to have certain properties, see for instance Georges and Shephard [28], or Bern and Eppstein [10]. <p> The proofs provided admit moving of the grids vertices (see <ref> [2] </ref>) because 4 joseph m. maubach this does not change the vertex ordering within a simplex. The new method is also applicable to grids which are part of the locally refined grid G.
Reference: [3] <author> O. Axelsson and V. A. Barker, </author> <title> Finite Element Solution of Boundary Value Problems, </title> <publisher> Academic Press, </publisher> <address> Orlando, Florida, </address> <year> 1984. </year>
Reference: [4] <author> E. F. D'Azevedo, </author> <title> Optimal triangular mesh generation by coordinate transformation, </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 12 (1991), </volume> <pages> pp. 755-786. </pages>
Reference-contexts: It will be compared with both triangular and tetrahedron refinement methods. First, consider the two dimensional case. Most frequently, a triangle is refined by dividing it into four congruent descendants as in Bank [6], D'Azevedo <ref> [4] </ref>, or [11] applied to two dimensions.
Reference: [5] <author> T. J. Baker, </author> <title> Developments and trends in three-dimensional mesh generation, </title> <journal> Applied Numerical Mathematics, </journal> <volume> 5 (1989), </volume> <pages> pp. 275-304. </pages>
Reference-contexts: Two and three dimensional triangulations are a subject of thorough investigation. Many different grid generation, refinement, and improvement techniques in two and three dimensions are now available. An extensive overview of such techniques can be found in the bibliography of for instance Bern and Eppstein [8], or Baker <ref> [5] </ref>.
Reference: [6] <author> R. E. Bank and B. D. Welfert, </author> <title> A posteriori error estimates for the Stokes problem, </title> <journal> SIAM Journal on Numerical Analysis, </journal> <volume> 28 (1991), </volume> <pages> pp. 591-623. </pages>
Reference-contexts: It will be compared with both triangular and tetrahedron refinement methods. First, consider the two dimensional case. Most frequently, a triangle is refined by dividing it into four congruent descendants as in Bank <ref> [6] </ref>, D'Azevedo [4], or [11] applied to two dimensions. <p> The division of a tetrahedron into eight descendants is such that only four will be congruent to the parent, and in order to prevent grids from getting uniformly refined, one has to use additional closure refinements, as in for instance <ref> [6] </ref> and [11]. However, this refinement, in combination with the proper closure refinement, can be applied to any coarse tetrahedral grid to yield compatible locally refined grids. Allowing for additional closure refinement, it is likely that the new method can also be used for many coarse tetrahedral grids.
Reference: [7] <author> E. B ansch, </author> <title> Local mesh refinement in 2 and 3 dimensions, </title> <booktitle> Impact of Computing in Science and Engineering, 3 (1991), </booktitle> <pages> pp. 181-191. </pages>
Reference-contexts: Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey [11] and Ong [23], and the group creating two descendants by bisection as in Bansch <ref> [7] </ref>, Kossaczky [19], Maubach [21], Rivara [26], and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices. <p> It should be pointed out that in many cases one can eliminate the incompatibilities by using additional closure refinement, as for instance in [11] and [26]. However, one has to prevent the situation where a shared face has neighbors bisecting different edges, see for instance <ref> [7] </ref>. 5. The local bisection refinement algorithm. This section introduces the n-dimensional local bisection refinement algorithm, using the local bisection step defined in section 3. The presented algorithm is an extension to the refinement algorithm for two dimensions, given by Mitchell in [22].
Reference: [8] <author> M. Bern and D. Eppstein, </author> <title> Mesh generation and optimal triangulation, </title> <note> internal technical report Xerox PARC and U.C. Irvine </note>
Reference-contexts: Two and three dimensional triangulations are a subject of thorough investigation. Many different grid generation, refinement, and improvement techniques in two and three dimensions are now available. An extensive overview of such techniques can be found in the bibliography of for instance Bern and Eppstein <ref> [8] </ref>, or Baker [5].
Reference: [9] <author> M. Bern, D. Eppstein and F. Yao, </author> <title> The expected extremes in a Delaunay triangulation, </title> <journal> International Journal of Computational Geometry and Applications, </journal> <volume> 1 (1991), </volume> <pages> pp. 79-91 </pages>
Reference-contexts: Among the availabe generation methods in two, three, or more dimensions, there are methods based on Voronoi's tessellations as for instance in George and Hecht [15], methods based on Delaunay triangulations as in Bern, Eppstein and Yao <ref> [9] </ref>, in Riedinger et. al [25], and in Schroder and Shephard [27], and methods based on fractal concepts as in Bova and Carey [12].
Reference: [10] <author> M. Bern, D. Eppstein and J. R. Gilbert, </author> <title> Provably good mesh generation, </title> <booktitle> in 31st Annual Symposium on Foundations of Computer Science, Vol. I, II (St. </booktitle> <address> Louis, MO., </address> <year> 1990), </year> <pages> pp. 231-241, </pages> <publisher> IEEE Comput. Soc. Press, Los Alamitos, </publisher> <address> CA., </address> <year> 1990 </year>
Reference-contexts: Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty [2]. Some techniques guarantee the resulting grid to have certain properties, see for instance Georges and Shephard [28], or Bern and Eppstein <ref> [10] </ref>.
Reference: [11] <author> J. </author> <title> Bey, Simplicial grid refinement in three and more dimensions, internal report of the Math-ematisches Institut, </title> <institution> Universitat Tubingen, Auf der Morgenstelle 10, D-72076 Tubingen, Germany </institution>
Reference-contexts: The examination of the new method was initiated with a three-dimensional bisection algorithm of the author published in [21], and stimulated by the work by Bey in <ref> [11] </ref>. Two and three dimensional triangulations are a subject of thorough investigation. Many different grid generation, refinement, and improvement techniques in two and three dimensions are now available. An extensive overview of such techniques can be found in the bibliography of for instance Bern and Eppstein [8], or Baker [5]. <p> It will be compared with both triangular and tetrahedron refinement methods. First, consider the two dimensional case. Most frequently, a triangle is refined by dividing it into four congruent descendants as in Bank [6], D'Azevedo [4], or <ref> [11] </ref> applied to two dimensions. <p> This makes the method simple to implement, suited for finite element methods, and highly suitable for parallel processing. Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey <ref> [11] </ref> and Ong [23], and the group creating two descendants by bisection as in Bansch [7], Kossaczky [19], Maubach [21], Rivara [26], and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices. <p> The division of a tetrahedron into eight descendants is such that only four will be congruent to the parent, and in order to prevent grids from getting uniformly refined, one has to use additional closure refinements, as in for instance [6] and <ref> [11] </ref>. However, this refinement, in combination with the proper closure refinement, can be applied to any coarse tetrahedral grid to yield compatible locally refined grids. Allowing for additional closure refinement, it is likely that the new method can also be used for many coarse tetrahedral grids. <p> As mentioned in section 3, the application of the bisection step is likely to lead to grid incompatibilities. It should be pointed out that in many cases one can eliminate the incompatibilities by using additional closure refinement, as for instance in <ref> [11] </ref> and [26]. However, one has to prevent the situation where a shared face has neighbors bisecting different edges, see for instance [7]. 5. The local bisection refinement algorithm. This section introduces the n-dimensional local bisection refinement algorithm, using the local bisection step defined in section 3.
Reference: [12] <author> S. W. Bova and G .F. Carey, </author> <title> Mesh generation/refinement using fractal concepts and iterated function systems, International Journal for Numerical Methods in Engineering, </title> <booktitle> 33 (1992), </booktitle> <pages> pp. 287-305 </pages>
Reference-contexts: dimensions, there are methods based on Voronoi's tessellations as for instance in George and Hecht [15], methods based on Delaunay triangulations as in Bern, Eppstein and Yao [9], in Riedinger et. al [25], and in Schroder and Shephard [27], and methods based on fractal concepts as in Bova and Carey <ref> [12] </ref>. Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty [2].
Reference: [13] <author> H. Freudenthal, Simplizialzerlegungen von Beschrankter Flachheit, </author> <note> Annals of Mathematics 43, </note> <month> 3 </month> <year> (1942), </year> <pages> pp. 590-582 </pages>
Reference-contexts: Grids of n-simplices for large n have since long been used in combinatorial fixed point theory, see for instance Sperner [29], Freudentahl <ref> [13] </ref>, and Todd [30], giving an overview of existing combinatorial fixed point methods. The method presented in this paper can theoretically generate all of the grids to be found in [30].
Reference: [14] <author> W. H. Frey and D. A. </author> <title> Field, Mesh relaxation: a new technique for improving triangulations, </title> <note> International Journal for Numerical Methods in Engineering, 31 (1991) pp. 1121-1133 </note>
Reference-contexts: Mesh improvement techniques include techniques changing the grid topology as in Frey and Field <ref> [14] </ref>, and vertex moving techniques keeping the topology as in Arney and Flaherty [2]. Some techniques guarantee the resulting grid to have certain properties, see for instance Georges and Shephard [28], or Bern and Eppstein [10].
Reference: [15] <author> P. L. George and F. Hecht, </author> <title> Automatic mesh generator with specified boundary, </title> <booktitle> Computer Methods in Applied Mechanics and Engineering, 92 (1991), </booktitle> <pages> pp. 269-288 </pages>
Reference-contexts: An extensive overview of such techniques can be found in the bibliography of for instance Bern and Eppstein [8], or Baker [5]. Among the availabe generation methods in two, three, or more dimensions, there are methods based on Voronoi's tessellations as for instance in George and Hecht <ref> [15] </ref>, methods based on Delaunay triangulations as in Bern, Eppstein and Yao [9], in Riedinger et. al [25], and in Schroder and Shephard [27], and methods based on fractal concepts as in Bova and Carey [12].
Reference: [16] <author> D.J. Hebert, </author> <title> Symbolic local refinement of tetrahedral grids, </title> <type> internal report ICMA-93-181, </type> <institution> University of Pittsburgh, Pennsylvania, </institution> <note> submitted to Journal of Symbolic Computation, </note> <year> 1993 </year>
Reference-contexts: Therefore, instead of storing pointers to all neighbors for every simplex, the neighbor pointers can be computed on demand, as in the three-dimensional case is shown in Hebert <ref> [16] </ref>. This reduces the computer storage per simplex and increases the parallelism already present in the local refinement method. The author's non-optimized Fortran 77 implementation of the presented bisection step and refinement algorithm takes less than three pages.
Reference: [17] <author> W. D. Henshaw and G. Chesshire, </author> <title> Multigrid on composite meshes, </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 8 (1987), </volume> <pages> pp. 914-923 </pages>
Reference-contexts: Finally, one can also cover regions with component grids of type G, as for n-cube type grids is done by Henshaw and Chesshire in <ref> [17] </ref>. The remainder of this paper is organized as follows. First, in section 2, the construction of the coarse grid of n-simplices covering [0; 1] n is shortly introduced, mainly relying on results obtained in [1]. Thereafter, section 3 introduces the bisection step.
Reference: [18] <author> D. E. Knuth, </author> <title> The Art of Computer Programming Vol. 3, Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <year> 1973 </year>
Reference-contexts: Binary tree data structures have been well investigated throughout the last decades, many optimal or near optimal tree traversion and tree balancing algorithms exist, as is shown in Knuth <ref> [18] </ref>. Grids of n-simplices for large n have since long been used in combinatorial fixed point theory, see for instance Sperner [29], Freudentahl [13], and Todd [30], giving an overview of existing combinatorial fixed point methods.
Reference: [19] <author> I. Kossaczky, </author> <title> A recursive approach to local mesh refinement in two and three dimensions, </title> <note> accepted for publication in Journal CAM, </note> <year> 1993 </year>
Reference-contexts: Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey [11] and Ong [23], and the group creating two descendants by bisection as in Bansch [7], Kossaczky <ref> [19] </ref>, Maubach [21], Rivara [26], and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices.
Reference: [20] <author> R. Lohner, </author> <title> Some useful data structures for the generation of unstructured grids, Communications in Applied Numerical Methods, </title> <booktitle> 4 (1988), </booktitle> <pages> pp. 123-135 </pages>
Reference-contexts: In contrast with the quadrant method for the refinement of grids of rectangles, or the octtant method for the refinement of a n-cube grid (see for instance Lohner <ref> [20] </ref>), the presented local bisection method does not create incompatibilities, every face of an n-simplex will be fully shared by at most one other n-simpex. As every simplex is compatible without exception, algorithms can be implemented in a simple manner. <p> Regarding the above, the to be presented bisection method is as efficient in the storage and location of information as the octtree approach is in for instance <ref> [20] </ref>, especially since every grid of n-cubes can be covered with n-simplices. Potential applications of the new method to neural networks are a topic of future investigation. Now, consider the applicability of the to be presented bisection refinement method.
Reference: [21] <author> J. M. Maubach, </author> <title> Iterative Methods for Non-Linear Partial Differential Equations, </title> <publisher> C.W.I., </publisher> <address> Amsterdam, </address> <year> 1991, </year> <note> ISBN 90-9004007-2 </note>
Reference-contexts: This paper presents such a local refinement method of the bisection type, which is called n-dimensional since it is applicable to grids of n-simplices, independent of the dimension n. The examination of the new method was initiated with a three-dimensional bisection algorithm of the author published in <ref> [21] </ref>, and stimulated by the work by Bey in [11]. Two and three dimensional triangulations are a subject of thorough investigation. Many different grid generation, refinement, and improvement techniques in two and three dimensions are now available. <p> Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey [11] and Ong [23], and the group creating two descendants by bisection as in Bansch [7], Kossaczky [19], Maubach <ref> [21] </ref>, Rivara [26], and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices. <p> As the occuring angles are well bounded away from 0 and , the grids are well suited for the computation of finite element solutions to partial differential equations, as was done in <ref> [21] </ref>. local bisection refinement for n-simplicial grids 15 Finally, a short note concerning the recursion depth of the refinement algorithm. In two dimensions, the recursion depth can be actually equal to the maximum k, for any value of k.
Reference: [22] <author> W. F. Mitchell, </author> <title> Optimal multilevel iterative methods for adaptive grids, </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 13 (1992), </volume> <pages> pp. 146-167 </pages>
Reference-contexts: Also here, additional closure refinement is necessary to ensure that refined grids are compatible. The newest vertex bisection method is introduced by Mitchell in <ref> [22] </ref>. The main advantage of his method is that it can be applied to any coarse triangular grid, and such that the number of congruency classes of all triangles in the locally refined grid will be at most four times the number of coarse grid triangles. <p> Now, consider the applicability of the to be presented bisection refinement method. As the method is applicable only to simplicial grids, quadrant and octtant techniques will not be part of the following discussion. This method generalizes the 2-bisection method by Mitchell in <ref> [22] </ref> to n dimensions in the sense that that both methods make use of a special ordering of the vertices of the elements in the grid (triangles in two dimensions). The n-dimensional method turns out to be different from, but equivalent to Mitchell's method in two dimensions. As Mitchell in [22] <p> <ref> [22] </ref> to n dimensions in the sense that that both methods make use of a special ordering of the vertices of the elements in the grid (triangles in two dimensions). The n-dimensional method turns out to be different from, but equivalent to Mitchell's method in two dimensions. As Mitchell in [22] proves that his method can be applied to every coarse grid in two dimensions, the new method automatically inherits this property. Unfortunately, it is not yet clear whether the new method can be applied to any coarse simplicial grid in n dimensions. <p> One of these applications would be the determination of a simplex containing a prescribed point x. Applied to the case of two dimensions, this bisection step is slightly different from that proposed in Mitchell <ref> [22] </ref>. Mitchells newest vertex method for the bisection of a triangle can be defined as follows. <p> The local bisection refinement algorithm. This section introduces the n-dimensional local bisection refinement algorithm, using the local bisection step defined in section 3. The presented algorithm is an extension to the refinement algorithm for two dimensions, given by Mitchell in <ref> [22] </ref>. It will ensure that the resulting locally refined grid of simplices remains compatible at all times. In order to be able to introduce to refinement algorithm, first some elementary definitions. A simplex T 0 is called a neighbor of T if they have a face in common. <p> for the refinement of an n-simplex is given by Refine (simplex): BEGIN WHILE A neighbor is not compatibly divisible DO Refine (neighbor); END; Bisect (simplex); FOR each neighbor: DO Bisect (neighbor); local bisection refinement for n-simplicial grids 13 END; In this case, contrary to the proofs to be found in <ref> [22] </ref>, not graph theory but theorem 4.1 provides the bases for the following theorem, which guarantees that the refinement algorithm terminates. Theorem 5.1. Let T and a neighor T 0 be as in theorem 4.1. <p> The bisection method is applicable to every triangular grid as it is equivalent to Mitchell's method in <ref> [22] </ref>, and can possibly be applied to many tetrahedral grids with the use of additional closure refinement. Moving the grid by shifting the vertices is allowed as this does not alter the vertices' ordering.
Reference: [23] <author> M. Ong, </author> <title> Hierarchical basis preconditioners for second order elliptic problems in three dimensions, </title> <type> Ph.D. thesis, CAM report 89-31, </type> <institution> Department of Mathematics, University of California at Los Angeles, </institution> <address> Los Angeles, CA. </address> <pages> 90024-1555 </pages>
Reference-contexts: This makes the method simple to implement, suited for finite element methods, and highly suitable for parallel processing. Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey [11] and Ong <ref> [23] </ref>, and the group creating two descendants by bisection as in Bansch [7], Kossaczky [19], Maubach [21], Rivara [26], and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices.
Reference: [24] <author> W. C.Rheinboldt, </author> <title> On the computation of multidimensional solution manifolds of parameterized equations, </title> <journal> Numerische Mathematik, </journal> <volume> 53 (1988), </volume> <pages> pp. 165-180 </pages>
Reference: [25] <author> R. Riedinger, M. Habar, P. Oelhafen and H.J. Guntherodt, </author> <title> About the Delaunay-Voronoi tesselation, </title> <journal> Journal of Computational Physics, </journal> <volume> 74 (1988), </volume> <pages> pp. 61-72 </pages>
Reference-contexts: Among the availabe generation methods in two, three, or more dimensions, there are methods based on Voronoi's tessellations as for instance in George and Hecht [15], methods based on Delaunay triangulations as in Bern, Eppstein and Yao [9], in Riedinger et. al <ref> [25] </ref>, and in Schroder and Shephard [27], and methods based on fractal concepts as in Bova and Carey [12]. Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty [2].
Reference: [26] <author> M. C. Rivara, </author> <title> Local modification of meshes for adaptive and/or multigrid finite element methods, </title> <journal> Journal of Computational and Applied Mathematics, </journal> <volume> 36 (1991), </volume> <pages> pp. </pages> <note> 79-89 local bisection refinement for n-simplicial grids 21 </note>
Reference-contexts: Another approach, using bisection refinement, is that of Rivara <ref> [26] </ref>, where for each triangle always the longest edge is bisected. <p> Refinement methods for grids of tetrahedrons can roughly be divided into the group simultaneously creating eight descendants as in Bey [11] and Ong [23], and the group creating two descendants by bisection as in Bansch [7], Kossaczky [19], Maubach [21], Rivara <ref> [26] </ref>, and the method to be presented in this paper. Both the new method and that of Bey generalize to n-dimensional grids of simplices. <p> As mentioned in section 3, the application of the bisection step is likely to lead to grid incompatibilities. It should be pointed out that in many cases one can eliminate the incompatibilities by using additional closure refinement, as for instance in [11] and <ref> [26] </ref>. However, one has to prevent the situation where a shared face has neighbors bisecting different edges, see for instance [7]. 5. The local bisection refinement algorithm. This section introduces the n-dimensional local bisection refinement algorithm, using the local bisection step defined in section 3.
Reference: [27] <author> W. J. Schr oder and M. S. Shephard, </author> <title> Geometry-based fully automatic mesh generation and the Delaunay triangulation, </title> <booktitle> International Journal for Numerical Methods in Engineering 26 (1988), </booktitle> <pages> pp. 2503-2515 </pages>
Reference-contexts: Among the availabe generation methods in two, three, or more dimensions, there are methods based on Voronoi's tessellations as for instance in George and Hecht [15], methods based on Delaunay triangulations as in Bern, Eppstein and Yao [9], in Riedinger et. al [25], and in Schroder and Shephard <ref> [27] </ref>, and methods based on fractal concepts as in Bova and Carey [12]. Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty [2].
Reference: [28] <author> M. S. Shephard and M. K. Georges, </author> <title> Reliability of automatic 3-D mesh generation, </title> <booktitle> Computer Methods in Applied Mechanics and Engineering, 101 (1992), </booktitle> <pages> pp. 443-462 </pages>
Reference-contexts: Mesh improvement techniques include techniques changing the grid topology as in Frey and Field [14], and vertex moving techniques keeping the topology as in Arney and Flaherty [2]. Some techniques guarantee the resulting grid to have certain properties, see for instance Georges and Shephard <ref> [28] </ref>, or Bern and Eppstein [10].
Reference: [29] <author> E. </author> <month> Sperner, </month> <institution> Neuer Beweis fur die Invarianz der Dimensionszahl und des Gebietes, Abh. Math. Sem. Univ. </institution> <address> Hamburg 6 </address>
Reference-contexts: Grids of n-simplices for large n have since long been used in combinatorial fixed point theory, see for instance Sperner <ref> [29] </ref>, Freudentahl [13], and Todd [30], giving an overview of existing combinatorial fixed point methods. The method presented in this paper can theoretically generate all of the grids to be found in [30].
Reference: [30] <author> M. J. Todd, </author> <title> The Computation of Fixed Points and Applications, </title> <booktitle> Lecture Notes in Economics and Mathematical Systems 124, </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin 1976 </address>
Reference-contexts: Grids of n-simplices for large n have since long been used in combinatorial fixed point theory, see for instance Sperner [29], Freudentahl [13], and Todd <ref> [30] </ref>, giving an overview of existing combinatorial fixed point methods. The method presented in this paper can theoretically generate all of the grids to be found in [30]. <p> n-simplices for large n have since long been used in combinatorial fixed point theory, see for instance Sperner [29], Freudentahl [13], and Todd <ref> [30] </ref>, giving an overview of existing combinatorial fixed point methods. The method presented in this paper can theoretically generate all of the grids to be found in [30]. The number of unknowns n in fixed point theory can be compared with the degrees of freedom resulting from a finite element discretization of a partial differential equation, and can be easily in the order of 10,000. <p> It is unlikely that every simplicial grid in n dimensions can have the vertices of each of its simplices ordered properly for the new bisection method. However, for the case where a simplicial grid G is generated by reflections as shown in <ref> [30] </ref> in an k 1 fi fi k n grid of n-cubes covering [a 1 ; b 1 ] fi fi [a n ; b n ], this paper proves that the vertices are properly ordered and that the refinement method can be applied.
References-found: 30

