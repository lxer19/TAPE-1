URL: http://pine.cs.yale.edu:4201/home/stoc93.ps
Refering-URL: http://pine.cs.yale.edu:4201/home/stoc93-abstract.html
Root-URL: http://www.cs.yale.edu
Email: E-mail: fiat@math.tau.ac.il  E-Mail: plotkin@cs.stanford.edu.  E-Mail: orli@cs.stanford.edu.  
Title: On-Line Routing of Virtual Circuits with Applications to Load Balancing and Machine Scheduling  
Author: James Aspnes Yossi Azar Amos Fiat Serge Plotkin Orli Waarts k k 
Note: Israel. Supported by a grant from the Israel Science Foundation, administered by the Israel Academy of Sciences.  Research supported by ARO Grant DAAH04-95-1-0121, NSF Grant CCR-9304971, and Terman Fellowship.  Part of this research was done while the author was with Stanford University, supported by U.S. Army Res. Office Grant DAAL-03-91-G-0102.  
Affiliation: Department of Computer Science, Tel-Aviv University,  -Dept. of Computer Science, Stanford University.  IBM Almaden Research Center.  
Abstract: In this paper we study the problem of on-line allocation of routes to virtual circuits (both point-to-point and multicast) where the goal is to route all requests while minimizing the required bandwidth. We concentrate on the case of permanent virtual circuits (i.e., once a circuit is established, it exists forever), and describe an algorithm that achieves an O(log n) competitive ratio with respect to maximum congestion, where n is the number of nodes in the network. Informally, our results show that instead of knowing all of the future requests, it is sufficient to increase the bandwidth of the communication links by an O(log n) factor. We also show that this result is tight, i.e. for any on-line algorithm there exists a scenario in which (log n) increase in bandwidth is necessary in directed networks. We view virtual circuit routing as a generalization of an on-line load balancing problem, defined as follows: jobs arrive on line and each job must be assigned to one of the machines immediately upon arrival. Assigning a job to a machine increases this machine's load by an amount that depends both on the job and on the machine. The goal is to minimize the maximum load. For the related machines case, we describe the first algorithm that achieves constant competitive ratio. For the unrelated case (with n machines), we describe a new method that yields O(log n)-competitive algorithm. This stands in contrast to the natural greedy approach, whose competitive ratio is exactly n. fl A preliminary version of this paper was presented at the 1993 ACM Symposium on Theory of Computing. y Department of Computer Science, Yale University. During part of this research this author was visiting IBM Almaden Research Center. z Department of Computer Science, Tel-Aviv University, Israel. Portion of this work was done while the author was at Digital Systems Research Center. Supported by an Alon fellowship and a grant from the Israel Science Foundation, administered by the Israel Academy of Sciences. E-Mail: azar@math.tau.ac.il 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Special issue on Asynchronous Transfer Mode. </editor> <title> Int. </title> <journal> Journal of Digital and Analog Cabled Systems, </journal> <volume> 1(4), </volume> <year> 1988. </year>
Reference-contexts: The network guarantees that the reserved bandwidth will indeed be available as long as needed, creating an illusion of a real circuit dedicated to the customer. One of the basic services that appears in the proposals for future high-speed networks (e.g. ATM <ref> [1] </ref>) is the permanent virtual circuit (PVC) service. <p> Therefore, in order to show that the potential function does not increase, it is sufficient to show that 8x 2 <ref> [0; 1] </ref> : fl (a x 1) x, which is true for a = 1 + 1=fl. Initially, (0) flm, where m is the number of edges in the graph. <p> Therefore, in order to show that the potential function does not increase, it is sufficient to show that 8x 2 <ref> [0; 1] </ref> : fl (a x 1) x. This is true for a = 1 + 1=fl.
Reference: [2] <author> B. Awerbuch and Y. Azar. </author> <title> Local optimization of global objectives: Competitive distributed deadlock resulution and resource allocation. </title> <booktitle> In Proc. 35th IEEE Symp. on Found. of Comp. Science, </booktitle> <pages> pages 240-249, </pages> <year> 1994. </year>
Reference-contexts: Several recent papers show how to extend the techniques developed in this paper to more general cases, including the routing of switched virtual circuits (SVC), i.e. circuits that have limited duration in time [11, 6], concurrent routing <ref> [2] </ref>, routing with limited rerouting [7], and min-cost circuit routing [4]. Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. <p> The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in [9, 8, 27]. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions. In <ref> [2] </ref>, Awerbuch and Azar extended the techniques of this paper to the case where there are concurrent requests that have to be satisfied in a decentralized fashion. See [32] for a survey of different online routing strategies.
Reference: [3] <author> B. Awerbuch and Y. Azar. </author> <title> Competitive multicast routing. </title> <journal> Wireless Networks, </journal> <volume> 1 </volume> <pages> 107-114, </pages> <year> 1995. </year>
Reference-contexts: Multicast circuits were analyzed in <ref> [3] </ref>. Analysis of routing in a Poisson arrivals model was done in [21]. Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks.
Reference: [4] <author> B. Awerbuch, Y. Azar, and A. Fiat. </author> <title> Packet routing via min-cost circuit routing. </title> <booktitle> In 4th Israeli Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 37-42, </pages> <year> 1996. </year>
Reference-contexts: Several recent papers show how to extend the techniques developed in this paper to more general cases, including the routing of switched virtual circuits (SVC), i.e. circuits that have limited duration in time [11, 6], concurrent routing [2], routing with limited rerouting [7], and min-cost circuit routing <ref> [4] </ref>. Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks.
Reference: [5] <author> B. Awerbuch, Y. Azar, E. Grove, M. Kao, P. Krishnan, and J. Vitter. </author> <title> Load balancing in the l p norm. </title> <booktitle> In Proc. 36th IEEE Symp. on Found. of Comp. Science, </booktitle> <pages> pages 383-391, </pages> <year> 1995. </year>
Reference-contexts: See [32] for a survey of different online routing strategies. We note that another measure of performance for load balancing algorithms appears in <ref> [5] </ref> who provided competitive algorithms for that measure. 2 Virtual Circuit Routing In this section we consider the problem of on-line routing of virtual circuits in a capacitated network.
Reference: [6] <author> B. Awerbuch, Y. Azar, and S. Plotkin. </author> <title> Throughput competitive on-line routing. </title> <booktitle> In Proc. 34th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 32-40, </pages> <month> Novem-ber </month> <year> 1993. </year>
Reference-contexts: Several recent papers show how to extend the techniques developed in this paper to more general cases, including the routing of switched virtual circuits (SVC), i.e. circuits that have limited duration in time <ref> [11, 6] </ref>, concurrent routing [2], routing with limited rerouting [7], and min-cost circuit routing [4]. Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. <p> The techniques presented here were extended by Awerbuch, Azar, and Plotkin <ref> [6] </ref> to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in [9, 8, 27]. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions.
Reference: [7] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts. </author> <title> Competitive routing of virtual circuits with unknown duration. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 321-327, </pages> <month> January </month> <year> 1994. </year> <month> 17 </month>
Reference-contexts: Several recent papers show how to extend the techniques developed in this paper to more general cases, including the routing of switched virtual circuits (SVC), i.e. circuits that have limited duration in time [11, 6], concurrent routing [2], routing with limited rerouting <ref> [7] </ref>, and min-cost circuit routing [4]. Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. <p> For the case where the coordinates of the load vector are restricted to be 1 or 1, Phillips and Westbrook [31] proposed an algorithm that achieves O (log n) compet 3 itive ratio while making O (1) amortized reassignments per job. The general case was considered in <ref> [7] </ref>, who show how to extend the techniques presented here to design an O (log n)-competitive algorithm with respect to load that reroutes each circuit at most O (log n) times.
Reference: [8] <author> B. Awerbuch, R. Gawlick, T. Leighton, and Y. Rabani. </author> <title> On-line admission control and circuit routing for high-performance computing and communication. </title> <booktitle> In Proc. 35th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 412-423, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in <ref> [9, 8, 27] </ref>. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions. In [2], Awerbuch and Azar extended the techniques of this paper to the case where there are concurrent requests that have to be satisfied in a decentralized fashion.
Reference: [9] <author> B. Awerbuch, Y.Bartal, A. Fiat, and A. Rosen. </author> <title> Competitive non-preemptive call control. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in <ref> [9, 8, 27] </ref>. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions. In [2], Awerbuch and Azar extended the techniques of this paper to the case where there are concurrent requests that have to be satisfied in a decentralized fashion.
Reference: [10] <author> Y. Azar, A. Broder, and A. Karlin. </author> <title> On-line load balancing. </title> <booktitle> In Proc. 33rd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 218-225, </pages> <year> 1992. </year>
Reference-contexts: All the results in this paper concentrate on the case where jobs and virtual circuits are permanent, i.e. jobs never leave and virtual circuits never terminate. Azar, Broder, and Karlin <ref> [10] </ref> introduced a natural generalization of this model, in which requests have duration in time. <p> Similar results can be achieved for the virtual circuit routing problem. Recently, the lower bound in <ref> [10] </ref> was simplified and improved by Ma and Plotkin [29]. In particular, their bound implies that we can not expect to have a poly (lognT ) competitive algorithm for the unknown duration case.
Reference: [11] <author> Y. Azar, B. Kalyanasundaram, S. Plotkin, K. Pruhs, and O. Waarts. </author> <title> On-line load balancing of temporary tasks. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <pages> pages 119-130, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Several recent papers show how to extend the techniques developed in this paper to more general cases, including the routing of switched virtual circuits (SVC), i.e. circuits that have limited duration in time <ref> [11, 6] </ref>, concurrent routing [2], routing with limited rerouting [7], and min-cost circuit routing [4]. Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. <p> This lower bound suggests considering the case where the duration of a request becomes known upon its arrival (the known duration case). The methods developed in this paper were generalized in <ref> [11] </ref>, giving an O (log nT )-competitive algorithm for the problems of scheduling unrelated machines in the known duration case, where T is the ratio of maximum to minimum duration. Similar results can be achieved for the virtual circuit routing problem.
Reference: [12] <author> Y. Azar, J. Naor, and R. </author> <title> Rom. The competitiveness of on-line assignment. </title> <booktitle> In Proc. 3rd ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 203-210, </pages> <year> 1992. </year>
Reference-contexts: All other cases are referred to as unrelated machines. The special case where all coordinates of the load vector are either 1 or equal to a given value that depends only on the job, was considered in <ref> [12] </ref>, who described an O (log n)-competitive algorithm. This case can be viewed as a hybrid between the identical and the unrelated machines case, and it is incomparable to the related machines case. A similar special case was studied in [25]. <p> We show that for the unrelated machines case, the natural greedy algorithm is exactly n-competitive. This bound should be contrasted with the optimal O (log n)-competitive greedy strategy of <ref> [12] </ref> for the special case where all coordinates of the load vector are either 1 or equal to a given value that depends only on the job. Thus, the unrelated machines case requires development of new techniques. <p> Thus, the unrelated machines case requires development of new techniques. We introduce a new approach that leads to an O (log n)- competitive algorithm for the general unrelated machines case. As shown in <ref> [12] </ref>, this is the best bound on the competitive ratio one can hope for in this case. It is easy to see that the identical and related machines problems are special cases of virtual circuit routing. <p> Our lower bound also holds for randomized algorithms working against an oblivious adversary, i.e. an adversary that has to generate new requests independently of the outcome of the coin flips of the online algorithm. The basic idea is to modify the lower bound of Azar, Naor and Rom <ref> [12] </ref> for on-line load balancing. Without loss of generality, assume that n is a power of 2. Consider a directed graph that has a single source s, connected to each one of n vertices v 1 ; v 2 ; : : : ; v n . <p> By changing the value of fl, one can trade off the multiplicative factor against the additive term. Observe that log n is a lower bound even for the restricted case considered in <ref> [12] </ref>. Moreover, it is interesting to note that for the case where the coordinates of the load vector p (j) are either 1 or equal to some constant p j that depends only on the job j, our algorithm behaves exactly like the greedy algorithm considered in [12]. 3.2 Related Machines <p> case considered in <ref> [12] </ref>. Moreover, it is interesting to note that for the case where the coordinates of the load vector p (j) are either 1 or equal to some constant p j that depends only on the job j, our algorithm behaves exactly like the greedy algorithm considered in [12]. 3.2 Related Machines The related machines case is a generalization of the identical machines case. In Section 4 we show that a natural generalization for the related machines case of Graham's greedy algorithm for the identical machines case, leads to an fi (log n) competitive ratio. <p> Assign-R can be modified to achieve a competitive ratio of 8. 4 The Greedy Algorithm The simple greedy machine load balancing algorithm due to Graham [19] gives a competitive ratio of 2 for the identical machines case and competitive ratio of O (log n) for the special case considered in <ref> [12] </ref>. It is natural to consider whether extensions of this algorithm can lead to small competitive ratios in the respectively more general cases of related and unrelated machines. In this section we show that, unfortunately, this is not the case.
Reference: [13] <author> Y. Bartal, A. Fiat, H. Karloff, and R. Vohra. </author> <title> New algorithms for an ancient scheduling problem. </title> <booktitle> In Proc. 24th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1992. </year>
Reference-contexts: In the identical machines case, all the coordinates of a load vector are the same. This case was first considered by Graham [19], who showed a (2 1 n )-competitive algorithm, where n is the number of machines. The bound was improved in <ref> [13] </ref> to 2 * for a small constant * (the value of * was further improved in [22]).
Reference: [14] <author> A. Borodin, N. Linial, and M. Saks. </author> <title> An optimal online algorithm for metrical task systems. </title> <journal> J. ACM, </journal> (39):745-763, 1992. 
Reference-contexts: Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in [36] and further developed in <ref> [24, 14, 30] </ref>. In our case, it corresponds to 1 the supremum, over all possible input sequences, of the ratio of the maximum relative load achieved by the on-line algorithm to the maximum relative load achieved by the optimal offline algorithm.
Reference: [15] <author> J. Garay, I. Gopal, S. Kutten, Y. Mansour, and M. Yung. </author> <title> Efficient on-line call control algorithms. </title> <booktitle> In Proc. of 2nd Annual Israel Conference on Theory of Computing and Systems, </booktitle> <year> 1993. </year>
Reference-contexts: The goal is to maximize the amortized throughput. A competitive algorithm that maximizes the throughput in a single-link case was provided by Garay and Gopal [16]; the case where the network consists of single line of nodes was considered by Garay, Gopal, Kutten, Mansour and Yung in <ref> [15] </ref>. The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in [9, 8, 27]. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions.
Reference: [16] <author> J.A. </author> <title> Garay and I.S. Gopal. Call preemption in communication networks. </title> <booktitle> In Proc. </booktitle> <volume> INFO-COM '92, volume 44, </volume> <pages> pages 1043-1050, </pages> <address> Florence, Italy, </address> <year> 1992. </year>
Reference-contexts: The goal is to maximize the amortized throughput. A competitive algorithm that maximizes the throughput in a single-link case was provided by Garay and Gopal <ref> [16] </ref>; the case where the network consists of single line of nodes was considered by Garay, Gopal, Kutten, Mansour and Yung in [15]. The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology.
Reference: [17] <author> R. Gawlick, C. Kalmanek, and K. Ramakrishnan. </author> <title> On-line permanent virtual circuit routing. </title> <booktitle> In Proceedings of IEEE Infocom, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. Simulation and implementation results described in <ref> [17, 18] </ref> indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in [36] and further developed in [24, 14, 30].
Reference: [18] <author> R. Gawlick, A. Kamath, S. Plotkin, and K. Ramakrishnan. </author> <title> Routing and admission control in general topology networks. </title> <type> Technical Report STAN-CS-TR-95-1548, </type> <institution> Stanford University, </institution> <year> 1995. </year>
Reference-contexts: Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in [21]. Simulation and implementation results described in <ref> [17, 18] </ref> indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in [36] and further developed in [24, 14, 30].
Reference: [19] <author> R.L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Technical Journal, </journal> <volume> 45 </volume> <pages> 1563-1581, </pages> <year> 1966. </year>
Reference-contexts: In the identical machines case, all the coordinates of a load vector are the same. This case was first considered by Graham <ref> [19] </ref>, who showed a (2 1 n )-competitive algorithm, where n is the number of machines. The bound was improved in [13] to 2 * for a small constant * (the value of * was further improved in [22]). <p> The related machines case is a generalization of the identical machines problem, for which Graham <ref> [19] </ref> has shown that a greedy algorithm achieves a constant competitive ratio. Thus, it is natural to ask whether an adaptation of such an algorithm can give a constant competitive ratio for the related machines case as well. <p> Since the designed performance guarantee of Assign-R is 2, we get: 13 Theorem 3.3 Algorithm Assign-R can be modified to achieve a competitive ratio of 8. 4 The Greedy Algorithm The simple greedy machine load balancing algorithm due to Graham <ref> [19] </ref> gives a competitive ratio of 2 for the identical machines case and competitive ratio of O (log n) for the special case considered in [12].
Reference: [20] <author> R.L. Graham, E.L. Lawler, J.K Lenstra, and A.H.G. Rinnooy Kan. </author> <title> Optimization and approximation in deterministic sequencing and scheduling: a survey. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 5 </volume> <pages> 287-326, </pages> <year> 1979. </year>
Reference-contexts: Once a job is assigned, it cannot be re-assigned. The objective is to minimize the maximum load. The load balancing problems can be categorized into three classes according to the properties of the load vectors, as it is done for the non-preemptive scheduling problems <ref> [20] </ref>. In the identical machines case, all the coordinates of a load vector are the same. This case was first considered by Graham [19], who showed a (2 1 n )-competitive algorithm, where n is the number of machines.
Reference: [21] <author> A. Kamath, O. Palmon, and S. Plotkin. </author> <title> Routing and admission control in general topology networks with poisson arrivals. </title> <booktitle> In Proc. 7th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 269-278, </pages> <year> 1996. </year>
Reference-contexts: Multicast circuits were analyzed in [3]. Analysis of routing in a Poisson arrivals model was done in <ref> [21] </ref>. Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks.
Reference: [22] <author> D. Karger, S. Phillips, and E. Torng. </author> <title> A better algorithm for an ancient scheduling problem. </title> <type> Unpublished manuscript, </type> <year> 1993. </year> <month> 18 </month>
Reference-contexts: This case was first considered by Graham [19], who showed a (2 1 n )-competitive algorithm, where n is the number of machines. The bound was improved in [13] to 2 * for a small constant * (the value of * was further improved in <ref> [22] </ref>). In the related machines case, the ith coordinate of each load vector is equal to w (j)=v (i), where the "weight" w (j) depends only on the job j and the "speed" v (i) depends only on the machine i. All other cases are referred to as unrelated machines.
Reference: [23] <author> D. Karger and S. Plotkin. </author> <title> Adding multiple cost constraints to combinatorial optimiza-tion problems, with applications to multicommodity flows. </title> <booktitle> In Proc. 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 18-25, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Our virtual circuit algorithms give an optimal O (log n) competitive ratio for this problem. Other related work Some of the techniques which are used for our on-line framework are based on ideas developed in the context of approximation algorithms for the multicommodity flow and related problems (see eg. <ref> [34, 26, 28, 33, 23] </ref>). In particular, we assign each link a weight that is exponential in the link's load, and choose the routes by computing shortest paths with respect to this weight.
Reference: [24] <author> A.R. Karlin, M.S. Manasse, L.Rudolph, and D.D. Sleator. </author> <title> Competitive snoopy caching. </title> <journal> Algorithmica, </journal> <volume> 1(3) </volume> <pages> 70-119, </pages> <year> 1988. </year>
Reference-contexts: Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in [36] and further developed in <ref> [24, 14, 30] </ref>. In our case, it corresponds to 1 the supremum, over all possible input sequences, of the ratio of the maximum relative load achieved by the on-line algorithm to the maximum relative load achieved by the optimal offline algorithm.
Reference: [25] <author> R. Karp, U. Vazirani, and V. Vazirani. </author> <title> An optimal algorithm for on-line bipartite matching. </title> <booktitle> In Proc. 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 352-358, </pages> <year> 1990. </year>
Reference-contexts: This case can be viewed as a hybrid between the identical and the unrelated machines case, and it is incomparable to the related machines case. A similar special case was studied in <ref> [25] </ref>. In this paper we show an O (log n)-competitive algorithm for the unrelated machines case, and an 8-competitive algorithm for the related machines case.
Reference: [26] <author> P. Klein, S. Plotkin, C. Stein, and E. Tardos. </author> <title> Faster approximation algorithms for the unit capacity concurrent flow problem with applications to routing and finding sparse cuts. </title> <type> Technical Report 961, </type> <institution> School of Operations Research and Industrial Engineering, Cornell University, </institution> <year> 1991. </year>
Reference-contexts: Our virtual circuit algorithms give an optimal O (log n) competitive ratio for this problem. Other related work Some of the techniques which are used for our on-line framework are based on ideas developed in the context of approximation algorithms for the multicommodity flow and related problems (see eg. <ref> [34, 26, 28, 33, 23] </ref>). In particular, we assign each link a weight that is exponential in the link's load, and choose the routes by computing shortest paths with respect to this weight.
Reference: [27] <author> J. Kleinberg and E. Tardos. </author> <title> Disjoint path in densely embedded graphs. </title> <booktitle> In Proc. 36th IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <year> 1995. </year>
Reference-contexts: The techniques presented here were extended by Awerbuch, Azar, and Plotkin [6] to provide competitive solutions for networks with unrestricted topology. Other studies on the throughput performance measure appear in <ref> [9, 8, 27] </ref>. Our routing and scheduling algorithms assume a central scheduler that makes all the decisions. In [2], Awerbuch and Azar extended the techniques of this paper to the case where there are concurrent requests that have to be satisfied in a decentralized fashion.
Reference: [28] <author> T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos, and S. Tragoudas. </author> <title> Fast approximation algorithms for multicommodity flow problem. </title> <booktitle> In Proc. 23th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 101-111, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Our virtual circuit algorithms give an optimal O (log n) competitive ratio for this problem. Other related work Some of the techniques which are used for our on-line framework are based on ideas developed in the context of approximation algorithms for the multicommodity flow and related problems (see eg. <ref> [34, 26, 28, 33, 23] </ref>). In particular, we assign each link a weight that is exponential in the link's load, and choose the routes by computing shortest paths with respect to this weight.
Reference: [29] <author> Y. Ma and S. Plotkin. </author> <title> Improved lower bounds for load balancing of tasks with unknown duration. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: Similar results can be achieved for the virtual circuit routing problem. Recently, the lower bound in [10] was simplified and improved by Ma and Plotkin <ref> [29] </ref>. In particular, their bound implies that we can not expect to have a poly (lognT ) competitive algorithm for the unknown duration case. Another way to overcome the lower bound in the unknown-duration case is to allow reassignments of existing jobs.
Reference: [30] <author> M.S. Manasse, L.A. McGeoch, and D.D. Sleator. </author> <title> Competitive algorithms for online problems. </title> <booktitle> In Proc. 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 322-332, </pages> <year> 1988. </year>
Reference-contexts: Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in [36] and further developed in <ref> [24, 14, 30] </ref>. In our case, it corresponds to 1 the supremum, over all possible input sequences, of the ratio of the maximum relative load achieved by the on-line algorithm to the maximum relative load achieved by the optimal offline algorithm.
Reference: [31] <author> S. Phillips and J. Westbrook. </author> <title> Online load balancing and network flow. </title> <booktitle> In Proc. 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 402-411, </pages> <year> 1993. </year>
Reference-contexts: Another way to overcome the lower bound in the unknown-duration case is to allow reassignments of existing jobs. For the case where the coordinates of the load vector are restricted to be 1 or 1, Phillips and Westbrook <ref> [31] </ref> proposed an algorithm that achieves O (log n) compet 3 itive ratio while making O (1) amortized reassignments per job.
Reference: [32] <author> S. Plotkin. </author> <title> Competitive routing in ATM networks. </title> <journal> IEEE J. Selected Areas in Comm., </journal> <pages> pages 1128-1136, </pages> <month> August </month> <year> 1995. </year> <booktitle> Special issue on Advances in the Fundamentals of Networking. </booktitle>
Reference-contexts: Our routing and scheduling algorithms assume a central scheduler that makes all the decisions. In [2], Awerbuch and Azar extended the techniques of this paper to the case where there are concurrent requests that have to be satisfied in a decentralized fashion. See <ref> [32] </ref> for a survey of different online routing strategies.
Reference: [33] <author> S. Plotkin, D. Shmoys, and E. Tardos. </author> <title> Fast approximation algorithms for fractional packing and covering problems. </title> <booktitle> In Proc. 32nd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 495-504, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: Our virtual circuit algorithms give an optimal O (log n) competitive ratio for this problem. Other related work Some of the techniques which are used for our on-line framework are based on ideas developed in the context of approximation algorithms for the multicommodity flow and related problems (see eg. <ref> [34, 26, 28, 33, 23] </ref>). In particular, we assign each link a weight that is exponential in the link's load, and choose the routes by computing shortest paths with respect to this weight.
Reference: [34] <author> F. Shahrokhi and D. Matula. </author> <title> The maximum concurrent flow problem. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 37 </volume> <pages> 318-334, </pages> <year> 1990. </year>
Reference-contexts: Our virtual circuit algorithms give an optimal O (log n) competitive ratio for this problem. Other related work Some of the techniques which are used for our on-line framework are based on ideas developed in the context of approximation algorithms for the multicommodity flow and related problems (see eg. <ref> [34, 26, 28, 33, 23] </ref>). In particular, we assign each link a weight that is exponential in the link's load, and choose the routes by computing shortest paths with respect to this weight.
Reference: [35] <author> D. Shmoys, J. Wein, and D.P. Williamson. </author> <title> Scheduling parallel machines on-line. </title> <booktitle> In Proc. 32nd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 131-140, </pages> <year> 1991. </year>
Reference-contexts: Our (non-greedy) 8-competitive algorithm for this problem can be viewed as an adaptation of the scheduling algorithm of Shmoys, Wein, and Williamson <ref> [35] </ref> to 2 the context of load balancing. We show that for the unrelated machines case, the natural greedy algorithm is exactly n-competitive. <p> Roughly speaking, the algorithm will assign jobs to the slowest machine possible while making sure that the maximum load will not exceed an appropriately chosen bound. The idea of assigning each job to the "least capable machine" first appeared in the paper by Shmoys, Wein, and Williamson <ref> [35] </ref>, where they considered an online scheduling problem. Algorithm Assign-R is shown in Figure 3. The basic step is to assign job j to the slowest machine such that the load on this machine will be below 2fl after the assignment.
Reference: [36] <author> D.D. Sleator and R.E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Comm. ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year>
Reference-contexts: Simulation and implementation results described in [17, 18] indicate that online routing algorithms based on our techniques outperform traditional algorithms for routing virtual circuits in ATM networks. As customary, we evaluate the performance of the on-line algorithms in terms of competitive ratio, introduced in <ref> [36] </ref> and further developed in [24, 14, 30]. In our case, it corresponds to 1 the supremum, over all possible input sequences, of the ratio of the maximum relative load achieved by the on-line algorithm to the maximum relative load achieved by the optimal offline algorithm.
Reference: [37] <author> H. Takahashi and A. </author> <title> Matsuyama. An approximate solution for the steiner problem in graphs. </title> <journal> Math. Japonica, </journal> <volume> 24, </volume> <year> 1980. </year> <month> 19 </month>
Reference-contexts: Instead of routing the multicast call over the min-weight Steiner tree, we route it over a tree that is a constant factor approximation to the min-weight Steiner tree. Such trees can be found by applying a min-cost spanning tree algorithm over an appropriately constructed graph <ref> [37] </ref>. If we use a 2-approximation to the min-weight steiner tree then in the 3rd and 4th lines of Equation (3) the value fl is replaced by 2fl.
References-found: 37

