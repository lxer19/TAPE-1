URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/icalp94.ASB.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu/~vigyan/publications/index.html
Root-URL: http://www.cs.berkeley.edu
Email: Email: fadnan,vigyan,felice,brayton,albertog@cs.berkeley.edu  
Title: Equivalences for fair Kripke structures  
Author: Adnan Aziz Vigyan Singhal Felice Balarin Robert K. Brayton Alberto L. Sangiovanni-Vincentelli 
Address: Berkeley, CA 94720, USA  
Affiliation: University of California,  
Abstract: We extend the notion of bisimulation to Kripke structures with fairness. We define equivalences that preserve fairness and are akin to bisimulation. Specifically we define an equivalence and show that it is complete in the sense that it is the coarsest equivalence that preserves the logic CTL fl interpreted with respect to the fair paths. We show that the addition of fairness might cause two Kripke structures, which can be distinguished by a CTL fl formula, to become indistinguishable by any CTL formula. We also define another weaker equivalence that is the weakest equivalence preserving CTL interpreted on the fair paths. As a consequence of our proof, we also obtain characterizations of states in the fair structure in terms of CTL fl and CTL formulae.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> A. Aziz, V. Singhal, G. M. Swamy, and R. K. Brayton. </author> <title> Minimizing Interacting Finite State Machines. </title> <type> Technical Report UCB/ERL M93/68, </type> <institution> Electronics Research Lab, Univ. of California, Berkeley, </institution> <address> CA 94720, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Furthermore we characterized the equivalence classes by formulae from the logic. We have developed approximations to the complete equivalence that can be efficiently computed for Buchi, Rabin, and Streett fairness conditions. These are used in a hierarchical procedure for minimizing systems of interacting state machines <ref> [1] </ref>. We plan to continue developing generalized notions of equivalence that are property specific, and can be used to reduce or abstract components in large designs.
Reference: 2. <author> M. C. Browne, E. M. Clarke, and O. Grumberg. </author> <title> Characterizing Finite Kripke Structures in Propositional Temporal Logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 59 </volume> <pages> 115-131, </pages> <year> 1988. </year>
Reference-contexts: Since we allow the fairness constraints to be a Boolean combination of infinitary linear time operators applied to state labels, the fair Kripke structure specification is as powerful as any kind of !- automata [8]. Browne, Clarke and Grumberg <ref> [2] </ref> characterized finite Kripke structures in temporal logic. They showed that any two Kripke structures that can be distinguished by a CTL fl formula can also be distinguished by a CTL formula. They provide a CTL formula which characterizes Kripke structures up to bisimulation equivalence. <p> They provide a CTL formula which characterizes Kripke structures up to bisimulation equivalence. Bisimulation equivalence is exactly the equivalence that preserves all CTL and CTL fl formulas. In this paper, we solve an open problem proposed in <ref> [2] </ref> of characterizing equivalence classes for Kripke structures with fairness constraints. We show that, unlike ordinary Kripke structures, there exists a pair of fair Kripke structures which can be distinguished by a CTL fl formula, whereas no CTL formula can distinguish these two. <p> The problem of FairCTL fl model checking can be solved using the algorithm for CTL fl model checking by introducing additional atomic propositions which evaluate state labels, and then transforming the formula using these additional propositions [4]. However, the characterization of states in Kripke structures for CTL fl equivalence <ref> [2] </ref> does not solve the problem of characterizing states in fair Kripke structures. This is especially important when one considers fairness constraints as part of the system specification. <p> In the absence of fairness conditions on the paths through the Kripke struc-ture, Browne, Clarke, and Grumberg prove the following completeness result <ref> [2] </ref>: Theorem 2. Let s; t be states in K. Then E bis (s; t) if and only if there is no CTL formula such that s j= ^ t 6j= . <p> States that agree on all CTL formulae in the absence of fairness In this section we define two equivalences on the states of fair-Kripke structures. We prove completeness results with respect to CTL fl and CTL, using arguments analogous to those in <ref> [2] </ref>. Essentially, our equivalences incorporate fairness constraints by requiring that states be equivalent on all fair paths. We show that it suffices to examine a restricted class of paths, namely the rational paths defined below. Definition 3. Let be a path through a Kripke structure K.
Reference: 3. <author> E. M. Clarke, J. R. Burch, O. Grumberg, D. E. Long, and K. L. McMillan. </author> <title> Automatic Verification of Sequential Circuit Designs. </title> <journal> Phil. Trans. of the Royal Society of London, </journal> <volume> 339 </volume> <pages> 105-120, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Branching time propositional temporal logic has been found very useful in the automatic verification of concurrent finite-state systems <ref> [3] </ref>. The systems are modelled using labelled state transition structures called Kripke or temporal structures [5]. The properties that one wishes to verify can be expressed in terms of a branching-time temporal logic. One of the simplest such logics is CTL (Computational Tree Logic) described in [4].
Reference: 4. <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic Verification of Finite-State Concurrent Systems Using Temporal Logic Specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <year> 1986. </year>
Reference-contexts: The systems are modelled using labelled state transition structures called Kripke or temporal structures [5]. The properties that one wishes to verify can be expressed in terms of a branching-time temporal logic. One of the simplest such logics is CTL (Computational Tree Logic) described in <ref> [4] </ref>. While the problem of model-checking CTL formulas of a Kripke structure is of polynomial complexity, CTL suffers in expressiveness. The richer logic CTL fl , described in [6], adds the power of linear-time propositional logic to CTL, and subsumes both CTL and PLTL (Propositional Linear Time Logic). <p> The richer logic CTL fl , described in [6], adds the power of linear-time propositional logic to CTL, and subsumes both CTL and PLTL (Propositional Linear Time Logic). However, the problem of model checking becomes PSPACE-complete <ref> [4] </ref>. The major limitation of CTL is that it cannot express correctness under fairness constraints. Fairness constraints allow us to reason about only those infinite paths in the Kripke structure which satisfy some fairness specification, which is evaluated over the infinite path. <p> The fairness constraint is a Boolean combination of the set of infinitary linear time operators applied to propositional arguments [5]. The path quantifiers in the syntax of the formula now range over only those infinite paths which meet the fairness constraint . In <ref> [4] </ref>, a more general specification CTL F is allowed, where the fairness is defined in terms of state labels. This allows us to distinguish between two different ? Supported by SRC Grant 93-DC-008 and NSF/DARPA Grant MIP-8719546 states which cannot be distinguished by any propositional temporal logic formu-lae. <p> The problem of FairCTL fl model checking can be solved using the algorithm for CTL fl model checking by introducing additional atomic propositions which evaluate state labels, and then transforming the formula using these additional propositions <ref> [4] </ref>. However, the characterization of states in Kripke structures for CTL fl equivalence [2] does not solve the problem of characterizing states in fair Kripke structures. This is especially important when one considers fairness constraints as part of the system specification.
Reference: 5. <author> E. A. Emerson. </author> <title> Temporal and Modal Logic. </title> <editor> In J. van Leeuwen, editor, </editor> <title> Formal Models and Semantics, </title> <booktitle> volume B of Handbook of Theoretical Computer Science, </booktitle> <pages> pages 996-1072. </pages> <publisher> Elsevier Science, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction Branching time propositional temporal logic has been found very useful in the automatic verification of concurrent finite-state systems [3]. The systems are modelled using labelled state transition structures called Kripke or temporal structures <ref> [5] </ref>. The properties that one wishes to verify can be expressed in terms of a branching-time temporal logic. One of the simplest such logics is CTL (Computational Tree Logic) described in [4]. <p> The logic FairCTL allows the specification of a CTL formula p along with a path formula . The fairness constraint is a Boolean combination of the set of infinitary linear time operators applied to propositional arguments <ref> [5] </ref>. The path quantifiers in the syntax of the formula now range over only those infinite paths which meet the fairness constraint . In [4], a more general specification CTL F is allowed, where the fairness is defined in terms of state labels. <p> This allows us to distinguish between two different ? Supported by SRC Grant 93-DC-008 and NSF/DARPA Grant MIP-8719546 states which cannot be distinguished by any propositional temporal logic formu-lae. The notion of fairness used in our paper is the extension of <ref> [5] </ref>, where we allow the infinitary linear time operators in to refer to state labels also. The model-checking problem for FairCTL (and CTL F ) can be solved in polynomial time.
Reference: 6. <author> E. A. Emerson and J. Y. Halpern. </author> <title> "Sometimes" and "Not Never" Revisited: on Branching versus Linear Time Temporal Logic. </title> <journal> Journal of the ACM, </journal> <volume> 33(1) </volume> <pages> 151-178, </pages> <year> 1986. </year>
Reference-contexts: One of the simplest such logics is CTL (Computational Tree Logic) described in [4]. While the problem of model-checking CTL formulas of a Kripke structure is of polynomial complexity, CTL suffers in expressiveness. The richer logic CTL fl , described in <ref> [6] </ref>, adds the power of linear-time propositional logic to CTL, and subsumes both CTL and PLTL (Propositional Linear Time Logic). However, the problem of model checking becomes PSPACE-complete [4]. The major limitation of CTL is that it cannot express correctness under fairness constraints.
Reference: 7. <author> Robert J. van Glabbeek. </author> <title> Comparative Concurrency Sematics and Refinement of Actions. </title> <type> PhD thesis, </type> <institution> Centrum voor Wiskunde en Informatica, Vrije Universiteit te Amsterdam, </institution> <address> Amsterdam, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: In fact, these two structures are not even trace equivalent, which is surprising because in the case of ordinary Kripke structures bisimulation equivalence is the finest equivalence and trace equivalence is the coarsest equivalence in the linear time branching time spectrum <ref> [7] </ref>. Since, for fair Kripke structures, the notion of equivalence is different for CTL and CTL fl formulas, we provide two different extensions of bisimulation equivalence which deal with fairness constraints.
Reference: 8. <author> Shmuel Safra. </author> <title> Complexity of Automata on Infinite Objects. </title> <type> PhD thesis, </type> <institution> The Weiz-mann Institute of Science, Rehovot, Israel, </institution> <month> March </month> <year> 1989. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: Since we allow the fairness constraints to be a Boolean combination of infinitary linear time operators applied to state labels, the fair Kripke structure specification is as powerful as any kind of !- automata <ref> [8] </ref>. Browne, Clarke and Grumberg [2] characterized finite Kripke structures in temporal logic. They showed that any two Kripke structures that can be distinguished by a CTL fl formula can also be distinguished by a CTL formula. They provide a CTL formula which characterizes Kripke structures up to bisimulation equivalence. <p> Fairness conditions express restrictions on the infinitary behavior of the system. Various formalisms exist for defining fair paths, e.g Buchi, Streett, Rabin, and Muller conditions <ref> [8] </ref>. An important observation is that in all cases fairness of the path is a function of the set of infinitary states. Muller conditions, defined below, can express arbitrary constraints on the set of infinitary states.
References-found: 8

