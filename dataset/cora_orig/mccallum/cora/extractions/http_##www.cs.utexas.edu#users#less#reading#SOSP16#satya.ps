URL: http://www.cs.utexas.edu/users/less/reading/SOSP16/satya.ps
Refering-URL: http://www.cs.utexas.edu/users/less/reading.html
Root-URL: 
Title: Agile Application-Aware Adaptation for Mobility  
Author: Brian D. Noble, M. Satyanarayanan, Dushyanth Narayanan, James Eric Tilton, Jason Flinn, Kevin R. Walker 
Affiliation: School of Computer Science Carnegie Mellon University  
Note: To appear in the Proceedings of the 16th ACM Symposium on Operating System Principles  
Abstract: In this paper we show that application-aware adaptation, a collaborative partnership between the operating system and applications, offers the most general and effective approach to mobile information access. We describe the design of Odyssey, a prototype implementing this approach, and show how it supports concurrent execution of diverse mobile applications. We identify agility as a key attribute of adaptive systems, and describe how to quantify and measure it. We present the results of our evaluation of Odyssey, indicating performance improvements up to a factor of 5 on a benchmark of three applications concurrently using remote services over a network with highly variable bandwidth.
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Apple Computer Inc., Cupertino, CA. Newton Message Pad Handbook, </institution> <year> 1993. </year>
Reference-contexts: Although this ability is taken for granted on desktop operating systems, there continues to be skepticism about its value in mobile clients. This skepticism is fueled by the popularity of devices such as PDAs <ref> [1] </ref> and pocket organizers [39], which execute only one application at a time. While such specialized mobile devices fill an important niche, we are convinced that many mobile users will find it valuable to run background applications in addition to the foreground application that dominates their attention.
Reference: [2] <author> J. F. Bartlett. </author> <title> W4 The Wireless World Wide Web. </title> <booktitle> In Proceedings of the IEEE Workshop on Mobile Computing Systems and Applications, </booktitle> <address> Santa Cruz, CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: Many systems together served as a backdrop to our thinking on fidelity: the Rover toolkit; mobile Web software such as Mobi-saic [40] and W4 <ref> [2] </ref>; software embodying concepts such as dynamic documents [14] and distillation [7]; commercial email packages such as Eudora; and numerous PDAs and pocket organizers. Examination of these systems also helped us identify an essential missing ingredient in all of their designs: effective management of scarce resources across multiple applications.
Reference: [3] <author> B. N. Bershad, S. Savage, P. Pardyak, E. G. Sirer, M. Fiuczyn-ski, D. Becker, C. Chambers, and S. Eggers. </author> <title> Extensibility, Safety and Performance in the SPIN Operating System. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: The wardens are entirely responsible for communicating with servers and caching data from them when appropriate applications never contact servers directly. Our implementation of Odyssey outside the kernel is consistent with the philosophy of modern operating system designs such as Exokernel [6] and SPIN <ref> [3] </ref>. Since extensibility is the motivation for such systems, their use in the context of Odyssey should result in improved agility and easier installation of new wardens. Integrating Odyssey with the file system yields several key advantages.
Reference: [4] <editor> R. C. Dorf, editor. </editor> <booktitle> The Electrical Engineering Handbook, chapter 93: Control Systems. </booktitle> <publisher> CRC Press, </publisher> <year> 1993. </year>
Reference-contexts: use to obtain agility metrics? We address these secondary questions first, in Section 6.1, and present our answers to the primary questions in Section 6.2. 6.1 Evaluation Strategy 6.1.1 Agility Metrics Our approach to quantifying agility draws upon well-established principles for measuring dynamic response from the field of control systems <ref> [4, 30] </ref>. The accepted practice in that field is to characterize the adaptive ability of a system with respect to a particular output in terms of its responses to a set of input reference waveforms.
Reference: [5] <author> D. Duchamp. </author> <title> Issues in Wireless Mobile Computing. </title> <booktitle> In Proceedings of the Third IEEE Workshop on Workstation Operating Systems, </booktitle> <address> Key Biscayne, FL, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: These include unpredictable variation in network quality, wide disparity in the availability of remote services, limitations on local resources imposed by weight and size constraints, concern for battery power consumption, and lowered trust and robustness resulting from exposure and motion <ref> [5, 15, 31] </ref>. Once the need for adaptation is recognized, many questions follow.
Reference: [6] <author> D. R. Engler, M. F. Kaashoek, and J. O'Toole Jr. Exokernel: </author> <title> An Operating System Architecture for Application-Level Resource Management. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: The wardens are entirely responsible for communicating with servers and caching data from them when appropriate applications never contact servers directly. Our implementation of Odyssey outside the kernel is consistent with the philosophy of modern operating system designs such as Exokernel <ref> [6] </ref> and SPIN [3]. Since extensibility is the motivation for such systems, their use in the context of Odyssey should result in improved agility and easier installation of new wardens. Integrating Odyssey with the file system yields several key advantages.
Reference: [7] <author> A. Fox, S. D. Gribble, E. A. Brewer, and E. Amir. </author> <title> Adapting to Network and Client Variability via On-Demand Dynamic Distillation. </title> <booktitle> In Proceedings of the Seventh International ACM Conference on Architectural Support for Programming Languages and Operating Systems, </booktitle> <address> Cambridge, MA, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The cellophane transforms HTTP requests from Netscape into file operations on Odyssey Web objects. The Web warden forwards these requests via the client's mobile network connection to a distillation server. The latter provides multiple levels of fidelity for images along the lines suggested by Fox et al <ref> [7] </ref>. Since images tend to be large and constitute a substantial fraction of HTTP traffic, focusing on them has a high payoff. At the highest fidelity, images are uncompressed. Progressively lower levels correspond to JPEG-compressed images of decreasing quality. The warden provides a tsop to set the fidelity level. <p> Many systems together served as a backdrop to our thinking on fidelity: the Rover toolkit; mobile Web software such as Mobi-saic [40] and W4 [2]; software embodying concepts such as dynamic documents [14] and distillation <ref> [7] </ref>; commercial email packages such as Eudora; and numerous PDAs and pocket organizers. Examination of these systems also helped us identify an essential missing ingredient in all of their designs: effective management of scarce resources across multiple applications.
Reference: [8] <author> L. Georgiadis, R. Guerin, V. Peris, and R. Rajan. </author> <title> Efficient Support of Delay and Rate Guarantees in an Internet. </title> <booktitle> In Proceedings of the ACM SIGCOMM'96 Conference, </booktitle> <address> Stanford, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: These systems, in conjunction with Coda, helped us formulate our taxonomy of adaptation strategies laissez-faire, application-aware, and application-transparent. The issues of resource reservation and guarantees lie at the heart of real-time systems [24], and have become important in high performance networking <ref> [8] </ref>. These communities have recently applied reservation techniques, with two changes, to mobile clients [20, 27]. First, rather than reserving a particular quantity of a resource, they reserve a range; the underlying system transparently adapts within the range.
Reference: [9] <author> D. K. Gifford, P. Jouvelot, M. A. Sheldon, and J. W. O'Toole Jr. </author> <title> Semantic File Systems. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Operating System Principles, </booktitle> <year> 1991. </year>
Reference-contexts: At the same time, our approach imposes certain limitations. Some data types do not naturally fit either the naming or access methods provided by the file system. Further, there are no standard file operations corresponding to fidelity changes. For naming, we incorporate extensions similar in spirit to virtual directories <ref> [9] </ref>. For access methods and fidelity changes, we rely on a general-purpose mechanism described in Section 4.4. As Odyssey matures, we may discover that further improvements in functionality or agility are impossible unless we move the viceroy and wardens into the kernel.
Reference: [10] <author> J. Gray and A. Reuter. </author> <title> Transaction Processing: Concepts and Techniques. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Further, attempts to increase resource usage amount to active rather than passive resource monitoring, a questionable strategy when bandwidth is scarce. Finally, the installation of pieces of code at low levels of the system to encapsulate specialized knowledge about different data types is a common practice in databases <ref> [10] </ref>. The primary purpose of such code is to improve disk management. The use of wardens in Odyssey resembles this practice, but differs in that wardens support multiple fidelity levels. 8 Future Work We see many short-, medium-, and long-term tasks ahead of us.
Reference: [11] <institution> Apple Computer Inc. Inside Macintosh: </institution> <address> Quicktime. </address> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Reading, MA, </address> <year> 1993. </year>
Reference-contexts: Each movie is stored in multiple tracks at the server, one track per fidelity level. We have incorporated three levels of fidelity for Quicktime <ref> [11] </ref> video data: JPEG-compressed [42] color frames at qualities 99 and 50, and black-and-white frames. Storing all three tracks incurs only modest overhead, typically about 60% more than storing just the highest fidelity track.
Reference: [12] <author> J. Inouye, S. Cen, C. Pu, and J. Walpole. </author> <title> System Support for Mobile Multimedia Applications. </title> <booktitle> In Proceedings of the 7th International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <address> St. Louis, MO, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Odyssey's role is only to improve efficiency, agility and fairness by insulating applications from insignificant variations in resource levels, and by providing a focal point for resource monitoring and allocation. Recent adaptive systems, such as McCanne's RLM [22] and In-ouye's video player <ref> [12] </ref>, employ feedback-driven adaptation rather than Odyssey's measurement-based approach. Such systems scale back quality, and hence resource consumption, when application performance is poor, and they attempt to discover additional resources by optimistically scaling up usage.
Reference: [13] <author> A. D. Joseph, A. F. deLespinasse, J. A. Tauber, D. K. Gifford, and M. F. Kaashoek. </author> <title> Rover: A Toolkit for Mobile Information Access. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: For example, commercial applications such as Eudora [29] provide vertically integrated support for mobility, where each application assumes that it has full use of available network bandwidth. Even a more sophisticated toolkit approach such as Rover <ref> [13] </ref> only pays minimal attention to resource coordination. 2.4 Agility Sound adaptation decisions require accurate and timely knowledge of resource availability. Ideally, a mobile client should always have perfect knowledge of current resource levels.
Reference: [14] <author> M. F. Kaashoek, T. Pinckney, and J. A. Tauber. </author> <title> Dynamic Documents: </title> <booktitle> Mobile Wireless Access to the WWW. In Proceedings of the IEEE Workshop on Mobile Computing Systems and Applications, </booktitle> <address> Santa Cruz, CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: Many systems together served as a backdrop to our thinking on fidelity: the Rover toolkit; mobile Web software such as Mobi-saic [40] and W4 [2]; software embodying concepts such as dynamic documents <ref> [14] </ref> and distillation [7]; commercial email packages such as Eudora; and numerous PDAs and pocket organizers. Examination of these systems also helped us identify an essential missing ingredient in all of their designs: effective management of scarce resources across multiple applications.
Reference: [15] <author> R. H. Katz. </author> <title> Adaptation and Mobility in Wireless Information Systems. </title> <journal> IEEE Personal Communications, </journal> <volume> 1(1), </volume> <year> 1996. </year>
Reference-contexts: These include unpredictable variation in network quality, wide disparity in the availability of remote services, limitations on local resources imposed by weight and size constraints, concern for battery power consumption, and lowered trust and robustness resulting from exposure and motion <ref> [5, 15, 31] </ref>. Once the need for adaptation is recognized, many questions follow.
Reference: [16] <author> R. H. Katz and E. A. Brewer. </author> <title> The Case for Wireless Overlay Networks. </title> <booktitle> In SPIE Multimedia and Networking Conference, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: Our goal in building Odyssey is to enable mobile scenarios such as the following one. 2.1 Motivation Consider a hypothetical scenario in which a tourist with a wearable computer running Odyssey is walking in an urban setting. A wireless overlay network <ref> [16] </ref> provides the computer with a variety of connection alternatives, which differ in bandwidth, coverage, cost, and reliability. The higher-bandwidth alternatives are more sensitive to fading and signal loss as the user moves in and out of the radio shadows of buildings.
Reference: [17] <author> S. Keshav. </author> <note> Packet-Pair Flow Control. To appear in IEEE/ACM Transactions on Networking. </note>
Reference-contexts: Because Odyssey may often be used in weakly-connected environments, we rely on purely passive observations rather than an active approach such as that suggested by Keshav <ref> [17] </ref>. These observations are logged by our user-level RPC mechanism [25] which is implemented on UDP. This mechanism combines a conventional RPC protocol for small exchanges with a sliding-window, selective-acknowledgement protocol for bulk data transfer. Each distinct endpoint has its own log, and observations for different endpoints are recorded independently.
Reference: [18] <author> J. J. Kistler and M. Satyanarayanan. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(1), </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: We define fidelity as the degree to which data presented at a client matches the reference copy at the server. Fidelity has many dimensions. One well-known, universal dimension is consistency. Systems such as Coda <ref> [18, 32] </ref>, Ficus [28] and Bayou [38] expose potentially stale data to applications when network connectivity is poor or nonexistent. Other dimensions of fidelity depend on the type of data in question. For example, video data has at least two additional dimensions: frame rate and image quality of individual frames.
Reference: [19] <author> S.R. Kleiman. Vnodes: </author> <title> An Architecture for Multiple File System Types in Sun UNIX. </title> <booktitle> In Summer Usenix Conference Proceedings, </booktitle> <year> 1986. </year>
Reference-contexts: Thus, Odyssey is integrated into NetBSD as a new VFS file system <ref> [19] </ref>. In addition, we have found it necessary to add a few new system calls. As shown in Figure 2, we have implemented the viceroy and wardens in user space rather than in the kernel. Operations on Odyssey objects are redirected to the viceroy by a small in-kernel interceptor module.
Reference: [20] <author> S. Lu, K.-W. Lee, and V. Bharghavan. </author> <title> Adaptive Service in Mobile Computing Environments. </title> <booktitle> In Fifth IFIP International Workshop on Quality of Service, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The issues of resource reservation and guarantees lie at the heart of real-time systems [24], and have become important in high performance networking [8]. These communities have recently applied reservation techniques, with two changes, to mobile clients <ref> [20, 27] </ref>. First, rather than reserving a particular quantity of a resource, they reserve a range; the underlying system transparently adapts within the range. Second, if the range is exceeded or the client moves, a renegotiation involving some or all of the end-to-end path is initiated.
Reference: [21] <author> A. Luotonen and K. Altis. </author> <title> World-Wide Web Proxies. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27, </volume> <month> September </month> <year> 1994. </year>
Reference: [22] <author> S. McCanne, V. Jacobsen, and M. Vetterli. </author> <title> Receiver-driven Layered Multicast. </title> <booktitle> In Proceedings of the ACM SIGCOMM'96 Conference, </booktitle> <address> Stanford, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: Odyssey's role is only to improve efficiency, agility and fairness by insulating applications from insignificant variations in resource levels, and by providing a focal point for resource monitoring and allocation. Recent adaptive systems, such as McCanne's RLM <ref> [22] </ref> and In-ouye's video player [12], employ feedback-driven adaptation rather than Odyssey's measurement-based approach. Such systems scale back quality, and hence resource consumption, when application performance is poor, and they attempt to discover additional resources by optimistically scaling up usage.
Reference: [23] <author> M. K. McKusick, K. Bostic, M. J. Karels, and J. S. Quarter-man. </author> <title> The Design and Implementation of the 4.4BSD Operating System. </title> <publisher> Addison Wesley, </publisher> <year> 1996. </year>
Reference-contexts: We chose NetBSD, a variant of the 4.4 BSD Unix operating system <ref> [23] </ref>, as the starting point. NetBSD source code is publicly available without encumbrance, thus allowing free distribution of derivatives. The popularity of NetBSD also offers the possibility of attracting a substantial Odyssey user community.
Reference: [24] <author> C. W. Mercer, S. Savage, and H. Tokuda. </author> <title> Processor Capacity Reserves for Multimedia Operating Systems. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: These systems, in conjunction with Coda, helped us formulate our taxonomy of adaptation strategies laissez-faire, application-aware, and application-transparent. The issues of resource reservation and guarantees lie at the heart of real-time systems <ref> [24] </ref>, and have become important in high performance networking [8]. These communities have recently applied reservation techniques, with two changes, to mobile clients [20, 27]. First, rather than reserving a particular quantity of a resource, they reserve a range; the underlying system transparently adapts within the range.
Reference: [25] <author> L. B. Mummert. </author> <title> Exploiting Weak Connectivity in a Dis--tributed File System. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, School of Computer Science, </institution> <year> 1996. </year> <month> CMU-CS-96-195. </month>
Reference-contexts: Because Odyssey may often be used in weakly-connected environments, we rely on purely passive observations rather than an active approach such as that suggested by Keshav [17]. These observations are logged by our user-level RPC mechanism <ref> [25] </ref> which is implemented on UDP. This mechanism combines a conventional RPC protocol for small exchanges with a sliding-window, selective-acknowledgement protocol for bulk data transfer. Each distinct endpoint has its own log, and observations for different endpoints are recorded independently.
Reference: [26] <author> B. D. Noble, M. Satyanarayanan, G. T. Nguyen, and R. H. Katz. </author> <title> Trace-Based Mobile Network Emulation. </title> <booktitle> In Proceedings of ACM SIGCOMM'97 Conference, </booktitle> <address> Cannes, France, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: Accomplishing this in a repeatable and reliable manner is extremely difficult on any real network or combination of networks. We solve this problem through a technique called trace modulation <ref> [26, 33] </ref>. Trace modulation performs application-transparent emulation of a slower target network over a faster, wired LAN. It is implemented in two parts: a layer inserted in the protocol stack between the transport and network layers, and a user-level daemon.
Reference: [27] <author> S. Pope and P. Webster. </author> <title> QoS Support for Mobile Computing. </title> <booktitle> In Fifth IFIP International Workshop on Quality of Service, </booktitle> <address> New York, NY, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The issues of resource reservation and guarantees lie at the heart of real-time systems [24], and have become important in high performance networking [8]. These communities have recently applied reservation techniques, with two changes, to mobile clients <ref> [20, 27] </ref>. First, rather than reserving a particular quantity of a resource, they reserve a range; the underlying system transparently adapts within the range. Second, if the range is exceeded or the client moves, a renegotiation involving some or all of the end-to-end path is initiated.
Reference: [28] <author> G. J. Popek, R. G. Guy, T. W. Page, and J. S. Heidemann. </author> <title> Replication in Ficus Distributed File Systems. </title> <booktitle> In Proceedings of the IEEE Workshop on Management of Replicated Data, </booktitle> <address> Houston, TX, </address> <month> November </month> <year> 1990. </year>
Reference-contexts: We define fidelity as the degree to which data presented at a client matches the reference copy at the server. Fidelity has many dimensions. One well-known, universal dimension is consistency. Systems such as Coda [18, 32], Ficus <ref> [28] </ref> and Bayou [38] expose potentially stale data to applications when network connectivity is poor or nonexistent. Other dimensions of fidelity depend on the type of data in question. For example, video data has at least two additional dimensions: frame rate and image quality of individual frames.
Reference: [29] <institution> Qualcomm Inc., </institution> <address> San Diego, CA. </address> <publisher> Eudora Macintosh User Manual, </publisher> <year> 1993. </year>
Reference-contexts: The need to coordinate resource management across applications mutes the effectiveness of many current approaches to mobile computing. For example, commercial applications such as Eudora <ref> [29] </ref> provide vertically integrated support for mobility, where each application assumes that it has full use of available network bandwidth. Even a more sophisticated toolkit approach such as Rover [13] only pays minimal attention to resource coordination. 2.4 Agility Sound adaptation decisions require accurate and timely knowledge of resource availability.
Reference: [30] <author> O. Rubin. </author> <title> The Design of Automatic Control Systems. </title> <publisher> Artech House, </publisher> <address> Norwood, MA, </address> <year> 1986. </year>
Reference-contexts: use to obtain agility metrics? We address these secondary questions first, in Section 6.1, and present our answers to the primary questions in Section 6.2. 6.1 Evaluation Strategy 6.1.1 Agility Metrics Our approach to quantifying agility draws upon well-established principles for measuring dynamic response from the field of control systems <ref> [4, 30] </ref>. The accepted practice in that field is to characterize the adaptive ability of a system with respect to a particular output in terms of its responses to a set of input reference waveforms.
Reference: [31] <author> M. Satyanarayanan. </author> <title> Mobile Information Access. </title> <journal> IEEE Personal Communications, </journal> <volume> 3(1), </volume> <month> February </month> <year> 1996. </year>
Reference-contexts: These include unpredictable variation in network quality, wide disparity in the availability of remote services, limitations on local resources imposed by weight and size constraints, concern for battery power consumption, and lowered trust and robustness resulting from exposure and motion <ref> [5, 15, 31] </ref>. Once the need for adaptation is recognized, many questions follow.
Reference: [32] <author> M. Satyanarayanan, J. J. Kistler, P. Kumar, M. E. Okasaki, E. H. Siegel, and D. C. Steere. Coda: </author> <title> A Highly Available File System for a Distributed Workstation Environment. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(4), </volume> <month> April </month> <year> 1990. </year>
Reference-contexts: We define fidelity as the degree to which data presented at a client matches the reference copy at the server. Fidelity has many dimensions. One well-known, universal dimension is consistency. Systems such as Coda <ref> [18, 32] </ref>, Ficus [28] and Bayou [38] expose potentially stale data to applications when network connectivity is poor or nonexistent. Other dimensions of fidelity depend on the type of data in question. For example, video data has at least two additional dimensions: frame rate and image quality of individual frames.
Reference: [33] <author> M. Satyanarayanan and B. Noble. </author> <title> The Role of Trace Modulation in Building Mobile Computing Systems. </title> <booktitle> In Proceedings of the Sixth IEEE Workshop on Hot Topics in Operating Systems, </booktitle> <address> Chatham, MA, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Accomplishing this in a repeatable and reliable manner is extremely difficult on any real network or combination of networks. We solve this problem through a technique called trace modulation <ref> [26, 33] </ref>. Trace modulation performs application-transparent emulation of a slower target network over a faster, wired LAN. It is implemented in two parts: a layer inserted in the protocol stack between the transport and network layers, and a user-level daemon.
Reference: [34] <author> A. Smailagic and D. P. Siewiorek. </author> <title> Modalities of Interaction with CMU Wearable Computers. </title> <journal> IEEE Personal Communications, </journal> <volume> 3(1), </volume> <month> February </month> <year> 1996. </year>
Reference-contexts: It is especially useful when mobile because it leaves the user's hands and eyes free for other activities such as driving <ref> [34] </ref>. However, the resource requirements for high-accuracy speech recognition are substantial, especially when mobile, since background noise is often high. Adding higher-level semantic processing, such as language translation, leads to even greater demands on computing resources.
Reference: [35] <author> D. C. Steere. </author> <title> Exploiting Non-Determinism in Set Iterators to Reduce I/O Latency. </title> <booktitle> In Proceedings of the 16th ACM Symposium on Operating System Principles, </booktitle> <address> Saint Malo, France, </address> <month> October </month> <year> 1997. </year>
Reference-contexts: We plan to explore a solution that uses dynamic sets <ref> [35, 36] </ref> in conjunction with support for dynamic function versus data ship ping. * The design of adaptive mobile systems is currently a black art.
Reference: [36] <author> D. C. Steere. </author> <title> Using Dynamic Sets to Reduce the Aggregate Latency of Data Access. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, School of Computer Science, </institution> <year> 1997. </year> <month> CMU-CS-96-194. </month>
Reference-contexts: We plan to explore a solution that uses dynamic sets <ref> [35, 36] </ref> in conjunction with support for dynamic function versus data ship ping. * The design of adaptive mobile systems is currently a black art.
Reference: [37] <author> D. L. Tennenhouse, T. Turletti, and V. G. Bose. </author> <title> The Spec-trumWare Testbed for ATM-based Software Radios. </title> <booktitle> In IEEE International Conference on Universal Personal Communications, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: The step waveforms can arise in overlay networks, where a mobile client may seamlessly switch between different network interfaces. Further, virtual radios such as Spec-trumWare <ref> [37] </ref> may allow sharp bandwidth degradation.
Reference: [38] <author> D. B. Terry, M. M. Theimer, K. Petersen, and A. J. Demers. </author> <title> Managing Update Conflicts in Bayou, a Weakly Connected Replicated Storage System. </title> <booktitle> In Proceedings of the 15th ACM Symposium on Operating System Principles, </booktitle> <address> Copper Mountain, CO, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: We define fidelity as the degree to which data presented at a client matches the reference copy at the server. Fidelity has many dimensions. One well-known, universal dimension is consistency. Systems such as Coda [18, 32], Ficus [28] and Bayou <ref> [38] </ref> expose potentially stale data to applications when network connectivity is poor or nonexistent. Other dimensions of fidelity depend on the type of data in question. For example, video data has at least two additional dimensions: frame rate and image quality of individual frames.
Reference: [39] <institution> U.S. Robotics, Inc., </institution> <address> Los Altos, CA. </address> <note> Pilot Handbook, </note> <year> 1996. </year> <title> Part Number 423-0001. </title>
Reference-contexts: Although this ability is taken for granted on desktop operating systems, there continues to be skepticism about its value in mobile clients. This skepticism is fueled by the popularity of devices such as PDAs [1] and pocket organizers <ref> [39] </ref>, which execute only one application at a time. While such specialized mobile devices fill an important niche, we are convinced that many mobile users will find it valuable to run background applications in addition to the foreground application that dominates their attention.
Reference: [40] <author> G. M. Voelker and B. N. Bershad. Mobisaic: </author> <title> An Information System for a Mobile Wireless Computing Environment. </title> <booktitle> In Proceedings of the IEEE Workshop on Mobile Computing Systems and Applications, </booktitle> <address> Santa Cruz, CA, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: Many systems together served as a backdrop to our thinking on fidelity: the Rover toolkit; mobile Web software such as Mobi-saic <ref> [40] </ref> and W4 [2]; software embodying concepts such as dynamic documents [14] and distillation [7]; commercial email packages such as Eudora; and numerous PDAs and pocket organizers.
Reference: [41] <author> A. Waibel. </author> <title> Interactive Translation of Conversational Speech. </title> <journal> IEEE Computer, </journal> <volume> 29(7), </volume> <month> July </month> <year> 1996. </year>
Reference-contexts: This combination of opportunity and challenge led us to implement speech recognition as an Odyssey application, even though it falls outside our primary domain of mobile information access. Odyssey. The starting point for this implementation is a speech recognition system called Janus <ref> [41] </ref>, whose source code is available to us. We have split this system into a client and server, and constructed a speech warden. The server accepts two forms of input: a raw utterance, or an utterance that has already been processed by the first of several phases of Janus.
Reference: [42] <author> G. K. Wallace. </author> <title> The JPEG Still Picture Compression Standard. </title> <journal> Communications of the ACM, </journal> <volume> 34(4), </volume> <month> April </month> <year> 1991. </year>
Reference-contexts: Each movie is stored in multiple tracks at the server, one track per fidelity level. We have incorporated three levels of fidelity for Quicktime [11] video data: JPEG-compressed <ref> [42] </ref> color frames at qualities 99 and 50, and black-and-white frames. Storing all three tracks incurs only modest overhead, typically about 60% more than storing just the highest fidelity track. The warden supports two tsops: to read a movie's meta-data, and to get a particular frame from a specified track.
References-found: 42

