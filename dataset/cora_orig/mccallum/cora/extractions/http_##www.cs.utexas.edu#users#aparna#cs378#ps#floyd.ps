URL: http://www.cs.utexas.edu/users/aparna/cs378/ps/floyd.ps
Refering-URL: http://www.cs.utexas.edu/users/aparna/cs378/
Root-URL: http://www.cs.utexas.edu
Title: Adaptive Web Caching  
Author: Lixia Zhang, Sally Floyd, and Van Jacobson 
Date: April 25, 1997  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Van Jacobson, </author> <title> "How to Kill the Internet", </title> <booktitle> SIG-COMM '95 Middleware Workshop, </booktitle> <month> August </month> <year> 1995. </year> <note> URL ftp://ftp.ee.lbl.gov/talks/vj-webflame.ps.Z </note>
Reference: [2] <author> R. Fielding, J. Gettys, J. Mogul, M. Frystyk, T. Berners-Lee, </author> <title> "Hypertext Transfer Protocol - HTTP/1.1", Internet Proposed Standard protocol, </title> <address> RFC-2068 URL ftp://ds.internic.net/rfc/rfc2068.txt. </address>
Reference-contexts: There is also a growing literature on caching and removal policies for web caches [9], which we plan to explore during the implementation of our cache protocols. To facilitate Web caching implementation, the HTTP/1.1 protocol specification provides a number of supporting mechanisms <ref> [2] </ref>. Server-specified expiration times are added to prevent obsolete data from being served to clients, and a validation mechanism is proposed to eliminate the unnecessary retransmission of previous responses that have not changed.
Reference: [3] <author> Sally Floyd, Van Jacobson, Ching-Gung Liu, Steve McCanne and Lixia Zhang. </author> <title> "A Reliable Multicast Framework for Lightweight Session and Application Layer Framing". </title> <booktitle> Proceeding of ACM SIGCOMM '95. </booktitle> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: Page Retrieval Once the request reaches a group in which one or more servers have the requested page, the node holding the page multicasts the response to the group, possibly after a short random wait using an algorithm similar to the one developed in Scalable Reliable Multicast (SRM) <ref> [3] </ref>. This multicast response loads neighboring caches in the same group with the page. For example, when a short time later another request for the same page comes from user-2 to group G5, the request will stop one "multicast hop" short of the group with the origin server (G4). <p> When multiple caches in a cache group volunteer to forward the request, the caches can use a randomized timer algorithm similar to the one in SRM <ref> [3] </ref> to prevent multiple caches from forwarding the request. However, it is not a problem if occasionally more than one cache in a cache group forwards a request. Duplicate requests are likely to "collide" (run into the same cache group) along the way.
Reference: [4] <author> Sally Floyd and Van Jacobson, </author> <title> Random Early Detection gateways for Congestion Avoidance, </title> <journal> IEEE/ACM Transactions on Networking, V.1 N.4, </journal> <month> August </month> <year> 1993, </year> <pages> p. 397-413. </pages>
Reference: [5] <author> James Gwertxman and Margo Seltzer, </author> <title> "WorldWide Web Cache Consistency", </title> <booktitle> USENIX 1996, </booktitle> <address> URL http://www.eecs.harvard.edu/ vino/web/usenix.196/. </address>
Reference-contexts: Another cache performance study by Gwertxman and Seltzer <ref> [5] </ref> compares three cache consistency mechanisms currently in use in the Internet: time-to-live fields, client polling, and invalidation protocols. They find that time-to-live fields are a good solution when reducing network bandwidth is the driving force, though client polling are generally a stronger mechanism.
Reference: [6] <author> Margo Seltzer, </author> <title> "The World Wide Web: Issues and Challenges", </title> <institution> Presented at IBM Almaden, </institution> <month> July </month> <year> 1996, </year> <note> http://www.eecs.harvard.edu/ margo/slides/www.html </note>
Reference-contexts: Recent studies by Margo Seltzer of Harvard University also confirms that flash-crowds are very common, and that the "cool site of the day" moves around <ref> [6] </ref>. Bottleneck hot spots develop and break up more quickly than the network or the Web servers can be re-provisioned. A brute force approach to provisioning is not only infeasible, but also ineffective.
Reference: [7] <author> Venkata Padmanabhan and Jeffrey Mogul, </author> <title> "Improving HTTP Latency", </title> <address> URL http://www.ncsa.uiuc.edu/SDG/IT94/Proceedings/DDay/mogul/HTTPLatency.html. </address>
Reference: [8] <author> Dean Povey and John Harrison, </author> <title> "A Distributed Internet Cache", </title> <booktitle> 20th Australian Computer Science Conference, </booktitle> <address> Syd-ney, Australia, </address> <month> February 5-7. </month> <year> 1997, </year> <note> URL URL http://www.isi.edu/lsam/ib/http-perf/. </note>
Reference-contexts: To reduce such overload in a hierarchical cache, Povey has suggested a modification to the SQUID operation <ref> [8] </ref>. Instead of fetching all new pages through the root nodes, Povey suggested that the hierarchy structure is used for data searching only.
Reference: [9] <author> Stephen Williams, Marc Abrams, Charles Stan-dridge, Ghaleb Abdulla, and Edward Fox, </author> <title> "Removal Policies in Network Caches for WorldWide Web Documents", </title> <booktitle> Sigcomm 1996. [10] "A Distributed Testbed for National Information Provisioning", </booktitle> <address> URL http://www.nlanr.net/Cache/. </address>
Reference-contexts: They find that time-to-live fields are a good solution when reducing network bandwidth is the driving force, though client polling are generally a stronger mechanism. There is also a growing literature on caching and removal policies for web caches <ref> [9] </ref>, which we plan to explore during the implementation of our cache protocols. To facilitate Web caching implementation, the HTTP/1.1 protocol specification provides a number of supporting mechanisms [2].
Reference: [11] <author> Duane Wessels and Kim Claffy, </author> <title> "Evolution of the NLANR Cache Hierarchy: Global Configuration Challenges", </title> <month> November </month> <year> 1996, </year> <note> URL http://www.nlanr.net/Papers/Cache96/ </note>
Reference-contexts: However, fourteen separate Australian sites configured themselves directly onto the cache tree in U.S. instead of peering with each other locally, leading to the same Web page being fetched directly from the U.S. by each of the fourteen sites. See <ref> [11] </ref> for more details. The lesson to be learned is that manual configuration of large scale systems is not only burdensome but also vulnerable to errors and misuse. Self-configuring systems, such as the one proposed in this research, can be designed to minimize the possibilities of such abuses.
Reference: [12] <author> Jun Li, Si Yuan Tong, and Adam Rosenstein, "MASH: </author> <title> The Multicasting Archie Server Hierarchy", </title> <type> Project report, </type> <month> December </month> <year> 1996, </year> <institution> UCLA Computer Science Department. </institution>
Reference-contexts: For example, a cache group could split when there is too much traffic in the group, or a cache group with a low hit ratio could merge with another group. Group Creation We plan to start with the group management protocol developed by MASH project <ref> [12] </ref> as the base and gradually evolve that protocol to our cache group management protocol.
Reference: [13] <author> Jeffrey Mogul and Paul Leach, </author> <title> "Simple Hit-Metering for HTTP", Internet Draft, </title> <month> January </month> <year> 1997. </year>
Reference: [14] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, D. Zappala "RSVP: </author> <title> A New Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September, </month> <year> 1993 </year>
Reference: [15] <author> R. Bagrodia and W. Liao, "MAISIE: </author> <title> A Language for the Design of Efficient Discrete-Event Simulations", </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 20(4), </volume> <month> April </month> <year> 1994, </year> <pages> pp. 225-238. </pages> <note> [16] "Virtual InterNetwork Testbed", URL http://netweb.usc.edu/vint/ </note>
Reference: [17] <author> Zhang, L., Floyd, S., and Jacobson, V., </author> <title> Adaptive Web Caching, </title> <note> URL http://www-nrg.ee.lbl.gov/web.html. 9 </note>
Reference-contexts: Other Issues in Building the Proposed Caching System Several issues that are not particular to our proposal, but that need to be addressed by any web-caching infrastructure, are discussed in the longer version of this proposal, available at <ref> [17] </ref>. Incremental Deployment We plan to collaborate with the Harvest/SQUID Caching team to explore transition strategies to convert the current manually configured caching infrastructure into an autoconfigured, adaptive caching system.
References-found: 15

