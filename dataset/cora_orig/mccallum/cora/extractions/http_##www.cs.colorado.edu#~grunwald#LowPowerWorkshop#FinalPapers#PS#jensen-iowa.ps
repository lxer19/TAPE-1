URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/FinalPapers/PS/jensen-iowa.ps
Refering-URL: http://www.cs.colorado.edu/~grunwald/LowPowerWorkshop/agenda.html
Root-URL: http://www.cs.colorado.edu
Title: Reduced Address Bus Switching with Gray PC  
Author: FORREST JENSEN AKHILESH TYAGI 
Address: Ames, IA 50011  
Affiliation: Iowa State University  
Abstract: Reduced switching on the address bus saves on the energy incurred in PC increment, the propagation of PC value across the pipeline, instruction cache access, and memory access. We estimate the savings in bit switch-ings in PC by adopting the Gray sequence for program sequencing. There is a 40% reduction in address bit switchings with a Gray PC over the traditional lexicographic PC over a collection of SPEC '95 integer and FP benchmarks. We also assess the adverse impact of Gray PC on the other processor units, particularly I-cache locality. The cache miss rates are indistinguishable between the Gray and lexicographic sequencing. These experiments were conducted with the SimpleScalar tool set. We also propose a design for a Gray counter for the PC. We have developed optimization algorithms for the loader so that the expected address bus switching is minimized. 
Abstract-found: 1
Intro-found: 1
Reference: [BAB96] <author> D. Burger, T. M. Austin, and S. Bennett. </author> <title> Evaluating Future Microprocessors: The SimpleScalar Tool Set. </title> <type> Technical Report CS-TR-96-1308, </type> <institution> University of Wisconsin, Madison, </institution> <year> 1996. </year>
Reference-contexts: of PC bits that switch in a Gray code PC versus a lexicographic PC and to determine any difference in cache performance between the two encoding methods, we conducted our experimental work with a modified version of sim-cache, one of the simulation tools available in the SimpleScalar suite of simulators <ref> [BAB96] </ref>. In addition to determining the total number of switched bits with each encoding method, we also determined the number of times each of the eleven least significant bits of the PC switch. Sim-cache uses a 32 bit address to access 8 byte instructions.
Reference: [BP94] <author> T. D. Burd and B. Peters. </author> <title> A Power Analysis of a Microprocessor: A Study of an Implementation of the MIPS R3000 Architecture. </title> <type> Technical report, </type> <institution> ERL, University of California, Berkeley, </institution> <year> 1994. </year> <note> URL: http://infopad.EECS.Berkeley.edu/~burd/gpp/ gpp.html#published papers. </note>
Reference-contexts: Hence any technique not explicitly changing clock frequency affects both energy and power identically. What fraction of processor and system energy is affected by reduced address bus switching? Burd and Peters <ref> [BP94] </ref> and Gonzalez and Horowitz [GH96] have profiled the energy distribution of MIPS R3000 processor. Both the studies are based on simulations of a VLSI design for the MIPS R3000 architecture. Burd and Peters [BP94] compute the switched capacitance per cycle as an estimate of energy. <p> fraction of processor and system energy is affected by reduced address bus switching? Burd and Peters <ref> [BP94] </ref> and Gonzalez and Horowitz [GH96] have profiled the energy distribution of MIPS R3000 processor. Both the studies are based on simulations of a VLSI design for the MIPS R3000 architecture. Burd and Peters [BP94] compute the switched capacitance per cycle as an estimate of energy. The switching frequency of capacitances depends on the control signal, instruction and data correlations. <p> Section 2 describes the experimental setup and results. Su et al. [STD94] also use a Gray PC. They report on the average address bus switching on an internal set of programs, but do not consider other aspects of Gray PC. 2 Experiments and Results Burd & Peters <ref> [BP94] </ref> note that the average switching per program counter (PC) bit is a little over 7% over a variety of SPECint '92 benchmarks. Hence, the expected number of bit switchings over a 32 bit address are 2.5. <p> Is Harvard architecture a better choice in order to separate the instruction and data data address sequences and retain their low hamming distances? The decoder in the instruction cache accounts for a significant fraction of energy consumed in the instruction cache <ref> [BP94] </ref>. However, a typical decoder design is precharged. We plan to experiment with a hybrid static and dynamic decoder design that leverages the low hamming distance in the addresses to reduce energy.
Reference: [Cor94] <author> Altera Corporation. </author> <title> Ripple-Carry Gray Code Counters in FLEX 8000 Devices. </title> <type> Technical Report Application Brief 135, </type> <institution> Al-tera Corporation, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: We propose a design for a Gray counter in Section 3. This design is being implemented so that the counting energy of a Gray PC and a lexicographic PC can be compared. Doran [Dor93] is the most comprehensive reference on Gray adder design. Altera corporation <ref> [Cor94] </ref> has an application brief dealing with a Gray counter design. Note that in the rest of the paper, we refer to binary reflected Gray code sequence by the term Gray sequence.
Reference: [Dor93] <author> R. W. Doran. </author> <title> The Gray Code. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, University of Auckland, </institution> <year> 1993. </year> <note> URL: http://www.cs.aucland.ac.nz/~techrep/TR131. </note>
Reference-contexts: The literature on logic design for a Gray counter and/or adder is sparse. We propose a design for a Gray counter in Section 3. This design is being implemented so that the counting energy of a Gray PC and a lexicographic PC can be compared. Doran <ref> [Dor93] </ref> is the most comprehensive reference on Gray adder design. Altera corporation [Cor94] has an application brief dealing with a Gray counter design. Note that in the rest of the paper, we refer to binary reflected Gray code sequence by the term Gray sequence.
Reference: [GH96] <author> R. Gonzalez and M. Horowitz. </author> <title> Energy Dissipation in General Purpose Microprocessors. </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> 31:12771284, </volume> <year> 1996. </year>
Reference-contexts: Hence any technique not explicitly changing clock frequency affects both energy and power identically. What fraction of processor and system energy is affected by reduced address bus switching? Burd and Peters [BP94] and Gonzalez and Horowitz <ref> [GH96] </ref> have profiled the energy distribution of MIPS R3000 processor. Both the studies are based on simulations of a VLSI design for the MIPS R3000 architecture. Burd and Peters [BP94] compute the switched capacitance per cycle as an estimate of energy.
Reference: [SCT97] <author> P. Surthi, L. Chao, and A. Tyagi. </author> <title> Low-Power FSM Design using Huffman-Style Encoding. </title> <booktitle> In Proc. of European Design and Test Conference, </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pages 521525, </pages> <year> 1997. </year>
Reference-contexts: We have developed several algorithms [Tya96], <ref> [SCT97] </ref> for low power state assignment. Our intent is to modify one of them [Tya96] to handle the address assignment problem for the loader. The main problem with this approach is the size of the input problem.
Reference: [Sin94] <author> D. Singh. </author> <title> Prospects for Low-Power Microprocessor Design. talk delivered at ACM/IEEE International Workshop on Low Power Design, </title> <address> Napa Valley, CA, </address> <year> 1994. </year>
Reference-contexts: 1 Introduction The need for reduced energy in processors has been emphasized elsewhere <ref> [Sin94] </ref>. Portable computing platforms (general purpose computing engines such as laptops or special purpose embedded processors) strive to reduce the energy of computation in order to prolong the battery life. The packaging and heat dissipation limitations are another driving force behind the low energy processor architecture and implementation trend.
Reference: [STD94] <author> Ching-Long Su, Chi-Ying Tsui, and Alvin Despain. </author> <title> Low power architectural design and compilation techniques for high-performance processor. </title> <booktitle> In 'Proceedings of COMPCON 94, </booktitle> <pages> pages 489498, </pages> <month> February </month> <year> 1994. </year>
Reference-contexts: We also discuss a design for instruction cache decoder in order to better exploit the low Hamming distances of Gray sequences in Section 5. Section 2 describes the experimental setup and results. Su et al. <ref> [STD94] </ref> also use a Gray PC.
Reference: [TPCD94] <author> C. Y. Tsui, M. Pedram, C. Chen, and A. M. Despain. </author> <title> Low Power State Assignment Targeting Two- and Multi-level Logic Implementations. </title> <booktitle> In Proc. of ICCAD, </booktitle> <pages> pages 82 87. </pages> <address> ACM/IEEE, </address> <year> 1994. </year>
Reference-contexts: A typical state machine has about 50-100 states. These approaches can turn out to be impractically expensive for large programs with hundreds of thousands of basic blocks. Hence, we 4 are also looking into heuristics linear in the number of basic blocks. Dichotomy based state assignment methods such as <ref> [TPCD94] </ref> may be adaptable for an efficient loader algorithm. 5 Future Work and Conclusions The work reported is still preliminary. There are several interesting threads that we plan to pursue in the future. The reduced address bus switching derived from Gray sequencing is directly visible at the I-cache.
Reference: [Tya96] <author> A. Tyagi. </author> <title> Integrated Area-Power Optimal State Assignment. In Proceedings of the Synthesis and System Integration of Mixed Technologies, </title> <booktitle> SASIMI '96, </booktitle> <pages> pages 24 31. </pages> <address> SASIMI, Seiei Insatsu, Osaka, Japan, </address> <month> November </month> <year> 1996. </year> <month> 5 </month>
Reference-contexts: We have developed several algorithms <ref> [Tya96] </ref>, [SCT97] for low power state assignment. Our intent is to modify one of them [Tya96] to handle the address assignment problem for the loader. The main problem with this approach is the size of the input problem. <p> We have developed several algorithms <ref> [Tya96] </ref>, [SCT97] for low power state assignment. Our intent is to modify one of them [Tya96] to handle the address assignment problem for the loader. The main problem with this approach is the size of the input problem. The state assignment methods take time typically close to quadratic (or close to N 2 log N ) in number of states N .
References-found: 10

