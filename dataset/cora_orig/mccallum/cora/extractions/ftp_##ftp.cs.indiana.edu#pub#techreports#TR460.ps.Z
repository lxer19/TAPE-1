URL: ftp://ftp.cs.indiana.edu/pub/techreports/TR460.ps.Z
Refering-URL: http://www.cs.indiana.edu/ftp/techreports/index.html
Root-URL: http://www.cs.indiana.edu
Title: Non-Linear Image Magnification  
Author: T. Alan Keahey Edward L. Robertson 
Keyword: Visualization, image, magnification, fisheye, tex ture mapping, warping.  
Note: This work was supported by US Dept. of Education award number  
Address: 215 Lindley Hall Bloomington, IN 47405  
Affiliation: Department of Computer Science Indiana University  
Email: tkeahey@cs.indiana.edu  edrbtsn@cs.indiana.edu  
Phone: Phone: (812) 855-3609 Fax: (812) 855-4829  
Date: April 24, 1996  
Web: P200A502367.  
Abstract: In this paper we describe a new level for the application of non-linear magnification transformations. The transformations are applied at the image-space level, composed of discrete pixels in a discrete domain. This domain offers a broad range of applicability to visualization tasks, and can serve as a "visualization front-end" to any graphical display. These techniques make use of increasingly available graphics hardware to provide a highly interactive viewing and magnification environment. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> James D. Foley, Andries van Dam, Steven K. Feiner, and John F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: As the surface coordinates change, the image changes correspondingly. The image that is used in this process is called a texture, and the individual pixels of the texture are called texels (texture pixels). Texture mapping is a well known technique which is described in most graphics texts such as <ref> [1] </ref>. a regular grid of points defining a flat, square surface. In figure 9 we transform the grid with a combined linear/non-linear radial transformation producing non-occluding flat magnification of the image and show the final image without the grid (see also color plate 1).
Reference: [2] <author> G. W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> Human Factors in Computing Systems, CHI '86, </booktitle> <pages> pages 16-23, </pages> <month> April </month> <year> 1986. </year> <month> 10 </month>
Reference-contexts: These systems all share the properties of enhanced local resolution with some preservation of global context. Fisheye zoom <ref> [2] </ref> [12] is perhaps the most widely known example of such a technique, although many other systems have been developed, including piecewise linear approximations. Leung and Apperly [8] provide an overview of some of these techniques. <p> For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this <ref> [2] </ref>, [12], [10] and [6]. However, for discrete coordinate spaces (such as the texture mapping applications presented in this paper), adjacency requirements become more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [3] <author> George W. Furnas and Benjamin B. Beder--son. </author> <title> Space-scale diagrams: Understanding multiscale interfaces. </title> <booktitle> In Proceedings of CHI '95 Human Factors in Computing Systems, </booktitle> <year> 1995. </year>
Reference: [4] <author> S. Greenberg and C. Gutwin. </author> <title> Sharing fish-eye views in relaxed WYSIWIS groupware applications. </title> <type> Technical Report 95/577/29, </type> <institution> Department of Computer Science, University of Calgary, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: Figure 3 shows a simple example of how a structured text file that would normally require several screens to display can be laid out in a single screen [5]. Another example of a text viewing application using uni-dimensional magnification (with multiple focus points) can be found in <ref> [4] </ref>. Radial (Fisheye): The fisheye lens effect can be produced by transforming the radius component of the polar coordinates of points within the domain.
Reference: [5] <author> T. Alan Keahey and Julianne Marley. </author> <title> Viewing text with non-linear magnification. </title> <type> Technical Report 458, </type> <institution> Department of Computer Science, Indiana University, </institution> <month> April </month> <year> 1996. </year> <note> Submitted to ACM UIST '96. </note>
Reference-contexts: Figure 3 shows a simple example of how a structured text file that would normally require several screens to display can be laid out in a single screen <ref> [5] </ref>. Another example of a text viewing application using uni-dimensional magnification (with multiple focus points) can be found in [4]. Radial (Fisheye): The fisheye lens effect can be produced by transforming the radius component of the polar coordinates of points within the domain.
Reference: [6] <author> T. Alan Keahey and Reid Rivenburgh. HyperLINK: </author> <title> A program for visualizing traversal of the WWW. Demonstrated at HyperText '96, </title> <year> 1996. </year>
Reference-contexts: For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this [2], [12], [10] and <ref> [6] </ref>. However, for discrete coordinate spaces (such as the texture mapping applications presented in this paper), adjacency requirements become more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [7] <author> T. Alan Keahey and Edward L. Robert-son. </author> <title> Techniques for non-linear magnification transformations. </title> <type> Technical Report 455, </type> <institution> Department of Computer Science, Indiana University, </institution> <month> March </month> <year> 1996. </year> <note> Submitted to IEEE Visualization '96, Information Visualization Symposium. </note>
Reference-contexts: In both cases we are able to combine the best properties of linear (distortion free) and non-linear (non-occluding) transformations. A fuller discussion of techniques for combining linear and non-linear transformations can be found in <ref> [7] </ref> and in [13]. 4 Transformations 3.4 Bounded Transformations Often it is the case that we do not want the transformation to apply to the entire source domain, but would rather perform non-occluding magnification on some sub-area of the domain, constraining the transformed points from that sub-area to the same sub-area <p> Figure 5 shows examples of applying constrained domains to the same transformations described in section 3.3, compare these results with Figure 4. Techniques for producing bounded transformation are discussed in <ref> [7] </ref>. 3.5 Compound Transformations There are many different ways in which multiple transformations can take effect simultaneously on a given domain. Figure 6 illustrates instances of three different approaches. These are briefly described below, and more fully in [7]. <p> Techniques for producing bounded transformation are discussed in <ref> [7] </ref>. 3.5 Compound Transformations There are many different ways in which multiple transformations can take effect simultaneously on a given domain. Figure 6 illustrates instances of three different approaches. These are briefly described below, and more fully in [7]. Maximal Ray Clipping: produces a partitioning of the domain space similar to Voronoi diagram partitioning methods from computational geometry [11]. <p> This can allow the user to smoothly zoom between the warped and unwarped representations of the space being displayed. Such functionality can be provided through a simple filter as described in <ref> [7] </ref>. Figure 7 shows an example of changing the filter parameters to alter the degree of the effect of several transformations simultaneously. 4 Image Magnification All of the transformations discussed so far have been described in terms of transforming a grid of points.
Reference: [8] <author> Y.K. Leung and M.D. Apperly. </author> <title> A review and taxonomy of distortion-oriented presentation techniques. </title> <journal> ACM Transactions on Computer-Human Interaction, </journal> <volume> 1(2) </volume> <pages> 126-160, </pages> <year> 1994. </year>
Reference-contexts: These systems all share the properties of enhanced local resolution with some preservation of global context. Fisheye zoom [2] [12] is perhaps the most widely known example of such a technique, although many other systems have been developed, including piecewise linear approximations. Leung and Apperly <ref> [8] </ref> provide an overview of some of these techniques. Here we briefly present a few ways in which non-linear transformations can be applied effectively. These examples are illustrated by showing the effect of such a transformation on a regular grid of points.
Reference: [9] <author> Jackie Neider, Tom Davis, and Mason Woo. </author> <title> OpenGL Programming Guide. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: The FAD toolkit uses OpenGL <ref> [9] </ref> to implement the texture mapping used for the image magnification. OpenGL is widely available on many platforms, and appears to be emerging as the industry standard library for sophisticated interactive graphics programming.
Reference: [10] <author> Emanuel G. Noik. </author> <title> Exploring large hyper-documents: Fisheye views of nested networks. </title> <booktitle> In Hypertext '93: ACM Conference on Hypertext and Hyeprmedia, </booktitle> <year> 1993. </year>
Reference-contexts: For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this [2], [12], <ref> [10] </ref> and [6]. However, for discrete coordinate spaces (such as the texture mapping applications presented in this paper), adjacency requirements become more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [11] <author> F.P. Preparata and M.I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, Berlin, Heidel-berg, Tokyo, </address> <year> 1985. </year>
Reference-contexts: Figure 6 illustrates instances of three different approaches. These are briefly described below, and more fully in [7]. Maximal Ray Clipping: produces a partitioning of the domain space similar to Voronoi diagram partitioning methods from computational geometry <ref> [11] </ref>. The effect of this technique is a partitioning of the space in which each transformation has its own "domain of influence", and none of the par titions overlap each other. Weighted Averaging: produces a smooth contour representing the average of multiple transformations.
Reference: [12] <author> Manojit Sarkar and Marc H. Brown. </author> <title> Graphical fisheye views. </title> <journal> Communications of the ACM, </journal> <volume> 37(12) </volume> <pages> 73-84, </pages> <year> 1994. </year>
Reference-contexts: These systems all share the properties of enhanced local resolution with some preservation of global context. Fisheye zoom [2] <ref> [12] </ref> is perhaps the most widely known example of such a technique, although many other systems have been developed, including piecewise linear approximations. Leung and Apperly [8] provide an overview of some of these techniques. Here we briefly present a few ways in which non-linear transformations can be applied effectively. <p> For this reason, graph visualization tasks are very amenable to non-linear transformation techniques, and there are many graph visualization systems which take advantage of this [2], <ref> [12] </ref>, [10] and [6]. However, for discrete coordinate spaces (such as the texture mapping applications presented in this paper), adjacency requirements become more of a concern. This is particularly the case when linear/non-linear combinations or constrained boundaries are introduced.
Reference: [13] <author> Manojit Sarkar, Scott S. Snibbe, Oren Tver-sky, and Steven P. Reiss. </author> <title> Stretching the rubber sheet: A metaphor for visualizing large layouts on small screens. </title> <booktitle> In UIST '93, Proceedings of the ACM User Interface Software and Technology, </booktitle> <year> 1993. </year>
Reference-contexts: In both cases we are able to combine the best properties of linear (distortion free) and non-linear (non-occluding) transformations. A fuller discussion of techniques for combining linear and non-linear transformations can be found in [7] and in <ref> [13] </ref>. 4 Transformations 3.4 Bounded Transformations Often it is the case that we do not want the transformation to apply to the entire source domain, but would rather perform non-occluding magnification on some sub-area of the domain, constraining the transformed points from that sub-area to the same sub-area (to avoid overlap).
Reference: [14] <author> Mark Segal and Kurt Akeley. </author> <title> The OpenGL Graphics System: A Specification. </title> <type> Technical report, </type> <institution> Silicon Graphics, Inc., </institution> <year> 1995. </year> <month> 11 </month>
Reference-contexts: Several different anti-aliasing methods are available to help smooth out the magnified image, with the implementation described in this paper linear interpolation can be used to set destination pixels to be some linear combination of neighboring source pixels when the image is magnified. This linear texture magnification <ref> [14] </ref> will reduce the amount of aliasing, but may result in inaccuracies in the magnified image.
References-found: 14

