URL: file://theory.lcs.mit.edu/pub/people/rosario/vsigmas.ps.Z
Refering-URL: http://theory.lcs.mit.edu/~rosario/research.html
Root-URL: 
Title: New Efficient and Secure Protocols for Verifiable Signature Sharing and Other Applications DSS VS scheme
Author: Dario Catalano Rosario Gennaro 
Note: The  
Date: June 4, 1998  
Abstract: Verifiable Signature Sharing (VS ) was introduced by Franklin and Reiter in [20]. VS enables the recipient of a digital signature, who is not necessarily the original signer, to share such signature among n proxies so that a subset of them can later reconstruct it. In [20] efficient protocols were given for RSA, Rabin, ElGamal, Schnorr and DSS signatures. However their RSA and Rabin VS protocols were subsequently broken and their DSS VS lacks a formal proof of security. We present new protocols for RSA, Rabin and DSS VS . Our protocols are efficient and provably secure and can tolerate the malicious behavior of up to half of the proxies. The RSA VS scheme is based on a completely novel approach. The recipient of the signature will not share such string using conventional secret sharing schemes, but instead will simply encrypt it using a threshold cryptosystem, i.e. a public key whose matching secret key is kept shared at the proxies. She will then also provide the proxies with a proof that such ciphertext indeed contains a signature. The crux of the problem was to design a threshold cryptosystem that would make such proof efficient. We present several variants of our basic scheme, one of which requires no interaction between the recipient of the signature and the proxies to establish such a proof and one in which the reconstruction is completely non-interactive. The RSA VS scheme can be easily adapted to Rabin's signatures. The main application of VS is the incorporation of digital cash into multiparty protocols, e.g. cash escrow and secure distributed auctions. Our protocols thus provide simple, efficient and secure solutions for those applications. Furthermore we believe that some of our techniques are of independent interest. Some of the by-products of our main result are: a new threshold cryptosystem, a new undeniable signature scheme and a way to create binding RSA cryptosystems. fl A preliminary version of this paper appears in the proceedings of CRYPTO'98. y Dipartimento di Matematica, Universita' di Catania. Viale A. Doria 6, 00100 Catania. Email: dario@liotro.dipmat.unict.it z I.B.M. T.J.Watson Research Center, P.O.Box 704, Yorktown Heights, NY 10598. Email: rosario@watson.ibm.com 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Asokan, V. Shoup and M. Waidner. </author> <title> Optimistic fair exchange of digital signatures. </title> <publisher> EURO-CRYPT'98. </publisher>
Reference-contexts: The idea of encrypting a signature and then proving in ZK that the ciphertext contains a valid signature has appeared in several places. In [10] it was proposed as a general paradigm to construct undeniable signatures but the specific efficient solutions work only for ElGamal-like signatures. In <ref> [1] </ref> this technique was used to construct fair exchange of digital signatures between two parties using an off-line trusted center. The paper is not concerned with using a threshold cryptosystem for encrypting the signature.
Reference: [2] <author> M. Bellare and P. Rogaway. </author> <title> The exact security of digital signatures. How to sign with RSA and Rabin. </title> <booktitle> EUROCRYPT'96, pp.399-416, Lecture Notes in Computer Science vol.1070 </booktitle>
Reference-contexts: The RSA scheme. Let (N B ; v B ) be Bob's RSA public key. The matching signing key is s B such that s B v B = 1 mod (N B ). We assume the standard "hash-and-sign" paradigm (although our technique extends to other schemes like <ref> [2] </ref>). Alice receives a message M from Bob and Bob's signature S = m s B mod N B on it where m = H (M ) for some collision-resistant hash function H.
Reference: [3] <author> M. Ben-Or, S. Goldwasser, and A. Wigderson. </author> <title> Completeness Theorems for Noncryptographic Fault-Tolerant Distributed Computations. </title> <booktitle> In Proceeding 20th Annual Symposium on the Theory of Computing, </booktitle> <pages> pages 1-10. </pages> <publisher> ACM, </publisher> <year> 1988. </year>
Reference-contexts: Motivation. It is important to notice that VS can be solved in theory using known cryptographic techniques for zero-knowledge proofs [31, 28] and multiparty computation <ref> [29, 3, 6] </ref>. However these solutions are hardly practical. We focus instead on practical solutions since there are several real-life applications which would greatly benefit from secure and efficient VS protocols.
Reference: [4] <author> M. Burmester. </author> <title> Homomorphism of secret sharing schemes: a tool for verifiable signature sharing. </title> <booktitle> EUROCRYPT'96, pp.96-106. Lecture Notes in Computer Science vol.1070. </booktitle>
Reference-contexts: Previous Work. In [20] efficient protocols were given for RSA, Rabin, ElGamal, Schnorr and DSS signatures. However their RSA and Rabin VS protocols were subsequently broken in [8]. Also their DSS VS achieves only an heuristic form of security. In <ref> [4] </ref> Burmester shows an unifying approach to VS based on homomorphism of secret sharing schemes. The approach is very elegant and also secure. However its generality does not yield extremely efficient protocols when applied to typical real-life signature schemes.
Reference: [5] <editor> David Chaum and Hans Van Antwerpen. Undeniable signatures. In G. Brassard, editor, </editor> <booktitle> Proc. CRYPTO 89, </booktitle> <pages> pages 212-217. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <note> Lecture Notes in Computer Science No. 435. </note>
Reference-contexts: Other Applications. We believe that parts of our solution are relevant on their own. For example, in Section 3 we present a new threshold cryptosystem which is possibly of independent interest. VS protocols are somewhat related to undeniable signatures (introduced by Chaum in <ref> [5] </ref>), i.e. signatures that can be verified only with the help of the signer. RSA-based 1 undeniable signatures were recently introduced in [26]. Our RSA construction can be seen as an alternative to [26] (though admittedly a less efficient scheme). <p> It is easy to see that the simulated view has the same distribution of the real one. 6 Other Applications 6.1 A new RSA-based undeniable signature A new undeniable signature scheme. Undeniable signatures were introduced in <ref> [5] </ref>. Informally an undeniable signature needs the cooperation of the signer to be verified. This may be useful in scenarios in which the signer wants to have some control on the distribution of authenticated data (e.g. software, where the signer wants to collect a licensing fee from users).
Reference: [6] <author> D. Chaum, C. Crepeau, and I. Damgard. </author> <title> Multiparty Unconditionally Secure Protocols. </title> <booktitle> In Proceeding 20th Annual Symposium on the Theory of Computing, </booktitle> <pages> pages 11-19. </pages> <publisher> ACM, </publisher> <year> 1988. </year>
Reference-contexts: Motivation. It is important to notice that VS can be solved in theory using known cryptographic techniques for zero-knowledge proofs [31, 28] and multiparty computation <ref> [29, 3, 6] </ref>. However these solutions are hardly practical. We focus instead on practical solutions since there are several real-life applications which would greatly benefit from secure and efficient VS protocols.
Reference: [7] <author> B. Chor, S. Goldwasser, S. Micali, and B. Awerbuch. </author> <title> Verifiable secret sharing and achieving simultaneity in the presence of faults. </title> <booktitle> In Proc. 26th IEEE Symp. on Foundations of Comp. Science, </booktitle> <pages> pages 383-395, </pages> <address> Portland, 1985. </address> <publisher> IEEE. </publisher>
Reference-contexts: Basic secret sharing protocols cannot cope with a malicious dealer who gives out random points that do not lie on a polynomial of degree t and/or with malicious players who contribute false shares at reconstruction time. A Verifiable Secret Sharing (VSS) protocol <ref> [7] </ref> solves these problems. Here we recall Feldman's VSS [15].
Reference: [8] <author> D. Coppersmith, M. Franklin, J. Patarin and M. Reiter. </author> <title> Low-exponent RSA with related messages. </title> <booktitle> EUROCRYPT'96, pp.1-9. Lecture Notes in Computer Science vol.1070. </booktitle>
Reference-contexts: At the end of the recover phase such signature is reconstructed no matter what a malicious subset of proxies may do. Previous Work. In [20] efficient protocols were given for RSA, Rabin, ElGamal, Schnorr and DSS signatures. However their RSA and Rabin VS protocols were subsequently broken in <ref> [8] </ref>. Also their DSS VS achieves only an heuristic form of security. In [4] Burmester shows an unifying approach to VS based on homomorphism of secret sharing schemes. The approach is very elegant and also secure.
Reference: [9] <author> R. Cramer, R. Gennaro and B. Schoenmakers. </author> <title> A Secure and Optimally Efficient Multi-Authority Election Scheme. </title> <journal> European Transactions of Telecommunications, Vol.8, </journal> <volume> No.5, </volume> <month> Sep-tember </month> <year> 1997. </year>
Reference-contexts: The specific idea of using threshold cryptosystems to "bootstrap" secret sharings appeared (exclusively for efficiency reasons) in <ref> [9, 22] </ref>. The idea of encrypting a signature and then proving in ZK that the ciphertext contains a valid signature has appeared in several places. In [10] it was proposed as a general paradigm to construct undeniable signatures but the specific efficient solutions work only for ElGamal-like signatures.
Reference: [10] <author> I. Damgard and T. Pedersen. </author> <title> New convertible undeniable signature schemes. </title> <booktitle> In Eurocrypt'96, </booktitle> <pages> pages 372-386. </pages> <note> Lecture Notes in Computer Science No. 1070. </note>
Reference-contexts: The specific idea of using threshold cryptosystems to "bootstrap" secret sharings appeared (exclusively for efficiency reasons) in [9, 22]. The idea of encrypting a signature and then proving in ZK that the ciphertext contains a valid signature has appeared in several places. In <ref> [10] </ref> it was proposed as a general paradigm to construct undeniable signatures but the specific efficient solutions work only for ElGamal-like signatures. In [1] this technique was used to construct fair exchange of digital signatures between two parties using an off-line trusted center. <p> An undeniable signature is called convertible if the signer can publish a short piece of information to convert all undeniable signatures in publicly verifiable ones. In <ref> [10] </ref> a general paradigm was proposed to implement convertible undeniable signatures. The signer chooses a traditional 22 signature scheme S with public verification key V K and secret signing key SK. <p> Then one adds ZK proofs to prove or disprove that the ciphertext contains a valid signature. To convert the signatures it is sufficient to publish DK. In <ref> [10] </ref> efficient protocols were presented for ElGamal-like signatures but not for RSA ones. Our techniques yield an efficient RSA-based undeniable scheme that follows the [10] paradigm. The signer uses RSA to sign and the ElGamal over the same composite to encrypt the signature. <p> To convert the signatures it is sufficient to publish DK. In <ref> [10] </ref> efficient protocols were presented for ElGamal-like signatures but not for RSA ones. Our techniques yield an efficient RSA-based undeniable scheme that follows the [10] paradigm. The signer uses RSA to sign and the ElGamal over the same composite to encrypt the signature. The confirmation protocol is EGRSA-ZK-Proof shown in Figure 4. The disavowal protocol is described in Figure 9.
Reference: [11] <author> A. De Santis, Y. Desmedt, Y. Frankel, and M. Yung. </author> <title> How to share a function securely. </title> <booktitle> In Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 522-533, </pages> <address> Santa Fe, 1994. </address> <publisher> IEEE. </publisher>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold <ref> [16, 12, 11, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency.
Reference: [12] <author> Y. Desmedt and Y. Frankel. </author> <title> Shared generation of authenticators and signatures. </title> <editor> In J. Feigen-baum, editor, </editor> <booktitle> Advances in Cryptology | Crypto '91, </booktitle> <pages> pages 457-469, </pages> <address> Berlin, </address> <year> 1991. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 576. 25 </note>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold <ref> [16, 12, 11, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold <ref> [16, 12, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme.
Reference: [13] <author> W. Diffie and M.E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Infor--mation Theory, v. IT-22, </journal> <volume> no. 6, </volume> <pages> pp. 644-654, </pages> <month> November </month> <year> 1976. </year>
Reference-contexts: The crux of the problem was to design a threshold cryptosystem that would make such proof efficient. The main idea here is to use the ElGamal encryption scheme <ref> [13, 14] </ref> over the same composite modulus N B over which the signature was computed. This will allows us to construct efficient methods to convince the proxies that the ciphertext contains the signature. <p> Clearly this assumption relies on the hardness of computing discrete logs. Reductions in the inverse direction are not known. ElGamal over a composite. We recall the functioning of the ElGamal encryption scheme <ref> [13, 14] </ref> over a composite modulus [33, 40].
Reference: [14] <author> T. ElGamal. </author> <title> A public-key cryptosystem and a signature scheme based on discrete logarithms. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-31(4):469-472, </volume> <year> 1985. </year>
Reference-contexts: The crux of the problem was to design a threshold cryptosystem that would make such proof efficient. The main idea here is to use the ElGamal encryption scheme <ref> [13, 14] </ref> over the same composite modulus N B over which the signature was computed. This will allows us to construct efficient methods to convince the proxies that the ciphertext contains the signature. <p> Clearly this assumption relies on the hardness of computing discrete logs. Reductions in the inverse direction are not known. ElGamal over a composite. We recall the functioning of the ElGamal encryption scheme <ref> [13, 14] </ref> over a composite modulus [33, 40].
Reference: [15] <author> P. Feldman. </author> <title> A Practical Scheme for Non-Interactive Verifiable Secret Sharing. </title> <booktitle> In Proceeding 28th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 427-437. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: A Verifiable Secret Sharing (VSS) protocol [7] solves these problems. Here we recall Feldman's VSS <ref> [15] </ref>.
Reference: [16] <author> Y. Frankel. </author> <title> A practical protocol for large group oriented networks. </title> <booktitle> EUROCRYPT'89, pp.56-61, Lecture Notes in Computer Science vol.434 </booktitle>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold <ref> [16, 12, 11, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold <ref> [16, 12, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme.
Reference: [17] <author> Y. Frankel, P. Gemmell, and M. Yung. </author> <title> Witness-based Cryptographic Program Checking and Robust Function Sharing. </title> <booktitle> In Proc. 28th Annual Symp. on the Theory of Computing, </booktitle> <pages> pages 499-508. </pages> <publisher> ACM, </publisher> <year> 1996. </year>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold <ref> [16, 12, 11, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold <ref> [16, 12, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme.
Reference: [18] <author> Y. Frankel, P. Gemmell, P. Mackenzie, and M. Yung. </author> <title> Proactive RSA. </title> <editor> In B. Kaliski, editor, </editor> <booktitle> Advances in Cryptology | Crypto '97, </booktitle> <pages> pages 440-454, </pages> <address> Berlin, </address> <year> 1997. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1294. </note>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold [16, 12, 11, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see [20] for a good discussion of this issue). <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold [16, 12, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme. A threshold cryptosystem T E for a scheme E distributes the operation of key generation and decryption among a set of n parties P 1 ; : : : ; P n .
Reference: [19] <author> Y. Frankel, P. Gemmell, P. Mackenzie, and M. Yung. </author> <title> Optimal Resilience Proactive Public-Key Cryptosystems. </title> <booktitle> In FOCS'97, </booktitle> <address> pp.384-393. </address>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold [16, 12, 11, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see [20] for a good discussion of this issue). <p> The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold [16, 12, 11, 17, 24] and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of <ref> [19, 38] </ref> in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see [20] for a good discussion of this issue). <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold [16, 12, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme. A threshold cryptosystem T E for a scheme E distributes the operation of key generation and decryption among a set of n parties P 1 ; : : : ; P n . <p> This implies that the value (N ) is unknown to the parties who have to jointly choose and share X. Our threshold cryptosystem overcomes this problem using techniques discovered by <ref> [19] </ref> for the application of proactive RSA. 3.1 Feldman's VSS over a composite First we present how to modify Feldman's VSS to work modulo a composite of unknown factorization. This protocol was discovered in [19]. <p> Our threshold cryptosystem overcomes this problem using techniques discovered by <ref> [19] </ref> for the application of proactive RSA. 3.1 Feldman's VSS over a composite First we present how to modify Feldman's VSS to work modulo a composite of unknown factorization. This protocol was discovered in [19]. They used it as a crucial tool to refresh shares of a proactive RSA signature scheme. We slightly modified it to work as a component of our key generation protocol. <p> The coefficients of the sharing polynomial must be chosen large enough to statistically hide information (this is evident from the proof of security). The protocol appears in Figure 1. The following Lemma is from <ref> [19] </ref>. The proof is mostly based on a similar proof that appears in [38]. Lemma 1 Feldman-Z N -VSS is a VSS of fault-tolerance t for any t; n such that n &gt; 2t. <p> The protocol TEG-Key-Gen (for Threshold ElGamal Key Generation) appears in figure 2. 3.3 Decryption Protocol We are now left to show the decryption protocol. The approach is the same as the decryption protocol modulo a prime in [35], but it uses the techniques from <ref> [19, 38] </ref>, to make it work modulo a composite. The idea is to get a partial decryption from each player by exponentiating the ciphertext to his own additive (not threshold!) share of the secret key.
Reference: [20] <author> M. Franklin and M. Reiter. </author> <title> Verifiable Signature Sharing. </title> <booktitle> EUROCRYPT'95, pp.50-63. Lecture Notes in Computer Science vol.921. </booktitle>
Reference-contexts: 1 Introduction The concept of Verifiable Signature Sharing (VS ) was introduced by Franklin and Reiter in <ref> [20] </ref>. VS enables the recipient of a digital signature, who is not necessarily the original signer, to share such signature among n proxies so that a subset of them can later reconstruct it. A VS protocol is divided in a sharing phase and a recover phase. <p> At the end of the sharing phase each proxy can verify that a valid signature for the given document can be reconstructed. At the end of the recover phase such signature is reconstructed no matter what a malicious subset of proxies may do. Previous Work. In <ref> [20] </ref> efficient protocols were given for RSA, Rabin, ElGamal, Schnorr and DSS signatures. However their RSA and Rabin VS protocols were subsequently broken in [8]. Also their DSS VS achieves only an heuristic form of security. <p> Method (2) is more efficient for Alice and requires no interaction between her and the proxies. The solution is described in detail in Section 4 2 The DSS scheme. The DSS VS scheme is a modified version of the ElGamal VS scheme from <ref> [20] </ref> which allows for a proof of security. The solution is described in Section 5 1.2 Related Work Some ideas in our new RSA VS scheme have appeared previously in the literature although in different contexts and with different usage. <p> In particular we combine the techniques of [19, 38] in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see <ref> [20] </ref> for a good discussion of this issue). VS is related but different from threshold signature schemes: in the latter the secret key is shared so that a set of n people can produce signatures if a threshold of t cooperates. <p> DLog G A mod N is the discrete log in base G of A modulo N . 2.2 Definition We follow the ideas in the definition of VS presented in <ref> [20] </ref>, although we believe our formalization to be simpler and more rigorous. VS consists of a pair of protocols (Share , Recover ) for Alice and the proxies. The input of Share for all the players is a message m and the public verification key V K of the signer. <p> That is at the end of the sharing the proxies must be assured that they hold a sharing of Bob's signature on m. The Basic Paradigm. We depart from the approach used by Franklin and Reiter <ref> [20] </ref> of directly sharing the signature S. Instead we follow the alternative approach to obtain secret sharing using an encryption of the secret with a key which is shared at the proxies. <p> Alice receives the message M and the pair (r; s) and she wants to verifiably share the pair (r; s) among the proxies P 1 ; : : : ; P n . The Approach from <ref> [20] </ref>. We follow the same provably secure approach used in [20] to verifiably share an ElGamal signature. <p> Alice receives the message M and the pair (r; s) and she wants to verifiably share the pair (r; s) among the proxies P 1 ; : : : ; P n . The Approach from <ref> [20] </ref>. We follow the same provably secure approach used in [20] to verifiably share an ElGamal signature. The main difference between a (plain) ElGamal signature and DSS 8 is that r = g k mod p (without the extra modq reduction) and s = k 1 (m xr) (a instead of a +). The idea in [20] was for Alice to <p> secure approach used in <ref> [20] </ref> to verifiably share an ElGamal signature. The main difference between a (plain) ElGamal signature and DSS 8 is that r = g k mod p (without the extra modq reduction) and s = k 1 (m xr) (a instead of a +). The idea in [20] was for Alice to give out r in the clear to the proxies and to share s via a Feldman VSS using an appropriate basis for the verification. <p> Alice gives out s in the clear and shares r via Feldman's VSS. However their simulation does not go through, although they claim heuristically that it is secure. Our Approach. We show that a careful adaptation of the ElGamal VS from <ref> [20] </ref> can be shown to be secure. Alice gives out r in the clear to the proxies and shares = s 1 via Feldman VSS using the basis G = g m y r (which the proxies can compute on their own from g; y; m; r). <p> The full protocol appears in Figure 8. A remark about fault-tolerance. By using Feldman's VSS with the extra complaint phase we achieve fault-tolerance t for n &gt; 2t. In <ref> [20] </ref> the bound n &gt; 3t was claimed because a simplified version of Feldman's VSS without complaints was used. It is easy to see that all the discrete-log based protocols in [20] achieve the bound n &gt; 2t if Feldman with complaints is used. <p> By using Feldman's VSS with the extra complaint phase we achieve fault-tolerance t for n &gt; 2t. In <ref> [20] </ref> the bound n &gt; 3t was claimed because a simplified version of Feldman's VSS without complaints was used. It is easy to see that all the discrete-log based protocols in [20] achieve the bound n &gt; 2t if Feldman with complaints is used. Theorem 4 Protocol DSS-VS is a secure VS protocol for DSS with fault-tolerance t, for any n; t with n &gt; 2t. <p> We presented new, efficient and provably secure VS protocols for RSA, Rabin and DSS signature schemes. This problem was open since the introduction of the concept of VS in <ref> [20] </ref> as their RSA/Rabin protocols were subsequently broken and their DSS protocol was not provably secure. Various applications of our results have also been presented.
Reference: [21] <author> M. Franklin and M. Reiter. </author> <title> The design and implementation of a secure auction service. </title> <booktitle> 1995 IEEE Symposium on Security and Privacy. </booktitle>
Reference: [22] <author> J. Garay, R. Gennaro, C. Jutla and T. Rabin. </author> <title> Secure Distributed Storage and Retrieval. </title> <booktitle> 1997 Workshop on Distributed Algorithms (WDAG'97), Lecture Notes in Computer Science vol.1320. </booktitle>
Reference-contexts: The specific idea of using threshold cryptosystems to "bootstrap" secret sharings appeared (exclusively for efficiency reasons) in <ref> [9, 22] </ref>. The idea of encrypting a signature and then proving in ZK that the ciphertext contains a valid signature has appeared in several places. In [10] it was proposed as a general paradigm to construct undeniable signatures but the specific efficient solutions work only for ElGamal-like signatures.
Reference: [23] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> Robust threshold DSS signatures. </title> <editor> In Ueli Maurer, editor, </editor> <booktitle> Advances in Cryptology | Eurocrypt '96, </booktitle> <pages> pages 354-371, </pages> <address> Berlin, </address> <year> 1996. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 1070. </note>
Reference-contexts: Indeed the reduction modq of r serves only to shorten the signature and has no security purpose (this was also noticed in <ref> [23] </ref> and in [43]). The full protocol appears in Figure 8. A remark about fault-tolerance. By using Feldman's VSS with the extra complaint phase we achieve fault-tolerance t for n &gt; 2t.
Reference: [24] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> Robust and efficient sharing of RSA functions. </title> <booktitle> In Crypto'96, </booktitle> <pages> pages 157-172. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year> <note> Lecture Notes in Computer Science No. 1109. </note>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold <ref> [16, 12, 11, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold <ref> [16, 12, 17, 24] </ref> and proactive [18, 19, 38] RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme. <p> To prevent bad players from contributing bad partial decryption we force them to prove in ZK that they are correct with respect to the witnesses generated during the key generation protocol. The ZK proof for this task is described 3 in <ref> [24] </ref>. The protocol TEG-Decrypt appears in Figure 3. Theorem 1 TEG = (TEG-Key-Gen, TEG-Decrypt) is a secure threshold cryptosystem for ElGamal over a composite with fault-tolerance t for any t; n such that n &gt; 2t. <p> In the centralized case X is chosen in Z N with uniform probability. This results in a distribution which is statistically close to uniform for X mod (N ). So we need to prove 3 <ref> [24] </ref> requires the modulus N to be a product of safe primes. <p> Each player P i 2 Good broadcasts the partial decryption A i = A x i mod N and proves in ZK using the protocol from <ref> [24] </ref> that DLog A A i = DLog G ff 0i . 2.
Reference: [25] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> How to securely generate a key in a distributed fashion. </title> <type> Manuscript. </type>
Reference-contexts: At the end it is not possible to prove that the pair x; y is built with the right (uniform) distribution. This problem was first noticed by <ref> [25] </ref>. Their solution, which we are going to employ on this paper, is to perform an information-theoretically secure VSS first for x i (for example Pedersen's VSS) and then on top of that (using the same sharing polynomial) perform the checks required by the Feldman's VSS.
Reference: [26] <author> R. Gennaro, H. Krawczyk and T. Rabin. </author> <title> RSA-Based Undeniable Signatures. </title> <booktitle> CRYPTO'97, Lecture Notes in Computer Science vol.1294. </booktitle>
Reference-contexts: VS protocols are somewhat related to undeniable signatures (introduced by Chaum in [5]), i.e. signatures that can be verified only with the help of the signer. RSA-based 1 undeniable signatures were recently introduced in <ref> [26] </ref>. Our RSA construction can be seen as an alternative to [26] (though admittedly a less efficient scheme). Interestingly the structure of our RSA VS protocol can also be used to construct binding RSA cryptosystems. In [42] the concept of binding cryptography was introduced. <p> VS protocols are somewhat related to undeniable signatures (introduced by Chaum in [5]), i.e. signatures that can be verified only with the help of the signer. RSA-based 1 undeniable signatures were recently introduced in <ref> [26] </ref>. Our RSA construction can be seen as an alternative to [26] (though admittedly a less efficient scheme). Interestingly the structure of our RSA VS protocol can also be used to construct binding RSA cryptosystems. In [42] the concept of binding cryptography was introduced. <p> The transcript of the simulation is ^ C b ; ^ C 1b ; ^ b which clearly has the exact same distribution as in the real case. In <ref> [26] </ref> the first RSA-based undeniable signature was presented. Our scheme is less efficient than [26] and also relies on more assumption (e.g. the security of the ElGamal encryption). 6.2 Binding RSA In [42] the concept of binding cryptography was introduced. <p> The transcript of the simulation is ^ C b ; ^ C 1b ; ^ b which clearly has the exact same distribution as in the real case. In <ref> [26] </ref> the first RSA-based undeniable signature was presented. Our scheme is less efficient than [26] and also relies on more assumption (e.g. the security of the ElGamal encryption). 6.2 Binding RSA In [42] the concept of binding cryptography was introduced.
Reference: [27] <author> O. Goldreich and A. Kahan. </author> <title> How to Construct Constant-Round Zero-Knowledge Proof Systems for NP. </title> <journal> J. of Cryptology, Vol.9, No.3, </journal> <volume> pp.167-190, </volume> <year> 1996. </year>
Reference-contexts: This means that the distance between the two distributions is exactly 2cK N 3 which is bounded by 2 N B which is negligible. To make the above protocol ZK against any verifier, known techniques <ref> [27] </ref> can be used. In particular the Verifier can commit to the challenge before the Prover speaks. 4.2 The Basic Protocol Outline. On input a message m, Bob's signature S on it and Bob's public key N B ; v B Alice does the following.
Reference: [28] <author> O. Goldreich, S. Micali, and A. Wigderson. </author> <title> Proofs that Yield Nothing but the Validity of the Assertion, and a Methodology of Cryptographic Protocol Design. </title> <booktitle> In Proceeding 27th Annual Symposium on the Foundations of Computer Science, </booktitle> <pages> pages 174-187. </pages> <publisher> ACM, </publisher> <year> 1986. </year>
Reference-contexts: Motivation. It is important to notice that VS can be solved in theory using known cryptographic techniques for zero-knowledge proofs <ref> [31, 28] </ref> and multiparty computation [29, 3, 6]. However these solutions are hardly practical. We focus instead on practical solutions since there are several real-life applications which would greatly benefit from secure and efficient VS protocols.
Reference: [29] <author> O. Goldreich, S. Micali, and A. Wigderson. </author> <title> How to play any mental game. </title> <booktitle> In 19th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 218-229, </pages> <year> 1987. </year>
Reference-contexts: Motivation. It is important to notice that VS can be solved in theory using known cryptographic techniques for zero-knowledge proofs [31, 28] and multiparty computation <ref> [29, 3, 6] </ref>. However these solutions are hardly practical. We focus instead on practical solutions since there are several real-life applications which would greatly benefit from secure and efficient VS protocols.
Reference: [30] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic Encryption. </title> <journal> JCSS, </journal> <volume> 28(2), pp.270-299, </volume> <month> April </month> <year> 1984. </year>
Reference-contexts: Thus if the message M is in the same group generated by G it is an easy task to show that the DDH implies the semantic security of the ElGamal encryption scheme (semantic security defined in <ref> [30] </ref>, means that it is impossible for an observer to distinguish between the encryption of two messages).
Reference: [31] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The knowledge complexity of interactive proof-systems. </title> <journal> SIAM. J. Computing, </journal> <volume> 18(1) </volume> <pages> 186-208, </pages> <month> February </month> <year> 1989. </year> <month> 26 </month>
Reference-contexts: Motivation. It is important to notice that VS can be solved in theory using known cryptographic techniques for zero-knowledge proofs <ref> [31, 28] </ref> and multiparty computation [29, 3, 6]. However these solutions are hardly practical. We focus instead on practical solutions since there are several real-life applications which would greatly benefit from secure and efficient VS protocols. <p> This will allows us to construct efficient methods to convince the proxies that the ciphertext contains the signature. We present two such methods. (1) One is for Alice to provide a zero-knowledge proof <ref> [31] </ref> that C S contains S. We present an efficient ZK proof for this task. (2) The other variant consists on the proxies using their private key to decrypt a message ^ C S publicly computable from C S .
Reference: [32] <author> H. Krawczyk. </author> <title> Secret sharing made short. </title> <editor> In D. Stinson, editor, </editor> <booktitle> Advances in Cryptology | Crypto '93, </booktitle> <pages> pages 136-146, </pages> <address> Berlin, </address> <year> 1993. </year> <note> Springer-Verlag. Lecture Notes in Computer Science No. 773. </note>
Reference-contexts: Performing secret sharing by encrypting a value with a symmetric key that is shared among the proxy appeared first in <ref> [32] </ref> as a way to shorten the size of shares in computa-tionally secure secret sharing schemes. The specific idea of using threshold cryptosystems to "bootstrap" secret sharings appeared (exclusively for efficiency reasons) in [9, 22].
Reference: [33] <author> K.S. McCurley. </author> <title> A key distribution system equivalent to factoring. </title> <journal> Journal of Cryptology. vol.1, </journal> <volume> pp.95-105, </volume> <year> 1988. </year>
Reference-contexts: Clearly this assumption relies on the hardness of computing discrete logs. Reductions in the inverse direction are not known. ElGamal over a composite. We recall the functioning of the ElGamal encryption scheme [13, 14] over a composite modulus <ref> [33, 40] </ref>.
Reference: [34] <author> S. Micali. </author> <title> Fair Public-Key Cryptosystems. </title> <booktitle> CRYPTO'92, </booktitle> <address> pp.113-138. </address>
Reference-contexts: Notice that a threshold signature scheme trivially gives a VS scheme when the signature sharer coincides with the signer. But in general this is not true. VS also bear some relationship to fair public-key cryptosystems (FPKC) <ref> [34] </ref> in which one has to share a secret key and prove that the shared secret is indeed the inverse of a given public key. Indeed both VS and FPKC are examples of structured VSS protocols (to use the terminology in [34]), i.e. verifiable secret sharing protocols in which the dealer <p> also bear some relationship to fair public-key cryptosystems (FPKC) <ref> [34] </ref> in which one has to share a secret key and prove that the shared secret is indeed the inverse of a given public key. Indeed both VS and FPKC are examples of structured VSS protocols (to use the terminology in [34]), i.e. verifiable secret sharing protocols in which the dealer has to prove some additional property about the secret being shared (and not just that such a unique secret exists). 2 Preliminaries 2.1 The Model We assume there are three entities.
Reference: [35] <author> T. Pedersen. </author> <title> A threshold cryptosystem without a trusted party. </title> <booktitle> In Advances in Cryptology| EUROCRYPT '91, volume 547 of Lecture Notes in Computer Science, </booktitle> <pages> pages 522-526, </pages> <address> Berlin, 1991. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: In particular notice that the private key DK should not be exposed during T-Decrypt. Formal definitions for threshold cryptosystems appear in Appendix A. An example of a threshold cryptosystem for ElGamal over a prime modulus can be found in <ref> [35] </ref>. In this section we show how to extend that construction to a composite modulus. A Threshold Cryptosystem for ElGamal over a composite. There are several complications that arise from trying to generalize the approach in [35] to work for ElGamal modulo a composite. <p> of a threshold cryptosystem for ElGamal over a prime modulus can be found in <ref> [35] </ref>. In this section we show how to extend that construction to a composite modulus. A Threshold Cryptosystem for ElGamal over a composite. There are several complications that arise from trying to generalize the approach in [35] to work for ElGamal modulo a composite. First of all we will require for our application that the modulus N will be given as a parameter to the key generation protocol 2 without its factorization. <p> The general idea follows the one of Pedersen <ref> [35] </ref> for the case of discrete-log cryptosys-tems in a prime field. Each player P i shares a random value x i via Feldman's VSS. <p> This paradigm was introduced by [38] and called share-backup. The protocol TEG-Key-Gen (for Threshold ElGamal Key Generation) appears in figure 2. 3.3 Decryption Protocol We are now left to show the decryption protocol. The approach is the same as the decryption protocol modulo a prime in <ref> [35] </ref>, but it uses the techniques from [19, 38], to make it work modulo a composite. The idea is to get a partial decryption from each player by exponentiating the ciphertext to his own additive (not threshold!) share of the secret key.
Reference: [36] <author> T. Pedersen. </author> <title> Non-interactive and information-theoretic secure verifiable secret sharing. </title> <booktitle> Advances in Cryptology|CRYPTO'91, pp.129-140, volume 576 of Lecture Notes in Computer Science. </booktitle>
Reference-contexts: This protocol can tolerate up to t = n=2 malicious faults including the dealer. Notice that the value of the secret is only computationally secure, e.g., the value g mod p is leaked. To avoid this problem it is possible to use Pedersen's VSS <ref> [36] </ref> which protects the secret in an information-theoretic sense.
Reference: [37] <author> B. Pfitzmann and M. Waidner. </author> <title> How to break fault-detectable key recovery. </title> <booktitle> Operating Systems Review 32/1 (1998) 23-28. </booktitle>
Reference-contexts: The main motivation of [42] was to establish a fraud-detectable key-recovery system: the third party would be a key recovery agent and because the proof is publicly verifiable fraudulent messages would be detected. In <ref> [37] </ref> however an attack is presented in which two cooperating players can produce seemingly binding ciphertexts that would not be decrypted by the key recovery authority. If at least one of the parties is honest, [37] notices that much more efficient solutions can be devised by having the receiver check that <p> In <ref> [37] </ref> however an attack is presented in which two cooperating players can produce seemingly binding ciphertexts that would not be decrypted by the key recovery authority. If at least one of the parties is honest, [37] notices that much more efficient solutions can be devised by having the receiver check that the key recovery agent can indeed decrypt. This seems to deprive this approach of its main application area. However it is possible that in other models the binding approach may still be interesting.
Reference: [38] <author> T. Rabin. </author> <title> A Simplified Approach to Threshold and Proactive RSA. </title> <note> To appear in CRYPTO'98. </note>
Reference-contexts: The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold [16, 12, 11, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. In particular we combine the techniques of [19, 38] in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see [20] for a good discussion of this issue). <p> The construction of an ElGamal-like threshold cryptosystem over a composite modulus uses techniques from the areas of threshold [16, 12, 11, 17, 24] and proactive [18, 19, 38] RSA signature schemes. In particular we combine the techniques of <ref> [19, 38] </ref> in order to improve efficiency. It is important also to remind the reader of the difference between VS and related cryptographic objects (see [20] for a good discussion of this issue). <p> We believe this new threshold cryptosystem to be of independent interest. Although the construction of this ElGamal-based threshold cryptosystem is new, the techniques used in this section appears in several papers related to threshold [16, 12, 17, 24] and proactive <ref> [18, 19, 38] </ref> RSA signature schemes. Threshold Cryptosystems. Let E be a public key encryption scheme. A threshold cryptosystem T E for a scheme E distributes the operation of key generation and decryption among a set of n parties P 1 ; : : : ; P n . <p> The coefficients of the sharing polynomial must be chosen large enough to statistically hide information (this is evident from the proof of security). The protocol appears in Figure 1. The following Lemma is from [19]. The proof is mostly based on a similar proof that appears in <ref> [38] </ref>. Lemma 1 Feldman-Z N -VSS is a VSS of fault-tolerance t for any t; n such that n &gt; 2t. <p> The shares a player received during Feldman-Z N -VSS will be used for backup in case some other player fails during the decryption protocol. This paradigm was introduced by <ref> [38] </ref> and called share-backup. The protocol TEG-Key-Gen (for Threshold ElGamal Key Generation) appears in figure 2. 3.3 Decryption Protocol We are now left to show the decryption protocol. <p> The protocol TEG-Key-Gen (for Threshold ElGamal Key Generation) appears in figure 2. 3.3 Decryption Protocol We are now left to show the decryption protocol. The approach is the same as the decryption protocol modulo a prime in [35], but it uses the techniques from <ref> [19, 38] </ref>, to make it work modulo a composite. The idea is to get a partial decryption from each player by exponentiating the ciphertext to his own additive (not threshold!) share of the secret key.
Reference: [39] <author> A. Shamir. </author> <title> How to share a secret. </title> <journal> Communications of the ACM, </journal> <volume> 22 </volume> <pages> 612-613, </pages> <year> 1979. </year>
Reference-contexts: If the message space is larger than the group generated by G then the semantic security of the ElGamal encryption scheme is a seemingly stronger assumption than the DDH. 2.4 Tools We will use the polynomial-based t-out-of-n secret sharing due to Shamir <ref> [39] </ref>. Let q be a prime: given a secret 2 Z q , the dealer chooses at random a polynomial f (z) = + P t j=1 a j z j of degree t and gives to player P i a share i = f (i) mod q.
Reference: [40] <author> Z. Shmuely. </author> <title> Composite Diffie-Hellman public-key generating systems are hard to break. </title> <institution> Tech-nion Dept. of Computer Science Technical Report no.356, </institution> <year> 1985. </year>
Reference-contexts: Clearly this assumption relies on the hardness of computing discrete logs. Reductions in the inverse direction are not known. ElGamal over a composite. We recall the functioning of the ElGamal encryption scheme [13, 14] over a composite modulus <ref> [33, 40] </ref>.
Reference: [41] <author> M. Stadler. </author> <title> Publicly Verifiable Secret Sharing. </title> <booktitle> EUROCRYPT'96, pp.190-199, Lecture Notes in Computer Science, </booktitle> <address> vol.1070 </address>
Reference-contexts: Moreover they present general solutions for RSA and DSS signatures using any kind of public-key encryption but employing inefficient binary cut-and-choose ZK proofs which require a number of public-key operations which is proportional to the security parameter. Stadler in <ref> [41] </ref> uses ElGamal over a composite to verifiably encrypt e-roots. But when it comes to share such encryptions, his scheme can only deal with additive access structures, thus resulting in an O (n t ) exponential blow-up to achieve a t-out-of-n threshold scheme. <p> This will allow for an efficient verifiability check using the ZK proof in Figure 4. Alice will be the prover and the proxies will be the verifiers. The protocol is based on <ref> [41] </ref> with some efficiency improvements (it is not necessary to repeat it several times.) EGRSA-ZK-Proof Input for Prover and Verifier: The message m, Bob's RSA public key N B ; v B , the ElGamal public key G; Y = G X , the ciphertext (A S = G K ;
Reference: [42] <author> E. Verheul and H. van Tilborg. </author> <title> Binding ElGamal. </title> <booktitle> Proceedings of EUROCRYPT'97, Lecture Notes in Computer Science vol. </booktitle> <pages> 1233. </pages>
Reference-contexts: RSA-based 1 undeniable signatures were recently introduced in [26]. Our RSA construction can be seen as an alternative to [26] (though admittedly a less efficient scheme). Interestingly the structure of our RSA VS protocol can also be used to construct binding RSA cryptosystems. In <ref> [42] </ref> the concept of binding cryptography was introduced. In a binding public-key cryptosystem the sender encrypts a message under both the public key of the receiver and the public key of a third party and prove in (non-interactive) ZK that the two ciphertexts contain the same message. In [42] a scheme <p> In <ref> [42] </ref> the concept of binding cryptography was introduced. In a binding public-key cryptosystem the sender encrypts a message under both the public key of the receiver and the public key of a third party and prove in (non-interactive) ZK that the two ciphertexts contain the same message. In [42] a scheme for binding ElGamal was presented. We show that our RSA VS scheme can be used to construct binding RSA public key encryptions. <p> In [26] the first RSA-based undeniable signature was presented. Our scheme is less efficient than [26] and also relies on more assumption (e.g. the security of the ElGamal encryption). 6.2 Binding RSA In <ref> [42] </ref> the concept of binding cryptography was introduced. In a binding public-key cryp-tosystem the sender encrypts a message under both the public key of the receiver and the 23 EGRSA-ZK-Denial Secret input for the Prover: The decryption key X. <p> Let b the answer. The Prover sends to the Verifier ^ b. The Verifier accepts if b = b. public key of a third party and prove in (non-interactive) ZK that the two ciphertexts contain the same message. In <ref> [42] </ref> a scheme for binding ElGamal was presented but the problem of binding RSA left open. The main motivation of [42] was to establish a fraud-detectable key-recovery system: the third party would be a key recovery agent and because the proof is publicly verifiable fraudulent messages would be detected. <p> The Verifier accepts if b = b. public key of a third party and prove in (non-interactive) ZK that the two ciphertexts contain the same message. In <ref> [42] </ref> a scheme for binding ElGamal was presented but the problem of binding RSA left open. The main motivation of [42] was to establish a fraud-detectable key-recovery system: the third party would be a key recovery agent and because the proof is publicly verifiable fraudulent messages would be detected.
Reference: [43] <author> Y. Zheng. </author> <title> Digital SignCryption. </title> <booktitle> CRYPTO'97, Lecture Notes in Computer Science vol.1294. </booktitle>
Reference-contexts: Indeed the reduction modq of r serves only to shorten the signature and has no security purpose (this was also noticed in [23] and in <ref> [43] </ref>). The full protocol appears in Figure 8. A remark about fault-tolerance. By using Feldman's VSS with the extra complaint phase we achieve fault-tolerance t for n &gt; 2t. In [20] the bound n &gt; 3t was claimed because a simplified version of Feldman's VSS without complaints was used.
References-found: 43

