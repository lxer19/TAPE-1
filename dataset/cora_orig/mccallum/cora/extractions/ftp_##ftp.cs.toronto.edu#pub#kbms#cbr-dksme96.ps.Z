URL: ftp://ftp.cs.toronto.edu/pub/kbms/cbr-dksme96.ps.Z
Refering-URL: http://www.cs.utoronto.ca/~juris/myp.html
Root-URL: 
Title: A Case-Based Reasoning Approach to Learning Control  
Author: Igor Jurisica Janice Glasgow 
Keyword: Learning control systems, case-based reasoning, flexible manufacturing, inverse kinematic task  
Address: Toronto, Ontario M5S 1A4 Kingston, Ontario K7L 3N6  
Affiliation: Dept. of Computer Science Dept. of Computing and Inf. Sci. University of Toronto Queen's University  
Note: To appear in: 5 th Int. Conf. on Data and Knowledge Systems for Manufacturing and Engineering, DKSME-96, October 24-25, 1996, Phoenix, AZ  This research was supported by the Information Technology Research Center of Ontario. The authors are indebted to John Mylopoulos for helpful comments and suggestions.  
Email: juris@cs.utoronto.ca janice@qucis.queensu.ca  
Phone: (416) 978-7589 (613) 545-6058  
Abstract: Most successful robotic manipulators are precise, fast, smooth and have high repeatability. Their major drawback is their tendency to have only a limited repertoire of movements that can only be extended by costly inverse kinematic calculations or direct teaching. Our approach also starts with a limited repertoire of movements, but can incrementally add new positions and thus allows for higher flexibility. The proposed architecture is experimentally evaluated on two real world domains, albeit simple, and the results are compared to other machine learning algorithms applied to the same problem. 
Abstract-found: 1
Intro-found: 1
Reference: [AIS93] <author> R. Agrawal, T. Imielinski, and A. Swami. </author> <title> Database mining: A performance 22 perspective. </title> <journal> IEEE Transactions on Knowledge and Data Engineering., </journal> <volume> 5(6) </volume> <pages> 914-925, </pages> <year> 1993. </year>
Reference-contexts: The initial context may be subsequently changed by automatic context modifications, as explained in the sequel. A machine learning or knowledge mining algorithm <ref> [AIS93] </ref> can be used to select important attributes for a given task and to specify characteristic values for them [Jur96a].
Reference: [AKM84] <author> S. Arimoto, S. Kawamura, and F. Miyazaki. </author> <title> Bettering operation fo robots by learning. </title> <journal> Journal of Robotic Systems, </journal> (1):123-140, 1984. 
Reference-contexts: Starting with a simple joint-based position control of serial link manipulators, the field then diversified to sophisticated control techniques, such as adaptive control and learning control. A control system capable of remembering a repeated operation is called a learning control system <ref> [AKM84, BCG88, WSC95] </ref>. A learning process can increase the number of solvable tasks (i.e., acquire new knowledge) or it can improve the efficiency of solving repeated tasks. Most current applications of machine learning in robotics are oriented to the perfection of the control process.
Reference: [AS94] <author> D. W. Aha and S. L. Salzberg. </author> <title> Learning to catch: Applying nearest neighbor algorithms to dynamic control tasks. </title> <editor> In P. Cheeseman and R. W. Oldford, editors, </editor> <title> Selecting Models from Data: </title> <booktitle> Artificial Intelligence and Statistics IV, </booktitle> <year> 1994. </year>
Reference-contexts: Due to the practical nature of these problems, data availability and objective relevance measure, similar tasks have been used to test machine learning algorithms in the past <ref> [AS94] </ref>. The task under consideration is known as an inverse kinematic (e.g., computation of the robot's joint angles to ensure that the end-effector coordinates will reach a desired position).
Reference: [BCG88] <author> P. Bondi, G. Casalino, and L. Gambardella. </author> <title> On the iterative learning control the ory for robotic manipulators. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> 4(1) </volume> <pages> 14-22, </pages> <year> 1988. </year>
Reference-contexts: Starting with a simple joint-based position control of serial link manipulators, the field then diversified to sophisticated control techniques, such as adaptive control and learning control. A control system capable of remembering a repeated operation is called a learning control system <ref> [AKM84, BCG88, WSC95] </ref>. A learning process can increase the number of solvable tasks (i.e., acquire new knowledge) or it can improve the efficiency of solving repeated tasks. Most current applications of machine learning in robotics are oriented to the perfection of the control process.
Reference: [BLT86] <author> J. A. Blakeley, Per-Ake Larson, and F. W. Tompa. </author> <title> Efficiently updating material ized views. </title> <booktitle> In ACM-SIGMOD, </booktitle> <pages> pages 61-71, </pages> <year> 1986. </year>
Reference-contexts: Each partial result comprises partial results on the attribute level: SC j = fSC ji " SC j (i+1) g n1 i=1 , where n is the number of attributes. The idea of incremental context relaxation and restriction is based on the use of differential queries <ref> [BLT86] </ref>. First, it is determined what parts of the context are affected by the change, i.e., what parts of context are relevant to the change. Second, only the affected parts are recomputed.
Reference: [BM95] <author> L. Bkgaard and L. Mark. </author> <title> Incremental computation of time-varying query ex pressions. </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 7(4) </volume> <pages> 583-589, </pages> <year> 1995. </year>
Reference-contexts: Thus, only local changes to the query are required if an incremental approach is used [GMR95]. The basic idea of incremental computation in TA3 is to store query results and reuse them when similar queries are computed, similarly as in <ref> [BM95] </ref>. If the number of attributes per case is significantly smaller than the number of cases then the incremental context restriction/relaxation outperforms recomputation of the answer from scratch.
Reference: [BW96] <author> S.N. Balakrishnan and R.D. Weil. </author> <title> Neurocontrol: A literature survey. </title> <booktitle> Mathematical and Computer Modelling, </booktitle> <address> 23(1-2):101-117, </address> <year> 1996. </year>
Reference-contexts: In such a situation, other methods are used to approximate the solution or to constraint the task. Approximation methods include fuzzy and neural net control <ref> [Tza95, BW96] </ref>. The search space can also be constrained, for example, by limiting the energy consumption, maximizing the speed or maximizing the accuracy. In our study, we used an existing small robot as an example.
Reference: [CW91] <author> S. Ceri and J. Widom. </author> <title> Deriving production rules for incremental view mainte nance. </title> <booktitle> In VLDB-91, </booktitle> <pages> pages 577-589, </pages> <address> Barclona, Spain, </address> <year> 1991. </year>
Reference-contexts: A naive approach would take the new query and would submit it to the system. A more sophisticated approach can take advantage of an already processed query by incrementally modifying its result. Incremental approaches have been successfully used in database systems for view maintenance <ref> [CW91, GMR95, GL95] </ref>. In most situations, an incremental approach is substantially more efficient than a naive one. Efficiency improvement is more visible when several consecutive changes to the query are required, i.e., during iterative browsing, and when a large case base is used.
Reference: [GL95] <author> T. Griffin and L. Libkin. </author> <title> Incremental maintenance of views with duplicates. </title> <booktitle> In Proc. of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 328-339, </pages> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: A naive approach would take the new query and would submit it to the system. A more sophisticated approach can take advantage of an already processed query by incrementally modifying its result. Incremental approaches have been successfully used in database systems for view maintenance <ref> [CW91, GMR95, GL95] </ref>. In most situations, an incremental approach is substantially more efficient than a naive one. Efficiency improvement is more visible when several consecutive changes to the query are required, i.e., during iterative browsing, and when a large case base is used.
Reference: [GMR95] <author> A. Gupta, I. S. Mumick, and K. A. Ross. </author> <title> Adapting materialized views after redefi nitions. </title> <booktitle> In Proc. of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 211-222, </pages> <address> San Jose, CA, </address> <year> 1995. </year>
Reference-contexts: A naive approach would take the new query and would submit it to the system. A more sophisticated approach can take advantage of an already processed query by incrementally modifying its result. Incremental approaches have been successfully used in database systems for view maintenance <ref> [CW91, GMR95, GL95] </ref>. In most situations, an incremental approach is substantially more efficient than a naive one. Efficiency improvement is more visible when several consecutive changes to the query are required, i.e., during iterative browsing, and when a large case base is used. <p> Small updates to the query generally produce only small changes to the query result. Thus, only local changes to the query are required if an incremental approach is used <ref> [GMR95] </ref>. The basic idea of incremental computation in TA3 is to store query results and reuse them when similar queries are computed, similarly as in [BM95].
Reference: [Gre94] <author> R. Greiner. </author> <booktitle> AAAI Fall Symposium Series on Relevance. </booktitle> <publisher> AAAI Press, </publisher> <year> 1994. </year>
Reference: [Jan94] <author> K. P. </author> <title> Jantke. Nonstandard concepts of similarity in case-based reasoning. </title> <booktitle> In Proc. of the 17 th Annual Conference of the Gesellschaft fur Klassifikation e.V., </booktitle> <address> Kaiserslautern, Germany, 1994. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: It is assumed that cases with equivalent problem descriptions have equivalent solutions. The similarity relation between two cases can be generalized into a relation among a set of cases <ref> [Jan94] </ref>. Assume a set of cases, SC, a context and a case base CB. The relation sim (SC; ; CB) states that the cases contained in set SC CB are considered similar in a context and thus are relevant to a given request.
Reference: [JCA95] <author> T.J. Jang, C.H. Choi, and H.S. Ahn. </author> <title> Iterative learning control in feedback systems. </title> <journal> Automatica, </journal> <volume> 31(2) </volume> <pages> 243-248, </pages> <year> 1995. </year>
Reference-contexts: Most current applications of machine learning in robotics are oriented to the perfection of the control process. A learning control system for manipulators, whose endpoint is moving under geometrical constraints on a surface, was proposed in [NA95]. <ref> [JCA95] </ref> describes an iterative learning system for precise tracking control with guaranteed convergence. In [Mit90] the Theo-Agent architecture of a reactive system is proposed.
Reference: [JG95] <author> I. Jurisica and J. Glasgow. </author> <title> Applying case-based reasoning to control in robotics. </title> <booktitle> In 3 rd Robotics and Knowledge-Based Systems Workshop, </booktitle> <address> St. Hubert, </address> <year> 1995. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> Results obtained by simple cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains <ref> [JG95] </ref>, we have applied the TA3 system to other domains: prediction and knowledge mining in medicine [JS95, JMG + 96], character recognition [Jur96a, JG96], supporting software reuse [Jur95c], iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation.
Reference: [JG96] <author> I. Jurisica and J. Glasgow. </author> <title> Case-based classification using similarity-based re trieval. </title> <booktitle> In 8 th IEEE International Conference on Tools with Artificial Intelligence, </booktitle> <address> Toulouse, France, </address> <year> 1996. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> A theoretical basis for the proposed system is introduced in the subsequent sections (formal definitions are provided in <ref> [Jur94, JG96] </ref>). 2.1 Case Representation In knowledge-based systems, more sophisticated knowledge representation schemes usually imply more powerful reasoning systems. However, with the increased complexity of knowledge representation comes difficulties with knowledge acquisition. <p> Context can be changed dynamically; it supports dynamic similarity function. An obvious problem, however, is selecting a method for specifying a context. There are several possible scenarios for creating the initial context and their advantages/disadvantages depend on the actual implementation <ref> [Jur95c, JG96] </ref>. In the robotic domain, the initial context should be specified without human intervention, but should be changeable, based on different tasks being solved. <p> Results obtained by simple cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine [JS95, JMG + 96], character recognition <ref> [Jur96a, JG96] </ref>, supporting software reuse [Jur95c], iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well.
Reference: [JMG + 96] <author> I. Jurisica, J. Mylopoulos, J. Glasgow, H. Shapiro, and R. F. Casper. </author> <title> Case-based reasoning in IVF: Prediction and knowledge mining. </title> <journal> AI in Medicine. </journal> <note> Special issue on CBR in Medicine, 1996. Under revisions. 23 </note>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> Results obtained by simple cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine <ref> [JS95, JMG + 96] </ref>, character recognition [Jur96a, JG96], supporting software reuse [Jur95c], iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well.
Reference: [JS95] <author> I. Jurisica and H. Shapiro. </author> <title> A computer model for case-based reasoning in IVF. </title> <booktitle> In The 51 st Conf. of the American Society for Reproductive Medicine, </booktitle> <address> Seattle, Washington, </address> <year> 1995. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> Results obtained by simple cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine <ref> [JS95, JMG + 96] </ref>, character recognition [Jur96a, JG96], supporting software reuse [Jur95c], iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well.
Reference: [Jur94] <author> I. Jurisica. </author> <booktitle> How to retrieve relevant information? In [Gre94], </booktitle> <pages> pages 101-104, </pages> <year> 1994. </year> <note> An extended version available as a Tech. Report DKBS-TR-94-5. </note>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> A theoretical basis for the proposed system is introduced in the subsequent sections (formal definitions are provided in <ref> [Jur94, JG96] </ref>). 2.1 Case Representation In knowledge-based systems, more sophisticated knowledge representation schemes usually imply more powerful reasoning systems. However, with the increased complexity of knowledge representation comes difficulties with knowledge acquisition.
Reference: [Jur95a] <author> I. Jurisica. </author> <title> TA3 : Case-based intelligent retrieval and advisory tool. </title> <booktitle> In ACM Conference on Society and the Future of Computing, </booktitle> <address> Durango, CO, </address> <year> 1995. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine [JS95, JMG + 96], character recognition [Jur96a, JG96], supporting software reuse [Jur95c], iterative browsing and intelligent retrieval <ref> [Jur95a] </ref>. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well. Especially in the robotic domain, the results must not only be accurate but also, they must be delivered in real time.
Reference: [Jur95c] <author> I. Jurisica. </author> <title> A similarity-based retrieval tool for software repositories. </title> <booktitle> In The 3 rd Workshop on AI and Software Engineering: Breaking the Mold. IJCAI-95, </booktitle> <address> Montreal, Quebec, </address> <year> 1995. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> Context can be changed dynamically; it supports dynamic similarity function. An obvious problem, however, is selecting a method for specifying a context. There are several possible scenarios for creating the initial context and their advantages/disadvantages depend on the actual implementation <ref> [Jur95c, JG96] </ref>. In the robotic domain, the initial context should be specified without human intervention, but should be changeable, based on different tasks being solved. <p> cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine [JS95, JMG + 96], character recognition [Jur96a, JG96], supporting software reuse <ref> [Jur95c] </ref>, iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well.
Reference: [Jur96a] <author> I. Jurisica. </author> <title> Inductive learning and case-based reasoning. </title> <booktitle> In Canadian AI Confer ence, Workshop on What is inductive learning?, </booktitle> <address> Toronto, Canada, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> The initial context may be subsequently changed by automatic context modifications, as explained in the sequel. A machine learning or knowledge mining algorithm [AIS93] can be used to select important attributes for a given task and to specify characteristic values for them <ref> [Jur96a] </ref>. <p> It should be noted that these profiles can be encoded off-line by human experts or they can be learned using machine learning or knowledge mining techniques <ref> [Jur96a] </ref>. 10 If no relevant cases are retrieved (or too many cases are retrieved) using the initial context, then the system automatically modifies the context. It is apparent that after the context is changed by relaxation or restriction, the system must reevaluate the query. <p> Results obtained by simple cross-validation; average over 20 random trials and with 95% confidence intervals. 4.3 Summary on Case Studies Besides a control task in robotic domains [JG95], we have applied the TA3 system to other domains: prediction and knowledge mining in medicine [JS95, JMG + 96], character recognition <ref> [Jur96a, JG96] </ref>, supporting software reuse [Jur95c], iterative browsing and intelligent retrieval [Jur95a]. Each domain has different characteristics and thus allows for a better performance evaluation. In presented studies, we have measured not only task-performance (accuracy) but time-performance (scalability) as well.
Reference: [Jur96b] <author> I. Jurisica. </author> <title> Supporting flexibility. a case-based reasoning approach. </title> <booktitle> In The AAAI Fall Symposium. Flexible Computation in Intelligent Systems: Results, Issues, and Opportunities, </booktitle> <address> Cambridge, Massachusetts, </address> <year> 1996. </year>
Reference-contexts: Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand. The evaluation of the TA3 Control system in this paper and the evaluation of the TA3 system elsewhere <ref> [Jur94, JG95, JS95, Jur95a, Jur95c, Jur96a, Jur96b, JG96, JMG + 96] </ref> suggest that the proposed reasoning architecture can be used in a robotic domain for improving manufacturing flexibility. <p> Clearly, flexibility of the relevance measure allows for different scenarios to be modeled by the system and thus is desirable <ref> [Jur96b] </ref>. 3 2 Relevance Assessment As was already mentioned, retrieving only relevant cases is the core part of the proposed system.
Reference: [Kol93] <author> J. L. Kolodner. </author> <title> Case-Based Reasoning. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: Because of the utility problem [Min88], the SINS system uses only 10 cases to allow for real time performance. In this paper, TA3 Control , a novel learning control system that incorporates TA3 case-based reasoning (CBR) system is proposed. A case-based approach <ref> [Kol93] </ref> relies on the concept that similar problems have similar solutions. Thus, facing a new problem, a case 2 based system retrieves similar cases stored in a case base and adapts them to fit the problem at hand.
Reference: [LZ94] <author> D. Luzeaux and B. Zavidovique. </author> <title> Process control and machine learning: Rule-based incremental control. </title> <journal> IEEE Trans. on Automatic Control, </journal> <volume> 39(6) </volume> <pages> 1166-1171, </pages> <year> 1994. </year>
Reference-contexts: Thus, the system becomes increasingly reactive, since over time less planning is required as the machine learning component acquires more control rules. The Candide system <ref> [LZ94] </ref> has been used for the acquisition of a control knowledge. The system learns a qualitative model of the system first, then, based on the selected mode, it creates a rule-based incremental controller for a given system.
Reference: [Min88] <author> S. N. Minton. </author> <title> Quantitative results concerning the utility of explanation-based learning. </title> <booktitle> In Proc. of AAAI-88, </booktitle> <pages> pages 564-569, </pages> <address> St. Paul, MN, </address> <year> 1988. </year> <note> Also published in Journal of Artificial Intelligence, 42, </note> <year> 1990, </year> <pages> pages 363-381. </pages>
Reference-contexts: The SINS system [RS93] is a self improving reactive control system for autonomous robotic navigation. The system is based on using case-based techniques and reinforcement learning. The learning module monitors the system and incrementally modifies the case representations to accommodate the changes. Because of the utility problem <ref> [Min88] </ref>, the SINS system uses only 10 cases to allow for real time performance. In this paper, TA3 Control , a novel learning control system that incorporates TA3 case-based reasoning (CBR) system is proposed. A case-based approach [Kol93] relies on the concept that similar problems have similar solutions.
Reference: [Mit90] <author> T. M. Mitchell. </author> <title> Becoming increasingly reactive. </title> <booktitle> In Proc. of the Workshop on Innovative Approaches to Planning, Scheduling and Control, </booktitle> <address> San Diego, CA, </address> <year> 1990. </year>
Reference-contexts: A learning control system for manipulators, whose endpoint is moving under geometrical constraints on a surface, was proposed in [NA95]. [JCA95] describes an iterative learning system for precise tracking control with guaranteed convergence. In <ref> [Mit90] </ref> the Theo-Agent architecture of a reactive system is proposed. The system is used in robot control and combines a stimulus-response subsystem for rapid reaction with a search-based planner for handling unanticipated situations, and an explanation-based learning mechanism to construct stimulus-response rules to cover new situations. <p> The TA3 system is similar to the Theo-Agent architecture <ref> [Mit90] </ref> in the sense that it acquires new knowledge over time to improve the control component. The difference is in the form of acquired knowledge. Theo-Agent constructs stimulus-response rules, while TA3 acquires episodic knowledge. TA3 is also similar to SINS, mainly because both systems use case-based techniques.
Reference: [MMP95] <author> J. Mylopoulos and R. Motschnig-Pitrik. </author> <title> Partitioning information bases with con texts. </title> <booktitle> In The 3 rd Int. Conf. on Cooperative Information Systems, </booktitle> <address> Vienna, </address> <year> 1995. </year>
Reference-contexts: Value relaxation/restriction: covers the situation when the initial value constraints are made more general/specific. This can be done either by extending/restricting the attribute value or by generalizing/specializing the value. Value restriction is performed in the opposite direction, making the attribute constraint more specific. Using the context formalism presented in <ref> [MMP95] </ref>, value relaxation/restriction can be expressed as: 00 = 0 , where is the initial context, 0 = f&lt; a k : fV g &gt;g, is relaxation/restriction operator and 00 is a modified context. 2.
Reference: [NA95] <author> T. Naniwa and S. Arimoto. </author> <title> Learning control for robot tasks under geometric endpoint constraints. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 11(3) </volume> <pages> 432-441, </pages> <year> 1995. </year>
Reference-contexts: Most current applications of machine learning in robotics are oriented to the perfection of the control process. A learning control system for manipulators, whose endpoint is moving under geometrical constraints on a surface, was proposed in <ref> [NA95] </ref>. [JCA95] describes an iterative learning system for precise tracking control with guaranteed convergence. In [Mit90] the Theo-Agent architecture of a reactive system is proposed.
Reference: [Ort95] <author> J. Ortega. </author> <title> On the informativeness of the DNA promoter sequences domain theory. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 361-367, </pages> <year> 1995. </year> <note> Research Note. </note>
Reference-contexts: It should be noted that despite the possible range for values of m, only m "close" to n make sense. If m t n (i.e., m is substantially smaller than n) then a loose matching criteria are defined. The experiments presented in <ref> [Ort95] </ref> show that setting m = n 2 allowed for the best results considering the ratio of correct and incorrect answers. <p> In TA3 Robot 1 only cardinality relaxation was used (i.e., only m of n, m &lt; n, attributes were required to match). A similar approach presented in <ref> [Ort95] </ref> yielded analogous results accuracy improvement for m &lt; n. TA3 Robot 2 used value relaxation (i.e., relaxing attribute values) first and if this failed then cardinality relaxation was performed.
Reference: [Qui92] <author> J. R. Quinlan. </author> <title> Learning with continuous classes. </title> <booktitle> In Proc. 5th Australian Joint Conference on AI, </booktitle> <pages> pages 343-348, </pages> <year> 1992. </year>
Reference-contexts: end-effector coordinates - TA3 Robot . 4 Case Studies 4.1 Case Study 1: Servo Data Servo Data is a publicly available data set created in 1986 by Karl Ulrich at MIT. 3 Due to its availability and nontriviality, the database was used for testing of various machine learning algorithms, e.g., <ref> [Qui92, Qui93] </ref>.
Reference: [Qui93] <author> J. R. Quinlan. </author> <title> Combining instance-based and model-based learning. </title> <booktitle> In Proc. of the 10 th International Conference on Machine Learning, </booktitle> <address> Amherst, MA, </address> <year> 1993. </year>
Reference-contexts: end-effector coordinates - TA3 Robot . 4 Case Studies 4.1 Case Study 1: Servo Data Servo Data is a publicly available data set created in 1986 by Karl Ulrich at MIT. 3 Due to its availability and nontriviality, the database was used for testing of various machine learning algorithms, e.g., <ref> [Qui92, Qui93] </ref>.
Reference: [RS93] <author> A. Ram and J. C. Santamara. </author> <title> Continuous case-based reasoning. </title> <booktitle> In Proc. of the AAAI-93 Workshop on Case-Based Reasoning, </booktitle> <address> Washington, DC, </address> <year> 1993. </year>
Reference-contexts: The Candide system [LZ94] has been used for the acquisition of a control knowledge. The system learns a qualitative model of the system first, then, based on the selected mode, it creates a rule-based incremental controller for a given system. The SINS system <ref> [RS93] </ref> is a self improving reactive control system for autonomous robotic navigation. The system is based on using case-based techniques and reinforcement learning. The learning module monitors the system and incrementally modifies the case representations to accommodate the changes.
Reference: [Sas95] <author> K. Sasaki. </author> <title> History of robot control research. </title> <journal> International Journal of the Japan Society for Precision Engineering, </journal> <volume> 29(3) </volume> <pages> 197-200, </pages> <year> 1995. </year> <month> 24 </month>
Reference-contexts: 1 Introduction Robot control has been studied for the past three decades <ref> [Sas95] </ref>. Starting with a simple joint-based position control of serial link manipulators, the field then diversified to sophisticated control techniques, such as adaptive control and learning control. A control system capable of remembering a repeated operation is called a learning control system [AKM84, BCG88, WSC95].
Reference: [SBR96] <author> F. Smieja, U. Beyer, and G. Richter. </author> <title> Adaptive control of a robot arm using driver programs. </title> <journal> Artificial Intelligence in Engineering, </journal> <volume> 10(1) </volume> <pages> 39-59, </pages> <year> 1996. </year>
Reference-contexts: Most successful robotic manipulators are precise, fast, smooth and have high repeatability. Their major drawback is their tendency to have a limited repertoire of movements that can only be extended by costly inverse kinematic calculations or direct teaching <ref> [SBR96] </ref>. Our approach also starts with a limited repertoire of movements, but it can incrementally add new positions and thus allows for greater flexibility. The combination of on-line and off-line learning with the case-based reasoning system offers both performance and flexibility.
Reference: [Tza95] <author> S.G. </author> <title> Tzafestas. Neural networks in robot control. Artificial Intelligence in Indus trial Decision Making, </title> <journal> Control and Automation, </journal> <volume> 14 </volume> <pages> 327-387, </pages> <year> 1995. </year>
Reference-contexts: In such a situation, other methods are used to approximate the solution or to constraint the task. Approximation methods include fuzzy and neural net control <ref> [Tza95, BW96] </ref>. The search space can also be constrained, for example, by limiting the energy consumption, maximizing the speed or maximizing the accuracy. In our study, we used an existing small robot as an example.
Reference: [WSC95] <author> D. Wang, Y. C. Soh, and C. C. Cheah. </author> <title> Robust motion and force control of constrained manipulators by learning. </title> <journal> Automatica, </journal> <volume> 31(2) </volume> <pages> 257-262, </pages> <year> 1995. </year> <month> 25 </month>
Reference-contexts: Starting with a simple joint-based position control of serial link manipulators, the field then diversified to sophisticated control techniques, such as adaptive control and learning control. A control system capable of remembering a repeated operation is called a learning control system <ref> [AKM84, BCG88, WSC95] </ref>. A learning process can increase the number of solvable tasks (i.e., acquire new knowledge) or it can improve the efficiency of solving repeated tasks. Most current applications of machine learning in robotics are oriented to the perfection of the control process.
References-found: 36

