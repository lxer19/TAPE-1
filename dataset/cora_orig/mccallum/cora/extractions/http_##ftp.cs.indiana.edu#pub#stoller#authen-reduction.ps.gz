URL: http://ftp.cs.indiana.edu/pub/stoller/authen-reduction.ps.gz
Refering-URL: http://www.cs.indiana.edu/hyplan/stoller.html
Root-URL: http://www.cs.indiana.edu
Title: A Reduction for Automated Verification of Authentication Protocols  
Author: Scott D. Stoller 
Date: February 9, 1999  
Address: Bloomington, IN 47405 USA  
Affiliation: Computer Science Dept., Indiana University,  
Abstract: Authentication protocols (including protocols that provide key establishment) are designed to work correctly in the presence of an adversary that can (1) perform an unbounded number of encryptions and tuplings while fabricating messages, and (2) prompt honest principals to engage in an unbounded number of concurrent runs of the protocol. The amount of local state maintained by a single run of an authentication protocol is bounded. Intuitively, this suggests that there is a bound on the resources needed to attack the protocol. Such bounds clarify the nature of attacks on and provide a rigorous basis for automated verification of authentication protocols. However, few such bounds are known. This paper defines a domain-specific language for authentication protocols and establishes an upper bound on the resources needed to attack a large subset of the protocols expressible in that language, including versions of the Yahalom protocol and the Needham-Schroeder public-key protocol. 
Abstract-found: 1
Intro-found: 1
Reference: [Aba97] <author> Martin Abadi. </author> <title> Explicit communication revisited: Two new attacks on authentication protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 23(3) </volume> <pages> 185-186, </pages> <month> March </month> <year> 1997. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [AJ98] <author> Parosh Aziz Abdulla and Bengt Jonsson. </author> <title> Verifying networks of timed processes. </title> <booktitle> In Proc. 4th Intl. Workshop on Tools and Algorithms for the Construction and Analysis of Systems (TACAS), Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: Few other reductions applicable to authentication protocols are known. Most existing techniques for automated analysis of systems with unbounded numbers of processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, are neither aimed at nor applicable to authentication protocols.
Reference: [AN95] <author> Ross Anderson and Roger Needham. </author> <title> Robustness principles for public key protocols. </title> <booktitle> In Proc. Int'l. Conference on Advances in Cryptology (CRYPTO 95), volume 963 of Lecture Notes in Computer Science, </booktitle> <pages> pages 236-247. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [AN96] <author> Martin Abadi and Roger Needham. </author> <title> Prudent engineering practice for cryptographic protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 22(1) </volume> <pages> 6-15, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [AS85] <author> Bowen Alpern and Fred B. Schneider. </author> <title> Defining liveness. </title> <journal> Information Processing Letters, </journal> <volume> 24(4) </volume> <pages> 181-185, </pages> <month> October </month> <year> 1985. </year>
Reference-contexts: This paper defines a domain-specific language for authentication protocols and proves a reduction for a large subset of the protocols expressible in that language. One novel idea in our reduction is the use of dynamic restrictions, which are actually safety properties <ref> [AS85] </ref>, as well as static (i.e., syntactic) restrictions to characterize that subset. With static restrictions alone, it seems difficult to find restrictions that are both strong enough to enable the proof and weak enough to be satisfied by well-known protocols.
Reference: [BAN90] <author> Michael Burrows, Martin Abadi, and Roger Needham. </author> <title> A logic of authentication. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 8(1) </volume> <pages> 18-36, </pages> <month> February </month> <year> 1990. </year> <note> An expanded version appeared as Res. Rep. 39, </note> <institution> Systems Research Center, Digital Equipment Corp., </institution> <address> Palo Alto, CA, </address> <month> Feb. </month> <year> 1989. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> and Yao developed analysis algorithms that directly verify secrecy requirements [DY83] of cryptographic protocols; however, their algorithms do not consider correspondence properties, do not consider known-key attacks, and apply to a severely restricted class of protocols, which excludes almost all well-known authentication protocols (e.g., the Otway-Rees [OR87] and Yahalom protocols <ref> [BAN90] </ref>) and is strictly included in the class of protocols we consider. Roscoe [Ros98] has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds). <p> small bounds are used [Low98a, Low98b]. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks [MvOV97, p. 496], and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees [OR87] and Yahalom <ref> [BAN90] </ref> protocols. In contrast, our reduction considers secrecy and correspondence requirements, accommodates known-key attacks, and applies to the Yahalom protocol, Lowe's corrected version of the Needham-Schroeder public-key protocol [Low96], and some protocols that use temporary secrets. <p> NewValue (f; pg; n) 1. Send (r; fnpg key (;p) ) 2. Receive (n) 3. Old (n) 4. EndInit (n) P R : 0. Receive (pfng key (p;) ) 1. BeginRespond (n) 2. Old (n) 3. Send (p; n) Example. In LAP, the Yahalom protocol <ref> [BAN90] </ref> is Y = hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (2) where P I : 0. NewValue (;; ni) 1. Send (p; ni) 2. Receive (fpk ninrg key (;S) X) 3. BeginInit (nr) 4. <p> Send (p; mX) 6. Old (k) 7. EndRespond (m) P S : 0. Receive (mir fxmirg key (i;) fymirg key (r;) ) 1. NewValue (fi; rg; k) 2. Send (r; m fxkg key (i;) fykg key (r;) ) Example. In LAP, the Needham-Schroeder shared-key protocol <ref> [BAN90] </ref>, slightly modified, is NSSK = hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (5) where 7 of 25 P I : 0. NewValue (;; ni) 1. Send (S; pni) 2. Receive (fnipkg key (;S) X) 3. Send (p; X) 4.
Reference: [Bol98] <author> Dominique Bolignano. </author> <title> Integrating proof-based and model-checking techniques for the formal verification of cryptographic protocols. </title> <editor> In Alan J. Hu and Moshe Y. Vardi, editors, </editor> <booktitle> Proc. Tenth Int'l. Conference on Computer-Aided Verification (CAV), volume 1427 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [CES86] <author> E. M. Clarke, E. A. Emerson, and A. P. Sistla. </author> <title> Automatic verification of finite-state Concurrent systems using temporal logic specifications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 8(2) </volume> <pages> 244-263, </pages> <year> 1986. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible.
Reference: [CGJ95] <author> Edmund M. Clarke, Orna Grumberg, and Somesh Jha. </author> <title> Verifying parameterized networks using abstractions and regular languages. </title> <booktitle> In Proc. Sixth Int'l. Conference on Concurrency Theory (CONCUR), </booktitle> <year> 1995. </year>
Reference-contexts: Few other reductions applicable to authentication protocols are known. Most existing techniques for automated analysis of systems with unbounded numbers of processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, are neither aimed at nor applicable to authentication protocols.
Reference: [CS96] <author> Rance Cleaveland and Steve Sims. </author> <title> The NCSU Concurrency Workbench. </title> <editor> In R. Alur and T. Henzinger, editors, </editor> <booktitle> Proc. 8th Int'l. Conference on Computer-Aided Verification (CAV), volume 1102 of Lecture Notes in Computer Science, </booktitle> <pages> pages 394-397. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible.
Reference: [DDHY92] <author> David L. Dill, Andreas J. Drexler, Alan J. Hu, and C. Han Yang. </author> <title> Protocol verification as a hardware design aid. </title> <booktitle> In IEEE International Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <pages> pages 522-525. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1992. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible.
Reference: [DK97] <author> Z. Dang and R. A. Kemmerer. </author> <title> Using the ASTRAL model checker for cryptographic protocol analysis. </title> <booktitle> In Proc. DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <month> September </month> <year> 1997. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [DS81] <author> D. E. Denning and G. M. Sacco. </author> <title> Timestamps in key distribution protocols. </title> <journal> Communications of the ACM, </journal> <volume> 24(8) </volume> <pages> 198-208, </pages> <year> 1981. </year> <note> 20 of 25 </note>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [DY83] <author> Danny Dolev and Andrew C. Yao. </author> <title> On the security of public key protocols. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT-29(2):198-208, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: Dolev and Yao developed analysis algorithms that directly verify secrecy requirements <ref> [DY83] </ref> of cryptographic protocols; however, their algorithms do not consider correspondence properties, do not consider known-key attacks, and apply to a severely restricted class of protocols, which excludes almost all well-known authentication protocols (e.g., the Otway-Rees [OR87] and Yahalom protocols [BAN90]) and is strictly included in the class of protocols we
Reference: [EN96] <author> E. Allen Emerson and Kedar S. Namjoshi. </author> <title> Automated verification of parameterized synchronous systems. </title> <booktitle> In Proc. 8th Int'l. Conference on Computer-Aided Verification (CAV), </booktitle> <year> 1996. </year>
Reference-contexts: Few other reductions applicable to authentication protocols are known. Most existing techniques for automated analysis of systems with unbounded numbers of processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, are neither aimed at nor applicable to authentication protocols.
Reference: [FHG98] <author> F. Javier Thayer Fabrega, Jonathan C. Herzog, and Joshua D. Guttman. </author> <title> Honest ideals on strand spaces. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1998. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
Reference: [GLR95] <author> Li Gong, Patrick Lincoln, and John Rushby. </author> <title> Byzantine agreement with authentication: Observations and applications in tolerating hybrid and link faults. </title> <booktitle> In Dependable Computing for Critical Applications|5, </booktitle> <pages> pages 79-90. </pages> <booktitle> IFIP WG 10.4, preliminary proceedings, </booktitle> <year> 1995. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement <ref> [GLR95] </ref>, secure reliable multicast [Rei96, MR97], authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [Hol91] <author> Gerard J. Holzmann. </author> <title> Design and Validation of Computer Protocols. </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible.
Reference: [HTWW96] <author> Nevin Heintze, J. D. Tygar, Jeannette Wing, and Hao-Chi Wong. </author> <title> Model checking electronic commerce protocols. </title> <booktitle> In Proc. of the USENIX 1996 Workshop on Electronic Commerce, </booktitle> <month> November </month> <year> 1996. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [KM95] <author> R. P. Kurshan and K. L. McMillan. </author> <title> A structural induction theorem for processes. </title> <journal> Information and Computation, </journal> <volume> 117(1), </volume> <year> 1995. </year>
Reference-contexts: Few other reductions applicable to authentication protocols are known. Most existing techniques for automated analysis of systems with unbounded numbers of processes, such as <ref> [CGJ95, KM95, EN96, AJ98] </ref>, are neither aimed at nor applicable to authentication protocols.
Reference: [Kur94] <author> Robert P. Kurshan. </author> <title> Computer-aided verification of coordinating processes: the automata-theoretic approach. </title> <publisher> Princeton University Press, </publisher> <year> 1994. </year>
Reference-contexts: This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. Systematic state-space exploration, including temporal-logic model checking and process-algebraic equivalence checking, is emerging as a practical approach to automated verification <ref> [CES86, Hol91, DDHY92, Kur94, CS96] </ref>. Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible.
Reference: [Lam78] <author> Leslie Lamport. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Communications of the ACM, </journal> <volume> 21(7) </volume> <pages> 558-564, </pages> <year> 1978. </year>
Reference-contexts: A session set for an execution ex is a set SS of sessions such that each run-id id in oe appears exactly once in SS. Dependence Relation. We define two relations on events, similar to Lamport's happened-before relation (sometimes called "potential causality") <ref> [Lam78] </ref>.
Reference: [Lam93] <author> Leslie Lamport. </author> <title> How to write a long formula. </title> <type> Technical Report SRC-119, </type> <institution> Digital Equipment Corporation, Systems Research Center, </institution> <year> 1993. </year> <note> Available via http://www.research.digital.com/SRC/personal/Leslie Lamport/proofs/proofs.html. </note>
Reference-contexts: E7. For each j 2 dom (oe), if oe (j) has Z as the run-id, i.e., oe (j) is of the form hZ; l; si, then l = Z and (using Lamport's bullet-style notation for lists of conjuncts or disjuncts <ref> [Lam93] </ref>) _ (9t 2 Prim; ns Name : s = NewValue (ns; t)) _ (9t 2 Term G ; x 2 Name : (s = Send (x; t) ^ t 2 known Z (IK; oe (0::j 1); subst )) _ (s = Receive (t))) where known Z (IK; oe; subst )
Reference: [Low96] <author> Gavin Lowe. </author> <title> Breaking and fixing the Needham-Schroeder public-key protocol using FDR. </title> <editor> In Tiziana Margaria and Bernhard Steffen, editors, </editor> <booktitle> Proc. Workshop on Tools and Algorithms for The Construction and Analysis of Systems (TACAS), volume 1055 of Lecture Notes in Computer Science, </booktitle> <pages> pages 147-166. </pages> <publisher> Springer-Verlag, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> Roscoe [Ros98] has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds). Lowe proved specific bounds for a corrected version of 2 of 25 the Needham-Schroeder public-key protocol <ref> [Low96] </ref> and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used [Low98a, Low98b]. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks [MvOV97, p. 496], and is <p> In contrast, our reduction considers secrecy and correspondence requirements, accommodates known-key attacks, and applies to the Yahalom protocol, Lowe's corrected version of the Needham-Schroeder public-key protocol <ref> [Low96] </ref>, and some protocols that use temporary secrets. We conjecture that our reduction also applies to other well-known protocols, such as the Otway-Rees protocol. <p> A ground term is a term not containing variables. Let Term and Term G denote the sets of terms and ground terms, respectively. 1 It is not strictly a generalization: the reduction in [Low98a, Low98b] does not apply to the corrected protocol from <ref> [Low96] </ref>, because message 3 violates Assumption 2. 3 of 25 Each variable has a type, which is either Prim or All. Variables of type Prim can be bound only to primitive values. Variables of type All can be bound to all ground terms. <p> Send (i; frkninrg key (i;) fikg key (r;) ) 3 If t 1 has no defining occurrences, then the pattern-matching can be implemented by encrypting a candidate message using the appropriate principals's public key. 6 of 25 Example. In LAP, Lowe's corrected version of the Needham-Schroeder public-key protocol <ref> [Low96] </ref> (following Lowe, we omit the steps used to obtain public keys from a server) is NSP K = hfpubkey (A); pubkey (B); pubkey (Z); pvtkey (Z)g; fhfA; Bg; P I i; hfA; Bg; P R igi; (3) where P I : 0. NewValue (f; pg; ni) 1.
Reference: [Low98a] <author> Gavin Lowe. </author> <title> Towards a completeness result for model checking of security protocols. </title> <type> Technical Report 1998/6, </type> <institution> Dept. of Mathematics and Computer Science, University of Leicester, </institution> <year> 1998. </year>
Reference-contexts: Lowe proved specific bounds for a corrected version of 2 of 25 the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used <ref> [Low98a, Low98b] </ref>. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks [MvOV97, p. 496], and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees [OR87] and Yahalom [BAN90] protocols. <p> for a corrected version of 2 of 25 the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used [Low98a, Low98b]. 1 However, that result does not extend to correspondence requirements <ref> [Low98a, p. 61] </ref>, does not consider known-key attacks [MvOV97, p. 496], and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees [OR87] and Yahalom [BAN90] protocols. <p> A term is an expression composed of constants, variables, and operators. A ground term is a term not containing variables. Let Term and Term G denote the sets of terms and ground terms, respectively. 1 It is not strictly a generalization: the reduction in <ref> [Low98a, Low98b] </ref> does not apply to the corrected protocol from [Low96], because message 3 violates Assumption 2. 3 of 25 Each variable has a type, which is either Prim or All. Variables of type Prim can be bound only to primitive values.
Reference: [Low98b] <author> Gavin Lowe. </author> <title> Towards a completeness result for model checking of security protocols (extended abstract). </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1998. </year>
Reference-contexts: Lowe proved specific bounds for a corrected version of 2 of 25 the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used <ref> [Low98a, Low98b] </ref>. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks [MvOV97, p. 496], and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees [OR87] and Yahalom [BAN90] protocols. <p> A term is an expression composed of constants, variables, and operators. A ground term is a term not containing variables. Let Term and Term G denote the sets of terms and ground terms, respectively. 1 It is not strictly a generalization: the reduction in <ref> [Low98a, Low98b] </ref> does not apply to the corrected protocol from [Low96], because message 3 violates Assumption 2. 3 of 25 Each variable has a type, which is either Prim or All. Variables of type Prim can be bound only to primitive values.
Reference: [LR97] <author> Gavin Lowe and Bill Roscoe. </author> <title> Using csp to detect errors in the tmn protocol. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 23(10), </volume> <year> 1997. </year> <note> 21 of 25 </note>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user. <p> Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [MCF87] <author> J. Millen, S. Clark, and S. Freedman. </author> <title> The Interrogator: protocol security analysis. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-13(2), </volume> <month> February </month> <year> 1987. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [MCJ97] <author> Will Marrero, Edmund Clarke, and Somesh Jha. </author> <title> A model checker for authentication protocols. </title> <booktitle> In Proc. DIMACS Workshop on Design and Formal Verification of Security Protocols, </booktitle> <month> September </month> <year> 1997. </year> <note> Available via http://dimacs.rutgers.edu/Workshops/Security/program2/program.html. </note>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [MMS97] <author> John C. Mitchell, Mark Mitchell, and Ulrich Stern. </author> <title> Automated analysis of cryptographic protocols using MurOE. </title> <booktitle> In Proc. 18th IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 141-153. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [MR97] <author> Dahlia Malkhi and Michael Reiter. </author> <title> A high-throughput secure reliable multicast protocol. </title> <journal> The Journal of Computer Security, </journal> <volume> 5 </volume> <pages> 113-127, </pages> <year> 1997. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast <ref> [Rei96, MR97] </ref>, authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [MSS98] <author> John C. Mitchell, Vitaly Shmatikov, and Ulrich Stern. </author> <title> Finite-state analysis of SSL 3.0. </title> <booktitle> In Seventh USENIX Security Symposium, </booktitle> <pages> pages 201-216, </pages> <year> 1998. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [MvOV97] <author> Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. </author> <title> Handbook of applied cryptography. </title> <publisher> CRC Press, </publisher> <year> 1997. </year>
Reference-contexts: the Needham-Schroeder public-key protocol [Low96] and subsequently generalized that proof to show for a class of protocols that no violations of secrecy properties are missed when small bounds are used [Low98a, Low98b]. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks <ref> [MvOV97, p. 496] </ref>, and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees [OR87] and Yahalom [BAN90] protocols. <p> We conjecture that our reduction also applies to other well-known protocols, such as the Otway-Rees protocol. Directions for future work include: finish implementing a tool that checks dynamic restrictions and correctness requirements; broaden the scope of our results by considering hash functions, timestamps, recency requirements, and key confirmation requirements <ref> [MvOV97, p. 492] </ref>; improve our results by obtaining smaller bounds; extend our approach to handle other problems mentioned above, such as reliable multicast and electronic payment. 2 Model of Authentication Protocols Our model of authentication is based closely on Woo and Lam's model [WL93].
Reference: [NS87] <author> Roger M. Needham and Michael D. Schroeder. </author> <title> Authentication revisited. Operating Systems Review, </title> <address> 21(1):7, </address> <month> January </month> <year> 1987. </year>
Reference-contexts: For the Yahalom protocol, proving that the transformed version of (2) satisfies the dynamic restrictions is somewhat more difficult; Appendix A contains a proof sketch. I conjecture but have not verified that transformed versions of the Otway-Rees [OR87] and corrected Needham-Schroeder shared-key <ref> [NS87] </ref> protocols also satisfy the dynamic restrictions. Bound on Number of Message-Building Operations by Z. Z builds messages using encryption and tupling. Recall that PVR and SCR together ensure that all ciphertexts sent or received 18 of 25 by honest principals have an encryption height of 1.
Reference: [OPT97] <author> Donal O'Mahony, Michael Peirce, and Hitesh Tewari. </author> <title> Electronic Payment Systems. </title> <publisher> Artech House, </publisher> <address> Boston, </address> <year> 1997. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast [Rei96, MR97], authentication, and electronic payment <ref> [OPT97] </ref>. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [OR87] <author> Dave Otway and Owen Rees. </author> <title> Efficient and timely mutual authentication. </title> <journal> Operating Systems Review, </journal> <volume> 21(1) </volume> <pages> 8-10, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Dolev and Yao developed analysis algorithms that directly verify secrecy requirements [DY83] of cryptographic protocols; however, their algorithms do not consider correspondence properties, do not consider known-key attacks, and apply to a severely restricted class of protocols, which excludes almost all well-known authentication protocols (e.g., the Otway-Rees <ref> [OR87] </ref> and Yahalom protocols [BAN90]) and is strictly included in the class of protocols we consider. Roscoe [Ros98] has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds). <p> are missed when small bounds are used [Low98a, Low98b]. 1 However, that result does not extend to correspondence requirements [Low98a, p. 61], does not consider known-key attacks [MvOV97, p. 496], and is based on restrictions that exclude all protocols that use temporary secrets and well-known protocols such as the Otway-Rees <ref> [OR87] </ref> and Yahalom [BAN90] protocols. In contrast, our reduction considers secrecy and correspondence requirements, accommodates known-key attacks, and applies to the Yahalom protocol, Lowe's corrected version of the Needham-Schroeder public-key protocol [Low96], and some protocols that use temporary secrets. <p> EndInit (ni) 6. Old (ni) P R : 0. Receive (fnipg pubkey () ) 1. NewValue (f; pg; nr) 2. BeginRespond (ni) 3. Send (p; fninrg pubkey (p) ) 4. Receive (fnrg pubkey () ) 5. EndRespond (nr) 6. Old (ni) Example. In LAP, the Otway-Rees protocol <ref> [OR87] </ref> is OR = hfkey (Z; S)g; fhfA; Bg; P I i; hfA; Bg; P R i; hfSg; P S igi; (4) where P I : 0. NewValue (;; m) 1. NewValue (;; n) 2. BeginInit (m) 3. Send (p; mp fnmpg key (;S) ) 4. <p> For the Yahalom protocol, proving that the transformed version of (2) satisfies the dynamic restrictions is somewhat more difficult; Appendix A contains a proof sketch. I conjecture but have not verified that transformed versions of the Otway-Rees <ref> [OR87] </ref> and corrected Needham-Schroeder shared-key [NS87] protocols also satisfy the dynamic restrictions. Bound on Number of Message-Building Operations by Z. Z builds messages using encryption and tupling.
Reference: [Rei96] <author> Michael K. Reiter. </author> <title> A secure group membership protocol. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 22(1) </volume> <pages> 31-42, </pages> <year> 1996. </year>
Reference-contexts: This includes some protocols for Byzantine Agreement [GLR95], secure reliable multicast <ref> [Rei96, MR97] </ref>, authentication, and electronic payment [OPT97]. In this paper, we focus on protocols for authentication, including key establishment. Such protocols play a fundamental role in many distributed systems, and their correctness is essential to the correctness of those systems.
Reference: [Ros95] <author> A. W. Roscoe. </author> <title> Modelling and verifying key exchange protocols using CSP and FDR. </title> <booktitle> In Proc. 8th IEEE Computer Security Foundations Workshop, </booktitle> <pages> pages 98-107. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1995. </year>
Reference-contexts: Systems containing adversaries of the kind described above have an unbounded number of reachable states, so state-space exploration is not directly possible. The case studies in <ref> [MCF87, Ros95, HTWW96, DK97, LR97, MMS97, MCJ97, MSS98, Bol98] </ref> offer strong evidence that state-space exploration of authentication protocols and similar kinds of protocols is feasible when small upper bounds are imposed on the size of messages and the number of protocol runs per execution.
Reference: [Ros98] <author> A. W. Roscoe. </author> <title> Proving security protocols with model checkers by data independence techniques. </title> <booktitle> In Proc. 11th IEEE Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1998. </year>
Reference-contexts: Roscoe <ref> [Ros98] </ref> has done some interesting preliminary work on using data-independence techniques to prove reductions for authentication protocols; this has not yet led to specific reductions (i.e., specific bounds).
Reference: [Sto98] <author> Scott D. Stoller. </author> <title> Reductions for automated analysis of authentication protocols. </title> <type> Technical Report 520, </type> <institution> Computer Science Dept., Indiana University, </institution> <month> December </month> <year> 1998. </year>
Reference: [WL93] <author> Thomas Y. C. Woo and Simon S. Lam. </author> <title> A semantic model for authentication protocols. </title> <booktitle> In Proc. 14th IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 178-194. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year> <note> Available via http://www.cs.utexas.edu/users/lam/NRL/network security.html. </note>
Reference-contexts: timestamps, recency requirements, and key confirmation requirements [MvOV97, p. 492]; improve our results by obtaining smaller bounds; extend our approach to handle other problems mentioned above, such as reliable multicast and electronic payment. 2 Model of Authentication Protocols Our model of authentication is based closely on Woo and Lam's model <ref> [WL93] </ref>. We call the language LAP (Language for Authentication Protocols). 2.1 Syntax of LAP Terms. Let Prim be a set of primitive values; this includes constant symbols representing genvals ("freshly generated values", which can be used as nonces or keys), keys, and names (of principals). <p> 1 ; t 2 ) j t 1 2 C ^ t 2 2 Cg [ fft 1 g K j t 1 2 C ^ K 2 C " (Key sym [ Key asym )g These definitions assume that the symmetric and public-key cryptosystems are perfect (sometimes called "ideal") <ref> [WL93] </ref>. There are several minor differences between Woo and Lam's language and semantics and ours.
Reference: [WL94] <author> Thomas Y.C. Woo and Simon S. Lam. </author> <title> A lesson in authentication protocol design. </title> <journal> ACM Operating Systems Review, </journal> <volume> 28(3) </volume> <pages> 24-37, </pages> <month> July </month> <year> 1994. </year> <note> 22 of 25 </note>
Reference-contexts: They also provide a rigorous basis for automated verification of authentication protocols. Authentication protocols are fl Email: stoller@cs.indiana.edu. Web: http://www.cs.indiana.edu/~stoller/ short and look deceptively simple, but numerous flawed or weak protocols have been published; some examples are described in <ref> [DS81, BAN90, WL94, AN95, AN96, Low96, Aba97, LR97, FHG98] </ref>. This attests to the importance of rigorous verification of such protocols. Theorem proving requires considerable expertise from the user.
References-found: 42

