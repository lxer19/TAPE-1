URL: http://www.psrg.lcs.mit.edu/ftpdir/james/papers/sigops92.ps
Refering-URL: http://www.psrg.lcs.mit.edu/publications.html
Root-URL: 
Title: Names should mean What, not Where  
Author: James W. O'Toole and David K. Gifford 
Keyword: naming, file systems, distributed systems, information systems  
Abstract: Naming is a fundamental issue in distributed systems that is growing in importance as the number of directly accessible systems and resources grows to the point that it is difficult to discover the names of files or objects of interest. Based upon our recent experience building a system that combines the ideas of location and naming we propose a naming architecture called content names that is a departure from a traditional tree structured hierarchy. In a content name system a name can include a description of what a user seeks in addition to where an interesting file or object might be found. Our experience with an implementation of content names in a Semantic File System suggests that they will be widely applicable to future distributed system architectures. In addition to our own experience, we have observed a trend towards content names in new distributed services, such as the Archie system and the Automount daemon. We discuss how a Semantic File System can be used to implement content names and examine its feasibility in the context of a USENET publishing system.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Deutsch A. Emtage. </author> <title> Archie An Electronic Directory Service for the Internet. </title> <booktitle> In Proceedings of Usenix, </booktitle> <month> January </month> <year> 1992. </year> <note> /alex/ca/mcgill/cs/quiche/archie /doc/archie-usenix92-paper.ps. </note>
Reference-contexts: The growing complexity of finding information information in one such large network, the Internet, has motivated a wide-variety of new tools for naming support [2, 7, 9, 4]. For example, the Archie system <ref> [1] </ref> provides an on-line index of the files that are available at over 200 public FTP sites.
Reference: [2] <author> Brent Callaghan and Tom Lyon. </author> <booktitle> The Automounter. In Proceedings of the USENIX Association Winter Conference, </booktitle> <pages> pages 43-51, </pages> <year> 1989. </year>
Reference-contexts: As distributed systems have grown from single local area networks to world-wide inter-networks the logistics of discovering resources of interest have become correspondingly more complex. The growing complexity of finding information information in one such large network, the Internet, has motivated a wide-variety of new tools for naming support <ref> [2, 7, 9, 4] </ref>. For example, the Archie system [1] provides an on-line index of the files that are available at over 200 public FTP sites.
Reference: [3] <author> Vincent Cate. Alex, </author> <title> A Global Filesystem. </title> <booktitle> In Proceedings of the USENIX File Systems Workshop, </booktitle> <pages> pages 1-12, </pages> <month> May </month> <year> 1992. </year> <month> /alex/edu/cmu/cs/sp/alex/doc. </month>
Reference-contexts: For example, the Archie system [1] provides an on-line index of the files that are available at over 200 public FTP sites. The Alex system <ref> [3] </ref> provides a uniform naming system along with caching services that span all of the hosts in the Internet, and interoperates with an underlying file system that provides primitive FTP support. Authors' affiliations: otoole@lcs.mit.edu and gifford@lcs.mit.edu, Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, Massachusetts 02139.
Reference: [4] <author> Ferdinando Gallo, Regis Minot, and Ian Thomas. </author> <title> The Object Management System of PCTE as a Software Engineering Database Management System. </title> <booktitle> In Proceedings of the Second ACM Software Engineering Symposium, </booktitle> <pages> pages 12-15, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: As distributed systems have grown from single local area networks to world-wide inter-networks the logistics of discovering resources of interest have become correspondingly more complex. The growing complexity of finding information information in one such large network, the Internet, has motivated a wide-variety of new tools for naming support <ref> [2, 7, 9, 4] </ref>. For example, the Archie system [1] provides an on-line index of the files that are available at over 200 public FTP sites.
Reference: [5] <author> D. K. Gifford, P. Jouvelot, M. Sheldon, and J. W. O'Toole. </author> <title> Semantic File Systems. </title> <booktitle> In Proceedings of the Symposium on Operating Systems Principles, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: Associative access is provided via traditional file system interfaces and other access methods. The system block diagram in figure 1 shows the basic building blocks of a prototype semantic file system <ref> [5] </ref>. This semantic file system implementation uses the Network File System protocol [6], but interprets the file pathnames as Content Names. The dynamic interpretation of content names by the file storage system allows users to communicate with each other more easily.
Reference: [6] <author> Sun Microsystems. NFS: </author> <title> Network File System Protocol Specification. </title> <type> Technical Report Request for Comments (RFC 1094) Version 2, </type> <institution> Network Working Group, Sunnyvale California, </institution> <month> March </month> <year> 1989. </year>
Reference-contexts: Associative access is provided via traditional file system interfaces and other access methods. The system block diagram in figure 1 shows the basic building blocks of a prototype semantic file system [5]. This semantic file system implementation uses the Network File System protocol <ref> [6] </ref>, but interprets the file pathnames as Content Names. The dynamic interpretation of content names by the file storage system allows users to communicate with each other more easily.
Reference: [7] <author> B. Clifford Neuman. </author> <title> The Virtual System Model: A Scalable Approach to Organizing Large Systems. </title> <type> Technical Report TR-90-05-01, </type> <institution> University of Washington, </institution> <month> May </month> <year> 1990. </year>
Reference-contexts: As distributed systems have grown from single local area networks to world-wide inter-networks the logistics of discovering resources of interest have become correspondingly more complex. The growing complexity of finding information information in one such large network, the Internet, has motivated a wide-variety of new tools for naming support <ref> [2, 7, 9, 4] </ref>. For example, the Archie system [1] provides an on-line index of the files that are available at over 200 public FTP sites.
Reference: [8] <author> USENET news.lists contributors. </author> <title> Traffic reports for USENET. </title> <month> March </month> <year> 1992. </year> <month> /alex/net/uu/ftp/usenet/news.lists/USENET*. </month>
Reference-contexts: During a two week period, 20,000 users submit about 200,000 new files from more than 50,000 sites. Measurements indicate that the participating sites have approximately 10 million users, of whom about 2 million actively read articles from the system <ref> [8] </ref>. The current USENET architecture uses a flooding-broadcast distribution method to replicate published data at participating sites. Because of the high volume of new data submission, most sites rapidly delete data.
Reference: [9] <author> R. Pike, D. Presotto, K. Thompson, and H. Trickey. </author> <title> Plan 9 from Bell Labs. </title> <booktitle> In Proceeding of UK UUG, </booktitle> <year> 1990. </year>
Reference-contexts: As distributed systems have grown from single local area networks to world-wide inter-networks the logistics of discovering resources of interest have become correspondingly more complex. The growing complexity of finding information information in one such large network, the Internet, has motivated a wide-variety of new tools for naming support <ref> [2, 7, 9, 4] </ref>. For example, the Archie system [1] provides an on-line index of the files that are available at over 200 public FTP sites.
References-found: 9

