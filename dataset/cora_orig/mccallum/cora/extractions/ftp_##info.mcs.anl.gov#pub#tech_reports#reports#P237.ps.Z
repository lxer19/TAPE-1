URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P237.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts91.htm
Root-URL: http://www.mcs.anl.gov
Title: Experiments in Automated Deduction with Condensed Detachment  
Author: William McCune and Larry Wos 
Address: Argonne, Illinois 60439-4801 U.S.A.  
Affiliation: Mathematics and Computer Science Division Argonne National Laboratory  
Abstract: This paper contains the results of experiments with several search strategies on 112 problems involving condensed detachment. The problems are taken from nine different logic calculi: three versions of the two-valued sentential calculus, the many-valued sentential calculus, the implicational calculus, the equivalential calculus, the R calculus, the left group calculus, and the right group calculus. Each problem was given to the theorem prover Otter and was run with at least three strategies: (1) a basic strategy, (2) a strategy with a more refined method for selecting clauses on which to focus, and (3) a strategy that uses the refined selection mechanism and deletes deduced formulas according to some simple rules. Two new features of Otter are also presented: the refined method for selecting the next formula on which to focus, and a method for controlling memory usage. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Church. </author> <title> Introduction to Mathematical Logic, volume I. </title> <publisher> Princeton University Press, </publisher> <year> 1956. </year>
Reference-contexts: Lukasiewicz showed that CN-30 is not necessary (Problem 2, Table 1). Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g [16]. Other axiom systems for CN are fCN-18,CN-35,CN-49g (Church <ref> [1] </ref>), fCN-19,CN-37,CN-59g ( Lukasiewicz [16]), fCN-19,CN-37,CN-60g (Wos [19]), and fCN-CAMg (C. A. Meredith [10]). Problems 7-24, Table 2, are to start with fCN-1,CN-2,CN-3g and derive formulas in the other axiomatizations. <p> (C0-3) i (i (i (x; y); x); x) (C0-5) i (i (i (x; F ); F ); x) (C0-CAM) i (i (i (i (i (x; y); i (z; F )); u); v); i (i (v; x); i (z; x))) Each of the sets fC0-1,C0-2,C0-3,C0-4g (Tarski-Bernays, according to [10]), fC0-2,C0-5,C0-6g (Church <ref> [1] </ref>), and fC0-CAMg (C. A.
Reference: [2] <author> J. A. </author> <title> Kalman. Axiomatizations of logics with values in groups. </title> <journal> Journal of the London Math. Society, </journal> <volume> 2(14) </volume> <pages> 193-199, </pages> <year> 1975. </year>
Reference-contexts: No other of length 11 exists. (YOL) e (e (x; y); e (e (e (z; y); x); z)) The theorems of the left group (LG) calculus <ref> [2] </ref> are exactly the formulas equal to the identity in (general) groups when e (ff; fi) is interpreted as ff 1 fi. Similarly, the theorems of the right group (RG) calculus [2] are exactly the formulas equal to the identity in (general) groups when e (ff; fi) is interpreted as fffi <p> e (e (x; y); e (e (e (z; y); x); z)) The theorems of the left group (LG) calculus <ref> [2] </ref> are exactly the formulas equal to the identity in (general) groups when e (ff; fi) is interpreted as ff 1 fi. Similarly, the theorems of the right group (RG) calculus [2] are exactly the formulas equal to the identity in (general) groups when e (ff; fi) is interpreted as fffi 1 . The following relationships exist between the equivalential and group calculi: LG theorems ae L theorems ae EC theorems. <p> Table 9: R Calculus # Theorem Basic Ratio R-e 85 YQM ) QYF &lt;1 &lt;1 &lt;1 87 XGJ ) WO Fail Fail 362 88 QYF ) XGJ 41 42 21 5.3 The Left Group Calculus (LG) Kalman's axiomatization of the LG calculus is fLG-1,LG-2,LG-3,LG-4,LG-5g <ref> [2] </ref>. (LG-1) e (e (e (x; e (e (y; y); x)); z); z) (LG-3) e (e (e (e (e (e (x; y); e (x; z)); u); e (e (y; z); u)); v); v) (LG-5) e (e (e (x; e (e (y; x); z)); e (e (u; x); v)); e (e (e <p> Problems 89-101, Table 10, roughly parallel the discovery of the new axiom systems for the LG calculus. 5.4 The RG Calculus (RG) Kalman's axiomatization of the RG calculus is fLG-1 0 ,LG-2 0 ,LG-3 0 ,LG-4 0 ,LG-5 0 g <ref> [2] </ref>. (LG-1 0 ) e (x; e (x; e (e (y; e (z; z)); y))) (LG-3 0 ) e (x; e (x; e (e (y; e (z; u)); e (y; e (e (z; v); e (u; v)))))) (LG-5 0 ) e (e (x; e (y; e (z; e (u; v)))); e
Reference: [3] <author> J. A. </author> <title> Kalman. Computer studies of T ! - W I. </title> <journal> Relevance Logic Newsletter, </journal> <volume> 1 </volume> <pages> 181-188, </pages> <year> 1976. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality. <p> We call this refined method "selecting the given clause with ratio 3". The refinement allows large clauses to enter the search while the focus remains mainly on small clauses. It is similar to a selection strategy used by J. Kalman in one of his early programs <ref> [3] </ref>. 1.2.2 Deleting Derived Formulas In the equivalential calculus, the R calculus, and the left and right group calculi (all of which have binary operator e), we found that formulas containing subformulas that are instances of e (x; x) are generally not as useful or as powerful as formulas without such
Reference: [4] <author> J. A. </author> <title> Kalman. A shortest single axiom for the classical equivalential calculus. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 19 </volume> <pages> 141-144, </pages> <year> 1978. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality.
Reference: [5] <author> J. A. </author> <title> Kalman. Condensed detachment as a rule of inference. </title> <journal> Studia Logica, </journal> <volume> LXII(4):443-451, </volume> <year> 1983. </year>
Reference-contexts: The formula C (ff; fi) is the major premise, and fl is the minor premise. The binary operation is usually interpreted as "implies", "equivalent", or some variation of the group operation, depending on the calculus. The logic calculi can be studied as first-order theories by a trivial transformation <ref> [5] </ref>. First, a unary predicate P , interpreted as "is a theorem" or "is the group identity", is introduced. Then, each axiom of the calculus is preceded by P , with its variables universally quantified.
Reference: [6] <author> E. J. Lemmon, C. A. Meredith, D. Meredith, A. N. Prior, and I. Thomas. </author> <title> Calculi of pure strict implication. </title> <type> Technical report, </type> <institution> Canterbury University College, Christchurch, </institution> <year> 1957. </year> <note> Reprinted in Philosophical Logic, Reidel, </note> <year> 1970. </year>
Reference-contexts: The deletion strategy (Section 1.2.2) causes derived formulas that are instances of simple patterns to be deleted. 1.1 Condensed Detachment All of the problems use C. A. Meredith's condensed detachment <ref> [6, 12] </ref>, a rule of inference that combines detachment (modus ponens) and instantiation. Let C be the binary operation of concern.
Reference: [7] <author> W. McCune. </author> <title> Otter 2.0 Users Guide. </title> <type> Tech. Report ANL-90/9, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <month> March </month> <year> 1990. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs [3, 14, 13, 4, 22, 18, 21, 8, 9]. 1.2 Otter and Simple Strategies Otter <ref> [7] </ref> is a resolution/paramodulation theorem-proving program for first-order logic with equality.
Reference: [8] <author> W. McCune. </author> <title> Single axioms for the left group and right group calculi. </title> <type> Preprint MCS-P219-0391, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, IL, </institution> <year> 1991. </year> <note> To appear in Notre Dame J. Formal Logic. </note>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality. <p> (e (x; y); e (e (z; x); e (z; y))) (Q-4) e (e (e (x; y); e (x; z)); e (y; z)) With great assistance from Otter, McCune later showed that each of the sets fLG-2,LG-3g, fLG-2,P-1g, fLG-2,P-4g, fLG-2,Q-1,Q-2g, fP-1,Q-3g, fP-4,Q-3g, fQ-1,Q-2,Q-3g, fQ-1,Q-3,Q-4g, and fLG-27-1690g also axiomatizes the LG calculus <ref> [8, 9] </ref>. <p> (e (x; z); e (y; z))) With great assistance from Otter, McCune later showed that each of the pairs fQ-2 0 ,Q-3 0 g and fQ-3 0 ,Q-4 0 g axiomatizes the RG calculus and that each of the fol lowing formulas is a single axiom for the RG calculus <ref> [8, 9] </ref>: (LG-2 0 ) e (x; e (x; e (e (y; z); e (e (y; u); e (z; u))))) (S-3 0 ) e (x; e (x; e (e (e (y; z); e (u; z)); e (y; u)))) (P-4 0 ) e (e (x; e (e (y; z); e (e (y;
Reference: [9] <author> W. McCune. </author> <title> Automated discovery of new axiomatizations of the left group and right group calculi. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 9(1) </volume> <pages> 1-24, </pages> <year> 1992. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality. <p> (e (x; y); e (e (z; x); e (z; y))) (Q-4) e (e (e (x; y); e (x; z)); e (y; z)) With great assistance from Otter, McCune later showed that each of the sets fLG-2,LG-3g, fLG-2,P-1g, fLG-2,P-4g, fLG-2,Q-1,Q-2g, fP-1,Q-3g, fP-4,Q-3g, fQ-1,Q-2,Q-3g, fQ-1,Q-3,Q-4g, and fLG-27-1690g also axiomatizes the LG calculus <ref> [8, 9] </ref>. <p> (e (x; z); e (y; z))) With great assistance from Otter, McCune later showed that each of the pairs fQ-2 0 ,Q-3 0 g and fQ-3 0 ,Q-4 0 g axiomatizes the RG calculus and that each of the fol lowing formulas is a single axiom for the RG calculus <ref> [8, 9] </ref>: (LG-2 0 ) e (x; e (x; e (e (y; z); e (e (y; u); e (z; u))))) (S-3 0 ) e (x; e (x; e (e (e (y; z); e (u; z)); e (y; u)))) (P-4 0 ) e (e (x; e (e (y; z); e (e (y;
Reference: [10] <author> C. A. Meredith. </author> <title> Single axioms for the systems (C,N), (C,0), and (A,N) of the two-valued propositional calculus. </title> <journal> Journal of Computing Systems, </journal> <volume> 1 </volume> <pages> 155-164, </pages> <year> 1953. </year>
Reference-contexts: Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g [16]. Other axiom systems for CN are fCN-18,CN-35,CN-49g (Church [1]), fCN-19,CN-37,CN-59g ( Lukasiewicz [16]), fCN-19,CN-37,CN-60g (Wos [19]), and fCN-CAMg (C. A. Meredith <ref> [10] </ref>). Problems 7-24, Table 2, are to start with fCN-1,CN-2,CN-3g and derive formulas in the other axiomatizations. <p> i (x; z))) (C0-3) i (i (i (x; y); x); x) (C0-5) i (i (i (x; F ); F ); x) (C0-CAM) i (i (i (i (i (x; y); i (z; F )); u); v); i (i (v; x); i (z; x))) Each of the sets fC0-1,C0-2,C0-3,C0-4g (Tarski-Bernays, according to <ref> [10] </ref>), fC0-2,C0-5,C0-6g (Church [1]), and fC0-CAMg (C. A. Meredith [10]) axiomatizes the Table 2: CN Calculus, Starting with fCN-1,CN-2,CN-3g # Theorem Basic Ratio R-i-nn R-i-nnn R-nn R-nnn 7 CN-1,CN-2,CN-3 ) CN-16 &lt;1 &lt;1 &lt;1 &lt;1 &lt;1 &lt;1 9 CN-1,CN-2,CN-3 ) CN-19 60 7 5 5 10 9 11 CN-1,CN-2,CN-3 ) CN-21 <p> x); x) (C0-5) i (i (i (x; F ); F ); x) (C0-CAM) i (i (i (i (i (x; y); i (z; F )); u); v); i (i (v; x); i (z; x))) Each of the sets fC0-1,C0-2,C0-3,C0-4g (Tarski-Bernays, according to <ref> [10] </ref>), fC0-2,C0-5,C0-6g (Church [1]), and fC0-CAMg (C. A. Meredith [10]) axiomatizes the Table 2: CN Calculus, Starting with fCN-1,CN-2,CN-3g # Theorem Basic Ratio R-i-nn R-i-nnn R-nn R-nnn 7 CN-1,CN-2,CN-3 ) CN-16 &lt;1 &lt;1 &lt;1 &lt;1 &lt;1 &lt;1 9 CN-1,CN-2,CN-3 ) CN-19 60 7 5 5 10 9 11 CN-1,CN-2,CN-3 ) CN-21 104 148 23 28 66 158 13 CN-1,CN-2,CN-3 ) <p> (y); z)); o (n (o (x; y)); o (x; z))) (AN-3) o (n (x); o (y; x)) (AN-CAM) o (n (o (n (o (n (x); y)); o (z; o (u; v)))); o (n (o (n (u); x)); o (z; o (v; x)))) Each of the sets fAN-1,AN-2,AN-3,AN-4g (Whitehead-Russell, according to <ref> [10] </ref>) and fAN-CAMg (C. A. Meredith [10]) axiomatizes the AN calculus. Problems 50-54, Table 5, are to derive each system from the other. Recall that the clause form of condensed detachment for the AN calculus is :P (o (n (x); y)) j :P (x) j P (y). <p> y)); o (x; z))) (AN-3) o (n (x); o (y; x)) (AN-CAM) o (n (o (n (o (n (x); y)); o (z; o (u; v)))); o (n (o (n (u); x)); o (z; o (v; x)))) Each of the sets fAN-1,AN-2,AN-3,AN-4g (Whitehead-Russell, according to <ref> [10] </ref>) and fAN-CAMg (C. A. Meredith [10]) axiomatizes the AN calculus. Problems 50-54, Table 5, are to derive each system from the other. Recall that the clause form of condensed detachment for the AN calculus is :P (o (n (x); y)) j :P (x) j P (y).
Reference: [11] <author> C. A. Meredith and A. N. </author> <title> Prior. Equational logic. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 9 </volume> <pages> 212-226, </pages> <year> 1968. </year>
Reference-contexts: Under the group interpretation, the theorems of EC are exactly the formulas that are equal to the group identity in Boolean groups. The theorems of the R calculus <ref> [11] </ref> are exactly the formulas equal to the identity in Abelian groups when e (ff; fi) is interpreted as fffi 1 . There is also an L calculus, whose theorems are equal to the identity when e (ff; fi) is interpreted as ff 1 fi.
Reference: [12] <author> D. Meredith. </author> <title> In memoriam Carew Arthur Meredith (1904-1976). </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 18 </volume> <pages> 513-516, </pages> <year> 1977. </year>
Reference-contexts: The deletion strategy (Section 1.2.2) causes derived formulas that are instances of simple patterns to be deleted. 1.1 Condensed Detachment All of the problems use C. A. Meredith's condensed detachment <ref> [6, 12] </ref>, a rule of inference that combines detachment (modus ponens) and instantiation. Let C be the binary operation of concern.
Reference: [13] <author> J. G. Peterson. </author> <title> Shortest single axioms for the classical equivalential calculus. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> 17(2) </volume> <pages> 267-271, </pages> <year> 1976. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality.
Reference: [14] <author> J. G. Peterson. </author> <title> The possible shortest single axioms for EC-tautologies. </title> <type> Report 105, </type> <institution> Dept. of Mathematics, University of Auckland, </institution> <year> 1977. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality. <p> There is also an L calculus, whose theorems are equal to the identity when e (ff; fi) is interpreted as ff 1 fi. We have not experimented with the L calculus, but for completeness, we list here YOL, the shortest single axiom for the L calculus <ref> [14] </ref>. No other of length 11 exists. (YOL) e (e (x; y); e (e (e (z; y); x); z)) The theorems of the left group (LG) calculus [2] are exactly the formulas equal to the identity in (general) groups when e (ff; fi) is interpreted as ff 1 fi.
Reference: [15] <author> F. Pfenning. </author> <title> Single axioms in the implicational propositional calculus. </title> <editor> In E. Lusk and R. Overbeek, editors, </editor> <booktitle> Proceedings of the 9th International Conference on Automated Deduction, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 310, </volume> <pages> pages 710-713, </pages> <address> New York, 1988. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The results of the experiments reinforce our long-held position that a single strategy cannot be effective on a wide range of problems. Several of the problems have been particularly challenging for us. Problem 67, posed as a challenge problem in <ref> [15] </ref> and called "imp4" by members of the Argonne group, was the first truly difficult condensed detachment theorem proved by Otter. It has been used extensively as a benchmark for parallel deduction programs.
Reference: [16] <author> J. </author> <title> Lukasiewicz. Elements of Mathematical Logic. </title> <publisher> Pergamon Press, </publisher> <year> 1963. </year> <note> English translation of the second edition (1958) of Elementy logiki matematycznej, PWN, Warsaw. </note>
Reference-contexts: If appropriate definitions are added for the missing operators, each version is equivalent to the classical propositional calculus. 2.1 The Implication/Negation Two-Valued Sentential Calcu lus (CN) Each of the following formulas holds in the two-valued sentential calculus (CN). The numbering of the formulas is from <ref> [16, p. 42-51] </ref>. (CN-1) i (i (x; y); i (i (y; z); i (x; z))) (CN-3) i (x; i (n (x); y)) (CN-18) i (x; i (y; x)) (CN-20) i (x; i (i (x; y); y)) (CN-22) i (i (x; y); i (i (z; x); i (z; y))) (CN-30) i (i <p> Lukasiewicz showed that CN-30 is not necessary (Problem 2, Table 1). Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g <ref> [16] </ref>. Other axiom systems for CN are fCN-18,CN-35,CN-49g (Church [1]), fCN-19,CN-37,CN-59g ( Lukasiewicz [16]), fCN-19,CN-37,CN-60g (Wos [19]), and fCN-CAMg (C. A. Meredith [10]). Problems 7-24, Table 2, are to start with fCN-1,CN-2,CN-3g and derive formulas in the other axiomatizations. <p> Lukasiewicz showed that CN-30 is not necessary (Problem 2, Table 1). Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g <ref> [16] </ref>. Other axiom systems for CN are fCN-18,CN-35,CN-49g (Church [1]), fCN-19,CN-37,CN-59g ( Lukasiewicz [16]), fCN-19,CN-37,CN-60g (Wos [19]), and fCN-CAMg (C. A. Meredith [10]). Problems 7-24, Table 2, are to start with fCN-1,CN-2,CN-3g and derive formulas in the other axiomatizations.
Reference: [17] <author> J. </author> <title> Lukasiewicz. Selected Works. </title> <publisher> North-Holland, </publisher> <year> 1970. </year> <title> Edited by L. </title> <type> Borkowski. </type>
Reference-contexts: (CN-49) i (i (n (x); n (y)); i (y; x)) (CN-59) i (i (n (x); z); i (i (y; z); i (i (x; y); z))) (CN-CAM) i (i (i (i (i (x; y); i (n (z); n (u))); z); v); i (i (v; x); i (u; x))) According to Lukasiewicz <ref> [17, p. 136] </ref>, the first axiom system for the two-valued sentential calculus was fCN-18,CN-21,CN-35,CN-39,CN-40,CN-46g and was due to Frege. We use that as our starting point. Lukasiewicz showed that CN-21 depends on the remaining axioms of Frege's system (Problem 1, Table 1). <p> 176 26 254 2 CN-3,CN-18,CN-21,CN-22,CN-54 ) CN-30 3 5 2 2 6 6 3 CN-3,CN-18,CN-21,CN-22,CN-54 ) CN-35 Fail Fail 8005 6371 3657 3864 4 CN-3,CN-18,CN-21,CN-22,CN-54 ) CN-39 &lt;1 9 * 8 * 11 6 CN-3,CN-18,CN-21,CN-22,CN-54 ) CN-46 7366 1534 1467 1509 2857 2401 axiomatization of CN was due to Hilbert <ref> [17, p. 136] </ref>: fCN-3,CN-18,CN-21,CN-22,CN-30,CN-54g. Lukasiewicz showed that CN-30 is not necessary (Problem 2, Table 1). Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g [16]. <p> i (y; x)) (MV-25) i (i (x; y); i (i (z; x); i (z; y))) (MV-33) i (i (n (x); y); i (n (y); x)) (MV-39) i (n (i (x; y)); n (y)) Lukasiewicz defined the many-valued sentential calculus L @ 0 and conjectured that it is axiomatized by fMV-1,MV-2,MV-3,MV-4,MV-5g <ref> [17] </ref>. Wajsberg proved the conjecture, and C. A. Meredith later proved MV-4 dependent on the remaining axioms [17, p. 144]. <p> Wajsberg proved the conjecture, and C. A. Meredith later proved MV-4 dependent on the remaining axioms <ref> [17, p. 144] </ref>. <p> Each of the following formulas holds in IC: (IC-2) i (x; i (y; x)) (IC-4) i (i (x; y); i (i (y; z); i (x; z))) (IC-JL) i (i (i (x; y); z); i (i (z; x); i (u; x))) Each of the sets fIC-2,IC-3,IC-4g (Tarski-Bernays, according to <ref> [17, p. 296] </ref>) and fIC-JLg ( Lukasiewicz [17, p. 295]) axiomatizes IC. Problems 63-68, Table 7, are to derive each system from the other. <p> holds in IC: (IC-2) i (x; i (y; x)) (IC-4) i (i (x; y); i (i (y; z); i (x; z))) (IC-JL) i (i (i (x; y); z); i (i (z; x); i (u; x))) Each of the sets fIC-2,IC-3,IC-4g (Tarski-Bernays, according to [17, p. 296]) and fIC-JLg ( Lukasiewicz <ref> [17, p. 295] </ref>) axiomatizes IC. Problems 63-68, Table 7, are to derive each system from the other. <p> In the equivalential calculus (EC) <ref> [17] </ref>, e (ff; fi) is normally interpreted as equivalence of ff and fi; however, it can also be interpreted as the group operation fffi in Boolean groups (groups in which the square of every element is the identity). <p> RG theorems ae R theorems ae EC theorems. 5.1 The Equivalential Calculus (EC) The following formulas hold in the equivalential calculus: (EC-1) e (e (e (x; y); e (z; x)); e (y; z)) (EC-4) e (e (x; y); e (y; x)) According to Lukasiewicz <ref> [17, p. 252] </ref>, the first axiomatization of EC was fEC-1,EC-2g, due to Lesniewski. Soon after, Wajsberg produced others, including fEC-4,EC-5g. Problems 69 and 70, Table 8, are to derive the Lesniewski system from the Wajsberg system.
Reference: [18] <author> L. Wos. </author> <title> Meeting the challenge of fifty years of logic. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 6(2) </volume> <pages> 213-232, </pages> <year> 1990. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality.
Reference: [19] <author> L. Wos. </author> <title> Automated reasoning and Bledsoe's dream for the field. </title> <editor> In R. S. Boyer, editor, </editor> <booktitle> Automated Reasoning: Essays in Honor of Woody Bledsoe, chapter 15, </booktitle> <pages> pages 297-342. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Lukasiewicz showed that CN-30 is not necessary (Problem 2, Table 1). Problems 3-6, Table 1, are to derive Frege's simplified system from Hilbert's simplified system. Lukasiewicz axiomatized CN with fCN-1,CN-2,CN-3g [16]. Other axiom systems for CN are fCN-18,CN-35,CN-49g (Church [1]), fCN-19,CN-37,CN-59g ( Lukasiewicz [16]), fCN-19,CN-37,CN-60g (Wos <ref> [19] </ref>), and fCN-CAMg (C. A. Meredith [10]). Problems 7-24, Table 2, are to start with fCN-1,CN-2,CN-3g and derive formulas in the other axiomatizations.
Reference: [20] <author> L. Wos and W. McCune. </author> <title> The application of automated reasoning to proof translation and to finding proofs with specified properties: A case study in many-valued sentential calculus. </title> <type> Tech. Report ANL-91/19, </type> <institution> Argonne National Laboratory, Argonne, IL, </institution> <year> 1991. </year>
Reference-contexts: days on a Solbourne 5e/900 computer.) Problem 55, to show the dependence of MV-4 in Lukasiewicz's system for L @ 0 , has also resisted all of our attempts. (One attempt generated 983 million formulas.) We have, however, found many proofs for Problem 55 using Otter in various proof-checking modes <ref> [20] </ref>. Otter's search for a proof for Problem 44, to derive C01 from C0-CAM, is impeded by the memory control feature. The weight limit is lowered, either too much or too soon, which causes key formulas to be discarded.
Reference: [21] <author> L. Wos, S. Winker, W. McCune, R. Overbeek, E. Lusk, R. Stevens, and R. Butler. </author> <title> Automated reasoning contributes to mathematics and logic. </title> <editor> In M. Stickel, editor, </editor> <booktitle> Proceedings of the 10th International Conference on Automated Deduction, Lecture Notes in Artificial Intelligence, </booktitle> <volume> Vol. 449, </volume> <pages> pages 485-499, </pages> <address> New York, July 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality.
Reference: [22] <author> L. Wos, S. Winker, B. Smith, R. Veroff, and L. Henschen. </author> <title> A new use of an automated reasoning assistant: Open questions in equivalential calculus and the study of infinite domains. </title> <journal> Artificial Intelligence, </journal> <volume> 22 </volume> <pages> 303-356, </pages> <year> 1984. </year>
Reference-contexts: Original research has been conducted and open questions have been answered by relying heavily on automated theorem proving programs <ref> [3, 14, 13, 4, 22, 18, 21, 8, 9] </ref>. 1.2 Otter and Simple Strategies Otter [7] is a resolution/paramodulation theorem-proving program for first-order logic with equality.
References-found: 22

