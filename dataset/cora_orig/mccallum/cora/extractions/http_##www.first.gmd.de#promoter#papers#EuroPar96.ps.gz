URL: http://www.first.gmd.de/promoter/papers/EuroPar96.ps.gz
Refering-URL: http://www.first.gmd.de/promoter/papers/index.html
Root-URL: 
Abstract: Data mapping plays a crucial role in lar ge-scale scientific computing on distributed-memory parallel machines. W e present a new , fast mapping heuristic which is basically a generalization of vector quantization and is applicable to multipartitioning arbitrarily high-dimensional and irregular domains. Its ef ficiency derives mainly from the exploitation of topographic properties of the problem domain. W e compare the quality and performance of our approach with the classical Kerninghan&Lin heuristic and spectral bisection based on the Lanczos algorithm.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Besch, M., Pohl, H. </author> <title> W .: Topographic Mapping of Irregular Sparse Data Structures, </title> <type> RWC TR, </type> <address> http://www .first.gmd.de/promoter/papers/topMappingTR.ps.gz, Japan (1996) </address>
Reference-contexts: A given problem domain, i.e. set of points, is required to be embedded into some index space of appropriate dimension, thus obtaining regular or irregular sparse multidimensional arrays <ref> [1] </ref>. A general method to transform an arbitrary graph into a representation in the n-Euclidean index space is presented in [2]. Alternatively , geometrical information can be explicitly given by means of user defined and problem-adequate topology declarations, thus avoiding the expensive transformation process [6]. <p> Alternatively, we could have chosen hyperplanes, but the former possesses some advantages as described in <ref> [1] </ref>.
Reference: 2. <author> Fukunaga, K., Yamada, S., Stone, H.S., Kasai, T.: </author> <title> A Representation of Hypergraphs in the Euclidean Space, </title> <journal> IEEE Transactions on Computers, </journal> <volume> 33, </volume> <month> 4 </month> <year> (1984) </year>
Reference-contexts: A given problem domain, i.e. set of points, is required to be embedded into some index space of appropriate dimension, thus obtaining regular or irregular sparse multidimensional arrays [1]. A general method to transform an arbitrary graph into a representation in the n-Euclidean index space is presented in <ref> [2] </ref>. Alternatively , geometrical information can be explicitly given by means of user defined and problem-adequate topology declarations, thus avoiding the expensive transformation process [6]. An objective function usually consists of a term describing interprocessor - communication overhead, and one containing a load-balance criterion.
Reference: 3. <author> Hertz, J., Krogh, A., Palmer , A.: </author> <title> Introduction to the theory of neural computation, </title> <publisher> Addison Wesley (1991) </publisher>
Reference-contexts: So we can now regard the mapping objective as minimizing the absolute values of the partition-load imbalances: In the next section we present a new , fast mapping heuristic (BHT), which is basically a generalization of vector quantization <ref> [3] </ref> and is applicable to multi-partitioning arbitrarily high-dimensional and irregular domains.
Reference: 4. <author> Kerninghan, B. W ., Lin, S.: </author> <title> An ef ficient heuristic procedure for partitioning graphs, </title> <journal> The Bell System Technical Journal, </journal> <month> Feb. </month> <year> (1970) </year> <month> 291-307 </month>
Reference-contexts: Finally , we compare BHT with the classical Kerninghan&Lin heuristic (KL) <ref> [4] </ref> and spectral bisection (SB) based on the Lanczos algorithm, e.g. [5]. 2 Balanced Hypersphere Tessellation The idea of the algorithm is to separate clusters of data points from each other by means of hyperspheres, such that the load is well-balanced.
Reference: 5. <author> Pothen, A., Simon, H. D., Liou, </author> <title> K.-P .: Partitioning sparse matrices with eigenvectors of graphs, </title> <note> SIAM J. Matrix Anal., 11 (1990) 430-452 </note>
Reference-contexts: Finally , we compare BHT with the classical Kerninghan&Lin heuristic (KL) [4] and spectral bisection (SB) based on the Lanczos algorithm, e.g. <ref> [5] </ref>. 2 Balanced Hypersphere Tessellation The idea of the algorithm is to separate clusters of data points from each other by means of hyperspheres, such that the load is well-balanced. Alternatively, we could have chosen hyperplanes, but the former possesses some advantages as described in [1].
Reference: 6. <author> Promoter: </author> <title> Collection of Papers, </title> <journal> http://www.first.gmd.de/promoter/papers/index.html N P a b 1, </journal> <volume> points partitions 2 3 4 5 6 7 8 1239 100 50 900 866 833 916 2150 2994 533 883 983 1916 2383 3066 3466 4745 1066 1700 1583 3616 3933 5933 7050 points KL SB BHT 826 67 48 65 2594 125 78 125 4278 265 104 157 6087 295 119 166 </volume>
Reference-contexts: A general method to transform an arbitrary graph into a representation in the n-Euclidean index space is presented in [2]. Alternatively , geometrical information can be explicitly given by means of user defined and problem-adequate topology declarations, thus avoiding the expensive transformation process <ref> [6] </ref>. An objective function usually consists of a term describing interprocessor - communication overhead, and one containing a load-balance criterion.
References-found: 6

