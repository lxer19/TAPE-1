URL: http://www.csl.sri.com/~gong/papers/logics-vl.ps.gz
Refering-URL: http://www.csl.sri.com/~gong/papers/pubs92.html
Root-URL: 
Title: Logics for Cryptographic Protocols Virtues and Limitations  
Author: V.D. Gligor, R. Kailar, S. Stubblebine, and L. Gong 
Address: College Park, MD 20742  
Affiliation: Department of Electrical Engineering University of Maryland,  
Abstract: In this note we offer a perspective on the virtues and limitations of several logics for cryptographic protocols focusing primarily on the logics of authentication. We emphasize the scope limitations of these logics rather than their virtues because (1) we consider their virtues to be better understood and accepted than their limitations, and (2) we hope to stimulate further research that will expand their scope. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.Abadi and M.Tuttle, </author> <title> "A Semantics for a logic for Authentication (Extended Abstract)" to appear in Proc. </title> <booktitle> of the ACM Symposium of Principles of Distributed Computing, </booktitle> <month> January </month> <year> 1991. </year>
Reference-contexts: In this note, we offer a perspective on the virtues and limitations of the logics presented in references [2,4,9,10], and more recently in <ref> [1] </ref>, based on preliminary attempts to use them in the analysis of practical cryptographic protocols. (Our focus on these logics is motivated exclusively by the fact that they are the best-known logics for cryptographic-protocol analysis to date.) We revisit some of the assumptions presented fl Li Gong is with ORA Corporation, <p> The importance of formalized reasoning in the design of distributed system security cannot be overestimated given the susceptibility of these systems to attacks not present in centralized systems. Intruder attacks in distributed systems surpass the effectiveness of 1 An exception is the reformulated logic of authentication presented in <ref> [1] </ref>. those in centralized systems because, among other reasons, administrative security measures can seldomly be used to compensate for security weaknesses. For example, system isolation through administratively imposed "air gaps" is clearly not useful in distributed systems. <p> If this approach proves to be general, the practical usefulness of these logics could be significantly enhanced. (An interesting exercise would be to attempt an interpretation of the more complex rules of logic presented in [10] and of the streamlined version of the logic of authentication presented in <ref> [1] </ref> within the computation models of existing tools.) 2.2 Explicit Security Assumptions The use of logics for cryptographic protocols force designers to state explicitly the security assumptions made in protocol specifications. <p> Without asserting the jurisdiction of this third party over key generation, the quality of an encryption key cannot be easily ascertained. Although the reformulated logic of authentication presented in <ref> [1] </ref> removes key secrecy as a requirement of key sharing for authentication, the key-secrecy assumption is important in cryptographic protocols wherever communication privacy is essential. Thus, the assumption of key secrecy must be made explicitly whenever necessary. <p> Instead, the logic must ensure that, whenever the stated assumptions or policies are required but not satisfied by a protocol, the use of the logic's inference rules would fail to achieve desired, but unsupported, conclusions. 2.3 Stability of Belief Formulas With the notable exception of the logic presented in reference <ref> [1] </ref>, all other logics referred to in this paper lead to stable beliefs. This means belief formulas remain true for the duration of the protocol run after they become true. This is both a virtue and a potential limitation. <p> It is a potential limitation because belief negation may occasionally be useful. For example, abandoning stability enables one to write axioms using implication, which results in a more elegant, if not more powerful, semantics <ref> [1] </ref>. Furthermore, it may sometimes be desirable to negate beliefs. For example, assume that the vulnerability of a key increases with the number of messages in which it is used for encryption or checksum computation. <p> eligibility rule, and citing the relativity of the notion of honesty (e.g., a protocol that is honest in one context may not be honest in other contexts), Abadi and Tuttle remove the honesty assumption from the axioms of the logic for authentication (without providing an alternate honesty axiom or rule <ref> [1] </ref>). We provide below an example of forwarding which, as suggested by Abadi and Tuttle in reference [1], illustrates the need for decoupling honesty from the inference rules of the logics of authentication. <p> in one context may not be honest in other contexts), Abadi and Tuttle remove the honesty assumption from the axioms of the logic for authentication (without providing an alternate honesty axiom or rule <ref> [1] </ref>). We provide below an example of forwarding which, as suggested by Abadi and Tuttle in reference [1], illustrates the need for decoupling honesty from the inference rules of the logics of authentication. The example also shows that the lack of honesty can lead to the derivation of unordered beliefs in much the same way as the lack of key jurisdiction. <p> The logics for cryptographic protocols support key secrecy in different ways. The BAN, GNY and G [9] logics assume that shared keys remain secret to the communicating parties and parties they trust. The reformulated BAN logic presented in <ref> [1] </ref> removes the secrecy property from the definition of shared keys since this property is unnecessary for authentication. (However, secrecy axioms may need to be introduced whenever necessary.) Second, the identity of all parties sharing the secret key should be known to the communicating parties. <p> First, a formal semantics helps separate implicit assumptions from axioms and inference rules by using properties required to demonstrate the soundness of a logic <ref> [1] </ref>. For example, a formal semantics could elucidate the implicit assumptions of privacy trust in logics of authentication, could cause the separation of jurisdiction trust from the derivation of first-order beliefs and, as shown in reference [1], could cause the separation of the honesty assumption from message freshness beliefs. <p> and inference rules by using properties required to demonstrate the soundness of a logic <ref> [1] </ref>. For example, a formal semantics could elucidate the implicit assumptions of privacy trust in logics of authentication, could cause the separation of jurisdiction trust from the derivation of first-order beliefs and, as shown in reference [1], could cause the separation of the honesty assumption from message freshness beliefs. <p> The definition of the GNY and G logics do not include formal semantics. Several limitations of the formal semantics of the BAN logic are explained and remedied in <ref> [1] </ref>.
Reference: [2] <author> M.Burrows, M.Abadi, and R.Needham, </author> " <title> A Logic of Authentication," </title> <booktitle> in Proceedings of the 12th ACM Symposium on Operating Systems Principles, </booktitle> <address> Litchfield Park, Arizona, </address> <month> December, </month> <year> 1989. </year> <note> Published in ACM Operating Systems Review, Vol.23, No.5, December 1989; a full version appears in DEC System Research Center report No.39, </note> <institution> Palo Alto, California, </institution> <month> February, </month> <year> 1989. </year>
Reference-contexts: This means that whenever a party states a formula (e.g., a shared key) it believes, or it has derived belief, in that formula. For example, a party asserting the freshness of a message it is assumed to believe in that assertion <ref> [2, 4, 10] </ref>. Gong introduces an explicit "eligi-bility" rule that deals with infeasible protocol specifications [9], which also prevents dishonesty; e.g., it prevents the forwarding of a logical formula not believed by the forwarding party.
Reference: [3] <author> M.Burrows, M.Abadi, R.M.Needham, </author> " <title> Logic of Authentication," </title> <journal> Proceedings of the Royal Society of London A, </journal> <volume> Vol.426, </volume> <year> 1989. </year>
Reference: [4] <author> M.Burrows, M.Abadi, R.M.Needham, </author> <title> "Logic of Authentication," </title> <journal> ACM Transactions on Computer Systems, </journal> <note> Vol.8, No.1, February, 1990; a full version appears as a DEC System Research Center report No. 39, (revised) February 1990. </note>
Reference-contexts: The use of these logics can be hampered, to some extent, by the difficulty of delimiting their usefulness in practical applications. The limited application scope of these logics can be easily misunderstood, thereby raising unreasonable expectations despite warnings to the contrary from the authors of these logics (e.g., <ref> [4] </ref>) and significant debate (e.g., [5,15]); at the same time, some important advantages of these logics are ignored, possibly due to insufficient application experience. <p> This means that whenever a party states a formula (e.g., a shared key) it believes, or it has derived belief, in that formula. For example, a party asserting the freshness of a message it is assumed to believe in that assertion <ref> [2, 4, 10] </ref>. Gong introduces an explicit "eligi-bility" rule that deals with infeasible protocol specifications [9], which also prevents dishonesty; e.g., it prevents the forwarding of a logical formula not believed by the forwarding party.
Reference: [5] <author> M.Burrows, M.Abadi, R.M.Needham, </author> <title> "Rejoinder to Nessett," </title> <journal> Operating Systems Review, </journal> <volume> vol. 24, no. 2, </volume> <year> 1990. </year>
Reference: [6] <author> P. Bieber, </author> <title> "A Logic of Communication in Hos tile Environment," </title> <booktitle> Proceedings of The Computer Security Foundations Workshop III, </booktitle> <address> Franconia, N.H., </address> <month> June </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Advances in the formal analysis of authentication protocols, based primarily on the logic of authentication of Burrows, Abadi, and Needham [2,4], have stimulated interest in the development of new logics for analysis of other aspects of cryptographic protocols, such as message-meaning recognition [9,10] and message secrecy or privacy <ref> [6] </ref>, not just for authentication. The use of these logics can be hampered, to some extent, by the difficulty of delimiting their usefulness in practical applications.
Reference: [7] <author> A.D. Birrell, B. W. Lampson, R. M. Needham and M.D. </author> <title> Schroeder " A Global Authentication Service without Global Trust," </title> <booktitle> in the Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <address> Oakland, California, </address> <year> 1986. </year>
Reference-contexts: In typical inter-domain authentication protocols, all intermediate authentication servers of the domains traversed between the two communicating parties either know the shared (secret) key used by those parties <ref> [7] </ref> or can discover it after some work [12]. Thus, both parties must trust each intermediate authentication server with maintaining the secrecy of the shared key.
Reference: [8] <author> P.-C. Cheng and V.D. Gligor, </author> " <title> On the formal Specification and verification of a Multiparty Session Protocol," </title> <booktitle> Proceedings of the IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <month> May 7-9, </month> <year> 1990, </year> <institution> Oakland, California. </institution>
Reference-contexts: An example of the latter approach for some of the inference rules of the BAN logic [2,4] is provided in <ref> [8] </ref> where an informal "inter-pretation" of these rules within the Ina-Jo language is illustrated. Although the generality of this approach remains an open issue, it appears that the simplicity of the BAN logic inference rules makes such interpretation possible at least for some protocols. <p> In other protocols, which may assume different types of key jurisdiction than those of BAN, only second-level beliefs can be derived using BAN, even though these protocols can establish first-level beliefs <ref> [8] </ref>. For example, a principal may be trusted to read and convey a statement about a key issued by another principal who has jurisdiction over that statement (key), even though the principal may not have jurisdiction to issue the statement itself.
Reference: [9] <author> L. Gong, </author> <title> "Cryptographic Protocols for Dis tributed Systems," </title> <type> PhD dissertation, </type> <institution> University of Cambridge, </institution> <month> April, </month> <year> 1990. </year> <title> Also see "Handling Infeasible Specifications of Cryptographic Protocols" in these Proceedings. </title>
Reference-contexts: For example, a party asserting the freshness of a message it is assumed to believe in that assertion [2, 4, 10]. Gong introduces an explicit "eligi-bility" rule that deals with infeasible protocol specifications <ref> [9] </ref>, which also prevents dishonesty; e.g., it prevents the forwarding of a logical formula not believed by the forwarding party. Note that such a rule does not necessarily prevent some parties from cheating at run time. <p> Secret keys are typically shared on long terms between users and authentication servers or between authentication servers, and on short terms between processes that establish private communication sessions. The logics for cryptographic protocols support key secrecy in different ways. The BAN, GNY and G <ref> [9] </ref> logics assume that shared keys remain secret to the communicating parties and parties they trust.
Reference: [10] <author> L. Gong, R. Needham, and R. Yahalom, </author> <title> "Rea soning about Belief in Cryptographic Protocols," </title> <booktitle> in Proceedings of the IEEE 1990 Symposium on Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May, </month> <year> 1990. </year>
Reference-contexts: If this approach proves to be general, the practical usefulness of these logics could be significantly enhanced. (An interesting exercise would be to attempt an interpretation of the more complex rules of logic presented in <ref> [10] </ref> and of the streamlined version of the logic of authentication presented in [1] within the computation models of existing tools.) 2.2 Explicit Security Assumptions The use of logics for cryptographic protocols force designers to state explicitly the security assumptions made in protocol specifications. <p> The GNY logic <ref> [10] </ref> uses protocol parsing to reduce dependency on the `man in the loop' in the idealization process. <p> This means that whenever a party states a formula (e.g., a shared key) it believes, or it has derived belief, in that formula. For example, a party asserting the freshness of a message it is assumed to believe in that assertion <ref> [2, 4, 10] </ref>. Gong introduces an explicit "eligi-bility" rule that deals with infeasible protocol specifications [9], which also prevents dishonesty; e.g., it prevents the forwarding of a logical formula not believed by the forwarding party.
Reference: [11] <author> R. Kailar and V.D. Gligor, </author> <title> "On Belief Evolution in Authentication Protocols," </title> <booktitle> these Proceedings. </booktitle>
Reference-contexts: Furthermore, in protocols that assume different types of key jurisdiction than those of BAN, belief ordering is not always preserved; e.g., a principal may incorrectly obtain a belief that another principal has derived its first-level belief <ref> [11] </ref>. The significance of deriving only second-level beliefs and of lack of belief ordering can be debated. <p> The idealization step of the logics discussed in this note needs to be enhanced to allow the definition of the trust relationships and authentication paths using explicit policies. A preliminary attempt to expand the scope of the logics for authentication to inter-domain authentication is reported in reference <ref> [11] </ref>. 3.5 Formal Semantics The need for formal semantics appears for at least three practical reasons. First, a formal semantics helps separate implicit assumptions from axioms and inference rules by using properties required to demonstrate the soundness of a logic [1].
Reference: [12] <author> J.Kohl, C.Neuman, J. </author> <title> Steiner, </title> <type> "Kerberos Version 5 RFC, draft 2," </type> <institution> MIT Project Athena, </institution> <month> November </month> <year> 1989. </year>
Reference-contexts: That is, C must know A's dentifier, since C 0 s authenticators for various services would have to include A 0 s identifier whenever C takes on A 0 s identity <ref> [12] </ref>.) However, making implicit assumptions of principal identities does not mean that all parties can discover the identity of all other parties sharing a key during a protocol run. <p> In typical inter-domain authentication protocols, all intermediate authentication servers of the domains traversed between the two communicating parties either know the shared (secret) key used by those parties [7] or can discover it after some work <ref> [12] </ref>. Thus, both parties must trust each intermediate authentication server with maintaining the secrecy of the shared key.
Reference: [13] <author> S.P.Miller, C.Neuman, J.I.Schiller, and J.H.Saltzer. </author> " <title> Kerberos Authentication and Authorization System," Project Athena Technical Plan, Section E.2.1, </title> <publisher> MIT, </publisher> <month> July </month> <year> 1987. </year>
Reference-contexts: The users of logics for cryptographic protocols should be aware of the pitfalls of the idealization process. Seemingly trivial omissions of protocol message contents may render an otherwise correct proof incorrect with respect to some of its assumptions. For example, the idealized versions of the Needham-Schroeder (shared-key) and Kerberos <ref> [13] </ref> protocols exclude the first message of the informal protocol specifications [2-4]. The first message of the Needham-Schroeder (shared-key) protocol contains a cleartext nonce (which is unnecessary in the public-key version of that protocol).
Reference: [14] <author> R.M.Needham and M.D.Schroeder. </author> <title> "Using En cryption for Authentication in Large Networks of Computers," </title> <journal> CACM Vol.21, </journal> <volume> No. 12, </volume> <month> December </month> <year> 1978. </year>
Reference-contexts: For example, the use of the BAN logic shows that the Otway-Rees protocol [16] fails to achieve the same set of beliefs as that of the Needham-Schroeder (shared-key) protocol <ref> [14] </ref>. Thus, the Otway-Rees protocol, which requires only four messages, cannot be considered more "efficient" than the Needham-Schroeder protocol, which requires five messages. These logics can also help eliminate some protocol and message-field redundancy [2,4]. <p> This timestamp is considered to be monotonic and, therefore, can act as a nonce [12,13]. Excluding the nonce and the timestamp along with the first message of the these protocols could render their analysis incorrect because, as explained in reference <ref> [14] </ref>, the absence of a nonce in the first message enables an intruder to force the reuse of an old key between the two parties interested in mutual authentication. The GNY logic [10] uses protocol parsing to reduce dependency on the `man in the loop' in the idealization process.
Reference: [15] <author> D.M. Nessett, </author> <title> "A Critique of the Burrows, Abadi, and Needham Logic," </title> <journal> Operating Systems Review, </journal> <volume> vol. 24, no. 2, </volume> <year> 1990. </year>
Reference: [16] <author> D.Otway and O.Rees, </author> " <title> Efficient and Timely Mu tual Authentication," Operating System Review Vol.21, </title> <address> No.1, </address> <month> January </month> <year> 1978. </year>
Reference-contexts: They explicitly tie the evolution of beliefs to message contents, number of messages and message rounds, helping determine the minimum number of messages needed to achieve a certain set of beliefs. For example, the use of the BAN logic shows that the Otway-Rees protocol <ref> [16] </ref> fails to achieve the same set of beliefs as that of the Needham-Schroeder (shared-key) protocol [14]. Thus, the Otway-Rees protocol, which requires only four messages, cannot be considered more "efficient" than the Needham-Schroeder protocol, which requires five messages.
Reference: [17] <author> J.Pato, </author> <title> "DCE Authorization Services" Priv ilege Server, </title> <institution> Cooperative Computing Division, Hewlett-Packard Co., Chelmsford, </institution> <address> MA 01824, </address> <month> December, </month> <year> 1990. </year>
Reference-contexts: This structure is defined by various security policies. For example, these policies may define trust hierarchies of domains and authentication servers [7,12]. More general policies may introduce "peer links" between disjoint hierarchies of domains and authentication servers <ref> [17] </ref>. Domain traversals across peer links must be restricted according to a specific policy, which may differ substantially from those based on trust hierarchies.
Reference: [18] <author> P.Syverson, </author> <title> "The Use of Logic in the Analysis of Cryptographic Protocols," </title> <booktitle> Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: can be derived with the logic. (Thus, formal semantics for all the logics for cryptographic protocols, could limit the need for papers such as this one.) Third, it is often easier and more natural to reason in the semantics during the analysis of a protocol than in the logic itself <ref> [18] </ref>. To take advantage of this, however, the logic must be sound (but need not always be complete) with respect to the semantics. The definition of the GNY and G logics do not include formal semantics.
Reference: [19] <author> V.L.Voydock, S.T.Kent. </author> <title> "Security Mechanisms in High-level Network Protocols," </title> <journal> Computing Surveys, </journal> <volume> Vol 15. </volume> <pages> No.2, </pages> <year> 1983. </year>
Reference-contexts: The purpose of revisiting these assumptions is to illustrate their implications, not to question their validity or soundness. Recall that the DES Cipher Block Chaining (CBC) mode can provide data privacy and integrity at the block level, but not necessarily across multiple blocks <ref> [19] </ref>. Let us consider a hypothetical implementation of the Otway-Rees protocol with DES CBC. (Note that this deliberately naive implementation is recommended neither by the protocol authors nor by us.) The Otway Rees protocol can be summarized as follows: Message 1.
References-found: 19

