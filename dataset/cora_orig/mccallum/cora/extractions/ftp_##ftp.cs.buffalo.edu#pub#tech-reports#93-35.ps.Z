URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-35.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: A New Parallel Vector Model, With Exact Characterizations of NC  
Author: k Kenneth W. Regan 
Keyword: Topics. Computational complexity, automata and formal languages, parallel algo rithms.  
Date: August 19, 1993  
Affiliation: State University of New York at Buffalo  
Abstract: This paper develops a new and natural parallel vector model, and shows that for all k 1, the languages recognizable in O(log k n) time and polynomial work in the model are exactly those in NC k . Some improvements to other simulations in the literature of parallel models and reversal complexity are given. 
Abstract-found: 1
Intro-found: 1
Reference: [ADKP89] <author> K. Abrahamson, N. Dadoun, D. Kirkpatrick, and T. Przytycka. </author> <title> A simple parallel tree contraction algorithm. </title> <journal> Journal of Algorithms, </journal> <volume> 10 </volume> <pages> 287-302, </pages> <year> 1989. </year>
Reference-contexts: Call the latter problem "BSVP with PLOF promise." The PLOF form was later shown unnecessary by Buss [Bus91] via the tree-contraction method of <ref> [ADKP89] </ref>, while Kosaraju and Delcher [KD90, KD92] obtained circuits of depth O (log n) and size O (n log O (1) n) for BSVP without the promise. For CFAs we flip PLOF to "prefix shorter-operand first" (PSOF). Theorem 5.3. <p> For CFAs we flip PLOF to "prefix shorter-operand first" (PSOF). Theorem 5.3. The BSVP with PSOF promise is solvable by a CFA in O (log n) passes and linear overall work. The proof consists of verifying that for in PSOF form, the method of <ref> [ADKP89] </ref> can be carried out by a CFA S. However, the monoid of transformations of S contains GF (2) as a subgroup, so S is neither aperiodic nor a gh. Open Problem 1.
Reference: [Arb68] <author> M. Arbib, </author> <title> editor. Algebraic Theory of Machines, Languages, and Semigroups. </title> <publisher> Academic Press, </publisher> <year> 1968. </year>
Reference-contexts: D. Mix Barrington and others [Bar89, BT88, BIS90, MPT91, BCST92] have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see <ref> [KR65, Arb68, MP71] </ref>). Chandra, Furst, and Lipton [CFL85] showed that every function computed by an S such that M S is aperiodic belongs to AC 0 , while every "generalized homomorphism" (defined below) belongs to NC 0 .
Reference: [Bar89] <author> D. </author> <title> Mix Barrington. Bounded-width polynomial-size branching programs recognize exactly those languages in NC 1 . J. </title> <journal> Comp. Sys. Sci., </journal> <volume> 38 </volume> <pages> 150-164, </pages> <year> 1989. </year>
Reference-contexts: Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch [Ble90]. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D. Mix Barrington and others <ref> [Bar89, BT88, BIS90, MPT91, BCST92] </ref> have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]).
Reference: [BCGR92] <author> S. Buss, S. Cook, A. Gupta, and V. Ramachandran. </author> <title> An optimal parallel algorithm for formula evaluation. </title> <journal> SIAM J. Comp., </journal> <volume> 21 </volume> <pages> 755-780, </pages> <year> 1992. </year>
Reference-contexts: The original proof by Buss [Bus87] that the Boolean formula value problem belongs to NC 1 reduced the problem to that of evaluating a Boolean sentence written in postfix form with longer operands first, called "PLOF" in <ref> [Bus87, BCGR92] </ref>.
Reference: [BCST92] <author> D. Mix Barrington, K. Compton, H. Straubing, and D. Therien. </author> <title> Regular languages in NC 1 . J. </title> <journal> Comp. Sys. Sci., </journal> <volume> 44 </volume> <pages> 478-499, </pages> <year> 1992. </year>
Reference-contexts: Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch [Ble90]. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D. Mix Barrington and others <ref> [Bar89, BT88, BIS90, MPT91, BCST92] </ref> have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]).
Reference: [BDG88] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity Theory. </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Here we are only concerned with the complexity measures R (n) and w (n). 3 It has been observed that the distinction between arithmetic and vector registers is inessential, shifts being the same as multiplication and division by powers of 2, and that left shifts are unnecessary|see <ref> [Sim75, BDG88, vEB90, KR90, TLR92] </ref> for these observations and alternate forms of the VM. The original form makes the clearest comparison to the BM. 3 the Pratt-Stockmeyer model. The main theorem of this paper is that these adjustments lead to exact characterizations of the classes NC k . 3.
Reference: [BIS90] <author> D. Mix Barrington, N. Immerman, and H. Straubing. </author> <title> On uniformity within NC 1 . J. </title> <journal> Comp. Sys. Sci., </journal> <volume> 41 </volume> <pages> 274-306, </pages> <year> 1990. </year>
Reference-contexts: Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch [Ble90]. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D. Mix Barrington and others <ref> [Bar89, BT88, BIS90, MPT91, BCST92] </ref> have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]). <p> For AC 1 and higher this is equivalent to older conditions of log-space uniformity, and we use this for NC k with k 2 below. (For equivalences among finer uniformity conditions on classes within NC 1 , see Barrington, Immerman, and Straubing <ref> [BIS90] </ref>.) Using U E fl uniformity gives the identity NC k = ATISP (O (log k n); O (log n)) for all k 1 [Ruz81], where ATISP refers to simultaneously time- and space-bounded alternating Turing machines. Thus NC 1 is also called ALOGTIME. <p> The remainder of the block is evaluated by alternating A () and O (). (3) NC 1 BM 1 (gh). Here we use the identity NC 1 = ALOGTIME. Let T be an ALOGTIME machine which accepts some language A. It is well known (see <ref> [Sip83, BIS90] </ref>) that T can be converted to an ALOGTIME machine T 0 with the following properties: T 0 alternates existential and universal steps, and each non-terminal configuration has exactly two successors (called "right" and "left").
Reference: [Ble90] <author> G. Blelloch. </author> <title> Vector Models for Data-Parallel Computing. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Thus the number R (x) of block moves by a BM M on some input x is a reasonable measure of parallel time. Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch <ref> [Ble90] </ref>. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D.
Reference: [Blo92] <author> S. Bloch. </author> <title> Functional characterizations of uniform log-depth and polylog- depth circuit families. </title> <booktitle> In Proc. 7th Structures, </booktitle> <pages> pages 193-206, </pages> <year> 1992. </year>
Reference-contexts: Higher up, however, much less is known, even about simple problems involving iterations of finite transductions which we discuss at the end of this paper. Clote [Clo90] and Bloch <ref> [Blo92] </ref> give characterizations of NC k and AC k (k 1) in terms of algebras fl The author was supported in part by NSF Research Initiation Award CCR-9011248 Author's current address: Computer Science Department, 226 Bell Hall, UB North Campus, Buffalo, NY 14260-2000.
Reference: [BT88] <author> D. Mix Barrington and D. Therien. </author> <title> Finite monoids and the fine structure of NC 1 . J. </title> <journal> ACM, </journal> <volume> 35 </volume> <pages> 941-952, </pages> <year> 1988. </year>
Reference-contexts: Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch [Ble90]. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D. Mix Barrington and others <ref> [Bar89, BT88, BIS90, MPT91, BCST92] </ref> have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]).
Reference: [Bus87] <author> S. Buss. </author> <title> The boolean formula value problem is in ALOGTIME. </title> <booktitle> In Proc. 19th STOC, </booktitle> <pages> pages 123-131, </pages> <year> 1987. </year>
Reference-contexts: Hence iterating S recognizes D 1 in O (log n) passes and linear overall work. The original proof by Buss <ref> [Bus87] </ref> that the Boolean formula value problem belongs to NC 1 reduced the problem to that of evaluating a Boolean sentence written in postfix form with longer operands first, called "PLOF" in [Bus87, BCGR92]. <p> The original proof by Buss [Bus87] that the Boolean formula value problem belongs to NC 1 reduced the problem to that of evaluating a Boolean sentence written in postfix form with longer operands first, called "PLOF" in <ref> [Bus87, BCGR92] </ref>.
Reference: [Bus91] <author> S. Buss. </author> <title> Algorithms for Boolean formula evaluation and for tree contraction. </title> <type> Technical report, </type> <institution> Department of Mathematics, University of California at San Diego, </institution> <year> 1991. </year> <note> To appear in P. </note> <editor> Clote and J. Krajicek, eds., </editor> <booktitle> "Proceedings of a Workshop on Proof Theory, Complexity and Arithmetic," </booktitle> <year> 1993. </year>
Reference-contexts: Call the latter problem "BSVP with PLOF promise." The PLOF form was later shown unnecessary by Buss <ref> [Bus91] </ref> via the tree-contraction method of [ADKP89], while Kosaraju and Delcher [KD90, KD92] obtained circuits of depth O (log n) and size O (n log O (1) n) for BSVP without the promise. For CFAs we flip PLOF to "prefix shorter-operand first" (PSOF). Theorem 5.3.
Reference: [CFL85] <author> A. Chandra, S. Fortune, and R. Lipton. </author> <title> Unbounded fan-in circuits and associative functions. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 30 </volume> <pages> 222-234, </pages> <year> 1985. </year>
Reference-contexts: D. Mix Barrington and others [Bar89, BT88, BIS90, MPT91, BCST92] have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]). Chandra, Furst, and Lipton <ref> [CFL85] </ref> showed that every function computed by an S such that M S is aperiodic belongs to AC 0 , while every "generalized homomorphism" (defined below) belongs to NC 0 . <p> The next level is similarly evaluated by applying O ! Er ! S 1+k log g , in O (1) passes. Doing this for O (t) = O (s) = O (log n) total passes evaluates the entire computation tree. Corollary 4.2. (to (1) and <ref> [CFL85] </ref>): For all k 1, BM k (ap) AC k . Let "BM 0 " stand for BMs which are provided with any finite set of NC 0 operations to use in block moves, and which may have more than one tape. Corollary 4.3.
Reference: [Clo90] <author> P. Clote. </author> <title> Sequential, machine-independent characterizations of the parallel complexity classes ALOGTIME, NC 1 , AC 0 , and NC. </title> <editor> In S. Buss and P. Scott, editors, </editor> <booktitle> Feasible Mathematics, </booktitle> <pages> pages 49-70. </pages> <publisher> Birkhauser, </publisher> <year> 1990. </year>
Reference-contexts: Higher up, however, much less is known, even about simple problems involving iterations of finite transductions which we discuss at the end of this paper. Clote <ref> [Clo90] </ref> and Bloch [Blo92] give characterizations of NC k and AC k (k 1) in terms of algebras fl The author was supported in part by NSF Research Initiation Award CCR-9011248 Author's current address: Computer Science Department, 226 Bell Hall, UB North Campus, Buffalo, NY 14260-2000.
Reference: [Coo85] <author> S. Cook. </author> <title> A taxonomy of problems with fast parallel algorithms. </title> <journal> Info. Control, </journal> <volume> 64 </volume> <pages> 2-22, </pages> <year> 1985. </year>
Reference-contexts: This will be used when T is an alternating TM with binary branching. 4. Main Theorem Cook <ref> [Coo85] </ref> made it standard to refer to the U E fl uniformity condition of Ruzzo [Ruz81] in defining the classes NC k and AC k for k 1.
Reference: [CY91] <author> J. Chen and C. Yap. </author> <title> Reversal complexity. </title> <journal> SIAM J. Comp., </journal> <volume> 20 </volume> <pages> 622-638, </pages> <year> 1991. </year>
Reference-contexts: It is unusual for the standard and oblivious forms of a model to be equivalent, and we speculate this may be valuable help in proving certain problems not to belong to NC 1 in particular. The theorem also leads to technical improvements in a few results from <ref> [CY91] </ref> on Turing machine reversal complexity. Section 2 describes the model, Section 3 gives basic lemmas, and Section 4 outlines a proof of the main theorem. <p> The length of the list is l, and the bit-length is P l j=1 jx i j. If each string x i has the same length s, then the list X is normal , a term used by Chen and Yap <ref> [CY91] </ref> when also l is a power of 2 (see below). A normal list represents an l fi s Boolean matrix in row-major order. <p> The older "strict" criterion of Kameda and Vollmer [KV70] is the same as counting any S move as a reversal. The newer one <ref> [Pip79, Hon86, Par87, CY91] </ref> counts a reversal only when a head moves L which has previously moved R, or vice-versa. (Some other sources do not count reversals on the input tape.) Lemma 5.1. <p> Chen and Yap <ref> [CY91] </ref> showed that any r (n) reversal bounded multitape TM can be simulated by a 2-tape TM in O (r (n) 2 ) reversals. In the case where the TM runs in polynomial space we obtain an inprovement: Corollary 5.2.
Reference: [HIM78] <author> J. Hartmanis, N. Immerman, and S. Mahaney. </author> <title> One-way log tape reductions. </title> <booktitle> In Proc. 19th FOCS, </booktitle> <pages> pages 65-72, </pages> <year> 1978. </year>
Reference-contexts: However, the monoid of transformations of S contains GF (2) as a subgroup, so S is neither aperiodic nor a gh. Open Problem 1. Does every language accepted by a CFA in O (log n) passes belong to NC 1 ? (Such languages do belong to one-way logspace <ref> [HIM78] </ref>.) Open Problem 2.
Reference: [HKL92] <author> T. Harju, H.C.M. Klein, and M. Latteux. </author> <title> Deterministic sequential functions. </title> <journal> Acta Informatics, </journal> <volume> 29 </volume> <pages> 545-554, </pages> <year> 1992. </year>
Reference-contexts: The BM Vector Model The model of finite transducer we use is the deterministic generalized sequential machine (DGSM), as formalized in [HU79] (see also <ref> [HKL92] </ref>). A DGSM S is like a Mealy machine, but with the ability to output not just one but zero, two, three, or more symbols in any one transition.
Reference: [Hon86] <author> J.-W. Hong. </author> <title> Computation: Similarity and Duality. </title> <booktitle> Research Notes in Theoretical Computer Science. </booktitle> <publisher> Wiley, </publisher> <year> 1986. </year> <month> 13 </month>
Reference-contexts: Even the BM (gh) with GSMs restricted to be generalized homomorphisms still offers the handy dilation operation, which together with the convention about B enables strings to be shu*ed in O (1) passes even when there is only one tape. Compared to <ref> [Hon86] </ref>, pp111-115, it appears that having shu*e as a primitive in this sense improves the time for certain important operations over 2 The above is one form of the BM model considered in [Reg93a, Reg93b]. <p> The key point of the next lemma and its sequel is that the number of passes to compute ~ S # (X ) and ~ U # (X ) is independent of m. Analogous operations given by Hong on pp111-115 of <ref> [Hon86] </ref> for the original Pratt-Stockmeyer model have an O (log m) term in their time. 5 Lemma 3.2. Let X be super-normal with s = 2 b , l = 2 c , and m even. <p> The older "strict" criterion of Kameda and Vollmer [KV70] is the same as counting any S move as a reversal. The newer one <ref> [Pip79, Hon86, Par87, CY91] </ref> counts a reversal only when a head moves L which has previously moved R, or vice-versa. (Some other sources do not count reversals on the input tape.) Lemma 5.1.
Reference: [HU79] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Compu--tation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1979. </year>
Reference-contexts: The BM Vector Model The model of finite transducer we use is the deterministic generalized sequential machine (DGSM), as formalized in <ref> [HU79] </ref> (see also [HKL92]). A DGSM S is like a Mealy machine, but with the ability to output not just one but zero, two, three, or more symbols in any one transition.
Reference: [KD90] <author> S.R. Kosaraju and A. Delcher. </author> <title> A tree-partitioning technique with applications to expression evaluation and term matching. </title> <booktitle> In Proc. 31st FOCS, </booktitle> <pages> pages 163-172, </pages> <year> 1990. </year>
Reference-contexts: Call the latter problem "BSVP with PLOF promise." The PLOF form was later shown unnecessary by Buss [Bus91] via the tree-contraction method of [ADKP89], while Kosaraju and Delcher <ref> [KD90, KD92] </ref> obtained circuits of depth O (log n) and size O (n log O (1) n) for BSVP without the promise. For CFAs we flip PLOF to "prefix shorter-operand first" (PSOF). Theorem 5.3.
Reference: [KD92] <author> S.R. Kosaraju and A. Delcher. </author> <title> A tree-partitioning technique with applications to expression evaluation and term matching, </title> <month> November </month> <year> 1992. </year>
Reference-contexts: Call the latter problem "BSVP with PLOF promise." The PLOF form was later shown unnecessary by Buss [Bus91] via the tree-contraction method of [ADKP89], while Kosaraju and Delcher <ref> [KD90, KD92] </ref> obtained circuits of depth O (log n) and size O (n log O (1) n) for BSVP without the promise. For CFAs we flip PLOF to "prefix shorter-operand first" (PSOF). Theorem 5.3.
Reference: [KR65] <author> K. Krohn and J. Rhodes. </author> <title> Algebraic theory of machines. I. prime decomposition theorem for finite semigroups and machines. </title> <journal> Trans. AMS, </journal> <volume> 116 </volume> <pages> 450-464, </pages> <year> 1965. </year>
Reference-contexts: D. Mix Barrington and others [Bar89, BT88, BIS90, MPT91, BCST92] have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see <ref> [KR65, Arb68, MP71] </ref>). Chandra, Furst, and Lipton [CFL85] showed that every function computed by an S such that M S is aperiodic belongs to AC 0 , while every "generalized homomorphism" (defined below) belongs to NC 0 .
Reference: [KR90] <author> R. Karp and V. Ramachandran. </author> <title> Parallel algorithms for shared-memory machines. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 871-941. </pages> <publisher> Elsevier and MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Email: regan@cs.buffalo.edu, tel.: (716) 645-3189, fax: (716) 645-3464. 1 of functions. There is also interest in knowing precise relationships among time in various parallel models. Following the survey by Karp and Ramachandran <ref> [KR90] </ref>, let EREW k , CREW k , CRCW k , and VM k stand for O (log k n) time (and polynomial work) on the three common forms of PRAM and the VM, respectively. <p> Here we are only concerned with the complexity measures R (n) and w (n). 3 It has been observed that the distinction between arithmetic and vector registers is inessential, shifts being the same as multiplication and division by powers of 2, and that left shifts are unnecessary|see <ref> [Sim75, BDG88, vEB90, KR90, TLR92] </ref> for these observations and alternate forms of the VM. The original form makes the clearest comparison to the BM. 3 the Pratt-Stockmeyer model. The main theorem of this paper is that these adjustments lead to exact characterizations of the classes NC k . 3.
Reference: [KV70] <author> T. Kameda and R. Vollmar. </author> <title> Note on tape reversal complexity of languages. </title> <journal> Info. Control, </journal> <volume> 17 </volume> <pages> 203-215, </pages> <year> 1970. </year>
Reference-contexts: Other Results and Conclusion There are several definitions of reversal complexity for multitape Turing machines, where in a given transition, each head may stay stationary (S) as well as move left (L) or right (R). The older "strict" criterion of Kameda and Vollmer <ref> [KV70] </ref> is the same as counting any S move as a reversal. The newer one [Pip79, Hon86, Par87, CY91] counts a reversal only when a head moves L which has previously moved R, or vice-versa. (Some other sources do not count reversals on the input tape.) Lemma 5.1.
Reference: [MP71] <author> R. McNaughton and S. Papert. </author> <title> Counter-Free Automata. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1971. </year>
Reference-contexts: D. Mix Barrington and others [Bar89, BT88, BIS90, MPT91, BCST92] have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see <ref> [KR65, Arb68, MP71] </ref>). Chandra, Furst, and Lipton [CFL85] showed that every function computed by an S such that M S is aperiodic belongs to AC 0 , while every "generalized homomorphism" (defined below) belongs to NC 0 .
Reference: [MPT91] <author> P. McKenzie, P. Peladeau, and D. Therien. </author> <title> NC 1 : The automata-theoretic viewpoint. </title> <journal> Computational Complexity, </journal> <volume> 1 </volume> <pages> 330-359, </pages> <year> 1991. </year>
Reference-contexts: Indeed, the BM is a bit-based analogue of the integer-based scan model of Blelloch [Ble90]. The idea of this paper is that the BM is a good tool for analyzing the fine structure of the NC hierarchy. D. Mix Barrington and others <ref> [Bar89, BT88, BIS90, MPT91, BCST92] </ref> have developed a rich theory of classes within NC 1 in terms of the structure of finite automata which recognize languages, growing out of algebraic theory for transducers (see [KR65, Arb68, MP71]).
Reference: [Par87] <author> I. Parberry. </author> <title> An improved simulation of space and reversal bounded deterministic Turing machines by width and depth bounded uniform circuits. </title> <journal> Inf. Proc. Lett., </journal> <volume> 24 </volume> <pages> 363-367, </pages> <year> 1987. </year>
Reference-contexts: The older "strict" criterion of Kameda and Vollmer [KV70] is the same as counting any S move as a reversal. The newer one <ref> [Pip79, Hon86, Par87, CY91] </ref> counts a reversal only when a head moves L which has previously moved R, or vice-versa. (Some other sources do not count reversals on the input tape.) Lemma 5.1. <p> input symbols to output symbols in some finite ratio d : e, R (n) corresponds in this simulation to a notion of reversal complexity which is intuitively midway between the "strict" and the standard one: in every interval between reversals, each tape head must operate at some "fixed stride." Parberry <ref> [Par87] </ref> showed that TMs which run in space s (n) and r (n) reversals can be simulated by uniform circuits of depth O (r (n) log 2 s (n)) and width polynomial in s (n).
Reference: [Pip79] <author> N. Pippenger. </author> <title> On simultaneous resource bounds. </title> <booktitle> In Proc. 20th FOCS, </booktitle> <pages> pages 307-311, </pages> <year> 1979. </year>
Reference-contexts: The older "strict" criterion of Kameda and Vollmer [KV70] is the same as counting any S move as a reversal. The newer one <ref> [Pip79, Hon86, Par87, CY91] </ref> counts a reversal only when a head moves L which has previously moved R, or vice-versa. (Some other sources do not count reversals on the input tape.) Lemma 5.1.
Reference: [PS76] <author> V. Pratt and L. Stockmeyer. </author> <title> A characterization of the power of vector machines. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 12 </volume> <pages> 198-221, </pages> <year> 1976. </year>
Reference-contexts: We leave the reader to check that the strict boundary condition is observed in our simulations|in most moves, a 1 ; b 1 ; a 2 ; b 2 are multiples of powers of two. 2 The original vector model of Pratt and Stockmeyer <ref> [PS76] </ref> is a RAM M with arbitrarily many arithmetical registers R i and some number k of "vector registers" (or tapes) V j , each of which holds a binary string.
Reference: [Reg93a] <author> K. Regan. </author> <title> Linear time and memory efficient computation, </title> <note> 1993. Revision of UB CS TR 92-28, submitted to SIAM J. Comput.. </note>
Reference-contexts: Compared to [Hon86], pp111-115, it appears that having shu*e as a primitive in this sense improves the time for certain important operations over 2 The above is one form of the BM model considered in <ref> [Reg93a, Reg93b] </ref>. For other forms, enforcing the two conditions can multiply R (n) by a factor of O (log n).
Reference: [Reg93b] <author> K. Regan. </author> <title> Machine models and linear time complexity. </title> <journal> SIGACT News, </journal> <volume> 24, </volume> <month> Fall </month> <year> 1993. </year> <note> To appear. </note>
Reference-contexts: Compared to [Hon86], pp111-115, it appears that having shu*e as a primitive in this sense improves the time for certain important operations over 2 The above is one form of the BM model considered in <ref> [Reg93a, Reg93b] </ref>. For other forms, enforcing the two conditions can multiply R (n) by a factor of O (log n).
Reference: [Ruz81] <author> W. Ruzzo. </author> <title> On uniform circuit complexity. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 22 </volume> <pages> 365-383, </pages> <year> 1981. </year>
Reference-contexts: This will be used when T is an alternating TM with binary branching. 4. Main Theorem Cook [Coo85] made it standard to refer to the U E fl uniformity condition of Ruzzo <ref> [Ruz81] </ref> in defining the classes NC k and AC k for k 1. <p> use this for NC k with k 2 below. (For equivalences among finer uniformity conditions on classes within NC 1 , see Barrington, Immerman, and Straubing [BIS90].) Using U E fl uniformity gives the identity NC k = ATISP (O (log k n); O (log n)) for all k 1 <ref> [Ruz81] </ref>, where ATISP refers to simultaneously time- and space-bounded alternating Turing machines. Thus NC 1 is also called ALOGTIME.
Reference: [Sim75] <author> J. Simon. </author> <title> On some central problems in computational complexity. </title> <type> PhD thesis, </type> <institution> Cornell University, </institution> <year> 1975. </year>
Reference-contexts: Here we are only concerned with the complexity measures R (n) and w (n). 3 It has been observed that the distinction between arithmetic and vector registers is inessential, shifts being the same as multiplication and division by powers of 2, and that left shifts are unnecessary|see <ref> [Sim75, BDG88, vEB90, KR90, TLR92] </ref> for these observations and alternate forms of the VM. The original form makes the clearest comparison to the BM. 3 the Pratt-Stockmeyer model. The main theorem of this paper is that these adjustments lead to exact characterizations of the classes NC k . 3.
Reference: [Sip83] <author> M. Sipser. </author> <title> Borel sets and circuit complexity. </title> <booktitle> In Proc. 15th STOC, </booktitle> <pages> pages 61-69, </pages> <year> 1983. </year>
Reference-contexts: The remainder of the block is evaluated by alternating A () and O (). (3) NC 1 BM 1 (gh). Here we use the identity NC 1 = ALOGTIME. Let T be an ALOGTIME machine which accepts some language A. It is well known (see <ref> [Sip83, BIS90] </ref>) that T can be converted to an ALOGTIME machine T 0 with the following properties: T 0 alternates existential and universal steps, and each non-terminal configuration has exactly two successors (called "right" and "left").
Reference: [SV84] <author> L. Stockmeyer and U. Vushkin. </author> <title> Simulations of parallel random access machines by circuits. </title> <journal> SIAM J. Comp., </journal> <volume> 13 </volume> <pages> 409-422, </pages> <year> 1984. </year>
Reference-contexts: Then for all k 1, NC k EREW k CREW k CRCW k = AC k <ref> [SV84] </ref>, and for k 2, NC k VM k AC k [TLR92].
Reference: [SvL89] <author> B. Scholten and J. van Leeuwen. </author> <title> Structured NC. </title> <booktitle> In The Proceedings of the 1989 Workshop on Algorithms and Data Structures, </booktitle> <pages> pages 487-498. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: One implication is that uniform NC k circuits can be placed into a form with very simple interconnections at each level, while increasing depth by only a constant factor. Scholten and vanLeeuwen <ref> [SvL89] </ref> showed that uniform NC k circuits can be made to have the same interconnect pattern at each level, but multiplying the depth by O (log n). 1 Moreover, the BM M in our proof can be oblivious, meaning that all of its tape head and marker movements depend only on
Reference: [TLR92] <author> J. Trahan, M. Loui, and V. Ramachandran. </author> <title> Multiplication, division, and shift instructions in parallel random access machines. </title> <journal> Theor. Comp. Sci., </journal> <volume> 100 </volume> <pages> 1-44, </pages> <year> 1992. </year>
Reference-contexts: Then for all k 1, NC k EREW k CREW k CRCW k = AC k [SV84], and for k 2, NC k VM k AC k <ref> [TLR92] </ref>. Now write BM k , BM k (gh), and BM k (ap) for polynomial work and O (log k n) time on the BM, BM with finite transducers S restricted to be generalized homomorphisms, and BM with all M S aperiodic, respectively. <p> Here we are only concerned with the complexity measures R (n) and w (n). 3 It has been observed that the distinction between arithmetic and vector registers is inessential, shifts being the same as multiplication and division by powers of 2, and that left shifts are unnecessary|see <ref> [Sim75, BDG88, vEB90, KR90, TLR92] </ref> for these observations and alternate forms of the VM. The original form makes the clearest comparison to the BM. 3 the Pratt-Stockmeyer model. The main theorem of this paper is that these adjustments lead to exact characterizations of the classes NC k . 3.
Reference: [vEB90] <author> P. van Emde Boas. </author> <title> Machine models and simulations. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 1-66. </pages> <publisher> Elsevier and MIT Press, </publisher> <year> 1990. </year> <month> 14 </month>
Reference-contexts: Here we are only concerned with the complexity measures R (n) and w (n). 3 It has been observed that the distinction between arithmetic and vector registers is inessential, shifts being the same as multiplication and division by powers of 2, and that left shifts are unnecessary|see <ref> [Sim75, BDG88, vEB90, KR90, TLR92] </ref> for these observations and alternate forms of the VM. The original form makes the clearest comparison to the BM. 3 the Pratt-Stockmeyer model. The main theorem of this paper is that these adjustments lead to exact characterizations of the classes NC k . 3.
References-found: 39

