URL: http://www.cs.cornell.edu/Info/People/ronitt/PAP/path.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/ronitt/papers.html
Root-URL: 
Email: Email: kleinber@cs.cornell.edu.  
Title: Short Paths in Expander Graphs Every bounded-degree expander on n nodes contains every graph with
Author: Jon Kleinberg Ronitt Rubinfeld 
Address: Cambridge MA  Ithaca NY 14853.  San Jose CA 95120.  
Affiliation: Laboratory for Computer Science, MIT,  Department of Computer Science, Cornell University,  at IBM Almaden Research Center,  
Note: (iii)  02139. Author supported by an ONR Graduate Fellowship. Present address:  On leave  
Abstract: Graph expansion has proved to be a powerful general tool for analyzing the behavior of routing algorithms and the inter-connection networks on which they run. We develop new routing algorithms and structural results for bounded-degree expander graphs. Our results are unified by the fact that they are all based upon, and extend, a body of work asserting that expanders are rich in short, disjoint paths. In particular, our work has consequences for the disjoint paths problem, multicom-modity flow, and graph minor containment. We show: (i) A greedy algorithm for approximating the maximum disjoint paths problem achieves a polylogarithmic approximation ratio in bounded-degree expanders. Although our algorithm is both deterministic and on-line, its performance guarantee is an improvement over previous bounds in expanders. (ii) For a multicommodity flow problem with arbitrary demands on a bounded-degree expander, there is a (1+ ")-optimal solution using only flow paths of poly-logarithmic length. It follows that the multicommod-ity flow algorithm of Awerbuch and Leighton runs in nearly linear time per commodity in expanders. Our analysis is based on establishing the following: given edge weights on an expander G, one can increase some of the weights very slightly so the resulting shortest-path metric is smooth the min-weight path between any pair of nodes uses a polylogarithmic number of edges. y Department of Computer Science, Cornell University. Research conducted while visiting e MIT Lab for Computer Science under an NSF VPW award. This work is partially supported by ONR Young Investigator Award N00014-93-1-0590, the Alfred P. Sloan Research Award, and grant No. 92-00226 from the United States - Israel Binational Science Foundation (BSF), Jerusalem, Israel. Email: ronitt@cs.cornell.edu. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Alon, F.R.K. Chung, </author> <title> "Explicit construction of linear-sized tolerant networks," </title> <journal> Discrete Math., </journal> <volume> 72(1988), </volume> <pages> pp. 15-19. </pages>
Reference: [2] <author> N. Alon, P.D. Seymour, R. Thomas, </author> <title> "A separator theorem for non-planar graphs," </title> <journal> J. American Math. Soc., </journal> <volume> 3(1990), </volume> <pages> pp. 801-809. </pages>
Reference-contexts: Minors appear in Kuratowski's famous theorem (see e.g. [11]), which characterizes planar graphs as precisely those which do not contain K 5 or K 3;3 as a minor; the exclusion of minors has since been used as a nice way to extend results for planar graphs to more general classes <ref> [2, 30] </ref>, and as the basis for some very deep results in both structural and algorithmic graph theory [31, 32]. We show the following. <p> On the other hand, our result, which is weaker by a polylogarithmic factor, holds in a graph with edge expansion ff, for any constant ff &gt; 0. Our result is also related to work of Alon, Seymour, and Thomas <ref> [2] </ref> and Plotkin, Rao, and Smith [27] on the existence of large clique minors in graphs without small separators. The second of these papers shows that any bounded-degree expander contains a complete graph on ( p n= log n) nodes as a minor. <p> This is a somewhat larger bound for clique minors than is provided by our result, which only guarantees cliques of size ( p n= log O (1) n) as minors. However, <ref> [2, 27] </ref> do not show that expanders contain every graph with O (n= log O (1) ) nodes and edges as a minor. (It is worth noting that in order for a bounded-degree graph to contain every graph with k nodes and edges as a minor, it is not sufficient that
Reference: [3] <author> S. Arora, F.T. Leighton, N. Maggs, </author> <title> "On-line algorithms for path selection in a non-blocking network," </title> <booktitle> Proc. 22nd ACM Symp. on Theory of Computing, </booktitle> <year> 1990. </year>
Reference-contexts: The development of many fundamental routing algorithms for hypercube-derived networks, for example, has been based heavily on the good expansion properties of such graphs <ref> [33, 3, 21, 20] </ref>. As such, the development of new techniques for working with expander graphs, and with the consequences of expansion at a general level, is of value both from a basic algorithmic point of view and within the context of network routing.
Reference: [4] <author> Y. Aumann, Y. Rabani, </author> <title> "Improved bounds for all-optical routing," </title> <booktitle> Proc. 6th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. 567-576. </pages>
Reference-contexts: That is, nodes of H are mapped bijectively to nodes of G, and edges of H realized as paths of length O (log n) in G. Aumann and Rabani <ref> [4] </ref> used this theorem to obtain the "partitioning" result of Raghavan and Upfal via a deterministic off-line algorithm. <p> We show here that the bga is an O (log n log log n)- approximation in bounded-degree expanders. Thus the bga gives what is currently the best approximation ratio for the mdp in bounded-degree expanders; as noted above, the techniques of Raghavan and Upfal [29] and Aumann and Rabani <ref> [4] </ref> provide O (log 2 n)- approximations.
Reference: [5] <author> B. Awerbuch, </author> <title> "The complexity of network synchronization," </title> <journal> Journal of the ACM, </journal> <volume> 32(1985). </volume>
Reference-contexts: An edge e is "heavy" if its weight ` e is at least fl, and "light" otherwise. Let G 0 denote the subgraph of G consisting of the light edges. We use a technique of Awerbuch <ref> [5] </ref> to partition the vertex set of the graph into pieces X 1 ; : : : ; X q , such that each X i has diameter O (log n), and jffi G 0 (X i )j 1 2 ffjX i j. <p> Note that there are at most b log (" 1 1 n) classes that initially contain any edges of G. We now define a decomposition algorithm, which is very similar to techniques of Awerbuch <ref> [5] </ref>. Let H be an arbitrary n-node graph, and fi &gt; 0 a parameter. <p> exceeds 2fi 1 log n: (i) Choose a vertex v 2 X. (ii) Find the minimum r such that jffi (B r (v))j fijB r (v)j: (iii) Delete ffi (B r (v)) from H The crucial fact about this algorithm is the following, which is again essentially a result of <ref> [5] </ref>. The proof is not difficult, and we omit it. (A) The above algorithm terminates, with a set of connected components each of diameter at most 2fi 1 log n.
Reference: [6] <author> B. Awerbuch, Y. Azar, S. Plotkin, </author> <title> "Throughput-competitive online routing," </title> <booktitle> Proc. 34th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1993, </year> <pages> pp. 32-40. </pages>
Reference-contexts: Specifically, the bga is a deterministic, on-line algorithm, and hence lower bounds of Awerbuch et al. <ref> [6] </ref> and Blum et al. [10] imply that it cannot achieve a polylogarith-mic approximation ratio in graphs such as trees and meshes. We show here that the bga is an O (log n log log n)- approximation in bounded-degree expanders. <p> Our result also identifies, to our knowledge, the first non-trivial class of graphs in which deterministic on-line algorithms can achieve a polylog-arithmic approximation ratio for the mdp; this is in contrast to the lower bounds of <ref> [6, 10] </ref>, as well as the (n " ) lower bound of Bartal, Fiat, and Leonardi that holds even for randomized on-line algorithms in certain graphs [8]. <p> If so, route (s i ; t i ) on such a path P i . Delete P i from G and iterate. As we mentioned above, lower bounds of <ref> [6, 10] </ref> show 3 that no deterministic on-line algorithm can obtain a polylogarithmic approximation ratio when the underlying graph is a tree or a mesh. Thus, this applies to the bga as well.
Reference: [7] <author> B. Awerbuch, F. T. Leighton, </author> <title> "Improved approximations for the multi-commodity flow problem and local competitive routing in networks," </title> <booktitle> Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <year> 1994, </year> <pages> pp. 489-496. </pages>
Reference-contexts: Aumann and Rabani [4] used this theorem to obtain the "partitioning" result of Raghavan and Upfal via a deterministic off-line algorithm. It is also worth noting here that the recent multi-commodity flow algorithm of Awerbuch and Leighton <ref> [7] </ref> has a running time that is heavily dependent on the length of the longest path used in a (nearly) optimal multicommodity flow. Thus, one would expect the algorithm to perform well in bounded-degree expander graphs. <p> By LP duality, this will imply our result on multicommodity flow on short paths. Our result has the following consequence. The re 2 cent multicommodity flow algorithm of Awerbuch and Leighton <ref> [7] </ref> provides a (1 + ")-approximate guarantee and has running time O fl (d 2 km), on a graph with m edges and k commodities, and where d is the maximum length of a flow path in the optimal solution. (Here and in what follows, we use O fl () to <p> The fastest general (1 + ")-approximation algorithm is due to Leighton et al. [22], with a running time of O fl (k 2 mn), where k is the number of commodities. A recent multicommodity flow algorithm due to Awerbuch and Leighton <ref> [7] </ref> works as follows: if there is a feasible flow F routing (1 + ") uv units of each commodity (u; v), and using flow paths of length at most d, then the algorithm finds a flow F 0 routing uv units of each commodity (u; v). <p> Recall that given a multicommodity flow problem (G; T ), the algorithm of <ref> [7] </ref> requires, for some positive ", that there is a feasible flow routing at least (1 + ") uv units of each commodity (u; v).
Reference: [8] <author> Y. Bartal, A. Fiat, S. Leonardi, </author> <title> "Lower bounds for online graph problems with application to on-line circuit and optical routing," </title> <booktitle> Proc. 28th ACM Symp. on Theory of Computing, </booktitle> <year> 1996. </year>
Reference-contexts: graphs in which deterministic on-line algorithms can achieve a polylog-arithmic approximation ratio for the mdp; this is in contrast to the lower bounds of [6, 10], as well as the (n " ) lower bound of Bartal, Fiat, and Leonardi that holds even for randomized on-line algorithms in certain graphs <ref> [8] </ref>. There is a natural extension of the bga, and its analysis, which shows that it achieves the same approximation ratio for the more general problem of packing trees of bounded size in the on-line model. Multicommodity Flow on Short Paths.
Reference: [9] <author> J. Beck, </author> <title> "On size Ramsey numbers of paths, trees, and cycles," </title> <journal> J. Graph Theory, </journal> <volume> 7(1983), </volume> <pages> pp. 115-130. </pages>
Reference: [10] <author> A. Blum, A. Fiat, H. Karloff, Y. Rabani, </author> <type> unpublished manuscript. </type>
Reference-contexts: Specifically, the bga is a deterministic, on-line algorithm, and hence lower bounds of Awerbuch et al. [6] and Blum et al. <ref> [10] </ref> imply that it cannot achieve a polylogarith-mic approximation ratio in graphs such as trees and meshes. We show here that the bga is an O (log n log log n)- approximation in bounded-degree expanders. <p> Our result also identifies, to our knowledge, the first non-trivial class of graphs in which deterministic on-line algorithms can achieve a polylog-arithmic approximation ratio for the mdp; this is in contrast to the lower bounds of <ref> [6, 10] </ref>, as well as the (n " ) lower bound of Bartal, Fiat, and Leonardi that holds even for randomized on-line algorithms in certain graphs [8]. <p> If so, route (s i ; t i ) on such a path P i . Delete P i from G and iterate. As we mentioned above, lower bounds of <ref> [6, 10] </ref> show 3 that no deterministic on-line algorithm can obtain a polylogarithmic approximation ratio when the underlying graph is a tree or a mesh. Thus, this applies to the bga as well.
Reference: [11] <author> B. Bollobas, </author> <title> Extremal Graph Theory, </title> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: We say that a graph H is a minor of G if H can obtained from a subgraph of G by contracting edges; in this case, we say that G contains an H-minor. Minors appear in Kuratowski's famous theorem (see e.g. <ref> [11] </ref>), which characterizes planar graphs as precisely those which do not contain K 5 or K 3;3 as a minor; the exclusion of minors has since been used as a nice way to extend results for planar graphs to more general classes [2, 30], and as the basis for some very <p> Since the paths in O 0 are edge-disjoint, at most of the pairs routed by O 0 can have v 2 G as an endpoint. Thus, by Vizing's Theorem (cf. <ref> [11] </ref>), the pairs routed by O 0 can be partitioned into at most +1 partial permutations; let O 0 1 O 0 denote the set of paths corresponding to the largest of these partial permutations.
Reference: [12] <author> A. Broder, A. Frieze, E. Upfal, </author> <title> "Existence and construction of edge-disjoint paths on expander graphs," </title> <journal> SIAM J. Computing, </journal> <volume> 23(1994), </volume> <pages> pp. 976-989. </pages>
Reference-contexts: Many of the previous results on disjoint paths in expanders can be roughly classified into two groups: those based on random walks, and those based on mul-ticommodity flow. * Using random walks in expanders, Broder, Frieze, and Upfal <ref> [12] </ref> showed that there is a constant so that in n-node graphs with strong expansion guarantees, any set of up to O (n= log n) pairs of nodes can be connected on edge-disjoint paths; this strengthened earlier work of Peleg and Upfal [26]. <p> This is nearly linear time per commodity; it is thus a significant improvement over previous running times [22] for the multicommodity flow problem on expanders. Graph Minors. Finally, we show how the random-walk technique of Broder, Frieze, and Upfal <ref> [12] </ref>, which produces short, disjoint paths in expanders, can be used to obtain results on graph minor containment. <p> Moreover, we give a randomized polynomial-time algorithm, similar to that of <ref> [12] </ref>, which explicitly finds a contraction of the expander G to the smaller graph H. This result has the following immediate corollary. <p> This will imply the existence of an H-minor in G, as well as a randomized polynomial-time algorithm to construct the embedding. The construction and its analysis follow very closely the disjoint paths algorithm of Broder, Frieze, and Upfal <ref> [12] </ref>; in particular, most of the basic lemmas that we need have close parallels in their work. First of all, we can assume with only a loss in the constants that H is a 3-regular graph. <p> For each (a i ; b i ) 2 T , construct a bundle B (i) of m = (ln n) 2 paths P i;1 ; : : : ; P i;m connecting a i to b i , where each path is chosen via a random walk as in <ref> [12] </ref>: First choose a random midpoint x i;j according to . Then choose a random a i ! x ij trajectory W 0 ij (resp. <p> The pruning and the choice of vertices in Q guarantees that no two paths in different rows intersect near their endpoints. As in <ref> [12] </ref>, we use well-known bounds on the probability that a random walk starting at a fixed node visits a specified vertex in t steps, in order to bound the probability that two paths intersect when the walk is not close to the endpoints. <p> Thus we show that with high probability, no node in F has degree (ln n) 2 = ln ln n. We guarantee the existence of an independent transversal via the Lovasz Local Lemma, again following <ref> [12] </ref>. Consider the following probabilistic process: Choose a random path from the m=2 paths in each bundle B (i). Let A (i;j)(k;l) denote the "bad" event that (i; j) and (k; l) are in conflict and are both chosen.
Reference: [13] <author> A. Broder, A. Frieze, E. Upfal, </author> <title> "Existence and construction of low-congestion paths on expanders," </title> <note> to appear. </note>
Reference-contexts: Thus, we can charge unused short paths to paths constructed by the bga, and conclude that the bga must have constructed a lot of paths. In particular, we use a recent result of Broder, Frieze, and Upfal <ref> [13] </ref>, which for our purposes says the following: There are constants c 1 , c 2 , and c 3 such that any partial permutation in G of size at most c 1 n= log n can be routed with congestion at most c 2 log log n using paths of <p> We define O 00 1 to be this set of paths. (ii) If jO 0 1 j c 1 n= log n, then by the theorem of Broder, Frieze, and Upfal <ref> [13] </ref>, the pairs routed by O 0 1 can instead be routed on paths of length at most c 3 log n and congestion at most c 2 log log n. We define O 00 1 to be this set of paths. <p> The bound of Broder, Frieze, and Upfal <ref> [13] </ref> improves on a result of Leighton and Rao [24], which asserts that any set of O (n=(log n log log n) terminal pairs in G can be routed with congestion at most O (log log n) on paths of length O (log n). <p> The bga connects S if there is spanning tree on S using at most (t 1)L 4 edges. By viewing each tree as a union of paths, and using the result of Broder, Frieze, and Upfal <ref> [13] </ref>, one can show the following. The proof is strictly analogous to that of Theorem 1. Theorem 3 Let t be a constant, and suppose that each request consists of at most t vertices.
Reference: [14] <author> J. Friedman, N. Pippenger, </author> <title> "Expanding graphs contain all small trees," </title> <journal> Combinatorica, </journal> <volume> 7(1987), </volume> <pages> pp. 71-76. </pages>
Reference-contexts: A short proof of this is due to Lovasz [25, Ch. 10]. This result was generalized by Friedman and Pippenger <ref> [14] </ref> to show that if every set S of size at most 2k 2 has at least (d + 1)jSj neighboring vertices, then G contains every k-node tree with maximum degree d. <p> This result was generalized by Friedman and Pippenger [14] to show that if every set S of size at most 2k 2 has at least (d + 1)jSj neighboring vertices, then G contains every k-node tree with maximum degree d. However, these results <ref> [28, 25, 14] </ref> require the stronger notion of node expansion (rather than edge expansion), and their proofs seem to inherently require an expansion factor of at least 2. <p> Then H is a minor of G, and there is a randomized polynomial-time algorithm to find an embedding of H in G. We noted in the introduction that this has consequences for the construction of long, simple paths in graphs with constant edge expansion, for any positive constant (cf. <ref> [28, 25, 14] </ref>). In the remainder of this section, we sketch the method to construct an embedding of H in G, where H and G are as in Theorem 9.
Reference: [15] <author> N. Garg, V. Vazirani, M. Yannakakis, </author> <title> "Primal-dual approximation algorithms for integral flow and multicut in trees, with applications to matching and set cover," </title> <booktitle> Proc. International Colloq. on Automata, Languages, and Programming, </booktitle> <year> 1993, </year> <pages> pp. 64-75. </pages>
Reference: [16] <author> N. Karmarkar, </author> <title> "A new polynomial-time algorithm for linear programming," </title> <journal> Combinatorica, </journal> <volume> 4(1984). </volume>
Reference-contexts: The problem of finding the minimum-congestion flow for (G; T ) can be formulated as a linear program of polynomial size, and this has the following two consequences. First, it can be solved in polynomial time, by algorithms such as <ref> [17, 16] </ref>. Second, the optimal solution is well-characterized by linear programming duality. However, the linear programming algorithms for multicommod-ity flow are non-combinatorial, and their running times are fairly large. Thus, a number of faster, combinatorial (1+")-approximations have been developed for the problem.
Reference: [17] <author> L. Khachiyan, </author> <title> "A polynomial algorithm for linear programming," </title> <journal> Soviet Math. Dokl., </journal> <volume> 244(1979). </volume>
Reference-contexts: The problem of finding the minimum-congestion flow for (G; T ) can be formulated as a linear program of polynomial size, and this has the following two consequences. First, it can be solved in polynomial time, by algorithms such as <ref> [17, 16] </ref>. Second, the optimal solution is well-characterized by linear programming duality. However, the linear programming algorithms for multicommod-ity flow are non-combinatorial, and their running times are fairly large. Thus, a number of faster, combinatorial (1+")-approximations have been developed for the problem.
Reference: [18] <author> P. Klein, A. Agrawal, R. Ravi, S. Rao, </author> <title> "Approximation through multicommodity flow," </title> <booktitle> Proc. 31st IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1990. </year>
Reference: [19] <author> J. Kleinberg, E. Tardos, </author> <title> "Disjoint Paths in Densely Embedded Graphs," </title> <booktitle> Proc. 36th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1995, </year> <pages> pp. 52-61. </pages>
Reference-contexts: We investigate a closely related algorithm, the bounded greedy algorithm (bga), which only uses a free path if it is "sufficiently" short. The bga was first analyzed as one component of an on-line algorithm of the first author and Eva Tardos <ref> [19] </ref>; in that work, some (necessarily weak) bounds on its performance in general graphs were given.
Reference: [20] <author> F.T. Leighton, </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes, </title> <publisher> Morgan Kaufman, </publisher> <year> 1992. </year>
Reference-contexts: The development of many fundamental routing algorithms for hypercube-derived networks, for example, has been based heavily on the good expansion properties of such graphs <ref> [33, 3, 21, 20] </ref>. As such, the development of new techniques for working with expander graphs, and with the consequences of expansion at a general level, is of value both from a basic algorithmic point of view and within the context of network routing.
Reference: [21] <author> F.T. Leighton, B. Maggs, </author> <title> "Fast algorithms for routing around faults in multibutterflies and randomly wired splitter networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> 41(1992). </volume>
Reference-contexts: The development of many fundamental routing algorithms for hypercube-derived networks, for example, has been based heavily on the good expansion properties of such graphs <ref> [33, 3, 21, 20] </ref>. As such, the development of new techniques for working with expander graphs, and with the consequences of expansion at a general level, is of value both from a basic algorithmic point of view and within the context of network routing.
Reference: [22] <author> F.T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos, S. Tragoudas, </author> <title> "Fast approximation algorithms for the multicommodity flow problem," </title> <booktitle> Proc. 23rd ACM Symp. on Theory of Computing, </booktitle> <year> 1991. </year>
Reference-contexts: This is nearly linear time per commodity; it is thus a significant improvement over previous running times <ref> [22] </ref> for the multicommodity flow problem on expanders. Graph Minors. Finally, we show how the random-walk technique of Broder, Frieze, and Upfal [12], which produces short, disjoint paths in expanders, can be used to obtain results on graph minor containment. <p> However, the linear programming algorithms for multicommod-ity flow are non-combinatorial, and their running times are fairly large. Thus, a number of faster, combinatorial (1+")-approximations have been developed for the problem. The fastest general (1 + ")-approximation algorithm is due to Leighton et al. <ref> [22] </ref>, with a running time of O fl (k 2 mn), where k is the number of commodities. <p> The running time of the algorithm is O fl (d 2 km); thus, it has the potential to be much faster than that of <ref> [22] </ref> when d is small. Also, note that by uniformly scaling all demands and using binary search, one can apply the Awerbuch-Leighton algorithm to approximate -fl (G; T ) to within a factor of 1 + ".
Reference: [23] <author> F.T. Leighton, S. Rao, </author> <title> "An appoximate max-flow min-cut theorem for uniform multicommodity flow problems with applications to approximation algorithms," </title> <booktitle> Proc. 29th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1988. </year>
Reference-contexts: These techniques also provide a randomized on-line O (log 2 n)- approximation for the maximum disjoint paths problem in any bounded-degree expander. * The analysis of expansion properties via multicom-modity flow was initiated by Leighton and Rao <ref> [23] </ref>. Among many other results, they showed that given any bounded-degree n-node expander G, any n-node bounded degree graph H can be embedded in G with congestion and dilation O (log n). <p> We can obtain a slight strengthening of Theorem 1 in the case in which T is a permutation. We omit the proof. It is quite similar to the proof of Theorem 1, but relies on a theorem of Leighton and Rao <ref> [23] </ref> which in our case can be phrased as follows: There exist constants c 4 and c 5 such that every permutation in G can be routed with congestion at most c 4 log n, using paths of length at most c 5 log n.
Reference: [24] <author> F.T. Leighton, S. Rao, </author> <title> "Circuit switching: a multicom-modity flow based approach," </title> <booktitle> Proc. 9th International Parallel Processing Symposium, </booktitle> <year> 1995. </year>
Reference-contexts: The bound of Broder, Frieze, and Upfal [13] improves on a result of Leighton and Rao <ref> [24] </ref>, which asserts that any set of O (n=(log n log log n) terminal pairs in G can be routed with congestion at most O (log log n) on paths of length O (log n).
Reference: [25] <author> L. Lovasz, </author> <title> Combinatorial Problems and Exercises, </title> <publisher> North-Holland, </publisher> <year> 1979. </year>
Reference-contexts: If a graph G has the property that every set S of vertices of size at most k has at least 2jSj 1 neighboring vertices, then G contains a simple path of length k. A short proof of this is due to Lovasz <ref> [25, Ch. 10] </ref>. This result was generalized by Friedman and Pippenger [14] to show that if every set S of size at most 2k 2 has at least (d + 1)jSj neighboring vertices, then G contains every k-node tree with maximum degree d. <p> This result was generalized by Friedman and Pippenger [14] to show that if every set S of size at most 2k 2 has at least (d + 1)jSj neighboring vertices, then G contains every k-node tree with maximum degree d. However, these results <ref> [28, 25, 14] </ref> require the stronger notion of node expansion (rather than edge expansion), and their proofs seem to inherently require an expansion factor of at least 2. <p> Then H is a minor of G, and there is a randomized polynomial-time algorithm to find an embedding of H in G. We noted in the introduction that this has consequences for the construction of long, simple paths in graphs with constant edge expansion, for any positive constant (cf. <ref> [28, 25, 14] </ref>). In the remainder of this section, we sketch the method to construct an embedding of H in G, where H and G are as in Theorem 9.
Reference: [26] <author> D. Peleg, E. Upfal, </author> <title> "Disjoint paths on expander graphs," </title> <journal> Combinatorica, </journal> <volume> 9(1989), </volume> <pages> pp. 289-313. </pages>
Reference-contexts: random walks in expanders, Broder, Frieze, and Upfal [12] showed that there is a constant so that in n-node graphs with strong expansion guarantees, any set of up to O (n= log n) pairs of nodes can be connected on edge-disjoint paths; this strengthened earlier work of Peleg and Upfal <ref> [26] </ref>. Random walk techniques were subsequently employed in a randomized on-line algorithm of Raghavan and Upfal [29].
Reference: [27] <author> S. Plotkin, S. Rao, W. Smith, </author> <title> "Shallow excluded minors and improved graph decomposition," </title> <booktitle> Proc. 5th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: On the other hand, our result, which is weaker by a polylogarithmic factor, holds in a graph with edge expansion ff, for any constant ff &gt; 0. Our result is also related to work of Alon, Seymour, and Thomas [2] and Plotkin, Rao, and Smith <ref> [27] </ref> on the existence of large clique minors in graphs without small separators. The second of these papers shows that any bounded-degree expander contains a complete graph on ( p n= log n) nodes as a minor. <p> This is a somewhat larger bound for clique minors than is provided by our result, which only guarantees cliques of size ( p n= log O (1) n) as minors. However, <ref> [2, 27] </ref> do not show that expanders contain every graph with O (n= log O (1) ) nodes and edges as a minor. (It is worth noting that in order for a bounded-degree graph to contain every graph with k nodes and edges as a minor, it is not sufficient that
Reference: [28] <author> L. Posa, </author> <title> "Hamiltonian circuits in random graphs," </title> <journal> Discrete Math., </journal> <volume> 14(1976), </volume> <pages> pp. 359-364. </pages>
Reference-contexts: The existence of long simple paths in expanders has been a problem that has received some amount of attention; for example, a result of Posa <ref> [28] </ref> asserts the following. If a graph G has the property that every set S of vertices of size at most k has at least 2jSj 1 neighboring vertices, then G contains a simple path of length k. A short proof of this is due to Lovasz [25, Ch. 10]. <p> This result was generalized by Friedman and Pippenger [14] to show that if every set S of size at most 2k 2 has at least (d + 1)jSj neighboring vertices, then G contains every k-node tree with maximum degree d. However, these results <ref> [28, 25, 14] </ref> require the stronger notion of node expansion (rather than edge expansion), and their proofs seem to inherently require an expansion factor of at least 2. <p> Then H is a minor of G, and there is a randomized polynomial-time algorithm to find an embedding of H in G. We noted in the introduction that this has consequences for the construction of long, simple paths in graphs with constant edge expansion, for any positive constant (cf. <ref> [28, 25, 14] </ref>). In the remainder of this section, we sketch the method to construct an embedding of H in G, where H and G are as in Theorem 9.
Reference: [29] <author> P. Raghavan, E. Upfal, </author> <title> "Efficient all-optical routing," </title> <booktitle> Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <year> 1994. </year>
Reference-contexts: Random walk techniques were subsequently employed in a randomized on-line algorithm of Raghavan and Upfal <ref> [29] </ref>. They showed that in any bounded-degree expander graph, any set of terminal pairs in which each node appears at most once can be partitioned into O (log 2 n) subsets, each of which is routable on edge-disjoint paths. <p> We show here that the bga is an O (log n log log n)- approximation in bounded-degree expanders. Thus the bga gives what is currently the best approximation ratio for the mdp in bounded-degree expanders; as noted above, the techniques of Raghavan and Upfal <ref> [29] </ref> and Aumann and Rabani [4] provide O (log 2 n)- approximations.
Reference: [30] <author> N. Robertson, </author> <title> P.D. Seymour, "Graph Minors VIII. A Kuratowski theorem for general surfaces," </title> <journal> J. Combinatorial Theory Ser. B, </journal> <volume> 48(1990), </volume> <pages> pp. 255-288. </pages>
Reference-contexts: Minors appear in Kuratowski's famous theorem (see e.g. [11]), which characterizes planar graphs as precisely those which do not contain K 5 or K 3;3 as a minor; the exclusion of minors has since been used as a nice way to extend results for planar graphs to more general classes <ref> [2, 30] </ref>, and as the basis for some very deep results in both structural and algorithmic graph theory [31, 32]. We show the following.
Reference: [31] <author> N. Robertson, </author> <title> P.D. Seymour, "Graph Minors XIII. The disjoint paths problem," </title> <journal> J. Combinatorial Theory Ser. B, </journal> <volume> 63(1995), </volume> <pages> pp. 65-110. </pages>
Reference-contexts: not contain K 5 or K 3;3 as a minor; the exclusion of minors has since been used as a nice way to extend results for planar graphs to more general classes [2, 30], and as the basis for some very deep results in both structural and algorithmic graph theory <ref> [31, 32] </ref>. We show the following. For every ff &gt; 0 there is a number &gt; 0 such that the following holds: Every bounded-degree ff-expander graph G on n nodes contains every graph H with O (n= log n) nodes and edges as a minor.
Reference: [32] <author> N. Robertson, </author> <title> P.D. Seymour, "Graph Minors XX. Wagner's conjecture," </title> <note> submitted for publication. </note>
Reference-contexts: not contain K 5 or K 3;3 as a minor; the exclusion of minors has since been used as a nice way to extend results for planar graphs to more general classes [2, 30], and as the basis for some very deep results in both structural and algorithmic graph theory <ref> [31, 32] </ref>. We show the following. For every ff &gt; 0 there is a number &gt; 0 such that the following holds: Every bounded-degree ff-expander graph G on n nodes contains every graph H with O (n= log n) nodes and edges as a minor.
Reference: [33] <author> E. Upfal, </author> <title> "An O(log N ) deterministic packet routing scheme," </title> <booktitle> Proc. 21st ACM Symp. on Theory of Computing, </booktitle> <year> 1989. </year> <month> 10 </month>
Reference-contexts: The development of many fundamental routing algorithms for hypercube-derived networks, for example, has been based heavily on the good expansion properties of such graphs <ref> [33, 3, 21, 20] </ref>. As such, the development of new techniques for working with expander graphs, and with the consequences of expansion at a general level, is of value both from a basic algorithmic point of view and within the context of network routing.
References-found: 33

