URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1996/TR64.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: wuchi@cis.ohio-state.edu jrex@research.att.com  
Title: A Comparison of Bandwidth Smoothing Techniques for the Transmission of Prerecorded Compressed Video  
Author: Wu-chi Feng Jennifer Rexford 
Address: Columbus, OH 43210 Murray Hill, NJ 07974  
Affiliation: Dept. of Comp. and Info. Sci. Networking and Distributed Systems Lab The Ohio State University AT&T Labs Research  
Abstract: The transfer of prerecorded, compressed video requires multimedia services to support large fluctuations in bandwidth requirements on multiple time scales. Bandwidth smoothing techniques can reduce the burstiness of a variable-bit-rate stream by prefetching data at a series of fixed rates, simplifying the allocation of resources in video servers and the communication network. Given a fixed client-side prefetch buffer, several bandwidth smoothing algorithms have been introduced that are provably optimal under certain constraints. This paper presents a collection of metrics for comparing these smoothing algorithms and evaluating their cost- performance trade-offs. Due to the scarcity of available trace data, we have constructed a video capture testbed and generated a collection of twenty full-length, motion-JPEG encoded video clips. Using these video traces and a range of client buffer sizes, we investigate the interplay between the performance metrics through simulation experiments. The results highlight the unique strengths and weaknesses of each bandwidth smoothing algorithm and suggest possible avenues for future research.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. L. Gall, </author> <title> "MPEG: A video compression standard for multimedia applications," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, </volume> <pages> pp. 46-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: 1 Introduction Many emerging multimedia applications, such as digital libraries and video-on-demand services, rely on the efficient transfer of prerecorded video. Effective compression techniques, such as MPEG <ref> [1] </ref> and motion-JPEG, can substantially reduce the resource requirements for storing and transmit <p>- ting video streams. However, compressed video traffic typically exhibits significant burstiness on multiple time scales, due to the frame structure of the compression algorithm as well as natural variations within and between scenes [2-4]. <p> For a typical video source, a MPEG encoding would have smaller average frame sizes and larger short-term burstiness, due the mixture of interpolated (I), predictive (P), and bidirectional (B) frames <ref> [1] </ref>. A video server could limit the effects of this short-term variation through modest prefetching into a small client buffer. Consequently, the relative performance of bandwidth smoothing algorithms is more sensitive to the medium-term and long-term burstiness in the underlying video stream, particularly for a larger client buffer.
Reference: [2] <author> E. P. Rathgeb, </author> <title> "Policing of realistic VBR video traffic in an ATM network," </title> <journal> International Journal of Digital and Analog Communication Systems, </journal> <volume> vol. 6, </volume> <pages> pp. 213-226, </pages> <month> October-December </month> <year> 1993. </year>
Reference: [3] <author> W. E. Leland, M. S. Taqqu, W. Willinger, and D. V. Wilson, </author> <title> "On the self-similar nature of Ethernet traffic (extended version)," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 1-15, </pages> <month> February </month> <year> 1994. </year>
Reference: [4] <author> M. Grossglauser, S. Keshav, and D. Tse, "RCBR: </author> <title> A simple and efficient service for multiple time-scale traffic," </title> <booktitle> in Proceedings of ACM SIGCOMM, </booktitle> <pages> pp. 219-230, </pages> <month> August/September </month> <year> 1995. </year>
Reference-contexts: Minimizing the number of rate changes can also limit the cost of negotiating with the network <ref> [4] </ref> to reserve link bandwidth for transporting the video stream 2 . Figure 8 compares the CBA, MCBA, MVBA, and PCRTT algorithms based on the number of bandwidth changes in the server transmission plan for each of the clips in the video library. <p> This reservation plan could have fewer rate changes than the underlying transmission plan, at the expense of reserving excess link bandwidth <ref> [4, 8] </ref>. 13 required for the various smoothing algorithms as a function of the client buffer size. 14 (a) Segment of Jurassic Park (b) MCBA and MVBA plans MVBA plans on a short segment of Jurassic Park.
Reference: [5] <author> W. Feng and S. Sechrest, </author> <title> "Smoothing and buffering for delivery of prerecorded compressed video," </title> <booktitle> in Proceedings of the IS&T/SPIE Symposium on Multimedia Computing and Networking, </booktitle> <pages> pp. 234-242, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: The existing bandwidth smoothing algorithms produce transmission plans with different lengths m and different rate requirements in each run, depending on what metrics they attempt to optimize. Specifically, we compare four algorithms that create plans that * minimize the number of bandwidth increases <ref> [5, 6] </ref>, * minimize the total number of bandwidth changes [7], * minimize the variability of the bandwidth requirements [8], or * consist of periodic bandwidth runs [9]. The following section describes these bandwidth smoothing algorithms, with an emphasis on how they strive to optimize these specific metrics. <p> For example, the critical bandwidth allocation (CBA) algorithm <ref> [5, 6] </ref> starts a rate decrease at the leftmost point on the frontier, where the trajectory for run j hits the F under curve; for rate increases, the CBA algorithm performs a search along the frontier to locate the starting point that allows the next trajectory to extend as far as
Reference: [6] <author> W. Feng and S. Sechrest, </author> <title> "Critical bandwidth allocation for delivery of compressed video," </title> <journal> Computer Communications, </journal> <volume> vol. 18, </volume> <pages> pp. 709-717, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: The existing bandwidth smoothing algorithms produce transmission plans with different lengths m and different rate requirements in each run, depending on what metrics they attempt to optimize. Specifically, we compare four algorithms that create plans that * minimize the number of bandwidth increases <ref> [5, 6] </ref>, * minimize the total number of bandwidth changes [7], * minimize the variability of the bandwidth requirements [8], or * consist of periodic bandwidth runs [9]. The following section describes these bandwidth smoothing algorithms, with an emphasis on how they strive to optimize these specific metrics. <p> For example, the critical bandwidth allocation (CBA) algorithm <ref> [5, 6] </ref> starts a rate decrease at the leftmost point on the frontier, where the trajectory for run j hits the F under curve; for rate increases, the CBA algorithm performs a search along the frontier to locate the starting point that allows the next trajectory to extend as far as <p> This results in a transmission plan that has the smallest possible peak bandwidth requirement (minimizes max j fr j g) and the minimum number of bandwidth increases <ref> [6] </ref>. A CBA plan does not necessarily have the minimum number of bandwidth decreases, since the algorithm always selects the leftmost starting point, independent of shape of the underflow and overflow curves.
Reference: [7] <author> W. Feng, F. Jahanian, and S. Sechrest, </author> <title> "Optimal buffering for the delivery of compressed pre-recorded video," </title> <booktitle> in Proceedings of the IASTED/ISMM International Conference on Networks, </booktitle> <month> January </month> <year> 1995. </year> <note> Extended version to appear in ACM/Springer-Verlag Multimedia Systems Journal. </note>
Reference-contexts: Specifically, we compare four algorithms that create plans that * minimize the number of bandwidth increases [5, 6], * minimize the total number of bandwidth changes <ref> [7] </ref>, * minimize the variability of the bandwidth requirements [8], or * consist of periodic bandwidth runs [9]. The following section describes these bandwidth smoothing algorithms, with an emphasis on how they strive to optimize these specific metrics. <p> A CBA plan does not necessarily have the minimum number of bandwidth decreases, since the algorithm always selects the leftmost starting point, independent of shape of the underflow and overflow curves. To minimize the number of rate decreases, the minimum changes bandwidth allocation (MCBA) algorithm <ref> [7] </ref> extends the CBA scheme to perform the linear search operation on all rate changes. This results in a transmission plan with the smallest possible number of rate changes (minimizes m), as well as the minimum peak bandwidth requirement. <p> limit the algorithm's ability to employ prefetching to smooth the large frames in the underlying compressed video stream. 4.2 Number of Bandwidth Changes To reduce the complexity of the server and client sites, a bandwidth smoothing algorithm could strive to minimize m, the number of runs in the transmission schedule <ref> [7] </ref>, since each bandwidth change requires the sites to modify the I/O rate for the stream; also, smaller values of m reduce the 12 storage requirements for the bandwidth plans, although this is typically small in comparison to the actual video data.
Reference: [8] <author> J. D. Salehi, Z.-L. Zhang, J. F. Kurose, and D. Towsley, </author> <title> "Supporting stored video: Reducing rate variability and end-to-end resource requirements through optimal smoothing," </title> <booktitle> in Proceedings of ACM SIGMETRICS, </booktitle> <pages> pp. 222-231, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: Specifically, we compare four algorithms that create plans that * minimize the number of bandwidth increases [5, 6], * minimize the total number of bandwidth changes [7], * minimize the variability of the bandwidth requirements <ref> [8] </ref>, or * consist of periodic bandwidth runs [9]. The following section describes these bandwidth smoothing algorithms, with an emphasis on how they strive to optimize these specific metrics. <p> This results in a transmission plan with the smallest possible number of rate changes (minimizes m), as well as the minimum peak bandwidth requirement. Instead of minimizing m, a bandwidth smoothing algorithm can strive to reduce the variability in the rate requirements across the lifetime of the transmission plan <ref> [8] </ref>; for the remainder of the paper, we refer to this approach as the minimum variability bandwidth allocation (MVBA) algorithm. To 5 MCBA, and MVBA algorithms choose the starting point for a bandwidth run, based on the trajectory for the previous run. <p> This reservation plan could have fewer rate changes than the underlying transmission plan, at the expense of reserving excess link bandwidth <ref> [4, 8] </ref>. 13 required for the various smoothing algorithms as a function of the client buffer size. 14 (a) Segment of Jurassic Park (b) MCBA and MVBA plans MVBA plans on a short segment of Jurassic Park. <p> To improve the likelihood of successful rate-change operations, the smoothing algorithm can minimize the variability of the bandwidth requirements in each time slot (standard deviation of fc 0 ; c 1 ; : : :; c n1 g), resulting in a smoother plan <ref> [8] </ref>. Since the video clips have different average rate requirements, varying from 1:51 to 3:95 megabits/second, Figure 10 plots the coefficient of variation stdevfc 0 ; c 1 ; : : : ; c n1 g 1 P n1 to normalize the variability metric across the different streams.
Reference: [9] <author> J. M. McManus and K. W. Ross, </author> <title> "Video on demand over ATM: Constant-rate transmission and transport," </title> <booktitle> in Proceedings of IEEE INFOCOM, </booktitle> <pages> pp. 1357-1362, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Specifically, we compare four algorithms that create plans that * minimize the number of bandwidth increases [5, 6], * minimize the total number of bandwidth changes [7], * minimize the variability of the bandwidth requirements [8], or * consist of periodic bandwidth runs <ref> [9] </ref>. The following section describes these bandwidth smoothing algorithms, with an emphasis on how they strive to optimize these specific metrics. For an extensive performance comparison, we have generated a library of twenty full-length, motion-JPEG encoded video clips, digitized using a PC-based video capture testbed, as described in Section 3. <p> The MVBA and CBA algorithms handle bandwidth decreases in the same manner, while an CBA plan more closely resembles an MCBA plan on rate increases. In contrast to the CBA, MCBA, and MVBA algorithms, the piecewise constant rate transmission and transport (PCRTT) algorithm <ref> [9] </ref> creates bandwidth allocation plans by dividing the video stream into fixed-size intervals.
Reference: [10] <author> D. Anderson, Y. Osawa, and R. Govindan, </author> <title> "A file system for continuous media," </title> <journal> ACM Transactions on Computer Systems, </journal> <pages> pp. 311-337, </pages> <month> November </month> <year> 1992. </year>
Reference: [11] <author> D. Gemmell, J. Vin, D. Kandlur, P. Rangan, and L. Rowe, </author> <title> "Multimedia storage servers: A tutorial," </title> <journal> IEEE Computer Magazine, </journal> <volume> vol. 28, </volume> <pages> pp. 40-49, </pages> <month> May </month> <year> 1995. </year>
Reference: [12] <author> D. Kandlur, M. Chen, and Z. Shae, </author> <title> "Design of a multimedia storage server," </title> <booktitle> in Proceedings of the IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1994. </year> <month> 21 </month>
Reference: [13] <author> P.Lougher and D. Shepard, </author> <title> "The design of a storage server for continuous media," </title> <journal> The Com-puter Journal, </journal> <volume> vol. 36, </volume> <pages> pp. 32-42, </pages> <month> February </month> <year> 1993. </year>
Reference: [14] <author> C. Federighi and L. Rowe, </author> <title> "A distributed hierarchical storage manager for a video-on-demand system," </title> <booktitle> in Proceedings of the IS&T/SPIE Symposium on Electronic Imaging Science and Technology, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: Video servers typically store prerecorded video on large, fast disks [10-13] and may also include tertiary storage, such as tapes or optical jukeboxes, for holding less frequently requested data <ref> [14] </ref>. A network connects the video servers to the client sites through one or more communication links; the network can help ensure continuous delivery of the smoothed video data by including support for rate or delay guarantees [15, 16], based on resource reservation requests from the video server.
Reference: [15] <author> C. Aras, J. Kurose, D. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: A network connects the video servers to the client sites through one or more communication links; the network can help ensure continuous delivery of the smoothed video data by including support for rate or delay guarantees <ref> [15, 16] </ref>, based on resource reservation requests from the video server.
Reference: [16] <author> H. Zhang, </author> <title> "Service disciplines for guaranteed performance service in packet-switching net-works," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 83, </volume> <pages> pp. 1374-1396, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: A network connects the video servers to the client sites through one or more communication links; the network can help ensure continuous delivery of the smoothed video data by including support for rate or delay guarantees <ref> [15, 16] </ref>, based on resource reservation requests from the video server.
Reference: [17] <author> W. Feng, </author> <title> Video-On-Demand Services: Efficient Transportation and Decompression of VariableBit-Rate Video. </title> <type> PhD thesis, </type> <institution> University of Michigan, </institution> <month> April </month> <year> 1996. </year>
Reference-contexts: However, most studies of video transmission techniques evaluate a small number of compressed video clips, due to the scarcity of publicly-available traces. To facilitate a more comprehensive evaluation of the smoothing algorithms, we have generated a library of full-length, motion-JPEG encoded video traces 1 using a PC-based video-capture testbed <ref> [17] </ref>. 3.1 Video Capture Testbed Efficiently gathering large amounts of video trace data requires hardware support for video compression. The video capture testbed consists of a Pioneer Laser Disc player, a MiroVideo DC1tv capture board, and a Pentium-90 processor with 32 megabytes of memory. <p> For the seminar video, the trace shows that a few smaller frames occur every minute or two, corresponding to brief intervals with an empty screen, when the speaker changes transparencies. Plots for the other video traces are shown in reference <ref> [17] </ref>. 10 4 Performance Comparison Using the traces from the video library, this section compares bandwidth smoothing algorithms based on a collection of performance metrics.
Reference: [18] <author> G. K. Wallace, </author> <title> "The JPEG still picture transmission standard," </title> <journal> Communications of the ACM, </journal> <volume> vol. 34, </volume> <pages> pp. 30-44, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: The MiroVideo Capture board is a motion-JPEG compression board containing the C-Cube Microsystems' motion-JPEG chip, the CL550. The motion-JPEG algorithm compresses each video frame using the JPEG still- picture standard <ref> [18] </ref>. The MiroVideo board can digitize the frames at 640 fi 480 pixels and then subsample them to 320 fi 240 pixels with guaranteed VHS picture quality. By setting options on this board, the testbed can vary the quality of the video encoding. <p> The three versions of E.T. permit the simulation experiments in Section 4 to study the effectiveness of bandwidth smoothing techniques as a function of video quality. The remainder of the video traces in Table 1 have 0:94 bits-per-pixel, which corresponds to "excellent" picture quality <ref> [18] </ref>. To broaden the collection of traces, the library also includes a handful of sources from video cassette tapes. The NCAA Final Four video is a documentary describing the 1993 NCAA Final Four basketball tournament, resulting in many scenes with a large amount of detail.
Reference: [19] <author> L. Rowe, K. Patel, B. Smith, and K. Liu, </author> <title> "MPEG video in software: </title> <booktitle> Representation, transmis-sion, and playback," in Proceedings of the High Speed Networking and Multimedia Computing Symposium, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: For example, with a layered encoding of the video stream, the server could reduce the transmission rate by sending only the higher priority components of the stream <ref> [19, 20] </ref>.
Reference: [20] <author> P. Pancha and M. E. Zarki, </author> <title> "Prioritized transmission of variable bit rate MPEG video," </title> <booktitle> in Proceedings of IEEE GLOBECOM, </booktitle> <pages> pp. 1135-1139, </pages> <year> 1992. </year>
Reference-contexts: For example, with a layered encoding of the video stream, the server could reduce the transmission rate by sending only the higher priority components of the stream <ref> [19, 20] </ref>.
Reference: [21] <author> D. Ferrari, A. Gupta, and G. Ventre, </author> <title> "Distributed advance reservation of real-time connec-tions," </title> <booktitle> in Proceedings of the International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pp. 15-26, </pages> <month> April </month> <year> 1994. </year> <month> 22 </month>
Reference-contexts: As a result, a bandwidth smoothing algorithm may try to enforce a lower bound on the minimum time between rate changes for each stream to improve the scalability of the server architecture. In addition, for systems that have in-advance reservations, having periodic bandwidth allocation intervals simplifies the reservation algorithms <ref> [21] </ref>. Since the smoothing algorithms have different average run lengths, we measure stdevft 0 ; t 1 ; : : : ; t m1 g 1 P m1 to compare the "periodicity" of bandwidth requests.
References-found: 21

