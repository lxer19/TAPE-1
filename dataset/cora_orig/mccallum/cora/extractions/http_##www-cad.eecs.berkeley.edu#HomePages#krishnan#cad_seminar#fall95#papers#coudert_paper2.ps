URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall95/papers/coudert_paper2.ps
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/krishnan/cad_seminar/fall95/fall95.html
Root-URL: http://www.cs.berkeley.edu
Title: New Algorithms for Gate Resizing: A Comparative Study  
Abstract: Although at the end of the synthesis process, gate resizing still has a significant impact on the delay, power dissipation, and area of the final circuit. Exploiting the diversity of a library to optimize some cost functions has been previously addressed with a number of assumptions that makes these approaches difficult to apply on real-life circuits. This paper compares five known and new gate sizing algorithms, and identifies a new one as clearly superior to the others. The comparison will be done by studying constraint free delay optimization, and power optimization under delay constraints. The optimization techniques studied in this paper do not assume any continuous parameter. They are indeed oriented to a pure combinatorial optimization, which is the fundamental aspect of the gate sizing problem. Moreover, they have to address non-linear, non-unimodal, constrained optimization to cope with the non-linearity of the objective function, e.g., the delay. And finally, they have to provide a high quality result within a reasonable CPU time, e.g., 10000 nodes in 2 hours. We will show that a new general purpose optimization algorithm meets this requirements.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Auvergne, N. Azemard, D. Deschacht, M. Robert, </author> <title> "Input Waveform Slope Effects in CMOS Delays", </title> <journal> in IEEE Journal on Solid-State Circuits, </journal> <pages> 25-6, pp. 1588-1590, </pages> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17].
Reference: [2] <author> M. Berkelaar, J. Jess, </author> <title> "Gate Sizing in MOS Digital Circuits with Linear Programming", </title> <booktitle> in Proc. of EDAC'90, </booktitle> <pages> pp. 217-221, </pages> <year> 1990. </year>
Reference-contexts: Early work on gate (re)sizing can be found in [24, 15]. TILOS [7] uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. In <ref> [2] </ref> a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method.
Reference: [3] <author> M. Borah, R. M. Owens, M. J. Irwin, </author> <title> "Transistor Sizing for Minimizing Power Consumption of CMOS Circuits under Delay Constraint", </title> <booktitle> in Proc. of 1995 Int'l Symposium on Low Power Design, </booktitle> <pages> pp. 167-172, </pages> <address> Dana Point CA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in <ref> [24, 11, 26, 3] </ref> to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems. <p> This raises the need for a method that can avoid being trapped in a suboptimal solution. A widely used method for gate resizing is a greedy algorithm that iteratively resizes nodes on or near the critical path of the network using various heuristics <ref> [8, 27, 7, 3, 15] </ref>, most of them based on gradient computation. This approach has shown to work relatively well so far.
Reference: [4] <author> M. A. Cirit, </author> <title> "Transistor Sizing in CMOS Circuits", </title> <booktitle> in Proc. of 24th DAC, </booktitle> <pages> pp. 121-124, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in <ref> [4, 12, 18] </ref> and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [5] <author> DesignPower, </author> <title> Starter Kit, </title> <journal> Synopsys. </journal> <volume> 12 </volume>
Reference-contexts: The reader is referred to <ref> [19, 5] </ref> 2 i.e., the worst slack is not allowed to be smaller than some lower bound. 8 function PowerOptimizeUnderDelayConstraints (N; S); DelayOptimize (N; S); if S (N ) &lt; 0 then S = S S (N ); GoToLocalMinimum (N; [NEG (S); P ]; [NEG (S); RelaxPower]); for an overview on
Reference: [6] <author> S. Devadas, A. Ghosh, K. Keutzer, </author> <title> Logic Synthesis, </title> <publisher> McGraw-Hill, </publisher> <year> 1994. </year>
Reference-contexts: If the smallest slack is positive, the delay constraints are met. If one does not take into account the logical function of the gate, the (topological) delay computation described above is pessimistic. Some delay paths are false paths because they cannot logically exists. The reader is referred to <ref> [6, pp. 225-289] </ref> for more details on delay computation, path sensitization, and false paths. To simplify the presentation, we will consider delay optimization as maximizing the smallest slack of the design. We denote N a network, and n a node of a network.
Reference: [7] <author> J. P. Fishburn, A. E. Dunlop, "TILOS: </author> <title> a Posynomial Programming Approach to Transistor Sizing", </title> <booktitle> In Proc. of ICCAD'85, </booktitle> <pages> pp. 326-328, </pages> <address> Santa Clara CA, </address> <month> November </month> <year> 1985. </year>
Reference-contexts: Gate sizing has been recognized as a final optimization step that has a significant impact on the delay, power, and area of the final circuit. Early work on gate (re)sizing can be found in [24, 15]. TILOS <ref> [7] </ref> uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. <p> This raises the need for a method that can avoid being trapped in a suboptimal solution. A widely used method for gate resizing is a greedy algorithm that iteratively resizes nodes on or near the critical path of the network using various heuristics <ref> [8, 27, 7, 3, 15] </ref>, most of them based on gradient computation. This approach has shown to work relatively well so far.
Reference: [8] <author> J. P. Fishburn, "LATTIS: </author> <title> an Iterative Speedup Heuristics for Mapped Logic", </title> <booktitle> In Proc. of 29th DAC, </booktitle> <pages> pp. 488-491, </pages> <address> Anaheim CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: This raises the need for a method that can avoid being trapped in a suboptimal solution. A widely used method for gate resizing is a greedy algorithm that iteratively resizes nodes on or near the critical path of the network using various heuristics <ref> [8, 27, 7, 3, 15] </ref>, most of them based on gradient computation. This approach has shown to work relatively well so far.
Reference: [9] <author> R. Fletcher, </author> <title> Practical Methods of Optimization, </title> <publisher> John Wiley & Sons, </publisher> <year> 1987. </year>
Reference-contexts: A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers <ref> [14, 10, 9] </ref>. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [10] <author> A. V. Fiacco, G. P. McCormick, </author> <title> Nonlinear Programming, </title> <publisher> John Wiley & Sons, </publisher> <address> NY, </address> <year> 1968. </year>
Reference-contexts: A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers <ref> [14, 10, 9] </ref>. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [11] <author> B. Hoppe, G. Neuendorf, D. Schmitt-Landsiedel, </author> <title> "Optimization of High-Speed CMOS Logic Circuits with Analytical Models for Signal Delay, Chip Area and Dynamic Power Dissipation", </title> <journal> in IEEE Trans. on CAD, </journal> <pages> 9-3, pp. 236-246, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in <ref> [24, 11, 26, 3] </ref> to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [12] <author> K. S. Hedlund, "AESOP: </author> <title> A Tool for Automated Transistor Sizing", </title> <booktitle> in Proc. of 24th DAC, </booktitle> <pages> pp. 114-120, </pages> <month> June </month> <year> 1987. </year>
Reference-contexts: In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in <ref> [4, 12, 18] </ref> and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [13] <author> R. Hooke, T. A. Jeeves, </author> <title> "Direct Search Solution of numerical and statistical Problems", </title> <journal> in Journal of the ACM, </journal> <pages> 8-2, pp. 212-229, </pages> <year> 1961. </year> <month> 13 </month>
Reference: [14] <author> H. W. Kuhn, A. W. Tucker, </author> <title> "Nonlinear Programming", </title> <booktitle> in Proc. of 2nd Berkeley Symposium on Mathematical Statistics and Probability, </booktitle> <editor> J. Neyman Ed., </editor> <publisher> Univ. of California Press, </publisher> <year> 1951. </year>
Reference-contexts: A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers <ref> [14, 10, 9] </ref>. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [15] <author> C. M. Lee, H. Soukup, </author> <title> "An Algorithm for CMOS Timing and Area Optimization", </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <pages> 19-5, pp. 781-787, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: Gate sizing has been recognized as a final optimization step that has a significant impact on the delay, power, and area of the final circuit. Early work on gate (re)sizing can be found in <ref> [24, 15] </ref>. TILOS [7] uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. <p> This raises the need for a method that can avoid being trapped in a suboptimal solution. A widely used method for gate resizing is a greedy algorithm that iteratively resizes nodes on or near the critical path of the network using various heuristics <ref> [8, 27, 7, 3, 15] </ref>, most of them based on gradient computation. This approach has shown to work relatively well so far.
Reference: [16] <institution> Motorola HDC Series Design Manual. </institution>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17].
Reference: [17] <author> A. Martinez, </author> <title> "Automated Library Characterization and Timing Model Accuracy Issues when Interfacing to Different CAD Tools", </title> <publisher> Hewlett-Packard Company, </publisher> <address> Santa Clara CA. </address>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17]. <p> The reader is referred to [1, 29, 22, 16, 25, 17] for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations <ref> [17] </ref>. We will use such a table lookup based approach, which is within 3% of SPICE. Delay constraints can be set between any two points of the network.
Reference: [18] <author> D. P. Marple, </author> <title> "Transistor Size Optimization in the Tailor Layout System", </title> <booktitle> in Proc. of 26th DAC, </booktitle> <pages> pp. 43-48, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in <ref> [4, 12, 18] </ref> and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in [24, 11, 26, 3] to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [19] <author> F. N. Najm, </author> <title> "A Survey of Power Estimation Techniques in VLSI Circuits", </title> <journal> in IEEE Trans. on VLSI Systems, </journal> <pages> 2-4, pp. 446-455, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: The reader is referred to <ref> [19, 5] </ref> 2 i.e., the worst slack is not allowed to be smaller than some lower bound. 8 function PowerOptimizeUnderDelayConstraints (N; S); DelayOptimize (N; S); if S (N ) &lt; 0 then S = S S (N ); GoToLocalMinimum (N; [NEG (S); P ]; [NEG (S); RelaxPower]); for an overview on
Reference: [20] <author> J. A. Nelder, R. Mead, </author> <title> "A Simplex Method for Function Minimization", </title> <journal> in Computer Journal, </journal> <volume> 7, </volume> <year> 1965. </year>
Reference-contexts: Cost (reflection) &lt; Cost (worst ) f sols = sols fworstg [ freflectiong; g else f contraction = centroid + fl (centroid worst); if Cost (contraction) &lt; Cost (worst) sols = sols fworst g [ contraction; else ShrinkOrBloat (sols); g g until StoppingCondition (); 2.5 Polytope Algorithm The Polytope Algorithm <ref> [28, 20] </ref> is sketched in Figure 2 (we use linear space like notations to express compositions of several configurations). First, a population of m configurations (a polytope made of m vertices) is generated by perturbating the initial configuration.
Reference: [21] <author> P. Penfield, J. Rubinstein, </author> <title> "Signal Delay in RC Tree Networks", </title> <booktitle> in Proc. of 2nd Caltech VLSI Conference, </booktitle> <pages> pp. 269-283, </pages> <month> March </month> <year> 1981. </year>
Reference-contexts: Gate sizing has been recognized as a final optimization step that has a significant impact on the delay, power, and area of the final circuit. Early work on gate (re)sizing can be found in [24, 15]. TILOS [7] uses a RC delay model <ref> [21] </ref>, which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model.
Reference: [22] <author> R. W. Phelps, </author> <title> "Advanced Library Characterization for High Performance ASIC", </title> <institution> Texas Instruments, Inc., Dallas TX. </institution>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17].
Reference: [23] <author> M. J. D. Powell, </author> <title> "An Efficient Method for Finding the Minimum of a Function of Several Variables without Calculating Derivatives", </title> <journal> in Computer Journal, </journal> <pages> 7-4, pp. 303-307, </pages> <year> 1964. </year>
Reference: [24] <author> A. E. Ruehli, P. K. Wolff, G. Goertzel, </author> <title> "Analytical Power/Timing Optimization Technique for Digital System", </title> <booktitle> in Proc. of 14th DAC, </booktitle> <pages> pp. 142-146, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: Gate sizing has been recognized as a final optimization step that has a significant impact on the delay, power, and area of the final circuit. Early work on gate (re)sizing can be found in <ref> [24, 15] </ref>. TILOS [7] uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. <p> A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in <ref> [24, 11, 26, 3] </ref> to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [25] <author> T. Sakurai, A. R. </author> <title> Newton, "Delay Analysis of Series-Connected MOSFET Circuits", </title> <journal> in IEEE Journal of Solid-State Circuits, </journal> <pages> 26-2, pp. 122-131, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17].
Reference: [26] <author> S. S. Sapatnekar, V. B. Rao, P. M. Vaidya, S. M. Kang, </author> <title> "An Exact Solution to the Transistor Sizing Problem for CMOS Circuits Using Convex Optimization", </title> <journal> in IEEE Trans. on CAD, </journal> <pages> 12-11, pp. 1621-1634, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: Early work on gate (re)sizing can be found in [24, 15]. TILOS [7] uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation <ref> [27, 26] </ref>. In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. <p> Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation [27, 26]. In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in <ref> [26] </ref>, and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers [14, 10, 9]. <p> A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. Gate sizing has also been formulated as nonlinear programming in [4, 12, 18] and solved with Lagrangian multipliers [14, 10, 9]. Analytical delay/power/area models or continuous resizing are used in <ref> [24, 11, 26, 3] </ref> to avoid facing the combinatorial explosion, or to fill the lack of first and second derivatives. These approaches suffer from several problems.
Reference: [27] <author> J. M. Shyu, A. Sangiovanni-Vincentelli, J. P. Fishburn, A. E. Dunlop, </author> <title> "Optimization-Based Transistor Sizing", </title> <journal> in IEEE Journal of Solid State Circuits, </journal> <pages> 23-2, pp. 400-409, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: Early work on gate (re)sizing can be found in [24, 15]. TILOS [7] uses a RC delay model [21], which enables the expression of delay and area as posynomials. Geometric programming or heuristics based greedy approaches can be used to solve such a posynomial formulation <ref> [27, 26] </ref>. In [2] a linear programming formulation of gate sizing is obtained thanks to a piecewise linear delay model. A convex programming formulation based on pseudo-posynomial is presented in [26], and solved using an interior point method. <p> This raises the need for a method that can avoid being trapped in a suboptimal solution. A widely used method for gate resizing is a greedy algorithm that iteratively resizes nodes on or near the critical path of the network using various heuristics <ref> [8, 27, 7, 3, 15] </ref>, most of them based on gradient computation. This approach has shown to work relatively well so far.
Reference: [28] <author> W. Spendley, G. R. Hext, F. R. Himsworth, </author> <title> "Sequential Application of Simplex Designs in Optimization and Evolutionary Operation", </title> <journal> in Technometrics, </journal> <volume> 4, </volume> <year> 1962. </year>
Reference-contexts: Cost (reflection) &lt; Cost (worst ) f sols = sols fworstg [ freflectiong; g else f contraction = centroid + fl (centroid worst); if Cost (contraction) &lt; Cost (worst) sols = sols fworst g [ contraction; else ShrinkOrBloat (sols); g g until StoppingCondition (); 2.5 Polytope Algorithm The Polytope Algorithm <ref> [28, 20] </ref> is sketched in Figure 2 (we use linear space like notations to express compositions of several configurations). First, a population of m configurations (a polytope made of m vertices) is generated by perturbating the initial configuration.
Reference: [29] <author> G. Zewi, U. Barkai, Z. Becker, J. Ben-Simon, E. Kadar, </author> <title> "An Accurate Slope-Dependent Delay Model", </title> <booktitle> in Proc. of TAU'90, </booktitle> <address> Haifa, Israel, </address> <year> 1990. </year> <pages> 14 15 </pages>
Reference-contexts: The reader is referred to <ref> [1, 29, 22, 16, 25, 17] </ref> for a complete presentation of some delay models. An extensive study of different input transition time sensitive delay models shows that a table lookup approach is more accurate than multi-coefficient (linear, polynomial, or posynomial) approximations [17].
References-found: 29

