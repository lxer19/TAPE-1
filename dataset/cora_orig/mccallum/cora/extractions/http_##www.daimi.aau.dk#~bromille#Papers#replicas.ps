URL: http://www.daimi.aau.dk/~bromille/Papers/replicas.ps
Refering-URL: http://www.daimi.aau.dk/~bromille/Papers/index.html
Root-URL: http://www.daimi.aau.dk
Title: The Complexity of Finding Replicas Using Equality Tests. )+O(n) equality tests are needed in the
Author: G S Frandsen and P B Miltersen and S Skyum 
Note: 2  2  
Affiliation: Computer Science Department, Aarhus University  
Abstract: We prove (for fixed k) that at least 1 k1 ( n 2 ) O(n) equality tests and no more than 2 k ( n compared to known results. We give tighter bounds for k = 3. Introduction 
Abstract-found: 1
Intro-found: 1
Reference: [Bol78] <author> Bollobas, B., </author> <title> Extremal Graph Theory. </title> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: We need a lower bound on the number of probes for which the information remains nonconclusive. It is implied by the following result: Fact 1 (Consequence of Turan's theorem <ref> [Bol78, p. 293] </ref>) Let t q (n) = ( n 2 ) i=0 ( n i 2 ), where n i = b n+i q c. Every graph with n vertices and more than t k1 (n) edges contains a k-clique.
Reference: [CaMN91] <author> Campbell, D. and McNeill, T., </author> <title> Finding a majority when sorting is not available. </title> <note> The Computer Journal 34 (1991) 186. </note>
Reference-contexts: Introduction When given n elements it is often possible to sort them according to bit string representation and hence decide which elements are identical in time O (n log n). However, <ref> [CaMN91] </ref> mentions applications, where an equivalence relation is available, but it can not be extended to a total order on the bit representation. We mention one of their many examples. <p> This result determines the fraction of pairs that must be compared in the worst case up to 3 12 = 1 For general k the literature contains a single result, C (k; n) 2b n k cn <ref> [CaMN91] </ref>. We have improved this result by almost a factor 2, and obtain C (k; n) (1 + b n k c)n. We have also found a general lower bound.
Reference: [FiSa82] <author> Fischer, M. J. and Salzburg S. L., </author> <title> Solution to problem 81-5. </title> <note> Journal of Algorithms 3 (1982) 376-379. </note>
Reference-contexts: Earlier special results have focused on determining a majority element, and the exact complexity E (d n+1 2 e; n) = C (d n+1 2 (n 1)c was found independently by <ref> [FiSa82] </ref> and [Mat90]. The interest in deciding the existence of a majority element was motivated by the design of fault tolerant computer systems where a majority of single processors must agree on the output [Moo81]. The linear result is also interesting in a model where the elements are ordered [MiGr82].
Reference: [Mat90] <author> Matula, D. W., </author> <title> An Optimal Algorithm for the Majority Problem. </title> <type> Manuscript, </type> <institution> Southern Methodist University, Texas, </institution> <year> 1990. </year>
Reference-contexts: Earlier special results have focused on determining a majority element, and the exact complexity E (d n+1 2 e; n) = C (d n+1 2 (n 1)c was found independently by [FiSa82] and <ref> [Mat90] </ref>. The interest in deciding the existence of a majority element was motivated by the design of fault tolerant computer systems where a majority of single processors must agree on the output [Moo81]. The linear result is also interesting in a model where the elements are ordered [MiGr82].
Reference: [MiGr82] <author> Misra, J. and Gries, D., </author> <title> Finding Repeated Elements. </title> <booktitle> Science of Computer Programming 2 (1982) 143-152. </booktitle>
Reference-contexts: The interest in deciding the existence of a majority element was motivated by the design of fault tolerant computer systems where a majority of single processors must agree on the output [Moo81]. The linear result is also interesting in a model where the elements are ordered <ref> [MiGr82] </ref>. In a restricted version of the majority problem, it is known in advance that there are precisely two distinct equivalence classes.
Reference: [Moo81] <author> Moore, J., </author> <title> Problem 81-5. </title> <note> Journal of Algorithms 2 (1981) 208-209. </note>
Reference-contexts: The interest in deciding the existence of a majority element was motivated by the design of fault tolerant computer systems where a majority of single processors must agree on the output <ref> [Moo81] </ref>. The linear result is also interesting in a model where the elements are ordered [MiGr82]. In a restricted version of the majority problem, it is known in advance that there are precisely two distinct equivalence classes.
Reference: [SaWe91] <author> Saks, M. E. and Werman, M., </author> <title> On Computing Majority by Comparisons. </title> <note> Combinatorica 11 (1991) 383-387. </note>
Reference-contexts: It requires and suffices to make n B (n) equality tests to find a representative of the larger class, when n is odd (B (n) denotes the number of ones in the binary representation of n) <ref> [SaWe91] </ref>. We have divided our results into two sections. In the first of these, we present our results for the special case k = 3, and in the last section we present our results for the general case. The complexity of finding triplicates.
References-found: 7

