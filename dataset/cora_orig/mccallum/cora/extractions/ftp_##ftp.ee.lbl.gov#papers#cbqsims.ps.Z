URL: ftp://ftp.ee.lbl.gov/papers/cbqsims.ps.Z
Refering-URL: http://www-nrg.ee.lbl.gov/ns/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: floyd@ee.lbl.gov  
Title: Ns Version 1 Simulator Tests for Class-Based Queueing  
Author: Sally Floyd 
Date: April 28, 1997  
Address: One Cyclotron Road, Berkeley, CA 94720  
Affiliation: Lawrence Berkeley National Laboratory  
Abstract-found: 0
Intro-found: 1
Reference: [FJ95] <author> S. Floyd and V. Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4), </volume> <year> 1995. </year>
Reference-contexts: 1 Introduction This note shows simulation acceptance tests for CBQ (class-based queueing) as implemented in the ns simulator [MF95]. An introduction to CBQ is available in <ref> [FJ95] </ref>. The simulator implements three separate algorithms for link-sharing described in [FJ95]. These are Formal, Top-level, and Ancestor-Only link-sharing. The simulator implements two different scheduling algorithms within classes of the same priority level, weighted round-robin (WRR) and packet-by-packet round-robin (PRR). <p> 1 Introduction This note shows simulation acceptance tests for CBQ (class-based queueing) as implemented in the ns simulator [MF95]. An introduction to CBQ is available in <ref> [FJ95] </ref>. The simulator implements three separate algorithms for link-sharing described in [FJ95]. These are Formal, Top-level, and Ancestor-Only link-sharing. The simulator implements two different scheduling algorithms within classes of the same priority level, weighted round-robin (WRR) and packet-by-packet round-robin (PRR). The weighted round-robin scheduling algorithm is described in Appendix A of [FJ95]. 2 Formal, Top-level, and Ancestor-Only link-sharing This section shows simulations <p> The simulator implements three separate algorithms for link-sharing described in <ref> [FJ95] </ref>. These are Formal, Top-level, and Ancestor-Only link-sharing. The simulator implements two different scheduling algorithms within classes of the same priority level, weighted round-robin (WRR) and packet-by-packet round-robin (PRR). The weighted round-robin scheduling algorithm is described in Appendix A of [FJ95]. 2 Formal, Top-level, and Ancestor-Only link-sharing This section shows simulations that use Formal, Top-level, and Ancestor-Only link-sharing. For the scenario in these simulations, Top-level link-sharing performs slightly better than Ancestor-Only link-sharing, and Formal link-sharing performs slightly better than Top-level link-sharing. <p> However, for this scenario all three link-sharing algorithms give reasonable performance. The simulations in Figures 1 through 4 essentially reproduce the simulations shown in Figure 11-13 in <ref> [FJ95] </ref>. These tests are run in ns with the following respective commands: ns test-suite-cbq.tcl cbqTL ns test-suite-cbq.tcl cbqAO ns test-suite-cbq.tcl cbqFor ns test-suite-cbq.tcl cbqForOld The reader is referred to the file test-suite-cbq.tcl for more details of the simulation set-up. The simulation scenario is given in Figure 6 in [FJ95], and the <p> 11-13 in <ref> [FJ95] </ref>. These tests are run in ns with the following respective commands: ns test-suite-cbq.tcl cbqTL ns test-suite-cbq.tcl cbqAO ns test-suite-cbq.tcl cbqFor ns test-suite-cbq.tcl cbqForOld The reader is referred to the file test-suite-cbq.tcl for more details of the simulation set-up. The simulation scenario is given in Figure 6 in [FJ95], and the link-sharing structure for the congested link is given fl This work was supported by the Director, Office of Energy Research, Scientific Computing Staff, of the U.S. Department of Energy under Con tract No. DE-AC03-76SF00098. in Figure 8 in [FJ95]. <p> The simulation scenario is given in Figure 6 in <ref> [FJ95] </ref>, and the link-sharing structure for the congested link is given fl This work was supported by the Director, Office of Energy Research, Scientific Computing Staff, of the U.S. Department of Energy under Con tract No. DE-AC03-76SF00098. in Figure 8 in [FJ95]. These simulations are discussed fur ther in Section 5.1 of [FJ95]. The simulations with the old version of Formal link-sharing implement an obsolete version of Formal link-sharing that is not discussed in [FJ95]. 1 2 2.1 Differences between the three link-sharing algorithms The simulations in this section are designed to <p> Department of Energy under Con tract No. DE-AC03-76SF00098. in Figure 8 in <ref> [FJ95] </ref>. These simulations are discussed fur ther in Section 5.1 of [FJ95]. The simulations with the old version of Formal link-sharing implement an obsolete version of Formal link-sharing that is not discussed in [FJ95]. 1 2 2.1 Differences between the three link-sharing algorithms The simulations in this section are designed to illustrate the possible weaknesses of Ancestor-Only link-sharing. <p> Department of Energy under Con tract No. DE-AC03-76SF00098. in Figure 8 in <ref> [FJ95] </ref>. These simulations are discussed fur ther in Section 5.1 of [FJ95]. The simulations with the old version of Formal link-sharing implement an obsolete version of Formal link-sharing that is not discussed in [FJ95]. 1 2 2.1 Differences between the three link-sharing algorithms The simulations in this section are designed to illustrate the possible weaknesses of Ancestor-Only link-sharing. <p> Figures 12 and 13 reproduce Figure 10 from <ref> [FJ95] </ref>. The simulation scenario is described in Section 5.1 of [FJ95]. simulations differ in the distribution of extra bandwidth to the high-priority classes when the lower priority class has no data to send. <p> Figures 12 and 13 reproduce Figure 10 from <ref> [FJ95] </ref>. The simulation scenario is described in Section 5.1 of [FJ95]. simulations differ in the distribution of extra bandwidth to the high-priority classes when the lower priority class has no data to send.
Reference: [Flo95] <author> S. Floyd. </author> <title> Notes on class-based queueing: Setting parameters. </title> <type> Unpublished draft, </type> <month> Jul. </month> <year> 1995. </year> <note> URL ftp://www-nrg.ee.lbl.gov/floyd/papers.html. </note>
Reference-contexts: These figures show simulations with different values for extradelay (which determines the steady-state burst size). This parameter is discussed further in <ref> [Flo95] </ref>, where it is called the offtime parameter. In these figures, the bottom row shows the packets for Class A, and the top row shows the packets for Class B. The x-axis shows time, and the y-axis shows a linear function of the packet number mod 90. <p> These simulations are run in ns with the respective commands: ns test-suite-cbq.tcl cbqExtra1 ns test-suite-cbq.tcl cbqExtra2 6 The maxidle parameter Figures 17 and 18 show that the parameter maxidle functions as intended in the simulator. The maxidle parameter is discussed further in <ref> [Flo95] </ref>. These figures show simulations with different values for maxidle (which determines the maximum number of back-to-back packets). The maxidle parameter serves a similar function as does the bucket size in a token bucket.
Reference: [McC97] <author> S. McCanne. </author> <note> Ns-2 (network simulator version 2), 1997. URL http://mash.cs.berkeley.edu/ns. </note>
Reference-contexts: He has also imple mented a new version of CBQ for ns version 2 <ref> [McC97] </ref>. 5
Reference: [MF95] <author> S. McCanne and S. Floyd. </author> <title> Ns (network simulator), </title> <note> 1995. URL http://www-nrg.ee.lbl.gov/ns. 6 </note>
Reference-contexts: 1 Introduction This note shows simulation acceptance tests for CBQ (class-based queueing) as implemented in the ns simulator <ref> [MF95] </ref>. An introduction to CBQ is available in [FJ95]. The simulator implements three separate algorithms for link-sharing described in [FJ95]. These are Formal, Top-level, and Ancestor-Only link-sharing. The simulator implements two different scheduling algorithms within classes of the same priority level, weighted round-robin (WRR) and packet-by-packet round-robin (PRR).
References-found: 4

