URL: http://www.cs.toronto.edu/~csc2532h/sheila-aaai97.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: mcilrait@parc.xerox.com sam@ksl.stanford.edu  
Title: Representing Actions and State Constraints in Model-Based Diagnosis  
Author: Sheila A. McIlraith 
Address: 3333 Coyote Hill Road Stanford University Palo Alto, CA 94301 Stanford, CA 94305-9020  
Affiliation: Xerox Palo Alto Research Center Knowledge Systems Laboratory  
Abstract: In this paper we examine an important set of representation issues which have not been addressed by the model-based diagnosis community. In particular, we examine the problem of integrating a model-based di-agnosissystem description, SD, with a theory of action to parsimoniously represent the effect of actions on a system and the effects of system state on performing actions in the world. We employ the situation calculus, a first-order language, as our representation language. In the context of the situation calculus, SD presents an, often complex, set of state constraints. These state constraints implicitly define indirect effects of actions as well as indirectly imposing further preconditions on the performance of actions. As a consequence, SD presents further complications to addressing the frame, ramification and qualification problems. For the purposes of this paper, we examine a syntactically restricted SD, which commonly occurs in the axiomatization of model-based diagnosis domains. The contributions of this paper include: 1) a framework for integrating SD and a theory of action. 2) a procedure for compiling SD into a set of successor state axioms. These axioms capture the intended interpretation of SD, while providing a closed-form solution to the frame and ramification problems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> de Kleer, J.; Mackworth, A.; and Reiter, R. </author> <year> 1992. </year> <title> Characterizing diagnoses and systems. </title> <journal> Artificial Intelligence 56(2-3):197-222. </journal>
Reference-contexts: All rights reserved. Kleer 1992). Indeed, any form of model-based reasoning is only as good as the model it employs. In this paper, we examine the problem of integrating a model-based diagnosis system description, SD <ref> (de Kleer, Mackworth, & Reiter 1992) </ref> with a theory of action, to parsimoniously represent the effect of actions on a system and the effects of a system on performing actions in the world. We employ the situation calculus (McCarthy 1968) as our representation language for action. <p> The domain-specific axioms, must specify both the be-haviour of the static system, and the actions that can affect the state of the system, as well as those actions required to achieve testing and repair. We take as our starting point the extensive research on model-based diagnosis (MBD) <ref> (Hamscher, Console, & de Kleer 1992) </ref> and assume a system description, SD. Our task is to provide an axiomatization that integrates this SD with a domain action theory. <p> In MBD terminology, these would include typical fault model axioms of SD as well as axioms of SD that describe the correct behaviour of a system (e.g., <ref> (de Kleer, Mackworth, & Reiter 1992) </ref>).
Reference: <author> Forbus, K. </author> <year> 1989. </year> <title> Introducing Actions into Qualitative Simulation. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1273-1278. </pages>
Reference-contexts: The author knows of no work in the diagnosis community that addresses the problem of integrating SD and a theory of action, save some preliminary work in <ref> (Forbus 1989) </ref>, examining the problem of integrating actions and qualitative process theory. Forbus' action-augmented envi-sionment, (AE ) captures computationally some aspects of the intuition found in this paper, while neglecting to address a number of fundamental knowledge representation issues.
Reference: <author> Friedrich, G.; Gottlob, G.; and Nejdl, W. </author> <year> 1990. </year> <title> Physical impossibility instead of fault models. </title> <booktitle> In Proceedings of the Eighth National Conference on Artificial Intelligence, </booktitle> <pages> 331-336. </pages>
Reference-contexts: Such axioms are often characterized syntactically by inclusion of an implication sign, e.g., A 1 ^ A 2 ^ : : : ^ A k oe A j ; where each A i is a literal with or without a situation term. * The physical impossibility axioms of SD <ref> (Friedrich, Got-tlob, & Nejdl 1990) </ref>, which describe physically impossible states, should be included in T qual .
Reference: <author> Giunchiglia, E. </author> <year> 1996. </year> <title> Determining ramifications in the situation calculus. </title> <booktitle> In Proceedings of the Fifth International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 76-86. </pages>
Reference-contexts: the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem that advocate minimizing an explicitly represented notion of causality (e.g., (Lin 1995), (McCain & Turner 1995), (Thielscher 1995), <ref> (Giunchiglia 1996) </ref>). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions.
Reference: <author> Hamscher, W.; Console, L.; and de Kleer, J. </author> <year> 1992. </year> <title> Readings in Model-based Diagnosis. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The domain-specific axioms, must specify both the be-haviour of the static system, and the actions that can affect the state of the system, as well as those actions required to achieve testing and repair. We take as our starting point the extensive research on model-based diagnosis (MBD) <ref> (Hamscher, Console, & de Kleer 1992) </ref> and assume a system description, SD. Our task is to provide an axiomatization that integrates this SD with a domain action theory.
Reference: <author> Kramer, B.; Mylopolous, J.; Benjamin, M.; Chou, Q.; Elder, D.; and Opala, J. </author> <year> 1996. </year> <title> Developing an expert system technology for industrial process control: An experience report. </title> <booktitle> In Proceedings of the Conference of the Canadian Society for Computational Studies of Intelligence, </booktitle> <pages> 172-186. </pages>
Reference-contexts: Illustrative Example The results in this paper are illustrated in terms of a simplified power plant feedwater system drawn from <ref> (Kramer et al. 1996) </ref>. The system consists of three potentially malfunctioning components: a power supply (P wr); a pump (P mp); and a boiler (Blr). The power supply provides power to both the pump and the boiler.
Reference: <author> Levi, G. </author> <year> 1994. </year> <booktitle> Advances in Logic Programming Theory. </booktitle> <publisher> Oxford Science Publications. </publisher>
Reference-contexts: They also serve as ramification and qualification constraints, indirectly constraining the effects of actions and further constraining the preconditions for actions. When employing the ramification constraints to infer the indirect effects of actions, the implication connective is interpreted as causal or definitional, in the logic programming sense. Following <ref> (Levi 1994) </ref>, we say that a fluent is defined in an axiom or set of axioms if it appears on the right-hand side of an implication connective in that axiom or set of axioms. <p> We combine the notion of solitary theory (Lifschitz 1985) and stratified logic program (e.g., <ref> (Levi 1994) </ref>) to define the notion of a solitary stratified theory. Note that unlike stratified logic programs, we use a strictly &lt; relation to distinguish the strata of our theories. Intuitively, a solitary stratified theory is a stratified logic program that allows negation in the consequent.
Reference: <author> Lifschitz, V. </author> <year> 1985. </year> <title> Computing Circumscription. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 121-127. </pages>
Reference-contexts: We combine the notion of solitary theory <ref> (Lifschitz 1985) </ref> and stratified logic program (e.g., (Levi 1994)) to define the notion of a solitary stratified theory. Note that unlike stratified logic programs, we use a strictly &lt; relation to distinguish the strata of our theories.
Reference: <author> Lin, F., and Reiter, R. </author> <year> 1994. </year> <title> State constraints revisited. </title> <journal> Journal of Logic and Computation 4(5) </journal> <pages> 655-678. </pages> <note> Special Issue on Action and Processes. </note>
Reference-contexts: Situation Calculus Overview The situation calculus language we employ to axiomatize our domains is a sorted first-order language with equality. The sorts are of type A for primitive actions, S for situations, and D for everything else, including domain objects <ref> (Lin & Reiter 1994) </ref>. We represent each action as a (possibly parameterized) first-class object within the language. Situations are simply sequences of actions. The evolution of the world can be viewed as a tree rooted at the distinguished initial situation S 0 . <p> Axiomatizing a DPS Domain The axiomatization of a system comprises both domain-independent and domain-specific axioms. The domain-independent axioms are to be the foundational axioms of the discrete situation calculus, found <ref> (Lin & Reiter 1994) </ref>. They define the branching structure of our situation tree. The domain-specific axioms, must specify both the be-haviour of the static system, and the actions that can affect the state of the system, as well as those actions required to achieve testing and repair. <p> In this section, we propose a solution to the frame and ramification problems for a typical class of DPS theories. The qualification problem is discussed in a subsequent section. <ref> (Lin & Reiter 1994) </ref> gave a semantic definition for a solution to the frame and ramification problems using circumscription and minimal model semantics. This solution has its limitations. Sometimes there is no minimal model. <p> It remains to address the qualification problem. As previously observed the qualification constraints in T qual can further restrict those situations s in which an action a is P oss-ible. We propose to use the solution proposed by <ref> (Lin & Reiter 1994) </ref>. It transforms the necessary conditions for actions, T nec and the qualification constraints, T qual into a set of action precondition axioms T AP , one for each action prototype A of the domain. Following their results, we add one more step to our transformation procedure.
Reference: <author> Lin, F. </author> <year> 1995. </year> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1985-1991. </pages>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem that advocate minimizing an explicitly represented notion of causality (e.g., <ref> (Lin 1995) </ref>, (McCain & Turner 1995), (Thielscher 1995), (Giunchiglia 1996)). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions.
Reference: <author> Lloyd, J. </author> <year> 1987. </year> <title> Foundations of Logic Programming. </title> <publisher> Springer Verlag, second edition. </publisher>
Reference-contexts: The Lloyd-Topor transformation <ref> (Lloyd 1987) </ref> must then be applied to convert this theory into Prolog clausal form. The state constraints that play the role of ramification constraints with respect to our theory of actions are compiled into successor state axioms, one for every fluent in our theory.
Reference: <author> McCain, N., and Turner, H. </author> <year> 1995. </year> <title> A causal theory of ramifications and qualifications. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1978-1984. </pages>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem that advocate minimizing an explicitly represented notion of causality (e.g., (Lin 1995), <ref> (McCain & Turner 1995) </ref>, (Thielscher 1995), (Giunchiglia 1996)). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions.
Reference: <author> McCarthy, J. </author> <year> 1968. </year> <title> Programs with common sense. </title> <editor> In Minsky, M., ed., </editor> <booktitle> Semantic Information Processing. </booktitle> <publisher> The MIT Press. </publisher> <pages> chapter 7, 403-418. </pages>
Reference-contexts: We employ the situation calculus <ref> (McCarthy 1968) </ref> as our representation language for action. In the context of the situation calculus, SD presents an, often complex, set of state constraints. These state constraints implicitly define indirect effects of actions as well as indirectly imposing further preconditions on performing an action.
Reference: <author> McIlraith, S. </author> <year> 1997. </year> <title> Towards a Formal Account of Diagnostic Problem Solving. </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <address> Ontario, Canada. </address>
Reference-contexts: From this viewpoint, we claim that a comprehensive account of DPS must involve reasoning about action and change <ref> (McIlraith 1997) </ref>. <p> Note that our closed-form solution to the frame and ramification problem loosely appeals to a completeness assumption in order to generate explanation closure axioms. In <ref> (McIlraith 1997) </ref>, we provide an independent semantic justification via prioritized circumscription. From those results we show that our solution is predicated on the following consistency condition. <p> Further, T ISS preserves the compositionality of our representation, which is a hallmark of model-based representations. The purpose of this paper was to address the knowledge representation issues associated with integrating a DPS system description and a theory of action. In <ref> (McIlraith 1997) </ref> we used this representation to characterize the tasks of diagnosis, testing, and repair. Integrating a theory of action with SD provides for a broad definition of diagnosis.
Reference: <author> Pinto, J. </author> <year> 1994. </year> <title> Temporal Reasoning in the Situation Calculus. </title> <type> Ph.D. Dissertation, </type> <institution> Department of Computer Science, University of Toronto, Toronto, </institution> <address> Ontario, Canada. </address>
Reference-contexts: The intuition behind our solution to the frame and ramification problems the notion of interpreting our ramification constraints as definitional in nature, was influenced by research on the semantics of normal logic programs and deductive databases (e.g., (Przy-musinski 1989)), and is related to preliminary work on this problem by Pinto <ref> (Pinto 1994) </ref>.
Reference: <author> Przymusinski, T. </author> <year> 1989. </year> <title> On the declarative and procedural semantics of logic programs. </title> <journal> Journal of Automated Reasoning 5 </journal> <pages> 167-205. </pages>
Reference: <author> Reiter, R. </author> <year> 1991. </year> <title> The Frame Problem in the Situation Calculus: A Simple Solution (sometimes) and a completeness result for goal regression. </title> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of J. McCarthy. </booktitle> <address> San Diego, CA: </address> <publisher> Academic Press. </publisher> <pages> 359-380. </pages>
Reference-contexts: Next, we describe a method for representing a DPS domain in the situation calculus through a straightforward transformation of SD, followed by the definition of action-related axioms. The axiomatization is illustrated via a power plant example. We adopt the view (e.g., <ref> (Reiter 1991) </ref>) that successor state axioms and action precondition axioms provide an attractive solution to the frame and ramification problems, and the qualification problem, respectively, because they are parsimonious, axiomatic and monotonic. <p> Our task is to provide an axiomatization that integrates this SD with a domain action theory. Our domain action theory is described in terms of situation calculus effect axioms, unique names axioms, and necessary conditions for actions (e.g., <ref> (Reiter 1991) </ref>). In the rest of this section we describe a straightforward four step procedure to axiomatize a DPS domain. In the section that follows, we provide a procedure for automatically transforming these axioms into a final axiomatization which addresses the frame, ramification and qualification problems. <p> The state constraints that play the role of ramification constraints with respect to our theory of actions are compiled into successor state axioms, one for every fluent in our theory. When state constraints are absent, as in the case of Reiter's solution to the frame problem <ref> (Reiter 1991) </ref>, successor state axioms provide a parsimonious representation for frame and effect axioms. In the presence of ramification constraints, the successor state axioms can, under certain conditions, grow exceedingly long.
Reference: <author> Thielscher, M. </author> <year> 1995. </year> <title> Computing ramifications by postprocess-ing. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 1994-2000. </pages>
Reference-contexts: Indeed the spirit of this solution the notion of imposing a directional interpretation on our implication connective in our ramification constraints, is akin to the intuition behind proposed solutions to the ramification problem that advocate minimizing an explicitly represented notion of causality (e.g., (Lin 1995), (McCain & Turner 1995), <ref> (Thielscher 1995) </ref>, (Giunchiglia 1996)). Indeed the author suspects that for the syntactically restricted case studied here, all our different proposed solutions may produce the same results, just as many of the independent solutions to the frame problem prove to be identical under certain conditions.
Reference: <author> Waldinger, R. </author> <year> 1977. </year> <title> Achieving several goals simultaneously. </title>
Reference-contexts: Since we have 5 Regression (e.g., <ref> (Waldinger 1977) </ref>) is a recursive rewriting procedure used here to reduce the nesting of the do function in situation terms.
Reference: <editor> In Elcock, E., and Michie, D., eds., </editor> <booktitle> Machine Intelligence 8. </booktitle> <address> Edinburgh, Scotland: </address> <publisher> Ellis Horwood. </publisher> <pages> 94-136. </pages>
References-found: 20

