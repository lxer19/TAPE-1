URL: http://www.cs.brandeis.edu/~mairson/Seminar/scedrov-games.ps.gz
Refering-URL: http://www.cs.brandeis.edu/~mairson/PL-seminar.html
Root-URL: http://www.cs.brandeis.edu
Title: Stochastic Interaction and Linear Logic  
Author: Patrick D. Lincoln John C. Mitchell Andre Scedrov Wallace F. and Lucille M. Davis 
Address: Menlo Park CA 94025 USA.  Stanford, CA  Philadelphia, PA  
Affiliation: SRI International Computer Science Laboratory,  Department of Computer Science, Stanford University,  Department of Mathematics, University of Pennsylvania,  
Note: A revised version appears in "Advances in Linear Logic", ed. by J.-Y. Girard et al., London Mathematical Society Lecture Notes Series, Volume 222, Cambridge University Press, 1995, pp. 147-166. lincoln@csl.sri.com  Work supported under NSF Grant CCR-9224858. jcm@cs.stanford.edu http://theory.stanford.edu/people/jcm/home.html  94305. Supported in part by an NSF PYI Award, matching funds from Digital Equipment Corporation, the Pow-ell Foundation, and Xerox Corporation; and the  Faculty Scholarship. andre@cis.upenn.edu http://www.cis.upenn.edu/~andre  19104-6395. Partially supported by NSF Grants CCR-91-02753 and CCR-94-00907 and by ONR Grant N00014-92-J-1916. Sce-drov is an American Mathematical Society Centennial Research Fellow.  
Abstract: We present stochastic interactive semantics for propositional linear logic without modalities. The framework is based on interactive protocols considered in computational complexity theory, in which a prover with unlimited power interacts with a verifier that can only toss fair coins or perform simple tasks when presented with the given formula or with subsequent messages from the prover. The additive conjunction & is described as random choice, which reflects the intuitive idea that the verifier can perform only "random spot checks". This stochastic interactive semantic framework is shown to be sound and complete. Furthermore, the prover's winning strategies are basically proofs of the given formula. In this framework the multiplicative and additive connectives of linear logic are described by means of probabilistic operators, giving a new basis for intuitive reasoning about linear logic and a potential new tool in automated deduction. 
Abstract-found: 1
Intro-found: 1
Reference: [AJ94] <author> S. Abramsky and R. Jagadeesan. </author> <title> Games and full completeness for multiplicative linear logic. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 59 </volume> <pages> 543-574, </pages> <year> 1994. </year>
Reference-contexts: While these models provide mathematical tools for the study of several aspects of linear logic, they do not offer a simple intuitive way of reasoning about linear logic. More recently, Blass [Bla92], Abramsky and Jagadeesan <ref> [AJ94] </ref>, Lamarche, and Hyland and Ong have developed semantics of linear logic by means of games and interaction. <p> A strategy is generally a function of the formula and the moves made by both players (up until the point where a next move is required). Game interpretations for various fragments and forms of linear logic have been investigated by Blass, Abramsky and Jagadeesan, Lamarche, and Hyland and Ong <ref> [Bla92, AJ94, HO93] </ref>. Some of these games are complete, in the sense that a formula is valid iff a designated player has a winning strategy, while others yield more specialized interpretations where the proof rules are sound but not complete.
Reference: [AJM93] <author> S. Abramsky, R. Jagadeesan, and P. Malacaria. </author> <title> Games and full abstraction for PCF. </title> <type> Manuscript, </type> <month> July </month> <year> 1993. </year>
Reference-contexts: These new approaches have already proven fruitful in providing an evocative semantic paradigm for linear logic and have found a striking application to programming language theory in the work of Abramsky, Ja-gadeesan, and Malacaria <ref> [AJM93] </ref> and in the work of Hyland and Ong [HO93]. The game-theoretic notions used so far draw mainly on set theory and on proof theory.
Reference: [BFL91] <author> L. Babai, L. Fortnow, and C. Lund. </author> <title> Non-deterministic exponential time has two-prover interactive protocols. </title> <journal> Computational Complexity, </journal> <volume> 1 </volume> <pages> 3-40, </pages> <year> 1991. </year> <title> STOCHASTIC INTERACTION AND LINEAR LOGIC </title>
Reference-contexts: The semantic framework for mall discussed in this extended abstract might be just one instance of a broader relationship between linear logic and interactive protocols based on randomization. Indeed, interactive proof systems with two independent provers (mip) are known to be nexptime-complete <ref> [BFL91] </ref>. On the other hand, the first order analog of mall, the multiplicative-additive fragment of first order linear logic mall1 is also nexptime-complete [LS94a, LS94b], thus the possibility of a direct relationship between mall1 and mip.
Reference: [Bla92] <author> A. Blass. </author> <title> A game semantics for linear logic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 56 </volume> <pages> 183-220, </pages> <year> 1992. </year>
Reference-contexts: While these models provide mathematical tools for the study of several aspects of linear logic, they do not offer a simple intuitive way of reasoning about linear logic. More recently, Blass <ref> [Bla92] </ref>, Abramsky and Jagadeesan [AJ94], Lamarche, and Hyland and Ong have developed semantics of linear logic by means of games and interaction. <p> A strategy is generally a function of the formula and the moves made by both players (up until the point where a next move is required). Game interpretations for various fragments and forms of linear logic have been investigated by Blass, Abramsky and Jagadeesan, Lamarche, and Hyland and Ong <ref> [Bla92, AJ94, HO93] </ref>. Some of these games are complete, in the sense that a formula is valid iff a designated player has a winning strategy, while others yield more specialized interpretations where the proof rules are sound but not complete. <p> Player V wins if one of the atomic sequents ffi reached is not an axiom, else player P wins. Note that the number of moves is finite, indeed, it is polynomial in the size of a given mall sequent. A similar game is described in Section 6 of <ref> [Bla92] </ref>. It is readily seen that: Proposition 3.1 The following are equivalent for any mall sequent : (1) Player P (prover) has a winning strategy, (2) v () = 1, (3) the sequent is provable in mall.
Reference: [BM88] <author> L. Babai and S. Moran. </author> <title> Arthur-Merlin games: a randomized proof system, and a hierarchy of complexity classes. </title> <journal> J. Computer System Sciences, </journal> <volume> 36 </volume> <pages> 254-276, </pages> <year> 1988. </year>
Reference-contexts: In addition, if the probabilities are required to be bounded away from 1=2, one obtains "Arthur-Merlin games" proposed by Babai and Moran <ref> [BM88] </ref> or similar "interactive proof systems" proposed by Goldwasser, Micali, and Rackoff [GMR89]. Shamir [Sha92] and Shen [She92] have shown that all these formulations describe exactly pspace. <p> In such prover/verifier interactions, the prover has unlimited power while the verifier can only toss coins or perform simple (say, polynomial time) tasks when presented with the input or with the prover's messages <ref> [Pap85, BM88, GMR89] </ref>. Stochastic verification goes back to Solovay and Strassen [SS77]. As a first step in this direction, we consider "games against Nature" or "stochastic alternating polynomial time machines" (saptime) in the style of [Pap85]. <p> accept with probability &gt; 1=2. (2) If is not provable in mall, then any prover with any strategy can convince the verifier to accept only with probability &lt; 1=2. 5 Further research In the future we plan to investigate a complete semantics of mall based on "interactive proof systems" (ip) <ref> [BM88, GMR89] </ref>. In particular, we hope to relate mall to random evaluation protocols for polynomial expressions [Sha92, She92]. The semantic framework for mall discussed in this extended abstract might be just one instance of a broader relationship between linear logic and interactive protocols based on randomization.
Reference: [Gir87] <author> J.-Y. Girard. </author> <title> Linear logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 50 </volume> <pages> 1-102, </pages> <year> 1987. </year>
Reference-contexts: 1 Introduction Linear logic arose from the semantic study of the structure of proofs in in-tuitionistic logic. Girard presented the coherence space and phase space semantics of linear logic in his original work on linear logic <ref> [Gir87] </ref>. While these models provide mathematical tools for the study of several aspects of linear logic, they do not offer a simple intuitive way of reasoning about linear logic. <p> The game-theoretic notions used so far draw mainly on set theory and on proof theory. They do not yet fully explain linear logic formulas involving both multiplicative and additive connectives, i.e., the formulas of the multiplicative-additive fragment of linear logic, mall <ref> [Gir87, LMSS92, Sce93, Sce94] </ref>. In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from [LMSS92, LS94a, LS94b] makes it possible to draw on game-theoretic notions stemming from computational complexity theory.
Reference: [GMR89] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM J. Computing, </journal> <volume> 18 </volume> <pages> 186-208, </pages> <year> 1989. </year>
Reference-contexts: In addition, if the probabilities are required to be bounded away from 1=2, one obtains "Arthur-Merlin games" proposed by Babai and Moran [BM88] or similar "interactive proof systems" proposed by Goldwasser, Micali, and Rackoff <ref> [GMR89] </ref>. Shamir [Sha92] and Shen [She92] have shown that all these formulations describe exactly pspace. Since mall is pspace-complete [LMSS92], it seems a priori possible to give a direct, structural relationship between the prover/verifier interactions just described and mall that goes beyond an immediate Turing reduction. <p> In such prover/verifier interactions, the prover has unlimited power while the verifier can only toss coins or perform simple (say, polynomial time) tasks when presented with the input or with the prover's messages <ref> [Pap85, BM88, GMR89] </ref>. Stochastic verification goes back to Solovay and Strassen [SS77]. As a first step in this direction, we consider "games against Nature" or "stochastic alternating polynomial time machines" (saptime) in the style of [Pap85]. <p> accept with probability &gt; 1=2. (2) If is not provable in mall, then any prover with any strategy can convince the verifier to accept only with probability &lt; 1=2. 5 Further research In the future we plan to investigate a complete semantics of mall based on "interactive proof systems" (ip) <ref> [BM88, GMR89] </ref>. In particular, we hope to relate mall to random evaluation protocols for polynomial expressions [Sha92, She92]. The semantic framework for mall discussed in this extended abstract might be just one instance of a broader relationship between linear logic and interactive protocols based on randomization.
Reference: [HO93] <author> J.M.E. Hyland and L. Ong. </author> <title> Dialogue games and innocent strategies: an approach to intensional full abstraction for PCF. </title> <type> Manuscript, </type> <month> July </month> <year> 1993. </year>
Reference-contexts: These new approaches have already proven fruitful in providing an evocative semantic paradigm for linear logic and have found a striking application to programming language theory in the work of Abramsky, Ja-gadeesan, and Malacaria [AJM93] and in the work of Hyland and Ong <ref> [HO93] </ref>. The game-theoretic notions used so far draw mainly on set theory and on proof theory. They do not yet fully explain linear logic formulas involving both multiplicative and additive connectives, i.e., the formulas of the multiplicative-additive fragment of linear logic, mall [Gir87, LMSS92, Sce93, Sce94]. <p> A strategy is generally a function of the formula and the moves made by both players (up until the point where a next move is required). Game interpretations for various fragments and forms of linear logic have been investigated by Blass, Abramsky and Jagadeesan, Lamarche, and Hyland and Ong <ref> [Bla92, AJ94, HO93] </ref>. Some of these games are complete, in the sense that a formula is valid iff a designated player has a winning strategy, while others yield more specialized interpretations where the proof rules are sound but not complete.
Reference: [Imm82] <author> N. Immerman. </author> <title> Upper and lower bounds for first-order expressibility. </title> <journal> J. Computer System Sciences, </journal> <volume> 25 </volume> <pages> 76-98, </pages> <year> 1982. </year>
Reference-contexts: While game interpretations, or game "semantics," have a different flavor from other forms of semantics, they have certain advantages. One well-established application is the use of Ehrenfeucht-Fraisse games for characterizing the expressiveness of logics over finite structures, for instance in <ref> [Imm82] </ref>. It is easy to illustrate the general idea of game semantics using classical quantified propositional logic. The game will have two players, called for-all and there-exists, each smart enough to evaluate a quantifier-free proposition, given an assignment of truth values (true or false) to the propositional variables.
Reference: [Kan94] <author> M.I. Kanovich. </author> <title> The complexity of Horn fragments of linear logic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 69 </volume> <pages> 195-241, </pages> <year> 1994. </year>
Reference-contexts: The most satisfactory perspective would offer a single semantic framework for linear logic based on randomized interaction, which would have as instances the characterizations mll = np <ref> [Kan94, LW92] </ref>, mall = ip ( =pspace), mall1 = mip ( =nexptime), and the undecidability of full linear logic [LMSS92].
Reference: [LMSS92] <author> P. Lincoln, J. Mitchell, A. Scedrov, and N. Shankar. </author> <title> Decision problems for propositional linear logic. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 56 </volume> <pages> 239-311, </pages> <year> 1992. </year>
Reference-contexts: The game-theoretic notions used so far draw mainly on set theory and on proof theory. They do not yet fully explain linear logic formulas involving both multiplicative and additive connectives, i.e., the formulas of the multiplicative-additive fragment of linear logic, mall <ref> [Gir87, LMSS92, Sce93, Sce94] </ref>. In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from [LMSS92, LS94a, LS94b] makes it possible to draw on game-theoretic notions stemming from computational complexity theory. <p> In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from <ref> [LMSS92, LS94a, LS94b] </ref> makes it possible to draw on game-theoretic notions stemming from computational complexity theory. Here we are particularly interested in the game-theoretic notions involving stochastic (or, randomized) interaction. <p> Shamir [Sha92] and Shen [She92] have shown that all these formulations describe exactly pspace. Since mall is pspace-complete <ref> [LMSS92] </ref>, it seems a priori possible to give a direct, structural relationship between the prover/verifier interactions just described and mall that goes beyond an immediate Turing reduction. In Section 2 we give an intuitive overview of the game semantics approach. <p> One drawback of this setting is that it a priori requires the verifier to have just as much insight as the prover, namely, both need to have pspace capability <ref> [LMSS92] </ref>. (When A&B is unprovable, the verifier must be able to choose an unprovable conjunct.) In other words, this setting is not truly interactive because both the prover and the verifier can figure out in advance who can win the game. 4 A stochastic semantics A much more interesting interactive setting <p> Note that np is a degenerate case of a protocol in which there are no coin tosses and the probabilities are 1 and 0, respectively. It is known that saptime = pspace [Pap85]. On the other hand, since mall is pspace-complete <ref> [LMSS92] </ref> it is natural to ask whether there exists a direct, structural relationship between mall and saptime that goes beyond an immediate Turing reduction. We seek a semantics of mall based on randomization and interaction just described. <p> The most satisfactory perspective would offer a single semantic framework for linear logic based on randomized interaction, which would have as instances the characterizations mll = np [Kan94, LW92], mall = ip ( =pspace), mall1 = mip ( =nexptime), and the undecidability of full linear logic <ref> [LMSS92] </ref>.
Reference: [LS94a] <author> P. Lincoln and A. Scedrov. </author> <title> First order linear logic without modalities is NEXPTIME-hard. </title> <note> Accepted for publication in Theoretical Computer Science, 1994. Available by anonymous ftp from host ftp.cis.upenn.edu and the file pub/papers/scedrov/mall1.dvi.Z. </note>
Reference-contexts: In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from <ref> [LMSS92, LS94a, LS94b] </ref> makes it possible to draw on game-theoretic notions stemming from computational complexity theory. Here we are particularly interested in the game-theoretic notions involving stochastic (or, randomized) interaction. <p> Indeed, interactive proof systems with two independent provers (mip) are known to be nexptime-complete [BFL91]. On the other hand, the first order analog of mall, the multiplicative-additive fragment of first order linear logic mall1 is also nexptime-complete <ref> [LS94a, LS94b] </ref>, thus the possibility of a direct relationship between mall1 and mip.
Reference: [LS94b] <author> P. Lincoln and N. Shankar. </author> <title> Proof search in first order linear logic and other cut free sequent calculi. </title> <booktitle> In Proc. 9-th Annual IEEE Symposium on Logic in Computer Science, Paris, </booktitle> <pages> pages 282-291, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from <ref> [LMSS92, LS94a, LS94b] </ref> makes it possible to draw on game-theoretic notions stemming from computational complexity theory. Here we are particularly interested in the game-theoretic notions involving stochastic (or, randomized) interaction. <p> Indeed, interactive proof systems with two independent provers (mip) are known to be nexptime-complete [BFL91]. On the other hand, the first order analog of mall, the multiplicative-additive fragment of first order linear logic mall1 is also nexptime-complete <ref> [LS94a, LS94b] </ref>, thus the possibility of a direct relationship between mall1 and mip.
Reference: [LW92] <author> P. Lincoln and T. Winkler. </author> <title> Constant-Only Multiplicative Linear Logic is NP-Complete. </title> <type> Manuscript, </type> <month> September </month> <year> 1992. </year> <note> Available using anonymous ftp from host ftp.csl.sri.com and the file pub/lincoln/comult-npc.dvi. </note>
Reference-contexts: The most satisfactory perspective would offer a single semantic framework for linear logic based on randomized interaction, which would have as instances the characterizations mll = np <ref> [Kan94, LW92] </ref>, mall = ip ( =pspace), mall1 = mip ( =nexptime), and the undecidability of full linear logic [LMSS92].
Reference: [Pap85] <author> C. Papadimitriou. </author> <title> Games against Nature. </title> <journal> J. Computer System Sciences, </journal> <volume> 31 </volume> <pages> 288-301, </pages> <year> 1985. </year> <editor> P.D. LINCOLN, J.C. MITCHELL, A. </editor> <publisher> SCEDROV </publisher>
Reference-contexts: Stochastic verification goes back to Solovay and Strassen [SS77]. One such setting was introduced in Papadimitriou <ref> [Pap85] </ref> as "games against Nature" or "stochastic alternating polynomial time machines" (saptime) and shown to characterize polynomial space (pspace). <p> In such prover/verifier interactions, the prover has unlimited power while the verifier can only toss coins or perform simple (say, polynomial time) tasks when presented with the input or with the prover's messages <ref> [Pap85, BM88, GMR89] </ref>. Stochastic verification goes back to Solovay and Strassen [SS77]. As a first step in this direction, we consider "games against Nature" or "stochastic alternating polynomial time machines" (saptime) in the style of [Pap85]. <p> Stochastic verification goes back to Solovay and Strassen [SS77]. As a first step in this direction, we consider "games against Nature" or "stochastic alternating polynomial time machines" (saptime) in the style of <ref> [Pap85] </ref>. This setting consists of a polynomial time Turing machine (the verifier, V ) and an omnipotent prover, P . V may toss fair coins (i.e., consult a random oracle). V and P may exchange messages in polynomial time. <p> Note that np is a degenerate case of a protocol in which there are no coin tosses and the probabilities are 1 and 0, respectively. It is known that saptime = pspace <ref> [Pap85] </ref>. On the other hand, since mall is pspace-complete [LMSS92] it is natural to ask whether there exists a direct, structural relationship between mall and saptime that goes beyond an immediate Turing reduction. We seek a semantics of mall based on randomization and interaction just described.
Reference: [Pap94] <author> C. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Here we are particularly interested in the game-theoretic notions involving stochastic (or, randomized) interaction. This setting, described in Papadimitriou <ref> [Pap94] </ref>, involves interactive protocols in which a prover with unlimited power interacts with a verifier who can only toss coins or perform simple (say, polynomial time) tasks when presented with the input or with the prover's messages. Stochastic verification goes back to Solovay and Strassen [SS77].
Reference: [Sce93] <author> A. Scedrov. </author> <title> A brief guide to linear logic. </title> <editor> In G. Rozenberg and A. Salomaa, editors, </editor> <booktitle> Current Trends in Theoretical Computer Science, </booktitle> <pages> pages 377-394. </pages> <publisher> World Scientific Publishing Co., </publisher> <year> 1993. </year>
Reference-contexts: The game-theoretic notions used so far draw mainly on set theory and on proof theory. They do not yet fully explain linear logic formulas involving both multiplicative and additive connectives, i.e., the formulas of the multiplicative-additive fragment of linear logic, mall <ref> [Gir87, LMSS92, Sce93, Sce94] </ref>. In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from [LMSS92, LS94a, LS94b] makes it possible to draw on game-theoretic notions stemming from computational complexity theory.
Reference: [Sce94] <author> A. Scedrov. </author> <title> Linear logic and computation: A survey. </title> <editor> In H. Schwichtenberg, editor, </editor> <booktitle> Proof and Computation, Proceedings Marktoberdorf Summer School 1993, </booktitle> <pages> pages 281-298. </pages> <booktitle> NATO Advanced Science Institutes, Series F, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1994. </year> <note> To appear. Available by anonymous ftp from the host ftp.cis.upenn.edu. See pub/papers/TableOfContents. </note>
Reference-contexts: The game-theoretic notions used so far draw mainly on set theory and on proof theory. They do not yet fully explain linear logic formulas involving both multiplicative and additive connectives, i.e., the formulas of the multiplicative-additive fragment of linear logic, mall <ref> [Gir87, LMSS92, Sce93, Sce94] </ref>. In contrast, the direct, structural relationship between the natural fragments of linear logic and the standard computational complexity classes that has emerged from [LMSS92, LS94a, LS94b] makes it possible to draw on game-theoretic notions stemming from computational complexity theory.
Reference: [Sha92] <author> A. Shamir. </author> <title> IP = PSPACE. </title> <journal> J. ACM, </journal> <volume> 39 </volume> <pages> 869-877, </pages> <year> 1992. </year>
Reference-contexts: In addition, if the probabilities are required to be bounded away from 1=2, one obtains "Arthur-Merlin games" proposed by Babai and Moran [BM88] or similar "interactive proof systems" proposed by Goldwasser, Micali, and Rackoff [GMR89]. Shamir <ref> [Sha92] </ref> and Shen [She92] have shown that all these formulations describe exactly pspace. Since mall is pspace-complete [LMSS92], it seems a priori possible to give a direct, structural relationship between the prover/verifier interactions just described and mall that goes beyond an immediate Turing reduction. <p> In particular, we hope to relate mall to random evaluation protocols for polynomial expressions <ref> [Sha92, She92] </ref>. The semantic framework for mall discussed in this extended abstract might be just one instance of a broader relationship between linear logic and interactive protocols based on randomization. Indeed, interactive proof systems with two independent provers (mip) are known to be nexptime-complete [BFL91].
Reference: [She92] <author> A. Shen. </author> <title> IP = PSPACE: Simplified Proof. </title> <journal> J. ACM, </journal> <volume> 39 </volume> <pages> 878-880, </pages> <year> 1992. </year>
Reference-contexts: In addition, if the probabilities are required to be bounded away from 1=2, one obtains "Arthur-Merlin games" proposed by Babai and Moran [BM88] or similar "interactive proof systems" proposed by Goldwasser, Micali, and Rackoff [GMR89]. Shamir [Sha92] and Shen <ref> [She92] </ref> have shown that all these formulations describe exactly pspace. Since mall is pspace-complete [LMSS92], it seems a priori possible to give a direct, structural relationship between the prover/verifier interactions just described and mall that goes beyond an immediate Turing reduction. <p> In particular, we hope to relate mall to random evaluation protocols for polynomial expressions <ref> [Sha92, She92] </ref>. The semantic framework for mall discussed in this extended abstract might be just one instance of a broader relationship between linear logic and interactive protocols based on randomization. Indeed, interactive proof systems with two independent provers (mip) are known to be nexptime-complete [BFL91].
Reference: [SS77] <author> R. Solovay and V. Strassen. </author> <title> A fast Monte-Carlo test for primality. </title> <journal> SIAM J. on Computing, </journal> <volume> 6 </volume> <pages> 84-85, </pages> <year> 1977. </year> <note> Erratum 7:118, </note> <year> 1978. </year>
Reference-contexts: Stochastic verification goes back to Solovay and Strassen <ref> [SS77] </ref>. One such setting was introduced in Papadimitriou [Pap85] as "games against Nature" or "stochastic alternating polynomial time machines" (saptime) and shown to characterize polynomial space (pspace). <p> In such prover/verifier interactions, the prover has unlimited power while the verifier can only toss coins or perform simple (say, polynomial time) tasks when presented with the input or with the prover's messages [Pap85, BM88, GMR89]. Stochastic verification goes back to Solovay and Strassen <ref> [SS77] </ref>. As a first step in this direction, we consider "games against Nature" or "stochastic alternating polynomial time machines" (saptime) in the style of [Pap85]. This setting consists of a polynomial time Turing machine (the verifier, V ) and an omnipotent prover, P .
References-found: 21

