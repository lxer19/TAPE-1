URL: http://www.ai.mit.edu/people/unamay/papers/edit-distance.ps
Refering-URL: http://www.ai.mit.edu/people/unamay/papers.html
Root-URL: 
Email: unamay@ai.mit.edu  
Title: Using a Distance Metric on Genetic Programs to Understand Genetic Operators  
Author: Una-May O'Reilly 
Affiliation: MIT AI Lab  
Abstract: I describe a distance metric called "edit" distance which quantifies the syntactic difference between two genetic programs. In the context of one specific problem, the 6 bit multiplexor, I use the metric to analyze the amount of new material introduced by different crossover operators, the difference among the best individuals of a population and the difference among the best individuals and the rest of the population. The relationships between these data and run performance are imprecise but they are sufficiently interesting to encourage encourage further investigation into the use of edit distance.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction This paper reports on preliminary findings towards the goal of understanding more completely what happens when enetic Programming (GP) <ref> [1] </ref> runs succeed or fail. Once we understand why our algorithms work we can then build in self-adaptive features that reinforce the effective search properties we have identified. I describe a distance metric called "edit" distance which is suited to GP's variable length, hierarchical representation. <p> Fair crossover selects interior nodes or leaves as crossover points with equal probability. Height-fair crossover groups subtrees by height, selects one group at random and the selects one subtree of the group at random. Biased crossover is the familiar GP crossover described in <ref> [1] </ref> which selects interior nodes with probability 0.9 and leaf nodes with probability 0.1. 4.2 Results Initially, two runs using fair crossover started with different seeds were selected for analysis. One, run 45, found a solution very quickly in 14 generations. The second, run 7, technically was unsuccessful.
Reference: [2] <author> R.L. Rivest T.L. Cormen, C.E. Leiserson. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1992. </year>
Reference-contexts: 3 Edit distance as a GP program dis tance metric Having indicated the advantage of a distance metric, how does one measure dissimilarity when the items under comparison potentially differ in size, structure and content as in GP? I propose that the community use what is commonly called "edit" distance <ref> [2] </ref>. This metric is widely known in the genetics and computer science communities. 1 It is a dynamic programming algorithm available from the literature on string matching [4, 5, 6] but which I learned about by reading papers on the evolution of RNA [7].
Reference: [3] <author> S. Sankoff and J. B. Kruskal. </author> <title> Time Warps, String Edits and Macromolecules: the theory and practice of sequence comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading,MA, </address> <year> 1983. </year>
Reference-contexts: GP primitives constitute the alphabet of tokens. An entry for two alphabet tokens i and j denotes the cost of substituting i with j. I use the 1 It is also called Levenshtein distance. <ref> [3] </ref> value one for every entry except the diagonal which obviously is zero.
Reference: [4] <author> A.S. Noetzel and S.M. Selkow. </author> <title> An analysis of the general tree editing problem. </title> <editor> In S. Sankoff and J.B. Kruskal, editors, </editor> <title> Time Warps, String Edits and Macromolecules: the theory and practice of sequence comparison, </title> <booktitle> chapter 8, </booktitle> <pages> pages 237-252. </pages> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: This metric is widely known in the genetics and computer science communities. 1 It is a dynamic programming algorithm available from the literature on string matching <ref> [4, 5, 6] </ref> but which I learned about by reading papers on the evolution of RNA [7]. Few researchers in the evolutionary algorithm community seem to be aware of it but it could be a very useful metric for GP analysis. <p> The pseudocode and recurrence relationships for the dynamic programming algorithm which parses the two trees and uses the cost matrix to determine the minimum cost sequence are available from <ref> [4, 5, 6] </ref>. 3.1 Reasons to use edit distance Edit distance is generally appropriate for GP because in GP the difference between two programs may be reasonably attributed to a series of crossover or mutation events that in some sense can be described as a series of edit operations.
Reference: [5] <author> K. Ohmori and E. Tanaka. </author> <title> A unified view of tree metrics. </title> <editor> In G. Ferrate et al, editor, </editor> <booktitle> Syntactic and Structural Pattern Recognition, </booktitle> <pages> pages 85-100. </pages> <booktitle> NATO ASI Series, Vol F45, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: This metric is widely known in the genetics and computer science communities. 1 It is a dynamic programming algorithm available from the literature on string matching <ref> [4, 5, 6] </ref> but which I learned about by reading papers on the evolution of RNA [7]. Few researchers in the evolutionary algorithm community seem to be aware of it but it could be a very useful metric for GP analysis. <p> The pseudocode and recurrence relationships for the dynamic programming algorithm which parses the two trees and uses the cost matrix to determine the minimum cost sequence are available from <ref> [4, 5, 6] </ref>. 3.1 Reasons to use edit distance Edit distance is generally appropriate for GP because in GP the difference between two programs may be reasonably attributed to a series of crossover or mutation events that in some sense can be described as a series of edit operations.
Reference: [6] <author> Kaizhong Zhang. </author> <title> Algorithms for the constrained editing distance between ordered labeled trees and related problems. </title> <journal> Pattern Recognition, </journal> <volume> 28(3) </volume> <pages> 463-474, </pages> <year> 1995. </year>
Reference-contexts: This metric is widely known in the genetics and computer science communities. 1 It is a dynamic programming algorithm available from the literature on string matching <ref> [4, 5, 6] </ref> but which I learned about by reading papers on the evolution of RNA [7]. Few researchers in the evolutionary algorithm community seem to be aware of it but it could be a very useful metric for GP analysis. <p> The pseudocode and recurrence relationships for the dynamic programming algorithm which parses the two trees and uses the cost matrix to determine the minimum cost sequence are available from <ref> [4, 5, 6] </ref>. 3.1 Reasons to use edit distance Edit distance is generally appropriate for GP because in GP the difference between two programs may be reasonably attributed to a series of crossover or mutation events that in some sense can be described as a series of edit operations.
Reference: [7] <author> Manfred Tacker, Peter F. Stadler, Erich G. Bornberg-Bauer, Ivo L. Hofacker, and Peter Schuster. </author> <title> Algorithm independent properties of RNA structure prediction. </title> <journal> Eur. Biophy. J., </journal> <volume> 25 </volume> <pages> 115-130, </pages> <year> 1996. </year> <institution> Santa Fe Institute Preprint 96-04-016. </institution>
Reference-contexts: This metric is widely known in the genetics and computer science communities. 1 It is a dynamic programming algorithm available from the literature on string matching [4, 5, 6] but which I learned about by reading papers on the evolution of RNA <ref> [7] </ref>. Few researchers in the evolutionary algorithm community seem to be aware of it but it could be a very useful metric for GP analysis.
Reference: [8] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> A comparative analysis of GP. </title> <editor> In Peter J. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 2, </booktitle> <pages> pages 23-44. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, USA, </address> <year> 1996. </year>
Reference-contexts: One GP mutation operator, HVL-mutate <ref> [8, 9] </ref>, is, in fact, designed to correspond to the edit operations of edit distance as exactly as possible. It makes the smallest possible modification to a program via substitution, deletion or insertion 2 .
Reference: [9] <author> Una-May O'Reilly. </author> <title> An Analysis of Genetic Programming. </title> <type> PhD thesis, </type> <institution> Carleton University, Ottawa-Carleton Institute for Computer Science, </institution> <address> Ottawa, Ontario, Canada, </address> <month> 22 September </month> <year> 1995. </year>
Reference-contexts: One GP mutation operator, HVL-mutate <ref> [8, 9] </ref>, is, in fact, designed to correspond to the edit operations of edit distance as exactly as possible. It makes the smallest possible modification to a program via substitution, deletion or insertion 2 .
Reference: [10] <author> P. F. Stadler. </author> <title> Linear operators on correlated landscapes. </title> <journal> J. Physique, </journal> <volume> 4 </volume> <pages> 681-696, </pages> <year> 1994. </year>
Reference-contexts: The end result is all we need. There is no way of filling in the cost matrix to constrain the editing to syntactically correct intermediate forms. 3. How can edit distance be used for GP problems to fit into the formal graph definition of a fitness landscape <ref> [10] </ref>? A fitness landscape is a graph where each point of the search space is a node with its associated fitness. Two nodes are connected by an edge if they are neighbours.
References-found: 10

