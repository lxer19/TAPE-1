URL: http://www.cs.umn.edu/Users/dept/users/CS8199/debug-ppcp-94.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/CS8199/
Root-URL: http://www.cs.umn.edu
Email: sannella@cs.washington.edu  
Title: Analyzing and Debugging Hierarchies of Multi-Way Local Propagation Constraints local propagation constraints are a powerful
Author: Michael Sannella 
Note: Multi-way  
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering, FR-35 University of Washington  
Abstract: This paper will appear in Borning, editor, Proceedings of the 1994 Workshop on Principles and Practice of Constraint Programming, Springer-Verlag, 1994. This is a reformatted version of the text that will appear in the book. Abstract to maintain a set of constraints as individual constraints are added and removed. If all of the constraints cannot be satisfied, SkyBlue leaves weaker constraints unsatisfied in order to satisfy stronger constraints (maintaining a constraint hierarchy). Our experience has indicated that large constraint networks can be difficult to construct and understand. To investigate this problem, we have developed the CNV system for interactively constructing constraint-based user interfaces, integrated with tools for displaying and analyzing constraint networks. This paper describes the debugging facilities of CNV, and presents a new algorithm for enumerating all of the ways that SkyBlue could maintain a set of constraints. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Alan Borning, Bjorn Freeman-Benson, and Molly Wilson. </author> <title> Constraint Hierarchies. </title> <journal> Lisp and Symbolic Computation, </journal> <volume> 5(3) </volume> <pages> 223-270, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: For a given set of constraints, it may not be possible to choose methods for all constraints so there are no method conflicts, or there may be multiple ways to select methods. The theory of constraint hierarchies <ref> [1] </ref> offers a way to control the behavior of a constraint solver in these situations. Given a constraint hierarchy, a set of constraints where each constraint has an associated strength, a constraint solver can leave weaker constraints unsatisfied in order to solve stronger constraints.
Reference: [2] <author> Richard Helm, Tien Huynh, Kim Marriott, and John Vlissides. </author> <title> An Object-Oriented Architecture for Constraint-Based Graphical Editing. </title> <booktitle> In Proceedings of the Third Eurographics Workshop on Object-oriented Graphics, </booktitle> <address> Champery, Switzerland, </address> <month> October </month> <year> 1992. </year> <title> Also will be published in Advances in Object-Oriented Graphics II, </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: A more sophisticated tool determines why a particular constraint is unenforced, identifying those stronger constraints that prevent the given constraint from being enforced. Similar tools have been developed for the QOCA toolkit <ref> [2] </ref> and the Geometric Constraint Engine [4].
Reference: [3] <author> Joxan Jaffar, Spiro Michaylov, Peter Stuckey, and Roland Yap. </author> <title> The CLP(R) Language and System. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 14(3) </volume> <pages> 339-395, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Some constraint solvers can produce different possible solutions for a set of constraints, such as the CLP (R) system that generates symbolic expressions representing sets of multiple solutions, and produces alternate solutions upon backtracking <ref> [3] </ref>. Examining the different solutions can help the programmer understand the constraint network, and determine what constraints should be added to control the solver. Given a hierarchy of multi-way local propagation constraints, there may be more than one possible MGB mgraph that SkyBlue could use to maintain the constraints.
Reference: [4] <author> Walid T. Keirouz, Glenn A. Kramer, and Jahir Pabon. </author> <title> Exploiting Constraint Dependency Information for Debugging and Explanation. </title> <editor> In Saraswat and van Hentenryck, editors, </editor> <booktitle> Proceedings of the 1993 Workshop on Principles and Practice of Constraint Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: A more sophisticated tool determines why a particular constraint is unenforced, identifying those stronger constraints that prevent the given constraint from being enforced. Similar tools have been developed for the QOCA toolkit [2] and the Geometric Constraint Engine <ref> [4] </ref>.
Reference: [5] <author> John Maloney. </author> <title> Using Constraints for User Interface Construction. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <month> August </month> <year> 1991. </year> <note> Published as UW CSE Technical Report 91-08-12. </note>
Reference-contexts: If all of the constraints cannot be satisfied, SkyBlue leaves weaker constraints unsatisfied in order to satisfy stronger constraints (maintaining a constraint hi-erarchy). SkyBlue is a successor to DeltaBlue <ref> [5, 10] </ref> that supports two additional features: (1) SkyBlue maintains cycles of constraints by calling external solvers, and (2) SkyBlue supports multi-output methods (methods that set multiple output variables).
Reference: [6] <author> Brad A. Myers, Dario A. Giuse, Roger B. Dannenberg, Brad Vander Zanden, David S. Kosbie, Ed Per-vin, Andrew Mickish, and Philippe Marchal. Garnet: </author> <title> Comprehensive Support for Graphical, Highly-Interactive User Interfaces. </title> <journal> IEEE Computer, </journal> <volume> 23(11) </volume> <pages> 71-85, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: The Multi-Garnet package [9] uses the SkyBlue solver to add support for multi-way constraints and constraint hierarchies to the Garnet user interface toolkit <ref> [6] </ref>. SkyBlue maintains a set of constraints by constructing a method graph (or mgraph) consisting of a set of constraints along with the selected method for each of the constraints. If a constraint has a selected method in an mgraph, it is enforced in the mgraph, otherwise it is unenforced.
Reference: [7] <author> Michael Sannella. </author> <title> Constraint Satisfaction and Debugging for Interactive User Interfaces. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1994. </year>
Reference-contexts: Different strength stay constraints can be used to specify relative preferences for which variables should be constant. SkyBlue is an incremental constraint solver that uses local propagation to maintain a set of constraints as individual constraints are added and removed <ref> [8, 7] </ref>. If all of the constraints cannot be satisfied, SkyBlue leaves weaker constraints unsatisfied in order to satisfy stronger constraints (maintaining a constraint hi-erarchy).
Reference: [8] <author> Michael Sannella. </author> <title> The SkyBlue Constraint Solver and Its Applications. </title> <editor> In Saraswat and van Hentenryck, editors, </editor> <booktitle> Proceedings of the 1993 Workshop on Principles and Practice of Constraint Programming. </booktitle> <publisher> MIT Press, </publisher> <year> 1994. </year> <note> To appear. </note>
Reference-contexts: Different strength stay constraints can be used to specify relative preferences for which variables should be constant. SkyBlue is an incremental constraint solver that uses local propagation to maintain a set of constraints as individual constraints are added and removed <ref> [8, 7] </ref>. If all of the constraints cannot be satisfied, SkyBlue leaves weaker constraints unsatisfied in order to satisfy stronger constraints (maintaining a constraint hi-erarchy).
Reference: [9] <author> Michael Sannella and Alan Borning. Multi-Garnet: </author> <title> Integrating Multi-Way Constraints with Garnet. </title> <type> Technical Report 92-07-01, </type> <institution> Department of Computer Science and Engineering, University of Washing-ton, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: These features make SkyBlue more useful for constructing user interfaces, since cycles of constraints can occur frequently in user interface applications and multi-output methods are necessary to represent certain constraints. The Multi-Garnet package <ref> [9] </ref> uses the SkyBlue solver to add support for multi-way constraints and constraint hierarchies to the Garnet user interface toolkit [6]. SkyBlue maintains a set of constraints by constructing a method graph (or mgraph) consisting of a set of constraints along with the selected method for each of the constraints.
Reference: [10] <author> Michael Sannella, John Maloney, Bjorn Freeman-Benson, and Alan Borning. </author> <title> Multi-way versus One-way Constraints in User Interfaces: Experience with the DeltaBlue Algorithm. </title> <journal> Software|Practice and Experience, </journal> <volume> 23(5) </volume> <pages> 529-566, </pages> <month> May </month> <year> 1993. </year> <month> 12 </month>
Reference-contexts: If all of the constraints cannot be satisfied, SkyBlue leaves weaker constraints unsatisfied in order to satisfy stronger constraints (maintaining a constraint hi-erarchy). SkyBlue is a successor to DeltaBlue <ref> [5, 10] </ref> that supports two additional features: (1) SkyBlue maintains cycles of constraints by calling external solvers, and (2) SkyBlue supports multi-output methods (methods that set multiple output variables).
References-found: 10

