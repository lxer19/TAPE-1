URL: http://www.cs.iastate.edu/~balakris/papers/Coms625.ps
Refering-URL: http://www.cs.iastate.edu/~balakris/research.html
Root-URL: http://www.cs.iastate.edu
Title: Parallel Genetic Algorithms, Premature Convergence and the nCUBE  
Author: Karthik Balakrishnan 
Date: Spring 1993  
Pubnum: Coms 625x Term Project  
Abstract: Genetic Algorithms (GAs), first proposed by John Holland in the early seventies, are growing in stature as tools in the fields of machine learning and function optimization. GAs model evolution of life. To solve a particular task, a genetic algorithm creates and maintains a population of organisms, probabilistically modifying the population, while seeking a near-optimal solution to the task at hand. While GAs have been extensively used in designing semiconductor layouts, in factory control and in the solution of optimization problems, they suffer from premature convergence. Under conditions of premature convergence, the entire population looks almost alike and hence cannot produce offspring which are radically different. When this happens, the GA, will never explore other regions of the search space (since it has no way of generating offspring reflecting search in those regions) and hence it might miss out on the global solution of the problem. In this paper we explore the possibility of alleviating (not overcoming!) this problem by maintaining independent subpopulations, each performing a search in the solution space (hopefully in different regions). We also allow migration of individuals from one population to another as a mode of communication of current search status of the subpopulations. These migrated individuals introduce diversity and variation in otherwise prematurely converged populations, thereby keeping the search process alive. Intuitively, such an approach enhances the chances of the distributed GA finding the global solution and we show through simulations that this is indeed true. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Davis, L. </author> <title> Applying Adaptive Algorithms to Epistatic Domains, </title> <booktitle> in Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <address> Los Angeles, CA, </address> <month> August </month> <year> 1985 </year> <month> 162-164 </month>
Reference-contexts: Schaffer et al. [9] have shown that 2-point crossover handles spurious correlations better than uniform crossover (1-point), and hence is not severely plagued by the premature convergence problem. For more theoretical analysis of multi-point crossover refer Spears and De Jong [10]. Other variants of crossover include: order crossover <ref> [1] </ref>, cycle crossover [8], partially mapped crossover [3], edge recombination [12] etc., their discussion is beyond the scope of this paper. * Mutation: Mutation is an arbitrary change in genes that corresponds to a chromosome-duplication process gone haywire.
Reference: [2] <author> Fox, B.R. and McMahon, </author> <title> M.B. Genetic Operators for Sequencing Problems, in Foundations of Genetic Algorithms, </title> <editor> (Ed Rawlins, G.E.), </editor> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: In this context, crossover has to be redefined, keeping in mind the constraints imposed by the problem. Problems using matrix representations typically also use operators like Intersection and Union. Fox and McMahon <ref> [2] </ref> have shown that on problems involving scheduling (like TSP), these two genetic operators give rise to superior performance. For our running example - Kookie, we choose only the uniform crossover and a simple mutation. We assume that mutation either increases or decreases the gene values by 1.
Reference: [3] <author> Goldberg, D.E. </author> <title> Genetic Algorithm in Search, Optimization, and Machine Learning, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1989. </year>
Reference-contexts: For more theoretical analysis of multi-point crossover refer Spears and De Jong [10]. Other variants of crossover include: order crossover [1], cycle crossover [8], partially mapped crossover <ref> [3] </ref>, edge recombination [12] etc., their discussion is beyond the scope of this paper. * Mutation: Mutation is an arbitrary change in genes that corresponds to a chromosome-duplication process gone haywire.
Reference: [4] <author> Goldberg, D.E., and Lingle, R. </author> <title> Alleles, Loci and the Traveling Salesman Problem, </title> <booktitle> in Proceedings of an International Conference on Genetic Algorithms and their Applications ( L. Erlbaum, 1988, original proceedings 1985), </booktitle> <pages> 154-159, </pages> <year> 1985. </year>
Reference-contexts: The performance of the algorithm is critically dependent on the representation, and hence extreme care must be taken in deciding on a particular one. For e.g. matrix representation is preferred in GAs for solving the Traveling Salesperson Problem (TSP) <ref> [4, 8, 12] </ref> because TSP presents specific difficulties due to constraints imposed on the symbol string that represents a tour of the cities.
Reference: [5] <editor> Goldberg, D.E., and Deb, </editor> <publisher> K. </publisher>
Reference-contexts: There are many different selection schemes, each with its own set of advantages and disadvantages. For a detailed analysis of growth rates, effects on population dynamics etc., the reader is referred to an article by Goldberg and Deb <ref> [5] </ref>. A few selection schemes are mentioned below: * Proportionate Selection: probability of selecting individual i for mating = f i P j f j Note:: if fitness of an individual is zero, it can never be selected * Ranking Selection: 1.
References-found: 5

