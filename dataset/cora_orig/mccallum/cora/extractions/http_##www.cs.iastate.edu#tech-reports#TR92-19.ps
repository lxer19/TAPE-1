URL: http://www.cs.iastate.edu/tech-reports/TR92-19.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: http://www.cs.iastate.edu
Title: Fast Algorithms for Inferring Evolutionary Trees  
Author: TR - Richa Agarwala, David Fernandez-Baca, and Giora Slutzki 
Address: 226 Atanasoff Ames, IA 50011  
Affiliation: Iowa State University of Science and Technology Department of Computer Science  
Date: July 6, 1992  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> H. Bodlaender, M. Fellows, and T. Warnow. </author> <title> Two strikes against perfect phylogeny. </title> <booktitle> In Proceedings of the 19th International Colloquium on Automata, Languages, and Programming, </booktitle> <address> Springer Verlag, </address> <note> Lecture Notes in Computer Science, to appear, </note> <year> 1992. </year>
Reference-contexts: Recently, this problem was shown to be NP-complete by Bodlaender et. al. <ref> [1] </ref>.
Reference: [2] <author> G. F. Estabrook, C. S. Johnson Jr., and F. R. McMorris. </author> <title> An idealized concept of the true cladistic character. </title> <journal> Mathematical Biosciences, </journal> <volume> 23, </volume> <pages> 263-272, </pages> <year> 1975. </year>
Reference-contexts: Gusfield's algorithm for BP and ours are based on the following fundamental result. Lemma 1 <ref> [2] </ref> C has a perfect phylogenetic tree P iff for every pair of characters C i ; C j , either C i " C j = ; or one contains the other. 2 A set of characters C satifying the conditions of this lemma shall be said to be com
Reference: [3] <author> G. F. Estabrook. </author> <title> Cladistic methodology: A discussion of the theoretical basis for the induction of evolutionary history. </title> <journal> Annual Review of Ecology and Systematics, </journal> <volume> Vol. 3, </volume> <pages> 427-456, </pages> <year> 1972. </year>
Reference-contexts: 1 Introduction A fundamental problem in molecular biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [3, 4] </ref>. Each character can occur in a species in one of a fixed number of states. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny.
Reference: [4] <author> W. M. Fitch. </author> <title> Aspects of Molecular Evolution. </title> <journal> Annual Reviews of Genetics, </journal> <volume> Vol. 7, </volume> <pages> 343-380, </pages> <year> 1973. </year>
Reference-contexts: 1 Introduction A fundamental problem in molecular biology is that of inferring the evolutionary history of a set of species, each of which is specified by the set of traits or characters that it exhibits <ref> [3, 4] </ref>. Each character can occur in a species in one of a fixed number of states. Information about evolutionary history can be conveniently represented by an evolutionary or phylogenetic tree, often referred to simply as a phylogeny.
Reference: [5] <author> D. Gusfield. </author> <title> Efficient algorithms for inferring evolutionary trees. </title> <journal> Networks, </journal> <volume> Vol. 21, </volume> <pages> 19-28, </pages> <year> 1991. </year>
Reference-contexts: See Figure 1 for an example. We shall refer to this special case of perfect phylogeny problem as the binary phylogeny (BP) problem. For the biological assumptions and interpretation of this problem, see <ref> [5] </ref>. Gusfield [5] gave a time-optimal algorithm for solving BP which takes time linear in the size of the input matrix M . <p> See Figure 1 for an example. We shall refer to this special case of perfect phylogeny problem as the binary phylogeny (BP) problem. For the biological assumptions and interpretation of this problem, see <ref> [5] </ref>. Gusfield [5] gave a time-optimal algorithm for solving BP which takes time linear in the size of the input matrix M . <p> We assume that all characters are nonempty. Our first result is a O (C) algorithm for BP where C = P m i=1 jC i j. This is a significant improvement over the O (nm) algorithm given in <ref> [5] </ref> for the case where M is sparse. Next, we give two online algorithms. The first one receives characters as input one at a time.
References-found: 5

