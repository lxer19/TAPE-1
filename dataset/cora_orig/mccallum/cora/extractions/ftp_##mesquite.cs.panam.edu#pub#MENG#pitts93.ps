URL: ftp://mesquite.cs.panam.edu/pub/MENG/pitts93.ps
Refering-URL: http://www.cs.panam.edu/meng/pub.html
Root-URL: http://www.cs.panam.edu
Email: meng@bucknell.edu  
Title: An Empirical Study of Distributed Simulation in A Loosely Coupled Environment  
Author: Xiannong Meng 
Address: Lewisburg, PA 17837  
Affiliation: Computer Science Department Bucknell University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. Bagrodia, K.M. Chandy, , and W.T. Liao. </author> <title> An experimental study on the performance of the space-time simulation algorithm. </title> <booktitle> In Proceedings of PADS92 Simulation Series, </booktitle> <pages> pages 159 - 168. </pages> <publisher> CSC, </publisher> <year> 1992. </year>
Reference-contexts: The other is the saving of the simulation states for the possible rollback. For the issues of state saving, researchers have proposed different solutions, such as periodic saving, skip states, see references [7], <ref> [1] </ref>, [8] and [4]. Fujimoto et.al. proposed a hardware solution to the problem of rollback [3].
Reference: [2] <author> Richard Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of ACM, </journal> <volume> 33(10), </volume> <month> Octobor </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses <ref> [2] </ref>, [6], [9]. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LP's can execute the simulation in parallel. Thus a significant speedup often can be achieved. <p> These LP's can execute the simulation in parallel. Thus a significant speedup often can be achieved. The correctness of the simulation is provided by the Local Causality Constraint <ref> [2] </ref> which states: A discrete event simulation, consisting of logical processes (LP's) that interact exclusively by exchanging timestamped messages, obeys the local causality constraint if and only if each LP processes events in nondecreas ing timestamp order.
Reference: [3] <author> R.M. Fujimoto, J.J. Tsai, and G. Gopalakrishnan. </author> <title> The roll back chip: Hardware support for distributed simulation using time warp. </title> <editor> In David Jefferson Brian Unger, editor, </editor> <booktitle> Distributed Simulation (Simulation Series), </booktitle> <pages> pages 81-86. </pages> <publisher> SCS, SCS, </publisher> <year> 1988. </year>
Reference-contexts: The other is the saving of the simulation states for the possible rollback. For the issues of state saving, researchers have proposed different solutions, such as periodic saving, skip states, see references [7], [1], [8] and [4]. Fujimoto et.al. proposed a hardware solution to the problem of rollback <ref> [3] </ref>. It is the issue of saving copies of the scheduled events that we are to discuss further in this paper. 3 Proposed Solution In this section, we will identify a class of distributed simulation problems that need not save copies of the scheduled events.
Reference: [4] <author> Anat Gafni. </author> <title> Space management and cancellation mechanisms for time warp. </title> <type> Technical Report TR-85-341, </type> <institution> Univ. of Southern California, </institution> <year> 1985. </year>
Reference-contexts: The anti-event may itself cause rollback on the LP if the timestamp of the anti-event is smaller than the local clock of the LP. Recursively repeating this procedure eventually eliminates all the effects of the erroneous computation. This process is proved to be bounded <ref> [4] </ref>. The smallest timestamp among all unprocessed events (positive and negative) is called global virtual time (GVT). The progress of the simulation is guaranteed because no event with timestamp smaller than GVT will ever be rolled back. Events with timestamp smaller than GVT can be removed from the event list. <p> The other is the saving of the simulation states for the possible rollback. For the issues of state saving, researchers have proposed different solutions, such as periodic saving, skip states, see references [7], [1], [8] and <ref> [4] </ref>. Fujimoto et.al. proposed a hardware solution to the problem of rollback [3].
Reference: [5] <author> David R. Jefferson. </author> <title> Virtual time. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 7(3), </volume> <month> July </month> <year> 1985. </year>
Reference-contexts: When an event is about to be rolled back, its output queue is checked. One anti-event is sent to where the wrongly-scheduled event was sent for each event in the output queue. The anti-event will annihilate the positive event when it is put into the event queue (see <ref> [5] </ref> for detailed description). The anti-event may itself cause rollback on the LP if the timestamp of the anti-event is smaller than the local clock of the LP. Recursively repeating this procedure eventually eliminates all the effects of the erroneous computation. This process is proved to be bounded [4].
Reference: [6] <author> Jayadev Misra. </author> <title> Distributed discrete-event simulation. Computing Survey, </title> <type> 18(1), </type> <month> March </month> <year> 1986. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses [2], <ref> [6] </ref>, [9]. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LP's can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [7] <author> A. Prakash and R. Subramanian. </author> <title> An efficient optimistic distributed simulation scheme based on conditional knowledge. </title> <booktitle> In Distributed Simulation vol. </booktitle> <volume> 24 no. 3, </volume> <pages> pages 85 - 94. </pages> <publisher> SCS, </publisher> <year> 1992. </year>
Reference-contexts: The other is the saving of the simulation states for the possible rollback. For the issues of state saving, researchers have proposed different solutions, such as periodic saving, skip states, see references <ref> [7] </ref>, [1], [8] and [4]. Fujimoto et.al. proposed a hardware solution to the problem of rollback [3].
Reference: [8] <author> B.R. Preiss, I.D. MacIntyre, and W.M. Loucks. </author> <title> On the trade-off between time and sapce in optimistic parallel discrete-event simulation. </title> <booktitle> In Proceedings of PADS92, </booktitle> <pages> pages 33 - 41. </pages> <publisher> SCS, </publisher> <year> 1992. </year>
Reference-contexts: The other is the saving of the simulation states for the possible rollback. For the issues of state saving, researchers have proposed different solutions, such as periodic saving, skip states, see references [7], [1], <ref> [8] </ref> and [4]. Fujimoto et.al. proposed a hardware solution to the problem of rollback [3].
Reference: [9] <author> Rhonda Righter and Jean Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1), </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Recently, the theory and the technology of parallel and distributed simulation have made significant progresses [2], [6], <ref> [9] </ref>. In distributed simulation, the simulation tasks are divided into a number of logical processes or LP and distributed to a number of processors. These LP's can execute the simulation in parallel. Thus a significant speedup often can be achieved.
Reference: [10] <author> Andrew S. Tanenbaum. </author> <title> Computer Networks. </title> <publisher> Prentice-Hall, </publisher> <year> 1981. </year> <month> 14 </month>
References-found: 10

