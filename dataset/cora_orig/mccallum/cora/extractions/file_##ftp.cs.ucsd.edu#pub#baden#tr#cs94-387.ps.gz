URL: file://ftp.cs.ucsd.edu/pub/baden/tr/cs94-387.ps.gz
Refering-URL: http://www.cs.ucsd.edu/groups/hpcl/scg/tr.html
Root-URL: http://www.cs.ucsd.edu
Title: The Parallelization of an Adaptive Multigrid Eigenvalue Solver with LPARX  
Author: Scott R. Kohn Scott B. Baden 
Abstract: We have developed a parallel adaptive eigenvalue solver and applied it to a model problem in theoretical materials science. Our method combines adaptive mesh refinement techniques with a novel multigrid eigenvalue algorithm. By exploiting adaptivity, we have reduced computation time and memory consumption by more than two orders of magnitude. We have implemented our solver using the LPARX parallel programming system, which considerably simplified the programming and enabled us to run the same code on a diversity of high performance parallel architectures.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. J. Berger and P. Colella, </author> <title> Local adaptive mesh refinement for shock hydrodynamics, </title> <journal> Journal of Computational Physics, </journal> <volume> 82 (1989), </volume> <pages> pp. 64-84. </pages>
Reference-contexts: In collaboration with materials scientists and mathematicians, we are developing adaptive numerical techniques and the accompanying software infrastructure for resolving the multiple length scales present in materials science calculations. We have implemented an adaptive eigenvalue solver which integrates adaptive mesh refinement techniques [2] <ref> [1] </ref> with a multigrid eigenvalue algorithm [6]. To our knowledge, this is the first time such techniques have been combined to solve materials science problems. Traditionally, Fourier space representations have been employed; however, Fourier methods do not easily admit non-uniformity. <p> Rather, we adaptively refine u and expend computational resources only in those areas requiring high accuracy. How this is done is the subject of the following section. 4 Adaptive Mesh Refinement Adaptive mesh refinement (AMR) methods [2] <ref> [1] </ref> [4] solve partial differential equations using a hierarchy of nested finite difference grids. Each level of the hierarchy provides a more accurate representation of the solution than the levels beneath it. When creating a new level, AMR locally refines the hierarchy according to an error estimate calculated at run-time.
Reference: [2] <author> M. J. Berger and J. Oliger, </author> <title> Adaptive mesh refinement for hyperbolic partial differential equations, </title> <journal> Journal of Computational Physics, </journal> <volume> 53 (1984), </volume> <pages> pp. 484-512. </pages>
Reference-contexts: Adaptivity is essential in resolving local phenomena. In collaboration with materials scientists and mathematicians, we are developing adaptive numerical techniques and the accompanying software infrastructure for resolving the multiple length scales present in materials science calculations. We have implemented an adaptive eigenvalue solver which integrates adaptive mesh refinement techniques <ref> [2] </ref> [1] with a multigrid eigenvalue algorithm [6]. To our knowledge, this is the first time such techniques have been combined to solve materials science problems. Traditionally, Fourier space representations have been employed; however, Fourier methods do not easily admit non-uniformity. <p> Rather, we adaptively refine u and expend computational resources only in those areas requiring high accuracy. How this is done is the subject of the following section. 4 Adaptive Mesh Refinement Adaptive mesh refinement (AMR) methods <ref> [2] </ref> [1] [4] solve partial differential equations using a hierarchy of nested finite difference grids. Each level of the hierarchy provides a more accurate representation of the solution than the levels beneath it.
Reference: [3] <author> M. J. Berger and I. Rigoutsos, </author> <title> An algorithm for point clustering and grid generation, </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 21 (1991), </volume> <pages> pp. 1278-1286. </pages>
Reference-contexts: For further details, refer to <ref> [3] </ref> [7]. 5 Implementation Adaptive mesh refinement applications applications are difficult to parallelize because they rely on elaborate, dynamic, irregular data structures. The location, size, number, and shape of refinement regions is generally not known at compile time; thus, compiler optimization techniques do not apply.
Reference: [4] <author> A. Brandt, </author> <title> Multi-level adaptive solutions to boundary-value problems, </title> <journal> Mathematics of Computation, </journal> <volume> 31 (1977), </volume> <pages> pp. 333-390. </pages>
Reference-contexts: Rather, we adaptively refine u and expend computational resources only in those areas requiring high accuracy. How this is done is the subject of the following section. 4 Adaptive Mesh Refinement Adaptive mesh refinement (AMR) methods [2] [1] <ref> [4] </ref> solve partial differential equations using a hierarchy of nested finite difference grids. Each level of the hierarchy provides a more accurate representation of the solution than the levels beneath it. When creating a new level, AMR locally refines the hierarchy according to an error estimate calculated at run-time.
Reference: [5] <author> E. J. Bylaska, S. R. Kohn, S. B. Baden, A. Edelman, R. Kawai, M. E. G. Ong, and J. H. Weare, </author> <title> Scalable parallel numerical methods and software tools for material design, </title> <booktitle> in Proceedings of the Sixth SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <address> San Francisco, CA, </address> <month> Februrary </month> <year> 1995. </year>
Reference-contexts: Exploiting adaptivity has enabled us to address problems which could not have been solved before. We have begun to apply our adaptive code to problems in materials science; for a preliminary report of our results, refer to <ref> [5] </ref> in these proceedings. We would like to thank Eric Bylaska, Alan Edelman, Ryoichi Kawai, Steve McCormick, Beth Ong, and John Weare for numerous valuable discussions on numerical methods in materials science.
Reference: [6] <author> Z. Cai, J. Mandel, and S. McCormick, </author> <title> Multigrid methods for nearly singular linear equations and eigenvalue problems. </title> <note> (submitted for publication), </note> <year> 1994. </year>
Reference-contexts: In collaboration with materials scientists and mathematicians, we are developing adaptive numerical techniques and the accompanying software infrastructure for resolving the multiple length scales present in materials science calculations. We have implemented an adaptive eigenvalue solver which integrates adaptive mesh refinement techniques [2] [1] with a multigrid eigenvalue algorithm <ref> [6] </ref>. To our knowledge, this is the first time such techniques have been combined to solve materials science problems. Traditionally, Fourier space representations have been employed; however, Fourier methods do not easily admit non-uniformity. <p> Instead, we use a multigrid-based method by Cai et al. <ref> [6] </ref>.
Reference: [7] <author> S. R. Kohn and S. B. Baden, </author> <title> Parallel adaptive numerical methods for materials science. (in preparation). [8] , A robust parallel programming model for dynamic non-uniform scientific computations, </title> <booktitle> in Proceedings of the 1994 Scalable High Performance Computing Conference, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: For further details, refer to [3] <ref> [7] </ref>. 5 Implementation Adaptive mesh refinement applications applications are difficult to parallelize because they rely on elaborate, dynamic, irregular data structures. The location, size, number, and shape of refinement regions is generally not known at compile time; thus, compiler optimization techniques do not apply.
Reference: [9] <author> W. Kohn and L. Sham, </author> <note> Phys, Rev., 140 (1965), p. A1133. </note>
Reference-contexts: Paragon time was provided by a UCSD School of Engineering Block Grant. y Department of Computer Science and Engineering, University of California, San Diego, La Jolla, CA 92093-0114. 2 Kohn and Baden common approach uses the Local Density Approximation (LDA) of Kohn and Sham <ref> [9] </ref>.
References-found: 8

