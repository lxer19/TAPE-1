URL: http://vibes.cs.uiuc.edu/Publications/Theses/KwanPhD.ps
Refering-URL: http://vibes.cs.uiuc.edu/Publications/Theses/theses.htm
Root-URL: http://www.cs.uiuc.edu
Title: c  
Author: flCopyright by Thomas Tai Yung Kwan 
Date: 1998  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Acharya, A., and Saltz, J. </author> <title> A Study of Internet Round-Trip Delay. </title> <type> Tech. Rep. </type> <institution> CS-TR-3736, UMIACS and Department of Computer Science, University of Maryland, College Park, MD, </institution> <year> 1996. </year>
Reference-contexts: Note, however, that the jitter-based method was developed based on the behavior of network links within the United States. The method does not work well with international links which exhibit more unpredictable behavior <ref> [1] </ref>. In addition, Komodo does not address the scalability issue of maintaining a global view of a large number of network links and hosts. The Globus Heartbeat Monitor (HBM) [100] is a fault detector for determining and reporting network and machine failures. <p> Finally, ARIMA requires a heavy investment in time to build a satisfactory model. Acharya and Saltz <ref> [1] </ref> proposed using the jitter-based method to predict network latencies. In this method, the mode (within a jitter threshold) is the predictor of the next data value. However, Acharya and Saltz observed that the jitter-based method does not work well for data collected from international networks. <p> is more encompassing than MAE, MSE, and MAPE because it provides a comparison of the selected forecasting method with the baseline method and accounts for the disproportionate cost of large errors. 34 Turning away from NWS, we compare our ideal information acquisition interval with that proposed by Acharya and Saltz <ref> [1] </ref>. Acharya and Saltz conjectured that sampling once every 45 minutes to an hour would be adequate for monitoring changes in round trip delays.
Reference: [2] <author> Agrawal, R., Imielinski, T., and Swami, A. </author> <title> Database Mining: A Performance Perspective. </title> <journal> IEEE Transactions on Knowledge and Data Engineering 5, </journal> <month> 6 (December </month> <year> 1993), </year> <pages> 914-925. </pages>
Reference-contexts: In this experiment, we also demonstrate true heterogeneity by executing the code atop browsers from multiple vendors, and on personal computers and Unix workstations. 11.4.1 Application Characteristics Recently, the emerging field of data mining and knowledge discovery <ref> [2, 37, 36] </ref> has enabled computer users to perform sophisticated data analysis using a confluence of techniques from statistics, machine learning, visualization, and high performance computing.
Reference: [3] <author> ATM Forum. </author> <title> ATM User-Network Interface Specification, </title> <type> Version 3.1. </type> <institution> Mountain View, California, </institution> <year> 1994. </year>
Reference-contexts: We address this issue by evaluation the performance of a WorldWide-Web/Java-based infrastructure to gain insights into the feasibility and projected cost 1 The very-high-performance Backbone Network Service (vBNS) is a 622 megabits/second, Asynchronous Transfer Mode <ref> [3] </ref> (i.e., ATM OC-12) wide area network that connects NSF supercomputing centers in the United States. 2 To compute the execution time, we assume that, with the use of redundant servers, 92 percent of the clients will be available.
Reference: [4] <author> Baker, M. </author> <title> Cluster Computing Review. </title> <type> Tech. Rep. </type> <institution> SCCS-748, Northeast Parallel Architectures Center, Syracuse University, </institution> <month> November </month> <year> 1995. </year>
Reference-contexts: WebVM [43, 44] uses collections of WWW servers to form a virtual machine for parallel computing. Although leveraging Java technologies, WebVM makes no attempt to take advantage of the capabilities of WWW clients. In addition, WebVM leverages resource management modules developed for cluster computing packages <ref> [4] </ref>. However, these packages are not designed to handle the variability in network speeds commonly encountered in wide area computing. Charlotte [8] is a Java-based, parallel computing infrastructure.
Reference: [5] <author> Baldeschwieler, J. E., Blumofe, R. D., and Brewer, E. A. </author> <title> ATLAS: An Infrastructure for Global Computing. </title> <booktitle> In Proceedings of the Seventh ACM SIGOPS European Workshop on Systems Support for Worldwide Appplication (September 1996). </booktitle>
Reference-contexts: Below, we briefly survey three general global computing infrastructures: ATLAS, Globe, and WebOS. ATLAS <ref> [5] </ref> is a global computing infrastructure that supports parallel multithreaded programs. The ATLAS architecture is hierarchy based, and load balancing is provided by hierarchical work stealing the spreading of computation up the tree to locate idle subtrees.
Reference: [6] <author> Banerjea, A., Ferrari, D., Mah, B., Moran, M., Verma, D., and Zhang, H. </author> <title> The Tenet Real-Time Protocol Suite: Design, Implementation, and Experiences. </title> <type> Tech. Rep. </type> <institution> TR-94-059, International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: Mariposa obtains load averages by periodically running a Unix utility, and acquires information on network bandwidths by using the Tenet network protocol suite <ref> [6] </ref>. In essence, Mariposa maintains an internal information acquisition infrastructure to obtain machine load and network bandwidth data. However, Mariposa does not keep nor use any history of the performance data; it always uses the latest measurements. 2.2 Metacomputing Recently, researchers have developed several infrastructures for wide area metacomputing.
Reference: [7] <author> Barak, A., and Shiloh, A. </author> <title> A Distributed Load-Balancing Policy for a Multicomputer. </title> <journal> Software Practice and Experience 15, </journal> <volume> 9 (1985), </volume> <pages> 901-913. </pages>
Reference-contexts: Moreover, the information can be dated, thereby reducing the effectiveness of complex policies. Eager et al, however, did not suggest a way to maintain a global view of the state information of all the machines in a distributed system. In Barak and Shiloh's load balancing policy <ref> [7] </ref>, each computer in a distributed system maintains a load vector that contains information about a small, fixed number of computers. Random pairs of nodes periodically exchange local information.
Reference: [8] <author> Baratloo, A., Karaul, M., Kedem, Z., and Wyckoff, P. </author> <booktitle> Charlotte: Metacom-puting on the Web. In Proceedings of the Ninth International Conference on Parallel and Distributed Computing Systems (September 1996), </booktitle> <pages> pp. 181-188. 178 </pages>
Reference-contexts: In addition, WebVM leverages resource management modules developed for cluster computing packages [4]. However, these packages are not designed to handle the variability in network speeds commonly encountered in wide area computing. Charlotte <ref> [8] </ref> is a Java-based, parallel computing infrastructure. Rather than relying on past measurements of machine loads and network latencies, Charlotte performs eager scheduling where jobs are redundantly scheduled on multiple machines. The computation is considered finished as soon as one machine completes the task.
Reference: [9] <author> Basu, S., Mukherjee, A., and Klivansky, S. </author> <title> Time Series Models for Internet Traffic. </title> <type> Tech. Rep. </type> <institution> GIT-CC-95-27, Georgia Institute of Technology, College of Computing, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: The ARIMA (auto-regressive integrated moving average) model is one of the most powerful and general approaches to solving forecasting problems [16, 81]. Basu, Mukherjee, and Klivan-sky <ref> [9] </ref> showed that seasonal ARIMA models can be used to characterize a large class of Internet traffic. However, they concluded that the exact form of the model and the model parameters still depend on the individual network traffic pattern.
Reference: [10] <author> Bayer, R., and McCreight, E. M. </author> <title> Organization and Maintenance of Large Ordered Indexes. </title> <journal> Acta Informatica 1, </journal> <volume> 3 (1972), </volume> <pages> 173-189. </pages>
Reference-contexts: For computational stability, we must expand the hierarchy upward rather than downward so the machines can anchor at the bottom of the hierarchy for as long as possible. Simply put, we should build a hierarchy based on B-trees <ref> [10] </ref> (i.e., trees that only increase in height at the top).
Reference: [11] <author> Bayer, R., and Schkolnick, M. </author> <title> Concurrency of Operations on B-Trees. </title> <journal> Acta Infor-matica 9, </journal> <volume> 1 (1977), </volume> <pages> 1-21. </pages>
Reference-contexts: If the parent is full, however, it will initiate node splitting. Thus, it is possible for node splitting to percolate to the root. To coordinate changes in the system state during node splitting, we need a synchronization protocol. Our protocol is similar to the B-tree locking protocol <ref> [11, 49] </ref>. However, we only hold exclusive semaphores on the new server, the original second level manager, and the parent of the original second level manager. In contrast, B-trees hold exclusive semaphores on all the nodes on the path from the original second level manager to the root.
Reference: [12] <author> Berman, F., and Wolski, R. </author> <title> Scheduling From the Perspective of the Application. </title> <booktitle> In Proceedings of the Fifth IEEE Symposium on High Performance Distributed Computing (August 1996), </booktitle> <pages> pp. 100-111. </pages>
Reference-contexts: However, Mariposa does not keep nor use any history of the performance data; it always uses the latest measurements. 2.2 Metacomputing Recently, researchers have developed several infrastructures for wide area metacomputing. Below, we briefly describe three large scale, metacomputing projects: AppLeS, Legion, and Globus. AppLeS <ref> [12, 13] </ref> is an application-level scheduler for distributed, heterogeneous computing. AppLeS schedules applications by using machine and network load forecasts obtained from the Network Weather Service (NWS) to select machines for program execution.
Reference: [13] <author> Berman, F., Wolski, R., Figueira, S., Schopf, J., and Shao, G. </author> <title> Application-Level Scheduling on Distributed Heterogeneous Networks. </title> <booktitle> In Supercomputing '96 (November 1996). </booktitle>
Reference-contexts: However, Mariposa does not keep nor use any history of the performance data; it always uses the latest measurements. 2.2 Metacomputing Recently, researchers have developed several infrastructures for wide area metacomputing. Below, we briefly describe three large scale, metacomputing projects: AppLeS, Legion, and Globus. AppLeS <ref> [12, 13] </ref> is an application-level scheduler for distributed, heterogeneous computing. AppLeS schedules applications by using machine and network load forecasts obtained from the Network Weather Service (NWS) to select machines for program execution.
Reference: [14] <author> Berners-Lee, T., Cailliau, R., Luotonen, A., Nielsen, H. F., and Secret, A. </author> <title> The World-Wide Web. </title> <journal> Communications of the ACM 37, </journal> <month> 8 (May </month> <year> 1994), </year> <pages> 76-82. </pages>
Reference: [15] <author> Black, F., and Scholes, M. </author> <title> The Pricing of Options and Corporate Liabilities. </title> <journal> Journal of Political Economy (May/June 1973). </journal>
Reference-contexts: of return of the stock T Number of simulation time periods (i.e., time to maturity of option) seed Input to the random number generator Table 11.1: Input Parameters to the Option Pricing Code computation, the code compares the expected gain with the theoretical value computed from the Black-Scholes pricing formula <ref> [15, 77] </ref>. 3 Table 11.1 shows the input parameters of the simulation. In our experiments, we only vary the seed of the random number generator when simulating stock price movements. It is, however, possible to vary the simulation time period to change the computation-to-communication ratio as well.
Reference: [16] <author> Box, G. E. P., and Jenkins, G. M. </author> <title> Time Series Analysis: Forecasting and Control. </title> <publisher> Holden-Day, </publisher> <address> San Francisco, California, </address> <year> 1970. </year>
Reference-contexts: The ARIMA (auto-regressive integrated moving average) model is one of the most powerful and general approaches to solving forecasting problems <ref> [16, 81] </ref>. Basu, Mukherjee, and Klivan-sky [9] showed that seasonal ARIMA models can be used to characterize a large class of Internet traffic. However, they concluded that the exact form of the model and the model parameters still depend on the individual network traffic pattern.
Reference: [17] <author> Brecht, T., Sandhu, H., Shan, M., and Talbot, J. ParaWeb: </author> <title> Towards World-Wide Supercomputing. </title> <booktitle> In Proceedings of the Seventh ACM SIGOPS European Workshop on Systems Support for Worldwide Appplication (September 1996). </booktitle>
Reference-contexts: JET has a fault-tolerant mechanism where it restarts sub-tasks that did not execute to completion due to failure of a worker host. However, JET does not monitor network latencies and machine loads. ParaWeb <ref> [17] </ref> supports parallel computation on the World Wide Web via a modified Java interpreter that enables distributed thread placement. However, ParaWeb does not address issues in the scalability of the architecture nor the robust acquisition of machine and network states for load balancing.
Reference: [18] <author> Brown, R. G. </author> <title> Exponential Smoothing for Predicting Demand. </title> <booktitle> Presented at the Tenth National Meeting of the Operations Research Society of America (November 1956). </booktitle>
Reference-contexts: These methods do not emphasize recent data over data collected in the distant past and thus are unable to accurately forecast emerging data patterns. In addition, averaging does not take periodic pattern into account. Therefore, simple averaging methods are often unsuitable for forecasting network traffic. Exponential smoothing <ref> [18, 56, 30, 19] </ref> is more sophisticated than averaging but is still a fast and robust technique for time series forecasting. This smoothing technique is best for predicting time series where the underlying process is constant (i.e., the process can be modeled by a single value). <p> Table 11.5 shows the characteristics of our application. In the application, we analyze network latency data collected from ping traces by fitting the data to the single exponential smoothing model <ref> [18] </ref> and Winter's season model [114], iterating over all smoothing constants between 0.01 and 0.3 at 0.01 increments. At the end of the computation, the model that produces the lowest forecast error and its associated smoothing constant (s) are recorded in a database.
Reference: [19] <author> Brown, R. G. </author> <title> Smoothing, Forecasting, and Prediction of Discrete Time Series. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1962. </year> <month> 179 </month>
Reference-contexts: These methods do not emphasize recent data over data collected in the distant past and thus are unable to accurately forecast emerging data patterns. In addition, averaging does not take periodic pattern into account. Therefore, simple averaging methods are often unsuitable for forecasting network traffic. Exponential smoothing <ref> [18, 56, 30, 19] </ref> is more sophisticated than averaging but is still a fast and robust technique for time series forecasting. This smoothing technique is best for predicting time series where the underlying process is constant (i.e., the process can be modeled by a single value). <p> Theoretically, we can set ff to any value between 0 and 1. In general, however, ff should lie between 0.01 and 0.3 <ref> [19] </ref>. If we need to set ff beyond 0.3 to get accurate forecasts, we might have violated the assumption that the data sequence can be modeled by a distribution where the mean does not change significantly with time (i.e., a constant model).
Reference: [20] <author> Cant u-Paz, E., and Goldberg, D. E. </author> <title> Predicting Speedups of Idealized Bounding Cases of Parallel Genetic Algorithms. </title> <booktitle> In Proceedings of the Seventh International Conference on Genetic Algorithms (1997), </booktitle> <pages> pp. 113-120. </pages>
Reference-contexts: we can expect higher speedups in the wide area context. 11.3 Parallel Genetic Algorithm Application To investigate the performance of applications from a different domain, we turn to parallel genetic algorithms, an optimization tool used in many areas [71], and its performance of interest to a large number of users <ref> [20] </ref>. For our second application, we selected a robot controller design code that uses parallel genetic algorithm to optimize the performance of the controller. 11.3.1 Application Characteristics Specifically, the robot controller design code implements a neural network based on insights from neurobiology and data from insect studies [32, 31].
Reference: [21] <author> Cappello, P., Christiannsen, B., Ionescu, M. F., Neary, M. O., Schauser, K. E., and Wu, D. Javelin: </author> <title> Internet-Based Parallel Computing Using Java. </title> <booktitle> In Proceedings of the ACM 1997 Workshop on Java for Science and Engineering Computation (June 1997). </booktitle>
Reference-contexts: Lilith acquires system information by periodically reading system files in the /proc directory and percolating the status information up the tree. Lilith, however, did not address whether it is feasible to use the tool in a wide area environment or in large configurations (e.g., million of nodes). Javelin <ref> [21] </ref> uses the concept of clients and brokers for Java-based, global computing. To participate in the infrastructure, machines (i.e., browsers) first register with a broker. Clients that need computing cycles then contact the brokers to gain access to idle machines.
Reference: [22] <author> Carriero, N., Freeman, E., Gelernter, D., and Kaminsky, D. </author> <title> Adaptive Parallelism and Piranha. </title> <booktitle> IEEE Computer (January 1995), </booktitle> <pages> 40-49. </pages>
Reference-contexts: In Prospero, system managers are organized in a hierarchy and are responsible for maintaining information about the characteristics of each resource. Unfortunately, Prospero did not specify how higher level system managers update the resource information, and whether the statistics are maintained in some robust way. Piranha <ref> [22] </ref>, an adaptive parallel system built atop Linda [23], supports master-worker parallelism on workstations connected by a local area network or on nodes within a massively parallel system.
Reference: [23] <author> Carriero, N., and Gelernter, D. </author> <title> Linda in Context. </title> <journal> Communications of the ACM 32, </journal> <month> 4 (April </month> <year> 1989), </year> <pages> 444-458. </pages>
Reference-contexts: Unfortunately, Prospero did not specify how higher level system managers update the resource information, and whether the statistics are maintained in some robust way. Piranha [22], an adaptive parallel system built atop Linda <ref> [23] </ref>, supports master-worker parallelism on workstations connected by a local area network or on nodes within a massively parallel system. Piranha determines load status of machines by checking for keyboard, mouse, and remote login activities and monitoring the one-, five-, and ten-minute load averages.
Reference: [24] <author> Carter, R. L., and Crovella, M. E. </author> <title> Dynamic Server Selection Using Bandwidth Probing in Wide-Area Networks. </title> <type> Tech. Rep. </type> <institution> BU-CS-96-007, Computer Science Department, Boston University, Boston, Massachusetts, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: In our study, we chose not to measure the network bandwidth because doing so would require us to saturate the network path [85]. Saturating the network is intrusive and makes measuring the available bandwidth once every fifteen minutes infeasible. Moreover, Carter and Crovella <ref> [24] </ref> showed that measuring ping's round trip time will have accounted for the effect 17 Round Trip Time (milliseconds) May 7, 1997 Second Quarter, 1997 Standard Standard Site Average Deviation t Average Deviation t www.ncsa.uiuc.edu 7.14 9.68 1.97 5.42 18.56 0.39 www.whitehouse.gov 46.34 12.33 2.54 44.64 21.26 0.45 www.ual.com 17.94 8.27 <p> At predetermined intervals, we use sensors to discover new resources that joined the infrastructure and to determine if current resources are still available. To determine network utilization, we use sensors to track network loads. Carter and Crovella <ref> [24] </ref> showed that one can rely on ping latency data to assess network latencies and bandwidths. Hence, in our design, we track network loads by measuring the user-level round-trip times of sending small messages between a machine and its neighbors in the infrastructure.
Reference: [25] <author> Casanova, H., and Dongarra, J. NetSolve: </author> <title> A Network Server for Solving Computational Science Problems. </title> <booktitle> In Proceedings of Supercomputing '96 (November 1996). </booktitle>
Reference-contexts: The Globus Heartbeat Monitor (HBM) [100] is a fault detector for determining and reporting network and machine failures. The fault detector has been deployed on the GUSTO [40] testbed and as part of the NetSolve <ref> [25] </ref> numerical solver. HBM determines host or network failures by periodically executing the Unix ps utility on the hosts, and sending the output (via UDP) to a remote data collector. Users can query the data collector for reports on the status of the system. <p> Unfortunately, no justification was given as to how the information acquisition parameters were chosen. In addition, VDCE did not specify the methodology for maintaining consistent machine information across sites. Developed for solving computational science problems, NetSolve <ref> [25] </ref> is a client-server application that runs atop a network of machines. NetSolve does not have a scalable structure, and it is not clear how to maintain a global view of the system in NetSolve.
Reference: [26] <author> Case, J., McCloghrie, K., Rose, M., and Waldbusser, S. </author> <title> Protocol Operations for Version 2 of the Simple Network Management Protocol (SNMPv2), RFC 1905, </title> <institution> DDN Network Information Center, </institution> <month> January </month> <year> 1996. </year>
Reference-contexts: Remos [74] is an Application Programming Interface (API) that enables users to query the status of a network. In Remos, users can get information about dynamic bandwidth and network topology abstraction (i.e., network connectivity in the form of a graph). Using SNMP <ref> [26] </ref> data from routers, Remos computes statistics and reports the quartiles of the data distribution. In addition, users can specify a time frame parameter to request statistics computed from a specific time window.
Reference: [27] <author> Chen, Z., Maly, K., Mehrotra, P., Vangala, P. K., and Zubair, M. </author> <title> Web Based Framework for Parallel Computing. </title> <booktitle> In Proceedings of the ACM 1997 Workshop on Java for Science and Engineering Computation (June 1997). </booktitle>
Reference-contexts: ParaWeb [17] supports parallel computation on the World Wide Web via a modified Java interpreter that enables distributed thread placement. However, ParaWeb does not address issues in the scalability of the architecture nor the robust acquisition of machine and network states for load balancing. Finally, JAVADC <ref> [27] </ref>, a WWW-based, cluster computing facility for applications written using PVM and MPI [99], supports the remote execution of applications on different hosts.
Reference: [28] <author> Chow, W. M. </author> <title> Adaptive Control of the Exponential Smoothing Constant. </title> <journal> Journal of Industrial Engineering 16, </journal> <month> 5 </month> <year> (1965). </year>
Reference-contexts: For example, TCP [90, 59] uses exponential smoothing to estimate network round trip delays. In addition, we can fix the speed at which exponential smoothing adapts to changing data patterns or use automatic techniques to dynamically vary the speed of adaptation <ref> [28, 108, 95] </ref>. <p> In control theory terminology, ff adjusts the feedback and enables exponential smoothing to track changes in the input signal. Note that we can also enhance the forecast accuracy of single exponential smoothing by using adaptive techniques to monitor forecast errors and dynamically adjust ff <ref> [28, 108, 95, 67, 68] </ref>. To understand information aging and data initialization in exponential smoothing, we can expand the right hand side of Equation 3.1 to obtain S t = ff k=0 The first term shows that the weights of previous observations decrease exponentially with age.
Reference: [29] <author> Cleveland, W. S., and Devlin, S. J. </author> <title> Locally Weighted Regression: An Approach to Regression Analysis by Local Fitting. </title> <journal> Journal of the American Statistical Association 83, </journal> <volume> 403 (1988), </volume> <pages> 596-610. </pages>
Reference-contexts: PUNCH [66] is a recently developed infrastructure for executing existing software tools (e.g., VLSI design packages) on a network of machines. Implemented in Perl [112], PUNCH does not directly support application programming. In PUNCH, the system controls machines via a hierarchy of managers and uses locally weighted polynomial regression <ref> [29] </ref> to predict processor usage characteristics.
Reference: [30] <author> Cox, D. R. </author> <title> Prediction by Exponentially Weighted Moving Averages and Related Meth--ods. </title> <journal> Journal of the Royal Statistical Society Series B, </journal> <volume> 23, 2 (1961), </volume> <pages> 414-422. </pages>
Reference-contexts: These methods do not emphasize recent data over data collected in the distant past and thus are unable to accurately forecast emerging data patterns. In addition, averaging does not take periodic pattern into account. Therefore, simple averaging methods are often unsuitable for forecasting network traffic. Exponential smoothing <ref> [18, 56, 30, 19] </ref> is more sophisticated than averaging but is still a fast and robust technique for time series forecasting. This smoothing technique is best for predicting time series where the underlying process is constant (i.e., the process can be modeled by a single value).
Reference: [31] <author> Ding, Z. </author> <title> Sensory Feedback and Control of Leg-Substrate Interactions in Inserts and Robots. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, Neuroscience Program, </institution> <year> 1996. </year>
Reference-contexts: For our second application, we selected a robot controller design code that uses parallel genetic algorithm to optimize the performance of the controller. 11.3.1 Application Characteristics Specifically, the robot controller design code implements a neural network based on insights from neurobiology and data from insect studies <ref> [32, 31] </ref>. The neural network controls the locomotion of a robot leg and uses parallel genetic algorithm to search for synaptic weights of the neural network.
Reference: [32] <author> Ding, Z., and Nelson, M. E. </author> <title> A Neural Controller for Single-Leg Substrate-Finding: </title>
Reference-contexts: For our second application, we selected a robot controller design code that uses parallel genetic algorithm to optimize the performance of the controller. 11.3.1 Application Characteristics Specifically, the robot controller design code implements a neural network based on insights from neurobiology and data from insect studies <ref> [32, 31] </ref>. The neural network controls the locomotion of a robot leg and uses parallel genetic algorithm to search for synaptic weights of the neural network.
References-found: 32

