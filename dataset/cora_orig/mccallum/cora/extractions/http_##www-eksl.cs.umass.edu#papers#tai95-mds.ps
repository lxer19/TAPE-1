URL: http://www-eksl.cs.umass.edu/papers/tai95-mds.ps
Refering-URL: http://www-eksl.cs.umass.edu/~schmill/pubs.html
Root-URL: 
Email: fschmill, oates, coheng@cs.umass.edu  
Phone: (413) 545-3638, 413-545-1249 (fax)  
Title: Tools for Detecting Dependencies in AI Systems  
Author: Matthew D. Schmill, Tim Oates and Paul R. Cohen 
Note: Contact Author: Matthew D. Schmill  To appear in Proceedings of the Seventh International IEEE Conference on Tools with Artificial Intelligence.  
Address: Box 34610 Amherst, MA 01003-4610  
Affiliation: Computer Science Dept., LGRC University of Massachusetts  
Abstract: We present a methodology for learning complex dependencies in data based on streams of categorical, time series data. The streams representation is applicable in a variety of situations: a program's execution trace may be thought of as a stream. The various monitor readings of an intensive care unit may be thought of as concurrent streams. Our learning methodology, called dependency detection, examines a stream or multiple streams to characterize recurring structure with a set of dependency rules. These dependency rules are useful not only as a description of how the data is structured, but as a means for predicting future stream states from those of the present. Further, we describe a set of tools for program analysis that use dependency detection. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Scott D. Anderson, Adam Carlson, David L. Westbrook, David M. Hart, and Paul R. Cohen. </author> <title> Tools for experiments in planning. </title> <booktitle> In Proceedings of the Sixth International Conference on Tools with Artificial Intelligence., </booktitle> <pages> pages 615-623, </pages> <year> 1994. </year>
Reference-contexts: Next, we consider IMSDD in detail, describing its search for dependencies and its performance on that task. We follow with a discussion of the current integration of the algorithms into CLIP/CLASP, <ref> [1] </ref> an environment for empirical studies, then conclude with a brief summary of the value of dependency detection. 1 A statistic that quantifies statistical significance from observed frequencies called the G Test was used. 2 MSDD uses a simple contingency table statistic to determine significance. 1 2 Definitions Operating in the
Reference: [2] <author> Donald J. Berndt and James Clifford. </author> <title> Using dynamic time warping to find patterns in time series. </title> <booktitle> In Proceedings of the AAAI-94 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 359-370, </pages> <year> 1994. </year>
Reference-contexts: In section 3.3, we will see why these benefits are important and why an incremental approach lacks them. 3 Continuous valued time-series data is appropriate to many domains and is discussed in <ref> [3, 2, 7] </ref>. 2 3.2 MSDD as a Learning Component The usefulness of the multi-stream representation was first tested in a simulated shipping network called TransSim.
Reference: [3] <author> John Fox and J. Scott Long. </author> <title> Modern Methods of Data Analysis. </title> <publisher> Sage, </publisher> <year> 1990. </year>
Reference-contexts: In section 3.3, we will see why these benefits are important and why an incremental approach lacks them. 3 Continuous valued time-series data is appropriate to many domains and is discussed in <ref> [3, 2, 7] </ref>. 2 3.2 MSDD as a Learning Component The usefulness of the multi-stream representation was first tested in a simulated shipping network called TransSim.
Reference: [4] <author> Adele E. Howe and Paul R. Cohen. </author> <title> Understanding planner behavior. </title> <note> To appear in AI Journal, </note> <month> Winter </month> <year> 1995. </year>
Reference-contexts: The procedure, termed failure recovery analysis (FRA), models a program as a single stream (the execution trace), and uses a statistical test 1 to locate contributors to plan failure. <ref> [4] </ref> The benefit of using FRA as a debugging tool for planning systems is due largely to its generality.
Reference: [5] <author> Tim Oates and Paul R. Cohen. </author> <title> Toward a plan steering agent: experiments with schedule maintenance. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pages 134-139, </pages> <year> 1994. </year> <month> 11 </month>
Reference-contexts: TransSim is a system designed for the task of schedule maintenance in complex, unpredictable environments. <ref> [5] </ref> The system comprises two main components: a pathology demon and a schedule maintenance agent. The pathology demon monitors the simulation environment, as it runs, in an effort to detect states that may lead to degradation of plan performance, or even plan failure.
Reference: [6] <author> Tim Oates, Dawn E. Gregory, and Paul R. Cohen. </author> <title> Detecting complex dependencies in categor-ical data. </title> <booktitle> In Preliminary Papers of the Fifth International Workshop on Artificial Intelligence and Statistics., </booktitle> <pages> pages 417-423, </pages> <year> 1995. </year>
Reference-contexts: Multi-stream Dependency Detection, or MSDD, extends dependency detection to characterize structure across multiple, concurrent streams. <ref> [6] </ref> Like the DD component to FRA, MSDD uses statistical testing 2 to identify patterns of stream values that predict patterns occurring in the future. MSDD examines batches of time series data, searching in a focused manner for recurring structure that it summarizes in the form of dependency rules. <p> Our hope was that MSDD could do automatically what a programmer or domain expert often takes many hours to do: devise a set of rules that accurately describe situations of interest in a system. The results, summarized in <ref> [6] </ref>, indicate that MSDD's rules were capable of performance comparable to that of the hand crafted pathology demon using only high-level domain knowledge.
Reference: [7] <author> John W. Tukey. </author> <title> Exploratory Data Analysis. </title> <publisher> Addison-Wesley, </publisher> <year> 1977. </year> <month> 12 </month>
Reference-contexts: In section 3.3, we will see why these benefits are important and why an incremental approach lacks them. 3 Continuous valued time-series data is appropriate to many domains and is discussed in <ref> [3, 2, 7] </ref>. 2 3.2 MSDD as a Learning Component The usefulness of the multi-stream representation was first tested in a simulated shipping network called TransSim.
References-found: 7

