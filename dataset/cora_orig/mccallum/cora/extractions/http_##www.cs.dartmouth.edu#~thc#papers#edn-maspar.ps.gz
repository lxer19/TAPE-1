URL: http://www.cs.dartmouth.edu/~thc/papers/edn-maspar.ps.gz
Refering-URL: http://www.cs.dartmouth.edu/~thc/papers.html
Root-URL: http://www.cs.dartmouth.edu
Email: email address: lenbo@think.com.  
Title: Performing BMMC Permutations in Two Passes Through the Expanded Delta Network and MasPar MP-2 (Extended Abstract)  
Author: Leonard F. Wisniewski Thomas H. Cormen Thomas Sundquist 
Affiliation: at Dartmouth College Department of Computer Science.  Department of Computer Science, Dartmouth College.  Department of Mathematics, Dartmouth College.  Dartmouth College.  
Note: Thinking Machines Corporation. Research performed while  Supported in part by a Dartmouth Fellowship and the National Science Foundation under Grant CCR 9308667. Contact author's  Supported in part by funds from Dartmouth College and in part by the National Science Foundation under Grant CCR-9308667.  Supported in part by funds from  
Abstract: One basic operation that we expect multiprocessor interconnection networks to perform efficiently is permuting. When messages are dropped due to collisions in the network, we often measure the efficiency of a permuting method on the network by counting the number of times data must pass through the network to perform the desired permutation. There are sometimes advantages to studying restricted classes of permutations on specific networks: they may be performed in fewer passes than general permutations, or even if they take the same number of passes, determining how to route them is simpler. This paper examines routing of BMMC (bit-matrix-multiply/complement) permutations on two types of multistage interconnection networks: the expanded delta network and the global router of the MasPar MP-2. BMMC permutations are an important class of permutations that has been well-studied on various multistage networks. The class of BMMC permutations includes as subclasses Gray-code and inverse Gray-code permutations and the entire subclass of bit-permute/complement (BPC) permutations, which in turn includes matrix transpose (with power-of-2 dimensions), bit reversal, vector reversal, hypercube, and matrix reblocking permutations. There are four results in this paper. First, we use linear-algebraic techniques to derive an algorithm to perform any BMMC permutation in at most two passes on the expanded delta network. Second, we use linear-algebraic techniques to derive an algorithm to perform any BMMC permutation in at most two passes on the global router of the MasPar MP-2. Third, we use linear-algebraic and combinatorial analysis to determine the distribution of all BMMC permutations when routed naively through the MP-2 global router and show that most, but not all, BMMC permutations require only one or two passes anyway. We can apply our two-pass algorithms in those cases when naive routing requires more than two passes. Fourth, we present experimental evidence to support our analysis. 
Abstract-found: 1
Intro-found: 1
Reference: [Ben65] <author> V.E. </author> <title> Benes. Mathematical Theory of Connecting Networks and Telephone Traffic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1965. </year>
Reference-contexts: Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network [Law75], the indirect binary n-cube [Pea77], the Clos network [Clo53], the Benes network <ref> [Ben65] </ref>, the delta network [Pat81], and the expanded delta network (EDN) [KS83]. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally [Pea77, Sie77]. Researchers have developed efficient algorithms on these multistage networks.
Reference: [Bru94] <author> Kristin Bruhl. </author> <title> BMMC permutations on a DECmpp 12000/Sx 2000. </title> <type> Technical Report PCS-TR94-224, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> July </month> <year> 1994. </year> <type> Senior thesis. 18 </type>
Reference-contexts: Shen [She95] shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes. Scherson and Subramanian's general permutation algorithm [SS93] only requires two passes on a certain class of EDNs, but it has a high cost of decomposing the permutation. Cormen and Bruhl <ref> [Bru94, CB95] </ref> study the performance of several algorithms for BMMC permutations on the restricted-access MasPar MP-2 global router.
Reference: [CB95] <author> Thomas H. Cormen and Kristin Bruhl. </author> <title> Don't be too clever: Routing BMMC permutations on the MasPar MP-2. </title> <booktitle> In Proceedings of the 7th Annual ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <pages> pages 288-297, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: Shen [She95] shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes. Scherson and Subramanian's general permutation algorithm [SS93] only requires two passes on a certain class of EDNs, but it has a high cost of decomposing the permutation. Cormen and Bruhl <ref> [Bru94, CB95] </ref> study the performance of several algorithms for BMMC permutations on the restricted-access MasPar MP-2 global router.
Reference: [Clo53] <author> C. </author> <title> Clos. A study of non-blocking switching networks. </title> <journal> Bell Systems Technical Journal, </journal> <volume> 32 </volume> <pages> 406-424, </pages> <month> March </month> <year> 1953. </year>
Reference-contexts: Therefore, we developed two routing methods for BMMC permutations: one for the scalable EDN, and one for the more limited MasPar MP-2. Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network [Law75], the indirect binary n-cube [Pea77], the Clos network <ref> [Clo53] </ref>, the Benes network [Ben65], the delta network [Pat81], and the expanded delta network (EDN) [KS83]. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally [Pea77, Sie77].
Reference: [Cor92] <author> Thomas H. Cormen. </author> <title> Virtual Memory for Data-Parallel Computing. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1992. </year> <note> Available as Technical Report MIT/LCS/TR-559. </note>
Reference-contexts: Cormen and Bruhl [Bru94, CB95] study the performance of several algorithms for BMMC permutations on the restricted-access MasPar MP-2 global router. Their algorithms adapt the block BMMC algorithms for parallel disk systems with a block size of 1 from <ref> [Cor92, Cor93] </ref> to perform BMMC permutations on the global router when the number of messages in the data set exceeds the number of inputs and outputs. They present algorithms that guarantee that each processor or cluster of processors sends and receives one message at a time.
Reference: [Cor93] <author> Thomas H. Cormen. </author> <title> Fast permuting in disk arrays. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <note> 17(1-2):41-57, January and February 1993. </note>
Reference-contexts: Cormen and Bruhl [Bru94, CB95] study the performance of several algorithms for BMMC permutations on the restricted-access MasPar MP-2 global router. Their algorithms adapt the block BMMC algorithms for parallel disk systems with a block size of 1 from <ref> [Cor92, Cor93] </ref> to perform BMMC permutations on the global router when the number of messages in the data set exceeds the number of inputs and outputs. They present algorithms that guarantee that each processor or cluster of processors sends and receives one message at a time.
Reference: [CSW94] <author> Thomas H. Cormen, Thomas Sundquist, and Leonard F. Wisniewski. </author> <title> Asymptotically tight bounds for performing BMMC permutations on parallel disk systems. </title> <type> Technical Report PCS-TR94-223, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> July </month> <year> 1994. </year> <note> Preliminary version appeared in Proceedings of the 5th Annual ACM Symposium on Parallel Algorithms and Architectures. Revised version to appear in SIAM Journal on Computing. </note>
Reference-contexts: The following lemma from <ref> [CSW94] </ref> tells us the cardinality of the range for a given BMMC permutation. Lemma 1 Let A be a p fi q matrix whose entries are drawn from f0; 1g, let c be any p-vector whose entries are drawn from f0; 1g, and let r = rank A. <p> Thus, by our above observations and Lemma 1, the source messages entering a particular hyperbar in the left stage move to 2 rank A 2::5;0::5 different hyperbars in the center stage. Finally, we determine the number of passes by using the definition of the preimage and another lemma from <ref> [CSW94] </ref>.
Reference: [EHJ94] <author> Alan Edelman, Steve Heller, and S. Lennart Johnsson. </author> <title> Index transformation algorithms in a linear algebra framework. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 5(12) </volume> <pages> 1302-1309, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: Treating a source address x as an m-bit vector, we perform matrix-vector multiplication over GF (2) and then form the corresponding m-bit target address y by complementing some subset of the resulting 1 Edelman, Heller, and Johnsson <ref> [EHJ94] </ref> call BMMC permutations affine transformations or, if there is no complementing, linear transformations. 2 Matrix multiplication over GF (2) is like standard matrix multiplication over the reals but with all arithmetic performed modulo 2.
Reference: [Kau68] <author> W.H. Kautz. </author> <title> Cellular interconnection arrays. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-17:443-451, </volume> <month> May </month> <year> 1968. </year>
Reference-contexts: Since any arbitrary permutation can be routed through a multistage network if multiple passes are allowed, we say that the above multistage networks are universal. Waksman [Wak68] and Kautz <ref> [Kau68] </ref> describe how to perform an arbitrary permutation of N elements using basic 2-permuters. Parker [Par80] shows a one-pass algorithm for an arbitrary permutation on the three-stage Benes network and also presents a three-pass algorithm on the network.
Reference: [KS83] <author> C.K. Kruskal and M. Snir. </author> <title> The performance of multistage interconnection networks for multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-32(12), </volume> <month> December </month> <year> 1983. </year>
Reference-contexts: Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network [Law75], the indirect binary n-cube [Pea77], the Clos network [Clo53], the Benes network [Ben65], the delta network [Pat81], and the expanded delta network (EDN) <ref> [KS83] </ref>. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally [Pea77, Sie77]. Researchers have developed efficient algorithms on these multistage networks. <p> Appendix A shows how to trace the permutations that occur at each stage of switches and wires to verify that each pass through the EDN performs the permutation specified by the algorithm. Expanded delta networks We construct an expanded delta network (EDN) <ref> [KS83] </ref> with wires and switches. There are two kinds of wires in an EDN: thin wires and thick wires. A thin wire carries a single message, whereas each thick wire can carry up to K messages. There are three types of switches: thin-to-thick converters, thick-to-thin converters, and hyperbars.
Reference: [KS88] <author> John Keohane and Richard E. Stearns. </author> <title> Routing linear permutations through the Omega network in two passes. </title> <type> Technical Report 88-14, </type> <institution> Department of Computer Science, Univer 19 sity of Albany, State University of New York, </institution> <year> 1988. </year> <booktitle> Also appeared in the Proceedings of the 2nd Symposium on the Frontiers of Massively Parallel Computing. </booktitle>
Reference-contexts: For example, several papers have presented algorithms for routing BMMC (bit-matrix-multiply/complement) permutations, which we define below, and its subclass of BPC (bit-permute/complement) permutations. Pease [Pea77] shows how to perform BMMC permutations in two passes on the indirect binary n-cube. Keohane and Stearns <ref> [KS88] </ref> give an algorithm for performing linear permutations (BMMC permutations without the complement) in two passes on the network. Yew and Lawrie [YL81] present a two-pass algorithm for BPC permutations on the network, and Nassimi and Sahni [NS81] give an algorithm for BPC permutations on a Benes network. <p> We do so, updating the entire row of b A and the row-addition matrix Q accordingly. Keohane and Stearns <ref> [KS88] </ref> derived a two-pass algorithm for performing linear permutations on the network, but they did not use the linear-algebraic technique presented here and in Appendix A.
Reference: [Law75] <author> D. H. Lawrie. </author> <title> Access and alignment of data in an array processor. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-24:1145-1155, </volume> <month> December </month> <year> 1975. </year>
Reference-contexts: Therefore, we developed two routing methods for BMMC permutations: one for the scalable EDN, and one for the more limited MasPar MP-2. Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network <ref> [Law75] </ref>, the indirect binary n-cube [Pea77], the Clos network [Clo53], the Benes network [Ben65], the delta network [Pat81], and the expanded delta network (EDN) [KS83]. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71].
Reference: [MW95] <author> Sean S.B. Moore and Leonard F. Wisniewski. </author> <title> Complexity analysis of two permutations used by fast cosine transform algorithms. </title> <type> Technical Report PCS-TR95-266, </type> <institution> Dartmouth College Department of Computer Science, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: Matrix transpose (with power-of-2 dimensions), bit reversal (used in performing FFTs), vector reversal, and matrix reblocking are all BPC, and hence BMMC, permutations. Gray-code permutations, inverse Gray-code permuations, and permutations used by fast cosine transforms <ref> [MW95] </ref> are BMMC (but not BPC). BMMC permutations are closed under composition so that, for example, the composition of bit-reversal and Gray-code permutations is BMMC. We shall generally focus on the matrix-multiplication portion of BMMC permutations rather than on the complement vector.
Reference: [NS81] <author> David Nassimi and Sartaj Sahni. </author> <title> A self-routing Benes network and parallel permutation algorithms. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-30(5):332-340, </volume> <month> May </month> <year> 1981. </year>
Reference-contexts: Keohane and Stearns [KS88] give an algorithm for performing linear permutations (BMMC permutations without the complement) in two passes on the network. Yew and Lawrie [YL81] present a two-pass algorithm for BPC permutations on the network, and Nassimi and Sahni <ref> [NS81] </ref> give an algorithm for BPC permutations on a Benes network. Shen [She95] shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes.
Reference: [OT71] <author> D.C. Opferman and N.T. Tsao-Wu. </author> <title> On a class of rearrangeable switching networks. </title> <journal> Bell Systems Technical Journal, </journal> <volume> 50 </volume> <pages> 1579-1618, </pages> <month> May-June </month> <year> 1971. </year>
Reference: [Par80] <author> D. Stott Parker Jr. </author> <title> Notes on shu*e/exchange type switching networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-29(3):213-222, </volume> <month> March </month> <year> 1980. </year>
Reference-contexts: Since any arbitrary permutation can be routed through a multistage network if multiple passes are allowed, we say that the above multistage networks are universal. Waksman [Wak68] and Kautz [Kau68] describe how to perform an arbitrary permutation of N elements using basic 2-permuters. Parker <ref> [Par80] </ref> shows a one-pass algorithm for an arbitrary permutation on the three-stage Benes network and also presents a three-pass algorithm on the network. Scherson and Subramanian [SS93] give an off-line algorithm to route an arbitrary permutation in three passes on a restricted-access EDN.
Reference: [Pat81] <author> J.H. Patel. </author> <title> Performance of processor-memory interconnections for multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-30(10):771-780, </volume> <month> October </month> <year> 1981. </year>
Reference-contexts: Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network [Law75], the indirect binary n-cube [Pea77], the Clos network [Clo53], the Benes network [Ben65], the delta network <ref> [Pat81] </ref>, and the expanded delta network (EDN) [KS83]. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally [Pea77, Sie77]. Researchers have developed efficient algorithms on these multistage networks.
Reference: [Pea77] <author> Marshall C. Pease. </author> <title> The indirect binary n-cube microprocessor array. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-26(5):458-473, </volume> <month> May </month> <year> 1977. </year>
Reference-contexts: Therefore, we developed two routing methods for BMMC permutations: one for the scalable EDN, and one for the more limited MasPar MP-2. Previous work on multistage networks Many multistage interconnection networks have been proposed, such as the network [Law75], the indirect binary n-cube <ref> [Pea77] </ref>, the Clos network [Clo53], the Benes network [Ben65], the delta network [Pat81], and the expanded delta network (EDN) [KS83]. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally [Pea77, Sie77]. <p> The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally <ref> [Pea77, Sie77] </ref>. Researchers have developed efficient algorithms on these multistage networks. A pass through the network is a rearrangement in which some subset of the data simultaneously moves through the network to a destination. <p> Several algorithms appear in the literature for routing certain classes of permutations in fewer than three passes. For example, several papers have presented algorithms for routing BMMC (bit-matrix-multiply/complement) permutations, which we define below, and its subclass of BPC (bit-permute/complement) permutations. Pease <ref> [Pea77] </ref> shows how to perform BMMC permutations in two passes on the indirect binary n-cube. Keohane and Stearns [KS88] give an algorithm for performing linear permutations (BMMC permutations without the complement) in two passes on the network.
Reference: [Ram73] <author> H.R. Ramanujam. </author> <title> Decomposition of permutation networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-22(7):639-643, </volume> <month> July </month> <year> 1973. </year>
Reference: [She95] <author> Xiaojun Shen. </author> <title> Optimal realization of any BPC permutation on k-extra-stage Omega networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 44(5) </volume> <pages> 714-719, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Yew and Lawrie [YL81] present a two-pass algorithm for BPC permutations on the network, and Nassimi and Sahni [NS81] give an algorithm for BPC permutations on a Benes network. Shen <ref> [She95] </ref> shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes. Scherson and Subramanian's general permutation algorithm [SS93] only requires two passes on a certain class of EDNs, but it has a high cost of decomposing the permutation.
Reference: [Sie77] <author> Howard Jay Siegel. </author> <title> Analysis techniques for simd machine interconnection networks and the effects of processor address masks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-26:153-161, </volume> <month> February </month> <year> 1977. </year> <month> 20 </month>
Reference-contexts: The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e [Sto71]. The above networks are equivalent, topologically and functionally <ref> [Pea77, Sie77] </ref>. Researchers have developed efficient algorithms on these multistage networks. A pass through the network is a rearrangement in which some subset of the data simultaneously moves through the network to a destination.
Reference: [SS93] <author> Isaac D. Scherson and Raghu Subramanian. </author> <title> Efficient off-line routing of permutations on restricted access expanded delta networks. </title> <booktitle> In Proceedings of the 7th International Parallel Processing Symposium, </booktitle> <pages> pages 284-290, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: Waksman [Wak68] and Kautz [Kau68] describe how to perform an arbitrary permutation of N elements using basic 2-permuters. Parker [Par80] shows a one-pass algorithm for an arbitrary permutation on the three-stage Benes network and also presents a three-pass algorithm on the network. Scherson and Subramanian <ref> [SS93] </ref> give an off-line algorithm to route an arbitrary permutation in three passes on a restricted-access EDN. <p> Shen [She95] shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes. Scherson and Subramanian's general permutation algorithm <ref> [SS93] </ref> only requires two passes on a certain class of EDNs, but it has a high cost of decomposing the permutation. Cormen and Bruhl [Bru94, CB95] study the performance of several algorithms for BMMC permutations on the restricted-access MasPar MP-2 global router. <p> Exactly S thick wires enter and exit each hyperbar (squares containing an "H"). Information passes through an EDN as follows. A path is the set of wires traversed by a message from its thin-wire input to its thin-wire output. Scherson and Subramanian <ref> [SS93] </ref> state that this path is unique for each input. If we have a set of processors P = fP 0 ; P 1 ; : : : ; P M1 g, we connect each input wire i and output wire i to processor P i .
Reference: [Sto71] <author> Harold S. Stone. </author> <title> Parallel processing with the perfect shu*e. </title> <journal> IEEE Transactions on Com puters, </journal> <volume> C-20(2):153-161, </volume> <month> February </month> <year> 1971. </year>
Reference-contexts: Multistage networks comprise one such class of structured interconnection networks for distributed-memory multiprocessors. A multistage network consists of alternating stages of switches and wires. The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e <ref> [Sto71] </ref>. In this paper, we use a linear-algebraic framework to develop algorithms for efficiently performing the class of BMMC (bit-matrix-multiply/complement) permutations on multistage networks. <p> The switches are typically crossbars connected by wires, usually in a pattern based on the perfect shu*e <ref> [Sto71] </ref>. The above networks are equivalent, topologically and functionally [Pea77, Sie77]. Researchers have developed efficient algorithms on these multistage networks. A pass through the network is a rearrangement in which some subset of the data simultaneously moves through the network to a destination.
Reference: [VB81] <author> L.G. Valiant and G.J. Brebner. </author> <title> Universal schemes for parallel communication. </title> <booktitle> In Proceed ings of the 13th Symposium on the Theory of Computation, </booktitle> <pages> pages 263-277, </pages> <year> 1981. </year>
Reference-contexts: The rightmost factor defines a permutation of the messages to intermediate locations, as in the style of the Valiant-Brebner algorithm for hypercube routing <ref> [VB81] </ref>. (Our method is deterministic, whereas the Valiant-Brebner method is randomized.) After permuting the messages to the intermediate locations, we permute the messages to their final locations according to the factor on the left. Both factors have an important property.
Reference: [Wak68] <author> Abraham Waksman. </author> <title> A permutation network. </title> <journal> Journal of the ACM, </journal> <volume> 15(1) </volume> <pages> 159-163, </pages> <month> January </month> <year> 1968. </year>
Reference-contexts: A pass through the network is a rearrangement in which some subset of the data simultaneously moves through the network to a destination. Since any arbitrary permutation can be routed through a multistage network if multiple passes are allowed, we say that the above multistage networks are universal. Waksman <ref> [Wak68] </ref> and Kautz [Kau68] describe how to perform an arbitrary permutation of N elements using basic 2-permuters. Parker [Par80] shows a one-pass algorithm for an arbitrary permutation on the three-stage Benes network and also presents a three-pass algorithm on the network.
Reference: [YL81] <author> Pen-chung Yew and Duncan H. Lawrie. </author> <title> An easily controlled network for frequently used permutations. </title> <journal> IEEE Transactions on Computers, </journal> <volume> c-30(4):296-298, </volume> <month> April </month> <year> 1981. </year>
Reference-contexts: Pease [Pea77] shows how to perform BMMC permutations in two passes on the indirect binary n-cube. Keohane and Stearns [KS88] give an algorithm for performing linear permutations (BMMC permutations without the complement) in two passes on the network. Yew and Lawrie <ref> [YL81] </ref> present a two-pass algorithm for BPC permutations on the network, and Nassimi and Sahni [NS81] give an algorithm for BPC permutations on a Benes network. Shen [She95] shows how to perform any BPC permutation on a k-extra-stage network in a minimum number of passes.
References-found: 26

