URL: http://www.eecs.umich.edu/~sjhan/sigcomm97.ps
Refering-URL: http://www.eecs.umich.edu/~sjhan/
Root-URL: http://www.eecs.umich.edu
Email: fsjhan, kgshing@eecs.umich.edu  
Title: Fast Restoration of Real-Time Communication Service from Component Failures in Multi-hop Networks  
Author: Seungjae Han and Kang G. Shin 
Address: Ann Arbor, Michigan 48109-2122, U.S.A.  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science The University of Michigan  
Abstract: For many applications it is important to provide communication services with guaranteed timeliness and fault-tolerance at an acceptable level of overhead. In this paper, we present a scheme for restoring real-time channels, each with guaranteed timeliness, from component failures in multi-hop networks. To ensure fast/guaranteed recovery, backup channels are set up a priori in addition to each primary channel. That is, a dependable real-time connection consists of a primary channel and one or more backup channels. If a primary channel fails, one of its backup channels is activated to become a new primary channel. We describe a protocol which provides an integrated solution to the failure-recovery problem (i.e., channel switching, resource re-allocation, : : :). We also present a resource sharing method that significantly reduces the overhead of backup channels. The simulation results show that good coverage (in recovering from failures) can be achieved with about 30% degradation in network utilization under a reasonable failure condition. Moreover, the fault-tolerance level of each dependable connection can be controlled, independently of other connections, to reflect its criticality. 
Abstract-found: 1
Intro-found: 1
Reference: [ARA94] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: In recent years, considerable efforts have been made to provide the timeliness QoS guarantee, while the importance of guaranteeing fault-tolerance QoS has been far less recognized. The survey paper by Aras et al. <ref> [ARA94] </ref> discusses many of existing real-time communication schemes. However, there are growing needs for communication services with a guaranteed level of fault-tolerance in many real-time applications.
Reference: [MCC96] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven layered multicast," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 117-130, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The rest of the paper is organized as follows. Section 2 1 Not only non-real-time traffic but also other real-time traffic can utilize the resources reserved for backup channels, if the underlying real-time channel scheme has the capability of dynamic QoS control like the layered transmission method <ref> [MCC96] </ref>. N1 N2 N3 N8 N9 N7 S2 D1 S3 Primary3 Primary2 Primary1 Backup3 Backup2 Backup1 D3 (a) Initial network N1 N2 N3 N8 N9 N7 S2 D1 S3 Failure D3 (b) After failure recovery presents our design goals.
Reference: [TRI82] <author> K. S. Trivedi, </author> <title> Probability and Statistic with Reliability, Queuing, </title> <booktitle> and Computer Science Applications. </booktitle> <publisher> Prentice-Hall, </publisher> <year> 1982. </year>
Reference-contexts: State 0 is the initial state and state 3 is the absorbing state. Figure 3 (b) is a simplified model when the primary and backup channels are of the same length. Using the technique in <ref> [TRI82] </ref>, one can calculate R (t) of a D-connection from these Markov models. 3 However, representing the QoS parameter as a function of time is unsuitable for the client interface model.
Reference: [WHA90] <author> J. Whalen and J. Kenney, </author> <title> "Finding maximal link disjoint paths in a multigraph," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 400-404, </pages> <year> 1990. </year>
Reference-contexts: Here we use the shortest-path routing to select backup paths. Algorithms to find multiple disjoint shortest paths between two nodes are given in <ref> [WHA90, SID91] </ref>. As to spare resource reservation, there can be various QoS-negotiation schemes between clients and BCP to determine the number of backups and the associated multiplexing degrees. We describe two possible schemes.
Reference: [SID91] <author> D. Sidhu, R. Nair, and S. Abdallah, </author> <title> "Finding disjoint paths in networks," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 43-51, </pages> <year> 1991. </year>
Reference-contexts: Here we use the shortest-path routing to select backup paths. Algorithms to find multiple disjoint shortest paths between two nodes are given in <ref> [WHA90, SID91] </ref>. As to spare resource reservation, there can be various QoS-negotiation schemes between clients and BCP to determine the number of backups and the associated multiplexing degrees. We describe two possible schemes.
Reference: [HAN97a] <author> S. Han and K. G. Shin, </author> <title> "Experimental evaluation of failure-detection schemes in real-time communication networks," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <year> 1997. </year>
Reference-contexts: For instance, real-time channels for certain applications may not be able to tolerate an error rate which is acceptable to other channels set up for different applications. We have developed techniques for detecting channel failures, evaluated their efficiency experimentally, and reported the results in <ref> [HAN97a] </ref>. In this paper, we assume the existence of a proper failure-detection mechanism in which failed components are detected by their neighbor nodes, and focus on the procedure after failure detection. 5 This is not a restriction. The destination can initiate the channel establishment.
Reference: [ZHA93] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala, "RSVP: </author> <title> A new Resource ReSerVation Protocol," </title> <journal> IEEE Network, </journal> <pages> pp. 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: However, if failures disconnect a channel's path or disable the channel end-nodes, the resource-release process becomes complicated. To facilitate the reclaiming of the resources of failed channels, we borrow the concept of "soft-state connections" in RSVP <ref> [ZHA93] </ref>.
Reference: [HAN97b] <author> S. Han and K. G. Shin, </author> <title> "Efficient spare-resource allocation for fast restoration of real-time channels from network component failures," </title> <note> submitted for publication, </note> <year> 1997. </year>
Reference-contexts: This overhead level can be reduced substantially by employing a more efficient backup routing method. In <ref> [HAN97b] </ref>, we presented a backup routing algorithm which can reduce the spare bandwidth up to 40%, compared to the shortest path routing method. 7.3 Per-Connection Fault-Tolerance Control So far, we have assumed that all D-connections require the same level of fault-tolerance.
Reference: [RAM92] <author> P. Ramanathan and K. G. Shin, </author> <title> "Delivery of time-critical messages using a multiple copy approach," </title> <journal> ACM Trans. Computer Systems, </journal> <volume> vol. 10, </volume> <pages> pp. 144-166, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: For the same reason, the proposed scheme outperforms the brute-force scheme in terms of per-connection fault-tolerance control. 8 Related Work There have been roughly two types of approaches to achieving fault-tolerance in real-time multi-hop networks. The first type is the forward-recovery approach as described in <ref> [RAM92, KAO94] </ref>, where multiple copies of a message are sent simultaneously via disjoint paths to mask failures.
Reference: [KAO94] <author> B. Kao, H. Garcia-Molina, and D. Barbara, </author> <title> "Aggressive transmissions of short messages over redundant paths," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 5, </volume> <pages> pp. 102-109, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: For the same reason, the proposed scheme outperforms the brute-force scheme in terms of per-connection fault-tolerance control. 8 Related Work There have been roughly two types of approaches to achieving fault-tolerance in real-time multi-hop networks. The first type is the forward-recovery approach as described in <ref> [RAM92, KAO94] </ref>, where multiple copies of a message are sent simultaneously via disjoint paths to mask failures.
Reference: [BAN96] <author> A. Banerjea, </author> <title> "Simulation study of the capacity effects of dispersity routing for fault-tolerant real-time channels," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <pages> pp. 194-205, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: (a) 8 fi 8 torus Spare bandwidth 33.11% 24.47% 19.69% 17.22% 1 link failure 96.18% 89.74% 83.18% 78.18% 1 node failure 96.56% 88.31% 79.49% 72.86% 2 node failures 86.78% 79.62% 71.88% 66.03% (b) 8 fi 8 mesh Table 3: R fast with brute-force multiplexing coding scheme can be found in <ref> [BAN96] </ref>. This approach has an advantage that failures are handled without service disruption, but it is too expensive for certain applications like multimedia networking. If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative.
Reference: [BAN93] <author> A. Banerjea, C. Parris, and D. Ferrari, </author> <title> "Recovering guaranteed performance service connections from single and multiple faults," </title> <type> Tech. Rep. </type> <institution> TR-93-066, Computer Science Division, UC Berkeley, </institution> <year> 1993. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> The methods proposed in [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in <ref> [BAN93] </ref> requires all failures to be broadcast to the entire network. When a source node is notified of the failure of its channel, it tries to establish a new channel from scratch.
Reference: [ZHE92] <author> Q. Zheng and K. G. Shin, </author> <title> "Fault-tolerant real-time communication in distributed computing systems," </title> <booktitle> in Proc. IEEE FTCS, </booktitle> <pages> pp. 86 - 93, </pages> <year> 1992. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> The channel reestablishment attempt can fail due to resource shortage at that time. Even when there are sufficient resources, the contention among simultaneous recovery attempts for different faulty connections may require several trials to succeed, thus delaying service resumption and increasing network traffic. In contrast, the method of <ref> [ZHE92] </ref> provides guaranteed failure recovery under a deterministic failure model (i.e., single failure). In this method, additional resources are reserved in the vicinity of each real-time channel, and the failed components are locally detoured using the resources.
Reference: [GRO87] <author> W. Grover, </author> <title> "The selfhealing network: A fast distributed restoration technique for networks using digital crossconnect machines," </title> <booktitle> in Proc. IEEE GLOBE-COM, </booktitle> <pages> pp. 1090-1095, </pages> <year> 1987. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in <ref> [GRO87, YAN88, BAK91] </ref>. The work reported in [KAW94, AND94, MUR94] comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
Reference: [YAN88] <author> C. Yang and S. Hasegawa, </author> <title> "FITNESS: Failure immunization technology for network service survivability," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 1549-1554, </pages> <year> 1988. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in <ref> [GRO87, YAN88, BAK91] </ref>. The work reported in [KAW94, AND94, MUR94] comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
Reference: [BAK91] <author> J. Baker, </author> <title> "A distributed link restoration algorithm with robust preplanning," </title> <booktitle> in Proc. IEEE GLOBE-COM, </booktitle> <pages> pp. 306-311, </pages> <year> 1991. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in <ref> [GRO87, YAN88, BAK91] </ref>. The work reported in [KAW94, AND94, MUR94] comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
Reference: [KAW94] <author> R. Kawamura, K. Sato, and I. Tokizawa, </author> <title> "Self-healing ATM networks based on virtual path concept," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, </volume> <pages> pp. 120-127, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in [GRO87, YAN88, BAK91]. The work reported in <ref> [KAW94, AND94, MUR94] </ref> comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
Reference: [AND94] <author> J. Anderson, B. Doshi, S. Dravida, and P. Har-shavadhana, </author> <title> "Fast restoration of ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 12, </volume> <pages> pp. 128-138, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in [GRO87, YAN88, BAK91]. The work reported in <ref> [KAW94, AND94, MUR94] </ref> comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
Reference: [MUR94] <author> K. Murakami and H. Kim, </author> <title> "Near-optimal virtual path routing for survivable ATM networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <pages> pp. 208-215, </pages> <year> 1994. </year>
Reference-contexts: If infrequent packet losses due to transient failures are tolerable, the approach to detect and recover from persistent failures is a more attractive and cost-effective alternative. The methods proposed in <ref> [BAN93, ZHE92, GRO87, YAN88, BAK91, KAW94, AND94, MUR94] </ref> belong to this second type of approach. The proposed scheme also falls into this type. The method proposed in [BAN93] requires all failures to be broadcast to the entire network. <p> However, this method requires reservation of substantial amounts of extra resources, and resource usage becomes inefficient after failure recovery, because channel path-lengths are usually extended by local detouring. Similar approaches in telecommunication networks can be found in [GRO87, YAN88, BAK91]. The work reported in <ref> [KAW94, AND94, MUR94] </ref> comes closest to our scheme. They proposed VP-restoration methods in ATM networks based on the backup channel concept. The main difference of these from ours is that they are unable to control the fault-tolerance level of each connection (i.e., VP).
References-found: 19

