URL: ftp://www.cs.rutgers.edu/pub/technical-reports/dcs-tr-282.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: FRUGAL METHODS FOR THE INDEPENDENT SET AND GRAPH COLORING PROBLEMS  Written under the direction of  
Author: BY MAGN US M AR HALLD ORSSON Ravi Boppana 
Degree: A dissertation submitted to the Graduate School|New Brunswick  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  and approved by  
Date: Oct, 1991  
Note: Graduate Program in Computer Science  
Address: New Jersey  Brunswick, New Jersey  
Affiliation: Rutgers, The State University of  New  
Abstract-found: 0
Intro-found: 1
Reference: <author> Deyr fe, deyja frndur, deyr sjalfur id sama; en ordstr deyr aldregi, hveim er ser godan getur. </author> <title> Cattle die and kinsmen die, thyself too soon must die, but one thing never, I ween, will die, - fair fame of one who has earned. </title>
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi. </author> <title> A note on Ramsey numbers. </title> <journal> J. Combin. Theory Ser. A, </journal> <volume> 29 </volume> <pages> 354-360, </pages> <year> 1980. </year>
Reference-contexts: If care is taken to conquer the smaller subproblem first, only linear (in n) extra space is required. For small values of k, we are able to improve on Ramsey slightly. Boppana [14] has shown that a technique by Ajtai, Komlos, and Szemeredi <ref> [1] </ref> treated by Shearer [41] as a randomized greedy algorithm, can be made deterministic to find an independent set in k-clique-free graphs of size (n 1=(k1) (log n) (k2)=(k1) ) in polynomial time.
Reference: [2] <author> N. Alon. </author> <note> Personal communications cited in [46], </note> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: We give improvements of that method in section 4.3, that removes the k2 k factor and reduces the performance guarantee to O (n= log n). As for lower bounds, for graphs with bounded chromatic number, Vishwanathan [46] improved previous bounds of Alon <ref> [2] </ref>, and Szegedy and Vishwanathan to ( 1 1 ( log n Vishwanathan's result holds also for randomized algorithms against oblivious adversary.
Reference: [3] <author> L. Babai, C. Lund, and L. Fortnow. </author> <title> Non-determistic exponential time has two-prover interactive protocols. </title> <booktitle> In Proc. 31st Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 16-25, </pages> <address> St. Louis, </address> <month> Oct. </month> <year> 1990. </year> <title> volume I. </title>
Reference-contexts: A key result of the authors is an improvement of the original protocol of <ref> [3] </ref>, showing that r M (n) + c M (n) log (T (n)) log log T (n) is sufficient transcript length to accept all language in N T IM E (T (n)) (for T (n) n). <p> r (n)+c (n) with ff (G x ) being 2 r (n) as opposed to 2 r (n) =4, then such an algorithm would be powerful enough to accept all interactive proofs, and hence all languages in N EXP T IM E, by a result of Babai, Fortnow, and Lund <ref> [3] </ref>. The graph products approach of Garey and Johnson then tells us that approximating within any constant factor is sufficient.
Reference: [4] <author> R. Bar-Yehuda and S. </author> <title> Even. A 2 log log n 2 log n performance ratio for the weighted vertex cover problem. </title> <type> Technical Report #260, </type> <institution> Technion, Haifa, </institution> <month> Jan. </month> <year> 1983. </year>
Reference-contexts: We cover the details in chapter 4. 2.1.7 Methods for Vertex Cover Folklore (see [25, pp. 134] attributed to Gavril) tells us that any maximal matching approximates the minimum vertex cover by a factor of two. This was slightly improved independently by Bar-Yehuda and Even <ref> [4] </ref>, and Monien and Speckenmeyer [36], to a factor of 2 ( log log n log n ).
Reference: [5] <author> D. Bean. </author> <title> Effective coloration. </title> <journal> J. Symbolic Logic, </journal> <volume> 41 </volume> <pages> 469-480, </pages> <year> 1976. </year>
Reference-contexts: Also, First Fit performs as well as any on-line algorithm on trees. In the case of interval graphs, Kierstead and Trotter [32] gave a more involved algorithm that obtained 3-approximability, and showed that was the best possible. It has been shown by several authors <ref> [27, 5] </ref> that for any algorithm there are graphs that require unbounded number of colors. What is more striking is that there is a fixed tree on n vertices such that any on-line algorithm will use at least 1 + blog nc colors given some ordering of the tree.
Reference: [6] <author> S. Ben-David, A. Borodin, R. Karp, G. Tardos, and A. Wigderson. </author> <title> On the power of randomization in online algorithms. </title> <booktitle> In Proc. 22nd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 379-386, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: An on-line algorithm may also use randomization. Because the adversary can often use knowledge of the workings of a deterministic algorithm to construct hard inputs, using random bits may be a way to foil the adversary. Against randomization there are several different adversaries. We follow <ref> [6] </ref> but focus on graph coloring. 8 Oblivious adversary: One who must construct the graph in advance (based only on the description of the on-line algorithm but before any nodes are colored), but pays for it optimally. <p> It was proved in <ref> [6] </ref> that this adversary is so strong that randomization is of no use against it. As a result, we shall refer to it as the deterministic adversary. For conciseness 4 , we shall refer to the adaptive on-line adversary as simply the adaptive adversary.
Reference: [7] <author> B. Berger and J. Rompel. </author> <title> A better performance guarantee for approximate graph coloring. </title> <journal> Algorithmica, </journal> <volume> 5(4) </volume> <pages> 459-466, </pages> <year> 1990. </year>
Reference-contexts: The approximation ratio is thus n (k2)=(k1) =k, and the performance guarantee max k n (k2)=(k1) =k = O (n= log n). This applies immediately to the independent set problem, since the two are identical for our purposes, 15 2.1.5 Berger and Rompel Berger and Rompel <ref> [7] </ref> recently gave an algorithm that finds independent sets of size (log k n) 2 in k-colorable graphs. When combined with the approximate graph coloring method of [49] (or alternatively that of section 3.2), it produces a performance guarantee of O (n (log log n= log n) 3 ). <p> For a subset I of G, let N (I) denote the subgraph induced by vertices neither in I nor adjacent to any vertex in I. The following three observations are a key to the argument of <ref> [7] </ref>. 1. If I is a subset of A, then I must be independent of the rest of A, hence the order of N (I) is at least the order of the rest of A. More formally, I A ) jN (I)j jA Ij. 2. <p> The combined independent set will be of size at least (log k n) 2 . This process can be made deterministic, as presented in <ref> [7] </ref>. Partition the vertices of the graph into bins of size k log k n. <p> We also give some algorithms for graph with very high independence number, and show how known results on approximating Vertex Cover follow from it. 31 We show how to use the above Independent Set performance guarantee to improve a result of Berger and Rompel <ref> [7] </ref>, obtaining the best performance guarantee known for Graph Coloring of O (n (log log n) 2 = log 3 n). We finally consider the question how much further these approaches can be taken. <p> A second level attains n=2 n=(2 log n), and a third level comes even closer. 3.4 Degree-Based Coloring Algorithms We now show how to use the independent set approximation algorithms to improve the result of Berger and Rompel <ref> [7] </ref> described earlier. Let G be a k-colorable graph, let A be a largest (or larger than average) color class (under some optimal coloring) in G, and let I be a set of log k n vertices in G. <p> a performance guarantee better than 50 log n ), the performance guarantee obtained by the algorithm of Monien and Speckenmeyer. 3.5.3 Further Limitation Results for Coloring A limitation of the limitation results for coloring algorithms above is that they obviously do not cover the degree-based algorithms, such as Berger/Rompel's technique <ref> [7] </ref>. It turns out, however, that it is easy to argue only a slightly weaker limitation for algorithms equipped with that additional technique. The "degree-based" technique is of the form: find a large independent set with a small non-neighborhood, and recursively apply the technique on that non-neighborhood.
Reference: [8] <author> P. Berman and G. Schnitger. </author> <title> On the complexity of approximating the independent set problem. </title> <booktitle> In Proc. Symp. Theoret. Aspects of Comp. Sci. Lecture Notes in Comp. Sci. </booktitle> # <volume> 349, </volume> <pages> pages 256-268. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: cut arbitrarily through approximative properties, in that the classes low in the hierarchy contain some hard-to-approximate problems, while classes high in the hierarchy do not contain even problems in P. 2.2.2 Randomized Amplification We follow the excellent analysis and enhancements of Avrim Blum [11] of results of Berman and Schnitger <ref> [8] </ref>. The graph products mentioned in the beginning allow us to amplify the independent set in the graph to obtain stronger approximations. <p> The lower bounds will without doubt be improved eventually. The recent amplifications of Berman and Schnitger <ref> [8] </ref> and Feige et al. [23] are promising and fertile for further study. It is highly unlikely that the performance guarantees we have given will remain the best possible. Not much be may needed to knock off some logarithmic or doubly logarithmic factors.
Reference: [9] <author> A. Blum. </author> <title> An ~ O(n :4 ) approximation algorithm for 3-coloring. </title> <booktitle> In Proc. 22nd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 535-542, </pages> <year> 1989. </year>
Reference-contexts: section 3.3 to graphs with very high independence number. 2.1.8 Blum Blum has improved approximate coloring of graphs with fixed chromatic number, in particular for 3-coloring from the O ( p n) of Wigderson and the O ( p n= log n) of Berger and Rompel, to n 0:4+o (1) <ref> [9] </ref> and later to n 0:375+o (1) [10]. The involved method of [9] can be summarized in the following three steps ([10] adds another level of complexity to the method): 1. Destroy all copies of the subgraphs K 4 e and 1-2-3 graphs by collapsing certain pairs of nodes. 2. <p> has improved approximate coloring of graphs with fixed chromatic number, in particular for 3-coloring from the O ( p n) of Wigderson and the O ( p n= log n) of Berger and Rompel, to n 0:4+o (1) <ref> [9] </ref> and later to n 0:375+o (1) [10]. The involved method of [9] can be summarized in the following three steps ([10] adds another level of complexity to the method): 1. Destroy all copies of the subgraphs K 4 e and 1-2-3 graphs by collapsing certain pairs of nodes. 2. <p> We have earlier described several such algorithms. Section 3.2 described algorithms that use cliques, and wheels, and the algorithm in section 3.3 used odd cycles. Also, the method of Blum <ref> [9, 10] </ref>, described in chapter 2, uses certain color-critical subgraphs. In this section we shall illustrate that these subgraphs are in some sense the best of their kind.
Reference: [10] <author> A. Blum. </author> <title> Some tools for approximate 3-coloring. </title> <booktitle> In Proc. 31st Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 554-562, </pages> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: independence number. 2.1.8 Blum Blum has improved approximate coloring of graphs with fixed chromatic number, in particular for 3-coloring from the O ( p n) of Wigderson and the O ( p n= log n) of Berger and Rompel, to n 0:4+o (1) [9] and later to n 0:375+o (1) <ref> [10] </ref>. The involved method of [9] can be summarized in the following three steps ([10] adds another level of complexity to the method): 1. Destroy all copies of the subgraphs K 4 e and 1-2-3 graphs by collapsing certain pairs of nodes. 2. <p> The approximation for graph coloring is also the best known for graphs with chromatic number between q log log n log log n . For graphs with a smaller chromatic number the method of Blum <ref> [10] </ref> performs best, while for larger chromatic numbers the result in section 3.4 is stronger. <p> We have earlier described several such algorithms. Section 3.2 described algorithms that use cliques, and wheels, and the algorithm in section 3.3 used odd cycles. Also, the method of Blum <ref> [9, 10] </ref>, described in chapter 2, uses certain color-critical subgraphs. In this section we shall illustrate that these subgraphs are in some sense the best of their kind. <p> In either case, 0 (H) 3 2 + 1 in H. As a result, Ramsey-type algorithms require at least (n 11=( 3 2 + 1 colors on 3-colorable graphs. Notice that Blum's technique also breaks down in the re gion of n 1=3 <ref> [10] </ref>, even though it is not known to be of a subgraph-excluding type. Let us now derive a limitation for general graphs.
Reference: [11] <author> A. Blum. </author> <title> Interactive protocols and clique lower bounds. </title> <type> Exam report, </type> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: MAX NP and MAX SNP, all classes cut arbitrarily through approximative properties, in that the classes low in the hierarchy contain some hard-to-approximate problems, while classes high in the hierarchy do not contain even problems in P. 2.2.2 Randomized Amplification We follow the excellent analysis and enhancements of Avrim Blum <ref> [11] </ref> of results of Berman and Schnitger [8]. The graph products mentioned in the beginning allow us to amplify the independent set in the graph to obtain stronger approximations.
Reference: [12] <author> B. Bollobas. </author> <title> Random Graphs. </title> <publisher> Academic Press, </publisher> <year> 1985. </year>
Reference-contexts: Theorem 3.5 R (H; K t ) = (( t logt ) 0 (H) ) Proof. The proof follows the probabilistic method using the Lovasz local lemma. We follow closely the presentation of Bollobas <ref> [12, pp.287] </ref> of a lower bound on the ordinary Ramsey numbers. We give a proof only for a singleton collection H = fHg; the general case is similar. Let l = m (H) and s = n (H), and let r = l1 s2 . <p> The bounds on the sizes of each element, pairwise intersection, and log-wise intersection therefore all follow from bounds on the tail of the binomial distribution. Let A 1 ; A 2 ; : : : ; A t be fixed subsets of a k-element set. Chernoff's bound <ref> [12] </ref> gives P r [jA 1 j &gt; k=2 + c 1 k log k] 2k 2 (c 1 ) 2 P r [jA 1 " A 2 j &gt; k=4 + c 2 (k=2) log k] 2k (c 2 ) 2 8=3 and simple counting yields P r [j "
Reference: [13] <author> B. Bollobas and P. Erd-os. </author> <title> Cliques in random graphs. </title> <journal> Math. Proc. Cambridge Philos. Soc., </journal> <volume> 80 </volume> <pages> 419-427, </pages> <year> 1976. </year> <month> 76 </month>
Reference-contexts: On the average, however, the greedy method performs reasonably well. The following result appears widely <ref> [13, 26] </ref>. 11 Theorem 2.1 With high probability, the independence number of a random graph (with edge probability 1/2) is 2 (1 + o (1)) log n, while the size of the independent set found by Greedy is (1 + o (1)) log n. Proof.
Reference: [14] <author> R. Boppana. </author> <title> Private communication. </title>
Reference-contexts: If care is taken to conquer the smaller subproblem first, only linear (in n) extra space is required. For small values of k, we are able to improve on Ramsey slightly. Boppana <ref> [14] </ref> has shown that a technique by Ajtai, Komlos, and Szemeredi [1] treated by Shearer [41] as a randomized greedy algorithm, can be made deterministic to find an independent set in k-clique-free graphs of size (n 1=(k1) (log n) (k2)=(k1) ) in polynomial time. <p> On the other hand, when applied to general graphs the algorithm must be run for many different values of k, in which case it may be useful to combine the cycle removal process (see [36]). Boppana's <ref> [14] </ref> improvement of the technique of Ajtai, Komlos, and Szemeredi can also be applied here.
Reference: [15] <author> O. Bray. </author> <title> The Elder or Poetic Edda. Part I The Mythological Poems, volume II of Viking Club Translation Series. </title> <address> King's Weighhouse Rooms, London, </address> <year> 1908. </year>
Reference: [16] <author> O. Briem. Eddukvdi. Idunn, Reykjavk, Iceland, </author> <year> 1985. </year>
Reference: [17] <author> D. Bruschi, D. Joseph, and P. Young. </author> <title> A structural overview of NP optimization problems. </title> <booktitle> In Proc. 2nd Intl. Symp. on Optimal Algorithms, Lecture Notes in Computer Science # 401, </booktitle> <pages> pages 205-231, </pages> <address> Bulgaria, June 1990. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Knowing that a problem is N P-hard/easy tells us therefore nothing about its approximability. 20 One means of countering this problem is restricting the reductions used in order to preserve approximability. Several researchers have given varying definitions of approximation-preserving reductions <ref> [38, 19, 40, 42, 17] </ref>, but the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from
Reference: [18] <author> V. Chvatal. </author> <title> Determining the stability number of a graph. </title> <journal> SIAM J. Comput., </journal> <volume> 6(4), </volume> <month> Dec. </month> <year> 1977. </year>
Reference-contexts: Thus it suffices to observe that at the point of discontinuity, (G) = k thres , both functions satisfy the claim. 43 3.5 Limitations of Subgraph-Exclusion Algorithms We will present lower bounds for a fixed class of algorithms, similar in spirit to the work of Chvatal <ref> [18] </ref> 2 . We show how most approximation algorithms for the above-mentioned problems revolve around the concept of excluding subgraphs, and how no algorithm within that framework can do significantly better than the algorithms presented here.
Reference: [19] <author> P. Crescenzi and A. Panconesi. </author> <title> Completeness in approximation classes. </title> <booktitle> In Proceedings of the 17th Conf. on Fundamentals of Computation Theory. Lecture Notes in Computer Science # 380, </booktitle> <pages> pages 116-126. </pages> <publisher> Springer-Verlag, </publisher> <month> Aug. </month> <year> 1989. </year>
Reference-contexts: Knowing that a problem is N P-hard/easy tells us therefore nothing about its approximability. 20 One means of countering this problem is restricting the reductions used in order to preserve approximability. Several researchers have given varying definitions of approximation-preserving reductions <ref> [38, 19, 40, 42, 17] </ref>, but the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from
Reference: [20] <author> P. Erd-os. </author> <title> Some remarks on chromatic graphs. Colloq. </title> <journal> Math., </journal> <volume> 16 </volume> <pages> 253-256, </pages> <year> 1967. </year>
Reference-contexts: So if i (G) &gt; k 2k+1 , we can remove these cycles and then apply algorithm 3.4. 1 When read with an algorithmic frame of mind, this relationship and the resulting performance guarantees can be found in a 1967 paper of Erd-os <ref> [20] </ref>. 38 OddCycleFreeApproximation (G; k) f Graph G contains no odd cycles of length 2k + 1 or shorterg begin while G 6= ; do choose any vertex v in V (G). V i vertices of distance i from v.
Reference: [21] <author> P. Erd-os and G. Szekeres. </author> <title> A combinatorial problem in geometry. </title> <journal> Compositio Math., </journal> <volume> 2 </volume> <pages> 463-470, </pages> <year> 1935. </year>
Reference-contexts: This function was named after the English mathematician Frank P. Ramsey who first showed that it was well-defined. Our 33 algorithm in his name, and the associated analysis, provides another proof to an upper bound for the Ramsey function, first proved by Erd-os and Szekeres in 1934 <ref> [21] </ref>. Theorem 3.2 R (s; t) r (s; t) s+t2 Define t s (n) = minft j r (s; t) ng = minft j s+t2 ng.
Reference: [22] <author> R. Fagin. </author> <title> Generalized first-order spectra, and polynomial-time recognizable sets. </title> <editor> In R. Karp, editor, </editor> <title> Complexity and Computations. </title> <publisher> AMS, </publisher> <year> 1974. </year>
Reference-contexts: The definition of the class is based on the logical definition of N P by Fagin <ref> [22] </ref>. He showed that N P consists of all all existential second-order formulas which are expressions of the form 9S (S), where S is a finite structure and (S) is a first-order formula.
Reference: [23] <author> U. Feige, S. Goldwasser, L. Lovasz, S. Safra, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <month> Oct. </month> <year> 1991. </year> <note> To appear. </note>
Reference-contexts: Hence, we have that log (1 *t) *t. Since 1 *(k 1) = 1=k log k 1=(1*(k1)) , and log k 1 log (1*t) (*)t we have that n k (1 *(k 1)) n 2.2.3 Cliques and Interactive Proofs Feige, Goldwasser, Lovasz, Safra, and Szegedy <ref> [23] </ref> have recently shown an intimate connection between accepting interactive proofs and approximating Independent Set. We shall attempt to give a rough outline of those results. Interactive proofs are languages that all-powerful "verifier" can check by interacting with a number of polynomial-time "provers". <p> The lower bounds will without doubt be improved eventually. The recent amplifications of Berman and Schnitger [8] and Feige et al. <ref> [23] </ref> are promising and fertile for further study. It is highly unlikely that the performance guarantees we have given will remain the best possible. Not much be may needed to knock off some logarithmic or doubly logarithmic factors.
Reference: [24] <author> T. Gallai. Kritische graphen I. </author> <title> Publ. </title> <journal> Math. Inst. Hungar. Acad. Sci., </journal> <volume> 8 </volume> <pages> 165-192, </pages> <year> 1963. </year> <note> (See Bollobas, </note> <author> B. </author> <title> Extremal Graph Theory., </title> <publisher> Academic Press, </publisher> <year> 1978, </year> <pages> page 285). </pages>
Reference-contexts: Theorem 3.6 If H is 3-avoidable, then 0 (H) 3 2 + 1 Proof. Let H be a 3-avoidable graph in H, and H + e be 4-chromatic. A 4-critical graph is a 4-chromatic graph with the property that removing any node will make it 3-colorable. Gallai <ref> [24] </ref> showed that 4-critical graphs, with the exception of K 4 , have an edge-to-vertex ratio of at least 3 2 + 1 26 . If H + e contains a K 4 , then 0 (H) 0 (K 4 e) = 51 42 = 2.
Reference: [25] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractibility: A Guide to the Theory of NP-completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: We cover the details in chapter 4. 2.1.7 Methods for Vertex Cover Folklore (see <ref> [25, pp. 134] </ref> attributed to Gavril) tells us that any maximal matching approximates the minimum vertex cover by a factor of two. This was slightly improved independently by Bar-Yehuda and Even [4], and Monien and Speckenmeyer [36], to a factor of 2 ( log log n log n ). <p> Hence, the graph product serves to amplify the approximation, showing that certain performance guarantees can always be improved upon. The first result, dates back to the early days of NP-completeness. Theorem 2.2 (Garey, Johnson <ref> [25] </ref>) If Chromatic Number is approximable within less than 4=3 approximable (asymptotically), then P = N P . Proof.
Reference: [26] <author> G. R. Grimmett and C. J. H. McDiarmid. </author> <title> On colouring random graphs. </title> <journal> Math. Proc. Cambridge Philos. Soc., </journal> <volume> 77 </volume> <pages> 313-324, </pages> <year> 1975. </year>
Reference-contexts: On the average, however, the greedy method performs reasonably well. The following result appears widely <ref> [13, 26] </ref>. 11 Theorem 2.1 With high probability, the independence number of a random graph (with edge probability 1/2) is 2 (1 + o (1)) log n, while the size of the independent set found by Greedy is (1 + o (1)) log n. Proof.
Reference: [27] <author> A. Gyarfas and J. Lehel. </author> <title> On-line and first fit colorings of graphs. </title> <journal> J. Graph Theory, </journal> <volume> 12(2) </volume> <pages> 217-227, </pages> <year> 1988. </year>
Reference-contexts: Although it performs badly in worst case on general graphs, it turns out to be the highly versatile and has good performance on many special classes of graphs. First Fit obtains constant approximability on interval graphs [31], split graphs, complements of bipartite graphs, and complements of chordal graphs <ref> [27] </ref>. It also approximates degenerate (also called inductive) graphs, which include planar and chordal graphs, within O (log n) [28], which is within a constant of best possible for on-line algorithms. That lower bound holds also for on-line algorithms that are allowed significant lookahead, seeing into the near future. <p> Also, First Fit performs as well as any on-line algorithm on trees. In the case of interval graphs, Kierstead and Trotter [32] gave a more involved algorithm that obtained 3-approximability, and showed that was the best possible. It has been shown by several authors <ref> [27, 5] </ref> that for any algorithm there are graphs that require unbounded number of colors. What is more striking is that there is a fixed tree on n vertices such that any on-line algorithm will use at least 1 + blog nc colors given some ordering of the tree. <p> What is more striking is that there is a fixed tree on n vertices such that any on-line algorithm will use at least 1 + blog nc colors given some ordering of the tree. This lower bound was cited in [35], while a weaker argument was given in <ref> [27] </ref>. We shall describe the construction here and show that First-Fit attains this bound. Theorem 2.9 For every deterministic on-line coloring algorithm, there is a tree on 2 k1 nodes that requires k colors. 27 Proof. Fix a deterministic algorithm A.
Reference: [28] <author> S. Irani. </author> <title> On-line coloring inductive graphs. </title> <booktitle> In Proc. 31st Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 470-479, </pages> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: First Fit obtains constant approximability on interval graphs [31], split graphs, complements of bipartite graphs, and complements of chordal graphs [27]. It also approximates degenerate (also called inductive) graphs, which include planar and chordal graphs, within O (log n) <ref> [28] </ref>, which is within a constant of best possible for on-line algorithms. That lower bound holds also for on-line algorithms that are allowed significant lookahead, seeing into the near future. Also, First Fit performs as well as any on-line algorithm on trees.
Reference: [29] <author> D. S. Johnson. </author> <title> Worst case behaviour of graph coloring algorithms. </title> <booktitle> In Proc. 5th Southeastern Conf. on Combinatorics, Graph Theory, and Computing. Congressus Numerantium X, </booktitle> <pages> pages 513-527, </pages> <year> 1974. </year>
Reference-contexts: If d is the average degree of the graph, then it will find an independent set of size at least d n d+1 The situation is somewhat brighter for Min-Degree-Greedy-Coloring, as analyzed by Johnson in 1974 <ref> [29] </ref>. In any k-colorable graph there is a vertex with degree no more than n dn=ke, since at least n=k vertices must belong to the largest color class in 13 an optimal coloring of the graph.
Reference: [30] <author> G. Kant and J. van Leeuwen. </author> <title> Graph coloring algorithms. </title> <type> Manuscript, </type> <year> 1990. </year>
Reference-contexts: Another disadvantage is 5 that the analysis is complicated and only the simplest algorithms have been analyzed successfully. For a good overview of the above approaches to the coloring problem, see a survey of Kant and vanLeeuwen <ref> [30] </ref>. The final option, the topic of this dissertation, concerns algorithms with provably good bounds on their performance. 1.3 Approximation Algorithms: Inexact Methods with Bounded Per formance We are interested in tractable algorithms, namely those that run in polynomial time, that yield inexact yet "good" solutions.
Reference: [31] <author> H. A. Kierstead. </author> <title> The linearity of first-fit colorings of interval graphs. </title> <journal> SIAM J. Disc. Math., </journal> <year> 1991. </year> <month> 77 </month>
Reference-contexts: Although it performs badly in worst case on general graphs, it turns out to be the highly versatile and has good performance on many special classes of graphs. First Fit obtains constant approximability on interval graphs <ref> [31] </ref>, split graphs, complements of bipartite graphs, and complements of chordal graphs [27]. It also approximates degenerate (also called inductive) graphs, which include planar and chordal graphs, within O (log n) [28], which is within a constant of best possible for on-line algorithms.
Reference: [32] <author> H. A. Kierstead and W. T. Trotter. </author> <title> An extremal problem in recursive combinatorics. </title> <booktitle> In Proc. 12th Southeastern Conf. on Combinatorics, Graph Theory, and Computing. Congressus Numerantium XXXIII, </booktitle> <pages> pages 143-153, </pages> <year> 1981. </year>
Reference-contexts: That lower bound holds also for on-line algorithms that are allowed significant lookahead, seeing into the near future. Also, First Fit performs as well as any on-line algorithm on trees. In the case of interval graphs, Kierstead and Trotter <ref> [32] </ref> gave a more involved algorithm that obtained 3-approximability, and showed that was the best possible. It has been shown by several authors [27, 5] that for any algorithm there are graphs that require unbounded number of colors.
Reference: [33] <author> P. G. Kolaitis and M. N. Thakur. </author> <title> Logical definability of NP optimization problems. </title> <type> Technical Report UCSC-CRL-90-48, </type> <institution> University of California, Santa Cruz, </institution> <year> 1990. </year>
Reference-contexts: They investigated a subclass, where the occurrences of the structure S in the formula expressed in CNF all occur negatively. The class RMAX (k) contains problems where S occurs no more than k times, all negatively. In particular, Independent Set is in RMAX (2). Kolaitis and Thakur <ref> [33] </ref> have analyzed this hierarchy of problems even further, shown that there is exactly one higher level, MAX 2 , and that the four levels are strict. They give a similar classification and hierarchy for minimization problems.
Reference: [34] <author> N. Linial and V. Vazirani. </author> <title> Graph products and chromatic numbers. </title> <booktitle> In Proc. 30th Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 124-128, </pages> <year> 1989. </year>
Reference-contexts: Notice, that the theorem holds also for Independence Number. Finally, using a slightly different version of graph product, Linial and Vazirani <ref> [34] </ref> showed that if the chromatic number can be approximated within 2 log 1* n , then it can be approximated within 2 log ffi n , for any *; ffi &gt; 0.
Reference: [35] <author> L. Lovasz, M. Saks, and W. T. Trotter. </author> <title> An online graph coloring algorithm with sublinear performance ratio. </title> <journal> Discrete Math., </journal> <volume> 75 </volume> <pages> 319-325, </pages> <year> 1989. </year>
Reference-contexts: log log n , yielding a perfor mance guarantee of O (n (log log n= log n) 2 ) for Independent Set. 2.1.6 Vishwanathan Vishwanathan [46] recently published a randomized algorithm for coloring graphs online, using ideas of the previous work of Wigderson [49], and of Lovasz, Saks, and Trotter <ref> [35] </ref>. We shall discuss on-line algorithms later in this chapter, and Vishwanathan's algorithm in a later chapter, but mention this method here because it immediately suggests a deterministic off-line algorithm. <p> What is more striking is that there is a fixed tree on n vertices such that any on-line algorithm will use at least 1 + blog nc colors given some ordering of the tree. This lower bound was cited in <ref> [35] </ref>, while a weaker argument was given in [27]. We shall describe the construction here and show that First-Fit attains this bound. Theorem 2.9 For every deterministic on-line coloring algorithm, there is a tree on 2 k1 nodes that requires k colors. 27 Proof. Fix a deterministic algorithm A. <p> We had seen before that First Fit performed very badly on the more general class of bipartite graphs. There is, however, a simple variation of First Fit that uses no more than 2 log n colors, matching the lower bound for trees within a constant. This was suggested in <ref> [35] </ref> as an "easy exercise", and also by Viswanathan [46]. Let us first see why First-Fit doesn't perform on bipartite graphs. Consider the complete bipartite graph K t;t and subtract from it a perfect matching. Feed the algorithm the graph one matching at a time. <p> It was answered affirmatively by Lovasz, Saks, and Trotter <ref> [35] </ref>. Their algorithm has a performance guarantee of O (n= log fl n).
Reference: [36] <author> B. Monien and E. Speckenmeyer. </author> <title> Ramsey numbers and an approximation algorithm for the vertex cover problem. </title> <journal> Acta Inf., </journal> <volume> 22 </volume> <pages> 115-123, </pages> <year> 1985. </year>
Reference-contexts: This was slightly improved independently by Bar-Yehuda and Even [4], and Monien and Speckenmeyer <ref> [36] </ref>, to a factor of 2 ( log log n log n ). <p> On the other hand, when applied to general graphs the algorithm must be run for many different values of k, in which case it may be useful to combine the cycle removal process (see <ref> [36] </ref>). Boppana's [14] improvement of the technique of Ajtai, Komlos, and Szemeredi can also be applied here. <p> We shall convert the algorithm of Monien and Speckenmeyer for that purpose. Their implementation for vertex cover required a use of a combinatorial result of Nemhauser and Trotter [37], which is not needed for the 39 independent set algorithm. Following Monien and Speckenmeyer <ref> [36] </ref>, we first apply a technique of Nemhauser and Trotter that separates the graph into three components: the first containing nodes not in any minimum vertex cover, the second containing nodes in every minimum vertex cover, and the third with the property that its minimum vertex cover is at least half
Reference: [37] <author> G. L. Nemhauser and W. T. Trotter. </author> <title> Vertex packing: structural properties and algorithms. </title> <journal> Math. Programming, </journal> <volume> 8 </volume> <pages> 232-248, </pages> <year> 1975. </year>
Reference-contexts: We shall convert the algorithm of Monien and Speckenmeyer for that purpose. Their implementation for vertex cover required a use of a combinatorial result of Nemhauser and Trotter <ref> [37] </ref>, which is not needed for the 39 independent set algorithm.
Reference: [38] <author> P. Orponen and H. Mannila. </author> <title> On approximation preserving reductions: complete problems and robust measures. </title> <note> To appear, </note> <year> 1987. </year>
Reference-contexts: Knowing that a problem is N P-hard/easy tells us therefore nothing about its approximability. 20 One means of countering this problem is restricting the reductions used in order to preserve approximability. Several researchers have given varying definitions of approximation-preserving reductions <ref> [38, 19, 40, 42, 17] </ref>, but the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from
Reference: [39] <author> A. Panconesi and D. Ranjan. </author> <title> Quantifiers and approximation. </title> <booktitle> In Proc. 22nd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 446-456, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: They gave many example of problems complete for MAX SNP under an approximation preserving reduction they named L-reduction, in particular, Max 2Sat, Independent Set on bounded-degree graphs, and Vertex Cover on bounded-degree graphs. This was built on further by Panconesi and Ranjan <ref> [39] </ref> introduced the class MAX 1 , defined like MAX NP but with a universal instead of existential quantifier.
Reference: [40] <author> C. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation, and complexity. </title> <booktitle> In Proc. 29th Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 229-234, </pages> <year> 1988. </year>
Reference-contexts: Knowing that a problem is N P-hard/easy tells us therefore nothing about its approximability. 20 One means of countering this problem is restricting the reductions used in order to preserve approximability. Several researchers have given varying definitions of approximation-preserving reductions <ref> [38, 19, 40, 42, 17] </ref>, but the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from <p> the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from optimal. 2 Papadimitriou and Yannakakis <ref> [40] </ref> used these reduction techniques to introduce a class of N P optimization problems that all have a constant approximation and have a polynomial-time approximation scheme iff some problem in the class has it.
Reference: [41] <author> J. B. Shearer. </author> <title> A note on the independence number of triangle-free graphs. </title> <journal> Discrete Math., </journal> <volume> 46 </volume> <pages> 83-87, </pages> <year> 1983. </year>
Reference-contexts: If care is taken to conquer the smaller subproblem first, only linear (in n) extra space is required. For small values of k, we are able to improve on Ramsey slightly. Boppana [14] has shown that a technique by Ajtai, Komlos, and Szemeredi [1] treated by Shearer <ref> [41] </ref> as a randomized greedy algorithm, can be made deterministic to find an independent set in k-clique-free graphs of size (n 1=(k1) (log n) (k2)=(k1) ) in polynomial time.
Reference: [42] <author> H. U. Simon. </author> <title> On approximate solutions for combinatorial optimization problems. </title> <journal> SIAM J. Disc. Math., </journal> <volume> 3(2) </volume> <pages> 294-310, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Knowing that a problem is N P-hard/easy tells us therefore nothing about its approximability. 20 One means of countering this problem is restricting the reductions used in order to preserve approximability. Several researchers have given varying definitions of approximation-preserving reductions <ref> [38, 19, 40, 42, 17] </ref>, but the common thread in most of them is the restriction that a solution for one problem that differs by * from optimal that is reduced to a solution to a second problem, the latter will be no more than a constant times * factor from
Reference: [43] <author> E. Szemeredi. </author> <title> Private communications, </title> <year> 1991. </year>
Reference-contexts: In fact, none of the other approaches attempted to date seem likely to yield a significant improvement. Given the mounting evidence we conjecture that these problems are inherently hard to solve even approximately. Conjecture 1 Graph Coloring is (n=polylog) approximable. This, of course, is not universally believed <ref> [43] </ref>.
Reference: [44] <author> R. E. Tarjan and A. E. Trojanowski. </author> <title> Finding a maximum independent set. </title> <journal> SIAM J. Comput., </journal> <volume> 6(3) </volume> <pages> 537-546, </pages> <month> Sept. </month> <year> 1977. </year>
Reference-contexts: The number of steps in the proof is intimately tied with the time complexity of an algorithm executing the proof, and thus the lower bound carried over to a class of algorithm that includes the Independent Set algorithm of Tarjan and Trojanowski <ref> [44] </ref>. 44 Merge: In certain cases, vertices can be fused together, causing a certain type of a subgraph to disappear.
Reference: [45] <author> P. B. Taylor, W. H. Auden, and P. H. Salus. </author> <title> The Elder Edda A Selection. Faber and Faber, </title> <address> London, </address> <year> 1969. </year>
Reference: [46] <author> S. Vishwanathan. </author> <title> Randomized online graph coloring. </title> <booktitle> In Proc. 31st Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 464-469, </pages> <month> Oct. </month> <year> 1990. </year>
Reference-contexts: combined method will then be max min ( k n ) We find that the two functions cross at approximately k = log n 2 log log n , yielding a perfor mance guarantee of O (n (log log n= log n) 2 ) for Independent Set. 2.1.6 Vishwanathan Vishwanathan <ref> [46] </ref> recently published a randomized algorithm for coloring graphs online, using ideas of the previous work of Wigderson [49], and of Lovasz, Saks, and Trotter [35]. <p> There is, however, a simple variation of First Fit that uses no more than 2 log n colors, matching the lower bound for trees within a constant. This was suggested in [35] as an "easy exercise", and also by Viswanathan <ref> [46] </ref>. Let us first see why First-Fit doesn't perform on bipartite graphs. Consider the complete bipartite graph K t;t and subtract from it a perfect matching. Feed the algorithm the graph one matching at a time. <p> Because of the convexity of the function that specifies the number of greedy bins, this doubling method adds no more than a constant factor of overhead. Vishwanathan <ref> [46] </ref> recently gave a randomized on-line algorithm, using similar ideas, that colors k-colorable graphs with O (k2 k n (k2)=(k1) (log n) 1=(k1) ) expected number of colors, yielding a O (n= p log n) performance guarantee. <p> We give improvements of that method in section 4.3, that removes the k2 k factor and reduces the performance guarantee to O (n= log n). As for lower bounds, for graphs with bounded chromatic number, Vishwanathan <ref> [46] </ref> improved previous bounds of Alon [2], and Szegedy and Vishwanathan to ( 1 1 ( log n Vishwanathan's result holds also for randomized algorithms against oblivious adversary.
Reference: [47] <author> S. Viswanathan. </author> <type> Personal communications, </type> <year> 1991. </year>
Reference-contexts: That insures that the number of 4 Mistakenly stated as n= log log n in their paper, as pointed out by Viswanathan <ref> [47] </ref>. 29 residue bins doesn't grow out of bounds. Using n= log log n greedy bins, they show that no more than n=4 log log n residue sets are created. A coloring algorithm follows by recursively coloring the residue sets, which by Wigderson's observation are of a lesser chromaticity.
Reference: [48] <author> A. Wigderson. </author> <type> Personal communications. </type>
Reference-contexts: Finally, we apply this algorithm for low chromatic graphs and Min-Degree-Greedy on high chromatic graphs. The performance guarantee will then be of the order max min ( k n ) = n (log log n= log n) 2 Wigderson's method also approximates cliques <ref> [48] </ref> in somewhat roundabout fashion. If a graph has no k +1 clique it also has no k wheel in which case Wigderson's algorithm will find a coloring of G with O (kn (k2)=(k1) ) colors.
Reference: [49] <author> A. Wigderson. </author> <title> Improving the performance guarantee for approximate graph coloring. </title> <journal> J. ACM, </journal> <volume> 30(4) </volume> <pages> 729-735, </pages> <year> 1983. </year>
Reference-contexts: This yields a O (min k (n= log k n)) = O (n= log n) performance ratio. 2.1.4 Wigderson Johnson's bound for Min-Degree-Greedy-Coloring remained the best performance guarantee for coloring for nearly a decade. Finally in 1983, Wigderson <ref> [49] </ref> improved the bound considerably, in particular for graphs with bounded chromatic number. Wigderson made two crucial observations, that have remained important for further developments. Observation 2.1 The neighborhood of any node in a three-colorable graph must be two-colorable. <p> When combined with the approximate graph coloring method of <ref> [49] </ref> (or alternatively that of section 3.2), it produces a performance guarantee of O (n (log log n= log n) 3 ). Assume we are given a k-colorable graph G. Let A be a largest independent set in G thus of size at least dn=ke. <p> at approximately k = log n 2 log log n , yielding a perfor mance guarantee of O (n (log log n= log n) 2 ) for Independent Set. 2.1.6 Vishwanathan Vishwanathan [46] recently published a randomized algorithm for coloring graphs online, using ideas of the previous work of Wigderson <ref> [49] </ref>, and of Lovasz, Saks, and Trotter [35]. We shall discuss on-line algorithms later in this chapter, and Vishwanathan's algorithm in a later chapter, but mention this method here because it immediately suggests a deterministic off-line algorithm. <p> This implies a O (n= log 2 n) performance guarantee for Independent Set, the first such bound published. This also improves slightly on Wigderson's algorithm <ref> [49] </ref>. <p> By applying a version of algorithm 3.3 that utilizes Wheel-FreeRamsey, we can color a graph without (k 2)-wheels using O (n (k2)=(k1) =k) colors. Algorithm 3.2 is strongly related to Wigderson's <ref> [49] </ref> coloring algorithm. By considering the whole uncolored portion of the graph in each iteration, instead of fully coloring the pivot nodes' neighborhoods before coloring their non-neighbors, Wheel-FreeRamsey improves the approximation by a factor of k. Also, by focusing alternately on neighborhoods and non-neighborhoods, another factor of k is gained.
Reference: [50] <author> A. C.-C. Yao. </author> <title> Probabilistic computations: Towards a unified measure of complexity. </title> <booktitle> In Proc. 18th Ann. IEEE Symp. on Found. of Comp. Sci., </booktitle> <pages> pages 535-542, </pages> <year> 1977. </year> <month> 78 </month>
Reference-contexts: By a result of Yao <ref> [50] </ref> it suffices to show that there is a distribution on k-colorable n-vertex graphs for which every deterministic (transparent) algorithm uses many colors on average. We shall essentially use the uniform distribution of those graph that the adaptive adversary may construct.
References-found: 51

