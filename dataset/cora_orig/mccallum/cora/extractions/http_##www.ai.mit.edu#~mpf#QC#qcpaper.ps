URL: http://www.ai.mit.edu/~mpf/QC/qcpaper.ps
Refering-URL: 
Root-URL: 
Title: Area Exam Paper Quantum Computation Primitives  
Author: Michael P. Frank 
Date: February 2, 1996  
Address: 545 Technology Sq. Cambridge, MA 02139  
Affiliation: MIT AI Lab  
Abstract: This paper surveys the state of the field of quantum computation, with an emphasis on the recent effort to devise simple quantum computational primitives upon which more complex quantum calculations can be built. This effort is exemplified by the recent papers [2, 49], which we review. We also discuss Shor's [38] paper, which describes the quantum-polynomial-time factoring algorithm that has provided a major motivation for much of the recent activity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adriano Barenco. </author> <title> A universal two-bit gate for quantum computation. </title> <journal> Proceedings of the Royal Society of London Ser. A, </journal> <volume> 449 </volume> <pages> 679-683, </pages> <year> 1995. </year> <note> Preprint at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9505016. </note>
Reference-contexts: Barenco <ref> [1] </ref> extended this result further by showing the existence of a large class of two-bit gates, 8 each one of which is universal by itself, and a newer paper by Deutsch and colleagues [18] shows that "almost all" quantum gates operating on two or more bits are universal! That is, the
Reference: [2] <author> Adriano Barenco, Charles H. Bennett, Richard Cleve, David P. DiVincenzo, Norman H. Margo-lus, Peter W. Shor, Tycho Sleator, John A. Smolin, and Harald Weinfurter. </author> <title> Elementary gates for quantum computation. </title> <journal> Physical Review A, </journal> <volume> 52(5) </volume> <pages> 3457-3467, </pages> <year> 1995. </year> <note> Preprint at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9503016 and at http://vesta. physics.ucla.edu/cgi-bin/uncompress ps cgi?torgats1.ps. </note>
Reference-contexts: The paper <ref> [2] </ref>, the result of collaboration by a large group of active quantum computation researchers, is the pinnacle of these efforts to elucidate the possibilities for universal quantum gate construction.
Reference: [3] <author> Adriano Barenco, David Deutsch, Artur K. Ekert, and Richard Jozsa. </author> <title> Conditional quantum dynamics and logic gates. </title> <journal> Physical Review Letters, </journal> <volume> 74(20) </volume> <pages> 4083-4086, </pages> <month> 15 May </month> <year> 1995. </year> <note> Preprint at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9503017. </note>
Reference-contexts: Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 [33, 34], DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b <ref> [3] </ref>, and Chuang & Yamamoto '95 [13]. The main lesson to be learned from this long list of proposals is that the details of the physical implementation of quantum computers is "just" an engineering concern, rather than a theoretical issue of fundamental importance.
Reference: [4] <author> Charles H. Bennett. </author> <title> Logical reversibility of computation. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 17 </volume> <pages> 525-532, </pages> <year> 1973. </year>
Reference-contexts: The circuit model was also useful to the early developers of reversible computing ideas such as Fredkin and Toffoli, who showed that there were reversible gates that were universal for computation in these sorts of circuits, for example, see Toffoli '80 [44] for some detailed constructions. Bennett <ref> [4] </ref> and Lecerf [31] independently showed that reversible Turing machines can simulate irreversible ones; this result turned out to be very important for quantum computers, since the invertability of unitary transformations means that all quantum computations have to be reversible.
Reference: [5] <author> Charles H. Bennett, Ethan Bernstein, Gilles Brassard, and Umesh V. Vazirani. </author> <title> Strengths and weaknesses of quantum computing. </title> <note> Preprint at http://vesta.physics.ucla.edu/cgi-bin/ uncompress ps cgi?bbbv94h.ps, </note> <year> 1994. </year>
Reference-contexts: Hogg [27] has investigated quantum algorithms that enhance the probability density found along solution paths in NP search problems, but not enough to allow measurements of the machine state for such problems to yield solutions in expected polynomial time. On the other side of the question, Bennett et al. <ref> [5] </ref> have provided suggestive evidence against the NP BQP conjecture, by showing that when R is a random oracle, NP R BQP R with probability 1.
Reference: [6] <author> Ethan Bernstein and Umesh V. Vazirani. </author> <title> Quantum complexity theory. </title> <booktitle> In 25th Association for Computing Machinery Symposium on the Theory of Computing, </booktitle> <pages> pages 11-20, </pages> <year> 1993. </year>
Reference-contexts: Such a development could lead to eventual practical applications, if and when such quantum computers become buildable. Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers <ref> [19, 8, 7, 6, 39] </ref> culminated in Peter Shor's 1994 proof [37, 38] that a (somewhat idealized) quantum computer could factor large integers in polynomial time. <p> This seems like an unnatural problem. But in any case, following the Deutsch-Jozsa paper, analysis of the power of quantum computers developed rapidly with papers <ref> [8, 7, 6] </ref> that defined various quantum complexity classes and compared them with various classical complexity classes in relativized oracle settings similar to Deutsch and Jozsa's. Quantum operations were also found to have uses in implementing various cryptographic operations; see the end of [8] for a summary. <p> Classical algorithms require exponentially many tries to achieve a reasonable probability of success. The extraordinary thing about Simon's construction was its use of a particular unitary transformation equivalent to a special-case of the discrete Fourier transformation that had been introduced earlier by Bernstein and Vazirani <ref> [6] </ref>. Originally this Fourier transform was used to solve a certain simple oracle problem using (1) queries on a quantum computer as opposed to the (n) queries that were classically required. <p> Currently, it seems unlikely that quantum computers could solve these problems, due to the fact that the only known quantum algorithms that dominate classical algorithms either involve unrealistic oracle-dependent promise problems <ref> [6, 39] </ref> or depend on the ability to reduce the problem to one involving periodicities for which the quantum Fourier transform is useful [38, 9]; one would not expect such periodicities a priori to be characteristic of all problems in NP.
Reference: [7] <editor> A. Berthiaume and Gilles Brassard. </editor> <booktitle> Oracle quantum computing. In Proceedings of the Workshop on Physics of Computation: </booktitle> <volume> PhysComp '92, </volume> <pages> pages 195-199, </pages> <address> Los Alamitos, CA, </address> <year> 1992. </year> <institution> Institute of Electrical and Electronic Engineers Computer Society Press. </institution> <note> Also to appear in Journal of Modern Optics. </note>
Reference-contexts: Such a development could lead to eventual practical applications, if and when such quantum computers become buildable. Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers <ref> [19, 8, 7, 6, 39] </ref> culminated in Peter Shor's 1994 proof [37, 38] that a (somewhat idealized) quantum computer could factor large integers in polynomial time. <p> This seems like an unnatural problem. But in any case, following the Deutsch-Jozsa paper, analysis of the power of quantum computers developed rapidly with papers <ref> [8, 7, 6] </ref> that defined various quantum complexity classes and compared them with various classical complexity classes in relativized oracle settings similar to Deutsch and Jozsa's. Quantum operations were also found to have uses in implementing various cryptographic operations; see the end of [8] for a summary.
Reference: [8] <author> A. Berthiaume and Gilles Brassard. </author> <title> The quantum challenge to structural complexity theory. </title> <booktitle> In Proceedings of the Seventh Annual Structure in Complexity Theory Conference, </booktitle> <pages> pages 132-137, </pages> <address> Los Alamitos, CA, 1992. </address> <publisher> Institute of Electrical and Electronic Engineers Computer Society Press. </publisher>
Reference-contexts: Such a development could lead to eventual practical applications, if and when such quantum computers become buildable. Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers <ref> [19, 8, 7, 6, 39] </ref> culminated in Peter Shor's 1994 proof [37, 38] that a (somewhat idealized) quantum computer could factor large integers in polynomial time. <p> This seems like an unnatural problem. But in any case, following the Deutsch-Jozsa paper, analysis of the power of quantum computers developed rapidly with papers <ref> [8, 7, 6] </ref> that defined various quantum complexity classes and compared them with various classical complexity classes in relativized oracle settings similar to Deutsch and Jozsa's. Quantum operations were also found to have uses in implementing various cryptographic operations; see the end of [8] for a summary. <p> Quantum operations were also found to have uses in implementing various cryptographic operations; see the end of <ref> [8] </ref> for a summary. Quantum analogues to the popular classical complexity classes such as BPP (bounded-error probabilistic polynomial-time) and ZPP (zero-error probabilistic polynomial-time) were defined, and various of the quantum classes were shown to be larger than the various classical classes|but only in relativized oracle settings.
Reference: [9] <author> Dan Boneh and Richard Lipton. </author> <title> Quantum cryptoanalysis of hidden linear functions. </title> <booktitle> In Advances in Cryptology | CRYPTO '95. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <booktitle> Proceedings of the Crypto '95 Conference, </booktitle> <address> Santa Barbara, California, </address> <month> Aug. </month> <pages> 27-31. </pages> <note> To appear. http://www.cs.princeton.edu/~dabo/ papers/quantum.ps. </note>
Reference-contexts: that quantum computers could solve these problems, due to the fact that the only known quantum algorithms that dominate classical algorithms either involve unrealistic oracle-dependent promise problems [6, 39] or depend on the ability to reduce the problem to one involving periodicities for which the quantum Fourier transform is useful <ref> [38, 9] </ref>; one would not expect such periodicities a priori to be characteristic of all problems in NP. However, someone may yet discover a clever quantum algorithm for general simulation of nondeterministic Turing machines. <p> Another possible show-stopper is that factoring and a handful of other problems relating to cryptography <ref> [9] </ref> may turn out be the only real-world problems amenable to fast quantum solutions, which may not provide enough motivation to support the development of quantum computers.
Reference: [10] <author> A. R. Calderbank and Peter W. Shor. </author> <title> Good quantum error-correcting codes exist. </title> <journal> Los Alamos Physics Preprint Archive, </journal> <note> http://xxx.lanl.gov/abs/quant-ph/9512032, December 1995. </note>
Reference-contexts: The latter seems more likely, since error-correction techniques such as those in <ref> [10, 11, 42] </ref> are already under development, but the current situation is that the number of successful computation steps required by these algorithms to just carry out one round of error correction is probably a lot larger than the number of steps that can be executed error-free using physicists' current level <p> However, Coppersmith [15] has shown that simple imprecision does not cripple the quantum factoring algorithm, and several quite recent papers <ref> [10, 11, 42] </ref> have addressed the more difficult issue of correcting errors due to decoherence of the quantum states.
Reference: [11] <author> Isaac L. Chuang and Raymond Laflamme. </author> <title> Quantum error correction by coding. </title> <journal> Los Alamos Physics Preprint Archive, </journal> <note> http://xxx.lanl.gov/abs/quant-ph/9511003, November 1995. </note>
Reference-contexts: The latter seems more likely, since error-correction techniques such as those in <ref> [10, 11, 42] </ref> are already under development, but the current situation is that the number of successful computation steps required by these algorithms to just carry out one round of error correction is probably a lot larger than the number of steps that can be executed error-free using physicists' current level <p> However, Coppersmith [15] has shown that simple imprecision does not cripple the quantum factoring algorithm, and several quite recent papers <ref> [10, 11, 42] </ref> have addressed the more difficult issue of correcting errors due to decoherence of the quantum states.
Reference: [12] <author> Isaac L. Chuang, Raymond Laflamme, Peter W. Shor, and W. H. Zurek. </author> <title> Quantum computers, factoring and decoherence. </title> <journal> Science, </journal> <volume> 270 </volume> <pages> 1635-1637, </pages> <year> 1995. </year> <note> Preprint at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9503007. </note>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [13] <author> Isaac L. Chuang and Yoshihisa Yamamoto. </author> <title> A simple quantum computer. </title> <journal> Physical Review A, </journal> <volume> 52 </volume> <pages> 3489-3496, </pages> <year> 1995. </year> <note> Preprint at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/ abs/quant-ph/9505011. 13 </note>
Reference-contexts: Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 [33, 34], DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 <ref> [13] </ref>. The main lesson to be learned from this long list of proposals is that the details of the physical implementation of quantum computers is "just" an engineering concern, rather than a theoretical issue of fundamental importance.
Reference: [14] <author> J. I. Cirac and P. Zoller. </author> <title> Quantum computations with cold trapped ions. </title> <journal> Physical Review Letters, </journal> <volume> 74 </volume> <pages> 4091-4094, </pages> <year> 1995. </year>
Reference-contexts: is that the number of successful computation steps required by these algorithms to just carry out one round of error correction is probably a lot larger than the number of steps that can be executed error-free using physicists' current level of technology for, say, manipulating atomic states with lasers (e.g. <ref> [14] </ref>. <p> For example, researchers in quantum optics study how to manipulate information encoded in the polarization staes of photons; "cavity QED" workers study the interactions between photons and electron spins on individual atoms [24, 45]; and other experimentalists work with vibrational states in assemblages of interacting atoms <ref> [14] </ref>. Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 [33, 34], DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13].
Reference: [15] <author> D. Coppersmith. </author> <title> An approximate Fourier transform useful in quantum factoring. </title> <institution> Research Report RC 19642, IBM, </institution> <year> 1994. </year>
Reference-contexts: However, Coppersmith <ref> [15] </ref> has shown that simple imprecision does not cripple the quantum factoring algorithm, and several quite recent papers [10, 11, 42] have addressed the more difficult issue of correcting errors due to decoherence of the quantum states.
Reference: [16] <author> David Deutsch. </author> <title> Quantum theory, the Church-Turing principle and the universal quantum computer. </title> <journal> Proceedings of the Royal Society of London Ser. A, </journal> <volume> A400:97-117, </volume> <year> 1985. </year>
Reference-contexts: Ever since Deutsch introduced his quantum generalization of the machine <ref> [16] </ref>, researchers have wondered whether this computational model has computational capabilities greater than those of classical Turing machines. In his original paper, Deutsch showed that quantum computers could exploit "quantum parallelism" to simultaneously compute function values for N inputs using only one mechanism. <p> Yao [53] showed that, similarly to the case with classical irreversible and reversible circuits, quantum circuits could simulate quantum Turing machines in polynomial time, and vice-versa. Thus, quantum circuits are a sufficient model for quantum computation that is perhaps easier to think about than Deutsch's earlier <ref> [16] </ref> quantum Turing machine.
Reference: [17] <author> David Deutsch. </author> <title> Quantum computational networks. </title> <journal> Proceedings of the Royal Society of London Ser. A, </journal> <volume> A425:73-90, </volume> <year> 1989. </year>
Reference-contexts: Without Bennett's and Lecerf's discovery, it would not be clear that quantum computers were even as powerful as classical computers that dissipated energy. Deutsch <ref> [17] </ref> generalized the reversible circuit model to produce the idea of quantum circuits. <p> Deutsch's paper showed <ref> [17] </ref> that the 3-bit universal gate for reversible logic invented by Toffoli [44] could be generalized in such a way that it would also be universal for quantum logic.
Reference: [18] <author> David Deutsch, Adriano Barenco, and Artur K. Ekert. </author> <title> Universality in quantum computation. </title> <journal> Proceedings of the Royal Society of London Ser. A, </journal> <volume> 449 </volume> <pages> 669-677, </pages> <year> 1995. </year> <title> Shows that almost all 2-bit gates are universal. </title> <note> Preprint available at Los Alamos Physics Preprint Archive, http://xxx.lanl. gov/abs/quant-ph/9508012. </note>
Reference-contexts: Barenco [1] extended this result further by showing the existence of a large class of two-bit gates, 8 each one of which is universal by itself, and a newer paper by Deutsch and colleagues <ref> [18] </ref> shows that "almost all" quantum gates operating on two or more bits are universal! That is, the non-universal gates comprise a countable subset of the uncountable number of possible gates.
Reference: [19] <author> David Deutsch and Richard Jozsa. </author> <title> Rapid solution of problems by quantum computation. </title> <journal> Proceedings of the Royal Society of London Ser. A, </journal> <volume> A439:553-558, </volume> <year> 1992. </year>
Reference-contexts: Such a development could lead to eventual practical applications, if and when such quantum computers become buildable. Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers <ref> [19, 8, 7, 6, 39] </ref> culminated in Peter Shor's 1994 proof [37, 38] that a (somewhat idealized) quantum computer could factor large integers in polynomial time. <p> The catch is that half the time, at random, the measurement yields no information|so the expected rate of finding these XORs is the same as with a classical algorithm that first computed the value for one input, and then the other, and XORed them. In a later paper <ref> [19] </ref>, Deutsch did much better|together with Jozsa he showed that a certain property of functions could be determined with certainty exponentially faster by quantum programs than by classical ones, if the function is given as a black box as input to the program.
Reference: [20] <author> David P. DiVincenzo. </author> <title> Two-bit gates are universal for quantum computation. </title> <journal> Physical Review A, </journal> <volume> 51(2) </volume> <pages> 1015-1022, </pages> <month> February </month> <year> 1995. </year> <note> Also at Los Alamos Physics Preprint Archive, http://xxx.lanl. gov/abs/cond-mat/9407022. </note>
Reference-contexts: The next big discovery in quantum gate theory was DiVincenzo's <ref> [20, 21, 41] </ref> discovery that arbitrary quantum computations can be performed using only two-bit gates. This was a surprising result, since two bit gates had been proven insufficient for computing arbitrary functions in classical reversible circuits. <p> Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 [33, 34], DiVincenzo '95 a <ref> [20] </ref>, Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13].
Reference: [21] <author> David P. DiVincenzo and John A. Smolin. </author> <title> Results on two-bit gate design for quantum computers. </title> <note> Preprint at http://vesta.physics.ucla.edu/cgi-bin/uncompress ps cgi?ieee04.ps. </note>
Reference-contexts: The next big discovery in quantum gate theory was DiVincenzo's <ref> [20, 21, 41] </ref> discovery that arbitrary quantum computations can be performed using only two-bit gates. This was a surprising result, since two bit gates had been proven insufficient for computing arbitrary functions in classical reversible circuits.
Reference: [22] <author> Artur K. Ekert and Richard Jozsa. </author> <title> Shor's quantum algorithm for factorising numbers. </title> <note> To appear in Rev. Mod. Phys. Preprint at ftp://eve.physics.ox.ac.uk/Archive/Numbered/EJ95/EJ95.ps. </note>
Reference-contexts: The details of exactly how and why this all works are of course very complex, and beyond the scope of this short survey paper. For more detailed expositions of Shor's algorithm, see Ekert and Jozsa's description in <ref> [23, 22] </ref>, and Shor's original papers [37, 38]. 3.3 Consequences of Shor's Discovery Shor's algorithm provides the strongest evidence to date that quantum computers may be more powerful than classical computers in a realistic way.
Reference: [23] <author> Artur K. Ekert and Richard Jozsa. </author> <title> Notes on Shor's efficient algorithm for factoring on a quantum computer. </title> <note> Preprint at http://feynman.stanford.edu/qcomp/ekert-jozsa/index.html, 1994. </note>
Reference-contexts: The details of exactly how and why this all works are of course very complex, and beyond the scope of this short survey paper. For more detailed expositions of Shor's algorithm, see Ekert and Jozsa's description in <ref> [23, 22] </ref>, and Shor's original papers [37, 38]. 3.3 Consequences of Shor's Discovery Shor's algorithm provides the strongest evidence to date that quantum computers may be more powerful than classical computers in a realistic way.
Reference: [24] <author> T. Pellizzari et al. Decoherence, </author> <title> continuous observation and quantum computing: a cavity QED model. </title> <type> Preprint, </type> <month> June </month> <year> 1995. </year> <institution> University of Innsbruck. </institution>
Reference-contexts: For example, researchers in quantum optics study how to manipulate information encoded in the polarization staes of photons; "cavity QED" workers study the interactions between photons and electron spins on individual atoms <ref> [24, 45] </ref>; and other experimentalists work with vibrational states in assemblages of interacting atoms [14].
Reference: [25] <author> Richard Feynman. </author> <title> Simulating physics with computers. </title> <journal> International Journal of Theoretical Physics, </journal> 21(6&7):467-488, 1982. 
Reference-contexts: 1 Introduction Quantitative Church's Thesis. The "Quantitative Church's Thesis" [50, 48] claims that Turing machines are as efficient as any realistic computer, within a polynomial factor. However, Feynman <ref> [25] </ref> has pointed out that Turing machines seem to be unable to efficiently simulate quantum physics; that is, they seem to require an exponential slowdown to simulate it (although this has not been proven). <p> Secondly, if the answer to the question is negative, i.e. if BQP BPP, then this has important implications for physics, because it might mean that existing classical computers could therefore simulate arbitrary quantum systems with only a polynomial slowdown, which is not currently known to be possible <ref> [25] </ref>; current classical simulations of quantum systems all suffer from an exponential slowdown.
Reference: [26] <author> Richard Feynman. </author> <title> Quantum mechanical computers. </title> <journal> Optics News, </journal> <volume> 11, </volume> <booktitle> 1985. Also in Foundations of Physics, </booktitle> <volume> 16(6) </volume> <pages> 507-531, </pages> <year> 1986. </year>
Reference-contexts: The main lesson to be learned from this long list of proposals is that the details of the physical implementation of quantum computers is "just" an engineering concern, rather than a theoretical issue of fundamental importance. Researchers since Feynman <ref> [26] </ref> have noted that there seems to be nothing fundamental in quantum physics that precludes using it for computation, and indeed, the multiplicity of ideas listed above seems to bear that out.
Reference: [27] <author> Tad Hogg. </author> <title> Quantum computing and phase transitions in combinatorial search. </title> <journal> Los Alamos Physics Preprint Archive, </journal> <note> http://xxx.lanl.gov/abs/quant-ph/9508012, August 1995. </note>
Reference-contexts: Hogg <ref> [27] </ref> has investigated quantum algorithms that enhance the probability density found along solution paths in NP search problems, but not enough to allow measurements of the machine state for such problems to yield solutions in expected polynomial time.
Reference: [28] <author> Donald E. Knuth. </author> <booktitle> The Art of Computer Programming, volume 2: Seminumerical Algorithms. </booktitle> <publisher> Addison-Wesley, </publisher> <address> second edition, </address> <year> 1981. </year>
Reference-contexts: The Fourier transform is linear and invertible; it turns out that it is unitary as well, and a discrete Fourier transform on functions of n-bit inputs can be performed on a quantum in time polynomial in n using a recursive procedure related to the classical fast-Fourier-transform (FFT) algorithm <ref> [28] </ref>. Simon's ingenious use of the quantum Fourier-transform algorithm to reduce an exponentially-hard problem to polynomial time was the original inspiration for Shor's application of a more general version of the transform to a difficult and practical problem: factoring large integers.
Reference: [29] <author> R. Landauer. </author> <title> Is quantum mechanically coherent computation useful? In D. </title> <editor> H. Feng and B-L. Hu, editors, </editor> <booktitle> Proceedings of the Drexel-4 Symposium on Quantum Nonintegrability|Quantum Classical Correspondence. </booktitle> <publisher> International Press, </publisher> <year> 1995. </year>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [30] <author> R. </author> <title> Landauer. </title> <journal> Is quantum mechanics useful? Philosophical Transactions of the Royal Society of London Ser. </journal> <note> A, 1995. In press. </note>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [31] <author> Yves Lecerf. </author> <title> Machines de turing reversibles. Recursive insolubilite en n 2 n de l'equation u = n u ou est un "isomorphisme de codes". </title> <journal> Comptes Rendus de L'Academie Fran~caise des Sciences, </journal> <volume> 257 </volume> <pages> 2597-2600, </pages> <year> 1963. </year>
Reference-contexts: Bennett [4] and Lecerf <ref> [31] </ref> independently showed that reversible Turing machines can simulate irreversible ones; this result turned out to be very important for quantum computers, since the invertability of unitary transformations means that all quantum computations have to be reversible.
Reference: [32] <author> A. K. Lenstra and H. W. Lenstra, </author> <title> editors. The Development of the Number Field Sieve, </title> <booktitle> volume 1554 of Lecture Notes in Mathematics. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> . 
Reference-contexts: This was an astounding discovery, since mathematicians throughout history have searched for an efficient way to factor numbers without success, since at least the time of Euclid. The best known classical algorithm <ref> [32] </ref> takes exponential time. 1 In x3 of this paper we will summarize Shor's algorithm and the discoveries leading to its development.) 1 More precisely, O (exp (n 1=3 log (n 2=3 ))). 1 Quantum Logic Primitives. Shor's discovery has spurred a flurry of recent activity in quantum computation research.
Reference: [33] <author> Seth Lloyd. </author> <title> A potentially realizable quantum computer. </title> <journal> Science, </journal> <volume> 261 </volume> <pages> 1569-1571, </pages> <month> 17 September </month> <year> 1993. </year> <note> Preprint at http://www-im.lcs.mit.edu:80/poc/lloyd/lloyd.ps.Z. </note>
Reference-contexts: Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 <ref> [33, 34] </ref>, DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13].
Reference: [34] <author> Seth Lloyd. </author> <title> Envisioning a quantum supercomputer. </title> <note> Science, 263:695, 4 February 1994. Technical comment on [33]. </note>
Reference-contexts: Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 <ref> [33, 34] </ref>, DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13].
Reference: [35] <author> Cesar Miquel, Juan Pablo Paz, and Roberto Perazzo. </author> <title> Factoring in a dissipative quantum computer. Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9601021, January 1996. Discusses a simulation of Shor's algorithm with error correction. </title>
Reference-contexts: More sophisticated techniques might take that into account. In summary, although these papers appear to be on the right 11 track to a solution, a more complete theory of quantum error correction is still needed, and remains to be worked out. The recent preprint <ref> [35] </ref> reports results of some simulation experiments on error-correcting versions of Shor's algorithm in the presence of errors. 6.4 How do we build it, physically? Although the question of how to implement quantum computations physically is of course a question of utmost importance for the future of the field, to a
Reference: [36] <author> G. Massimo Palma, Kalle-Antti Suominen, and Artur K. Ekert. </author> <title> Quantum computers and dissipation. </title> <journal> Proceedings of the Royal Society of London Ser. </journal> <note> A, 1995. Submitted. </note>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [37] <author> Peter W. Shor. </author> <title> Algorithms for quantum computation: Discrete log and factoring. </title> <booktitle> In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 124-134. </pages> <publisher> Institute of Electrical and Electronic Engineers Computer Society Press, </publisher> <month> November </month> <year> 1994. </year> <note> ftp://netlib.att. com/netlib/att/math/shor/quantum.algorithms.ps.Z. </note>
Reference-contexts: Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers [19, 8, 7, 6, 39] culminated in Peter Shor's 1994 proof <ref> [37, 38] </ref> that a (somewhat idealized) quantum computer could factor large integers in polynomial time. This was an astounding discovery, since mathematicians throughout history have searched for an efficient way to factor numbers without success, since at least the time of Euclid. <p> usual. * The ket notation jxi is used to refer to the unit-amplitude "basis" vector corresponding to the state x having amplitude 1. 3 Discussion of Paper by Shor We briefly review the 1995 paper by Shor [38], which is an updated description of his algorithm (first presented in 1994 <ref> [37] </ref>) for performing polynomial-time factorization of integers on a quantum computer. 3.1 Background: Quantum Complexity Theory. Ever since Deutsch introduced his quantum generalization of the machine [16], researchers have wondered whether this computational model has computational capabilities greater than those of classical Turing machines. <p> The details of exactly how and why this all works are of course very complex, and beyond the scope of this short survey paper. For more detailed expositions of Shor's algorithm, see Ekert and Jozsa's description in [23, 22], and Shor's original papers <ref> [37, 38] </ref>. 3.3 Consequences of Shor's Discovery Shor's algorithm provides the strongest evidence to date that quantum computers may be more powerful than classical computers in a realistic way.
Reference: [38] <author> Peter W. Shor. </author> <title> Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer. </title> <journal> Los Alamos Physics Preprint Archive, </journal> <note> http://xxx.lanl.gov/abs/quant-ph/ 9508027, August 1995. Expanded version of [37]. </note>
Reference-contexts: Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers [19, 8, 7, 6, 39] culminated in Peter Shor's 1994 proof <ref> [37, 38] </ref> that a (somewhat idealized) quantum computer could factor large integers in polynomial time. This was an astounding discovery, since mathematicians throughout history have searched for an efficient way to factor numbers without success, since at least the time of Euclid. <p> the evolution of the amplitude function of the system of interest continues as usual. * The ket notation jxi is used to refer to the unit-amplitude "basis" vector corresponding to the state x having amplitude 1. 3 Discussion of Paper by Shor We briefly review the 1995 paper by Shor <ref> [38] </ref>, which is an updated description of his algorithm (first presented in 1994 [37]) for performing polynomial-time factorization of integers on a quantum computer. 3.1 Background: Quantum Complexity Theory. <p> The details of exactly how and why this all works are of course very complex, and beyond the scope of this short survey paper. For more detailed expositions of Shor's algorithm, see Ekert and Jozsa's description in [23, 22], and Shor's original papers <ref> [37, 38] </ref>. 3.3 Consequences of Shor's Discovery Shor's algorithm provides the strongest evidence to date that quantum computers may be more powerful than classical computers in a realistic way. <p> that quantum computers could solve these problems, due to the fact that the only known quantum algorithms that dominate classical algorithms either involve unrealistic oracle-dependent promise problems [6, 39] or depend on the ability to reduce the problem to one involving periodicities for which the quantum Fourier transform is useful <ref> [38, 9] </ref>; one would not expect such periodicities a priori to be characteristic of all problems in NP. However, someone may yet discover a clever quantum algorithm for general simulation of nondeterministic Turing machines.
Reference: [39] <editor> David R. Simon. </editor> <booktitle> On the power of quantum computation. In Proceedings of the 35th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 116-123, </pages> <address> Los Alamitos, CA, </address> <year> 1994. </year> <institution> Institute of Electrical and Electronic Engineers Computer Society Press. </institution> <note> Preprint at http://vesta.physics. ucla.edu/cgi-bin/uncompress ps cgi?simon94.ps. Improves on Bernstein & Vazirani '93 [6]. Shor '94 [37] was inspired by this. </note>
Reference-contexts: Such a development could lead to eventual practical applications, if and when such quantum computers become buildable. Shor's Factoring Algorithm. However, this idea remained pure speculation until the last several years, when a series of papers on the power of quantum computers <ref> [19, 8, 7, 6, 39] </ref> culminated in Peter Shor's 1994 proof [37, 38] that a (somewhat idealized) quantum computer could factor large integers in polynomial time. <p> However, none of the oracle problems addressed seemed particularly evocative of real problems until Simon's <ref> [39] </ref> paper, which showed that the following problem was in ZQP (zero-error quantum polynomial-time): We are given a function f , and told that either f is 1-to-1, or else it is 1-to-2 and there is some bit-mask s such that f (x) = f (s x) (where is bitwise exclusive-or) <p> Currently, it seems unlikely that quantum computers could solve these problems, due to the fact that the only known quantum algorithms that dominate classical algorithms either involve unrealistic oracle-dependent promise problems <ref> [6, 39] </ref> or depend on the ability to reduce the problem to one involving periodicities for which the quantum Fourier transform is useful [38, 9]; one would not expect such periodicities a priori to be characteristic of all problems in NP.
Reference: [40] <author> Tycho Sleator and Harald Weinfurter. </author> <title> Realizable universal quantum logic gates. </title> <journal> Physical Review Letters, </journal> <volume> 74 </volume> <pages> 4087-4090, </pages> <year> 1995. </year> <title> Proposes a universal gate and a Cavity QED implementation. </title>
Reference-contexts: This was helpful because it allowed device engineers to just focus on creating only a few devices, leaving the rest to the circuit designer. The same benefit applies to the creation of quantum logic devices, which is still in its infancy (for some recent examples see <ref> [40, 45] </ref>). So the aim of the recent quantum computer studies I have surveyed was to find such a universal gate or gate set for quantum logic. This effort is ongoing, but at this point many universal gates and gate sets have already been identified. <p> Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 [43], Lloyd '93 & '94 [33, 34], DiVincenzo '95 a [20], Sleator & Weinfurter '95 <ref> [40] </ref>, Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13]. The main lesson to be learned from this long list of proposals is that the details of the physical implementation of quantum computers is "just" an engineering concern, rather than a theoretical issue of fundamental importance.
Reference: [41] <author> John A. Smolin and David P. DiVincenzo. </author> <title> Five two-bit quantum gates are sufficient to implement the quantum Fredkin gate. </title> <note> Preprint at http://vesta.physics.ucla.edu/cgi-bin/ uncompress ps cgi?comment.ps. </note>
Reference-contexts: The next big discovery in quantum gate theory was DiVincenzo's <ref> [20, 21, 41] </ref> discovery that arbitrary quantum computations can be performed using only two-bit gates. This was a surprising result, since two bit gates had been proven insufficient for computing arbitrary functions in classical reversible circuits.
Reference: [42] <author> Andrew Steane. </author> <title> Multiple particle interference and quantum error correction. </title> <journal> Proceedings of the Royal Society of London Ser. </journal> <note> A, 1996. (Submitted.) Preprint available at Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9601029. Introduces a parity encoding for quantum error correction. </note>
Reference-contexts: The latter seems more likely, since error-correction techniques such as those in <ref> [10, 11, 42] </ref> are already under development, but the current situation is that the number of successful computation steps required by these algorithms to just carry out one round of error correction is probably a lot larger than the number of steps that can be executed error-free using physicists' current level <p> However, Coppersmith [15] has shown that simple imprecision does not cripple the quantum factoring algorithm, and several quite recent papers <ref> [10, 11, 42] </ref> have addressed the more difficult issue of correcting errors due to decoherence of the quantum states.
Reference: [43] <author> W. G. Teich, K. Obermayer, and G. Mahler. </author> <title> Structural basis of multistationary quantum systems ii: Effective few-particle dynamics. </title> <journal> Physical Review B, </journal> <volume> 37 </volume> <pages> 8111-8121, </pages> <year> 1988. </year>
Reference-contexts: Other proposals for implementation technologies for quantum computing, from various communities, include Teich et al.'88 <ref> [43] </ref>, Lloyd '93 & '94 [33, 34], DiVincenzo '95 a [20], Sleator & Weinfurter '95 [40], Barenco et al.'95 b [3], and Chuang & Yamamoto '95 [13].
Reference: [44] <author> Tommaso Toffoli. </author> <title> Reversible computing. </title> <type> technical report MIT/LCS/TM-151, </type> <institution> MIT LCS, </institution> <month> February </month> <year> 1980. </year>
Reference-contexts: The circuit model was also useful to the early developers of reversible computing ideas such as Fredkin and Toffoli, who showed that there were reversible gates that were universal for computation in these sorts of circuits, for example, see Toffoli '80 <ref> [44] </ref> for some detailed constructions. Bennett [4] and Lecerf [31] independently showed that reversible Turing machines can simulate irreversible ones; this result turned out to be very important for quantum computers, since the invertability of unitary transformations means that all quantum computations have to be reversible. <p> Deutsch's paper showed [17] that the 3-bit universal gate for reversible logic invented by Toffoli <ref> [44] </ref> could be generalized in such a way that it would also be universal for quantum logic.
Reference: [45] <author> Q. A. Turchette, C. J. Hood, W. Lange, H. Mabuchi, and H. Jeffrey Kimble. </author> <title> Measurement of conditional phase shifts for quantum logic. </title> <note> Submitted to Physical Review Letters. Abstract at http://www.cco.caltech.edu/ hood/QO/Abstracts/Turc95b.html. </note>
Reference-contexts: This was helpful because it allowed device engineers to just focus on creating only a few devices, leaving the rest to the circuit designer. The same benefit applies to the creation of quantum logic devices, which is still in its infancy (for some recent examples see <ref> [40, 45] </ref>). So the aim of the recent quantum computer studies I have surveyed was to find such a universal gate or gate set for quantum logic. This effort is ongoing, but at this point many universal gates and gate sets have already been identified. <p> For example, researchers in quantum optics study how to manipulate information encoded in the polarization staes of photons; "cavity QED" workers study the interactions between photons and electron spins on individual atoms <ref> [24, 45] </ref>; and other experimentalists work with vibrational states in assemblages of interacting atoms [14].
Reference: [46] <author> W. G. Unruh. </author> <title> Decoherence and quantum computers: a problem. </title> <booktitle> In Proceedings of the Workshop on Physics of Computation: </booktitle> <address> PhysComp '94, Los Alamitos, CA, 1994. </address> <publisher> Institute of Electrical and Electronic Engineers Computer Society Press. </publisher> <pages> 15 </pages>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [47] <author> W. G. Unruh. </author> <title> Mainraining coherence in quantum computers. </title> <journal> Physical Review A, </journal> <volume> 51 </volume> <pages> 992-997, </pages> <year> 1995. </year> <note> Preprint at http://feynman.stanford.edu/qcomp/unruh/index.html. </note>
Reference-contexts: have heard claims to that effect). 6.3 Can errors caused by imprecision and decoherence be controlled sufficiently to allow arbitrarily complex quantum computations to take place with an arbitrarily small probability of failure? A number of papers have expressed pessimism regarding the question of error accumulation in quantum computers, e.g., <ref> [30, 29, 46, 47, 12, 36] </ref>.
Reference: [48] <author> P. van Emde Boas. </author> <title> Machine models and simulations. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, </booktitle> <pages> pages 1-66. </pages> <publisher> Elsevier, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference-contexts: 1 Introduction Quantitative Church's Thesis. The "Quantitative Church's Thesis" <ref> [50, 48] </ref> claims that Turing machines are as efficient as any realistic computer, within a polynomial factor.
Reference: [49] <author> Vlatko Vedral, Adriano Barenco, and Artur K. Ekert. </author> <title> Quantum networks for elementary arithmetic operations. </title> <note> Submitted to Physical Review A, </note> <month> November </month> <year> 1995. </year> <note> Los Alamos Physics Preprint Archive, http://xxx.lanl.gov/abs/quant-ph/9511018. </note>
Reference-contexts: Arithmetic Operations. Having universal primitive quantum operations is well and good, but to carry out interesting computations we need to know how to build up more complex operations out of these simple ones. Vedral, Barenco and Ekert address this issue in <ref> [49] </ref>, in which they show how to use primitive quantum logic operations to build up efficient addition, multiplication, and modular exponentiation operations in a way that preserves the coherence of quantum states, an issue we will discuss later. <p> But these problems may be solved in software, so to speak, through the use of error correction encodings and algorithms, so in principle these few basic interactions may suffice. 5 Discussion of Paper by Vedral This paper <ref> [49] </ref> turns out to be a fairly straightforward application of the principles of reversible computing to the problem of efficiently computing various arithmetic operations on a quantum computer.
Reference: [50] <author> A. Vergis, K. Steiglitz, and B. Dickinson. </author> <title> The complexity of analog computation. </title> <journal> Math. and Computers in Simulation, </journal> <volume> 28 </volume> <pages> 91-113, </pages> <year> 1986. </year> . 
Reference-contexts: 1 Introduction Quantitative Church's Thesis. The "Quantitative Church's Thesis" <ref> [50, 48] </ref> claims that Turing machines are as efficient as any realistic computer, within a polynomial factor.
Reference: [51] <author> Carlin J. Vieri. Pendulum: </author> <title> A reversible computer architecture. </title> <type> Master's thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1995. </year>
Reference-contexts: The paper does not really have much to do with the fact that the primitive operations used are quantum operations rather than classical reversible operations. However, their constructions are very efficient and interesting, and will perhaps be useful in the current effort <ref> [51] </ref> to build reversible classical electronic computers. Vedral's paper builds up hierarchically from Toffoli gates, to simple 1-bit addition, to multi-bit addition, to addition modulo N , to a controlled multiplier (modulo N ), finally to exponentiation modulo N .
Reference: [52] <author> Philip Yam. </author> <title> Rubbed out with the quantum eraser: Making quantum information reappear. </title> <publisher> Scientific American, </publisher> <month> January </month> <year> 1996. </year>
Reference-contexts: And in general, there is no reason in principle why an observation, if carefully controlled, cannot be "undone" 3 to restore the original state. (In fact, recent experiments reported on in <ref> [52] </ref> do just that.) However, in practice, we do not have control over the quantum interactions that take place after a photon (say) that is carrying state information leaves an experiment and strikes, say, an observer's eyeball; after that interaction takes place, the information about the experiment gets all mixed up
Reference: [53] <author> A. Yao. </author> <title> Quantum circuit complexity. </title> <booktitle> In Proceedings of the 34th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 352-361, </pages> <address> Los Alamitos, CA, </address> <year> 1993. </year> <institution> Institute of Electrical and Electronic Engineers Computer Society Press. </institution> <note> Preprint at http://feynman.stanford.edu/qcomp/ yao/index.html. 16 </note>
Reference-contexts: The quantum state of the system is as usual a superposition of all the possible states|all the bit patterns| and the gates perform, naturally, some unitary transformations on the quantum state of the bits in question. Yao <ref> [53] </ref> showed that, similarly to the case with classical irreversible and reversible circuits, quantum circuits could simulate quantum Turing machines in polynomial time, and vice-versa. Thus, quantum circuits are a sufficient model for quantum computation that is perhaps easier to think about than Deutsch's earlier [16] quantum Turing machine.
References-found: 53

