URL: ftp://ftp.dai.ed.ac.uk/pub/user/chrisg/chrisg_msc_thesis_93.ps.gz
Refering-URL: http://www.dai.ed.ac.uk/students/chrisg/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Classifier System plays a simple board game Getting down to the Basics of Machine Learning?  
Author: Chris Gathercole 
Date: 1993  
Affiliation: MSc Information Technology: Knowledge Based Systems Department of Artificial Intelligence University of Edinburgh  
Abstract-found: 0
Intro-found: 1
Reference: [Berlekamp et al 82] <author> Elwyn R. Berlekamp, John H. Conway, and Richard K. Guy. </author> <title> Winning Ways for your mathematical plays, volume 2. </title> <publisher> Academic Press, </publisher> <year> 1982. </year>
Reference-contexts: The idea for the game was first seen in the excellent book, Winning Ways for your mathematical plays, <ref> [Berlekamp et al 82] </ref>. In the book, a small version of the game is discussed in exhaustive detail. For the purposes of this project, a larger version of the game is used.
Reference: [Bonelli et al 92] <author> Pierre Bonelli, Alexandre Parodi, Sandip Sen, and Stewart Wilson. </author> <title> Newboole: A fast gmbl system. </title> <editor> In Peter Edwards Derek Sleeman, editor, </editor> <booktitle> Proceedings of the 1992 Int'l Workshop on Machine Learning: ML92, </booktitle> <pages> pages 153-159. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: * [Holland 91] considers using Tag-Mediated Lookahead. * [Quinlan 92] looks at ways of gaining accurate Classifiers from small training sets. * [Robertson 92] comes to the conclusion that choosing an optimal Classifier population size is very difficult, and that, in fact, there may be no such optimal size. * <ref> [Bonelli et al 92] </ref> looks at a ways of speeding up the learning rate of Classifier Systems. They find better performance than neural nets on a difficult boolean learning task, the multiplexor function.
Reference: [Compiani et al 91] <author> M. Compiani, D. Montanari, and R. Serra. </author> <title> Learning and bucket brigade dynamics in classifier systems. </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Emergent Computation, </booktitle> <pages> pages 202-212. </pages> <publisher> El-sevier Science Publishers B.V, </publisher> <year> 1991. </year>
Reference-contexts: A brief resume of the more interesting papers follows: * Gary Allen Robert's PhD thesis [Roberts 91] brought up several interesting ideas, including Look-Ahead. 36 * <ref> [Compiani et al 91] </ref> considers the idea of treating Classifier Systems as Dy- namical Systems. * [Forrest 91] considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * [Holland 91] considers using Tag-Mediated Lookahead. * [Quinlan 92] looks at ways of gaining accurate
Reference: [Forrest 91] <editor> Stephanie Forrest. </editor> <title> Emergent behaviour in classifier systems. </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Emergent Computation, </booktitle> <pages> pages 213-227. </pages> <publisher> Elsevier Science Publishers B.V, </publisher> <year> 1991. </year>
Reference-contexts: A brief resume of the more interesting papers follows: * Gary Allen Robert's PhD thesis [Roberts 91] brought up several interesting ideas, including Look-Ahead. 36 * [Compiani et al 91] considers the idea of treating Classifier Systems as Dy- namical Systems. * <ref> [Forrest 91] </ref> considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * [Holland 91] considers using Tag-Mediated Lookahead. * [Quinlan 92] looks at ways of gaining accurate Classifiers from small training sets. * [Robertson 92] comes to the conclusion that choosing an optimal
Reference: [Goldberg 89] <author> David E. Goldberg. </author> <title> GENETIC ALGORITHMS in Search, Optimisation & Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: As such, the ideas should only be taken as interesting possibilities. 3 Chapter 2 Getting down to Basics 2.1 A Classifier System The basic structure of the Classifier System used in this thesis was taken from Goldberg's Simple Classifier System (SCS) <ref> [Goldberg 89] </ref>. Although, for this project, it was completely re-written in C, the ideas are the same. Goldberg's SCS was chosen as a simple and (reasonably) well documented implementation of the concept of Classifier Systems. <p> For a more terse and factual description, suitable for constructing an implementation, see <ref> [Goldberg 89] </ref>, and also the implementation in the Appendicies. 4 The Wordy Description A Classifier System might be thought of as a warped economy which occurs inside a locked room. <p> Most prevalent among them is the Bucket Brigade Algorithm [Holland 92]. For a verbose view of the Bucket Brigade Algorithm in action, see the `Hand-Waving' section. For a detailed decription of the Algorithm, see <ref> [Goldberg 89] </ref>. Bucket Brigade Algorithm Given a non-empty Message List, any Classifiers whose Condition Patterns match any of the Messages on the Message List are put into a Match List, which is a list of candidates between which the competitive bidding takes place. <p> If the bidding proceeded exactly as described above, the system would be biased towards the status quo (mentioned in <ref> [Goldberg 89] </ref>). To avoid this, it is possible to add an element of random noise to the bids, controlled via some parameters available to the program user. 11 Occasionally, the Environment steps in with a Reward. <p> Generally, the rules are of the form: If ``Condition'' Then ``Action''. (A rule carries out its Action if its Condition is satisfied.) "So what", you might say. However, Production Systems have been shown to be computationally complete (mentioned in <ref> [Goldberg 89] </ref>), i.e. if something is computable, then Production Systems can do it. Production Systems provide a convenient and compact way for representing knowledge. Classifier Systems have (at least) one more advantage over this ... extremely simple syntax. <p> This has a certain poignancy to it, and would be easy to implement. 23 ample, it is 5-Point Crossover) 24 In Goldberg's book, <ref> [Goldberg 89] </ref>, mention is made of the concept of `Crowd--ing'. Here, an effort is made to find a weak member of the population which is the most similar to the new child chromosome which is to be added to the population. This was the method used in this project. <p> Less crowded niches experienced less pressure and higher birth rates and life expectancy. To duplicate such `crowding pressure', DeJong suggested forcing newly generated offspring to replace similar, older adults, with the aim of maintaining diversity in the population. Goldberg's book <ref> [Goldberg 89] </ref> goes into some detail on this topic. For the purposes of this project, DeJong's crowding mechanism was initially chosen for its interest value more than any other reason. <p> In fact, Goldberg's book <ref> [Goldberg 89] </ref> is the only one which goes into any detail beyond mentioning their existence. His book goes into enough detail to explain how a Simple Classifier System (SCS) works, supplying source code (in Pascal) to demonstrate such a system. <p> Varying the size of the Winning-a-Game reward simply increased the average Strength of the Classifier population, as was expected from reading the Goldberg book <ref> [Goldberg 89] </ref>. There seemed to be no other qualitative effect on the Systems' performances. <p> Plenty of this was done, but it wasn't comprehensive. There was always a point at which a certain section seemed to work properly, so attention was switched on to writing new sections. * Test the program on some benchmark problems e.g. the Multiplexer problem in Goldberg's book, <ref> [Goldberg 89] </ref>. * Home in on the instability demonstrated by some of the System set-ups. There should be some way of increasing the 'magnification' of certain stages of a run when performance falls drastically.
Reference: [Holland 91] <author> John H. Holland. </author> <title> Concerning the emergence of tag-mediated lookahead in classifier systems. </title> <editor> In Stephanie Forrest, editor, </editor> <booktitle> Emergent Computation, </booktitle> <pages> pages 188-201. </pages> <publisher> Elsevier Science Publishers B.V, </publisher> <year> 1991. </year>
Reference-contexts: Robert's PhD thesis [Roberts 91] brought up several interesting ideas, including Look-Ahead. 36 * [Compiani et al 91] considers the idea of treating Classifier Systems as Dy- namical Systems. * [Forrest 91] considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * <ref> [Holland 91] </ref> considers using Tag-Mediated Lookahead. * [Quinlan 92] looks at ways of gaining accurate Classifiers from small training sets. * [Robertson 92] comes to the conclusion that choosing an optimal Classifier population size is very difficult, and that, in fact, there may be no such optimal size. * [Bonelli et
Reference: [Holland 92] <author> John H. Holland. </author> <title> Adaption in Natural Selection and Artificial Systems. </title> <publisher> The MIT Press, </publisher> <address> 2 edition, </address> <year> 1992. </year> <month> 129 </month>
Reference-contexts: Most prevalent among them is the Bucket Brigade Algorithm <ref> [Holland 92] </ref>. For a verbose view of the Bucket Brigade Algorithm in action, see the `Hand-Waving' section. For a detailed decription of the Algorithm, see [Goldberg 89]. <p> They find better performance than neural nets on a difficult boolean learning task, the multiplexor function. Just before this thesis was to be printed, two more references, both discussing Classifier Systems, were brought to my notice: * <ref> [Holland 92] </ref>. The seminal piece of work on Classifier Systems and Genetic Algorithms. This is hard to read, but is (apparently) a must for all people interested in Classifier Systems.
Reference: [Holland et al 89] <author> John H. Holland, Keith J. Holyoak, Richard E. Nisbet, and Paul R. Thagard. </author> <title> Induction : Processes of Inference, Learning and Discovery. </title> <publisher> The MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: The seminal piece of work on Classifier Systems and Genetic Algorithms. This is hard to read, but is (apparently) a must for all people interested in Classifier Systems. I must read it sometime. * <ref> [Holland et al 89] </ref> is about the philosophy, potential, pragmatics, etc., of the types of systems including Classifier Systems. 37 Chapter 4 Experimental Features 4.1 Different Environment Representations Varying the amount and form of information supplied in the Environmental Message to the Classifier System about the current board state has a
Reference: [Quinlan 92] <author> J. R. Quinlan. </author> <title> An empirical comparison of genetic and decision-tree classifier. </title> <editor> In Peter Edwards Derek Sleeman, editor, </editor> <booktitle> Proceedings of the 1992 Int'l Workshop on Machine Learning: ML92, </booktitle> <pages> pages 135-141. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year>
Reference-contexts: several interesting ideas, including Look-Ahead. 36 * [Compiani et al 91] considers the idea of treating Classifier Systems as Dy- namical Systems. * [Forrest 91] considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * [Holland 91] considers using Tag-Mediated Lookahead. * <ref> [Quinlan 92] </ref> looks at ways of gaining accurate Classifiers from small training sets. * [Robertson 92] comes to the conclusion that choosing an optimal Classifier population size is very difficult, and that, in fact, there may be no such optimal size. * [Bonelli et al 92] looks at a ways of
Reference: [Roberts 91] <author> Gary Allen Roberts. </author> <title> Classifier Systems for Situated Autonomous Learning. </title> <type> Unpublished PhD thesis, </type> <institution> Department of Artificial Intelligence, University of Edinburgh, </institution> <year> 1991. </year>
Reference-contexts: Unfortunately, most of these came to light during the latter stages of the project, and so weren't able to influence the initial decisions about how to develop the Classifier System used in this project. A brief resume of the more interesting papers follows: * Gary Allen Robert's PhD thesis <ref> [Roberts 91] </ref> brought up several interesting ideas, including Look-Ahead. 36 * [Compiani et al 91] considers the idea of treating Classifier Systems as Dy- namical Systems. * [Forrest 91] considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * [Holland 91] considers using
Reference: [Robertson 92] <author> George G. Robertson. </author> <title> Population size in classifier systems. </title> <editor> In Peter Edwards Derek Sleeman, editor, </editor> <booktitle> Proceedings of the 1992 Int'l Workshop on Machine Learning: ML92, </booktitle> <pages> pages 142-151. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1992. </year> <month> 130 </month>
Reference-contexts: of treating Classifier Systems as Dy- namical Systems. * [Forrest 91] considers the mapping between Classifier Systems and Boolean Networks (an equivalent Dynamical System) in viewing emergent behaviour. * [Holland 91] considers using Tag-Mediated Lookahead. * [Quinlan 92] looks at ways of gaining accurate Classifiers from small training sets. * <ref> [Robertson 92] </ref> comes to the conclusion that choosing an optimal Classifier population size is very difficult, and that, in fact, there may be no such optimal size. * [Bonelli et al 92] looks at a ways of speeding up the learning rate of Classifier Systems.
References-found: 11

