URL: http://www.ri.cmu.edu/afs/cs/user/valdes/Mosaic/Elsewhere/dejong-rip.ps
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/valdes/Mosaic/Elsewhere/dejong-rip.html
Root-URL: 
Email: E-mail: hdejong@cs.utwente.nl, a.rip@wmw.utwente.nl  
Phone: Phone: +31-53-893690 Fax: +31-53-339605  
Title: The Computer Revolution in Science: Steps Towards the Realization of Computer-Supported Discovery Environments  
Author: Hidde de Jong Arie Rip 
Address: P.O. Box 217, 7500 AE Enschede, the Netherlands  
Affiliation: Knowledge-based Systems Group, Department of Computer Science School of Philosophy and Social Sciences University of Twente  
Abstract: The tools that scientists use in their search processes together form so-called discovery environments. The promise of artificial intelligence and other branches of computer science is to radically transform conventional discovery environments by equipping scientists with a range of powerful computer tools including large-scale, shared knowledge bases and discovery programs. We will describe the future computer-supported discovery environments that may result, and illustrate by means of a realistic scenario how scientists come to new discoveries in these environments. In order to make the step from the current generation of discovery tools to computer-supported discovery environments like the one presented in the scenario, developers should realize that such environments are large-scale sociotechnical systems. They should not just focus on isolated computer programs, but also pay attention to the question how these programs will be used and maintained by scientists in research practices. In order to help developers of discovery programs in achieving the integration of their tools in discovery en vironments, we will formulate a set of guidelines that developers could follow. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Alberdi & D. Sleeman, </author> <title> Taxonomy revision in botany: A simulation of historical data, in Systematic Methods of Scientific Discovery, </title> <booktitle> Papers from the 1995 AAAI Symposium, </booktitle> <address> R.E. Valdes-Perez, </address> <publisher> ed., AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1995, </year> <pages> 99-104. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 [33], KEKADA [35, 36], COAST [51], HYPGENE [26,27], and ReTAX <ref> [1] </ref>. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [2] <author> B. Barber & R.C. Fox, </author> <title> The case of the floppy-eared rabbits: An instance of serendipity gained and serendipity lost, in The Sociology of Science, </title> <editor> B. Barber & W. Hirsch, eds., </editor> <publisher> Free Press of Glencoe, </publisher> <address> New York, </address> <year> 1962, </year> <pages> 525-538. </pages>
Reference-contexts: Such creative shifts require a scientist to be `prepared', to have the competence to see when an interesting deviation occurs, otherwise serendipity will be lost <ref> [2] </ref>. The longer fragment 5 shows a social aspect of competent performance in a computer-supported discovery environment. Noyafsky realizes that his fellow scientists have to be convinced that the idea to extend the model with a new regulation mechanism is a good idea.
Reference: [3] <author> G.I. Bell & T.G. Marr, eds., </author> <title> Computers and DNA, </title> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA, </address> <year> 1990. </year>
Reference: [4] <author> H. van den Belt & A. Rip, </author> <title> The Nelson-Winter-Dosi model and synthetic dye chemistry, in The Social Construction of Technological Systems, W.E. Bijker, T.P. </title> <editor> Hughes & T.J. Pinch, eds., </editor> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1987, </year> <pages> 135-158. 30 </pages>
Reference-contexts: and individual discovery tools in a modular fashion with components that can be developed, used, and maintained independently from other components. 6 A real-life example of such an organization is the National Center for Biotechnology Information (NCBI), which is responsible for producing and distributing the GenBank sequence database. 7 Compare <ref> [4] </ref>, which describes how inventors and industrialists in 19th century Germany were reluctant to release the chemical structure of new synthetic dyes, because their inventions were insuf ficiently protected by patent law. 25 Successful work in computer-supported discovery environments is often based on new and original combinations of discovery tools: Applying
Reference: [5] <author> D.A. Benson, M. Boguski, </author> <title> D.J. </title> <journal> Lipman & J. Ostell, GenBank, Nucleic Acids Research 22 (1994), </journal> <pages> 3441-3444. </pages>
Reference-contexts: Institutional arrangements like these have already become standard practice in the case of a number of real-life, shared scientific tools, such as large sequence databases <ref> [5] </ref> or taxonomic databases [24] in biology. The importance of organizing and maintaining an infrastructure can be recognized if one realizes how many people are involved in a discovery produced in a computer-supported discovery environment. <p> The discipline of molecular biology has witnessed a dramatic increase in the number of scientific databases and knowledge bases, and according to the latest estimates more than a hundred now exist [28]. Databases predominate (such as the GenBank sequence database that we mentioned above <ref> [5] </ref>), but from a long-term perspective the development of specialized, richly structured knowledge bases is even more important for computer-supported discovery. One example is the ColiGene knowledge base [52], which contains knowledge about genetic regulation mechanisms in the E. coli bacterium. <p> Technically, the accessibility of tools in a computer-supported discovery environment is easy to accomplish. One could simply connect them to the Internet, so that they can be manipulated from a local workstation. Examples of such tools are the sequence database GenBank <ref> [5] </ref> and the sequence analysis server Grail (referred to in [14]), which receive and answer requests by e-mail. However, the social aspects of making discovery tools accessible to scientists may be more difficult to arrange.
Reference: [6] <author> R.L. Blum, </author> <title> Discovery and Representation of Causal Relationships from a Large Time-Oriented Clinical Database: The RX Project, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1982. </year>
Reference-contexts: A few examples of discovery programs with this orientation are (Meta-)DENDRAL [9,40], MECHEM [64,68], RX <ref> [6] </ref>, SYNGEN [23], GOLEM [31,60], 49er [44], and IMEM [12,13]. Whichever of the two approaches is followed, in the end the acid test for any discovery program is of course its assimilation in the discovery environment of scientists.
Reference: [7] <editor> D.G. Bobrow & P.J. Hayes (eds), </editor> <booktitle> Artificial Intelligence Where are we? , Artificial Intelligence 25 (1985), </booktitle> <pages> 375-415. </pages>
Reference-contexts: The resulting computer tools, integrated in existing scientific discovery environments, give rise to what we will call computer-supported discovery environments. This development has led some to speculate about radical, and perhaps surprising, transformations of the disciplinary structure of science (Allen Newell, quoted in <ref> [7] </ref>).
Reference: [8] <author> A. Brannigan, </author> <title> The Social Basis of Scientific Discoveries, </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1981. </year>
Reference-contexts: The knowledge claims generated in a computer-supported discovery environment have to find their way to wider audiences and become accepted there to deserve the predicate `discovery' <ref> [8] </ref>. Presupposed in all the actions of scientists in a discovery environment is the wider research practice in which they work and where they have to justify and defend the knowledge claims generated with the help of their computer tools.
Reference: [9] <editor> B.G. Buchanan & E.A. Feigenbaum, Dendral and Meta-Dendral: </editor> <title> their applications dimension, </title> <booktitle> Artificial Intelligence 11 (1978), </booktitle> <pages> 5-24. </pages>
Reference: [10] <author> B.G. Buchanan, D.H. Smith, W.C. White, R. Gritter, E.A. Feigenbaum, J. Lederberg & C. Djerassi, </author> <title> Applications of artificial intelligence for chemical inference, XXII: Automatic rule formation in mass spectroscopy by means of the Meta-Dendral program, </title> <journal> Journal of the American Chemical Society 96 (1976), </journal> <volume> 6168. </volume>
Reference-contexts: Only a few programs have helped make a real contribution to the body of knowledge in a particular domain, a contribution worthy of being published in a refereed journal in that domain. Those exceptions include Meta-DENDRAL in mass spectroscopy <ref> [10] </ref>, MECHEM in chemistry [65] and PAULI in particle physics [69], and GOLEM in pharmaceutical chemistry [32]. Although the current discovery environments of molecular biologists contain tools that incorporate AI techniques, the core business of research, making discoveries, is seldom covered.
Reference: [11] <author> C. Burks, </author> <title> The flow of nucleotide sequence data into data banks: Role and impact of large-scale sequencing projects, in Computers and DNA, G.I. </title> <editor> Bell & T.G. Marr, eds., </editor> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA, </address> <year> 1990, </year> <pages> 35-45. </pages>
Reference: [12] <author> D. Conklin, S. Fortier & J. Glasgow, </author> <title> Knowledge discovery in molecular databases, </title> <journal> IEEE Transactions on Knowledge and Data Engineering 5 (1993), </journal> <pages> 985-987. </pages>
Reference: [13] <author> D. Conklin, S. Fortier & J. Glasgow, </author> <title> Knowledge discovery of multilevel protein motifs, </title> <booktitle> in Proceedings Second International Conference on Intelligent Systems for Molecular Biology, </booktitle> <editor> ISMB-94, R.B. Altman, D.L. Brutlag, P.D. Karp, R. Lathrop & D. Searls, eds., </editor> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1994, </year> <pages> 96-102. </pages>
Reference: [14] <author> M.W. Craven & J.W. Shavlik, </author> <title> Machine learning approaches to gene recognition, </title> <booktitle> IEEE Expert 8 (1994), </booktitle> <pages> 2-10. </pages>
Reference-contexts: One could simply connect them to the Internet, so that they can be manipulated from a local workstation. Examples of such tools are the sequence database GenBank [5] and the sequence analysis server Grail (referred to in <ref> [14] </ref>), which receive and answer requests by e-mail. However, the social aspects of making discovery tools accessible to scientists may be more difficult to arrange. <p> The organization of discovery tools is grafted upon established subdivisions of biological entities (organisms, proteins, nucleotides) and research tasks (gene recognition, protein structure determination). The machine learning applications discussed by Craven and Shav-lik <ref> [14] </ref> function as separate modules, coupled to the sequence databases from which they derive their input. Giving a computer-supported discovery environment a modular structure has the additional advantage that it facilitates the division of development and maintenance tasks.
Reference: [15] <author> R.F. Doolittle, </author> <title> What we have learned and will learn from sequence databases, in Computers and DNA, G.I. </title> <editor> Bell & T.G. Marr, eds., </editor> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA, </address> <year> 1990, </year> <pages> 21-31. </pages>
Reference-contexts: An example in molecular biology are the sequences of DNA, RNA, and proteins that have been collected through the years. Together these sequences represent a rich store of information on how living systems have evolved and how they operate <ref> [15] </ref>. However, the sequences used to be scattered in articles, reports, and occasional databanks. In addition, manually analyzing the sequences is a hopeless task due to the bulk of information. <p> Molecular biologists have come up with important findings using these computer tools and they hope to find many more <ref> [15] </ref>. The shared databases and the availability of sequence analysis programs gives these problem spaces the character of public search spaces, open to researchers in a scientific community (see section 5).
Reference: [16] <author> J. Euzenat, </author> <title> A protocol and distributed architecture for building consensual knowledge bases, in Towards Very Large Knowledge Bases: Knowledge Building and Knowledge Sharing 1995 , N.J.I. Mars, </title> <editor> ed., </editor> <publisher> IOS Press, </publisher> <address> Amsterdam, </address> <year> 1995, </year> <pages> 143-155. </pages>
Reference: [17] <author> W.J. Frawley, G. Piatetsky-Shapiro & C.J. Matheus, </author> <title> Knowledge discovery in databases: An overview, </title> <journal> AI Magazine (1992). </journal>
Reference-contexts: After all, the relation may be spurious due to the fact that the entries in the database are heterogeneous or even unreliable (for these and other problems, see <ref> [17] </ref>). The transparency of the components of a computer-supported discovery environment can be increased by describing the contents of databases and knowledge bases and the activities of discovery programs on a conceptual level.
Reference: [18] <author> P. </author> <title> Friedland & L.H. Kedes, Discovering the secrets of DNA, </title> <booktitle> Communications of the ACM 28 (1985), </booktitle> <pages> 1164-1186. </pages>
Reference: [19] <editor> K. Fuchi & T. Yokoi, eds., </editor> <title> Knowledge Building an Knowledge Sharing, </title> <publisher> IOS Press, </publisher> <address> Ams-terdam, </address> <year> 1994. </year>
Reference-contexts: In addition to the domain-oriented programmes, computer scientists have attempted to formulate more general principles for building large-scale (scientific) knowledge bases (see <ref> [19] </ref> and [43] for overviews). In particular, they have propagated the 5 Once a problem space has been constructed, the amount of knowledge necessary to produce an interesting finding may seem modest, as for example noted by Valdes-Perez [66].
Reference: [20] <author> P. Galison, </author> <title> How Experiments End , University of Chicago Press, </title> <address> Chicago, </address> <year> 1987. </year>
Reference-contexts: Historians and philosophers of science have given detailed descriptions of discovery environments, such as the air-pump and related methods and instruments that Boyle used for his pneumatic experiments around 1660 [55], a modern biological lab focussing on neuroendocrinological research [38], and the complex installations for running experiments in high-energy physics <ref> [20] </ref>. The promise of AI, and of computer science in general, is to transform conventional discovery environments through widening the scope and increasing the depth of the systematization and material equipment of a research practice.
Reference: [21] <author> D. Gooding, </author> <title> The procedural turn, or: Why do thought experiments work, in Cognitive Models of Science, </title> <editor> R.N. Giere, ed., </editor> <booktitle> Minnesota Studies in the Philosophy of Science, </booktitle> <volume> vol. 15, </volume> <publisher> University of Minnesota Press, </publisher> <address> Minneapolis, MN, </address> <year> 1992, </year> <pages> 45-76. </pages>
Reference-contexts: Philosophers of science have for instance described and evaluated how experimenters reconstruct their activities, and the skills these activities exemplify, into procedures that others can use in order to judge and replicate their findings <ref> [21, 48] </ref>. The systematization of scientific work and knowledge may lead to the further material equipment of a practice, for instance when heuristics and rules are embodied into an apparatus performing a specific, self-contained subtask.
Reference: [22] <author> N. Guarini & P. Giaretta, </author> <title> Ontologies and knowledge bases: Towards a terminological clarification, in Towards Very Large Knowledge Bases: Knowledge Building and Knowledge Sharing 1995 , N.J.I. Mars, </title> <editor> ed., </editor> <publisher> IOS Press, </publisher> <address> Amsterdam, </address> <year> 1995, </year> <pages> 25-32. </pages>
Reference-contexts: a consequence, a whole range of computerized data and knowledge sources should be available, from which maybe only a few elements are picked in actually constructing a new problem space. 23 separate development of domain ontologies: logical theories which give an explicit, partial account of a conceptualization of domain knowledge <ref> [22] </ref>. The logical theories partially define the contents of knowledge bases in a formal and implementation-independent way, facilitating the construction and maintenance of a knowledge base, the sharing and reuse of knowledge [42,46], and the comparison of information provided by different knowledge bases.
Reference: [23] <author> J.B. Hendrickson, </author> <title> Systematic synthesis design: The SYNGEN program, in Systematic Methods of Scientific Discovery, </title> <booktitle> Papers from the 1995 AAAI Symposium, </booktitle> <address> R.E. Valdes-Perez, </address> <publisher> ed., AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1995, </year> <pages> 13-17. 31 </pages>
Reference-contexts: The importance of organizing and maintaining an infrastructure can be recognized if one realizes how many people are involved in a discovery produced in a computer-supported discovery environment. If the SYNGEN program discussed in <ref> [23] </ref> designs a new, efficient synthesis route to a particular compound, then quite a few people have contributed to this result. <p> A few examples of discovery programs with this orientation are (Meta-)DENDRAL [9,40], MECHEM [64,68], RX [6], SYNGEN <ref> [23] </ref>, GOLEM [31,60], 49er [44], and IMEM [12,13]. Whichever of the two approaches is followed, in the end the acid test for any discovery program is of course its assimilation in the discovery environment of scientists.
Reference: [24] <author> C. Hine, </author> <title> Representations of information technology in disciplinary development: Disap--pearing plants and invisible networks, </title> <booktitle> Science, Technology, & Human Values 20 (1995), </booktitle> <pages> 65-85. </pages>
Reference-contexts: Institutional arrangements like these have already become standard practice in the case of a number of real-life, shared scientific tools, such as large sequence databases [5] or taxonomic databases <ref> [24] </ref> in biology. The importance of organizing and maintaining an infrastructure can be recognized if one realizes how many people are involved in a discovery produced in a computer-supported discovery environment.
Reference: [25] <editor> H. de Jong, Ontdekkingssystemen in de wetenschap: Een exploratie van computer-ondersteunde ontdekkingsomgevingen, </editor> <title> University of Twente, </title> <type> Master thesis, </type> <institution> Philosophy of Science, Technology, and Society, Enschede, </institution> <address> the Netherlands, </address> <year> 1994. </year>
Reference-contexts: Within such a piece of lab equipment a number of electrochemical regularities are embodied. The tools that have been thus constructed, both methods and procedures and material devices, together form a discovery environment, in which scientists can pursue their search processes <ref> [25] </ref>. <p> A nice example of work in this direction is the AIDE system, which assists human statistical analysts by planning, executing, and controlling exploratory data analysis tasks [59]. Existing discovery programs fall into two categories <ref> [25] </ref>. 3 First, there are programs that simulate historical discovery processes, often (but not necessarily) focusing on the cognitive processes of scientists. Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54].
Reference: [26] <author> P.D. Karp, </author> <title> Hypothesis formation as design, in Computational Models of Scientific Discovery and Theory Formation, </title> <editor> J. Shrager & P. Langley, eds., </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991, </year> <pages> 275-317. </pages>
Reference-contexts: By carefully simulating historical discoveries one may hope to explicate sufficiently general methods of inquiry which can then be transferred to existing problems. This programme is for instance clearly stated in <ref> [26] </ref>. Second, there are discovery programs primarily concerned with providing useful support to scientists in their work. The developers, often computationally-oriented domain scientists, take an engineering perspective towards the tasks they have to automate.
Reference: [27] <author> P.D. Karp, </author> <title> Design methods for scientific hypothesis formation and their application to molecular biology, </title> <booktitle> Machine Learning 12 (1993), </booktitle> <pages> 89-116. </pages>
Reference: [28] <author> P.D. Karp, </author> <title> New directions for scientific discovery research: Applications, in Systematic Methods of Scientific Discovery, </title> <booktitle> Papers from the 1995 AAAI Symposium, </booktitle> <address> R.E. Valdes-Perez, </address> <publisher> ed., AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1995, </year> <pages> 94-96. </pages>
Reference-contexts: Although we have quite a few simula 3 See <ref> [28] </ref> for a similar classification. <p> The discipline of molecular biology has witnessed a dramatic increase in the number of scientific databases and knowledge bases, and according to the latest estimates more than a hundred now exist <ref> [28] </ref>. Databases predominate (such as the GenBank sequence database that we mentioned above [5]), but from a long-term perspective the development of specialized, richly structured knowledge bases is even more important for computer-supported discovery. <p> In scenario fragment 3 we saw how scientists organized a special workshop to this end, in which they discussed the connection between two knowledge bases. This procedure is not uncommon among developers of molecular biological databases (see <ref> [28] </ref>). Guideline 4: Make discovery tools interactive by building in decision points that can be influenced by users through an advanced user-interface. Competent performance, leading to new and accepted discoveries, is located in a research practice of scientists who use the tools in their discovery environments.
Reference: [29] <author> P.D. </author> <title> Karp & M.L. Mavrovouniotis, Representing, analyzing, and synthesizing biochemical pathways, </title> <booktitle> IEEE Expert 8 (1994). </booktitle>
Reference: [30] <author> P.D. Karp & M. Riley, </author> <title> Representations of metabolic knowledge, </title> <booktitle> in Proceedings of the First International Conference on Intelligent Systems for Molecular Biology, </booktitle> <editor> L. Hunter, D. Searls & J. Shavlik, eds., </editor> <publisher> AAAI Press/MIT Press, </publisher> <address> Menlo Park, CA/Cambridge, MA, </address> <year> 1993, </year> <pages> 207-215. </pages>
Reference: [31] <author> R.D. King, D.A. Clark, J. Shirazi & M.J.E. Sternberg, </author> <title> Inductive logic programming used to discover topological constraints in protein structures, </title> <booktitle> in Proceedings Second International Conference on Intelligent Systems for Molecular Biology, </booktitle> <editor> ISMB-94, R.B. Altman, D.L. Brutlag, P.D. Karp, R. Lathrop & D. Searls, eds., </editor> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1994, </year> <pages> 219-226. </pages>
Reference: [32] <author> R.D. King, S. Muggleton, R.A. Lewis & M.J.E. Sternberg, </author> <title> Drug design by machine learning: The use of inductive logic proramming to model the structure-activity relationships of trimethoprim analogues binding to dihydrofolate reductase, </title> <booktitle> Proceedings of the National Academy of Sciences 89 (1992), </booktitle> <pages> 11322-11326. </pages>
Reference-contexts: Those exceptions include Meta-DENDRAL in mass spectroscopy [10], MECHEM in chemistry [65] and PAULI in particle physics [69], and GOLEM in pharmaceutical chemistry <ref> [32] </ref>. Although the current discovery environments of molecular biologists contain tools that incorporate AI techniques, the core business of research, making discoveries, is seldom covered.
Reference: [33] <author> S. Kocabas, </author> <title> Conflict resolution as discovery in particle physics, </title> <booktitle> Machine Learning 6 (1991), </booktitle> <pages> 277-309. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 <ref> [33] </ref>, KEKADA [35, 36], COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [34] <author> T.S. Kuhn, </author> <title> The Structure of Scientific Revolutions, </title> <publisher> The University of Chicago Press, </publisher> <address> Chicago, </address> <year> 1970, </year> <note> 2nd edition. </note>
Reference-contexts: The efforts of Noyafsky and his group begin (and end, as will be seen below) as a typical case of normal science; their work can be described as puzzle solving within a paradigm consisting of exemplary achievements, symbolic generalizations, and cognitive norms <ref> [34] </ref>. However, one could imagine a different continuation of the story, one in which the anomaly resists all attempts at resolution and no regulation model is found capable of explaining Pierre's data (and data flowing from new experiments).
Reference: [35] <author> D. Kulkarni & H.A. Simon, </author> <title> The processes of scientific discovery: The strategy of experimentation, </title> <booktitle> Cognitive Science 12 (1988), </booktitle> <pages> 139-175. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 [33], KEKADA <ref> [35, 36] </ref>, COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [36] <author> D. Kulkarni & H.A. Simon, </author> <title> Experimentation in machine discovery, in Computational Models of Scientific Discovery and Theory Formation, </title> <editor> J. Shrager & P. Langley, eds., </editor> <publisher> Mor-gan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991, </year> <pages> 255-273. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 [33], KEKADA <ref> [35, 36] </ref>, COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [37] <author> P. Langley, H.A. Simon, G.L. Bradshaw & J.M. Zytkow, </author> <title> Scientific Discovery: Computational Explorations of the Creative Processes, </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1987. </year>
Reference: [38] <author> B. Latour & S. Woolgar, </author> <title> Laboratory Life, The Construction of Scientific Facts, </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1986, </year> <note> 2nd ed. </note>
Reference-contexts: Historians and philosophers of science have given detailed descriptions of discovery environments, such as the air-pump and related methods and instruments that Boyle used for his pneumatic experiments around 1660 [55], a modern biological lab focussing on neuroendocrinological research <ref> [38] </ref>, and the complex installations for running experiments in high-energy physics [20]. The promise of AI, and of computer science in general, is to transform conventional discovery environments through widening the scope and increasing the depth of the systematization and material equipment of a research practice.
Reference: [39] <author> D.B. Lenat, </author> <title> On automated scientific theory formation: A case study using the AM program, </title> <booktitle> in Machine Intelligence 9 , J.E. </booktitle> <editor> Hayes, D. Michie & L.I. Mikulich, eds., </editor> <publisher> Ellis Hor-wood, </publisher> <address> Chichester, </address> <year> 1979, </year> <pages> 251-283. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM <ref> [39] </ref>, PI [61], ECHO [49,62], BR3 [33], KEKADA [35, 36], COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [40] <author> R.K. Lindsay, B.G. Buchanan, E.A. Feigenbaum & J. Lederberg, </author> <title> DENDRAL: A case study of the first expert system for scientific hypothesis formation, </title> <booktitle> Artificial Intelligence 61 (1993), </booktitle> <pages> 209-261. </pages>
Reference-contexts: The cooperative development of tools in a discovery environment, possibly involving the scientific community as a whole, may be the only answer to the problem observed by the makers of DENDRAL that [a] surprisingly large amount of specialized knowledge is necessary to achieve expertise in even a very circumscribed field <ref> [40, p. 251] </ref>. Guideline 3: In developing discovery tools try to adhere to existing standards or try to become involved in efforts directed at the establishment of standards. Modularity is not enough to enable researchers to integrate the tools in a computer-supported discovery environment. <p> This implies that discovery tools should be made interactive by equipping them with intelligent, user-friendly interfaces that enable the scientist to intervene at particular decision points (see also <ref> [40] </ref>). It was the graphical presentation of the simulation of the trp-regulation process that suggested to Noyafsky to focus on the trpL gene and the user-interface subsequently allowed him to guide the program in that direction (fragment 4).
Reference: [41] <author> N.J.I. </author> <title> Mars, Inleiding Kennistechnologie, </title> <publisher> Academic Service, </publisher> <address> Schoonhoven, </address> <year> 1991. </year>
Reference-contexts: Although we have quite a few simula 3 See [28] for a similar classification. Our distinction between the simulation and engineering approach towards discovery programs owes much to the distinction in <ref> [41] </ref> between AI programs that try to emulate human problem-solving processes and programs that perform complex tasks irrespective of the way human beings perform them. 4 The program COAST differs from the others in the list, in that it does not model a well-known historical achievement, but a piece of common-sense
Reference: [42] <editor> N.J.I. Mars, ed., </editor> <booktitle> Proceedings of the ECAI Workshop on Knowledge Sharing and Reuse: Ways and Means, </booktitle> <address> Vienna, </address> <year> 1992. </year>
Reference: [43] <author> N.J.I. Mars, ed., </author> <title> Towards Very Large Knowledge Bases: Knowledge Building and Knowledge Sharing 1995 , IOS Press, </title> <address> Amsterdam, </address> <year> 1995. </year>
Reference-contexts: In addition to the domain-oriented programmes, computer scientists have attempted to formulate more general principles for building large-scale (scientific) knowledge bases (see [19] and <ref> [43] </ref> for overviews). In particular, they have propagated the 5 Once a problem space has been constructed, the amount of knowledge necessary to produce an interesting finding may seem modest, as for example noted by Valdes-Perez [66].
Reference: [44] <author> J.R. Moraczewski, R. Zembowicz & J.M. Zytkow, </author> <title> Geobotanic database exploration, in Systematic Methods of Scientific Discovery, </title> <booktitle> Papers from the 1995 AAAI Symposium, </booktitle> <address> R.E. Valdes-Perez, </address> <publisher> ed., AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1995, </year> <pages> 76-80. </pages>
Reference-contexts: A few examples of discovery programs with this orientation are (Meta-)DENDRAL [9,40], MECHEM [64,68], RX [6], SYNGEN [23], GOLEM [31,60], 49er <ref> [44] </ref>, and IMEM [12,13]. Whichever of the two approaches is followed, in the end the acid test for any discovery program is of course its assimilation in the discovery environment of scientists.
Reference: [45] <institution> National Center for Biotechnology Information (NCBI), NCBI Software Development ToolKit, Version 1.9 , Bethesda, MD, </institution> <year> 1994. </year>
Reference-contexts: Developers of molecular databases try to build flexibility into their data models by defining general concepts and relations which cross a wide range of domains, and which are, they expect, relatively stable <ref> [45] </ref>. Taking such a unifying conceptual framework as a starting-point, appropriate specializations of the model can be formulated for each domain. The required flexibility of discovery tools makes high demands on the design and the implementation of the tools. <p> The required flexibility of discovery tools makes high demands on the design and the implementation of the tools. Developers could support flexibility by making a clear design, using a powerful and widely-used programming language, and providing extensive documentation with the tools, features exemplified in <ref> [45] </ref>. Guideline 6: Make the discovery tools transparent to others by clearly and unambiguously specifying how they have been designed and used in the search process. A precondition for the flexibility of a tool in a computer-supported discover environment is its clear design, i.e., the transparency of the tool.
Reference: [46] <author> R. Neches, R. Fikes, T. Finin, T. Gruber, R. Patil, T. Senator & W.R. Swartout, </author> <title> Enabling technology for knowledge sharing, </title> <booktitle> AI Magazine 12 (1991), </booktitle> <pages> 37-55. </pages>
Reference: [47] <author> A. Newell & H.A. Simon, </author> <title> Human Problem Solving, </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1972. </year>
Reference-contexts: The advantage of treating scientific discovery as an instance of ordinary problem solving is that one can draw on the large body of literature on the latter topic. Simon and his colleagues follow the heuristic search approach toward human problem solving <ref> [47] </ref> when they characterize the discovery activities of scientists. They consider problem solving as a complex form of information processing, in which a problem is represented in terms of a problem space. This problem space includes states of knowledge and operators to move between the states.
Reference: [48] <author> T. Nickles, </author> <title> Justification and experiment, in The Uses of Experiment: Studies in the Natural Sciences, </title> <editor> S. Schaffer, D. Gooding & T. Pinch, eds., </editor> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1989, </year> <pages> 299-333. </pages>
Reference-contexts: Philosophers of science have for instance described and evaluated how experimenters reconstruct their activities, and the skills these activities exemplify, into procedures that others can use in order to judge and replicate their findings <ref> [21, 48] </ref>. The systematization of scientific work and knowledge may lead to the further material equipment of a practice, for instance when heuristics and rules are embodied into an apparatus performing a specific, self-contained subtask.
Reference: [49] <author> G. Nowak & P. Thagard, Copernicus, Ptolemy, </author> <title> and explanatory coherence, in Cognitive Models of Science, </title> <editor> R.N. Giere, ed., </editor> <booktitle> Minnesota Studies in the Philosophy of Science, </booktitle> <volume> vol. 15, </volume> <publisher> University of Minnesota Press, </publisher> <address> Minneapolis, MN, </address> <year> 1992, </year> <pages> 274-309. </pages>
Reference: [50] <author> G.C. Overton, K. Koile & J.A. Pastor, GeneSys: </author> <title> A knowledge management system for molecular biology, in Computers and DNA, G.I. </title> <editor> Bell & T.G. Marr, eds., </editor> <publisher> Addison-Wesley, </publisher> <address> Redwood City, CA, </address> <year> 1990, </year> <pages> 213-239. </pages>
Reference-contexts: Other examples of scientific knowledge bases are EcoCyc, which gathers information about the genes and metabolic pathways in the E.coli bacterium [29,30], and GeneSys, which contains information about structure-function relationships in gene expression <ref> [50] </ref>. In addition to the domain-oriented programmes, computer scientists have attempted to formulate more general principles for building large-scale (scientific) knowledge bases (see [19] and [43] for overviews).
Reference: [51] <author> S.A. Rajamoney, </author> <title> A computational approach to theory revision, in Computational Models of Scientific Discovery and Theory Formation, </title> <editor> J. Shrager & P. Langley, eds., </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991, </year> <pages> 225-253. </pages>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 [33], KEKADA [35, 36], COAST <ref> [51] </ref>, HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [52] <author> F. Rechenmann, </author> <title> Building and sharing large knowledge bases in molecular genetics, </title> <booktitle> in Proceedings of International Conference on Building and Sharing of Very Large-Scale Knowledge Bases (KB&KS'93) , JIPDEC, </booktitle> <address> Tokio, </address> <year> 1993, </year> <pages> 289-301. </pages>
Reference-contexts: Databases predominate (such as the GenBank sequence database that we mentioned above [5]), but from a long-term perspective the development of specialized, richly structured knowledge bases is even more important for computer-supported discovery. One example is the ColiGene knowledge base <ref> [52] </ref>, which contains knowledge about genetic regulation mechanisms in the E. coli bacterium. Other examples of scientific knowledge bases are EcoCyc, which gathers information about the genes and metabolic pathways in the E.coli bacterium [29,30], and GeneSys, which contains information about structure-function relationships in gene expression [50].
Reference: [53] <author> A. Rip, </author> <title> New combinations, </title> <booktitle> European Review 3 (1995), </booktitle> <pages> 83-92. </pages>
Reference-contexts: If these audiences are convinced of the value of the results, 1 the claims are added to the shared body of knowledge in a domain <ref> [53] </ref>. The exten-sion of the body of knowledge with new discoveries may lead to further research and further discoveries, thus giving rise to the characteristic dynamic of science.
Reference: [54] <author> D. Rose & P. Langley, </author> <title> Chemical discovery as belief revision, </title> <booktitle> Machine Learning 1 (1986), </booktitle> <pages> 423-451. </pages>
Reference: [55] <author> S. Shapin & S. Schaffer, Leviathan and the Air-pump: Hobbes, Boyle, </author> <title> and the Experimental Life, </title> <publisher> Princeton University Press, </publisher> <address> Princeton, NJ, </address> <year> 1985. </year>
Reference-contexts: Historians and philosophers of science have given detailed descriptions of discovery environments, such as the air-pump and related methods and instruments that Boyle used for his pneumatic experiments around 1660 <ref> [55] </ref>, a modern biological lab focussing on neuroendocrinological research [38], and the complex installations for running experiments in high-energy physics [20].
Reference: [56] <author> H.A. Simon, P.W. Langley & G.L. Bradshaw, </author> <title> Scientific discovery as problem solving, </title> <booktitle> Synthese 47 (1981), </booktitle> <pages> 1-27. </pages>
Reference: [57] <author> M. Singer & P. Berg, </author> <title> Genes & Genomes, A Changing Perspective, </title> <publisher> University Science Books, </publisher> <address> Mill Valley, CA, </address> <year> 1991. </year>
Reference-contexts: For biological details on this discovery, see [70] and <ref> [57] </ref>, especially section 3.11d. 4 produce tryptophan (trp). Also visible in the figure are the genetic control regions called the promoter (p), operator (o), and terminator (t). RNA polymerase binds to the operon at the promoter region and transcribes the DNA until the terminator is reached.
Reference: [58] <author> P. Slezak, </author> <title> Scientific discovery by computer as empirical refutation of the strong pro-gramme, </title> <booktitle> Social Studies of Science 19 (1989), </booktitle> <pages> 563-600. </pages>
Reference-contexts: Other examples of simulation programs are AM [39], PI [61], ECHO [49,62], BR3 [33], KEKADA [35, 36], COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see <ref> [58] </ref> and the reactions in the same journal issue). However, for (computer) scientists its main interest lies in the eventual application of the principles and strategies embodied in the programs to new problems in current research practices.
Reference: [59] <author> R. St. Amant & P.R. Cohen, </author> <title> Preliminary system design for an EDA assistant, </title> <booktitle> in Proceedings of the Fifth International Workshop on Artificial Intelligence and Statistics, </booktitle> <year> 1995, </year> <pages> 502-512. </pages>
Reference-contexts: This is not to say, of course, that computer support for these activities could not be extended into discovery programs. A nice example of work in this direction is the AIDE system, which assists human statistical analysts by planning, executing, and controlling exploratory data analysis tasks <ref> [59] </ref>. Existing discovery programs fall into two categories [25]. 3 First, there are programs that simulate historical discovery processes, often (but not necessarily) focusing on the cognitive processes of scientists.
Reference: [60] <author> M.J.E. Sternberg, R.A. Lewis, R.D. King & S. Muggleton, </author> <title> Machine learning and biomolec-ular modelling, </title> <booktitle> in Machine Intelligence 13: Machine Intelligence and Inductive Learning, </booktitle> <editor> K. Furukawa, D. Michie & S. Muggleton, eds., </editor> <publisher> Clarendon Press, Oxford, </publisher> <year> 1994. </year>
Reference: [61] <author> P. Thagard, </author> <booktitle> Computational Philosophy of Science, </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1988. </year> <month> 33 </month>
Reference-contexts: Well-known examples of simulation programs can be found in the BACON family, consisting of programs for finding quantitative and qualitative relations in experimental data [37,54]. Other examples of simulation programs are AM [39], PI <ref> [61] </ref>, ECHO [49,62], BR3 [33], KEKADA [35, 36], COAST [51], HYPGENE [26,27], and ReTAX [1]. 4 The computational simulation of scientific discoveries is an interesting goal in itself, and one which may raise deep philosophical questions (see [58] and the reactions in the same journal issue).
Reference: [62] <author> P. Thagard & G. Nowak, </author> <title> The conceptual structure of the geological revolution, in Com--putational Models of Scientific Discovery and Theory Formation, </title> <editor> J. Shrager & P. Langley, eds., </editor> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991, </year> <pages> 27-72. </pages>
Reference: [63] <author> E.L. Trist, </author> <title> The sociotechnical perspective: The evolution of sociotechnical systems as a conceptual framework and as an action research program, in Perspectives on Organisa-tion Design and Behavior, </title> <editor> A.H. Van De Ven & W.F. Joyce, eds., </editor> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1981, </year> <pages> 19-87. </pages>
Reference-contexts: As a consequence, we cannot understand a computer-supported discovery environment as a technical system only; we have to pay attention to how it is embedded in a research practice. Borrowing a term from organization theory <ref> [63] </ref>, we can characterize a computer-supported discovery environment as a sociotechni-cal system. When a system is analyzed as a sociotechnical system, emphasis is laid on the interdependencies between technical equipment and the (groups of) people using this equipment.
Reference: [64] <author> R.E. Valdes-Perez, </author> <title> Conjecturing hidden entities by means of simplicity and conservation laws: </title> <booktitle> Machine discovery in chemistry, Artificial Intelligence 65 (1994), </booktitle> <pages> 247-280. </pages>
Reference: [65] <author> R.E. Valdes-Perez, </author> <title> Human-computer interactive elucidation of reaction mechanisms: Application to catalyzed hydrogenolysis of ethane, </title> <journal> Catalysis Letters 28 (1994), </journal> <pages> 79-87. </pages>
Reference-contexts: Only a few programs have helped make a real contribution to the body of knowledge in a particular domain, a contribution worthy of being published in a refereed journal in that domain. Those exceptions include Meta-DENDRAL in mass spectroscopy [10], MECHEM in chemistry <ref> [65] </ref> and PAULI in particle physics [69], and GOLEM in pharmaceutical chemistry [32]. Although the current discovery environments of molecular biologists contain tools that incorporate AI techniques, the core business of research, making discoveries, is seldom covered.
Reference: [66] <author> R.E. Valdes-Perez, </author> <title> Some recent human-computer discoveries and what accounts for them, </title> <booktitle> AI Magazine 16 (1995), </booktitle> <pages> 37-44. </pages>
Reference-contexts: In particular, they have propagated the 5 Once a problem space has been constructed, the amount of knowledge necessary to produce an interesting finding may seem modest, as for example noted by Valdes-Perez <ref> [66] </ref>. However, as discoveries often result from making unexpected combinations of heterogeneous resources, one cannot tell beforehand which are needed.
Reference: [67] <author> R.E. Valdes-Perez, </author> <title> Generic tasks of scientific discovery, in Systematic Methods of Scientific Discovery, </title> <booktitle> Papers from the 1995 AAAI Symposium, </booktitle> <address> R.E. Valdes-Perez, </address> <publisher> ed., AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1995, </year> <pages> 23-28. </pages>
Reference-contexts: This step depended on Liza's ingenuity and her good memory, but in the future Noyafsky's discovery environment might be extended with new computer programs supporting the generic scientific task <ref> [67] </ref> of problem space construction. Such programs would: 1. Analyze a task description and establish the information requirements, 2. Search through a catalog of knowledge bases, databases, and program libraries to find tools matching these requirements, and 3.
Reference: [68] <author> R.E. Valdes-Perez, </author> <title> Machine discovery in chemistry: New results, </title> <booktitle> Artificial Intelligence 74 (1995), </booktitle> <pages> 191-201. </pages>
Reference-contexts: Such a change in granularity is visible in MECHEM, where the addition of structural information on the reactants and products in a chemical reaction supplies further constraints for reducing the number of conjectured reaction mechanisms <ref> [68] </ref>. Another example is a hypothesis generation program in which the order of subactivities or the search strategy can be modified. In the scenario, we encountered flexible tools when the opportunity to adapt copies of centrally maintained regulation models to local circumstances was referred to (fragment 2).
Reference: [69] <author> R.E. Valdes-Perez & M. Erdmann, </author> <title> Systematic induction and parsimony of phenomenological conservation laws, </title> <journal> Computer Physics Communications 82 (1994), </journal> <pages> 171-180. </pages>
Reference-contexts: Only a few programs have helped make a real contribution to the body of knowledge in a particular domain, a contribution worthy of being published in a refereed journal in that domain. Those exceptions include Meta-DENDRAL in mass spectroscopy [10], MECHEM in chemistry [65] and PAULI in particle physics <ref> [69] </ref>, and GOLEM in pharmaceutical chemistry [32]. Although the current discovery environments of molecular biologists contain tools that incorporate AI techniques, the core business of research, making discoveries, is seldom covered.
Reference: [70] <author> C. Yanofsky, </author> <title> Attenuation in the control of expression of bacterial operons, </title> <booktitle> Nature 289 (1981), </booktitle> <pages> 751-758. </pages>
Reference-contexts: For biological details on this discovery, see <ref> [70] </ref> and [57], especially section 3.11d. 4 produce tryptophan (trp). Also visible in the figure are the genetic control regions called the promoter (p), operator (o), and terminator (t). RNA polymerase binds to the operon at the promoter region and transcribes the DNA until the terminator is reached.
References-found: 70

