URL: http://www.math.rutgers.edu/~sontag/FTP_DIR/two-layer.ps.gz
Refering-URL: http://www.math.rutgers.edu/~sontag/papers.html
Root-URL: 
Title: FEEDBACK STABILIZATION USING TWO-HIDDEN-LAYER NETS  
Author: Eduardo D. Sontag 
Keyword: Key words Neural nets, nonlinear control systems, feedback  
Address: New Brunswick, NJ 08903  
Affiliation: SYCON Rutgers Center for Systems and Control Department of Mathematics, Rutgers University,  
Date: 3 (1992): 981-990.  
Note: IEEE Trans. Neural Networks  
Abstract: This paper compares the representational capabilities of one hidden layer and two hidden layer nets consisting of feedforward interconnections of linear threshold units. It is remarked that for certain problems two hidden layers are required, contrary to what might be in principle expected from the known approximation theorems. The differences are not based on numerical accuracy or number of units needed, nor on capabilities for feature extraction, but rather on a much more basic classification into "direct" and "inverse" problems. The former correspond to the approximation of continuous functions, while the latter are concerned with approximating one-sided inverses of continuous functions |and are often encountered in the context of inverse kinematics determination or in control questions. A general result is given showing that nonlinear control systems can be stabilized using two hidden layers, but not in general using just one. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Blum, E.K., and L. Kwan Li, </author> <title> "Approximation theory and feed-forward networks," </title> <booktitle> Neural Networks 4(1991): </booktitle> <pages> 511-516. </pages>
Reference-contexts: In these, one is interested in obtaining a one-sided inverse to a continuous map. For instance, inverse kinematics calculations in robotics are of this type. Other authors, most notably [2] and <ref> [1] </ref>, had previously noted the need for two hidden layers; while they stated their results mostly in terms of numerical accuracy and numbers of neurons, the underlying reasons also had to do with limitations of superpositions.
Reference: [2] <author> Chester, D., </author> <title> "Why two hidden layers and better than one," </title> <booktitle> Proc. Int. Joint Conf. on Neural Networks, </booktitle> <address> Washington, DC, Jan. 1990, </address> <publisher> IEEE Publications, </publisher> <year> 1990, </year> <note> p. I.265-268. </note>
Reference-contexts: In these, one is interested in obtaining a one-sided inverse to a continuous map. For instance, inverse kinematics calculations in robotics are of this type. Other authors, most notably <ref> [2] </ref> and [1], had previously noted the need for two hidden layers; while they stated their results mostly in terms of numerical accuracy and numbers of neurons, the underlying reasons also had to do with limitations of superpositions.
Reference: [3] <author> Cybenko, G., </author> <title> "Approximation by superpositions of a sigmoidal function," Math. Control, Signals, </title> <booktitle> and Systems 2(1989): </booktitle> <pages> 303-314. </pages>
Reference-contexts: Our objective here is not to provide a practical stabilization technique, but rather to explore the capabilities and the ultimate limitations of alternative network architectures. We do so by showing that, contrary to what might be expected from the well-known representation theorems [4], <ref> [3] </ref>, [6], single hidden layer nets are not sufficient for stabilization, but two hidden layer nets are enough |assuming that threshold processors are used. <p> In negative results, more general functions can be used. The ouput is not passed through a final neuron, as done in some studies of feedforward nets, as this would limit the range of values that can be computed. It is by now well-known |see e.g. [4], <ref> [3] </ref>, [6]| that functions computable by nets with a single hidden layer can approximate continuous functions, uniformly on compacts, under only weak assumptions on . <p> For fixed , and under mild assumptions on , nets with one hidden layer can be used to approximate arbitrary continuous functions uniformly on compacts sets; see for instance <ref> [3] </ref>, [6]. For other problems, as discussed below, two hidden layers are needed.
Reference: [4] <author> Funahashi, K., </author> <title> "On the approximate realization of continuous mappings by neural networks," </title> <booktitle> Neural Networks 2(1989): </booktitle> <pages> 183-192. </pages>
Reference-contexts: Our objective here is not to provide a practical stabilization technique, but rather to explore the capabilities and the ultimate limitations of alternative network architectures. We do so by showing that, contrary to what might be expected from the well-known representation theorems <ref> [4] </ref>, [3], [6], single hidden layer nets are not sufficient for stabilization, but two hidden layer nets are enough |assuming that threshold processors are used. <p> In negative results, more general functions can be used. The ouput is not passed through a final neuron, as done in some studies of feedforward nets, as this would limit the range of values that can be computed. It is by now well-known |see e.g. <ref> [4] </ref>, [3], [6]| that functions computable by nets with a single hidden layer can approximate continuous functions, uniformly on compacts, under only weak assumptions on .
Reference: [5] <author> Hirsch, M.W., </author> <title> Differential Topology, </title> <publisher> Springer-Verlag, </publisher> <address> NY, </address> <year> 1976 </year>
Reference-contexts: One may even take an infinitely differentiable function d whose zero set is this complement; see Exercise 2.2.1 in <ref> [5] </ref>.) Finally, let m = p = 3 in property (INV), applied with " = 1=4, f (x 1 ; x 2 ; x 3 ) := (x 1 ; x 2 ; (x 1 ; x 2 ; x 3 )) ; and the set C := C 0 fi <p> j x 2 C and (x; u) 62 U g F 2 := f (x; u) j x 2 Dg : Now let fl and be continuous functions IR n fi IR q ! IR chosen as follows (if desired, they can also picked infinitely differentiable, by Exercise 2.2.1 in <ref> [5] </ref>): (x; u) = &gt; &lt; 1 if (x; u) 2 F 1 2 (0; 1) otherwise and fl (x; u) = 0 on F 1 F 2 and &gt; 0 otherwise.
Reference: [6] <author> Hornik, K.M., M. Stinchcombe, and H. White, </author> <title> "Multilayer feedforward networks are universal approximators," </title> <booktitle> Neural Networks 2, 1989, p. </booktitle> <pages> 359-366. </pages>
Reference-contexts: Our objective here is not to provide a practical stabilization technique, but rather to explore the capabilities and the ultimate limitations of alternative network architectures. We do so by showing that, contrary to what might be expected from the well-known representation theorems [4], [3], <ref> [6] </ref>, single hidden layer nets are not sufficient for stabilization, but two hidden layer nets are enough |assuming that threshold processors are used. <p> In negative results, more general functions can be used. The ouput is not passed through a final neuron, as done in some studies of feedforward nets, as this would limit the range of values that can be computed. It is by now well-known |see e.g. [4], [3], <ref> [6] </ref>| that functions computable by nets with a single hidden layer can approximate continuous functions, uniformly on compacts, under only weak assumptions on . <p> For fixed , and under mild assumptions on , nets with one hidden layer can be used to approximate arbitrary continuous functions uniformly on compacts sets; see for instance [3], <ref> [6] </ref>. For other problems, as discussed below, two hidden layers are needed.
Reference: [7] <author> Narendra, K.S., and K. Parthasarathy, </author> <title> "Identification and control of dynamical systems using neural networks," </title> <journal> IEEE Trans. Neural Nets 1(1990): </journal> <pages> 4-27. </pages>
Reference-contexts: Such control laws have attracted some interest lately (see e.g. <ref> [7] </ref> and references there). Our objective here is not to provide a practical stabilization technique, but rather to explore the capabilities and the ultimate limitations of alternative network architectures.
Reference: [8] <author> Sontag, E.D., </author> <title> "Remarks on piecewise-linear algebra," </title> <journal> Pacific J.Math., </journal> <volume> 98(1982): </volume> <pages> 183-201. </pages>
Reference-contexts: This difference in capabilities was also implicit |but expressed in the language of piecewise linear maps| in the algebraic reference <ref> [8] </ref>. 1 The remarks in this paper suggest that one could roughly classify learning problems into "direct" and "indirect" ones, the former being more suitable for solution by one hidden layer nets, and the latter by two hidden layer nets. <p> The only difficulties are in generalizing the arguments in [9] to deal with a slightly more restrictive class of feedback laws than in [9], and in proving the negative result. The exposition here is self-contained, however, and no use is made of the results in [9] and <ref> [8] </ref>. <p> Sets of the form (6) are called relatively open polyhedra. As in <ref> [8] </ref> and [9], we define: Definition 3.3 Elements of B p are called piecewise linear sets. The linear span of the characteristic functions of such piecewise linear sets is the set of (polyhedrally) piecewise constant functions from IR p into IR. <p> The set of piecewise constant maps is complete, because each B p is a Boolean algebra by definition. Remark 3.4 In <ref> [8] </ref> and [9], one also defines more generally piecewise linear maps, as those whose graphs are piecewise linear sets, or equivalently, maps that are affine (rather than constant) on each element of a finite polyhedral partition.
Reference: [9] <author> Sontag, E.D., </author> <title> "Nonlinear regulation: The piecewise linear approach," </title> <journal> IEEE Trans. Autom. Control AC-26(1981): </journal> <pages> 346-358. </pages>
Reference-contexts: Mathematically, the main results are quite simple, and they are to be expected in view of the older work by the author which dealt with piecewise linear sets and systems. The only difficulties are in generalizing the arguments in <ref> [9] </ref> to deal with a slightly more restrictive class of feedback laws than in [9], and in proving the negative result. The exposition here is self-contained, however, and no use is made of the results in [9] and [8]. <p> The only difficulties are in generalizing the arguments in <ref> [9] </ref> to deal with a slightly more restrictive class of feedback laws than in [9], and in proving the negative result. The exposition here is self-contained, however, and no use is made of the results in [9] and [8]. <p> The only difficulties are in generalizing the arguments in <ref> [9] </ref> to deal with a slightly more restrictive class of feedback laws than in [9], and in proving the negative result. The exposition here is self-contained, however, and no use is made of the results in [9] and [8]. <p> The discussion is entirely in terms of discrete-time systems (1). However, just as in <ref> [9] </ref>, one may immediately apply all results to continuous-time systems _x = f (x; u) (3) through the use of sample-and-hold control. <p> See for instance [13] or [12], Section 4.8, for more on the topic of nonlinear stabilizability for continuous-time systems. Also, only the full state feedback problem is treated in detail, but <ref> [9] </ref> shows how to deal with partial observations in the analogous case of piecewise linear feedback (in fact, the main results in that reference are for the partially observed case). 2 Definitions and Results In this section we give the basic definitions, discuss elementary properties, and provide precise statements of results. <p> Sets of the form (6) are called relatively open polyhedra. As in [8] and <ref> [9] </ref>, we define: Definition 3.3 Elements of B p are called piecewise linear sets. The linear span of the characteristic functions of such piecewise linear sets is the set of (polyhedrally) piecewise constant functions from IR p into IR. <p> The set of piecewise constant maps is complete, because each B p is a Boolean algebra by definition. Remark 3.4 In [8] and <ref> [9] </ref>, one also defines more generally piecewise linear maps, as those whose graphs are piecewise linear sets, or equivalently, maps that are affine (rather than constant) on each element of a finite polyhedral partition. <p> Such pairs of nets may be more useful in practice -in particular, they are better suited for modeling gain-scheduling approaches to control; see <ref> [9] </ref>.
Reference: [10] <author> Sontag, E.D., </author> <title> "Real addition and the polynomial hierarchy," </title> <journal> Inform. Proc. Letters 20(1985): </journal> <pages> 115-120. </pages>
Reference-contexts: For such maps one may develop a fairly elegant algebraic theory, and various computational complexity issues have been studied too (see <ref> [10] </ref>). Their study is conveniently carried out by introducing the first-order logical theory of real numbers with addition, and studying elimination of quantifier issues for it. Of course, piecewise linear maps also constitute a Boolean complete set.
Reference: [11] <author> Sontag, E.D., </author> <title> "Feedforward nets for interpolation and classification," </title> <journal> J. Comp. Syst. </journal> <note> Sci., to appear. 18 </note>
Reference: [12] <author> Sontag, E.D., </author> <title> Mathematical Control Theory: Deterministic Finite Dimensional Systems, </title> <publisher> Springer, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: This condition is obviously the weakest possible one if any type of controller is to stabilize the system; see <ref> [12] </ref>, in particular Chapter 4, for a discussion of such issues. <p> See for instance [13] or <ref> [12] </ref>, Section 4.8, for more on the topic of nonlinear stabilizability for continuous-time systems. <p> By asymptotic stability, there is then some integer s so that Q s (F ) V . (This is a well-known consequence of stability, and can be proved first locally as in <ref> [12] </ref>, Lemma 4.8.10, and then following by a standard compactness argument.) Let A 0 := F Q (F ) : : : Q s1 (F ) : Note that A 0 is invariant under Q, and it is compact because each Q i (F ) is.
Reference: [13] <author> Sontag, E.D., </author> <title> "Feedback stabilization of nonlinear systems," in Robust Control of Linear Systems and Nonlinear Control (M.A. Kaashoek, </title> <editor> J.H. van Schuppen, and A.C.M. Ran, eds,.) </editor> <publisher> Birkhauser, </publisher> <address> Cambridge, MA, </address> <year> 1990, </year> <pages> pp. 61-81. 19 </pages>
Reference-contexts: See for instance <ref> [13] </ref> or [12], Section 4.8, for more on the topic of nonlinear stabilizability for continuous-time systems.
References-found: 13

