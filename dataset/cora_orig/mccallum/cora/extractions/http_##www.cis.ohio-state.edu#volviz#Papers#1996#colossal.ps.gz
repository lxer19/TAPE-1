URL: http://www.cis.ohio-state.edu/volviz/Papers/1996/colossal.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/volviz/papers_subject.html
Root-URL: 
Title: An Optimal Ray Traversal Scheme for Visualizing Colossal Medical Volumes  
Author: Asish Law and Roni Yagel 
Address: Columbus, Ohio  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: Modern computers are unable to store in main memory the complete data of high resolution medical images. Even on secondary memory (disk), such large datasets are sometimes stored in a compressed form. At rendering time, parts of the volume are requested by the rendering algorithm and are loaded from disk. If one is not careful, the same regions may be (decompressed and) loaded to memory several times. Instead, a coherent algorithm should be designed that minimizes this thrashing and optimizes the time and effort spent to (uncompress and) load the volume. We present an algorithm that divides the volume into cubic cells, each (compressed and) stored on disk, in contrast to the more common slice-based storage. At rendering time, each cell is allocated a queue of rays. For a sequence of images, all rays are spawned and queued at the cells they intersect first. Cells are loaded, one at a time, in front-to-back (FTB) order. A loaded cell is rendered by all rays found in its queue. We analyze the algorithm in detail and demonstrate its advantages over existing ray casting volume ren dering methods.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> J. Arvo, </author> <title> Space-Filling Curves and a Measure of Coherence. Graphics Gems II, </title> <booktitle> Chapter 1.8, </booktitle> <pages> pp. 26-30. </pages>
Reference: 2. <author> J.E. Fowler, and R. Yagel, </author> <title> Lossless Compression of Volume Data, </title> <booktitle> Proceedings of The 1994 Symposium on Volume Visualization, </booktitle> <address> Washington, DC, </address> <month> October </month> <year> 1994, </year> <pages> pp. 43-50. </pages>
Reference-contexts: The images produced in this manner are exactly the same as would be produced by a direct volume renderer. The algorithm is independent of the compression technique used, thus allowing higher compression ratios. The only assumption is that the compression is lossless <ref> [2] </ref> and that the corresponding decompression routine is available at render-time. Second, it can be used in conjunction with the methods for direct rendering of compressed volumes (e.g., [11]) to exploit coherency to a far higher degree. The image quality will be the same as guaranteed by the respective algorithms. <p> We believe that the pain and effort taken in acquiring high resolution and high quality data, such in the Visible Human Project, cannot be compromised at rendering time by employing lossy compression techniques. Our algorithm preserves the accuracy of the direct volume renderer by employing lossless compression <ref> [2] </ref> (or no compression) while trying to optimize rendering time. The idea of thrashless volume rendering was first proposed for multicomputers by Wes-termann and Augustin [16], and later extended to multi-frame thrashless ray-casting by Law and Yagel in [8]. <p> Each cell is optionally compressed and stored onto a disk. We assume that the corresponding decompression routine is available at rendering time. Compressing cells instead of the whole volume may lead to lower compression ratios <ref> [2] </ref>. Alternatively, very large volumes can also be divided and stored, as uncompressed cells, on distributed remote disks. The algorithm basically renders the original data, but uses an efficient ray traversal scheme to ensure that each cell is decompressed exactly once for a number of frames.
Reference: 3. <author> M.H. Ghavamnia and X.D. Yang. </author> <title> Direct Rendering of Laplacian Pyramid Compressed Vol ume Data. </title> <booktitle> Proceedings of Visualization 1995, Atlanta, Georgia, </booktitle> <pages> pp. 192-199. </pages>
Reference: 4. <author> S. Green, D. Paddon. </author> <title> Exploiting Coherence for Multiprocessor Ray Tracing, </title> <journal> IEEE Com puter Graphics and Applications 9, </journal> <volume> (6), </volume> <pages> pp. 12-26, </pages> <month> November </month> <year> 1989. </year>
Reference: 5. <author> L. Hong, A. Kaufman, Y.C. Wei, A. Viswambharan, M. Wax, Z. Liang. </author> <title> 3D Virtual Colonos copy. </title> <booktitle> Proceedings of Biomedical Visualization 95, </booktitle> <address> Atlanta, </address> <month> October 30, </month> <pages> pp. 26-32. </pages>
Reference: 6. <author> J. Kerr, P. Ratiu, M. Sellberg. </author> <title> Volume Rendering of Visible Human Data for an Anatomical Virtual Environment. Chapter 44 in Health Care in the Information Age, </title> <editor> H. Sieburg, S. Weghorst, K. Morgan (eds.), </editor> <publisher> IOS Press and Ohmsha, </publisher> <year> 1996. </year>
Reference-contexts: A more immediate requirement is to reduce the rendering time as far as possible, so that the frame generation time decreases. Several attempts have been made to conquer the visible human, some notable ones been described in [5]<ref> [6] </ref>[10][12][14]. In [6], an attempt has been made to develop a comprehensive virtual environment, including efficient segmentation and realistic ray tracing of the volume. In [14] the Visual Human is used as a basis for a comprehensive medical atlas.
Reference: 7. <author> R. Knittel. </author> <title> High-Speed Volume Rendering Using Redundant Block Compression. </title> <booktitle> Proceed ings of Visualization 1995, Atlanta, Georgia, </booktitle> <pages> pp. 176-183. </pages>
Reference: 8. <author> A. Law and R. Yagel. </author> <title> Multi-Frame Thrashless Ray Casting with Advancing Ray-Front, to be published in Proceedings of Graphics Interface 96, </title> <institution> Toronto, Canada. </institution>
Reference-contexts: The idea of thrashless volume rendering was first proposed for multicomputers by Wes-termann and Augustin [16], and later extended to multi-frame thrashless ray-casting by Law and Yagel in <ref> [8] </ref>. In this paper, we extend the scope of this novel approach to the visualization of compressed or colossal volumes on uniprocessor machines. The algorithm described in [8] preserves the thrashless property across all the frames that share the same FTB order. <p> rendering was first proposed for multicomputers by Wes-termann and Augustin [16], and later extended to multi-frame thrashless ray-casting by Law and Yagel in <ref> [8] </ref>. In this paper, we extend the scope of this novel approach to the visualization of compressed or colossal volumes on uniprocessor machines. The algorithm described in [8] preserves the thrashless property across all the frames that share the same FTB order. <p> In Section 2.3, we propose an extension to this method, so that the thrashless property is maintained even for arbitrary jumps of the screen during the animation. 2.1 Multi-Frame Thrashless Volume Rendering Revisited In this section, we briey describe the idea of multi-frame thrashless ray-casting. Refer to <ref> [8] </ref> for a detailed discussion. During preprocessing, the volume is divided into equal-sized cells and stored on a remote disk, possibly in a compressed form. The size of a cell is fixed at the size of the main memory.
Reference: 9. <author> M. Levoy. </author> <title> Efficient Ray Tracing of Volume Data. </title> <journal> ACM Transactions on Graphics 9, </journal> <month> July </month> <year> 1990, </year> <pages> pp. 245-261. </pages>
Reference: 10. <author> W.E. Lorensen. </author> <title> Marching Through the Visible Human. </title> <booktitle> Proceedings of Visualization 1995, Atlanta, Georgia, </booktitle> <pages> pp. 368-373. </pages>
Reference: 11. <author> P. Ning and L. Hesselink. </author> <title> Fast Volume Rendering of Compressed Data. </title> <booktitle> Proceedings of Visualization 1993, </booktitle> <pages> pp. 11-18. </pages>
Reference-contexts: The only assumption is that the compression is lossless [2] and that the corresponding decompression routine is available at render-time. Second, it can be used in conjunction with the methods for direct rendering of compressed volumes (e.g., <ref> [11] </ref>) to exploit coherency to a far higher degree. The image quality will be the same as guaranteed by the respective algorithms. Finally, the algorithm can simply be used advantageously to improve cache efficiency, for volumes that do fit in main memory.
Reference: 12. <author> M.E. Palmer, S. Taylor, B. Totty. </author> <title> Interactive Volume Rendering on Clusters of Shared-Memory Multiprocessors. </title> <booktitle> Proceedings of Parallel Computational Fluid Dynamics 95, </booktitle> <address> Pas adena, CA. </address>
Reference-contexts: visible human, some notable ones been described in [5][6][10]<ref> [12] </ref>[14]. In [6], an attempt has been made to develop a comprehensive virtual environment, including efficient segmentation and realistic ray tracing of the volume. In [14] the Visual Human is used as a basis for a comprehensive medical atlas. Palmer et al., [12] have gained speed by implementing a parallel volume renderer on clusters of shared-memory multiprocessors. Apart from using parallel computers, some researchers have taken a different route to improve the performance of the rendering algorithm by suggesting coherent algorithms, as in [1][4].
Reference: 13. <author> I.E. Sutherland, R.F. Sproull, R.A. Schumacker. </author> <title> A Characterization of Ten Hidden-Surface Algorithms, </title> <journal> Computing Surveys, </journal> <volume> Vol. 6, No. 1, </volume> <month> March </month> <year> 1974, </year> <pages> pp. 1-55. </pages>
Reference: 14. <author> U. Tiede, T. Schiemann, K.H. </author> <title> Hohne. Visualizing the Visible Human. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> Vol. 16, No. 1, </volume> <month> January </month> <year> 1996, </year> <pages> pp. 7-9. </pages>
Reference-contexts: Several attempts have been made to conquer the visible human, some notable ones been described in [5][6][10][12]<ref> [14] </ref>. In [6], an attempt has been made to develop a comprehensive virtual environment, including efficient segmentation and realistic ray tracing of the volume. In [14] the Visual Human is used as a basis for a comprehensive medical atlas. Palmer et al., [12] have gained speed by implementing a parallel volume renderer on clusters of shared-memory multiprocessors.
Reference: 15. <author> R. Westermann. </author> <title> Compression Domain Rendering of Time-Resolved Volume Data. Pro ceedings of Visualization 1995, </title> <address> Atlanta, Georgia, </address> <pages> pp. 168-175. </pages>
Reference-contexts: In Section 3, we thoroughly analyze our current implementation and suggest our conclusions in Section 4. 2 Method Volumes are compressed because they do not fit in secondary or primary memory. Efficient compression techniques <ref> [15] </ref> and direct volume visualization of compressed volumes [3][7][11] have been suggested. These algorithms generally compromise with accuracy, but with an a priori knowledge of the behavior of the data, very efficient schemes can be developed. In this paper, we take a different approach to visualize compressed volumes.
Reference: 16. <author> R. Westermann, S. </author> <title> Augustin. </title> <booktitle> Parallel Volume Rendering, Proceedings of International Parallel Processing Symposium, </booktitle> <year> 1995, </year> <pages> pp. 693-699. </pages>
Reference-contexts: Our algorithm preserves the accuracy of the direct volume renderer by employing lossless compression [2] (or no compression) while trying to optimize rendering time. The idea of thrashless volume rendering was first proposed for multicomputers by Wes-termann and Augustin <ref> [16] </ref>, and later extended to multi-frame thrashless ray-casting by Law and Yagel in [8]. In this paper, we extend the scope of this novel approach to the visualization of compressed or colossal volumes on uniprocessor machines.
Reference: 17. <author> L. Westover. </author> <title> Footprint Evaluation for Volume Rendering. </title> <booktitle> Proceedings of Siggraph 90, </booktitle> <volume> Vol. 24, </volume> <year> 1990, </year> <pages> pp. 367-376. </pages>
References-found: 17

