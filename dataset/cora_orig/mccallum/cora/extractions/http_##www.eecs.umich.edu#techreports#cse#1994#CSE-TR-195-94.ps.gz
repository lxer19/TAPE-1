URL: http://www.eecs.umich.edu/techreports/cse/1994/CSE-TR-195-94.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse94.html
Root-URL: http://www.eecs.umich.edu
Title: Effect of fan-out on the Performance of a Single-message cancellation scheme  
Author: Atul Prakash Gwo-baw Wu Seema Jetli 
Keyword: Index Terms: Distributed and parallel simulation, time-warp, discrete event simulation, optimistic computations, distributed algorithms.  
Address: Ann Arbor, MI 48109-2122.  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Note: (Contact Author)  
Email: Email: aprakash@eecs.umich.edu, gwu@eecs.umich.edu  
Phone: Phone: +1 313 763-1585  
Abstract: For optimistic distributed simulations, in [7], a single-message cancellation scheme simulation was suggested. The scheme potentially requires fewer cancellation messages and does not require maintenance of output queues, thereby potentially also saving memory. Our performance results on a network of Suns indicate that scheme works well in low-fanout topologies. In large fan-out topologies, however, the scheme performs poorly; the scheme can actually end up sending more negative messages than the time warp protocol, many of them to destinations that would not have received negative messages if output queues were maintained. In this paper, we explore the issue whether maintaining a small amount of hint information about likely destinations, in place of the entire output queue, makes the scheme effective for large-fanout topologies. We report and analyze performance results on a network of Suns for time warp and three variations of the single-message cancellation scheme | no output queue, full output queue as in time warp, and hint information only. Our results indicate that hint information may be sufficient for good performance in both low-fanout and high-fanout topologies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Beckman et al. </author> <title> Distributed simulation and time warp part 1: </title> <booktitle> design of colliding pucks. In Proc. of the Society for Computer Simulation Western Multiconference on Distributed Simulation, </booktitle> <year> 1989. </year>
Reference-contexts: SFilter performs as well as the best scheme in each fanout topology. In near future, we are planning to look at other simulations, such as the colliding pucks simulation <ref> [1] </ref>, that have much higher fanouts. We want to see if for extremely high fanouts, maintaining summary hint information continues to be sufficient. It is concievable that for very high fanouts, output queues become necessary and Time Warp and SFilter with Output Queues may outperform other algorithms.
Reference: [2] <author> J. Butler and V. </author> <title> Wallentine. Message bundling in time warp. In Simulation Work and Progress, </title> <booktitle> 1991 Western Simulation Multiconference, </booktitle> <month> January </month> <year> 1991. </year>
Reference-contexts: We will compare the schemes and our im-plementation of the time warp protocol on a network of Suns for topologies with increasing fanouts. Another scheme for replacing multiple cancellation messages with a single negative message is using message bundling <ref> [2] </ref>.
Reference: [3] <author> K. Efe. </author> <title> Heuristic models of task assignment scheduling in distributed systems. </title> <journal> Computer, </journal> <volume> 15(6) </volume> <pages> 50-56, </pages> <month> June </month> <year> 1982. </year> <month> 10 </month>
Reference: [4] <author> D.R. Jefferson. </author> <title> Virtual time. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 7(3) </volume> <pages> 404-425, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: In this paper, we analyze performance of several optimistic parallel discrete-event simulation techniqu and attempt to address the question whether it is possible to reduce overheads in optimistic simulations in terms of communication, computation, and and memory. Optimistic distributed simulation methods are based on the Virtual Time paradigm <ref> [4] </ref>. Each message between logical processes carries two time-stamps, a virtual send time and a virtual receive time. To guarantee causality, each logical process attempts to process messages in the virtual receive time order.
Reference: [5] <author> D.R. Jefferson et al. </author> <title> Distributed simulation and the time warp operating system. </title> <booktitle> ACM Operating System Review, </booktitle> <year> 1987. </year>
Reference-contexts: An issue that affects performance of optimistic algorithms is the way cancellation events are send. Obviously, somehow sufficient state has to be maintained so that processes can determine which events to cancel when a straggler message arrives. In the Time Warp protocol <ref> [5] </ref>, as well as its variations [9, 11], each process maintains an Output Queue, containing a copy of all messages that have been sent. Two of the fields in each message are virtual send time and virtual receive time.
Reference: [6] <author> V.M. Lo. </author> <title> Heuristic algorithms for task assignment in distributed systems. </title> <journal> IEEE Trans., </journal> <volume> C37:1384-1397, </volume> <month> May </month> <year> 1988. </year>
Reference: [7] <author> A. Prakash and R. Subramanian. </author> <title> Conditional knowledge approach to optimistic distributed simulations. </title> <type> Technical Report CSE-TR-86-91, </type> <institution> Department of EECS, U. of Michigan, </institution> <address> Ann Arbor, </address> <year> 1991. </year>
Reference: [8] <author> A. Prakash and R. Subramanian. </author> <title> An efficient optimistic distributed simulation scheme based on conditional knowledge. </title> <booktitle> In 6th Workshop on Parallel and Distribued Simulation (PADS 92), Proc. of the 1992 SCS Western Simulation Multiconference on Parallel and Discrete Event Simulation, </booktitle> <pages> pages 85-94, </pages> <address> Newport Beach, California, </address> <month> January </month> <year> 1992. </year>
Reference-contexts: If the positive message had already been processed, the process rolls back to the virtual receive time of the message, possibly sending additional negative messages. An alternative protocol, SFilter <ref> [8] </ref>, also based on the virtual time paradigm, uses a single cancellation message to cancel multiple messages to the same destination. The essential difference from the Time Warp protocol is that 2 it is the receiving process that determines the messages to cancel. <p> In the worst case, if nothing is known about the topology, the SFilter protocol would require sending of a negative message to every process in the system. In the results given in <ref> [8] </ref>, benefits did seem to outweigh the drawbacks. However, in the example used, each LP had only small number of potential destinations, so the drawback did not appear to be serious.
Reference: [9] <author> P. Reiher, S. Bellenot, and D. Jefferson. </author> <title> Temporal decomposition of simulations under the time warp operating system. </title> <booktitle> In Proc. of the SCS Multiconference on Advances in Parallel and Distributed Simulation, </booktitle> <pages> pages 47-54, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: An issue that affects performance of optimistic algorithms is the way cancellation events are send. Obviously, somehow sufficient state has to be maintained so that processes can determine which events to cancel when a straggler message arrives. In the Time Warp protocol [5], as well as its variations <ref> [9, 11] </ref>, each process maintains an Output Queue, containing a copy of all messages that have been sent. Two of the fields in each message are virtual send time and virtual receive time.
Reference: [10] <author> A.K. Sarje and G. Sagar. </author> <title> Heuristic model for task allocation in distributed computer systems. </title> <journal> IEE Proceedings-E, </journal> <volume> 138(5) </volume> <pages> 313-317, </pages> <month> Sept </month> <year> 1991. </year>
Reference: [11] <author> L.M. Sokol, </author> <title> D.P. Briscoe, and A.P. Wieland. MTW: A strategy for scheduling discrete simulation events for concurrent execution. </title> <booktitle> In Proc. of the SCS Multiconference on Distributed Simulation, </booktitle> <pages> pages 34-42, </pages> <month> July </month> <year> 1988. </year>
Reference-contexts: An issue that affects performance of optimistic algorithms is the way cancellation events are send. Obviously, somehow sufficient state has to be maintained so that processes can determine which events to cancel when a straggler message arrives. In the Time Warp protocol [5], as well as its variations <ref> [9, 11] </ref>, each process maintains an Output Queue, containing a copy of all messages that have been sent. Two of the fields in each message are virtual send time and virtual receive time.
Reference: [12] <author> H.S. Stone. </author> <title> Multipleprocessor scheduling with the aid of network flow algorithms. </title> <journal> IEEE Trans. Software Eng., </journal> <volume> SE-3(1):97-106, </volume> <month> Jan. </month> <year> 1977. </year> <month> 11 </month>
References-found: 12

