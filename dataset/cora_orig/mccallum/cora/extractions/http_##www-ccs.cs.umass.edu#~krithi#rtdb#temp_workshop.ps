URL: http://www-ccs.cs.umass.edu/~krithi/rtdb/temp_workshop.ps
Refering-URL: http://www-ccs.cs.umass.edu/rtdb/publications.html
Root-URL: 
Email: fkrithi@nirvan.cs.umass.edug  
Title: Time for Real-Time Temporal Databases?  
Author: Krithi Ramamritham 
Date: February 28, 1996  
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: Time related concepts appear in both temporal databases and real-time databases. In this position paper, we show that with minor changes to the recently compiled basic concepts of temporal databases, it is possible to cover the conceptual needs of real-time databases as well. We also discuss practical implementation-oriented issues that arise when real-time databases are married to temporal databases. The motivation behind this paper is to determine whether, as we attempt to standardize temporal database concepts, it is possible to take into account the specific characteristics of real-time databases as well so as to expand the applicability of temporal databases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C.S. Jensen, J. Clifford, S.K. Gadia, A. Segev, </author> <title> R.T. Snodgrass, "A Glossary of Temporal Database Concepts", </title> <type> Technical Report, </type> <month> July, </month> <year> 1992. </year>
Reference-contexts: Clearly, temporal databases provide easy means to maintain the past history of a controlled system. Also, the concept of valid-time lifespan <ref> [1] </ref> can be used to capture the loss of validity of an observation about the controlled system beyond a certain point in time. What temporal databases do not appear to have is a means to be pro-active in the maintenance of the validity of the data. <p> involvement of the temporal database to keep up with the changes in the environment. 3.2 Capturing Tem poral Consistency Requirements in Temporal Databases To make the connections between concepts in real-time databases and temporal databases, we quote from the definitions of the relevant temporal database terms as they appear in <ref> [1] </ref>. Valid-time of a fact is defined to be "the time when the fact is true in the modeled reality". Hence valid time can be used to capture the timestamp of a database object. Lifespan of a database object is "the time over which it is defined". <p> Given these practical considerations, clearly, 4 temporal homogeneity is, from a practical point of view, even stronger than we thought earlier. Also, temporal homogeneity is defined <ref> [1] </ref> with respect to all attribute values of a tuple or all tuples of a relation. Thus, to cater to the needs of real-time data requirements, we need to weaken this.
Reference: [2] <author> K. Ramamritham, </author> <title> "Real-Time Databases." </title> <journal> Int'l Journal of Distributed and Parallel Databases, </journal> <volume> Vol. 1, No. 2, </volume> <month> March </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Temporal databases [3] are designed to capture time-varying information. They maintain the history of changes that objects in a database have undergone. Real-time databases <ref> [2] </ref>, on the other hand, have been more concerned with the timely processing of information. Queries and transactions in real-time databases have time constraints, such as deadlines, associated with them and when a result is produced is as important as what the result is. <p> A lot of work has been done in the real-time database area to process transactions and queries under time constraints. A review can be found in <ref> [2] </ref>. It should be clear by now that one of the primary reasons to satisfy the time constraints is the active maintenance of the temporal consistency requirements. That is, we desire to make sure that the data in the database is always valid. <p> This is perhaps the biggest difference between them and has to be addressed to bring the two together. Since, on the other hand, techniques for processing time constrained transactions and queries have been investigated extensively for real-time databases <ref> [2] </ref>, they can be applied to situations where temporal databases are employed.
Reference: [3] <author> R. Snodgrass and I. Ahn, </author> <title> "Temporal Databases", </title> <journal> IEEE Computer, </journal> <volume> Vol 19, No. 9, </volume> <month> September </month> <year> 1986, </year> <pages> pp. 35-42. </pages>
Reference-contexts: 1 Introduction Temporal databases <ref> [3] </ref> are designed to capture time-varying information. They maintain the history of changes that objects in a database have undergone. Real-time databases [2], on the other hand, have been more concerned with the timely processing of information.
Reference: [4] <author> X. Song and J.W.S. Liu, </author> <title> "How Well Can Data Temporal Consistency be Maintained?" Proceedings of the IEEE Symposium on Computer-Aided Control Systems Design, </title> <booktitle> 1992. </booktitle> <pages> 5 </pages>
Reference-contexts: We discuss these two issues next. 2.2 Temporal Consistency Require ments In real-time databases, the need to maintain consistency between the actual state of the environment and the state as reflected by the contents of the database leads to the notion of temporal consistency <ref> [4] </ref> which has two components: * Absolute consistency between the state of the environment and its reflection in the database; this arises from the need to keep the controlling system's view of the state of the environment consistent with the actual state of the environment.
References-found: 4

