URL: http://www.cs.utah.edu/~sci/publications/gitlin95_2.ps.Z
Refering-URL: http://www.cs.utah.edu/~sci/publications/paper_archive.html
Root-URL: 
Email: Email: cgitlin@cs.utah.edu and crj@cs.utah.edu  
Title: Techniques for Visualizing 3D Unstructured Meshes  
Author: Carole S. Gitlin Christopher R. Johnson 
Date: January 24, 1995  
Address: Salt Lake City, UT 84112 USA  
Affiliation: Department of Computer Science University of Utah  
Pubnum: UUCS-94-018  
Abstract: We present a computational module for interactively visualizing, large-scale, 3D unstructured meshes. Scientists and engineers routinely solve large-scale computational boundary value problems on unstructured grids. These grids typically range from several hundred thousand elements to millions of elements. With this ability to solve such large-scale problems comes the challenge of viewing the 3D finite element model geometry on a 2D screen. When the mesh is non-uniform, the researcher's ability to grasp the complex spatial relationships of the elements often fails. The visualization module we have developed for viewing large-scale 3D unstructured finite element meshes includes two novel real-time interactive methods: a clipping "surface" utility and a growth algorithm. Used separately or together, these new utilities allow the user to better explore complicated unstructured polygonal domains. 
Abstract-found: 1
Intro-found: 1
Reference: [HS92] <author> S. Hammond and R. Schreiber. </author> <title> Mapping unstructured grid problems to the connection machine. </title> <editor> In P. Mehrotra, J. Saltaz, and R. Voigt, editors, </editor> <booktitle> Unstructured Scientific Computation on Scalable Multiprocessors, </booktitle> <pages> pages 11-30. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: Mesh visualization is important for assessing solution accuracy, checking geometrical integrity (identifying missing and/or distorted elements), and interactive editing. Furthermore, with the advent of adaptive refinement and derefinement methods which alter the structure of the mesh, <ref> [HS92, SL94, JM94, MEJ94, YJ94] </ref> it is especially helpful to visualize the the changes taking place as an area of the mesh is refined. The computational mesh or grid is usually one of two types: structured or unstructured.
Reference: [JM94] <author> C.R. Johnson and R.S. MacLeod. </author> <title> Nonuniform spatial mesh adaption using a posteriori error estimate: applications to forward and inverse problems. </title> <journal> Applied Numerical Mathematics, </journal> <volume> 14 </volume> <pages> 311-326, </pages> <year> 1994. </year>
Reference-contexts: Mesh visualization is important for assessing solution accuracy, checking geometrical integrity (identifying missing and/or distorted elements), and interactive editing. Furthermore, with the advent of adaptive refinement and derefinement methods which alter the structure of the mesh, <ref> [HS92, SL94, JM94, MEJ94, YJ94] </ref> it is especially helpful to visualize the the changes taking place as an area of the mesh is refined. The computational mesh or grid is usually one of two types: structured or unstructured.
Reference: [JP94] <author> C.R. Johnson and S.G. Parker. </author> <title> A computational steering model applied to problems in medicine. </title> <booktitle> In Supercomputing '94, </booktitle> <pages> pages 540-549. </pages> <publisher> IEEE Press, </publisher> <year> 1994. </year>
Reference-contexts: MeshView contains a suite of options to provide the user with complete interactive control for mesh visualization. The module is part of a data-flow based computational steering system, SciRun, used for the interactive control of science and engineering boundary value problems. <ref> [JP94] </ref>. 2 Methods Conventional clipping planes fail when used to view unstructured 3D meshes because they cut across portions of elements. This results in a visual set of incomplete elements and edges. To overcome this problem, we implemented clipping isosurfaces. <p> By allowing the user to explore the mesh in different ways, the program gives the user the information needed to understand the spatial relationships between the 3D elements. 3 Results Data enters MeshView via SciRun, the computational steering program <ref> [JP94] </ref>.
Reference: [MEJ94] <author> R.S. MacLeod, P.R. Ershler, and C.R. Johnson. Map3d: </author> <title> Scientific visualization program for multichannel time series data on unstructured, three 8 dimensional meshes. program user's guide. </title> <type> Technical Report UUCS -94-016, </type> <institution> University of Utah, Department of Computer Science, </institution> <year> 1994. </year>
Reference-contexts: Mesh visualization is important for assessing solution accuracy, checking geometrical integrity (identifying missing and/or distorted elements), and interactive editing. Furthermore, with the advent of adaptive refinement and derefinement methods which alter the structure of the mesh, <ref> [HS92, SL94, JM94, MEJ94, YJ94] </ref> it is especially helpful to visualize the the changes taking place as an area of the mesh is refined. The computational mesh or grid is usually one of two types: structured or unstructured. <p> With structured 3D meshes, one may visualize the geometry and underlying structure straightforwardly, using traditional graphical techniques. However, unstructured meshes present the more difficult task of grasping spatial relationships of unstructed 3D objects in 2-space. One common technique to assist in viewing these meshes is to use clipping planes <ref> [MEJ94] </ref>. When this technique is applied to unstructured meshes, however, the clipping plane cuts through portions of elements, leaving line segments on the edges of the mesh. Speray and Kennon addressed this problem by devising a method of volume probes for interactive data exploration [SK90].
Reference: [Ous94] <author> J.K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: In this case, the input module reads in the data points and connectivities of the mesh. The computation module contains the algorithms developed for MeshView. The output module is the geometry viewer, which displays the mesh. The program is written in C++ using Tk/Tcl <ref> [Ous94] </ref>. MeshView is currently implemented on SGI workstations, but ports to other platforms are in progress. 3.1 Statistics The program was tested on a Silicon Graphics Indigo 2 workstation with a 100Mhz R4000 processor, 96 Mbytes main memory, and a 1 Mbyte cache.
Reference: [SK90] <author> D. Speray and S. Kennon. </author> <title> Volume probes: Interactive data exploration on arbitrary grids. </title> <journal> Computer Graphics, </journal> <volume> 24(5), </volume> <year> 1990. </year>
Reference-contexts: When this technique is applied to unstructured meshes, however, the clipping plane cuts through portions of elements, leaving line segments on the edges of the mesh. Speray and Kennon addressed this problem by devising a method of volume probes for interactive data exploration <ref> [SK90] </ref>. This method cuts sections of grids and displays them on 2D surfaces. However, the volume relationships between elements is lost when this technique is applied to elements displayed as 2D surfaces.
Reference: [SL94] <author> A. Shostko and R. Lohner. </author> <title> Three-dimensional parallel unstructured grid generation. </title> <booktitle> AIAA, </booktitle> <year> 1994. </year>
Reference-contexts: Mesh visualization is important for assessing solution accuracy, checking geometrical integrity (identifying missing and/or distorted elements), and interactive editing. Furthermore, with the advent of adaptive refinement and derefinement methods which alter the structure of the mesh, <ref> [HS92, SL94, JM94, MEJ94, YJ94] </ref> it is especially helpful to visualize the the changes taking place as an area of the mesh is refined. The computational mesh or grid is usually one of two types: structured or unstructured.
Reference: [YJ94] <author> F. Yu and C.R. Johnson. </author> <title> An automatic adaptive refinement and derefine-ment method. </title> <booktitle> In Proceedings of the 14th IMACS World Congress, </booktitle> <pages> pages 1555-1557, </pages> <year> 1994. </year>
Reference-contexts: Mesh visualization is important for assessing solution accuracy, checking geometrical integrity (identifying missing and/or distorted elements), and interactive editing. Furthermore, with the advent of adaptive refinement and derefinement methods which alter the structure of the mesh, <ref> [HS92, SL94, JM94, MEJ94, YJ94] </ref> it is especially helpful to visualize the the changes taking place as an area of the mesh is refined. The computational mesh or grid is usually one of two types: structured or unstructured.
References-found: 8

