URL: http://www.cs.wustl.edu/cs/techreports/1994/wucs-94-30.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: Morphing Binary Trees  
Author: John Hershberger Subhash Suri 
Date: November 1, 1994  
Address: San Jose, CA 95131  St. Louis, MO 63130  
Affiliation: Mentor Graphics  Washington University  
Abstract: We investigate the problem of transforming one binary tree into another by rotations, subject to certain weight constraints on the nodes of the trees. These constraints arise in the problem of "morphing" one simple polygon to another simple polygon by continuous deformations (translations and scalings) that preserve the turn angles and the simplicity of the polygon; the two polygons must have the same sequence of turn angles. Our main theorem is that two arbitrary n-leaf binary trees satisfying our weight constraint can be morphed into each other with O(n log n) rotations. Furthermore, we also present an O(n log n) time algorithm to determine these rotations. The previous best algorithm for this problem used O(n 4=3+* ) rotations.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Beier and S. Neely. </author> <title> Feature-based image metamorphosis. </title> <booktitle> Proc. of ACM Conference on Computer Graphics, </booktitle> <pages> pages 35-42, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction "Morphing," the continuous deformation of one shape to another, is a popular theme in computer graphics <ref> [1, 4, 5, 6] </ref>.
Reference: [2] <author> K. Culik and D. Wood. </author> <title> A note on some tree similarity measures. </title> <journal> Information Processing Letters 15 </journal> <pages> 39-42, </pages> <year> 1982. </year>
Reference-contexts: Sleator, Tarjan, and Thurston [7] show that an n-node tree can be made isomorphic to any other n-node tree by at most 2n 6 rotations, slightly improving an earlier result by Culik and Wood <ref> [2] </ref>. Our tree-morphing problem, however, is more difficult because of the weight constraint on the nodes, which restricts the choice of rotations available to an algorithm. The best previous algorithm for tree morphing requires O (n 4=3+* ) rotations [3].
Reference: [3] <author> L. Guibas and J. Hershberger. </author> <title> Morphing simple polygons. </title> <booktitle> In Proceedings of the 10th ACM Symposium on Computational Geometry, </booktitle> <pages> pages 267-276, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction "Morphing," the continuous deformation of one shape to another, is a popular theme in computer graphics [1, 4, 5, 6]. A recent paper by Guibas and Hershberger <ref> [3] </ref> considers the problem of morphing a simple polygon P to another simple polygon Q whose edges, taken in counterclockwise order, are parallel to the corresponding edges of P and oriented the same way (we say that the two polygons are parallel ). <p> Our tree-morphing problem, however, is more difficult because of the weight constraint on the nodes, which restricts the choice of rotations available to an algorithm. The best previous algorithm for tree morphing requires O (n 4=3+* ) rotations <ref> [3] </ref>. Our main result is the following theorem: O (n log n) rotations suffice to morph any valid binary tree into another such tree. We can also compute these rotations in the same time bound. This paper is organized in seven sections. <p> See Figure 2; the weight of the new parent of B and C does not exist in the tree before the rotation. A valid rotation is one in which the new weight lies in the open interval (1; +1). The algorithm of Guibas and Hershberger <ref> [3] </ref> transforms T 1 to T 2 by a sequence of valid rotations. The following high-level algorithm shows how the sequence is computed: Algorithm BasicMorph while jT 1 j &gt; 1 do 1. <p> To beat the nave quadratic bound for the entire algorithm, one must take additional steps to reduce the spine lengths for the merging siblings. 2.2 Spine Contraction and Normalization The following three lemmas are from <ref> [3] </ref>. Lemma 2.1 Among any four consecutive internal nodes along a spine in a valid tree, at least one can be rotated out of the spine by a valid rotation. <p> The Normalization Lemma above shows how to make all spines short initially. The constant in Lemma 2.3 is modest: the maximum spine length can be reduced to 8 by O (n log fl n) valid rotations (this is not stated in <ref> [3] </ref>, but is not difficult to prove). We call the operation of shortening the maximum spine length to eight a normalization of the tree. The three lemmas given above are the basic tools used by Guibas and Hershberger [3] to morph T 1 into T 2 by O (n 4=3+* ) <p> O (n log fl n) valid rotations (this is not stated in <ref> [3] </ref>, but is not difficult to prove). We call the operation of shortening the maximum spine length to eight a normalization of the tree. The three lemmas given above are the basic tools used by Guibas and Hershberger [3] to morph T 1 into T 2 by O (n 4=3+* ) valid rotations. Specifically, they use Lemma 2.1 to argue that if all spines are of constant length initially, then only O (n 1+* ) rotations are needed during n 2=3 iterations of the algorithm's main loop. <p> Furthermore, the intermediate stages of a morphing transformation often are illegal images, with no corresponding valid three-dimensional picture. 13 Our investigation is motivated by the need to provide some theoretical underpinnings for morphing. The work of Guibas and Hershberger <ref> [3] </ref> is a first step in this direction: it formulates a rigorous model for morphing polygons using "parallel" moves and proposes an algorithm to compute the moves required to morph one polygon to another.
Reference: [4] <author> J. F. Hughes. </author> <title> Scheduled Fourier volume morphing. </title> <booktitle> Proc. of ACM Conference on Computer Graphics, </booktitle> <pages> pages 43-46, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction "Morphing," the continuous deformation of one shape to another, is a popular theme in computer graphics <ref> [1, 4, 5, 6] </ref>. <p> Although its most prominent applications are still in the entertainment industry, there are many serious applications in industrial design [6], medical imaging <ref> [4] </ref>, and data visualization. While morphing is useful in many applications, many of the techniques employed to morph images are not fully understood.
Reference: [5] <author> J. R. Kent, W. E. Carlson, and R. E. Parent. </author> <title> Shape transformation for polyhedral objects. </title> <booktitle> Proc. of ACM Conference on Computer Graphics, </booktitle> <pages> pages 47-54, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction "Morphing," the continuous deformation of one shape to another, is a popular theme in computer graphics <ref> [1, 4, 5, 6] </ref>.
Reference: [6] <author> T. Sederberg and E. Greenwood. </author> <title> A physically based approach to 2-D shape blending. </title> <booktitle> Proc. of ACM Conference on Computer Graphics, </booktitle> <pages> pages 25-34, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction "Morphing," the continuous deformation of one shape to another, is a popular theme in computer graphics <ref> [1, 4, 5, 6] </ref>. <p> Although its most prominent applications are still in the entertainment industry, there are many serious applications in industrial design <ref> [6] </ref>, medical imaging [4], and data visualization. While morphing is useful in many applications, many of the techniques employed to morph images are not fully understood.
Reference: [7] <author> D. Sleator, R. E. Tarjan, and W. Thurston. </author> <title> Rotation distance, triangulations, and hyperbolic geometry. </title> <journal> J. AMS, </journal> <volume> 1 </volume> <pages> 647-682, </pages> <year> 1988. </year> <month> 14 </month>
Reference-contexts: In the remainder of this paper, we will focus exclusively on the tree-morphing problem, ignoring any relationship to the polygon morphing problem. 1.2 Our Results The problem of transforming one tree to another without any weight constraint has been studied before. Sleator, Tarjan, and Thurston <ref> [7] </ref> show that an n-node tree can be made isomorphic to any other n-node tree by at most 2n 6 rotations, slightly improving an earlier result by Culik and Wood [2].
References-found: 7

