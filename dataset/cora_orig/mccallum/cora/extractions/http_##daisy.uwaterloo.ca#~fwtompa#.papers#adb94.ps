URL: http://daisy.uwaterloo.ca/~fwtompa/.papers/adb94.ps
Refering-URL: http://bluebox.uwaterloo.ca/OED/trdbms.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Text Relational Database Management Systems: Harmonizing SQL and SGML  
Author: G. E. Blake, M. P. Consens, P. Kilpelainen, P. A. Larson, T. Snider, and F. W. Tompa 
Address: Waterloo, Waterloo, Ontario, Canada N2L 3G1  
Affiliation: UW Centre for the New OED and Text Research, University of  
Abstract: Combined text and relational database support is increasingly recognized as an emerging need of industry, spanning applications requiring text fields as parts of their data (e.g., for customer support) to those augmenting primary text resources by conventional relational data (e.g., for publication control). In this paper, we propose extensions to SQL that provide flexible and efficient access to structured text described by SGML. We also propose an architecture to support a text/relational database management system as a federated database environment, where component databases are accessed via "agents": SQL agents that translate standard or extended SQL queries into vendor-specific dialects, and text agents that process text sub-queries on full-text search engines.
Abstract-found: 1
Intro-found: 1
Reference: [ATA91] <author> ATA 89-9C SFQL Committee, </author> <title> "Advanced Retrieval Standard |SFQL: Structured Full-text Query Language," ATA specification 100, </title> <note> Rev 30, Version 2.2, </note> <institution> Prerelease C, Air Transport Association, </institution> <note> ATA 89-9C.SFQL V2.2/PR-C (October 1991) 84 pp. </note>
Reference-contexts: The Air Transport Association has proposed the Structured Full-text Query Language (SFQL) as an extension to SQL incorporating SGML-based formatted text types <ref> [ATA91] </ref>. More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS [Ora92]. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality [Sey92]. <p> For the purposes of the DML, an instance of a structured text field is considered to be a contiguous text string and a parse tree. Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured text fields, in particular concatenation and pattern matching <ref> [ATA91, Ora92, Sac92] </ref>. For now we will accept those extensions and propose an operator and alternative notation for structured text manipulation suitable for extending SQL. 4.1 Examples of the Proposed DML Before we explain the details of our proposed DML, we give two examples of its use.
Reference: [Bil92] <author> A. Biliris, </author> <title> "The Performance of Three Database Storage Structures for Managing Large Objects," </title> <booktitle> Proc. Sigmod 92, ACM, Sigmod Record, </booktitle> <volume> Vol. 21, No. </volume> <month> 2 (June </month> <year> 1992) </year> <month> 276-285. </month>
Reference-contexts: Alternatively, text storage has been provided by conventional systems, where long data fields are used for large objects or "blobs" <ref> [Bil92] </ref>, but operators to support text manipulation have not usually been provided and these systems do not support SGML-like structured text.
Reference: [Bla94] <author> G.E. Blake, M.P. Consens, P. Kilpelainen, P. A. Larson, T. Snider, and F.W. Tompa, </author> <title> "Text extensions to SQL," </title> <type> internal report, </type> <institution> Univ. of Waterloo Centre for the New OED and Text Research, </institution> <year> 1994. </year>
Reference-contexts: For the sake of brevity and clarity, we will describe constructs in the DDL and DML in terms of this example; formal definitions and more detailed explanations can be found elsewhere <ref> [Bla94] </ref>. 3 Data Definition Language In our example the article and biblio fields are of a new data type TEXT. Fields of this type contain structured text and have an associated grammar to describe their content. Queries involving this new data type may use this grammar. <p> req wc FROM Encyclopedia WHERE req wc &gt; 5000 AND SOME (EXPAND article INTO keywords BY SELECT nodeid FROM TEXT NODES WHERE genid = "keywords") CONTAINS "Canada"; Complete semantics for uses of the dot notation throughout the SELECT statement (including in the SELECT and FROM clauses) have also been defined <ref> [Bla94] </ref>. 5 Federated Database Architecture Potential clients of the text/relational database management system have typically relied on conventional relational databases for conventional needs. Therefore we propose not to develop a wholly new database management system, but instead to integrate commercial relational database systems and commercial full-text search engines.
Reference: [Chr94] <author> V. Christophides, S. Abiteboul, S. Cluet, and M. Scholl, </author> <title> "From Structured Documents to Novel Query Facilities," </title> <booktitle> To appear in Proc. 13th. ACM SIG-MOD Conf., </booktitle> <month> (May </month> <year> 1994). </year>
Reference-contexts: Similarly there is a recent proposal to extend an object-oriented SQL dialect to support SGML documents <ref> [Chr94] </ref>. In both these approaches, the relational model has been extended to encompass structured data of arbitrary type, and subsequently structured text has been supported as a special case.
Reference: [Gol90] <author> C. F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1990. </year>
Reference-contexts: We start with the requirement that the application Published in Proceedings of the ADB'94 Conference. program interface must be an extension of both SQL, the industry standard for relational data [ISO90], and SGML, the industry standard for structured text <ref> [Gol90, ISO86] </ref>. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems. Queries expressed in terms of the external data model are parsed, and the relational and text components identified.
Reference: [Gon87] <author> G. H. Gonnet and F. W. Tompa, </author> <title> "Mind Your Grammar: a New Approach to Modelling Text," Very Large Data Bases (VLDB), </title> <note> Vol. 13 (September 1987) pp. 339-346. </note>
Reference-contexts: An instance of a structured text field is a contiguous text string together with a parse tree <ref> [Gon87] </ref>. In order to minimize the size of the relation formed from this parse tree we wish to select nodes in the parse tree to indicate the components of the text that we wish to retain. Consider the first example above.
Reference: [ISO86] <author> International Organization for Standardization, </author> <title> International Standard 8879: Information Processing | Text and Office Systems | Standard Generalized Markup Language (SGML), </title> <booktitle> first edition | 1986-10-15(Ref. </booktitle> <volume> No. ISO 8879-1986(E)), </volume> <pages> 155 pp. </pages>
Reference-contexts: We start with the requirement that the application Published in Proceedings of the ADB'94 Conference. program interface must be an extension of both SQL, the industry standard for relational data [ISO90], and SGML, the industry standard for structured text <ref> [Gol90, ISO86] </ref>. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems. Queries expressed in terms of the external data model are parsed, and the relational and text components identified.
Reference: [ISO90] <institution> International Organization for Standardization, </institution> <note> "Information technology - Database Language SQL 2 Draft Report", ISO Committee ISO/IEC JTC 1/SC 21, </note> <year> 1990. </year>
Reference-contexts: We start with the requirement that the application Published in Proceedings of the ADB'94 Conference. program interface must be an extension of both SQL, the industry standard for relational data <ref> [ISO90] </ref>, and SGML, the industry standard for structured text [Gol90, ISO86]. The T/RDBMS can be built as a federated database system with the actual data stored and managed by standard (relational and text) data management systems.
Reference: [Lar89a] <author> P. A. Larson, </author> <title> "Relational Access to IMS Databases: Gateway Structure and Join Processing," Project report, (available from the author), </title> <booktitle> 1989. </booktitle> <pages> 13 </pages>
Reference-contexts: SQL agent: The system should not be dependent on any particular database system. The purpose of an SQL agent is to hide the specifics of the underlying database system and present a standard interface. We have already developed such agents for several database engines <ref> [Lar89a, Lar89b] </ref> and expect to develop additional ones in the near future. Each agent has a call-level interface based on Microsoft's Open Database Connectivity (ODBC) specification [Mic92]. Text agent: Similarly, the system should not be dependent on any particular text management system.
Reference: [Lar89b] <author> P. A. Larson, H. AboElFotoh, M. Dionne, and F. Wang, </author> <title> "SQL Access to VAX DBMS Databases: Strategy Generation and Query Execution for Basic SFW Queries," Project report (available from the first author), </title> <year> 1989. </year>
Reference-contexts: SQL agent: The system should not be dependent on any particular database system. The purpose of an SQL agent is to hide the specifics of the underlying database system and present a standard interface. We have already developed such agents for several database engines <ref> [Lar89a, Lar89b] </ref> and expect to develop additional ones in the near future. Each agent has a call-level interface based on Microsoft's Open Database Connectivity (ODBC) specification [Mic92]. Text agent: Similarly, the system should not be dependent on any particular text management system.
Reference: [Mar91] <author> C. C. Marshall, F. G. Halasz, R. A. Rogers, and W. C. Janssen Jr., "Aquanet: </author> <title> a Hypertext Tool to Hold Your Knowledge in Place," </title> <booktitle> Proc. 3rd ACM Conf. on Hypertext: Hypertext 91, </booktitle> <address> San Antonio (Dec. </address> <year> 1991) </year> <month> 261-275. </month>
Reference-contexts: Several approaches to text management have been proposed by others. Customized document storage management systems, including text-specific access languages, have been implemented on top of commercial relational database systems (see, for example, <ref> [Wei85, Mar91] </ref>); these systems are incapable of simultaneously supporting conventional data.
Reference: [Mic92] <author> Microsoft Corporation, </author> <title> Microsoft ODBC Application Programmer's Guide, </title> <publisher> Microsoft Corporation, </publisher> <year> 1992. </year>
Reference-contexts: We have already developed such agents for several database engines [Lar89a, Lar89b] and expect to develop additional ones in the near future. Each agent has a call-level interface based on Microsoft's Open Database Connectivity (ODBC) specification <ref> [Mic92] </ref>. Text agent: Similarly, the system should not be dependent on any particular text management system. Text agents providing a common interface to different text systems are being developed. However, no widely accepted, common interface exists in this area.
Reference: [Ora92] <author> Oracle Corporation, </author> <type> SQL*TextRetrieval Version 2 Technical Overview, </type> <institution> Oracle Corporation, </institution> <year> 1992. </year> <pages> 45 pp. </pages>
Reference-contexts: More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS <ref> [Ora92] </ref>. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality [Sey92]. Although each system provides a mechanism to assemble larger text units from the constituents, this is not provided within SQL. Thus, for example, such larger units cannot be presented as fields within an SQL view. <p> For the purposes of the DML, an instance of a structured text field is considered to be a contiguous text string and a parse tree. Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured text fields, in particular concatenation and pattern matching <ref> [ATA91, Ora92, Sac92] </ref>. For now we will accept those extensions and propose an operator and alternative notation for structured text manipulation suitable for extending SQL. 4.1 Examples of the Proposed DML Before we explain the details of our proposed DML, we give two examples of its use.
Reference: [Sac92] <author> R. Sacks-Davis, A. Kent, K. Ramamohanarao, J. Thom, , and J. Zobel, </author> <title> "Atlas: a nested relational database system for text applications", </title> <type> Technical Report CITRI/TR-92-52, </type> <institution> Collaborative Information Technology Research, </institution> <address> Vic-toria, Australia, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: In order to maintain structured text in a single relational field, researchers at Australia's Collaborative Information Technology Research Institute have designed and implemented a nested relational database system (Atlas) and an extended SQL language to provide text support <ref> [Sac92] </ref>. Similarly there is a recent proposal to extend an object-oriented SQL dialect to support SGML documents [Chr94]. In both these approaches, the relational model has been extended to encompass structured data of arbitrary type, and subsequently structured text has been supported as a special case. <p> For the purposes of the DML, an instance of a structured text field is considered to be a contiguous text string and a parse tree. Previous authors have proposed extensions to traditional SQL operators to include operations on unstructured text fields, in particular concatenation and pattern matching <ref> [ATA91, Ora92, Sac92] </ref>. For now we will accept those extensions and propose an operator and alternative notation for structured text manipulation suitable for extending SQL. 4.1 Examples of the Proposed DML Before we explain the details of our proposed DML, we give two examples of its use.
Reference: [Sal92] <author> A. Salminen and F.W. Tompa. </author> <title> "PAT Expressions: an algebra for text search," </title> <booktitle> Papers in Computational Lexicography: COMPLEX '92, Proc. 2nd Int. Conf. on Computational Lexicography (F. </booktitle> <editor> Kiefer, G. Kiss, J. Pajzs ed.), </editor> <publisher> Linguistics Inst., Hungarian Academy of Science, </publisher> <month> Budapest (October </month> <year> 1992), </year> <pages> 309-332. </pages>
Reference-contexts: However, no widely accepted, common interface exists in this area. We are currently implementing two layers between the central component and flat-text engines, one that converts our grammar-based queries into a form based on simpler "regions" or "zones" (such as those supported by PAT <ref> [Sal92] </ref>), and a second one that eliminates dependence on any structural capabilities being provided by the text search system. With this three-layer approach to text agents, the system will be compatible with text systems having varying degrees of obliviousness to structure.
Reference: [Sey92] <author> Seybold Publications, </author> <title> "IDI Pursues Document Management," </title> <journal> Report on Publishing Systems, </journal> <volume> Vol. 21, No. 16, </volume> <month> May </month> <year> 1992. </year>
Reference-contexts: More recently, Oracle Corporation's SQL*TextRetrieval Version 2 provides a text retrieval product, supported by inverted indexing and a thesaurus capability, to be used in conjunction with the Oracle DBMS [Ora92]. Similarly, IDI's BASISplus supports structured full-text retrieval in conjunction with relational database functionality <ref> [Sey92] </ref>. Although each system provides a mechanism to assemble larger text units from the constituents, this is not provided within SQL. Thus, for example, such larger units cannot be presented as fields within an SQL view.
Reference: [Wei85] <author> E.S.C. Weiner. </author> <title> "The New OED: Problems in the Computerization of a Dictionary," </title> <journal> University Computing, </journal> <volume> Vol. </volume> <month> 7 </month> <year> (1985) </year> <month> 66-71. </month>
Reference-contexts: Several approaches to text management have been proposed by others. Customized document storage management systems, including text-specific access languages, have been implemented on top of commercial relational database systems (see, for example, <ref> [Wei85, Mar91] </ref>); these systems are incapable of simultaneously supporting conventional data.
Reference: [Zlo75] <author> M.M. Zloof. "Query-by-Example: </author> <title> Operations on the Transitive Closure," IBM Research Report RC 5526, </title> <address> Yorktown Heights, N.Y., </address> <year> 1975. </year> <note> Acknowledgements This work has benefited from discussions with Tim Bray, </note> <author> Gordon Cormack, and Gaston Gonnet. </author> <title> The financial assistance of the University of Waterloo, the Natural Sciences and Engineering Research Council of Canada, and Open Text Corporation are gratefully acknowledged. This article was processed using the L a T E X macro package with LLNCS style 14 </title>
References-found: 18

