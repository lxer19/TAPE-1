URL: http://www.eecs.umich.edu/techreports/cse/1993/CSE-TR-163-93.ps.gz
Refering-URL: http://www.eecs.umich.edu/home/techreports/cse93.html
Root-URL: http://www.eecs.umich.edu
Email: e-mail: rundenst@eecs.umich.edu  
Phone: telephone: (313) 936-2971 fax: (313) 763-1503  
Title: AN INFORMATION MODEL FOR GENOME MAP REPRESENTATION AND ASSEMBLY 1  
Author: A. J. Lee E. A. Rundensteiner S. Thomas flfl and S. Lafortune 
Keyword: Ordering abstraction hierarchy, interval inferencing, relative orientation, scientific databases, object-oriented databases.  
Address: Ann Arbor Ann Arbor, MI 48109-2122  Ann Arbor, MI 48109-0674  
Affiliation: Dept. of Electrical Eng. and Computer Science University of Michigan,  University of Michigan Medical Center Human Genome Center 2570C MSRB II  
Abstract: In this paper, we focus on some of the scientific data management problems faced by the Human Genome Project. In particular, we describe the design of an information model for the physical contig map assembly task. First, we present an object-oriented data schema that captures scientific genomic data and their relationships required for this task, including the raw experimental data and the derived data gotten through scientific analysis. Our genome object representation efficiently supports the maintenance of unordered, partially ordered, and completely ordered sets of data based on an overlap refinement hierarchy of interval relationships. We describe operators we have developed to automate analysis steps currently performed manually by the scientists. Examples are operators for inverting local frames of orientation, for combining information in different frames into another more informative one, and for inferring additional overlap information using transitivity rules. In conclusion, we provide a walk-through example that demonstrates how our approach can be used to effectively support some of the experiments currently performed by the scientists at the Michigan Human Genome Center. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, J. F., </author> <title> "Maintaining Knowledge About Temporal Intervals", </title> <journal> CACM, November 1983, </journal> <volume> Volume 26, </volume> <pages> pp 832-843. </pages>
Reference-contexts: Thus, we find the work in the temporal reasoning domain relevant to our project. Temporal reasoning deals with events and relationships between events, which are intervals with variable or unknown starting and ending times. Allen <ref> [1] </ref> lists all possible relationships between temporal intervals assuming complete information about their durations, and presents a transitivity table for these relationships. In the temporal domain there is a simple global orientation. Once we know event A happened before event B, the ordering is global. <p> The abstraction hierarchy naturally describes the amount of knowledge we know about the endpoint relationships of the two intervals. Letovsky and Berlyn [12] use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept <ref> [1] </ref> and the `window' idea [12] to solve the DNA fragment ordering problem. Guidi and Roderick [9] survey issues required of intelligent systems to support research efforts in genomics. <p> Prior work in ordering of intervals has focused on temporal ordering <ref> [1, 6] </ref>. While some concepts from temporal ordering can apply to DNA fragment ordering, there are several significant differences: * First, in genomic applications, the determination of the equality of endpoint relationships between DNA fragments is generally too costly.
Reference: [2] <author> Carrano, A. V. et al., </author> <title> "Constructing Chromosome- And Region-Specific Cosmid Maps Of The Human Genome", </title> <journal> Genome, </journal> <volume> 31, </volume> <pages> pp. 1059-1065, </pages> <year> 1989. </year>
Reference-contexts: Each gene encodes information about how and when to form the proteins that govern the daily functioning of the human body, and ranges in size from 2,000 to 2 million base pairs long. The physical mapping process <ref> [2] </ref> first separates the chromosomes from the nucleus, then breaks them up into smaller pieces, which are inserted into the genome of lower organisms, e.g., bacteria, where they can be replicated rapidly and in large amounts. The resulting DNA fragments (clones) are then used for future experiments.
Reference: [3] <author> Cattell, R. G. </author> <title> G.,"Object data management : object-oriented and extended relational database systems", </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year>
Reference-contexts: this paper, we present an information model that captures the genomic objects and interrelationships for supporting the physical map assembly task, which range from raw experimental data over analytically derived data up to metadata describing, for instance, the data sources. 1 Our model is developed using object-oriented database (OODB) technology <ref> [3] </ref> since the lat-ter provides powerful modeling constructs for capturing such complex genomic information naturally and efficiently. We are interested in creating a contig map, assembling overlapping DNA fragments into a contiguous stretch.
Reference: [4] <author> Cormen, T. H., Leiserson, F. E., and Rivest, R. L., </author> <booktitle> "Introduction To Algorithms", </booktitle> <pages> pp 469-476, </pages> <year> 1991. </year>
Reference: [5] <author> Evans, G. A., </author> <title> "Combinatoric Strategies For Genome Mapping", </title> <journal> BioEssays, </journal> <volume> Vol. 13, No. 1, </volume> <month> January </month> <year> 1991. </year>
Reference: [6] <author> Freksa, C., </author> <title> "Temporal Reasoning Based On Semi-Intervals", </title> <booktitle> Artificial Intelligence 54, </booktitle> <pages> pp 199-227, </pages> <year> 1992. </year>
Reference-contexts: Prior work in ordering of intervals has focused on temporal ordering <ref> [1, 6] </ref>. While some concepts from temporal ordering can apply to DNA fragment ordering, there are several significant differences: * First, in genomic applications, the determination of the equality of endpoint relationships between DNA fragments is generally too costly.
Reference: [7] <author> French, J. C. Jones, A. K., and Pfaltz, J. L., </author> <title> "Scientific Database Management", </title> <institution> University of Virginia, </institution> <type> Technical Report 90-21, </type> <institution> Dept. of Computer Science, </institution> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: For example, just to record the 3 billion nucleotides of the human genome will require nearly 1 million pages of printed text <ref> [7] </ref>." This increasing volume of data provides diverse challenges for computer scientists and system engineers. In short, the scope and complexity of the Human Genome Project is such that previously acceptable manual methods are no longer suitable.
Reference: [8] <author> Frenkel, K. A., </author> <title> "The Human Genome Project and Informatics", </title> <journal> CACM, Nov. </journal> <volume> 91, Vol. 34, No. 11, </volume> <pages> pp 41-51. </pages>
Reference-contexts: 6 gives an overview of the system architecture, Section 7 goes through a comprehensive example, and Section 8 discusses conclusions and future work. 2 2 RELATED WORK Traditional databases do not capture well the complexity of scientific data; therefore we propose to design a genome object model using OODB technology <ref> [8] </ref>. This technology, which has emerged recently, provides powerful modeling constructs capable of capturing complex information. In this paper, we identify the modeling requirements of genome data as needed for the map assembly task, and then explore how these can be satisfied by OODB modeling. <p> In this paper, we identify the modeling requirements of genome data as needed for the map assembly task, and then explore how these can be satisfied by OODB modeling. While relational databases are used by most genome projects, Goodman <ref> [8] </ref> also advocates utilizing OODB technology in place of more traditional database technology for the informatics support of genome mapping projects. The focus of Goodman's work [8] is on genetic rather than physical map construction. <p> While relational databases are used by most genome projects, Goodman <ref> [8] </ref> also advocates utilizing OODB technology in place of more traditional database technology for the informatics support of genome mapping projects. The focus of Goodman's work [8] is on genetic rather than physical map construction. In [10], Honda et al. describe an object model for genome data that covers several levels of resolution, including genome maps, DNA sequences, and gene sequences.
Reference: [9] <author> Guidi, J. N. and T. H. Roderick, </author> <title> "Inference of Order in Genetic Systems," </title> <booktitle> The First Internat. Conf. on Intelligent Systems for Molecular Biology, </booktitle> <month> July </month> <year> 1993. </year>
Reference-contexts: Letovsky and Berlyn [12] use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [12] to solve the DNA fragment ordering problem. Guidi and Roderick <ref> [9] </ref> survey issues required of intelligent systems to support research efforts in genomics. In particular, they focus on inference of order, including ambiguity and uncertainty, as one of the more important issues that need to be addressed.
Reference: [10] <author> Honda, S., Parrot, N. W., Smith, R., and Lawrence, C., </author> <title> "An Object Model for Genome Information at All Levels of Resolution," </title> <booktitle> Proc. of 26th Annual Hawaii Internat. Conf. on System Sciences, </booktitle> <volume> Vol. I, </volume> <pages> pp. 564 - 573, </pages> <year> 1993. </year>
Reference-contexts: While relational databases are used by most genome projects, Goodman [8] also advocates utilizing OODB technology in place of more traditional database technology for the informatics support of genome mapping projects. The focus of Goodman's work [8] is on genetic rather than physical map construction. In <ref> [10] </ref>, Honda et al. describe an object model for genome data that covers several levels of resolution, including genome maps, DNA sequences, and gene sequences. In genomics, we can view both DNA fragments and probes as intervals, which have neither precise location information nor known distal extent. <p> modeling complex genomic data and their interrelationships, its computational completeness allowing us to directly operate on the persistent data structures and thus avoiding the impedance mismatch problem, and lastly its support for genome objects to play different roles in the database and to be modeled at varying levels of details <ref> [10] </ref>. 8.2 Future Work In order to support the full range of capabilities required by the Human Genome Project, there are many areas that need to be further investigated.
Reference: [11] <author> Lee, A. J., Rundensteiner, E. A., Thomas, S., and Lafortune S., </author> <title> "An Information Model for Genome Map Representation and Assembly." </title> <booktitle> to appear in ACM 2nd Int. Conf on Information and Knowledge Management (CIKM'93), </booktitle> <month> Nov. </month> <year> 1993. </year>
Reference: [12] <author> Letovsky, S. and Berlyn, M. B., "CPROP: </author> <title> A Rule-Based Program For Constructing Genetic Maps", </title> <booktitle> Genomics 12, </booktitle> <pages> pp 435-446, </pages> <year> 1992. </year>
Reference-contexts: We have developed an abstraction hierarchy of ordering relationships for the genomic domain which accounts for these characteristics. The abstraction hierarchy naturally describes the amount of knowledge we know about the endpoint relationships of the two intervals. Letovsky and Berlyn <ref> [12] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [12] to solve the DNA fragment ordering problem. <p> Letovsky and Berlyn <ref> [12] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [12] to solve the DNA fragment ordering problem. Guidi and Roderick [9] survey issues required of intelligent systems to support research efforts in genomics. In particular, they focus on inference of order, including ambiguity and uncertainty, as one of the more important issues that need to be addressed. <p> As shown in automatically tell us what is the true global orientation <ref> [12] </ref>, which could be either "A before B before C" or "C before B before A". or C B A We express an ordering relationship between two DNA fragments as a pairwise constraint between fragments (as typically done in constraint propagation systems). <p> This grouping construct corresponds to the local orientation frame (LOF) introduced above (Figure 5.b). An ordering relationship is now said to belong to a local orientation frame. For instance, we would describe the situation in frame is similar in spirit to the orientation windows introduced in <ref> [12] </ref> for orderings between points. B D C D D LOF -i (a) Graph Representation of Overlap Constraints. (b) Graph Representation of LOFs. <p> At a minimum, this requires the presence of the same pair of objects (A,B) in the two LOFs with relationship constraints between them expressing orientation rather than just overlap information. For ordering relationships between points <ref> [12] </ref>, we simply would need to identify one pair of points (A,B) that belongs to both LOFs and that has an ordering relationship in each LOF, i.e., (A before B) or (B before A). See Figure 9.a for an example demonstrating this situation.
Reference: [13] <author> Pecherer, R., </author> <title> "Contig Graph Tool: A Graphical Interface For Contig Physical Map Assembly", </title> <booktitle> Hawaii Int. Conf. on System Sciences, </booktitle> <volume> Vol. I, </volume> <pages> pp. 544-553, </pages> <year> 1993. </year> <title> 22 NC&gt;(A,B) not-contained&gt; B A not-contained&lt; B A not-contained2 A ND&lt;(A,B) not-disjoint&lt; A ND&gt;(A,B) not-disjoint&gt; B C(B,A) contains A C(A,B) contains O(A,B) B overlaps </title>
References-found: 13

