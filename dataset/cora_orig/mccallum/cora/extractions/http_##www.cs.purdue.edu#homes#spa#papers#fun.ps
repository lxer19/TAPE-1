URL: http://www.cs.purdue.edu/homes/spa/papers/fun.ps
Refering-URL: http://www.cs.purdue.edu/homes/spa/publications.html
Root-URL: http://www.cs.purdue.edu
Title: On the Collapse of the q-Gram Filtration  
Author: E. SUTINEN W. SZPANKOWSKI 
Keyword: Algorithm Analysis, Approximate Pattern Matching.  
Address: Helsinki, Finland  U.S.A.  
Affiliation: University of  Purdue University,  
Abstract: In the approximate pattern matching problem, the text area to be searched for an occurrence of a pattern can be pruned by applying a filtration condition. A q-gram based filtration condition defines potential text areas in terms of pattern q-grams, i.e., strings of length q. A text area will be checked by an accurate method only if the set of the q-grams in the text area satisfies a certain condition. One hopes that the filtration limits the number of checks to a minimum, thus making the algorithm quite efficient. However, computer experiments show that the filtration method works fine for cases when the allowed error level k is relatively small compared to the pattern length, but loses its efficiency quite sharply with an increasing k. This is a phase transition phenomenon that is quite often observed in nature. In this paper, we present a theoretical explanation for this phenomenon which will excuse us to introduce advanced mathematical analysis based on certain languages, correlation polynomials, generating functions and complex analysis. It is our view that nothing can be more exciting and rewarding than finding a theoretical justification for an abrupt manifestation of nature. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. F. Altschul, W. Gish, W. Miller, E. W. Myers, and D. J. Lipman: </author> <title> Basic local alignment search tool. </title> <journal> Journal of Molecular Biology, </journal> <volume> 215, 403410, </volume> <year> 1990. </year>
Reference-contexts: distance or square error distance (e.g., for image compression; cf. [11]). fl This work has been supported NSF Grants NCR-9206315 and NCR-9415491, NATO Collaborative Grant CRG.950060, and Grant 22586 from Academy of Finland. 1 2 Fun with Algorithms Approximate pattern matching algorithms are typically used on long texts, like biosequences <ref> [1] </ref>, hence it is crucial to find time-efficient solutions to the problem. The basic solutions, based on dynamic programming, work in O (kn) time [4, 6, 10, 18]. Because of the text size n, this is usually unacceptable.
Reference: [2] <author> M. Atallah, Y. Genin, and W. Szpankowski: </author> <title> A pattern matching approach to image compression. </title> <booktitle> In: Proc. International Conference on Image Processing, </booktitle> <volume> vol. II. 349352, </volume> <pages> Lausanne, </pages> <year> 1996. </year>
Reference: [3] <author> W. Chang and T. Marr: </author> <title> Approximate string matching and local similarity. In: Combinatorial Pattern Matching, </title> <booktitle> Proceedings of 5th Annual Symposium (ed. </booktitle> <editor> M. Crochemore and D. Gusfield), </editor> <booktitle> Lecture Notes in Computer Science 807, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1994, </year> <month> 259273. </month>
Reference-contexts: If the sets share a sufficient amount of common q-grams, the corresponding text area will be marked as potential. The diverse techniques of this approach <ref> [3, 9, 15, 16, 17] </ref> belong to the family of the q-gram filtration algorithms.
Reference: [4] <author> M. Crochemore and W. Rytter, </author> <title> Text Algorithms, </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <year> 1995. </year> <title> 16 Fun with Algorithms </title>
Reference-contexts: The basic solutions, based on dynamic programming, work in O (kn) time <ref> [4, 6, 10, 18] </ref>. Because of the text size n, this is usually unacceptable. More efficient algorithms work in two phases: the first phase, called filtration, finds potential matches, which are later verified by the second phase.
Reference: [5] <author> A. Dembo and S. Karlin: </author> <title> Poisson Approximations for r-Scan Processes. </title> <journal> The Annals of Applied Probability, </journal> <volume> 2, </volume> <pages> 329-357, </pages> <year> 1992. </year>
Reference-contexts: Section 5). We are able to compute exact and asymptotic probability of having a given number of q-grams in a text-window of size m. This extends recent findings of Regnier and Szpankowski [13, 14], and is a contribution to the so called scan statistics <ref> [5, 12] </ref> (indeed, we measure a property of the text in a sliding window). On the Collapse of the q-Gram Filtration 3 2 The Formula for the Filtration Efficiency The q-gram based approximate pattern matching algorithms have two phases. First, an algorithm filters the prominent text areas with potential occurrences. <p> Actually, our ultimate goal is to derive the exact distribution of U n , and even more. Observe that we can view the evaluation of U n as a problem of scan statistics (cf. <ref> [5, 12] </ref>): More precisely, consider windows of size m that move along the text of length n. At any position of such a window, we assess whether a given property occurs or not.
Reference: [6] <author> Z. Galil, and R. Giancarlo: </author> <title> Data structures and algorithms for approximate string matching, </title> <journal> Journal of Complexity, </journal> <volume> 4, </volume> <month> 33-72 </month> <year> (1988). </year>
Reference-contexts: The basic solutions, based on dynamic programming, work in O (kn) time <ref> [4, 6, 10, 18] </ref>. Because of the text size n, this is usually unacceptable. More efficient algorithms work in two phases: the first phase, called filtration, finds potential matches, which are later verified by the second phase.
Reference: [7] <author> L. Guibas and A. W. Odlyzko: </author> <title> String Overlaps, Pattern Matching, and Non-transitive Games. </title> <journal> J. Combin.Theory Ser. A, </journal> <volume> 30, </volume> <pages> 183-208, </pages> <year> 1981. </year>
Reference-contexts: The method proposed in [13, 14] (se also <ref> [7] </ref>) is based on several techniques, such as * employing an autocorrelation set of a pattern (or correlation sets for a col lection of patterns) to determine how the pattern overlaps with itself; * defining languages for strings which satisfy certain conditions; and On the Collapse of the q-Gram Filtration 7
Reference: [8] <author> P. Jacquet and W. Szpankowski: </author> <title> Asymptotic behavior of the Lempel-Ziv parsing scheme and digital search trees, </title> <journal> Theoretical Computer Science, </journal> <volume> 144, 161197, </volume> <year> 1995. </year>
Reference: [9] <author> P. Jokinen and E. Ukkonen: </author> <title> Two algorithms for approximate string matching in static texts. </title> <booktitle> In: Proc. Mathematical Foundations of Computer Science 1991 (ed. </booktitle> <editor> A. Tarlecki), </editor> <booktitle> Lecture Notes in Computer Science 520, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991, </year> <month> 240248. </month>
Reference-contexts: If the sets share a sufficient amount of common q-grams, the corresponding text area will be marked as potential. The diverse techniques of this approach <ref> [3, 9, 15, 16, 17] </ref> belong to the family of the q-gram filtration algorithms. <p> Let us consider a pattern P = P [1 : : : m] and a text T = T [1 : : : n] in an alphabet of size c. Let q be an integer and k an error level. The filtration condition of the Jokinen-Ukkonen q-gram method <ref> [9] </ref> is the following: Lemma 1 (Jokinen-Ukkonen 1991) Let an occurrence of P with at most k differences end at position j of text T . Then at least m + 1 (k + 1)q q-grams of P occur in T [j m + 1 : : : j].
Reference: [10] <author> G. Landau and U. Vishkin: </author> <title> Fast string matching with k differences. </title> <journal> Journal of Computer and System Sciences 37 (1988), </journal> <volume> 6378. </volume>
Reference-contexts: The basic solutions, based on dynamic programming, work in O (kn) time <ref> [4, 6, 10, 18] </ref>. Because of the text size n, this is usually unacceptable. More efficient algorithms work in two phases: the first phase, called filtration, finds potential matches, which are later verified by the second phase.
Reference: [11] <author> T. uczak and W. Szpankowski: </author> <title> A suboptimal lossy data compression based on approximate pattern matching. </title> <journal> IEEE Trans. Information Theory, </journal> <volume> 43, 14391451, </volume> <year> 1997. </year>
Reference-contexts: A substring P 0 of T is a k-approximate match of P if P 0 can be transformed to P with at most k errors which might be interpreted as edit operations (insertions, deletions, or changes) or Hamming distance or square error distance (e.g., for image compression; cf. <ref> [11] </ref>). fl This work has been supported NSF Grants NCR-9206315 and NCR-9415491, NATO Collaborative Grant CRG.950060, and Grant 22586 from Academy of Finland. 1 2 Fun with Algorithms Approximate pattern matching algorithms are typically used on long texts, like biosequences [1], hence it is crucial to find time-efficient solutions to the
Reference: [12] <author> J. Naus: </author> <title> Approximates of distributions of scan statistics. </title> <journal> J. Amer. Statist. Assoc., </journal> <volume> 77, </volume> <pages> 177-183, </pages> <year> 1982. </year>
Reference-contexts: Section 5). We are able to compute exact and asymptotic probability of having a given number of q-grams in a text-window of size m. This extends recent findings of Regnier and Szpankowski [13, 14], and is a contribution to the so called scan statistics <ref> [5, 12] </ref> (indeed, we measure a property of the text in a sliding window). On the Collapse of the q-Gram Filtration 3 2 The Formula for the Filtration Efficiency The q-gram based approximate pattern matching algorithms have two phases. First, an algorithm filters the prominent text areas with potential occurrences. <p> Actually, our ultimate goal is to derive the exact distribution of U n , and even more. Observe that we can view the evaluation of U n as a problem of scan statistics (cf. <ref> [5, 12] </ref>): More precisely, consider windows of size m that move along the text of length n. At any position of such a window, we assess whether a given property occurs or not.
Reference: [13] <author> M. Regnier and W. Szpankowski: </author> <title> On the approximate pattern occurrences in a text. </title> <booktitle> In: Proc. Compression and Complexity of SEQUENCE'97, </booktitle> <month> Positano </month> <year> 1997. </year>
Reference-contexts: Section 5). We are able to compute exact and asymptotic probability of having a given number of q-grams in a text-window of size m. This extends recent findings of Regnier and Szpankowski <ref> [13, 14] </ref>, and is a contribution to the so called scan statistics [5, 12] (indeed, we measure a property of the text in a sliding window). <p> In this section, following Regnier and Szpankowski <ref> [13, 14] </ref>, we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from [13, 14] to assess U n . <p> In this section, following Regnier and Szpankowski <ref> [13, 14] </ref>, we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from [13, 14] to assess U n . The method proposed in [13, 14] (se also [7]) is based on several techniques, such as * employing an autocorrelation set of a pattern (or correlation sets for a col lection of patterns) to determine how the pattern overlaps with itself; * defining languages <p> we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from <ref> [13, 14] </ref> to assess U n . The method proposed in [13, 14] (se also [7]) is based on several techniques, such as * employing an autocorrelation set of a pattern (or correlation sets for a col lection of patterns) to determine how the pattern overlaps with itself; * defining languages for strings which satisfy certain conditions; and On the Collapse of <p> The results are based on applying the correlation matrix. Theorem 1 Let H be a given set of patterns of length m, and let T be a random text of length n generated according to the Bernoulli model (see <ref> [13] </ref> for an extension to the Markov model). <p> An analysis of U n is not trivial due to strong statistical dependency between m consecutive positions of the sliding window. To analyze the above posed problem we need to extend the approach of Regnier and Szpankowski <ref> [13, 14] </ref> to evaluate the number of text windows (not text positions) which include a certain amount (not just one) occurrences from a given set of q-grams.
Reference: [14] <author> M. Regnier and W. Szpankowski: </author> <title> On pattern frequency occurrences in a Markovian sequence. </title> <journal> Algorithmica, </journal> <note> to appear; also Purdue University CSD-TR-96-043, 1996 available at http://www.cs.purdue.edu/people/spa. </note>
Reference-contexts: Section 5). We are able to compute exact and asymptotic probability of having a given number of q-grams in a text-window of size m. This extends recent findings of Regnier and Szpankowski <ref> [13, 14] </ref>, and is a contribution to the so called scan statistics [5, 12] (indeed, we measure a property of the text in a sliding window). <p> In this section, following Regnier and Szpankowski <ref> [13, 14] </ref>, we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from [13, 14] to assess U n . <p> In this section, following Regnier and Szpankowski <ref> [13, 14] </ref>, we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from [13, 14] to assess U n . The method proposed in [13, 14] (se also [7]) is based on several techniques, such as * employing an autocorrelation set of a pattern (or correlation sets for a col lection of patterns) to determine how the pattern overlaps with itself; * defining languages <p> we provide general approach to analyze the number of approximate pattern occurrence O n (in particular, we estimate here the numerator E [O n ] appearing in the efficiency definition (1).) In the next section, we extend results from <ref> [13, 14] </ref> to assess U n . The method proposed in [13, 14] (se also [7]) is based on several techniques, such as * employing an autocorrelation set of a pattern (or correlation sets for a col lection of patterns) to determine how the pattern overlaps with itself; * defining languages for strings which satisfy certain conditions; and On the Collapse of <p> The corresponding results for a single pattern P are obtained by choosing H = fP g. We are now ready to state the central result of Regnier and Szpankowski <ref> [14] </ref>. The results are based on applying the correlation matrix. Theorem 1 Let H be a given set of patterns of length m, and let T be a random text of length n generated according to the Bernoulli model (see [13] for an extension to the Markov model). <p> An analysis of U n is not trivial due to strong statistical dependency between m consecutive positions of the sliding window. To analyze the above posed problem we need to extend the approach of Regnier and Szpankowski <ref> [13, 14] </ref> to evaluate the number of text windows (not text positions) which include a certain amount (not just one) occurrences from a given set of q-grams.
Reference: [15] <author> E. Sutinen and J. Tarhio: </author> <title> Filtration with q-samples in approximate string matching. </title> <booktitle> In: Proc. 7th Symposium on Combinatorial Pattern Matching CPM '96 (ed. </booktitle> <editor> D. Hirschberg, G. Myers), </editor> <booktitle> Lecture Notes in Computer Science 1075, </booktitle> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1996, </year> <month> 5063. </month>
Reference-contexts: If the sets share a sufficient amount of common q-grams, the corresponding text area will be marked as potential. The diverse techniques of this approach <ref> [3, 9, 15, 16, 17] </ref> belong to the family of the q-gram filtration algorithms.
Reference: [16] <author> E. Sutinen and J. Tarhio: </author> <title> On using q-gram locations in approximate string matching. </title> <booktitle> In: Proc. 3rd Annual European Symposium on Algorithms ESA '95 (ed. P. Spirakis), Lecture Notes in Computer Science 979, </booktitle> <publisher> Springer, </publisher> <address> Ber-lin, </address> <year> 1995, </year> <note> 327340. On the Collapse of the q-Gram Filtration 17 </note>
Reference-contexts: If the sets share a sufficient amount of common q-grams, the corresponding text area will be marked as potential. The diverse techniques of this approach <ref> [3, 9, 15, 16, 17] </ref> belong to the family of the q-gram filtration algorithms.
Reference: [17] <author> T. Takaoka: </author> <title> Approximate pattern matching with samples. </title> <booktitle> Proceedings of ISAAC '94, Lecture Notes in Computer Science 834, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1994, </year> <month> 234242. </month>
Reference-contexts: If the sets share a sufficient amount of common q-grams, the corresponding text area will be marked as potential. The diverse techniques of this approach <ref> [3, 9, 15, 16, 17] </ref> belong to the family of the q-gram filtration algorithms.
Reference: [18] <author> E. Ukkonen: </author> <title> Finding approximate patterns in strings. </title> <note> Journal of Algorithms 6 (1985), 132137. </note>
Reference-contexts: The basic solutions, based on dynamic programming, work in O (kn) time <ref> [4, 6, 10, 18] </ref>. Because of the text size n, this is usually unacceptable. More efficient algorithms work in two phases: the first phase, called filtration, finds potential matches, which are later verified by the second phase.
References-found: 18

