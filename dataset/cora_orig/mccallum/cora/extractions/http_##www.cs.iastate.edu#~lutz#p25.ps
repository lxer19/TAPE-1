URL: http://www.cs.iastate.edu/~lutz/p25.ps
Refering-URL: http://www.cs.iastate.edu/~lutz/papers.html
Root-URL: http://www.cs.iastate.edu
Title: A Note on Independent Random Oracles  
Author: Jack H. Lutz 
Address: Ames, IA 50011  
Affiliation: Department of Computer Science Iowa State University  
Abstract: It is shown that P(A) " P(B) = BPP holds for every algorithmically random oracle A B. This result extends the corresponding "probability one" characterization of Ambos-Spies (1986) and Kurtz (1987). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Ambos-Spies, </author> <title> Randomness, relativizations, and polynomial reducibilities, </title> <booktitle> Proceedings of the First Structure in Complexity Theory Conference, </booktitle> <year> 1986, </year> <pages> pp. 23-34. </pages>
Reference-contexts: Following (1.1), Ambos-Spies <ref> [1] </ref> and Kurtz [7] gave the probability one independent oracle characterization Pr A;B [P (A) " P (B) = BPP] = 1; (1:4) where Pr A;B [E] denotes the probability that event E occurs when the languages A; B f0; 1g fl are chosen independently according to the uniform distribution. <p> We have now shown that G is a constructive null cover of fA Bg, whence A B is not random. 2 4 Open Question Our independent random oracle characterization extends the probability one oracle characterization (1.4) of Ambos-Spies <ref> [1] </ref> and Kurtz [7]. This extension is analogous to that 5 from (1.1) to (1.3). However, our proof is not strong enough to give a result analogous to (1.2).
Reference: [2] <author> C. H. Bennett and J. Gill, </author> <title> Relative to a random oracle A, P A 6= NP A 6= co-NP A with probability 1, </title> <journal> SIAM Journal on Computing 10 (1981), </journal> <pages> pp. 96-113. </pages>
Reference: [3] <author> G. J. Chaitin, </author> <title> A theory of program size formally identical to information theory, </title> <journal> Journal of the Association for Computing Machinery 22 (1975), </journal> <pages> pp. 329-340. </pages>
Reference-contexts: Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin [8], Schnorr [16], Chaitin <ref> [3, 4] </ref>, Solovay [18], and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr
Reference: [4] <author> G. J. Chaitin, </author> <title> Incompleteness theorems for random reals, </title> <booktitle> Advances in Applied Mathematics 8 (1987), </booktitle> <pages> pp. 119-146. </pages>
Reference-contexts: Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin [8], Schnorr [16], Chaitin <ref> [3, 4] </ref>, Solovay [18], and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr
Reference: [5] <author> J. Gill, </author> <title> Computational complexity of probabilistic Turing machines, </title> <journal> SIAM Journal on Computing 6 (1977), </journal> <pages> pp. 675-695. </pages>
Reference-contexts: If A and B are independent random languages, it is easy to see that A; B 2 RAND. However, the converse does not hold. For example, A A is not random, even if A is random. The class BPP, first defined by Gill <ref> [5] </ref>, consists of those decision problems A for which there exist a polynomial time-bounded probabilistic Turing machine M and a constant ff &gt; 1 2 such that Pr [M accepts x] &gt; ff for all x 2 A and Pr [M rejects x] &gt; ff for all x 62 A.
Reference: [6] <author> A. N. Kolmogorov, Grundbegriffe der Wahrscheinlichkeitsrechnung, Berlin, </author> <year> 1933. </year>
Reference-contexts: We will show that G is a constructive null cover of the singleton set fA Bg. To see that G satisfies the covering condition, fix k 2 N. Since D 62 BPP, (1.1) and the Kolmogorov <ref> [6] </ref> zero-one law tell us that Pr E [L (M E b ) = D] = 0. It follows that there exists some n 2 N such that the event E n = fE j L (M E has probability Pr (E n ) 2 k .
Reference: [7] <author> S. Kurtz, </author> <title> A note on randomized polynomial time, </title> <journal> SIAM Journal on Computing 16 (1987), </journal> <pages> pp. 852-853. </pages>
Reference-contexts: Following (1.1), Ambos-Spies [1] and Kurtz <ref> [7] </ref> gave the probability one independent oracle characterization Pr A;B [P (A) " P (B) = BPP] = 1; (1:4) where Pr A;B [E] denotes the probability that event E occurs when the languages A; B f0; 1g fl are chosen independently according to the uniform distribution. <p> We have now shown that G is a constructive null cover of fA Bg, whence A B is not random. 2 4 Open Question Our independent random oracle characterization extends the probability one oracle characterization (1.4) of Ambos-Spies [1] and Kurtz <ref> [7] </ref>. This extension is analogous to that 5 from (1.1) to (1.3). However, our proof is not strong enough to give a result analogous to (1.2). We thus ask the following question: Does the independent pseudorandom oracle characterization (8A B 2 RAND (pspace)) P (A) " P (B) = BPP hold?
Reference: [8] <author> L. A. Levin, </author> <title> On the notion of a random sequence, </title> <journal> Soviet Mathematics Doklady 14 (1973), </journal> <pages> pp. 1413-1416. </pages>
Reference-contexts: Since Pr B [B 2 RAND (pspace)] = 1 [10], this implies and explains the above-noted fact that almost every oracle is P T -hard for BPP. Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin <ref> [8] </ref>, Schnorr [16], Chaitin [3, 4], Solovay [18], and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P
Reference: [9] <author> J. H. Lutz, </author> <title> Category and measure in complexity classes, </title> <journal> SIAM Journal on Computing 19 (1990), </journal> <pages> pp. 1100-1131. </pages>
Reference-contexts: We write P (A) = fB j A P T Bg. The class RAND (pspace) is discussed only in sections 1 and 4 and will not be defined here. Details may be found in <ref> [9, 10, 11, 12] </ref>. 3 Result We now prove the independent random oracle characterization of BPP. Theorem. For every pair A; B of independent random oracles, P (A) " P (B) = BPP: Proof. The right-to-left inclusion follows immediately from (1.3).
Reference: [10] <author> J. H. Lutz, </author> <title> Pseudorandom sources for BPP, </title> <journal> Journal of Computer and System Sciences 41 (1990), </journal> <pages> pp. 307-320. </pages>
Reference-contexts: To remedy this, Lutz [12] gave a pseudorandom oracle characterization of BPP, stating that BPP = fA j (8B 2 RAND (pspace)) A 2 P (B)g: (1:2) Here, RAND (pspace) is the class of pspace-random oracles, defined by Lutz <ref> [10] </ref>. (Languages in RAND (pspace) are called pseudorandom because (i) they exhibit all pspace-specifiable randomness properties, even though (ii) RAND (pspace) contains many decidable languages, including almost every language in E 2 SPACE = DSPACE (2 polynomial ) [10].) In passing from (1.1) to (1.2), the probability condition has been replaced <p> Here, RAND (pspace) is the class of pspace-random oracles, defined by Lutz <ref> [10] </ref>. (Languages in RAND (pspace) are called pseudorandom because (i) they exhibit all pspace-specifiable randomness properties, even though (ii) RAND (pspace) contains many decidable languages, including almost every language in E 2 SPACE = DSPACE (2 polynomial ) [10].) In passing from (1.1) to (1.2), the probability condition has been replaced by universal quantification over the set RAND (pspace). In particular, (1.2) implies that every pspace-random oracle is P T -hard for BPP. Since Pr B [B 2 RAND (pspace)] = 1 [10], this implies and explains the above-noted <p> SPACE = DSPACE (2 polynomial ) <ref> [10] </ref>.) In passing from (1.1) to (1.2), the probability condition has been replaced by universal quantification over the set RAND (pspace). In particular, (1.2) implies that every pspace-random oracle is P T -hard for BPP. Since Pr B [B 2 RAND (pspace)] = 1 [10], this implies and explains the above-noted fact that almost every oracle is P T -hard for BPP. <p> in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr B [B 2 RAND = 1 [13] and RAND 6= RAND (pspace) <ref> [10] </ref>, (1.3) is in a sense more informative than (1.1) but less informative than (1.2). <p> We write P (A) = fB j A P T Bg. The class RAND (pspace) is discussed only in sections 1 and 4 and will not be defined here. Details may be found in <ref> [9, 10, 11, 12] </ref>. 3 Result We now prove the independent random oracle characterization of BPP. Theorem. For every pair A; B of independent random oracles, P (A) " P (B) = BPP: Proof. The right-to-left inclusion follows immediately from (1.3).
Reference: [11] <author> J. H. Lutz, </author> <title> Almost everywhere high nonuniform complexity, </title> <journal> Journal of Computer and System Sciences, </journal> <note> to appear. See also Proceedings of the Fourth Structure in Complexity Theory Conference, </note> <year> 1989, </year> <pages> pp. 37-53. </pages>
Reference-contexts: We write P (A) = fB j A P T Bg. The class RAND (pspace) is discussed only in sections 1 and 4 and will not be defined here. Details may be found in <ref> [9, 10, 11, 12] </ref>. 3 Result We now prove the independent random oracle characterization of BPP. Theorem. For every pair A; B of independent random oracles, P (A) " P (B) = BPP: Proof. The right-to-left inclusion follows immediately from (1.3).
Reference: [12] <author> J. H. Lutz, </author> <title> A pseudorandom oracle characterization of BPP, </title> <booktitle> Proceedings of the Sixth Structure in Complexity Theory Conference, </booktitle> <year> 1991, </year> <note> to appear. </note>
Reference-contexts: Nevertheless, (1.1) does not say which oracles are P T -hard for BPP. To remedy this, Lutz <ref> [12] </ref> gave a pseudorandom oracle characterization of BPP, stating that BPP = fA j (8B 2 RAND (pspace)) A 2 P (B)g: (1:2) Here, RAND (pspace) is the class of pspace-random oracles, defined by Lutz [10]. (Languages in RAND (pspace) are called pseudorandom because (i) they exhibit all pspace-specifiable randomness properties, <p> We write P (A) = fB j A P T Bg. The class RAND (pspace) is discussed only in sections 1 and 4 and will not be defined here. Details may be found in <ref> [9, 10, 11, 12] </ref>. 3 Result We now prove the independent random oracle characterization of BPP. Theorem. For every pair A; B of independent random oracles, P (A) " P (B) = BPP: Proof. The right-to-left inclusion follows immediately from (1.3).
Reference: [13] <author> P. Martin-Lof, </author> <title> On the definition of random sequences, </title> <booktitle> Information and Control 9 (1966), </booktitle> <pages> pp. 602-619. </pages>
Reference-contexts: Since Pr B [B 2 RAND (pspace)] = 1 [10], this implies and explains the above-noted fact that almost every oracle is P T -hard for BPP. Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof <ref> [13] </ref>, Levin [8], Schnorr [16], Chaitin [3, 4], Solovay [18], and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A <p> [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr B [B 2 RAND = 1 <ref> [13] </ref> and RAND 6= RAND (pspace) [10], (1.3) is in a sense more informative than (1.1) but less informative than (1.2). <p> Note that Pr (C &gt; ) = 0 and Pr (C x ) = 2 jxj for each x 2 f0; 1g fl We say that almost every language has a property if Pr A [A has property ] = 1. Definition (Martin-Lof <ref> [13] </ref>). <p> A constructive null set is a set of languages which has a constructive null cover. Definition (Martin-Lof <ref> [13] </ref>). A language A is (algorithmically) random, and we write A 2 RAND, if A is not an element of any constructive null set. It is easy to see that each constructive null set X has probability Pr (X) = 0. However, Martin-Lof [13] proved that Pr A [A 2 RAND] <p> Definition (Martin-Lof <ref> [13] </ref>). A language A is (algorithmically) random, and we write A 2 RAND, if A is not an element of any constructive null set. It is easy to see that each constructive null set X has probability Pr (X) = 0. However, Martin-Lof [13] proved that Pr A [A 2 RAND] = 1, so the converse is not true: For each A 2 RAND, Pr (fAg) = 0 but fAg is not a constructive null set.
Reference: [14] <author> N. Nisan and A. Wigderson, </author> <title> Hardness vs. randomness, </title> <booktitle> Proceedings of the 29th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1988, </year> <pages> pp. 2-11. </pages>
Reference: [15] <author> J. C. Oxtoby, </author> <title> Measure and Category, </title> <publisher> Springer-Verlag, </publisher> <year> 1980, </year> <note> second edition. </note>
Reference-contexts: Moreover, (1.5) explains (1.4) by identifying a specific probability one event which implies that P (A) " P (B) = BPP. A constructive version of Fubini's theorem (see <ref> [15] </ref>, for example) can be used to show that (1.5) implies (1.3). In fact, the comparison here is striking.
Reference: [16] <author> C. P. Schnorr, </author> <title> Process complexity and effective random tests, </title> <journal> Journal of Computer and System Sciences 7 (1973), </journal> <pages> pp. 376-388. </pages>
Reference-contexts: Since Pr B [B 2 RAND (pspace)] = 1 [10], this implies and explains the above-noted fact that almost every oracle is P T -hard for BPP. Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin [8], Schnorr <ref> [16] </ref>, Chaitin [3, 4], Solovay [18], and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3)
Reference: [17] <author> A. Kh. </author> <title> Shen 0 , On relations between different algorithmic definitions of randomness, </title> <journal> Soviet Mathematics Doklady 38 (1989), </journal> <pages> pp. 316-319. </pages>
Reference-contexts: Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin [8], Schnorr [16], Chaitin [3, 4], Solovay [18], and Shen 0 <ref> [17] </ref>. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr B [B 2 RAND = 1 [13]
Reference: [18] <author> R. M. Solovay, </author> <year> 1975, </year> <note> reported in [4]. </note>
Reference-contexts: Let RAND be the set of all languages which are (algorithmically) random in the equivalent senses of Martin-Lof [13], Levin [8], Schnorr [16], Chaitin [3, 4], Solovay <ref> [18] </ref>, and Shen 0 [17]. fl This research was supported in part by National Science Foundation Grant CCR-8809238. 1 Then RAND RAND (pspace), so (1.1) and (1.2) together immediately give the random oracle characterization BPP = fA j (8B 2 RAND) A 2 P (B)g: (1:3) Since Pr B [B 2
Reference: [19] <author> S. Tang and R. </author> <title> Book, Polynomial-time reducibilities and "almost-all" oracle sets, </title> <note> Theoretical Computer Science (1991), to appear. </note>
Reference: [20] <author> S. Tang and O. Watanabe, </author> <title> On tally relativizations of BP-complexity classes, </title> <journal> SIAM Journal on Computing 18 (1989), </journal> <pages> pp. 449-462. 7 </pages>
References-found: 20

