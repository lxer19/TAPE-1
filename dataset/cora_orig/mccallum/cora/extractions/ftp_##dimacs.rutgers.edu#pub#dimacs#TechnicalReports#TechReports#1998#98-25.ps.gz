URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1998/98-25.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1998.html
Root-URL: http://www.cs.rutgers.edu
Title: Complexity Classes and Measures  
Author: by Eric Allender ; Michael C. Loui Kenneth W. Regan 
Address: New Brunswick, New Jersey 08903  
Affiliation: Dept. of Computer Science Rutgers University  University of Illinois at Urbana-Champaign  State University of New York at Buffalo  
Note: Other  2 Supported by the National Science Foundation under Grant CCR-9509603. Portions of this work DIMACS is a partnership of Rutgers University, Princeton University, AT&T Labs-Research, Bell Labs, Bellcore and NEC Research Institute. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 98-25 May 1998 were performed while a visiting scholar at the Institute of Mathematical Sciences, Madras, India. 3 Supported by the National Science Foundation under Grant CCR-9315696. 4 Supported by the National Science Foundation under Grant CCR-9409104. 
Abstract-found: 1
Intro-found: 1
Reference: [ Abiteboul and Vianu, 1991 ] <author> S. Abiteboul and V. Vianu. </author> <title> Datalog extensions for database queries and updates. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 43 </volume> <pages> 62-124, </pages> <year> 1991. </year>
Reference: [ Abiteboul and Vianu, 1995 ] <author> S. Abiteboul and V. Vianu. </author> <title> Computing with first-order logic. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 50 </volume> <pages> 309-335, </pages> <year> 1995. </year>
Reference-contexts: Furthermore, the hypotheses FO (LFP) = FO (PFP) and FO (LFP; ) = FO (PFP; ) are both equivalent to P = PSPACE <ref> [ Abiteboul and Vianu, 1995 ] </ref> . This shows how logic can apply to complexity theory. 4.4 A Short Digression: Logic and Formal Languages There are two more logical characterizations that seem at first to have little to do with complexity theory.
Reference: [ Adleman, 1978 ] <author> L. Adleman. </author> <title> Two theorems on random polynomial time. </title> <booktitle> In Proc. 19th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 75-83, </pages> <year> 1978. </year>
Reference: [ Allender, 1997 ] <author> E. Allender. </author> <title> The permanent requires large uniform threshold circuits. </title> <type> Technical Report TR 97-51, </type> <institution> DIMACS, </institution> <month> September </month> <year> 1997. </year> <note> Submitted for publication. 34 </note>
Reference: [ Alvarez and Jenner, 1993 ] <author> C. Alvarez and B. Jenner. </author> <title> A very hard log-space counting class. </title> <journal> Theor. Comp. Sci., </journal> <volume> 107 </volume> <pages> 3-30, </pages> <year> 1993. </year>
Reference: [ Ambos-Spies, 1986 ] <author> K. Ambos-Spies. </author> <title> A note on complete problems for complexity classes. </title> <journal> Inf. Proc. Lett., </journal> <volume> 23 </volume> <pages> 227-230, </pages> <year> 1986. </year>
Reference-contexts: The same goes for RP and ZPP|a more detailed discussion of this point may be found in [ Sipser, 1982 ] and <ref> [ Ambos-Spies, 1986 ] </ref> . To be sure, if these classes equal P then trivially they have complete languages. Recent work [ Impagliazzo and Wigderson, 1997 ] proves that a highly plausible hardness assertion for languages in exponential time implies P = BPP.
Reference: [ Arora and Safra, 1992 ] <author> S. Arora and S. Safra. </author> <title> Probabilistic checking of proofs. </title> <booktitle> In Proc. 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-13, </pages> <year> 1992. </year>
Reference: [ Arora et al., 1992 ] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy. </author> <title> Proof verification and hardness of approximation problems. </title> <booktitle> In Proc. 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 14-23, </pages> <year> 1992. </year>
Reference: [ Babai and Moran, 1988 ] <author> L. Babai and S. Moran. </author> <title> Arthur-Merlin games: A randomized proof system, and a hierarchy of complexity classes. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 36 </volume> <pages> 254-276, </pages> <year> 1988. </year>
Reference: [ Babai et al., 1991 ] <author> L. Babai, L. Fortnow, and C. Lund. </author> <title> Nondeterministic exponential time has two-prover interactive protocols. </title> <journal> Computational Complexity, </journal> <volume> 1 </volume> <pages> 3-40, </pages> <year> 1991. </year> <note> Addendum in vol. 2 of same journal. </note>
Reference: [ Balcazar et al., 1990 ] <author> J. Balcazar, J. Daz, and J. Gabarro. </author> <title> Structural Complexity I,II. </title> <publisher> Springer Verlag, </publisher> <year> 1990. </year> <note> Part I published in 1988. </note>
Reference: [ Barrington et al., 1990 ] <author> D. Mix Barrington, N. Immerman, and H. Straubing. </author> <title> On uniformity within NC 1 . J. </title> <journal> Comp. Sys. Sci., </journal> <volume> 41 </volume> <pages> 274-306, </pages> <year> 1990. </year>
Reference: [ Bovet and Crescenzi, 1994 ] <author> D. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall International (UK) Limited, </publisher> <address> Hertfordshire, U.K., </address> <year> 1994. </year>
Reference: [ Buchi, 1960 ] <author> J. Buchi. </author> <title> Weak second-order arithmetic and finite automata. </title> <journal> Zeitschrift fur Mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 6 </volume> <pages> 66-92, </pages> <year> 1960. </year>
Reference: [ Chandra and Harel, 1982 ] <author> A. Chandra and D. Harel. </author> <title> Structure and complexity of relational queries. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 25 </volume> <pages> 99-128, </pages> <year> 1982. </year> <month> 35 </month>
Reference-contexts: Thus spectra characterize NE. The ordering is needed in results (a), (d), (e), and (f). The paper <ref> [ Chandra and Harel, 1982 ] </ref> proved that FO (LFP) without cannot even define (11) fl (and their proof works also for FO (PFP)).
Reference: [ Chandra et al., 1981 ] <author> A. Chandra, D. Kozen, and L. Stockmeyer. </author> <title> Alternation. </title> <journal> J. Assn. Comp. Mach., </journal> <volume> 28 </volume> <pages> 114-133, </pages> <year> 1981. </year>
Reference: [ Dietzfelbinger et al., 1991 ] <author> M. Dietzfelbinger, W. Maass, and G. Schnitger. </author> <title> The complexity of matrix transposition on one-tape off-line Turing machines. </title> <journal> Theor. Comp. Sci., </journal> <volume> 82 </volume> <pages> 113-129, </pages> <year> 1991. </year>
Reference-contexts: This sort of argument has been useful in proving lower bounds in complexity theory. For example, the paper <ref> [ Dietzfelbinger et al., 1991 ] </ref> uses Kolmogorov complexity to show that no Turing machine with a single worktape can compute the transpose of a matrix in less than time (n 3=2 = log n). 9 Research Issues and Summary As stated in the introduction to Chapter 27, the goals of
Reference: [ Downey and Fellows, 1995 ] <author> R. Downey and M. Fellows. </author> <title> Fixed-parameter tractability and completeness I: Basic theory. </title> <journal> SIAM J. Comput., </journal> <volume> 24 </volume> <pages> 873-921, </pages> <year> 1995. </year>
Reference: [ Enderton, 1972 ] <author> H.B. Enderton. </author> <title> A mathematical introduction to logic. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: A formal inductive definition of the following key notion, and much further information on systems of logic, may be found in the standard text <ref> [ Enderton, 1972 ] </ref> . Definition 4.1. Let be a sentence in a system L with vocabulary t .
Reference: [ Fagin, 1974 ] <author> R. Fagin. </author> <title> Generalized first-order spectra and polynomial-time recognizable sets. </title> <editor> In R. Karp, editor, </editor> <booktitle> Complexity of Computation: Proceedings of a Symposium in Applied Mathematics of the American Mathematical Society and the Society for Industrial and Applied Mathematics, </booktitle> <volume> Vol. VII, </volume> <pages> pages 43-73. </pages> <address> SIAM-AMS, </address> <year> 1974. </year>
Reference: [ Fagin, 1993 ] <author> R. Fagin. </author> <title> Finite model theory|a personal perspective. </title> <journal> Theor. Comp. Sci., </journal> <volume> 116 </volume> <pages> 3-31, </pages> <year> 1993. </year>
Reference-contexts: It is not known whether s-t connectivity can be expressed using the DTC operator. This question is equivalent to whether L = NL. 4.3 Logical Characterizations of Complexity Classes As discussed by <ref> [ Fagin, 1993 ] </ref> , there is a uniform encoding method Enc such that for any vocabulary t and (finite) relational structure R of type t , Enc (R) is a standard string encoding of R.
Reference: [ Feige et al., 1991 ] <author> U. Feige, S. Goldwasser, L. Lovasz, Safra S, and M. Szegedy. </author> <title> Approximating clique is almost NP-complete. </title> <booktitle> In Proc. 32nd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-12, </pages> <year> 1991. </year>
Reference-contexts: It gives a strikingly different kind of reduction from an arbitrary language A in NP to Clique over the reduction from A to SAT to Clique in Chapter 28, Section 4, and its discovery by <ref> [ Feige et al., 1991 ] </ref> (journal version [ Feige et al., 1996 ] ) stimulated the whole area. Proof. Let A 2 NP.
Reference: [ Feige et al., 1996 ] <author> U. Feige, S. Goldwasser, L. Lovasz, Safra S, and M. Szegedy. </author> <title> Interactive proofs and the hardness of approximating cliques. </title> <journal> Journal of the ACM, </journal> <volume> 43 </volume> <pages> 268-292, </pages> <year> 1996. </year>
Reference-contexts: It gives a strikingly different kind of reduction from an arbitrary language A in NP to Clique over the reduction from A to SAT to Clique in Chapter 28, Section 4, and its discovery by [ Feige et al., 1991 ] (journal version <ref> [ Feige et al., 1996 ] </ref> ) stimulated the whole area. Proof. Let A 2 NP.
Reference: [ Fortnow and Sipser, 1988 ] <author> L. Fortnow and M. Sipser. </author> <title> Are there interactive protocols for co-NP languages? Inf. </title> <journal> Proc. Lett., </journal> <volume> 28 </volume> <pages> 249-251, </pages> <year> 1988. </year>
Reference-contexts: By substituting random choices for existential choices in the proof that ATIME (t) DSPACE (t) (Theorem 2.8 in Chapter 27), it is straightforward to show that IP PSPACE. It was originally believed likely that IP was a small subclass of PSPACE. Evidence supporting this belief was the construction in <ref> [ Fortnow and Sipser, 1988 ] </ref> of an oracle language B for which co-NP B IP B 6= ;, so that IP B is strictly included in PSPACE B .
Reference: [ Gill, 1977 ] <author> J. Gill. </author> <title> Computational complexity of probabilistic Turing machines. </title> <journal> SIAM J. Comput., </journal> <volume> 6 </volume> <pages> 675-695, </pages> <year> 1977. </year>
Reference: [ Goldwasser et al., 1989 ] <author> S. Goldwasser, S. Micali, and C. Rackoff. </author> <title> The knowledge complexity of interactive proof systems. </title> <journal> SIAM J. Comput., </journal> <volume> 18 </volume> <pages> 186-208, </pages> <year> 1989. </year> <month> 36 </month>
Reference: [ Hartmanis, 1989 ] <editor> J. Hartmanis, editor. </editor> <title> Computational Complexity Theory. </title> <publisher> American Math--ematical Society, </publisher> <year> 1989. </year>
Reference: [ Hartmanis, 1994 ] <author> J. Hartmanis. </author> <title> On computational complexity and the nature of computer science. </title> <journal> Comm. Assn. Comp. Mach., </journal> <volume> 37 </volume> <pages> 37-43, </pages> <year> 1994. </year>
Reference: [ Immerman, 1989 ] <author> N. Immerman. </author> <title> Descriptive and computational complexity. </title> <editor> In J. Hart-manis, editor, </editor> <booktitle> Computational Complexity Theory, volume 38 of Proc. Symp. in Applied Math., </booktitle> <pages> pages 75-91. </pages> <publisher> American Mathematical Society, </publisher> <year> 1989. </year>
Reference: [ Impagliazzo and Wigderson, 1997 ] <author> R. Impagliazzo and A. Wigderson. </author> <title> P = BPP if E requires exponential circuits: Derandomizing the XOR Lemma. </title> <booktitle> In Proc. 29th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 220-229, </pages> <year> 1997. </year>
Reference-contexts: The same goes for RP and ZPP|a more detailed discussion of this point may be found in [ Sipser, 1982 ] and [ Ambos-Spies, 1986 ] . To be sure, if these classes equal P then trivially they have complete languages. Recent work <ref> [ Impagliazzo and Wigderson, 1997 ] </ref> proves that a highly plausible hardness assertion for languages in exponential time implies P = BPP.
Reference: [ Jones and Selman, 1974 ] <author> N. Jones and A. Selman. </author> <title> Turing machines and the spectra of first-order formulas. </title> <journal> J. Assn. Comp. Mach., </journal> <volume> 39 </volume> <pages> 139-150, </pages> <year> 1974. </year>
Reference-contexts: One other result should be mentioned with the above. Define the spectrum of a formula by S = f n : for some R with n elements, R j= g. The paper <ref> [ Jones and Selman, 1974 ] </ref> proved that a language A belongs to NE if and only if there is a vocabulary t and a sentence 2 FO (t ) such that A = S (identifying numbers and strings). Thus spectra characterize NE.
Reference: [ Karp and Lipton, 1982 ] <author> R. Karp and R. Lipton. </author> <title> Turing machines that take advice. </title> <journal> L'Enseignement Mathematique, </journal> <volume> 28 </volume> <pages> 191-210, </pages> <year> 1982. </year>
Reference-contexts: It is known, however, that if NP P/poly, then PH collapses to its second level, P P 2 <ref> [ Karp and Lipton, 1982 ] </ref> . It is generally considered likely that PH does not collapse to any level, and hence that all of its levels are distinct. Hence this result is considered strong evidence that NP is not a subset of P/poly.
Reference: [ Krentel, 1988 ] <author> M. Krentel. </author> <title> The complexity of optimization problems. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 36 </volume> <pages> 490-509, </pages> <year> 1988. </year>
Reference-contexts: * FP NP [log n] is the set of functions computable in polynomial time by deterministic oracle Turing machines with oracle languages in NP that make O (log n) queries during computations on inputs of length n FP NP and FP NP [log n] contain many well-studied optimization problems (see <ref> [ Krentel, 1988 ] </ref> ). The problem of producing the optimal tour in the Traveling Salesperson problem is FP NP -complete.
Reference: [ Lautemann, 1983 ] <author> C. Lautemann. </author> <title> BPP and the polynomial hierarchy. </title> <journal> Inf. Proc. Lett., </journal> <volume> 17 </volume> <pages> 215-217, </pages> <year> 1983. </year>
Reference: [ Li and Vitanyi, 1993 ] <author> M. Li and P. Vitanyi. </author> <title> An Introduction to Kolmogorov Complexity and its Applications. </title> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference: [ Lindell, 1994 ] <author> S. Lindell. </author> <title> How to define exponentiation from addition and multiplication in first-order logic on finite structures, 1994. Unpublished manuscript. The main result will appear in a forthcoming text by N. Immerman, Descriptive and Computational Complexity, </title> <booktitle> in the Springer Verlag "Graduate Texts in Computer Science" series. </booktitle>
Reference: [ Lund et al., 1992 ] <author> C. Lund, L. Fortnow, H. Karloff, and N. Nisan. </author> <title> Algebraic methods for interactive proof systems. </title> <journal> J. Assn. Comp. Mach., </journal> <volume> 39 </volume> <pages> 859-868, </pages> <year> 1992. </year> <month> 37 </month>
Reference-contexts: Using a proof technique that does not relativize, however, [ Shamir, 1992 ] (building on the work of <ref> [ Lund et al., 1992 ] </ref> ) proved that in fact, IP and PSPACE are the same class. Theorem 5.1 IP = PSPACE.
Reference: [ Lutz, 1997 ] <author> J. Lutz. </author> <title> The quantitative structure of exponential time. </title> <editor> In L. Hemaspaan--dra and A. Selman, editors, </editor> <booktitle> Complexity Theory Retrospective II, </booktitle> <pages> pages 225-260. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>
Reference: [ Lynch, 1982 ] <author> J. Lynch. </author> <title> Complexity classes and theories of finite models. </title> <journal> Math. Sys. Thy., </journal> <volume> 15 </volume> <pages> 127-144, </pages> <year> 1982. </year>
Reference-contexts: A seemingly smaller change to mSO9 also results in a leap of expressiveness from the regular languages to the level of NP. The paper <ref> [ Lynch, 1982 ] </ref> showed that if we consider mSO9 (+) instead of mSO9 () (for strings), then the resulting class contains NTIME [n], and hence contains many NP-complete languages, such as Graph Three-Colorability. 5 Interactive Models and Complexity Classes 5.1 Interactive Proofs In Section 2.2 of Chapter 27, we characterized
Reference: [ McNaughton and Papert, 1971 ] <author> R. McNaughton and S. Papert. </author> <title> Counter-Free Automata. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1971. </year>
Reference: [ Papadimitriou and Yannakakis, 1984 ] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 28 </volume> <pages> 244-259, </pages> <year> 1984. </year>
Reference-contexts: Not only is Exact TSP in D P , but also Exact TSP is D P -complete. Exact versions of many other NP-complete problems, including Clique, are also D P -complete <ref> [ Papadimitriou and Yannakakis, 1984 ] </ref> . Although it is not known whether D P is contained in NP, it is straightforward to prove that NP D P P NP 2 " 2 : Thus, D P lies between the first two levels of the polynomial hierarchy.
Reference: [ Papadimitriou, 1994 ] <author> C. Papadimitriou. </author> <title> Computational Complexity. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1994. </year>
Reference: [ Schutzenberger, 1965 ] <author> M.P. Schutzenberger. </author> <title> On finite monoids having only trivial subgroups. </title> <journal> Inform. and Control, </journal> <volume> 8 </volume> <pages> 190-194, </pages> <year> 1965. </year>
Reference: [ Shamir, 1992 ] <author> A. Shamir. </author> <title> IP = PSPACE. </title> <journal> J. Assn. Comp. Mach., </journal> <volume> 39 </volume> <pages> 869-877, </pages> <year> 1992. </year>
Reference-contexts: Evidence supporting this belief was the construction in [ Fortnow and Sipser, 1988 ] of an oracle language B for which co-NP B IP B 6= ;, so that IP B is strictly included in PSPACE B . Using a proof technique that does not relativize, however, <ref> [ Shamir, 1992 ] </ref> (building on the work of [ Lund et al., 1992 ] ) proved that in fact, IP and PSPACE are the same class. Theorem 5.1 IP = PSPACE.
Reference: [ Sipser, 1982 ] <author> M. Sipser. </author> <title> On relativization and the existence of complete sets. </title> <booktitle> In Proc. 9th Annual International Conference on Automata, Languages, and Programming, volume 140 of Lect. Notes in Comp. Sci., </booktitle> <pages> pages 523-531. </pages> <publisher> Springer Verlag, </publisher> <year> 1982. </year>
Reference-contexts: The same goes for RP and ZPP|a more detailed discussion of this point may be found in <ref> [ Sipser, 1982 ] </ref> and [ Ambos-Spies, 1986 ] . To be sure, if these classes equal P then trivially they have complete languages. Recent work [ Impagliazzo and Wigderson, 1997 ] proves that a highly plausible hardness assertion for languages in exponential time implies P = BPP.
Reference: [ Sipser, 1983 ] <author> M. Sipser. </author> <title> Borel sets and circuit complexity. </title> <booktitle> In Proc. 15th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 61-69, </pages> <year> 1983. </year>
Reference: [ Sipser, 1992 ] <author> M. Sipser. </author> <title> The history and status of the P versus NP question. </title> <booktitle> In Proc. 24th Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 603-618, </pages> <year> 1992. </year>
Reference: [ Stearns, 1990 ] <author> R. Stearns. Juris Hartmanis: </author> <title> the beginnings of computational complexity. </title> <editor> In A. Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 5-18. </pages> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1990. </year> <month> 38 </month>
Reference: [ Stockmeyer, 1976 ] <author> L. Stockmeyer. </author> <title> The polynomial time hierarchy. </title> <journal> Theor. Comp. Sci., </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1976. </year>
Reference: [ Stockmeyer, 1987 ] <author> L. Stockmeyer. </author> <title> Classifying the computational complexity of problems. </title> <journal> J. Symb. Logic, </journal> <volume> 52 </volume> <pages> 1-43, </pages> <year> 1987. </year>
Reference: [ Toda, 1991 ] <author> S. </author> <title> Toda. PP is as hard as the polynomial-time hierarchy. </title> <journal> SIAM J. Comput., </journal> <volume> 20 </volume> <pages> 865-877, </pages> <year> 1991. </year>
Reference: [ Valiant, 1979 ] <author> L. Valiant. </author> <title> The complexity of computing the permanent. </title> <journal> Theor. Comp. Sci., </journal> <volume> 8 </volume> <pages> 189-201, </pages> <year> 1979. </year>
Reference-contexts: two vertices s and t. 28 Output: The number of paths from s to t. (In an acyclic graph, all paths are simple.) As one might expect, the problem #DAG-Paths is complete for #L, but it may come as a surprise that #Paths is complete for #P, as shown by <ref> [ Valiant, 1979 ] </ref> ! That is, although it is easy to decide whether there is a path between two vertices, it seems quite difficult to count the number of distinct paths, unless the underlying graph is acyclic.
Reference: [ van Leeuwen, 1990 ] <editor> J. van Leeuwen, editor. </editor> <booktitle> Handbook of Theoretical Computer Science, volume A. </booktitle> <publisher> Elsevier and MIT Press, </publisher> <year> 1990. </year>
Reference: [ Vinay, 1991 ] <author> V. Vinay. </author> <title> Counting auxiliary pushdown automata and semi-unbounded arithmetic circuits. </title> <booktitle> In Proc. 6th Annual IEEE Conference on Structure in Complexity Theory, </booktitle> <pages> pages 270-284, </pages> <year> 1991. </year>
Reference: [ Wagner and Wechsung, 1986 ] <author> K. Wagner and G. Wechsung. </author> <title> Computational Complexity. </title> <address> D. </address> <publisher> Reidel, </publisher> <year> 1986. </year>
Reference: [ Wang, 1997 ] <author> J. Wang. </author> <title> Average-case computational complexity theory. </title> <editor> In L. Hemaspaan-dra and A. Selman, editors, </editor> <booktitle> Complexity Theory Retrospective II, </booktitle> <pages> pages 295-328. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year>

References-found: 56

