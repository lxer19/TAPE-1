URL: http://www.eecis.udel.edu:80/~mills/database/reports/fine/fineb.ps
Refering-URL: http://www.eecis.udel.edu:80/~mills/reports.htm
Root-URL: http://www.cis.udel.edu
Abstract-found: 0
Intro-found: 1
Reference: [ALL74] <author> Allan, D.W., J.H. Shoaf and D. Halford. </author> <title> Statistics of time and frequency data analysis. In: Blair, B.E. (Ed.). Time and Frequency Theory and Fundamentals . National Bureau of Standards Monograph 140, </title> <type> U.S. </type> <institution> Department of Commerce, </institution> <year> 1974, </year> <pages> 151-204. </pages>
Reference-contexts: Nevertheless, the conclusion drawn from this figure is that frequency variations up to a couple of ppm must be expected as the norm for typical modern workstations. 5.2.1. Allan Variance of Typical Workstations The stability of a freerunning frequency source is commonly characterized by a statistic called Allan variance <ref> [ALL74] </ref>, which is defined as follows. Consider a series of time offsets measured between a local clock oscillator and some external standard. Let q ( i ) be the i th measurement and T be the interval between measurements.
Reference: [DAR81a] <institution> Defense Advanced Research Projects Agency. Internet Protocol. DARPA Network Working Group Report RFC-791, USC Information Sciences Institute, </institution> <month> September </month> <year> 1981. </year> <month> 38 </month>
Reference-contexts: NTP and its implementations have evolved and proliferated in the Internet over the last decade, with NTP Version 2 adopted as an Internet Standard (Recommended) [MIL89] and its successor NTP Version 3 adopted as a Internet Standard (Draft) [MIL92a]. NTP is built on the Internet Protocol (IP) <ref> [DAR81a] </ref> and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. The protocol can operate in several modes appropriate to different scenarios involving private workstations, public servers and various subnet configurations.
Reference: [DAR81b] <institution> Defense Advanced Research Projects Agency. Internet Control Message Protocol. DARPA Network Working Group Report RFC-792, USC Information Sciences Institute, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: Network Time Protocol The Network Time Protocol (NTP) is used by Internet time servers and their clients to synchronize clocks, as well as automatically organize and maintain the time synchronization subnet itself. It is evolved from the Time Protocol [POS83] and the ICMP Timestamp Message <ref> [DAR81b] </ref>, but is specifically designed for high accuracy, stability and reliability, even when used over typical Internet paths involving multiple gateways and unreliable networks. This section contains an overview of the architecture and algorithms used in NTP.
Reference: [DEC89] <institution> Digital Time Service Functional Specification Version T.1.0.5. Digital Equipment Cor poration, </institution> <year> 1989. </year>
Reference-contexts: It is possible to do both of these things by modifying certain kernel routines, as described later in this report. Protocols such as the Digital Time Synchronization Service (DTSS) <ref> [DEC89] </ref>, which use adjtime () with adjustment intervals much greater than 1 s, can accumulate considerable sawtooth error between updates, especially if the intrinsic frequency error of the local clock oscillator is relatively large. There are several difficulties in the Unix model in addition to the sawtooth error.
Reference: [LIN80] <author> Lindsay, W.C., and A.V. Kantak. </author> <title> Network synchronization of random signals. </title> <journal> IEEE Trans. Communications COM-28, </journal> <month> 8 (August </month> <year> 1980), </year> <pages> 1260-1266. </pages>
Reference-contexts: Thus, both peers A and B can independently calculate delay and offset using a single bidirectional message stream. This is a symmetric, continuously sampled, time-transfer scheme similar to those used in some digital telephone networks <ref> [LIN80] </ref>. Among its advantages are that errors due to missing or duplicated message are avoided (see [MIL92c] for an extended discussion of these issues and an analysis of errors).
Reference: [MAR85] <author> Marzullo, K., and S. Owicki. </author> <title> Maintaining the time in a distributed system. </title> <booktitle> ACM Operating Systems Review 19, </booktitle> <month> 3 (July </month> <year> 1985), </year> <pages> 44-54. </pages>
Reference-contexts: The clockselection algorithm determines from among all peers a suitable subset of peers capable of providing the most accurate and trustworthy time using principles similar to those described in [VAS88]. This is done using a cascade of two subalgorithms, one based on interval intersections to cast out faulty peers <ref> [MAR85] </ref> and the other based on clustering and maximum-likelihood principles to improve accuracy [MIL91a]. The resulting offsets of this subset are first combined on a weighted-average basis using the algorithm described in [MIL92a] and then processed by a phase-lock loop (PLL) using the algorithms described in [MIL92c].
Reference: [MIL88] <author> Mills, </author> <title> D.L. </title> <booktitle> The Fuzzball. Proc. ACM SIGCOMM 88 Symposium (Palo Alto, </booktitle> <address> CA, </address> <month> August </month> <year> 1988), </year> <pages> 115-122. </pages>
Reference-contexts: The precision of this simple clock model, which is a software emulation of the phase accumulation method described in [WIL90], is limited to the value of the increment, usually in the range 1-10 ms. Some workstations, including the Fuzzball <ref> [MIL88] </ref> and Sun SPARCstation, include a high resolution counter which can be read by the kernel and used to interpolate between timer interrupts. In some applications an external pulse-per-second (PPS) signal is available from a reference source such as a cesium clock or precision timing receiver.
Reference: [MIL89] <author> Mills, </author> <title> D.L. Network Time Protocol (version 2) - specification and implementation. </title> <institution> DARPA Network Working Group Report RFC-1119, University of Delaware, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: A subset of the protocol, designated Simple Network Time Protocol (SNTP), is described in RFC-1361 [MIL92d]. NTP and its implementations have evolved and proliferated in the Internet over the last decade, with NTP Version 2 adopted as an Internet Standard (Recommended) <ref> [MIL89] </ref> and its successor NTP Version 3 adopted as a Internet Standard (Draft) [MIL92a]. NTP is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites.
Reference: [MIL90] <author> Mills, </author> <title> D.L. Measured performance of the Network Time Protocol in the Internet system. </title> <journal> ACM Computer Communication Review 20, </journal> <month> 1 (January </month> <year> 1990), </year> <pages> 65-75. </pages>
Reference-contexts: Previous papers and reports have described The Network Time Protocol (NTP) used to synchronize computer clocks in the Internet [MIL91a, MIL92a], modelling and analysis of computer clocks [MIL92c], the chronology and metrology of network timescales [MIL91b], and measurement programs designed to establish the accuracy, stability and reliability in service <ref> [MIL90] </ref>. This report presents a series of design improvements in interface hardware, input/output driver software and Unix operating system kernel software which improve the accuracy and stability of the local clock, especially when directly synchronized via radio or satellite to national time standards. <p> This section contains an overview of the architecture and algorithms used in NTP. A detailed description of the NTP architecture and 1 protocol is contained in [MIL91a], while a summary of operational experience and performance is contained in <ref> [MIL90] </ref> and a detailed discussion on timescales is contained in [MIL91b]. A survey of implementation techniques and a detailed analysis of timekeeping errors is contained in [MIL92c]. The current version of the protocol is designated NTP Version 3 as defined by the specification document RFC-1305 [MIL92a]. <p> Unix Kernel Modifications for Precision Timekeeping On the realization that modern workstations are not necessarily designed to be good timekeepers, it is not surprising that some are better than others. As shown in <ref> [MIL90] </ref> and later in this report, most modern Unix workstations and servers can keep reliable time to the low milliseconds, almost all of the time.
Reference: [MIL91a] <author> Mills, </author> <title> D.L. Internet time synchronization: the Network Time Protocol. </title> <journal> IEEE Trans. Communications 39, </journal> <month> 10 (October </month> <year> 1991), </year> <pages> 1482-1493. </pages>
Reference-contexts: 1. Introduction This is one of a series of reports on the technology of synchronizing clocks in computer networks. Previous papers and reports have described The Network Time Protocol (NTP) used to synchronize computer clocks in the Internet <ref> [MIL91a, MIL92a] </ref>, modelling and analysis of computer clocks [MIL92c], the chronology and metrology of network timescales [MIL91b], and measurement programs designed to establish the accuracy, stability and reliability in service [MIL90]. <p> This section contains an overview of the architecture and algorithms used in NTP. A detailed description of the NTP architecture and 1 protocol is contained in <ref> [MIL91a] </ref>, while a summary of operational experience and performance is contained in [MIL90] and a detailed discussion on timescales is contained in [MIL91b]. A survey of implementation techniques and a detailed analysis of timekeeping errors is contained in [MIL92c]. <p> This is done using a cascade of two subalgorithms, one based on interval intersections to cast out faulty peers [MAR85] and the other based on clustering and maximum-likelihood principles to improve accuracy <ref> [MIL91a] </ref>. The resulting offsets of this subset are first combined on a weighted-average basis using the algorithm described in [MIL92a] and then processed by a phase-lock loop (PLL) using the algorithms described in [MIL92c].
Reference: [MIL91b] <author> Mills, </author> <title> D.L. On the chronology and metrology of computer network timescales and their application to the Network Time Protocol. </title> <journal> ACM Computer Communications Review 21, </journal> <month> 5 (October </month> <year> 1991), </year> <pages> 8-17. </pages>
Reference-contexts: Previous papers and reports have described The Network Time Protocol (NTP) used to synchronize computer clocks in the Internet [MIL91a, MIL92a], modelling and analysis of computer clocks [MIL92c], the chronology and metrology of network timescales <ref> [MIL91b] </ref>, and measurement programs designed to establish the accuracy, stability and reliability in service [MIL90]. <p> This section contains an overview of the architecture and algorithms used in NTP. A detailed description of the NTP architecture and 1 protocol is contained in [MIL91a], while a summary of operational experience and performance is contained in [MIL90] and a detailed discussion on timescales is contained in <ref> [MIL91b] </ref>. A survey of implementation techniques and a detailed analysis of timekeeping errors is contained in [MIL92c]. The current version of the protocol is designated NTP Version 3 as defined by the specification document RFC-1305 [MIL92a].
Reference: [MIL92a] <author> Mills, </author> <title> D.L. Network Time Protocol (Version 3) specification, implementation and analysis. </title> <institution> DARPA Network Working Group Report RFC-1305, University of Delaware, </institution> <month> March </month> <year> 1992, </year> <pages> 113 pp. </pages> <institution> [MIL92b]Mills, D.L. A computer-controlled LORAN-C receiver for precision timekeeping. Elec trical Engineering Department Report 92-3-1, University of Delaware, </institution> <month> March </month> <year> 1992, </year> <pages> 63 pp. </pages> <month> [MIL92c]Mills, </month> <title> D.L. Modelling and analysis of computer network clocks. </title> <institution> Electrical Engineering Department Report 92-5-2, University of Delaware, </institution> <month> May </month> <year> 1992, </year> <pages> 29 pp. </pages>
Reference-contexts: 1. Introduction This is one of a series of reports on the technology of synchronizing clocks in computer networks. Previous papers and reports have described The Network Time Protocol (NTP) used to synchronize computer clocks in the Internet <ref> [MIL91a, MIL92a] </ref>, modelling and analysis of computer clocks [MIL92c], the chronology and metrology of network timescales [MIL91b], and measurement programs designed to establish the accuracy, stability and reliability in service [MIL90]. <p> A survey of implementation techniques and a detailed analysis of timekeeping errors is contained in [MIL92c]. The current version of the protocol is designated NTP Version 3 as defined by the specification document RFC-1305 <ref> [MIL92a] </ref>. A subset of the protocol, designated Simple Network Time Protocol (SNTP), is described in RFC-1361 [MIL92d]. <p> NTP and its implementations have evolved and proliferated in the Internet over the last decade, with NTP Version 2 adopted as an Internet Standard (Recommended) [MIL89] and its successor NTP Version 3 adopted as a Internet Standard (Draft) <ref> [MIL92a] </ref>. NTP is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) [POS80], which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. <p> As shown in the figure, the computed delays and offsets for each peer are processed by the clock-filter algorithm to reduce incidental timing noise. As described in <ref> [MIL92a] </ref>, this algorithm selects from among the last several samples the one with minimum delay and presents the associated offset as the output. <p> The resulting offsets of this subset are first combined on a weighted-average basis using the algorithm described in <ref> [MIL92a] </ref> and then processed by a phase-lock loop (PLL) using the algorithms described in [MIL92c]. In the PLL the combined effects of the filtering, selection and combining operations are to produce a phase-correction term, which is processed by the loop filter to control the voltage-controlled oscillator (VCO) frequency. <p> Finally, the poll interval r for transmitted NTP messages is determined as a multiple of t . Details on how t is computed from h and how r is determined from t are given in <ref> [MIL92a] </ref>. Updates are numbered from zero, with those in the neighborhood of the i th update shown in Figure 5. All variables are initialized at i = 0 to zero.
Reference: [MIL92d] <author> Mills, </author> <title> D.L. Simple Network Time Protocol (SNTP). </title> <institution> DARPA Network Working Group Report RFC-1361, University of Delaware, </institution> <month> August </month> <year> 1992, </year> <pages> 10 pp. </pages>
Reference-contexts: The current version of the protocol is designated NTP Version 3 as defined by the specification document RFC-1305 [MIL92a]. A subset of the protocol, designated Simple Network Time Protocol (SNTP), is described in RFC-1361 <ref> [MIL92d] </ref>. NTP and its implementations have evolved and proliferated in the Internet over the last decade, with NTP Version 2 adopted as an Internet Standard (Recommended) [MIL89] and its successor NTP Version 3 adopted as a Internet Standard (Draft) [MIL92a].
Reference: [NIS90] <institution> NIST Time and Frequency Dissemination Services . NBS Special Publication 432 (Revised 1990), National Institute of Science and Technology, U.S. Department of Commerce, </institution> <year> 1990. </year>
Reference-contexts: Even in cases where the local time is maintained by periodic exchanges of messages at relatively long intervals, such as using the NIST Automated Computer Time Service <ref> [NIS90] </ref>, the ability to precisely adjust the local clock frequency simplifies the synchronization procedures and allows the call frequency to be considerably reduced. 4.4.
Reference: [POS80] <author> Postel, J. </author> <title> User Datagram Protocol. </title> <institution> DARPA Network Working Group Report RFC-768, USC Information Sciences Institute, </institution> <month> August </month> <year> 1980. </year>
Reference-contexts: NTP is built on the Internet Protocol (IP) [DAR81a] and User Datagram Protocol (UDP) <ref> [POS80] </ref>, which provide a connectionless transport mechanism; however, it is readily adaptable to other protocol suites. The protocol can operate in several modes appropriate to different scenarios involving private workstations, public servers and various subnet configurations.
Reference: [POS83] <author> Postel, J. </author> <title> Time protocol. </title> <institution> DARPA Network Working Group Report RFC-868, USC Information Sciences Institute, </institution> <month> May </month> <year> 1983. </year>
Reference-contexts: Network Time Protocol The Network Time Protocol (NTP) is used by Internet time servers and their clients to synchronize clocks, as well as automatically organize and maintain the time synchronization subnet itself. It is evolved from the Time Protocol <ref> [POS83] </ref> and the ICMP Timestamp Message [DAR81b], but is specifically designed for high accuracy, stability and reliability, even when used over typical Internet paths involving multiple gateways and unreliable networks. This section contains an overview of the architecture and algorithms used in NTP.
Reference: [RAM90] <author> Ramanathan, P., K.G. Shin and R.W. Butler. </author> <title> Fault-tolerant clock synchronization in distributed systems. </title> <booktitle> IEEE Computer 23, </booktitle> <month> 10 (October </month> <year> 1990), </year> <pages> 33-42. 39 </pages>
Reference-contexts: 3 3 1 x 3 Clock Filter Clock Filter Clock Filter Clock Selection Clock Combining Loop Filter VCO Network Phase-Locked Oscillator 2 server synchronizes with several other servers in order to survive outages and Byzantine failures using methods similar to those described in [SHI87]. with the phase-lock methods summarized in <ref> [RAM90] </ref>. Timestamps exchanged between the server and possibly many other subnet peers are used to determine individual roundtrip delays and clock offsets, as well as provide reliable error bounds.
Reference: [SHI87] <author> Shin, K.G., and P. Ramanathan. </author> <title> Clock synchronization of a large multiprocessor system in the presence of malicious faults. </title> <journal> IEEE Trans. Computers C-36, </journal> <month> 1 (January </month> <year> 1987), </year> <pages> 2-12. </pages>
Reference-contexts: In practice each NTP (a) (b) 22 3 3 1 x 3 Clock Filter Clock Filter Clock Filter Clock Selection Clock Combining Loop Filter VCO Network Phase-Locked Oscillator 2 server synchronizes with several other servers in order to survive outages and Byzantine failures using methods similar to those described in <ref> [SHI87] </ref>. with the phase-lock methods summarized in [RAM90]. Timestamps exchanged between the server and possibly many other subnet peers are used to determine individual roundtrip delays and clock offsets, as well as provide reliable error bounds.
Reference: [USNO] <institution> Daily time differences - series 4. U.S. Naval Observatory, </institution> <address> Washington, D.C., </address> <note> (advisory published weekly). </note>
Reference: [VAS88] <author> Vasanthavada, N., </author> <title> and P.N. Marinos. Synchronization of fault-tolerant clocks in the presence of malicious failures. </title> <journal> IEEE Trans. Computers C-37, </journal> <month> 4 (April </month> <year> 1988), </year> <pages> 440-448. </pages>
Reference-contexts: The clockselection algorithm determines from among all peers a suitable subset of peers capable of providing the most accurate and trustworthy time using principles similar to those described in <ref> [VAS88] </ref>. This is done using a cascade of two subalgorithms, one based on interval intersections to cast out faulty peers [MAR85] and the other based on clustering and maximum-likelihood principles to improve accuracy [MIL91a].
Reference: [WIL90] <author> Wilcox, </author> <title> D.R. Backplane bus distributed realtime clock synchronization. </title> <type> Technical Report 1400, </type> <institution> Naval Ocean Systems Center, </institution> <month> December </month> <year> 1990, </year> <pages> 52 pp. 40 </pages>
Reference-contexts: The clock frequency is adjusted by changing the value of the increment, in order to make the counter run faster or slower. The precision of this simple clock model, which is a software emulation of the phase accumulation method described in <ref> [WIL90] </ref>, is limited to the value of the increment, usually in the range 1-10 ms. Some workstations, including the Fuzzball [MIL88] and Sun SPARCstation, include a high resolution counter which can be read by the kernel and used to interpolate between timer interrupts.
References-found: 21

