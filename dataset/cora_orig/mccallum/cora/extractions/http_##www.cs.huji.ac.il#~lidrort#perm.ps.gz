URL: http://www.cs.huji.ac.il/~lidrort/perm.ps.gz
Refering-URL: http://www.cs.huji.ac.il/~lidrort/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On the quantum evaluation of the determinant and the permanent of a matrix  
Author: Lidror Troyansky and Naftali Tishby 
Address: Jerusalem 91904, Israel  
Affiliation: Institute of Computer Science and Center for Neural Computation The Hebrew University  
Date: 13 May 1996  
Note: PhysComp96 Full paper Draft,  Permanent Uncertainty:  
Abstract: We investigate the possibility of evaluating permanents and determinants of matrices by quantum computation. All current algorithms for the evaluation of the permanent of a real matrix have exponential time complexity and are known to be in the class P #P . Any method to evaluate or approximate the permanent is thus of fundamental interest to complexity theory. Permanents and determinants of matrices play a basic role in quantum statistical mechanics of identical bosons and fermions, as the only possible many particle states made of single particle wave functions. We study a novel many-particle quantum-computational model in which an observable operator can be constructed, in polynomial-time complexity, to yield the determinant or the permanent of an arbitrary matrix as its expectation value. Both quantities are estimated, in this model, by quantum mechanics systems in a polynomial time, using fermions and bosons respectively. It turns out that the variance of the measurements in a "noise-free case" is zero for the determinant and exponential (in the rank of the matrix) for the permanent. The intrinsic measurement variance is therefore the quantum mechanical correspondence to the computational complexity gap.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Brualdi, Richard and Herbert Ryser, </author> <title> Combibnatorial Matrix Theory, </title> <journal> Encyclopedia of Mathematics and Its Applications Vol. </journal> <volume> 39, </volume> <publisher> Cambridge University Press (1991), </publisher> <pages> 198-235. </pages>
Reference-contexts: The determinant is defined by the same sum of the permutations, where in addition each odd permutation is taken with a negative sign. Permanents occur naturally in various counting problems in combinatorics [4], graph theory <ref> [1] </ref>, and logic. If there was a way to evaluate, or even to approximate permanents in a polynomial time, then every P #P (and thus every NP-complete) problem could have been evaluated in polynomial time [8] [3].
Reference: [2] <editor> Cauchy, Augustin-Louis, "Memoire sur les fonctions qui ne peuvent obtenir que deux valeurs egales et de signes contraires per suite des transpositions operees entre les variables qu'elles renferment", J. Ec. Polyt. </editor> <volume> 10:17 (1812), </volume> <pages> 29-112. </pages>
Reference-contexts: The permanent of a matrix A = [a ij ] is defined as: per [A] fi 1 ::i n g where the set of indices fi 1 : : : i n g denotes the set of all the permutations of 1 : : : n <ref> [2] </ref>. The determinant is defined by the same sum of the permutations, where in addition each odd permutation is taken with a negative sign. Permanents occur naturally in various counting problems in combinatorics [4], graph theory [1], and logic.
Reference: [3] <author> Garey, Michael R. and David S. </author> <title> Johnson Computers and Intractability, W.H. </title> <publisher> Freeman and Company, </publisher> <address> new-York, </address> <year> (1979) </year> <month> 167-170. </month>
Reference-contexts: Permanents occur naturally in various counting problems in combinatorics [4], graph theory [1], and logic. If there was a way to evaluate, or even to approximate permanents in a polynomial time, then every P #P (and thus every NP-complete) problem could have been evaluated in polynomial time [8] <ref> [3] </ref>. It can be shown that even the approximation of the log of the permanent is a hard problem [9].
Reference: [4] <author> Minc, Henrik, </author> <title> Permanents, </title> <journal> Encyclopedia of Mathematics and Its Applications Vol. </journal> <volume> 6, </volume> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Mass. </address> <year> (1978). </year>
Reference-contexts: The determinant is defined by the same sum of the permutations, where in addition each odd permutation is taken with a negative sign. Permanents occur naturally in various counting problems in combinatorics <ref> [4] </ref>, graph theory [1], and logic. If there was a way to evaluate, or even to approximate permanents in a polynomial time, then every P #P (and thus every NP-complete) problem could have been evaluated in polynomial time [8] [3]. <p> : (h n;i n j) n J ( j=1 n X u nj j j;i n i) 1 n J n ! The matrix U J is derived from the unitary matrix, U, with the first row taken n J 1 times, the second row n J 2 times, etc. <ref> [4] </ref>.
Reference: [5] <author> Pauli, Wolfgang, </author> <title> "The connection between spin and statistics", </title> <journal> Phys. </journal> <volume> Rev.58, </volume> <year> (1940) </year> <month> 716-722. </month>
Reference-contexts: An intriguing computational question is naturally raised when considering quantum statistical mechanics of identical particles. By Pauli's "spin-statistics" theorem <ref> [5] </ref>, the quantum state of identical particles is in general either symmetric with respect to exchange of particles for integer spin particles (bosons), or anti-symmetric for half-integer spin particles (fermions).
Reference: [6] <author> Shor, Peter, </author> <title> "Algorithms for Quantum Computations: Discrete Logarithms and Factoring", </title> <booktitle> Proceedings of the 35th Annual Symposium on the Foundation of Computer Science, </booktitle> <editor> (S. Goldwasser ed.), </editor> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. </address> <year> (1994), </year> <pages> 124-134. </pages>
Reference-contexts: 1 Introduction Quantum computational models have recently become important for the theory of computational complexity when it was shown that factorization can be performed in a polynomial time by a Quantum Turing machine <ref> [7, 6] </ref>. An intriguing computational question is naturally raised when considering quantum statistical mechanics of identical particles.
Reference: [7] <author> Simon, Daniel, </author> <booktitle> "On the Power of Quantum Computation", Proceedings of the 35th Annual Symposium on the Foundation of Computer Science, </booktitle> <editor> (Shafi Goldwasser ed.), </editor> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA. </address> <year> (1994), </year> <pages> 116-123. </pages>
Reference-contexts: 1 Introduction Quantum computational models have recently become important for the theory of computational complexity when it was shown that factorization can be performed in a polynomial time by a Quantum Turing machine <ref> [7, 6] </ref>. An intriguing computational question is naturally raised when considering quantum statistical mechanics of identical particles.
Reference: [8] <author> Valiant, Leslie, </author> <title> "The Complexity of Computing the Permanent", </title> <booktitle> Theoretical Computer Science 8, </booktitle> <year> 1979, </year> <pages> 189-201. </pages>
Reference-contexts: Permanents occur naturally in various counting problems in combinatorics [4], graph theory [1], and logic. If there was a way to evaluate, or even to approximate permanents in a polynomial time, then every P #P (and thus every NP-complete) problem could have been evaluated in polynomial time <ref> [8] </ref> [3]. It can be shown that even the approximation of the log of the permanent is a hard problem [9].
Reference: [9] <author> Zuckerman, David, </author> <title> "NP-Complete Problems Have a Version That's Hard to Approximate", </title> <booktitle> Proceedings of the 8th Annual Conference on Structure in Complexity Theory. </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> (1993) </year> <month> 305-123. </month>
Reference-contexts: It can be shown that even the approximation of the log of the permanent is a hard problem <ref> [9] </ref>. The key technical reason for that computational difference between permanents and determinants is that determinants are invariants under similarity transformations of the matrix, while no such simple invariants are known for the permanent. So diagonalization of the matrix or similar transformations can not help for permanents.
References-found: 9

