URL: ftp://ftp.cs.man.ac.uk/pub/TR/UMCS-96-1-1.ps.Z
Refering-URL: http://www.cs.man.ac.uk/cstechrep/Abstracts/UMCS-96-1-1.html
Root-URL: http://www.cs.man.ac.uk
Title: Modal Observation Equivalence of Processes  
Author: W. P. R. Mitchell and D. P. Carlisle 
Affiliation: Computer Science University of Manchester  
Pubnum: ISSN 1361 6161  
Abstract: Department of Computer Science University of Manchester Technical Report Series UMCS-96-1-1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. C. M. Baeten, J. A. Berstra, J. W. Klop, </author> <title> `Ready Trace semantics for concrete algebra with the priority operator', </title> <journal> the Computer Journal, 1987, </journal> <volume> 30, vol 6, </volume> <month> pp498-506. </month>
Reference-contexts: Define f P F tr = f S (P fl ), one can prove P F tr Q iff j= f S (P fl ) $ f S (Q fl ). 27 5.3 Ready Trace Equivalence This equivalence has occurred in the literature under various guises. See [22], <ref> [1] </ref> or [23] for example. Take j = a 1 X 1 a 2 X 2 where the a i are action names and the X i are finite sets of action names.
Reference: [2] <author> B. Bloom, S. Istrail, A. R. Meyer, </author> <note> `Bisimulation can't be traced: preliminary report', </note> <editor> POPL'15, </editor> <booktitle> 15th ACM Symposium on Principles of Progamming Languages 1988, </booktitle> <pages> pp 229-239. </pages>
Reference-contexts: _ a ^ ( b ^ F)) It is indeed the case that P S Q and it is straightforward to check the processes satisfy the relevant formulae. 3.2 Ready Simulation Equivalence Ready simulation also goes by the name of 2/3-simulation, and was originally defined as GSOS trace congruence in <ref> [2] </ref>.
Reference: [3] <author> S. D. Brookes, C. A. R. Hoare, A. W. Roscoe, </author> <title> `A theory of communicating sequential processes', </title> <journal> JACM 31, </journal> <volume> vol 3, </volume> <pages> pp. 560-599. </pages>
Reference-contexts: Write P = F tr Q iff for every sequence j, P j= j , Q j= j This relation also goes by the name of refusal semantics [21]. It is an obvious derivative of failure semantics <ref> [3] </ref>. This is a different equivalence to trace, for example a (b + c) 6= F tr a b + a c whereas a (b + c) = tr a b + a c.
Reference: [4] <author> M. Dam, </author> <title> `Model Checking Mobile Processes', </title> <publisher> LNCS 715, </publisher> <year> 1993, </year> <pages> pp. 22-36. </pages>
Reference-contexts: Mads Dam has also published <ref> [4] </ref> a paper describing a first order logic which characterises strong late bisimulation. The current state of the literature suggests that there is a proliferation of modal logics, each new equivalence generating a new logic to characterise it.
Reference: [5] <author> S. Graf, J.Sifakis, </author> <title> `A modal characterisation of observational equivalence of finite terms of CCS', </title> <booktitle> Information and Control 68, </booktitle> <pages> 125-145, </pages> <year> 1986. </year>
Reference-contexts: In doing this it is possible to show (see [25]) that for each process P there is a fix-point multi-modal logic formula f (P ) such that P Q if and only if P j= f (Q). Graf and Sifakis <ref> [5] </ref> defined an alternative multi-modal logic to that of Hennessey and Milner which characterised and simulation equivalence exactly in the same style as Hennessey and Milner.
Reference: [6] <author> R. J. van Glabbeek, </author> <title> `The Linear Time Branching Time Spectrum', </title> <journal> Concur'90, </journal> <volume> LNCS 458, </volume> <pages> pp. 278-297. </pages>
Reference-contexts: 1 Introduction There are over a hundred different observation equivalence relations now listed in the literature. These equivalences range from trace equivalence at one extreme to strong bisimulation at the other. Van Glabbeek <ref> [6] </ref>, [7] has produced some excellent surveys of most of these equivalences. Essentially an observation equivalence oe is any equivalence over process terms which contains , strong bisimulation equivalence [16]. That is, P Q ) P oe Q. <p> Whereas P j= f g (Q) but P 6j= f 0 h (Q). So that P 6 RS Q. 3.3 Complete Simulation Complete simulation, to be found in <ref> [6] </ref>, is in some ways a dual to ready simulation, the subject of the last section. <p> Define f nRS = rf n ^ rf 0 n . Notice that f 1RS = f RS . Proposition 15. For each n, (n + 1)S $ nRS $ nS. Proof In <ref> [6] </ref> it is proved that 2S $ RS. It is also easy to see that f 2S ! f RS . A straightforward induction on n, proves that f (n+1)S ! f nRS . It is trivially the case that f nRS ! f nS .
Reference: [7] <author> R. J. van Glabbeek, </author> <title> `The Linear Time Branching Time Spectrum II', </title> <publisher> Concur'93, LNCS 715. </publisher>
Reference-contexts: 1 Introduction There are over a hundred different observation equivalence relations now listed in the literature. These equivalences range from trace equivalence at one extreme to strong bisimulation at the other. Van Glabbeek [6], <ref> [7] </ref> has produced some excellent surveys of most of these equivalences. Essentially an observation equivalence oe is any equivalence over process terms which contains , strong bisimulation equivalence [16]. That is, P Q ) P oe Q. <p> By allowing fix-point operators in S one can find a formula f (P ) for each process P such that P and Q are simulation equivalent if and only if P j= f (Q) and Q j= f (P ). In van Glabbeeks paper <ref> [7] </ref> there are well over a hundred observational equivalences. The semantics of all these is roughly a generalisation of the above idea of Hennessey and Milner in characterising simulation. <p> Choose simpler formulae which are implied by the characteristic formula, and try those. 15 3.5 Strong bisimulation equivalence Strong bisimulation [16] is at the heart of all the observational equivalences which appear in the literature. Any equivalence which is classified in van Glabbeek's paper <ref> [7] </ref> contains strong bisimulation. The fact that strong bisimulation is a modal equivalence, and so has a characteristic formula has really been known since [16]. Though Milner does not explicitly state the result in that form, and does not use exactly the same modal logic as K .
Reference: [8] <author> U. Goltz, Ruurd Kuiper, W. Penczek, </author> <title> `Propositional Temporal Logic and Equivalences', </title> <publisher> Concur'92, LNCS 630. </publisher>
Reference-contexts: All these equivalences contain bisimulation equivalence and are therefore logic equivalences as proved above. By giving each equivalence an accompanying multi-modal logic van Glabbeek is able to construct an inclusion lattice hierarchy for the equivalences. Goltz, Kuiper, and Penczek <ref> [8] </ref> have taken this approach a step further by looking at logics for L oe which are not multi-modal but instead work with modalities which are more in character 3 with CTL fl like operators.
Reference: [9] <author> J. F. Groote, F. W. Vaandrager, </author> <title> `Structured operational semantics and bisimulation as a congruence', </title> <type> Report CS-R8845, </type> <institution> CWI, Amsterdam, </institution> <note> also an extended abstract in ICALP 89, LNCS 372, pp423-438. 29 </note>
Reference-contexts: The proof that f CS is the characteristic formula for CS is analogous to the proof that f S is the characteristic formula for S . 3.4 2-nested simulation equivalence The 2-nested simulation equivalence appeared in a paper by Groote and Vaandrager <ref> [9] </ref> in 1988. A relation R over processes is a 2-nested simulation if P RQ implies * P S Q and a a DefineP 2S Q iff there are 2-nested simulations R 1 and R 2 such that P R 1 Q and QR 2 P .
Reference: [10] <author> M. </author> <title> Hennessey `A Model for the -Calculus, </title> <type> Technical Report, </type> <institution> Computer Science Dept, Sussex University 1992. </institution>
Reference: [11] <author> M. Hennessey, R. </author> <title> Milner `On observing nondeterminism and concurrency', </title> <publisher> Springer-Verlag LNCS 85, </publisher> <pages> 295-309, </pages> <year> 1980. </year>
Reference-contexts: Moreover the various well known bisimulation equivalences are direct limits of the more straightforward simulation like equivalences. 1.1 Related Work The Hennessey Milner logic <ref> [11] </ref> was the first attempt to understand bisimulation equivalence in terms of a modal style logic. The essentials of this approach are roughly this. Each process term of CCS can be regarded as a finite edge labeled directed graph. Each edge is labeled with an action name. <p> For a process P depicted by graph G with start node , define P j= f to denote that (G; ) j= f . Hennessey and Milner <ref> [11] </ref> proved that P Q iff for every Hennessey Milner multi-modal formula f , P j= f , Q j= f . This formulation has been refined by adding fix point operators to the logic.
Reference: [12] <author> M. Hennessey, R. </author> <title> Milner `Algebraic Laws for Nondeterminism and Concurrency', </title> <journal> JACM 32(1), </journal> <pages> pp. 137-161. </pages>
Reference-contexts: The advantage of Graf and Sifakis' logic was that it provided a much more concise formula for f (P ), and the logic was able to more directly express properties of nondeterminism. Later Hennessey and Milner <ref> [12] </ref> showed that if one defines a logic S whose formulae are constructed solely from [a], hai, ^, and constants True and False, then P is simulation equivalent to Q if and only if for every formulae f of S, P j= f , Q j= f .
Reference: [13] <author> M. Hennessey, X. </author> <title> Liu `A Modal Logic for Message Passing Processes', </title> <type> Technical Report, </type> <institution> Computer Science Dept, Sussex University January 1993. </institution>
Reference-contexts: Their paper deals with observations which do not always contain and so fall outside of the scope of this paper. The -calculus is beginning to succumb to a similar approach <ref> [13] </ref>.
Reference: [14] <author> C. A. R. </author> <title> Hoare `Communicating Sequential Processes' Prentice Hall, </title> <year> 1985. </year>
Reference-contexts: Write P j= j iff there is a sequence of transitions P a 2 ! P 2 Write P tr Q iff for every sequence j, P j= j , Q j= j This relation is as old as time itself. It can be found most easily in <ref> [14] </ref>. A process P is deterministic if P a a ! P 00 implies that P 0 P 00 . In chapter 10 of [16] Milner points out that if two processes P , Q are deterministic, then P tr Q iff P Q.
Reference: [15] <author> G. E. Hughes, M.J.Cresswell, </author> <title> `An Introduction to Modal Logic', </title> <month> Methuen(UP) </month> <year> 1969. </year>
Reference-contexts: That is, P Q ) P oe Q. This paper demonstrates that there is a unified way of giving semantics to these equivalences in terms of a single modal logic K (for Kripke). This is a particularly simple logic. It is the logic K (see <ref> [15] </ref> for details) with an added fix point operator . The only modal operators for K are always and sometime. The formula f loosely translates as: in every next state from here, f is true; the formula - f translates as: in some next state from here, f is true.
Reference: [16] <author> R. </author> <title> Milner `Communication and Concurrency', </title> <publisher> Prentice Hall, </publisher> <year> 1989. </year>
Reference-contexts: These equivalences range from trace equivalence at one extreme to strong bisimulation at the other. Van Glabbeek [6], [7] has produced some excellent surveys of most of these equivalences. Essentially an observation equivalence oe is any equivalence over process terms which contains , strong bisimulation equivalence <ref> [16] </ref>. That is, P Q ) P oe Q. This paper demonstrates that there is a unified way of giving semantics to these equivalences in terms of a single modal logic K (for Kripke). This is a particularly simple logic. <p> Therefore one can define f oe P = f (P oe ). A multi-modal logic formula f characterising as above has been known for some time, see <ref> [16] </ref> or [25]. The above argument therefore works equally well in constructing a multi-modal characterisation of oe . One of the aims in this paper is to show that there is a simple logical framework in which to place observational equivalences. <p> This provides a useful heuristic method of determining when two processes are different. Choose simpler formulae which are implied by the characteristic formula, and try those. 15 3.5 Strong bisimulation equivalence Strong bisimulation <ref> [16] </ref> is at the heart of all the observational equivalences which appear in the literature. Any equivalence which is classified in van Glabbeek's paper [7] contains strong bisimulation. The fact that strong bisimulation is a modal equivalence, and so has a characteristic formula has really been known since [16]. <p> Strong bisimulation <ref> [16] </ref> is at the heart of all the observational equivalences which appear in the literature. Any equivalence which is classified in van Glabbeek's paper [7] contains strong bisimulation. The fact that strong bisimulation is a modal equivalence, and so has a characteristic formula has really been known since [16]. Though Milner does not explicitly state the result in that form, and does not use exactly the same modal logic as K . Walker describes how to formulate a characteristic formula for in [25] using Hennessey Milner logic. <p> If we put f 1 = g 1 and f 2 = g 2 then the pair f 1 , f 2 is a weak bisimulation equivalence between P and Q, hence P Q. 3.7 Congruence Congruence <ref> [16] </ref> is a fascinating equivalence relation. It can be characterised by the o -laws for finite processes. These converted into modal logic axioms [19] provide an elegant way of constructing a denotational semantics for congruence. <p> It can be found most easily in [14]. A process P is deterministic if P a a ! P 00 implies that P 0 P 00 . In chapter 10 of <ref> [16] </ref> Milner points out that if two processes P , Q are deterministic, then P tr Q iff P Q. It is equally true that for any equivalence oe between trace and bisimulation, that P tr Q iff P oe Q iff P Q.
Reference: [17] <author> R. Milner J. Parrow, D. </author> <title> Walker `A Calculus of Mobile Processes' I and II, </title> <journal> Information and Computation, </journal> <volume> V100, </volume> <pages> pp 1-78, </pages> <year> 1992. </year>
Reference: [18] <author> R. </author> <title> Milner `Action Structures', </title> <type> Technical Report, </type> <institution> Computer Science Dept, Edinburgh University, </institution> <month> December </month> <year> 1992. </year>
Reference: [19] <author> W. P. R. </author> <title> Mitchell `Modal Logic and Equality for Process Algebra', </title> <note> to appear in J. Logic and Computation, Vol 5 1995. </note>
Reference-contexts: It can be characterised by the o -laws for finite processes. These converted into modal logic axioms <ref> [19] </ref> provide an elegant way of constructing a denotational semantics for congruence.
Reference: [20] <author> D. M. R. Park, </author> <title> `Concurrency and automata on infinite sequences', </title> <booktitle> Proceedings of 5th GI Conference, </booktitle> <volume> LNCS 104, </volume> <pages> pp 167-183. </pages>
Reference-contexts: Q. 2 During the rest of this section each of simulation, complete simulation, ready simulation, 2-nested simulation, weak bisimulation and congruence will be proved to be modal equivalences by application of proposition 8. 3.1 Simulation Equivalence Simulation equivalence has been around in the literature for some time, see for example <ref> [20] </ref>. A relation R over processes is a simulation if P RQ ) 8P ! P 0 9Q ! Q 0 : P 0 RQ 0 Define P S Q iff there are simulations R 1 and R 2 such that P R 1 Q and QR 2 P .
Reference: [21] <author> I. C. C. </author> <title> Phillips `Refusal Testing', </title> <journal> journal of Theoretical Computer Science, </journal> <volume> 50, </volume> <pages> pp. 241-284. </pages>
Reference-contexts: Write P = F tr Q iff for every sequence j, P j= j , Q j= j This relation also goes by the name of refusal semantics <ref> [21] </ref>. It is an obvious derivative of failure semantics [3]. This is a different equivalence to trace, for example a (b + c) 6= F tr a b + a c whereas a (b + c) = tr a b + a c.
Reference: [22] <author> A. Pnueli, </author> <title> `Linear and branching structures in the semantics and logics of reactive systems', </title> <journal> ICALP'85, </journal> <volume> LNCS 194, </volume> <pages> pp. 15-32. </pages>
Reference-contexts: Define f P F tr = f S (P fl ), one can prove P F tr Q iff j= f S (P fl ) $ f S (Q fl ). 27 5.3 Ready Trace Equivalence This equivalence has occurred in the literature under various guises. See <ref> [22] </ref>, [1] or [23] for example. Take j = a 1 X 1 a 2 X 2 where the a i are action names and the X i are finite sets of action names.
Reference: [23] <author> L. Pomello, </author> <title> `Some equivalence notions for concurrent systems. An overview', </title> <booktitle> Advances in Petri Nets 1985, </booktitle> <volume> LNCS 222, </volume> <pages> pp 381-400. </pages>
Reference-contexts: See [22], [1] or <ref> [23] </ref> for example. Take j = a 1 X 1 a 2 X 2 where the a i are action names and the X i are finite sets of action names.
Reference: [24] <author> W. C. Rounds, S. D. Brookes, </author> <title> `Possible Futures, acceptances, refusals, and communicating processes', </title> <booktitle> Proceedings 22nd Annual Symposium on Foundations of Computer Science, 1982 IEEE, </booktitle> <pages> pp. 140-149. </pages>
Reference-contexts: Exhaustively applying this procedure constructs P fl . Define f P Rtr = f S (P fl ). One can show that P Rtr Q iff j= f S (P fl ) $ f S (Q fl ). 5.4 Possible Future Possible future equivalence <ref> [24] </ref> could accurately be described as 2-nested trace equivalence. Let T (P ) = fj j P j= jg, where P j= j is given the same definition as for trace equivalence.
Reference: [25] <author> D. </author> <title> Walker `Logics for Processes', </title> <booktitle> Proceedings of the VI Banff Workshop: Process Algebras, </booktitle> <address> Banff, Canada, </address> <month> August </month> <year> 1992. </year> <month> 30 </month>
Reference-contexts: Therefore one can define f oe P = f (P oe ). A multi-modal logic formula f characterising as above has been known for some time, see [16] or <ref> [25] </ref>. The above argument therefore works equally well in constructing a multi-modal characterisation of oe . One of the aims in this paper is to show that there is a simple logical framework in which to place observational equivalences. <p> Hennessey and Milner [11] proved that P Q iff for every Hennessey Milner multi-modal formula f , P j= f , Q j= f . This formulation has been refined by adding fix point operators to the logic. In doing this it is possible to show (see <ref> [25] </ref>) that for each process P there is a fix-point multi-modal logic formula f (P ) such that P Q if and only if P j= f (Q). <p> Though Milner does not explicitly state the result in that form, and does not use exactly the same modal logic as K . Walker describes how to formulate a characteristic formula for in <ref> [25] </ref> using Hennessey Milner logic. Walker does not make the observation that this characteristic formula exists as a formula in a predicate modal logic such as K P ar .
References-found: 25

