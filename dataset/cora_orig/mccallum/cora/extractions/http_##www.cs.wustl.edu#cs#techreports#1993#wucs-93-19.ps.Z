URL: http://www.cs.wustl.edu/cs/techreports/1993/wucs-93-19.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: 
Title: Approximation Algorithms for Configuring Hierarchical Nonblocking Communication Networks  
Author: J. Andrew Fingerhut 
Affiliation: wucs-93-19  
Abstract-found: 0
Intro-found: 1
Reference: [AV79] <author> Dana Angluin and Leslie G. Valiant. </author> <title> Fast probabilistic algorithms for Hamiltonian circuits and matchings. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 18 </volume> <pages> 155-193, </pages> <year> 1979. </year>
Reference-contexts: Lemma 3.6 then shows that A (I)=L (I) is close to 1 for all balanced instances I. For the first lemma, we will need a theorem of Hoeffding [Hoe63] and another due to Angluin and Valiant <ref> [AV79, HR90] </ref>. Theorem 3.3. (Hoeffding) Let X i , 1 i n, be independent random variables, each having mean and Prfa X i bg = 1.
Reference: [FF64] <author> L. R. Ford and D. R. Fulkerson. </author> <title> Flows in Networks. </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, NJ, </address> <year> 1964. </year>
Reference-contexts: The second number will be explained in the example below. An important property of this network is that for any compatible set of point-to-point requests R, there is a unique corresponding integer-valued network flow f R : E ! IN (see any of <ref> [FF64, Hu69, Tar83] </ref> for definition of a flow) that does not exceed any of the edge capacities. <p> In the special case when the traffic is ff; !-bounded, it is easy to see that the minimum cut in L l is either (fsg; V fsg), with value ff (X l ), or (V ftg; ftg), with value !(N X l ). By the max-flow, min-cut theorem <ref> [FF64] </ref>, the value of the maximum flow is then equal to minfff (X l ); !(N X l )g. This special case will be used often later. 13 3.4. Experimental results In this section, we compare the value of the lower bound to the costs of easily computable nonblocking networks.
Reference: [Fin91] <author> J. Andrew Fingerhut. </author> <title> Designing communication networks with fixed or nonblock ing traffic requirements. </title> <type> Technical Report WUCS-91-55, </type> <institution> Washington University, St. Louis, Missouri, </institution> <year> 1991. </year>
Reference-contexts: In this paper, we consider one simple routing algorithm, called fixed path routing. All of the definitions in this section have been simplified with this routing algorithm in mind. See Fingerhut <ref> [Fin91, Fin92] </ref> for definitions of other routing algorithms, and a more general definition of a nonblocking network. When fixed path (FP) routing is used, there is a table path. For each ordered pair of endpoints u; v, path (u; v) is a directed path from u to v.
Reference: [Fin92] <author> J. Andrew Fingerhut. </author> <title> Algorithms for designing nonblocking communication net works with general topologies. </title> <type> Technical Memorandum WUCS-TM-92-05, </type> <institution> Wash-ington University, St. Louis, Missouri, </institution> <year> 1992. </year>
Reference-contexts: In this paper, we consider one simple routing algorithm, called fixed path routing. All of the definitions in this section have been simplified with this routing algorithm in mind. See Fingerhut <ref> [Fin91, Fin92] </ref> for definitions of other routing algorithms, and a more general definition of a nonblocking network. When fixed path (FP) routing is used, there is a table path. For each ordered pair of endpoints u; v, path (u; v) is a directed path from u to v. <p> SOLUTION COST: The cost of the network is the sum of the costs of each link: X cost u;v (cap (u; v)) OBJECT: Find a solution with minimum cost. 3. Flat traffic limits What are called flat traffic limits in this paper have been examined before by Finger-hut <ref> [Fin92] </ref>. They are defined again here in this section. Section 4.1 defines a more general type of traffic called hierarchical traffic limits. 5 3.1. <p> The closer the traffic is to satisfying this condition, then the more likely it is that a complete network, with direct links between every node pair, is cheaper than any tree solution. When the traffic limits are -bounded, the complete network is the optimal solution <ref> [Fin92] </ref>. All of the curves except the top one are average performance ratios, averaged over 50 instances. The top curve is the maximum performance ratio among all 50 instances. Similar curves for the other values of hi would only clutter the plot. <p> In this section, we show that maxusage (l) remains the same when multipoint connections are allowed. This means that the worst-case traffic pattern for any link can be achieved by point-to-point connections only. Fingerhut <ref> [Fin92, Section 7.1.2] </ref> proves that the link capacities cap (l) = maxusage (l), for all l 2 L, are nonblocking when multicast connection requests (u; fv 1 ; : : : ; v k g; r) are satisfied by using a route which is a subtree of S k i=1 path
Reference: [GMS92] <author> Martin Grotschel, Clyde L. Monma, and Mechthild Stoer. </author> <title> Computational results with a cutting plane algorithm for designing communication networks with low-connectivity constraints. </title> <journal> Operations Research, </journal> <volume> 40(2) </volume> <pages> 309-330, </pages> <month> March-April </month> <year> 1992. </year>
Reference-contexts: We will examine network configurations which are tolerant to single link or node failures, called two-connected networks. Grotschel et al have examined a similar problem <ref> [GMS92] </ref>. Another extension is to allow the manager to specify the traffic based on the locations of users and their terminals, give possible locations where switches may be installed, and then let the configuration algorithm select the cheapest configuration. The current work assumes that the switch locations are fixed.
Reference: [GT88] <author> Andrew V. Goldberg and Robert Endre Tarjan. </author> <title> A new approach to the maximum flow problem. </title> <journal> Journal of the ACM, </journal> <volume> 35(4) </volume> <pages> 921-940, </pages> <month> October </month> <year> 1988. </year>
Reference-contexts: This algorithm has the best asymptotic efficiency known to the author. Goldberg and Tarjan <ref> [GT88, Section 4] </ref> describe an algorithm which is quite easy to implement with a worst-case running time of O (n 3 ).
Reference: [GT90] <author> Andrew V. Goldberg and Robert Endre Tarjan. </author> <title> Finding minimum-cost cir culations by successive approximation. </title> <journal> Mathematics of Operations Research, </journal> <volume> 15(3) </volume> <pages> 430-466, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Simply negate the edge costs given above to convert it to a minimum cost flow problem. The most efficient algorithms for this problem known to the author are cited by Goldberg and Tarjan <ref> [GT90] </ref>. We close this section with an example that shows why we restrict the cost coefficients fl () to those that satisfy the triangle inequality.
Reference: [Hoe63] <author> Wassily Hoeffding. </author> <title> Probability inequalities for sums of bounded random variables. </title> <journal> American Statistical Association Journal, </journal> <volume> 58 </volume> <pages> 13-30, </pages> <month> March </month> <year> 1963. </year>
Reference-contexts: Lemma 3.3 states that a randomly generated instance I is "balanced" with probability approaching 1 as n goes to infinity. Lemma 3.6 then shows that A (I)=L (I) is close to 1 for all balanced instances I. For the first lemma, we will need a theorem of Hoeffding <ref> [Hoe63] </ref> and another due to Angluin and Valiant [AV79, HR90]. Theorem 3.3. (Hoeffding) Let X i , 1 i n, be independent random variables, each having mean and Prfa X i bg = 1.
Reference: [HR90] <author> Torben Hagerup and Christine Rub. </author> <title> A guided tour of Chernoff bounds. </title> <journal> Infor mation Processing Letters, </journal> <volume> 33(6) </volume> <pages> 305-308, </pages> <year> 1990. </year>
Reference-contexts: Lemma 3.6 then shows that A (I)=L (I) is close to 1 for all balanced instances I. For the first lemma, we will need a theorem of Hoeffding [Hoe63] and another due to Angluin and Valiant <ref> [AV79, HR90] </ref>. Theorem 3.3. (Hoeffding) Let X i , 1 i n, be independent random variables, each having mean and Prfa X i bg = 1.
Reference: [Hu69] <author> Te Chiang Hu. </author> <title> Integer Programming and Network Flows. </title> <publisher> Addison-Wesley, </publisher> <year> 1969. </year>
Reference-contexts: The second number will be explained in the example below. An important property of this network is that for any compatible set of point-to-point requests R, there is a unique corresponding integer-valued network flow f R : E ! IN (see any of <ref> [FF64, Hu69, Tar83] </ref> for definition of a flow) that does not exceed any of the edge capacities.
Reference: [JKS92a] <author> Carolyn Jack, Sheng-Roan Kai, and Alexander Shulman. </author> <title> Design and imple mentation of an interactive optimization system for telephone network planning. </title> <journal> Operations Research, </journal> <volume> 40(1) </volume> <pages> 14-25, </pages> <month> January-February </month> <year> 1992. </year>
Reference-contexts: For flat ff; !-bounded traffic, this problem is very similar to that of expanding the outside plant of a telephone central office. This problem has been treated extensively by Jack, Kai, Shulman, and others <ref> [JKS92a, JKS92b] </ref>. 40
Reference: [JKS92b] <author> Carolyn Jack, Sheng-Roan Kai, and Alexander Shulman. </author> <title> NETCAP an in teractive optimization system for GTE telephone network planning. </title> <journal> Interfaces, </journal> <volume> 22(1) </volume> <pages> 72-89, </pages> <month> January-February </month> <year> 1992. </year>
Reference-contexts: For flat ff; !-bounded traffic, this problem is very similar to that of expanding the outside plant of a telephone central office. This problem has been treated extensively by Jack, Kai, Shulman, and others <ref> [JKS92a, JKS92b] </ref>. 40
Reference: [KRT92] <author> V. King, S. Rao, and Robert Endre Tarjan. </author> <title> A faster deterministic maximum flow algorithm. </title> <booktitle> In Proc. 3rd ACM-SIAM Symp. Discrete Algorithms, </booktitle> <pages> pages 157-164, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The first line is just Equation (4), and (5) follows from the many to one correspondence from request sets R to flows f . Determining the flow with maximum value is simply a maximum flow problem, for which many efficient algorithms have been designed. King, Rao, and Tarjan <ref> [KRT92] </ref> have designed an algorithm with a worst-case running time of O (mn + n 2+* ) for any * &gt; 0, where m is the number of edges in the network, and n is the number of vertices. This algorithm has the best asymptotic efficiency known to the author.
Reference: [Min89] <author> Michel Minoux. </author> <title> Network synthesis and optimum network design problems: Mod els, solution methods and applications. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 313-360, </pages> <year> 1989. </year> <month> 41 </month>
Reference-contexts: 1. Introduction There has been much work done on algorithms for configuring communication networks as cheaply as possible, given that they must satisfy certain offered traffic. For example, see the surveys by Minoux <ref> [Min89] </ref> and Magnanti and Wong [MW84]. However, most of the work in this area assumes that the network designer knows, at least approximately, how much traffic will appear between every pair of nodes in the network.
Reference: [MT89] <author> Riccardo Melen and Jonathan S. Turner. </author> <title> Nonblocking multirate networks. </title> <journal> SIAM J. Comput., </journal> <volume> 18(2) </volume> <pages> 301-313, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: It is possible that some requests like this could succeed, and then other users operating within their termination capacities may block because someone else is "breaking the rules". This idea of a termination capacity was inspired by the "maximum port weight" fi used by Melen and Turner <ref> [MT89, MT90] </ref>. An additional idea which may be useful in lowering the cost of network configurations is point-to-point restrictions. They are specified by giving a value (u; v) 2 IN for each u; v 2 N .
Reference: [MT90] <author> Riccardo Melen and Jonathan S. Turner. </author> <title> Nonblocking multirate distribution networks. </title> <booktitle> In Proc. INFOCOM, </booktitle> <pages> pages 1-8?, </pages> <year> 1990. </year>
Reference-contexts: It is possible that some requests like this could succeed, and then other users operating within their termination capacities may block because someone else is "breaking the rules". This idea of a termination capacity was inspired by the "maximum port weight" fi used by Melen and Turner <ref> [MT89, MT90] </ref>. An additional idea which may be useful in lowering the cost of network configurations is point-to-point restrictions. They are specified by giving a value (u; v) 2 IN for each u; v 2 N .
Reference: [MW84] <author> Thomas L. Magnanti and Richard T. Wong. </author> <title> Network design and transportation planning: models and algorithms. </title> <journal> Transportation Science, </journal> <volume> 18(1) </volume> <pages> 1-55, </pages> <month> February </month> <year> 1984. </year>
Reference-contexts: 1. Introduction There has been much work done on algorithms for configuring communication networks as cheaply as possible, given that they must satisfy certain offered traffic. For example, see the surveys by Minoux [Min89] and Magnanti and Wong <ref> [MW84] </ref>. However, most of the work in this area assumes that the network designer knows, at least approximately, how much traffic will appear between every pair of nodes in the network.
Reference: [PS82] <author> Christos H. Papadimitriou and Kenneth Steiglitz. </author> <title> Combinatorial Optimization: Algorithms and Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: This is because the coefficient matrix which arises from the inequalities is totally unimodular, and all basic feasible solutions of such a linear program are integral when the right-hand side values (here the ff; !; values) are integral <ref> [PS82, Section 13.2] </ref>. 38 5.2. Handling multipoint traffic In every previous section on link dimensioning, we have only explicitly considered point-to-point requests and connections. If allowing multipoint connections could increase maxusage (l) in some situations, then we would want to find a way to compute these larger values.
Reference: [Tar83] <author> Robert Endre Tarjan. </author> <title> Data Structures and Network Algorithms. </title> <publisher> SIAM, </publisher> <year> 1983. </year> <month> 42 </month>
Reference-contexts: The second number will be explained in the example below. An important property of this network is that for any compatible set of point-to-point requests R, there is a unique corresponding integer-valued network flow f R : E ! IN (see any of <ref> [FF64, Hu69, Tar83] </ref> for definition of a flow) that does not exceed any of the edge capacities. <p> This problem can be modeled as a maximum cost flow problem <ref> [Tar83, Section 8.4] </ref>. An instance of this problem is a directed graph with edge costs as well as edge capacities. The cost of an edge represents the cost per unit of flow on that edge.
References-found: 19

