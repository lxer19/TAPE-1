URL: http://www.cs.utah.edu/~zachary/sigcse97.ps
Refering-URL: http://www.cs.utah.edu/~zachary/
Root-URL: 
Title: The Gestalt of Scientific Programming: Problem, Model, Method, Implementation, Assessment Subject areas: non-majors courses, instructional
Abstract: The process of solving a problem in computational science neither begins nor ends with designing and writing a computer program. The process entails isolating the problem, devising a mathematical model, identifying a computational method, producing an implementation, and assessing the solution. Unfortunately, the introductory programming courses taken by science and engineering students frequently focus only on implementation issues. As a result, such students are often ill-equipped to solve computational problems. We have created a course and written an accompanying textbook that present an introduction to scientific programming. Both are organized around the process for solving computational science problems sketched above. In this paper we illustrate this approach by describing two representative problems from the course and textbook. Along the way, we present Java applets that were designed to illustrate some of the ideas that underlie the two problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> ARNOLD, K., AND GOSLING, J. </author> <title> The Java Programming Language. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, Mass., </address> <year> 1986. </year>
Reference: [2] <author> GARDNER, M. </author> <title> Limits of infinite series. </title> <booktitle> In Martin Gardner's Sixth Book of Mathematical Games from Scientific American. </booktitle> <address> Charles Scribner's Sons, New York, </address> <year> 1971, </year> <pages> pp. 163-172. </pages>
Reference: [3] <institution> The online resources are available via the Internet at http://www.cs.utah.edu/~hamlet. </institution>
Reference: [4] <institution> The UCES home page is available via the Internet at http://uces.ameslab.gov. </institution>
Reference-contexts: Chris Johnson, Eric Eide, and Ken Parker collaborated with me on the development of the original versions of the online course notes that eventually led to my textbook. Tom Marchioro and our fellow members of the Department of Energy's Undergraduate Computational Engineering and Science project <ref> [4] </ref> first outlined the five-step approach to computational problem solving that is featured in this paper.
Reference: [5] <author> ZACHARY, J. </author> <title> Introduction to Scientific Programming: Computational Problem Solving using Maple and C. </title> <address> TELOS/Springer-Verlag, </address> <year> 1996. </year>
Reference: [6] <author> ZACHARY, J., JOHNSON, C., EIDE, E., AND PARKER, K. </author> <booktitle> An entry-level course in computational engineering and science. In Papers of the Twenty-Sixth SIGCSE Technical Symposium on Computer Science Education (Mar. 1995), </booktitle> <publisher> ACM Press. </publisher>
References-found: 6

