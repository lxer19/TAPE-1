URL: ftp://ftp.csd.uu.se/pub/papers/reports/0090.ps.gz
Refering-URL: http://www.csd.uu.se/papers/reports.html
Root-URL: 
Email: email fanatoli,voronkovg@csd.uu.se  
Title: Equality Elimination for Semantic Tableaux  
Author: Anatoli Degtyarev Andrei Voronkov 
Note: Supported by a grant from the Swedish Institute On leave from Kiev University Supported by a TFR grant  
Address: Box 311, S-751 05 Uppsala, Sweden  
Affiliation: Computing Science Department Uppsala University  
Abstract: UPMAIL Technical Report No. 90 December 7, 1994 
Abstract-found: 1
Intro-found: 1
Reference: [BDP 89] <author> L. Bachmair, N. Dershowitz, and D. Plaisted. </author> <title> Completion without failure. </title> <editor> In H. At Kaci and M. Nivat, editors, </editor> <booktitle> Resolution of Equations in Algebraic Structures, </booktitle> <volume> volume 2, </volume> <pages> pages 1-30. </pages> <publisher> Academic Press, </publisher> <year> 1989. </year>
Reference: [BGLS 92] <author> L. Bachmair, H. Ganzinger, C. Lynch, and W. Snyder. </author> <title> Basic paramodulation and superposition. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction, volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 462-476, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: It is called a reduction ordering iff 1. is well-founded; 2. if s t then u [s] u [t], for all terms s; t; u and substitutions . We shall always assume that reduction orderings are total on the set T (). Following <ref> [BGLS 92] </ref> we distinguish terms occurring in the original formula from terms introduced by substitution by using closures, i.e. pairs C , where C is a clause, a substitution. The application of a substitution to such a closure is defined by (C ) = C . <p> Intuitively, branch expansion rules encode the conjunction rule of sequent calculi ; ' ; but turned upside down for consistency with the tableau notation. The equality elimination method consists of five inference rules. The basic superposition rules are defined as in <ref> [BGLS 92] </ref>. We always assume that premises of rules have disjoint variables. The first three rules derive clauses. The last two rules derive tableaux. The initial tableau is the tableau consisting of the empty clause. The proof always starts from the initial tableau. <p> The most powerful one is subsump-tion that we can apply in the equality solution part in order to prevent generation of unnecessary clauses. Subsumption for the basic strategy has been explained in <ref> [Deg 82, BGLS 92] </ref>. 12 Appendix A Proof of main theorems In order to prove Theorems 3.1 and 3.2 we define several notions and state and prove several lemmas.
Reference: [BG 94] <author> L. Bachmair and H. Ganzinger. </author> <title> Rewrite-based equational theorem proving with selection and simplification. </title> <journal> Journal of Logic and Computation, </journal> <volume> 4(3) </volume> <pages> 217-247, </pages> <year> 1994. </year>
Reference: [BMSU 86] <author> F. Bancilhon, D. Maier, Y. Sagiv, and J.D. Ullman. </author> <title> Magic sets and other strange ways to implement logic programs. </title> <booktitle> In Proceedings of the 5th ACM SIGMOD-SIGACT Symposium on Principles of Database Systems, </booktitle> <pages> pages 1-15, </pages> <address> Cambridge, MA, </address> <month> March </month> <year> 1986. </year>
Reference-contexts: One can argue pro and contra the principle of locality, but let us note that all problems considered hard in modern theorem proving are solved by local methods. The same phenomenon appears in more applied areas of computer science, for example deductive databases <ref> [BMSU 86, Vie 89] </ref>, parsing [TR 94], production systems [MAT 94], constraint logic programming. In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau. <p> In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau. Methods like Early deduction [Ear 70] in parsing or SLD-AL resolution [Vie 89] and magic sets <ref> [BMSU 86] </ref> use some information from a top-down search but the main information processing is carried out in the bottom-up (not goal-oriented, but local) way. The denial of the locality principle comes to extreme in tableaux with equality based on the notion of (rigid, mixed) E-unifiers.
Reference: [BH 92] <author> B. Beckert and R. Hahnle. </author> <title> An improved method for adding equality to free variable semantic tableaux. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction (CADE), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 678-692, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher>
Reference-contexts: The denial of the locality principle comes to extreme in tableaux with equality based on the notion of (rigid, mixed) E-unifiers. If in ordinary tableaux we can at least search for a closing substitution on one branch of a tableau, then in <ref> [BH 92, Bec 94a] </ref> it is proposed to close all branches of a tableau simultaneously. Now search for a substitution should be made by the inspection of the whole tableau. <p> Theorem 3.2 (Completeness) If fl is provable then there is a derivation of the empty tableau from the initial tableau. Proofs of these two theorems are give in Appendix A. Consider several examples. The following example is taken from <ref> [BH 92] </ref>.
Reference: [Bec 94a] <author> B. Beckert. </author> <title> Adding equality to semantic tableaux. </title> <editor> In K. Broda, M. D'Agostino, R. Gore, R. Jahnson, and S. Reeves, editors, </editor> <booktitle> Proceedings, 3rd Workshop on Theorem Proving with Analytic Tableaux and Related Methods, Abingdon, </booktitle> <pages> pages 29-41, </pages> <institution> Imperial College, </institution> <address> London, TR-94/5, </address> <year> 1994. </year>
Reference-contexts: 1 There are differences in representation of inferences between [Kan 63] and <ref> [Bec 94a] </ref> | Kanger uses sequent proofs. Sequents in [Kan 63] correspond to branches in tableaux [Fit 90]. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in [MM 83]. 1 principle of locality. <p> The denial of the locality principle comes to extreme in tableaux with equality based on the notion of (rigid, mixed) E-unifiers. If in ordinary tableaux we can at least search for a closing substitution on one branch of a tableau, then in <ref> [BH 92, Bec 94a] </ref> it is proposed to close all branches of a tableau simultaneously. Now search for a substitution should be made by the inspection of the whole tableau. <p> A 1 (y) [y=a] [left superposition + equality solution from 6,5] The tableau part of the proof is very easy: 8. A 1 (x) j A 2 [branch expansion] 9. A 2 [branch closure from 7,8] 10. 2 [branch closure from 4,9] Another example if from <ref> [Bec 94a] </ref>: 11 Example 3.3 The formula to be proved is 9x (g (x) 6= f (x) ^ x = a) _ 9x (g (f (x)) 6= x) _ b 6= c _ :P (g (g (a)); b) _ P (a; c) There are two conjunctive subformulas with the following names:
Reference: [Bec 94b] <author> B. Beckert. </author> <title> A completion-based method for mixed universal and rigid E-unification. </title> <editor> In A. Bundy, editor, </editor> <booktitle> Automated Deduction | CADE-12. 12th International Conference on Automated Deduction., volume 814 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 678-692, </pages> <address> Nancy, France, </address> <month> June/July </month> <year> 1994. </year>
Reference-contexts: Now search for a substitution should be made by the inspection of the whole tableau. Although in <ref> [Bec 94b] </ref> it is stated that "methods have to be developed for composing a substitution that closes all branches of a tableau simultaneously from a great number of substitutions closing single branches", it is not clear that such incremental methods exist at all 5 .
Reference: [Bet 58] <author> E.W. Beth. </author> <title> On machines which prove theorems. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 79-92. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1958. </note>
Reference: [Bet 59] <editor> E. Beth. </editor> <booktitle> The Foundations of Mathematics. </booktitle> <publisher> North Holland, </publisher> <year> 1959. </year>
Reference: [Boy 90] <author> T. Boy de la Tour. </author> <title> Minimizing the number of clauses by renaming. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> Proc. 10th CADE, volume 449 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 558-572, </pages> <year> 1990. </year>
Reference: [Boy 71] <author> R.S. Boyer. </author> <title> Locking: a Restriction to Resolution. </title> <type> PhD thesis, </type> <institution> Univ. of Texas, Austin, </institution> <year> 1971. </year>
Reference-contexts: there are several inequalities in the first clause: we only allow for superposition in the leftmost inequality. 1 1 According to our definitions, a clause is a set of literals, so the leftmost literal may sound as nonsense, but this restriction can easily be formalized using a variant of locking <ref> [Boy 71] </ref>. 9 Equality solution (C; s 6= t) where is a most general unifier of s; t. Branch expansion 1.
Reference: [Bra 75] <author> D. Brandt. </author> <title> Proving theorems with the modification method. </title> <journal> SIAM Journal of Computing, </journal> <volume> 4 </volume> <pages> 412-430, </pages> <year> 1975. </year>
Reference: [CP 86] <author> P.T. Cox and T. Pietrzykowski. </author> <title> Incorporating equality into logic programming via surface deduction. </title> <journal> Annals of Pure and Applied Logic, </journal> <volume> 31 </volume> <pages> 177-189, </pages> <year> 1986. </year>
Reference: [Deg 79] <author> A.I. Degtyarev. </author> <title> The strategy of monotone paramodulation (in Russian). </title> <booktitle> In Fifth Soviet All Union Conference on Mathematical Logic, </booktitle> <pages> page 39, </pages> <address> Novosibirsk, </address> <year> 1979. </year>
Reference: [Deg 82] <author> A.I. Degtyarev. </author> <title> On the forms of inference in calculi with equality and paramodulation. </title> <editor> In Yu.V. Kapitonova, editor, </editor> <booktitle> Automation of Research in Mathematics, </booktitle> <pages> pages 14-26. </pages> <institution> Institute of Cybernetics, Kiev, Kiev, </institution> <year> 1982. </year>
Reference-contexts: The most powerful one is subsump-tion that we can apply in the equality solution part in order to prevent generation of unnecessary clauses. Subsumption for the basic strategy has been explained in <ref> [Deg 82, BGLS 92] </ref>. 12 Appendix A Proof of main theorems In order to prove Theorems 3.1 and 3.2 we define several notions and state and prove several lemmas. <p> S does not contain equality; 2. S is inconsistent. Proof. Due to the basic restriction, there is refutation of S fl in which all paramodulations precede all other rules, and all equality solutions precede all resolutions (see <ref> [Deg 82, DV 86b] </ref>). Let us call such refutations regular. In S fl all arguments of non-equality predicates are variables. Then the basic strategy requires that all paramodulations be made into equations, thus becoming left or right superpositions.
Reference: [DV 86a] <author> A.I. Degtyarev and A.A. Voronkov. </author> <title> Automated theorem proving I (in Russian). </title> <journal> Kibernetika, </journal> <volume> (3), </volume> <year> 1986. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference: [DV 86b] <author> A.I. Degtyarev and A.A. Voronkov. </author> <title> Methods of handling equality in machine theorem proving (in Russian). </title> <journal> Kibernetika, </journal> <volume> (3), </volume> <year> 1986. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference-contexts: S does not contain equality; 2. S is inconsistent. Proof. Due to the basic restriction, there is refutation of S fl in which all paramodulations precede all other rules, and all equality solutions precede all resolutions (see <ref> [Deg 82, DV 86b] </ref>). Let us call such refutations regular. In S fl all arguments of non-equality predicates are variables. Then the basic strategy requires that all paramodulations be made into equations, thus becoming left or right superpositions.
Reference: [DV 87] <author> A.I. Degtyarev and A.A. Voronkov. </author> <title> Automated theorem proving II (in Russian). </title> <journal> Kibernetika, </journal> <volume> (4), </volume> <year> 1987. </year> <note> The journal is cover-to-cover translated to English. </note>
Reference: [DV 94] <author> A. Degtyarev and A. Voronkov. </author> <title> A new procedural interpretation of horn clauses with equality. </title> <type> UPMAIL Technical Report 89, </type> <institution> Uppsala University, Computing Science Department, </institution> <month> November </month> <year> 1994. </year>
Reference-contexts: If we try to solve this problems incrementally, then a complete set of unifiers of the first problem is [x=y] which makes the second problem unsolvable. In <ref> [DV 94] </ref> we proved that in a similar situation with SLDE + -resolution [GR 86], the incremental equation solution based on complete sets of E-unifiers is incomplete. 2 equation solution never uses different sets of equations.
Reference: [DJ 90] <author> N. Dershowitz and J.-P. Jouannaud. </author> <title> Rewrite systems. </title> <editor> In J. Van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume B: Formal Methods and Semantics, chapter 6, </booktitle> <pages> pages 243-309. </pages> <publisher> North Holland, </publisher> <address> Amsterdam, </address> <year> 1990. </year>
Reference: [Ear 70] <author> J. Earley. </author> <title> An efficient context-free parsing algorithm. </title> <journal> Communications of the ACM, </journal> <volume> 13(2):94 102, </volume> <year> 1970. </year>
Reference-contexts: In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau. Methods like Early deduction <ref> [Ear 70] </ref> in parsing or SLD-AL resolution [Vie 89] and magic sets [BMSU 86] use some information from a top-down search but the main information processing is carried out in the bottom-up (not goal-oriented, but local) way.
Reference: [Fit 90] <author> M. </author> <title> Fitting. First Order Logic and Automated Theorem Proving. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: 1 There are differences in representation of inferences between [Kan 63] and [Bec 94a] | Kanger uses sequent proofs. Sequents in [Kan 63] correspond to branches in tableaux <ref> [Fit 90] </ref>. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in [MM 83]. 1 principle of locality. A substitution in tableau methods is applied to the whole tableau (see e.g. the "MGU replacement rule" from [Fit 90]), which corresponds to a set of sequences, while in <p> Sequents in [Kan 63] correspond to branches in tableaux <ref> [Fit 90] </ref>. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in [MM 83]. 1 principle of locality. A substitution in tableau methods is applied to the whole tableau (see e.g. the "MGU replacement rule" from [Fit 90]), which corresponds to a set of sequences, while in the inverse method [Vor 92] a substitution is applied to a sequent. <p> Moreover, the tableau is expanding and changing during proof-search. This all suggests that the problem of coupling tableaux and equality should look for a very different methodology. Another suggestion to use a variant of the paramodulation rule proposed in <ref> [Fit 90] </ref> is much more friendly to the locality principle: at least a single inference step involves only a single equation and a term (but also creates a large non-determinism due omnivorous nature of paramodulation | there may be many paramodulation steps creating no future solutions). <p> Thus, the method combines top-down (non-local) tableaux proof search with bottom-up (local) equation solving. Only completely solved equations are used in the tableau part of the proof, thus reducing non-determinism created by applications of paramodulation in <ref> [Fit 90] </ref>. The equation solution is even more restricted by two factors: the use of orderings provided by superposition and the basic restriction of superposition.
Reference: [DH 86] <author> V.J. Digricoli and M.C. Harrison. </author> <title> Equality-based binary resolution. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 33 </volume> <pages> 253-289, </pages> <year> 1986. </year>
Reference: [GR 86] <author> J.H. Gallier and S. Raatz. </author> <title> Extending SLD-resolution methods for horn clauses with equality based on E-unification. </title> <booktitle> In Symposium on Logic Programming, </booktitle> <pages> pages 168-179, </pages> <year> 1986. </year>
Reference-contexts: If we try to solve this problems incrementally, then a complete set of unifiers of the first problem is [x=y] which makes the second problem unsolvable. In [DV 94] we proved that in a similar situation with SLDE + -resolution <ref> [GR 86] </ref>, the incremental equation solution based on complete sets of E-unifiers is incomplete. 2 equation solution never uses different sets of equations.
Reference: [GR 89] <author> J.H. Gallier and S. Raatz. </author> <title> Extending SLD-resolution to equational Horn clauses using E unification. </title> <journal> Journal of Logic Programming, </journal> <volume> 6(3) </volume> <pages> 3-44, </pages> <year> 1989. </year>
Reference: [GNRS 92] <author> J. Gallier, P. Narendran, S. Raatz, and W. Snyder. </author> <title> Theorem proving using equational matings and rigid E-unification. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 39(2) </volume> <pages> 3-44, </pages> <year> 1992. </year>
Reference: [Gal 92] <author> J. Gallier. </author> <title> Unification procedures in automated deduction methods based on matings: a survey. </title> <editor> In M. Nivat and A. Podelski, editors, </editor> <booktitle> Tree Automata and Languages, </booktitle> <pages> pages 439-485. </pages> <publisher> Elsevier Science, </publisher> <year> 1992. </year>
Reference: [GJ 79] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference-contexts: The subsumption relation is known to be NP-complete <ref> [GJ 79] </ref>. 6 Section 3 The equality elimination method For the rest of this section we assume that fl is a closed formula in skolemized negation normal form to be proved (the "goal"). We assume that all different occurrences of quantifiers in fl bind different variables.
Reference: [Kan 63] <author> S. Kanger. </author> <title> A simplified proof method for elementary logic. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automation of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 364-371. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1963. </note>
Reference-contexts: 1 There are differences in representation of inferences between <ref> [Kan 63] </ref> and [Bec 94a] | Kanger uses sequent proofs. Sequents in [Kan 63] correspond to branches in tableaux [Fit 90]. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in [MM 83]. 1 principle of locality. <p> 1 There are differences in representation of inferences between <ref> [Kan 63] </ref> and [Bec 94a] | Kanger uses sequent proofs. Sequents in [Kan 63] correspond to branches in tableaux [Fit 90]. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in [MM 83]. 1 principle of locality.
Reference: [Lif 68] <author> V. Lifschitz. </author> <title> Specialized forms of derivation in predicate calculus with equality and functional symbols (in Russian). </title> <booktitle> In Trudy MIAN, </booktitle> <volume> volume 98, </volume> <pages> pages 5-25. </pages> <year> 1968. </year> <title> English translation in: </title> <booktitle> Proc. </booktitle> <institution> Steklov Institute of Math., AMS, Providence, </institution> <year> 1971. </year> <month> 23 </month>
Reference: [MAT 94] <author> A.M. Maeda, J.-I. Aoe, and H. Tomabechi. </author> <title> Signature-check based unification filter. </title> <journal> Software | Practice and Experience, </journal> <volume> 24(7) </volume> <pages> 603-622, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: The same phenomenon appears in more applied areas of computer science, for example deductive databases [BMSU 86, Vie 89], parsing [TR 94], production systems <ref> [MAT 94] </ref>, constraint logic programming. In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau.
Reference: [MM 83] <author> S.Yu. Maslov and G. Mints. </author> <title> The proof-search theory and the inverse method (in Russian). </title> <editor> In Mints G., editor, </editor> <booktitle> Mathematical Logic and Automatic Theorem Proving, </booktitle> <pages> pages 291-314. </pages> <publisher> Nauka, </publisher> <address> Moscow, </address> <year> 1983. </year>
Reference-contexts: 1 There are differences in representation of inferences between [Kan 63] and [Bec 94a] | Kanger uses sequent proofs. Sequents in [Kan 63] correspond to branches in tableaux [Fit 90]. 2 G. Mints, private communications. 3 The metavariable method is discussed in details in <ref> [MM 83] </ref>. 1 principle of locality. A substitution in tableau methods is applied to the whole tableau (see e.g. the "MGU replacement rule" from [Fit 90]), which corresponds to a set of sequences, while in the inverse method [Vor 92] a substitution is applied to a sequent.
Reference: [Mas 87] <author> S.Yu. Maslov. </author> <title> Theory of Deductive Systems and its Applications. </title> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference: [MRL 91] <author> J. Minker, A. Rajasekar, and J. Lobo. </author> <title> Theory of disjunctive logic programs. </title> <editor> In Jean-Louis Lassez and Gordon Plotkin, editors, </editor> <booktitle> Computational Logic. Essays in Honor of Alan Robinson., </booktitle> <pages> pages 613-639. </pages> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1991. </year>
Reference-contexts: There is a structure-preserving translation of formulas without equivalences into formulas in skolemized negation normal with the same number of occurrences of atoms. 2.1 Subset unification Our algorithm uses subset unification. We shall formally define it and prove some properties. A variant of subset unification has been used in <ref> [MRL 91] </ref> as -subsumption. A substitution is called a subset unifier of clauses D 1 and D 2 iff D 1 D 2 .
Reference: [Mor 69] <author> J.B. Morris. E-resolution: </author> <title> Extension of resolution to include the equality relation. </title> <editor> In Donald E. Walker and Lewis M. Norton, editors, </editor> <booktitle> Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-69), </booktitle> <pages> pages 287-294. </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1969. </year>
Reference: [NR 92a] <author> R. Nieuwenhuis and A. Rubio. </author> <title> Basic superposition is complete. </title> <booktitle> In ESOP'92, volume 582 of Lecture Notes in Computer Science, </booktitle> <pages> pages 371-389. </pages> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference: [NR 92b] <author> R. Nieuwenhuis and A. Rubio. </author> <title> Theorem proving with ordering constrained clauses. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction (CADE), volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 477-491, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher>
Reference: [Ore 69] <author> V.P. Orevkov. </author> <title> On non-increasing rule applications for equality (in Russian). </title> <journal> Zapiski Nauchnyh Seminarov LOMI, </journal> <volume> 16 </volume> <pages> 152-156, </pages> <year> 1969. </year> <note> English Translation in: Seminars in Mathematics: </note> <institution> Steklov Math. Inst. 16, Consultants Bureau, NY-London, </institution> <year> 1971. </year>
Reference: [Pra 60] <author> D. Prawitz. </author> <title> An improved proof procedure. </title> <editor> In J. Siekmann and G. Wrightson, editors, </editor> <booktitle> Automa tion of Reasoning. Classical Papers on Computational Logic, </booktitle> <volume> volume 1, </volume> <pages> pages 162-201. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year> <note> Originally appeared in 1960. </note>
Reference: [Pet 93] <author> U. Petermann. </author> <title> A framework for integrating equality reasoning into extension procedure. </title> <booktitle> In Proc. Workshop on Theorem Proving with Analytic Tableaux and Related Methods, </booktitle> <pages> pages 195-207, </pages> <year> 1993. </year>
Reference: [Ree 87] <author> S.V. Reeves. </author> <title> Adding equality to semantic tableau. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 3 </volume> <pages> 225-246, </pages> <year> 1987. </year>
Reference: [Rus 91] <author> M. Rusinowitch. </author> <title> Theorem proving with resolution and superposition: an extension of the Knuth and Bendix completion procedure as a complete set of inference rules. </title> <journal> Journal of Symbolic Computations, </journal> <volume> 11 </volume> <pages> 21-49, </pages> <year> 1991. </year>
Reference: [Sch 60] <author> Schutte, K. </author> <title> Beweistheorie (in German). </title> <publisher> Springer Verlag, </publisher> <year> 1960. </year>
Reference-contexts: There are deterministic chains of inferences in sequent systems, where formulas with _ or 9 occur. For example, ; ' ; 9x (' _ ) (Since we are dealing with formulas in negation normal form, we represent sequents as multisets of formulas, similar to <ref> [Sch 60] </ref>.) By restricting to conjunctive superformulas only, we eliminate these deterministic chains, making them in one step. Now we can formulate the tableau deductive system we are going to use. The proof-search consists of two parts: the equality solution part and the tableau part.
Reference: [TR 94] <author> M. Tambe and P.S. Rosenbloom. </author> <title> Investigating production system representations for non combinatorial match. </title> <journal> Artificial Intelligence, </journal> <volume> 68 </volume> <pages> 155-199, </pages> <year> 1994. </year>
Reference-contexts: One can argue pro and contra the principle of locality, but let us note that all problems considered hard in modern theorem proving are solved by local methods. The same phenomenon appears in more applied areas of computer science, for example deductive databases [BMSU 86, Vie 89], parsing <ref> [TR 94] </ref>, production systems [MAT 94], constraint logic programming. In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau.
Reference: [Vie 89] <author> Laurent Vieille. </author> <title> Recursive query processing: the power of logic. </title> <journal> Theoretical Computer Science, </journal> <volume> 69(1) </volume> <pages> 1-53, </pages> <year> 1989. </year>
Reference-contexts: One can argue pro and contra the principle of locality, but let us note that all problems considered hard in modern theorem proving are solved by local methods. The same phenomenon appears in more applied areas of computer science, for example deductive databases <ref> [BMSU 86, Vie 89] </ref>, parsing [TR 94], production systems [MAT 94], constraint logic programming. In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau. <p> In all these areas local methods based on bottom-up algorithms 4 show superior performance over top-down methods like tableau. Methods like Early deduction [Ear 70] in parsing or SLD-AL resolution <ref> [Vie 89] </ref> and magic sets [BMSU 86] use some information from a top-down search but the main information processing is carried out in the bottom-up (not goal-oriented, but local) way.
Reference: [Vor 92] <author> A.A. Voronkov. </author> <title> Theorem proving in non-standard logics based on the inverse method. </title> <editor> In D. Kapur, editor, </editor> <booktitle> 11th International Conference on Automated Deduction, volume 607 of Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 648-662, </pages> <address> Saratoga Springs, NY, USA, June 1992. </address> <publisher> Springer Verlag. </publisher> <pages> 24 </pages>
Reference-contexts: A substitution in tableau methods is applied to the whole tableau (see e.g. the "MGU replacement rule" from [Fit 90]), which corresponds to a set of sequences, while in the inverse method <ref> [Vor 92] </ref> a substitution is applied to a sequent. One can argue pro and contra the principle of locality, but let us note that all problems considered hard in modern theorem proving are solved by local methods.
References-found: 46

