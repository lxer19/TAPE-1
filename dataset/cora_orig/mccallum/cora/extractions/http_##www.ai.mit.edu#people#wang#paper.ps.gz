URL: http://www.ai.mit.edu/people/wang/paper.ps.gz
Refering-URL: http://www.ai.mit.edu/people/wang/wang.html
Root-URL: 
Email: devika@cs.cornell.edu  wang@ai.mit.edu  
Title: Kinematic Synthesis with Configuration Spaces  
Author: Devika Subramanian Cheuk-San (Edward) Wang 
Date: April 1994  
Note: First draft: April 10, 1992, Current version:  
Address: Ithaca, NY 14853  545 Technology Square Cambridge, MA 02139-3539  
Affiliation: Department of Computer Science Cornell University  Artificial Intelligence Lab, MIT  
Abstract: This paper introduces a new approach to the conceptual design of mechanical systems from qualitative specifications of behaviour. The power of the approach stems from the integration of techniques in qualitative physics and constraint programming. We illustrate the approach with an effective kinematic synthesis method that reasons with qualitative representations of configuration spaces using constraint programming.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Artobolevsky. </author> <title> Mechanisms in Modern Engineering Design, </title> <booktitle> vols. </booktitle> <pages> 1-4. </pages> <publisher> MIR Publishers, </publisher> <address> Moscow, </address> <year> 1979. </year> <note> English translation. </note>
Reference-contexts: Our constraint representation allows us to perform delayed instantiation of parameters. Each search path encodes a whole class of solutions. Pruning or accepting a path involves pruning or accepting a whole class of solutions. The algorithm synthesizes many of the designs for conversion of uniform rotation to reciprocation in <ref> [1] </ref> in a few seconds. The synthesis of the wiper shown in Figure 1 and its variants was also completed in under a second on a Sparcstation 1+. <p> We implemented our method in CLP (R) and showed several examples of designs produced by the system. Some of the designs generated by the system can be found in standard design compendia like [19] and <ref> [1] </ref>. The system also generated novel designs for several common devices including eggbeaters and clocks. Future REFERENCES 35 work involves extending the set of primitive relations, proving completeness properties for these relations, and integrating mechanisms with multi-domain (including dynamics and optics) designs.
Reference: [2] <author> J. Cagan and A. Agogino. </author> <title> Innovative design of mechanical structures from first principles. </title> <journal> Journal of Artificial Intelligence in Engineering Design and Manufacturing, </journal> <volume> 1(3) </volume> <pages> 169-189, </pages> <year> 1987. </year>
Reference: [3] <author> M. Dyer, M. Flowers, and J. Hodges. </author> <title> Edison: An engineering design invention system op-erationg naively. </title> <booktitle> In Proceedings of the 1st International Conference on applications of AI to Engineering problems, </booktitle> <pages> pages 327-341, </pages> <year> 1986. </year>
Reference: [4] <author> S. Finger and J. Rinderle. </author> <title> A synthesis strategy for mechanical devices. </title> <booktitle> Research in Engineering Design, </booktitle> <year> 1989. </year>
Reference-contexts: While the language of bond graphs is expressive enough for constraints on power flow, it is not suitable for expressing geometric constraints which are crucial in kinematic synthesis of mechanisms. 3. Behavioural + Transformational theories: Hoover and Rinderle's <ref> [4] </ref> theory is one of the cleanest examples of discretization of both the structure and the behaviour space. The space of structures is composed of spur and bevel gears with standard ratios and axle connections. The space of behaviours is built from two primitives, called geometric and reducer. <p> Ultimately, the choice of (A; ^ 1 A ) is determined by the class of devices to be synthesized and the richness of the motion specification language that we wish to provide to users <ref> [4] </ref>. For the simple qualitative language of rotations and rectilinear translations introduced above, ^ 1 A "unifies" qualitative motions M i and M j of the same type by calculating the generalized rigid transformation T such that T (M i ) = M j .
Reference: [5] <author> S. Finger and J. Rinderle. </author> <title> A transformational approach to mechanical design using a bond graph grammar. </title> <booktitle> In Proceedings of the 1st ASME Design Theory and Methodology Conference, </booktitle> <address> Montreal, Canada, </address> <year> 1989. </year>
Reference-contexts: The problem of directing the transformation process (which transformation rule to apply next) is solved by using an evaluation function that measures function integration of a partial design. A follow up to the above theory by Finger and Rinderle <ref> [5] </ref> use context-free and context-sensitive grammars for representing repeated structural elements in gear trains and bridge trusses. Another example of the transformational approach is that of Kannapan and Marshek [14]. They construct a qualitative motion language for designing a special class of mechanisms | rotational couplings between shafts.
Reference: [6] <author> F. Freudenstein and L. Dobjansky. </author> <title> Some applications of graph theory to structural analysis of mechanisms. </title> <journal> ASME Transaction Journal of Engineering for Industry, </journal> <volume> 89(1) </volume> <pages> 153-158, </pages> <year> 1967. </year> <note> REFERENCES 36 </note>
Reference: [7] <author> F. Freudenstein and L.S. Woo. </author> <title> Kinematic structure of mechanisms. </title> <editor> In W.R. Spillers, editor, </editor> <title> Basic Questions of Design Theory. </title> <publisher> North Holland, </publisher> <year> 1974. </year>
Reference-contexts: At this level, we only specify the nature of the kinematic interactions that give rise to the behaviour specified by the abstract mechanism description. Following Freudenstein <ref> [7] </ref>, we use graph theory to formally specify a concrete mechanism at this level of detail.
Reference: [8] <author> N. Heintze, S. Michaylov, P. Stuckey, and R. Yap. </author> <title> The clp(r) programmer's manual, version 1.1. </title> <type> Technical report, </type> <institution> Carnegie-Mellon University and IBM Research, </institution> <year> 1991. </year>
Reference-contexts: The algebraic composition computation can be abstracted as operations on symbolic predicates denoting qualitative motions. We then present constraint-based algorithms that employ qualitative motion descriptions. These algorithms have been implemented in CLP (R) <ref> [8] </ref>. We present examples of interesting syntheses in Section 6. The class of mechanisms synthesizable by our algorithms is presented in Section 6.3. In Section 6.4 we provide computational results on our implementation and explain why our program is very efficient in practice. <p> We implement the synthesis method in a powerful constraint programming language called CLP (R) <ref> [8] </ref>. A constraint programming language allows declarative representation and reasoning with algebraic constraints. The resolution principle is the rule of inference, and unification is replaced by constraint solving over the reals. CLP (R) has a Prolog-like syntax.
Reference: [9] <author> Y. Iwasaki, R. Fikes, M. Vescovi, and B. Chandrasekharan. </author> <title> How things are intended to work: capturing functional knowledge in device design. </title> <booktitle> In Proceedings of IJCAI-93, </booktitle> <pages> pages 1516-1522, </pages> <year> 1993. </year>
Reference: [10] <author> L. Joskowicz and S. Addanki. </author> <title> From kinematics to shape: An approach to innovative design. </title> <booktitle> In Proceedings of AAAI-88, </booktitle> <pages> pages 347-352. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1974. </year>
Reference-contexts: Another limitation of our current approach is the lack of a component for shape design. If there is no sequence of primitive relations that satisfies the given specification, our method will fail to produce a design. We can integrate the methods of <ref> [10] </ref> for synthesizing novel shapes into our design system to automatically extend our library of primitive abstract mechanisms. Unlike other efforts [12, 13, 16] to design qualitative motion vocabulary in the context of synthesis, our qualitative descriptions are derived as abstractions of underlying relations on configuration spaces.
Reference: [11] <author> L. Joskowicz and D. Neville. </author> <title> A representation language for mechanism design. </title> <booktitle> In Proceedings of QR92, </booktitle> <year> 1992. </year>
Reference-contexts: We illustrate the requirement in the context of a simple qualitative language. This language is a predicate language that abstracts configuration space motion descriptions. It is similar to other motion languages in the literature <ref> [11, 13] </ref>. The language represents rectilinear translations along a fixed axis by the position and orientation of the axis, speed, range and frequency. <p> We also measured the average time taken to generate a solution at each level in the search space. This is plotted in Figure 17. Note that the time to generate an eggbeater design grows 12 Joskowicz and Neville <ref> [11] </ref> have designed a qualitative language for describing complex motions built out of elementary motions and special predicates to capture effects like dwell, and reciprocation. This language is very expressive, however no algorithms for design using this language are provided.
Reference: [12] <author> L. Joskowicz and E. Sacks. </author> <title> Computational kinematics. </title> <journal> Artificial Intelligence, </journal> <volume> 51 </volume> <pages> 381-416, </pages> <year> 1991. </year>
Reference-contexts: If there is no sequence of primitive relations that satisfies the given specification, our method will fail to produce a design. We can integrate the methods of [10] for synthesizing novel shapes into our design system to automatically extend our library of primitive abstract mechanisms. Unlike other efforts <ref> [12, 13, 16] </ref> to design qualitative motion vocabulary in the context of synthesis, our qualitative descriptions are derived as abstractions of underlying relations on configuration spaces.
Reference: [13] <author> S. Kannapan and K. Marshek. </author> <title> Design synthetic reasoning. </title> <type> Technical Report 216, </type> <institution> Mechanical Systems and Design, University of Texas at Austin, </institution> <month> September </month> <year> 1989. </year>
Reference-contexts: We illustrate the requirement in the context of a simple qualitative language. This language is a predicate language that abstracts configuration space motion descriptions. It is similar to other motion languages in the literature <ref> [11, 13] </ref>. The language represents rectilinear translations along a fixed axis by the position and orientation of the axis, speed, range and frequency. <p> If there is no sequence of primitive relations that satisfies the given specification, our method will fail to produce a design. We can integrate the methods of [10] for synthesizing novel shapes into our design system to automatically extend our library of primitive abstract mechanisms. Unlike other efforts <ref> [12, 13, 16] </ref> to design qualitative motion vocabulary in the context of synthesis, our qualitative descriptions are derived as abstractions of underlying relations on configuration spaces.
Reference: [14] <author> S. Kannapan and K. Marshek. </author> <title> An algebraic and predicate logic approach to representation and reasoning in machine design. </title> <journal> Mechanism and Machine Theory, </journal> <volume> 25(3) </volume> <pages> 335-353, </pages> <year> 1990. </year>
Reference-contexts: A follow up to the above theory by Finger and Rinderle [5] use context-free and context-sensitive grammars for representing repeated structural elements in gear trains and bridge trusses. Another example of the transformational approach is that of Kannapan and Marshek <ref> [14] </ref>. They construct a qualitative motion language for designing a special class of mechanisms | rotational couplings between shafts. The transformation rules that link behaviour and structure specifications encode the space of possible designs.
Reference: [15] <author> S. Kota. </author> <title> A qualitative matrix representation scheme for the conceptual design of mechanisms. </title> <booktitle> In Proceedings of the ASME Design Automation Conference. ASME, </booktitle> <year> 1990. </year>
Reference: [16] <author> S. Kota. </author> <title> Qualitative motion synthesis: Toward automating mechanical systems configuration. </title> <booktitle> In Proceedings of the NSF Design and Manufacturing Systems Conference, </booktitle> <pages> pages 77-91, </pages> <year> 1990. </year>
Reference-contexts: Since the expressiveness of the language and the efficiency of decomposition/composition schemes are at odds, the theories make different engineering tradeoffs. We classify the theories in this area on the basis of expressiveness of representations of motions, and the computational properties of the synthesis method. Kota <ref> [16] </ref> proposed a compositional theory of motion synthesis | in his scheme, motions are qualitatively described by vectors which capture pre-specified properties. Primitive mechanisms as well as motion specifications are represented as matrices. <p> If there is no sequence of primitive relations that satisfies the given specification, our method will fail to produce a design. We can integrate the methods of [10] for synthesizing novel shapes into our design system to automatically extend our library of primitive abstract mechanisms. Unlike other efforts <ref> [12, 13, 16] </ref> to design qualitative motion vocabulary in the context of synthesis, our qualitative descriptions are derived as abstractions of underlying relations on configuration spaces.
Reference: [17] <author> J.C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: The configuration of an object <ref> [17, pg. 8] </ref> is a specification of the position of every point on 2 CONFIGURATION SPACES, MOTIONS, AND MECHANISMS 9 F A O A it relative to a fixed frame of reference. The objects we consider are rigid bodies: compact subsets of the N -dimensional Euclidean space &lt; N .
Reference: [18] <author> H. M. Mabie and C. F. Reinholtz. </author> <title> Mechanisms and Dynamics of Machinery, 4th edition. </title> <publisher> John Wiley and Sons, </publisher> <year> 1987. </year>
Reference: [19] <author> D. </author> <title> Macaulay. The Way Things Work. </title> <publisher> Houghton Mi*in Co., </publisher> <address> Boston, </address> <year> 1988. </year>
Reference-contexts: We identified the class of mechanisms which can be correctly synthesized within the qualitative framework. We implemented our method in CLP (R) and showed several examples of designs produced by the system. Some of the designs generated by the system can be found in standard design compendia like <ref> [19] </ref> and [1]. The system also generated novel designs for several common devices including eggbeaters and clocks. Future REFERENCES 35 work involves extending the set of primitive relations, proving completeness properties for these relations, and integrating mechanisms with multi-domain (including dynamics and optics) designs.
Reference: [20] <author> D. Navinchandra, K.P. Sycara, and S. Narasimhan. </author> <title> A transformational approach to case-based synthesis. </title> <journal> Journal of Artificial Intelligence in Engineering Design and Manufacturing, </journal> <volume> 5(2), </volume> <year> 1991. </year>
Reference-contexts: Expert system techniques [26] for synthesizing special classes of mechanisms e.g., cam-follower mechanisms, occupy an interesting middle ground between pre-parametric design schemes which requires high-level qualitative specifications and the numerical optimization packages which require very detailed kinematic specifications. Case-based methods <ref> [20, 23] </ref> for synthesis of mechanical systems begin with a known library of designs and use the goal specification to index relevant designs. The retrieved designs are modified to meet the given specifications.
Reference: [21] <author> H.M. Paynter. </author> <title> Analysis and Design of Engineering Systems. </title> <publisher> MIT Press, </publisher> <year> 1961. </year>
Reference-contexts: Since there isn't enough detail in the qualitative language, the conceptual synthesis scheme cannot be cleanly integrated with dimensional synthesis. Ulrich [24] proposed a compositional technique for pre-parametric design of single-input, single-output dynamical systems. Design problems are specified qualitatively in the vocabulary of bond graphs <ref> [21] </ref> with flow and effort variables in electrical, mechanical and fluid domains. The system produces schematic designs represented as abstract bond graphs. The synthesis method is a generate-and-test procedure that strings together primitive elements (transformers and gyrators) in a sequence.
Reference: [22] <editor> M.M. Rueleaux. </editor> <booktitle> The Kinematics of Machinery. </booktitle> <publisher> MacMillan & Co., </publisher> <pages> 1876. </pages> <note> Translated by Alex B.W. Kennedy. </note>
Reference-contexts: Now we are ready to formally define a mechanism. Reuleaux <ref> [22] </ref> defines a mechanism as "a combination of rigid bodies so formed and connected that they move upon each other with definite relative motion." We distinguish an abstract mechanism which is a relation on the configuration spaces of the input and output links, from a concrete mechanism which is a 3D <p> The kinematic graph K of a concrete mechanism is an undirected 3 COMPOSITION OF MECHANISMS 12 graph (V,E), where V is the set of vertices that denote the links and the edge set E represents the kinematic pairs. The edges are labeled according to joint type <ref> [22] </ref>. There are one or more nodes in V representing the input and output links of the mechanism. An annotated kinematic graph has algebraic constraints on elements of V and E represented as a constraint set C.
Reference: [23] <author> K.P. Sycara, R. Guttal, J. Koning, S. Narasimhan, and D. Navinchandra. Cadet: </author> <title> A case-based synthesis tool for engineering design. </title> <journal> International Journal of Expert Systems, </journal> <year> 1991. </year>
Reference-contexts: A new shaft coupling was generated by this method. 4. Behavioural + Case-based theories: The synthesis theory advocated by Navinchandra and Sycara in CADET <ref> [23] </ref> is an example of this approach. Instead of relying on composition of primitives in the behaviour space, case-based approaches generate new designs by choosing and modifying parts of a database of old designs. <p> In <ref> [23] </ref> this methodology is applied to the design of fluid-mechanical devices like hot and cold water faucets. Behaviours are represented by qualitative influence graphs. Rules that convert behavioural specifications into equivalent forms make their system robust with respect to variations in representations of behaviours. <p> Expert system techniques [26] for synthesizing special classes of mechanisms e.g., cam-follower mechanisms, occupy an interesting middle ground between pre-parametric design schemes which requires high-level qualitative specifications and the numerical optimization packages which require very detailed kinematic specifications. Case-based methods <ref> [20, 23] </ref> for synthesis of mechanical systems begin with a known library of designs and use the goal specification to index relevant designs. The retrieved designs are modified to meet the given specifications.
Reference: [24] <author> K. Ulrich. </author> <title> Computation and pre-parametric design. </title> <type> Technical Report 1043, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <month> July </month> <year> 1988. </year> <note> REFERENCES 37 </note>
Reference-contexts: Single DOF mechanisms are synthesized at the schematic level. Since there isn't enough detail in the qualitative language, the conceptual synthesis scheme cannot be cleanly integrated with dimensional synthesis. Ulrich <ref> [24] </ref> proposed a compositional technique for pre-parametric design of single-input, single-output dynamical systems. Design problems are specified qualitatively in the vocabulary of bond graphs [21] with flow and effort variables in electrical, mechanical and fluid domains. The system produces schematic designs represented as abstract bond graphs. <p> Some examples of SIMO syntheses produced by our system are in Figure 15 and Figure 14. The clock design in Figure 14 is especially interesting because of the constraint that the hands lie 11 A similar optimization is also performed in <ref> [24] </ref>. 6 EFFICIENT SYNTHESIS ALGORITHMS 28 6 EFFICIENT SYNTHESIS ALGORITHMS 29 A 2 i i i A 1 A 1 A 2 A 2 A 2 o 1 o 2 o 3 o 3 o 2 o 1 InputMotion (A 2 j+2 ) = o 3 InputMotion (A 1 i+1 )
Reference: [25] <author> K. Ulrich and W. Seering. </author> <title> Conceptual design: Synthesis of systems of components. </title> <editor> In S. Chan-drasekar C.R. Liu, A. Requicha, editor, </editor> <title> Intelligent and Integrated Manufacturing Analysis and Synthesis. </title> <journal> ASME, </journal> <volume> PED-Vol 25, </volume> <year> 1988. </year>
Reference: [26] <author> B. Yang, U. Datta, P. Datseris, and Y. Wu. </author> <title> An integrated system for design of mechanisms by an expert system: </title> <journal> Domes. AI EDAM, </journal> <volume> 3(1) </volume> <pages> 53-70, </pages> <year> 1989. </year>
Reference-contexts: Future REFERENCES 35 work involves extending the set of primitive relations, proving completeness properties for these relations, and integrating mechanisms with multi-domain (including dynamics and optics) designs. There are other approaches to mechanism synthesis that can be profitably combined with our first-principles approach. Expert system techniques <ref> [26] </ref> for synthesizing special classes of mechanisms e.g., cam-follower mechanisms, occupy an interesting middle ground between pre-parametric design schemes which requires high-level qualitative specifications and the numerical optimization packages which require very detailed kinematic specifications.
References-found: 26

