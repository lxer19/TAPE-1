URL: http://www.dcs.shef.ac.uk/research/groups/graphics/publications/implicit/overview.ps
Refering-URL: http://www.dcs.shef.ac.uk/research/groups/graphics/publications/publications.html
Root-URL: 
Email: E-mail: a.opalach@dcs.shef.ac.uk  
Phone: Tel: +44 114 282 5577 Fax: +44 114 278 0972  
Title: 1-1 An Overview of Implicit Surfaces  
Author: Agata Opalach Steve Maddock 
Keyword: Implicit Surfaces, Deformable Objects, Modelling Techniques, Animation Control, Review  
Address: Regent Court, 211 Portobello Street, Sheffield, S1 4DP, UK  
Affiliation: Department of Computer Science, The University of Sheffield,  
Abstract: This tutorial paper gives an overview of the area of implicit surfaces. The history of the technique is presented and various approaches categorised and compared. Existing problems with modelling, rendering and animation of implicit surfaces are discussed and available solutions evaluated. The paper provides a comprehensive introduction for novice and experienced users of implicit surfaces. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Beier, T. </author> <title> Practical Uses for Implicit Surfaces in Animation, Siggraph 90 Course Notes No 23, Modelling and Animating With Implicit Surfaces, </title> <note> pp 20.1-20.11 </note>
Reference-contexts: Metamorphosis can also be performed by interpolating between matching parts of two objects [44]. Successful animations like letters descending a staircase [46], a soft train rubbing a bank [47] or a blobby guitarist emerging from sparkling toothpaste <ref> [1] </ref> are very successful at conveying the story line to the audience. Implicit surfaces can also serve as skin covering an articulated figure built by imposing a hierarchy on primitives. [26] describes the ABC of using this idea in animation: maintaining Appearance, preventing unwanted Blending and preserving Coherence. <p> Inbetweens are generated and the result is a C 1 continuous surface although surface topology may change. Successful animation sequences have been created using this method <ref> [1, 41] </ref>. Metamorphosis can also be performed using keyframes. Two methods for performing metamorphosis described in [44] are surface matching or cellular matching. Surface inbetweening starts from both source and target objects and weights their inuence to the final image throughout the metamorphosis process.
Reference: 2. <author> Blinn, J. F., </author> <title> A Generalisation of Algebraic Surface Drawing, </title> <journal> ACM Trans. Graphics, </journal> <volume> Vol. 1, No 3, </volume> <month> July </month> <year> 1982, </year> <pages> pp 135-256 </pages>
Reference-contexts: However, first some history. 2. History and applications As with many other techniques, it was Blinn who first introduced implicit surfaces into computer graphics when he used them to visualise electron density fields using blobby molecules <ref> [2] </ref>. At the same time Omura and his computer graphics research group in Japan developed metaballs [25]. The general principle of this technique is to model an equi-potential surface around point charges in a 3D space. Then soft objects were introduced in Canada [40, 41]. <p> Therefore, an expensive operation of square root is avoided. All three techniques have been extended to include more complex primitives. For instance, negative primitives were added. They interact with positive objects creating dents in them. General quadrics (ellipsoids, cylinders, planes) and superellipsoids as primitives were suggested by Blinn <ref> [2] </ref>. Non-spherical metaballs were added to the metaballs technology [19]. Finally, superellipsoidal primitives were introduced to the soft object technique in [43]. 3.2 Skeletal primitives Skeletons used for defining implicit surfaces consist of lines, curves, polygons or points. The shape of a primitive follows the shape of its skeleton. <p> More detailed numerical calculations have to be performed in order to obtain the precise intersection point. The normal vector at a given point is calculated as partial derivatives of the scalar field function: (11) Blinn <ref> [2] </ref> and Nishimura et al. [25] visualise their models using ray tracing. More general ray tracing algorithms for implicit surfaces have also been developed. Kalra and Barr [16] propose an algorithm which guarantees ray-surface intersections even with the finest details on an implicit surface. <p> Colour is the simplest texture which can be applied to an implicit surface. It has been used in all implementations of implicit surfaces. The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence <ref> [2, 25, 41, 21, 23] </ref>. This results in a smooth colour transition in the blending area. McPheeters [21] summarises possible colouring metaphors for implicit surfaces.
Reference: 3. <author> Bloomenthal, J., </author> <title> Polygonization of Implicit Surfaces, Computer Aided Geometric Design, </title> <journal> Vol5, </journal> <volume> No 4, </volume> <month> November </month> <year> 1988, </year> <pages> pp 341-355 </pages>
Reference-contexts: Because of ambiguous polygonisation cases, the rendered surface may contain cracks if two neighbour cells were polygonised inconsistently. Also, fine details can be missed if the cell size is too large. Bloomenthal <ref> [3] </ref> suggests a faster polygonisation algorithm based on the octree and adaptive octree subdivision. He uses tetrahedronal cells avoiding the ambiguous polygonisation problem. Adaptive subdivision also ensures that fine details of the surface are found. Wyvill and Jevans [48] propose an algorithm based on look-up tables. <p> The values of parameters are passed to a 2D function which returns the required texture value. Implicit surfaces are not easily parametrised. Nevertheless parametrisation can be obtained in some cases. Bloomenthal <ref> [3] </ref> parametrises implicit surfaces using their boundary representation (polygons). McPheeters [21] uses direct parametrisation of primitives applying complex mathematical procedures. Smets [31] observes that parametrisation is not essential for applying 2D texture mapping. What is sufficient is a homeomorphism between instances of a moving and deforming implicit surface.
Reference: 4. <author> Bloomenthal, J. and Wyvill, B., </author> <title> Interactive Techniques for Implicit Modelling, </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No 2, </volume> <year> 1990, </year> <pages> pp 109-116 </pages>
Reference-contexts: They are modelled as keypoints with scalar fields defined around them. More complex field functions, e.g. ellipsoids, superellipsoids or negative primitives, have also been suggested for the above approaches. The technique was later generalised by Bloomenthal for arbitrary skeletal elements, e.g. curves or polygons <ref> [4, 5] </ref> and has found many practical applications in both the commercial and the academic worlds. The academic use of implicit surfaces includes a wide variety of applications. <p> In this section we will first describe the approximation techniques, then discuss polygonisation and direct ray-tracing and finish the section by showing how to achieve further realism during rendering by texturing implicit surfaces. 4.1 Surface approximation Bloomenthal and Wyvill <ref> [4] </ref> suggest several techniques which offer real-time or near real-time display of implicit surfaces: octree display, 2d slices, image thresholding or scattering. The idea of scattering is to display a cloud of seeds resting on an implicit surface. <p> The idea of scattering is to display a cloud of seeds resting on an implicit surface. When an implicit surface moves, the seeds follow it until they reach the surface again. In <ref> [4] </ref> initial seeds are computed from cross-sections of a skeleton. They then migrate towards the skeleton in the gradient direction. It is important to maintain uniform seed distribution at each time step. Scattering has been further developed by Witkin and Heckbert [39] and Desbrun et al. [8].
Reference: 5. <author> Bloomenthal, J. and Shoemake, K., </author> <title> Convolution Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Vol. 25, No 4, </volume> <month> July </month> <year> 1991, </year> <pages> pp 251-256 </pages>
Reference-contexts: They are modelled as keypoints with scalar fields defined around them. More complex field functions, e.g. ellipsoids, superellipsoids or negative primitives, have also been suggested for the above approaches. The technique was later generalised by Bloomenthal for arbitrary skeletal elements, e.g. curves or polygons <ref> [4, 5] </ref> and has found many practical applications in both the commercial and the academic worlds. The academic use of implicit surfaces includes a wide variety of applications. <p> Distance Surfaces: Their use as a way of generating an implicit surface around a skeleton are presented in <ref> [5] </ref>. The following method for calculating the potential at a point is used: (8) where S is the skeleton, p is the point for which the potential is calculated and s is a point on the skeleton. <p> the distance from P to the nearest point on the i-th element. f S p,( ) max= s S exp 2 F total P ( ) c i F i r i ( ) i 1= = 1-6 Convolution Surfaces: These also solve the problem of unwanted bulges and creases <ref> [5] </ref>. A point in space has the corresponding potential value calculated from all points of the skeleton by integration: (10) where S is the skeleton, p is the point for which the potential is calculated and s is a point on the skeleton.
Reference: 6. <editor> Bloomenthal, J., Hand crafted, </editor> <booktitle> Proc. of the 4th Annual Western Computer Graphics Symposium, </booktitle> <address> Banff, Alberta, </address> <note> April 1992; also in Siggraph 93 Course Notes No 25, </note> <editor> Modelling, </editor> <title> Visualizing and Animating Implicit Surfaces </title>
Reference-contexts: More complex convolutions can be achieved by adding weights along a skeleton, e.g. a tapered shape will be created by decreasing the weight along a line segment. Models as complex as complex a human hand can be created using convolution surfaces with triangles and line segments as skeletons <ref> [6] </ref>. 3.3 Complex primitives The last approach to modelling using implicit surfaces is taken from [21]. Three types of primitives are used: algebraic, procedural and empirical. Algebraic primitives are these which can be defined by an algebraic expression, e.g. a sphere, a quadratic surface, a torus or a sine wave.
Reference: 7. <author> Desbrun, M. and Gascuel, </author> <title> M-P.,Highly Deformable Material for Animation and Collision Processing, </title> <booktitle> Proc. 5th Eurographics Workshop on Animation and Simulation, </booktitle> <address> Oslo, </address> <month> September 94. </month>
Reference-contexts: Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated [11]. Finally, realistic simulation of highly deformable, amorphous (a) (b) 1-3 material (e.g. mud or dough) capable of fractures, fusion and maintaining nearly constant volume has been produced <ref> [7, 9] </ref>. When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. Metamorphosis can also be performed by interpolating between matching parts of two objects [44]. <p> Physical simulation in a particle system can also be used to animate implicit surfaces. It gives particularly good results for modelling inanimate materials, e.g. mud, clay or dough. In <ref> [7] </ref> a highly deformable material is simulated in a generalised particle system with Lennard-Jones attraction/repulsion interaction forces between primitives. Such material can undergo fractures and its chunks can join back together. <p> Coherence: This occurs when one primitive is moved too far apart from the others. The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives <ref> [35, 22, 7, 27] </ref>. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in [8, 9] by associating local volume with each primitive and maintaining it during animation.
Reference: 8. <author> Desbrun, M., N. Tsingos and Gascuel, M-P. </author> <title> Adaptive Sampling of Implicit Surfaces for Interactive Modelling and Animation, </title> <booktitle> Proc. 1st International Eurographics Workshop on Implicit Surfaces (Grenoble, </booktitle> <address> 17-18th April, </address> <year> 1995) </year>
Reference-contexts: In [4] initial seeds are computed from cross-sections of a skeleton. They then migrate towards the skeleton in the gradient direction. It is important to maintain uniform seed distribution at each time step. Scattering has been further developed by Witkin and Heckbert [39] and Desbrun et al. <ref> [8] </ref>. Witkin and Heckbert [39] use a set of particles which attract and repel each other to achieve an even sampling of an implicit surface. Fission and death of particles occur when particle density in an area is too low or too high respectively. In [8], each primitive sends a set <p> [39] and Desbrun et al. <ref> [8] </ref>. Witkin and Heckbert [39] use a set of particles which attract and repel each other to achieve an even sampling of an implicit surface. Fission and death of particles occur when particle density in an area is too low or too high respectively. In [8], each primitive sends a set of particles in fixed directions. Validation tests are performed to determine which of the sent seeds are to be used for sampling of the implicit surface. <p> The case of blendable and unblendable primitives (e.g. two fingers blended with a palm on one end but not allowed to blend with it on the other end) is handled in [26] but the method may introduce surface discontinuities. <ref> [8, 14] </ref> further develop this algorithm to improve its performance in these cases, however satisfactory solution has not yet been proposed. Coherence: This occurs when one primitive is moved too far apart from the others. <p> The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives [35, 22, 7, 27]. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in <ref> [8, 9] </ref> by associating local volume with each primitive and maintaining it during animation. Volume variation has been decreased to under 3%. 6. Conclusions This paper has presented a review of implicit surfaces.
Reference: 9. <author> Desbrun, M. and Gascuel, </author> <title> M-P.,Animating Soft Substances with Implicit Surfaces, </title> <booktitle> Computer Graphics Proc. </booktitle> <address> Siggraph95, </address> <year> 1995. </year>
Reference-contexts: Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated [11]. Finally, realistic simulation of highly deformable, amorphous (a) (b) 1-3 material (e.g. mud or dough) capable of fractures, fusion and maintaining nearly constant volume has been produced <ref> [7, 9] </ref>. When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. Metamorphosis can also be performed by interpolating between matching parts of two objects [44]. <p> By using a very soft blending function, the simulation requires fewer particles than in [22, 34, 35] where implicit surfaces are only used to visualise results obtained from a particle system. An important issue addressed in <ref> [9] </ref> is volume conservation of implicit material modelled this way. During animation, it can undergo considerable (up to 50%) volume variations. By locally controlling the volume in [9], this is decreased to under 3%, hence ensuring realistic simulation. 5.3 Hybrid animation control for character animation Keyframe generation for implicit surfaces for <p> An important issue addressed in <ref> [9] </ref> is volume conservation of implicit material modelled this way. During animation, it can undergo considerable (up to 50%) volume variations. By locally controlling the volume in [9], this is decreased to under 3%, hence ensuring realistic simulation. 5.3 Hybrid animation control for character animation Keyframe generation for implicit surfaces for character animation requires good artistic skills from an animator in order to produce an interesting animation sequence. <p> The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives [35, 22, 7, 27]. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in <ref> [8, 9] </ref> by associating local volume with each primitive and maintaining it during animation. Volume variation has been decreased to under 3%. 6. Conclusions This paper has presented a review of implicit surfaces.
Reference: 10. <author> Fujita, T., Hirota, K. and Murakami, K., </author> <title> Representation of Splashing Water using Metaball Model, Fujitsu, </title> <booktitle> 1990, </booktitle> <volume> Vol. 41, part 2, </volume> <pages> pp 159-165, </pages> <note> in Japanese </note>
Reference-contexts: The academic use of implicit surfaces includes a wide variety of applications. For instance, Tatsumi et al. present the use of metaballs in the process of modelling a certain type of cells in a cods liver [33], Fujita et al. represent splashing water using metaballs <ref> [10] </ref>, Muraki uses a blobby model for volumetric shape description (including human face modelling) [23], Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to visualise lightning [30] and in Japan, metaballs have been
Reference: 11. <author> Gascuel, M.-P., </author> <title> An Implicit Formulation for Precise Contact Modelling between Flexible Solids, </title> <booktitle> Proceedings of SIGGRAPH 93 (Anaheim, </booktitle> <address> California, </address> <month> August 1-6, </month> <year> 1993). </year> <booktitle> In Computer Graphics Proceedings, Annual Conference Series, 1993, ACM SIGGRAPH, </booktitle> <address> New York, </address> <pages> pp 313-320 </pages>
Reference-contexts: They have been used to visualise deformable material modelled as particles [22, 35] or mass points [34]. Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated <ref> [11] </ref>. Finally, realistic simulation of highly deformable, amorphous (a) (b) 1-3 material (e.g. mud or dough) capable of fractures, fusion and maintaining nearly constant volume has been produced [7, 9]. When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. <p> Yet the coherence of the model is better preserved than in the surface inbetweening method. 5.2 Physically based simulation Primitives can be treated as rigid objects and Newtonian equations of motion can be applied to simulate their motion <ref> [11, 50] </ref>. Gascuel [11] uses the implicit surface generated by primitives in a physically based environment for fast collision detection using the inside/outside test of one object on the sampling points of another. <p> Yet the coherence of the model is better preserved than in the surface inbetweening method. 5.2 Physically based simulation Primitives can be treated as rigid objects and Newtonian equations of motion can be applied to simulate their motion [11, 50]. Gascuel <ref> [11] </ref> uses the implicit surface generated by primitives in a physically based environment for fast collision detection using the inside/outside test of one object on the sampling points of another. <p> Unwanted blending will still occur in some cases. [43] solves the unwanted blending problem for soft objects by hierarchical clothing of a scene, rendering groups of blendable primitives in separate runs of a renderer. However, the unblendable primitives can only intersect each other, they do not interact. In <ref> [11, 26] </ref> similar solutions are proposed which modify the scalar field function in order to achieve deformation between unblendable primitives.
Reference: 12. <author> Gascuel, J.-D., </author> <title> Implicit Patches: An optimised and powerful ray intersection algorithm, </title> <booktitle> Proc. 1st International Eurographics Workshop on Implicit Surfaces (Grenoble, </booktitle> <address> 17-18th April, </address> <year> 1995) </year>
Reference-contexts: Hart [15] presents a good review of ray tracing applied to the implicit surfaces modelling technique. More recently, Gascuel <ref> [12] </ref> developed a robust algorithm for ray-tracing implicit surfaces built using skeletal primitives. 4.4 Texturing Implicit Surfaces Texturing general models built with implicit surfaces is considered an open research problem.
Reference: 13. <author> Graves, G., </author> <title> The Magic of metaballs, </title> <booktitle> Computer Graphics World, </booktitle> <month> May </month> <year> 1993, </year> <pages> pp 27-32 </pages>
Reference-contexts: Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to visualise lightning [30] and in Japan, metaballs have been widely used for modelling and animation of shapes as complex as human anatomy parts <ref> [13] </ref>. Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation. They have been used to visualise deformable material modelled as particles [22, 35] or mass points [34]. <p> Some interesting animation effects can be achieved using this approach, including automatic traditional animation tricks, e.g. squash and stretch, follow through or exaggeration [27]. The balance between tedious manual motion specification and automatically generated movement has to be maintained [28]. In the commercial world, the metaball technology <ref> [13] </ref> proves most successful. The development of MetaEditor simplified the process of modelling with metaballs. Since then, numerous companies have included metaballs in their modelling and animation packages.
Reference: 14. <author> Guy, A. and B. Wyvill, </author> <title> Controlled Blending for Implicit Surfaces, </title> <booktitle> Proc. 1st International Eurographics Workshop on Implicit Surfaces (Grenoble, </booktitle> <address> 17-18th April, </address> <year> 1995) </year>
Reference-contexts: The case of blendable and unblendable primitives (e.g. two fingers blended with a palm on one end but not allowed to blend with it on the other end) is handled in [26] but the method may introduce surface discontinuities. <ref> [8, 14] </ref> further develop this algorithm to improve its performance in these cases, however satisfactory solution has not yet been proposed. Coherence: This occurs when one primitive is moved too far apart from the others.
Reference: 15. <author> Hart, J., </author> <title> Ray Tracing Implicit Surfaces, Siggraph 93 Course Notes No 25, Modelling, Visualizing and Animating Implicit Surfaces </title>
Reference-contexts: Wyvill and Trotman [49] suggest an algorithm which is less general but finds all intersections along a ray, not only the closest one, a feature useful for CSG operations on implicit surfaces. Hart <ref> [15] </ref> presents a good review of ray tracing applied to the implicit surfaces modelling technique. More recently, Gascuel [12] developed a robust algorithm for ray-tracing implicit surfaces built using skeletal primitives. 4.4 Texturing Implicit Surfaces Texturing general models built with implicit surfaces is considered an open research problem.
Reference: 16. <author> Karla, D. and Barr, A., </author> <title> Guaranteed Ray Intersections with Implicit Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Vol. 23, No 3, </volume> <year> 1989, </year> <pages> pp 297-306 </pages>
Reference-contexts: The normal vector at a given point is calculated as partial derivatives of the scalar field function: (11) Blinn [2] and Nishimura et al. [25] visualise their models using ray tracing. More general ray tracing algorithms for implicit surfaces have also been developed. Kalra and Barr <ref> [16] </ref> propose an algorithm which guarantees ray-surface intersections even with the finest details on an implicit surface. Wyvill and Trotman [49] suggest an algorithm which is less general but finds all intersections along a ray, not only the closest one, a feature useful for CSG operations on implicit surfaces.
Reference: 17. <author> Kolb, C. and R. Bogart, Rayshade 4.0. </author> <note> Available by ftp from cs.princeton.edu, </note> <year> 1991. </year>
Reference-contexts: Blobby molecules have been used by Pacific Data Images (California) in much of their commercial animation work and they have also been incorporated in Rayshade <ref> [17] </ref> and POV-Ray [51], freeware raytracing packages. 2.1 Summary Modelling with implicit surfaces guarantees a continuous and smoothly blended surface which is relatively easy to deform and intuitive to specify. However, since visualisation of implicit surfaces is expensive, real-time modelling is difficult to achieve.
Reference: 18. <author> Lorensen W. and H. Cline, </author> <title> Marching cubes: a high resolution 3D surface construction algorithm, </title> <journal> Computer Graphics, </journal> <volume> Vol. 21, No. 4, </volume> <month> July </month> <year> 1987, </year> <pages> pp 163-169. </pages>
Reference-contexts: There are many algorithms for polygonisation of implicitly defined shapes <ref> [18, 32, 37, 38, 36] </ref>. They are mostly used for scientific visualisation. Wyvill et al. [40] propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique.
Reference: 19. <author> MetaEditor, </author> <title> Operation guide, </title> <type> personal communication from Bruno Tsuchiya, </type> <institution> META Corporation, </institution> <address> Japan, </address> <month> July </month> <year> 1993 </year>
Reference-contexts: All three techniques have been extended to include more complex primitives. For instance, negative primitives were added. They interact with positive objects creating dents in them. General quadrics (ellipsoids, cylinders, planes) and superellipsoids as primitives were suggested by Blinn [2]. Non-spherical metaballs were added to the metaballs technology <ref> [19] </ref>. Finally, superellipsoidal primitives were introduced to the soft object technique in [43]. 3.2 Skeletal primitives Skeletons used for defining implicit surfaces consist of lines, curves, polygons or points. The shape of a primitive follows the shape of its skeleton. <p> Unwanted Blending: To solve this problem the metaball technology offers both fusible and non-fusible connections between clusters. In the former case clusters blend to form a new cluster while they do not affect each other in the latter. Eccentric metaballs (as opposed to concentric spheres) are introduced <ref> [19] </ref>. Two metaballs will blend (or fuse) only if their centres of density are close enough. Eccentric metaballs have their centres of field shifted which helps to avoid blending (called meta-fusion).
Reference: 20. <author> Max, N. L. and Wyvill, B., </author> <title> Shapes and Textures for Rendering Coral, Scientific Visualisation of Physical Phenomena, </title> <editor> N. M. Patrikalakis (Ed.), </editor> <publisher> Springer-Verlag 1991, </publisher> <pages> pp 333-343 </pages>
Reference-contexts: the use of metaballs in the process of modelling a certain type of cells in a cods liver [33], Fujita et al. represent splashing water using metaballs [10], Muraki uses a blobby model for volumetric shape description (including human face modelling) [23], Max and Wyvill render corals as soft objects <ref> [20] </ref>, Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to visualise lightning [30] and in Japan, metaballs have been widely used for modelling and animation of shapes as complex as human anatomy parts [13].
Reference: 21. <author> McPheeters, C. W., </author> <title> Isosurface Modelling of Soft Objects in Computer Graphics, 1990, </title> <institution> National Centre for Computer Animation, Department of Communication and Media, Dorset Institute, </institution> <type> PhD thesis </type>
Reference-contexts: Models as complex as complex a human hand can be created using convolution surfaces with triangles and line segments as skeletons [6]. 3.3 Complex primitives The last approach to modelling using implicit surfaces is taken from <ref> [21] </ref>. Three types of primitives are used: algebraic, procedural and empirical. Algebraic primitives are these which can be defined by an algebraic expression, e.g. a sphere, a quadratic surface, a torus or a sine wave. <p> Colour is the simplest texture which can be applied to an implicit surface. It has been used in all implementations of implicit surfaces. The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence <ref> [2, 25, 41, 21, 23] </ref>. This results in a smooth colour transition in the blending area. McPheeters [21] summarises possible colouring metaphors for implicit surfaces. <p> The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence [2, 25, 41, 21, 23]. This results in a smooth colour transition in the blending area. McPheeters <ref> [21] </ref> summarises possible colouring metaphors for implicit surfaces. <p> The values of parameters are passed to a 2D function which returns the required texture value. Implicit surfaces are not easily parametrised. Nevertheless parametrisation can be obtained in some cases. Bloomenthal [3] parametrises implicit surfaces using their boundary representation (polygons). McPheeters <ref> [21] </ref> uses direct parametrisation of primitives applying complex mathematical procedures. Smets [31] observes that parametrisation is not essential for applying 2D texture mapping. What is sufficient is a homeomorphism between instances of a moving and deforming implicit surface. <p> At the beginning the source has the weight 1 and the target 0. In the end the source has the weight 0 and the target 1. This method often causes scrambling of an object since new primitives appear suddenly. Surface inbetweening is also used by <ref> [21] </ref>. Cellular matching matches parts of the source and the target according to the space they occupy. Essentially primitives from the same cells in a 3D grid in both the source and the target are matched.
Reference: 22. <author> Miller, G. and Pearce, A., </author> <title> Globular Dynamics: A Connected Particle System for Animating Viscous Fluids, </title> <journal> Vol. </journal> <volume> 13, No 3, </volume> <year> 1989, </year> <pages> pp 305-309 1-12 </pages>
Reference-contexts: Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation. They have been used to visualise deformable material modelled as particles <ref> [22, 35] </ref> or mass points [34]. Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated [11]. <p> Such material can undergo fractures and its chunks can join back together. Collision detection and response between unblendable materials can be modelled and the progressive fusion between chunks occurs under inuence of sufficient force. By using a very soft blending function, the simulation requires fewer particles than in <ref> [22, 34, 35] </ref> where implicit surfaces are only used to visualise results obtained from a particle system. An important issue addressed in [9] is volume conservation of implicit material modelled this way. During animation, it can undergo considerable (up to 50%) volume variations. <p> Coherence: This occurs when one primitive is moved too far apart from the others. The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives <ref> [35, 22, 7, 27] </ref>. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in [8, 9] by associating local volume with each primitive and maintaining it during animation.
Reference: 23. <author> Muraki, S., </author> <title> Volumetric Shape Description of Range Data Using Blobby ModelModel, </title> <journal> Computer Graphics, </journal> <volume> Vol. 25, No 4, </volume> <month> July </month> <year> 1991, </year> <pages> pp 227-235 </pages>
Reference-contexts: For instance, Tatsumi et al. present the use of metaballs in the process of modelling a certain type of cells in a cods liver [33], Fujita et al. represent splashing water using metaballs [10], Muraki uses a blobby model for volumetric shape description (including human face modelling) <ref> [23] </ref>, Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to visualise lightning [30] and in Japan, metaballs have been widely used for modelling and animation of shapes as complex as human anatomy parts <p> Colour is the simplest texture which can be applied to an implicit surface. It has been used in all implementations of implicit surfaces. The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence <ref> [2, 25, 41, 21, 23] </ref>. This results in a smooth colour transition in the blending area. McPheeters [21] summarises possible colouring metaphors for implicit surfaces.
Reference: 24. <author> Ning, P. and Bloomenthal, J, </author> <title> Evaluation of Implicit Surface Tilers, Siggraph 93 Course Notes No 25, Modelling, Visualizing and Animating Implicit Surfaces </title>
Reference-contexts: Tables store 256 cases of the possible hot/cold characteristics of the corners of an individual cell. Polygonisation of cells is therefore fast and automatic. However, this algorithm can miss some surface details because it does not handle adaptive subdivision. Ning and Bloomenthal <ref> [24] </ref> provide a comprehensive review of implicit surface polygonisers. 4.3 Direct ray tracing Ray tracing can be used for visualisation of any type of model as long as ray-surface intersection points and normal vectors to the surface can be calculated.
Reference: 25. <author> Nishimura, H., Hirai, M., Kawai, T., Kawata, T., Shirakawa, I. and Omura, K., </author> <title> Object Modelling by Distribution Function and a Method of Image Generation, </title> <journal> The Transactions of the Institute of Electronics and Communication Engineers of Japan, 1985, </journal> <volume> Vol. J68-D, Part 4, </volume> <pages> pp. </pages> <month> 718-725, </month> <title> in Japanese, translated into English by Takao Fujuwara </title>
Reference-contexts: History and applications As with many other techniques, it was Blinn who first introduced implicit surfaces into computer graphics when he used them to visualise electron density fields using blobby molecules [2]. At the same time Omura and his computer graphics research group in Japan developed metaballs <ref> [25] </ref>. The general principle of this technique is to model an equi-potential surface around point charges in a 3D space. Then soft objects were introduced in Canada [40, 41]. They are modelled as keypoints with scalar fields defined around them. <p> More detailed numerical calculations have to be performed in order to obtain the precise intersection point. The normal vector at a given point is calculated as partial derivatives of the scalar field function: (11) Blinn [2] and Nishimura et al. <ref> [25] </ref> visualise their models using ray tracing. More general ray tracing algorithms for implicit surfaces have also been developed. Kalra and Barr [16] propose an algorithm which guarantees ray-surface intersections even with the finest details on an implicit surface. <p> Colour is the simplest texture which can be applied to an implicit surface. It has been used in all implementations of implicit surfaces. The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence <ref> [2, 25, 41, 21, 23] </ref>. This results in a smooth colour transition in the blending area. McPheeters [21] summarises possible colouring metaphors for implicit surfaces.
Reference: 26. <author> Opalach, A. and S. Maddock, </author> <title> Implicit Surfaces: Appearance, Blending and Consistency, </title> <booktitle> proc. of 4th Eurographics Workshop on Animation and Simulation, </booktitle> <address> Barcelona, </address> <month> September </month> <year> 1993, </year> <pages> pp 233-245 </pages>
Reference-contexts: Implicit surfaces can also serve as skin covering an articulated figure built by imposing a hierarchy on primitives. <ref> [26] </ref> describes the ABC of using this idea in animation: maintaining Appearance, preventing unwanted Blending and preserving Coherence. Some interesting animation effects can be achieved using this approach, including automatic traditional animation tricks, e.g. squash and stretch, follow through or exaggeration [27]. <p> Assistance with motion generation is desired but fine tuning of detail should be left to the animator. 1-10 In <ref> [26] </ref> the ABC of implicit surfaces for character animation is proposed: automatically generated motion has to maintain Appearance, prevent unwanted Blending and preserve Coherence. These principles were used in [27] to create traditional animation effects, e.g. squash & stretch, follow through and exaggeration. <p> Unwanted blending will still occur in some cases. [43] solves the unwanted blending problem for soft objects by hierarchical clothing of a scene, rendering groups of blendable primitives in separate runs of a renderer. However, the unblendable primitives can only intersect each other, they do not interact. In <ref> [11, 26] </ref> similar solutions are proposed which modify the scalar field function in order to achieve deformation between unblendable primitives. <p> The case of blendable and unblendable primitives (e.g. two fingers blended with a palm on one end but not allowed to blend with it on the other end) is handled in <ref> [26] </ref> but the method may introduce surface discontinuities. [8, 14] further develop this algorithm to improve its performance in these cases, however satisfactory solution has not yet been proposed. Coherence: This occurs when one primitive is moved too far apart from the others.
Reference: 27. <author> Opalach, A. and Maddock, S., </author> <title> Disney Effects Using Implicit Surfaces, </title> <booktitle> Proc. 5th Eurographics Workshop on Animation and Simulation (Oslo, </booktitle> <month> 17-18th September, </month> <year> 1994) </year>
Reference-contexts: Some interesting animation effects can be achieved using this approach, including automatic traditional animation tricks, e.g. squash and stretch, follow through or exaggeration <ref> [27] </ref>. The balance between tedious manual motion specification and automatically generated movement has to be maintained [28]. In the commercial world, the metaball technology [13] proves most successful. The development of MetaEditor simplified the process of modelling with metaballs. <p> Assistance with motion generation is desired but fine tuning of detail should be left to the animator. 1-10 In [26] the ABC of implicit surfaces for character animation is proposed: automatically generated motion has to maintain Appearance, prevent unwanted Blending and preserve Coherence. These principles were used in <ref> [27] </ref> to create traditional animation effects, e.g. squash & stretch, follow through and exaggeration. A character in [27] is defined as a layered construction (an articulated figure clothed with implicit esh). The motion of the articulated figure is keyframed and the motion of esh is automatically generated. <p> These principles were used in <ref> [27] </ref> to create traditional animation effects, e.g. squash & stretch, follow through and exaggeration. A character in [27] is defined as a layered construction (an articulated figure clothed with implicit esh). The motion of the articulated figure is keyframed and the motion of esh is automatically generated. <p> Coherence: This occurs when one primitive is moved too far apart from the others. The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives <ref> [35, 22, 7, 27] </ref>. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in [8, 9] by associating local volume with each primitive and maintaining it during animation.
Reference: 28. <author> Opalach, A. and Maddock, S., </author> <title> High Level Control of Implicit Surfaces for Character Animation, </title> <booktitle> Proc. 1st International Eurographics Workshop on Implicit Surfaces (Grenoble, </booktitle> <address> 17-18th April, </address> <year> 1995) </year>
Reference-contexts: Some interesting animation effects can be achieved using this approach, including automatic traditional animation tricks, e.g. squash and stretch, follow through or exaggeration [27]. The balance between tedious manual motion specification and automatically generated movement has to be maintained <ref> [28] </ref>. In the commercial world, the metaball technology [13] proves most successful. The development of MetaEditor simplified the process of modelling with metaballs. Since then, numerous companies have included metaballs in their modelling and animation packages. <p> A character in [27] is defined as a layered construction (an articulated figure clothed with implicit esh). The motion of the articulated figure is keyframed and the motion of esh is automatically generated. In <ref> [28] </ref> this approach was extended to give an animator more control over tuning the generated motion to their requirements. 5.4 Summary During animation, the problems of unwanted blending, coherence loss and volume variation may occur. Several solutions have been suggested, below we present their summary.
Reference: 29. <author> Payne, B. A. and Toga, A. W., </author> <title> Distance Field Manipulation of Surface Models, </title> <journal> IEEE Computer Graphics and Applications, </journal> <month> January </month> <year> 1992, </year> <pages> pp 65-71 </pages>
Reference-contexts: type of cells in a cods liver [33], Fujita et al. represent splashing water using metaballs [10], Muraki uses a blobby model for volumetric shape description (including human face modelling) [23], Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields <ref> [29] </ref>, Reed and Wyvill use soft objects to visualise lightning [30] and in Japan, metaballs have been widely used for modelling and animation of shapes as complex as human anatomy parts [13]. Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation.
Reference: 30. <author> Reed, T. and B. Wyvill, </author> <title> Visual Simulation of Lightning, </title> <booktitle> Computer Graphics, Proceedings Siggraph94, </booktitle> <year> 1994, </year> <pages> pp 359-364. </pages>
Reference-contexts: al. represent splashing water using metaballs [10], Muraki uses a blobby model for volumetric shape description (including human face modelling) [23], Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to visualise lightning <ref> [30] </ref> and in Japan, metaballs have been widely used for modelling and animation of shapes as complex as human anatomy parts [13]. Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation.
Reference: 31. <author> Smets, J-P, </author> <title> Surfacic Textures for Animated Implicit Surfaces: the 2D case, </title> <booktitle> proc. of 4th Eurographics Workshop on Animation and Simulation, </booktitle> <address> Barcelona, </address> <month> September </month> <year> 1993, </year> <pages> pp 221-232 </pages>
Reference-contexts: Implicit surfaces are not easily parametrised. Nevertheless parametrisation can be obtained in some cases. Bloomenthal [3] parametrises implicit surfaces using their boundary representation (polygons). McPheeters [21] uses direct parametrisation of primitives applying complex mathematical procedures. Smets <ref> [31] </ref> observes that parametrisation is not essential for applying 2D texture mapping. What is sufficient is a homeomorphism between instances of a moving and deforming implicit surface. He proposes an algorithm (in the 2D case) for finding such a homeomorphism.
Reference: 32. <author> Suffern, K., </author> <title> Recursive Space Subdivision Techniques for Rendering Implicit Surfaces, </title> <booktitle> Proc. of The Australian Conference on Computer Graphics 1989, </booktitle> <pages> pp 239-250 </pages>
Reference-contexts: There are many algorithms for polygonisation of implicitly defined shapes <ref> [18, 32, 37, 38, 36] </ref>. They are mostly used for scientific visualisation. Wyvill et al. [40] propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique.
Reference: 33. <author> Tatsumi, H., Takaoki, E., Omura, K. and Fujito, H., </author> <title> A new method for 3D reconstruction from serial sections by computer graphics using meta-balls: reconstruction of Hepatoskeletal System formed by Ito Cells in the Cod Liver, </title> <journal> Computers and Biomedical Research, 1990, </journal> <volume> Vol. 23, Part 1, </volume> <pages> pp 37-45 </pages>
Reference-contexts: The academic use of implicit surfaces includes a wide variety of applications. For instance, Tatsumi et al. present the use of metaballs in the process of modelling a certain type of cells in a cods liver <ref> [33] </ref>, Fujita et al. represent splashing water using metaballs [10], Muraki uses a blobby model for volumetric shape description (including human face modelling) [23], Max and Wyvill render corals as soft objects [20], Payne and Toga model a rat's brain using distance fields [29], Reed and Wyvill use soft objects to
Reference: 34. <author> Terzopoulos, D., Platt, J. and Fleisher, K. </author> <title> Heating and melting deformable models (from goop to glop), </title> <journal> Graphics Interface'89, </journal> <month> June </month> <year> 1989, </year> <pages> pp 219-226 </pages>
Reference-contexts: Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation. They have been used to visualise deformable material modelled as particles [22, 35] or mass points <ref> [34] </ref>. Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated [11]. Finally, realistic simulation of highly deformable, amorphous (a) (b) 1-3 material (e.g. mud or dough) capable of fractures, fusion and maintaining nearly constant volume has been produced [7, 9]. <p> Such material can undergo fractures and its chunks can join back together. Collision detection and response between unblendable materials can be modelled and the progressive fusion between chunks occurs under inuence of sufficient force. By using a very soft blending function, the simulation requires fewer particles than in <ref> [22, 34, 35] </ref> where implicit surfaces are only used to visualise results obtained from a particle system. An important issue addressed in [9] is volume conservation of implicit material modelled this way. During animation, it can undergo considerable (up to 50%) volume variations. <p> Coherence: This occurs when one primitive is moved too far apart from the others. The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives [35, 22, 7, 27]. Primitives can also be connected by springs and dampers <ref> [34] </ref>. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in [8, 9] by associating local volume with each primitive and maintaining it during animation. Volume variation has been decreased to under 3%. 6.
Reference: 35. <author> Tonnesen, D., </author> <title> Modelling liquids and solids using thermal particles, </title> <booktitle> Proceedings of the Graphics Interface 1991, </booktitle> <pages> pp. 255-262 </pages>
Reference-contexts: Implicit surfaces have also been appreciated in the fields of computer simulation and physically based animation. They have been used to visualise deformable material modelled as particles <ref> [22, 35] </ref> or mass points [34]. Modelling collision detection and response with a precise contact surface in a physically based environment has also been simulated [11]. <p> Such material can undergo fractures and its chunks can join back together. Collision detection and response between unblendable materials can be modelled and the progressive fusion between chunks occurs under inuence of sufficient force. By using a very soft blending function, the simulation requires fewer particles than in <ref> [22, 34, 35] </ref> where implicit surfaces are only used to visualise results obtained from a particle system. An important issue addressed in [9] is volume conservation of implicit material modelled this way. During animation, it can undergo considerable (up to 50%) volume variations. <p> Coherence: This occurs when one primitive is moved too far apart from the others. The most popular method of preventing coherence loss is to calculate molecular Lennard-Jones attraction/repulsion forces between primitives <ref> [35, 22, 7, 27] </ref>. Primitives can also be connected by springs and dampers [34]. Volume Variation: When model undergoes considerable volume variation, the simulation is not successful. This has been controlled in [8, 9] by associating local volume with each primitive and maintaining it during animation.
Reference: 36. <author> Turk, G., </author> <title> Re-Tiling Polygonal Surfaces, </title> <journal> Computer Graphics, Vol26, </journal> <volume> No 2, </volume> <month> July </month> <year> 1992, </year> <pages> pp 55-64 </pages>
Reference-contexts: There are many algorithms for polygonisation of implicitly defined shapes <ref> [18, 32, 37, 38, 36] </ref>. They are mostly used for scientific visualisation. Wyvill et al. [40] propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique.
Reference: 37. <author> Velho, L., </author> <title> Adaptive polygonization of implicit surfaces using simplicial decomposition and boundary constraints, </title> <type> Eurographics 90, </type> <institution> C.E. Vandoni and D.A. Duce (Eds) </institution>
Reference-contexts: There are many algorithms for polygonisation of implicitly defined shapes <ref> [18, 32, 37, 38, 36] </ref>. They are mostly used for scientific visualisation. Wyvill et al. [40] propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique.
Reference: 38. <author> Wilhelms, J. and van Gelder, A., </author> <title> Topological Considerations in Isosurface Generation Extended Abstract, </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No 5, </volume> <month> November </month> <year> 1990, </year> <pages> pp 79-86 </pages>
Reference-contexts: There are many algorithms for polygonisation of implicitly defined shapes <ref> [18, 32, 37, 38, 36] </ref>. They are mostly used for scientific visualisation. Wyvill et al. [40] propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique.
Reference: 39. <author> Witkin, A. and P. Heckbert, </author> <title> Using Particles to Sample and Control Implicit Surfaces, </title> <booktitle> Computer Graphics, Proceedings Siggraph94, </booktitle> <month> July </month> <year> 1994, </year> <pages> pp. 269-278. </pages>
Reference-contexts: In [4] initial seeds are computed from cross-sections of a skeleton. They then migrate towards the skeleton in the gradient direction. It is important to maintain uniform seed distribution at each time step. Scattering has been further developed by Witkin and Heckbert <ref> [39] </ref> and Desbrun et al. [8]. Witkin and Heckbert [39] use a set of particles which attract and repel each other to achieve an even sampling of an implicit surface. Fission and death of particles occur when particle density in an area is too low or too high respectively. <p> They then migrate towards the skeleton in the gradient direction. It is important to maintain uniform seed distribution at each time step. Scattering has been further developed by Witkin and Heckbert <ref> [39] </ref> and Desbrun et al. [8]. Witkin and Heckbert [39] use a set of particles which attract and repel each other to achieve an even sampling of an implicit surface. Fission and death of particles occur when particle density in an area is too low or too high respectively.
Reference: 40. <author> Wyvill, G. and McPheeters, C. and Wyvill, B., </author> <title> Data Structure for Soft Objects, </title> <journal> The Visual Computer, </journal> <volume> Vol. 2, No 4, </volume> <month> August </month> <year> 1986a, </year> <pages> pp 227-234 </pages>
Reference-contexts: At the same time Omura and his computer graphics research group in Japan developed metaballs [25]. The general principle of this technique is to model an equi-potential surface around point charges in a 3D space. Then soft objects were introduced in Canada <ref> [40, 41] </ref>. They are modelled as keypoints with scalar fields defined around them. More complex field functions, e.g. ellipsoids, superellipsoids or negative primitives, have also been suggested for the above approaches. <p> There are many algorithms for polygonisation of implicitly defined shapes [18, 32, 37, 38, 36]. They are mostly used for scientific visualisation. Wyvill et al. <ref> [40] </ref> propose a polygonisation algorithm specifically designed for the implicit surfaces modelling technique. The boundary cells are found by examining all grid cells starting at a keypoint and going up, down, left or right in the grid.
Reference: 41. <author> Wyvill, G. and McPheeters, C. and Wyvill, B., </author> <title> Animating Soft Objects, </title> <journal> The Visual Computer, </journal> <volume> Vol. 2, No 4, </volume> <month> August </month> <year> 1986b, </year> <pages> pp 235-242 </pages>
Reference-contexts: At the same time Omura and his computer graphics research group in Japan developed metaballs [25]. The general principle of this technique is to model an equi-potential surface around point charges in a 3D space. Then soft objects were introduced in Canada <ref> [40, 41] </ref>. They are modelled as keypoints with scalar fields defined around them. More complex field functions, e.g. ellipsoids, superellipsoids or negative primitives, have also been suggested for the above approaches. <p> Colour is the simplest texture which can be applied to an implicit surface. It has been used in all implementations of implicit surfaces. The most common approach is to apply the weighted sum of colour contributions from all primitives to find the colour of the areas of multiple inuence <ref> [2, 25, 41, 21, 23] </ref>. This results in a smooth colour transition in the blending area. McPheeters [21] summarises possible colouring metaphors for implicit surfaces. <p> Inbetweens are generated and the result is a C 1 continuous surface although surface topology may change. Successful animation sequences have been created using this method <ref> [1, 41] </ref>. Metamorphosis can also be performed using keyframes. Two methods for performing metamorphosis described in [44] are surface matching or cellular matching. Surface inbetweening starts from both source and target objects and weights their inuence to the final image throughout the metamorphosis process.
Reference: 42. <author> Wyvill, G. and McPheeters, C. and Wyvill, B., </author> <title> Solid Texturing of Soft Objects, </title> <journal> IEEE Computer Graphics and Applications, Vol7, </journal> <volume> No 12, </volume> <month> December </month> <year> 1987, </year> <pages> pp 20-26 </pages>
Reference-contexts: However, for implicit surfaces the movement may involve changes in the topology of the object. Moving the texture space is therefore insufficient (in fact, sometimes it is impossible to perform, e.g. when two primitives are dragged apart, which way would the texture space go?). Wyvill et al. <ref> [42] </ref> give a solution to this problem by attaching a separate texture space to each keypoint and then interpolating the final texture using local texture values for keypoints. The texture value at a surface point is a weighted sum of all texture contributions from the inuencing primitives.
Reference: 43. <author> Wyvill, B. and Wyvill, G., </author> <title> Field Functions for Implicit Surfaces, </title> <journal> Visual Computer, </journal> <volume> Vol. 5, </volume> <year> 1989, </year> <pages> pp 75-82 </pages>
Reference-contexts: For instance, negative primitives were added. They interact with positive objects creating dents in them. General quadrics (ellipsoids, cylinders, planes) and superellipsoids as primitives were suggested by Blinn [2]. Non-spherical metaballs were added to the metaballs technology [19]. Finally, superellipsoidal primitives were introduced to the soft object technique in <ref> [43] </ref>. 3.2 Skeletal primitives Skeletons used for defining implicit surfaces consist of lines, curves, polygons or points. The shape of a primitive follows the shape of its skeleton. The previous section described implicit surfaces created solely from simple primitives. <p> Eccentric metaballs (as opposed to concentric spheres) are introduced [19]. Two metaballs will blend (or fuse) only if their centres of density are close enough. Eccentric metaballs have their centres of field shifted which helps to avoid blending (called meta-fusion). Unwanted blending will still occur in some cases. <ref> [43] </ref> solves the unwanted blending problem for soft objects by hierarchical clothing of a scene, rendering groups of blendable primitives in separate runs of a renderer. However, the unblendable primitives can only intersect each other, they do not interact.
Reference: 44. <author> Wyvill, B., </author> <title> Metamorphosis of Implicit Surfaces, Siggraph 90 Course Notes 23, Modelling and Animating with Implicit Surfaces </title>
Reference-contexts: When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. Metamorphosis can also be performed by interpolating between matching parts of two objects <ref> [44] </ref>. Successful animations like letters descending a staircase [46], a soft train rubbing a bank [47] or a blobby guitarist emerging from sparkling toothpaste [1] are very successful at conveying the story line to the audience. <p> Useful in some applications, e.g. modelling amorphous material like dough or mud, it creates problems in character animation. When two primitives from the set composing a character are placed too far from each other, they will disconnect causing coherence loss (scrambling <ref> [44] </ref>), an often undesired effect. The opposite to coherence loss is the problem of unwanted blending, which occurs when two unblendable parts of an object (e.g. hands or legs) are placed too close to each other and blended. The coherence loss and unwanted blending occur most frequently during animation. <p> Inbetweens are generated and the result is a C 1 continuous surface although surface topology may change. Successful animation sequences have been created using this method [1, 41]. Metamorphosis can also be performed using keyframes. Two methods for performing metamorphosis described in <ref> [44] </ref> are surface matching or cellular matching. Surface inbetweening starts from both source and target objects and weights their inuence to the final image throughout the metamorphosis process. At the beginning the source has the weight 1 and the target 0.
Reference: 45. <author> Wyvill, B., </author> <title> Implicit surface Tiling Techniques, Siggraph 93 talk, Course No 25, Modelling, Visualizing and Animating Implicit Surfaces </title>
Reference-contexts: One disadvantage of distance surfaces is that bulges and creases may occur in the area where the skeletons meet. This effect is often undesirable. A solution to this problem was proposed by Wyvill <ref> [45] </ref>. He applied a different way of blending distance surfaces using the field function for soft objects (Eq. 6).
Reference: 46. <author> Wyvill, B., </author> <note> Soft, Siggraph 86 Electronic Theatre and Video Review, Issue 24, </note> <year> 1986. </year> <pages> 1-13 </pages>
Reference-contexts: When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. Metamorphosis can also be performed by interpolating between matching parts of two objects [44]. Successful animations like letters descending a staircase <ref> [46] </ref>, a soft train rubbing a bank [47] or a blobby guitarist emerging from sparkling toothpaste [1] are very successful at conveying the story line to the audience.
Reference: 47. <author> Wyvill, B., </author> <title> The Great Train Rubbery, </title> <note> Siggraph 88 Electronic Theatre and Video Review, Issue 26, </note> <year> 1988. </year>
Reference-contexts: When used in a keyframe animation environment, implicit surfaces offer the advantage of guaranteed smoothly blended and continuous surface. Metamorphosis can also be performed by interpolating between matching parts of two objects [44]. Successful animations like letters descending a staircase [46], a soft train rubbing a bank <ref> [47] </ref> or a blobby guitarist emerging from sparkling toothpaste [1] are very successful at conveying the story line to the audience.
Reference: 48. <author> Wyvill, B. and Jevans, D., </author> <title> Table Driven Polygonization, Siggraph 93 Course Notes No 25, Modelling, Visualizing and Animating Implicit Surfaces </title>
Reference-contexts: Bloomenthal [3] suggests a faster polygonisation algorithm based on the octree and adaptive octree subdivision. He uses tetrahedronal cells avoiding the ambiguous polygonisation problem. Adaptive subdivision also ensures that fine details of the surface are found. Wyvill and Jevans <ref> [48] </ref> propose an algorithm based on look-up tables. Tables store 256 cases of the possible hot/cold characteristics of the corners of an individual cell. Polygonisation of cells is therefore fast and automatic. However, this algorithm can miss some surface details because it does not handle adaptive subdivision.
Reference: 49. <author> Wyvill, G. and Trotman, A., </author> <title> Ray-Tracing Soft Objects, </title> <booktitle> proc. CG International, </booktitle> <year> 1990, </year> <pages> pp 469-475 </pages>
Reference-contexts: More general ray tracing algorithms for implicit surfaces have also been developed. Kalra and Barr [16] propose an algorithm which guarantees ray-surface intersections even with the finest details on an implicit surface. Wyvill and Trotman <ref> [49] </ref> suggest an algorithm which is less general but finds all intersections along a ray, not only the closest one, a feature useful for CSG operations on implicit surfaces. Hart [15] presents a good review of ray tracing applied to the implicit surfaces modelling technique.
Reference: 50. <author> Wyvill, B., </author> <title> Warping Implicit Surfaces, </title> <booktitle> Proc. Western Computer Graphics Symposium (SKIGRAPH 92), </booktitle> <year> 1992, </year> <pages> pp 55-63 </pages>
Reference-contexts: Yet the coherence of the model is better preserved than in the surface inbetweening method. 5.2 Physically based simulation Primitives can be treated as rigid objects and Newtonian equations of motion can be applied to simulate their motion <ref> [11, 50] </ref>. Gascuel [11] uses the implicit surface generated by primitives in a physically based environment for fast collision detection using the inside/outside test of one object on the sampling points of another. <p> During collisions, field functions are locally deformed by introducing deformation terms in the interpenetration area and to propagate the deformation outside the contact area. Both linear and non-linear stiffness of solids can be simulated. Wyvill <ref> [50] </ref> achieves deformation during collisions by space warping. Various regions of space have deformation terms associated with them. When an object enters a particular region, its field function changes, i.e. it undergoes deformation.
Reference: 51. <author> Young, P. (POV-Team Coordinator) et al., POV-Ray v2.2. </author> <note> Available by ftp from alfred.ccs.carleton.ca. </note>
Reference-contexts: Blobby molecules have been used by Pacific Data Images (California) in much of their commercial animation work and they have also been incorporated in Rayshade [17] and POV-Ray <ref> [51] </ref>, freeware raytracing packages. 2.1 Summary Modelling with implicit surfaces guarantees a continuous and smoothly blended surface which is relatively easy to deform and intuitive to specify. However, since visualisation of implicit surfaces is expensive, real-time modelling is difficult to achieve.
References-found: 51

