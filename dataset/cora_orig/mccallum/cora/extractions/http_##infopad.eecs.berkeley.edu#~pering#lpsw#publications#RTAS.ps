URL: http://infopad.eecs.berkeley.edu/~pering/lpsw/publications/RTAS.ps
Refering-URL: http://infopad.eecs.berkeley.edu/~pering/lpsw/
Root-URL: 
Email: pering@eecs.berkeley.edu rb@eecs.berkeley.edu  
Title: Energy Efficient Voltage Scheduling for Real-Time Operating Systems  
Author: Trevor Pering Prof. Robert Brodersen 
Address: Berkeley, CA 94704 Berkeley, CA 94704  
Affiliation: EECS Department EECS Department University of California, Berkeley University of California, Berkeley  
Abstract: This paper applies the concept of real-time process scheduling to a Dynamic Voltage Scaling (DVS) microprocessor. DVS allows a microprocessor to save energy by operating at the optimal voltage for the task at hand. Efficient operation requires a new class of algorithms which we term voltage schedulers. The necessary foundation for these algorithms is presented along with the foreseen implementation difficulties. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Burd and R. Brodersen, </author> <title> Energy Efficient CMOS Microprocessor Design, </title> <booktitle> Proc. 28th Hawaii Intl Conf. on System Sciences, </booktitle> <volume> Vol. 1, </volume> <month> Jan. </month> <year> 1995. </year>
Reference-contexts: Combining these two equations, assuming a constant capacitance, yields This equation states that there is a trade-off between energy and delay: we can decrease the energy consumed by slowing the processor clock and reducing the operating voltage <ref> [1] </ref>. A simple example of the energy/delay trade-off starts with a system that operates at 100 Mhz, 3.3V, and 50% processor utilization. Reducing the operating voltage to 2.4V, necessitating a clock reduction to 50 Mhz, would decrease the energy consumption by 47%.
Reference: [2] <author> A. Burns and A. Wellings, </author> <title> Real-Time Systems and Pro--gramming Languages, second edition, </title> <publisher> Addison-Wesley, </publisher> <year> 1997. </year>
Reference: [3] <author> T. Kuroda, et. al., </author> <title> Variable Supply-Voltage Scheme for Low-Power High-Speed CMOS Digital Design, </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> Vol. 33, No. 3, </volume> <month> March </month> <year> 1998. </year>
Reference-contexts: However, some applications fall significantly short of optimal. Additionally, the efficiency realized is extremely dependent on the interval length, making it difficult to choose one interval such that all applications are scheduled effectively. <ref> [3] </ref> presents the design of a processor core which uses voltage scaling to run at the minimum voltage necessary for operation at a given input clock frequency. Their design demonstrates the feasibility of voltage scaling, but does not allow direct software control over the processor speed.
Reference: [4] <author> T. Pering, T. Burd, and R. W. Brodersen, </author> <title> The Simulation and Evaluation of Dynamic Voltage Scaling Algorithms, </title> <booktitle> Intl Symp. on Low Power Electronics and Design, </booktitle> <month> August </month> <year> 1998. </year>
Reference-contexts: Their algorithms use interval based scheduling: each fix-sized time interval runs at a constant processor speed. The processor speed used is based on the activity of previous intervals. This technique has the advantage of an easy implementation, but the disadvantage of sub-optimal results. In <ref> [4] </ref>, we apply cycle-level simulations of the algorithms of [5] to several deadline-based applications, such as MPEG and audio stream processing. Our results indicate that interval-based voltage scheduling is effective, realizing up to a 70% reduction in system energy. However, some applications fall significantly short of optimal.
Reference: [5] <author> M. Weiser, </author> <title> Some computer science issues in ubiquitous computing, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 36, </volume> <pages> pp. 74-83, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: For hard real-time systems missed deadlines are unacceptable. In this case, the worst-case computation time can be used, resulting in a schedule that meets timing constraints but is not always energy-optimal. 6. Related Work <ref> [5] </ref> first presented the idea of voltage scaling within the context of general-purpose microprocessor systems. Their algorithms use interval based scheduling: each fix-sized time interval runs at a constant processor speed. The processor speed used is based on the activity of previous intervals. <p> The processor speed used is based on the activity of previous intervals. This technique has the advantage of an easy implementation, but the disadvantage of sub-optimal results. In [4], we apply cycle-level simulations of the algorithms of <ref> [5] </ref> to several deadline-based applications, such as MPEG and audio stream processing. Our results indicate that interval-based voltage scheduling is effective, realizing up to a 70% reduction in system energy. However, some applications fall significantly short of optimal.
References-found: 5

