URL: ftp://coast.cs.purdue.edu/pub/doc/genetic_algorithms/bio/immune.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ20.html
Root-URL: http://www.cs.purdue.edu
Title: A Biologically Inspired Immune System for Computers  
Author: Jeffrey O. Kephart 
Date: 1994.  
Note: To appear in Artificial Life IV, R. Brooks and P. Maes, eds., MIT Press,  
Address: P.O. Box 704, Yorktown Heights, NY 10598  
Affiliation: High Integrity Computing Laboratory IBM Thomas J. Watson Research Center  
Abstract: Computer viruses are the first and only form of artificial life to have had a measurable impact on society. Currently, they are a relatively manageable nuisance. However, two alarming trends are likely to make computer viruses a much greater threat. First, the rate at which new viruses are being written is high, and accelerating. Second, the trend towards increasing interconnectivity and interoperability among computers will enable computer viruses and worms to spread much more rapidly than they do today. To address these problems, we have designed an immune system for computers and computer networks that takes much of its inspiration from nature. Like the vertebrate immune system, our system develops antibodies to previously unencountered computer viruses or worms and remembers them so as to recognize and respond to them more quickly in the future. We are careful to minimize the risk of an auto-immune response, in which the immune system mistakenly identifies legitimate software as being undesirable. We also employ nature's technique of fighting self-replication with self-replication, which our theoretical studies have shown to be highly effective. Many components of the proposed immune system are already being used to automate computer virus analysis in our laboratory, and we anticipate that this technology will gradually be incorporated into IBM's commercial anti-virus product during the next year or two. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Amodio, Jorge. </author> <note> Submission to Virus-L digest 7:4. January 18, </note> <year> 1994. </year>
Reference-contexts: Of the roughly 100 to 200 million PC and Macintosh users in the world, at least several hundred thousand, and perhaps over a million, have been a*icted at one time or another. Computer viruses have found a niche on all of the world's continents, including Antarctica <ref> [1] </ref> 1 , and most of its countries. 1 The "Barrote" virus was discovered at Spanish and Ar-gentinian scientific bases in Antarctica when it triggered on January 5th, 1994.
Reference: [2] <author> Dataquest. </author> <year> 1991. </year> <title> Computer Virus Market Survey for National Computer Security Association. </title> <address> San Jose. </address>
Reference-contexts: Even though just a small minority of viruses are intentionally harmful, the vast majority of them are poorly-written, poorly-tested, buggy pieces of software that create problems that are often time-consuming to diagnose. According to a Dataquest survey <ref> [2] </ref> and spokesmen for several different insurance companies [3], a virus spreading among several PC's in a company costs (on average) several thousands of dollars in down-time and data lossage; one company interviewed by Dataquest reported a $2 million dollar loss due to a single incident.
Reference: [3] <author> Sulit, Beth K. </author> <title> Nothing to sneeze at. Risk & Insurance, </title> <month> August </month> <year> 1992, </year> <month> 1. </month>
Reference-contexts: Even though just a small minority of viruses are intentionally harmful, the vast majority of them are poorly-written, poorly-tested, buggy pieces of software that create problems that are often time-consuming to diagnose. According to a Dataquest survey [2] and spokesmen for several different insurance companies <ref> [3] </ref>, a virus spreading among several PC's in a company costs (on average) several thousands of dollars in down-time and data lossage; one company interviewed by Dataquest reported a $2 million dollar loss due to a single incident. <p> At least one insurer offers a $100,000/year policy for damage due to computer virus infection <ref> [3] </ref>. Computer viruses are serious business. They have engendered an entire anti-virus industry, consisting of hundreds of researchers and developers who are employed by dozens of companies around the world. At least one such company, devoted almost exclusively to anti-virus software, is traded on the Nasdaq stock exchange.
Reference: [4] <author> Kephart, Jeffrey O. and Steve R. White. </author> <title> Measuring and modeling computer virus prevalence. </title> <booktitle> Proceedings of the 1993 IEEE Computer Society Symposium on Research in Security and Privacy. </booktitle> <address> Oakland, California, </address> <month> May 24-26, </month> <year> 1993, </year> <pages> 2-15. </pages>
Reference-contexts: Currently, the arms race between virus authors and anti-virus developers is roughly even. During any particular moment, it is typical for a few viruses to be increasing in prevalence, and other formerly prevalent ones to be on the decline <ref> [4] </ref>. However, two alarming trends threaten to turn the balance in favor of virus authors: 1. The rate at which new viruses are being written is quite high, and appears to be accelerating. <p> Theoretical modeling has shown the kill signal to be extremely effective, particularly in topologies that are highly localized or sparsely connected <ref> [4, 11] </ref>. 6 future infection, and sends a "kill signal" to its neighbors. Receipt of the kill signal results in the immunization of uninfected neighbors; infected neighbors are both immunized and prompted to send kill signals to their neighbors.
Reference: [5] <author> Spafford, E. H. </author> <year> 1991. </year> <title> Computer viruses: A form of artificial life? In D. </title> <editor> Farmer, C. Langton, S. Ras-mussen, and C. Taylor, eds., </editor> <booktitle> Artificial Life II. Studies in the Sciences of Complexity, </booktitle> <pages> 727-747. </pages> <address> Redwood City: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: Section 4 concludes with a brief discussion of important issues that remain to be resolved. 2 Why current anti-virus techniques are doomed There are a variety of complementary anti-virus techniques in common usage <ref> [5, 6] </ref>. Activity monitors alert users to system activity that is commonly associated with viruses, but only rarely associated with the behavior of normal, legitimate programs. Integrity management systems warn the user of suspicious changes that have been made to files.
Reference: [6] <author> Kephart, Jeffrey O., Steve R. White, and David M. </author> <title> Chess. Computers and epidemiology. </title> <journal> IEEE Spectrum, </journal> <month> May </month> <year> 1993, </year> <pages> 20-26. </pages>
Reference-contexts: Section 4 concludes with a brief discussion of important issues that remain to be resolved. 2 Why current anti-virus techniques are doomed There are a variety of complementary anti-virus techniques in common usage <ref> [5, 6] </ref>. Activity monitors alert users to system activity that is commonly associated with viruses, but only rarely associated with the behavior of normal, legitimate programs. Integrity management systems warn the user of suspicious changes that have been made to files.
Reference: [7] <author> Kephart, Jeffrey O. and Steve R. White. </author> <title> "Directed-graph epidemiological models of computer viruses," </title> <booktitle> Proceedings of the 1991 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May 20-22, </month> <year> 1991, </year> <pages> 343-359. </pages>
Reference-contexts: However, if that individual can be expected to infect 1.1 other people, there is likely to be a flu epidemic. The second factor, increased promiscuity, has apparently been given little attention by theoretical epidemiologists until our own study of it <ref> [7, 11] </ref>.
Reference: [8] <author> McNeill, William H. </author> <year> 1977. </year> <editor> Plagues and Peoples. </editor> <address> New York: </address> <publisher> Doubleday. </publisher>
Reference-contexts: Biological diseases have always taken advantage of technological advances which enhance man's mobility <ref> [8] </ref>; it is natural that computer diseases should make opportunistic use of advances in the mobility of information.
Reference: [9] <author> Spafford, E. H. </author> <year> 1989. </year> <title> The Internet worm program: an analysis. </title> <journal> Computer Comm. Review 19, </journal> <volume> 1. </volume>
Reference-contexts: Experience with the Internet worm, which spread to hundreds or perhaps thousands of machines across the world in less than one day in 1988 <ref> [9] </ref>, shows that even today's computing environment is vulnerable to a spread rate that is about two orders of magnitude faster than the typical timescale of monthly updates. While it is true that updates might be made somewhat more frequently, this would not solve the problem.
Reference: [10] <author> Bailey, Norman T. J. </author> <year> 1975. </year> <title> The mathematical theory of infectious diseases and its applications, second edition. </title> <address> New York: </address> <publisher> Oxford University Press. </publisher>
Reference-contexts: The first factor is related to one of the most fundamental results of classical mathematical epidemiology <ref> [10] </ref>. If the average rate at which infection can spread from one individual to another is sufficiently low, widespread infection is impossible. Above a well-defined critical threshold, however, epidemics can occur. As a simple way of explaining the existence of a sharp threshold, imagine that an individual has the flu. <p> The self-replicator need not itself be a virus. In the case of the worldwide campaign against smallpox, those who were in close contact with an infected individual were all immunized against the disease. Thus immunization spread as a sort of anti-disease among smallpox victims <ref> [10] </ref>. We propose to use a similar mechanism, which we call the "kill signal", to quell viral spread in computer networks. When a computer discovers that it is infected, it can send a signal to neighboring machines.
Reference: [11] <author> Kephart, Jeffrey O. </author> <year> 1994. </year> <title> How topology affects population dynamics, </title> <editor> in C. Langton, ed., </editor> <booktitle> Artificial Life III. Studies in the Sciences of Complexity, </booktitle> <pages> 447-463. </pages> <address> Redwood City: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: However, if that individual can be expected to infect 1.1 other people, there is likely to be a flu epidemic. The second factor, increased promiscuity, has apparently been given little attention by theoretical epidemiologists until our own study of it <ref> [7, 11] </ref>. <p> Theoretical modeling has shown the kill signal to be extremely effective, particularly in topologies that are highly localized or sparsely connected <ref> [4, 11] </ref>. 6 future infection, and sends a "kill signal" to its neighbors. Receipt of the kill signal results in the immunization of uninfected neighbors; infected neighbors are both immunized and prompted to send kill signals to their neighbors.
Reference: [12] <author> Paul, William E., ed. </author> <year> 1991. </year> <title> Immunology: Recognition and Response : : : Readings from Scientific American. </title> <address> New York: </address> <publisher> W. H. Freeman and Company. </publisher>
Reference-contexts: Rather than relying on a central authority to protect them from all ills, humans and other vertebrates carry around their own individual immune systems. The vertebrate immune system exhibits some remarkable prop erties, including <ref> [12] </ref>: 1. Recognition of known intruders. 2. Elimination/neutralization of intruders. 3. Ability to learn about previously unknown intruders. * Determine that the intruder doesn't belong. * Figure out how to recognize it. * Remember how to recognize it. 4. Use of selective proliferation and self-replication for quick recognition and response. <p> These virus samples are stored in such a way that they will not be executed accidentally. The capture of a virus sample by the decoy programs is somewhat analogous to the ingestion of antigen by macrophages or B cells <ref> [12] </ref>. It allows the intruder to be processed into a standard format that can be parsed by some other component of the immune system, and provides a standard location where information on the intruder can be found.
Reference: [13] <author> Forrest, Stephanie, Alan S. Perelson, Lawrence Allen, and Rajesh Cherukuri. </author> <title> Self-nonself discrimination in a computer. </title> <booktitle> Proceedings of the 1994 IEEE Computer Society Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May 16-18, </month> <year> 1994. </year>
Reference-contexts: If so, the virus is located 3 An interesting alternative to traditional integrity monitoring via checksums, inspired by the detailed mechanisms by which the vertebrate immune system learns to recognize "self", has been studied recently by Forrest, Perelson, Allen, and Cherukuri <ref> [13] </ref>. and removed in the usual way. If the anomaly can not be attributed to a known virus, either the generic virus-detection heuristics yielded a false alarm, or a previously unknown virus is at large in the system.
Reference: [14] <author> Perelson, Alan S., ed. </author> <year> 1988. </year> <title> Theoretical Immunology, Parts One and Two. </title> <address> Redwood City: </address> <publisher> Addison-Wesley. </publisher>
Reference-contexts: We anticipate that, as the design for our computer immune system evolves, it will be influenced, not just by what Mother Nature has invented, but also by theories invented by immunologists to explain the observed function of the immune system <ref> [14, 15, 16] </ref>.
Reference: [15] <editor> Forrest, Stephanie and Alan S. Perelson. </editor> <year> 1990. </year> <title> Genetic algorithms and the immune system. </title> <booktitle> Proceedings of Workshop on Parallel Problem Solving from Nature. </booktitle> <address> New York: </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: We anticipate that, as the design for our computer immune system evolves, it will be influenced, not just by what Mother Nature has invented, but also by theories invented by immunologists to explain the observed function of the immune system <ref> [14, 15, 16] </ref>.
Reference: [16] <author> Seiden, P. E. and F. Celada. </author> <year> 1992. </year> <title> A model for simulating cognate recognition and response in the immune system. </title> <journal> J. Theor. Biology 158, </journal> <volume> 329. </volume> <pages> 10 </pages>
Reference-contexts: We anticipate that, as the design for our computer immune system evolves, it will be influenced, not just by what Mother Nature has invented, but also by theories invented by immunologists to explain the observed function of the immune system <ref> [14, 15, 16] </ref>.
References-found: 16

