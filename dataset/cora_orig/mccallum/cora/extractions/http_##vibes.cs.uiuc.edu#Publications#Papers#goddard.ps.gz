URL: http://vibes.cs.uiuc.edu/Publications/Papers/goddard.ps.gz
Refering-URL: http://vibes.cs.uiuc.edu/Publications/publications.htm
Root-URL: http://www.cs.uiuc.edu
Title: Optimizing Input/Output Using Adaptive File System Policies  
Author: Tara M. Madhyastha, Christopher L. Elford, Daniel A. Reed 
Address: Urbana, Illinois 61801  
Affiliation: Department of Computer Science University of Illinois  
Abstract: Parallel input/output characterization studies and experiments with flexible resource management algorithms indicate that adaptivity is crucial to file system performance. In this paper we propose an automatic technique for selecting and refining file system policies based on application access patterns and execution environment. An automatic classification framework allows the file system to select appropriate caching and prefetching policies, while performance sensors provide feedback used to tune policy parameters for the specific system environment. To illustrate the potential performance improvements possible using adaptive file system policies, we present results from experiments involving classification-based and performance-based steering. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C RANDALL , P.E., A YDT , R.A, C HIEN , A.A., </author> <title> AND R EED , D.A. Characterization of a Suite of Input/Output Intensive Applications. </title> <booktitle> In Proceedings of Supercomputing 95 (Dec. </booktitle> <year> 1995). </year>
Reference-contexts: 1. Introduction Input/output performance is the primary performance bottleneck of an important class of scientific applications (e.g., global climate modeling and satellite image processing). Moreover, input/output characterization studies such as Crandall <ref> [1] </ref> and Smirni [2] have revealed that parallel applications often have complex, irregular input/output access patterns for which existing file systems are not well optimized. Experience has shown that a few static file system policies are unlikely to bridge the growing gap between input/output and computation performance.
Reference: [2] <author> S MIRNI , E., A YDT , R.A., C HIEN , A.A. </author> <title> AND R EED , D.A. I/O Requirements of Scientific Applications: An Evolutionary View. </title> <booktitle> In Fifth International Symposium on High Performance Distributed Computing (1996). </booktitle>
Reference-contexts: 1. Introduction Input/output performance is the primary performance bottleneck of an important class of scientific applications (e.g., global climate modeling and satellite image processing). Moreover, input/output characterization studies such as Crandall [1] and Smirni <ref> [2] </ref> have revealed that parallel applications often have complex, irregular input/output access patterns for which existing file systems are not well optimized. Experience has shown that a few static file system policies are unlikely to bridge the growing gap between input/output and computation performance.
Reference: [3] <editor> H UBER , J., E LFORD , C.L., R EED , D.A., C HIEN , A.A., AND B LUMENTHAL , D.S. </editor> <publisher> PPFS: </publisher>
Reference-contexts: In 2 we give a high-level overview of the adaptive file system infrastructure. Validation of these concepts requires an experimental framework; we have implemented adaptive file system policies within a portable, user-level file system called the Portable Parallel File System (PPFS) Huber <ref> [3] </ref>, described in 3. Our system has two major components; in 4 we discuss how one automatically classifies user access patterns and uses this information to select file system policies. <p> Portable Parallel File System (PPFS) PPFS is a portable input/output library designed as an extensible testbed for file system policies <ref> [3] </ref>. A rich interface for application control of data placement and file system policies makes it exceptionally wellsuited for our experiments. Below we describe the PPFS design and extensions that facilitate adaptive file system policy experiments. 3.1.
References-found: 3

