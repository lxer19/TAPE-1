URL: http://www.cs.unc.edu/~bastos/fastglos.ps.gz
Refering-URL: http://www.cs.unc.edu/~bastos/radiosity.html
Root-URL: http://www.cs.unc.edu
Email: -stuerzl bastos-@cs.unc.edu  
Title: Interactive Rendering of Globally Illuminated Glossy Scenes  
Author: Wolfgang Strzlinger, Rui Bastos 
Address: Chapel Hill  
Affiliation: Dept. of Computer Science, University of North Carolina at  
Abstract: Global illumination simulates all transfers of light in a scene. The results of the simulation are then used to generate photo-realistic images. Scenes with diffuse surfaces only can be displayed in real-time using the results of radi-osity methods. Images of scenes with more general surfaces are created with methods based on ray tracing but do not achieve interactive frame rates. This paper presents a new algorithm for the display of globally illuminated scenes at interactive speeds. A photon tracing phase computes an approximation to the global illumination. The rendering phase splats the contribution of each photon hit onto the corresponding surface taking reectance properties and viewing direction into account. Results demonstrate that this method allows to render images of globally illuminated scenes with glossy surfaces at interactive frame rates.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Aliaga, </author> <title> SGI performance measurements, </title> <type> personal communication. </type>
Reference-contexts: The discrepancy is due to the fact that only certain paths through the graphics hardware, corresponding to certain parameter configurations, are heavily optimized. When the operands or operations are slightly different, performance drops dramatically. This has been verified by other researchers as well <ref> [1] </ref>. Note that both scenes in table 2 use relatively small light sources which can be approximated accurately with point light sources. As the direct illumination is computed using hardware, less photons are needed to generate images. Performance improves almost proportionally to this decrease.
Reference: [2] <author> R. Bastos, </author> <title> Radiosity Viewer with On the Fly Corrected Illumination, </title> <institution> Univ. of North Carolina at Chapel Hill, Dept. of Computer Science, </institution> <note> COMP 238 final project report, </note> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: Because of limitations of current high-end graphics hardware (see section 4) the method does not achieve high frame rates. Also the splatting can blur shadow boundaries. 2.2.1 Optimized Rendering Phase Direct illumination accounts for the most prominent illumination features <ref> [2] </ref>: highlights and shadows. By factoring out the direct illumination from the global illumination solution, the number of photons which need to be rendered can be significantly reduced. Small enough area light sources can be simulated by point light sources without introducing significant error.
Reference: [3] <author> R. Bastos, M. Goslin, H. Zhang, </author> <title> Efficient Radiosity Rendering using Textures and Bicubic Reconstruction, </title> <booktitle> 1997 Symposium on Interactive 3D Graphics, </booktitle> <pages> pp. 71-74, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Because the appearance of a diffuse surface does not depend on the viewing direction such surfaces are handled by precomputing the effects of the photons hits in the preprocessing phase and displaying the surface using a Gouraud shaded mesh or textured surfaces <ref> [3] </ref>. 3 Implementation In the following a few noteworthy details of the implementation are described for each phase. The scenes are specified using the MGF file format [17]. Wards surface model [15] is used for glossy surfaces.
Reference: [4] <author> M. F. Cohen, J. R. Wallace, </author> <title> Radiosity and Realistic Image Synthesis, </title> <publisher> Academic Press, </publisher> <year> 1993. </year>
Reference-contexts: Traditional rendering handles either diffuse surfaces only or cannot take global illumination into account. Graphic workstations support in hardware the display of diffuse shaded surfaces for real-time rendering of scenes. Globally illuminated scenes with diffuse surfaces can be displayed at interactive frame rates using the results of radiosity methods <ref> [4] </ref>. Shirley et al. [11] [18] proposed a global illumination algorithm for diffuse, mirrorlike, and refractive surfaces based on particle tracing and density estimation. The algorithm shoots photons from the light sources, following their paths until they are absorbed, and stores the information where the photons hit surfaces.
Reference: [5] <author> P. J. Diefenbach, N. I. Badler, </author> <title> Multi-Pass Pipeline Rendering: Realism for Dynamic Environments, </title> <booktitle> 1997 Symposium on Interactive 3D Graphics, </booktitle> <pages> pp. 59-70, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: For both the particle tracing and rendering phases, each photon or viewing ray is independent and can be traced separately. The density estimation and simplification phases can be applied to multiple surfaces in par allel. Diefenbach et al. <ref> [5] </ref> describe a hardware based approach to render glossy, mirror-like, and translucent surfaces with direct lighting and shadows. Their approach handles global illumination effects for diffuse, mirror-like and translucent surfaces. <p> The scenes are specified using the MGF file format [17]. Wards surface model [15] is used for glossy surfaces. Shading of glossy surfaces is simulated in hardware with the fit Phong model introduced by Diefenbach <ref> [5] </ref>. All example scenes use small area light sources, which were replaced by point light sources with equivalent power for both phases of the algorithm.
Reference: [6] <author> M. Herf, P. Heckbert, </author> <title> Fast Soft Shadows, </title> <booktitle> Technical Sketches (SIGGRAPH 96 Visual Proceedings), p 145, </booktitle> <month> July </month> <year> 1996. </year>
Reference-contexts: One promising approach is described in <ref> [6] </ref> and the related documents. Acknowledgments This work was partially supported by the following grants: NIH/National Center for Research Resources P41RR02170-13 Interactive Graphics for Molecular Graphics and Microscopy, Fellowship FWF-J01317-TEC, Fellowship CNPq - Brasilia/BRAZIL process no. 201142/93-7. Thanks to the anonymous reviewers for their helpful comments.
Reference: [7] <author> H. W. Jensen, </author> <title> Global Illumination using Photon Maps, </title> <booktitle> Proceedings of 7th Workshop on Rendering, </booktitle> <pages> pp 22-31, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Disadvantages are the relatively high memory consumption and the slow rendering speed. Rendering globally illuminated scenes with arbitrary surfaces can be achieved with methods based on ray tracing, but they do not allow interactive frame rates [12]. Some of these methods <ref> [7] </ref> [16] also use the information stored in a photon simulation and avoid meshing altogether. Their main disadvantage is the requirement to evaluate many rays per pixel to reduce the variance in the final image.
Reference: [8] <author> A. Keller, </author> <title> Quasi-Monte Carlo Radiosity, </title> <booktitle> Proceedings of 7th Workshop on Rendering, </booktitle> <pages> pp 102-111, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Due to deferred and programmable shading capabilities, significant performance gains are to be expected. The possibility of implementing a splat as a primitive operation of the graphics hardware is very promising for improved frame rates. Future work includes: Integration of Quasi-Monte Carlo Methods <ref> [8] </ref> into the particle-tracing phase; Handling of planar reective surfaces to simulate mirror-like reections; Determining in advance how many photons are necessary to approximate the illu mination on a surface; Improving the appearance of the polygon edges similarly to [11]; Handling of area light sources.
Reference: [9] <author> S. Molnar, J. Eyles, J. Poulton. PixelFlow: </author> <title> High Speed Rendering using Image Composition, </title> <booktitle> Computer Graphics (Proceedings of SIGGRAPH 92), </booktitle> <volume> vol. 26, no. 2, </volume> <pages> pp 231-240, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Unfortunately, the limitations of current high-end graphics hard-ware prevent the method to achieve real-time rendering frame rates. The presented system will be ported to PixelFlow hardware <ref> [9] </ref>. Due to deferred and programmable shading capabilities, significant performance gains are to be expected. The possibility of implementing a splat as a primitive operation of the graphics hardware is very promising for improved frame rates.
Reference: [10] <author> M. Segal, C. Korobkin, R. van Widenfelt, J. Foran, P. Haeberli, </author> <title> Fast Shadows and Lighting Effects Using Texture Mapping, </title> <booktitle> Computer Graphics (Proceedings of SIGGRAPH 92), </booktitle> <volume> vol. 26, no. 2, </volume> <pages> pp 249-252, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: To overcome this limitation, each surface is subdivided in a fine regular mesh during setup. This mesh is displayed using per-vertex Phong-lighting and bilinear interpolation. As long as each mesh element covers only a few pixels Phong-shading is simulated accurately. Shadow maps <ref> [10] </ref> are used to account for occlusion of the light source. The original polygons of the scene are rendered into a depth texture from the view point of the light source. This depth texture is used during rendering to identify shadowed parts of the scene.
Reference: [11] <author> P. Shirley, B. Wade, P. M. Hubbard, D. Zareski, B. Walter, D. P. Greenberg, </author> <title> Global Illumination via Density-Estimation, </title> <booktitle> Proceedings of 6th Workshop on Rendering, </booktitle> <pages> pp 187-199, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Graphic workstations support in hardware the display of diffuse shaded surfaces for real-time rendering of scenes. Globally illuminated scenes with diffuse surfaces can be displayed at interactive frame rates using the results of radiosity methods [4]. Shirley et al. <ref> [11] </ref> [18] proposed a global illumination algorithm for diffuse, mirrorlike, and refractive surfaces based on particle tracing and density estimation. The algorithm shoots photons from the light sources, following their paths until they are absorbed, and stores the information where the photons hit surfaces. <p> In figure 1, h is the scaling factor defined in equation (3) and g is given by . The constant C controls the relative size of the kernel support. Its values range from 30-50, which agrees with values reported previously <ref> [11] </ref> [14]. A four dimensional table is used to speed up the evaluation of the BRDF. <p> Future work includes: Integration of Quasi-Monte Carlo Methods [8] into the particle-tracing phase; Handling of planar reective surfaces to simulate mirror-like reections; Determining in advance how many photons are necessary to approximate the illu mination on a surface; Improving the appearance of the polygon edges similarly to <ref> [11] </ref>; Handling of area light sources. One promising approach is described in [6] and the related documents. Acknowledgments This work was partially supported by the following grants: NIH/National Center for Research Resources P41RR02170-13 Interactive Graphics for Molecular Graphics and Microscopy, Fellowship FWF-J01317-TEC, Fellowship CNPq - Brasilia/BRAZIL process no. 201142/93-7.
Reference: [12] <author> F. X. Sillion, J. R. Arvo, S. H. Westin, D. P. Greenberg, </author> <title> A Global Illumination Solution for General Reectance Distributions, </title> <booktitle> Computer Graphics (Proceedings of SIGGRAPH 91), </booktitle> <volume> vol. 25, no. 4, </volume> <pages> pp 187-196, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: The rendering phase uses this information to compute the final image. Disadvantages are the relatively high memory consumption and the slow rendering speed. Rendering globally illuminated scenes with arbitrary surfaces can be achieved with methods based on ray tracing, but they do not allow interactive frame rates <ref> [12] </ref>. Some of these methods [7] [16] also use the information stored in a photon simulation and avoid meshing altogether. Their main disadvantage is the requirement to evaluate many rays per pixel to reduce the variance in the final image.
Reference: [13] <author> B. W. Silverman, </author> <title> Density Estimation for Statistics and Data Analysis, </title> <publisher> Chap-man and Hall, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: To achieve a smooth reconstruction of the outgoing radiance function over the surface, the contribution of each photon is multiplied by a kernel function k positioned at the photon hit location x j : where k is a unit volume kernel function (e.g. Silvermans kernel function <ref> [13] </ref>) and h is a scaling factor for the kernel. Comparable expressions have been used successfully by other researchers [7],[11]. The size of the kernel support is adjusted per surface. It depends on the number of photon hits on the surface and the area of the surface.
Reference: [14] <author> W. Strzlinger, </author> <title> Global Illumination with Glossy Surfaces, </title> <booktitle> International Conference in Central Europe of Computer Graphics and Visualization (WSCG) 97, </booktitle> <pages> pp. 543-551, </pages> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: The term glossy is used to describe such surfaces. The appearance of glossy surfaces can be approximated using Phong-lighting available on current high-end graphics workstations. Both approaches discussed above do not handle global illumination effects for glossy surfaces. A generalization of Shirleys approach was presented by Strzlinger <ref> [14] </ref>. The modified algorithm takes the incoming direction of the photons into account and stores a simplified form of the incoming radiance function for each glossy surface. The rendering phase uses this information to compute the final image. Disadvantages are the relatively high memory consumption and the slow rendering speed. <p> This expression ensures that the reconstruction improves with the number of photons, as the kernel support gets proportionally smaller. If sufficient photons are used in the particle tracing phase the kernel support for each photon covers only a small number of pixels in the final image. Previous work <ref> [14] </ref> has shown that two million photon hits suffice to generate realistic looking images for a scene with four thousand surfaces. Further experiments with other interior scenes indicated that the number of photons needed does not increase proportionally to the number of surfaces. <p> In figure 1, h is the scaling factor defined in equation (3) and g is given by . The constant C controls the relative size of the kernel support. Its values range from 30-50, which agrees with values reported previously [11] <ref> [14] </ref>. A four dimensional table is used to speed up the evaluation of the BRDF.
Reference: [15] <author> G. J. Ward, </author> <title> Measuring an Modeling Anisotropic Reection, </title> <booktitle> Computer Graphics (SIGGRAPH `92), </booktitle> <pages> pp 265-272, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The scenes are specified using the MGF file format [17]. Wards surface model <ref> [15] </ref> is used for glossy surfaces. Shading of glossy surfaces is simulated in hardware with the fit Phong model introduced by Diefenbach [5]. All example scenes use small area light sources, which were replaced by point light sources with equivalent power for both phases of the algorithm.
Reference: [16] <author> G. J. Ward, </author> <title> The RADIANCE Lighting Simulation and Rendering System, </title> <booktitle> Computer Graphics (SIGGRAPH `94), </booktitle> <pages> pp 459-472, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Disadvantages are the relatively high memory consumption and the slow rendering speed. Rendering globally illuminated scenes with arbitrary surfaces can be achieved with methods based on ray tracing, but they do not allow interactive frame rates [12]. Some of these methods [7] <ref> [16] </ref> also use the information stored in a photon simulation and avoid meshing altogether. Their main disadvantage is the requirement to evaluate many rays per pixel to reduce the variance in the final image.
Reference: [17] <author> G. J. Ward, R. Shakespeare, I. Ashdown, H. Rushmeier, </author> <title> MGF Parser and Examples, </title> <address> http://radsite.lbl.gov/mgf/HOME.html. </address>
Reference-contexts: The scenes are specified using the MGF file format <ref> [17] </ref>. Wards surface model [15] is used for glossy surfaces. Shading of glossy surfaces is simulated in hardware with the fit Phong model introduced by Diefenbach [5]. <p> A simple scene of a reective plane lit by colored emitters was used to test the method of section 2.2. Further tests were performed on the Cornell box (with glossy material for the larger cube) and the office scene available in MGF format <ref> [17] </ref>.
Reference: [18] <author> D. Zareski, B. Wade, P. Hubbard, P. Shirley, </author> <title> Efficient Parallel Global Illumination using Density-Estimation, </title> <booktitle> Proceedings of ACM Parallel Rendering Symposium, </booktitle> <pages> pp 47-54, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Graphic workstations support in hardware the display of diffuse shaded surfaces for real-time rendering of scenes. Globally illuminated scenes with diffuse surfaces can be displayed at interactive frame rates using the results of radiosity methods [4]. Shirley et al. [11] <ref> [18] </ref> proposed a global illumination algorithm for diffuse, mirrorlike, and refractive surfaces based on particle tracing and density estimation. The algorithm shoots photons from the light sources, following their paths until they are absorbed, and stores the information where the photons hit surfaces.
References-found: 18

