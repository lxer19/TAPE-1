URL: ftp://ftp.isi.edu/isi-pubs/rr-96-435.ps.Z
Refering-URL: http://www.isi.edu/isi-technical-reports.html
Root-URL: http://www.isi.edu
Email: tambe@isi.edu  
Title: Tracking Dynamic Team Activity: An Extended Report  
Author: Milind Tambe 
Date: March 21, 1996  
Web: http://www.isi.edu/soar/tambe  
Address: 4676 Admiralty Way, Marina del Rey, CA 90292  
Affiliation: Information Sciences Institute and Computer Science Department University of Southern California  
Abstract: AI researchers are striving to build complex multi-agent worlds with intended applications ranging from the RoboCup robotic soccer tournaments, to interactive virtual theatre, to large-scale real-world battlefield simulations. Agent tracking | monitoring other agent's actions and inferring their higher-level goals and intentions | is a central requirement in such worlds. While previous work has mostly focused on tracking individual agents, this paper goes beyond by focusing on agent teams. Team tracking poses the challenge of tracking a team's joint goals and plans. Dynamic, real-time environments add to the challenge, as ambiguities have to be resolved in real-time. The central hypothesis underlying the present work is that an explicit team-oriented perspective enables effective team tracking. This hypothesis is instantiated using the model tracing technology employed in tracking individual agents. Thus, to track team activities, team models are put to service. Team models are a concrete application of the joint intentions framework and enable an agent to track team activities, regardless of the agent's being a collaborative participant or a non-participant in the team. To facilitate real-time ambiguity resolution with team models: (i) aspects of tracking are cast as constraint satisfaction problems to exploit constraint propagation techniques; and (ii) a cost minimality criterion is applied to constrain tracking search. Empirical results from two separate tasks in real-world, dynamic environments | one collaborative and one competitive | are provided. A shortened version of this report is to appear in the National Conference on Artificial Intelligence, AAAI96 Content areas: Multi-agent systems, real-time systems, agent tracking, plan recognition 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. R. Anderson, C. F. Boyle, A. T. Corbett, and M. W. Lewis. </author> <title> Cognitive modeling and intelligent tutoring. </title> <journal> Artificial Intelligence, </journal> <volume> 42 </volume> <pages> 7-49, </pages> <year> 1990. </year>
Reference-contexts: Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. In all these environments, agent tracking | monitoring other agents' observable actions and inferring their high-level goals, plans and behaviors | is a central capability required for intelligent interaction <ref> [1, 26, 35, 37] </ref>. While this capability is obviously essential in non-collaborative settings, it is also important in collaborative settings, where communication may be restricted due to cost, risk, lack of a common protocol etc.[13]. <p> Indeed, it is only an accurate interpretation of the joint pincer that enables D to effectively counteract it. Recognizing this jointness also enables D to track a subteam's (L and M) behaviors when 3 it is not visible. 1 Previous approaches <ref> [1, 26, 37, 12, 35] </ref>, that focus on tracking individual agents, fail to track such joint team activities. In particular, these approaches are based on model tracing, which involves executing an agent's runnable model, and matching the model's predictions with actual observations. <p> We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state [24, 29]. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking [35] builds on model tracing <ref> [1, 37] </ref>. Here, a tracker executes a model of the trackee (the agent being tracked), matching the model's predictions with observations of the trackee's actions. One key innovation in RESC is the use of commitments.
Reference: [2] <author> J. Azarewicz, G. Fala, R. Fink, and C. Heithecker. </author> <title> Plan recognition for airborne tactical decision making. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 805-811. </pages> <address> Menlo Park, Calif.: </address> <publisher> AAAI press, </publisher> <year> 1986. </year>
Reference-contexts: The key to this capability is tracking an agent's flexible mix of goal-driven and reactive behaviors, as seen in dynamic, interactive, multi-agent domains. This contrasts with previous work in the related area of plan recognition <ref> [15, 2] </ref>, which mostly focuses on recognizing plans in static, single-agent domains. This paper takes a step beyond tracking individual agents | the current state of the art in agent tracking and plan-recognition | by focusing on team tracking.
Reference: [3] <author> J. Bates, A. B. Loyall, and W. S. Reilly. </author> <title> Integrating reactivity, goals and emotions in a broad agent. </title> <type> Technical Report CMU-CS-92-142, </type> <institution> School of Computer Science, Carnegie Mellon University, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: Many of these multi-agent domains require the interaction to be dynamic and real-time. For instance, in education, intelligent tutoring systems interact with students to provide real-time feedback [12, 37]. In entertainment, projects such as interactive fiction <ref> [3] </ref>, virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). <p> It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer [17], social agents [23], virtual theatre <ref> [3, 11] </ref>, virtual battlefields [34, 27]. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [4] <author> M. Boddy and T. Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 979-984. </pages> <publisher> IJCAI-89, Morgan Kaufmann, </publisher> <month> August </month> <year> 1989. </year> <month> 16 </month>
Reference-contexts: The commitment in step 1 creates a single team operator hierarchy. With this commitment is RESC team always has a current best working hypothesis about the team activity, which provides it an anytime quality <ref> [4] </ref>, important in real-time environments. In step 2, tracking failure is redefined in RESC team . Match failure | where a team's actions (e.g., orientation) does not match RESC team 's current predictions | is certainly a tracking failure.
Reference: [5] <author> R. B. Calder, J. E. Smith, A. J. Courtemanche, J. M. F. Mar, and A. Z. Ceranowicz. </author> <title> Modsaf behavior simulation and control. </title> <booktitle> In Proceedings of the Conference on Computer Generated Forces and Behavioral Representation, </booktitle> <year> 1993. </year>
Reference-contexts: Previous approaches to tracking individual agents fail to meet these team-tracking challenges. To concretely illustrate the problems faced by these approaches, we describe a typical simulated air-combat scenario (Figure 1), from a real-world combat simulation environment <ref> [5] </ref>. We focus on this scenario since it demonstrates the above team tracking challenges in the context of real-world teamwork. Here, a pilot agent D confronts a team of four enemy fighters J, K, L and M. <p> Team models and RESC team are applicable for tracking even if an agent is a collaborative participant in the team. Consider the scenario in Figure 3-c, which shows a team of simulated helicopters executing its mission [36], again in the real-world combat simulation environment <ref> [5] </ref>. Helicopter radio communications are often restricted to avoid detection by enemy. It is thus essential for a helicopter pilot agent to infer relevant information from the actions of its teammates, e.g., the team has reached a pre-specified holding area since 9 teammates have begun hovering.
Reference: [6] <author> P. R. Cohen and H. J. Levesque. </author> <title> Teamwork. </title> <journal> Nous, </journal> <volume> 35, </volume> <year> 1991. </year>
Reference-contexts: Naturally, this teamwork is being reflected in virtual and robotic agent worlds, e.g., RoboCup. The key in tracking such teamwork is to recognize that it is not merely a union of individual simultaneous activity, even if coordinated <ref> [10, 6, 16, 14] </ref>. For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs [6]. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. <p> The key in tracking such teamwork is to recognize that it is not merely a union of individual simultaneous activity, even if coordinated [10, 6, 16, 14]. For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs <ref> [6] </ref>. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. <p> For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs <ref> [6] </ref>. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. Consider the example of two children collaboratively building a tower of blocks [10] | they cannot be tracked as building two individual towers of blocks with gaps in just the right places. <p> Indeed, team tracking based on team models is among the first practical applications of the joint intentions theory developed in formalizing teamwork <ref> [6] </ref>. The paper shows that team models are uniformly applicable in tracking even if an agent is a participant in a team, rather than a non-participant. <p> The key issue in self tracking is that when it fails, an agent may modify its behaviors, rather than its self model | an issue for future work. 3.1 The Joint Intentions Framework While team tracking has received little attention in the literature, researchers are investigating teamwork both theoretically <ref> [10, 6, 16] </ref>, and practically [14, 27]. Perhaps the most well understood among the theories is the joint intentions framework [6]. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q). <p> Perhaps the most well understood among the theories is the joint intentions framework <ref> [6] </ref>. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q). Joint commitment implies that (at least initially) team members have a mutual belief that they are each committed to that activity. <p> This application raises one issue: joint intentions pack with them the responsibility of a team member when it privately comes to believe that the team's jointly intended activity is unachievable (or achieved) | this team member is left with the commitment to communicate this private belief to its teammates <ref> [6] </ref>. However, if communication itself is very costly | breaking radio silence may be risky for a helicopter pilot agent | such a commitment may be inappropriate.
Reference: [7] <author> J. Cremer, J. Kearney, Y. Papelis, and R. Romano. </author> <title> The software architecture for scenario control in the Iowa driving simulator. </title> <booktitle> In Proceedings of the Conference on Computer Generated Forces and Behavioral Representation, </booktitle> <year> 1994. </year>
Reference-contexts: In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). Similarly, in training, a recent thrust on dynamic, real-time simulations | e.g., realistic traffic <ref> [7] </ref>, air-traffic control [25] and combat [27, 34] simulations | involves such collaborative and non-collaborative interaction among tens or hundreds of agents (and humans). Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17].
Reference: [8] <author> R. Dechter, Pearl., and J. </author> <title> Network-based heuristics for constraint-satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 34(1) </volume> <pages> 1-38, </pages> <year> 1988. </year>
Reference-contexts: Unifying role combinations and casting the problem as a CSP provides several benefits. First, while detecting match failures is the simplest consistency check (node consistency), other constraint propagation techniques such as arc consistency or path-consistency <ref> [18, 8] </ref> can acclerate the process of role assignment (or detecting failures). For instance, in Figure 5, if node-consistency rules out the role STRAIGHT for subteam S 2 , then arc-consistency will automatically rule out roles LEFT and RIGHT for S 1 .
Reference: [9] <author> M. P. Georgeff and A. L. Lansky. </author> <title> Procedural knowledge. </title> <journal> Proceedings of the IEEE special issue on knowledge representation, </journal> <volume> 74 </volume> <pages> 1383-1398, </pages> <year> 1986. </year>
Reference-contexts: Such architectural reuse provides situatedness in RESC, e.g., operator DJ may now be reactively terminated, and flexibly selected, to respond to the dynamic world situation. (Such architectural reuse is also possible with other architectures <ref> [11, 9] </ref>.) As for RESC's commitments, notice that from D's perspective, there is some ambiguity in J's right turn in 6 to just one operator DJ hierarchy.
Reference: [10] <author> B. J. Grosz and C. L. Sidner. </author> <booktitle> Plans for Discourse, </booktitle> <pages> pages 417-445. </pages> <publisher> MIT Press, </publisher> <address> Cam-bridge, MA, </address> <year> 1990. </year>
Reference-contexts: Naturally, this teamwork is being reflected in virtual and robotic agent worlds, e.g., RoboCup. The key in tracking such teamwork is to recognize that it is not merely a union of individual simultaneous activity, even if coordinated <ref> [10, 6, 16, 14] </ref>. For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs [6]. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. <p> Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. Consider the example of two children collaboratively building a tower of blocks <ref> [10] </ref> | they cannot be tracked as building two individual towers of blocks with gaps in just the right places. Similarly, in soccer, the collaborative pass play of two attackers cannot be tracked by focusing on their independent activities | a (robotic) defender should track their dynamic teamwork. <p> The key issue in self tracking is that when it fails, an agent may modify its behaviors, rather than its self model | an issue for future work. 3.1 The Joint Intentions Framework While team tracking has received little attention in the literature, researchers are investigating teamwork both theoretically <ref> [10, 6, 16] </ref>, and practically [14, 27]. Perhaps the most well understood among the theories is the joint intentions framework [6]. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q).
Reference: [11] <author> B. Hayes-Roth, L. Brownston, and R. V. Gen. </author> <title> Multiagent collaobration in directed improvisation. </title> <booktitle> In Proceedings of the International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <year> 1995. </year>
Reference-contexts: Many of these multi-agent domains require the interaction to be dynamic and real-time. For instance, in education, intelligent tutoring systems interact with students to provide real-time feedback [12, 37]. In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre <ref> [11] </ref> all involve real-time and dynamic multi-agent interaction (collaborative and competitive). Similarly, in training, a recent thrust on dynamic, real-time simulations | e.g., realistic traffic [7], air-traffic control [25] and combat [27, 34] simulations | involves such collaborative and non-collaborative interaction among tens or hundreds of agents (and humans). <p> Such architectural reuse provides situatedness in RESC, e.g., operator DJ may now be reactively terminated, and flexibly selected, to respond to the dynamic world situation. (Such architectural reuse is also possible with other architectures <ref> [11, 9] </ref>.) As for RESC's commitments, notice that from D's perspective, there is some ambiguity in J's right turn in 6 to just one operator DJ hierarchy. <p> It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer [17], social agents [23], virtual theatre <ref> [3, 11] </ref>, virtual battlefields [34, 27]. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [12] <author> R. Hill and W. L. Johnson. </author> <title> Situated plan attribution for intelligent tutoring. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence. </booktitle> <address> Menlo Park, Calif.: </address> <publisher> AAAI press, </publisher> <year> 1994. </year>
Reference-contexts: 1 Introduction In multi-agent domains, intelligent agents interact with each other, either collaboratively or non-collaboratively, to achieve their goals. Many of these multi-agent domains require the interaction to be dynamic and real-time. For instance, in education, intelligent tutoring systems interact with students to provide real-time feedback <ref> [12, 37] </ref>. In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). <p> Indeed, it is only an accurate interpretation of the joint pincer that enables D to effectively counteract it. Recognizing this jointness also enables D to track a subteam's (L and M) behaviors when 3 it is not visible. 1 Previous approaches <ref> [1, 26, 37, 12, 35] </ref>, that focus on tracking individual agents, fail to track such joint team activities. In particular, these approaches are based on model tracing, which involves executing an agent's runnable model, and matching the model's predictions with actual observations.
Reference: [13] <author> M. Huber and E. Durfee. </author> <title> Deciding when to commit to action during observation-based coordination. </title> <booktitle> In Proceedings of the International Conference on Multi-agent systems (ICMAS), </booktitle> <year> 1995. </year>
Reference: [14] <author> N. Jennings. </author> <title> Controlling cooperative problem solving in industrial multi-agent systems using joint intentions. </title> <journal> Artificial Intelligence, </journal> <volume> 75, </volume> <year> 1995. </year>
Reference-contexts: Naturally, this teamwork is being reflected in virtual and robotic agent worlds, e.g., RoboCup. The key in tracking such teamwork is to recognize that it is not merely a union of individual simultaneous activity, even if coordinated <ref> [10, 6, 16, 14] </ref>. For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs [6]. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. <p> self tracking is that when it fails, an agent may modify its behaviors, rather than its self model | an issue for future work. 3.1 The Joint Intentions Framework While team tracking has received little attention in the literature, researchers are investigating teamwork both theoretically [10, 6, 16], and practically <ref> [14, 27] </ref>. Perhaps the most well understood among the theories is the joint intentions framework [6]. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q).
Reference: [15] <author> A. Kautz and J. F. Allen. </author> <title> Generalized plan recognition. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 32-37. </pages> <address> Menlo Park, Calif.: </address> <publisher> AAAI press, </publisher> <year> 1986. </year>
Reference-contexts: The key to this capability is tracking an agent's flexible mix of goal-driven and reactive behaviors, as seen in dynamic, interactive, multi-agent domains. This contrasts with previous work in the related area of plan recognition <ref> [15, 2] </ref>, which mostly focuses on recognizing plans in static, single-agent domains. This paper takes a step beyond tracking individual agents | the current state of the art in agent tracking and plan-recognition | by focusing on team tracking.
Reference: [16] <author> D. Kinny, M. Ljungberg, A. Rao, E. Sonenberg, G. Tidhard, and E. Werner. </author> <title> Planned team activity. </title> <editor> In C. Castelfranchi and E. Werner, editors, </editor> <booktitle> Artificial Social Systems, Lecture notes in AI 830. </booktitle> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: Naturally, this teamwork is being reflected in virtual and robotic agent worlds, e.g., RoboCup. The key in tracking such teamwork is to recognize that it is not merely a union of individual simultaneous activity, even if coordinated <ref> [10, 6, 16, 14] </ref>. For instance, ordinary automobile traffic is not considered teamwork, despite the simultaneous activity, coordinated by traffic signs [6]. Teamwork involves team members' joint goals and joint intentions, i.e., joint commitments to joint activities [6]. Consequently, tracking teamwork as independent activities of individual members is difficult. <p> The key issue in self tracking is that when it fails, an agent may modify its behaviors, rather than its self model | an issue for future work. 3.1 The Joint Intentions Framework While team tracking has received little attention in the literature, researchers are investigating teamwork both theoretically <ref> [10, 6, 16] </ref>, and practically [14, 27]. Perhaps the most well understood among the theories is the joint intentions framework [6]. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q).
Reference: [17] <author> H. Kitano, M. Asada, Y. Kuniyoshi, I. Noda, and E. Osawa. </author> <title> Robocup: The robot world cup initiative. </title> <booktitle> In Proceedings of IJCAI-95 Workshop on Entertainment and AI/Alife, </booktitle> <year> 1995. </year>
Reference-contexts: It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer <ref> [17] </ref>, social agents [23], virtual theatre [3, 11], virtual battlefields [34, 27]. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [18] <author> V. Kumar. </author> <title> Algorithms for constraint-satisfaction problems: A survey. </title> <journal> AI Magazine, </journal> <volume> 12(1), </volume> <month> Spring </month> <year> 1992. </year> <month> 17 </month>
Reference-contexts: Unifying role combinations and casting the problem as a CSP provides several benefits. First, while detecting match failures is the simplest consistency check (node consistency), other constraint propagation techniques such as arc consistency or path-consistency <ref> [18, 8] </ref> can acclerate the process of role assignment (or detecting failures). For instance, in Figure 5, if node-consistency rules out the role STRAIGHT for subteam S 2 , then arc-consistency will automatically rule out roles LEFT and RIGHT for S 1 .
Reference: [19] <author> Y. Kuniyoshi, S. Rougeaux, M. Ishii, N. Kita, S. Sakane, and M. Kakikura. </author> <title> Cooperation by observation: the framework and the basic task pattern. </title> <booktitle> In Proceedings of the IEEE International Conference on Robotics and Automation, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Such interaction is also seen in robotic domains, e.g., collaboration by observation <ref> [19] </ref>, RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. In all these environments, agent tracking | monitoring other agents' observable actions and inferring their high-level goals, plans and behaviors | is a central capability required for intelligent interaction [1, 26, 35, 37]. <p> Similarly, in soccer, the collaborative pass play of two attackers cannot be tracked by focusing on their independent activities | a (robotic) defender should track their dynamic teamwork. Success in robotic collaboration by observation <ref> [19] </ref> would also require tracking such joint activities. Thus, team tracking raises the novel challenge of tracking a team's joint goals and intentions. Dynamic, real-time domains, the focus of the current work, add to this challenge in two important ways. <p> It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation <ref> [19] </ref>, RoboCup robotic (and virtual) soccer [17], social agents [23], virtual theatre [3, 11], virtual battlefields [34, 27]. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [20] <author> R. L. Lewis. </author> <title> An architecturally-based theory of human sentence comprehension. </title> <booktitle> In Proceedings of the Annual Conference of the Cognitive Science Society, </booktitle> <year> 1993. </year>
Reference-contexts: Should this commitment lead to a tracking error, a real-time repair mechanism is invoked. RESC is thus a repair-based approach to tracking (like repair-based approaches to constraint satisfaction [22] and natural language understanding <ref> [20] </ref>). A second key technique in RESC leads to its situatedness, i.e., responsiveness to the present. To track the trackee's dynamic behaviors, it is necessary to execute the trackee's model so it is responsive to the changing world situation.
Reference: [21] <author> P. Maes, T. Darrell, B. Blumberg, and S. Pentland. </author> <title> Interacting with animated autonomous agents. </title> <editor> In J. Bates, editor, </editor> <booktitle> Proceedings of the AAAI Spring Symposium on Believable Agents, </booktitle> <year> 1994. </year>
Reference-contexts: Many of these multi-agent domains require the interaction to be dynamic and real-time. For instance, in education, intelligent tutoring systems interact with students to provide real-time feedback [12, 37]. In entertainment, projects such as interactive fiction [3], virtual immersive environments <ref> [21] </ref>, and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive).
Reference: [22] <author> S. Minton, M. D. Johnston, A. Philips, and P. Laird. </author> <title> Solving large-scale constraint satisfaction and scheduling problems using a heuristic repair method. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1990. </year>
Reference-contexts: Therefore, RESC commits to one, heuristically selected, execution path through the model, which provides a constraining context for its continued interpretations. Should this commitment lead to a tracking error, a real-time repair mechanism is invoked. RESC is thus a repair-based approach to tracking (like repair-based approaches to constraint satisfaction <ref> [22] </ref> and natural language understanding [20]). A second key technique in RESC leads to its situatedness, i.e., responsiveness to the present. To track the trackee's dynamic behaviors, it is necessary to execute the trackee's model so it is responsive to the changing world situation. <p> This enables roles to be assigned to subteams via CSP. So far, only arc-consistency has been incorporated in RESC team . RESC team , being a repair-based approach, solves this CSP via a repair-based approach <ref> [22] </ref>. It commits to one assignment of roles to subteams, while obeying static constraints. If dynamic observations rule out a role for a particular subteam, arc-consistency rules out inconsistent roles for other subteams.
Reference: [23] <author> K. Nagao and A. Takeuchi. </author> <title> Social interaction: multi-model conversation with social agents. </title> <booktitle> In Proceedings of the National Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 22-28, </pages> <year> 1994. </year>
Reference-contexts: It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer [17], social agents <ref> [23] </ref>, virtual theatre [3, 11], virtual battlefields [34, 27]. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [24] <author> A. Newell. </author> <title> Unified Theories of Cognition. </title> <publisher> Harvard Univ. Press, </publisher> <address> Cambridge, Mass., </address> <year> 1990. </year>
Reference-contexts: After a presentation of experimental results (Section 6), Section 7 concludes. The description below assumes as a concrete basis, pilot agents based on the Soar architecture [34]. We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state <ref> [24, 29] </ref>. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking [35] builds on model tracing [1, 37]. Here, a tracker executes a model of the trackee (the agent being tracked), matching the model's predictions with observations of the trackee's actions.
Reference: [25] <author> K. Pimentel and K. Teixeira. </author> <title> Virtual reality: Through the new looking glass. Windcrest/McGraw-Hill, Blue Ridge Summit, </title> <address> PA, </address> <year> 1994. </year>
Reference-contexts: In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). Similarly, in training, a recent thrust on dynamic, real-time simulations | e.g., realistic traffic [7], air-traffic control <ref> [25] </ref> and combat [27, 34] simulations | involves such collaborative and non-collaborative interaction among tens or hundreds of agents (and humans). Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17].
Reference: [26] <author> A. S. Rao. </author> <title> Means-end plan recognition: Towards a theory of reactive recognition. </title> <booktitle> In Proceedings of the International Conference on Knowledge Representation and Reasoning (KR-94), </booktitle> <year> 1994. </year>
Reference-contexts: Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. In all these environments, agent tracking | monitoring other agents' observable actions and inferring their high-level goals, plans and behaviors | is a central capability required for intelligent interaction <ref> [1, 26, 35, 37] </ref>. While this capability is obviously essential in non-collaborative settings, it is also important in collaborative settings, where communication may be restricted due to cost, risk, lack of a common protocol etc.[13]. <p> Indeed, it is only an accurate interpretation of the joint pincer that enables D to effectively counteract it. Recognizing this jointness also enables D to track a subteam's (L and M) behaviors when 3 it is not visible. 1 Previous approaches <ref> [1, 26, 37, 12, 35] </ref>, that focus on tracking individual agents, fail to track such joint team activities. In particular, these approaches are based on model tracing, which involves executing an agent's runnable model, and matching the model's predictions with actual observations.
Reference: [27] <author> A. S. Rao, A. Lucas, D. Morley, M. Selvestrel, and G. Murray. </author> <title> Agent-oriented architecture for air-combat simulation. </title> <type> Technical Report Technical Note 42, </type> <institution> The Australian Artificial Intelligence Institute, </institution> <year> 1993. </year>
Reference-contexts: In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). Similarly, in training, a recent thrust on dynamic, real-time simulations | e.g., realistic traffic [7], air-traffic control [25] and combat <ref> [27, 34] </ref> simulations | involves such collaborative and non-collaborative interaction among tens or hundreds of agents (and humans). Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. <p> self tracking is that when it fails, an agent may modify its behaviors, rather than its self model | an issue for future work. 3.1 The Joint Intentions Framework While team tracking has received little attention in the literature, researchers are investigating teamwork both theoretically [10, 6, 16], and practically <ref> [14, 27] </ref>. Perhaps the most well understood among the theories is the joint intentions framework [6]. Very briefly, this theory states that a team jointly intends an activity if it is jointly committed to completing that activity (commitments have a common escape clause q). <p> It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer [17], social agents [23], virtual theatre [3, 11], virtual battlefields <ref> [34, 27] </ref>. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [28] <author> A. S. Rao and G. Murray. </author> <title> Multi-agent mental-state recognition and its application to air-combat modelling. </title> <booktitle> In Proceedings of the Workshop on Distributed Artificial Intelligence (DAI-94). </booktitle> <address> Menlo Park, Calif.: </address> <publisher> AAAI press, Technical report WS-94-02, </publisher> <year> 1994. </year>
Reference-contexts: Thus, Tambe's approach, for instance, fails to interpret that the two subteams in Figure 1-b are engaged in a joint pincer. An alternative approach <ref> [28] </ref>, although focused on individuals, attempts to indirectly track a team | it tracks one individual within the team, whose model includes a teammate's coordinated actions.
Reference: [29] <author> P. S. Rosenbloom, J. E. Laird, A. Newell, , and R. McCarl. </author> <title> A preliminary analysis of the soar architecture as a basis for general intelligence. </title> <journal> Artificial Intelligence, </journal> <volume> 47(1-3):289-325, </volume> <year> 1991. </year>
Reference-contexts: After a presentation of experimental results (Section 6), Section 7 concludes. The description below assumes as a concrete basis, pilot agents based on the Soar architecture [34]. We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state <ref> [24, 29] </ref>. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking [35] builds on model tracing [1, 37]. Here, a tracker executes a model of the trackee (the agent being tracked), matching the model's predictions with observations of the trackee's actions. <p> Together, state D and the operator D hierarchy constitute D's model of its present dynamic self, referred to as model D . Model D and Model DJ need not be identical. Model D supports D's dynamic behaviors, given Soar's architectural support for flexible operator selection and reactive termination <ref> [29] </ref>. D reuses this architecture in tracking. Thus, D uses a hierarchy such as the one in Figure 2-b to track J's actions. Here, the hierarchy represents D's model of J's current operators in the situation in Figure 1-d. These operators are denoted with the subscript DJ.
Reference: [30] <author> J. R. </author> <title> Searle. </title> <booktitle> Collective intention and action, </booktitle> <pages> pages 401-415. </pages> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1990. </year>
Reference-contexts: However, the notion of a team mind is controversial, given that the external world consists only of individual minds <ref> [30] </ref>. Team models are neutral in this controversy, and can also be reconciled with the view of individual minds. In particular, a dynamic team model may be considered a result of combining (partial) team models attributed to team members.
Reference: [31] <author> R. L. Shaw. </author> <title> Fighter combat: tactics and maneuvers. </title> <institution> Naval Institute Press, Annapolis, Maryland, </institution> <year> 1988. </year>
Reference-contexts: In Figure 1-a, D detects the four opponents turning towards its aircraft, and infers that they are approaching it with hostile intent. In Figure 1-b, the four opponents split up into two subteams, and begin a pincer maneuver <ref> [31] </ref>. That is, one subteam (J and K) starts turning left, while the other subteam (L and M) starts turning right. Their goal is to trap D in the center, and attack it from two sides. <p> In the helicopter domain, the team is known in advance. Focusing only on role-assignment, Table 1 presents the reduction in tracking effort due to team model and the CSP formalism. Column 1 names different tactics <ref> [31] </ref>. Column 2 indicates the number of agents assumed involved in the tactic. Column 3 estimates the (worst-case) total number of operators searched assuming roles assigned to individual agents rather than subteams. Column 4 shows the factor reduction in the operators searched when 3 Time is measured in simulation cycles.
Reference: [32] <author> M. Stefik. </author> <title> Introduction to Knowledge Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> Palo Alto, CA, </address> <year> 1995. </year> <month> 18 </month>
Reference-contexts: The rationale behind the above heuristic is two-fold. Pragmatically, in real-time environments, it helps to reduce computational (repair) expense. Theoretically, it leans towards parsimonious explanations (the heuristic was inspired by minimality of fault models <ref> [32] </ref>).
Reference: [33] <author> M. Tambe. </author> <title> Recursive agent and agent-group tracking in a real-time dynamic environ-ment. </title> <booktitle> In Proceedings of the International Conference on Multi-agent systems (ICMAS), </booktitle> <year> 1995. </year>
Reference-contexts: This expressive inadequacy persists even if all agents are tracked as simultaneously executing individual pincers, e.g., is this one pincer with all four agents involved (Figure 1-b) or two separate pincers with two agents each? Some recent work has attempted to go beyond individuals and track multiple agents. Tambe <ref> [33] </ref> tracks a group of agents engaged in identical activity. Yet, a group (e.g., cars driving in ordinary traffic) differs from a team (e.g., driving in a convoy) precisely due to the lack of any jointness of purpose. <p> Unfortunately, unable to exploit such jointness, the above agent-oriented approaches engage in unconstrained search. A further problem hindering their real-time tracking is the inefficiency of tracking individuals, particularly given a large team (although group tracking <ref> [33] </ref> alleviates this aspect of inefficiency). Finally, the above approaches also fail to address the dynamism in a team's jointness, particularly, dynamic formation and dissolution of subteams, and their sometimes unsy-chronized activities. <p> However, given the cost of computing such regions in real-time, the approach preferred in this work is to equate the divergent part to the state of a single paradigmatic agent within the team, e.g., the team's orientation is the paradigmatic agent's orientation (as in <ref> [33] </ref>). Such a paradigmatic agent is selected by a separate module (which currently selects one agent in a prominent location).
Reference: [34] <author> M. Tambe, W. L. Johnson, R. Jones, F. Koss, J. E. Laird, P. S. Rosenbloom, and K. Schwamb. </author> <title> Intelligent agents for interactive simulation environments. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <month> Spring </month> <year> 1995. </year>
Reference-contexts: In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). Similarly, in training, a recent thrust on dynamic, real-time simulations | e.g., realistic traffic [7], air-traffic control [25] and combat <ref> [27, 34] </ref> simulations | involves such collaborative and non-collaborative interaction among tens or hundreds of agents (and humans). Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. <p> Section 3 describes tracking with team models. Section 4 focuses on enhancing tracking efficiency. Section 5 discusses mental simulations of unseen subteams. After a presentation of experimental results (Section 6), Section 7 concludes. The description below assumes as a concrete basis, pilot agents based on the Soar architecture <ref> [34] </ref>. We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state [24, 29]. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking [35] builds on model tracing [1, 37]. <p> Currently, visualizations are attempted at fixed time intervals; a more sophisticated simulation is also left for future work. 6 Implementation Results and Evaluation To evaluate RESC team , we have implemented experimental variants of Soar-based pilot agents for both simulated fighters <ref> [34] </ref> and helicopters [36]. The original pilot agents have participated in various large-scale exercises, including one involving expert human pilots [34]. Our experimental pilots (called pilot tracker ) incorporate RESC team (contain over 1000 rules). <p> simulation is also left for future work. 6 Implementation Results and Evaluation To evaluate RESC team , we have implemented experimental variants of Soar-based pilot agents for both simulated fighters <ref> [34] </ref> and helicopters [36]. The original pilot agents have participated in various large-scale exercises, including one involving expert human pilots [34]. Our experimental pilots (called pilot tracker ) incorporate RESC team (contain over 1000 rules). These agents can track teams: opponents' teams in the case of fighter pilots and their own team in case of helicopter pilots. <p> It is only natural that this teamwork is (and will be) reflected in virtual and robotic agent worlds, e.g., robotic collaboration by observation [19], RoboCup robotic (and virtual) soccer [17], social agents [23], virtual theatre [3, 11], virtual battlefields <ref> [34, 27] </ref>. If agents are to successfully inhabit such collaborative and competitive worlds, they must be proficient in understanding and tracking team activity.
Reference: [35] <author> M. Tambe and P. S. Rosenbloom. RESC: </author> <title> An approach for real-time, dynamic agent tracking. </title> <booktitle> In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), </booktitle> <year> 1995. </year>
Reference-contexts: Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. In all these environments, agent tracking | monitoring other agents' observable actions and inferring their high-level goals, plans and behaviors | is a central capability required for intelligent interaction <ref> [1, 26, 35, 37] </ref>. While this capability is obviously essential in non-collaborative settings, it is also important in collaborative settings, where communication may be restricted due to cost, risk, lack of a common protocol etc.[13]. <p> Indeed, it is only an accurate interpretation of the joint pincer that enables D to effectively counteract it. Recognizing this jointness also enables D to track a subteam's (L and M) behaviors when 3 it is not visible. 1 Previous approaches <ref> [1, 26, 37, 12, 35] </ref>, that focus on tracking individual agents, fail to track such joint team activities. In particular, these approaches are based on model tracing, which involves executing an agent's runnable model, and matching the model's predictions with actual observations. <p> This abstraction in team models also provides robustness, e.g., changes in number of team members may not disturb tracking. To track with such team models in real-time dynamic environments, we build on RESC <ref> [35] </ref>, an approach for tracking individual agents in such environments. The new approach, RESC team , is aimed at real-time, dynamic team tracking. RESC team incorporates several additions geared towards efficiency; key ideas introduced are not specific to RESC team . <p> We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state [24, 29]. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking <ref> [35] </ref> builds on model tracing [1, 37]. Here, a tracker executes a model of the trackee (the agent being tracked), matching the model's predictions with observations of the trackee's actions. One key innovation in RESC is the use of commitments.
Reference: [36] <author> M. Tambe, K. Schwamb, and P. S. Rosenbloom. </author> <title> Building intelligent pilots for simulated rotary wing aircraft. </title> <booktitle> In Proceedings of the Fifth Conference on Computer Generated Forces and Behavioral Representation, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: Team models and RESC team are applicable for tracking even if an agent is a collaborative participant in the team. Consider the scenario in Figure 3-c, which shows a team of simulated helicopters executing its mission <ref> [36] </ref>, again in the real-world combat simulation environment [5]. Helicopter radio communications are often restricted to avoid detection by enemy. <p> Currently, visualizations are attempted at fixed time intervals; a more sophisticated simulation is also left for future work. 6 Implementation Results and Evaluation To evaluate RESC team , we have implemented experimental variants of Soar-based pilot agents for both simulated fighters [34] and helicopters <ref> [36] </ref>. The original pilot agents have participated in various large-scale exercises, including one involving expert human pilots [34]. Our experimental pilots (called pilot tracker ) incorporate RESC team (contain over 1000 rules).
Reference: [37] <author> B. Ward. ET-Soar: </author> <title> Toward an ITS for Theory-Based Representations. </title> <type> PhD thesis, </type> <institution> School of Computer Science, Carnegie Mellon Univ., </institution> <year> 1991. </year> <month> 19 </month>
Reference-contexts: 1 Introduction In multi-agent domains, intelligent agents interact with each other, either collaboratively or non-collaboratively, to achieve their goals. Many of these multi-agent domains require the interaction to be dynamic and real-time. For instance, in education, intelligent tutoring systems interact with students to provide real-time feedback <ref> [12, 37] </ref>. In entertainment, projects such as interactive fiction [3], virtual immersive environments [21], and virtual theatre [11] all involve real-time and dynamic multi-agent interaction (collaborative and competitive). <p> Such interaction is also seen in robotic domains, e.g., collaboration by observation [19], RoboCup robotic soccer tournaments (beginning IJCAI-97)[17]. In all these environments, agent tracking | monitoring other agents' observable actions and inferring their high-level goals, plans and behaviors | is a central capability required for intelligent interaction <ref> [1, 26, 35, 37] </ref>. While this capability is obviously essential in non-collaborative settings, it is also important in collaborative settings, where communication may be restricted due to cost, risk, lack of a common protocol etc.[13]. <p> Indeed, it is only an accurate interpretation of the joint pincer that enables D to effectively counteract it. Recognizing this jointness also enables D to track a subteam's (L and M) behaviors when 3 it is not visible. 1 Previous approaches <ref> [1, 26, 37, 12, 35] </ref>, that focus on tracking individual agents, fail to track such joint team activities. In particular, these approaches are based on model tracing, which involves executing an agent's runnable model, and matching the model's predictions with actual observations. <p> We assume some familiarity with Soar's problem solving, specifically, applying operators to states to reach a desired state [24, 29]. 2 RESC: Tracking Individual Agents The RESC (REal-time Situated Commitments) approach to agent tracking [35] builds on model tracing <ref> [1, 37] </ref>. Here, a tracker executes a model of the trackee (the agent being tracked), matching the model's predictions with observations of the trackee's actions. One key innovation in RESC is the use of commitments.
References-found: 37

