URL: http://www.cs.uri.edu/rtsorac/pubs/tr97-256.ps
Refering-URL: http://www.cs.umd.edu/~rich/courses/cmsc818G-s98/schedule.html
Root-URL: 
Email: russ@nosc.mil lastname@cs.uri.edu  
Title: Real-Time CORBA  
Author: Victor Fay Wolfe, Lisa Cingiser DiPippo, Russell Johnston Roman Ginis, Michael Squadrito, NCCOSC Steven Wohlever and Igor Zykh 
Address: 53140 Systems Street  Rhode Island San Diego, CA 92152 Kingston, RI 02881  
Affiliation: RDT&E DIV (NRaD) Department of Computer Science  University of  
Abstract: This paper describes the requirements for real-time extensions to the CORBA standard, which are being developed by the Object Management Group's Special Interest Group on Real-Time CORBA. The paper also surveys efforts that are developing Real-Time CORBA systems. It provides a more detailed description of the dynamic Real-Time CORBA system being developed at the US Navy's NRaD facilities and at the University of Rhode Island. 
Abstract-found: 1
Intro-found: 1
Reference: [EB96] <author> E. Bensley, P. Krupp, et. al. </author> <title> Object-oriented approach for designing evolvable real-time command and control systems. </title> <booktitle> In Proceedings of the Workshop on Object-Oriented Real-Time Dependable Systems, </booktitle> <month> Feb. </month> <year> 1996. </year>
Reference-contexts: MITRE's RT CORBA. One of the first projects to incorporate expression and enforcement of end-to-end timing constraints into a CORBA system was designed by Peter Krupp and Bhavani Thuraisingham's group at MITRE in Bedford, Ma. <ref> [TKSW94, EB96] </ref>. This work identified requirements for the use of real-time CORBA in command and control systems and prototyped the approach by porting the ILU ORB from Xerox to the Lynx real-time operating system. They then provided a distributed scheduling service supporting rate-monotonic and deadline-monotonic techniques. <p> They then provided a distributed scheduling service supporting rate-monotonic and deadline-monotonic techniques. The resulting infrastructure combines a POSIX-compliant real-time operating system, a real-time ORB, and an ODMG-compliant real-time ODBMS <ref> [EB96] </ref>. MITRE has successfully transferred this technology to the US Airforce AWACS program, for incorporation into improvements scheduled for delivery in 1998 [RTSIG97]. One application of this approach is in information survivability (e.g., when a user may attempt to bring down a system by overusing its resources) [KTM97].
Reference: [GWP96] <author> R. Ginis, V. Wolfe, and JJ Prichard. </author> <title> The Design of an Open System with Distributed Real-Time Requirements. </title> <booktitle> In Proceedings of the Second IEEE Real-Time Applications Symposium; June 1996. </booktitle>
Reference-contexts: CORBA on the New Attack Submarine. The Naval UnderSea Warfare Center (NUWC) and Lock-heed Martin are investigating RT CORBA techniques for the US Navy's New Attack Submarine's (NSSN) C3I system <ref> [GWP96] </ref>. The NSSN C3I system specifications mandate real-time requirements and a CORBA system to interconnect subsystems such as Sonar, Radar, Navigation, and Combat Control. One part of the NSSN C3I project at NUWC has investigated the impact of RT CORBA over an ATM network.
Reference: [HGSP96] <author> T. Harrison, A. Gokhale, D. Schmidt, and G. Parulkar. </author> <title> Operating system support for a high-performance, real-time CORBA. </title> <booktitle> In International Workshop on Object-Orientation in Operating Systems: IWOOOS 1996 Workshop. </booktitle> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Furthermore, real-time tasks should be given precedence at the network level to prevent them from being blocked by low priority applications. The I/O subsystem optimizes conventional OS I/O subsystems to execute at Gigabit rates over high-speed ATM networks <ref> [HGSP96] </ref>. TAO's Real-time Inter-ORB Protocol (RIOP) is a mapping of the general inter-ORB protocol that allows applications to transfer their QoS parameters from clients to server objects.
Reference: [KTM97] <author> P.Krupp, B. Thuraisingham, and J. Maurer. </author> <title> Survivability Issues for Evolvable Real-Time Command and Control Systems. </title> <booktitle> DARPA Information Survivability Workshop. </booktitle> <year> 1997. </year>
Reference-contexts: MITRE has successfully transferred this technology to the US Airforce AWACS program, for incorporation into improvements scheduled for delivery in 1998 [RTSIG97]. One application of this approach is in information survivability (e.g., when a user may attempt to bring down a system by overusing its resources) <ref> [KTM97] </ref>. CORBA on the New Attack Submarine. The Naval UnderSea Warfare Center (NUWC) and Lock-heed Martin are investigating RT CORBA techniques for the US Navy's New Attack Submarine's (NSSN) C3I system [GWP96].
Reference: [Mil91] <author> D.L. Mills. </author> <title> Internet time synchronization: The network time protocol. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 39(10), </volume> <month> Oct </month> <year> 1991. </year>
Reference-contexts: Our RT CORBA system implements this by synchronizing the clocks (our prototype uses a variant of the NTP protocol <ref> [Mil91] </ref>) and by providing a Global Time Service, which clients and servers can call to get the current time.
Reference: [Moy] <author> J. Moy. </author> <title> Request for comments no. </title> <type> 1584; pro teon, </type> <institution> inc. Network Working Group. </institution>
Reference-contexts: Delivery of the (global) time of the event occurrence is important to allow events to be used to establish timing constraints relative to them. Our implementation of a RT Event Service is based on IP multicasting <ref> [Moy] </ref> and takes advantage of the multithreaded environment of Solaris 2.5. Each node has a CORBA Event Channel interface [OMG96] and is configured to "listen" to a pre-defined IP multicast group.
Reference: [OMG96] <author> OMG. CORBAservices: </author> <title> Common Object Services Specification. OMG, </title> <publisher> Inc., </publisher> <year> 1996. </year>
Reference-contexts: This framework includes an object interface specification and the enabling of remote method calls from a client to a server object. Issues such as naming, events, relationships, transactions, and concurrency control are addressed in Version 2.0 <ref> [OMG96] </ref>. Services such as time synchronization and security are expected to be addressed in later revisions. To date, the OMG has been remarkably successful in agreeing upon increments to the standard and vendors have quickly made products available that meet the evolving standard. <p> Our implementation of a RT Event Service is based on IP multicasting [Moy] and takes advantage of the multithreaded environment of Solaris 2.5. Each node has a CORBA Event Channel interface <ref> [OMG96] </ref> and is configured to "listen" to a pre-defined IP multicast group. Each real-time event has a unique event ID number, which is mapped to the IP address for the multicast group. Suppliers transport real-time event data to each RT Event Channel by multicasting to its IP address.
Reference: [Pal97] <author> R.Pallack. </author> <title> Real-Time Messages Commu nication For C3I Systems. </title> <type> Master's Thesis. </type> <institution> The University of Rhode Island Department of Computer Science. </institution> <month> May, </month> <year> 1997. </year> <note> Available at http://www.cs.uri.edu/rtsorac. </note>
Reference-contexts: One part of the NSSN C3I project at NUWC has investigated the impact of RT CORBA over an ATM network. In addition to identifying sources of latencies, this project also proposed a CORBA Latency Server to supply latency estimates that may be required in RT CORBA operation <ref> [Pal97] </ref>. Washington University's RT CORBA. Researchers at Washington University in St. Louis are developing a high-performance endsystem architecture for real-time CORBA called TAO (The ACE ORB) [RTSIG97]. Their objective is to identify the key architectural patterns and performance optimizations necessary to build high-performance, real-time ORBs.
Reference: [RTSIG96] <institution> The Realtime Platform Special Inter est Group of the OMG. </institution> <note> CORBA/RT white paper. ftp site: ftp.osaf.org/whitepaper/Tempa4.doc. </note> <month> Jan., </month> <year> 1997. </year>
Reference-contexts: In this paper we describe Real-Time CORBA (RT CORBA). Section 2 is a brief description of the existing CORBA standard. Section 3 summarizes some of the requirements for RT CORBA that are outlined in the current draft of OMG's RT SIG whitepaper <ref> [RTSIG96] </ref>. Section 4 surveys current work in RT CORBA development and prototyping. Section 5 provides a more detailed look at the RT CORBA research and development at the Navy's NRaD facility and at the University of Rhode Island. <p> That is, there are two main categories of RT CORBA requirements: requirements on the operating environment (operating systems and networks); and requirements on the CORBA run-time system. In this section, we summarize some of these requirements. The full set of requirements can be found in the RT SIG whitepaper <ref> [RTSIG96] </ref>. 3.1 Operating Environment Some requirements of the RT CORBA operating environment are: * Synchronized Clocks. All clocks on nodes in an ORB should be synchronized to within a bounded skew of each other. * Bounded Message Delay. <p> The OMG's RT CORBA SIG is finalizing its whitepaper describing the philosophy and requirements for RT CORBA <ref> [RTSIG96] </ref>. The OMG had a Request For Information in Feburary 1997 in which vendors and end-users were encouraged to describe their product/need for RT CORBA. These results are available at [RTSIG97]. The RT SIG plans to issue Requests For Proposals (RFPs) within the next year.
Reference: [RTSIG97] <institution> The Realtime Platform Special Inter est Group of the OMG. CORBA/RT white paper. </institution> <month> Feb., </month> <year> 1997. </year> <note> WWW site: www.omg.org/library/schedule/Realtime_RFI.htm </note>
Reference-contexts: This section describes some of the original approaches to RT CORBA and then surveys current approaches as reported in the OMG's Request For Information (RFI) on RT CORBA <ref> [RTSIG97] </ref>. The next section then provides detail on one approach: the dynamically scheduled RT CORBA implementation from NRaD/URI. CORBA On RT Operating Systems. One original approach to RT CORBA was to install a non-real-time ORB on real-time operating systems. <p> The resulting infrastructure combines a POSIX-compliant real-time operating system, a real-time ORB, and an ODMG-compliant real-time ODBMS [EB96]. MITRE has successfully transferred this technology to the US Airforce AWACS program, for incorporation into improvements scheduled for delivery in 1998 <ref> [RTSIG97] </ref>. One application of this approach is in information survivability (e.g., when a user may attempt to bring down a system by overusing its resources) [KTM97]. CORBA on the New Attack Submarine. <p> Washington University's RT CORBA. Researchers at Washington University in St. Louis are developing a high-performance endsystem architecture for real-time CORBA called TAO (The ACE ORB) <ref> [RTSIG97] </ref>. Their objective is to identify the key architectural patterns and performance optimizations necessary to build high-performance, real-time ORBs. The focus of the scheduling work at Washington University is on hard real-time systems, requiring a priori guarantees of QoS requirements. <p> In TAO, the presentation layer transforms typed operation parameters from high-level to low-level representations (and vice-versa) via client-side stubs and server-side skeletons. These stubs and skeletons are generated by a highly optimizing IDL compiler. The TAO system also provides a real-time capability within the CORBA Event Service <ref> [RTSIG97] </ref>. These extensions introduce several components augmenting the Event Service to support event scheduling and minimize dispatch latency, based on a priori knowledge of participating consumer (s)/supplier (s) and periodic rate-based events. <p> The OMG's RT CORBA SIG is finalizing its whitepaper describing the philosophy and requirements for RT CORBA [RTSIG96]. The OMG had a Request For Information in Feburary 1997 in which vendors and end-users were encouraged to describe their product/need for RT CORBA. These results are available at <ref> [RTSIG97] </ref>. The RT SIG plans to issue Requests For Proposals (RFPs) within the next year. These RFPs will ask vendors to propose actual additions/modifications to the standards to support real-time.
Reference: [Raj91] <author> Ragunathan Rajkumar. </author> <title> Synchronization in Real-Time Systems: A Priority Inheritance Approach. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: Our prototype RT CORBA system includes a RT Concurrency Control Service that implements priority inheritance <ref> [Raj91] </ref>. When a TDMI requests a lock on a resource from the RT Concur-rency Control Service, the TDMI transient priority is compared to those of all TDMI's holding conflicting locks on that resource.
Reference: [TKSW94] <author> B. Thuraisingham, P. Krupp, A. Schafer, and V. Wolfe. </author> <title> On Real-Time Extensions To The Common Object Request Broker Architecture. </title> <booktitle> In Proceedings of the Object Oriented Programming, Systems, Languages, and Applications (OOPSLA) Workshop on Experiences with CORBA. </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: MITRE's RT CORBA. One of the first projects to incorporate expression and enforcement of end-to-end timing constraints into a CORBA system was designed by Peter Krupp and Bhavani Thuraisingham's group at MITRE in Bedford, Ma. <ref> [TKSW94, EB96] </ref>. This work identified requirements for the use of real-time CORBA in command and control systems and prototyped the approach by porting the ILU ORB from Xerox to the Lynx real-time operating system. They then provided a distributed scheduling service supporting rate-monotonic and deadline-monotonic techniques. <p> It is designed to support expression and enforcement of dynamic end-to-end timing constraints within a CORBA system <ref> [TKSW94, WBTK95] </ref>. It is implemented on Sparc workstations running Solaris 2.5 (with POSIX threads) using Iona Technology's Or-bix 2.0.1MT (multi-threaded) as the CORBA baseline. All of our prototype software assumes an operating environment that is compliant with the POSIX real-time operating system standard.
Reference: [WBTK95] <author> V. Wolfe, J. Black, B.Thuraisingham, and P. Krupp. </author> <title> Towards Timed Distributed Method Invocations. </title> <booktitle> In The Proceedings of the Fourth International High Performance Computing Conference. </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: It is designed to support expression and enforcement of dynamic end-to-end timing constraints within a CORBA system <ref> [TKSW94, WBTK95] </ref>. It is implemented on Sparc workstations running Solaris 2.5 (with POSIX threads) using Iona Technology's Or-bix 2.0.1MT (multi-threaded) as the CORBA baseline. All of our prototype software assumes an operating environment that is compliant with the POSIX real-time operating system standard. <p> Our RT CORBA system also includes several new IDL types for expressing real-time parameters, along with library code that is added to stubs of clients and skeletons of servers. Together these components support the expression and enforcement of timed distributed method invocations (TDMIs) <ref> [WBTK95] </ref> where real-time constraints are expressed on clients' CORBA method calls and enforced by the CORBA system. 5.1 Timed Distributed Method Invoca tions A TDMI uses a new CORBA RT Environment structure and a new C++ RT M anager class to convey real-time information.
References-found: 13

