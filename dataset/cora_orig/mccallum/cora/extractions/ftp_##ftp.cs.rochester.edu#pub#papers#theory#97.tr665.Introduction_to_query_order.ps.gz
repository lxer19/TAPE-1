URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/97.tr665.Introduction_to_query_order.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: An Introduction to Query Order  
Author: Edith Hemaspaandra Lane A. Hemaspaandra Harald Hempel 
Date: August 29, 1997  
Affiliation: Univ. of Rochester, Dept. of Computer Sci.  
Pubnum: Technical Report TR-665  
Abstract: Hemaspaandra, Hempel, and Wechsung [HHW95] raised the following questions: If one is allowed one question to each of two different information sources, does the order in which one asks the questions affect the class of problems that one can solve with the given access? If so, which order yields the greater computational power? The answers to these questions have been learned|inasfar as they can be learned without resolving whether or not the polynomial hierarchy collapses|for both the polynomial hierarchy and the boolean hierarchy. In the polynomial hierarchy, query order never matters. In the boolean hierarchy, query order sometimes does not matter and, unless the polynomial hierarchy collapses, sometimes does matter. Furthermore, the study of query order has yielded dividends in seemingly unrelated areas, such as bottleneck computations and downward translation of equality. In this article, we present some of the central results on query order. The article is written in such a way as to encourage the reader to try his or her own hand at proving some of these results. We also give literature pointers to the quickly growing set of related results and applications. 
Abstract-found: 1
Intro-found: 1
Reference: [ABT96] <author> M. Agrawal, R. Beigel, and T. Thierauf. </author> <title> Modulo information from nonadaptive queries to NP. </title> <type> Technical Report 96-001, </type> <institution> Electronic Colloquium on Computational Complexity, </institution> <month> January </month> <year> 1996. </year> <title> Appears as "Pinpointing Computation with Modular Queries in the Boolean Hierarchy" in the 16th FSTTCS conference. </title>
Reference-contexts: They also show that the classes have characterizations in terms of the "input-specific advice" notation of Kobler and Thierauf [KT94]. Agrawal, Beigel, and Thierauf <ref> [ABT96] </ref>, independently of [HHW95], also study input-specific-advice classes. As noted by Hemaspaandra et al. in the journal version of [HHW95], this can be seen as equivalent to studying query order with a "positive final query" 11 restriction|i.e., the machines must "do" exactly what the response to their second query is.
Reference: [Amb86] <author> K. Ambos-Spies. </author> <title> A note on complete problems for complexity classes. </title> <journal> Information Processing Letters, </journal> <volume> 23 </volume> <pages> 227-230, </pages> <year> 1986. </year>
Reference-contexts: Finally, a long line of research has asked whether p m -completeness and p completeness stand or fall together for classes that potentially lack complete sets. Gurevich [Gur83] and Ambos-Spies <ref> [Amb86] </ref> have shown that, for all classes C closed downwards under Turing reductions, it holds robustly that: C has p m -complete sets if and only if C has p T -complete sets.
Reference: [BC97] <author> R. Beigel and R. Chang. </author> <title> Commutative queries. </title> <booktitle> In Proceedings of the 5th Israeli Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 159-165. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1997. </year>
Reference-contexts: In fact, the initial paper of Hemaspaandra, Hempel, and Wechsung [HHW95] already studied the case of general tree-like access to levels of the boolean hierarchy, and in doing so studied the case of multiple rounds of single queries; Beigel and Chang <ref> [BC97] </ref> study multiple rounds of multiple queries to the polynomial hierarchy, and show that here the order does not matter, and they also study the case of function classes; Wagner [Wag97] studies parallel rounds of one or more queries to the polynomial hierarchy and other classes and also tightly relates such
Reference: [BCO93] <author> R. Beigel, R. Chang, and M. Ogiwara. </author> <title> A relationship between difference hierarchies and relativized polynomial hierarchies. </title> <journal> Mathematical Systems Theory, </journal> <volume> 26 </volume> <pages> 293-310, </pages> <year> 1993. </year>
Reference: [Ben80] <author> G. Benford. Timescape. Simon and Schuster, </author> <year> 1980. </year>
Reference-contexts: now, won't that change the future and cause the book never to be written, in which case how can I be meeting you and receiving this book in the first place? Stranger: (Suddenly starts fading away, but before he disappears you hear) I commend to you the Nebula-Award-winning book Timescape <ref> [Ben80] </ref>, which also has quite a bit to say about curiosity-driven research, scientific ethics, and...
Reference: [BF96] <author> H. Buhrman and L. Fortnow. </author> <title> Two queries. </title> <type> Technical Report 96-20, </type> <institution> University of Chicago, Department of Computer Science, Chicago, IL, </institution> <month> September </month> <year> 1996. </year>
Reference: [Boo74] <author> R. </author> <title> Book. Tally languages and complexity classes. </title> <journal> Information and Control, </journal> <volume> 26 </volume> <pages> 186-193, </pages> <year> 1974. </year>
Reference-contexts: In a nutshell, in this setting smaller classes collapse if and only if larger classes collapse| a type of behavior people have been stalking ever since influential papers of Book <ref> [Boo74] </ref> 10 and Hartmanis, Immerman, and Sewelson [Har83,HIS85] raised the issue of when classes stand and fall together. Multiple Queries and Bottleneck Computations In this survey, we have focused on the most natural case: one query to each of the two information sources.
Reference: [Bor95] <author> B. Borchert. </author> <title> The complexity of mind changes. </title> <type> Research Report 3, </type> <institution> Universitat Heidelberg, Mathematisches Institut, </institution> <address> Heidelberg, Germany, </address> <month> December </month> <year> 1995. </year>
Reference: [CF91] <author> J. Cai and M. Furst. </author> <title> PSPACE survives constant-width bottlenecks. </title> <journal> International Journal of Foundations of Computer Science, </journal> <volume> 2(1) </volume> <pages> 67-76, </pages> <year> 1991. </year> <month> 12 </month>
Reference-contexts: model used to study whether a computational problem can be decomposed into a large number of simple, sequential, tasks, each of which passes on only a very limited amount of information to the next task, and all of which differ only in that input and in a "task number" input <ref> [CF91] </ref>. A surprising recent paper of Hertrampf [Her97] uses ordered access involving multiple queries, combined with quantifier-based and modulo-based computation, to completely characterize the languages accepted by certain bottleneck machine classes|classes that had long eluded crisp characterization.
Reference: [CGH + 88] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wagner, and G. Wechsung. </author> <title> The boolean hierarchy I: Structural properties. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1232-1252, </pages> <year> 1988. </year>
Reference-contexts: Definition 3.1 1. Let C D = fL 1 L 2 j L 1 2 C ^ L 2 2 Dg. 2. <ref> [CGH + 88] </ref> (b) For each k &gt; 0, BH k = NP BH k1 . (c) BH, the boolean hierarchy, is defined as S BH k . <p> Let A 1 ; A 2 2 NP be such that A = A 1 A 2 . It is well-known that we may choose A 1 and A 2 to be such that A 1 A 2 <ref> [CGH + 88] </ref>.
Reference: [CGH + 89] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wagner, and G. Wechsung. </author> <title> The boolean hierarchy II: </title> <journal> Applications. SIAM Journal on Computing, </journal> <volume> 18(1) </volume> <pages> 95-111, </pages> <year> 1989. </year>
Reference: [CK96] <author> R. Chang and J. Kadin. </author> <title> The boolean hierarchy and the polynomial hierarchy: A closer connection. </title> <journal> SIAM Journal on Computing, </journal> <volume> 25(2) </volume> <pages> 340-354, </pages> <year> 1996. </year>
Reference: [CM87] <author> J. Cai and G. Meyer. </author> <title> Graph minimal uncolorability is D P -complete. </title> <journal> SIAM Journal on Computing, </journal> <volume> 16(2) </volume> <pages> 259-277, </pages> <year> 1987. </year>
Reference: [GJ79] <author> M. Garey and D. Johnson. </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference: [Gur83] <author> Y. Gurevich. </author> <title> Algebras of feasible functions. </title> <booktitle> In Proceedings of the 24th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 210-214. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1983. </year>
Reference-contexts: A detailed and careful discussion of the relationship between the two papers can be found in the journal version of [HHW95]. Finally, a long line of research has asked whether p m -completeness and p completeness stand or fall together for classes that potentially lack complete sets. Gurevich <ref> [Gur83] </ref> and Ambos-Spies [Amb86] have shown that, for all classes C closed downwards under Turing reductions, it holds robustly that: C has p m -complete sets if and only if C has p T -complete sets.
Reference: [Har83] <author> J. Hartmanis. </author> <title> On sparse sets in NPP. </title> <journal> Information Processing Letters, </journal> <volume> 16 </volume> <pages> 55-60, </pages> <year> 1983. </year>
Reference: [Her97] <author> U. Hertrampf. </author> <title> Acceptance by transformation monoids (with an application to local self-reductions). </title> <booktitle> In Proceedings of the 12th Annual IEEE Conference on Computational Complexity, </booktitle> <pages> pages 213-224. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1997. </year>
Reference-contexts: A surprising recent paper of Hertrampf <ref> [Her97] </ref> uses ordered access involving multiple queries, combined with quantifier-based and modulo-based computation, to completely characterize the languages accepted by certain bottleneck machine classes|classes that had long eluded crisp characterization. Advice Classes, Self-Specifying Machines, and Completeness Types A number of other seemingly different notions are related to query order.
Reference: [HHH] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> A downward collapse within the polynomial hierarchy. </title> <journal> SIAM Journal on Computing. </journal> <note> To appear. </note>
Reference: [HHH96a] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> A downward translation in the polynomial hierarchy. </title> <type> Technical Report TR-630, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> July </month> <year> 1996. </year>
Reference: [HHH96b] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> Query order in the polynomial hierarchy. </title> <type> Technical Report TR-634, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> September </month> <year> 1996. </year> <note> Revised, </note> <month> August </month> <year> 1997. </year>
Reference-contexts: In fact, Hemaspaandra et al. <ref> [HHH96b] </ref> have shown that all standard complexity classes (in particular, all leaf-definable classes) automatically inherit all query-order containments that hold for P machines.
Reference: [HHH97a] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> An introduction to query order. </title> <journal> Bulletin of the EATCS, </journal> <volume> 63, </volume> <month> October </month> <year> 1997. </year>
Reference-contexts: Stranger: False! Your reasoning is tempting, but is not valid. In fact, that weak SAT query provably gives strictly more computational power, as you would know if you had read a certain BEATCS article <ref> [HHH97a] </ref> and had applied it in light of the Sipser-Yao book under my arm.
Reference: [HHH97b] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> Query order in the polynomial hierarchy. </title> <booktitle> In Proceedings of the 11th Conference on Fundamentals of Computation Theory. Springer Verlag Lecture Notes in Computer Science #1279, </booktitle> <month> September </month> <year> 1997. </year> <note> To appear. 13 </note>
Reference-contexts: What they found was that query order never matters in the polynomial hierarchy. This is stated formally below as Theorem 2.2. Definition 2.1 [Sto77] 1. 0 = P. 2. For each k &gt; 0, p p k1 . (For example, p p 3. PH = k0 p Theorem 2.2 <ref> [HHH97b] </ref> For each i; j 0, P i : p p i : In fact, in all but the "diagonal" cases of this theorem (where order elimination is impossible unless the polynomial hierarchy collapses), one can eliminate order entirely: Theorem 2.3 [HHH97b] For each i; j 0 with i 6= j, <p> PH = k0 p Theorem 2.2 <ref> [HHH97b] </ref> For each i; j 0, P i : p p i : In fact, in all but the "diagonal" cases of this theorem (where order elimination is impossible unless the polynomial hierarchy collapses), one can eliminate order entirely: Theorem 2.3 [HHH97b] For each i; j 0 with i 6= j, P i ; p 1;1-tt = P i : p p i ; where P ( p j ) 1;1-tt denotes the class of languages accepted by machines that, in parallel (i.e., simultaneously), ask at most one question to a p <p> This follows immediately from the more general fact that all "ordered access to the polynomial hierarchy" classes are either trivially equal or are truly different (unless the polynomial hierarchy collapses). Theorem 2.4 <ref> [HHH97b] </ref> Let i; j; `; m 0. If P p i : p ` : p m , then either fi; jg = f`; mg or the polynomial hierarchy collapses. The just-stated theorem merely concludes that the polynomial hierarchy collapses (unless fi; jg = f`; mg). <p> In fact, in almost all cases, the polynomial hierarchy collapses to an alarmingly low level|one that a priori seems lower than either of the classes mentioned in the theorem (this can be seen easily from [HHH,BF96,HHH97d,HHH97b], see especially <ref> [HHH97b, Section 3.2] </ref>). <p> We mention in passing that the full proof of Theorem 2.2 in <ref> [HHH97b] </ref> is more elegant than working through the sixteen different subcases and splicing them together dynamically; the present proof fragment is merely intended to convey some of the flavor of how one can prove things about query order. 3 Query Order in the Boolean Hierarchy 3.1 Results The boolean hierarchy [CGH
Reference: [HHH97c] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> R SN 1-tt (NP) distinguishes robust many-one and Turing completeness. </title> <booktitle> In Proceedings of the 3rd Italian Conference on Algorithms and Complexity, </booktitle> <pages> pages 49-60. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #1203, </note> <month> March </month> <year> 1997. </year>
Reference-contexts: also study the case of function classes; Wagner [Wag97] studies parallel rounds of one or more queries to the polynomial hierarchy and other classes and also tightly relates such classes to the refined hierarchy work of Selivanov [Sel94,Sel95] (see also the discussion in the final paragraph of Section 2 of <ref> [HHH97c] </ref>). <p> Nonetheless, by studying a strong nondeterministic closure of NP that, it turns out, exactly equals the query-order class P NP"coNP:NP , Hemaspaandra et al. have recently shown that on some reducibility closures of NP, p m -completeness and T -completeness do not robustly stand or fall together <ref> [HHH97c] </ref>.
Reference: [HHH97d] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> Translating equality downwards. </title> <type> Technical Report TR-657, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: In particular, we have the following, which like Theorem 4.1 was established in the literature via proving a more general theorem about query-order classes, and then deriving the stated result as a corollary to the more general theorem <ref> [HHH97d] </ref>. Theorem 4.2 Let k &gt; 1 and m 1.
Reference: [HHW95] <author> L. Hemaspaandra, H. Hempel, and G. Wechsung. </author> <title> Query order and self-specifying machines. </title> <type> Technical Report TR-596, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> October </month> <year> 1995. </year> <note> To appear as "Query Order" in SIAM Journal on Computing. </note>
Reference-contexts: That is, P C:D = C2C; D2D These notions and notations were introduced by Hemaspaandra, Hempel, and Wechsung <ref> [HHW95] </ref>, who studied them for the case in which C and D are levels of the boolean hierarchy (see Section 3); in brief, they proved that query order usually does matter in the boolean hierarchy. <p> NP, DP, and the other levels of the boolean hierarchy contain a large variety of complete problems (see, e.g., [GJ79,CM87,CGH + 88,Bor95]). Hemaspaandra, Hempel, and Wechsung <ref> [HHW95] </ref> raised the topic of query order by asking whether P BH i :BH j = P BH j :BH i . They resolved this question as follows. <p> They proved that equality (not so trivially) holds if i is even ^ j = i + 1, or if j is even ^ i = j + 1. They proved that for all other cases inequality holds unless the polynomial hierarchy collapses. Theorem 3.2 <ref> [HHW95] </ref> For each i and j, the relationship between P BH i :BH j and P BH j :BH i is as shown in Figure 3. <p> Briefly and informally put, when i is even and j is odd, a certain underlying graph modeling the computation of P BH i :BH j becomes non-bipartite, and by doing so allows one to guarantee a savings of one parallel query to NP (see <ref> [HHW95] </ref> for full details). 3.2 Proof by Example In this subsection we will give a partial proof for an instance of Lemma 3.3, namely, we will give a partial proof for P DP:NP R 3-tt (NP): In particular, we will show that X R p 3-tt (NP), where X is the <p> We warn the reader that the proof approach taken here is not suited to be elegantly generalized to eventually yield Lemma 3.3. For a complete and unified proof of P DP:NP R 3-tt (NP), we refer the reader to <ref> [HHW95] </ref>. However, the proof given below provides a good starting point for understanding how these proofs work in the context of the boolean hierarchy. Note that the proof picks one of the interesting cases of Lemma 3.3 ("i even and j odd"). <p> Multiple Queries and Bottleneck Computations In this survey, we have focused on the most natural case: one query to each of the two information sources. A number of papers building on those mentioned here have studied more elaborate settings. In fact, the initial paper of Hemaspaandra, Hempel, and Wechsung <ref> [HHW95] </ref> already studied the case of general tree-like access to levels of the boolean hierarchy, and in doing so studied the case of multiple rounds of single queries; Beigel and Chang [BC97] study multiple rounds of multiple queries to the polynomial hierarchy, and show that here the order does not matter, <p> They also show that the classes have characterizations in terms of the "input-specific advice" notation of Kobler and Thierauf [KT94]. Agrawal, Beigel, and Thierauf [ABT96], independently of <ref> [HHW95] </ref>, also study input-specific-advice classes. As noted by Hemaspaandra et al. in the journal version of [HHW95], this can be seen as equivalent to studying query order with a "positive final query" 11 restriction|i.e., the machines must "do" exactly what the response to their second query is. <p> They also show that the classes have characterizations in terms of the "input-specific advice" notation of Kobler and Thierauf [KT94]. Agrawal, Beigel, and Thierauf [ABT96], independently of <ref> [HHW95] </ref>, also study input-specific-advice classes. As noted by Hemaspaandra et al. in the journal version of [HHW95], this can be seen as equivalent to studying query order with a "positive final query" 11 restriction|i.e., the machines must "do" exactly what the response to their second query is. <p> A detailed and careful discussion of the relationship between the two papers can be found in the journal version of <ref> [HHW95] </ref>. Finally, a long line of research has asked whether p m -completeness and p completeness stand or fall together for classes that potentially lack complete sets.
Reference: [HHW97] <author> L. Hemaspaandra, H. Hempel, and G. Wechsung. </author> <title> Self-specifying machines. </title> <type> Technical Report TR-654, </type> <institution> University of Rochester, Department of Computer Science, Rochester, </institution> <address> NY, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: Advice Classes, Self-Specifying Machines, and Completeness Types A number of other seemingly different notions are related to query order. Hemaspaandra, Hempel, and Wechsung <ref> [HHW97] </ref> have studied self-specifying machines|nondeterministic machines that dynamically specify the path sets on which they will accept. They completely characterize the two most natural such classes in terms of query-order classes with a "positive final query" restriction.
Reference: [HIS85] <author> J. Hartmanis, N. Immerman, and V. Sewelson. </author> <title> Sparse sets in NPP: EXPTIME versus NEXPTIME. </title> <journal> Information and Control, </journal> 65(2/3):159-181, 1985. 
Reference: [Kad88] <author> J. Kadin. </author> <title> The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1263-1282, </pages> <year> 1988. </year> <note> Erratum appears in the same journal, 20(2):404. </note>
Reference-contexts: What follows? Until very recently, all one could conclude from this assumption was that the polynomial hierarchy collapses to a level slightly above one query to p k+1 (note the "+1" here) <ref> [Kad88, Wag87,Wag89,CK96,BCO93] </ref>. However, work growing directly out of the study of query-order classes|namely, out of the goal of showing that different ordered access to levels of the polynomial hierarchy yields different language classes (see Theorem 2.4)|led to a collapse a full level lower in the polynomial hierarchy.
Reference: [KT94] <author> J. Kobler and T. Thierauf. </author> <title> Complexity-restricted advice functions. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23(2) </volume> <pages> 261-275, </pages> <year> 1994. </year>
Reference-contexts: They also show that the classes have characterizations in terms of the "input-specific advice" notation of Kobler and Thierauf <ref> [KT94] </ref>. Agrawal, Beigel, and Thierauf [ABT96], independently of [HHW95], also study input-specific-advice classes.
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time reducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1(2) </volume> <pages> 103-124, </pages> <year> 1975. </year>
Reference-contexts: As is standard, let R p `-tt (NP) denote fL j (9A 2 NP)[L p `-tt A]g, where p standard reduction allowing ` parallel queries <ref> [LLS75] </ref>. Lemma 3.3 For each i; j 1, P BH i :BH j = R (i+2j1)-tt (NP) if i is even and j is odd R (i+2j)-tt (NP) otherwise. 7 This lemma is the source of the asymmetry between, for example, 2-versus-3 and 3--versus-4.
Reference: [PY84] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28(2) </volume> <pages> 244-259, </pages> <year> 1984. </year>
Reference-contexts: So BH 1 = NP, and BH 2 equals Papadimitriou and Yannakakis's <ref> [PY84] </ref> class DP, namely the class of all sets that can be written as the intersection of some NP set with some coNP set. NP, DP, and the other levels of the boolean hierarchy contain a large variety of complete problems (see, e.g., [GJ79,CM87,CGH + 88,Bor95]).
Reference: [Sel94] <author> V. Selivanov. </author> <title> Two refinements of the polynomial hierarchy. </title> <booktitle> In Proceedings of the 11th Annual Symposium on Theoretical Aspects of Computer Science, </booktitle> <pages> pages 439-448. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #775, </note> <month> February </month> <year> 1994. </year>
Reference: [Sel95] <author> V. Selivanov. </author> <title> Fine hierarchies and boolean terms. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 60(1) </volume> <pages> 289-317, </pages> <year> 1995. </year>
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial-time hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference-contexts: Hemaspaandra, Hemaspaandra, and Hempel [HHH96b,HHH97b], following up on the concept of query order, asked whether query order also matters in the polynomial hierarchy. What they found was that query order never matters in the polynomial hierarchy. This is stated formally below as Theorem 2.2. Definition 2.1 <ref> [Sto77] </ref> 1. 0 = P. 2. For each k &gt; 0, p p k1 . (For example, p p 3.
Reference: [Wag87] <author> K. Wagner. </author> <title> Number-of-query hierarchies. </title> <type> Technical Report 158, </type> <institution> Universitat Augsburg, Institut fur Mathematik, Augsburg, Germany, </institution> <month> October </month> <year> 1987. </year> <month> 14 </month>
Reference: [Wag89] <author> K. Wagner. </author> <title> Number-of-query hierarchies. </title> <type> Technical Report 4, </type> <institution> Universitat Wurzburg, Institut fur Informatik, Wurzburg, Germany, </institution> <month> February </month> <year> 1989. </year>
Reference: [Wag97] <author> K. Wagner. </author> <title> A note on parallel queries and the difference hierarchy. </title> <type> Technical Report 173, </type> <institution> Universitat Wurzburg, Institut fur Informatik, Wurzburg, Germany, </institution> <month> June </month> <year> 1997. </year> <month> 15 </month>
Reference-contexts: of the boolean hierarchy, and in doing so studied the case of multiple rounds of single queries; Beigel and Chang [BC97] study multiple rounds of multiple queries to the polynomial hierarchy, and show that here the order does not matter, and they also study the case of function classes; Wagner <ref> [Wag97] </ref> studies parallel rounds of one or more queries to the polynomial hierarchy and other classes and also tightly relates such classes to the refined hierarchy work of Selivanov [Sel94,Sel95] (see also the discussion in the final paragraph of Section 2 of [HHH97c]).
References-found: 37

