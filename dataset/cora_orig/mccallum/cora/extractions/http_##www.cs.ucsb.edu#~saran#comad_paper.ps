URL: http://www.cs.ucsb.edu/~saran/comad_paper.ps
Refering-URL: http://www.cs.ucsb.edu/~saran/pub.html
Root-URL: http://www.cs.ucsb.edu
Email: e-mail:  smithtrg@cs.ucsb.edu  
Title: Experiences in the Design of a Kernel for Computational Modeling Systems  
Author: Amitabh Saran Anuradha M. Sastri Divyakant Agrawal Amr El Abbadi Terence R. Smith anu, agrawal, amr, 
Note: fsaran,  
Address: Santa Barbara, CA 93106, U.S.A  
Affiliation: Department of Computer Science University of California  
Abstract: Computational Modeling Systems (CMS) are designed to resolve many of the shortcomings associated with systems that are currently employed in providing support for a wide range of scientific modeling applications. We identify the requirements of a reasonable CMS and describe the design of Amazonia, a CMS to support modeling in large scale earth science research. Amazonia has been implemented as an open and layered architecture. In this paper we discuss the design and implementation of the Amazonia kernel which incorporates two key components: a distributed access system that supports organization and access to data and services in a distributed environment and a tool management system that provides support for interoperability of heterogeneous tools.
Abstract-found: 1
Intro-found: 1
Reference: [AS93] <author> P. Adams and M. Solomon. </author> <title> An Overview of the CAPITL Software Development Environment. </title> <type> Technical Report TR-1143, </type> <institution> Computer Science Department, University of Wisconsin-Madison, </institution> <month> Apr. </month> <year> 1993. </year>
Reference: [AE94] <author> G. Alonso and A. El Abbadi. </author> <booktitle> Cooperative Modeling in Applied Geographic Research. Proceedings of the International Conference on Cooperative Information Systems, </booktitle> <address> CoopIS'94, Toronto, Canada, </address> <month> May, </month> <year> 1994. </year>
Reference: [TRa94] <author> G. Alonso, A. Saran, A. Sastri, D. Agrawal, A. El Abbadi, T.R. Smith, J. Su. AMAZONIA: </author> <title> A Computational Modeling System to support data-intensive applications, </title> <type> Technical Report, </type> <institution> Dept. of Computer Science, UCSB, </institution> <year> 1994. </year>
Reference-contexts: This has motivated us to define a new domain called Computational Modeling Systems (CMS) <ref> [SS393, TRa94] </ref>. In its core, CMS should provide a unified computational environment in which users are provided with sets of tools that support a significant range of the activities relating to the process of construction, evaluation and application of symbolic representations of phenomena. <p> Built over this kernel, is the Modeling Support System of Amazonia which is discussed elsewhere <ref> [TRa94, SS393] </ref>. 6 Conclusions Uniform computational support for scientific modeling activities is a difficult goal to achieve for a variety of reasons. The construction of scientific models of phenomena is a complex, interactive and highly iterative process.
Reference: [WWW92] <author> T. Berners-Lee, R. Cailliau, J.-F. Groff and B. Pollermann. </author> <title> World-Wide Web: The information universe, </title> <journal> Electronic Networking: Research, Applications and Policy, </journal> <volume> 1(2) </volume> <pages> 42-58, </pages> <month> Spring </month> <year> 1992. </year>
Reference-contexts: There is a need for an abstraction that will hide the heterogeneous file access mechanisms and will allow users to organize information on their own. While systems like Alex file system [CV92], Jade file system [RP93], Gopher [OD93], World-Wide Web (WWW) <ref> [WWW92] </ref> provide facilities to hide heterogeneous access mechanisms, they invariably provide a single hierarchy of organizing information, which does not allow user-centered organization. Hence we are using Prospero [NB92], as a building block for the DAS.
Reference: [CD94] <author> M.J. Carey, D.J. DeWitt, M.J. Franklin, N.E. Hall, M. McAuliffe, J.F. Naughton, D.T. Schuh, M.H. Solomon, C.K. Tan, O. Tsatalos, S. White and M.J. Zwilling. </author> <title> Shoring up Persistent Objects, </title> <booktitle> In Proceedings of the 1994 ACM-SIGMOD Conference, </booktitle> <address> Minneapolis, Minnesota, </address> <month> May </month> <year> 1994. </year>
Reference: [CD86] <author> M.J. Carey, D.J. DeWitt, D. Frank, G. Graefe, M. Muralikrishna, J.E. Richardson and E.J. Shekita. </author> <title> The Architecture of EXODUS Extensible DBMS, </title> <booktitle> In Proceedings of the 12th VLDB Conference, </booktitle> <month> September </month> <year> 1986. </year>
Reference: [CV92] <author> V. Cate. </author> <title> Alex A Global Filesystem, </title> <booktitle> Proceedings og the USENIX File Systems Workshop, </booktitle> <address> Ann Arbor, MI, USA, </address> <month> 21-22 May </month> <year> 1992. </year>
Reference-contexts: This makes finding, acquiring and organizing information of interest a difficult process. There is a need for an abstraction that will hide the heterogeneous file access mechanisms and will allow users to organize information on their own. While systems like Alex file system <ref> [CV92] </ref>, Jade file system [RP93], Gopher [OD93], World-Wide Web (WWW) [WWW92] provide facilities to hide heterogeneous access mechanisms, they invariably provide a single hierarchy of organizing information, which does not allow user-centered organization. Hence we are using Prospero [NB92], as a building block for the DAS.
Reference: [CM93] <author> W. Chu, </author> <title> editor. Proceedings of the NSF Scientific Database Projects, </title> <booktitle> AAAS Workshop on Advances in Data management for the Scientist and Engineer, </booktitle> <address> Boston, MA., </address> <month> Feb. </month> <year> 1993. </year>
Reference: [DK94] <author> D.J. DeWitt, N. Kabura, J. Luo, J.M. Patel and J. Yu. </author> <title> Client-Server Paradise, </title> <booktitle> Proceedings of the 20th VLDB Conference, </booktitle> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: In engineering and geography , the traditional built-in data types and data operators of the DBMS do not scale up well for applications like Computer Aided Design (CAD) and Geographic Information Systems (GIS), both of which have complex semantics. This has motivated extensions to data models for DBMS ([VP91], <ref> [DK94] </ref>, [PG93]) and the development of object oriented systems ([CD86, CD94]). By its very definition, the domain of IS precludes applications involving modeling for which the primary goal is to develop computational models of complex phenomena.
Reference: [DJ90] <author> J. Dozier. </author> <title> Looking ahead to EOS: The earth observing system. </title> <booktitle> Computer in Physics, </booktitle> <month> May/June </month> <year> 1990. </year>
Reference-contexts: The domain of CMS includes applications such as geographic modeling systems (GMS) in the context of earth sciences <ref> [DJ90] </ref> and hydrological sciences, environmental modeling systems (EMS) [GM93], biomedical modeling systems [FKA91] etc. An important characteristic of CMS is that modeling is the central focus". Figure 1, compares the conceptual and architectural view of IS and CMS.
Reference: [FK93] <author> K. Fedra. </author> <title> GIS and Environmental Modeling, Environmental Modeling with GIS, </title> <publisher> Oxford University Press, </publisher> <year> 1993, </year> <note> Edited by M.F. Goodchild, B.O. Parks and L.T. Steyaert. </note>
Reference-contexts: On the other hand, GMS involve the manipulation of elements from physical, chemical and biological domains in addition to the spatial domain. Also in GMS, the basic concept is one of state, interaction and dynamics of processes <ref> [FK93] </ref>. In essence, GMS address problems which are a superset of those addressed by GIS. While GIS can provide a standardized set of spatial operators and spatial objects, this is not sufficient to support modeling in a meaningful manner. <p> The current approach to GMS is to integrate an external model support component with GIS. Typical approaches involve loose-coupling of the GIS and the model components <ref> [FK93] </ref>. We term such systems as integrated information systems.
Reference: [FKA91] <author> K. A. Frenkel, </author> <title> The Human Genome project and informatics: a monumental scientific adventure. (the Human Genome Initiative), </title> <journal> Communications of the ACM, v34, </journal> <volume> n11, </volume> <pages> pages 40-56, </pages> <month> Nov </month> <year> 1991. </year>
Reference-contexts: The domain of CMS includes applications such as geographic modeling systems (GMS) in the context of earth sciences [DJ90] and hydrological sciences, environmental modeling systems (EMS) [GM93], biomedical modeling systems <ref> [FKA91] </ref> etc. An important characteristic of CMS is that modeling is the central focus". Figure 1, compares the conceptual and architectural view of IS and CMS.
Reference: [GM93] <author> M.F. Goodchild. </author> <title> The State of GIS for Environmental Problem-Solving, Environmental Modeling with GIS, </title> <publisher> Oxford University Press, </publisher> <year> 1993, </year> <note> Edited by M.F. </note> <author> Goodchild, B.O. Parks and L.T. Steyaert. </author> <month> 13 </month>
Reference-contexts: The domain of CMS includes applications such as geographic modeling systems (GMS) in the context of earth sciences [DJ90] and hydrological sciences, environmental modeling systems (EMS) <ref> [GM93] </ref>, biomedical modeling systems [FKA91] etc. An important characteristic of CMS is that modeling is the central focus". Figure 1, compares the conceptual and architectural view of IS and CMS.
Reference: [HT93] <author> J. Hardisty, D. M. Taylor, and S. E. Metcalfe. </author> <title> Computerized Environmental Modeling: a Practical Introduction Using Excel. </title> <editor> J. </editor> <publisher> Wiley & Sons, </publisher> <year> 1993. </year>
Reference-contexts: Section 6 gives a brief description of modeling support system. Finally, Section 7 provides a summary of the main points of the paper. 2 2 Requirements of a CMS In general, modeling activities in science and engineering require support for the development, evaluation and application of symbolic models <ref> [RA80, RD91, HT93] </ref> of a broad range of phenomena. The requirements can be summarized as: * Support for proper model abstractions. This implies the ability to create and execute models naturally i.e., at the level of the abstraction that corresponds to the concepts needed by the scientists.
Reference: [JC190] <author> C. V. Jones. </author> <title> An introduction to graph-based modeling systems, Part I: Overview. </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(2) </volume> <pages> 136-151, </pages> <year> 1990. </year>
Reference: [JC290] <author> C. V. Jones. </author> <title> An introduction to graph-based modeling systems, Part II: Graph-grammars and the implementation. </title> <journal> ORSA Journal on Computing, </journal> <volume> 3(3) </volume> <pages> 180-206, </pages> <year> 1991. </year>
Reference: [MP94] <author> C. B. Medeiros and F. Pires. </author> <title> Databases for GIS. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 23(1) </volume> <pages> 107-115, </pages> <year> 1994. </year>
Reference: [NB92] <author> B.C. Neuman. Prospero: </author> <title> A tool for organizing internet resources Electronic Networking: </title> <journal> Research, Applications and Policy, </journal> <volume> 30(7) </volume> <pages> 28-32, </pages> <month> Spring </month> <year> 1992. </year>
Reference-contexts: We use the term resources to refer to both. Since the resources available to users are constantly evolving, it should be possible for users to find the resources they need and more importantly organize them in a scalable way such that customized views of the resources can be created <ref> [NB92] </ref>. * Support for proper data abstractions. Data needed for model testing is typically distributed over different Internet locations accessible via file access protocols like NFS, FTP, Anonymous FTP. Currently it is the user who copies the remote data files and combines them in an appropriate sequence. <p> While systems like Alex file system [CV92], Jade file system [RP93], Gopher [OD93], World-Wide Web (WWW) [WWW92] provide facilities to hide heterogeneous access mechanisms, they invariably provide a single hierarchy of organizing information, which does not allow user-centered organization. Hence we are using Prospero <ref> [NB92] </ref>, as a building block for the DAS. Prospero file system is based on a virtual systems model, which provides user-centered naming, i.e., users construct their own virtual systems by selecting and organizing objects (in our case, it includes files and directories distributed across the internet) of interest.
Reference: [OD93] <author> K. Obraczka, P. B. Danzig, S. -H. Li. </author> <title> Internet Resource Discovery Services Computer, </title> <booktitle> Sept, 1993, </booktitle> <volume> 26(9) </volume> <pages> 8-22. </pages>
Reference-contexts: This makes finding, acquiring and organizing information of interest a difficult process. There is a need for an abstraction that will hide the heterogeneous file access mechanisms and will allow users to organize information on their own. While systems like Alex file system [CV92], Jade file system [RP93], Gopher <ref> [OD93] </ref>, World-Wide Web (WWW) [WWW92] provide facilities to hide heterogeneous access mechanisms, they invariably provide a single hierarchy of organizing information, which does not allow user-centered organization. Hence we are using Prospero [NB92], as a building block for the DAS.
Reference: [0289] <institution> O2 Query Lanuage Prototype Version 1.0 User's Reference Manual, Altair Corporation, France, </institution> <month> Dec </month> <year> 1989. </year>
Reference-contexts: The current implementation of the configurator has run time directives for translating CML commands to constructs of relational languages like POSTQUEL [PG93] and SQL. However, the design allows for the change of directives to translate CML into non relational languages such as O2 <ref> [0289] </ref>. With the integration of the Distributed Access System and the Tool Management System, Amazonia has a strong kernel which provides support for accessing data and tools, without constraints of network boundaries, thus establishing a comprehensive, consistent computational environment.
Reference: [PG93] <institution> POSTGRES Database Management System Version 4.1 Reference Manual, Computer Sciences Division, University of California, Berkeley, </institution> <month> Jan </month> <year> 1993. </year>
Reference-contexts: This has motivated extensions to data models for DBMS ([VP91], [DK94], <ref> [PG93] </ref>) and the development of object oriented systems ([CD86, CD94]). By its very definition, the domain of IS precludes applications involving modeling for which the primary goal is to develop computational models of complex phenomena. <p> To integrate various database systems, the configurator requires specifications for mapping primitive constructs to the constructs of the backend database. The current implementation of the configurator has run time directives for translating CML commands to constructs of relational languages like POSTQUEL <ref> [PG93] </ref> and SQL. However, the design allows for the change of directives to translate CML into non relational languages such as O2 [0289].
Reference: [RS93] <author> R. Ramakrishnan, D. Srivatsava, S. Sudarshan, P. Seshadri, </author> <title> Implementation of CORAL deductive database system, </title> <booktitle> ACM SIGMOD Record, </booktitle> <month> June </month> <year> 1993, </year> <note> vol.22, (no.2):167-76. </note>
Reference-contexts: Access to the tools is on a demand driven basis. Parameters are provided to tune the tool performance. We have integrated the front end tools of DBMS such as POSTGRES and Coral <ref> [RS93] </ref> and mathematical tools, such as MatLab, with relative ease. In our current implementation, we have used the Relational DBMS POSTGRES, to provide database support. Our approach is to keep Amazonia as loosely bound to POSTGRES as possible, and this will provide easy portability of Amazonia to other database platforms.
Reference: [RA80] <author> A. A. G. Requicha. </author> <title> Representations for rigid solids: theory, methods, </title> <journal> and systems. Computing Surveys, </journal> <volume> 12(4) </volume> <pages> 437-464, </pages> <month> Dec. </month> <year> 1980. </year>
Reference-contexts: Section 6 gives a brief description of modeling support system. Finally, Section 7 provides a summary of the main points of the paper. 2 2 Requirements of a CMS In general, modeling activities in science and engineering require support for the development, evaluation and application of symbolic models <ref> [RA80, RD91, HT93] </ref> of a broad range of phenomena. The requirements can be summarized as: * Support for proper model abstractions. This implies the ability to create and execute models naturally i.e., at the level of the abstraction that corresponds to the concepts needed by the scientists.
Reference: [RD91] <author> D. Robertson et al. Eco-Logic: </author> <title> Logic-Based Approaches to Ecological Modeling. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1991. </year>
Reference-contexts: Section 6 gives a brief description of modeling support system. Finally, Section 7 provides a summary of the main points of the paper. 2 2 Requirements of a CMS In general, modeling activities in science and engineering require support for the development, evaluation and application of symbolic models <ref> [RA80, RD91, HT93] </ref> of a broad range of phenomena. The requirements can be summarized as: * Support for proper model abstractions. This implies the ability to create and execute models naturally i.e., at the level of the abstraction that corresponds to the concepts needed by the scientists.
Reference: [RP93] <author> H. C. Rao, L. L. Peterson. </author> <title> Accessing files in an Internet: </title> <journal> The Jade File System IEEE Transactions on Software Engineering, </journal> <volume> 19(6), </volume> <month> June </month> <year> 1993. </year>
Reference-contexts: This makes finding, acquiring and organizing information of interest a difficult process. There is a need for an abstraction that will hide the heterogeneous file access mechanisms and will allow users to organize information on their own. While systems like Alex file system [CV92], Jade file system <ref> [RP93] </ref>, Gopher [OD93], World-Wide Web (WWW) [WWW92] provide facilities to hide heterogeneous access mechanisms, they invariably provide a single hierarchy of organizing information, which does not allow user-centered organization. Hence we are using Prospero [NB92], as a building block for the DAS.
Reference: [SP93] <author> A. Saran, K. Park, Y. Chen, A. Aguiar, T.R. Smith, J. Su. </author> <title> Developing Applications in CORAL, </title> <booktitle> International Logic Programming Symposium-Workshop on Programming in Deductive Databases, </booktitle> <address> Vancouver, Canada, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: The second limitation is that pipes can be used only between processes with a common ancestor. To avoid these limitations, it is necessary to provide additional structures, which in this case involve the concept of Unix coprocesses [SW92]. Establishing interprocess communication with tools is not a trivial task <ref> [SP93] </ref>, even with coprocesses. This is because the tools used in modeling are mostly interactive, i.e., they use the standard input/output interface. By default, the standard I/O library uses a buffering mechanism, when communicating via pipes.
Reference: [SA94] <author> A. Saran. </author> <title> Computational Modeling Support for Scientific Database Applications, </title> <institution> Computer Science Department, University of California, Santa Barbara, </institution> <year> 1994. </year>
Reference-contexts: Since the tools used are highly model dependent, the support for the dynamic configuration of tools within the system and for handling the idiosyncrasies of the inter-process communication with the tools, is critical. Such a support is a prerequisite for the reuse of tool specific code <ref> [SA94] </ref>. Furthermore, modeling is a collaborative activity in which users frequently exchange models (which are also tools). For the sake of efficiency, it is necessary to support remote execution of tools and models. * Support for organization of resources.
Reference: [SAM94] <author> A. M. Sastri. </author> <title> Experiences in Heterogeneous service and data access using distributed approaches, </title> <institution> Computer Science Department, University of California, Santa Barbara, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: An abstraction that will hide the mechanical details of file access and provide a uniform interface to data distributed across various files using different file access mechanisms is essential <ref> [SAM94] </ref>. * Support for large data objects. The CMS domain includes applications where huge amount of data is involved during model development and model testing. <p> To perform remote filtering, we have designed and implemented a peer-peer protocol between Prospero servers. From the DAS client's point of view, remote tool execution is seen as another access method that is available. We distinguish this access method as PFS <ref> [SAM94] </ref>. As we mentioned earlier, services are distributed as a result of the availability of tools and models themselves at various sites. A user might need to remotely execute tools.
Reference: [SAC93] <author> A. Segev. </author> <title> Processing heterogeneous data in scientific databases. </title> <booktitle> In Chu [CM93]. </booktitle>
Reference: [SK86] <author> H.A. Korth, A. Silberschatz, </author> <title> Database system concepts, </title> <publisher> published by McGraw-Hill Press Company, </publisher> <year> 1986. </year>
Reference-contexts: They provide an environment that makes the storage, retrieval and manipulation of information convenient and efficient. A typical system contains interrelated information (usually about one enterprise) and a collection of utilities to manage this information <ref> [SK86] </ref>. The domain of IS includes applications like banking, airline reservations, and library cataloging. Since the primary focus of IS is information, they lend themselves to efficient implementation via database management systems (DBMS).
Reference: [SS193] <author> T. R. Smith, J. Su, D. Agrawal, and A. El Abbadi. </author> <title> Database and modeling systems for the earth sciences. </title> <journal> IEEE Bulletin on Data Engineering, </journal> <volume> 16(1), </volume> <year> 1993. </year>
Reference: [SS293] <author> T. R. Smith, J. Su, D. Agrawal, and A. El Abbadi. MDBS: </author> <title> A modeling and database systems to support research in the earth sciences. </title> <booktitle> In Chu [CM93]. </booktitle> <pages> 14 </pages>
Reference: [SS393] <author> T. R. Smith, J. Su, A. El Abbadi, G. Alonso, and A. Saran. </author> <title> Computational modeling systems: Support for the development of scientific models. </title> <type> Technical Report TRCS94-11, </type> <institution> Dept. of Computer Science, UCSB, </institution> <year> 1994. </year>
Reference-contexts: This has motivated us to define a new domain called Computational Modeling Systems (CMS) <ref> [SS393, TRa94] </ref>. In its core, CMS should provide a unified computational environment in which users are provided with sets of tools that support a significant range of the activities relating to the process of construction, evaluation and application of symbolic representations of phenomena. <p> Amazonia is an extensible system that is based on a comprehensive and consistent model of scientific modeling activity <ref> [SS393] </ref>. We have developed a Computational Modeling Language (CML) to express a wide class of scientific modeling activities at the conceptual level of the users [SS393]. <p> Amazonia is an extensible system that is based on a comprehensive and consistent model of scientific modeling activity <ref> [SS393] </ref>. We have developed a Computational Modeling Language (CML) to express a wide class of scientific modeling activities at the conceptual level of the users [SS393]. It allows users to express easily and naturally most of the operations that are employed in the iterative development of their models, while hiding computational issues that are irrelevant to the scientific goals. Details of its implementation are discussed elsewhere [SSS94]. Amazonia's architecture is very simple and layered. <p> Built over this kernel, is the Modeling Support System of Amazonia which is discussed elsewhere <ref> [TRa94, SS393] </ref>. 6 Conclusions Uniform computational support for scientific modeling activities is a difficult goal to achieve for a variety of reasons. The construction of scientific models of phenomena is a complex, interactive and highly iterative process.
Reference: [SSS94] <author> T. R. Smith, J. Su, and A. Saran. </author> <title> Virtual Structures: A Technique for supporting scientific database applications , accepted for presentation at The Thirteenth International Conference on the Entity-Relationship Approach, </title> <month> Dec </month> <year> 1994. </year>
Reference-contexts: It allows users to express easily and naturally most of the operations that are employed in the iterative development of their models, while hiding computational issues that are irrelevant to the scientific goals. Details of its implementation are discussed elsewhere <ref> [SSS94] </ref>. Amazonia's architecture is very simple and layered. It is driven by the functionality that needs to be supported for the iterative development of symbolic models of phenomena, ranging from the acquisition and manipulation of raw data to the construction and evaluation of complex sets of mathematical equations. <p> In Amazonia, tools are accessed through CML constructs which in turn contain native tool language commands <ref> [SSS94] </ref>. The various ways in which processes may communicate with each other in Unix are characterized by the Unix Interprocess Communication (IPC).
Reference: [SW92] <author> W.R. Stevens. </author> <title> Advanced Programming in UNIX Environment, </title> <publisher> Addison-Wesley Pub. Co.,, </publisher> <year> 1992. </year>
Reference-contexts: The second limitation is that pipes can be used only between processes with a common ancestor. To avoid these limitations, it is necessary to provide additional structures, which in this case involve the concept of Unix coprocesses <ref> [SW92] </ref>. Establishing interprocess communication with tools is not a trivial task [SP93], even with coprocesses. This is because the tools used in modeling are mostly interactive, i.e., they use the standard input/output interface. By default, the standard I/O library uses a buffering mechanism, when communicating via pipes. <p> To overcome this, Amazonia supports a generic technique to execute a tool as a background server process. The tool management system uses the concept of pseudo-terminals which ensures that any tool using the standard input/output interface can be integrated into the system <ref> [SW92] </ref>. Since a tool runs in non-interactive mode by default, issues like handling asynchrony of the tool and processing command responses arise. In particular, TMS must detect command terminations and error sequences.
Reference: [VP91] <author> P. van Oosterom and T. Vijlbrief. </author> <title> Building a GIS on top of the open DBMS Postgres. </title> <booktitle> Proceedings of EGIS'91, </booktitle> <address> Brussels, Belgium, </address> <pages> pages 775-787, </pages> <month> Apr. </month> <year> 1991. </year>
Reference: [WS92] <author> W. Waterfeld. and Schek H.J. </author> <title> The DASDBS Geo-Kernel An Extensible Database system for GIS. </title> <address> pages 69-84, </address> <year> 1992. </year> <title> in Three Dimensional Modeling with Geoscientific Information Systems, A.K. </title> <editor> Turner (ed.), </editor> <publisher> Kluwer Academic Publishers, </publisher> <address> Netherlands. </address>
Reference: [WO90] <author> A. Wolf. </author> <title> How to Fit Geo-Objects into Databases An Extensibility Approach. </title> <booktitle> Proceedings of the First European Conference on GIS, </booktitle> <address> Amsterdam, </address> <month> Apr. </month> <year> 1990. </year> <month> 15 </month>
References-found: 38

