URL: http://http.icsi.berkeley.edu/~storn/fct2.ps.gz
Refering-URL: http://http.icsi.berkeley.edu/~storn/litera.html
Root-URL: http://www.icsi.berkeley.edu
Title: Efficient Input Reordering for the DCT Based on a Real-Valued Decimation in Time FFT  
Author: by Rainer Storn ) 
Date: September 1995  
Abstract: The possibility of computing the Discrete Cosine Transform (DCT) of length N=2 n , n integer, via an N-point Discrete Fourier Transform (DFT) is widely known from the literature. In this correspondence it will be demonstrated that this computation can be done in-place by just employing butterfly swaps if the input reordering necessary for the DCT computation via DFT - is combined with the bit-reverse scrambling required by the decimation in time Fast Fourier Transform-algorithm. ________________________________________ 1) International Computer Science Institute, 1947 Center Street, Berkeley, CA 94704-1198, Suite 600, Tel.: 510-642-4274, Fax: 510-643-7684. Email: storn@icsi.berkeley.edu. On leave from Siemens AG, ZFE T SN 2, Otto-Hahn-Ring 6, D-81739 Muenchen, Germany. Tel.: 01149-89-636-40502, Fax: 01149-89-636-44577, Email:rainer.storn@zfe.siemens.de. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Britanah, V., </author> <title> "On the Discrete Cosine Transform Computation", </title> <booktitle> Signal processing 40 (1994), </booktitle> <pages> pp. 183-194. </pages>
Reference-contexts: This paper elaborates this property and presents pertinent source code in C. The DCT of an N-point real sequence x n is most often defined as <ref> [1] </ref> C x N N m n N cos = F G K = 2 1 e p with e m otherwise = R | | 2 1 The Discrete Fourier Transform (DFT) F R j I f e j nm n , , , = 0 , for m=0, 1, <p> [], float wi [], int N, int nexp) /******************************************************************* ** fct () computes a DCT via a real valued, in-place Cooley- ** ** Tukey Radix-2 FFT. ** ** Real input and output data are in array x []. ** ** Output will be in order ** ** [re [0], re <ref> [1] </ref>, ... , re [N/2], im [N/2-1], ... , im [1]] ** ** after the FFT part is finished. <p> fct () computes a DCT via a real valued, in-place Cooley- ** ** Tukey Radix-2 FFT. ** ** Real input and output data are in array x []. ** ** Output will be in order ** ** [re [0], re <ref> [1] </ref>, ... , re [N/2], im [N/2-1], ... , im [1]] ** ** after the FFT part is finished.
Reference: [2] <author> Lee, P.Z. and Huang, </author> <title> F.X., "Restructured Recursive DCT and DST Algorithms", </title> <journal> IEEE Trans. Signal Proc., </journal> <volume> Vol. 42, No. 7, </volume> <month> July </month> <year> 1994, </year> <pages> pp. 1600-1609. </pages>
Reference: [3] <author> Wang, Z., </author> <title> "On Computing the Discrete Fourier and Cosine Transforms", </title> <journal> IEEE Trans. ASSP, </journal> <volume> Vol. ASSP-33, No. 4, </volume> <month> Oct. </month> <year> 1985, </year> <pages> pp. 1341-1344. </pages>
Reference: [4] <author> Makhoul, J., </author> <title> A Fast Cosine Transform in One and Two Dimensions, </title> <journal> IEEE Trans. ASSP, </journal> <volume> Vol. ASSP-28, No. 1, </volume> <month> Feb. </month> <year> 1980, </year> <pages> pp. 27-34. </pages>
Reference-contexts: The Discrete Fourier Transform (DFT) F R j I f e j nm n , , , = 0 , for m=0, 1, ... , N-1 (3) for which a huge body of fast computational algorithms exists can be utilized to compute the DCT by employing the mapping found in <ref> [4] </ref>.
Reference: [5] <author> Sorensen, H. et alii, </author> <title> Real-Valued Fast Fourier Transform Algorithms, </title> <journal> IEEE Trans. ASSP, </journal> <volume> Vol. ASSP-35, No. 6, </volume> <month> June </month> <year> 1987, </year> <pages> pp. 849-863. </pages>
Reference-contexts: One particular attractive approach is the computation via real valued Fast Fourier Transform (FFT) algorithms as the latter are very well developed and high performance computer code is readily available <ref> [5] </ref>. However, the fact that the input reordering required for this type of computation can be done in-place by just using butterfly swaps has not been addressed so far. <p> The computation of real valued FFT algorithms, especially for N=2 n , has been studied extensively in the literature an excellent survey of which can be found in <ref> [5] </ref> and [6]. We will concentrate exclusively on the case N=2 n and on the Cooley-Tukey or decimation in time approach.
Reference: [6] <author> Mitra, S.K. and Kaiser, J.F., </author> <title> Handbook for Digital Signal Processing, </title> <publisher> John Wiley&Sons, </publisher> <year> 1993. </year> <title> 10 Fig. 1: In-place reordering necessary for an 8-point FCT based on the decimation in time FFT. Fig. 2: Listing part 1 - Main program. Fig. 3: Listing part 2 - The first part of the FCT subroutine contains the input reordering. Fig. 4: Listing part 3 - Second part of the FCT subroutine. Fig. 5: Listing part 4 - Twiddle factor computation. </title> <type> 11 </type>
Reference-contexts: The computation of real valued FFT algorithms, especially for N=2 n , has been studied extensively in the literature an excellent survey of which can be found in [5] and <ref> [6] </ref>. We will concentrate exclusively on the case N=2 n and on the Cooley-Tukey or decimation in time approach. This kind of FFT requires its input values to be in bit-reversed order which is well suited for an efficient in-place computation of the DCT, rendering a Fast Cosine Transform (FCT).
References-found: 6

