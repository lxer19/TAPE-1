URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-25.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: On the Difference Between Turing Machine Time and Random-Access Machine Time (extended abstract)  
Author: Kenneth W. Regan 
Keyword: Computational complexity, theory of computation, Turing machines, random-access machines, models, simulation, finite automata.  
Affiliation: State University of New York at Buffalo  
Abstract: We introduce a model of computation called the Block Move (BM) model. The BM extends the Block Transfer (BT) model of Aggarwal, Chandra, and Snir [1], who studied time complexity under various memory access cost functions ranging from 1 (a) := a to log (a) := dlog 2 ae. We show that up to factors of log t in the total running time t, BMs under 1 are equivalent to multitape Turing machines, and BMs under log are equivalent to log-cost RAMs. We also prove that for any well-behaved the BM classes DTIME[t(n)] form a tight deterministic time hierarchy. Whether there is any hierarchy at all when rather than t varies is tied to long-standing open problems of determinism vs. nondeterminism. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal, A. Chandra, and M. Snir. </author> <title> Hierarchical memory with block transfer. </title> <booktitle> In Proc. 28th IEEE FOCS, </booktitle> <pages> pages 204-216, </pages> <year> 1987. </year>
Reference-contexts: The Block Move Model This paper develops a new way of gauging the difference between a RAM and a TM, one which directly addresses the tradeoff between "serial" and "random" access to memory. The BT model of Aggarwal, Chan-dra, and Snir <ref> [1] </ref> added to the standard RAM special block transfer instructions of the form copy [a 1 : : : b 1 ] into [a 2 : : : b 2 ]. <p> The memory cost functions studied in <ref> [1] </ref> included log (a) := dlog 2 ae and for d 1, d (a) := da 1=d e. The authors of [1] prove that every function which depends on all of the input requires more than linear time on the BT, viz. [n log n] for = 1 , [n log <p> The memory cost functions studied in <ref> [1] </ref> included log (a) := dlog 2 ae and for d 1, d (a) := da 1=d e. The authors of [1] prove that every function which depends on all of the input requires more than linear time on the BT, viz. [n log n] for = 1 , [n log log n] for = d with d &gt; 1, and [n log fl n] for = log .
Reference: [2] <author> D. Mix Barrington, N. Immerman, and H. Straubing. </author> <booktitle> On uniformity within NC 1 . In Proc. 3rd IEEE Structures, </booktitle> <pages> pages 47-59, </pages> <year> 1988. </year>
Reference-contexts: The RAM-TM model of <ref> [5, 2] </ref>, which uses fixed-size registers and provides a separate address tape for accessing them, and the tree computer, namely a TM with multiple binary tree-structured tapes (see [15, 11]), are each equivalent to the log-cost RAM up to a factor of O (log t) in the running time t.
Reference: [3] <author> S. Cook and R. Reckhow. </author> <title> Time bounded random access machines. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 7 </volume> <pages> 354-375, </pages> <year> 1973. </year>
Reference-contexts: Address: Computer Science Department, 226 Bell Hall, UB North Campus, Buffalo, NY 14260-2000. Email: regan@cs.buffalo.edu, tel.: (716) 645-3189, fax: (716) 645-3464. Moreover, the result of [7] is for the unit-cost RAM, and is not known to hold under the more reasonable log-cost criterion of Cook and Reckhow <ref> [3] </ref>, which charges e.g. dlog ie + dlog ae for a RAM step which loads a stored integer i from register a. <p> For any time function t (n) n, (a) RAM-TIME log [t] TC [O (t)] RAM-TM-TIME [O (t)] [15]. (b) TC [t] RAM-TIME log [O (t log t= log log t] [13]. (c) DTIME [t] RAM-TM-TIME [t]. 1 (d) RAM-TIME log [t] DTIME [t 2 ] <ref> [3] </ref>. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] [11]. 1 See also [9] for simulations of TMs by log-cost RAMs. 2 Improved <p> For the ordinary RAM the analogous result is RAM-TIME [t] DTIME [t 3 ] <ref> [3] </ref>. 3 Reischuk [19] gives a bound closer to, but not quite, linear for simulation by tree machines. We do not have a better bound than Reischuk's for RAM-TMs. The last two bounds are optimal for on-line simu-lations [12, 13], and the others are thought to be close.
Reference: [4] <author> E. Grandjean and J. Robson. </author> <title> RAM with compact memory: a robust and realistic model of computation. </title> <booktitle> In Proc. CSL '90, </booktitle> <publisher> LNCS. Springer, </publisher> <year> 1991. </year>
Reference-contexts: Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson <ref> [4] </ref>. Others have considered TMs with planar or d-dimensional tapes (see [17, 10]) and TMs whose heads can "jump" to marked cells [22]. The theorem of [14] that DLIN is properly contained in nondeterministic TM linear time (NLIN) is not known to carry over to any of these models.
Reference: [5] <author> Y. Gurevich and S. Shelah. </author> <title> Nearly-linear time. </title> <booktitle> In Proc. Logic at Botik '89, volume 363 of LNCS, </booktitle> <pages> pages 108-118. </pages> <publisher> Springer, </publisher> <year> 1989. </year>
Reference-contexts: The RAM-TM model of <ref> [5, 2] </ref>, which uses fixed-size registers and provides a separate address tape for accessing them, and the tree computer, namely a TM with multiple binary tree-structured tapes (see [15, 11]), are each equivalent to the log-cost RAM up to a factor of O (log t) in the running time t. <p> Following Schnorr [20], we write DQL and NQL for the TM time classes DTIME [qlin] and NTIME [qlin]. The robustness theorem of Gurevich and Shelah <ref> [5] </ref> implies that RAM-TIME log [qlin] = TC [qlin] = RAM-TM-TIME [qlin] (we call this DNLT). Perhaps more surprising, [5] proved that the nondeterministic counterparts of these classes are equal not only to each other, but also to NQL. <p> Following Schnorr [20], we write DQL and NQL for the TM time classes DTIME [qlin] and NTIME [qlin]. The robustness theorem of Gurevich and Shelah <ref> [5] </ref> implies that RAM-TIME log [qlin] = TC [qlin] = RAM-TM-TIME [qlin] (we call this DNLT). Perhaps more surprising, [5] proved that the nondeterministic counterparts of these classes are equal not only to each other, but also to NQL. We define NBMs by allowing finite-state transducers in block moves to be nondeterministic, (cf.
Reference: [6] <author> F. Hennie and R. Stearns. </author> <title> Two-way simulation of multitape Turing machines. </title> <journal> J. ACM, </journal> <volume> 13 </volume> <pages> 533-546, </pages> <year> 1966. </year>
Reference-contexts: The robustness theorem also lets us describe BM algorithms in the same informal manner that is familiar for RAM algorithms. 3. Results Our first result shows that the Hennie-Stearns simulation <ref> [6] </ref> can be carried out efficiently by a BM. Lemma 3.1. For any time function t, DTIME [t (n)] D 1 TIME [t (n) log t (n)]. Proof Sketch. <p> Lemma 3.1. For any time function t, DTIME [t (n)] D 1 TIME [t (n) log t (n)]. Proof Sketch. Let T be a multitape TM with alphabet which runs in time t (n), and consider the two-tape TM T 0 in the Hennie-Stearns theorem (see <ref> [6, 8, 21] </ref>). The k-many tapes of T are simulated on 2k-many tracks of the first tape so that all tape heads of T are maintained on cell 0 of each track. <p> We have not been able to obtain a good converse to (d); the combinatorial problem is that a TM with d-dimensional tapes may change its head direction often, and the methods of [16] have more than the log t (n) overhead of the one-dimensional case <ref> [6] </ref>. For quasilinear time, i.e. time qlin = n (log n) O (1) , the extra log n factors in the above simulations do not matter. Following Schnorr [20], we write DQL and NQL for the TM time classes DTIME [qlin] and NTIME [qlin].
Reference: [7] <author> J. Hopcroft, W. Paul, and L. Valiant. </author> <title> On time versus space. </title> <journal> J. ACM, </journal> <volume> 24 </volume> <pages> 332-337, </pages> <year> 1977. </year>
Reference-contexts: The best known result is that for time bounds t (n) which are [n log n] and time-constructible by RAMs, a TM running in time t (n) can be simulated by a RAM in time t (n)= log t (n) <ref> [7] </ref>. It follows that the TM time class DTIME [t (n)] is properly contained in the RAM time class RAM-TIME [t (n)]. <p> Address: Computer Science Department, 226 Bell Hall, UB North Campus, Buffalo, NY 14260-2000. Email: regan@cs.buffalo.edu, tel.: (716) 645-3189, fax: (716) 645-3464. Moreover, the result of <ref> [7] </ref> is for the unit-cost RAM, and is not known to hold under the more reasonable log-cost criterion of Cook and Reckhow [3], which charges e.g. dlog ie + dlog ae for a RAM step which loads a stored integer i from register a.
Reference: [8] <author> J. Hopcroft and J. Ullman. </author> <title> Introduction to Automata Theory, Languages, and Computation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1979. </year>
Reference-contexts: The block move is valid if the two intervals are disjoint, and strictly valid if also S (x) exactly fills [a 2 : : : b 2 ]. For S we refer to the generalized sequential machine (GSM) described in <ref> [8] </ref>, which generalizes the Mealy machine by allowing 0,1, or 2 or more characters to be output in a single transition. The blank B is both a readable and a writable character. <p> Lemma 3.1. For any time function t, DTIME [t (n)] D 1 TIME [t (n) log t (n)]. Proof Sketch. Let T be a multitape TM with alphabet which runs in time t (n), and consider the two-tape TM T 0 in the Hennie-Stearns theorem (see <ref> [6, 8, 21] </ref>). The k-many tapes of T are simulated on 2k-many tracks of the first tape so that all tape heads of T are maintained on cell 0 of each track. <p> Perhaps more surprising, [5] proved that the nondeterministic counterparts of these classes are equal not only to each other, but also to NQL. We define NBMs by allowing finite-state transducers in block moves to be nondeterministic, (cf. GSM mappings in <ref> [8] </ref>), and let NTIME [t (n)] stands for the languages accepted by NBMs in -time t (n). The above immediately yield: Corollary 3.4. (a) D 1 TIME [qlin] = DQL. (b) D log TIME [qlin] = DNLT. (c) For all 1 , NTIME [qlin] = NQL. <p> Proof Sketch. A BM can keep count of its own elapsed -time without slowing down its computation by more than a constant factor, basically because two numbers can be added in one GST pass after shu*ing their bits. The rest follows by standard diagonaliza-tion methods (see <ref> [8] </ref>). 4. Conclusion We have developed a natural model of computation which provides a parameter , whose settings between (a) = log a and (a) = a span the difference between a log-cost RAM and a multitape Turing machine.
Reference: [9] <author> J. Katajainen, J. van Leeuwen, and M. Pentto-nen. </author> <title> Fast simulation of Turing machines by random access machines. </title> <journal> SIAM J. Comput., </journal> <volume> 17 </volume> <pages> 77-88, </pages> <year> 1988. </year>
Reference-contexts: 1 (d) RAM-TIME log [t] DTIME [t 2 ] [3]. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] [11]. 1 See also <ref> [9] </ref> for simulations of TMs by log-cost RAMs. 2 Improved to RAM-TIME log DTIME [t 2 = log t] by combining [17] and [15].
Reference: [10] <author> M. Loui. </author> <title> Simulations among multidimensional Turing machines. </title> <journal> Theor. Comp. Sci., </journal> <volume> 21 </volume> <pages> 145-161, </pages> <year> 1981. </year>
Reference-contexts: Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. Others have considered TMs with planar or d-dimensional tapes (see <ref> [17, 10] </ref>) and TMs whose heads can "jump" to marked cells [22]. The theorem of [14] that DLIN is properly contained in nondeterministic TM linear time (NLIN) is not known to carry over to any of these models.
Reference: [11] <author> M. Loui. </author> <title> Optimal dynamic embedding of trees into arrays. </title> <journal> SIAM J. Comput., </journal> <volume> 12 </volume> <pages> 463-472, </pages> <year> 1983. </year>
Reference-contexts: The RAM-TM model of [5, 2], which uses fixed-size registers and provides a separate address tape for accessing them, and the tree computer, namely a TM with multiple binary tree-structured tapes (see <ref> [15, 11] </ref>), are each equivalent to the log-cost RAM up to a factor of O (log t) in the running time t. Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. <p> DTIME [t] RAM-TM-TIME [t]. 1 (d) RAM-TIME log [t] DTIME [t 2 ] [3]. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] <ref> [11] </ref>. 1 See also [9] for simulations of TMs by log-cost RAMs. 2 Improved to RAM-TIME log DTIME [t 2 = log t] by combining [17] and [15].
Reference: [12] <author> M. Loui and D. Luginbuhl. </author> <title> The complexity of on-line simulation between multidimensional Tur-ing machines and random-access machines. </title> <journal> Math. Sys. Thy., </journal> <volume> 25 </volume> <pages> 293-308, </pages> <year> 1992. </year>
Reference-contexts: (t)] [15]. (b) TC [t] RAM-TIME log [O (t log t= log log t] [13]. (c) DTIME [t] RAM-TM-TIME [t]. 1 (d) RAM-TIME log [t] DTIME [t 2 ] [3]. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] <ref> [12] </ref>. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] [11]. 1 See also [9] for simulations of TMs by log-cost RAMs. 2 Improved to RAM-TIME log DTIME [t 2 = log t] by combining [17] and [15]. <p> We do not have a better bound than Reischuk's for RAM-TMs. The last two bounds are optimal for on-line simu-lations <ref> [12, 13] </ref>, and the others are thought to be close. However, no separations have been proved for the language classes, not even DTIME [O (n)] vs. RAM-TM-TIME [O (n)].
Reference: [13] <author> M. Loui and D. Luginbuhl. </author> <title> Optimal on-line simulations of tree machines by random access machines. </title> <journal> SIAM J. Comput., </journal> <volume> 21 </volume> <pages> 959-971, </pages> <year> 1992. </year>
Reference-contexts: The best known simulations are: Proposition 1.1. For any time function t (n) n, (a) RAM-TIME log [t] TC [O (t)] RAM-TM-TIME [O (t)] [15]. (b) TC [t] RAM-TIME log [O (t log t= log log t] <ref> [13] </ref>. (c) DTIME [t] RAM-TM-TIME [t]. 1 (d) RAM-TIME log [t] DTIME [t 2 ] [3]. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log <p> We do not have a better bound than Reischuk's for RAM-TMs. The last two bounds are optimal for on-line simu-lations <ref> [12, 13] </ref>, and the others are thought to be close. However, no separations have been proved for the language classes, not even DTIME [O (n)] vs. RAM-TM-TIME [O (n)].
Reference: [14] <author> W. Paul, N. Pippenger, E. Szemeredi, and W. Trotter. </author> <title> On determinism versus nondetermin-ism and related problems. </title> <booktitle> In Proc. 24th IEEE FOCS, </booktitle> <pages> pages 429-438, </pages> <year> 1983. </year>
Reference-contexts: Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. Others have considered TMs with planar or d-dimensional tapes (see [17, 10]) and TMs whose heads can "jump" to marked cells [22]. The theorem of <ref> [14] </ref> that DLIN is properly contained in nondeterministic TM linear time (NLIN) is not known to carry over to any of these models.
Reference: [15] <author> W. Paul and R. Reischuk. </author> <title> On time versus space II. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 22 </volume> <pages> 312-327, </pages> <year> 1981. </year>
Reference-contexts: The RAM-TM model of [5, 2], which uses fixed-size registers and provides a separate address tape for accessing them, and the tree computer, namely a TM with multiple binary tree-structured tapes (see <ref> [15, 11] </ref>), are each equivalent to the log-cost RAM up to a factor of O (log t) in the running time t. Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. <p> The best known simulations are: Proposition 1.1. For any time function t (n) n, (a) RAM-TIME log [t] TC [O (t)] RAM-TM-TIME [O (t)] <ref> [15] </ref>. (b) TC [t] RAM-TIME log [O (t log t= log log t] [13]. (c) DTIME [t] RAM-TM-TIME [t]. 1 (d) RAM-TIME log [t] DTIME [t 2 ] [3]. 2 (e) For d 2, DTIME d [t] RAM-TIME log [t (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 <p> 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] [11]. 1 See also [9] for simulations of TMs by log-cost RAMs. 2 Improved to RAM-TIME log DTIME [t 2 = log t] by combining [17] and <ref> [15] </ref>. For the ordinary RAM the analogous result is RAM-TIME [t] DTIME [t 3 ] [3]. 3 Reischuk [19] gives a bound closer to, but not quite, linear for simulation by tree machines. We do not have a better bound than Reischuk's for RAM-TMs.
Reference: [16] <author> W. Paul, J. Seiferas, and J. Simon. </author> <title> An information-theoretic approach to time bounds for on-line computation. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 23 </volume> <pages> 108-126, </pages> <year> 1981. </year>
Reference-contexts: We have not been able to obtain a good converse to (d); the combinatorial problem is that a TM with d-dimensional tapes may change its head direction often, and the methods of <ref> [16] </ref> have more than the log t (n) overhead of the one-dimensional case [6]. For quasilinear time, i.e. time qlin = n (log n) O (1) , the extra log n factors in the above simulations do not matter.
Reference: [17] <author> N. Pippenger and M. Fischer. </author> <title> Relations among complexity measures. </title> <journal> J. ACM, </journal> <volume> 26 </volume> <pages> 361-381, </pages> <year> 1979. </year>
Reference-contexts: Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. Others have considered TMs with planar or d-dimensional tapes (see <ref> [17, 10] </ref>) and TMs whose heads can "jump" to marked cells [22]. The theorem of [14] that DLIN is properly contained in nondeterministic TM linear time (NLIN) is not known to carry over to any of these models. <p> (log t) 1 (1=d) =(log log t) 1=d ] [12]. 3 (f) For d 2, RAM-TIME log [t] DTIME d [t 1+(1=d) = log t] [11]. 1 See also [9] for simulations of TMs by log-cost RAMs. 2 Improved to RAM-TIME log DTIME [t 2 = log t] by combining <ref> [17] </ref> and [15]. For the ordinary RAM the analogous result is RAM-TIME [t] DTIME [t 3 ] [3]. 3 Reischuk [19] gives a bound closer to, but not quite, linear for simulation by tree machines. We do not have a better bound than Reischuk's for RAM-TMs.
Reference: [18] <author> K. Regan. </author> <title> Linear time and memory efficient computation. </title> <type> Technical report, </type> <institution> Computer Science Department, State University of NY at Buffalo, </institution> <type> TR 92-28, </type> <year> 1992. </year>
Reference-contexts: The full form can be further augmented by allowing any number k 1 of main tapes, each with its own four address tapes, and by having block moves which involve all k tapes at once, using k-input, k-output GSMs (for more detail, see <ref> [18] </ref>). We also define a notationally compact form which does not specify the read-block boundary b 1 in advance. For this we modify GSMs so that they can stop upon reading certain symbols (including B), and call the result a generalized sequential transducer (GST). Definition 2.1. <p> In each case the validity condition is that [0 : : :c] and [a : : : b] be disjoint, the work is 1 + jb aj + c, and the memory-access charge is maxf (a); (b); (c) g. Robustness Theorem. <ref> [18] </ref>. For any memory cost function d , with d 1 and rational, the reduced, full, and augmented forms of the BM, with or without the (strict) validity condition, all simulate each other up to constant factors in d -time. <p> For brevity in this abstract we suppose that all GSTs given to our simulator use a fixed alphabet ; see <ref> [18] </ref> for the more-general result with variable . Our simulator uses a larger alphabet . Each character c 2 induces a mapping g c : Q ! Q on the state set Q of S. Adding the identity map and closing out under composition yields M S .
Reference: [19] <author> R. Reischuk. </author> <title> A fast implementation of multidimensional storage into a tree storage. </title> <journal> Theor. Comp. Sci., </journal> <volume> 19 </volume> <pages> 253-266, </pages> <year> 1982. </year>
Reference-contexts: For the ordinary RAM the analogous result is RAM-TIME [t] DTIME [t 3 ] [3]. 3 Reischuk <ref> [19] </ref> gives a bound closer to, but not quite, linear for simulation by tree machines. We do not have a better bound than Reischuk's for RAM-TMs. The last two bounds are optimal for on-line simu-lations [12, 13], and the others are thought to be close.
Reference: [20] <author> C. Schnorr. </author> <title> Satisfiability is quasilinear complete in NQL. </title> <journal> J. ACM, </journal> <volume> 25 </volume> <pages> 136-145, </pages> <year> 1978. </year>
Reference-contexts: For quasilinear time, i.e. time qlin = n (log n) O (1) , the extra log n factors in the above simulations do not matter. Following Schnorr <ref> [20] </ref>, we write DQL and NQL for the TM time classes DTIME [qlin] and NTIME [qlin]. The robustness theorem of Gurevich and Shelah [5] implies that RAM-TIME log [qlin] = TC [qlin] = RAM-TM-TIME [qlin] (we call this DNLT).
Reference: [21] <author> K. Wagner and G. Wechsung. </author> <title> Computational Complexity. </title> <address> D. </address> <publisher> Reidel, </publisher> <year> 1986. </year>
Reference-contexts: 1. Introduction It is widely believed that random-access machines (RAMs) are more efficient and powerful than multi-tape Turing machines (TMs). However, no conclusive separation has been proven. The standard RAM model ("ordinary RAM" in <ref> [21] </ref>) has addition and subtraction as basic operations. Inputs x 2 f 0; 1 g n are initially placed in the first n registers, one bit per register. <p> Lemma 3.1. For any time function t, DTIME [t (n)] D 1 TIME [t (n) log t (n)]. Proof Sketch. Let T be a multitape TM with alphabet which runs in time t (n), and consider the two-tape TM T 0 in the Hennie-Stearns theorem (see <ref> [6, 8, 21] </ref>). The k-many tapes of T are simulated on 2k-many tracks of the first tape so that all tape heads of T are maintained on cell 0 of each track.
Reference: [22] <author> R. Weicker. </author> <title> Turing machines with associative memory access. </title> <booktitle> In Proc. ICALP '74, volume 14 of LNCS, </booktitle> <pages> pages 458-472. </pages> <publisher> Springer, </publisher> <year> 1974. </year>
Reference-contexts: Possibly more constrained is the "RAM with polynomially compact memory" of Grandjean and Robson [4]. Others have considered TMs with planar or d-dimensional tapes (see [17, 10]) and TMs whose heads can "jump" to marked cells <ref> [22] </ref>. The theorem of [14] that DLIN is properly contained in nondeterministic TM linear time (NLIN) is not known to carry over to any of these models.
References-found: 22

