URL: http://cs.wustl.edu/~mra/ms-thesis.ps
Refering-URL: http://cs.wustl.edu/~mra/publ.htm
Root-URL: 
Title: PERFORMANCE OF LEVELED COMMITMENT PROTOCOLS FOR AUTOMATED NEGOTIATION: AN EMPIRICAL STUDY  
Author: MARTIN R. ANDERSSON 
Degree: A Master's Thesis Presented by  Submitted to the School of Engineering Physics at the Royal Institute of Technology in partial fulfillment of the requirements for the degree of Master's of Science  
Affiliation: Department of Numerical Analysis and Computing Science  
Date: November 1997  
Abstract-found: 0
Intro-found: 1
Reference: [ Andersson and Sandholm, 1997 ] <author> Martin Andersson and Tuomas W Sand-holm. </author> <title> Contract types for optimal task allocation: II experimental results. </title> <type> Technical Report WUCS-97-36, </type> <institution> Washington University, Department of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: This is the same domain as the one used in a comparison of different full commitment protocols <ref> [ Andersson and Sandholm, 1997, Andersson and Sandholm, 1998 ] </ref> . A formal definition of the task allocation problem used in this study can be found in Definition 2.1.1. <p> Compared to the other full commitment protocols, this is still a very moderate amount: the M-contracts, for example, used several orders of magnitude more CPU-time <ref> [ Andersson and Sandholm, 1997, Andersson and Sandholm, 1998 ] </ref> . As the decommitment penalty was increased (Figures 4.12 and 4.13) the CPU-time usage decreased, which is partly due to the fact that fewer decom-mitment loops occur when the penalties are high.
Reference: [ Andersson and Sandholm, 1998 ] <author> Martin Andersson and Tuomas W Sand-holm. </author> <title> Contract types for satisficing task allocation: II experimental results. </title> <booktitle> In AAAI Spring Symposium Series: Satisficing Models, </booktitle> <address> Stanford University, CA, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: This is the same domain as the one used in a comparison of different full commitment protocols <ref> [ Andersson and Sandholm, 1997, Andersson and Sandholm, 1998 ] </ref> . A formal definition of the task allocation problem used in this study can be found in Definition 2.1.1. <p> Full Commitment Compared to full commitment O-contracts, leveled commitment protocols clearly improve the social welfare of the solution (Figures 4.2, 4.5, 4.6, and 4.7), if the number of agents and tasks is large enough. In <ref> [ Andersson and Sand-holm, 1997, Andersson and Sandholm, 1998 ] </ref> , the different full commitment protocols were compared; Figure 4.3 summarizes which of O-, C-, S-, or M-contracts were the best for different numbers of tasks and agents in the multiagent TSP. <p> Compared to the other full commitment protocols, this is still a very moderate amount: the M-contracts, for example, used several orders of magnitude more CPU-time <ref> [ Andersson and Sandholm, 1997, Andersson and Sandholm, 1998 ] </ref> . As the decommitment penalty was increased (Figures 4.12 and 4.13) the CPU-time usage decreased, which is partly due to the fact that fewer decom-mitment loops occur when the penalties are high.
Reference: [ Cohen, 1995 ] <author> Paul R. Cohen. </author> <title> Empirical Methods for Artificial Intelligence. </title> <publisher> MIT Press, </publisher> <year> 1995. </year>
Reference-contexts: For all numbers of agents and tasks, ratio bounds and the mean of the difference in ratio bounds were calculated in order to do statistical significance tests (paired t-tests <ref> [ Cohen, 1995 ] </ref> ). The description below concerns a given number of agents and a given number of tasks.
Reference: [ Cormen et al., 1990 ] <author> Thomas H Cormen, Charles E Leiserson, and Ronald L Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: visits all eight cities. 35 under-estimating the cost function of the remaining nodes by the minimum spanning tree of those nodes, i.e., nodes not yet on that path of the search tree, the last city of that path of the search tree, and the finish (=start) location of the salesman <ref> [ Cormen et al., 1990 ] </ref> . 4.3.2 Evaluation Criteria To be able to compare the different protocols, the ratio bound (ratio of the welfare of the obtained local optimum for a given type of contracts to the welfare of the global optimum) was used.
Reference: [ Diamond and Maskin, 1979 ] <author> Peter A Diamond and Eric Maskin. </author> <title> An equilibrium analysis of search and breach of contract, I: Steady states. </title> <journal> Bell Journal of Economics, </journal> <volume> 10 </volume> <pages> 282-316, </pages> <year> 1979. </year>
Reference-contexts: They assume that the agents expect none of their bids to be accepted, which makes the approach unsound from the perspective of game theory. In <ref> [ Diamond and Maskin, 1979 ] </ref> both agents can decommit from a contract by paying a decommitment penalty to the other party of the contract.
Reference: [ Hansson and Mayer, 1994 ] <author> Othar Hansson and Andrew Mayer. </author> <title> Dts: A decision-theoretic scheduler for space telescope applications. In Mark Fox and Monte Zweben, editors, </title> <journal> Intelligent Scheduling, </journal> <volume> chapter 13, </volume> <pages> pages 371-388. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Scheduling is also efficiently conducted by automated systems [ Sen and Durfee, 1997 ] , as in the scheduling of the Hubble space telescope <ref> [ Hansson and Mayer, 1994, Johnston and Miller, 1994 ] </ref> . 1 Contracts in automated negotiation systems consisting of self-interested agents have traditionally been binding, i.e, impossible to breach.
Reference: [ Johnston and Miller, 1994 ] <author> Mark D. Johnston and Glenn E. Miller. </author> <title> Intelligent scheduling of hubble space telescope observations. In Mark Fox and Monte Zweben, editors, </title> <journal> Intelligent Scheduling, </journal> <volume> chapter 14, </volume> <pages> pages 391-422. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Scheduling is also efficiently conducted by automated systems [ Sen and Durfee, 1997 ] , as in the scheduling of the Hubble space telescope <ref> [ Hansson and Mayer, 1994, Johnston and Miller, 1994 ] </ref> . 1 Contracts in automated negotiation systems consisting of self-interested agents have traditionally been binding, i.e, impossible to breach.
Reference: [ Kalakota and Whinston, 1996 ] <author> Ravi Kalakota and Andrew B. Whinston. </author> <title> Frontiers of Electronic Commerce. </title> <publisher> Addison-Wesley Publishing Company, Inc, </publisher> <year> 1996. </year>
Reference-contexts: With the expansion of the Internet and with novel methods for electronic payments, electronic commerce is also becoming widespread <ref> [ Kalakota and Whinston, 1996 ] </ref> . Both goods (e.g. everything from computers to airplane tickets) and information (e.g. real-time stock quotes) can already be bought electronically over the Internet.
Reference: [ Korf, 1985 ] <author> Richard E. Korf. </author> <title> Depth-first iterative-deepening: an optimal admissible tree search. </title> <journal> Artificial Intelligence, </journal> <volume> 27(1) </volume> <pages> 97-109, </pages> <year> 1985. </year>
Reference-contexts: In order to provide all the data necessary for determining the individually rational contracts used when contracting, the TSPs of all the possible combinations of cities together with any one salesmen were solved 8 . The IDA* search algorithm <ref> [ Korf, 1985 ] </ref> was used to solve these optimization TSPs. To ensure that the optimal solution was reached, an admissionable ^ h-function was used.
Reference: [ Park et al., 1996 ] <author> Sunju Park, Edmund H. Durfee, and William P. Birm--ingham. </author> <title> Advantages of strategic thinking in multiagent contracts. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems (ICMAS-95), </booktitle> <pages> pages 259-266, </pages> <address> San Francisco, CA, </address> <year> 1996. </year>
Reference-contexts: The problem gets very complicated if one also takes into account that the victim of the breach as well can get a new and better contract after the breach. The strategic thinking behind contracting and one-sided decommitment among self-interested agents has been studied in <ref> [ Park et al., 1996 ] </ref> , where the decision making mechanism is modeled as a Markov-process. They assume that the agents expect none of their bids to be accepted, which makes the approach unsound from the perspective of game theory.
Reference: [ Posner, 1977 ] <author> Richard A Posner. </author> <title> Economic Analysis of Law. Little, </title> <publisher> Brown and Company, </publisher> <address> 2nd edition, </address> <year> 1977. </year>
Reference-contexts: These leveled commitment protocols can not only improve the performance in a dynamic environment, but they can also implicitly emulate different contract type, such as, cluster-, swap- multiagent-, and OCSM-contracts. 1.1.4 Breaching of Contracts in Other Disciplines The concept of breaching contracts in the real world is analyzed in <ref> [ Posner, 1977 ] </ref> . The main ideas are that the party that breaches a contract must 4 compensate the other party for lost profit and that the penalties for breaching contracts should be set so that the the social welfare is maximized. <p> One reason for having over-compensating penalties is that one agent can make himself more trustworthy and the expected utility of the other agent will increase enough to make the contract possible <ref> [ Posner, 1977 ] </ref> . Hence, overcompensating penalties can increase the space of possible contracts. However, it would limit the space of possible decommitments. Other issues of breaching have also been studied in economics.
Reference: [ Raiffa, 1982 ] <author> H. Raiffa. </author> <title> The Art and Science of Negotiation. </title> <publisher> Harvard Univ. Press, </publisher> <address> Cambridge, Mass., </address> <year> 1982. </year>
Reference-contexts: In the case of self-interested agents, there is a need to compensate the party who is the victim of the decommitment. 1.1.1 Contingency Contracts Contingency contracts have been suggested for use between self-interested agents when they do not have knowledge (or only have probabilistic knowledge) about future events <ref> [ Raiffa, 1982 ] </ref> . In these contracts the obligations of the contract are made conditional on the future events. The payments depend on future events and the payment schedule must be negotiated together with the contract.
Reference: [ Rosenschein and Zlotkin, 1994 ] <author> Jeffrey S Rosenschein and Gilad Zlotkin. </author> <title> Rules of Encounter. </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: This definition generalizes the "Task Oriented Domain" presented by Rosen-schein and Zlotkin <ref> [ Rosenschein and Zlotkin, 1994 ] </ref> . Particularly asymmetric cost functions among agents are allowed, as well as the possibility that some agents may be unable to handle some tasks. In that case the cost of handling the task will be infinite.
Reference: [ Sandholm and Lesser, 1996 ] <author> Tuomas W Sandholm and Victor R Lesser. </author> <title> Advantages of a leveled commitment contracting protocol. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 126-133, </pages> <address> Portland, OR, </address> <month> August </month> <year> 1996. </year> <note> Extended version appeared as University of Massachusetts at Amherst, Computer Science Department technical report 95-72. </note>
Reference-contexts: it is not possible for the agents to perform a full lookahead except in small problem instances. 1.1.3 Leveled Commitment Contracts Recently, a leveled commitment protocol has been proposed that allows the agents to decommit from a contract by simply paying a decommitment penalty to the partner of the contract <ref> [ Sandholm and Lesser, 1996 ] </ref> . In that protocol, the decommitment penalties are decided at the time of contracting and the penalties do not need to be the same for the two contracting parties. <p> The concept of renegotiation is also studied. 1.2 Motivations and Contributions In order to construct negotiation systems that can accommodate changes in the environment and simplify contracting when there exists uncertain information, we can make the contracts breachable. The leveled commitment protocols <ref> [ Sandholm and Lesser, 1996 ] </ref> allow for such improvements, but to 5 be effective it is crucial that the mechanism setting decommitment penalties is correctly constructed, and that the amount is set to a proper level. <p> The penalties could be chosen freely by the agents <ref> [ Sandholm and Lesser, 1996 ] </ref> , in which case the agents would try to optimize the penalties in their favor.
Reference: [ Sandholm and Ygge, 1997 ] <author> Tuomas W Sandholm and Fredrik Ygge. </author> <title> On the gains and losses of speculation in equilibrium markets. </title> <booktitle> In Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 632-638, </pages> <address> Nagoya, Japan, </address> <month> August </month> <year> 1997. </year>
Reference: [ Sandholm, 1993 ] <author> Tuomas W Sandholm. </author> <title> An implementation of the contract net protocol based on marginal cost calculations. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 256-262, </pages> <address> Washington, D.C., </address> <month> July </month> <year> 1993. </year>
Reference-contexts: A formal definition of the task allocation problem used in this study can be found in Definition 2.1.1. The TSP was used as an example domain because it is combinatorially complex (NP-complete) and the space of task allocations contains many local optima when using hill-climbing-based contracting algorithms <ref> [ Sandholm, 1993, Sandholm, 1997a, Sandholm, 1998 ] </ref> . Another advantage of the TSP is its structural simplicity, which provides for repeatability and presentability without unnecessary contextual overhead. The agents in the system were myopically individually rational.
Reference: [ Sandholm, 1996 ] <author> Tuomas W Sandholm. </author> <title> Negotiation among Self-Interested Computationally Limited Agents. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, Amherst, </institution> <year> 1996. </year>
Reference-contexts: This contract will be referred to as an original contract [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] . Four new types of contracts have recently been introduced <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> However, as long as the number of tasks and agents are finite, it has been proven that the number of steps needed to reach the global optimum is finite <ref> [ Sandholm, 1996 ] </ref> . In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. <p> In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. No other combination of the other four single type contracts presented <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1998 ] </ref> are sufficient to reach the global optimum, if the agents are individually rational and myopic. If the agents carry out a full lookahead the original contracts are both necessary and sufficient to reach the global optimum. <p> We will refer to this type of contract as original. In order to allow for more efficient contracting, four new types of contracts have been introduced <ref> [ Sandholm, 1996 ] </ref> : cluster, swap, and multiagent-contracts, and all the above, including the original contracts, combined (OCSM-contracts). A complete discussion of these contract types, and the exact definitions of the contracts used in the simulations can be found in [ Sandholm, 1997a, Sandholm, 1998 ] . <p> However, as long as the number of tasks and agents are finite, it has been proven that the number of steps needed to reach the global optimum is finite <ref> [ Sandholm, 1996, Sandholm, 1997b, Sandholm, 1997a, Sandholm, 1998 ] </ref> . In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum.
Reference: [ Sandholm, 1997a ] <author> Tuomas W Sandholm. </author> <title> Contract types for optimal task allocation: I theoretical results. </title> <type> Technical Report WUCS-97-35, </type> <institution> Washington University, Department of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: This contract will be referred to as an original contract <ref> [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> . Four new types of contracts have recently been introduced [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> This contract will be referred to as an original contract [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] . Four new types of contracts have recently been introduced <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. No other combination of the other four single type contracts presented <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1998 ] </ref> are sufficient to reach the global optimum, if the agents are individually rational and myopic. If the agents carry out a full lookahead the original contracts are both necessary and sufficient to reach the global optimum. <p> However, to study these concepts we have chosen a task allocation domain: Definition 2.1.1 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> The task allocation problem is defined by a set of tasks T , a set of agents A, a cost function c i : 2 T ! &lt; [ f1g (which states the cost that agent i incurs by handling a particular subset of tasks), <p> A complete discussion of these contract types, and the exact definitions of the contracts used in the simulations can be found in <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . They are summarized here. 2.3.1 Original Contracts (O-contracts) The most common contracts used in contract net implementations and analysis of contracting games are contracts in which only one task is considered at a time. <p> A side payment may be paid between the agents to compensate the party that is worse off after the transfer of the task, i.e., the agent taking on the task will be paid to do so. Formally O-contracts are defined as follows: Definition 2.3.1 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> An O-contract is defined by a pair hT i;j ; i;j i, where jT i;j j = 1. <p> i gives to agent j, and i;j is the contract price that i pays to j for handling the task set. 11 If the agents carry out a full lookahead, i.e., consider the tree of all possible future contracts, these O-contracts would suffice to reach the globally optimal task allocation <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . However, this generally cannot be accomplished, except for small problem instances, because of the complexity of exploring the tree of future contracts. On the other hand, the global optimum is not necessarily reached if the agents are individually rational and myopic when contracting. <p> In fact, it is stipulate that at least two tasks are moved from one agent to another agent, potentially together with a side payment, as can be seen in the formal definition: Definition 2.3.2 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A cluster contract (C-contract) is defined by a pair hT i;j ; i;j i, where jT i;j j &gt; 1. <p> If the agents are individually rational and myopic, neither O- nor C-contracts, applied alone or together, are sufficient for reaching a global optimum in the space of task allocations <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . <p> A side payment may also be paid between the agents to compensate for any value difference between the tasks. The formal definition of an S-contract is: 12 Definition 2.3.3 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A swap contract (S-contract) is defined by a 4-tuple hT i;j ; T j;i ; i;j ; j;i i, where jT i;j j = jT j;i j = 1. <p> S-contracts, applied alone or together with one or both of the O- and C-contracts, are necessary but not sufficient for reaching the global optimum when the agents are individually rational and myopic <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . The same holds for S-contracts alone even if the agents are not myopic. <p> To differ from the cluster contract, no agent can give more than one task to the same agent, but an agent can give tasks to several different agents as well as receive tasks from several different agents. Side payments may be paid along with the tasks: Definition 2.3.4 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A multiagent contract (M-contract) is defined by a pair hT; i of jAj fi jAj matrices, where at least three elements of T are non-empty (otherwise this would be just a 2-agent contract), and for all i and j, jT i;j j 1. <p> M-contracts are also necessary but not sufficient for reaching the global optimum. That also holds for any combination of the contract types (O-, C-, S-, and M- contracts) discussed above <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . <p> That is, any number of tasks can be transferred from and to any agent or between many agents in one single contract: 13 Definition 2.3.5 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> An OCSM-contract is defined by a pair hT; i of jAj fi jAj matrices. An element T i;j is the set of tasks that agent i gives to agent j, and an element i;j is the amount that i pays to j. <p> However, as long as the number of tasks and agents are finite, it has been proven that the number of steps needed to reach the global optimum is finite <ref> [ Sandholm, 1996, Sandholm, 1997b, Sandholm, 1997a, Sandholm, 1998 ] </ref> . In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. <p> A formal definition of the task allocation problem used in this study can be found in Definition 2.1.1. The TSP was used as an example domain because it is combinatorially complex (NP-complete) and the space of task allocations contains many local optima when using hill-climbing-based contracting algorithms <ref> [ Sandholm, 1993, Sandholm, 1997a, Sandholm, 1998 ] </ref> . Another advantage of the TSP is its structural simplicity, which provides for repeatability and presentability without unnecessary contextual overhead. The agents in the system were myopically individually rational. <p> In Section 4.2.2 can the notation of the protocols be found. Section 2.3 contains a summary of the full commitment protocols used in the study. The complete description can be found in <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . 4.2.1 Leveled Commitment Protocols Five different properties of leveled commitment contracts were varied: * Decommitment strategy: the contract combination from which to de commit was chosen either so that profit was maximized, or the first profitable combination was chosen. 4 The order in which
Reference: [ Sandholm, 1997b ] <author> Tuomas W Sandholm. </author> <title> Necessary and sufficient contract types for optimal task allocation. </title> <booktitle> In Proceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> page 87, </pages> <address> Nagoya, Japan, </address> <year> 1997. </year> <note> Poster session abstracts. 58 </note>
Reference-contexts: This contract will be referred to as an original contract <ref> [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> . Four new types of contracts have recently been introduced [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> This contract will be referred to as an original contract [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] . Four new types of contracts have recently been introduced <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> However, as long as the number of tasks and agents are finite, it has been proven that the number of steps needed to reach the global optimum is finite <ref> [ Sandholm, 1996, Sandholm, 1997b, Sandholm, 1997a, Sandholm, 1998 ] </ref> . In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum.
Reference: [ Sandholm, 1998 ] <author> Tuomas W. Sandholm. </author> <title> Contract types for satisficing task allocation: I theoretical results. </title> <booktitle> In AAAI Spring Symposium Series: Satis-ficing Models, </booktitle> <address> Stanford University, CA, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: This contract will be referred to as an original contract <ref> [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> . Four new types of contracts have recently been introduced [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> This contract will be referred to as an original contract [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] . Four new types of contracts have recently been introduced <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] </ref> : cluster, swap, multiagent, and OCSM-contracts. An OCSM-contract is a combination of the other three contracts and the original contract. <p> In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. No other combination of the other four single type contracts presented <ref> [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1998 ] </ref> are sufficient to reach the global optimum, if the agents are individually rational and myopic. If the agents carry out a full lookahead the original contracts are both necessary and sufficient to reach the global optimum. <p> However, to study these concepts we have chosen a task allocation domain: Definition 2.1.1 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> The task allocation problem is defined by a set of tasks T , a set of agents A, a cost function c i : 2 T ! &lt; [ f1g (which states the cost that agent i incurs by handling a particular subset of tasks), <p> A complete discussion of these contract types, and the exact definitions of the contracts used in the simulations can be found in <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . They are summarized here. 2.3.1 Original Contracts (O-contracts) The most common contracts used in contract net implementations and analysis of contracting games are contracts in which only one task is considered at a time. <p> A side payment may be paid between the agents to compensate the party that is worse off after the transfer of the task, i.e., the agent taking on the task will be paid to do so. Formally O-contracts are defined as follows: Definition 2.3.1 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> An O-contract is defined by a pair hT i;j ; i;j i, where jT i;j j = 1. <p> i gives to agent j, and i;j is the contract price that i pays to j for handling the task set. 11 If the agents carry out a full lookahead, i.e., consider the tree of all possible future contracts, these O-contracts would suffice to reach the globally optimal task allocation <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . However, this generally cannot be accomplished, except for small problem instances, because of the complexity of exploring the tree of future contracts. On the other hand, the global optimum is not necessarily reached if the agents are individually rational and myopic when contracting. <p> In fact, it is stipulate that at least two tasks are moved from one agent to another agent, potentially together with a side payment, as can be seen in the formal definition: Definition 2.3.2 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A cluster contract (C-contract) is defined by a pair hT i;j ; i;j i, where jT i;j j &gt; 1. <p> If the agents are individually rational and myopic, neither O- nor C-contracts, applied alone or together, are sufficient for reaching a global optimum in the space of task allocations <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . <p> A side payment may also be paid between the agents to compensate for any value difference between the tasks. The formal definition of an S-contract is: 12 Definition 2.3.3 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A swap contract (S-contract) is defined by a 4-tuple hT i;j ; T j;i ; i;j ; j;i i, where jT i;j j = jT j;i j = 1. <p> S-contracts, applied alone or together with one or both of the O- and C-contracts, are necessary but not sufficient for reaching the global optimum when the agents are individually rational and myopic <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . The same holds for S-contracts alone even if the agents are not myopic. <p> To differ from the cluster contract, no agent can give more than one task to the same agent, but an agent can give tasks to several different agents as well as receive tasks from several different agents. Side payments may be paid along with the tasks: Definition 2.3.4 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> A multiagent contract (M-contract) is defined by a pair hT; i of jAj fi jAj matrices, where at least three elements of T are non-empty (otherwise this would be just a 2-agent contract), and for all i and j, jT i;j j 1. <p> M-contracts are also necessary but not sufficient for reaching the global optimum. That also holds for any combination of the contract types (O-, C-, S-, and M- contracts) discussed above <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . <p> That is, any number of tasks can be transferred from and to any agent or between many agents in one single contract: 13 Definition 2.3.5 <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> An OCSM-contract is defined by a pair hT; i of jAj fi jAj matrices. An element T i;j is the set of tasks that agent i gives to agent j, and an element i;j is the amount that i pays to j. <p> However, as long as the number of tasks and agents are finite, it has been proven that the number of steps needed to reach the global optimum is finite <ref> [ Sandholm, 1996, Sandholm, 1997b, Sandholm, 1997a, Sandholm, 1998 ] </ref> . In large-scale problem instances it is more important to find the most satisfactory solution achievable in a certain amount of time, than it is to find the global optimum. <p> A formal definition of the task allocation problem used in this study can be found in Definition 2.1.1. The TSP was used as an example domain because it is combinatorially complex (NP-complete) and the space of task allocations contains many local optima when using hill-climbing-based contracting algorithms <ref> [ Sandholm, 1993, Sandholm, 1997a, Sandholm, 1998 ] </ref> . Another advantage of the TSP is its structural simplicity, which provides for repeatability and presentability without unnecessary contextual overhead. The agents in the system were myopically individually rational. <p> In Section 4.2.2 can the notation of the protocols be found. Section 2.3 contains a summary of the full commitment protocols used in the study. The complete description can be found in <ref> [ Sandholm, 1997a, Sandholm, 1998 ] </ref> . 4.2.1 Leveled Commitment Protocols Five different properties of leveled commitment contracts were varied: * Decommitment strategy: the contract combination from which to de commit was chosen either so that profit was maximized, or the first profitable combination was chosen. 4 The order in which
Reference: [ Sen and Durfee, 1994 ] <author> Sandip Sen and Edmund Durfee. </author> <title> The role of commitment in cooperative negotiation. </title> <journal> International Journal on Intelligent Cooperative Information Systems, </journal> <volume> 3(1) </volume> <pages> 67-81, </pages> <year> 1994. </year>
Reference-contexts: Another approach in cooperative scheduling problems is to allow the agents to have tasks pending, and not have to commit to all tasks at once <ref> [ Sen and Durfee, 1994 ] </ref> . One task can be rescheduled until it receives the status of committed.
Reference: [ Sen and Durfee, 1997 ] <author> Sandip Sen and Edmund Durfee. </author> <title> A formal study of distributed meeting scheduling. Group Decision and Negotiation Support Systems, </title> <note> 1997. To appear. </note>
Reference-contexts: The amount of data communication needed to control the space vehicle is also significantly reduced and the ground crew on earth can concentrate on data analysis. Scheduling is also efficiently conducted by automated systems <ref> [ Sen and Durfee, 1997 ] </ref> , as in the scheduling of the Hubble space telescope [ Hansson and Mayer, 1994, Johnston and Miller, 1994 ] . 1 Contracts in automated negotiation systems consisting of self-interested agents have traditionally been binding, i.e, impossible to breach.
Reference: [ Sen, 1993 ] <author> Sandip Sen. </author> <title> Tradeoffs in Contract-Based Distributed Scheduling. </title> <type> PhD thesis, </type> <institution> Univ. of Michigan, </institution> <year> 1993. </year>
Reference-contexts: Several possible combinations are available. The best would be to have a simple decentralized algorithm that is observable to both agents. 2.3 Full Commitment Protocols The contract most commonly used in multiagent contracting systems only allows for one task to move from one agent to another at a time <ref> [ Smith, 1980, Sen, 1993 ] </ref> . We will refer to this type of contract as original.
Reference: [ Smith, 1980 ] <author> Reid G. Smith. </author> <title> The contract net protocol: High-level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1104-1113, </volume> <month> December </month> <year> 1980. </year>
Reference-contexts: For example, in the Contact Net Protocol <ref> [ Smith, 1980 ] </ref> , one agent can decommit from a contract without reprisals even after the other party has partly completed the task of the contract. <p> difficult to agree on such a contract and after the acceptance, it would be difficult to monitor the contract. 1.1.2 Contracts that Involve Multiple Agents or Tasks The contract used most commonly in systems which include automated contracting is a contract that can transfer only one task between two agents <ref> [ Smith, 1980 ] </ref> . This contract will be referred to as an original contract [ Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] . Four new types of contracts have recently been introduced [ Sandholm, 1996, Sandholm, 1997a, Sandholm, 1997b, Sandholm, 1998 ] : cluster, swap, multiagent, and OCSM-contracts. <p> The contract most widely used in task negotiation systems allows only for one task to be transferred between two agents <ref> [ Smith, 1980 ] </ref> . If the agents are myopic and individually rational, it may be impossible to reach the optimal solution with such contracts. <p> Several possible combinations are available. The best would be to have a simple decentralized algorithm that is observable to both agents. 2.3 Full Commitment Protocols The contract most commonly used in multiagent contracting systems only allows for one task to move from one agent to another at a time <ref> [ Smith, 1980, Sen, 1993 ] </ref> . We will refer to this type of contract as original.
Reference: [ Spier and Whinston, 1995 ] <author> Kathryn E. Spier and Andrew B. Whinston. </author> <title> On the efficiency of privately stipulated damages for breach of contract: entry barriers, </title> <journal> reliance, and renegotiation. RAND Journal of Economics, </journal> <volume> 26(2) </volume> <pages> 180-202, </pages> <year> 1995. </year>
Reference-contexts: Hence, overcompensating penalties can increase the space of possible contracts. However, it would limit the space of possible decommitments. Other issues of breaching have also been studied in economics. Decom-mitment penalties can be used as a mean to exclude new competitors from a market <ref> [ Spier and Whinston, 1995 ] </ref> . In the same time they protect relationship-specific investments, such as partly performed computations as well as investments in real world objects.
Reference: [ Ygge and Akkermans, 1996 ] <author> F. Ygge and J.M. Akkermans. </author> <title> Power load management as a computational market. </title> <booktitle> In Proceedings of the Second International Conference on Multi-Agent Systems (ICMAS-96), </booktitle> <pages> pages 393-400, </pages> <address> Keihanna Plaza, Kyoto, Japan, </address> <month> December </month> <year> 1996. </year> <month> 59 </month>
Reference-contexts: Both goods (e.g. everything from computers to airplane tickets) and information (e.g. real-time stock quotes) can already be bought electronically over the Internet. Another application of automated contracting systems is automated markets for electric power <ref> [ Sand-holm and Ygge, 1997, Ygge and Akkermans, 1996 ] </ref> which are a reality in both the United States and in Europe. Automated decision making is another area which provides people with significant support in complex situations; e.g. in medicine, finance, and engineering.
References-found: 26

