URL: http://www.cs.washington.edu/homes/shapiro/karipaper.ps
Refering-URL: http://www.cs.washington.edu/homes/shapiro/papers.html
Root-URL: 
Title: Robust Meshes from Multiple Range Maps  
Author: Kari Pulli Tom Duchamp Hugues Hoppe John McDonald Linda Shapiro Werner Stuetzle 
Address: Seattle, WA  Redmond, WA  
Affiliation: University of Washington,  Microsoft Research,  
Abstract: This paper presents a method for modeling the surface of an object from a sequence of range maps. Our method is based on a volumetric approach that produces a compact surface without boundary. It provides robustness through the use of interval analysis techniques and computational efficiency through hierarchical processing using octrees. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Chen and G. Medioni. </author> <title> Object modelling by registration of multiple range images. Image and Vision Computing, </title> <address> 10(3):145155, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: The real data set consisted of eight views of a miniature chair (Figure 3). Figure 4 (a) shows the data points result from using the method of [6]. (c) The result from our method. (registered using a slightly modified version of Chen and Medioni's method <ref> [1] </ref>) and the failed surface reconstruction that was our original motivation for this method. Even though we have cleaned the data and removed most of the outliers, we still have some noisy measurements close to the surface, especially between the spokes of the back support of the chair.
Reference: [2] <author> C. H. Chien, Y. B. Sim, and J. K. Aggarwal. </author> <title> Generation of volume/surface octree from range data. </title> <booktitle> In IEEE Conference on Computer Vision and Pattern Recognition (CVPR '88), </booktitle> <pages> pages 254260, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: Szeliski also used volumetric ideas, constructing octree bounding volumes of the object from silhouettes extracted from intensity images [12]. Octrees have also been used to generate volumes and surfaces from range data. Chien et al. <ref> [2] </ref> combine range quadtrees generated from six orthogonal viewing directions into an octree. Connolly [3] creates an octree representation by organizing the range views into quadtrees and projecting them to the octree, marking the free space along the way. <p> Conclusion We have presented a method for robustly producing a mesh from a set of range views of an object. The method combines the robustness of the volumetric approach [4] with the speed and small memory requirements of octree methods <ref> [2, 3, 12] </ref>. Our method automatically fills holes due to gaps in input data, it is robust against outliers, it allows incremental addition of range views, and it can model objects of arbitrary topological type, even if the object is thin.
Reference: [3] <author> C. I. Connolly. </author> <title> Cumulative generation of octree models from range data. </title> <booktitle> In Proc. Int. Conf. on Robotics and Automation, </booktitle> <pages> pages 2532, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: Szeliski also used volumetric ideas, constructing octree bounding volumes of the object from silhouettes extracted from intensity images [12]. Octrees have also been used to generate volumes and surfaces from range data. Chien et al. [2] combine range quadtrees generated from six orthogonal viewing directions into an octree. Connolly <ref> [3] </ref> creates an octree representation by organizing the range views into quadtrees and projecting them to the octree, marking the free space along the way. Of the previous work, Connolly's [3] is closest to ours, but it differs from ours in two important ways. <p> Chien et al. [2] combine range quadtrees generated from six orthogonal viewing directions into an octree. Connolly <ref> [3] </ref> creates an octree representation by organizing the range views into quadtrees and projecting them to the octree, marking the free space along the way. Of the previous work, Connolly's [3] is closest to ours, but it differs from ours in two important ways. Whereas we project the octree cubes to the depth maps, Connolly does the converse: he first converts the depth maps into quadtrees and then projects them to the octree. <p> Conclusion We have presented a method for robustly producing a mesh from a set of range views of an object. The method combines the robustness of the volumetric approach [4] with the speed and small memory requirements of octree methods <ref> [2, 3, 12] </ref>. Our method automatically fills holes due to gaps in input data, it is robust against outliers, it allows incremental addition of range views, and it can model objects of arbitrary topological type, even if the object is thin.
Reference: [4] <author> B. Curless and M. Levoy. </author> <title> A volumetric method for building complex models from range images. </title> <booktitle> In Proceedings of SIGGRAPH '96, </booktitle> <pages> pages 303312, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Our surface estimate will be the closed boundary between these sets. This definition allows us to create a plausible surface even at locations where we failed to obtain data <ref> [4] </ref>. The boundary is represented as a collection of vertices and triangles that can be easily combined to a mesh. <p> The mesh is iteratively fitted more closely to the data and simplified [7]. The simplified mesh is finally used as a starting point for fitting a piecewise smooth surface representation to the data [5]. Curless and Levoy <ref> [4] </ref> define a volumetric function based on an average of signed distances to each range image. Their scheme discretely evaluates this volumetric function at points on a uniform 3D grid, and uses these discrete sample values to determine a surface that approximates the ze-roset of the volumetric function. <p> We use background data to carve the space around the object more efficiently, and outliers at the object boundaries do not cause deep holes to be carved into the object. Obtaining data points from the background is very important for correctly detecting holes. Curless and Levoy <ref> [4] </ref> advocate the use of backdrops to solve this problem. However, with several types of scanners based on triangulation it is extremely difficult to get measurements through a narrow hole. That was the case in several views of the chair data set. <p> That was the case in several views of the chair data set. In such cases we can manually paint parts of the missing data to be background. 4.4. Thin objects Some methods that employ a signed surface distance functions are unable to correctly reconstruct thin objects. Curless and Levoy <ref> [4] </ref>, for example, build a distance function by storing positive distances to voxels in front of the surface and negative distances to voxels behind the surface. In addition to the distance, weights are stored to facilitate combining data from different views. <p> In (b) registration error and small cube size combine to cause a hole. 5. Conclusion We have presented a method for robustly producing a mesh from a set of range views of an object. The method combines the robustness of the volumetric approach <ref> [4] </ref> with the speed and small memory requirements of octree methods [2, 3, 12].
Reference: [5] <author> H. Hoppe, T. DeRose, T. Duchamp, M. Halstead, H. Jin, J. McDonald, J. Schweitzer, and W. Stuetzle. </author> <title> Piecewise smooth surface reconstruction. </title> <booktitle> In Proceedings of SIG-GRAPH '94, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: The mesh is iteratively fitted more closely to the data and simplified [7]. The simplified mesh is finally used as a starting point for fitting a piecewise smooth surface representation to the data <ref> [5] </ref>. Curless and Levoy [4] define a volumetric function based on an average of signed distances to each range image. <p> A more accurate and/or more concise surface representation can be easily obtained by applying the optimization algorithms described in <ref> [7, 5] </ref> to the output of our algorithm. Acknowledgments We would like to thank Prof. Patrick Flynn for the chair data sets.
Reference: [6] <author> H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and W. Stuetzle. </author> <title> Surface reconstruction from unorganized points. </title> <booktitle> In Proceedings of SIGGRAPH '92, </booktitle> <pages> pages 7178, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: The triangles are combined into a closed triangle mesh. 3. Results We have tested our method with both real and synthetic data. The real data set consisted of eight views of a miniature chair (Figure 3). Figure 4 (a) shows the data points result from using the method of <ref> [6] </ref>. (c) The result from our method. (registered using a slightly modified version of Chen and Medioni's method [1]) and the failed surface reconstruction that was our original motivation for this method. <p> Even though we have cleaned the data and removed most of the outliers, we still have some noisy measurements close to the surface, especially between the spokes of the back support of the chair. The algorithm from <ref> [6] </ref> does not use any knowledge (such as viewing directions, etc.) of the data except the points, themselves. It works quite nicely if the data does not contain outliers and uniformly samples the underlying surface. Unfortunately real data, such as this data set, often violate both of those requirements. <p> Finally, the triangulated non-overlapping subsets are connected into a single mesh. Pito [8] integrates meshes by determining where the meshes overlap, choosing the most reliable measurements, and connecting the patches using a modification of [9]. Hoppe et al. <ref> [6] </ref> start from an unorganized set of points, define a signed distance function from the point set, and extract a mesh approximating the zero set of that function. The mesh is iteratively fitted more closely to the data and simplified [7].
Reference: [7] <author> H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and W. Stuetzle. </author> <title> Mesh optimization. </title> <booktitle> In Proceedings of SIG-GRAPH '93, pages 1926, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: The left figure shows the smoothed result, while the right figure shows the result after applying Hoppe's mesh optimization algorithm <ref> [7] </ref>. subdivisions. levels nodes faces seconds 4 649 422 9.0 6 9393 5152 27.1 at 5 levels of subdivision the octree contained 2377 nodes, the boundary between the object and free space was 1372 faces (twice as many triangles), and it took an additional 6.6 seconds to process from the level <p> Hoppe et al. [6] start from an unorganized set of points, define a signed distance function from the point set, and extract a mesh approximating the zero set of that function. The mesh is iteratively fitted more closely to the data and simplified <ref> [7] </ref>. The simplified mesh is finally used as a starting point for fitting a piecewise smooth surface representation to the data [5]. Curless and Levoy [4] define a volumetric function based on an average of signed distances to each range image. <p> A more accurate and/or more concise surface representation can be easily obtained by applying the optimization algorithms described in <ref> [7, 5] </ref> to the output of our algorithm. Acknowledgments We would like to thank Prof. Patrick Flynn for the chair data sets.
Reference: [8] <author> R. Pito. </author> <title> Mesh integration based on co-measurements. </title> <booktitle> In Proc. IEEE Int. Conf. on Image Processing, Special Session on Range Image Analysis, </booktitle> <year> 1996. </year>
Reference-contexts: Soucy and Lauren-deau [11] divide the range data into subsets based on which surface regions are visible within each view. In each subset, the redundancy of the views is used to improve the surface approximation. Finally, the triangulated non-overlapping subsets are connected into a single mesh. Pito <ref> [8] </ref> integrates meshes by determining where the meshes overlap, choosing the most reliable measurements, and connecting the patches using a modification of [9].
Reference: [9] <author> M. Rutishauser, M. Stricker, and M. Trobina. </author> <title> Merging range images of arbitrarily shaped objects. </title> <booktitle> In Proc. IEEE Conf. on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 573580, </pages> <year> 1994. </year>
Reference-contexts: Discussion 4.1. Previous work A popular approach to data integration has been to directly build surfaces from the data. Turk and Levoy [14] and Rutishauser et al. <ref> [9] </ref> create a polygon mesh for each view; the individual meshes are then connected to form a single mesh covering the whole object. Soucy and Lauren-deau [11] divide the range data into subsets based on which surface regions are visible within each view. <p> In each subset, the redundancy of the views is used to improve the surface approximation. Finally, the triangulated non-overlapping subsets are connected into a single mesh. Pito [8] integrates meshes by determining where the meshes overlap, choosing the most reliable measurements, and connecting the patches using a modification of <ref> [9] </ref>. Hoppe et al. [6] start from an unorganized set of points, define a signed distance function from the point set, and extract a mesh approximating the zero set of that function. The mesh is iteratively fitted more closely to the data and simplified [7].
Reference: [10] <author> J. Snyder. </author> <title> Interval analysis for computer graphics. </title> <booktitle> In Proceedings of SIGGRAPH '92, </booktitle> <pages> pages 121130, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: But, rather than discretely evaluating the volumetric function on a set of points, our approach is based on an interval analysis technique <ref> [10] </ref>. That is, we partition space into regions (cubes) and conservatively determine for each region whether it lies completely inside, completely outside, or neither.
Reference: [11] <author> M. Soucy and D. Laurendeau. </author> <title> A dynamic integration algorithm to model surfaces from multiple range views. Machine Vision and Applications, </title> <address> 8(1):5362, </address> <year> 1995. </year>
Reference-contexts: Turk and Levoy [14] and Rutishauser et al. [9] create a polygon mesh for each view; the individual meshes are then connected to form a single mesh covering the whole object. Soucy and Lauren-deau <ref> [11] </ref> divide the range data into subsets based on which surface regions are visible within each view. In each subset, the redundancy of the views is used to improve the surface approximation. Finally, the triangulated non-overlapping subsets are connected into a single mesh.
Reference: [12] <author> R. Szeliski. </author> <title> Rapid octree construction from image sequences. CVGIP: Image Understanding, </title> <address> 58(1):2332, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Similarly, a boundary label overrides a previous inside label, in which case the cube's descendants have to be recursively tested, potentially up to the maximum subdivision level. Although both processing orders produce the same result, the simultaneous processing order is in general faster <ref> [12] </ref>. In sequential processing the silhouette of the object often creates a visual cone (centered at the sensor) that separates volumes known to be outside from those speculated to be inside. We would then have to recurse up to the finest subdivision level to accurately determine this boundary. <p> Also, it requires a significant amount of space, although this can be alleviated through run-length encoding techniques. Szeliski also used volumetric ideas, constructing octree bounding volumes of the object from silhouettes extracted from intensity images <ref> [12] </ref>. Octrees have also been used to generate volumes and surfaces from range data. Chien et al. [2] combine range quadtrees generated from six orthogonal viewing directions into an octree. <p> Conclusion We have presented a method for robustly producing a mesh from a set of range views of an object. The method combines the robustness of the volumetric approach [4] with the speed and small memory requirements of octree methods <ref> [2, 3, 12] </ref>. Our method automatically fills holes due to gaps in input data, it is robust against outliers, it allows incremental addition of range views, and it can model objects of arbitrary topological type, even if the object is thin.
Reference: [13] <author> G. Taubin. </author> <title> A signal processing approach to fair surface design. </title> <booktitle> In Proceedings of SIGGRAPH '95, </booktitle> <pages> pages 351358, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: In contrast, Figure 4 (c) shows the result of our method. 7 subdivisions. Figure 6 presents some statistics for processing the chair data set. The final mesh in Figure 4 (c) is obtained from the level 7 octree. We smooth the mesh before displaying using Taubin's method <ref> [13] </ref>. Notice that the spokes and the holes between them have been robustly recovered despite the large number of outliers and some missing data.
Reference: [14] <author> G. Turk and M. Levoy. </author> <title> Zippered polygon meshes from range images. </title> <booktitle> In Proceedings of SIGGRAPH '94, </booktitle> <pages> pages 311318, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Discussion 4.1. Previous work A popular approach to data integration has been to directly build surfaces from the data. Turk and Levoy <ref> [14] </ref> and Rutishauser et al. [9] create a polygon mesh for each view; the individual meshes are then connected to form a single mesh covering the whole object. Soucy and Lauren-deau [11] divide the range data into subsets based on which surface regions are visible within each view.
References-found: 14

