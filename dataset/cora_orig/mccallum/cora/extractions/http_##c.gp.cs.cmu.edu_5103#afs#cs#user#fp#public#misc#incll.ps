URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/fp/public/misc/incll.ps
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs/user/fp/public/misc/
Root-URL: http://www.cs.cmu.edu
Title: Natural Deduction for Intuitionistic Non-Commutative Linear Logic (NOT EVEN A DRAFT)  
Author: Frank Pfenning 
Note: Contents  
Date: October 1, 1997  
Abstract-found: 0
Intro-found: 1
Reference: [Abr90a] <author> V. Michele Abrusci. </author> <title> A comparison between Lambek syntactic calculus and intuitionis-tic linear propositional logic. </title> <journal> Zeitschrift fur Mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 36 </volume> <pages> 11-15, </pages> <year> 1990. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical [Rue97, Roo92, Abr95] and intuitionistic <ref> [BG91, Abr90a, Abr90b] </ref> variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus. <p> Except for a brief mention in <ref> [Abr90a] </ref>, we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus.
Reference: [Abr90b] <author> V. Michele Abrusci. </author> <title> Non-commutative intuitionistic linear propositional logic. </title> <journal> Zeitschrift fur Mathematische Logik und Grundlagen der Mathematik, </journal> <volume> 36 </volume> <pages> 297-318, </pages> <year> 1990. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical [Rue97, Roo92, Abr95] and intuitionistic <ref> [BG91, Abr90a, Abr90b] </ref> variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus.
Reference: [Abr95] <author> V. Michele Abrusci. </author> <title> Non-commutative proof nets. </title> <editor> In J.-Y. Girard, Y. Lafont, and L. Regnier, editors, </editor> <booktitle> Advances in Linear Logic, </booktitle> <pages> pages 271-296. </pages> <publisher> Cambridge University Press, </publisher> <year> 1995. </year> <booktitle> Proceedings of the Workshop on Linear Logic, </booktitle> <address> Ithaca, New York, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical <ref> [Rue97, Roo92, Abr95] </ref> and intuitionistic [BG91, Abr90a, Abr90b] variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus.
Reference: [BG91] <author> C. Brown and D. Gurr. </author> <title> Relations and non-commutative linear logic. </title> <type> Technical Report DAIMI PB-372, </type> <institution> Computer Science Department, Aarhus University, </institution> <month> November </month> <year> 1991. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical [Rue97, Roo92, Abr95] and intuitionistic <ref> [BG91, Abr90a, Abr90b] </ref> variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus.
Reference: [DP95] <author> Olivier Danvy and Frank Pfenning. </author> <title> The occurrence of continuation parameters in CPS terms. </title> <type> Technical Report CMU-CS-95-121, </type> <institution> Department of Computer Science, Carnegie Mellon University, </institution> <month> February </month> <year> 1995. </year> <note> REFERENCES 18 </note>
Reference-contexts: The system has applications in functional languages, logic programming languages, and logical frameworks. In functional languages, the non-commutative type system allows us to capture strong stackability properties, thereby, for example, giving a logical and general foundation for observations made about terms in continuation-passing style and monadic style <ref> [DP95, ?] </ref>. In logic programming languages, it allows us to remove some uses of cut which arise from don't-care non-determinism in languages based on linear logic such as Lolli [HM94, ?]. <p> In this section we examine an example where ordered implications can be used to capture representation invariants of data structures. Here we express an ordering property for terms which are the result of a call-by-value continuation-passing style (CPS) transformation <ref> [DP95] </ref>. We first show the syntax for terms in continuation-passing style. <p> CPS terms which are the result of a translation from direct-style terms satisfy additional invariants, both on occurrences of continuation identifiers k and the parameters of continuations v. In <ref> [DP95] </ref> we specified these ordering properties via explicit judgments. It turns out that an ordered function type provides precisely what is needed to capture such properties within the representation. A type checker for the meta-language can then verify that these properties are satisfied, since only properly ordered terms will type-check.
Reference: [HM94] <author> Joshua Hodas and Dale Miller. </author> <title> Logic programming in a fragment of intuitionistic linear logic. </title> <journal> Information and Computation, </journal> <volume> 110(2) </volume> <pages> 327-365, </pages> <year> 1994. </year> <booktitle> A preliminary version appeared in the Proceedings of the Sixth Annual IEEE Symposium on Logic in Computer Science, </booktitle> <pages> pages 32-42, </pages> <address> Amsterdam, The Netherlands, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: In logic programming languages, it allows us to remove some uses of cut which arise from don't-care non-determinism in languages based on linear logic such as Lolli <ref> [HM94, ?] </ref>. In logical frameworks, non-commutative connectives allow us drastically simplify the representations of problems involving stacks or languages such as the ones above. <p> The operational semantics for this simple language follows the so-called input/output model of Hodas and Miller <ref> [HM94] </ref>, used in the language Lolli in a slightly more complex variant [?]. The computational paradigm of logic programming calls for the bottom-up search for a derivation. Non-deterministic choices are fixed by various techniques.
Reference: [Roo92] <author> Dirk Roorda. </author> <title> Proof nets for Lambek calculus. </title> <journal> Journal of Logic and Computation, </journal> <volume> 2 </volume> <pages> 211-231, </pages> <year> 1992. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical <ref> [Rue97, Roo92, Abr95] </ref> and intuitionistic [BG91, Abr90a, Abr90b] variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus.
Reference: [Rue97] <author> Paul Ruet. </author> <title> Non-Commutative Logic and Concurrent Constraint Programming. </title> <type> PhD thesis, </type> <institution> Universite Denis Diderot, </institution> <address> Paris 7, </address> <year> 1997. </year>
Reference-contexts: We start with the simplest fragment which fixes the basic concepts and auxiliary definitions and then add other connectives and modalities incrementally. 1 2 THE IMPLICATIONAL FRAGMENT 2 Various formulations of non-commutative linear logic have been considered, both in their classical <ref> [Rue97, Roo92, Abr95] </ref> and intuitionistic [BG91, Abr90a, Abr90b] variants, including various modal operators, analyzed in particular depth in [?]. Except for a brief mention in [Abr90a], we are not aware of any systematic study of natural deduction, the Curry-Howard isomorphism, and the computational consequences of non-commutativity in the -calculus. <p> In this paper we hope to fill this gap in the literature and sketch some applications of non-commutativity in the area of logic programming, logical frameworks, and functional programming, complementing Ruet's investigation of concurrent constraint programming from the point of view of mixed classical non-commutative linear logic <ref> [Rue97] </ref>. 2 The Implicational Fragment In this first section we present the pure implicational fragment, containing only the intuitionis-tic implication (!), the linear implication (ffi), ordered right implication () and ordered left implication ().
References-found: 8

