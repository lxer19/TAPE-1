URL: http://www.cs.umd.edu/~leana/ps/tape.ps
Refering-URL: http://www.cs.umd.edu/~leana/publications.html
Root-URL: 
Email: leana@cs.ucla.edu,  
Phone: (310) 206-1803,  fax: (310) 825-2273  
Title: Analysis of Striping Techniques in Robotic Storage Libraries  
Author: Leana Golubchik Richard R. Muntz Boelter Hall Richard W. Watson 
Address: Los Angeles, CA 90024-1596  Los Angeles, CA 90024-1596  P.O. Box 808, Livermore, CA 94550  
Affiliation: UCLA Computer Science Department  UCLA Computer Science Department  Lawrence Livermore National Laboratory  Lawrence Livermore National Laboratory.  
Note: 3436 Boelter Hall, Graduate Student Office  This work was partially done while the author was a summer student at the  
Abstract: In recent years advances in computational speed have been the main focus of research and development in high performance computing. In comparison, the improvement in I/O performance has been modest. Faster processing speeds have created a need for faster I/O as well as for storage and retrieval of vast amounts of data. The technology needed to develop these mass storage systems exists today. Robotic storage libraries are vital components of such systems; however, they normally exhibit high latency and long transmission times. In this paper we analyze the performance of robotic storage libraries and study striping as a technique for improving response time. Although striping has been extensively studied in the context of disk arrays, the architectural differences between robotic storage libraries and arrays of disks suggest that a separate study of striping techniques in such libraries would be beneficial. fl Appeared in Proceedings of the 14th IEEE Symposium on Mass Storage Systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F. Baskett, K. M. Chandy, R. R. Muntz, and F. Palacios. </author> <title> Open, closed and mixed networks of queues with different classes of customers. </title> <journal> Journal of the ACM, </journal> <volume> 22(2) </volume> <pages> 248-260, </pages> <month> April </month> <year> 1975. </year>
Reference-contexts: We assume that the controllers are not the bottleneck and therefore do not represent them in our model. The queueing model of Figure 8 does not have product form <ref> [1] </ref>, which suggests that exact analytic solutions are not tractable. Therefore, either approximate solution techniques must be developed, or the queueing network must be simulated.
Reference: [2] <author> Steven Berson, Shahram Ghandeharizadeh, Richard R. Muntz, and Xiangyu Ju. </author> <title> Staggered Striping in Multimedia Information Systems. </title> <note> Submitted to ACM SIGMOD, </note> <year> 1994. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays [19, 4, 18, 13, 12], multimedia servers <ref> [2] </ref>, etc., as an approach to decreasing the response time of a robotic storage library.
Reference: [3] <author> Edited by Sanjay Ranade. </author> <title> Jukebox and Robotic Libraries for Computer Mass Storage. </title> <type> Meckler, </type> <year> 1992. </year>
Reference-contexts: Hence, jukeboxes or robotically controlled tape libraries should be components of a mass storage system <ref> [3] </ref>; these libraries can vary in size and speed but can usually store terabytes of information. 2 Such large data repositories should be prepared to handle large file transfers, for the following reasons: 1) many scientific applications request data in large chunks, and 2) large retrievals are a customary approach to
Reference: [4] <author> Peter M. Chen and David A. Patterson. </author> <title> Maximizing Performance in a Striped Disk Array. </title> <publisher> ISCA, </publisher> <pages> pages 322-331, </pages> <year> 1990. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays <ref> [19, 4, 18, 13, 12] </ref>, multimedia servers [2], etc., as an approach to decreasing the response time of a robotic storage library. <p> By choosing a relatively large stripe granule we can confine the transfer to very few drives. Striping has been researched extensively in the context of disk arrays, where most studies have considered the choice of the stripe granularity only, e.g. <ref> [4, 19, 12] </ref>, allowing the stripe width to be set accordingly, i.e., allowing the stripe width to be a function of the stripe granularity, the file size, and the number of drives in the system.
Reference: [5] <institution> Personal communication with NSL project at the Lawrence Livermore National Laboratory. </institution>
Reference-contexts: For instance, the following are typical parameters for the Exabyte120, as reported in [11], the StorageTek <ref> [5] </ref>, and the Ampex DST800 [5]. <p> For instance, the following are typical parameters for the Exabyte120, as reported in [11], the StorageTek <ref> [5] </ref>, and the Ampex DST800 [5].
Reference: [6] <author> R. A. Coyne, H. Hulen, S. Coleman, and R. Watson. </author> <title> The Emerging New Storage Management Paradigm. </title> <booktitle> In Proc. of the 12th IEEE Symposium on Mass Storage Systems, </booktitle> <address> Monterey, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Since storage requirements are growing rapidly and since networked computing has become the norm in most computer centers, there is a great demand for mass storage servers <ref> [6, 8] </ref>, an integrated system consisting of a multitude of network attached storage devices whose function it is to provide cheap and rapid access to vast amounts of data.
Reference: [7] <author> Robert A. Coyne, Harry Hulen, and Richard Watson. </author> <title> The High Performance Storage System. </title> <booktitle> In Supercomputing '93 Proceedings, </booktitle> <pages> pages 83-92, </pages> <address> Portland, Oregon, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Because today's storage systems can only move tens of megabytes of data per second, scientists spend hours retrieving and storing data required by their supercomputing applications. Current needs call for systems that can move 100 megabytes of information per second <ref> [7] </ref>, for applications such as the Global Climate Simulation [8], petroleum reservoir modeling, etc.; future data transfer needs are sure to grow up to a gigabyte of information per second. <p> Our long term goal is to use the model in making design decisions in the development of robotic storage libraries for the National Storage Laboratory (NSL) project <ref> [7] </ref>; we do not present experimental results here, as the project is still under development. The remainder of the paper is organized as follows. Section 2 briefly summarizes the background work in this area. Section 3 describes the system under consideration, and Section 4 presents the corresponding queueing model. <p> The cost of buffer space must be balanced against the resulting improvement in performance. Future work also includes applying the findings of this paper to development of the NSL project <ref> [7] </ref> and performing experimental studies on the resulting system, to verify our simulation results.
Reference: [8] <author> R. Cypher, A. Ho, and P. Messina. </author> <title> Architectural Requirements of Parallel Scientific Applications with Explicit Communications. </title> <type> Technical Report RJ 9079 (80892), </type> <institution> IBM, Almaden Research Center, </institution> <year> 1992. </year>
Reference-contexts: Because today's storage systems can only move tens of megabytes of data per second, scientists spend hours retrieving and storing data required by their supercomputing applications. Current needs call for systems that can move 100 megabytes of information per second [7], for applications such as the Global Climate Simulation <ref> [8] </ref>, petroleum reservoir modeling, etc.; future data transfer needs are sure to grow up to a gigabyte of information per second. <p> Since storage requirements are growing rapidly and since networked computing has become the norm in most computer centers, there is a great demand for mass storage servers <ref> [6, 8] </ref>, an integrated system consisting of a multitude of network attached storage devices whose function it is to provide cheap and rapid access to vast amounts of data. <p> Since we expect the mass storage system to be used by a mixture of a variety of applications (such as Global Climate Simulation or 3-D Perspective Rendering <ref> [8] </ref>) with vastly different file access patters, it is difficult to characterize the arrival process for this model.
Reference: [9] <institution> Product Description. </institution> <address> Ampex DST800 automated cartridge library. </address>
Reference-contexts: Fast but expensive devices are available to satisfy these response time requirements (for instance the drives used in the Ampex DST800 systems <ref> [9] </ref>), but in order to be economically viable, their costs should be amortized over a multitude of tapes.
Reference: [10] <author> A. L. Drapeau and R. Katz. </author> <title> Striped Tape Arrays. </title> <booktitle> In Proc. of the 12th IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 257-265, </pages> <address> Monterey, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Section 3 describes the system under consideration, and Section 4 presents the corresponding queueing model. In Section 5 we discuss simulation results, and Section 6 describes future work and presents concluding remarks. 2 Related Work Several studies, focusing on extending RAID technology to robotic storage libraries, have been made <ref> [10, 11] </ref>. In [10], the authors examine the performance of such libraries, where they consider a closed simulation model with a workload consisting of fairly small (under 1 GB) reads (75%) and writes (25%) of a constant size, within an individual simulation run. <p> In Section 5 we discuss simulation results, and Section 6 describes future work and presents concluding remarks. 2 Related Work Several studies, focusing on extending RAID technology to robotic storage libraries, have been made [10, 11]. In <ref> [10] </ref>, the authors examine the performance of such libraries, where they consider a closed simulation model with a workload consisting of fairly small (under 1 GB) reads (75%) and writes (25%) of a constant size, within an individual simulation run. The striping configuration is analogous to RAID with block interleaving.
Reference: [11] <author> A. L. Drapeau and R. Katz. </author> <title> Striping in Large Tape Libraries. </title> <booktitle> In Supercomputing '93 Proceedings, </booktitle> <pages> pages 378-387, </pages> <address> Portland, Oregon, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Section 3 describes the system under consideration, and Section 4 presents the corresponding queueing model. In Section 5 we discuss simulation results, and Section 6 describes future work and presents concluding remarks. 2 Related Work Several studies, focusing on extending RAID technology to robotic storage libraries, have been made <ref> [10, 11] </ref>. In [10], the authors examine the performance of such libraries, where they consider a closed simulation model with a workload consisting of fairly small (under 1 GB) reads (75%) and writes (25%) of a constant size, within an individual simulation run. <p> The striping configuration is analogous to RAID with block interleaving. In <ref> [11] </ref>, the authors continue their work by considering bit interleaved systems and larger (than 1 GB) requests. In this case the striping configuration is analogous to a RAID3 [19], where all files are striped across all the drives in the system. <p> For instance, the following are typical parameters for the Exabyte120, as reported in <ref> [11] </ref>, the StorageTek [5], and the Ampex DST800 [5]. <p> Due to the small number of drives, it is highly probable that a new request will not find the proper tape already loaded and will generate a tape switch. As pointed out in <ref> [11] </ref>, the Exabyte120 system takes more than 4 minutes to perform a tape switch, which is very slow and therefore undesirable. The tape switches are expected to occur frequently and are largely responsible for the high latency experienced by users of robotic storage libraries.
Reference: [12] <author> Garth A. Gibson. </author> <title> Performance and Reliability in Redundant Arrays of Inexpensive Disks. </title> <booktitle> 1989 Computer Measurement Group (CMG) Annual Conference Proceedings, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays <ref> [19, 4, 18, 13, 12] </ref>, multimedia servers [2], etc., as an approach to decreasing the response time of a robotic storage library. <p> By choosing a relatively large stripe granule we can confine the transfer to very few drives. Striping has been researched extensively in the context of disk arrays, where most studies have considered the choice of the stripe granularity only, e.g. <ref> [4, 19, 12] </ref>, allowing the stripe width to be set accordingly, i.e., allowing the stripe width to be a function of the stripe granularity, the file size, and the number of drives in the system.
Reference: [13] <author> Jim Gray, Bob Horst, and Mark Walker. </author> <title> Parity striping of disk arrays: Low-cost reliable storage with acceptable throughput. </title> <booktitle> VLDB Conference, </booktitle> <pages> pages 148-172, </pages> <year> 1990. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays <ref> [19, 4, 18, 13, 12] </ref>, multimedia servers [2], etc., as an approach to decreasing the response time of a robotic storage library.
Reference: [14] <author> Robert Hyer, Rich Ruef, and Richard Watson. </author> <title> High-Performance Data Trans--fers Using Network-Attached Peripherals at the National Storage Laboratory. </title> <booktitle> In Proc. of the 12th IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 1-10, </pages> <address> Monterey, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: For example, the National Storage Laboratory (NSL) <ref> [14] </ref>, an industry-led collaborative project currently under development at the Lawrence Livermore National Laboratory, has been organized to investigate technology for storage systems that will be the future repositories for our national information assets.
Reference: [15] <author> L. Kleinrock. </author> <title> Queueing Systems, Volume I. </title> <publisher> Wiley-Interscience, </publisher> <year> 1975. </year>
Reference-contexts: width In this model, all operations performed by the storage library (search, rewind, load, transfer, etc.) are represented by a multiple server, where the response time of a tagged customer can be represented by the following simple equation (assuming that the service time is exponentially distributed, with mean i ) <ref> [15] </ref>: R i (N i ) = W i (N i ) + i where W i (N i ) = k i i 0 N i &lt; k i Each arrival to a non-striped system requires a single server, but an arrival to a striped system requires S servers.
Reference: [16] <author> J. D. C. Little. </author> <title> A Proof of the Queueing Formula L = W . Operations Research, </title> <booktitle> 9 </booktitle> <pages> 383-387, </pages> <month> May </month> <year> 1961. </year>
Reference-contexts: Given that the two systems have the same arrival rates, intuitively, this indicates that under heavy load, the average number of customers is greater in the striped system (than in the non-striped system), since it is less efficient at getting rid of backlogs. According to Little's Result <ref> [16] </ref>, this implies that the average response time is also greater in the striped system. Moreover, the striped system saturates at a lower arrival rate than a non-striped system. For a system to be stable, it must have the characteristic that i &lt; k i i .
Reference: [17] <author> E. Mesrobian, R. R. Muntz, J. Renato, C. R. Mechoso, J. D. Farrara, and P. Stolorz. </author> <title> Extracting Spatio-Temporal Patterns from Geoscience Datasets. </title> <booktitle> Accepted to IEEE Workshop on Visualization and Machine Vision, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: mentioned in this section, we expect most of the file accesses to a robotic storage library to be large (i.e., on the order of gigabytes); for instance, a query on the data produced by a Global Climate Model simulation could easily result in a retrieval of 5GB of information 2 <ref> [17] </ref>. In this case, picking a large granule size, in order to reduce the overhead of parallel transfer for small requests, would not be prudent.
Reference: [18] <author> Richard R. Muntz and John C.S. Lui. </author> <title> Performance analysis of disk arrays under failure. </title> <booktitle> VLDB Conference, </booktitle> <pages> pages 162-173, </pages> <year> 1990. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays <ref> [19, 4, 18, 13, 12] </ref>, multimedia servers [2], etc., as an approach to decreasing the response time of a robotic storage library.
Reference: [19] <author> David A. Patterson, Garth Gibson, and Randy H. Katz. </author> <title> A Case for Redundant Arrays of Inexpensive Disks (RAID). </title> <booktitle> ACM SIGMOD Conference, </booktitle> <pages> pages 109-116, </pages> <year> 1988. </year>
Reference-contexts: As pointed out in Section 3, these can be quite time consuming. In this paper we analyze the performance of robotic storage libraries and study techniques for improving it. Specifically, we consider striping, a technique successfully used in disk arrays <ref> [19, 4, 18, 13, 12] </ref>, multimedia servers [2], etc., as an approach to decreasing the response time of a robotic storage library. <p> By choosing a relatively large stripe granule we can confine the transfer to very few drives. Striping has been researched extensively in the context of disk arrays, where most studies have considered the choice of the stripe granularity only, e.g. <ref> [4, 19, 12] </ref>, allowing the stripe width to be set accordingly, i.e., allowing the stripe width to be a function of the stripe granularity, the file size, and the number of drives in the system. <p> The striping configuration is analogous to RAID with block interleaving. In [11], the authors continue their work by considering bit interleaved systems and larger (than 1 GB) requests. In this case the striping configuration is analogous to a RAID3 <ref> [19] </ref>, where all files are striped across all the drives in the system.
References-found: 19

