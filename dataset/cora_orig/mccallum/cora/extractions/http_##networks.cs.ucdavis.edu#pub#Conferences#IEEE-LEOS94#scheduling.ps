URL: http://networks.cs.ucdavis.edu/pub/Conferences/IEEE-LEOS94/scheduling.ps
Refering-URL: http://networks.cs.ucdavis.edu/publications.html
Root-URL: http://www.cs.ucdavis.edu
Email: fborella,mukherjeg@cs.ucdavis.edu  
Title: A Hybrid WDM/TDM Local Lightwave Network that Accommodates Arbitrary Traffic Patterns through Load Balancing  
Author: Michael Borella and Biswanath Mukherjee 
Address: CA 95616  
Affiliation: Department of Computer Science University of California, Davis,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> C. A. Brackett, </author> <title> "Dense Wavelength Division Multiplexing Networks: Principle and Applications," </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> vol. 8, no. 6, </volume> <pages> pp. 948-964, </pages> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: 1 Introduction Although wavelength-division multiplexing (WDM) is theoretically capable of exploiting the huge opto-electronic bandwidth mismatch (of nearly four orders of magnitude), current device technology limits the number of WDM channels to perhaps ten (or a few tens), with each channel operating at peak electronic rates <ref> [1] </ref>. This constraint is due to a combination of factors including: limited tuning range of fast optical components (transceivers), non-uniformity in the gain spectrum of optical amplifiers, and large channel spacing to reduce crosstalk.
Reference: [2] <author> E. G. Coffman, M. R. Garey, and D. S. Johnson, </author> <title> "An Application of Bin-Packing to Multiprocessor Scheduling," </title> <journal> SIAM Journal of Computing, </journal> <volume> vol. 7, no. 1, </volume> <pages> pp. 1-17, </pages> <month> Feb. </month> <year> 1978. </year>
Reference-contexts: This can be represented graphically by a Gantt Chart (see Figure 1). While task scheduling with arbitrary W is provably NP-hard, there are many efficient approximation algorithms. The best polynomially-bounded approximation algorithm is the MULTIFIT algorithm <ref> [2] </ref>, which is based on the First-Fit Decreasing (FFD) algorithm. Given a set of tasks, their respective lengths, a number of processors, and a time bound f , FFD returns the minimum number of processors needed to schedule the tasks so that they all finish before time f . <p> This lowest value, and its associated schedule, is the output of MULTIFIT. Thus, MULTIFIT not only attempts to schedule the tasks in as small a time frame as possible, but it does so while minimizing the number of processors needed. In <ref> [2] </ref>, the authors rigorously prove that MULTIFIT is guaranteed to return a schedule with a value of f that is no more than 1.22 times greater than the optimal value of f .
Reference: [3] <author> M. R. Garey, R. L. Graham, and D. S. Johnson, </author> <title> "Performance Guarantees for Scheduling Algorithms," </title> <journal> Operations Research, </journal> <volume> vol. 26, no. 1, </volume> <pages> pp. 3-21, </pages> <address> Jan.-Feb. </address> <year> 1978. </year>
Reference-contexts: In [2], the authors rigorously prove that MULTIFIT is guaranteed to return a schedule with a value of f that is no more than 1.22 times greater than the optimal value of f . In <ref> [3] </ref>, the authors claim that the algorithm can be implemented to run in time proportional to O (N log (W N )). After running MULTIFIT, we have an assignment of receivers to channels such that the total traffic on each channel is balanced.
Reference: [4] <author> I. Rubin and Z. Zhang, </author> <title> "Message Delay Analysis for TDMA Schemes Using Contiguous-Slot Assignments," </title> <booktitle> Proc., </booktitle> <volume> ICC '88, </volume> <pages> pp. 418-422, </pages> <month> Jun. </month> <year> 1988. </year>
Reference-contexts: To study this tradeoff, we introduce the normal ization variable -. The traffic matrix is normalized as follows (where T 0 is the resultant normalization of T ): T 0 -T ij e for all i; j 3 Analysis In <ref> [4] </ref>, Rubin and Zhang derive the transform of the queue length at a node accessing a TDM channel in which it has one or more slots allocated contiguously. <p> Let Q il be the number of packets queued at node i that will be transmitted on channel l. According to <ref> [4] </ref> Q il = il + il + s il + e il il f 2 (1 il ) f s il e il N1 X exp il (w j 1) +w j where w j is the jth root of the polynomial z (s il +e il ) exp f
References-found: 4

