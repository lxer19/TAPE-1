URL: http://www.cs.pitt.edu/~soner/postscript/tr-94-17.ps
Refering-URL: http://www.cs.pitt.edu/~soner/abstracts/tr-94-17.html
Root-URL: 
Title: An Argument Forwarding Queue Machine for Improved Memory Performance  
Abstract: The Argument Forwarding Queue (AFQ) machine architecture combines the control flow paradigm of Von Neumann machines with the ability of dataflow machines to directly forward data resulting from operations to instructions that use the results. The forwarding capability is used to organize the data operands required by successive instructions into data blocks such that operands for successive instructions are stored in successive locations. By coupling the fetching of instructions with the fetching of data, we can reduce the delays caused by data cache misses. In addition, AFQ supports non-blocking loads where the requests issued to memory can be returned in any order; thus providing better tolerance to memory latency. We describe an implementation of AFQ and show how it can be extended into a superscalar machine and incorporate speculative instruction execution. A program is compiled into a combination control-data flow graph (CDFG) which is directly executed by the AFQ machine. With each instruction basic block (IBB) in the CDFG, we associate a data basic block (DBB) in the activation record, such that the operands of instructions are stored in DBB in the order they are used by the instructions in IBB. The result of an operation is forwarded directly to the appropriate position in a DBB that corresponds to an instruction in IBB that uses the data value. We outline the compilation process for this machine and illustrate how existing program optimization and transformation techniques can be used to improve the performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman. </author> <booktitle> Compilers Principles, Techniques and Tools. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1988. </year>
Reference: [2] <author> Brad Calder and Dirk Grunwald. </author> <title> Branch prediction architectures for 64-bit address space. </title> <type> Technical Report CU-CS-690-93, </type> <institution> Department of Computer Science, University of Colorado at Boulder, </institution> <year> 1993. </year>
Reference: [3] <author> David Callahan, Ken Kennedy, and Allan Portefield. </author> <title> Software prefetching. </title> <booktitle> In Proceedings of the 4th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-IV), </booktitle> <pages> pages 40-52, </pages> <year> 1991. </year> <month> 14 </month>
Reference: [4] <author> Tien-Fu Chen and Jean-Loup Baer. </author> <title> Reducing memory latency via non-blocking and prefetch--ing caches. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 51-61, </pages> <year> 1992. </year>
Reference: [5] <author> R.P. Colwell, R.P. Nix, J.J. O'Donnell, D.B. Papworth, and P.K. Rodman. </author> <title> A vliw architecture for a trace scheduling compiler. </title> <booktitle> In Proceedings of the 2nd International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-II), </booktitle> <pages> pages 180-192, </pages> <year> 1987. </year>
Reference: [6] <author> R. Cytron, J. Ferrante, B.K. Rosen, M.N. Wegman, and F.K. Zadeck. </author> <title> Efficiently computing static single assignment form and the control dependence graph. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 9 </volume> <pages> 319-345, </pages> <year> 1987. </year>
Reference: [7] <author> E. Duesterwald, R. Gupta, </author> <title> and M.L. Soffa. A practical data flow framework for array reference analysis and its application in optimizations. </title> <booktitle> In Proceedings of the ACM SIGPLAN'93 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 68-77, </pages> <year> 1994. </year>
Reference: [8] <author> P. Feautrier. </author> <title> Data flow analysis of array and scalar references. </title> <journal> International Journal of Parallel Programming, </journal> <volume> 20(1), </volume> <year> 1991. </year>
Reference: [9] <author> J.A. Fisher and S.M. Freudenberger. </author> <title> Predicting conditional branch directions from previous runs of a program. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 85-97, </pages> <year> 1992. </year>
Reference: [10] <author> Joseph A. Fisher. </author> <title> Trace scheduling: A technique for global microcode compaction. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-30(7):478-489, </volume> <month> July </month> <year> 1981. </year>
Reference: [11] <author> Anoop Gupta, John Hennessy, Kourosh Gharachorloo, Todd Mowry, and Wolf-Dietrich Weber. </author> <title> Comparative evaluation of latency reducing and tolerating techniques. </title> <booktitle> In Proceedings of the 18th International Conference on Computer Architecture, </booktitle> <pages> pages 254-263, </pages> <year> 1991. </year>
Reference: [12] <author> Richard Johnson and Keshav Pingali. </author> <title> Dependence-based program analysis. </title> <note> To appear in ACM SIGPLAN'93 PLDI, </note> <month> June </month> <year> 1993. </year>
Reference: [13] <author> N.P. Jouppi and D.W. Wall. </author> <title> Available instruction-level parallelism for superscalar and su-perpipelined machines. </title> <booktitle> In Proceedings of the 3rd International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-III), </booktitle> <pages> pages 272-282, </pages> <year> 1989. </year>
Reference: [14] <author> J. Knoop, O. Ruthing, and B. Steffen. </author> <title> Partial dead code elimination. </title> <booktitle> In Proceedings of the ACM SIGPLAN'94 Conference on Programming Language Design and Implementation, </booktitle> <year> 1994. </year>
Reference: [15] <author> Scott A. Mahlke, William Y. Chen, Wen mei W. Hwu, B. Ramakrishna Rau, and Michael S. Schlansker. </author> <title> Sentinel scheduling for VLIW and supercalar processors. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 238-247, </pages> <year> 1992. </year>
Reference: [16] <author> Todd C. Mowry, Monica S. Lam, and Anoop Gupta. </author> <title> Design and evaluation of a compiler algorithm for prefetching. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 62-73, </pages> <year> 1992. </year>
Reference: [17] <author> R. Nikhil and Arvind. </author> <booktitle> Can dataflow subsume von neumann computing? In Proceedings of the 16th International Conference on Computer Architecture, </booktitle> <pages> pages 262-272, </pages> <year> 1989. </year> <month> 15 </month>
Reference: [18] <author> S-T. Pan, K. So, and J.T. Rahmeh. </author> <title> Improving the accuracy of dynamic branch prediction using branch correlation. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 76-84, </pages> <year> 1992. </year>
Reference: [19] <author> G.M. Papadopoulos and D.E. Culler. Monsoon: </author> <title> An explicit token-store architecture. </title> <booktitle> In Proceedings of the 17th International Conference on Computer Architecture, </booktitle> <pages> pages 82-91, </pages> <year> 1990. </year>
Reference: [20] <author> Anne Rogers and Kai Li. </author> <title> Software support for speculative loads. </title> <booktitle> In Proceedings of the 5th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-V), </booktitle> <pages> pages 38-50, </pages> <year> 1992. </year>
Reference: [21] <author> M.D. Smith, M.S. Lam, and M.A. Horowitz. </author> <title> Boosting beyond static scheduling in a superscalar processor. </title> <booktitle> In Proceedings of the 17th International Conference on Computer Architecture, </booktitle> <pages> pages 344-354, </pages> <year> 1990. </year>
Reference: [22] <author> Gurindar S. Sohi and Manoj Franklin. </author> <title> High-bandwidth data memory systems for superscalar processors. </title> <booktitle> In Proceedings of the 4th International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS-IV), </booktitle> <pages> pages 53-62, </pages> <year> 1991. </year>

References-found: 22

