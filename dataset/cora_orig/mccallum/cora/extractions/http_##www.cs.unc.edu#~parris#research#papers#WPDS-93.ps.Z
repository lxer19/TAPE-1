URL: http://www.cs.unc.edu/~parris/research/papers/WPDS-93.ps.Z
Refering-URL: http://www.cs.unc.edu/~parris/research/papers/papers.html
Root-URL: http://www.cs.unc.edu
Title: A Distributed Implementation of an N-body Virtual World Simulation  
Author: Mark Parris, Carl Mueller, Jan Prins, Adam Duggan, Quan Zhou, Erik Erikson 
Address: Sitterson Hall  Chapel Hill, NC 27599-3175  
Affiliation: Department of Computer Science,  University of North Carolina  
Abstract: Meeting the challenge of real-time visualization of a complex physical simulation can require several specialized computers. The virtual-world simulation described in this paper combines a highly-parallel computer for physical simulation and a custom graphics engine for display communicating via TCP/IP over an ethernet. Application-level protocols to provide the high-throughput, low-latency communication required to support an interactive virtual world are investigated. Experiments demonstrate that a limited write-ahead protocol gives the best tradeoff between latency and throughput for this application. 
Abstract-found: 1
Intro-found: 1
Reference: [ANSI90] <institution> ANSI Standard for Information System, "HIPPI Mechanical, Electrical, and Signalling Protocol Specification (HIPPI-PH)", X3T9.3/88-023 Rev 7.2, </institution> <month> August 2, </month> <year> 1990 </year>
Reference-contexts: In this case the volume of data passed between the Y-MP and Pixel-Planes 5 requires the use of a HIPPI <ref> [ANSI90] </ref> interface to a highspeed (OC-48) network. First highspeed operation is scheduled for 1993. Compared with our application this project requires higher throughput but tolerates far more latency, since the dose-calculation does not run in real-time.
Reference: [BDH+92] <author> J. Butterworth, A. Davidson, S. Hench, and M. Olano, "3DM: </author> <title> A Three Dimensional Modeler Using a Head-Mounted Display", </title> <booktitle> Proceedings of the 1992 Symposium on Interactive Computer Graphics, </booktitle> <address> Cambridge, Massachusetts, </address> <pages> pp. 135-138. </pages>
Reference-contexts: With these the user must be able to set up, alter, control, and save a simulation scenario. We chose a system of virtual control panels and tools similar to that provided by 3dm, a 3-D modelling program <ref> [BDH+92] </ref> A number of control panels are available to allow the user to 4 perform operations such as setting parameters, selecting options, saving the current setup, and selecting different tools. These panels appear as 3-D objects in the users virtual world.
Reference: [BOB+90] <author> F. P. Brooks, Jr., M. Ouh-Young, J. J. Batter, and P. J. Kilpatrick, </author> <title> "Project GROPEHaptic Displays for Scientific Visualization", </title> <journal> Computer Graphics, </journal> <volume> Vol. 24, No. 4, </volume> <year> 1990, </year> <pages> pp. 177-185. </pages>
Reference-contexts: Instead, a general-purpose highly-parallel computer, the Maspar MP-1, is used for this component of the application. The real-time visualization of and interaction with complex simulations is a research goal of a number of related projects. In the molecular docking experiment of the GRIP project <ref> [BOB+90] </ref>, an operator viewing a display showing a drug molecule and a protein molecule tries to navigate the drug molecule to a docking site on the protein molecule.
Reference: [Com91] <author> D. E. Comer, </author> <title> Internetworking with TCP/IP, Vol. I, 2nd edition, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1991. </year>
Reference-contexts: Section 4 focuses on the high-level communication protocol for the distributed components of the application and its implementation using TCP/IP <ref> [Com91] </ref>. Section 5 summarizes the performance of the current system (a qualitative sense of the performance can be obtained from the videotape). We conclude with a discussion of other approaches to reducing latency and improving throughput for this application. 2.
Reference: [DEM+92a] <author> A. Duggan, E. Erikson, C. Mueller, M. Parris, Q. Zhou, </author> <title> "An N-body Simulation in a Virtual Universe: User's Manual", </title> <type> Technical Report, </type> <institution> Univ. of North Carolina, Chapel Hill, </institution> <year> 1992. </year>
Reference: [DEM+92b] <author> A. Duggan, E. Erikson, C. Mueller, M. Parris, Q. Zhou, </author> <title> "An N-body Simulation in a Virtual Universe: Implementation Manual", </title> <type> Technical Report, </type> <institution> Univ. of North Carolina, Chapel Hill, </institution> <year> 1992. </year>
Reference: [FPE+89] <author> H. Fuchs, J. Poulton, J. Eyles, T. Greer, J. Goldfeather, D. Ellsworth, S. Molnar, G. Turk, B. Tebbs, L Israel, </author> <title> "Pixel-Planes 5: A Heterogeneous Multiprocessor Graphics System Using Processor Enhanced Memories", </title> <journal> Computer Graphics, </journal> <volume> Vol. 23, No. 3, </volume> <year> 1989, </year> <pages> pp. 79-88. </pages>
Reference: [Gre90] <author> L. Greengard, </author> <title> "The Numerical Solution of the N-Body Problem", </title> <booktitle> Computers in Physics, </booktitle> <month> Mar. </month> <year> 1990, </year> <pages> pp 142-152. </pages>
Reference-contexts: Simulation The N-body simulation is calculated by numerical integration of the differential equations describing each body's motion due to forces accumulating from all pairwise interactions with other bodies <ref> [Gre90] </ref>. Currently only gravitational forces are calculated; the calculation of electrostatic and other forces is simple to add. The numerical integration method used is the Euler-Heun Predictor-Corrector method.
Reference: [STB91] <author> R. Singh, S. Tell, and D. Becker, </author> <title> "VISTAnet Network Interface Unit: Prototype System Specification", </title> <type> Technical Report (TR91-017), </type> <institution> Univ. of North Carolina, Chapel Hill </institution>
Reference-contexts: Compared to the application described in this paper, the docking application requires similarly low-latency but needs far less throughput. 2 The VISTAnet project <ref> [STB91] </ref> currently under development will use a remote Cray Y-MP as the simulation engine and Pixel-Planes 5 as the rendering engine in a radiation-therapy beam-placement application.
References-found: 9

