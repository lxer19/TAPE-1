URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Hayashi-PhD-91.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/qr/abstracts.html
Root-URL: http://www.cs.utexas.edu
Title: GEOMETRICAL MOTION PLANNING FOR HIGHLY REDUNDANT MANIPULATORS USING A CONTINUOUS MODEL  
Degree: APPROVED BY SUPERVISORY COMMITTEE:  
Abstract-found: 0
Intro-found: 1
Reference: [Ackley 89] <author> D. H. Ackley. </author> <title> Associative learning via inhibitory search. </title> <editor> In D. S. Touretzky, editor, </editor> <booktitle> Advances in Neural Information Processing Systems. </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1989. </year>
Reference-contexts: Applying artificial neural network techniques to learning inverse kinematics or inverse differential kinematics has been tried [Josin 88, Ackley 89, Mel 90, Barhen et al. 89, Yeung and Gekey 89], and many of these approaches deal with redundant manipulators. [Mel 90] deals with a 3 DOF planar manipulator, <ref> [Ackley 89] </ref> with a 5 DOF planar manipulator, [Barhen et al. 89] with manipulators with many degrees of freedom.
Reference: [Andeen 88] <author> G. B. Andeen, </author> <title> editor. Robot Design Handbook. </title> <publisher> McGraw-Hill Book Company, </publisher> <year> 1988. </year>
Reference-contexts: Use of various actuators has been proposed including shape memory alloys [Ikuta et al. 88, Ikuta 90] and magnetics [Shahinpoor et al. 86]. Actuators using shape memory alloys have the advantage of high force output for the size of the actuator <ref> [Andeen 88] </ref>. Magnetical actuation has the same advantage. Different architectures for the mechanical structure of continuous arms as well as different actuation systems are discussed in [Kokkinis and Wilson 88]. A new hollow link design for a tendon actuated manipulator is also investigated in the paper.
Reference: [Arden 80] <author> B. W. Arden, </author> <title> editor. What can be automated? Computer Science and Engineering Research Study. </title> <publisher> MIT Press, </publisher> <year> 1980. </year>
Reference-contexts: The overview of our approach follows in Section 1.6, where the thesis organization is also explained. Related research will be introduced in the last section. 1.1 Motivation "What can be efficiently automated?" is a fundamental question in the discipline of computer science <ref> [Arden 80] </ref>, and human's (or animal's) problem solving capabilities give us a weak existence proof for a class of problems which can be efficiently automated. The following paragraph on computer vision research [Barrow and Tenenbaum 78] expresses this kind of motivation. 1 2 GOAL A C goal.
Reference: [Arkin 89] <author> R. C. Arkin. </author> <title> Navigational path planning for a vision based mobile robot. </title> <journal> Robotica, </journal> <volume> 7, </volume> <year> 1989. </year>
Reference-contexts: also bounded by (N level fl N A fl N B fl N C ) fl (N C + N C ) fl N D = O (n 6 ) 7.3.3 Free Space Partitioning Methods Path planning based on free space partitioning into disjoint convex regions has also been studied. <ref> [Arkin 89] </ref> proposed the use of a meadow map for path planning. In this scheme, free space is decomposed into disjoint convex regions. Polygonal paths are found using A fl search in the connectivity graph of convex regions.
Reference: [Asano 85] <author> T. Asano, L. Guibas, J. Hershberger, and H. Imai. </author> <title> Visibility polygon search and euclidean shortest paths. </title> <booktitle> In Proceedings of 26th Symposium on foundations of Computer Science, </booktitle> <year> 1985. </year>
Reference-contexts: See [Sharir and Schorr 84] for a sketch of the method. The problem can be solved in O (n 2 log n) time where n is the number of obstacle corners. The algorithm has been improved to O (n 2 ) time <ref> [Asano 85, Welzl 85] </ref>. Then it is easy to transform the polygonal path to a one which is also collision free and has smooth corners (has curvature continuity).
Reference: [Barhen et al. 89] <author> J. Barhen, S. Gulati, and M. Zak. </author> <title> Neural learning of constrained nonlinear transformations. </title> <booktitle> IEEE Computer, </booktitle> <pages> pages 67-76, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: learning inverse kinematics or inverse differential kinematics has been tried [Josin 88, Ackley 89, Mel 90, Barhen et al. 89, Yeung and Gekey 89], and many of these approaches deal with redundant manipulators. [Mel 90] deals with a 3 DOF planar manipulator, [Ackley 89] with a 5 DOF planar manipulator, <ref> [Barhen et al. 89] </ref> with manipulators with many degrees of freedom.
Reference: [Barnett 38] <author> J. Barnett. </author> <title> Transition Curves for Highways. </title> <institution> United States Department of Agriculture, Bureau of Public Roads, </institution> <year> 1938. </year>
Reference-contexts: This type of path is criticized for not being smooth enough for autonomous vehicles to follow easily [Kanayama and Hartman 89, Nelson 89]. For example, spline curves are recommended over circular arcs for highway transition curves <ref> [Barnett 38] </ref>. 76 77 [Kanayama and Hartman 89] proposes using cubic spiral curves to make a smooth (i.e. continuous curvature) move from one position and orientation to another. Cubic spirals can be constructed to have zero curvature at tangent points. But they did not address the path planning problem.
Reference: [Barraquand and Latombe 89] <author> J. Barraquand, and J.-C. Latombe. </author> <title> Robot motion planning: a distributed representation approach. </title> <type> Technical Report STAN-CS-89-1257, </type> <institution> Department of Computer Science, Stanford University, </institution> <month> May </month> <year> 1989. </year> <pages> 142 143 </pages>
Reference-contexts: Their approach may have an interesting 3 from the French, Force Indusing an Artificial Repulsion from the Surface 25 application in the feedback control of motions, but it has a limited impact on path planning. <ref> [Barraquand and Latombe 89] </ref> presents another way to deal with local minima. It is called a Monte-Carlo approach. Instead of eliminating local minima, the authors try to get out of a local minimum by giving the manipulator several random motions, each of these motions having a random duration. <p> It is difficult to evaluate the range of applicability of the artificial potential field approach because of its local minima problem. Hence, we took examples in <ref> [Barraquand and Latombe 89] </ref> which show the paths found for 8 DOF and 10 DOF manipulators. Those examples seem to show the leading edge of algorithms using the artificial potential field approach.
Reference: [Barrow and Tenenbaum 78] <author> H. Barrow and J. Tenenbaum. </author> <title> Recovering intrinsic scene characteristics from images. </title> <editor> In A. Hanson and E. Riseman, editors, </editor> <booktitle> Computer Vision Systems. </booktitle> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: The following paragraph on computer vision research <ref> [Barrow and Tenenbaum 78] </ref> expresses this kind of motivation. 1 2 GOAL A C goal. A,B, and C are obstacles.
Reference: [Basu and Aloimonos 90] <author> A. Basu and J. Aloimonos. </author> <title> Approximate constrained motion planning. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference: [Brooks 83a] <author> R. A. Brooks. </author> <title> Solving the find-path problem by good representation of free space. </title> <journal> IEEE transaction on Systems, Man and Cybernetics, </journal> <volume> 13 </volume> <pages> 190-197, </pages> <year> 1983. </year>
Reference-contexts: This eliminates the requirement for an accurate global coordinate system to track the position of the robot in navigation. [Rueb and Wong 87]. 6.2.1 Free Space Decomposition Methods We need to select a primitive for free space decomposition best suited to our task: finding smooth paths. <ref> [Brooks 83a] </ref> is one of the earliest papers on free space decomposition for path planning. In his algorithm, free space is decomposed into generalized cones which are considered to be free ways. <p> Alternatively, we could decompose free space into convex polyhedra and use continuous 3-D curves with torsion to move from one polyhedron to another. 7.2.1 2 + 1 2 -D Approach Brooks proposed decomposing free space into generalized cones in order to find a path for mobile robots <ref> [Brooks 83a] </ref>. He then used the same free space representation to plan a collision free path for manipulators [Brooks 83b]. With this approach, free space in 3-D is represented by horizontal 2-D slices.
Reference: [Brooks 83b] <author> R. A. Brooks. </author> <title> Planning collision-free motions for pick-and-place operations. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 2(4), </volume> <year> 1983. </year>
Reference-contexts: He then used the same free space representation to plan a collision free path for manipulators <ref> [Brooks 83b] </ref>. With this approach, free space in 3-D is represented by horizontal 2-D slices. The free space skyward property is assumed: if a point is in free space, then all the points above it are also in free space. <p> Our hill climbing routine can be extended to solve open space problems in 3-D by changing curvature and torsion in a discrete way and by sampling typical configurations as we did with our 2-D simulator (see Section 4.5). Two approaches are feasible for path-planning in 3-D space. Brooks <ref> [Brooks 83b] </ref> used a 2 1/2-D approach for pick-and-place operations, in which 3-D space is treated as a stack of 2-D spaces (see Section 7.2.1). Most of 139 the path planning routines implemented for the 2-D simulator can be used for the 2 1/2-D approach.
Reference: [Byun 90] <author> Y.-T. Byun. </author> <title> Spatial Learning Mobile Robots with a Spatial Semantic Hierarchical Model. </title> <type> PhD thesis, </type> <institution> Department of Computer Sciences, The University of Texas at Austin, </institution> <year> 1990. </year> <note> also available as AI90-121, </note> <institution> Artificial Intelligence Laboratory, The University of Texas at Austin. </institution>
Reference-contexts: Among the interesting works in control are the artificial potential field approach [Khatib 86] and declarative rational controllers [Kohn 90], and we need further investigations. 9.4 Contributions Like some other research in robotics, notably Kuipers and Byun's research on robot spatial learning <ref> [Kuipers and Byun 88, Byun 90] </ref>, our contributions are two fold: those which are practical and engineering oriented and those which are cognitive oriented.
Reference: [Canny 88a] <author> J. F. Canny. </author> <title> The Complexity of Robot Motion Planning. </title> <publisher> The MIT Press, </publisher> <year> 1988. </year>
Reference-contexts: Later, Canny developed a single exponential algorithm called the road map algorithm <ref> [Canny 88a] </ref>. Furthermore, Canny showed the road map algorithm can be programmed to run in P SP ACE [Canny 88b], which gives its upper complexity bound: P SP ACE-easiness. <p> In practice, our algorithm is efficient, because the number of primary convex regions does not grow so rapidly [Rueb and Wong 87], and we have a strong heuristic for the search. The theoretical exact algorithm in <ref> [Canny 88a] </ref>, runs in O (n r log n) time for a r DOF manipulator (O (n 6 log n) for a 6 DOF manipulator). Although the o (n 6 log n) complexity seems favorable, the algorithm has a large constant associated which is exponential in terms of DOF.
Reference: [Canny 88b] <author> J. Canny. </author> <title> Some algebraic and geometric computations in pspace. </title> <booktitle> In Proceedings of the ACM symposium on Theory of Computing, </booktitle> <year> 1988. </year>
Reference-contexts: Later, Canny developed a single exponential algorithm called the road map algorithm [Canny 88a]. Furthermore, Canny showed the road map algorithm can be programmed to run in P SP ACE <ref> [Canny 88b] </ref>, which gives its upper complexity bound: P SP ACE-easiness. If we fix the robot system (fix DOF), we get an algorithm which runs in polynomial time in the complexity of the environment.
Reference: [Canny and Lin 90] <author> J. F. Canny and M. C. Lin. </author> <title> An opportunistic global path planner. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year> <month> 144 </month>
Reference-contexts: This method tries to solve the biggest problem in the potential field approach, the local minima problem. Unfortunately, it also loses the biggest advantage of the potential field approach, its computational feasibility. Building a configuration space map is the most costly step. The opportunistic global path planner in <ref> [Canny and Lin 90] </ref> does not build a configuration space map. In their approach, a robot moves along skeleton curves which are constructed incrementally until a path is found.
Reference: [Chazelle 84] <author> B. Chazelle. </author> <title> Convex partitions of polyhedra: A lower bound and worst-case optimal algorithm. </title> <journal> SIAM Journal of Computing, </journal> <volume> 13(3) </volume> <pages> 488-507, </pages> <month> August </month> <year> 1984. </year>
Reference-contexts: But they have the advantage of ease of extension into 3-D space. Free space decomposition for path planning is a variation of the convex decomposition problem which has been extensively studied in computational geometry [Lee and Lee 90, Ronse 89]. While most of the results are for 2-D, <ref> [Chazelle 84] </ref> presents an O (nN 3 ) algorithm which partitions a polyhedra in 3-D into O (N 2 ) convex parts where n denotes the complexity of the polyhedra and N denotes the number of reflex angles (those that are ).
Reference: [Chirikjian and Burdick 90] <author> G. S. Chirikjian and J. W. Burdick. </author> <title> An obstacle avoidance algorithm for hyper-redundant manipulators. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference-contexts: The major advantage of the continuous approach is that the difficulty of path planning decreases with the number of DOF in the jointed arm. This is 13 because the maximum curvature allowed for a path increases with the number of DOF in the jointed arm. 1.7 Related Work <ref> [Chirikjian and Burdick 90] </ref> presents an approach similar to ours. However, there are important differences between the two approaches. While we use 5 point interpolation to discretize curvature and torsion, they use a modal decomposition. <p> We believe our approach is more general in the class of curvature functions considered, and we expect this generality to be important when these methods are extended to closed-loop control. Furthermore, obstacle avoidance was accomplished by manual decomposition and selection of curvature functions in <ref> [Chirikjian and Burdick 90] </ref>. Also, the problem of bounding the error in the mapping from continuous model to jointed arm is not addressed. <p> The coordinates and the orientation of the tip along with the length of the curve is specified. By expressing the constraints using trigonometric equations, the curve which satisfies the requirements can be found. <ref> [Chirikjian and Burdick 90] </ref> presents an approach similar to ours. The authors also represent highly redundant manipulators using a continuous manipulator model. While we use spline interpolation to discretize curvature and torsion, they use modal decompositions.
Reference: [Clement and I~nigo 90] <author> W. I. Clement and R. M. I~nigo. </author> <title> Design of a snake-like manipulator. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6 </volume> <pages> 265-282, </pages> <year> 1990. </year>
Reference-contexts: Various aspects of designing and controlling highly redundant artificial manipulators have been studied. The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot [Drozda 84, Todd 86], snake-like manipulator <ref> [Clement and I~nigo 90] </ref>, 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator [Ivanescu and Badea 84]. Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. <p> Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. While many of them are so called continuous arms, highly articulated arms <ref> [Lowe 85, Clement and I~nigo 90] </ref> and snake-like mobile robots [Waldron et al. 87, Hirose and Morishima 90] have also been studied. <p> The manipulator is made up of a series of eight coil spring elements, and each spring element is actuated by three cables. Therefore, the manipulator has 24 cables pulled by 24 motors located at the base. [Taylor et al. 83] and [Morecki et al. 87] have proposed similar architectures. <ref> [Clement and I~nigo 90] </ref> attacked the weight problem of highly redundant manipulators in a very unique fashion. <p> However, for redundant manipulators there are infinitely many configurations which reach a goal point. * His heuristic is not well suited for highly redundant manipulators. One of the typical motions for a snake-like robot in <ref> [Clement and I~nigo 90] </ref> is to follow a trajectory of the tip joint by the succeeding joints. The motion is planned sequentially, but starting from the tip link. <p> This is a motion schema to represent the follow-the-leader type, snake-like motion considered in <ref> [Clement and I~nigo 90] </ref> which was introduced in Section 1.2. The trajectory is selected from those which correspond to the five typical configurations and cubic spiral curves (see Chapter 6).
Reference: [Connel 89] <author> J. H. Connel. </author> <title> A Colony Architecture for an Artificial Creature. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, </institution> <year> 1989. </year> <note> also available as AI TR-1151, </note> <institution> Artificial Intelligence Laboratory, Massachusetts Institute of Technology. </institution>
Reference-contexts: Our result, although it is obtained for highly redundant manipulators, indicates that path planning, if carried out in this fashion, can be made very efficient. Today's robot manipulators work only in well controlled and engineered environments. While there is a research robot to collect coke cans in offices <ref> [Connel 89] </ref>, housework robots are still a dream. Although we do not notice in every day life, most housework involves geometrical problem solving. They are difficult and time consuming, if we try to apply conventional approaches to the problem.
Reference: [Craig 86] <author> J. J. Craig. </author> <title> Introduction to Robotics: Mechanics and Control. </title> <publisher> Addison-Wesley, </publisher> <year> 1986. </year>
Reference-contexts: The mass of a ball joint was neglected. The dynamic simulation was done using the Newton-Euler formulation. One advantage of the Newton-Euler formulation is that its computational complexity is linear in terms of the degree of freedom of the manipulator <ref> [Craig 86, Luh et al. 80] </ref>. Trajectory planning was done in joint space. First 130 the joint angle velocities are determined. The end-point velocities in work space may then be calculated using the Jacobian matrix J .
Reference: [Drozda 84] <author> T. J. Drozda. </author> <title> The spine robot... the verdict's yet to come. </title> <booktitle> Manufacturing Engineering, </booktitle> <pages> pages 110-112, </pages> <month> September </month> <year> 1984. </year>
Reference-contexts: Various aspects of designing and controlling highly redundant artificial manipulators have been studied. The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot <ref> [Drozda 84, Todd 86] </ref>, snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator [Ivanescu and Badea 84]. <p> While many of them are so called continuous arms, highly articulated arms [Lowe 85, Clement and I~nigo 90] and snake-like mobile robots [Waldron et al. 87, Hirose and Morishima 90] have also been studied. Their applications are hard-to-reach painting jobs <ref> [Drozda 84] </ref>, passing through restricted passages such as manholes for investigation and repair in contaminated area [Hemami 85], and active endoscope [Ikuta et al. 88]. These applications are aimed at utilizing the dexterity of highly redundant manipulators to work in complex, cluttered environments. <p> Putting actuators at the remote base and controlling each element through tendons is a popular approach to the weight problem. Of such ma 6 nipulators, the most famous is probably the Swedish built Spine robot, named after its similarity to human spines <ref> [Drozda 84, Todd 86] </ref>. It was not only studied, but was also built and put on the market. It is made up of a large number of disks put together by cables, and is actuated by pulling one or more cables.
Reference: [Dubins 57] <author> L. E. Dubins. </author> <title> On curves of minimal length with a constraint on average curvature, and with prescribed initial and terminal positions and tangents. </title> <journal> American Journal of Mathematics, </journal> <volume> 79 </volume> <pages> 497-516, </pages> <year> 1957. </year>
Reference-contexts: It has been proved that the shortest path in 2-D with a maximum curvature constraint (without the curvature continuity requirement) consists of circular arcs and straight lines <ref> [Dubins 57] </ref>. 6.3.3 Making Smooth Turns using Cubic Spiral Curves [Kanayama and Hartman 89] presents a method to make a smooth move from one position and orientation to another, using cubic spiral curves . <p> Ja-cob and Canny have developed a polynomial algorithm to find a *-approximation for the shortest path [Jacobs and Canny 89]. Their algorithm is based on Du-bins' theorem <ref> [Dubins 57] </ref> which says that the shortest path in open space with the maximum curvature constraint consists of at most three pieces, each of which is either a straight line segment or an arc of a circle of radius equal to the inverse of the maximum curvature.
Reference: [Dupont and Derby 86] <author> P. E. Dupont and S. Derby. </author> <title> Planning collision free paths for redundant robots using a selective search of configuration space, </title> <booktitle> 1986. </booktitle> <pages> 145 </pages>
Reference-contexts: Gross motion is planned for its arm with occasional reorientation of the hand [Hasegawa and Terasaki 88, Lozano-Perez et al. 90]. But these techniques apply only to 6 DOF non redundant manipulators. <ref> [Dupont and Derby 86] </ref> attacked the problem of applying the configuration space approach to redundant manipulators. Their idea is to build as little as possible of a configuration space map to find a path.
Reference: [Farin 90] <author> G. Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Academic Press, Inc., </publisher> <year> 1990. </year>
Reference-contexts: A cubic spiral is a curve whose orientation (integration of the curvature) is described by a cubic function of path distance s. See figure 6.3 to see the difference between cubic spirals and circles. Other spline curves such as Bezier curves or B-spline curves (see <ref> [Farin 90] </ref>) share some of the favorable properties of cubic spiral curves. Bezier curves and B-spline curves have the convex hull property which makes it possible to fit generated curves within free space by choosing control vertices appropriately. They can be constructed to have zero curvature at end points, too.
Reference: [Faugeras 89] <author> O. D. Faugeras. </author> <title> A few steps toward artificial 3-d vision. </title> <editor> In M. Brady, editor, </editor> <booktitle> Robotics Science. </booktitle> <publisher> The MIT Press, </publisher> <year> 1989. </year>
Reference-contexts: Although the use of the hill climbing search in path planning has been limited in this thesis, it will become mandatory when we try the feedback control in the incomplete information setting. While 3-D machine vision in general is still in a phase of an ambitious research program <ref> [Faugeras 89] </ref>, Tokuta and Hughes' scanline algorithm to find primary convex regions from pixels [Tokuta and Hughes 90] can be used in 2-D experiments. The problem of dynamics is central to controlling manipulators, and we have obtained some good results for a conceptual highly articulated manipulator (Section 8.4).
Reference: [Faverjon and Tournassoud 89] <author> B. Faverjon and P. Tournassoud. </author> <title> A practical approach to motion-planning for manipulators with many degrees of freedom. </title> <booktitle> In The proceedings of the Fifth International Symposium on Robotics Research, </booktitle> <year> 1989. </year>
Reference-contexts: The complexity is exponential in terms of the number of DOF. It has been said that the approach is impractical for more than 4 DOF <ref> [Faverjon and Tournassoud 89] </ref>. 2.4 Heuristic Configuration Space Approach Because of the complexity of the algorithms associated with the configuration space approach, various heuristics have been proposed within the framework to make path planning more efficient. However, none of them seem to be applicable to highly redundant manipulators. <p> In fact, the total number of critical points which are useful in reaching goals is O (n k1 ), where n is the complexity of the environment and k is the number of DOF of the robot. An approach proposed in <ref> [Faverjon and Tournassoud 89] </ref> is aimed at 27 finding paths for manipulators with many degrees of freedom. They do not build a configuration space map, because building one is too expensive for manipulators which have more than four DOF. They divide the whole configuration space into relatively large cells. <p> Fig. 9.1 shows the comparison. It is said in <ref> [Faverjon and Tournassoud 89] </ref> that the algorithms based on the configuration space approach can not be applied to manipulators with more than four degrees of freedom, because their complexity glows exponentially in terms of DOFs.
Reference: [Fortune and Wilfong 88] <author> S. Fortune and G. Wilfong. </author> <title> Planning constraint motion. </title> <booktitle> In Proceedings of the twentieth ACM symposium on theory of computing, </booktitle> <month> May </month> <year> 1988. </year>
Reference-contexts: An easier problem, the path planning problem with the maximum curvature constraint, has been studied recently. In the problem, the curvature continuity of the path is not required, although the path is required to be in C 1 class. <ref> [Fortune and Wilfong 88] </ref> presents an exponential time procedure to decide whether such a path exist given start and end position/orientation. Ja-cob and Canny have developed a polynomial algorithm to find a *-approximation for the shortest path [Jacobs and Canny 89].
Reference: [Garey and Johnson 79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability. W.H. </title> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference-contexts: But finding a path with the desired length seems to be much harder. For example, a somewhat similar discrete problem: 75 J1 J3 J6 J8 the longest path problem for a weighted graph is proved to be NP complete <ref> [Garey and Johnson 79] </ref>. In order to turn around the problems, we assume some open space around the base to fold/unfold the manipulator. With the assumption, the length is controled by folding/unfolding the manipulator, and the trajectory can be found simply by retracting/extending the manipulator. <p> If the links of the ruler have integer lengths, the ruler folding problem is shown to be an N P -complete problem by a reduction from Partition Problem, another N P -complete problem <ref> [Garey and Johnson 79] </ref>. This problem may look too artificial. But we cannot find a path using the continuous approach, even if the length of the links in the ruler are equal and less than the gap width k.
Reference: [Goldenberg et al. 85] <author> A. A. Goldenberg, B. Benhabib, and R. G. Fenton. </author> <title> A complete generalized solution to the inverse kinematics of robots. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-1(1):14-20, </volume> <month> March </month> <year> 1985. </year>
Reference-contexts: The techniques which we discussed in Section 1.4 are examples of this approach, where objective functions are chosen so as to avoid obstacles. <ref> [Goldenberg et al. 85] </ref> generalized these techniques. They reformulated the inverse kinematics problem for redundant manipulators as a constrained nonlinear optimization problem, and used a modified Newton-Raphson method to solve a set of nonlinear equations.
Reference: [Gupta 90] <author> K. K. Gupta. </author> <title> Fast collision avoidance for manipulator arms: A sequential search strategy. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 6(5) </volume> <pages> 522-532, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Moreover, their heuristics are too weak. They make no use of the idea of utilizing redundancy for obstacle avoidance. When their heuristics do not work, they eventually have to build most of the map. <ref> [Gupta 90] </ref> proposes an interesting approach. He uses a strong heuristic to eliminate the necessity to build a high dimensional configuration space 22 map. His basic idea is to plan the motion of each link sequentially, starting from the base link.
Reference: [Hasegawa and Terasaki 88] <author> T. Hasegawa and H. Terasaki. </author> <title> Collision avoidance: Divide-and-conquer approach by space characterization and intermediate goals. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 18(3) </volume> <pages> 337-347, </pages> <month> May/June </month> <year> 1988. </year> <month> 146 </month>
Reference-contexts: A common practice is to decompose a manipulator in two parts: its 2 Exact algorithms such as Canny's road map algorithm were never implemented. 21 arm and its hand. Gross motion is planned for its arm with occasional reorientation of the hand <ref> [Hasegawa and Terasaki 88, Lozano-Perez et al. 90] </ref>. But these techniques apply only to 6 DOF non redundant manipulators. [Dupont and Derby 86] attacked the problem of applying the configuration space approach to redundant manipulators.
Reference: [Hemami 85] <author> A. Hemami. </author> <title> Studies on a light weight and flexible robot manipulator. </title> <journal> Robotics, </journal> <volume> 1 </volume> <pages> 27-36, </pages> <year> 1985. </year>
Reference-contexts: Their applications are hard-to-reach painting jobs [Drozda 84], passing through restricted passages such as manholes for investigation and repair in contaminated area <ref> [Hemami 85] </ref>, and active endoscope [Ikuta et al. 88]. These applications are aimed at utilizing the dexterity of highly redundant manipulators to work in complex, cluttered environments. <p> Weight is the central problem in the mechanical design of the highly redundant manipulators because such manipulators consist of many elements, each of which needs an actuator and a sensor <ref> [Hemami 85] </ref>. Use of various actuators has been proposed including shape memory alloys [Ikuta et al. 88, Ikuta 90] and magnetics [Shahinpoor et al. 86]. Actuators using shape memory alloys have the advantage of high force output for the size of the actuator [Andeen 88].
Reference: [Hemami 90] <author> A. Hemami. </author> <title> Joint velocity uniformity in redundant manipulators. </title> <journal> Robotica, </journal> <volume> 8 </volume> <pages> 69-72, </pages> <year> 1990. </year>
Reference-contexts: Extra degrees of freedom can be used to perform other tasks such as singularity avoidance and minimization of joint displacement. In Fig. 1.2, the extra degrees of freedom is used to reach a point while avoiding obstacles. See <ref> [Hemami 90] </ref> for a list of such tasks. Our arm itself has seven DOF, three at the shoulder, two at the elbow, and two at the wrist, and hence is redundant. We can reconfigure our arms without changing the hand position and orientation.
Reference: [Hirose et al. 83] <author> S. Hirose, T. Kado, and Y. Umetani. </author> <title> Tensor actuated elastic manipulator. </title> <booktitle> In Proceedings of the Sixth World Congress on Theory of Machines and mechanisms, </booktitle> <year> 1983. </year>
Reference-contexts: Various aspects of designing and controlling highly redundant artificial manipulators have been studied. The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot [Drozda 84, Todd 86], snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator <ref> [Hirose et al. 83] </ref>, elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator [Ivanescu and Badea 84]. Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. <p> Although the robot got lots of attention from prospective buyers, the business has failed because of mechanical problems associated with the tendon technology. A tensor actuated elastic manipulator was built <ref> [Hirose et al. 83] </ref>. The manipulator is made up of a series of eight coil spring elements, and each spring element is actuated by three cables. <p> In literature on highly redundant manipulators, mechanical design of such manipulators is the main subject and some manipulators were actually built (Section 1.2). While designs using other exotic actuators are also proposed, tendon driven actuator systems seem to be popular. The tensor actuated elastic manipulator design in <ref> [Hirose et al. 83] </ref> is such a manipulator. In their paper, the design for the manipulator is made explicit with details.
Reference: [Hirose and Morishima 90] <author> S. Hirose and A. Morishima. </author> <title> Design and control of a mobile robot with an articulated body. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 9(2) </volume> <pages> 99-114, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: on highly redundant manipulators and continuous arms in the robotics community has been motivated by animal morphology. [Wilson 83] studied the animal structures and motions of jumping spiders, ne-merteans, and squid from the viewpoint of robotic design. [Horn 75] developed the kinematics, statics and dynamics of an eel-like locomotion system. <ref> [Hirose and Morishima 90] </ref> says One of the authors (Hirose) first began investigating the importance of the shape of the articulated body by studying the biomechanics of snakes. <p> Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. While many of them are so called continuous arms, highly articulated arms [Lowe 85, Clement and I~nigo 90] and snake-like mobile robots <ref> [Waldron et al. 87, Hirose and Morishima 90] </ref> have also been studied. Their applications are hard-to-reach painting jobs [Drozda 84], passing through restricted passages such as manholes for investigation and repair in contaminated area [Hemami 85], and active endoscope [Ikuta et al. 88].
Reference: [Hopcroft et al. 85] <author> J. Hopcroft, D. Joseph, and S. Whitesides. </author> <title> On the movement of robot arms in 2-dimensional bounded regions. </title> <journal> SIAM Journal on Computing, </journal> <volume> 14(2), </volume> <month> May </month> <year> 1985. </year>
Reference-contexts: Furthermore, the joint rotations are limited by the maximum curvature constraint on the path searched for. 9.2.4 Ruler Folding Problem Our algorithm fails when there is not a path to satisfy above restrictions. Consider the following problem taken from <ref> [Hopcroft et al. 85] </ref>. The jointed arm consists of a ruler and a chain of short links (Fig. 9.2).
Reference: [Horn 75] <author> B. K. P. Horn. </author> <title> The fundamental eel equations. </title> <type> Technical Report Working paper No. 116, </type> <institution> Artificial Intelligence Laboratory, Mas-sachusetts Institute of Technology, </institution> <month> December </month> <year> 1975. </year>
Reference-contexts: animals have highly redundant bodies and appendages, and it is evident that research on highly redundant manipulators and continuous arms in the robotics community has been motivated by animal morphology. [Wilson 83] studied the animal structures and motions of jumping spiders, ne-merteans, and squid from the viewpoint of robotic design. <ref> [Horn 75] </ref> developed the kinematics, statics and dynamics of an eel-like locomotion system. [Hirose and Morishima 90] says One of the authors (Hirose) first began investigating the importance of the shape of the articulated body by studying the biomechanics of snakes.
Reference: [Horn 83] <author> B. K. P. Horn. </author> <title> The curve of least energy. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 9(4) </volume> <pages> 441-460, </pages> <month> December </month> <year> 1983. </year>
Reference-contexts: Their approach to designing curves through curvature certainly has some appeal to us. But further investigation is necessary in order to extend their technique to the inverse kinematics problem, because curve length cannot generally be specified. Also interesting is the research on constructing curves which are particularly smooth <ref> [Horn 83, Kallay 87, Jou and Han 90] </ref>. When the ends of a thin elastic beam are clamped, it will assume a shape which minimizes the 60 elastic energy: E = 0 Curves which satisfy (4.8) are called minimum energy splines. <p> The problem of finding a minimum energy spline given its boundary conditions can be seen as a variation of the open space problems. It has been suggested that humans use this class of curves when they try to complete a partially specified contour map <ref> [Horn 83] </ref>. [Jou and Han 90] discusses the planar problem, where we have angle constraints at both ends, and a prescribed length for the spline curve.
Reference: [Ikuta 90] <author> K. Ikuta. </author> <title> Micro/miniature shape memory alloy actuator. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference-contexts: Weight is the central problem in the mechanical design of the highly redundant manipulators because such manipulators consist of many elements, each of which needs an actuator and a sensor [Hemami 85]. Use of various actuators has been proposed including shape memory alloys <ref> [Ikuta et al. 88, Ikuta 90] </ref> and magnetics [Shahinpoor et al. 86]. Actuators using shape memory alloys have the advantage of high force output for the size of the actuator [Andeen 88]. Magnetical actuation has the same advantage.
Reference: [Ikuta et al. 88] <author> K. Ikuta, M. Tsukamoto, and S. Hirose. </author> <title> Shape memory alloy servo actuator system with electric resistance feedback and application 147 for active endoscope. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1988. </year>
Reference-contexts: Their applications are hard-to-reach painting jobs [Drozda 84], passing through restricted passages such as manholes for investigation and repair in contaminated area [Hemami 85], and active endoscope <ref> [Ikuta et al. 88] </ref>. These applications are aimed at utilizing the dexterity of highly redundant manipulators to work in complex, cluttered environments. <p> Weight is the central problem in the mechanical design of the highly redundant manipulators because such manipulators consist of many elements, each of which needs an actuator and a sensor [Hemami 85]. Use of various actuators has been proposed including shape memory alloys <ref> [Ikuta et al. 88, Ikuta 90] </ref> and magnetics [Shahinpoor et al. 86]. Actuators using shape memory alloys have the advantage of high force output for the size of the actuator [Andeen 88]. Magnetical actuation has the same advantage.
Reference: [Ivanescu and Badea 84] <author> M. Ivanescu and I. Badea. </author> <title> Dynamic control for a tentacle manipulator. </title> <booktitle> In Proceedings of the International Conference on Robotics and Factories of the Future, </booktitle> <year> 1984. </year>
Reference-contexts: The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot [Drozda 84, Todd 86], snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator <ref> [Ivanescu and Badea 84] </ref>. Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90].
Reference: [Jacak 89] <author> W. Jacak. </author> <title> A discrete kinematic model of robots in the cartesian space. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 5(4), </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: It was assumed that the nearest point and its desirable velocity which directs the point away from the obstacle surface can be obtained as a function of time. In these three lines of research, the end effector trajectory is given. In <ref> [Jacak 89] </ref>, the use of existing path planning methods for a point robot to 9 sub-goal 1 6 4 2 goal base goal obtain an end effector trajectory is proposed.
Reference: [Jacobs and Canny 89] <author> P. Jacobs and J. Canny. </author> <title> Planning smooth paths for mobile robots. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: Ja-cob and Canny have developed a polynomial algorithm to find a *-approximation for the shortest path <ref> [Jacobs and Canny 89] </ref>. <p> Essentially, we have transformed the problem of planning paths for highly redundant manipulators to the problem of finding smooth paths for point robots. The smooth path planning problem is a new subject in the field (see <ref> [Jacobs and Canny 89] </ref> for a related problem), and we expect improvements on the algorithm by using more computational geometry. The validity for the continuous manipulator model is also supported by an extensive simulation we performed.
Reference: [Josin 88] <author> G. Josin. </author> <title> Neural-space generalization of a topological transformation. </title> <journal> Biological Cybernetics, </journal> <volume> 59 </volume> <pages> 283-290, </pages> <year> 1988. </year>
Reference: [Jou and Han 90] <author> E. D. Jou and W. Han. </author> <title> Minimal energy splines: I. plane curves with angle constraints. </title> <type> Technical Report UMIACS-TR-90-119, </type> <institution> CS-TR-2533, Computer Science Center, university of Maryland, </institution> <month> September </month> <year> 1990. </year>
Reference-contexts: Their approach to designing curves through curvature certainly has some appeal to us. But further investigation is necessary in order to extend their technique to the inverse kinematics problem, because curve length cannot generally be specified. Also interesting is the research on constructing curves which are particularly smooth <ref> [Horn 83, Kallay 87, Jou and Han 90] </ref>. When the ends of a thin elastic beam are clamped, it will assume a shape which minimizes the 60 elastic energy: E = 0 Curves which satisfy (4.8) are called minimum energy splines. <p> The problem of finding a minimum energy spline given its boundary conditions can be seen as a variation of the open space problems. It has been suggested that humans use this class of curves when they try to complete a partially specified contour map [Horn 83]. <ref> [Jou and Han 90] </ref> discusses the planar problem, where we have angle constraints at both ends, and a prescribed length for the spline curve.
Reference: [Habib and Yuta 89] <author> M. k. Habib and S. Yuta. </author> <title> Structuring free space as prime rectangular areas (pras) with on-line path planning and navigation for mobile robots. </title> <booktitle> In Proceedings of IEEE International Conference on Systems, Man, and Cybernetics, </booktitle> <year> 1989. </year>
Reference-contexts: Use of primary convex regions to represent free space has renewed much attention recently. An algorithm to detect primary convex regions from an input image was presented in [Tokuta and Hughes 90]. <ref> [Habib and Yuta 89] </ref> experimented with Singh and Wagh's method using an actual mobile robot and reported good results. 6.2.3 Hypergraph Method for Finding PCRs We have implemented the algorithm in [Rueb and Wong 87] to find PCRs given obstacles.
Reference: [Kallay 87] <author> M. Kallay. </author> <title> Method to approximate the space curve of least energy and prescribed length. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 19(2) </volume> <pages> 73-76, </pages> <month> March </month> <year> 1987. </year> <month> 148 </month>
Reference-contexts: Their approach to designing curves through curvature certainly has some appeal to us. But further investigation is necessary in order to extend their technique to the inverse kinematics problem, because curve length cannot generally be specified. Also interesting is the research on constructing curves which are particularly smooth <ref> [Horn 83, Kallay 87, Jou and Han 90] </ref>. When the ends of a thin elastic beam are clamped, it will assume a shape which minimizes the 60 elastic energy: E = 0 Curves which satisfy (4.8) are called minimum energy splines. <p> The existence of such splines when the distance between the two end points is within prescribed length is proved, and an iterative algorithm to solve the constraint minimization problem is presented. <ref> [Kallay 87] </ref> presents an algorithm for the same problem in 3-D. 4.5 Summary of the Chapter In Section 4.2 and 4.3, we have solved the open space problems in 2-D. In the previous section, we have seen many other methods for inverse kinematics for redundant manipulators.
Reference: [Kanayama and Hartman 89] <author> Y. Kanayama and B. I. Hartman. </author> <title> Smooth local path planning for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: The algorithm has been improved to O (n 2 ) time [Asano 85, Welzl 85]. Then it is easy to transform the polygonal path to a one which is also collision free and has smooth corners (has curvature continuity). We can apply the method in <ref> [Kanayama and Hartman 89] </ref> which uses cubic spiral curves for 71 collision free trajectory evaluation mapping error subgoals current configuration goal Dynamic Simulation Jointed arm trajectory schemas Open Space Problem (four variations) Continuous Manipulator hill-climbing curvature types free convex regions decomposition path planning obstacles lines has been explained so far. 72 <p> However, curvature discontinuity exists at every tangent point in these paths, because circular arcs have constant curvature equal to the inverse of their radius and straight lines have zero curvature. This type of path is criticized for not being smooth enough for autonomous vehicles to follow easily <ref> [Kanayama and Hartman 89, Nelson 89] </ref>. For example, spline curves are recommended over circular arcs for highway transition curves [Barnett 38]. 76 77 [Kanayama and Hartman 89] proposes using cubic spiral curves to make a smooth (i.e. continuous curvature) move from one position and orientation to another. <p> This type of path is criticized for not being smooth enough for autonomous vehicles to follow easily [Kanayama and Hartman 89, Nelson 89]. For example, spline curves are recommended over circular arcs for highway transition curves [Barnett 38]. 76 77 <ref> [Kanayama and Hartman 89] </ref> proposes using cubic spiral curves to make a smooth (i.e. continuous curvature) move from one position and orientation to another. Cubic spirals can be constructed to have zero curvature at tangent points. But they did not address the path planning problem. <p> They can be constructed to have zero curvature at end points, too. However, the following properties of cubic spiral curves make them especially suitable for the mobile robot navigation problem. 83 * Cubic spiral curves are particularly smooth in the sense that they mini mize the following cost <ref> [Kanayama and Hartman 89] </ref>. <p> It has been proved that the shortest path in 2-D with a maximum curvature constraint (without the curvature continuity requirement) consists of circular arcs and straight lines [Dubins 57]. 6.3.3 Making Smooth Turns using Cubic Spiral Curves <ref> [Kanayama and Hartman 89] </ref> presents a method to make a smooth move from one position and orientation to another, using cubic spiral curves . <p> After the path planning is finished, the globally optimum path obtained can be converted to a sequence of subgoals (a pair of position and orientation, identifying the start and end points of a turn), and then passed to a local path following module (such as the one referred in <ref> [Kanayama and Hartman 89, Nelson 89] </ref>). Because of the smoothness of the path, it will be much easier to follow the path. 91 (2-a) (2-b) (2-c) (2-d) (4-a) (4-b) (4-c) (4-d) (a)/(b) a single turning point using Euclidean/road-map distance, (c)/(d) multiple turning points using Euclidean/road-map distance.
Reference: [Khatib 86] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> The International Journal of Robotic Research, </journal> <volume> 5(1) </volume> <pages> 90-98, </pages> <year> 1986. </year>
Reference-contexts: However, path planning algorithms based on the configuration space approach [Lozano-Perez 83b] are intractable in terms of the number of DOF, and thus are not suited to path planning for highly redundant manipulators. Algorithms based on the artificial potential field approach <ref> [Khatib 86] </ref> are more computationally feasible, but have a drawback inherent in their use of local optimization techniques: the local minima problem. Path planning is an important component of task level programming and has been studied extensively. <p> The motion is planned sequentially, but starting from the tip link. This is in reverse order to Gupta's planning sequence. 2.5 Artificial Potential Field Approach Another popular approach for path planning is called the artificial potential field approach. It was originally proposed by Khatib <ref> [Khatib 86] </ref>. The approach is based upon creating an artificial potential field in the task space. The potential field is generated by adding an attractive force toward the goal point and repulsive forces from obstacles. <p> This will be an expensive scheme. What if we change our current task of reducing mapping errors to the original task: reaching the goal while avoiding obstacles ? We could use the artificial potential field <ref> [Khatib 86] </ref> to avoid obstacles. It may be possible to solve the local minima problem associated with the potential field approach by introducing appropriate subgoals (intermediate configurations) taken from the continuous solution. <p> At this moment, however, we do not have a clear idea what a control algorithm is like for highly redundant manipulators. Among the interesting works in control are the artificial potential field approach <ref> [Khatib 86] </ref> and declarative rational controllers [Kohn 90], and we need further investigations. 9.4 Contributions Like some other research in robotics, notably Kuipers and Byun's research on robot spatial learning [Kuipers and Byun 88, Byun 90], our contributions are two fold: those which are practical and engineering oriented and those which
Reference: [Khosla and Volpe 88] <author> P. Khosla and R. Volpe. </author> <title> Superquadratic artificial potentials for obstacle avoidance and approach. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1988. </year>
Reference-contexts: In an attempt to build a repulsive potential field around an obstacle without generating a certain class of local minima, <ref> [Khosla and Volpe 88] </ref> pro 24 posed to use superquadratic artificial potential functions in lieu of the FIRAS 3 potential functions proposed by Khatib.
Reference: [Kircanski and Vukobratovic 86] <author> M. Kircanski and M. Vukobratovic. </author> <title> Contribution to control of redundant robotic manipulators in an environment with obstacles. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 5(4) </volume> <pages> 112-119, </pages> <year> 1986. </year>
Reference-contexts: The first subtask is to follow an end effector trajectory, and the second subtask is to come close to a taught arm posture as much as possible. The arm posture should approximate the configuration which avoids obstacles. In <ref> [Kircanski and Vukobratovic 86] </ref>, instead of teaching a desirable arm posture to avoid obstacles, the minimum distance between the manipulator and obstacles and the point on the manipulator nearest to obstacles are assumed to be obtained by the sensor system.
Reference: [Kohn 90] <author> W. Kohn. </author> <title> Declarative multiplexed rational controllers. </title> <booktitle> In Proceedings of IEEE International Symposium on Intelligent Control, </booktitle> <year> 1990. </year>
Reference-contexts: At this moment, however, we do not have a clear idea what a control algorithm is like for highly redundant manipulators. Among the interesting works in control are the artificial potential field approach [Khatib 86] and declarative rational controllers <ref> [Kohn 90] </ref>, and we need further investigations. 9.4 Contributions Like some other research in robotics, notably Kuipers and Byun's research on robot spatial learning [Kuipers and Byun 88, Byun 90], our contributions are two fold: those which are practical and engineering oriented and those which are cognitive oriented.
Reference: [Kokkinis and Wilson 88] <author> T. Kokkinis and J. D. Wilson. </author> <title> Design of continuous robotic arms. </title> <editor> In M. Jamshidi, J. Y. S. Luh, H. Seraji, and G. P. Starr, editors, </editor> <booktitle> Robotics and Manufacturing. </booktitle> <publisher> ASME Press, </publisher> <year> 1988. </year>
Reference-contexts: Actuators using shape memory alloys have the advantage of high force output for the size of the actuator [Andeen 88]. Magnetical actuation has the same advantage. Different architectures for the mechanical structure of continuous arms as well as different actuation systems are discussed in <ref> [Kokkinis and Wilson 88] </ref>. A new hollow link design for a tendon actuated manipulator is also investigated in the paper. Putting actuators at the remote base and controlling each element through tendons is a popular approach to the weight problem. <p> Retracting the whole and reaching from the base is not possible for fixed length manipulators. [Maximum Curvature] In the proposition, we did not put any limitation on curvature values. Kokkinis and Wilson studied the hardware architectures of continuous robotic arms in <ref> [Kokkinis and Wilson 88] </ref>, and found that the maximum curvature is one of the most important performance measures.
Reference: [Krogh and Thorpe 86] <author> B. H. Krogh and C. E. Thorpe. </author> <title> Integrated path planning and dynamic steering control for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1986. </year>
Reference-contexts: In the hybrid approach, both global and local approaches are combined. The approach was taken in the mobile robot domain <ref> [Krogh and Thorpe 86] </ref>, where a global planner finds subgoals which are then traced by a local maneuver. The difficulty of this approach lies in distinguishing the global level from the local level. 26 [Warren 89] presents a hybrid approach in a manipulator domain.
Reference: [Kuan et al. 85] <author> D. T. Kuan, J. C. Zamiska, and R. A. Brooks. </author> <title> Natural decomposition of free space for path planning. </title> <booktitle> In Proceedings of IEEE 149 International Conference on Robotics and Automation, </booktitle> <year> 1985. </year>
Reference-contexts: Moreover, since generalized cones are not convex regions in a strict sense, it follows that if we change the position of a corner within an intersection of two cones, the located line segment is not guaranteed to be within the cone. <ref> [Kuan et al. 85] </ref> decomposes free space into two sets of disjoint polygons: passage regions and channel regions. Passage regions correspond to open space (rooms, squares,..), and channel regions to paths connecting open space. Passage regions may be good candidates for smooth turns. <p> Since each edge of a primary convex region covers some portion of an obstacle wall, the region seems to be a natural description of the open space bounded by obstacles. In addition, PCR can be seen as an extension of the passage regions described in <ref> [Kuan et al. 85] </ref>. In fact, for any passage region, there exists some primary convex region which contains the passage region.
Reference: [Kuipers and Byun 88] <author> B. Kuipers and Y.-T. Byun. </author> <title> A robust, qualitative method for robot spatial learning. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <year> 1988. </year>
Reference-contexts: Among the interesting works in control are the artificial potential field approach [Khatib 86] and declarative rational controllers [Kohn 90], and we need further investigations. 9.4 Contributions Like some other research in robotics, notably Kuipers and Byun's research on robot spatial learning <ref> [Kuipers and Byun 88, Byun 90] </ref>, our contributions are two fold: those which are practical and engineering oriented and those which are cognitive oriented.
Reference: [Lee and Lee 90] <author> S. Lee and J. M. Lee. </author> <title> Multiple task point control of a redundant manipulator. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year>
Reference-contexts: Gross motion planning can be done for the arm neglecting the hand if the size of the hand is much smaller than the that of the arm. 3 A point where we divide a segment in decomposition is called a decomposition point. 37 <ref> [Lee and Lee 90] </ref> proposed a method to control a redundant manipulator by decomposing it into serially linked non-redundant manipulators. The problem of redundancy resolution is transformed into decomposing an end effector velocity given as a task into velocity component assigned to the tips of sub-manipulators called task points. <p> But they have the advantage of ease of extension into 3-D space. Free space decomposition for path planning is a variation of the convex decomposition problem which has been extensively studied in computational geometry <ref> [Lee and Lee 90, Ronse 89] </ref>.
Reference: [Leven and Sharir 87] <author> D. Leven and M. Sharir. </author> <title> An efficient and simple motion planning algorithm for a ladder moving in two-dimensional space amidst polygonal barriers. </title> <journal> Journal of Algorithms, </journal> <volume> 8, </volume> <year> 1987. </year>
Reference-contexts: In this sense, the problem is not discrete. In [Sharir and Schorr 84], a doubly exponential procedure is presented for solving the discrete subproblem of determining the sequence of obstacle edges through which the shortest path passes. The projection method <ref> [Leven and Sharir 87] </ref> leads to an O (n 2 logn) algorithm for a line segment moving in 2-D space. The retraction method [O'Dunlaing and Yap 85] leads to an O (n log n) algorithm for a disc moving in 2-D space.
Reference: [Lowe 85] <author> D. B. Lowe. </author> <title> Inspection and repair of nuclear plant. </title> <booktitle> In Handbook of industrial robotics. </booktitle> <publisher> Wiley, </publisher> <year> 1985. </year>
Reference-contexts: Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. While many of them are so called continuous arms, highly articulated arms <ref> [Lowe 85, Clement and I~nigo 90] </ref> and snake-like mobile robots [Waldron et al. 87, Hirose and Morishima 90] have also been studied.
Reference: [Lozano-Perez 83b] <author> T. Lozano-Perez. </author> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 32(2) </volume> <pages> 108-120, </pages> <year> 1983. </year>
Reference-contexts: However, path planning algorithms based on the configuration space approach <ref> [Lozano-Perez 83b] </ref> are intractable in terms of the number of DOF, and thus are not suited to path planning for highly redundant manipulators. <p> the algorithm has a huge constant factor. 1 LOGSP ACE P T IM E N P T IME P SP ACE 18 TASK SPACE 2 (CARTESIAN SPACE) - 2 CONFIGURATION SPACE (JOINT SPACE) Initial Goal Initial Goal 2.3 Configuration Space Approach The configuration space approach was originally developed by Lozano-Perez <ref> [Lozano-Perez 83b] </ref>. In this approach, the path planning problem is not solved in the original two or three dimensional task space, but in the so called configuration space: the space of joint variables. In configuration space, a configuration of a manipulator is represented as a point (see Fig. 2.1).
Reference: [Lozano-Perez 87a] <author> T. Lozano-Perez. </author> <title> a simple motion-planning algorithm for general robot manipulators. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-3:224-238, </volume> <month> June </month> <year> 1987. </year>
Reference-contexts: Find the cells for the initial and the final configuration 5. Find a path in the adjacency graph using the A fl search The dominant factor in complexity is representing free space in the configuration space, the first step in the above procedure. In <ref> [Lozano-Perez 87a] </ref>, the free space map is built recursively by finding the legal ranges of link joints from the base link (link 1) up to the most distant link (link n) as follows. 20 1. <p> turn using an arc segment whose center is at the base and whose length is at least twice of the link length of the ruler. 9.2.5 Advantage of Our Approach Let us discuss more about the advantages of our approach compared to the configuration space approach. * A representative algorithm <ref> [Lozano-Perez 87a] </ref> of the configuration space approach is complete. It searches the joint space fully eventually, and finds a path if one exists. In this sense, the algorithm always succeeds.
Reference: [Lozano-Perez 87b] <author> T. Lozano-Perez. </author> <title> Robot programming and artificial intelligence. </title> <editor> In W. E. L. Grimson and R. S. Patil, editors, </editor> <booktitle> AI in the 1980s and Beyond. </booktitle> <publisher> The MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: They are discussed in terms of their applicability to highly redundant manipulators. On the basis of these discussions, we claim that no current path planning algorithm is suited for highly redundant manipulators. 2.1 Task Level Programming In <ref> [Lozano-Perez 87b] </ref>, the methods for robot programming were classified into 3 levels: * Record and Playback * Explicit Programming * Task Level Programming The most common method of robot programming is record-and-playback. <p> Rather than specifying "MOVE (100,100,10), : : : GRASP", we want to be able to merely specify "PICK-UP Part-A". Task level programming is a very active topic in research. The following is a set of problems that must be solved to realize task level planning <ref> [Lozano-Perez 87b] </ref>. * Path Planning * On-Line Obstacle Avoidance * Grasp Planning * Fine-Motion Planning * Uncertainty Modeling 17 Path Planning, along with on-line obstacle avoidance, is an important component of task level planning which can extend the application of robots from simple welding and painting tasks to more difficult assembly
Reference: [Lozano-Perez et al. 90] <author> T. Lozano-Perez, E. Mazer, J. L. Jones, and P. A. O'Donnell. </author> <title> Task-level planning of pick-and-place robot motions. </title> <editor> In P. H. Winston and S. A. Shellard, editors, </editor> <booktitle> Artificial Intelligence at MIT, Expanding frontiers. </booktitle> <publisher> The MIT Press, </publisher> <year> 1990. </year> <month> 150 </month>
Reference-contexts: A common practice is to decompose a manipulator in two parts: its 2 Exact algorithms such as Canny's road map algorithm were never implemented. 21 arm and its hand. Gross motion is planned for its arm with occasional reorientation of the hand <ref> [Hasegawa and Terasaki 88, Lozano-Perez et al. 90] </ref>. But these techniques apply only to 6 DOF non redundant manipulators. [Dupont and Derby 86] attacked the problem of applying the configuration space approach to redundant manipulators.
Reference: [Luh et al. 80] <author> J. Y. Luh, M. W. Walker, and R. P. Paul. </author> <title> On-line computational scheme for mechanical manipulators. </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> 25(3), </volume> <year> 1980. </year>
Reference-contexts: The mass of a ball joint was neglected. The dynamic simulation was done using the Newton-Euler formulation. One advantage of the Newton-Euler formulation is that its computational complexity is linear in terms of the degree of freedom of the manipulator <ref> [Craig 86, Luh et al. 80] </ref>. Trajectory planning was done in joint space. First 130 the joint angle velocities are determined. The end-point velocities in work space may then be calculated using the Jacobian matrix J .
Reference: [Maciejewski and Klein 85] <author> A. A. Maciejewski and C. A. Klein. </author> <title> Obstacle avoidance for kinematically redundant manipulators in dynamically varying environments. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 4(3) </volume> <pages> 109-117, </pages> <year> 1985. </year>
Reference-contexts: If the distance goes below some safety margin, the motions of the links up to the link containing the nearest point are braked. <ref> [Maciejewski and Klein 85] </ref> took a similar approach. It was assumed that the nearest point and its desirable velocity which directs the point away from the obstacle surface can be obtained as a function of time. In these three lines of research, the end effector trajectory is given.
Reference: [Martelli 77] <author> A. Martelli. </author> <title> On the complexity of admissible search algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 1-13, </pages> <year> 1977. </year>
Reference-contexts: Let N be the total number of nodes in the connectivity graph searched by the A fl algorithm. The complexity of the A fl search algorithm has been analyzed in <ref> [Martelli 77] </ref>, and it was shown that * The A fl algorithm requires O (2 N ) steps in the worst case if the so called consistency assumption does not hold for the heuristic function used. * Martelli's algorithm (Algorithm B) has O (N 2 ) running time and never requires
Reference: [Mel 90] <author> B. W. </author> <title> Mel. Connectionist Robot Motion Planning. </title> <publisher> Academic Press, Inc., </publisher> <year> 1990. </year>
Reference-contexts: Applying artificial neural network techniques to learning inverse kinematics or inverse differential kinematics has been tried [Josin 88, Ackley 89, Mel 90, Barhen et al. 89, Yeung and Gekey 89], and many of these approaches deal with redundant manipulators. <ref> [Mel 90] </ref> deals with a 3 DOF planar manipulator, [Ackley 89] with a 5 DOF planar manipulator, [Barhen et al. 89] with manipulators with many degrees of freedom.
Reference: [Morecki et al. 87] <author> A. Morecki, K. Jaworek, W. Pogorzelski, T. Zielinska, J. Fraczek, and G. Malczyk. </author> <title> Robotics system elephant trunk type elastic manipulator combined with a quadruped walking machine. </title> <booktitle> In Proceedings of the Second International Conference on Robotics and Factories of the Future, </booktitle> <year> 1987. </year>
Reference-contexts: The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot [Drozda 84, Todd 86], snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator <ref> [Morecki et al. 87] </ref>, and tentacle manipulator [Ivanescu and Badea 84]. Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. <p> The manipulator is made up of a series of eight coil spring elements, and each spring element is actuated by three cables. Therefore, the manipulator has 24 cables pulled by 24 motors located at the base. [Taylor et al. 83] and <ref> [Morecki et al. 87] </ref> have proposed similar architectures. [Clement and I~nigo 90] attacked the weight problem of highly redundant manipulators in a very unique fashion.
Reference: [Nelson 89] <author> W. Nelson. </author> <title> Continuous-curvature paths for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: However, curvature discontinuity exists at every tangent point in these paths, because circular arcs have constant curvature equal to the inverse of their radius and straight lines have zero curvature. This type of path is criticized for not being smooth enough for autonomous vehicles to follow easily <ref> [Kanayama and Hartman 89, Nelson 89] </ref>. For example, spline curves are recommended over circular arcs for highway transition curves [Barnett 38]. 76 77 [Kanayama and Hartman 89] proposes using cubic spiral curves to make a smooth (i.e. continuous curvature) move from one position and orientation to another. <p> After the path planning is finished, the globally optimum path obtained can be converted to a sequence of subgoals (a pair of position and orientation, identifying the start and end points of a turn), and then passed to a local path following module (such as the one referred in <ref> [Kanayama and Hartman 89, Nelson 89] </ref>). Because of the smoothness of the path, it will be much easier to follow the path. 91 (2-a) (2-b) (2-c) (2-d) (4-a) (4-b) (4-c) (4-d) (a)/(b) a single turning point using Euclidean/road-map distance, (c)/(d) multiple turning points using Euclidean/road-map distance.
Reference: [Nilsson 80] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Morgan Kauf-mann Publishers, Inc., </publisher> <year> 1980. </year>
Reference-contexts: Identify candidate turning points in overlap regions. (4) Find least cost path in connectivity graph, consistent with maximum curvature constraint. (5) Create smooth path by inserting cubic spirals. (6) Identify subgoals as start/end points of turns of the path. 6.4.2 A fl Search We use the A fl algorithm (see <ref> [Nilsson 80] </ref>) to find a path in the connectivity graph. As a heuristic function, we use Euclidean distance from a current node (midpoint of its line segment) to a goal position. are the paths found.
Reference: [Nutbourne et al. 72] <author> A. W. Nutbourne, P. M. McLellan, and R. M. Kensit. </author> <title> Curvature profiles for plane curves. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 4(4) </volume> <pages> 176-184, </pages> <year> 1972. </year> <month> 151 </month>
Reference-contexts: This research is motivated by the fact that it is often the case that design engineers want to specify the shape of curves in terms of their intrinsic properties, rather than interpolation points or control vertices. For example, piecewise linear curvature functions are used to design plane curves in <ref> [Nutbourne et al. 72] </ref>. [Pal 78a] presents an algorithm to generate a curvature continuous space curve through two points with given tangent directions. Their approach to designing curves through curvature certainly has some appeal to us.
Reference: [O'Dunlaing and Yap 85] <author> C. O'Dunlaing and C. Yap. </author> <title> A 'retraction' method for planning the motion of a disc. </title> <journal> Journal of Algorithms, </journal> <volume> 6, </volume> <year> 1985. </year>
Reference-contexts: The projection method [Leven and Sharir 87] leads to an O (n 2 logn) algorithm for a line segment moving in 2-D space. The retraction method <ref> [O'Dunlaing and Yap 85] </ref> leads to an O (n log n) algorithm for a disc moving in 2-D space.
Reference: [Pal 78a] <author> T. K. Pal. </author> <title> Intrinsic spline curve with local control. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(1) </volume> <pages> 19-29, </pages> <month> January </month> <year> 1978. </year>
Reference-contexts: For example, piecewise linear curvature functions are used to design plane curves in [Nutbourne et al. 72]. <ref> [Pal 78a] </ref> presents an algorithm to generate a curvature continuous space curve through two points with given tangent directions. Their approach to designing curves through curvature certainly has some appeal to us.
Reference: [Pal 78b] <author> T. K. Pal. </author> <title> Mean tangent rotational angles and curvature integration. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(1) </volume> <pages> 31-34, </pages> <month> January </month> <year> 1978. </year>
Reference: [Pal and Nutbourne 77] <author> T. K. Pal and A. W. Nutbourne. </author> <title> Two-dimensional curve synthesis using linear curvature elements. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 9(2) </volume> <pages> 121-134, </pages> <month> April </month> <year> 1977. </year>
Reference: [Park 90] <author> J. Park. </author> <title> Dynamic simulation of swan's neck. </title> <type> Unpublished Manuscript, </type> <month> March </month> <year> 1990. </year>
Reference-contexts: Figure 5.5 is an overview of a motion planning system and the area enclosed by dotted lines are what we have explained so far. The dynamic simulation is explained in <ref> [Park 90] </ref>. 5.3.1 Where Do We Start? The following proposition shows where we start. Proposition 1 Suppose we have a continuous curvature manipulator with variable length. Then, given polygonal obstacles, we can find a collision free path from a current configuration to the goal configuration. <p> Manipulators containing many DOFs do not cause a serious problem here. In <ref> [Park 90] </ref>, a dynamic simulation of a conceptual highly articulated manipulator has been performed, given the result of a mapping of the continuous trajectory to the articulated manipulator. The manipulator has 12 ball joints and 36 DOFs. Each link is defined as a cylinder.
Reference: [Pettinato and Stephanou 89] <author> J. S. Pettinato and H. E. </author> <title> Stephanou. Manipulability and stability of a tentacle based robot manipulator. </title> <booktitle> In Proceedings of the 1989 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: These applications are aimed at utilizing the dexterity of highly redundant manipulators to work in complex, cluttered environments. In addition to these applications, <ref> [Pettinato and Stephanou 89] </ref> proposed to use a highly redundant manipulator as an all-in-one arm and gripping device capable of a wide variety of configurations and grasps.
Reference: [Pieper 68] <author> D. L. Pieper. </author> <title> The kinematics of manipulators under computer control. </title> <type> PhD thesis, </type> <institution> Stanford University, Mechanical Engineering Department, </institution> <year> 1968. </year>
Reference-contexts: Various aspects of designing and controlling highly redundant artificial manipulators have been studied. The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) <ref> [Pieper 68] </ref>, spine robot [Drozda 84, Todd 86], snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator [Ivanescu and Badea 84]. <p> Probably, Pieper's research on a snake-like continuous arm (which is called the ORM manipulator) is the first on the kinematics of highly redundant manipulators <ref> [Pieper 68] </ref>. In one chapter of his dissertation, he attacked 28 29 the inverse kinematics problem for the ORM manipulator. In an attempt to control the shape of the continuous manipulator using a computer, he proposed to use a digital manipulator model. <p> Representing highly redundant manipulators with a continuous model is itself a quite distinctive approach. In an attempt to find a good initial configuration for his digital manipulator, <ref> [Pieper 68] </ref> developed an algorithm to find a curve which is made up of four connected circular arcs in such a way that they have the same radius, and adjacent arcs have the same tangent.
Reference: [Press et al. 86] <author> W. H. Press, B. P. Flannery, S. A. Teukolsky, and W. T. Vet-terling. </author> <title> Numerical Recipes. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: But these coordinates are complex nonlinear functions (trigonometric functions) of the joint angles ( 1 , 2 ,: : : ), known as forward kinematics. 129 * The minimization of the maximal error has to proceed iteratively, as is the case for a standard technique for fitting with nonlinear models <ref> [Press et al. 86] </ref>. This will be an expensive scheme. What if we change our current task of reducing mapping errors to the original task: reaching the goal while avoiding obstacles ? We could use the artificial potential field [Khatib 86] to avoid obstacles.
Reference: [Rao and Arkin 90] <author> T. Rao and R. C. Arkin. </author> <title> 3d navigational path planning. </title> <journal> Robotica, </journal> <volume> 8, </volume> <year> 1990. </year> <month> 152 </month>
Reference-contexts: Candidate turning corners between the two regions are put either at the midpoint on the boundary, or at three points on the boundary. After a path is found, he tries to optimize the path by removing unnecessary corners. 111 <ref> [Rao and Arkin 90] </ref> extends the meadow map method to 3-D space for use by a flying robot. The map is now called crystal map, where free space is decomposed into disjoint convex polyhedra.
Reference: [Reif 79] <author> J. H. Reif. </author> <title> Complexity of the generalized movers' problem. </title> <booktitle> In Proceedings of the 20th IEEE symposium on Foundations of Computer Science (San Juan, </booktitle> <address> Puerto Rico), </address> <year> 1979. </year>
Reference-contexts: The problem has been shown to be P SP ACE-complete 1 in terms of the total number of degrees of freedom (DOF) of the robot system. It is believed that even the best algorithm for the problem runs in exponential time for this class of problems. <ref> [Reif 79] </ref> showed PSPACE-hardness as a lower bound for the complexity of the problem. [Schwartz and Sharir 83] presents a double exponential algorithm. Later, Canny developed a single exponential algorithm called the road map algorithm [Canny 88a].
Reference: [Rimon and Koditschek 89] <author> E. Rimon and D. E. Koditschek. </author> <title> The construction of analytic diffeomorphisms for exact robot navigation on star worlds. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: Using superquadratic functions improves the situation. But it does not eliminate the problem. Local minima still exist near obstacles where contour lines of the potential field has non-spherical shapes. <ref> [Rimon and Koditschek 89] </ref> tries to construct navigation functions. A navigation function is an artificial potential energy function on a robot's configuration space which has no local minima. They succeeded in constructing one for a limited class of environments which they call a sphere worlds and a star worlds.
Reference: [Ronse 89] <author> C. Ronse. </author> <title> A bibliography on digital and computational convexity (1961-1988). </title> <journal> IEEE transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 2(2) </volume> <pages> 181-190, </pages> <month> February </month> <year> 1989. </year>
Reference-contexts: But they have the advantage of ease of extension into 3-D space. Free space decomposition for path planning is a variation of the convex decomposition problem which has been extensively studied in computational geometry <ref> [Lee and Lee 90, Ronse 89] </ref>.
Reference: [Rueb and Wong 87] <author> K. D. Rueb and A. K. C. Wong. </author> <title> Structuring free space as a hypergraph for roving robot path planning and navigation. </title> <journal> IEEE Transaction on Pattern Analysis and Machine Intelligence, </journal> <volume> 9(2) </volume> <pages> 263-273, </pages> <year> 1987. </year>
Reference-contexts: We present a path planning algorithm to find a smooth path which consists of straight lines and cubic spirals. The maximum curvature of cubic spirals is restricted to allow for the vehicle's constraints. Our algorithm is based on decomposing free space into primary convex regions <ref> [Rueb and Wong 87, Singh and Wagh 87] </ref>. We naturally extend previous algorithms which find straight line paths. Overlapping regions of the primary convex regions are used to make smooth turns from one region to another. Large overlapping regions can be further divided in order not to miss smooth turns. <p> This eliminates the requirement for an accurate global coordinate system to track the position of the robot in navigation. <ref> [Rueb and Wong 87] </ref>. 6.2.1 Free Space Decomposition Methods We need to select a primitive for free space decomposition best suited to our task: finding smooth paths. [Brooks 83a] is one of the earliest papers on free space decomposition for path planning. <p> walls have this property. 79 is shrinked for visibility. composes free space into disjoint convex regions, it does not recognize straight line path segments if they exist, so that the path obtained will have more line segments (and more turns) than paths obtained by other methods. 6.2.2 Primary Convex Regions <ref> [Singh and Wagh 87, Rueb and Wong 87] </ref> use primary convex regions as a primitive to represent free space, in order to find polygonal paths. A primary convex region (PCR) is an unobstructed convex region with each boundary edge covering some portion of an obstacle wall (See figure 6.1). <p> An algorithm to detect primary convex regions from an input image was presented in [Tokuta and Hughes 90]. [Habib and Yuta 89] experimented with Singh and Wagh's method using an actual mobile robot and reported good results. 6.2.3 Hypergraph Method for Finding PCRs We have implemented the algorithm in <ref> [Rueb and Wong 87] </ref> to find PCRs given obstacles. PCRs are found by a directed search for a set of fundamental circuits in an abstract graphical representation of the environment geometry. The nodes in the graph are wall segments obtained by extending obstacle walls (see Fig. 6.1). <p> However this makes graph search much slower. To remedy this problem, we used road map distance as another heuristic function. Road maps are explained in <ref> [Rueb and Wong 87] </ref>, as an efficient way to find the collision free polygonal path. Road maps can be built quite easily using maximal overlapping regions (see figure 6.8). <p> When this decomposition is not the possible, we decompose 3-D free space directly (see Section 7.3). 101 7.2.2 About Hypergraph Method Now let us turn to the subject of 3-D free space decomposition. In chapter 6, we used the hypergraph method <ref> [Rueb and Wong 87] </ref> to find the primary convex regions in 2-D. Unfortunately, the hypergraph method can not be extended directly to 3-D. In 2-D, walls segments of primary convex regions make certain kind of cycles in a graphical representation of wall segments. <p> This time bound has been obtained using a loose upper bound on the number of primary convex regions and the worst case time complexity of A fl search. In practice, our algorithm is efficient, because the number of primary convex regions does not grow so rapidly <ref> [Rueb and Wong 87] </ref>, and we have a strong heuristic for the search. The theoretical exact algorithm in [Canny 88a], runs in O (n r log n) time for a r DOF manipulator (O (n 6 log n) for a 6 DOF manipulator).
Reference: [Schechter 78a] <author> A. Schechter. </author> <title> Synthesis of 2d curves by blending piecewise linear curvature profiles. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(1) </volume> <pages> 8-18, </pages> <month> January </month> <year> 1978. </year>
Reference: [Schechter 78b] <author> A. Schechter. </author> <title> Linear blending of curvature profiles. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 10(2) </volume> <pages> 101-109, </pages> <month> April </month> <year> 1978. </year>
Reference: [Schwartz and Sharir 83] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: II. general techniques for computing topological properties of real algebraic manifolds. </title> <booktitle> Advances in Applied Mathematics, </booktitle> <volume> 4, </volume> <year> 1983. </year>
Reference-contexts: It is believed that even the best algorithm for the problem runs in exponential time for this class of problems. [Reif 79] showed PSPACE-hardness as a lower bound for the complexity of the problem. <ref> [Schwartz and Sharir 83] </ref> presents a double exponential algorithm. Later, Canny developed a single exponential algorithm called the road map algorithm [Canny 88a]. Furthermore, Canny showed the road map algorithm can be programmed to run in P SP ACE [Canny 88b], which gives its upper complexity bound: P SP ACE-easiness.
Reference: [Schwartz and Sharir 88] <author> J. T. Schwartz and M. Sharir. </author> <title> A survey of motion planning and related geometric algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 153 </volume>
Reference: [Shahinpoor et al. 86] <author> M. Shahinpoor, H. Kalhor, and M. Jamshidt. </author> <title> On magnetically activated robotic tensor arms. </title> <booktitle> In Proceedings of the International Symposium on Robot Manipulator: Modeling, Control, and Education, </booktitle> <year> 1986. </year>
Reference-contexts: Use of various actuators has been proposed including shape memory alloys [Ikuta et al. 88, Ikuta 90] and magnetics <ref> [Shahinpoor et al. 86] </ref>. Actuators using shape memory alloys have the advantage of high force output for the size of the actuator [Andeen 88]. Magnetical actuation has the same advantage.
Reference: [Sharir and Schorr 84] <author> M. Sharir and A. Schorr. </author> <title> On shortest paths in polyhedral spaces. </title> <booktitle> In Proceedings of the 16th annual ACM symposium on Theory of Computing, </booktitle> <year> 1984. </year>
Reference-contexts: A visibility graph is constructed by making both obstacle corners and start/end points nodes of the graph and by connecting those nodes which are visible from each other. The shortest path can be found by searching through the visibility graph. See <ref> [Sharir and Schorr 84] </ref> for a sketch of the method. The problem can be solved in O (n 2 log n) time where n is the number of obstacle corners. The algorithm has been improved to O (n 2 ) time [Asano 85, Welzl 85]. <p> The difficulty arises from the fact that the only constraint on the vertices of the shortest path is that they line on the edges of the polyhedral obstacles. In this sense, the problem is not discrete. In <ref> [Sharir and Schorr 84] </ref>, a doubly exponential procedure is presented for solving the discrete subproblem of determining the sequence of obstacle edges through which the shortest path passes.
Reference: [Singh and Wagh 87] <author> J. S. Singh and M. D. Wagh. </author> <title> Robot path planning using intersecting convex shapes: Analysis and simulation. </title> <journal> IEEE journal of Robotics and Automation, </journal> <volume> RA-3(2):101-108, </volume> <month> April </month> <year> 1987. </year>
Reference-contexts: We present a path planning algorithm to find a smooth path which consists of straight lines and cubic spirals. The maximum curvature of cubic spirals is restricted to allow for the vehicle's constraints. Our algorithm is based on decomposing free space into primary convex regions <ref> [Rueb and Wong 87, Singh and Wagh 87] </ref>. We naturally extend previous algorithms which find straight line paths. Overlapping regions of the primary convex regions are used to make smooth turns from one region to another. Large overlapping regions can be further divided in order not to miss smooth turns. <p> walls have this property. 79 is shrinked for visibility. composes free space into disjoint convex regions, it does not recognize straight line path segments if they exist, so that the path obtained will have more line segments (and more turns) than paths obtained by other methods. 6.2.2 Primary Convex Regions <ref> [Singh and Wagh 87, Rueb and Wong 87] </ref> use primary convex regions as a primitive to represent free space, in order to find polygonal paths. A primary convex region (PCR) is an unobstructed convex region with each boundary edge covering some portion of an obstacle wall (See figure 6.1). <p> The method was developed in <ref> [Singh and Wagh 87] </ref> to find primary convex regions efficiently in 2-D for a restricted class of obstacle layout. We first explain Singh and Wagh's decomposition in 2-D, then extend it to 3-D. <p> Note that there are O (n 2 ) obstacle edge pairs in each direction. <ref> [Singh and Wagh 87] </ref> did not report the complexity of the algorithm, but a loose upper bound O (n 5 ) can easily be obtained where n is the total number of obstacles, because * There are at most O (n) lists (N A ). * Each list contains at most <p> Most of 139 the path planning routines implemented for the 2-D simulator can be used for the 2 1/2-D approach. Alternatively, we can decompose 3-D free space into primary convex regions. In Section 7.3.2), we have extended the decomposition algorithm presented in <ref> [Singh and Wagh 87] </ref> to 3-D. While we have used cubic spiral curves to turn from one polygon to another in our 2-D simulator, we can use continuous 3-D curves with torsion to move from one polyhedron to another.
Reference: [Stoker 69] <author> J. J. Stoker. </author> <title> Differential Geometry. </title> <publisher> Wiley-Interscience, </publisher> <year> 1969. </year>
Reference-contexts: It is therefore 30 useful to summarize a few relevant properties of continuous curves without proofs. For a complete treatment on the subject, see any textbook on differential geometry (for example, <ref> [Stoker 69] </ref>). In this section, we explain plane curves. 3.2.1 Regular Curves Here we deal with a class of plane curves called regular curves. A curve P (t) = x (t) ! is regular, if and only if the following conditions are satisfied. 1.
Reference: [Taylor et al. 82] <author> R. H. Taylor, P. D. Summers, and J. M. Meyer. Aml: </author> <title> A manufacturing language. </title> <journal> International Journal of Robotics Research, </journal> <volume> 1(3), </volume> <month> Fall </month> <year> 1982. </year>
Reference-contexts: The apparent limitations of the record-and-playback method gave rise to another method, the explicit programming method. In this method, the movement of robots is specified by a program. High level programming languages with an extension for controlling robots are provided for this purpose. For example, AML <ref> [Taylor et al. 82] </ref>, developed by IBM, has the following subroutines as an extension. * PMOVE/DPMOVE: move manipulator to the absolute/relative coordi nate * LINEAR: move in linear motion * PAYLOAD: set speed * GRASP/RELEASE: close/open gripper * DELAY: delay next command execution for a specified period * TESTI/WAITI: test DI
Reference: [Taylor et al. 83] <author> W. Taylor, D. Lavie, and I. Esat. </author> <title> A curvilinear snake arm robot with gripper-axis fiber-optic image processor feedback. </title> <journal> Robotica, </journal> <volume> 1 </volume> <pages> 33-39, </pages> <year> 1983. </year>
Reference-contexts: A tensor actuated elastic manipulator was built [Hirose et al. 83]. The manipulator is made up of a series of eight coil spring elements, and each spring element is actuated by three cables. Therefore, the manipulator has 24 cables pulled by 24 motors located at the base. <ref> [Taylor et al. 83] </ref> and [Morecki et al. 87] have proposed similar architectures. [Clement and I~nigo 90] attacked the weight problem of highly redundant manipulators in a very unique fashion.
Reference: [Todd 86] <author> D. J. Todd. </author> <title> Fundamentals of robot technology. </title> <publisher> John Wiley and Sons, </publisher> <year> 1986. </year>
Reference-contexts: Various aspects of designing and controlling highly redundant artificial manipulators have been studied. The manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], spine robot <ref> [Drozda 84, Todd 86] </ref>, snake-like manipulator [Clement and I~nigo 90], 5 elastic manipulator [Hirose et al. 83], elephant's trunk like elastic manipulator [Morecki et al. 87], and tentacle manipulator [Ivanescu and Badea 84]. <p> Putting actuators at the remote base and controlling each element through tendons is a popular approach to the weight problem. Of such ma 6 nipulators, the most famous is probably the Swedish built Spine robot, named after its similarity to human spines <ref> [Drozda 84, Todd 86] </ref>. It was not only studied, but was also built and put on the market. It is made up of a large number of disks put together by cables, and is actuated by pulling one or more cables.
Reference: [Tokuta and Hughes 90] <author> A. Tokuta and K. Hughes. </author> <title> Scanline algorithms in robot path planning. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1990. </year> <month> 154 </month>
Reference-contexts: Use of primary convex regions to represent free space has renewed much attention recently. An algorithm to detect primary convex regions from an input image was presented in <ref> [Tokuta and Hughes 90] </ref>. [Habib and Yuta 89] experimented with Singh and Wagh's method using an actual mobile robot and reported good results. 6.2.3 Hypergraph Method for Finding PCRs We have implemented the algorithm in [Rueb and Wong 87] to find PCRs given obstacles. <p> While 3-D machine vision in general is still in a phase of an ambitious research program [Faugeras 89], Tokuta and Hughes' scanline algorithm to find primary convex regions from pixels <ref> [Tokuta and Hughes 90] </ref> can be used in 2-D experiments. The problem of dynamics is central to controlling manipulators, and we have obtained some good results for a conceptual highly articulated manipulator (Section 8.4).
Reference: [Waldron et al. 87] <author> K. J. Waldron, V. Kumar, and A. Burkat. </author> <title> An actively coordinated mobility system for a planetary rover. </title> <booktitle> In Proceedings of 1987 international Conference on Advanced Robotics, </booktitle> <year> 1987. </year>
Reference-contexts: Some were actually built [Pieper 68, Todd 86, Hirose et al. 83, Ikuta et al. 88, Hirose and Morishima 90]. While many of them are so called continuous arms, highly articulated arms [Lowe 85, Clement and I~nigo 90] and snake-like mobile robots <ref> [Waldron et al. 87, Hirose and Morishima 90] </ref> have also been studied. Their applications are hard-to-reach painting jobs [Drozda 84], passing through restricted passages such as manholes for investigation and repair in contaminated area [Hemami 85], and active endoscope [Ikuta et al. 88].
Reference: [Warren 89] <author> C. W. Warren. </author> <title> Global path planning using artificial potential field. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference-contexts: The approach was taken in the mobile robot domain [Krogh and Thorpe 86], where a global planner finds subgoals which are then traced by a local maneuver. The difficulty of this approach lies in distinguishing the global level from the local level. 26 <ref> [Warren 89] </ref> presents a hybrid approach in a manipulator domain. First, a configuration space map is built. Then, a path is found by putting an artificial potential field in the configuration space. This method tries to solve the biggest problem in the potential field approach, the local minima problem.
Reference: [Welzl 85] <author> E. Welzel. </author> <title> Constructing the visibility graph for n line segments in o(n 2 ) time. </title> <journal> Information Processing Letters, </journal> <volume> 20 </volume> <pages> 167-172, </pages> <year> 1985. </year>
Reference-contexts: See [Sharir and Schorr 84] for a sketch of the method. The problem can be solved in O (n 2 log n) time where n is the number of obstacle corners. The algorithm has been improved to O (n 2 ) time <ref> [Asano 85, Welzl 85] </ref>. Then it is easy to transform the polygonal path to a one which is also collision free and has smooth corners (has curvature continuity).
Reference: [Wilfong 88] <author> G. T. Wilfong. </author> <title> Motion planning for an autonomous vehicle. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1988. </year>
Reference: [Wilfong 89] <author> G. Wilfong. </author> <title> Shortest paths for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year>
Reference: [Wilson 83] <author> J. F. Wilson. </author> <title> Robotic mechanics and animal morphology. </title> <editor> In M. Brady, L. A. Gerhardt, and H. F. Davidson, editors, </editor> <booktitle> Robotics and Artificial Intelligence, NATO ASI series. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: manipulators will shed light on the path planning process done by humans for their arms. 1.2 Highly Redundant Manipulators Many animals have highly redundant bodies and appendages, and it is evident that research on highly redundant manipulators and continuous arms in the robotics community has been motivated by animal morphology. <ref> [Wilson 83] </ref> studied the animal structures and motions of jumping spiders, ne-merteans, and squid from the viewpoint of robotic design. [Horn 75] developed the kinematics, statics and dynamics of an eel-like locomotion system. [Hirose and Morishima 90] says One of the authors (Hirose) first began investigating the importance of the shape
Reference: [Yap 87] <author> C.-K. Yap. </author> <title> Algorithmic motion planning. In Algorithmic and geometric aspects of robotics, </title> <booktitle> volume 1 of Advances in robotics, chapter 3. </booktitle> <editor> L. </editor> <publisher> Erlbaum Associates, </publisher> <year> 1987. </year>
Reference-contexts: However, these efficient algorithms do not extend to 3-D, and it is said that the problem of obtaining efficient path planning algorithms for specific robot systems in 3-D are mostly open <ref> [Yap 87] </ref>. 102 7.3 3-D free space decomposition Although we cannot extend the hypergraph method to 3-D, there is another method which can ealily developed to 3-D.
Reference: [Yeung and Gekey 89] <author> D.-Y. Yeung and G. A. Gekey. </author> <title> Using a context-sensitive learning network for robot arm control. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation, </booktitle> <year> 1989. </year> <month> 155 </month>

References-found: 105

