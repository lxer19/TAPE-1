URL: http://cs.nyu.edu/phd_students/dreyer/steiner4.ps
Refering-URL: http://www.cs.nyu.edu/phd_students/dreyer/index.html
Root-URL: http://www.cs.nyu.edu
Title: Two Heuristics for the Steiner Tree Problem  
Author: Derek R. Dreyer Michael L. Overton 
Date: August 8, 1996  
Abstract: The Steiner tree problem is to find the tree with minimal Euclidean length spanning a set of fixed points in the plane, given the ability to add points (Steiner points). The problem is NP-hard, so polynomial-time heuristics are desired. We present two such heuristics, both of which utilize an efficient method for computing a locally optimal tree with a given topology. The first systematically inserts Steiner points between edges of the minimal spanning tree meeting at angles less than 120 degrees, performing a local optimization at the end. The second begins by finding the Steiner tree for three of the fixed points. Then, at each iteration, it introduces a new fixed point to the tree, connecting it to each possible edge by inserting a Steiner point, and minimizes over all connections, performing a local optimization for each. We present a variety of test cases that demonstrate the strengths and weaknesses of both algorithms. 
Abstract-found: 1
Intro-found: 1
Reference: [And93] <author> K.D. Andersen. </author> <title> An efficient Newton barrier method for minimizing a sum of Euclidean norms, 1993. </title> <institution> Department of Mathematics and Computer Science, Odense University. </institution> <note> To appear in SIAM J. Optimization. </note>
Reference-contexts: This method was easily applicable to the Steiner tree problem and worked quite well. Currently, however, we are working with a similarly aimed, but considerably faster, code written in C by Knud Andersen <ref> [And93] </ref>.
Reference: [CG78] <author> F.R.K. Chung and R.L. Graham. </author> <title> Steiner trees for ladders. </title> <editor> In B. Alspach, P. Hell, and D.J. Miller, editors, </editor> <booktitle> Annals of Discrete Mathematics 2, </booktitle> <pages> pages 173-200, </pages> <address> Amsterdam, 1978. </address> <publisher> North-Holland. </publisher>
Reference-contexts: However, it should be noted that, whereas the SI tree was computed in a matter of seconds, the IO heuristic took over three hours. Our third test is the well-known "ladder" test of Chung and Graham with n = 10 <ref> [CG78] </ref>, and its exact Steiner tree is displayed in Figure 7. The results of our heuristics are shown in Figure 8 and Figure 9. While SI scores an expected 3.0% improvement over the minimal spanning tree, IO does quite well, with 5.2%.
Reference: [CO94] <author> A.R. </author> <title> Conn and M.L. Overton. A primal-dual interior point method for minimizing a sum of Euclidean vector norms, </title> <month> July </month> <year> 1994. </year> <title> Draft copy of incomplete manuscript. </title> <type> 13 </type>
Reference-contexts: Originally, we used a primal-dual interior point method for minimizing a sum of Euclidean vector norms as described by Conn and Overton in <ref> [CO94] </ref> and written in MATLAB. This method was easily applicable to the Steiner tree problem and worked quite well. Currently, however, we are working with a similarly aimed, but considerably faster, code written in C by Knud Andersen [And93].
Reference: [HRW92] <author> F.K. Hwang, D.S. Richards, and P. Winter. </author> <title> The Steiner Tree Prob--lem. Annals of Discrete Mathematics. </title> <publisher> Elsevier Science Publishers B.V., </publisher> <address> Amsterdam, </address> <year> 1992. </year> <month> 14 </month>
Reference-contexts: Supported by National Science Foundation grant CCR-9401136. E-mail: dreyer@cs.nyu.edu and overton@cs.nyu.edu. 1 the points, allowing the addition of auxiliary points to the set for the purpose of minimizing the total length. These auxiliary points are called Steiner points and there need be at most n 2 of them <ref> [HRW92] </ref>. Because of the ability to add Steiner points to the original graph, the Steiner tree problem is NP-hard, and thus good heuristics are perhaps the best hope. <p> The simplest example and one which occurs quite frequently inside larger problems is the 3-point case as seen in Figure 1, also known as the Fermat problem. The solution to this case, known as the Torricelli point, has a simple construction described in detail in <ref> [HRW92] </ref>. Another elementary example is the common 4-point case as seen in Figure 2. Note that, in all the figures in this report, circles represent fixed points and stars represent Steiner points. <p> In fact, there is a theorem that states that "no two edges of a Steiner tree can meet at an angle less than 120 degrees" and "each Steiner point of a Steiner tree is of degree exactly three" <ref> [HRW92] </ref>. These facts are essential to an understanding of the problem and formed the basis for one of the heuristics we have developed. 2 Heuristic Tools Within our heuristics and in testing our heuristics we have utilized several algorithmic tools, some supplied by others and some of our own. <p> It was inspired by a suggestion of Thompson mentioned in the "Heuristics" chapter of <ref> [HRW92] </ref>. Algorithm 1 (SI). The Steiner Insertion Algorithm. 1. Find the minimal spanning tree. 2. <p> Figure 10 shows the SI tree for this example. 6 Concluding Remarks We would first like to make special note of our major reference throughout our work on Steiner trees, the monograph on the subject by Hwang, Richards, and Winter <ref> [HRW92] </ref>. The "Heuristics" chapter of this book contains many suggestions for possible heuristics, one of which we actually used for our Steiner insertion algorithm.
References-found: 4

