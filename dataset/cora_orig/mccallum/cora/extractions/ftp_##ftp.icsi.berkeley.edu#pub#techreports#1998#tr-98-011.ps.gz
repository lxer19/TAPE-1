URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1998/tr-98-011.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1998.html
Root-URL: http://www.icsi.berkeley.edu
Title: CORBA-Based Interoperable Geographic Information Systems functionality into the CORBA architecture, as already done for the
Author: H. -Arno Jacobsen Agnes Voisard 
Address: Spandauer Str. 1, 10178 Berlin, Germany.  Berlin, Takustr. 9, D-14195 Berlin, Germany.  
Affiliation: University,  Institute of Computer Science, Freie Universitat  
Note: GIS  Author's permanent address: Institute of Information Systems, Humboldt  Author's permanent address:  
Pubnum: TR-98-011  
Email: E-Mail: jacobsen@wiwi.hu-berlin.de  E-mail: voisard@inf.fu-berlin.de  
Date: April 1998  
Abstract: A new generation of geographic information systems (GIS) emphasizing an open architecture, interoperability, and extensibility in their design has received a great deal of attention in research and industry over the past few years. The key idea behind these systems is to move away from the traditional monolithic view in system engineering, to an open design embracing many co-existing distributed (sub)-systems, such as database management systems (DBMS), statistic packages, computational geometry libraries and even traditional GIS. While some success has been achieved in the area of geospatial data integration (data models and formats), it is still unclear what common services these open GIS should provide and how their design would benefit from available distributed computing infrastructures. This latter question is especially interesting with regard to the increasing attention that object-oriented distributed computing infrastructures have received over the past few years in the community. In this paper, we describe a generic open GIS with an emphasis on the services it should provide. We Object Request Broker Architecture (CORBA). We also report on the use of the CORBA platform for implementing a fully-operational distributed open GIS. We conclude by arguing for a closer integration of then study the design of such a system based on object services and features provided by the Common
Abstract-found: 1
Intro-found: 1
Reference: [AAD + 93] <author> R. Ahmed, J. Albert, W. Du, W. Kent, W. Litwin, M, and C. Shan. </author> <title> An Overview of Pegasus. </title> <booktitle> In Research Issues in Data Engineering, </booktitle> <pages> pages 273-277. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: In the database area, lots of work has been done on the access to heterogeneous repositories, also called data sources in the database jargon. The architectures of such distributed systems (e.g., [RAH + 96], <ref> [AAD + 93] </ref>, [PAGM96], to list a few) is usually centralized around a mediator which communicates with wrappers, i.e., interface to data sources. Object management in integrated distributed systems is discussed in [MHG + 92].
Reference: [AKC94] <author> D. Abel, P. Kilby, and M Cameron. </author> <title> A Federated Systems Approach to the Design of Spatial Decision Support System. </title> <booktitle> In Spatial Data Handling, </booktitle> <pages> pages 46-59, </pages> <year> 1994. </year>
Reference-contexts: A spatial allocation module is available in GIS2. Basic functionalities of open GIS around an integrator and that other architectures, with a more direct communication among the modules, could have been chosen. For a discussion on this issue see <ref> [AKC94] </ref>. For a sake of simplicity, only the main modules are depicted. First, the user inputs queries/commands into the global system via a graphical user interface. These queries and commands are a graph of instructions that will be performed by one or many subsystems.
Reference: [Ama97] <author> B. Amann. </author> <title> Integrating GIS Components with Mediators and CORBA. </title> <type> Technical Report 97-09, </type> <institution> Cedric-CNAM, CNAM, Paris, </institution> <year> 1997. </year>
Reference-contexts: Bridging technology for interfacing CORBA to OLE/COM has recently been initiated by the OMG [Obj96]. Other teams have exploited the benefits of CORBA for distributed system design. Much work has been done on integrating different data sources across the network (see for instance <ref> [MMS + 96, Ama97] </ref>). Our approach is different as we focus on servicesn rather than on data integration. [BR94] describes a system for air quality control, featuring heterogeneous components, distributed systems and integration of legacy code.
Reference: [BDK92] <editor> F. Bancilhon, C. Delobel, and P. Kanellakis, editors. </editor> <title> Building an Object-Oriented Database Systems: </title> <publisher> The Story of O 2 . Morgan Kaufmann, </publisher> <address> San Mateo (CA), </address> <year> 1992. </year>
Reference-contexts: We are currently working on a prototype open GIS implementation based on the architectural design principles outlined throughout the paper. The components we are integrating are the GIS GRASS [GRA], the DBMS O 2 <ref> [BDK92] </ref>, and the geometric algorithm library LEDA [MN90]. The user interface is based on the graphical library IlogViews [Ilo93]. We are using IONA's implementation of CORBA as underlying communication infrastructure.
Reference: [BR94] <author> B. Bruegge and E. Riedel. </author> <title> A Geographic Environmental Modeling System: Towards an Object-Oriented Framework. </title> <editor> In R. Pareschi M. Tokoro, editor, </editor> <booktitle> Proc. 8th European Conf. on Object-Oriented Programming. </booktitle> <volume> LNCS No. 821, </volume> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Other teams have exploited the benefits of CORBA for distributed system design. Much work has been done on integrating different data sources across the network (see for instance [MMS + 96, Ama97]). Our approach is different as we focus on servicesn rather than on data integration. <ref> [BR94] </ref> describes a system for air quality control, featuring heterogeneous components, distributed systems and integration of legacy code. However, it uses PVM (partial virtual machine) to achieve distribution and does not address issues related to the use of CORBA.
Reference: [Bro96] <author> K. Brockschmidt. </author> <title> Inside OLE. </title> <publisher> Microsoft Press, </publisher> <year> 1996. </year>
Reference-contexts: CORBA has been widely recognized as a standard for achieving system interoperability and as base technology for distributed computing environments. Based on a rich object model, it is distinct from other approaches such as OSF's DCE [OSF96] or Microsoft's OLE/COM <ref> [Bro96] </ref>. OLE/COM [Bro96], which is purely object-based 1 , operates, so far, only on the company's proper operating systems thus not permitting interoperability across different platforms and operating systems, a major drawback for open GIS. Bridging technology for interfacing CORBA to OLE/COM has recently been initiated by the OMG [Obj96]. <p> CORBA has been widely recognized as a standard for achieving system interoperability and as base technology for distributed computing environments. Based on a rich object model, it is distinct from other approaches such as OSF's DCE [OSF96] or Microsoft's OLE/COM <ref> [Bro96] </ref>. OLE/COM [Bro96], which is purely object-based 1 , operates, so far, only on the company's proper operating systems thus not permitting interoperability across different platforms and operating systems, a major drawback for open GIS. Bridging technology for interfacing CORBA to OLE/COM has recently been initiated by the OMG [Obj96]. <p> Our main objective is to show how open geographic information systems may benefit from distributed computing infrastructures such as OMA [Obj95b], OLE/COM <ref> [Bro96] </ref>, Tina-C [TIN93] or DCE [OSF96]. In this section we show at what level the features and services of these infrastructures intervene in the overall GIS design. We have chosen the Object Management Architecture (OMA) as underlying framework to illustrate the key design principles. <p> In addition, map overlaying, incorporation of location-dependent data and map transformations should be supported. Our geomarketing example underlines these needs particularly Section 5. Conclusion 18 Issue CORBA OLE/COM ILU Organization OMG [Obj95b] Microsoft <ref> [Bro96] </ref> XeroxParc [JS97] Standard open proprietary not a standard Languages C/C++, ADA, C/C++ C/C++, LISP, supported SmallTalk,Cobold Modula-3, Python Operating System all common ones Microsoft's all common ones Paradigm objec oriented object-based, object oriented i.e. no inheritance Open GIS Design Requirement support: component supported possible for C/C++ supported integration (via IDL,
Reference: [CI-96] <author> CI-Labs. </author> <note> OpenDoc. available at http:www.cilabs.org, 1996. </note>
Reference-contexts: These services include Naming service, Event service and Trader service among others [Obj95c]. The CORBA Facilities are intended as higher-level application services. The only currently standardized facility is the Distributed Document Component Facility based on prior work by CI-Lab's OpenDoc standard <ref> [CI-96] </ref>. Other parts of the CORBA facilities are in the RFP-phase 3 of the standardization process, such as standards for mobile coding, data interchange, business object frameworks and internationalization [Obj95a]. Committees for standardizing domain-specific frameworks are currently working with domain experts in medicine, finance, and telecommunication, among others.
Reference: [Dan94] <author> J. Dangermond. </author> <title> ArcView Status and Direction. </title> <journal> ESRI Arc News, </journal> <volume> 16(2) </volume> <pages> 1-6, </pages> <year> 1994. </year> <note> References 20 </note>
Reference-contexts: It can be provided by the GUI component in the CORBA facilities which could be based for instance on ArcView <ref> [Dan94] </ref>. or on a graphical library. In any case it interacts directly with the query manager which is in turn implemented using tools such as Lex (lexical analyzer)/Yacc (parser). Figure 2 shows a screen Section 3.
Reference: [GMS + 97] <author> O. Gunther, R. Muller, P. Schmidt, H. Bhargava, and R. Krishnan. MMM: </author> <title> A Web-Based System for Sharing Statistical Computing Modules. </title> <journal> IEEE Internet Computing, </journal> <volume> 1(3), </volume> <year> 1997. </year>
Reference-contexts: Such a software package or library can be integrated and called across the Internet. Recent work on the definition of a framework to call software packages remotely, e.g., <ref> [GMS + 97] </ref>, illustrates the power of this approach. However, using this framework requires some adaptation effort for open GIS design as the crucial notion of state is missing.
Reference: [GRA] <institution> Geographic Resources Analysis Support System. </institution> <note> Information available at: http://softail.cecer.army.mil. </note>
Reference-contexts: We believe that a firm understanding and specification of this facility will be of great importance in the near future. We are currently working on a prototype open GIS implementation based on the architectural design principles outlined throughout the paper. The components we are integrating are the GIS GRASS <ref> [GRA] </ref>, the DBMS O 2 [BDK92], and the geometric algorithm library LEDA [MN90]. The user interface is based on the graphical library IlogViews [Ilo93]. We are using IONA's implementation of CORBA as underlying communication infrastructure.
Reference: [Gut94] <author> R. H. Guting. </author> <title> An Introduction to Spatial Database Systems. </title> <journal> The VLDB Journal, </journal> <volume> 3(4), </volume> <year> 1994. </year>
Reference-contexts: 1 Introduction A GIS enables to input, store, query, analyze, display and select spatial (geometric, topological) data as well as non-spatial data <ref> [MGR91, LT92, Gut94] </ref>. Traditionally, such functionalities are encompassed within the same system. Basic design principles of open GIS move away from this integrated view. There are many reasons motivating this design. Following are some of them.
Reference: [Ilo93] <author> Ilog. </author> <title> Ilog Views Version 1.1, Reference Manual, </title> <year> 1993. </year>
Reference-contexts: The components we are integrating are the GIS GRASS [GRA], the DBMS O 2 [BDK92], and the geometric algorithm library LEDA [MN90]. The user interface is based on the graphical library IlogViews <ref> [Ilo93] </ref>. We are using IONA's implementation of CORBA as underlying communication infrastructure. We are also working on a formal specification of the CORBA-GIS-facility which will serve as a proposal for the OMG to also address the geographic information processing domain with its standardization efforts.
Reference: [JS97] <author> B. Janssen and M. Spreitzer. </author> <title> ILU Reference Manual. </title> <type> Technical report, </type> <note> Xerox Parc, </note> <year> 1997. </year>
Reference-contexts: In addition, map overlaying, incorporation of location-dependent data and map transformations should be supported. Our geomarketing example underlines these needs particularly Section 5. Conclusion 18 Issue CORBA OLE/COM ILU Organization OMG [Obj95b] Microsoft [Bro96] XeroxParc <ref> [JS97] </ref> Standard open proprietary not a standard Languages C/C++, ADA, C/C++ C/C++, LISP, supported SmallTalk,Cobold Modula-3, Python Operating System all common ones Microsoft's all common ones Paradigm objec oriented object-based, object oriented i.e. no inheritance Open GIS Design Requirement support: component supported possible for C/C++ supported integration (via IDL, IR) components
Reference: [KKN + 96] <author> A. Koschel, R. Kramer, R. Nikolai, W. Hagg, and J. </author> <title> Wie sel. A Federation Architecture for an Environmental Information System Incorporating GIS, the World Wide Web, and CORBA. </title> <booktitle> In Proc. Third International Conf. on Integrating GIS and Environmental Modeling, </booktitle> <year> 1996. </year>
Reference-contexts: However, it uses PVM (partial virtual machine) to achieve distribution and does not address issues related to the use of CORBA. Closer to our work is the architecture described in <ref> [KKN + 96] </ref>, which presents an environmental systems incorporating the GIS GRASS, the World Wide Web and CORBA.
Reference: [LT92] <author> R. Laurini and T. Thompson. </author> <title> Fundamentals of Spatial Information Systems. The A.P.I.C. Series, Number 37. </title> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction A GIS enables to input, store, query, analyze, display and select spatial (geometric, topological) data as well as non-spatial data <ref> [MGR91, LT92, Gut94] </ref>. Traditionally, such functionalities are encompassed within the same system. Basic design principles of open GIS move away from this integrated view. There are many reasons motivating this design. Following are some of them.
Reference: [Mei97] <author> A. Meissner. </author> <title> Data Visualization in Open GIS. </title> <type> Master Thesis, </type> <institution> Freie Universitat Berlin, </institution> <month> November </month> <year> 1997), 1997. </year>
Reference-contexts: In any case it interacts directly with the query manager which is in turn implemented using tools such as Lex (lexical analyzer)/Yacc (parser). Figure 2 shows a screen Section 3. Open Geographic Information Systems 7 hardcopy of our GUI which is currently under development <ref> [Mei97] </ref>. Maps are displayed in windows. Queries are entered in the query editor using a spatial query language which is not our focus here, and the generated code can be visualized in a text editor.
Reference: [MGR91] <editor> D. J. Maguire, M. F. Goodchild, and D. W. Rhind, editors. </editor> <booktitle> Geographical Information Systems: Principles and Applications. </booktitle> <publisher> Longman Scientific and Technical, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: 1 Introduction A GIS enables to input, store, query, analyze, display and select spatial (geometric, topological) data as well as non-spatial data <ref> [MGR91, LT92, Gut94] </ref>. Traditionally, such functionalities are encompassed within the same system. Basic design principles of open GIS move away from this integrated view. There are many reasons motivating this design. Following are some of them.
Reference: [MHG + 92] <author> F. Manola, S. Heiler, D. Georgakopoulos, M. Hornick, and M. Brodie. </author> <title> Distributed Object Management. </title> <booktitle> In Intl. J. of Intelligent and Cooperative Information Systenms 1, </booktitle> <volume> 1, </volume> <year> 1992. </year>
Reference-contexts: The architectures of such distributed systems (e.g., [RAH + 96], [AAD + 93], [PAGM96], to list a few) is usually centralized around a mediator which communicates with wrappers, i.e., interface to data sources. Object management in integrated distributed systems is discussed in <ref> [MHG + 92] </ref>. Open GIS design goes beyond data source integration, but it can generally benefit from these approaches.
Reference: [MMS + 96] <author> E. Mesrobian, R. Muntz, E. Shek, S. Nittel, M. LaRouche, and M. Kriguer. OASIS: </author> <title> An Open Architecture Scientific Information System. </title> <booktitle> In Sixth International Workshop on Research Issues in Data Engineering Interoperability of Nontraditional Database Systems, </booktitle> <pages> pages 107-117. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1996. </year>
Reference-contexts: Bridging technology for interfacing CORBA to OLE/COM has recently been initiated by the OMG [Obj96]. Other teams have exploited the benefits of CORBA for distributed system design. Much work has been done on integrating different data sources across the network (see for instance <ref> [MMS + 96, Ama97] </ref>). Our approach is different as we focus on servicesn rather than on data integration. [BR94] describes a system for air quality control, featuring heterogeneous components, distributed systems and integration of legacy code.
Reference: [MN90] <author> K. Mehlhorn and S. Naher. LEDA: </author> <title> A Library of Efficient Data Types and Algorithms. </title> <booktitle> In ICALP 90 Automata, Languages and Programming, </booktitle> <pages> pages 1-5. </pages> <publisher> Springer, </publisher> <year> 1990. </year>
Reference-contexts: We are currently working on a prototype open GIS implementation based on the architectural design principles outlined throughout the paper. The components we are integrating are the GIS GRASS [GRA], the DBMS O 2 [BDK92], and the geometric algorithm library LEDA <ref> [MN90] </ref>. The user interface is based on the graphical library IlogViews [Ilo93]. We are using IONA's implementation of CORBA as underlying communication infrastructure.
Reference: [Obj90] <author> Object Management Group. </author> <title> The Common Object Request Broker Architecture and Specification. Revision 2.0. </title> <type> Technical report, OMG, </type> <year> 1990. </year>
Reference-contexts: CORBA is part of a larger architectural framework - the Object Management Architecture (OMA) for distributed object computing at large. The OMA specification <ref> [Obj90] </ref> was initially defined by the OMG in 1990. It specifies four interface categories centered around the Object Request Broker (ORB). These categories are: 1. The Common Object Services which provide basic services to all components of the architecture. 2.
Reference: [Obj95a] <institution> Object Management Group. CORBA Facilities. OMG, </institution> <year> 1995. </year>
Reference-contexts: The only currently standardized facility is the Distributed Document Component Facility based on prior work by CI-Lab's OpenDoc standard [CI-96]. Other parts of the CORBA facilities are in the RFP-phase 3 of the standardization process, such as standards for mobile coding, data interchange, business object frameworks and internationalization <ref> [Obj95a] </ref>. Committees for standardizing domain-specific frameworks are currently working with domain experts in medicine, finance, and telecommunication, among others. CORBA provides a uniform object-oriented communication infrastructure. It aims at facilitating and enabling transparent and location-independent invocation of services distributed across heterogeneous computing platforms, regardless of operating system and implementation language.
Reference: [Obj95b] <author> Object Management Group. </author> <title> The Common Object Request Broker Architecture and Specification. Revision 2.0. </title> <type> Technical report, OMG, </type> <year> 1995. </year> <note> References 21 </note>
Reference-contexts: Switching from one level to the other one in the hierarchy is achieved through the use of metavariables, both on the systems and on the data itself. In the sequel, we will make reference to this framework. One of the goals of our work is to demonstrate how CORBA <ref> [Obj95b] </ref> can be employed in the implementation of open GIS. CORBA has been widely recognized as a standard for achieving system interoperability and as base technology for distributed computing environments. <p> Our main objective is to show how open geographic information systems may benefit from distributed computing infrastructures such as OMA <ref> [Obj95b] </ref>, OLE/COM [Bro96], Tina-C [TIN93] or DCE [OSF96]. In this section we show at what level the features and services of these infrastructures intervene in the overall GIS design. We have chosen the Object Management Architecture (OMA) as underlying framework to illustrate the key design principles. <p> CORBA-Based Open GIS Design 11 factoring out domain specific needs of geographic information systems, which leads to a separate component, namely a CORBA-GIS-facility. 4.1 The Common Object Request Broker Architecture The Common Object Request Broker Architecture specification, CORBA 2.0, <ref> [Obj95b] </ref> is an emerging standard for heterogeneous distributed object computing proposed by the Object Management Group (OMG). CORBA is part of a larger architectural framework - the Object Management Architecture (OMA) for distributed object computing at large. The OMA specification [Obj90] was initially defined by the OMG in 1990. <p> Table 1: CORBA features and their use. are generated by a stub-compiler, according to a standardized language mapping, distinct for each programming language. Standardized language mappings for IDL to C, C++, SmallTalk and Ada are available <ref> [Obj95b] </ref>. Mappings for Java, Cobold and other languages are in preparation. <p> The following sections will go into more detail and show how the individual features of the architecture are used in the open GIS design. A more detailed description of the CORBA architecture can be found in the OMG specification <ref> [Obj95b] </ref> or in a surveying article [Vin97]. 4 All components, interacting via the ORB, i.e. CORBA services, CORBA facilities, and domain applications are denoted as 'CORBA objects' in the OMG terminology. All CORBA objects derives from a common supertype, the CORBA::Object interface which provides a common set of operations. <p> In addition, map overlaying, incorporation of location-dependent data and map transformations should be supported. Our geomarketing example underlines these needs particularly Section 5. Conclusion 18 Issue CORBA OLE/COM ILU Organization OMG <ref> [Obj95b] </ref> Microsoft [Bro96] XeroxParc [JS97] Standard open proprietary not a standard Languages C/C++, ADA, C/C++ C/C++, LISP, supported SmallTalk,Cobold Modula-3, Python Operating System all common ones Microsoft's all common ones Paradigm objec oriented object-based, object oriented i.e. no inheritance Open GIS Design Requirement support: component supported possible for C/C++ supported integration
Reference: [Obj95c] <author> Object Management Group. </author> <title> The CORBA Common Object Service Specification. </title> <type> Technical report, OMG, </type> <year> 1995. </year>
Reference-contexts: The functionality implemented by the ORB is supported by the CORBA Common Services which provide basic low-level functions to application objects and other objects located on the bus. These services include Naming service, Event service and Trader service among others <ref> [Obj95c] </ref>. The CORBA Facilities are intended as higher-level application services. The only currently standardized facility is the Distributed Document Component Facility based on prior work by CI-Lab's OpenDoc standard [CI-96]. <p> Altogether 15 services have, so far, been standardized by the OMG <ref> [Obj95c] </ref>. We are not aware of a single CORBA implementation which supports all of them, but we expect to see a complete set of services emerge in the future. Below we discuss two services which support the discovery of components in the distributed system.
Reference: [Obj96] <institution> Object Management Group. CORBA-OLE Bridging. </institution> <type> Technical report, OMG, </type> <year> 1996. </year>
Reference-contexts: OLE/COM [Bro96], which is purely object-based 1 , operates, so far, only on the company's proper operating systems thus not permitting interoperability across different platforms and operating systems, a major drawback for open GIS. Bridging technology for interfacing CORBA to OLE/COM has recently been initiated by the OMG <ref> [Obj96] </ref>. Other teams have exploited the benefits of CORBA for distributed system design. Much work has been done on integrating different data sources across the network (see for instance [MMS + 96, Ama97]).
Reference: [OGI96a] <author> OGIS Technical Committee and the Open GIS Consortium, Inc. </author> <title> The Open GIS Abstract Specification, </title> <note> 1996. Available at http://www.ogis.org/public/abstract.html. </note>
Reference-contexts: The approach is geared towards implementations on top of various distributed computing platforms (DCP), and is articulated around the Open Geodata Model <ref> [OGI96a] </ref> and the OGIS Services Model. It does not claim to be a standard but given the success of this enterprise it might become a de facto Section 3. Open Geographic Information Systems 3 standard.
Reference: [OGI96b] <author> OGIS Technical Committee and the Open GIS Consortium, Inc. </author> <title> The Open GIS Guide (Part I): Introduction to Interoperable Geoprocessing, </title> <note> 1996. Available at http://www.ogis.org/guide/guide1.htm. </note>
Reference-contexts: Among them are ISO/TC211 in the US, CEN/TC287 in Europe, SAIF in Canada, and Interlis in Switzer-land. Significant work has been achieved by the Open GIS Consortium for the past two years. The Open Geodata Interoperability Specification (OGIS) <ref> [OGI96b] </ref> provides a framework to create software that enables users to access and process geographic data from a variety of sources across a generic computing interface. <p> Type map represents such a complex type and map1, ... mapn are objects whose structure is of that type. The definition of such a geospatial conceptual model is not our focus here. A model such as the one of <ref> [OGI96b] </ref> (see Section 3.3) belongs to this category. &lt; integrator:OM:map1 = define-object (map,OM:DB1:fetch-object (downtown-berkeley)); integrator:OM:map2 = define-object (address-map,OM:FS1:select (households,(visit,&gt;,200)); integrator:SM:syst = lookup-catalog (overlay); integrator:OM:map3 = define-object (map,SM:syst:overlay (map1,map2)); integrator:GUI:display (get-from-object-manager (map,map3)); integrator:SM:lookup-dictionary (GIS2,spatial-allocation); integrator:OM:area = define-object (region,SM:GIS2:spatial-allocation (best-spot,map1,map2); integrator:GUI:display (area) &gt; 3.3 The OGIS specifications Created in 1994, the Open GIS <p> The consortium considers new technical and commercial approaches to interoperable and distributed geoprocessing. The main contribution of this initiative is to define Open Geodata Interoperability Specifications (OGIS) <ref> [OGI96b] </ref>, which is a software framework for distributed access to geodata and geoprocessing resources. It is is mainly composed of the following components: * The Open Geodata Model (OGM) defines a representation for modeling the earth and certain phenomena in a mathematical and conceptual way. <p> This model is made of "component services" (modules) used by developers in any geospatial applications. In the current state of the OGIS specification they include (we do not explain them in detail as their name is self-explanatory. For more information see <ref> [OGI96b] </ref>, Chapter 7): Feature catalog, Reference system catalog registry, Semantic transformation, Operation registry, Types registry, Traders (to locate items of interest) and Query service (which is modeled after the OMG Query Service). All these modules are defined with respect to the object model.
Reference: [OSF96] <author> OSF. </author> <title> Distributed Computing Environment. </title> <type> Technical report, </type> <institution> Open Software Foundation, </institution> <year> 1996. </year>
Reference-contexts: CORBA has been widely recognized as a standard for achieving system interoperability and as base technology for distributed computing environments. Based on a rich object model, it is distinct from other approaches such as OSF's DCE <ref> [OSF96] </ref> or Microsoft's OLE/COM [Bro96]. OLE/COM [Bro96], which is purely object-based 1 , operates, so far, only on the company's proper operating systems thus not permitting interoperability across different platforms and operating systems, a major drawback for open GIS. <p> Our main objective is to show how open geographic information systems may benefit from distributed computing infrastructures such as OMA [Obj95b], OLE/COM [Bro96], Tina-C [TIN93] or DCE <ref> [OSF96] </ref>. In this section we show at what level the features and services of these infrastructures intervene in the overall GIS design. We have chosen the Object Management Architecture (OMA) as underlying framework to illustrate the key design principles. The OMA is an open specification for object-oriented distributed computing.
Reference: [PAGM96] <author> Y. Papakonstantinou, S. Abiteboul, and H. Garcia-Molina. </author> <title> Object Fusion in Mediator Systems. </title> <booktitle> In Intl. Conf. on Very Large Databases (VLDB), </booktitle> <year> 1996. </year>
Reference-contexts: In the database area, lots of work has been done on the access to heterogeneous repositories, also called data sources in the database jargon. The architectures of such distributed systems (e.g., [RAH + 96], [AAD + 93], <ref> [PAGM96] </ref>, to list a few) is usually centralized around a mediator which communicates with wrappers, i.e., interface to data sources. Object management in integrated distributed systems is discussed in [MHG + 92]. Open GIS design goes beyond data source integration, but it can generally benefit from these approaches.
Reference: [RAH + 96] <author> M. Tork Roth, M. Arya, L. M. Haas, M. J. Carey, W. F. Cody, R. Fagin, P. M. Schwarz, J. Thomas, and E. L. Wimmers. </author> <title> The Garlic project. </title> <booktitle> In Proceedings of the 1996 ACM Intl. Conf. on Management of Data (SIGMOD), </booktitle> <pages> page 557, </pages> <year> 1996. </year>
Reference-contexts: In the database area, lots of work has been done on the access to heterogeneous repositories, also called data sources in the database jargon. The architectures of such distributed systems (e.g., <ref> [RAH + 96] </ref>, [AAD + 93], [PAGM96], to list a few) is usually centralized around a mediator which communicates with wrappers, i.e., interface to data sources. Object management in integrated distributed systems is discussed in [MHG + 92].
Reference: [TIN93] <author> TINA-C. </author> <title> DPE Phase 0.1 Specification. </title> <type> Technical report, </type> <institution> Telecommunication Information Networking Architecture Consortium, </institution> <year> 1993. </year>
Reference-contexts: Our main objective is to show how open geographic information systems may benefit from distributed computing infrastructures such as OMA [Obj95b], OLE/COM [Bro96], Tina-C <ref> [TIN93] </ref> or DCE [OSF96]. In this section we show at what level the features and services of these infrastructures intervene in the overall GIS design. We have chosen the Object Management Architecture (OMA) as underlying framework to illustrate the key design principles.
Reference: [Vin97] <author> S. Vinoski. </author> <title> CORBA Integrating Diverse Applications Within Distributed heterogeneous Environments. </title> <journal> IEEE Communications Magazine, </journal> <volume> 14(2), </volume> <year> 1997. </year>
Reference-contexts: The following sections will go into more detail and show how the individual features of the architecture are used in the open GIS design. A more detailed description of the CORBA architecture can be found in the OMG specification [Obj95b] or in a surveying article <ref> [Vin97] </ref>. 4 All components, interacting via the ORB, i.e. CORBA services, CORBA facilities, and domain applications are denoted as 'CORBA objects' in the OMG terminology. All CORBA objects derives from a common supertype, the CORBA::Object interface which provides a common set of operations. Section 4.
Reference: [Voi95] <author> A. Voisard. Mapgets: </author> <title> A Tool for Visualizing and Querying Geographic Information. Journal of Visual Languages and Computing, </title> <publisher> Academic Press, </publisher> <address> 6, </address> <year> 1995. </year>
Reference-contexts: For maps, another very common type of geo-data, standardized formats specifying representation, spatial query operations, and visualization means need to be present. This could be achieved using a concept such as a the map-windowing technique for editing and spatially querying maps proposed in <ref> [Voi95] </ref>. In addition, map overlaying, incorporation of location-dependent data and map transformations should be supported. Our geomarketing example underlines these needs particularly Section 5.
Reference: [VS98] <author> A. Voisard and H. Schweppe. </author> <title> Abstraction and Decomposition in Open GIS. </title> <note> To appear in Intl. Journal on Geographical Information Systems (IJGIS), </note> <year> 1998. </year>
Reference-contexts: Open Geographic Information Systems 3 standard. However, to our knowledge, the mapping onto DCP, which is one of our goals here, has not been studied so far in this context. <ref> [VS98] </ref> is concerned with conceptual design issues and proposes a layered decomposition of an open GIS architecture. A high level of abstraction, the application level, is refined until the system level is reached. <p> Previous work on open GIS integration is based on transparency, that is, operations are called without exact knowledge of the systems that provide them. A mechanism based on global knowledge on the overall system and on heuristics (as the ones proposed in [WWC92] or in <ref> [VS98] </ref> at the concrete services levels) is in charge of finding the appropriate capabilities over the network. It is clear that such a mechanism could be bypassed if the user needs to run a specific algorithm from a specific system. <p> The object manager is in charge of fetching relevant objects from repositories and of defining and storing them locally (given the size of the objects involved, it could use a virtual database which consists on a view on many repositories. This is beyond our study. For more information see <ref> [VS98] </ref>). Finding objects is concerned with simple selections and distributed spatial data retrieval (e.g., [Karacapadilis ACMGIS'95). The mechanism is based on the one of a distributed spatial query language. <p> This list of instructions corresponds to a session of the concrete services level of <ref> [VS98] </ref>. What is exactly asked to systems (as for instance in DB1:fetch-object (downtown-berkeley) where system DB1 is supposed to give back the map of downtown Berkeley), is not our main concern here.
Reference: [WWC92] <author> G. Wiederhold, P. Wegner, and S. Ceri. </author> <title> Toward Megaprogramming. </title> <journal> Communications of the ACM, </journal> <volume> 35(11) </volume> <pages> 89-99, </pages> <year> 1992. </year>
Reference-contexts: Previous work on open GIS integration is based on transparency, that is, operations are called without exact knowledge of the systems that provide them. A mechanism based on global knowledge on the overall system and on heuristics (as the ones proposed in <ref> [WWC92] </ref> or in [VS98] at the concrete services levels) is in charge of finding the appropriate capabilities over the network. It is clear that such a mechanism could be bypassed if the user needs to run a specific algorithm from a specific system.
References-found: 35

