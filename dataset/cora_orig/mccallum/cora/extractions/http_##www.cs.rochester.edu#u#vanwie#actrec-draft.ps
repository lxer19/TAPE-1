URL: http://www.cs.rochester.edu/u/vanwie/actrec-draft.ps
Refering-URL: http://www.cs.rochester.edu/stats/oldmonths/1998.04/docs-bytes.html
Root-URL: 
Email: vanwie@cs.rochester.edu  
Title: Action Recognition in the Rhino Cooperative Framework  
Author: Michael Van Wie 
Note: supported this work.  
Date: March 1998  
Address: Rochester, NY 14627  Rochester, New York 14627  
Affiliation: Computer Science Department University of Rochester  The University of Rochester Computer Science Department  The University of Rochester Computer Science Department  
Pubnum: Technical Report DRAFT  
Abstract: The University of Rochester's Rhino system is a locally organized cooperative agent architecture that uses observation as its primary means of inter-agent coordination. Observing agents recognize on-going individual actions, and from sequences of actions reason about likely on-going plans. Sets of individual plans are combined to form hypothesized group plans. A key element in the group plan inference process is the recognition of individual agents' actions. Action recognition is the problem of describing an observed agent's activity as goal-directed behavior. Atomic actions are those whose effects occur instantaneously; composite actions take place over time. This paper proposes a knowledge-based, Bayesian technique for describing, detecting and classifying actions. To recognize atomic actions, we use Bayes nets to detect the corresponding instantaneous changes in world state. Composite actions are recognized by hidden Markov models, which describe them as sequences of atomic actions. Previous approaches to action recognition have required tedious knowledge engineering, and have been unreliable in the face of sensor error. Given an action-library, Rhino's approach automatically constructs action-recognizers that are robust to sensor error. 
Abstract-found: 1
Intro-found: 1
Reference: [Allen, 1984] <author> James Allen, </author> <title> "Towards a General Theory of Action and Time," </title> <journal> Artificial Intelligence, </journal> <volume> 23:123 - 154, </volume> <year> 1984. </year>
Reference-contexts: Representative work in action recognition includes [Pinhanez and Bobick, 1997]. [Pinhanez and Bobick, 1997] offers a method for applying propositional domain knowledge to action recognition, using a constraint network architecture based on Allen's interval logic <ref> [Allen, 1984] </ref>. Their modified temporal network is called a PNF net, and recognizes actions with subparts that may occur sequentially, in parallel, or in other temporal relations to each other. 2 One interesting aspect of Pinhanez and Bobick's work is their sensor construction.
Reference: [Bobick, 1997] <author> Aaron F. Bobick, </author> <title> "Movement, Activity and Action: the Role of Knowledge in the Perception of Motion," </title> <booktitle> Royal Society Workshop on Knowledge-based Vision in Man and Machine, </booktitle> <year> 1997. </year>
Reference-contexts: The achievement makes its consequences true for the following time interval. This tripartite structure is known as the event nucleus. Each of the phases may be compounded for example, the preparatory activity may be iterated, or even composed of several different activities. Aaron Bobick gives a vision-oriented taxonomy in <ref> [Bobick, 1997] </ref>. Bobick's primary distinction is that between activities and achievements (which he calls "actions"): is the thing being recognized merely a sequence of physical motions, or does it have logical consequences in the world? His taxonomy offers the following categories: 1. <p> In other cases, sensor beliefs may characterize ambiguity in the incoming data, including levels of activation in neural nets or similar phenomena. 7 Action Models Action recognition is the problem of inferring goal-oriented intentions behind observed movements <ref> [Bobick, 1997] </ref>, and is therefore impossible in the absence of propositional world knowledge. Rhino models world knowledge using multi-valued Bayesian beliefs: basically, discrete probability density functions over the exhaustive, mutually exclusive values of a proposition.
Reference: [Brand et al., 1997] <author> Matthew Brand, Nuria Oliver, and Alex Pentland, </author> <title> "Coupled Hidden Markov Models for Complex Action Recognition," </title> <address> CVPR, </address> <year> 1997. </year>
Reference-contexts: Bregler, for example, uses HMM's and Expectation Maximization to classify video streams into known types of movement [Bregler, 1997]. [Polana and Nelson, 1994] detects periodic motions by analyzing the Fourier transform of a video stream, then classify the motion by a template matching technique (nearest-centroid). <ref> [Brand et al., 1997] </ref> introduces coupled hidden Markov models (CHMM's) to recognize activities composed of causally related sub-activities.
Reference: [Bregler, 1997] <author> Christoph Bregler, </author> <title> "Learning and Recognizing Human Dynamics in Video Sequences," </title> <booktitle> Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: Representative papers include [Bregler, 1997; Polana and Nelson, 1994; Polana, 1994; Brand et al., 1997]. Bregler, for example, uses HMM's and Expectation Maximization to classify video streams into known types of movement <ref> [Bregler, 1997] </ref>. [Polana and Nelson, 1994] detects periodic motions by analyzing the Fourier transform of a video stream, then classify the motion by a template matching technique (nearest-centroid). [Brand et al., 1997] introduces coupled hidden Markov models (CHMM's) to recognize activities composed of causally related sub-activities.
Reference: [Cohen et al., 1990] <author> P. Cohen, H. Levesque, and J. H. Nunes, </author> <title> "On Acting Together," </title> <booktitle> Proceedings AAAI-90, </booktitle> <year> 1990. </year>
Reference-contexts: Swarms are difficult to control but robust in the face of individual unit failures; communicating teams are capable of more coordinated action but often do not account for unit failure. Joint Intentions, developed by Cohen, Levesque, and Nunes <ref> [Cohen et al., 1990] </ref> and adapted to robotic control in [Jennings, 1995], is a robust approach to locally-organized multi-agent control using communication among agents. It specifies a level of commitment to a plan or a recipe.
Reference: [Ephrati et al., 1995] <author> E. Ephrati, M. Pollack, and S. </author> <title> Ur, "Deriving Multi-Agent Coordination through Filtering Strategies," </title> <booktitle> Proceedings of the 14th International Joint Conference on Artificial Intelligence, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Strategies that prune the space of available actions based on their preconditions are called filtering strategies, and Martha Pollack has shown them to improve the efficiency of coordinating teams, planning, and acting <ref> [Pollack, 1992; Ephrati et al., 1995; Pollack et al., 1994] </ref>. Rhino filters actions by matching their PConds against the prevailing world-state. Only PConds that are dominated by some belief in the current world-state are considered true.
Reference: [Huber and Durfee, 1995] <author> Marcus J. Huber and Edmund H. Durfee, </author> <title> "On Acting Together: Without Communication," </title> <booktitle> AAAI Spring Symposium on Representing Mental States and Mechanisms, </booktitle> <pages> pages 60 - 71, </pages> <year> 1995. </year>
Reference-contexts: Milind Tambe [Tambe, 1997] attacks several of these problems, developing techniques both to recruit new members when agents defect from important roles, and to calculate the utility of a message in cases where communication may not be necessary. A further problem arises in domains where communication is infeasible. <ref> [Huber and Durfee, 1995] </ref> adapt Joint Intentions to domains where agents can not communicate, deriving Bayes Nets from plan libraries. Given a sequence of observations, Huber and Durfee's nets can attribute an agents' behavior to a number of different causes.
Reference: [Jennings, 1995] <author> N. R. Jennings, </author> <title> "Controlling Cooperative Problem Solving in Industrial Multi-agent Systems Using Joint Intentions," </title> <journal> Artificial Intelligence, </journal> <volume> 75(2), </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: Swarms are difficult to control but robust in the face of individual unit failures; communicating teams are capable of more coordinated action but often do not account for unit failure. Joint Intentions, developed by Cohen, Levesque, and Nunes [Cohen et al., 1990] and adapted to robotic control in <ref> [Jennings, 1995] </ref>, is a robust approach to locally-organized multi-agent control using communication among agents. It specifies a level of commitment to a plan or a recipe. Team members remain committed to a group goal until the goal is deemed achieved or impossible.
Reference: [Kuniyoshi et al., 1994] <author> Y. Kuniyoshi, M. Inaba, and H. Inoue, </author> <title> "Learning by Watching: Extracting Reusable Task Knowledge from Visual Observation of Human Performance," </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 10(6):799 - 822, </volume> <month> December </month> <year> 1994. </year>
Reference-contexts: The fundamental procedure in Rhino's inference process is the recognition of actions using Bayesian networks and hidden Markov models. Action recognition (and the related technique of activity recognition) has been studied recently in domains such as video surveillance, video indexing, and scene understanding. <ref> [Kuniyoshi et al., 1994] </ref> have applied activity recognition to the problem of coordinating small groups of autonomous mobile robots solely through observation. Indeed, action and activity recognition are the key problems underlying systems that cooperate by observation.
Reference: [Pearl, 1988] <author> J. Pearl, </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference, </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <year> 1988. </year>
Reference-contexts: Detectors are true or false, with no allowance for partial detection or probable detection of events. In contrast, our sensors output Bayesian probability density functions, which are then combined using Pearl's Bayes net formalism <ref> [Pearl, 1988] </ref> to achieve robust action recognition under uncertain conditions. Though our technique is restricted to recognition of atomic actions, it combines readily with HMM-based techniques to give richer temporal structure. <p> In this view, beliefs are subjective probabilities the represent an agent's confidence in the likelihoods of being in one of several possible worlds. Beliefs follow the laws of probability and combine like frequencies, as motivated in <ref> [Pearl, 1988] </ref>. All beliefs therefore follow the format of the action likelihood vectors in definition 2.2. An example belief is shown in Fig. 4. <p> Similarly, call "no" values N 0 and N i . Conditional probabilities for node values are expressed by P (Y i jY R ). The value of the "yes" decision of a HasHappened subnet follows from Pearl's propagation scheme <ref> [Pearl, 1988] </ref>. ffY 0 = i2leaves [Y i P (Y i jY 0 ) + N i P (N i jY 0 )] (1) Y i2leaves [Y i P (Y i jN 0 ) + N i P (N i jN 0 )] (2) Here, ff is a scaling factor used
Reference: [Pinhanez and Bobick, 1997] <author> Claudio Pinhanez and Aaron Bobick, </author> <title> "Human Action Detection Using PNF Propagation of Temporal Constraints," </title> <institution> ICCV, MIT Perceptual Computing Tech. </institution> <note> Report 423 1997. </note>
Reference-contexts: We are interested primarily in action recognition, and therefore operate at a higher level of abstraction than the work in activity recognition. Representative work in action recognition includes <ref> [Pinhanez and Bobick, 1997] </ref>. [Pinhanez and Bobick, 1997] offers a method for applying propositional domain knowledge to action recognition, using a constraint network architecture based on Allen's interval logic [Allen, 1984]. <p> We are interested primarily in action recognition, and therefore operate at a higher level of abstraction than the work in activity recognition. Representative work in action recognition includes <ref> [Pinhanez and Bobick, 1997] </ref>. [Pinhanez and Bobick, 1997] offers a method for applying propositional domain knowledge to action recognition, using a constraint network architecture based on Allen's interval logic [Allen, 1984]. <p> Sensor Model: "Belief Sensors" Rhino provides a back-end to an agent's array of physical sensors that converts sensor output into probabilistic beliefs of the form described in Section 2.2. The sensors therefore do the initial processing of real-world data into higher-level beliefs. This model is followed by <ref> [Pinhanez and Bobick, 1997] </ref>, and allows the Rhino system to remain decoupled from its domain: Rhino operates solely on beliefs, without regard for the algorithms and data that led to those beliefs. Fig. 5 depicts a generalization of the typical sensor architecture.
Reference: [Polana, 1994] <author> Ramprasad Polana, </author> <title> "Temporal Texture and Activity Recognition," </title> <type> Technical report, </type> <institution> University of Rochester Computer Science Department, </institution> <year> 1994. </year>
Reference: [Polana and Nelson, 1994] <author> Ramprasad Polana and Randal Nelson, </author> <title> "Nonparametric Recognition of Nonrigid Motion," </title> <type> Technical report, </type> <institution> University of Rochester Computer Science Department, </institution> <year> 1994. </year>
Reference-contexts: Representative papers include [Bregler, 1997; Polana and Nelson, 1994; Polana, 1994; Brand et al., 1997]. Bregler, for example, uses HMM's and Expectation Maximization to classify video streams into known types of movement [Bregler, 1997]. <ref> [Polana and Nelson, 1994] </ref> detects periodic motions by analyzing the Fourier transform of a video stream, then classify the motion by a template matching technique (nearest-centroid). [Brand et al., 1997] introduces coupled hidden Markov models (CHMM's) to recognize activities composed of causally related sub-activities.
Reference: [Pollack, 1992] <author> M. Pollack, </author> <title> "The Uses of Plans," </title> <journal> Artificial Intelligence, </journal> <volume> 57:43 - 68, </volume> <year> 1992. </year>
Reference-contexts: Strategies that prune the space of available actions based on their preconditions are called filtering strategies, and Martha Pollack has shown them to improve the efficiency of coordinating teams, planning, and acting <ref> [Pollack, 1992; Ephrati et al., 1995; Pollack et al., 1994] </ref>. Rhino filters actions by matching their PConds against the prevailing world-state. Only PConds that are dominated by some belief in the current world-state are considered true.
Reference: [Pollack et al., 1994] <author> M. Pollack, D. Joslin, A. Nunes, S. Ur, and E. Ephrati, </author> <title> "Experimental Investigation of an Agent-Commitment Strategy," </title> <type> Technical Report 94-31, </type> <institution> University of Pittsburgh Department of Computer Science, </institution> <year> 1994. </year>
Reference-contexts: Strategies that prune the space of available actions based on their preconditions are called filtering strategies, and Martha Pollack has shown them to improve the efficiency of coordinating teams, planning, and acting <ref> [Pollack, 1992; Ephrati et al., 1995; Pollack et al., 1994] </ref>. Rhino filters actions by matching their PConds against the prevailing world-state. Only PConds that are dominated by some belief in the current world-state are considered true.
Reference: [Rabiner and Juang, 1986] <author> L. R. Rabiner and B. H. Juang, </author> <title> "An Introduction to Hidden Markov Models," </title> <journal> IEEE ASSP Magazine, </journal> <pages> pages 4 - 16, </pages> <year> 1986. </year> <month> 21 </month>
Reference-contexts: The recognition problem 16 probable. A node's effects occur with high probability; others with low probability. is solved using the Forward-Backward procedure as described in <ref> [Rabiner and Juang, 1986] </ref>.
Reference: [Steedman, 1996] <author> Mark Steedman, </author> <month> Temporality, </month> <pages> pages 898 - 904, </pages> <publisher> Elsevier North Holland, </publisher> <year> 1996. </year>
Reference-contexts: There is an immense body of linguistic, philosophical, and AI literature that attempts to characterize the distinction between different types of acts. Different types of physical acts have different temporal structures. It is important to understand the distinctions in act types before attempting to recognize them. <ref> [Steedman, 1996] </ref> offers the following taxonomy: 1. Activities are ongoing physical movements that don't result in any important change in the world-state. (Note that the definition of "important" is left to the observer!) A typical example is the sentence, "Fred ran." 2.
Reference: [Tambe, 1997] <author> Milind Tambe, </author> <title> "Agent Architectures for Flexible, Practical Teamwork," </title> <publisher> AAAI, </publisher> <year> 1997. </year>
Reference-contexts: In addition, many tasks may be achievable even when some number of member agents defect. Finally, communication may be expensive, and in many cases it is not necessary to communicate in order to remain coordinated. Milind Tambe <ref> [Tambe, 1997] </ref> attacks several of these problems, developing techniques both to recruit new members when agents defect from important roles, and to calculate the utility of a message in cases where communication may not be necessary.
References-found: 18

