URL: http://caesar.me.jhu.edu/publications/InvKinematics.ps
Refering-URL: http://caesar.me.jhu.edu/publications.html
Root-URL: 
Title: A Combinatorial Approach to Trajectory Planning for Binary Manipulators  
Author: David S. Lees Gregory S. Chirikjian 
Address: Baltimore, MD 21218  
Affiliation: Department of Mechanical Engineering, Johns Hopkins University,  
Abstract: Binary manipulators are powered by actuators which have only two stable states. Therefore, they can reach only a discrete (but possibly large) number of locations. Compared to a manipulator built with continuous actuators, a binary manipulator provides reasonable performance, and is relatively inexpensive (up to an order of magnitude cheaper). The number of states of a binary manipulator grows exponentially with the number of actuators. This makes the calculation of its inverse kinematics quite difficult. This paper presents a combinatorial method for computing the inverse kinematics of a binary manipulator that reduces the search space to a manageable size. It also creates extremely smooth motions that follow a specified trajectory very accurately (in both position and orientation), despite the discrete nature of binary actuation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. L. Bergstrom, T. Tamagawa, and D.L. Polla, </author> <booktitle> "Design and fabrication of micromechanical logic elements", in Proceedings of the IEEE Micro Electro Mechanical Systems Workshop, </booktitle> <address> Napa, CA, </address> <month> February </month> <year> 1990, </year> <pages> pp. 15-20. </pages>
Reference-contexts: For example, they could be used in a laproscope, or as an element of a catheter. For applications on such a small scale, it is much easier to build discrete actuators (e.g. actuators operated by electrostatic forces <ref> [1] </ref>) than to build continuous actuators. While the hardware costs of a binary manipulator are lower than for a continuously actuated manipulator, there is a tradeoff in the complexity of the trajectory planning software. The number of possible configurations of a binary robot grows exponentially with the number of actuators.
Reference: [2] <author> G. S. Chirikjian, </author> <title> "A binary paradigm for robotic manipulators", </title> <booktitle> in Proceedings of the 1994 IEEE International Conference on Robotics and Automation, </booktitle> <year> 1994, </year> <pages> pp. 3063-3069. </pages>
Reference-contexts: Then, a brief history of the development of binary robots is presented. 2.1 Kinematics of Redundant Manipula tors A number of efforts have been made to study the kinematics and control of hyper-redundant manipulators with continuous actuators. Chirikjian presents the forward kinematics of a truss based manipulator in <ref> [2] </ref>. He has also demonstrated an approach to computing the inverse kinematics of a binary manipulator by making it adhere to a specified curve [3]. Hughes [4], has analyzed the characteristics of VGT based manipulators, including finding estimates of their stiffness using finite element methods. <p> B, the number of degrees of freedom (same as number of bits) of the manipulator. 6. The geometry of the manipulator modules for computing the forward kinematics (using, for ex ample, the method in <ref> [2] </ref>).
Reference: [3] <author> G. S. Chirikjian and D. Lees, </author> <title> "Inverse kinematics of binary manipulators with applications to service robotics", </title> <booktitle> in ICOR `95, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Chirikjian presents the forward kinematics of a truss based manipulator in [2]. He has also demonstrated an approach to computing the inverse kinematics of a binary manipulator by making it adhere to a specified curve <ref> [3] </ref>. Hughes [4], has analyzed the characteristics of VGT based manipulators, including finding estimates of their stiffness using finite element methods. The kinematics of hyper-redundant VGT truss manipulators embody elements of the kinematics of both serial and parallel mechanisms.
Reference: [4] <author> P.C. Hughes, </author> <title> "Trussarm a variable-geometry-truss manipulator", </title> <journal> J. of Intelligent Materials, Systems and Structures, </journal> <volume> vol. 2, </volume> <pages> pp. 148-160, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Chirikjian presents the forward kinematics of a truss based manipulator in [2]. He has also demonstrated an approach to computing the inverse kinematics of a binary manipulator by making it adhere to a specified curve [3]. Hughes <ref> [4] </ref>, has analyzed the characteristics of VGT based manipulators, including finding estimates of their stiffness using finite element methods. The kinematics of hyper-redundant VGT truss manipulators embody elements of the kinematics of both serial and parallel mechanisms.
Reference: [5] <author> J. Canny and K. Goldberg, </author> <title> "A risc paradigm for industrial robotics", </title> <type> Tech. Rep. </type> <institution> ESRC 93-4/RAMP 93-2, Engineering Systems Research Center, University of California at Berkeley, </institution> <year> 1993. </year>
Reference-contexts: For example, Canny and Goldberg <ref> [5] </ref> have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation [6, 7].
Reference: [6] <institution> M.T. Mason, "Kicking the sensing habit", AI Magazine, </institution> <month> Spring </month> <year> 1993. </year>
Reference-contexts: For example, Canny and Goldberg [5] have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation <ref> [6, 7] </ref>. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even without feedback, within certain broad limits.
Reference: [7] <author> K. Goldberg, </author> <title> "Orienting polygonal parts without sensors", </title> <journal> Algorithmica, 1992, Special robotics issue. </journal>
Reference-contexts: For example, Canny and Goldberg [5] have proposed an architecture for robotic manipulation that is analogous to the RISC approach to computation. There have also been several efforts to develop reliable sensorless manipulation <ref> [6, 7] </ref>. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even without feedback, within certain broad limits.
Reference: [8] <author> Michael A. Erdmann and Matthew T. Mason, </author> <title> "Exploration of sensorless manipulation", </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> vol. 4, </volume> <pages> pp. 369-379, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: There have also been several efforts to develop reliable sensorless manipulation [6, 7]. In sensorless manipulation, the geometric constraints of a task are exploited to create a manipulation strategy that is guaranteed to succeed even without feedback, within certain broad limits. For example, Erdmann and Mason <ref> [8] </ref> have demonstrated an algorithm that can force an "L" shaped bracket into a known orientation by placing it on a tray and moving the tray through a pre-determined sequence of motions. Binary robots are a natural extension of sensor-less manipulation.
Reference: [9] <author> V.C. Anderson and R.C. Horn, </author> <title> "Tensor arm manipulator design", </title> <type> Tech. Rep., ASME paper 67-DE-57, </type> <year> 1967. </year>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [9, 10, 11] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [10] <author> D.L. Pieper, </author> <title> The Kinematics of Manipulators under Computer Control, </title> <type> PhD thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1968. </year>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [9, 10, 11] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [11] <author> B Roth, J. Rastegar, and V. Scheinman, </author> <title> "On the design of computer controlled manipulators", </title> <booktitle> First CISM-IFTMM Symp. on Theory and Practice of Robots and Manipulators, </booktitle> <pages> pp. 93-113, </pages> <year> 1973, </year> <pages> (see pp. 106-108). 6 </pages>
Reference-contexts: Sensorless manipulation reduces the need to sense a robot's environment, while binary actuators allow us to build a robot without joint-level sensing of position and velocity. There have been a number of efforts in the past to build robots with binary actuators <ref> [9, 10, 11] </ref>. However, at the time these projects were undertaken, effective algorithms for controlling hyper-redundant manipulators had not yet been developed, nor were computers sufficiently powerful to control robots with many degrees of freedom, even if they could have used the control algorithms that are currently available.
Reference: [12] <author> I. Ebert-Uphoff and G. S. Chirikjian, </author> <title> "Effi--cient workspace generation for binary manipulators with many actuators", </title> <journal> Journal of Robotic Systems, </journal> <month> June </month> <year> 1995. </year>
Reference-contexts: Recent results in binary robotics research include an efficient algorithm to compute the workspace of binary robots <ref> [12] </ref> and a method to synthesize a binary manipulator that reaches a specific set of points exactly [13]. 3 Definitions and Description of Algo rithm This section defines the terminology used to discuss the inverse kinematics algorithm and describes its implementation. The terminology used here was originally defined in [12]. 3.1 <p> robots <ref> [12] </ref> and a method to synthesize a binary manipulator that reaches a specific set of points exactly [13]. 3 Definitions and Description of Algo rithm This section defines the terminology used to discuss the inverse kinematics algorithm and describes its implementation. The terminology used here was originally defined in [12]. 3.1 Definition of Terms Module A module is a kinematically independent element of a manipulator. For example, an individual truss of the variable geometry truss (VGT) manipulator shown in Figure 1 is a module for a truss manipulator.
Reference: [13] <author> G.S. Chirikjian, </author> <title> "Kinematic synthesis of mechanisms and robotic manipulators with binary actuators", </title> <booktitle> in 1994 ASME Mechanisms Conference, </booktitle> <address> Minneapolis, MN, </address> <month> Sept </month> <year> 1994. </year>
Reference-contexts: Recent results in binary robotics research include an efficient algorithm to compute the workspace of binary robots [12] and a method to synthesize a binary manipulator that reaches a specific set of points exactly <ref> [13] </ref>. 3 Definitions and Description of Algo rithm This section defines the terminology used to discuss the inverse kinematics algorithm and describes its implementation. The terminology used here was originally defined in [12]. 3.1 Definition of Terms Module A module is a kinematically independent element of a manipulator.
Reference: [14] <author> F.C. Park, </author> <title> "Distance metrics on the rigid-body motions with applications to mechanism design", </title> <journal> ASME Journal of Mechanical Design, </journal> <volume> vol. 117, </volume> <pages> pp. 48-54, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: Other metrics for measuring error in both position and orientation can be used analogously, e.g., those defined in <ref> [14, 15] </ref>. To avoid exponential growth in the search space as the number of actuators grows, we solve the inverse kinematics incrementally by changing only a small number of actuators at a time.
Reference: [15] <author> J.M.R. Martinez and J. Duffy, </author> <title> "On the metrics of rigid body displacements for infinite and finite bodies", </title> <journal> ASME Journal of Mechanical Design, </journal> <volume> vol. 117, </volume> <pages> pp. 41-47, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: Other metrics for measuring error in both position and orientation can be used analogously, e.g., those defined in <ref> [14, 15] </ref>. To avoid exponential growth in the search space as the number of actuators grows, we solve the inverse kinematics incrementally by changing only a small number of actuators at a time.
Reference: [16] <author> Sheldon Ross, </author> <title> A First Course in Probability, </title> <publisher> MacMillan, </publisher> <address> New York, NY, </address> <year> 1984. </year>
Reference-contexts: The principles on which the algorithm is built are described in more detail in the following sections. 3.2.1 Searching Robot Configurations Consider the standard definition of the binomial theorem <ref> [16] </ref>: (x + y) n = i=0 n If we let x = 1 and let y = 1, we get the following result: (1 + 1) n = i=0 n 3 2 n = i=0 n Therefore, if we have a 10 module truss robot, for example, we can search
Reference: [17] <author> Bradley W. Jackson and Dmitri Thoro, </author> <title> Applied Combinatorics with Problem Solving, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year> <month> 7 </month>
Reference-contexts: Algorithms for enumerating all possible combinations of a given set in lexicographic order are presented in a number of applied combinatorics texts. The specific algorithm used for the work in this paper is described in <ref> [17] </ref>. 3.3 Algorithm Description This section presents a detailed description of the combinatorial inverse kinematics algorithm. Inputs to the Algorithm: 1. EE des , the desired position of the manipulator's end effector. 2.
References-found: 17

