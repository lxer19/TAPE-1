URL: http://cs.jhu.edu/~baruch/COST-BENEFIT/VIRT-CIRCUIT/Virt-Circuits.ps
Refering-URL: http://cs.jhu.edu/~baruch/COST-BENEFIT/index.html
Root-URL: http://www.cs.jhu.edu
Title: Throughput-Competitive On-Line Routing  
Author: Baruch Awerbuch Yossi Azar Serge Plotkin 
Degree: and DEC SRC  
Affiliation: Lab. for Computer Science MIT  Tel-Aviv University  Dept. of Computer Science Stanford University  
Abstract: We develop a framework that allows us to address the issues of admission control and routing in high-speed networks under the restriction that once a call is admitted and routed, it has to proceed to completion and no reroutings are allowed. The "no rerouting" restriction appears in all the proposals for future high-speed networks and stems from current hardware limitations, in particular the fact that the bandwidth-delay product of the newly developed optical communication links far exceeds the buffer capacity of the network. In case the goal is to maximize the throughput, our framework yields an on-line O(log nT )- competitive strategy, where n is the number of nodes in the network and T is the maximum call duration. In other words, our strategy results in throughput that is within O(log nT ) factor of the highest possible throughput achievable by an omniscient algorithm that knows all of the requests in advance. Moreover, we show that no on-line strategy can achieve a better competitive ratio. Our framework leads to competitive strategies applicable in several more general settings. Extensions include assigning each connection an associated "profit" that represents the importance of this connection, and addressing the issue of call-establishment costs.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin, and O. Waarts. </author> <title> On-line machine scheduling with applications to load balancing and virtual circuit routing. </title> <booktitle> In Proc. 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 623-631, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The algorithm employs techniques similar to To appear in Proc. 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 ones previously used in the setting of multi--commodity network flow [14, 12], approximate fractional packing [13] and on-line load balancing <ref> [1, 6] </ref>. In particular, we make extensive use of the idea of assigning each edge a cost function that is exponential in its current load, and the idea of concurrently working with multiple copies of the graph, one copy per each time instance. <p> to load for the case of 2 Note that using relative load as a performance measure makes sense only if we implicitly assume that the off-line algorithm does not need to reject any requests and disallow rejections by the on-line algorithm as well. permanent virtual circuit routing were presented in <ref> [1] </ref>. Extension of these techniques to the case of virtual circuits with known duration appeared in [6]. Recent results in [3] address the case where the duration of each virtual circuit is a priori unknown.
Reference: [2] <editor> Special issue on Asynchronous Transfer Mode. </editor> <title> Int. </title> <journal> Journal of Digital and Analog Cabled Systems, </journal> <volume> 1(4), </volume> <year> 1988. </year>
Reference-contexts: However, these approaches are usually inappropriate in the context of Gigabit rate networks (e.g. atm <ref> [2] </ref>, paris/planet [4, 8]). This is mostly due to the fact that the product of transmission rates and network latency well exceeds the available nodal buffer space, in other words because of the high bandwidth-delay product.
Reference: [3] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts. </author> <title> Competitive routing of virtual circuits with unknown duration. </title> <type> Unpublished manuscript, </type> <month> July </month> <year> 1993. </year>
Reference-contexts: Extension of these techniques to the case of virtual circuits with known duration appeared in [6]. Recent results in <ref> [3] </ref> address the case where the duration of each virtual circuit is a priori unknown.
Reference: [4] <author> B. Awerbuch, I. Cidon, I. Gopal, M. Ka-plan, and S. Kutten. </author> <title> Distributed control for PARIS. </title> <booktitle> In Proc. 9th Annual ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 145-160, </pages> <year> 1990. </year>
Reference-contexts: However, these approaches are usually inappropriate in the context of Gigabit rate networks (e.g. atm [2], paris/planet <ref> [4, 8] </ref>). This is mostly due to the fact that the product of transmission rates and network latency well exceeds the available nodal buffer space, in other words because of the high bandwidth-delay product.
Reference: [5] <author> Y. Azar, A. Broder, and A. Karlin. </author> <title> Online load balancing. </title> <booktitle> In Proc. 33rd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 218-225, </pages> <year> 1992. </year>
Reference-contexts: Alternatively, the on-line algorithm can satisfy all of these requests if we increase the capacity of each edge by a factor of . The problem of minimizing the relative load in the context of machine scheduling was considered in <ref> [7, 5] </ref>.
Reference: [6] <author> Y. Azar, B. Kalyanasundaram, S. Plotkin, K. Pruhs, and O. Waarts. </author> <title> On-line load balancing of temporary tasks. </title> <booktitle> In Proc. Workshop on Algorithms and Data Structures, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: The algorithm employs techniques similar to To appear in Proc. 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 ones previously used in the setting of multi--commodity network flow [14, 12], approximate fractional packing [13] and on-line load balancing <ref> [1, 6] </ref>. In particular, we make extensive use of the idea of assigning each edge a cost function that is exponential in its current load, and the idea of concurrently working with multiple copies of the graph, one copy per each time instance. <p> Extension of these techniques to the case of virtual circuits with known duration appeared in <ref> [6] </ref>. Recent results in [3] address the case where the duration of each virtual circuit is a priori unknown.
Reference: [7] <author> Y. Azar, J. Naor, and R. </author> <title> Rom. The competitiveness of on-line assignment. </title> <booktitle> In Proc. 3rd ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 203-210, </pages> <year> 1992. </year>
Reference-contexts: Alternatively, the on-line algorithm can satisfy all of these requests if we increase the capacity of each edge by a factor of . The problem of minimizing the relative load in the context of machine scheduling was considered in <ref> [7, 5] </ref>.
Reference: [8] <author> I. Cidon and I. S. Gopal. PARIS: </author> <title> An approach to integrated high-speed private networks. </title> <journal> International Journal of Digital & Analog Cabled Systems, </journal> <volume> 1(2) </volume> <pages> 77-86, </pages> <month> April-June </month> <year> 1988. </year>
Reference-contexts: However, these approaches are usually inappropriate in the context of Gigabit rate networks (e.g. atm [2], paris/planet <ref> [4, 8] </ref>). This is mostly due to the fact that the product of transmission rates and network latency well exceeds the available nodal buffer space, in other words because of the high bandwidth-delay product.
Reference: [9] <author> J. Garay, I. Gopal, S. Kutten, Y. Mansour, and M. Yung. </author> <title> Efficient on-line call control al To appear in Proc. </title> <booktitle> 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 gorithms. In Proc. of 2nd Annual Israel Con--ference on Theory of Computing and Systems, </booktitle> <year> 1993. </year>
Reference-contexts: The first competitive solutions for on-line throughput maximization have been pioneered by Garay and Gopal for the case of a single link [10], and by Garay, Gopal, Kutten, Man-sour and Yung <ref> [9] </ref> for a line network; the latter work achieved logarithmic competitive ratio. The problem we are concerned with, namely competitively maximizing network throughput, has been open for general network topologies.
Reference: [10] <author> J.A. </author> <title> Garay and I.S. Gopal. Call preemption in communication networks. </title> <booktitle> In Proc. </booktitle> <volume> INFO-COM '92, volume 44, </volume> <pages> pages 1043-1050, </pages> <address> Flo-rence, Italy, </address> <year> 1992. </year>
Reference-contexts: The first competitive solutions for on-line throughput maximization have been pioneered by Garay and Gopal for the case of a single link <ref> [10] </ref>, and by Garay, Gopal, Kutten, Man-sour and Yung [9] for a line network; the latter work achieved logarithmic competitive ratio. The problem we are concerned with, namely competitively maximizing network throughput, has been open for general network topologies.
Reference: [11] <author> F. P. Kelly. </author> <title> Blocking probabilities in large circuit-switched networks. </title> <journal> Advances in Appl. Prob., </journal> <volume> 18 </volume> <pages> 473-505, </pages> <year> 1986. </year>
Reference-contexts: The problem we are concerned with, namely competitively maximizing network throughput, has been open for general network topologies. Other previous work on throughput concentrated on probabilistic models, and was based on various assumptions on the distributions of call arrivals times and source-destination pairs (see e.g. <ref> [11] </ref>).
Reference: [12] <author> T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos, and S. Tragoudas. </author> <title> Fast approximation algorithms for multicommod-ity flow problem. </title> <booktitle> In Proc. 23th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 101-111, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: The algorithm employs techniques similar to To appear in Proc. 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 ones previously used in the setting of multi--commodity network flow <ref> [14, 12] </ref>, approximate fractional packing [13] and on-line load balancing [1, 6].
Reference: [13] <author> S. Plotkin, D. Shmoys, and E. Tardos. </author> <title> Fast approximation algorithms for fractional packing and covering problems. </title> <booktitle> In Proc. 32nd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 495-504, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: The algorithm employs techniques similar to To appear in Proc. 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 ones previously used in the setting of multi--commodity network flow [14, 12], approximate fractional packing <ref> [13] </ref> and on-line load balancing [1, 6]. In particular, we make extensive use of the idea of assigning each edge a cost function that is exponential in its current load, and the idea of concurrently working with multiple copies of the graph, one copy per each time instance.
Reference: [14] <author> F. Shahrokhi and D. Matula. </author> <title> The maximum concurrent flow problem. </title> <journal> J. Assoc. Comput. Mach., </journal> <volume> 37 </volume> <pages> 318-334, </pages> <year> 1990. </year>
Reference-contexts: The algorithm employs techniques similar to To appear in Proc. 34'th IEEE Conf. on Found. of Computer Science, Oct. 1993 ones previously used in the setting of multi--commodity network flow <ref> [14, 12] </ref>, approximate fractional packing [13] and on-line load balancing [1, 6].
Reference: [15] <author> D.D. Sleator and R.E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Comm. ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year> <note> To appear in Proc. 34'th IEEE Conf. on Found. </note> <institution> of Computer Science, </institution> <month> Oct. </month> <year> 1993 </year>
Reference-contexts: Since the admission control and routing algorithm has to make decisions without knowledge of the future requests, it is natural to evaluate its performance in terms of the competitive ratio <ref> [15] </ref>, which in this case is the supremum, over all possible input sequences, of the ratio of the profit achieved by the on-line algorithm to the profit achieved by the optimal off-line algorithm. Note that several natural approaches do not lead to algorithms with good competitive ratio.
References-found: 15

