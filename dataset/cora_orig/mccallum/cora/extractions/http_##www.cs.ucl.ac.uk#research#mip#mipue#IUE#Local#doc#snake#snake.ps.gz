URL: http://www.cs.ucl.ac.uk/research/mip/mipue/IUE/Local/doc/snake/snake.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/research/mip/mipue/
Root-URL: http://www.cs.ucl.ac.uk
Email: Email: J.Schnabel@cs.ucl.ac.uk  
Author: Julia A. Schnabel and Simon R. Arridge 
Keyword: Image Understanding Environment (IUE), Medical Image Processing and Understanding Environment (MIPUE), active contour models, snakes, multi-scale medical image analysis.  
Address: Gower Street London WC1E 6BT, UK  
Affiliation: Department of Computer Science University College London  
Web: S.Arridge.cs.ucl.ac.uk URL: http//www.cs.ucl.ac.uk/research/mip/mipue/  
Note: Snake Implementation in the UK IUE Project  
Abstract: TR/98/3 Technical Report Abstract This report describes design issues, specification and implementation details of the concept of active contour models (snakes) in medical image processing as part of the UK IUE Project sponsored by EPSRC. For the DARPA funded Image Understanding Environment (IUE), general package information is provided by Amerinex Applied Imaging at URL http://www.aai.com/AAI/IUE/IUE.html, URL http://s10d.smb.man.ac.uk/IUE/IUE gate.html gives further general project information at the hub site at Manchester, and URL http//www.cs.ucl.ac.uk/research/mip/mipue/ provides local spoke project information, reference guides, and programs. The other two stages of this project are described in [ 8 ] and [ 9 ] . 
Abstract-found: 1
Intro-found: 1
Reference: [ 1 ] <author> A.A. Amini, T.E. Weymouth, and R.C. Jain. </author> <title> Using dynamic programming for solving variational problems in vision. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(9) </volume> <pages> 855-867, </pages> <year> 1990. </year>
Reference-contexts: The search space is restricted along the normal at each curve point. The same remarks to sequential/parallel behaviour apply here. 5. optimize dynamic programming () : Not implemented here (but with a method slot pro vided), this global technique finds the optimal solution within a given search space <ref> [ 1 ] </ref> . 1 An isophote is a contour of constant grey-level TR/98/3 Page 3 Snake Implementation in the UK IUE Project Julia A. Schnabel and Simon R.
Reference: [ 2 ] <author> J. Besag. </author> <title> On the statistical analysis of dirty pictures. </title> <journal> Journal Royal Statistical Society B, </journal> <volume> 48(3) </volume> <pages> 259-302, </pages> <year> 1986. </year>
Reference-contexts: only takes local explicit steps for all energy terms. 3. optimize greedy () : This techniques performs an efficient local neighbourhood search which is traditionally performed sequentially [ 11 ] , but can also be done in a quasi-parallel manner. 4. optimize iterated condtional modes () : Originally developed by <ref> [ 2 ] </ref> , this ICM technique can be used as a global search. The search space is restricted along the normal at each curve point. <p> &lt;parameter.h&gt; #include &lt;snake.h&gt; #include &lt;optimize.h&gt; int main (int argc, char **argv) - cout &lt;< "Program snake starting" &lt;< endl; if (argc != 5) - cerr &lt;< "Usage: snake [image_in] [snake_in snake_out] [parameter]"n"; return 1; - // Variables Snake snake; RealImage image; Parameter parameter; // Read image.Read (argv [1); snake.Read (argv <ref> [2] </ref>); parameter.Read (argv [4]); // Optimize and save Optimize (snake, image, parameter); snake.Write (argv [3]); cerr &lt;< "Program done"n"; return 0; - The parameter class in this example contains all necessary energy function and optimization parameters, which are not implemented as members or attributes of the snake.
Reference: [ 3 ] <author> L.D. Cohen. </author> <title> Note on active contour models and balloons. Computer Vision, Graphics, </title> <booktitle> and Image Processing: Image Understanding, </booktitle> <volume> 53(2) </volume> <pages> 211-218, </pages> <year> 1990. </year>
Reference-contexts: Minimizing this energy functional transforms the segmentation problem into an optimization problem, where optimization can be performed locally or globally. A vast diversity of models has been developed by various research groups in recent years, including balloons incorporating an inflation or deflation constraint force <ref> [ 3 ] </ref> , geometrically deformed models using subsampling techniques [ 6 ] , fast greedy snakes with various curvature forces [ 11 ] , and multi-scale, spline-based active contour models [ 7 ] . <p> By inheriting new snake classes, however, the existing image energy can be effectively overridden and redesigned. 4. Constraint energy: The most popular user constraint force is a simple inflation or deflation term, given by (positive or negative) expansion along the snake normal n i <ref> [ 3 ] </ref> . Other possible additions include spring and volcano forces, to steer the snake to or drive it from certain marked points in the image, and a stereo force to intrinsically constrain a snake in a stereo image. <p> "Program snake starting" &lt;< endl; if (argc != 5) - cerr &lt;< "Usage: snake [image_in] [snake_in snake_out] [parameter]"n"; return 1; - // Variables Snake snake; RealImage image; Parameter parameter; // Read image.Read (argv [1); snake.Read (argv [2]); parameter.Read (argv [4]); // Optimize and save Optimize (snake, image, parameter); snake.Write (argv <ref> [3] </ref>); cerr &lt;< "Program done"n"; return 0; - The parameter class in this example contains all necessary energy function and optimization parameters, which are not implemented as members or attributes of the snake.
Reference: [ 4 ] <author> M. Kass, A. Witkin, and D. Terzopoulos. Snakes: </author> <title> Active contour models. </title> <booktitle> In Proc. 1st International Conference on Computer Vision (ICCV'87), </booktitle> <pages> pages 259-268. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1987. </year>
Reference-contexts: 1 Introduction The implementation of active contour models (snakes), first presented by <ref> [ 4 ] </ref> for image segmentation requires the choice of a suitable discrete contour representation, the design of an energy function, and implementation of an optimization method in the IUE. <p> Image energy: Traditionally, the image energy is given by a combination of local (sometimes thresh-olded) image intensity (the so-called line energy, given by the image luminance L), an image gradient potential (using the negative squared image gradient magnitude, krLk, and a termination term (given by image ) <ref> [ 4 ] </ref> . In our experience, however, the use of a normalized, inverted squared gradient magnitude proved to be the best image potential. Other possible image forces could be given by ridges or creases of the gradient magnitude or the image intensity, but have not been considered here. <p> The following local and global methods have been designed, but other techniques can be easily added to the abstract snake class or derived subclasses: 1. optimize classic () : This is the classic approach taken in <ref> [ 4 ] </ref> which formulates the snake within a variational framework using local implicit steps based on pentadiagonal banded matrix inversion for the discrete internal energy computation, and local explicit steps for the external energy terms. 2. optimize euler forward () : Similar to the classic approach, this scheme is based <p> #include &lt;optimize.h&gt; int main (int argc, char **argv) - cout &lt;< "Program snake starting" &lt;< endl; if (argc != 5) - cerr &lt;< "Usage: snake [image_in] [snake_in snake_out] [parameter]"n"; return 1; - // Variables Snake snake; RealImage image; Parameter parameter; // Read image.Read (argv [1); snake.Read (argv [2]); parameter.Read (argv <ref> [4] </ref>); // Optimize and save Optimize (snake, image, parameter); snake.Write (argv [3]); cerr &lt;< "Program done"n"; return 0; - The parameter class in this example contains all necessary energy function and optimization parameters, which are not implemented as members or attributes of the snake.
Reference: [ 5 ] <author> T. McInerney and D. Terzopoulos. </author> <title> Deformable models in medical image analysis: A survey. </title> <journal> Medical Image Analysis, </journal> <volume> 1(2) </volume> <pages> 91-108, </pages> <year> 1996. </year>
Reference-contexts: An extensive overview over current techniques for deformable models in medical imaging is given in <ref> [ 5 ] </ref> . In general, differences in terms of representation, energy computation as well as optimization strategies, impose the need for a very generic snake design in the IUE. 2 Design Issues and Choices 2.1 Snake Representation The IUE offers several possible representation schemes for snakes: 1.
Reference: [ 6 ] <author> J.V. Miller, D.E. Breen, W.E. Lorensen, R.M. O'Bara, and M.J. Wozny. </author> <title> Geometrically deformed models: A method for extracting closed geometric models from volume data. In T.W. Sederberg, editor, </title> <journal> Computer Graphics SIGGRAPH'91, </journal> <volume> volume 25(4), </volume> <pages> pages 217-226, </pages> <year> 1991. </year>
Reference-contexts: A vast diversity of models has been developed by various research groups in recent years, including balloons incorporating an inflation or deflation constraint force [ 3 ] , geometrically deformed models using subsampling techniques <ref> [ 6 ] </ref> , fast greedy snakes with various curvature forces [ 11 ] , and multi-scale, spline-based active contour models [ 7 ] . An extensive overview over current techniques for deformable models in medical imaging is given in [ 5 ] .
Reference: [ 7 ] <author> J.A. Schnabel. </author> <title> Multi-scale active shape description in medical imaging. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University College London, </institution> <year> 1997. </year> <title> TR/98/3 Page 12 Snake Implementation in the UK IUE Project Julia A. </title> <editor> Schnabel and Simon R. </editor> <publisher> Arridge </publisher>
Reference-contexts: has been developed by various research groups in recent years, including balloons incorporating an inflation or deflation constraint force [ 3 ] , geometrically deformed models using subsampling techniques [ 6 ] , fast greedy snakes with various curvature forces [ 11 ] , and multi-scale, spline-based active contour models <ref> [ 7 ] </ref> . An extensive overview over current techniques for deformable models in medical imaging is given in [ 5 ] . <p> Otherwise, the curvature needs to be computed by (s) = (x s (s) 2 + y s (s) 2 ) 3=2 (1) TR/98/3 Page 2 Snake Implementation in the UK IUE Project Julia A. Schnabel and Simon R. Arridge Again, a power of two is usually taken. In <ref> [ 7 ] </ref> , an extension to this scheme was made by incorporating an image curvature term to allow for a matching between snake and image curvature. <p> *Snake = IUE_snake_read ("MR-init.snake", c2spline); // Optimize and save result IUE_snake_optimize (Snake, *Image, Greedy); IUE_snake_write_snaxels (Snake, "MR.snaxels"); cout &lt;< "Program done"n"; return 0; - In combination with the previously designed IUE scalespace image [ 8 ] , the framework for active shape evolution and active shape focusing as developed in <ref> [ 7 ] </ref> has been re-implemented as an IUE task. In this framework, the preference is on more efficient local techniques in combination with scale continuity, which defines the globality or locality of the solution [ 10 ] .
Reference: [ 8 ] <author> J.A. Schnabel and S.R. Arridge. </author> <title> Scale-space implementation in the UK IUE project. </title> <type> Technical Report TR/98/1, </type> <institution> Department of Computer Science, University College London, </institution> <address> Gower Street, UK - London WC1E 6BT, </address> <year> 1998. </year> <note> Information at http://www.cs.ucl.ac.uk/research/mip/mipue/. </note>
Reference-contexts: IUE_simple_image *Image = IUE_read_image ("MR.unc"); IUE_snake_mixin *Snake = IUE_snake_read ("MR-init.snake", c2spline); // Optimize and save result IUE_snake_optimize (Snake, *Image, Greedy); IUE_snake_write_snaxels (Snake, "MR.snaxels"); cout &lt;< "Program done"n"; return 0; - In combination with the previously designed IUE scalespace image <ref> [ 8 ] </ref> , the framework for active shape evolution and active shape focusing as developed in [ 7 ] has been re-implemented as an IUE task. <p> Schnabel and Simon R. Arridge # Optimize Snake_Optimize snake image parameter Snake_Write snake [lindex $argv 3] # Bye exit This way, batch jobs can be conveniently set up. For details on scale-space computation and traversal, see the description of image++ in <ref> [ 8 ] </ref> .
Reference: [ 9 ] <author> J.A. Schnabel, G. Bailey, and S.R. Arridge. </author> <title> Volume rendering implementation in the UK IUE project. </title> <type> Technical Report TR/98/2, </type> <institution> Department of Computer Science, University College London, </institution> <address> Gower Street, UK - London WC1E 6BT, </address> <year> 1998. </year> <note> Information at http://www.cs.ucl.ac.uk/research/mip/mipue/. </note>
Reference-contexts: The newly generated package and sub-package libraries are of the following hierarchy: libliue-mipue-spatial-object.so libliue-mipue-snake.so Additionally, the spatial object package contains some of the volume rendering designed in another stage of this project <ref> [ 9 ] </ref> . 5.3 Make (Development) Process The make process is structured in two parts: the compilation of the new classes, and the creation of a task (or application) using these classes.
Reference: [ 10 ] <author> R. Whitaker. </author> <title> Volumetric deformable models: active blobs. </title> <editor> In R.A. Robb, editor, </editor> <booktitle> Proc. 3rd International Conference on Visualization in Biomedical Computing (VBC'94), volume 2359 of SPIE, </booktitle> <pages> pages 121-134, </pages> <year> 1994. </year>
Reference-contexts: In this framework, the preference is on more efficient local techniques in combination with scale continuity, which defines the globality or locality of the solution <ref> [ 10 ] </ref> . This is achieved by adjusting the snake resolution to the underlying image resolution, leading to a natural snake representation. The shared local sub-package libraries, libliue-diffusion.so and libliue-scalespace.so need to be included in in the LOCALIUELIBS variable for this purpose.
Reference: [ 11 ] <author> D.J. Williams and M. Shah. </author> <title> A fast algorithm for active contours and curvature estimation. Computer Vision, Graphics, </title> <booktitle> and Image Processing: Image Understanding, </booktitle> <volume> 55(1) </volume> <pages> 14-26, </pages> <year> 1992. </year> <title> TR/98/3 Page 13 Snake Implementation in the UK IUE Project Julia A. </title> <editor> Schnabel and Simon R. </editor> <publisher> Arridge </publisher>
Reference-contexts: A vast diversity of models has been developed by various research groups in recent years, including balloons incorporating an inflation or deflation constraint force [ 3 ] , geometrically deformed models using subsampling techniques [ 6 ] , fast greedy snakes with various curvature forces <ref> [ 11 ] </ref> , and multi-scale, spline-based active contour models [ 7 ] . An extensive overview over current techniques for deformable models in medical imaging is given in [ 5 ] . <p> Traditionally, the influence of this term is enhanced by taking it to the power of two. 2. Bending/Curvature energy: The second-order bending term is given by x ss (s)+y ss (s) in the analytic case, and kx i+1 2x i + x i1 k in the discrete case. In <ref> [ 11 ] </ref> it was pointed out that this is only valid when the curve is arc length parameterized (and uniformly sampled). <p> optimize euler forward () : Similar to the classic approach, this scheme is based on varia tional calculus, with the difference that it only takes local explicit steps for all energy terms. 3. optimize greedy () : This techniques performs an efficient local neighbourhood search which is traditionally performed sequentially <ref> [ 11 ] </ref> , but can also be done in a quasi-parallel manner. 4. optimize iterated condtional modes () : Originally developed by [ 2 ] , this ICM technique can be used as a global search. The search space is restricted along the normal at each curve point.
References-found: 11

