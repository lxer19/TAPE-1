URL: http://www.cs.umd.edu/projects/plus/Parka/parka3-manual.ps
Refering-URL: http://www.cs.umd.edu/projects/plus/papers.html
Root-URL: 
Email: Email: parka-users-request@cs.umd.edu, hendler@cs.umd.edu  
Title: Using the Parka Parallel Knowledge Representation System  
Author: Kettler, William Andersen, James Hendler, and Sean Luke 
Date: May 1995  
Address: College Park, MD 20742  
Affiliation: Department of Computer Science, Institute for Systems Research, and Institute for Advanced Computer Studies University of Maryland  
Note: Brian  
Abstract: Version 3.2) 1 Technical Report CS-TR-3485 (UMIACS TR-95-68, ISR 95-56) 1 This research was supported in part by grants from NSF (IRI-9306580), ONR (N00014-J-91-1451), AFOSR (F49620-93-1-0065), the ARPA/Rome Laboratory Planning Initiative (F30602-93-C-0039), and the ARPA I3 Initiative (N00014-94-10907) and by ARI (MDA-903-92-R-0035, subcontract through Microelectronics and Design, Inc.) Dr. Hendler is also affiliated with the UM Institute for Systems Research (NSF Grant NSF EEC 94-02384) and the UM Institute for Advanced Computer Studies. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> William A. Andersen, James A. Hendler, Matthew P. Evett, and Brian P. Kettler. </author> <title> Massively parallel matching of knowledge structures. </title> <editor> In Hiroaki Kitano and James Hendler, editors, </editor> <booktitle> Massively Parallel Artificial Intelligence, </booktitle> <pages> pages 52-73. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <address> Menlo Park, California, </address> <year> 1994. </year>
Reference-contexts: 3 describes the facilities of the Parka system for end-user interaction and knowledge-base 4 (KB) maintenance. 1 The syntax of Parka commands is described in Appendix A. 1.1.2 Other Sources of Information on Parka Research Papers Details and results for the fast inferencing algorithms of Parka can be found in <ref> [2, 1] </ref>. The Parka Internals Manual describes the internals of the Parka implementation in detail including the serial client/simulator and the parallel server. 2 The original Parka language and its use for knowledge representation is described in [5, 4]. These documents are largely superseded by this document. <p> ) and x i and y i are both (different) variables, then c i is interpreted to mean return all the sets of bindings where variables x i and y i are bound to different values. 24 Probe graphs are matched to the KB by the Parka Structure Matcher mechanism <ref> [1] </ref>. Probe graphs must match the KB exactly. If an exact match is found, list of bindings for the variables in the query are returned. Otherwise, NIL is returned.
Reference: [2] <author> Matthew P. Evett, James A. Hendler, and Lee Spector. </author> <title> Parallel knowledge representation on the Connection Machine. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 22 </volume> <pages> 168-184, </pages> <year> 1994. </year>
Reference-contexts: 3 describes the facilities of the Parka system for end-user interaction and knowledge-base 4 (KB) maintenance. 1 The syntax of Parka commands is described in Appendix A. 1.1.2 Other Sources of Information on Parka Research Papers Details and results for the fast inferencing algorithms of Parka can be found in <ref> [2, 1] </ref>. The Parka Internals Manual describes the internals of the Parka implementation in detail including the serial client/simulator and the parallel server. 2 The original Parka language and its use for knowledge representation is described in [5, 4]. These documents are largely superseded by this document. <p> For example, consider the net in pacifist?. To resolve these kinds of conflicts, Parka uses an approximation of the Touretzky's IDO (inferential distance ordering) algorithm. The details of Parka's algorithm can be found in <ref> [2] </ref>. When a frame f can inherit from multiple "parent" frames (categories in Parka), Parka uses the topological depth numbers to resolve the conflict. These topological depth numbers are calculated by downward traversal in parallel of the #!isa/#!instanceOf hierarchy.
Reference: [3] <author> Brian P. Kettler, James A. Hendler, William A. Andersen, and Matthew P. Evett. </author> <title> Massively parallel support for case-based planning. </title> <journal> IEEE Expert, </journal> <pages> pages 8-14, </pages> <month> February </month> <year> `1994. </year>
Reference-contexts: These documents are largely superseded by this document. Several Parka applications are being built including a case-based planning system, CaPER <ref> [3] </ref> and a hybrid knowledge-base/database system. Mailing List A Parka mailing list exists (parka-users@cs.umd.edu). To be added to this list, send email to parka-users-request@cs.umd.edu. Worldwide Web A Parka Worldwide Web (WWW) page has been set up at URL http://www.cs.umd.edu/projects/plus/Parka/parka.html .
Reference: [4] <author> Lee Spector, Bill Andersen, James Hendler, Brian Kettler, Eugene Schwartzman, Cynthia Woods, and Matthew Evett. </author> <title> Knowledge representation in PARKA part 2: Experiments, analysis, and enhancements. </title> <type> Technical report, </type> <institution> University of Maryland at College Park, Computer Science Department, </institution> <year> 1992. </year>
Reference-contexts: The Parka Internals Manual describes the internals of the Parka implementation in detail including the serial client/simulator and the parallel server. 2 The original Parka language and its use for knowledge representation is described in <ref> [5, 4] </ref>. These documents are largely superseded by this document. Several Parka applications are being built including a case-based planning system, CaPER [3] and a hybrid knowledge-base/database system. Mailing List A Parka mailing list exists (parka-users@cs.umd.edu). To be added to this list, send email to parka-users-request@cs.umd.edu.
Reference: [5] <author> Lee Spector, James A. Hendler, and Matthew P. Evett. </author> <title> Knowledge representation in PARKA. </title> <type> Technical Report CS-TR-2410, </type> <institution> University of Maryland at College Park, Department of Computer Science, </institution> <month> February </month> <year> 1990. </year> <month> 53 </month>
Reference-contexts: The Parka Internals Manual describes the internals of the Parka implementation in detail including the serial client/simulator and the parallel server. 2 The original Parka language and its use for knowledge representation is described in <ref> [5, 4] </ref>. These documents are largely superseded by this document. Several Parka applications are being built including a case-based planning system, CaPER [3] and a hybrid knowledge-base/database system. Mailing List A Parka mailing list exists (parka-users@cs.umd.edu). To be added to this list, send email to parka-users-request@cs.umd.edu.
References-found: 5

