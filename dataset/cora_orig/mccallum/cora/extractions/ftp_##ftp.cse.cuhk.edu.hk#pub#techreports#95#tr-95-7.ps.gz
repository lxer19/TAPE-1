URL: ftp://ftp.cse.cuhk.edu.hk/pub/techreports/95/tr-95-7.ps.gz
Refering-URL: ftp://ftp.cs.cuhk.hk/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email: mhwong@cs.cuhk.hk, wmleung@cs.cuhk.hk  
Title: A Caching Policy to Support Read-only Transactions in a Mobile Computing Environment  
Author: Man Hon Wong Wing Man Leung 
Address: Shatin, N.T. Hong Kong  
Affiliation: Department of Computer Science The Chinese University of Hong Kong  
Abstract: Mobile computing is a new and challenging technology which will definitely revolutionize the way we use computers in the next decade. A mobile computing environment consists of stationary supporting servers and a set of mobile computers connecting to the servers by a low-bandwidth wireless network. The main difference between a traditional client-server environment and a mobile computing environment is that the mobility of mobile computers is unrestricted. Therefore, a mobile computer can disconnect from a server and connect to a different server at any time. In addition, a server may not have any information about which mobile computers are currently connecting to it. Hence, the issue of maintaining a consistent cache becomes complicated. In this paper, a caching policy is proposed to maintain cache consistency for mobile computers so that locks are not required for read-only transactions from mobile computers while serializability is guaranteed.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Acharya and B. R. Badrinath. </author> <title> Delivering Multicast Messages in Networks with Mobile Hosts. </title> <booktitle> In Proceedings the 13th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 292-299, </pages> <year> 1993. </year>
Reference-contexts: The network between mobile computers and a server is usually unreliable and with a low bandwidth. The area covered by the transceiver's signal of a server is known as a cell <ref> [2, 1] </ref>. Although cells may be overlapped physically, each mobile computer can logically connect to one server at a time [1]. It is assumed that mobile computers cannot communicate directly with each other. Communication between a server and mobile computers is achieved by broadcasting messages in the wireless media. <p> The area covered by the transceiver's signal of a server is known as a cell [2, 1]. Although cells may be overlapped physically, each mobile computer can logically connect to one server at a time <ref> [1] </ref>. It is assumed that mobile computers cannot communicate directly with each other. Communication between a server and mobile computers is achieved by broadcasting messages in the wireless media. The system enables unrestricted mobility and connectivity of the mobile computers among the cells.
Reference: [2] <author> B.R. Badrinath and T. Imielinski. </author> <title> Replication and Mobility. </title> <booktitle> In Second Workshop on the Management of Replicated Data, </booktitle> <pages> pages 9-12, </pages> <year> 1992. </year>
Reference-contexts: Serializability is a widely 1 accepted correctness criterion for executions of transactions [8]. This correctness criterion is also adopted in this paper. In order to reduce the contention on the narrow bandwidth of the wireless channel, usually part of a database is cached in mobile computers <ref> [7, 2, 3] </ref>. Some caching strategies for mobile computers have been introduced in [3]. The performance of these strategies and the impact of client's disconnection times on these strategies are evaluated. <p> The network between mobile computers and a server is usually unreliable and with a low bandwidth. The area covered by the transceiver's signal of a server is known as a cell <ref> [2, 1] </ref>. Although cells may be overlapped physically, each mobile computer can logically connect to one server at a time [1]. It is assumed that mobile computers cannot communicate directly with each other. Communication between a server and mobile computers is achieved by broadcasting messages in the wireless media.
Reference: [3] <author> D. Barbara and T. Imielinski. Sleepers and Workaholics: </author> <title> Caching Strategies in Mobile Environment. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 1-24, </pages> <year> 1994. </year>
Reference-contexts: Serializability is a widely 1 accepted correctness criterion for executions of transactions [8]. This correctness criterion is also adopted in this paper. In order to reduce the contention on the narrow bandwidth of the wireless channel, usually part of a database is cached in mobile computers <ref> [7, 2, 3] </ref>. Some caching strategies for mobile computers have been introduced in [3]. The performance of these strategies and the impact of client's disconnection times on these strategies are evaluated. <p> This correctness criterion is also adopted in this paper. In order to reduce the contention on the narrow bandwidth of the wireless channel, usually part of a database is cached in mobile computers [7, 2, 3]. Some caching strategies for mobile computers have been introduced in <ref> [3] </ref>. The performance of these strategies and the impact of client's disconnection times on these strategies are evaluated. In [11], various static and dynamic data allocation (caching) methods are proposed to optimize the communication cost between a mobile computer and a fixed host that stores the online database. <p> Consider a simple cache management policy that mobile computers can request data from servers at any time and servers broadcast invalidation messages periodically to inform mobile computers to drop outdated data. The performance of this approach has been studied in <ref> [3] </ref>. become inconsistent in the sense that transactions reading these data may not be serializable. The main reason for such a phenomenon is that a mobile computer may load data into its cache from different servers.
Reference: [4] <author> P. A. Bernstein and N. Goodman. </author> <title> Multiversion Concurrency Control Theory and Algorithms. </title> <journal> In ACM Transactions on Database Systems, </journal> <volume> Vol 8, No. 4, </volume> <pages> pages 465-483, </pages> <year> 1983. </year>
Reference-contexts: It is not difficult to show that any read-only transaction that reads data from a consistent cache with timestamp t can be serialized immediately after all the transactions with timestamps less than t. A similar proof for a multi-version database has been given in <ref> [4] </ref>. Therefore, if cache consistency can be maintained, any read-only transaction from a mobile computer can read the data in the cache without issuing any lock on the server and serializability is guaranteed.
Reference: [5] <author> P. A. Bernstein, V. Hadzilacos, and N. Goodman. </author> <title> Concurrency Control and Recovery in Database Systems. </title> <publisher> Addison Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1987. </year>
Reference-contexts: It is assumed that a data item is the unit of a single access. In practice, a data item may be a record, a relation, a page of memory or even an entire file. Data items are updated by transactions <ref> [5] </ref>. Each transaction is composed of a series of read and write operations. A transaction which contains write operations is known as an update transaction and a transaction with read operations only is known as a read-only transaction (query) [8].
Reference: [6] <author> S.K. Feiner D. Duchamp and G.Q. Maguire. </author> <title> Software Technology for Wireless Mobile Computing. </title> <journal> In IEEE Network Vol. </journal> <volume> 5. No.6, </volume> <pages> pages 12-18, </pages> <year> 1991. </year>
Reference-contexts: 1 Introduction With the advances of the communication technology, users will soon be able to access databases through wireless networks <ref> [9, 6, 11] </ref>. In a mobile wireless computing environment, there will be a number of fixed hosts connected by a fixed network and massive mobile computers connect to these fixed hosts through a wireless interface. Most of these mobile computers are low powered desktop or palmtop machines.
Reference: [7] <author> D. Duchamp. </author> <title> Issues in Wireless Mobile Computing. </title> <booktitle> In Proceedings. Third Workshop on Workstation Operating Systems, </booktitle> <pages> pages 2-10, </pages> <year> 1992. </year> <month> 18 </month>
Reference-contexts: Serializability is a widely 1 accepted correctness criterion for executions of transactions [8]. This correctness criterion is also adopted in this paper. In order to reduce the contention on the narrow bandwidth of the wireless channel, usually part of a database is cached in mobile computers <ref> [7, 2, 3] </ref>. Some caching strategies for mobile computers have been introduced in [3]. The performance of these strategies and the impact of client's disconnection times on these strategies are evaluated.
Reference: [8] <author> K.P. Eswaran, J.N. Gray, R.A. Lorie, and I. L. Traiger. </author> <title> The Notions of Consistency and Predicate Locks in a Database System. </title> <journal> Communications of the ACM, </journal> 19(11) 624-633, November 1976. 
Reference-contexts: Users of these mobile computers may frequently query databases by invoking a series of operations, generally referred to as a transaction. Serializability is a widely 1 accepted correctness criterion for executions of transactions <ref> [8] </ref>. This correctness criterion is also adopted in this paper. In order to reduce the contention on the narrow bandwidth of the wireless channel, usually part of a database is cached in mobile computers [7, 2, 3]. Some caching strategies for mobile computers have been introduced in [3]. <p> Data items are updated by transactions [5]. Each transaction is composed of a series of read and write operations. A transaction which contains write operations is known as an update transaction and a transaction with read operations only is known as a read-only transaction (query) <ref> [8] </ref>. The execution of a transaction must be atomic, i.e, a transaction either commits or aborts. If a trans 4 action commits, the effects of the transaction will be incorporated completely to the database. Otherwise, if it aborts, none of the effects will be incorporated into the database. <p> Otherwise, if it aborts, none of the effects will be incorporated into the database. The atomicity of transactions involving multiple servers can be enforced by using a commit protocol [18, 13]. Serializability <ref> [8] </ref>, a widely accepted correctness criterion for execution of transactions, is adopted in this paper. Serializability guarantees that an execution of transactions must be equivalent to a serial execution of the transactions. Serializability can be enforced by employing a concurrency control protocol such as the two-phase locking protocol [8] or timestamp <p> Serializability <ref> [8] </ref>, a widely accepted correctness criterion for execution of transactions, is adopted in this paper. Serializability guarantees that an execution of transactions must be equivalent to a serial execution of the transactions. Serializability can be enforced by employing a concurrency control protocol such as the two-phase locking protocol [8] or timestamp ordering protocol [15]. Since a data item may be replicated on several servers, these copies of a data item must appear as a single logical data item to transactions.
Reference: [9] <author> G.H. Forman and J. Zahorjan. </author> <booktitle> The Challenges of Mobile Computing . In Computer Vol.27 No.4, </booktitle> <pages> pages 38-47, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction With the advances of the communication technology, users will soon be able to access databases through wireless networks <ref> [9, 6, 11] </ref>. In a mobile wireless computing environment, there will be a number of fixed hosts connected by a fixed network and massive mobile computers connect to these fixed hosts through a wireless interface. Most of these mobile computers are low powered desktop or palmtop machines. <p> They are usually low power machines equipped with limited amount of memory [16]. Mobile computers are connected to a server through a wireless network. A wireless network provides a wireless communication like modulating radio waves or pulsing infrared light between servers and mobile computers <ref> [9] </ref>. The network between mobile computers and a server is usually unreliable and with a low bandwidth. The area covered by the transceiver's signal of a server is known as a cell [2, 1].
Reference: [10] <author> D. K. Gifford. </author> <title> Weighted Voting for Replicated Data. </title> <booktitle> In Proceedings of the Seventh ACM Symposium on Operating Systems Principles, </booktitle> <pages> pages 150-159, </pages> <month> December </month> <year> 1979. </year>
Reference-contexts: Since a data item may be replicated on several servers, these copies of a data item must appear as a single logical data item to transactions. This property is called one-copy equivalence and is enforced by a replica control protocol such as the quorum protocol <ref> [10] </ref>. By using a quorum protocol, a write operation may not update all the copies of a data item. A replica control protocol together with a concurrency control protocol can enforce one-copy serializability [10], a correctness criterion for replicated database. <p> is called one-copy equivalence and is enforced by a replica control protocol such as the quorum protocol <ref> [10] </ref>. By using a quorum protocol, a write operation may not update all the copies of a data item. A replica control protocol together with a concurrency control protocol can enforce one-copy serializability [10], a correctness criterion for replicated database. After a write operation is executed on a data item , a new version of the data item will be created. If a new version always replaces the old version, then the system is a monoversion database system.
Reference: [11] <author> Y. Huang, P. Sistla, and O. Wolfson. </author> <title> Data Replication for Mobile Computers. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 13-24, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction With the advances of the communication technology, users will soon be able to access databases through wireless networks <ref> [9, 6, 11] </ref>. In a mobile wireless computing environment, there will be a number of fixed hosts connected by a fixed network and massive mobile computers connect to these fixed hosts through a wireless interface. Most of these mobile computers are low powered desktop or palmtop machines. <p> Some caching strategies for mobile computers have been introduced in [3]. The performance of these strategies and the impact of client's disconnection times on these strategies are evaluated. In <ref> [11] </ref>, various static and dynamic data allocation (caching) methods are proposed to optimize the communication cost between a mobile computer and a fixed host that stores the online database. Performance is the main concern of these two papers.
Reference: [12] <author> T. Imielinski and B. R. Badrinath. </author> <title> Querying in highly mobile distributed environments. </title> <booktitle> In Proceedings of the 18th VLDB Conference Vancouver, </booktitle> <address> British Columbia, Canada, </address> <pages> pages 41-52, </pages> <year> 1992. </year>
Reference-contexts: The most obvious solution to the above problem is to drop the entire cache once a mobile computer crosses the boundary to another cell. However, such a strategy is very inefficient especially when a mobile computer is traveling to and fro the boundary of different cells <ref> [12] </ref>. In this paper, a new caching strategy is introduced such that the cached data of a mobile computer must correspond to a snapshot of a database.
Reference: [13] <author> E. Levy, H. F. Korth, and A. Silberschatz. </author> <title> An Optimistic Commit Protocol for Distributed Transaction Management. </title> <booktitle> In Proceedings of the ACM SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 88-97, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: If a trans 4 action commits, the effects of the transaction will be incorporated completely to the database. Otherwise, if it aborts, none of the effects will be incorporated into the database. The atomicity of transactions involving multiple servers can be enforced by using a commit protocol <ref> [18, 13] </ref>. Serializability [8], a widely accepted correctness criterion for execution of transactions, is adopted in this paper. Serializability guarantees that an execution of transactions must be equivalent to a serial execution of the transactions.
Reference: [14] <author> P.A. Bernstein, V. Hadzilacos and N. Goodman. </author> <title> Concurrency control and recovery in database systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1987. </year>
Reference-contexts: If a new version always replaces the old version, then the system is a monoversion database system. Otherwise, if it keeps more than one version of the same data item, it is a multiversion <ref> [14] </ref> database system. In this paper, it is assumed that the database is a multiversion database.
Reference: [15] <author> D. P. Reed. </author> <title> Naming and Synchronization in a Decentralized Computer System. </title> <type> Technical Report MIT-LCS-TR-205, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, Mas-sachusetts, </address> <month> September </month> <year> 1978. </year>
Reference-contexts: Serializability guarantees that an execution of transactions must be equivalent to a serial execution of the transactions. Serializability can be enforced by employing a concurrency control protocol such as the two-phase locking protocol [8] or timestamp ordering protocol <ref> [15] </ref>. Since a data item may be replicated on several servers, these copies of a data item must appear as a single logical data item to transactions. This property is called one-copy equivalence and is enforced by a replica control protocol such as the quorum protocol [10].
Reference: [16] <author> M. Satyanarayanan. </author> <booktitle> Mobile Computing. In Computer Vol. </booktitle> <volume> 26. No.9, </volume> <pages> pages 81-82, </pages> <year> 1993. </year>
Reference-contexts: Servers are usually powerful stationary computers connected by a reliable network with a high bandwidth. On the other hand, mobile computers are portable computing devices (e.g. palmtop or desktop machines). They are usually low power machines equipped with limited amount of memory <ref> [16] </ref>. Mobile computers are connected to a server through a wireless network. A wireless network provides a wireless communication like modulating radio waves or pulsing infrared light between servers and mobile computers [9]. The network between mobile computers and a server is usually unreliable and with a low bandwidth.
Reference: [17] <author> O.T. Satyanarayanan and D. Agrawal. </author> <title> Efficient Execution of Read-Only Transactions in Replicated Multiversion Databases. </title> <journal> In IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol 5, No 5, </volume> <pages> pages 849-871, </pages> <year> 1993. </year>
Reference-contexts: Thus, each data item x in the database, is represented by a totally ordered sequence of versions, denoted by x 1 ; x 2 x n , where the superscripts are the monotonically increasing version numbers. We assume in this paper that the version control protocol proposed in <ref> [17] </ref> is employed in the servers. The details of the version control mechanism will be discussed in section 3. 3 Version Control Mechanism for Servers The version control mechanism in [17] is adopted in the servers. <p> We assume in this paper that the version control protocol proposed in <ref> [17] </ref> is employed in the servers. The details of the version control mechanism will be discussed in section 3. 3 Version Control Mechanism for Servers The version control mechanism in [17] is adopted in the servers. By using the version control mechanism, each update transaction, T , is assigned a timestamp tn (T ), which is unique and corresponds to the serialization order of the transaction. <p> Then vectors V j [i]:vtnc and V j [i]:ctnc will be updated by taking the pairwise maximum of the local and the received vectors. It has been shown in <ref> [17] </ref> that no version of a data item can be created with a version number less than M IN i (V j [i]:vtnc) globally. In addition, the local version sequences at server S j are completed up to M IN i (V j [i]:vtnc). <p> In addition, the local version sequences at server S j are completed up to M IN i (V j [i]:vtnc). Hence server S j can roll forward its ctnc to M IN i (V j [i]:vtnc). Readers are encouraged to refer to <ref> [17] </ref> for the detailed description of the version control mechanism.
Reference: [18] <author> D. Skeen. </author> <title> Non-blocking commit protocols. </title> <booktitle> In Proceedings of the ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 133-147, </pages> <month> June </month> <year> 1982. </year> <month> 19 </month>
Reference-contexts: If a trans 4 action commits, the effects of the transaction will be incorporated completely to the database. Otherwise, if it aborts, none of the effects will be incorporated into the database. The atomicity of transactions involving multiple servers can be enforced by using a commit protocol <ref> [18, 13] </ref>. Serializability [8], a widely accepted correctness criterion for execution of transactions, is adopted in this paper. Serializability guarantees that an execution of transactions must be equivalent to a serial execution of the transactions.
Reference: [19] <author> G. T. Wuu and A. J. Bernstein. </author> <title> Efficient Solutions to the Replicated Log and Dictio--nary Problems. </title> <booktitle> In Proceedings of the Third ACM Symposium on Principles of Distributed Computing, </booktitle> <pages> pages 233-242, </pages> <month> August </month> <year> 1984. </year> <month> 20 </month>
Reference-contexts: Similarly, V i [j]:ctnc represents S i 's knowledge of the value of ctnc at server S j . In addition, each server S i , maintains a log <ref> [19] </ref>, L i , which contains the update history of the data items maintained in the system.
References-found: 19

