URL: ftp://ftp.win.tue.nl/pub/techreports/michelr/ProcessAlgebra/handout.1995.ps.Z
Refering-URL: http://www.win.tue.nl/win/cs/fm/michelr/processalgebra.html
Root-URL: http://www.win.tue.nl
Email: josb@win.tue.nl, michelr@win.tue.nl  
Title: Discrete Time Process Algebra with Relative Timing  
Author: J.C.M. Baeten and M.A. Reniers 
Date: Handout May 16, 1995  
Address: P.O. Box 513, NL-5600 MB Eindhoven, The Netherlands  
Affiliation: Department of Mathematics and Computing Science, Eindhoven University of Technology,  
Abstract-found: 0
Intro-found: 1
Reference: [BB95] <author> J.C.M. Baeten and J.A. Bergstra. </author> <title> Discrete Time Process Algebra. </title> <journal> Formal Aspects of Computing, </journal> <year> 1995. </year>
Reference-contexts: This operator will prove useful when we extend BPA |- drt -ID with parallel composition in the next section. The superscript denotes that time free atoms are not part of the signature. The addition -ID denotes that the immediate deadlock constant of <ref> [BB95] </ref> is not considered. Within a time slice, there is no explicit mention of the passage of time, we can see the passage to the next time slice as a clock tick. Thus, the a can be called non-delayable actions: the action must occur before the next clock tick.
Reference: [BW90] <author> J.C.M. Baeten and W.P. Weijland. </author> <title> Process Algebra. </title> <booktitle> Cambridge Tracts in Theoretical Computer Science 18. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1990. </year> <note> ISBN 0-521-40043-0. </note>
Reference-contexts: It is also possible to define a graph model for BPA |- drt -ID directly, not by giving a transition system specification, but by defining an interpretation of the constants and operators on process graphs. We define a set of process graphs as in <ref> [BW90] </ref> with labels from A oe satisfying the extra condition that every node has at most one outgoing oe-labeled edge. Moreover, a termination node can have a label # (for successful termination). A oe-labeled edge may not lead to a successful termination node. <p> Given two process graphs g and h. There are two cases to be considered: 4 (a) at most one of the graphs has a oe-labeled loop at its root node: In this case we have to root unwind both graphs (see <ref> [BW90] </ref>). The graph g + h is obtained by identifying the roots of the root unwinded graphs ae (g) and ae (h).
References-found: 2

