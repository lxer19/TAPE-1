URL: ftp://mesquite.cs.panam.edu/pub/MENG/beijing93.ps
Refering-URL: http://www.cs.panam.edu/meng/pub.html
Root-URL: http://www.cs.panam.edu
Title: A SPACE EFFICIENT ALGORITHM FOR OPTIMISTIC DISTRIBUTED DISCRETE EVENT SIMULATION  
Author: Xiannong Meng 
Address: Lewisburg, PA 17837 U.S.A.  
Affiliation: Computer Science Department Bucknell University  
Abstract: This paper describes a space efficient algorithm to implement "Time Warp" distributed simulation. In event driven simulation, events are connected in a tree fashion. To cancel the events incorrectly scheduled due to different time advances, pointers pointing to the events caused by the current event are used to delete these events by a tree traversal. The advantage of this algorithm lies in its space efficiency. Simulations show that this algorithm is very space efficient and it causes little performance degradation in time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K.M. Chandy and J. Misra. </author> <title> Distribtued simulation: A case study in design and verification of distributed programs. </title> <journal> IEEE Transaction on Software Engineering, </journal> <volume> SE-5(5), </volume> <year> 1979. </year>
Reference-contexts: very space efficient and it causes little performance degradation in time. 2 Related Works The origin of distributed simulation can be dated as far back as to 1979 (see the surveys in [6], [7] and [2]), when Chandy and Misra studied distributed simulation as a case study of distributed program <ref> [1] </ref>, which is based on the conservative approach. In 1982, Jefferson and Sowizral proposed so called optimistic approach, using time warp. Since then, much research has devoted to the optimistic approach of distributed simulation.
Reference: [2] <author> Richard Fujimoto. </author> <title> Parallel discrete event simulation. </title> <journal> Communications of ACM, </journal> <volume> 33(10), </volume> <month> Octobor </month> <year> 1990. </year>
Reference-contexts: These distributed processes execute the simulation in parallel using some coordination mechanism. We say that the distributed execution is correct if the following constraint is satisfied: Each process receives all its event-messages in non-decreasing time stamp order [5]. This is also called local causality constraint <ref> [2] </ref>. Two different approaches to distributed simulation exist, conservative and optimistic. In conservative approach, the simulation clock will not proceed unless it is absolutely safe. This ensures that no causality error will occur. <p> In conservative approach, the simulation clock will not proceed unless it is absolutely safe. This ensures that no causality error will occur. The major drawback of this approach is that it is not able to fully explore the potential of parallelism <ref> [2] </ref>. In optimistic approach, causality errors are allowed. The simulation control mechanism will detect and correct them. The optimistic approach allows distributed processes to proceed at their own pace without synchronizing all the time. <p> Simulations show that this algorithm is very space efficient and it causes little performance degradation in time. 2 Related Works The origin of distributed simulation can be dated as far back as to 1979 (see the surveys in [6], [7] and <ref> [2] </ref>), when Chandy and Misra studied distributed simulation as a case study of distributed program [1], which is based on the conservative approach. In 1982, Jefferson and Sowizral proposed so called optimistic approach, using time warp. Since then, much research has devoted to the optimistic approach of distributed simulation. <p> After the restoration is done, the cancellation phase is invoked. In the cancellation phase, the event list is traversed, all the events that are incorrectly scheduled are eliminated (here we are doing an aggressive cancellation see <ref> [2] </ref> or [5] for reference).
Reference: [3] <author> R.M. Fujimoto, J.J. Tsai, and G. Gopalakrishnan. </author> <title> The roll back chip: Hardware support for distributed simulation using time warp. </title> <editor> In David Jefferson Brian Unger, editor, </editor> <booktitle> Distributed Simulation (Simulation Series), </booktitle> <pages> pages 81-86. </pages> <publisher> SCS, SCS, </publisher> <year> 1988. </year>
Reference-contexts: An algorithm that selectively delete past events was proposed there. To overcome the overhead of the roll back mechanism, Fujimoto et.al. proposed hardware approach, i.e. a special chip to handle saving state information to facilitate roll back <ref> [3] </ref>. 3 Proposed Algorithm and Initial Results In discrete event simulation, events in the event list actually form a forest. Each event can be considered as the root of a tree, while the events caused by this event can be considered as children of this event.
Reference: [4] <author> Anat Gafni. </author> <title> Space management and cancellation mechanisms for time warp. </title> <type> Technical Report TR-85-341, </type> <institution> Univ. of Southern California, </institution> <year> 1985. </year>
Reference-contexts: If it turns out that some events are out of order, a roll back mechanism is activated and the errors can be recovered. While the process of roll back can cause further roll back, this process is bounded <ref> [4] </ref>. The event that causes the roll back is called straggler. A global virtual time (GVT) is maintained to help the recovery process. The value of GVT is the smallest local clock values among all the participating processes. When a roll back is necessary, GVT serves as a lower bound.
Reference: [5] <author> Anat Gafni. </author> <title> Rollback mechanisms for optimistic distributed simulation systems. </title> <editor> In David Jefferson Brian Unger, editor, </editor> <booktitle> Distributed Simulation (Simulation Series), </booktitle> <pages> pages 61-67. </pages> <publisher> SCS, SCS, </publisher> <year> 1988. </year>
Reference-contexts: These distributed processes execute the simulation in parallel using some coordination mechanism. We say that the distributed execution is correct if the following constraint is satisfied: Each process receives all its event-messages in non-decreasing time stamp order <ref> [5] </ref>. This is also called local causality constraint [2]. Two different approaches to distributed simulation exist, conservative and optimistic. In conservative approach, the simulation clock will not proceed unless it is absolutely safe. This ensures that no causality error will occur. <p> In 1982, Jefferson and Sowizral proposed so called optimistic approach, using time warp. Since then, much research has devoted to the optimistic approach of distributed simulation. Gafni <ref> [5] </ref> compared two different rolling back mechanisms in optimistic approach (aggressive and lazy evaluation) in terms of time and space requirements. An algorithm that selectively delete past events was proposed there. <p> After the restoration is done, the cancellation phase is invoked. In the cancellation phase, the event list is traversed, all the events that are incorrectly scheduled are eliminated (here we are doing an aggressive cancellation see [2] or <ref> [5] </ref> for reference).
Reference: [6] <author> Jayadev Misra. </author> <title> Distributed discrete-event simulation. Computing Survey, </title> <type> 18(1), </type> <month> March </month> <year> 1986. </year>
Reference-contexts: Rather a chain is used to connect these events. Simulations show that this algorithm is very space efficient and it causes little performance degradation in time. 2 Related Works The origin of distributed simulation can be dated as far back as to 1979 (see the surveys in <ref> [6] </ref>, [7] and [2]), when Chandy and Misra studied distributed simulation as a case study of distributed program [1], which is based on the conservative approach. In 1982, Jefferson and Sowizral proposed so called optimistic approach, using time warp.
Reference: [7] <author> Rhonda Righter and Jean Walrand. </author> <title> Distributed simulation of discrete event systems. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(1), </volume> <month> January </month> <year> 1989. </year>
Reference-contexts: Rather a chain is used to connect these events. Simulations show that this algorithm is very space efficient and it causes little performance degradation in time. 2 Related Works The origin of distributed simulation can be dated as far back as to 1979 (see the surveys in [6], <ref> [7] </ref> and [2]), when Chandy and Misra studied distributed simulation as a case study of distributed program [1], which is based on the conservative approach. In 1982, Jefferson and Sowizral proposed so called optimistic approach, using time warp.
References-found: 7

