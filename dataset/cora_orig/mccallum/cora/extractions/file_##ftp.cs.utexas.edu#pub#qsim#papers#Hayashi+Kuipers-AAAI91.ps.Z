URL: file://ftp.cs.utexas.edu/pub/qsim/papers/Hayashi+Kuipers-AAAI91.ps.Z
Refering-URL: http://net.cs.utexas.edu/users/qr/robotics/swans-neck.html
Root-URL: 
Title: Path Planning for Highly Redundant Manipulators using a Continuous Model  
Author: Akira Hayashi and Benjamin J. Kuipers 
Address: Austin, TX 78712  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Note: In Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI-91) Cambridge, MA: AAAI/MIT Press, 1991.  
Abstract: There is a need for highly redundant manipulators to work in complex, cluttered environments. Our goal is to plan paths for such manipulators efficiently. The path planning problem has been shown to be P SP ACE-complete in terms of the number of degrees of freedom (DOF) of the manipulator. We present a method which overcomes the complexity with a strong heuristic: utilizing redundancy by means of a continuous manipulator model. The continuous model allows us to change the complexity of the problem from a function of both the DOF of the manipulator (believed to be exponential) and the complexity of the environment (polynomial), to a polynomial function of the complexity of the environment only. 
Abstract-found: 1
Intro-found: 1
Reference: [Brooks 83a] <author> R. A. Brooks. </author> <title> Solving the find-path problem by good representation of free space. </title> <journal> IEEE transaction on Systems, Man and Cybernetics, </journal> <volume> 13 </volume> <pages> 190-197. </pages>
Reference-contexts: After defining the initial states, graph search proceeds exactly in the same manner to generate the position subgoals in Fig. 6. The modification does not change the complexity of the original algorithm to find smooth paths. Extend to 3-D Two approaches are feasible for path planning in 3-D space. <ref> [Brooks 83a] </ref> proposed decomposing free space into generalized cones in order to find a path for mobile robots. The same free space representation was then used to plan a collision free path for manipulators by restricting the hand movement [Brooks 83b].
Reference: [Brooks 83b] <author> R. A. Brooks. </author> <title> Planning collision-free motions for pick-and-place operations. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 2(4). </volume>
Reference-contexts: The same free space representation was then used to plan a collision free path for manipulators by restricting the hand movement <ref> [Brooks 83b] </ref>. Free space in 3-D is represented by its horizontal 2-D slices. With this 2 1 2 -D approach, most of the method we have explained can be used without modification. Alternatively, we decompose 3-D free space into primary convex regions.
Reference: [Canny 88] <author> J. Canny. </author> <title> Some algebraic and geometric computations in pspace. </title> <booktitle> In Proceedings of the ACM symposium on Theory of Computing. </booktitle>
Reference-contexts: Conclusions We have presented a path planning method for highly redundant manipulators by means of a continuous model, which captures a macroscopic shape of highly redundant manipulators. The path planning problem has been shown to be P SP ACE-complete in terms of DOF of the manipulator <ref> [Reif 79, Canny 88] </ref>. Our approach overcomes the complexity with a strong heuristic: utilizing redundancy by means of the continuous model.
Reference: [Chirikjian and Burdick 90] <author> G. S. Chirikjian and J. W. Burdick. </author> <title> An obstacle avoidance algorithm for hyper-redundant manipulators. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation. </booktitle>
Reference-contexts: Third, the trajectory generates a set of position subgoals for the continuous manipulator which are achieved by the basic motion schemas. Fourth, the mapping from the continuous model to the available jointed arm provides the curvature bound and obstacle envelopes required (in step 2) to guarantee a collision-free path. <ref> [Chirikjian and Burdick 90] </ref> presents an approach similar to ours. While we use 5 point interpolation to discretize curvature and torsion, they use a modal decomposition. However, in their paper, obstacle avoidance was accomplished by manual decomposition and selection of curvature functions.
Reference: [Clement and I~nigo 90] <author> W. I. Clement and R. M. I~nigo. </author> <title> Design of a snake-like manipulator. </title> <booktitle> Robotics and Autonomous Systems, </booktitle> <volume> 6 </volume> <pages> 265-282. </pages>
Reference-contexts: the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator [Hirose et al. 83], spine robot [Drozda 84, Todd 86], tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator <ref> [Clement and I~nigo 90] </ref>. Some were actually built. While many of them are so called continuous arms, highly articulated arms are also studied. fl This work has taken place in the Qualitative Reasoning Group at the Artificial Intelligence Laboratory, The University of Texas at Austin. <p> Interpolate: Move by interpolation between two spec ified curvature/torsion profiles. Feed/Retract: Increase (decrease) the length allocated to a segment by moving the tip along a trajectory to reach a given position/orientation. This is a motion schema to represent the follow-the-leader type, snake-like motion considered in <ref> [Clement and I~nigo 90] </ref>. Fold/Unfold: Increase (decrease) the length allocated to a segment, while maintaining tip position and ori entation. Open Space Hill-climb and Interpolate schemas are used to achieve position/orientation in open space.
Reference: [Drozda 84] <author> T. J. Drozda. </author> <title> The spine robot... the verdict's yet to come. </title> <booktitle> Manufacturing Engineering, </booktitle> <pages> pages 110-112. </pages>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator [Hirose et al. 83], spine robot <ref> [Drozda 84, Todd 86] </ref>, tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
Reference: [Hayashi 91] <author> A. Hayashi. </author> <title> Geometrical motion planning for highly redundant manipulators using a continuous model. </title> <type> PhD diss. </type> <institution> Dept. of Computer Science, The University of Texas at Austin. </institution>
Reference-contexts: Alternatively, we decompose 3-D free space into primary convex regions. Smooth 3-D curves with curvature and torsion will be used in lieu of cubic spirals to make turns from one such region to another. We (see <ref> [Hayashi 91] </ref>) have extended the algorithm in [Singh and Wagh 87] to find primary convex regions in 2-D. Their algorithm requires that obstacles be approx imated by iso-oriented rectangles.
Reference: [Hirose et al. 83] <author> S. Hirose, T. Kado, and Y. Umetani. </author> <title> Tensor actuated elastic manipulator. </title> <booktitle> In Proceedings of the Sixth World Congress on Theory of Machines and mechanisms. </booktitle>
Reference-contexts: Their applications include passing trough restricted passages for the inspection or the maintenance of a mechanical system such as a nuclear reactor and a spacecraft. In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator <ref> [Hirose et al. 83] </ref>, spine robot [Drozda 84, Todd 86], tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
Reference: [Ivanescu and Badea 84] <author> M. Ivanescu and I. Badea. </author> <title> Dynamic control for a tentacle manipulator. </title> <booktitle> In Proceedings of the International Conference on Robotics and Factories of the Future. </booktitle>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator [Hirose et al. 83], spine robot [Drozda 84, Todd 86], tentacle manipulator <ref> [Ivanescu and Badea 84] </ref>, elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
Reference: [Jacobs and Canny 89] <author> P. Jacobs and J. Canny. </author> <title> Planning smooth paths for mobile robots. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation. </booktitle>
Reference-contexts: Essentially, we have transformed the problem of planning paths for highly redundant manipulators to the problem of finding smooth paths for point robots. The smooth path planning problem is a new subject in the field (see <ref> [Jacobs and Canny 89] </ref> for a related problem), and we expect improvements on the algorithm by using more computational geometry.
Reference: [Kanayama and Hartman 89] <author> Y. Kanayama and B. I. Hartman. </author> <title> Smooth local path planning for autonomous vehicles. </title> <booktitle> In Proceedings of IEEE International Conference on Robotics and Automation. </booktitle>
Reference-contexts: For a small overlapping region, we use its center of gravity as a turning corner. A large overlapping region can be further divided around its center of gravity in order not to miss smooth turns. <ref> [Kanayama and Hartman 89] </ref> presents a method to make a smooth move from one position and orientation to another, using cubic spiral curves. We use cubic spirals to provide a continuous curvature path, since they can be constructed to have zero curvature at tangent points.
Reference: [Khatib 86] <author> O. Khatib. </author> <title> Real-time obstacle avoidance for manipulators and mobile robots. </title> <journal> The International Journal of Robotic Research, </journal> <volume> 5(1) </volume> <pages> 90-98. </pages>
Reference-contexts: However, no path planning algorithm exists to utilize redundancy. Path planning algorithms based on the configuration space approach [Lozano-Perez 83b] are intractable in terms of the number of DOF. Algorithms based on the artificial potential field approach <ref> [Khatib 86] </ref> are more computationally feasible, but have a drawback inherent in their use of local optimization techniques: the local minima problem. Previous research on explicitly utilizing redundancy for obstacle avoidance is limited to controlling a manipulator when its end effector trajectory is given.
Reference: [Lozano-Perez 83a] <author> T. Lozano-Perez. </author> <title> Robot programming. </title> <booktitle> Proceedings of IEEE, </booktitle> <volume> 71(7) </volume> <pages> 821-841. </pages>
Reference-contexts: Path Planning Utilizing Redundancy The path planning problem is the problem of finding a collision free trajectory for a manipulator between an initial state and a goal state, when its environment is known. Path planning is an important component of task level programming <ref> [Lozano-Perez 83a] </ref>. Humans seem to be good at path planning with their arms, and we believe that the performance is attributed largely to the kinematic redundancy of our arm-body system. However, no path planning algorithm exists to utilize redundancy.
Reference: [Lozano-Perez 83b] <author> T. Lozano-Perez. </author> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 32(2) </volume> <pages> 108-120. </pages>
Reference-contexts: Humans seem to be good at path planning with their arms, and we believe that the performance is attributed largely to the kinematic redundancy of our arm-body system. However, no path planning algorithm exists to utilize redundancy. Path planning algorithms based on the configuration space approach <ref> [Lozano-Perez 83b] </ref> are intractable in terms of the number of DOF. Algorithms based on the artificial potential field approach [Khatib 86] are more computationally feasible, but have a drawback inherent in their use of local optimization techniques: the local minima problem.
Reference: [Martelli 77] <author> A. Martelli. </author> <title> On the complexity of admissible search algorithms. </title> <journal> Artificial Intelligence, </journal> <volume> 8 </volume> <pages> 1-13. </pages>
Reference-contexts: This is because there cannot be more than O (n 4 ) PCRs and a node in the graph is determined by a sequence of 3 PCRs. By using the algorithm in <ref> [Martelli 77] </ref> to improve the exponential worst case running time of A fl , we obtain O (n 24 ) as an upper bound. The algorithm is quite efficient in practice.
Reference: [Morecki et al. 87] <author> A. Morecki, K. Ja-worek, W. Pogorzelski, T. Zielinska, J. Fraczek, and G. Malczyk. </author> <title> Robotics system elephant trunk type elastic manipulator combined with a quadruped walking machine. </title> <booktitle> In Proceedings of the Second International Conference on Robotics and Factories of the Future. </booktitle>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator [Hirose et al. 83], spine robot [Drozda 84, Todd 86], tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator <ref> [Morecki et al. 87] </ref>, snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
Reference: [Pieper 68] <author> D. L. Pieper. </author> <title> The kinematics of manipulators under computer control. </title> <type> PhD diss., </type> <institution> Mechanical Engineering Dept., Stanford Univ. </institution>
Reference-contexts: Their applications include passing trough restricted passages for the inspection or the maintenance of a mechanical system such as a nuclear reactor and a spacecraft. In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) <ref> [Pieper 68] </ref>, elastic manipulator [Hirose et al. 83], spine robot [Drozda 84, Todd 86], tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
Reference: [Reif 79] <author> J. H. Reif. </author> <title> Complexity of the generalized movers' problem. </title> <booktitle> In Proceedings of the 20th IEEE symposium on Foundations of Computer Science (San Juan, </booktitle> <address> Puerto Rico). </address>
Reference-contexts: Conclusions We have presented a path planning method for highly redundant manipulators by means of a continuous model, which captures a macroscopic shape of highly redundant manipulators. The path planning problem has been shown to be P SP ACE-complete in terms of DOF of the manipulator <ref> [Reif 79, Canny 88] </ref>. Our approach overcomes the complexity with a strong heuristic: utilizing redundancy by means of the continuous model.
Reference: [Rueb and Wong 87] <author> K. D. Rueb and A. K. C. Wong. </author> <title> Structuring free space as a hypergraph for roving robot path planning and navigation. </title> <journal> IEEE Transaction on Pattern Analysis and Machine Intelligence, </journal> <volume> 9(2) </volume> <pages> 263-273. </pages>
Reference-contexts: Then, smooth paths are found by extending previous algorithms to find polygonal paths in the convex regions. Overlapping regions of the convex regions are used to make smooth turns from one region to another. Free Space Decomposition to PCRs Free space is decomposed into primary convex regions <ref> [Rueb and Wong 87] </ref>. A primary convex region (PCR) is an unobstructed convex region with each boundary edge covering some portion of an obstacle wall. See Fig. 7. In the figure, each region is shrunk only for visibility. <p> Fig. 9 shows the steps involved in the path planning. Fig. 10 shows the paths found. Complexity A loose upper bound on the complexity of our algorithm is obtained as follows. An upper bound on the algorithm to find PCRs <ref> [Rueb and Wong 87] </ref> is O (n 4 ) time in the number of obstacle edges. If we treat the number of candidate turning corners as a constant, the number of nodes for A fl search is bounded by O (n 12 ).
Reference: [Singh and Wagh 87] <author> J. S. Singh and M. D. Wagh. </author> <title> Robot path planning using intersecting convex shapes: Analysis and simulation. </title> <journal> IEEE journal of Robotics and Automation, RA-3(2):101-108. </journal>
Reference-contexts: Alternatively, we decompose 3-D free space into primary convex regions. Smooth 3-D curves with curvature and torsion will be used in lieu of cubic spirals to make turns from one such region to another. We (see [Hayashi 91]) have extended the algorithm in <ref> [Singh and Wagh 87] </ref> to find primary convex regions in 2-D. Their algorithm requires that obstacles be approx imated by iso-oriented rectangles. Mapping to a Jointed Arm We provide a mapping to a jointed arm which has an even number of links of the same length.
Reference: [Stoker 69] <author> J. J. Stoker. </author> <title> Differential Geometry. </title> <publisher> Wiley-Interscience. </publisher>
Reference-contexts: Operators now include those to move (s a ; t a ) through (s e ; t e ). We use the Frenet equations (1) to obtain a configuration from curvature and torsion (see <ref> [Stoker 69] </ref>). _v 2 (s) ! (s) 0 +t (s) ! v 2 (s) ! v 1 (s), v 2 (s), v 3 (s) are the tangent, normal, and binor-mal vectors.
Reference: [Todd 86] <author> D. J. Todd. </author> <title> Fundamentals of robot technology. </title> <publisher> John Wiley and Sons. </publisher>
Reference-contexts: In the literature, highly redundant manipulators have been given a variety of names including ORM (the Norwegian word for snakes) [Pieper 68], elastic manipulator [Hirose et al. 83], spine robot <ref> [Drozda 84, Todd 86] </ref>, tentacle manipulator [Ivanescu and Badea 84], elephant's trunk like elastic manipulator [Morecki et al. 87], snake-like manipulator [Clement and I~nigo 90]. Some were actually built.
References-found: 22

