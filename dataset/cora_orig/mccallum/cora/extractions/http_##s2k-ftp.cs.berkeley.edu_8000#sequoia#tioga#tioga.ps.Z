URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tioga/tioga.ps.Z
Refering-URL: http://s2k-ftp.cs.berkeley.edu:8000/sequoia/tioga/
Root-URL: http://www.cs.berkeley.edu
Title: Tioga: Providing Data Management Support for Scientific Visualization Applications  
Author: Michael Stonebraker, Jolly Chen, Nobuko Nathan, Caroline Paxson, Jiang Wu 
Note: Proceedings of the 19th VLDB Conference Dublin, Ireland, 1993.  
Address: Berkeley, CA 94720  
Affiliation: Computer Science Division, EECS Department University of California  
Abstract: We present a user interface paradigm for database management systems that is motivated by scientific visualization applications. Our graphical user interface includes a "boxes and arrows" notation for database access and a flight simulator model of movement through information space. We also provide means to specify a hierarchy of abstracts of data of different types and resolutions, so that a "zoom" capability can be supported. The underlying DBMS support for this system is described and includes the compilation of query plans into megaplans, new algorithms for data buffering, and provisions for a guaranteed rate of data delivery. The current state of the Tioga implementation is also described. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the VLDB copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Very Large Data Base Endowment. To copy otherwise, or to republish, requires a fee and/or special permission from the Endowment. fl This research was sponsored by NSF Grant IRI-9107455, ARO Grant DAAL03-91-G-0183, DARPA Contract DABT63-92-C-0007. Additional support was provided by the University of California and Digital Equipment Corporation under Research Grant #1243.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Agrawal, R. and Gehani, N., </author> <title> "ODE: The Language and the Data Model," </title> <booktitle> Proc. 1989 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Portland, OR, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: Little attention has been addressed to the programming needs of the scientific user of a DBMS. Instead, work on programming language integration with DBMSs has focused on the seamless integration of general purpose languages, such as C++, with data base systems <ref> [1, 16] </ref>. This paper is organized as follows. In Section 2 we explain the "boxes and arrows" visual programming paradigm used by Tioga. Section 3 discusses the way Tioga requires the DBMS to interact with user-space (client) code.
Reference: [2] <author> Baru, C. and Su, S., </author> <title> "Performance Evaluation of the Statistical Aggregation by Categorization in the SM3 System," </title> <booktitle> Proc. 1984 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Boston, MA, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data [15], and statistical computations on large databases <ref> [2] </ref>. Little attention has been addressed to the programming needs of the scientific user of a DBMS. Instead, work on programming language integration with DBMSs has focused on the seamless integration of general purpose languages, such as C++, with data base systems [1, 16]. This paper is organized as follows.
Reference: [3] <author> Chen, J. "RASQL: </author> <title> A Graphical Query Language for Recipes," </title> <note> (in preparation) </note>
Reference-contexts: The recipe can be stored as a graph-like structure in a cookbook, a collection of recipes in the database. We provide a query tool to support browsing the cookbook. This tool, RASQL, is described in a companion paper <ref> [3] </ref>. RASQL is integrated with the diagram editor, so a user can retrieve a recipe from the cookbook, modify it with the diagram editor, and then install his new recipe back into the cookbook. Alternately, a recipe can be encapsulated or canned into a new ingredient.
Reference: [4] <author> Dewitt, D. et. al., </author> <title> "A Framework for Research in Database Management for Statistical Analysis," </title> <booktitle> Proc. 1982 SIGMOD International Conference on Management of Data, </booktitle> <address> Orlando, FL, </address> <month> June </month> <year> 1982. </year>
Reference-contexts: Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements <ref> [4] </ref>, representing scientific data [15], and statistical computations on large databases [2]. Little attention has been addressed to the programming needs of the scientific user of a DBMS.
Reference: [5] <author> Dozier, J., </author> <title> "Spectral Signature of Alpine Snow Cover from the Landsat Thematic Mapper," Remote Sensing Environment, </title> <month> March </month> <year> 1989. </year>
Reference-contexts: 1 Introduction Scientific visualization applications often deal with data objects of very large sizes. Examples include large regular arrays such as those found in global atmosphere and ocean circulation models [12] and in remote sensing applications <ref> [5] </ref>. Large data structures used to model roads, drainage networks, and vegetation patterns are represented as collections of arcs, polygons, or points. Popular visualization systems such as AVS, Explorer, or Khoros offer scientific users a visual programming environment and powerful visualization tools to manipulate and display scientific data.
Reference: [6] <author> Ferrari, D., </author> <title> "Client Requirements for Real--Time Communication Services," </title> <journal> IEEE Communications Magazine, </journal> <month> November </month> <year> 1990. </year>
Reference-contexts: In the diagram, the network boxes indicate either local or remote network connections. Local connections are assumed to be fast enough to meet delivery guarantees. The network manager is assumed to support delivery guarantees for remote connections using approaches such as <ref> [6] </ref>. Rates of data delivery will be specified via contractual protocols which each subsystem will follow. Since the ultimate performance requirements stem from interaction with the user, the visualization system must be responsible for initiating any performance demands.
Reference: [7] <author> Greene, D., </author> <title> "An Implementation and Performance Analysis of Spatial Data Access Methods," </title> <booktitle> Proc. 1989 Data Engineering Conference, </booktitle> <address> Los Angeles, CA, </address> <month> February </month> <year> 1989. </year>
Reference-contexts: Currently, POSTGRES supports functions written in C or in the query language POSTQUEL [13]. Although Tioga uses POSTGRES, our proposal can be readily adapted to any system that supports an extendible type system, user-defined functions, and a multi-dimensional access method, e.g. <ref> [7, 8, 11, 14] </ref>. Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data [15], and statistical computations on large databases [2].
Reference: [8] <author> Gutman, A., "R-trees: </author> <title> A Dynamic Index Structure for Spatial Searching," </title> <booktitle> Proc. 1984 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Boston, MA, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Currently, POSTGRES supports functions written in C or in the query language POSTQUEL [13]. Although Tioga uses POSTGRES, our proposal can be readily adapted to any system that supports an extendible type system, user-defined functions, and a multi-dimensional access method, e.g. <ref> [7, 8, 11, 14] </ref>. Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data [15], and statistical computations on large databases [2].
Reference: [9] <author> Herot, Christopher F., </author> <title> "Spatial Management of Data," </title> <journal> ACM Transactions on Database Systems, </journal> <month> December </month> <year> 1980. </year>
Reference-contexts: It is also the browser's responsibility to display appropriately the values which are returned from the recipe in a fashion similar to that of SDMS <ref> [9] </ref>. To assist the browser, each type implementor is expected to define a display function in POST-GRES of the form: display (object,location,screen-resource) The location of the object is an N-dimensional polygon. <p> To satisfy this requirement, the recipe execution system must be capable of producing recipe output at varying levels of detail. The zoom in/zoom out capability is reminiscent of SDMS <ref> [9] </ref>, where additional detail appeared automatically and was hard-wired into the system. In Tioga we are implementing a much more flexible scheme. We allow every recipe to have one or more children, which will be termed abstracts for the given recipe, since they contain less information.
Reference: [10] <author> Johnson, R.R. et. al., </author> <title> "USD A Database Management System for Scientific Research," </title> <booktitle> Proc. 1992 SIGMOD International Conference on Management of Data, </booktitle> <address> San Diego, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: On the other hand, Tioga is not bound to the E-R model but can implement many kinds of relationships between records. Also, multiple kinds of browsers can be included in our architecture. USD <ref> [10] </ref> has a similar "boxes and arrows" diagram notation, and each box can be a function as in our proposal. However, USD enforces a semantic net data model on the diagram, whereas we make no such restriction.
Reference: [11] <author> Kolovson, C. and Stonebraker, M., </author> <title> "Segment Indexes: Dynamic Indexing Techniques for Multi-dimensional Interval Data," </title> <booktitle> Proc. 1991 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Denver, </address> <publisher> CO. </publisher>
Reference-contexts: Currently, POSTGRES supports functions written in C or in the query language POSTQUEL [13]. Although Tioga uses POSTGRES, our proposal can be readily adapted to any system that supports an extendible type system, user-defined functions, and a multi-dimensional access method, e.g. <ref> [7, 8, 11, 14] </ref>. Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data [15], and statistical computations on large databases [2].
Reference: [12] <author> Mechoso, C. et. al., </author> <title> "Distribution of a Coupled Atmosphere-Ocean General Circulation Model Across High-Speed Networks," </title> <booktitle> Proceedings of the 4th International Symposium on Computational Fluid Dynamics, </booktitle> <year> 1991. </year>
Reference-contexts: 1 Introduction Scientific visualization applications often deal with data objects of very large sizes. Examples include large regular arrays such as those found in global atmosphere and ocean circulation models <ref> [12] </ref> and in remote sensing applications [5]. Large data structures used to model roads, drainage networks, and vegetation patterns are represented as collections of arcs, polygons, or points.
Reference: [13] <editor> Mosher, C. ed., </editor> <title> "The POSTGRES Reference Manual," </title> <institution> Electronics Research Laboratory, University of California, Berkeley, CA, </institution> <note> Memo 91/57, </note> <month> August </month> <year> 1991. </year>
Reference-contexts: The user must specify the number and types of the input arguments and the type of the function result as well as the location of the code for the function. Currently, POSTGRES supports functions written in C or in the query language POSTQUEL <ref> [13] </ref>. Although Tioga uses POSTGRES, our proposal can be readily adapted to any system that supports an extendible type system, user-defined functions, and a multi-dimensional access method, e.g. [7, 8, 11, 14]. Tioga differs from other work on supporting scientific users of database systems.
Reference: [14] <author> Nievergelt, J. et. al., </author> <title> "The Grid File: An Adaptable, Symmetric Multikey File Structure," </title> <journal> ACM Transactions on Database Systems, </journal> <month> March </month> <year> 1984. </year>
Reference-contexts: Currently, POSTGRES supports functions written in C or in the query language POSTQUEL [13]. Although Tioga uses POSTGRES, our proposal can be readily adapted to any system that supports an extendible type system, user-defined functions, and a multi-dimensional access method, e.g. <ref> [7, 8, 11, 14] </ref>. Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data [15], and statistical computations on large databases [2].
Reference: [15] <author> Ozsoyoglu, G. et. al., </author> <title> "A Language and a Physical Organization Technique for Summary Tables," </title> <booktitle> Proc. 1985 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Austin, TX, </address> <month> May </month> <year> 1985. </year>
Reference-contexts: Tioga differs from other work on supporting scientific users of database systems. Previous efforts have tended to concentrate on broad requirements [4], representing scientific data <ref> [15] </ref>, and statistical computations on large databases [2]. Little attention has been addressed to the programming needs of the scientific user of a DBMS.
Reference: [16] <author> Richardson, J. and Carey, M., </author> <title> "Programming Constructs for Database System Implementation in EXODUS," </title> <booktitle> Proc. 1987 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> San Francisco, CA, </address> <month> May </month> <year> 1987. </year>
Reference-contexts: Little attention has been addressed to the programming needs of the scientific user of a DBMS. Instead, work on programming language integration with DBMSs has focused on the seamless integration of general purpose languages, such as C++, with data base systems <ref> [1, 16] </ref>. This paper is organized as follows. In Section 2 we explain the "boxes and arrows" visual programming paradigm used by Tioga. Section 3 discusses the way Tioga requires the DBMS to interact with user-space (client) code.
Reference: [17] <author> Rogers, T.R., and Cattell, R.G.G., </author> <title> "Entity-Relationship Database User Interfaces," </title> <booktitle> Proceedings of the ER Institute, </booktitle> <institution> Baton Rouge, LA, </institution> <year> 1987. </year>
Reference-contexts: In this way, recipe management follows the lead of portals, which include the same capability. Our browser interface has points in common with previous user interface work. For example, Cattell and Rogers <ref> [17] </ref> describe an interface which uses an entity-relationship data model constructed for a given data base.
Reference: [18] <author> Selinger, P. et. al., </author> <title> "Access Path Selection in a Relational Data Base System," </title> <booktitle> Proc. 1979 ACM-SIGMOD Conference on Management of Data, </booktitle> <address> Boston, MA, </address> <month> June </month> <year> 1979. </year>
Reference-contexts: Assuming that the network manager has agreed to deliver on the contract, we now consider how the DBMS can also provide a guarantee. Traditionally, a DBMS query optimizer minimizes a weighted sum of I/O cost and CPU cost <ref> [18] </ref>. Given the throughput and computing power of the actual hardware platform, each of these esti mates can be converted to expected elapsed time.
Reference: [19] <author> Stonebraker, M., </author> <title> "Implementation of Integrity Constraints and Views by Query Modification," </title> <booktitle> Proc. 1975 ACM-SIGMOD Conference, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1975. </year>
Reference-contexts: For example, sequences of POSTQUEL functions can be coalesced into a single POSTQUEL function using the query modification technique for view composition discussed in <ref> [19] </ref>. The new function has the inputs of the first function, the output of the last, and the run-time parameters of all functions in the sequence. The query plan for the combined POSTQUEL function may be more efficient than the query plans of the individual functions executed serially. As [19] notes, <p> in <ref> [19] </ref>. The new function has the inputs of the first function, the output of the last, and the run-time parameters of all functions in the sequence. The query plan for the combined POSTQUEL function may be more efficient than the query plans of the individual functions executed serially. As [19] notes, though, if any POSTQUEL function in the sequence includes aggregate functions, this technique fails. If a recipe ingredient is a C function and is opaque to POSTGRES, it can still be coalesced with a preceding POSTQUEL box.
Reference: [20] <author> Stonebraker, M. and Rowe, L., </author> <title> "Database Portals ANew Application Program Interface," </title> <booktitle> Proceedings of the 10th International Conference on Very Large Databases, </booktitle> <address> Singa-pore, </address> <month> August </month> <year> 1984. </year>
Reference-contexts: This paper is organized as follows. In Section 2 we explain the "boxes and arrows" visual programming paradigm used by Tioga. Section 3 discusses the way Tioga requires the DBMS to interact with user-space (client) code. This interface is a generalization of both traditional SQL cursors and database portals <ref> [20] </ref>. Section 4 indicates the run-time support provided by POST-GRES for execution of Tioga boxes and arrows diagrams. This includes the definition and optimization of extended query plans. <p> In this way, they include some of the constructs proposed in portals, which allow an application program to retrieve multiple records in a variety of ways along a single dimension <ref> [20] </ref>. Our browser-DBMS protocol generalizes portals to operate in an N-dimensional space. Recipes do not include explicit update commands; rather they rely on the browser to issue separate POSTQUEL commands for this purpose.
References-found: 20

