URL: http://www.cis.ohio-state.edu/~chandra/function-paper.ps
Refering-URL: http://www.cis.ohio-state.edu/~chandra/
Root-URL: 
Title: An Explication of Function  
Author: B. Chandrasekaran and John R. Josephson 
Date: January, 1996  
Address: 2015 Neil Avenue Columbus, OH 43210  
Affiliation: Laboratory for AI Research The Ohio State University 375, Dreese Laboratories  
Abstract: For the last several years, mostly motivated by diagnostic and design problem solving, there has been much work on functions of devices. The intuitions about functions that these investigations capture and to some extent formalize are not all the same, and are generally quite restricted in their range of applicability. In this paper, we attempt to provide a foundation for unifying and generalizing many of these intuitions. Objects are embedded in an environment and represented in a view. Objects have properties in causal interaction with environment properties and are characterized by their property relations. Functions are defined in terms of the effects objects have on their environment. This framework is sufficient to unify static and dynamic objects, abstract and physical objects, intended and natural functions, and structural explanation as a species of causal ordering. We believe that with additional domainspecific content theories at different levels of abstraction, this framework can be uniformly applied in different domains. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Iwasaki and B. Chandrasekaran, </author> <title> Design Verification Through Function and Behavior-Oriented Representation: Bridging the gap between function and behavior, </title> <booktitle> in Artificial Intelligence in Design '92, </booktitle> <editor> J. S. Gero, Ed.: </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992, </year> <pages> pp. 597-616. </pages>
Reference-contexts: Diagnosis is naturally concerned with malfunctions, and design is, of course, concerned with producing a structure that has a desired function. This stream of work uses many of the ideas that have been developed in qualitative reasoning and qualitative simulation. For example, <ref> [1] </ref> uses qualitative simulation to verify design functions. The various investigations on device functions have mostly lacked a unified technical vision underlying them. Different intuitions about functions are pursued in different contexts and application domains. <p> Thus describing O as a composition includes not only identifying the components and describing which properties of the objects are in causal interactions, but also providing the mappings between the properties of O in its view and the properties of the components in their views. <ref> [1] </ref> Now a specific type of causal ordering is constructed. In this causal ordering, the causal antecedents of each object-level property of interest are identified recursively ending with (or rather causally beginning with) component-level properties. We will now consider structural explanations for the function of the Heater. 3.4.2. <p> In the pioneering work on function in diagnosis [12], the function was closely tied to the object. The work in the FR tradition (summarized in [3]) and on CFRL <ref> [1, 13] </ref> [14] treats function as an abstraction of the behavior of a device, as does [15]. This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability.
Reference: [2] <author> T. Bylander, </author> <title> A Critique of Qualitative Simulation From a Consolidation Viewpoint, </title> <journal> IEEE Trans. Systems, Man and Cybernetics, </journal> <volume> vol. 18, </volume> <pages> pp. 252-263, </pages> <year> 1988. </year>
Reference-contexts: Generating this sort of reduced representations for certain kinds of composite objects has been discussed in the literature on Consolidation <ref> [2] </ref>. For another example, consider an electronic Adder circuit. Composing its components, we can generate a description of it in terms of voltages and currents and generate a set of property relations involving both object and external properties.
Reference: [3] <author> B. Chandrasekaran, </author> <title> Functional representation and causal processes, </title> <booktitle> in Advances in Computers, </booktitle> <volume> vol. 38, </volume> <editor> M. C. Yovits, Ed.: </editor> <publisher> Academic Press, </publisher> <year> 1994, </year> <pages> pp. 73-143. </pages>
Reference-contexts: This is essential for both diagnostic and design purposes. 15 The stream of work on functions called Functional Representation (FR) Language (summarized in <ref> [3] </ref>) focuses on the relationship between the function of a device and its structure. In particular, it proposes a representation called a causal process description (CPD) to explain how the device achieves the function. In the CPD, the causal transitions are associated with formally interpretable explanatory annotations. <p> In the pioneering work on function in diagnosis [12], the function was closely tied to the object. The work in the FR tradition (summarized in <ref> [3] </ref>) and on CFRL [1, 13] [14] treats function as an abstraction of the behavior of a device, as does [15]. This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability.
Reference: [4] <author> Y. Iwasaki, and H. A. Simon, </author> <title> Causality in device behavior, </title> <journal> Artificial Intelligence, </journal> <volume> vol. 29, </volume> <year> 1986. </year>
Reference-contexts: However, once we know which of the variables is independent in a given situation, the equations then can be viewed as showing how the dependent variables are causally determined. 2. For more complex, multivariable situations, additional insights about the causal relations can be provided by causal ordering <ref> [4] </ref> [5]). Here, the causal antecedents of the property of interest are ordered in a partial order. Causal ordering explicitly indicates which properties depend on which others.
Reference: [5] <author> H. A. Simon, </author> <title> Causal ordering and identifiability, in Studies in Econometric Methods, </title> <editor> T. Koopman and W. Hood, Eds. </editor> <address> New York: </address> <publisher> John Wiley and Sons, </publisher> <year> 1953. </year>
Reference-contexts: However, once we know which of the variables is independent in a given situation, the equations then can be viewed as showing how the dependent variables are causally determined. 2. For more complex, multivariable situations, additional insights about the causal relations can be provided by causal ordering [4] <ref> [5] </ref>). Here, the causal antecedents of the property of interest are ordered in a partial order. Causal ordering explicitly indicates which properties depend on which others.
Reference: [6] <author> J. Hodges, </author> <title> Naive mechanics: A computational model od device use and function in design improvisation, </title> <journal> IEEE Expert, </journal> <volume> vol. 7, </volume> <pages> pp. 14-27, </pages> <year> 1992. </year>
Reference-contexts: A susbtantial body of work can be thought of as content-theory that can fit comfortably with the notions developed here. A set of basic roles in mechanical interactions is provided in <ref> [6] </ref> and, in a somewhat different subdomain, in Goel [19], roles that components of loops play in algorithms are given in [7], roles that seem to be common to different domains sharing the ontology of flows is given in [8] et al..
Reference: [7] <author> D. Allemang, </author> <title> Using Functional Models in Automatic Debugging, </title> <journal> in IEEE Expert, </journal> <volume> vol. 6, </volume> <year> 1991, </year> <pages> pp. 13-18. </pages>
Reference-contexts: A set of basic roles in mechanical interactions is provided in [6] and, in a somewhat different subdomain, in Goel [19], roles that components of loops play in algorithms are given in <ref> [7] </ref>, roles that seem to be common to different domains sharing the ontology of flows is given in [8] et al.. The focus on functional roles common to flow systems is shared by [9] and [10].
Reference: [8] <author> L. Chittaro, C. Tasso, and E. Toppano, </author> <title> Putting functional knowledge on firmer ground, </title> <journal> International Journal of Applied Artificial Intelligence, </journal> <volume> vol. 8, </volume> <pages> pp. 239-258, </pages> <year> 1994. </year>
Reference-contexts: A set of basic roles in mechanical interactions is provided in [6] and, in a somewhat different subdomain, in Goel [19], roles that components of loops play in algorithms are given in [7], roles that seem to be common to different domains sharing the ontology of flows is given in <ref> [8] </ref> et al.. The focus on functional roles common to flow systems is shared by [9] and [10]. There has been a substantial body of work in visual understanding (see, e.g., [11]) wherein recognitional algorithms use a functional rather than a structural definition of objects to be recognized.
Reference: [9] <author> M. Lind, </author> <title> Modeling goals and functions of complex industrial plants, </title> <journal> Applied Artificial Intelligence, </journal> <volume> vol. 8, </volume> <pages> pp. 259-283, </pages> <year> 1994. </year>
Reference-contexts: The focus on functional roles common to flow systems is shared by <ref> [9] </ref> and [10]. There has been a substantial body of work in visual understanding (see, e.g., [11]) wherein recognitional algorithms use a functional rather than a structural definition of objects to be recognized.
Reference: [10] <author> A. N. Kumar, and S. J. Upadhyaya, </author> <title> Function-based discrimination using model-based diagnosis, </title> <journal> International Journal of Applied Artificial Intelligence, </journal> <volume> vol. 9, </volume> <pages> pp. 65-80, </pages> <year> 1995. </year>
Reference-contexts: The focus on functional roles common to flow systems is shared by [9] and <ref> [10] </ref>. There has been a substantial body of work in visual understanding (see, e.g., [11]) wherein recognitional algorithms use a functional rather than a structural definition of objects to be recognized.
Reference: [11] <author> L. Stark, and K. W. Boyer, </author> <title> Achieving generalized object recognition through reasoning about association of function to structure, </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> vol. 13, </volume> <pages> pp. 1097-1104, </pages> <year> 1991. </year>
Reference-contexts: The focus on functional roles common to flow systems is shared by [9] and [10]. There has been a substantial body of work in visual understanding (see, e.g., <ref> [11] </ref>) wherein recognitional algorithms use a functional rather than a structural definition of objects to be recognized. Thus a recognizer for chair would see if the object can in fact support the sitting of a person rather than look for specific subparts.
Reference: [12] <author> R. Davis, </author> <title> Diagnostic Reasoning Based on Structure and Function, </title> <journal> Artificial Intelligence, </journal> <volume> vol. 24, </volume> <pages> pp. 7-84, </pages> <year> 1984. </year>
Reference-contexts: Thus a recognizer for chair would see if the object can in fact support the sitting of a person rather than look for specific subparts. In the pioneering work on function in diagnosis <ref> [12] </ref>, the function was closely tied to the object. The work in the FR tradition (summarized in [3]) and on CFRL [1, 13] [14] treats function as an abstraction of the behavior of a device, as does [15].
Reference: [13] <author> Y. Iwasaki, R. Fikes, M. Vescovi, and B. Chandrasekaran, </author> <title> How Things Are Intended to Work: Capturing functional knowledge in device design, </title> <booktitle> in Proceedings of the 13th International Joint Conference on Artificial Intelligence. </booktitle> <address> Mountain View, CA: </address> <publisher> Morgan Kaufmann, </publisher> <year> 1993, </year> <pages> pp. 1516-1522. </pages>
Reference-contexts: In the pioneering work on function in diagnosis [12], the function was closely tied to the object. The work in the FR tradition (summarized in [3]) and on CFRL <ref> [1, 13] </ref> [14] treats function as an abstraction of the behavior of a device, as does [15]. This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability.
Reference: [14] <author> M. Vescovi, Y. Iwasaki, R. Fikes, and B. Chandrasekaran, CFRL: </author> <title> A Language for Specifying the Causal Functionality of Engineered Devices, </title> <booktitle> in Eleventh National Conference on AI: </booktitle> <publisher> AAAI Press/MIT Press, </publisher> <year> 1993, </year> <pages> pp. 626-633. </pages>
Reference-contexts: In the pioneering work on function in diagnosis [12], the function was closely tied to the object. The work in the FR tradition (summarized in [3]) and on CFRL [1, 13] <ref> [14] </ref> treats function as an abstraction of the behavior of a device, as does [15]. This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability.
Reference: [15] <author> Y. Umeda, H. Takeda, T. Tomiyama, and H. Yoshikawa, </author> <title> Function, behavior and structure, </title> <booktitle> in AI in Engineering: </booktitle> <publisher> Computational Mechanics Publications and Springer Verlag, </publisher> <year> 1990, </year> <pages> pp. 177-193. </pages>
Reference-contexts: In the pioneering work on function in diagnosis [12], the function was closely tied to the object. The work in the FR tradition (summarized in [3]) and on CFRL [1, 13] [14] treats function as an abstraction of the behavior of a device, as does <ref> [15] </ref>. This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability.
Reference: [16] <author> M. Sasajima, Y. Kitamura, M. Ikeda, and R. Mizoguchi, FBRL: </author> <title> A function and behavior representation language, </title> <booktitle> in International Joint Conf on Artificial Intelligence, </booktitle> <volume> vol. 2. </volume> <booktitle> Montreal: IJCAI, </booktitle> <publisher> Inc. and Morgan Kaufmann, </publisher> <year> 1995, </year> <pages> pp. 1830-1836. </pages>
Reference-contexts: This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability. Recently, <ref> [16] </ref> and [17] share some essential intuitions with the present paper in that they make an effort to separate the behavior of an object from its function as the role played in the achievement of a designers goal.
Reference: [17] <author> J. E. Larsson, </author> <title> Diagnosis based on explicit means-end models, </title> <journal> Artificial Intelligence, </journal> <year> 1995. </year> <month> 20 </month>
Reference-contexts: This is entirely adequate for many purposes, but the separation of function from the objects properties will help those investigations to reach wider applicability. Recently, [16] and <ref> [17] </ref> share some essential intuitions with the present paper in that they make an effort to separate the behavior of an object from its function as the role played in the achievement of a designers goal.
Reference: [18] <author> A. Keuneke, </author> <title> Device Representation: The significance of functional knowledge, </title> <journal> in IEEE Expert, </journal> <volume> vol. 6, </volume> <year> 1991, </year> <pages> pp. 22-25. </pages>
Reference-contexts: The present paper proposes what appears to be the simplest ontology in which this notion can be explicated, and also makes various kinds of unifications, such as between static and dynamic objects and between intended functions and functions observed in natural systems. Research on function types of <ref> [18] </ref> is orthogonal to the work here, and can be restated to be consistent with the definition of function proposed here.
Reference: [19] <author> A. K. Goel, </author> <title> Integration of cased-based reasoning and model-based reasoning for adaptive design problem solving, </title> <type> Ph. D. thesis, </type> <institution> Ohio State University, </institution> <year> 1989. </year>
Reference-contexts: A susbtantial body of work can be thought of as content-theory that can fit comfortably with the notions developed here. A set of basic roles in mechanical interactions is provided in [6] and, in a somewhat different subdomain, in Goel <ref> [19] </ref>, roles that components of loops play in algorithms are given in [7], roles that seem to be common to different domains sharing the ontology of flows is given in [8] et al.. The focus on functional roles common to flow systems is shared by [9] and [10].
References-found: 19

