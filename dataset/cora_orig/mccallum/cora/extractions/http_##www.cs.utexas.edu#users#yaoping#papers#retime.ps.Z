URL: http://www.cs.utexas.edu/users/yaoping/papers/retime.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/yaoping/ypub.html
Root-URL: 
Title: On Retiming for FPGA Logic Module Minimization  
Author: Y. P. Chen and D. F. Wong 
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract: In this paper, we consider the problem of minimizing the number of logic modules for Actel 2 or Actel 3 sequential circuits. We make use of the fact that if a flip-flop is the only destination of its driving combinational block, then both the flip-flop and the combinational block can be put in a sequential module. Retiming technique is applied to minimize the number of registers that can not be merged with combinational blocks. We formulate the problem as an integer linear program. We show that the constraint matrix of the integer program is totally unimodular. As a result, we can solve our logic module minimization problem optimally by solving the linear relaxation of the integer program. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. E. Leiserson and J. B. Saxe, </author> <title> "Retiming synchronous Circuitry,"Algorithmica, </title> <journal> pp.5-35, </journal> <volume> 6, </volume> <year> 1991. </year>
Reference-contexts: It is often concerned that timing constraint is met. Some minor extension of our method can retime the circuit to minimize the number of logic modules such that the clock period of the retimed circuit does not exceed a given bound. Our method follows <ref> [1] </ref>. Given a circuit G, let W (u; v) be the minimum number of registers on any path from vertex u to vertex v. We call a path p from u to v a critical path if w (p) = W (u; v).
Reference: [2] <author> Actel Corporation, </author> <title> The FPGA Design Guide 2, </title> <address> De-cember, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction The ACT2/ACT3 <ref> [2] </ref> architecture developed at Actel Inc. is one type of FPGAs using anti-fuse technology. The problem discussed in this paper is particularly related to ACT2/ACT3 architecture. An FPGA design consists of rows of logic modules which are configured to implement specific logic functions.
Reference: [3] <author> S. Ercolani and G. D. Michelli, </author> <title> "Technology mapping for electrically programmable gate arrays,"Design Automation Conference, </title> <address> pp.234-239, </address> <year> 1991. </year>
Reference: [4] <author> K. Zhu and D. F. Wong, </author> <title> "Fast boolean matching for field-programmable gate arrays," </title> <booktitle> European Design Automation Conference, </booktitle> <address> pp.352-357, </address> <year> 1993. </year>
Reference: [5] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability A Guide to the Theory of NP-Completeness, </title> <year> 1979. </year>
Reference-contexts: Theorem 1 The first and the second optimization problems have the same optimum solution. General integer linear programming problem is not known to be polynomial-time solvable <ref> [5] </ref>. A general in teger linear programming has the following form. Minimize (Maximize) cx Ax b x integer A is a matrix. c, b and x are vectors.
Reference: [6] <author> T. C. Hu, </author> <title> Integer Programming and Network Flows, </title> <year> 1969. </year>
Reference-contexts: A matrix A is said to be totally unimodular if and only if every subdetermi nant of A equals +1, -1, or 0. Also, it is known that if A is totally unimodular, so is A T , the transpose matrix of A. Theorem 2 <ref> [6] </ref> A linear program with the constraint Ax b and x 0 always has an integer optimum so lution for any arbitrary integer vector b if the matrix A is totally unimodular. We further transform the second optimization problem into the third optimization problem as follows.
Reference: [7] <author> C. H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization Algorithms and Complexity, </title> <year> 1982. </year>
Reference-contexts: We now show that if we remove the integer constraint (28) and (29) from the third optimization problem, it still has integer optimum solution. Our argument is based on the total unimodularity of matrix. Theorem 4 <ref> [7] </ref> An integer matrix A with a ij = 0; 1 is totally unimodular if no more than two nonzero entries ap pear in any column, and if the rows of A can be partitioned into two sets I 1 and I 2 such that: 1.
Reference: [8] <author> E. M. Sentovich, et al., </author> <title> "Sequential circuit design using synthesis and optimization," </title> <booktitle> IEEE International Conference on Computer Design, </booktitle> <address> pp.328-333, </address> <year> 1992. </year>
Reference-contexts: The constraint matrix of the modified problem is still totally unimodular. Therefore, the logic module minimization under clock cycle time constraint can be solved by linear program. 4 Experimental Results We did experiments on MCNC benchmark sequential circuits. We implemented our algorithm in the SIS environment <ref> [8] </ref>. We first used act map command in SIS to perform technology mapping. Based on that we created a linear program of the form of the third optimization problem excluding integer constraints, which is solved by a linear program solver using simplex method.
References-found: 8

