URL: http://www.cs.cornell.edu/Info/People/kreitz/PS-files/96-KI-final.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/kreitz/Abstracts/96-KI-final.html
Root-URL: 
Email: fjeotten,kreitzg@intellektik.informatik.th-darmstadt.de  
Title: A Uniform Proof Procedure for Classical and Non-Classical Logics  
Author: Jens Otten Christoph Kreitz 
Address: Alexanderstr. 10, 64283 Darmstadt, Germany  
Affiliation: Fachgebiet Intellektik, Fachbereich Informatik Technische Hochschule Darmstadt  
Note: In G. Gorz S. Holldobler, ed. KI-96: Advances in Artificial Intelligence, LNAI 1137, pp. 307-319, Springer Verlag, 1996.  
Abstract: We present a proof procedure for classical and non-classical logics. The proof search is based on the matrix-characterization of validity where an emphasis on paths and connections avoids redundancies occurring in sequent or tableaux calculi. Our uniform path-checking algorithm operates on arbitrary (non-normal form) formulae and generalizes Bibel's connection method for classical logic and formulae in clause-form. It can be applied to intuitionistic and modal logics by modifying the component for testing complementarity of connected atoms. Besides a short and elegant path-checking procedure we present a specialized string-unification algorithm which is necessary for dealing with non-classical logics.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> B. Beckert and J. Posegga. </author> <title> leanT A P : lean, tableau-based theorem proving. </title> <booktitle> Proc. </booktitle> <address> CADE-12, </address> <publisher> LNAI 814, </publisher> <year> 1994. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method [4, 5, 8, 3], or the tableaux calculus <ref> [2, 1] </ref> have demonstrated that formal reasoning can be automated well. Recently Wallen [15, 16] and Ohlbach [10] have extended the classical characterizations of logical validity on which the above proof methods are based into characterizations of logical validity for intuitionistic and various modal logics.
Reference: 2. <editor> E. W. Beth. </editor> <booktitle> The foundations of mathematics. </booktitle> <publisher> North-Holland, </publisher> <year> 1959. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method [4, 5, 8, 3], or the tableaux calculus <ref> [2, 1] </ref> have demonstrated that formal reasoning can be automated well. Recently Wallen [15, 16] and Ohlbach [10] have extended the classical characterizations of logical validity on which the above proof methods are based into characterizations of logical validity for intuitionistic and various modal logics.
Reference: 3. <author> W. Bibel, S. Br uning, U. Egly, T. </author> <title> Rath. </title> <journal> Komet. Proc. CADE-12, </journal> <volume> LNAI 814, </volume> <pages> pp. 783-787. </pages> <year> 1994. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method <ref> [4, 5, 8, 3] </ref>, or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well.
Reference: 4. <author> W. Bibel. </author> <title> On matrices with connections. </title> <journal> Jour. of the ACM, </journal> <volume> 28, </volume> <pages> p. 633-645, </pages> <year> 1981. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method <ref> [4, 5, 8, 3] </ref>, or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. <p> In this paper we present a proof procedure which allows a uniform treatment of classical, intuitionistic, and modal logics. It is based on a unified representation of Wallen's matrix characterizations and generalizes Bibel's connection method <ref> [4, 5] </ref> for classical predicate logic accordingly. In order to keep the general methodology of the latter following connections when investigating paths through a given formula unchanged we had to take into account a considerable extension of the notion of complementarity which strongly depends on the logic under consideration. <p> Formula tree and matrix for F 1 and Q (a 1 )=2 2.2 Classical Logic To resume the characterization for classical logic <ref> [4, 5] </ref> we introduce the concepts of paths and connections. For the first-order (classical) logic it is further necessary to define the notion of a first-order substitution and the reduction ordering. Definition 4 (Matrix,Path,Connection). 1.
Reference: 5. <author> W. Bibel. </author> <title> Automated Theorem Proving. </title> <publisher> Vieweg, </publisher> <year> 1987. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method <ref> [4, 5, 8, 3] </ref>, or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. <p> In this paper we present a proof procedure which allows a uniform treatment of classical, intuitionistic, and modal logics. It is based on a unified representation of Wallen's matrix characterizations and generalizes Bibel's connection method <ref> [4, 5] </ref> for classical predicate logic accordingly. In order to keep the general methodology of the latter following connections when investigating paths through a given formula unchanged we had to take into account a considerable extension of the notion of complementarity which strongly depends on the logic under consideration. <p> We conclude with a few remarks on possible extensions. 2 Matrix Characterizations of Logical Validity After describing some basic notations we shall present a matrix-characterization of validity for classical logic pioneered by Bibel <ref> [5] </ref> and explain the modifications which are necessary for extending this characterization to intuitionistic and various modal logics. We refer to [16] for detailed explanations. 2.1 Preliminaries We assume the reader to be familiar with the language of classical and modal first-order logic. <p> Formula tree and matrix for F 1 and Q (a 1 )=2 2.2 Classical Logic To resume the characterization for classical logic <ref> [4, 5] </ref> we introduce the concepts of paths and connections. For the first-order (classical) logic it is further necessary to define the notion of a first-order substitution and the reduction ordering. Definition 4 (Matrix,Path,Connection). 1. <p> Example 5. Q = fa 1 na; a 6 nbg is a first-order substitution for F 1 . The induced reduction ordering is the tree ordering and irreflexive. Therefore Q is admissible. Theorem 6 (Characterization for Classical Logic <ref> [5] </ref>). A (first-order) formula F is classically valid, iff there is a multiplicity := Q , an admissible first-order substitution := Q and a set of -complementary connections such that every path through F contains a connection from this set. Example 6. <p> In this section we describe a general path checking algorithm which is driven by connections instead of the logical connectives. Once a complementary connection has been identified all paths containing this connection are deleted. This is similar to Bibel's connection method for classical logic <ref> [5] </ref> but without necessity for transforming the formula into any normal form. The algorithm avoids the notational redundancies occurring in sequent or analytic tableaux based proof procedures. Our technique can also be used for proof search in various non-classical logics where no normal form exists.
Reference: 6. <author> M. C. </author> <title> Fitting. Intuitionistic logic, model theory and forcing. </title> <publisher> North-Holland, </publisher> <year> 1969. </year>
Reference: 7. <author> G. </author> <title> Gentzen. Untersuchungen uber das logische Schlieen. </title> <journal> Mathematische Zeit-schrift, </journal> <volume> 39 </volume> <pages> 176-210, 405-431, </pages> <year> 1935. </year>
Reference: 8. <author> R. Letz, J. Schumann, S. Bayerl, W. Bibel. </author> <title> Setheo: A high-performance theorem prover. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 8 </volume> <pages> 183-212, </pages> <year> 1992. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method <ref> [4, 5, 8, 3] </ref>, or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well.
Reference: 9. <author> A. Martelli and Ugo Montanari. </author> <title> An efficient unification algorithm. </title> <journal> ACM TOPLAS, </journal> <volume> 4 </volume> <pages> 258-282, </pages> <year> 1982. </year>
Reference-contexts: For the former well-known unification algorithms <ref> [14, 9] </ref> compute a most general unifier which leads to the first-order substitution. For the latter efficient algorithms testing the acyclicity of a directed graph can be used. <p> This restriction allows us to give an efficient algorithm computing a minimal set of most general unifiers. Similar to the ideas of Martelli and Montanari <ref> [9] </ref> rather than by giving a recursive procedure we consider the process of unification as a sequence of transformations of an equation.
Reference: 10. <author> H. J. Ohlbach. </author> <title> A resolution calculus for modal logics. </title> <type> Ph.D. Thesis, </type> <institution> Universitat Kaiserslautern, </institution> <year> 1988. </year>
Reference-contexts: For classical predicate logic theorem provers based on resolution [14, 17], the connection method [4, 5, 8, 3], or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. Recently Wallen [15, 16] and Ohlbach <ref> [10] </ref> have extended the classical characterizations of logical validity on which the above proof methods are based into characterizations of logical validity for intuitionistic and various modal logics. <p> Our algorithm is much simpler and considerably more efficient than other string unification algorithms developed so far. Ohlbach's algorithm <ref> [10] </ref>, e.g., does not compute a minimal set of unifiers. In general the number of most general unifiers is finite but may grow exponentially with respect to the length of the unified strings. 4.3 Modal Logics The modal logics also require T-string-unification.
Reference: 11. <author> J. Otten, C. </author> <title> Kreitz. A connection based proof method for intuitionistic logic. </title> <booktitle> Proc. 4 th TABLEAUX Workshop, LNAI 918, </booktitle> <pages> pp. 122-137, </pages> <year> 1995. </year>
Reference-contexts: The resulting proof procedure is based on ideas originally developed for a generalized connection based proof method for intuitionistic logic <ref> [11] </ref>. It consists of a connection driven algorithm which checks the complementarity of all paths through a given formula and uses a component for testing complementarity. The latter depends on the underlying logic and is based on the string-unification procedure developed in [12].
Reference: 12. <author> J. Otten, C. </author> <title> Kreitz. T-String-Unification: Unifying Prefixes in Non-Classical Proof Methods. </title> <booktitle> Proc. 5 th TABLEAUX Workshop, LNAI 1071, </booktitle> <pages> pp. 244-260, </pages> <year> 1996. </year>
Reference-contexts: It consists of a connection driven algorithm which checks the complementarity of all paths through a given formula and uses a component for testing complementarity. The latter depends on the underlying logic and is based on the string-unification procedure developed in <ref> [12] </ref>. This modular design allows us to treat a rich variety of logics in a uniform and simple way. Our paper is organized as follows. In section 2 we resume fundamental concepts and provide uniform matrix characterizations of logical validity for classical, intu-itionistic and various modal logics. <p> Table 6. Transformation Rules for Intuitionistic Logic (and Modal Logic S4) By modifying the set of transformation rules we are also able to treat the modal logics D, D4, S5 and T (see <ref> [12] </ref> for details). Our algorithm is much simpler and considerably more efficient than other string unification algorithms developed so far. Ohlbach's algorithm [10], e.g., does not compute a minimal set of unifiers. <p> In general the number of most general unifiers is finite but may grow exponentially with respect to the length of the unified strings. 4.3 Modal Logics The modal logics also require T-string-unification. We have developed such procedures in <ref> [12] </ref> by considering the accessibility condition for each particular logic L. 8 T_string_unify L (p; q) computes the most general unifier for p and q with respect to the accessibility condition for L. This leads to the substitution M .
Reference: 13. <author> J. Otten. </author> <title> Ein konnektionenorientiertes Beweisverfahren fur intuitionistische Logik. </title> <type> Master's thesis, </type> <institution> TH Darmstadt, </institution> <year> 1995. </year>
Reference: 14. <author> J. A. Robinson. </author> <title> A machine-oriented logic based on the resolution principle. </title> <journal> Jour. of the ACM, </journal> <volume> 12(1) </volume> <pages> 23-41, </pages> <year> 1965. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution <ref> [14, 17] </ref>, the connection method [4, 5, 8, 3], or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. <p> For the former well-known unification algorithms <ref> [14, 9] </ref> compute a most general unifier which leads to the first-order substitution. For the latter efficient algorithms testing the acyclicity of a directed graph can be used.
Reference: 15. <author> L. Wallen. </author> <title> Matrix proof methods for modal logics. </title> <booktitle> IJCAI-87 , p. </booktitle> <pages> 917-923. </pages> <year> 1987. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method [4, 5, 8, 3], or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. Recently Wallen <ref> [15, 16] </ref> and Ohlbach [10] have extended the classical characterizations of logical validity on which the above proof methods are based into characterizations of logical validity for intuitionistic and various modal logics.
Reference: 16. <author> L. Wallen. </author> <title> Automated deduction in nonclassical logic. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution [14, 17], the connection method [4, 5, 8, 3], or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well. Recently Wallen <ref> [15, 16] </ref> and Ohlbach [10] have extended the classical characterizations of logical validity on which the above proof methods are based into characterizations of logical validity for intuitionistic and various modal logics. <p> We refer to <ref> [16] </ref> for detailed explanations. 2.1 Preliminaries We assume the reader to be familiar with the language of classical and modal first-order logic. To get a uniform notation we firstly define formula trees, polarities, types, and multiplicities. Definition 1 (Formula Tree, Positions, Labels). <p> Theorem 9 (Characterization for Intuitionistic Logic <ref> [16] </ref>). A formula F is intuitionistically valid, iff there is a multiplicity := ( Q ; J ), a J-admissible combined substitution = ( Q ; J ), and a set of -complementary connections such that every path through F contains a connection from this set. Example 9. <p> Theorem 12 (Characterization for Modal Logics <ref> [16] </ref>). Let L be one of the modal logics D, D4, S4, S5 or T.
Reference: 17. <author> L. Wos et. al. </author> <title> Automated reasoning contributes to mathematics and logic. </title> <booktitle> Proc. CADE-10 , LNCS 449, </booktitle> <pages> pp. 485-499, </pages> <year> 1990. </year> <title> This article was processed using the L a T E X macro package with LLNCS style 319 </title>
Reference-contexts: In many of these applications there is a need for automated proof search. For classical predicate logic theorem provers based on resolution <ref> [14, 17] </ref>, the connection method [4, 5, 8, 3], or the tableaux calculus [2, 1] have demonstrated that formal reasoning can be automated well.
References-found: 17

