URL: ftp://ftp.isi.edu/isi-pubs/rs-93-359.ps.Z
Refering-URL: http://www.isi.edu/isi-technical-reports.html
Root-URL: http://www.isi.edu
Title: ISI Reprint Series  Case Study: Multimedia Conference Control in a Packet-switched Teleconferencing System  
Author: Eve M. Schooler 
Address: 4676 Admiralty Way, Marina del Rey, CA 90292-6695  
Affiliation: University of Southern California Information Sciences Institute  
Note: Reprinted from the Journal of Internetworking: Research and Experience, Vol. 4, No. 2, pp.  
Date: August 1993  99-120 (June 1993).  310-822-1511  
Pubnum: ISI/RS-93-359  
Abstract: This research was sponsored by the Defense Advanced Research Projects Agency under contract number DABT63-91-C-0001. Views and conclusions contained in this report are the author's and should not be interpreted as representing the official opinion or policy of DARPA, the U.S. Government, or any person or agency connected with them. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ahuja, S.R., Ensor, J., Horn, D., </author> <title> "The Rapport Multimedia Conferencing System", </title> <booktitle> Proceedings of the Conference on Office Information Systems, </booktitle> <address> Palo Alto, CA (Mar 1988). </address>
Reference-contexts: Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [2] <author> Arango, M., et al, </author> <title> "Touring Machine: A Software Platform for Distributed Multimedia Applications", </title> <booktitle> Proceedings 1992 IFIP International Conference on Upper Layer Protocols, Architectures and Applications, </booktitle> <address> Vancouver, Canada (May 1992). </address>
Reference-contexts: Our current teleconferencing system is the forerunner to this architecture, but we have also drawn ideas from other connection management schemes <ref> [2, 18, 22, 24, 40] </ref>. While these schemes are diverse, each has suggested the need for a connection management abstraction. User Interface Participants: Eve, Steve, and Joe Audio: high qual Video: adequate qual Speed: moderate Cost: moderate ... <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [3] <author> Birman, K., Schiper, A., Stephenson, P. </author> <title> "Lightweight Causal and Atomic Group Multicast", </title> <type> Technical Report TR90-1105, </type> <institution> Department of Computer Science, Cornell University (1990). </institution>
Reference-contexts: Yet, the model is rigidly client-server, where conference management is peer-to-peer, and while this too is surmountable, there is the issue that a multicast group interface is missing from the Sun RPC specification [38]. Group-oriented protocols such as ISIS protocols <ref> [3] </ref> or VMTP [9, 10] might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large and is increasingly inefficient for widely dispersed groups, and group communication under VMTP is of the unreliable variety.
Reference: [4] <author> Braden, R. (ed.), </author> <title> "Requirements for Internet Hosts -- Communication Layers", </title> <type> RFC 1122, </type> <institution> USC/Information Sciences Institute (Oct 1989). -15 </institution>
Reference-contexts: Therefore transaction timeouts are managed and dynamically adjusted on a site-by-site basis. These values are regularly updated, as is done for TCP <ref> [4, 19, 20] </ref>, to reflect the expected roundtrip time (RTT) for a message between two MMCCs. RTT is useful not only for request-reply timeout approximations, but also for media synchronization.
Reference: [5] <author> Casner, S., Deering, S., </author> <title> "First IETF Internet Audiocast", </title> <journal> ACM SIGCOMM Computer Communications Review, Vol.22, </journal> <volume> No.3, </volume> <month> pp.92-97 (Jul </month> <year> 1992). </year>
Reference-contexts: A more complete description of how bandwidth reduction mechanisms fit into our proposed connection architecture may be found in [29]. 8.4.4 Protocol Experimentation The IETF audiocasts and videocasts have shown that there is a very real demand for Internet teleconferencing <ref> [5] </ref>. Packet audio and video have been multicast to nearly 200 hosts spanning 10 countries, and for upcoming meetings remote participation is likely to increase.
Reference: [6] <author> Casner, S., Seo, K., Edmond, W., Topolcic, C., </author> <title> "N-Way Conferencing with Packet Video", </title> <booktitle> Proceedings 3rd International Workshop on Packet Video, </booktitle> <address> VISICOM '90, Morristown, NJ (Mar 1990). </address>
Reference-contexts: As proof of concept, we have developed an experimental packet teleconferencing system <ref> [6] </ref> that allows geographically separated individuals to collaborate by combining real-time packet-switched audio and video with shared computer workspaces, sometimes called groupware.
Reference: [7] <author> Chang, Y., Whaley, J., </author> <title> "Remote Conferencing Architecture", </title> <booktitle> Proceedings of the 24th Internet Engineering Task Force, Teleconferencing Architecture BOF, </booktitle> <address> Boston, MA (Jul 1992). </address>
Reference-contexts: Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable. <p> Within the IETF, several activities in which ISI is heavily involved are aiming to remedy this situation: a Remote Conferencing Architecture effort has emerged <ref> [7] </ref>; experience with the NVP and PVP protocols have contributed to the design and implementation of a Real-time Transport Protocol (RTP) [33] within the Audio/Video Transport Working Group: the formation of a Conference Control effort is underway to address scalable session management [29] and to tie in with RTP requirements; the
Reference: [8] <author> Chen, M., Barzilai, T., Vin, H.M., </author> <title> "Software Architecture of DiCE: A Distributed Collaboration Environment", </title> <booktitle> Proceedings 4th IEEE ComSoc International Workshop on Multimedia Communications, </booktitle> <address> Monterey, CA (Apr 1992). </address>
Reference-contexts: Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [9] <author> Cheriton, D., Williamson, C., </author> <title> "VMTP as the Transport Layer for High-Performance Distributed Systems", </title> <journal> IEEE Communications Magazine, </journal> <month> pp.37-44 (Jun </month> <year> 1989). </year>
Reference-contexts: Yet, the model is rigidly client-server, where conference management is peer-to-peer, and while this too is surmountable, there is the issue that a multicast group interface is missing from the Sun RPC specification [38]. Group-oriented protocols such as ISIS protocols [3] or VMTP <ref> [9, 10] </ref> might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large and is increasingly inefficient for widely dispersed groups, and group communication under VMTP is of the unreliable variety.
Reference: [10] <author> Cheriton, D., "VMTP: </author> <title> Versatile Message Transaction Protocol - Protocol Specification", </title> <type> RFC 1045, </type> <institution> Stanford University, Stanford, </institution> <address> CA (Feb 1988). </address>
Reference-contexts: Yet, the model is rigidly client-server, where conference management is peer-to-peer, and while this too is surmountable, there is the issue that a multicast group interface is missing from the Sun RPC specification [38]. Group-oriented protocols such as ISIS protocols [3] or VMTP <ref> [9, 10] </ref> might also have served well as a basis for CCP, but group communication under ISIS pays a high penalty unless the groups are large and is increasingly inefficient for widely dispersed groups, and group communication under VMTP is of the unreliable variety.
Reference: [11] <author> Clark, D., Shenker, S., Zhang, L., </author> <title> "Supporting Real-Time Applications in an Integrated Services Packet Network: Architecture and Mechanism", </title> <booktitle> Proceedings ACM SIGCOMM '92, </booktitle> <address> Baltimore, MD (Aug 1992). </address>
Reference-contexts: Although not directly involved in research on network level resource management (reservation or scheduling algorithms), we expect to test and integrate results from this work <ref> [11, 39, 41] </ref>. -14 9. Conclusion During its tenure as a prototype interface to the ISI/BBN multimedia conferencing system, MMCC has provided conference orchestration, local and remote media control, and coordination with groupware applications.
Reference: [12] <author> Cohen, D., </author> <title> "Specifications for the Network Voice Protocol, </title> <type> Technical Report ISI/RR-75-39, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Mar 1976). </address>
Reference-contexts: 1. Introduction The Multimedia Conferencing project has focused on networking requirements for real-time teleconferencing. Toward this end, Information Sciences Institute (ISI) and Bolt, Beranek and Newman (BBN) have designed and implemented a suite of experimental packet protocols that operate at a number of levels in the protocol stack <ref> [39, 12, 13, 30] </ref>. As proof of concept, we have developed an experimental packet teleconferencing system [6] that allows geographically separated individuals to collaborate by combining real-time packet-switched audio and video with shared computer workspaces, sometimes called groupware. <p> On arrival, the combined data stream is processed by the receiving video agent as usual, then forwarded to and unbundled by the video codec. -7 The agents provide two data paths for the real-time media. One approach uses the Network Voice Protocol (NVP) <ref> [12] </ref> and the Packet Video Protocol (PVP) [13] to packetize the audio and video data respectively. Data is then encapsulated in the STream protocol (ST) [39], an experimental internetwork protocol which provides performance guarantees to real-time data through use of resource reservation and multicast communication.
Reference: [13] <author> Cole, R., </author> <title> "PVP - A Packet Video Protocol", Internal Document, </title> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Jul 1981). </address>
Reference-contexts: 1. Introduction The Multimedia Conferencing project has focused on networking requirements for real-time teleconferencing. Toward this end, Information Sciences Institute (ISI) and Bolt, Beranek and Newman (BBN) have designed and implemented a suite of experimental packet protocols that operate at a number of levels in the protocol stack <ref> [39, 12, 13, 30] </ref>. As proof of concept, we have developed an experimental packet teleconferencing system [6] that allows geographically separated individuals to collaborate by combining real-time packet-switched audio and video with shared computer workspaces, sometimes called groupware. <p> One approach uses the Network Voice Protocol (NVP) [12] and the Packet Video Protocol (PVP) <ref> [13] </ref> to packetize the audio and video data respectively. Data is then encapsulated in the STream protocol (ST) [39], an experimental internetwork protocol which provides performance guarantees to real-time data through use of resource reservation and multicast communication.
Reference: [14] <author> Crowley, T., Milazzo, P., Baker, E., Forsdick, H., Tomlinson, R., "MMConf: </author> <title> An Infrastructure for Building Shared Multimedia Applications", </title> <booktitle> Proceedings of the Conference on Computer Supported Cooperative Work, CSCW '90, </booktitle> <address> Los Angeles, CA (Oct 90). </address>
Reference-contexts: Audio Codec SPARCstation Video Agent (Packetizer) Audio Agent (Packetizer) DARTnet, DSInet, MBONE ST-II or IP Multicast Router Echo Canceller Ethernet Video Codec RGB NTSC MMCC & Groupware 6. Groupware Agents MMCC interacts with the BBN MMConf program <ref> [14] </ref> to support a suite of shared applications, including shared documents, shared presentation tools, and shared video map browsers. Upon request, MMCC automatically establishes and disconnects an MMConf session in parallel with voice and video connections, bringing up MMConf in a designated conference directory. <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [15] <author> Deering, S., </author> <title> "Host Extensions for IP Multicasting", </title> <note> RFC 1054 (May 1988). </note>
Reference-contexts: During setup for a sizable conference, sequential communication with each participant would become too time-consuming. Therefore for scalability, experimentation with the use of pipelining for group transactions, as well as IP multicast <ref> [15] </ref>, are underway. 3.1.3 Operating Environment Variability: Support for WAN use and heterogeneity An appropriate timeout length is difficult to predict over as varied and dynamic a community of networks and end systems as in the Internet. Therefore transaction timeouts are managed and dynamically adjusted on a site-by-site basis. <p> Data is then encapsulated in the STream protocol (ST) [39], an experimental internetwork protocol which provides performance guarantees to real-time data through use of resource reservation and multicast communication. The alternate data path utilizes UDP in combination with Multicast IP <ref> [15] </ref> in both agents. With either approach, the data is ultimately routed across the DARTnet or DSInet testbeds, or the Multicast Backbone (MBONE), a virtual IP multicast backbone network spanning major portions of the Internet.
Reference: [16] <author> DeSchon, A., Braden, R., </author> <title> "Background File Transfer Program BFTP", </title> <type> RFC 1068, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Aug 1988). </address>
Reference-contexts: Upon request, MMCC automatically establishes and disconnects an MMConf session in parallel with voice and video connections, bringing up MMConf in a designated conference directory. In addition, MMCC interacts with Mbftptool, a window-based application to run multiple background FTPs among conference participants <ref> [16] </ref>. Mbftptool may be used both before and during conferences to pre-stage transfers of files intended to be shared. MMCC allows a user to assign a conference alias to loosely couple with these conferencing tools.
Reference: [17] <author> Escobar, J., Deutsch, D., Partridge, C., </author> <title> "Flow Synchronization Protocol", BBN Systems and Technologies Division, </title> <booktitle> IEEE Global Communications Conference, </booktitle> <month> pp.1381-1387 (Dec </month> <year> 1992). </year>
Reference-contexts: However, there are undoubtedly other scenarios which will require more accurate synchronization. We are currently involved in the evaluation of BBN's Synchronization Protocol <ref> [17] </ref> support for A/V lip-synch and for synchronized audio streams in distributed music performance. 7.4 Monitoring and Error Reporting MMCC is the uppermost layer in a series of layers of interface to the conferencing system; it relies on numerous hardware and software modules. <p> With media-specific details relegated to underlying media agents, functional commonality is distilled in the connection manager. The connection manager provides general mechanisms for session-related tasks (connect, invite, join, disconnect, merge, side-conference, etc.) and brokers shared information across agents (participant lists, admission policies, timing information for inter-media synchronization <ref> [17] </ref>, etc.). We refer to this layered organization as the connection management architecture, since management of connections is the primary focus of the model.
Reference: [18] <author> Garcia-Luna-Aceves, J.J., Craighill, E.J., Lang, R., </author> <title> "An Open-Systems Model for Computer-Supported Collaboration", </title> <booktitle> Proceedings 2nd IEEE Conference on Workstations (Mar 1988). </booktitle>
Reference-contexts: Our current teleconferencing system is the forerunner to this architecture, but we have also drawn ideas from other connection management schemes <ref> [2, 18, 22, 24, 40] </ref>. While these schemes are diverse, each has suggested the need for a connection management abstraction. User Interface Participants: Eve, Steve, and Joe Audio: high qual Video: adequate qual Speed: moderate Cost: moderate ... <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [19] <author> Jacobson, V., </author> <title> "Congestion Avoidance and Control", </title> <booktitle> Proceedings ACM SIGCOMM '88 (Aug 1988). </booktitle>
Reference-contexts: Therefore transaction timeouts are managed and dynamically adjusted on a site-by-site basis. These values are regularly updated, as is done for TCP <ref> [4, 19, 20] </ref>, to reflect the expected roundtrip time (RTT) for a message between two MMCCs. RTT is useful not only for request-reply timeout approximations, but also for media synchronization.
Reference: [20] <author> Karn, P., Partridge, C., </author> <title> "Round Trip Time Estimation", </title> <booktitle> Proceedings ACM SIGCOMM '87 (Aug 1987). </booktitle>
Reference-contexts: Therefore transaction timeouts are managed and dynamically adjusted on a site-by-site basis. These values are regularly updated, as is done for TCP <ref> [4, 19, 20] </ref>, to reflect the expected roundtrip time (RTT) for a message between two MMCCs. RTT is useful not only for request-reply timeout approximations, but also for media synchronization.
Reference: [21] <author> Lauwers, J.C., Lantz, K.A., </author> <title> "Collaboration Awareness in Support of Collaboration Transparency: Requirements for the Next Generation of Shared Window Systems", </title> <booktitle> Proceedings CHI '90 Conference on Human Factors in Computer Systems (1990). </booktitle>
Reference-contexts: This is related to Swinehart's switching kernel [37] and Lantz' and Lauwers' models for GUIs that endow programs with the ability to be multi-user <ref> [21] </ref>. The connection manager, like MMCC, is loosely coupled with media agents that implement the media processing and data communication functions. Each type of media agent interacts with devices (or servers controlling devices) in its media category. <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [22] <author> Leung, W.H., Baumgartner, T.J., Hwang, Y.H., Morgan, M.J., Tu, </author> <title> S.C., "A Software Architecture for Workstations Supporting Multimedia Conferencing in Packet Switching Networks", </title> <journal> IEEE Journal on Selected Areas in Communications, Vol.8, </journal> <volume> No.3, </volume> <month> pp.380-390 (Apr </month> <year> 1990). </year>
Reference-contexts: Our current teleconferencing system is the forerunner to this architecture, but we have also drawn ideas from other connection management schemes <ref> [2, 18, 22, 24, 40] </ref>. While these schemes are diverse, each has suggested the need for a connection management abstraction. User Interface Participants: Eve, Steve, and Joe Audio: high qual Video: adequate qual Speed: moderate Cost: moderate ... <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [23] <author> Mills, </author> <title> D.L., "Network Time Protocol (version 2) specification and implementation", </title> <type> RFC 1119, </type> <institution> University of Delaware (Sept 1989). </institution>
Reference-contexts: Within a multi-conference framework, a conference identifier is used by CCP to distinguish requests for one conference from those of another conference. Assigned on a per conference basis, the identifier consists of the initiator's login id, the initiator's internetwork address and an NTP timestamp <ref> [23] </ref>. However, without the luxury of a -5 directory service, MMCC cannot use this identifier to detect and resolve connection collisions. Instead, MMCC considers conferences identical when the participant list and requested configuration (underlying agents, media encodings and data rates) are the same.
Reference: [24] <author> Nicolaou, C., </author> <title> "An Architecture for Real-Time Multimedia Communications Systems", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> Vol.8.No.3, </volume> <month> pp.391-400 (Apr </month> <year> 1990). </year>
Reference-contexts: Our current teleconferencing system is the forerunner to this architecture, but we have also drawn ideas from other connection management schemes <ref> [2, 18, 22, 24, 40] </ref>. While these schemes are diverse, each has suggested the need for a connection management abstraction. User Interface Participants: Eve, Steve, and Joe Audio: high qual Video: adequate qual Speed: moderate Cost: moderate ... <p> In those instances where capabilities at end systems mismatch entirely, i.e., no compromise configuration can be found, a resource synthesizer will synthesize solutions to configuration requests <ref> [24] </ref>. As depicted in Figure 8, the resource synthesizer must find a sequence of communication mechanisms and intermediate translators to construct paths among all the end systems in the connection.
Reference: [25] <author> Partridge, C., </author> <title> "A Proposed Flow Specification", </title> <note> RFC 1363 (Sept 1992). </note>
Reference-contexts: call, or the ISI audio agent might be replaced by the LBL vat tool or UMass' nevot application [34]. -11 Effectively, the connection manager conveys high-level configuration descriptions from users and peer connection managers into more detailed descriptions for media agents, which in turn translate them into real-time flow specifications <ref> [25] </ref> for underlying networks. In the simplified example in Figure 6, an application asks the connection manager for high quality audio and adequate quality video over moderate speed links for moderate cost.
Reference: [26] <author> Postel, J., </author> <title> "User Datagram Protocol", </title> <type> RFC 768, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Aug 1980). </address>
Reference-contexts: This messaging service is transaction-oriented, in that communication between sender and receiver is of a request-reply nature. For optimal N-way performance, connectionless UDP transport was favored over TCP <ref> [26, 27] </ref>. Each site only needs one UDP socket with which all other sites can interact, whereas the comparable TCP implementation would require N sockets per site, or N 2 sockets total [36]. Furthermore, UDP's connectionless service is ideal for MMCC operation.
Reference: [27] <author> Postel, J., </author> <title> "Transport Control Protocol", </title> <type> RFC 793, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Sept 1981). -16 </address>
Reference-contexts: This messaging service is transaction-oriented, in that communication between sender and receiver is of a request-reply nature. For optimal N-way performance, connectionless UDP transport was favored over TCP <ref> [26, 27] </ref>. Each site only needs one UDP socket with which all other sites can interact, whereas the comparable TCP implementation would require N sockets per site, or N 2 sockets total [36]. Furthermore, UDP's connectionless service is ideal for MMCC operation.
Reference: [28] <author> Root, R.W., </author> <title> "Design of a Multi-Media Vehicle for Social Browsing", </title> <booktitle> Proceedings Conference on Computer-Supported Cooperative Work, </booktitle> <address> Portland, OR, </address> <month> pp.25-38 (Sept </month> <year> 1988). </year>
Reference-contexts: This section coalesces these themes into an improved conference architecture for use in the general Internet.. 8.1 Personal Conferencing: Inter-office Telecollaboration To complement formal meeting facilities, MMCC needs to support highly informal, impromptu conferences where individuals rendezvous as desired <ref> [28] </ref>. Therefore, the project is moving away from inter-meeting-room conferences and toward personal conferencing in the form of inter-office collaborations. Although office-to-office conferencing may arise on a more frequent basis, there is still a role for meeting-room-to-meeting-room conferences, for example when many people need to conference simultaneously.
Reference: [29] <author> Schooler, </author> <title> E.M., "The Impact of Scaling on a Multimedia Connection Architecture", submitted for publication; an earlier version appeared in the Proceedings of th Third International Workshop on Network and Operating System Support for Digital Audio and Video, </title> <address> San Diego, CA (Nov 1992). </address>
Reference-contexts: local media agents to establish real-time transport sessions [33]. 8.3 Conference Session Management: Scalable CCP Most experimentation with packet teleconferencing systems has been conducted within LAN settings, with few users and with a modest degree of support for concurrent conferences (i.e., the bandwidth to handle many different conferences at once) <ref> [29] </ref>. Even systems that scale in one dimension, typically have architectural deficiencies in the other dimensions. <p> Again, the component in the architecture to assist with this capability is the resource synthesizer. A more complete description of how bandwidth reduction mechanisms fit into our proposed connection architecture may be found in <ref> [29] </ref>. 8.4.4 Protocol Experimentation The IETF audiocasts and videocasts have shown that there is a very real demand for Internet teleconferencing [5]. Packet audio and video have been multicast to nearly 200 hosts spanning 10 countries, and for upcoming meetings remote participation is likely to increase. <p> situation: a Remote Conferencing Architecture effort has emerged [7]; experience with the NVP and PVP protocols have contributed to the design and implementation of a Real-time Transport Protocol (RTP) [33] within the Audio/Video Transport Working Group: the formation of a Conference Control effort is underway to address scalable session management <ref> [29] </ref> and to tie in with RTP requirements; the MBONE, a virtual IP multicast backbone network spanning major portions of the Internet, has been established to support experimentation with widescale conferencing.
Reference: [30] <author> Schooler, </author> <title> E.M., "The Connection Control Protocol: Specification", </title> <type> Version 1.0, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Jan 1992). </address>
Reference-contexts: 1. Introduction The Multimedia Conferencing project has focused on networking requirements for real-time teleconferencing. Toward this end, Information Sciences Institute (ISI) and Bolt, Beranek and Newman (BBN) have designed and implemented a suite of experimental packet protocols that operate at a number of levels in the protocol stack <ref> [39, 12, 13, 30] </ref>. As proof of concept, we have developed an experimental packet teleconferencing system [6] that allows geographically separated individuals to collaborate by combining real-time packet-switched audio and video with shared computer workspaces, sometimes called groupware. <p> Connection Control Protocol The Connection Control Protocol is the session layer protocol used by MMCCs to communicate control information among themselves <ref> [30, 31] </ref>. Peer MMCCs reside on machines scattered throughout the network, either across a local area network or over a larger geographic distance, such as the Internet. Each MMCC is associated with a given user, at a given workstation and well-known port. <p> Acknowledgment Many thanks to the reviewers and to Steve Casner, Deborah Estrin, Bob Felderman, Jon Postel and Joe Touch for their extensive comments on earlier drafts of this paper. Ideas on an overall Internet teleconferencing architecture stem from critiques of <ref> [30, 31] </ref> by numerous colleagues and discussions held within the IETF Audio/Video Transport working group, and the RemConf Architecture and Conference Control BOFs. This research was sponsored by the Defense Advanced Research Projects Agency under Fort Huachuca Contract Number DABT63-91-C-0001.
Reference: [31] <author> Schooler, </author> <title> E.M., "An Architecture for Multimedia Connection Management", </title> <booktitle> Proceedings 4th International Workshop on Multimedia Communications, </booktitle> <address> Monterey, </address> <note> CA (Apr 1992); also available as technical report ISI/RS-92-294, </note> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Jan 1992). </address>
Reference-contexts: Connection Control Protocol The Connection Control Protocol is the session layer protocol used by MMCCs to communicate control information among themselves <ref> [30, 31] </ref>. Peer MMCCs reside on machines scattered throughout the network, either across a local area network or over a larger geographic distance, such as the Internet. Each MMCC is associated with a given user, at a given workstation and well-known port. <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable. <p> Acknowledgment Many thanks to the reviewers and to Steve Casner, Deborah Estrin, Bob Felderman, Jon Postel and Joe Touch for their extensive comments on earlier drafts of this paper. Ideas on an overall Internet teleconferencing architecture stem from critiques of <ref> [30, 31] </ref> by numerous colleagues and discussions held within the IETF Audio/Video Transport working group, and the RemConf Architecture and Conference Control BOFs. This research was sponsored by the Defense Advanced Research Projects Agency under Fort Huachuca Contract Number DABT63-91-C-0001.
Reference: [32] <author> Schooler, </author> <title> E.M., "A Distributed Architecture for Multimedia Conference Control", </title> <type> Technical Report ISI/RS-91-289, </type> <institution> USC/Information Sciences Institute, Marina del Rey, </institution> <address> CA (Nov 1991). </address>
Reference-contexts: Finally, we discuss MMCC's influence on our current research in multimedia connection management and on our ideas for a scalable Internet teleconferencing architecture. 2. Software Architecture Overview MMCC provides coordinated management of separate services, such as audio, video, and groupware <ref> [32] </ref>. MMCC runs continuously as part of one's workstation environment and plays three basic roles. <p> This is an important advantage because in our experience dedicated TCP connections, with built-in reliable transport, do not survive the long duration (hours) of a session due to intermittent Internet network outages <ref> [32] </ref>. MMCC is as likely to perform a group transaction as it is a point-to-point one. Therefore, CCP has a group interface to the transaction service, where a list of participants are sent the same message simultaneously from CCP's perspective. The system currently relies on sequential interaction to emulate multicast.
Reference: [33] <author> Schulzrinne, H., </author> <title> "Issues in Designing a Transport Protocol fro Audio and Video Conferences and other Multiparticipant Real-Time Applications", IETF Audio-Video Transport Working Group, </title> <note> Working Draft (Dec 1992). </note>
Reference-contexts: Once notified, the media agents reserve any devices upon which they rely (cameras, codecs, etc.). The initiator's connection manager then negotiates with the other participants' connection managers. Finally, each connection manager instructs its local media agents to establish real-time transport sessions <ref> [33] </ref>. 8.3 Conference Session Management: Scalable CCP Most experimentation with packet teleconferencing systems has been conducted within LAN settings, with few users and with a modest degree of support for concurrent conferences (i.e., the bandwidth to handle many different conferences at once) [29]. <p> The complication is that there are a fixed number of multicast addresses. Because most telecollaborations will be transient, address assignment and re-assignment will be highly dynamic. A global scheme is required to avoid unwanted address collisions and to promote reasonable address space sharing. A plan is presented in <ref> [33] </ref> to partition addresses among a hierarchy of multicast address servers; addresses are borrowed from other servers of equal stature in the hierarchy, and servers re-use addresses by exploiting locality. While multicasting reduces bandwidth usage by senders, mechanisms are also needed for reductions at receivers. <p> Within the IETF, several activities in which ISI is heavily involved are aiming to remedy this situation: a Remote Conferencing Architecture effort has emerged [7]; experience with the NVP and PVP protocols have contributed to the design and implementation of a Real-time Transport Protocol (RTP) <ref> [33] </ref> within the Audio/Video Transport Working Group: the formation of a Conference Control effort is underway to address scalable session management [29] and to tie in with RTP requirements; the MBONE, a virtual IP multicast backbone network spanning major portions of the Internet, has been established to support experimentation with widescale
Reference: [34] <author> Schulzrinne, H., </author> <title> ""Voice Communication Across the Internet: A Network Voice Terminal", </title> <institution> Department of Electrical and Computer Engineering, Department of Computer Science, University of Massachusetts, </institution> <address> Amherst, MA (July 1992). </address>
Reference-contexts: For instance, agents managing the same media type might be swapped for each other, e.g., an agent that dialed a telephone might substitute for one that placed a packet audio call, or the ISI audio agent might be replaced by the LBL vat tool or UMass' nevot application <ref> [34] </ref>. -11 Effectively, the connection manager conveys high-level configuration descriptions from users and peer connection managers into more detailed descriptions for media agents, which in turn translate them into real-time flow specifications [25] for underlying networks.
Reference: [35] <author> Sun Microsystems, Inc., </author> <title> "Remote Procedure Call: Protocol Specification", </title> <type> RFC 1057, </type> <institution> Sun Microsystems, Inc., Mountain View, </institution> <address> CA. </address>
Reference-contexts: While several were considered, no one service met all our criteria. The Sun RPC implementation is indeed a request-reply protocol, and through some lower level (and not necessarily portable) system calls allows flexible timeouts, supports multiple outstanding requests, and enforces at-most once execution <ref> [35] </ref>. Yet, the model is rigidly client-server, where conference management is peer-to-peer, and while this too is surmountable, there is the issue that a multicast group interface is missing from the Sun RPC specification [38]. <p> To coordinate multimedia resources, each MMCC relies on several configuration servers that are accessed using Sun RPC <ref> [35] </ref>, although not all servers are required for MMCC to function. The servers communicate with and control various local hardware devices over RS232 serial lines.
Reference: [36] <author> Sun Microsystems, </author> <title> "A Socket-based Interprocess Communications Tutorial", Network Programming Document, Sun Microsystems, </title> <publisher> Inc., </publisher> <address> Mountain View, CA (Jun 1988). </address>
Reference-contexts: For optimal N-way performance, connectionless UDP transport was favored over TCP [26, 27]. Each site only needs one UDP socket with which all other sites can interact, whereas the comparable TCP implementation would require N sockets per site, or N 2 sockets total <ref> [36] </ref>. Furthermore, UDP's connectionless service is ideal for MMCC operation.
Reference: [37] <author> Swinehart, D., </author> <title> "The Connection Architecture for the Etherphone System", </title> <institution> Xerox PARC, </institution> <address> Palo Alto, CA (Dec 1990). </address>
Reference-contexts: This capability has not been implemented in our system, although the CCP specification includes this support. In addition, ideas such as call forwarding and visiting, which have been successful in LAN settings <ref> [37] </ref>, need to be explored as useful tools in wider area environments. 8.2 A Connection Management Architecture Perhaps the most important conclusion drawn from our experience with conference control is the need for a connection manager abstraction. <p> By separating the connection manager from the user interface, conference-oriented tools avoid duplication of effort; this encompasses management of -10 participation and authentication, and offers the likelihood for the coordination of user interfaces displaying shared information. This is related to Swinehart's switching kernel <ref> [37] </ref> and Lantz' and Lauwers' models for GUIs that endow programs with the ability to be multi-user [21]. The connection manager, like MMCC, is loosely coupled with media agents that implement the media processing and data communication functions. <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [38] <author> Tanenbaum, A.S., Van Renesse, R., </author> <title> "A Critique of the Remote Procedure Call Paradigm", </title> <booktitle> Proceedings of the European Technical Community: Research into Networks and Distributed Applications, </booktitle> <volume> EUTECO '88, </volume> <editor> R. Speth, Ed., </editor> <publisher> North-Holland (Apr 1988). </publisher>
Reference-contexts: Yet, the model is rigidly client-server, where conference management is peer-to-peer, and while this too is surmountable, there is the issue that a multicast group interface is missing from the Sun RPC specification <ref> [38] </ref>.
Reference: [39] <author> Topolcic, C., </author> <title> "Experimental Internet Stream Protocol", </title> <type> RFC 1190, </type> <institution> IETF CIP Working Group (Oct 1991). </institution>
Reference-contexts: 1. Introduction The Multimedia Conferencing project has focused on networking requirements for real-time teleconferencing. Toward this end, Information Sciences Institute (ISI) and Bolt, Beranek and Newman (BBN) have designed and implemented a suite of experimental packet protocols that operate at a number of levels in the protocol stack <ref> [39, 12, 13, 30] </ref>. As proof of concept, we have developed an experimental packet teleconferencing system [6] that allows geographically separated individuals to collaborate by combining real-time packet-switched audio and video with shared computer workspaces, sometimes called groupware. <p> One approach uses the Network Voice Protocol (NVP) [12] and the Packet Video Protocol (PVP) [13] to packetize the audio and video data respectively. Data is then encapsulated in the STream protocol (ST) <ref> [39] </ref>, an experimental internetwork protocol which provides performance guarantees to real-time data through use of resource reservation and multicast communication. The alternate data path utilizes UDP in combination with Multicast IP [15] in both agents. <p> Although not directly involved in research on network level resource management (reservation or scheduling algorithms), we expect to test and integrate results from this work <ref> [11, 39, 41] </ref>. -14 9. Conclusion During its tenure as a prototype interface to the ISI/BBN multimedia conferencing system, MMCC has provided conference orchestration, local and remote media control, and coordination with groupware applications.
Reference: [40] <author> Vin, H.M., Swinehart, D.C., Zellweger, P.T., Rangan, V., </author> <title> "Multimedia Conferencing in the Etherphone Environment", </title> <publisher> IEEE Computer, </publisher> <address> Vol.24, No.10, </address> <month> pp.69-79 (Oct </month> <year> 1991). </year>
Reference-contexts: Our current teleconferencing system is the forerunner to this architecture, but we have also drawn ideas from other connection management schemes <ref> [2, 18, 22, 24, 40] </ref>. While these schemes are diverse, each has suggested the need for a connection management abstraction. User Interface Participants: Eve, Steve, and Joe Audio: high qual Video: adequate qual Speed: moderate Cost: moderate ... <p> Assessment of the problem space reveals that, among other needs, a scalable teleconferencing architecture requires a range of session control schemes. A variety of researchers have explored frameworks for well-contained conferences <ref> [1, 2, 7, 8, 14, 18, 21, 22, 31, 37, 40] </ref>. In this tightly-controlled model, complete session information is actively shared among and consistently maintained by all conference participants. Participants receive appraisal of who else is involved, acknowledgment that conference state information is current and that communication is reliable.
Reference: [41] <author> Zhang, L., Shenker, S., Deering, S., Estrin, D., Zappala, D, "RSVP: </author> <title> Resource ReSerVation Protocol", </title> <note> Xerox PARC and USC,, Paper in preparation. -17 </note>
Reference-contexts: Although not directly involved in research on network level resource management (reservation or scheduling algorithms), we expect to test and integrate results from this work <ref> [11, 39, 41] </ref>. -14 9. Conclusion During its tenure as a prototype interface to the ISI/BBN multimedia conferencing system, MMCC has provided conference orchestration, local and remote media control, and coordination with groupware applications.
References-found: 41

