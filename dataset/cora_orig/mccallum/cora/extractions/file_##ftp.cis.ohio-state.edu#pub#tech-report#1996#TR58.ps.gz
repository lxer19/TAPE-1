URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1996/TR58.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: email: (mostafa,singhal)@cis.ohio-state.edu  
Phone: Phone: 614-292-5839 Fax: 614-292-2991  
Title: Analysis of Hierarchical Reliable Multicast Transport Protocols for Dissemination and Collaborative Communications  
Author: Walid Mostafa Mukesh Singhal 
Address: Columbus, OH 43210  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: Sender-initiated reliable multicast protocols rely on positive acknowledgements (ACKs) that lead to an ACK implosion as the number of receivers increases. Receiver-initiated protocols rely on negative acknowledgements (NAKs) that result in longer delays to detect missing packets by a receiver. Hierarchical approaches realize scalable communication by distributing error control functions (e.g., packet loss detection and retransmission) among a hierarchy of nodes. In this report we derive analytical expressions for the throughput of different node types in hierarchical multicast control trees and analyze their sensitivity to configuration parameters. We also derive expressions for the maximum throughput of collaborative multicast communication among R nodes where each node is actively involved in sending and receiving data. We show that protocol variations that improve the throughput of 1xR dissemination communications can degrade the throughput of RxR collaborative communications. Keywords: Hierarchical Reliable Multicast, Transport Protocols, Restricted Multicast, Collaborative Communication, and Dissemination. 
Abstract-found: 1
Intro-found: 1
Reference: [Che92] <author> D. Cheriton. </author> <title> Dissemination-oriented communication systems. </title> <institution> DSG Working Pa per, </institution> <year> 1992. </year>
Reference-contexts: Reliable group communication in multicast applications uses either dissemination or collaboration schemes. Dissemination is a 1xR communication scheme where a single sender multicasts data to a group of R receivers <ref> [Che92] </ref>. Collaboration is a RxR communication 1 scheme where each node is actively involved in multicasting data to and receiving data from all other nodes [MS97]. It may be realized using R independent 1x (R 1) dissemination connections or using session layer multiplexing into transport packets [MS96].
Reference: [CM84] <author> J. Chang and N. F. Maxemchuk. </author> <title> Reliable broadcast protocols. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(3) </volume> <pages> 251-273, </pages> <month> August </month> <year> 1984. </year>
Reference-contexts: Other applications require reliable receipt of all data even if it means longer response time (e.g., software and multimedia distribution [Don95], file transfer, and distributed shared whiteboard [McC92]). Reliable multicast transport protocols use sender-initiated, receiver-initiated, or hierarchical approaches to flow and error control. Sender-initiated protocols <ref> [CM84] </ref> require a sender to maintain and process state information for each receiver and suffer from ACK implosion as the number of receivers increases. Receiver-initiated protocols [HSC95] rely on receivers to detect and request retransmission of missing packets.
Reference: [Don95] <author> J. </author> <title> Donnelley. "WWW Media Distribution via Hopwise Reliable Multicast". </title> <booktitle> In Third International WWW Conference, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: Some applications are sensitive to response time but may tolerate data loss (e.g., video conferencing [Jac94]). Other applications require reliable receipt of all data even if it means longer response time (e.g., software and multimedia distribution <ref> [Don95] </ref>, file transfer, and distributed shared whiteboard [McC92]). Reliable multicast transport protocols use sender-initiated, receiver-initiated, or hierarchical approaches to flow and error control. Sender-initiated protocols [CM84] require a sender to maintain and process state information for each receiver and suffer from ACK implosion as the number of receivers increases.
Reference: [FJM + 95] <author> S. Floyd, V. Jacobson, S. McCanne, C. Liu, and L. Zhang. </author> <title> "A Reliable Multi cast Framework for Light-weight Sessions and Application Level Framing". </title> <booktitle> In Proceedings of ACM SIGCOMM '95. ACM, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Yavatkar et al. [YGS95] and Lin et al. [LP96] proposed a general multicast tree where domain managers or designated receivers, residing at the roots of subtrees, are responsible for servicing the nodes in their respective subtrees. Several variations are also available such as NAK suppression <ref> [FJM + 95] </ref>, using NAKs along the control tree [YGS95], and selective and periodic acknowledgements [LP96]. Reliable group communication in multicast applications uses either dissemination or collaboration schemes. Dissemination is a 1xR communication scheme where a single sender multicasts data to a group of R receivers [Che92]. <p> If the timer expires before receiving the retransmitted packet or before receiving another NAK for that packet, it sends a restricted-multicast NAK. This variation is used in <ref> [FJM + 95] </ref> and [YGS95]. 3 Throughput Analysis The maximum throughput of a 1xR connection is the minimum of the throughput of all nodes in the multicast group. The maximum throughput of a node is determined by the processing time it accrues to successfully process a multicast packet.
Reference: [HBC95] <author> M. Hofmann, T. Braun, and G. Carle. </author> <title> "Multicast Communication in Large Scale Networks". </title> <booktitle> In IEEE Workshop on the Architecture and Implementation of High Performance Communication Subsystems. IEEE, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Hierarchical multicast protocols realize scalable communication by distributing error control functions (e.g., packet loss detection and retransmission) among nodes. Hierarchical protocols arrange nodes into a tree-like configuration to consolidate acknowledgements and localize retransmissions at a subtree level. Paul et al. [PSK94] and Hoffman et al. <ref> [HBC95] </ref> proposed 2-level hierarchies where the nodes are partitioned into regions or local groups and a group controller interfacing to the sender. <p> A domain managers can either be a leaf or non-leaf one. A non-leaf domain manager resides at the root of a subtree and has up to K domain manager children. A leaf 1 Other names include designated receiver [LP96] and local group controller <ref> [HBC95] </ref> 3 domain manager resides at the leaf of the multicast control tree and has no children. Nodes in the domain of a domain manager are called domain receivers.
Reference: [HSC95] <author> H. Holbrook, S. Singhal, and D. Cheriton. </author> <title> "Log-Based Receiver-Reliable Mul ticast for Distributed Interactive Simulation". </title> <booktitle> In ACM SIGCOMM Conference. ACM, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Reliable multicast transport protocols use sender-initiated, receiver-initiated, or hierarchical approaches to flow and error control. Sender-initiated protocols [CM84] require a sender to maintain and process state information for each receiver and suffer from ACK implosion as the number of receivers increases. Receiver-initiated protocols <ref> [HSC95] </ref> rely on receivers to detect and request retransmission of missing packets. This implies that a sender must buffer transmitted packets long enough for retransmission in response to negative ac-knowledgements (NAKs). Hierarchical multicast protocols realize scalable communication by distributing error control functions (e.g., packet loss detection and retransmission) among nodes.
Reference: [Jac94] <author> Van Jacobson. </author> <title> "Multimedia Conferencing on the Internet". </title> <booktitle> In SICGOMM 1994 Tutorial Notes. ACM, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The continuous growth in applications that require communications among a group of nodes or processes has led to considerable interest in multicast communication. Some applications are sensitive to response time but may tolerate data loss (e.g., video conferencing <ref> [Jac94] </ref>). Other applications require reliable receipt of all data even if it means longer response time (e.g., software and multimedia distribution [Don95], file transfer, and distributed shared whiteboard [McC92]). Reliable multicast transport protocols use sender-initiated, receiver-initiated, or hierarchical approaches to flow and error control.
Reference: [LP96] <author> J. Lin and S. Paul. "RMTP: </author> <title> A Reliable Multicast Transport Protocol ". In INFOCOM `96 Conference. </title> <publisher> IEEE, </publisher> <month> March </month> <year> 1996. </year>
Reference-contexts: Paul et al. [PSK94] and Hoffman et al. [HBC95] proposed 2-level hierarchies where the nodes are partitioned into regions or local groups and a group controller interfacing to the sender. Yavatkar et al. [YGS95] and Lin et al. <ref> [LP96] </ref> proposed a general multicast tree where domain managers or designated receivers, residing at the roots of subtrees, are responsible for servicing the nodes in their respective subtrees. <p> Several variations are also available such as NAK suppression [FJM + 95], using NAKs along the control tree [YGS95], and selective and periodic acknowledgements <ref> [LP96] </ref>. Reliable group communication in multicast applications uses either dissemination or collaboration schemes. Dissemination is a 1xR communication scheme where a single sender multicasts data to a group of R receivers [Che92]. <p> A domain managers can either be a leaf or non-leaf one. A non-leaf domain manager resides at the root of a subtree and has up to K domain manager children. A leaf 1 Other names include designated receiver <ref> [LP96] </ref> and local group controller [HBC95] 3 domain manager resides at the leaf of the multicast control tree and has no children. Nodes in the domain of a domain manager are called domain receivers.
Reference: [McC92] <author> S. McCanne. </author> <title> "A Distributed Whiteboard for Network Conferencing". DSG Work ing Paper, </title> <year> 1992. </year>
Reference-contexts: Some applications are sensitive to response time but may tolerate data loss (e.g., video conferencing [Jac94]). Other applications require reliable receipt of all data even if it means longer response time (e.g., software and multimedia distribution [Don95], file transfer, and distributed shared whiteboard <ref> [McC92] </ref>). Reliable multicast transport protocols use sender-initiated, receiver-initiated, or hierarchical approaches to flow and error control. Sender-initiated protocols [CM84] require a sender to maintain and process state information for each receiver and suffer from ACK implosion as the number of receivers increases.
Reference: [MS96] <author> W. Mostafa and M. Singhal. </author> <title> A portable reliable multicast session protocol. </title> <journal> The IEEE Technical Committee on Operating Systems Bulletin, </journal> <volume> 8(2), </volume> <month> Aug </month> <year> 1996. </year>
Reference-contexts: Collaboration is a RxR communication 1 scheme where each node is actively involved in multicasting data to and receiving data from all other nodes [MS97]. It may be realized using R independent 1x (R 1) dissemination connections or using session layer multiplexing into transport packets <ref> [MS96] </ref>. Thus, a node serves as a sender in one connection, as a receiver in few other connections, and perhaps as a special node in the remaining ones. Pingali et al. [PTK94] showed that node processing is a potential bottleneck for mul-ticast communication.
Reference: [MS97] <author> W. Mostafa and M. Singhal. </author> <title> "Performance Analysis of a Reliable Multicast Ses sion Protocol for Collaborative Continuous-Feed Applications". </title> <booktitle> In Fifth Inter 23 national Symposium on Modeling, Analysis, </booktitle> <institution> and Simulation of Computer and Telecommunication Systems [MASCOTS], </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: Dissemination is a 1xR communication scheme where a single sender multicasts data to a group of R receivers [Che92]. Collaboration is a RxR communication 1 scheme where each node is actively involved in multicasting data to and receiving data from all other nodes <ref> [MS97] </ref>. It may be realized using R independent 1x (R 1) dissemination connections or using session layer multiplexing into transport packets [MS96]. Thus, a node serves as a sender in one connection, as a receiver in few other connections, and perhaps as a special node in the remaining ones.
Reference: [PSK94] <author> S. Paul, K. Sabnani, and D. Kristol. </author> <title> "Multicast Transport Protocols for High Speed Networks ". In Proceedings of International Conference on Network Protocols, </title> <month> October </month> <year> 1994. </year>
Reference-contexts: Hierarchical multicast protocols realize scalable communication by distributing error control functions (e.g., packet loss detection and retransmission) among nodes. Hierarchical protocols arrange nodes into a tree-like configuration to consolidate acknowledgements and localize retransmissions at a subtree level. Paul et al. <ref> [PSK94] </ref> and Hoffman et al. [HBC95] proposed 2-level hierarchies where the nodes are partitioned into regions or local groups and a group controller interfacing to the sender.
Reference: [PTK94] <author> S. Pingali, D. Towsley, and J.F. Kurose. </author> <title> "A Comparison of Sender-Initiated and Receiver-Initiated Reliable Multicast Protocols". </title> <booktitle> In SIGMETRICS '94 Conference. ACM, </booktitle> <month> May </month> <year> 1994. </year>
Reference-contexts: Thus, a node serves as a sender in one connection, as a receiver in few other connections, and perhaps as a special node in the remaining ones. Pingali et al. <ref> [PTK94] </ref> showed that node processing is a potential bottleneck for mul-ticast communication. They also showed that the throughput of both sender-initiated and receiver-initiated protocols is limited by the sender and that receiver-initiated protocols have higher throughput with respect to 1xR dissemination communication. <p> The maximum throughput of a node is determined by the processing time it accrues to successfully process a multicast packet. In this section, we derive processing time expressions for a sender, a non-leaf domain manager, a leaf domain manager, and a domain receiver. Pingali et al. <ref> [PTK94] </ref> derived the processing time and throughput expressions for a sender and a receiver for both sender-initiated and receiver-initiated protocols. In this report, we are interested in the maximum throughput for collaborative communication in addition to dissemination multicast. <p> We use assumptions similar to <ref> [PTK94] </ref> that processing requirements are generally distributed independent identically distributed random variables. Let random variables X and Y denote processing requirements of outgoing and incoming packets, respectively. A suffix corresponds to a particular task (e.g., a for ACK, n for NAK, etc.). We are interested in the mean processing requirements. <p> number of ACKs, E [L s ], that a sender expects to receive is E [L s ] = K (1 p)E [M s ]: (7) A sender with K domain manager children as described above is the same as the sender in a sender-initiated scheme that is analyzed in <ref> [PTK94] </ref>. <p> The maximum rate, fl s , at which a sender can successfully multicasts packets is fl s = 1=E [T s ]: (10) In the first protocol variation, P 1 , the sender and the K domain manager children resemble a receiver-initiated protocol of <ref> [PTK94] </ref>. The sender does not process ACKs or timeouts; rather it only receives NAKs from its children. <p> Therefore, we use the results from <ref> [PTK94] </ref> to compute the mean number of NAKs (L n ) and retransmissions (M n ). <p> In the first protocol variation, P 1 , a non-leaf domain manager acts as a receiver to its parent and as a sender to its K children similar to the receiver and to the sender of the receiver-initiated protocol of <ref> [PTK94] </ref>, respectively. Thus, it does not send an ACK to its parent; rather it sends a NAK and starts a timer if the packet is lost. <p> + E [M n ]E [X p ] + E [L n ]E [Y n ]: (22) In the second protocol variation, P 2 , a non-leaf domain manager acts as a sender to its domain receiver in the same way as the sender of protocol (N 2 ) of <ref> [PTK94] </ref>. The only difference in processing requirements is in the number of NAKs received from the domain children. <p> However, it incurs additional overhead of receiving its domain manager's retransmission to its children. Therefore, we use the receiver processing requirement result from <ref> [PTK94] </ref> and add the overhead as follows E [T n ] = E [X f ] + (1 p)E [M d ]E [Y p ] + (1 p)E [M n ]E [Y p ] The second term is the processing requirement to receive (1 p)E [M d ] retransmissions from the <p> Therfore, E [T 1 n ] = E [T l ]. In the second protocol variation, P 2 , a domain receiver acts the same was as the receiver in the receiver-initiated protocol, (N 2 ), of <ref> [PTK94] </ref>, as we described in Section 2. <p> We present numerical results in Section 4. The mean number of transmissions of a packet to successfully transmit it by a sender, E [M s ], is O (1 + p ln K=(1 p) <ref> [PTK94] </ref>. This becomes O (1) as p ! 0. The mean number of retransmissions by a non-leaf domain manager to its children, E [M d ], is O (p ln K=(1p) and it approaches 0 as p ! 0. <p> We also examine the throughput sensitivity of the base protocol to multicast-tree configuration parameters and number of nodes. We set all processing requirements to 1 similar to <ref> [PTK94] </ref> for ease of comparison. Base Protocol types vary with the number of domain manager children, K, for the base protocol when the number of nodes, R, is constant. Note that increasing the number of domain managers implies less domain receivers per domain manager (Equation (4)).
Reference: [YGS95] <author> R. Yavatkar, J. Griffioen, and M. Sudan. </author> <title> "A Reliable Dissemination Protocol for Interactive Collaborative Applications". </title> <booktitle> In ACM Multimedia Conference. ACM, 1995. </booktitle> <volume> 25 26 27 28 </volume>
Reference-contexts: Paul et al. [PSK94] and Hoffman et al. [HBC95] proposed 2-level hierarchies where the nodes are partitioned into regions or local groups and a group controller interfacing to the sender. Yavatkar et al. <ref> [YGS95] </ref> and Lin et al. [LP96] proposed a general multicast tree where domain managers or designated receivers, residing at the roots of subtrees, are responsible for servicing the nodes in their respective subtrees. <p> Several variations are also available such as NAK suppression [FJM + 95], using NAKs along the control tree <ref> [YGS95] </ref>, and selective and periodic acknowledgements [LP96]. Reliable group communication in multicast applications uses either dissemination or collaboration schemes. Dissemination is a 1xR communication scheme where a single sender multicasts data to a group of R receivers [Che92]. <p> Nodes are organized into a hierarchy of groups or domains. Each domain has a node, domain manager, 1 <ref> [YGS95] </ref>, that is responsible for error recovery and local retransmissions to other nodes in that domain. sender resides at the root of the control tree and has up to K children, all of them are domain managers. A domain managers can either be a leaf or non-leaf one. <p> Since there are no ACKs expected, domain managers do not use timers. This variation is used in <ref> [YGS95] </ref>. In the second variation, that we refer to as P 2 , domain receivers use restricted multicast NAKs with NAK suppression. This means if a domain receiver detects a lost packet, it sends a NAK to its domain using restricted multicast. <p> If the timer expires before receiving the retransmitted packet or before receiving another NAK for that packet, it sends a restricted-multicast NAK. This variation is used in [FJM + 95] and <ref> [YGS95] </ref>. 3 Throughput Analysis The maximum throughput of a 1xR connection is the minimum of the throughput of all nodes in the multicast group. The maximum throughput of a node is determined by the processing time it accrues to successfully process a multicast packet.
References-found: 14

