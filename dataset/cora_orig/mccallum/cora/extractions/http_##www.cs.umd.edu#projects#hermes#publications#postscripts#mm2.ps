URL: http://www.cs.umd.edu/projects/hermes/publications/postscripts/mm2.ps
Refering-URL: http://www.cs.umd.edu/projects/hermes/publications/abstracts/fmis.html
Root-URL: 
Email: E-mail: marcus@nego.umiacs.umd.edu  E-mail: vs@cs.umd.edu  
Title: Foundations of Multimedia Information Systems  
Author: Sherry Marcus V.S. Subrahmanian 
Note: Author for Correspondence: V.S. Subrahmanian. This research was supported by the Army Research Office under grant DAAL-03-92-G-0225, by the Air Force Office of Scientific Research under grant F49620-93-1-0065, by ARPA/Rome Labs contract Nr. F30602-93-C-0241 (Order Nr. A716), and by an NSF Young Investigator award IRI-93-57756.  
Address: MS 4133 Washington, DC 20505.  College Park Maryland 20742.  
Affiliation: Office of Research and Development  Institute for Advanced Computer Studies Institute for Systems Research Department of Computer Science University of Maryland  
Abstract: Though numerous multimedia systems exist in the commercial market today, relatively little work has been done on developing the mathematical foundations of multimedia technology. We attempt to take some initial steps towards the development of a theoretical basis for multimedia information system. To do so, we develop the notion of a structured multimedia database system. We begin by defining a mathematical model of a media-instance. A media-instance may be thought of as "glue" residing on top of a specific physical media-representation (such as video, audio, documents, etc.) Using this "glue", it is possible to define a general purpose logical query language to query multimedia data. This glue consists of a set of "states" (e.g. video frames, audio tracks, etc.) and "features", together with relationships between states and/or features. A structured multimedia database system imposes a certain mathematical structure on the set of features/states. Using this notion of a structure, we are able to define indexing structures for processing queries, methods to relax queries when answers do not exist to those queries, as well as sound, complete and terminating procedures to answer such queries (and their relaxations, when appropriate). We show how a media-presentation can be generated by processing a sequence of queries, and furthermore we show when these queries are extended to include constraints, then these queries can not only generate presentations, but also generate temporal synchronization properties and spatial layout properties for such presentations. We describe the architecture of a prototype multimedia database system based on the principles described in this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Adal and V.S. Subrahmanian. </author> <title> (1993) Amalgamating Knowledge Bases, III: </title> <journal> Distributed Mediators, </journal> <note> accepted for publication in: Intl. Journal of Intelligent Cooperative Information Systems. </note>
Reference-contexts: For instance, certain pictures of Clinton may be "better" than others. Our system has the capability of finding pictures of the desired quality. The current implementation is part of a much broader implementation effort to integrate multiple heterogeneous databases and multimedia databases <ref> [27, 28, 1, 21] </ref>. The overall systems architecture is shown in Figure 5. The end-user accesses a host of heterogeneous databases, data structures and multimedia databases using the mediator framework. Currently, our system can integrate the following types of data: * pictorial data, * video data, * text data (e.g. <p> The theoretical algorithms and definitions provided in this paper are not sterile an implementation based on this theory exists at the University of Maryland. This implementation is built on top of an already existing, successful theory <ref> [21, 27, 1] </ref> and implementation of mediators for integrating heterogeneous databases and data structures. That implementation has been successfully used for two large-scale real-world applications by organizations outside the University of Maryland [5, 15].
Reference: [2] <author> J.F. Allen. </author> <title> (1983) Maintaining Knowledge About Temporal Intervals, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 26, No. 11, </volume> <pages> pps 832-843. </pages>
Reference-contexts: In connection with spatio-temporal reasoning, we observe that there are numerous models of time, as well as numerous models of space. Iino et. al. use the well-known formu 46 lation of time due to Allen <ref> [2] </ref> to synchronize multimedia events. In contrast, by avoiding a commitment to any single model of time/temporal reasoning, and instead using generalized constraints in our query language, we are able, in principle, to express constraints over different models of time, and different models of space.
Reference: [3] <author> F. Arman, A. Hsu and M. Chiu. </author> <title> (1993) Image Processing on Compressed Data for Large Video Databases, </title> <booktitle> First ACM Intl. Conf. on Multimedia, </booktitle> <address> pps 267-272. </address>
Reference-contexts: Hence, one such media-instance we could integrate is the OVID system, though our framework is general enough to integrate many other media (which OVID cannot). In a similar vein, Arman et. al <ref> [3] </ref> develop techniques to create large video databases by processing incoming video-data so as to identify features and set up access structures. Cardenas, et. al. [9] have developed a query language called PICQUERY+ for querying certain kinds of federated multimedia systems.
Reference: [4] <author> C. Bell, A. Nerode, R. Ng and V.S. Subrahmanian. </author> <title> (1992) Mixed Integer Programming Methods for Computing Nonmonotonic Deductive Databases, </title> <note> accepted for publication in Journal of the ACM. </note>
Reference-contexts: Finally, we will generalize this to an abstract formalism ranging over different constraint domains <ref> [17, 18, 28, 21, 4] </ref>. 11.1 The Temporal Domain Suppose we have a query Q and suppose is an answer substitution to query Q.
Reference: [5] <author> J. Benton and V.S. Subrahmanian. </author> <title> (1993) Using Hybrid Knowledge Bases for Missile Siting Problems, </title> <booktitle> Proc. 1994 Conf. on Artificial Intelligence Applications, </booktitle> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: This implementation is built on top of an already existing, successful theory [21, 27, 1] and implementation of mediators for integrating heterogeneous databases and data structures. That implementation has been successfully used for two large-scale real-world applications by organizations outside the University of Maryland <ref> [5, 15] </ref>. Future work must focus on two issues: conjunctive query optimization in multimedia databases needs to be addressed in greater detail. It is critically needed in any realistic multimedia database system. Second, the issue of updates to multimedia database systems needs to be carefully addressed.
Reference: [6] <author> S. Berson, S. Ghandeharizadeh, R. Muntz and X. Ju. </author> <title> (1994) Staggered Striping in Multimedia Information Systems, </title> <booktitle> Proc. 1994 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> pps 79-90. </address> <month> 49 </month>
Reference-contexts: In fairness, Grosky's framework [12] can deal with integrating relational and pictorial information, though he does not address schema mismatches which have been addressed in our implementation of hybrid knowledge bases [21]. 13.2 Berson, et. al. Berson et. al. <ref> [6] </ref> study how to distribute multimedia objects (bodies of data) across a network, given that the multimedia objects occupy large bandwidths, while traditional disks have relatively small bandwidths. Our framework is complementary to theirs in the following way: in the definition of our field framerep in the type statenode (cf. <p> Figure 1), framerep points to the physical location of the multimedia data. This data itself could be further broken up into chunks as suggested by Berson et. al. <ref> [6] </ref>. This would facilitate effective bandwidth utilization of this data when communicating information across the network. 45 13.3 Gibbs et. al. Gibbs et. al. [10] study how stream-based temporal multimedia data may be modeled using object based methods. Our work is related to theirs upto a point, and then diverges.
Reference: [7] <author> H. Blair and V.S. Subrahmanian. </author> <title> Paraconsistent Logic Programming, </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 68, </volume> <pages> pp 135-154. </pages>
Reference-contexts: Any picture in which Bill Clinton appears with over 75% "goodness" is considered to satisfy that annotated atom feature ("Bill Clinton",Picture):0.75. When a feature atom is not annotated, then this implicitly represents an annotation of 1. There is a rich and well-understood theory of such annotations <ref> [7, 21, 19, 27] </ref> that the interested reader may pursue further if he so desires. In the above query, the system quickly comes back with the answer substitution Picture = 'INAU06.GIF'). It then asks the user whether s/he would like to see the picture.
Reference: [8] <author> A. Brink. </author> <title> (1994) M.S. </title> <type> Thesis, </type> <institution> George Mason Univ., </institution> <note> in preparation. </note>
Reference-contexts: A key feature of their work is that it is closely tied to an object-oriented implementation. In contrast, the query language defined in this paper can be implemented using the techniques described in this paper, or on a relational database management system (cf. Brink <ref> [8] </ref>) or on top of an object-oriented system. The important point is that our definition of an SMDS avoids any commitment to a single implementation paradigm.
Reference: [9] <author> A. F. Cardenas, I.T. Ieong, R. Barket, R. K. </author> <title> Taira and C.M. Breant. (1993) The Knowledge-Based Object-Oriented PICQUERY+ Language, </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 5, 4, </volume> <pages> pps 644-657. </pages>
Reference-contexts: In a similar vein, Arman et. al [3] develop techniques to create large video databases by processing incoming video-data so as to identify features and set up access structures. Cardenas, et. al. <ref> [9] </ref> have developed a query language called PICQUERY+ for querying certain kinds of federated multimedia systems. In contrast to their work, our notion of a media-instance is very general and captures, as special cases, many structures (e.g. documents, audio, etc.) that their framework does not appear to capture. <p> In contrast to their work, our notion of a media-instance is very general and captures, as special cases, many structures (e.g. documents, audio, etc.) that their framework does not appear to capture. Hence, our framework can integrate far more diverse structures than that of <ref> [9] </ref>. 14 Conclusions There is now intense interest in multimedia systems. These interests span across vast areas in computer science including, but not limited to: computer networks, databases, distributed computing, data compression, document processing, user interfaces, computer graphics, pattern recognition and artificial intelligence.
Reference: [10] <author> S. Gibbs, C. Breiteneder and D. Tsichritzis. </author> <title> (1994) Data Modeling of Time-Based Media, </title> <booktitle> Proc. 1994 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> pps 91-102. </address>
Reference-contexts: This data itself could be further broken up into chunks as suggested by Berson et. al. [6]. This would facilitate effective bandwidth utilization of this data when communicating information across the network. 45 13.3 Gibbs et. al. Gibbs et. al. <ref> [10] </ref> study how stream-based temporal multimedia data may be modeled using object based methods. Our work is related to theirs upto a point, and then diverges. <p> In contrast to Gibbs et. al.<ref> [10] </ref>, we do not study different types of time streams rather, we develop a query language for querying multimedia data and show how this query language can be used to generate media-presentations (or time-streams in the Gibbs et. al. [10] terminology) something Gibbs et. al. do not address. Our work and Gibbs et. al.'s work may come together in the following way: an end-user gives a media-specification (sequence of queries) to an SMDS which generates a media-presentation using the techniques described in this paper. <p> This media-presentation may then be viewed as a certain kind of timed-stream that may be delivered to the output devices using the techniques of Gibbs et. al. <ref> [10] </ref>. 13.4 Weiss et. al. Weiss et. al. [29] develop a set of operations that may be used to compose multiple aspects of multimedia presentations. They correctly point out that such operations form the "kernel" of basic operations needed in creating effective multimedia presentations.
Reference: [11] <author> Y. Gong, H. Zhang, H.C. Chuan and M. Sakauchi. </author> <title> (1994) An Image Database System with Content Capturing and Fast Image Indexing Abilities, </title> <booktitle> Proc. 1994 Intl. Conf. on Multimedia Computing and Systems, </booktitle> <address> pps 121-130, </address> <publisher> IEEE Press. </publisher>
Reference-contexts: This may require signal processing and/or statistical pattern recognition techniques which are beyond the scope of this paper, but which are studied in other papers (e.g. Niblack et. al. [23], Gong et. al. <ref> [11] </ref>, and Gupta et. al. [14]). The situation we are dealing with is one where the current media event is (s 1 ; : : : ; s n ), and the user wishes to obtain further details on one or more features of the current media-event. Query I.
Reference: [12] <author> W. Grosky. </author> <title> (1984) Toward a Data Model for Integrated Pictorial Databases, </title> <journal> Comp. Vision, Graphics, and Image Proc., </journal> <volume> 25, </volume> <pages> pps 371-382. </pages>
Reference-contexts: However, we are aware of no single theoretical framework for integrating multimedia data that "abstracts" away the essential features of diverse media and data representations, making it possible, in principle, to integrate multimedia data without knowing in advance, what the structure of this data might be. 13.1 Grosky Grosky's work <ref> [12, 13] </ref> is close, in spirit, to our work in many respects. Grosky [12] proposed a version of SQL that could be used to query pictorial databases using feature-based approaches. <p> Grosky <ref> [12] </ref> proposed a version of SQL that could be used to query pictorial databases using feature-based approaches. <p> In fairness, Grosky's framework <ref> [12] </ref> can deal with integrating relational and pictorial information, though he does not address schema mismatches which have been addressed in our implementation of hybrid knowledge bases [21]. 13.2 Berson, et. al.
Reference: [13] <author> W. Grosky. </author> <title> (1994) Multimedia Information Systems, </title> <journal> IEEE Multimedia, </journal> <volume> Vol. 1, 1, </volume> <pages> pps 12-24. </pages>
Reference-contexts: However, we are aware of no single theoretical framework for integrating multimedia data that "abstracts" away the essential features of diverse media and data representations, making it possible, in principle, to integrate multimedia data without knowing in advance, what the structure of this data might be. 13.1 Grosky Grosky's work <ref> [12, 13] </ref> is close, in spirit, to our work in many respects. Grosky [12] proposed a version of SQL that could be used to query pictorial databases using feature-based approaches. <p> Grosky [12] proposed a version of SQL that could be used to query pictorial databases using feature-based approaches. In <ref> [13] </ref>, he describes complex features intuitively, complex features have sub-features in connection with our work, given a feature f , the set of features "below" f (w.r.t. the notion of below-ness defined by the ordering on features) may be thought of as the sub-features associated with f .
Reference: [14] <author> A. Gupta, T. Weymouth and R. Jain. </author> <title> (1991) Semantic Queries with Pictures: The VIMSYS Model, </title> <booktitle> Proc. 1991 Intl. Conf. on Very Large Databases, </booktitle> <address> Barcelona, Spain, pps 69-79. </address>
Reference-contexts: This may require signal processing and/or statistical pattern recognition techniques which are beyond the scope of this paper, but which are studied in other papers (e.g. Niblack et. al. [23], Gong et. al. [11], and Gupta et. al. <ref> [14] </ref>). The situation we are dealing with is one where the current media event is (s 1 ; : : : ; s n ), and the user wishes to obtain further details on one or more features of the current media-event. Query I. <p> Last, but not least, the mathematical model presented in this paper is not sterile it has been implemented in a working system. 13.7 Gupta et. al. Gupta, Weymouth and Jain <ref> [14] </ref> have developed a model, called the VIMSYS model, for querying a pictorial database. VIMSYS is a hybrid of a functional model and an object oriented model. This model allows users to view image data in four different "planes" corresponding to different areas of interest. <p> For instance, our system can integrate image and pictorial data, news-wires, relational databases including different relational systems and possible schema 47 mismatches even within a system, spatial data structures (such as quadtrees) and numerical computations. Our work could benefit from the work of Jain et. al. <ref> [14] </ref> in the following way: their algorithms are highly optimized for the image domain. Thus for this domain, we could "hook" our mediator onto the system of Jain et. al., and access image databases through Jain et. al.'s program.
Reference: [15] <author> J. Horst, E. Kent, H. Rifky and V.S. Subrahmanian. </author> <title> (1994) Hybrid Knowledge Bases for Real-Time Robotic Reasoning, </title> <booktitle> Proc. IVth Intl. Workshop on Pattern Recognition in Practice (eds. </booktitle> <editor> E. Gelsema and L. Kanal), N. </editor> <publisher> Holland/Elsevier. </publisher>
Reference-contexts: This implementation is built on top of an already existing, successful theory [21, 27, 1] and implementation of mediators for integrating heterogeneous databases and data structures. That implementation has been successfully used for two large-scale real-world applications by organizations outside the University of Maryland <ref> [5, 15] </ref>. Future work must focus on two issues: conjunctive query optimization in multimedia databases needs to be addressed in greater detail. It is critically needed in any realistic multimedia database system. Second, the issue of updates to multimedia database systems needs to be carefully addressed.
Reference: [16] <author> M. Iino, Y.F. Day and A. Ghafoor. </author> <title> (1994) An Object-Oriented Model for Spatio-Temporal Synchronization of Multimedia Information, </title> <booktitle> Proc. 1994 Intl. Conf. on Multimedia Computing and Systems, </booktitle> <address> pps 110-120, </address> <publisher> IEEE Press. </publisher>
Reference-contexts: Appendix A contains, for each algebraic composition operation given by Weiss et. al., the multimedia specification in our language that generates this presentation. 13.5 Iino et. al. Iino et. al. <ref> [16] </ref> study methods for spatial and temporal reasoning in multimedia systems. They propose a very elegant Petri Net model for object composition. Their work is related to one aspect of our work, viz. the "constraint" part of constrained queries defined in Section 11. <p> Of course, we also provide numerous facilities not provided by Iino et. al. <ref> [16] </ref> such as query languages for multimedia data, indexing structures, formal soundness and completeness results, etc. 13.6 Woelk and Kim Woelk and Kim [32] have developed an object-oriented implementation of multimedia capabilities on top of the ORION object-oriented database system.
Reference: [17] <author> J. Jaffar and J.L. Lassez. </author> <booktitle> (1987) Constraint Logic Programming, Proc. ACM Principles of Programming Languages, </booktitle> <pages> pp 111-119. </pages>
Reference-contexts: For instance, in a simple audio-video multimedia system, a media presentation would consist of a sequence of audio-video clips. We extend this notion of generation of media presentations to handle constrained queries. 2 The idea of constraints in logic based languages was originally due to Jaffar and lassez <ref> [17] </ref>. Intuitively, constrained queries, contain, in addition to the logical constraints, certain extra constraints (over different possible domains). <p> Finally, we will generalize this to an abstract formalism ranging over different constraint domains <ref> [17, 18, 28, 21, 4] </ref>. 11.1 The Temporal Domain Suppose we have a query Q and suppose is an answer substitution to query Q.
Reference: [18] <author> J. Jaffar, S. Michaylov, P. Stuckey, and R. Yap. </author> <title> (1992) The CLP(&lt;) Language and System, </title> <journal> ACM Trans. on Programming Languages and Systems. </journal>
Reference-contexts: Finally, we will generalize this to an abstract formalism ranging over different constraint domains <ref> [17, 18, 28, 21, 4] </ref>. 11.1 The Temporal Domain Suppose we have a query Q and suppose is an answer substitution to query Q.
Reference: [19] <author> M. Kifer and V.S. Subrahmanian. </author> <title> (1992) Theory of Generalized Annotated Logic Programming and its Applications, </title> <journal> Journal of Logic Programming, </journal> <volume> 12, 4, </volume> <pages> pps 335-368. </pages>
Reference-contexts: Any picture in which Bill Clinton appears with over 75% "goodness" is considered to satisfy that annotated atom feature ("Bill Clinton",Picture):0.75. When a feature atom is not annotated, then this implicitly represents an annotation of 1. There is a rich and well-understood theory of such annotations <ref> [7, 21, 19, 27] </ref> that the interested reader may pursue further if he so desires. In the above query, the system quickly comes back with the answer substitution Picture = 'INAU06.GIF'). It then asks the user whether s/he would like to see the picture.
Reference: [20] <author> D. E. Knuth. </author> <title> (1968) The Art of Computer Programming, Vol. I: Fundamental Algorithms, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: As the query is ground, the answer is either yes or no. The algorithm below shows how such a query may be answered. It uses a function, SORTDOWN (t) which returns a list of features this list is obtained by topologically sorting <ref> [20] </ref> (in descending order) the partially ordered set (RPL (t); ). For now, we assume SORTDOWN (t) is nondeterministic in the sense that it will nondeterministically return some valid topologically sorted set of features in RPL (t).
Reference: [21] <author> J. Lu, A. Nerode, </author> <title> and V.S. Subrahmanian. (1992) Hybrid Knowledge Bases, </title> <journal> submitted to IEEE Trans. on Knowledge and Data Engineering, </journal> <month> March </month> <year> 1993, </year> <month> revised Jan. </month> <year> 1994. </year>
Reference-contexts: Finally, we will generalize this to an abstract formalism ranging over different constraint domains <ref> [17, 18, 28, 21, 4] </ref>. 11.1 The Temporal Domain Suppose we have a query Q and suppose is an answer substitution to query Q. <p> For instance, certain pictures of Clinton may be "better" than others. Our system has the capability of finding pictures of the desired quality. The current implementation is part of a much broader implementation effort to integrate multiple heterogeneous databases and multimedia databases <ref> [27, 28, 1, 21] </ref>. The overall systems architecture is shown in Figure 5. The end-user accesses a host of heterogeneous databases, data structures and multimedia databases using the mediator framework. Currently, our system can integrate the following types of data: * pictorial data, * video data, * text data (e.g. <p> Mediator: The concept of a mediator is due to Gio Wiederhold [30, 31]. Intuitively, a mediator is a program that integrates information from multiple databases and/or multiple data structures. Till recently, most mediators were implemented as very large C programs. In <ref> [27, 21] </ref>, we have proposed a uniform language to implement mediators. A mediator developer would specify a mediator for a specific application in this language. <p> These tools are interactive and assist the mediator author/developer in specifying the mediation rules/strategy. Mediator Compiler: In <ref> [27, 21] </ref>, we have shown how compilers for the mediator language may be implemented. The main advantage of such languages is that they access existing databases and software packages by using the functions and procedures defined already in those DBMSs, using a facility similar to the well-understood remote procedure call. <p> Any picture in which Bill Clinton appears with over 75% "goodness" is considered to satisfy that annotated atom feature ("Bill Clinton",Picture):0.75. When a feature atom is not annotated, then this implicitly represents an annotation of 1. There is a rich and well-understood theory of such annotations <ref> [7, 21, 19, 27] </ref> that the interested reader may pursue further if he so desires. In the above query, the system quickly comes back with the answer substitution Picture = 'INAU06.GIF'). It then asks the user whether s/he would like to see the picture. <p> In fairness, Grosky's framework [12] can deal with integrating relational and pictorial information, though he does not address schema mismatches which have been addressed in our implementation of hybrid knowledge bases <ref> [21] </ref>. 13.2 Berson, et. al. Berson et. al. [6] study how to distribute multimedia objects (bodies of data) across a network, given that the multimedia objects occupy large bandwidths, while traditional disks have relatively small bandwidths. <p> The theoretical algorithms and definitions provided in this paper are not sterile an implementation based on this theory exists at the University of Maryland. This implementation is built on top of an already existing, successful theory <ref> [21, 27, 1] </ref> and implementation of mediators for integrating heterogeneous databases and data structures. That implementation has been successfully used for two large-scale real-world applications by organizations outside the University of Maryland [5, 15].
Reference: [22] <author> S. Marcus and V.S. Subrahmanian. </author> <title> (1993) Multimedia Database Systems, </title> <note> submitted for publication. </note>
Reference-contexts: 1 Introduction Though there has been a good deal of work in recent years on multimedia, there has been relatively little work on multimedia information systems. In <ref> [22] </ref>, the authors have developed a theoretical framework for multimedia database systems. <p> Thus, for instance, the property price (taurus,15k) is true and is independent of any single video-clip. In contrast, the feature color (taurus,blue) may depend upon a particular video-clip. Marcus and Subrahmanian <ref> [22] </ref> develop a general scheme that, given a set of media-sources, and a set of instances of those media-sources, builds additional data structures "on top" of the physical representation of data in that medium. This physical representation allows for the definition of suitable query languages, and database query processing algorithms. <p> generates one of two possible multimedia presentations either me 1 ; me 1 2 or me 1 ; me 2 5 Formal User Request Language In this section, we show how certain requests that the user may wish to make can be expressed using the formal query language described in <ref> [22] </ref>. Suppose, at a given point in time, that (s 1 ; : : : ; s n ) is the current media-event.
Reference: [23] <author> W. Niblack, et. al. </author> <title> (1993) The QBIC Project: Querying Images by Content Using Color, Texture and Shape, </title> <institution> IBM Research Report, </institution> <month> Feb. </month> <year> 1993. </year> <month> 50 </month>
Reference-contexts: This may require signal processing and/or statistical pattern recognition techniques which are beyond the scope of this paper, but which are studied in other papers (e.g. Niblack et. al. <ref> [23] </ref>, Gong et. al. [11], and Gupta et. al. [14]).
Reference: [24] <author> E. Oomoto and K. Tanaka. </author> <year> (1993) </year> <month> OVID: </month> <title> Design and Implementation of a Video--Object Database System, </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> 5, 4, </volume> <pages> pps 629-643. </pages>
Reference-contexts: Jain et. al.'s system could be accessed by our mediator framework and this would allow us to integrate their functionality with ours, accessing heterogeneous relational data, raw and/or structured text new-wires, pictorial data, spatial data, and vide-data. 13.8 Other Efforts Oomoto and Tanaka <ref> [24] </ref> have defined a video-based object oriented data model, OVID. They take pieces of video, identify meaningful features in them and link these features. Our work deals with integrating multiple media and provides a unified query language and indexing structures to access the resulting integration.
Reference: [25] <author> J. Shoenfield. </author> <title> (1967) Mathematical Logic, </title> <publisher> Addison Wesley. </publisher>
Reference-contexts: The following example illustrates the notion of a multimedia-presentation generated by a multimedia specification. Example 6 (Car Example Revisited) Let us consider a very simple multimedia presentation that is generated by the following queries: 1 The notion of a "free" variable is the standard one, cf. Shoenfield <ref> [25] </ref>). 12 1.
Reference: [26] <author> A. P. Sistla, C. T. Yu, and R. Haddad. </author> <title> (1994) Reasoning About Spatial Relationships in Picture Retrieval Systems, </title> <booktitle> to appear in Proc. 1994 Intl. Conf. on Very Large Databases, </booktitle> <address> Santiago, Chile, </address> <month> Aug. </month> <year> 1994. </year>
Reference: [27] <author> V.S. Subrahmanian. </author> <title> (1992) Amalgamating Knowledge Bases, </title> <institution> Univ. of Maryland Tech. Report CS-TR-2949, </institution> <month> Aug. </month> <year> 1992. </year> <note> Accepted for publication in ACM Transactions on Database Systems. </note>
Reference-contexts: For instance, certain pictures of Clinton may be "better" than others. Our system has the capability of finding pictures of the desired quality. The current implementation is part of a much broader implementation effort to integrate multiple heterogeneous databases and multimedia databases <ref> [27, 28, 1, 21] </ref>. The overall systems architecture is shown in Figure 5. The end-user accesses a host of heterogeneous databases, data structures and multimedia databases using the mediator framework. Currently, our system can integrate the following types of data: * pictorial data, * video data, * text data (e.g. <p> Mediator: The concept of a mediator is due to Gio Wiederhold [30, 31]. Intuitively, a mediator is a program that integrates information from multiple databases and/or multiple data structures. Till recently, most mediators were implemented as very large C programs. In <ref> [27, 21] </ref>, we have proposed a uniform language to implement mediators. A mediator developer would specify a mediator for a specific application in this language. <p> These tools are interactive and assist the mediator author/developer in specifying the mediation rules/strategy. Mediator Compiler: In <ref> [27, 21] </ref>, we have shown how compilers for the mediator language may be implemented. The main advantage of such languages is that they access existing databases and software packages by using the functions and procedures defined already in those DBMSs, using a facility similar to the well-understood remote procedure call. <p> Any picture in which Bill Clinton appears with over 75% "goodness" is considered to satisfy that annotated atom feature ("Bill Clinton",Picture):0.75. When a feature atom is not annotated, then this implicitly represents an annotation of 1. There is a rich and well-understood theory of such annotations <ref> [7, 21, 19, 27] </ref> that the interested reader may pursue further if he so desires. In the above query, the system quickly comes back with the answer substitution Picture = 'INAU06.GIF'). It then asks the user whether s/he would like to see the picture. <p> The theoretical algorithms and definitions provided in this paper are not sterile an implementation based on this theory exists at the University of Maryland. This implementation is built on top of an already existing, successful theory <ref> [21, 27, 1] </ref> and implementation of mediators for integrating heterogeneous databases and data structures. That implementation has been successfully used for two large-scale real-world applications by organizations outside the University of Maryland [5, 15].
Reference: [28] <author> V.S. Subrahmanian. </author> <title> (1993) Hybrid Knowledge Bases for Intelligent Reasoning Systems, Invited Address, </title> <booktitle> Proc. 8th Italian Conf. on Logic Programming (ed. </booktitle> <address> D. Sacca), pps 3-17, Gizzeria, Italy, </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Finally, we will generalize this to an abstract formalism ranging over different constraint domains <ref> [17, 18, 28, 21, 4] </ref>. 11.1 The Temporal Domain Suppose we have a query Q and suppose is an answer substitution to query Q. <p> For instance, certain pictures of Clinton may be "better" than others. Our system has the capability of finding pictures of the desired quality. The current implementation is part of a much broader implementation effort to integrate multiple heterogeneous databases and multimedia databases <ref> [27, 28, 1, 21] </ref>. The overall systems architecture is shown in Figure 5. The end-user accesses a host of heterogeneous databases, data structures and multimedia databases using the mediator framework. Currently, our system can integrate the following types of data: * pictorial data, * video data, * text data (e.g.
Reference: [29] <author> R. Weiss, A. Duda and D.K. Gifford. </author> <title> (1994) Content-Based Access to Algebraic Video, </title> <booktitle> Proc. 1994 Intl. Conf. on Multimedia Computing and Systems, </booktitle> <address> pps 140-151, </address> <publisher> IEEE Press. </publisher>
Reference-contexts: We show how our framework can express all the multimedia presentation composition operations described as useful by Weiss et. al. <ref> [29] </ref>. Finally, we present a brief report on the status of a prototype multimedia information system that we are developing at the University of Maryland. <p> Weiss et. al. <ref> [29] </ref> have developed special operators that may be used to select one or more of these options. In Appendix A, we show how all the composition operators specified by Weiss et. al. [29] may be expressed within our query language, thus making it possible to handle "stretched" playback, "shrunk/fast-forwarded" playback, etc. <p> Weiss et. al. <ref> [29] </ref> have developed special operators that may be used to select one or more of these options. In Appendix A, we show how all the composition operators specified by Weiss et. al. [29] may be expressed within our query language, thus making it possible to handle "stretched" playback, "shrunk/fast-forwarded" playback, etc. 12 Implementation The notion of media-instances described in this paper has led to a prototype implementation at the University of Maryland. <p> This media-presentation may then be viewed as a certain kind of timed-stream that may be delivered to the output devices using the techniques of Gibbs et. al. [10]. 13.4 Weiss et. al. Weiss et. al. <ref> [29] </ref> develop a set of operations that may be used to compose multiple aspects of multimedia presentations. They correctly point out that such operations form the "kernel" of basic operations needed in creating effective multimedia presentations. It is important that any language for multimedia databases should, likewise, satisfy these criteria. <p> They correctly point out that such operations form the "kernel" of basic operations needed in creating effective multimedia presentations. It is important that any language for multimedia databases should, likewise, satisfy these criteria. To see how our work is related to that of Weiss et. al. <ref> [29] </ref>, we observe that we have given a formal mathematical definition of a multimedia presentation and a multimedia specification (that generates a multimedia presentation). <p> Using these definitions, it turns out that each and every composition operator that Weiss et. al. specify <ref> [29, p.144] </ref> can be expressed as constrained queries within our query language. This indicates that our query language has the required expressive power for composing multimedia data together to generate effective multimedia presentations.
Reference: [30] <author> G. Wiederhold. </author> <title> (1993) Intelligent Integration of Information, </title> <booktitle> Proc. 1993 ACM SIG-MOD Conf. on Management of Data, </booktitle> <address> pps 434-437. </address>
Reference-contexts: We briefly describe each part of the implementation. The entire implementation on the Sparc platform is about 35,000 lines of C code. A version for the 486-based PC platform has also been developed. Mediator: The concept of a mediator is due to Gio Wiederhold <ref> [30, 31] </ref>. Intuitively, a mediator is a program that integrates information from multiple databases and/or multiple data structures. Till recently, most mediators were implemented as very large C programs. In [27, 21], we have proposed a uniform language to implement mediators.
Reference: [31] <author> G Wiederhold, S. Jajodia, and W. Litwin. </author> <title> Integrating temporal data in a heterogeneous environment. In Temporal Databases. </title> <address> Benjamin/Cummings, </address> <month> Jan </month> <year> 1993. </year>
Reference-contexts: We briefly describe each part of the implementation. The entire implementation on the Sparc platform is about 35,000 lines of C code. A version for the 486-based PC platform has also been developed. Mediator: The concept of a mediator is due to Gio Wiederhold <ref> [30, 31] </ref>. Intuitively, a mediator is a program that integrates information from multiple databases and/or multiple data structures. Till recently, most mediators were implemented as very large C programs. In [27, 21], we have proposed a uniform language to implement mediators.
Reference: [32] <author> D. Woelk and W. Kim. </author> <title> (1987) Multimedia Information Management in an Object-Oriented Database System, </title> <booktitle> Proc. 13th Conf. on Very Large Databases, </booktitle> <address> pps 319-329. </address> <month> 51 </month>
Reference-contexts: Of course, we also provide numerous facilities not provided by Iino et. al. [16] such as query languages for multimedia data, indexing structures, formal soundness and completeness results, etc. 13.6 Woelk and Kim Woelk and Kim <ref> [32] </ref> have developed an object-oriented implementation of multimedia capabilities on top of the ORION object-oriented database system. A key feature of their work is that it is closely tied to an object-oriented implementation. <p> The correspondence of media-presentations and query sequences is a new aspect of our work. The utility of constraints for multimedia applications is another new and unique feature of our work, vis a vis that of Woelk and Kim <ref> [32] </ref>.
References-found: 32

