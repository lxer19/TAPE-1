URL: http://daphne.cs.ucla.edu/elias/publications/paper-kp95.ps
Refering-URL: http://daphne.cs.ucla.edu/elias/publications/index.html
Root-URL: http://www.cs.ucla.edu
Email: elias@cs.ucsd.edu  christos@cs.ucsd.edu  
Title: On the k-Server Conjecture  
Author: Elias Koutsoupias Christos Papadimitriou 
Date: May 22, 1995  
Address: Los Angeles  San Diego  
Affiliation: Computer Science Department University of California,  Computer Science and Engineering University of California,  
Abstract: We prove that the work function algorithm for the k-server problem has competitive ratio at most 2k 1. Manasse, McGeoch, and Sleator [24] conjectured that the competitive ratio for the k-server problem is exactly k (it is trivially at least k); previously the best known upper bound was exponential in k. Our proof involves three crucial ingredients: A quasiconvexity property of work functions, a duality lemma that uses quasiconvexity to characterize the configurations that achieve maximum increase of the work function, and a potential function that exploits the duality lemma.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Ben-David, A. Borodin, R. Karp, G. Tardos, and A. Wigderson. </author> <title> On the power of randomization in on-line algorithms. </title> <journal> Algorithmica, </journal> <volume> 11(1) </volume> <pages> 2-14, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: This was improved somewhat in [16], where it was shown that a natural memoryless randomized algorithm, the harmonic algorithm, has a competitive ratio O (k2 k ). Using the derandomization technique of <ref> [1] </ref>, this establishes that there exists a deterministic algorithm with competitive ratio O (k 2 4 k ).
Reference: [2] <author> Y. Bartal and E. Grove. </author> <title> The Harmonic k-server algorithm is competitive. </title> <type> Personal Communication. </type>
Reference-contexts: Using the derandomization technique of [1], this establishes that there exists a deterministic algorithm with competitive ratio O (k 2 4 k ). The result of [16] was improved slightly in <ref> [2] </ref> to O (2 k log k), establishing a deterministic competitive ratio of O (4 k log 2 k), which was the best known competitive ratio for the general case before this paper.
Reference: [3] <author> P. Berman, H. J. Karloff, and G. Tardos. </author> <title> A competitive three-server algorithm. </title> <booktitle> Proceedings of the First Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 280-90, </pages> <year> 1990. </year>
Reference-contexts: Specifically for the 3-server problem, the best known upper bound was an 11-competitive algorithm for any metric space [10]. The lack of significant progress towards the k-server conjecture led to the study of special cases of the problem. One of the first results in this area <ref> [3] </ref> was a proof that the harmonic algorithm for 3 servers is competitive (although with a terribly high competitive ratio; this result preceded the work of [14, 16]). Attacking the problem in special metric spaces led to a k-competitive algorithm for the line [6], which was extended to trees [7].
Reference: [4] <author> A. Blum, H. Karloff, Y. Rabani, and M. Saks. </author> <title> A decomposition theorem and bounds for randomized server problems. </title> <booktitle> Proceedings 33rd Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 197-207, </pages> <year> 1992. </year> <month> 15 </month>
Reference-contexts: Especially for the 2-server problem, [17] and [11] gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and [8] showed that the harmonic algorithm is 3-competitive. We should also mention a series <ref> [4, 18, 19] </ref> of lower bound results for the randomized version of the k-server problem against an oblivious adversary and the absence of any interesting upper bound for this case.
Reference: [5] <author> W. R. Burley. </author> <title> Traversing layered graphs using the work function al-gorithm. </title> <type> Technical report CS93-319, </type> <institution> Dept. of Computer Science and Engineering University of California, </institution> <address> San Diego, </address> <year> 1993. </year>
Reference-contexts: It has already been successfully applied to other problems <ref> [5, 12] </ref>. In [9], it was shown that the Work Function Algorithm is 2-competitive for k = 2. One of the ingredients of our technique is the notion of the extended cost, a concept very similar to the pseudocost of [9].
Reference: [6] <author> M. Chrobak, H. J. Karloff, T. Payne, and S. Vishwanathan. </author> <title> New results on server problems. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 4 </volume> <pages> 172-81, </pages> <year> 1991. </year>
Reference-contexts: Attacking the problem in special metric spaces led to a k-competitive algorithm for the line <ref> [6] </ref>, which was extended to trees [7].
Reference: [7] <author> M. Chrobak and L. L. Larmore. </author> <title> An optimal on-line algorithm for k-servers on trees. </title> <journal> SIAM Journal on Computing, </journal> <volume> 20(1) </volume> <pages> 144-8, </pages> <month> February </month> <year> 1991. </year>
Reference-contexts: Attacking the problem in special metric spaces led to a k-competitive algorithm for the line [6], which was extended to trees <ref> [7] </ref>. Finally, an O (k 3 ) competitive deterministic algorithm for the circle was presented in [15]. 3 One of the problems with the known competitive algorithms for the k--server problem is that they are not space-efficient (the algorithm proved 2k 1-competitive in this paper is no exception).
Reference: [8] <author> M. Chrobak and L. L. Larmore. </author> <title> Harmonic is 3-competitive for two servers. </title> <journal> Theoretical Computer Science, </journal> <volume> 98(2) </volume> <pages> 339-46, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: By derandomization, this results in a O (k 2 ) deterministic competitive ratio for resistive or approximately resistive metric spaces (one of them is the circle). Especially for the 2-server problem, [17] and [11] gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and <ref> [8] </ref> showed that the harmonic algorithm is 3-competitive. We should also mention a series [4, 18, 19] of lower bound results for the randomized version of the k-server problem against an oblivious adversary and the absence of any interesting upper bound for this case.
Reference: [9] <author> M. Chrobak and L. L. Larmore. </author> <title> The server problem and on-line games. On-line algorithms: </title> <booktitle> proceedings of a DIMACS workshop. DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </booktitle> <volume> 7 </volume> <pages> 11-64, </pages> <year> 1992. </year>
Reference-contexts: conjecture was proved for the special case of metric spaces with k + 2 points [20, 22]. 2 The Work Function Algorithm The algorithm we employ is the work function algorithm, a rather natural idea for this problem that was first made explicit in the work of Chrobak and Larmore <ref> [9] </ref> and discovered independently by Fortnow, Karloff and Vish-wanathan and by McGeogh and Sleator. It has already been successfully applied to other problems [5, 12]. In [9], it was shown that the Work Function Algorithm is 2-competitive for k = 2. <p> is the work function algorithm, a rather natural idea for this problem that was first made explicit in the work of Chrobak and Larmore <ref> [9] </ref> and discovered independently by Fortnow, Karloff and Vish-wanathan and by McGeogh and Sleator. It has already been successfully applied to other problems [5, 12]. In [9], it was shown that the Work Function Algorithm is 2-competitive for k = 2. One of the ingredients of our technique is the notion of the extended cost, a concept very similar to the pseudocost of [9]. <p> It has already been successfully applied to other problems [5, 12]. In <ref> [9] </ref>, it was shown that the Work Function Algorithm is 2-competitive for k = 2. One of the ingredients of our technique is the notion of the extended cost, a concept very similar to the pseudocost of [9]. Consider an optimal off-line algorithm B servicing a request sequence 4 = 1 2 . After servicing the request sequence 1 the k servers of algorithm B occupy some position X. <p> The extended cost is an overestimation of the actual on-line cost (plus the optimal off-line cost). It was first introduced in <ref> [9] </ref> in a somehow different form (they called it on-line pseudocost). The advantage of using extended cost instead of real cost is that we don't have to deal at all with the con figuration of the on-line servers.
Reference: [10] <author> M. Chrobak and L. L. Larmore. </author> <title> Generosity helps or an 11-competitive algorithm for three servers. </title> <journal> Journal of Algorithms, </journal> <volume> 16(2) </volume> <pages> 234-63, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Specifically for the 3-server problem, the best known upper bound was an 11-competitive algorithm for any metric space <ref> [10] </ref>. The lack of significant progress towards the k-server conjecture led to the study of special cases of the problem.
Reference: [11] <author> M. Chrobak and L. L. Larmore. </author> <title> On fast algorithms for two servers. </title> <journal> Journal of Algorithms, </journal> <volume> 12(4) </volume> <pages> 607-14, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: By derandomization, this results in a O (k 2 ) deterministic competitive ratio for resistive or approximately resistive metric spaces (one of them is the circle). Especially for the 2-server problem, [17] and <ref> [11] </ref> gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and [8] showed that the harmonic algorithm is 3-competitive.
Reference: [12] <author> M. Chrobak, L. L. Larmore, N. Reingold, and J. Westbrook. </author> <title> Page migration algorithms using work functions. Algorithms and Computation. </title> <booktitle> 4th International Symposium, ISAAC '93 Proceedings, </booktitle> <pages> pages 406-15, </pages> <year> 1993. </year>
Reference-contexts: It has already been successfully applied to other problems <ref> [5, 12] </ref>. In [9], it was shown that the Work Function Algorithm is 2-competitive for k = 2. One of the ingredients of our technique is the notion of the extended cost, a concept very similar to the pseudocost of [9].
Reference: [13] <author> D. Coppersmith, P. Doyle, P. Raghavan, and M. Snir. </author> <title> Random walks on weighted graphs and applications to on-line algorithms. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 40(3) </volume> <pages> 421-53, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: In order to address this problem, <ref> [13] </ref> considered memoryless randomized algorithms and showed a competitive ratio of k for the special class of resistive metric spaces. By derandomization, this results in a O (k 2 ) deterministic competitive ratio for resistive or approximately resistive metric spaces (one of them is the circle).
Reference: [14] <author> A. Fiat, Y. Rabani, and Y. Ravid. </author> <title> Competitive k-server algorithms. </title> <booktitle> Proceedings. 31st Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 454-63 vol.2, </pages> <year> 1990. </year>
Reference-contexts: The k-server conjecture attracted much of interest because of its simplicity, its elegance and its apparent centrality in the study of on-line problems. For some time, it was open whether any finite competitive ratio at all was possible for all metric spaces. It was shown in <ref> [14] </ref> that indeed there is an algorithm with finite competitive ratio for all metric spaces. Unfortunately, the competitive ratio of the algorithm in [14] increases exponentially with k: It is fi ((k!) 3 ). <p> For some time, it was open whether any finite competitive ratio at all was possible for all metric spaces. It was shown in <ref> [14] </ref> that indeed there is an algorithm with finite competitive ratio for all metric spaces. Unfortunately, the competitive ratio of the algorithm in [14] increases exponentially with k: It is fi ((k!) 3 ). This was improved somewhat in [16], where it was shown that a natural memoryless randomized algorithm, the harmonic algorithm, has a competitive ratio O (k2 k ). <p> One of the first results in this area [3] was a proof that the harmonic algorithm for 3 servers is competitive (although with a terribly high competitive ratio; this result preceded the work of <ref> [14, 16] </ref>). Attacking the problem in special metric spaces led to a k-competitive algorithm for the line [6], which was extended to trees [7].
Reference: [15] <author> A. Fiat, Y. Rabani, Y. Ravid, and B. Schieber. </author> <title> A deterministic O(k 3 )- competitive k-server algorithm for the circle. </title> <journal> Algorithmica, </journal> <volume> 11(6) </volume> <pages> 572-78, </pages> <month> June </month> <year> 1994. </year> <month> 16 </month>
Reference-contexts: Attacking the problem in special metric spaces led to a k-competitive algorithm for the line [6], which was extended to trees [7]. Finally, an O (k 3 ) competitive deterministic algorithm for the circle was presented in <ref> [15] </ref>. 3 One of the problems with the known competitive algorithms for the k--server problem is that they are not space-efficient (the algorithm proved 2k 1-competitive in this paper is no exception).
Reference: [16] <author> E. Grove. </author> <title> The Harmonic online k-server algorithm is competitive. </title> <booktitle> Pro--ceedings 23rd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 260-66, </pages> <year> 1991. </year>
Reference-contexts: It was shown in [14] that indeed there is an algorithm with finite competitive ratio for all metric spaces. Unfortunately, the competitive ratio of the algorithm in [14] increases exponentially with k: It is fi ((k!) 3 ). This was improved somewhat in <ref> [16] </ref>, where it was shown that a natural memoryless randomized algorithm, the harmonic algorithm, has a competitive ratio O (k2 k ). Using the derandomization technique of [1], this establishes that there exists a deterministic algorithm with competitive ratio O (k 2 4 k ). The result of [16] was improved <p> somewhat in <ref> [16] </ref>, where it was shown that a natural memoryless randomized algorithm, the harmonic algorithm, has a competitive ratio O (k2 k ). Using the derandomization technique of [1], this establishes that there exists a deterministic algorithm with competitive ratio O (k 2 4 k ). The result of [16] was improved slightly in [2] to O (2 k log k), establishing a deterministic competitive ratio of O (4 k log 2 k), which was the best known competitive ratio for the general case before this paper. <p> One of the first results in this area [3] was a proof that the harmonic algorithm for 3 servers is competitive (although with a terribly high competitive ratio; this result preceded the work of <ref> [14, 16] </ref>). Attacking the problem in special metric spaces led to a k-competitive algorithm for the line [6], which was extended to trees [7].
Reference: [17] <author> S. Irani and R. Rubinfeld. </author> <title> A competitive 2-server algorithm. </title> <journal> Information Processing Letters, </journal> <volume> 39(2) </volume> <pages> 85-91, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: By derandomization, this results in a O (k 2 ) deterministic competitive ratio for resistive or approximately resistive metric spaces (one of them is the circle). Especially for the 2-server problem, <ref> [17] </ref> and [11] gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and [8] showed that the harmonic algorithm is 3-competitive.
Reference: [18] <author> A. R. Karlin, M. S. Manasse, L. A. McGeoch, and S. Owicki. </author> <title> Competitive randomized algorithms for nonuniform problems. </title> <journal> Algorithmica, </journal> <volume> 11(6) </volume> <pages> 542-71, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Especially for the 2-server problem, [17] and [11] gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and [8] showed that the harmonic algorithm is 3-competitive. We should also mention a series <ref> [4, 18, 19] </ref> of lower bound results for the randomized version of the k-server problem against an oblivious adversary and the absence of any interesting upper bound for this case.
Reference: [19] <author> H. Karloff, Y. Rabani, and Y. Ravid. </author> <title> Lower bounds for randomized k-server and motion-planning algorithms. </title> <journal> SIAM Journal on Computing, </journal> <volume> 23(2) </volume> <pages> 293-312, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Especially for the 2-server problem, [17] and [11] gave a 10-competitive and a 4-competitive efficient deterministic algorithm respectively and [8] showed that the harmonic algorithm is 3-competitive. We should also mention a series <ref> [4, 18, 19] </ref> of lower bound results for the randomized version of the k-server problem against an oblivious adversary and the absence of any interesting upper bound for this case.
Reference: [20] <author> E. Koutsoupias. </author> <title> On-line algorithms and the k-server conjecture. </title> <type> PhD thesis, </type> <institution> University of California, </institution> <address> San Diego, </address> <year> 1994. </year>
Reference-contexts: We believe that these concepts may be of some general value and applicability. For example, using a similar technique but a different potential the exact k-server conjecture was proved for the special case of metric spaces with k + 2 points <ref> [20, 22] </ref>. 2 The Work Function Algorithm The algorithm we employ is the work function algorithm, a rather natural idea for this problem that was first made explicit in the work of Chrobak and Larmore [9] and discovered independently by Fortnow, Karloff and Vish-wanathan and by McGeogh and Sleator.
Reference: [21] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> On the k-server conjecture. </title> <booktitle> Proceedings 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 507-11, </pages> <year> 1994. </year>
Reference: [22] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> The 2-evader problem. </title> <note> In preparation. </note>
Reference-contexts: We believe that these concepts may be of some general value and applicability. For example, using a similar technique but a different potential the exact k-server conjecture was proved for the special case of metric spaces with k + 2 points <ref> [20, 22] </ref>. 2 The Work Function Algorithm The algorithm we employ is the work function algorithm, a rather natural idea for this problem that was first made explicit in the work of Chrobak and Larmore [9] and discovered independently by Fortnow, Karloff and Vish-wanathan and by McGeogh and Sleator. <p> A possible research direction that would achieve potentially interesting partial results would extend the special cases of metric spaces for which the k-server conjecture holds. One such special case (metric spaces with k + 2 points <ref> [22] </ref>) was in fact a precursor of the present proof. Finally, much work remains to be done on bridging the gap between the performance of on-line algorithms and the computational processes (such as paging algorithms) that they are supposed to model.
Reference: [23] <author> E. Koutsoupias and C. H. Papadimitriou. </author> <title> Beyond competitive analysis. </title> <booktitle> In Proc. 35th IEEE Symposium on Foundations of Computer Science (FOCS), </booktitle> <pages> pages 394-400, </pages> <year> 1994. </year>
Reference-contexts: Finally, much work remains to be done on bridging the gap between the performance of on-line algorithms and the computational processes (such as paging algorithms) that they are supposed to model. Two extensions of competitive analysis that make some progress in this direction are proposed amd explored in <ref> [23] </ref>.
Reference: [24] <author> M. S. Manasse, L. A. McGeoch, and D. D. Sleator. </author> <title> Competitive algorithms for on-line problems. </title> <booktitle> Proceedings 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 322-33, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction The k-server problem <ref> [24, 25] </ref> is defined on a metric space M, which is a (possibly infinite) set of points with a symmetric distance function d (non-negative real function) that satisfies the triangle inequality: For all points x, y, and z d (x; y) = d (y; x) 1 On the metric space M, <p> In metric spaces M with k or fewer points an on-line algorithm can initially cover all points with its servers; it never again moves them and therefore, its competitive ratio is 1. The problem becomes interesting for metric spaces with at least k + 1 points. In <ref> [24] </ref>, it was shown that no on-line algorithm can have competitive ratio less that k and the following conjecture was posed: Conjecture 1 (The k-Server Conjecture) For every metric space there is an on-line algorithm with competitive ratio k.
Reference: [25] <author> M. S. Manasse, L. A. McGeoch, and D. D. Sleator. </author> <title> Competitive algorithms for server problems. </title> <journal> Journal of Algorithms, </journal> <volume> 11(2) </volume> <pages> 208-30, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: 1 Introduction The k-server problem <ref> [24, 25] </ref> is defined on a metric space M, which is a (possibly infinite) set of points with a symmetric distance function d (non-negative real function) that satisfies the triangle inequality: For all points x, y, and z d (x; y) = d (y; x) 1 On the metric space M,
Reference: [26] <author> D. D. Sleator and R. E. Tarjan. </author> <title> Amortized efficiency of list update and paging rules. </title> <journal> Comm. ACM, </journal> <volume> 28(2) </volume> <pages> 202-208, </pages> <year> 1985. </year> <month> 17 </month>
Reference-contexts: Similarly, let cost (A 0 ; ) denote the cost for servicing of some on-line algorithm. The competitive ratio of the on-line algorithm is roughly the worst case ratio cost (A 0 ; )=opt (A 0 ; ) <ref> [26] </ref>. <p> It was also showed that the conjecture holds for two special cases: when k = 2 and when the metric space has exactly k + 1 points. The Paging problem |the special case when all distances are the same| had already been shown to have a k-competitive algorithm in <ref> [26] </ref>. The k-server conjecture attracted much of interest because of its simplicity, its elegance and its apparent centrality in the study of on-line problems. For some time, it was open whether any finite competitive ratio at all was possible for all metric spaces.
References-found: 26

