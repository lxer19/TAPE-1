URL: http://www-ccs.cs.umass.edu/~jitu/publications/manic_stats.ps
Refering-URL: http://www-ccs.cs.umass.edu/~jitu/publications.html
Root-URL: 
Email: fjitu,kuroseg@cs.umass.edu  
Title: An Empirical Study of Client Interactions with a Continuous-Media Courseware Server  
Author: Jitendra Padhye Jim Kurose 
Note: This material was supported in part by the National Science Foundation under Grant No. CDA-9502639, NCR-9508274, and the University of Massachusetts through an Instructional Technology Grant. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation or the  
Address: Amherst MA 01003 USA  
Affiliation: Department of Computer Science University of Massachusetts  University of Massachusetts.  
Abstract: While considerable research has gone into investigating various networking and operating system mechanisms for supporting the transfer and playout of stored continuous media (e.g., audio and video), very little information is available about how users actually use such systems. Understanding how users interact with such a system i.e., developing a user workload characterization is crucial in designing and evaluating efficient continuous media (CM) resource allocation and access mechanisms. We have designed and built an interactive WWW-based, multimedia, client/server application, known as MANIC (Multimedia Asynchronous Networked Individualized Courseware), that streams synchronized CM (currently audio) and HTML documents to remote users. MANIC was used by more than 200 users during the Spring 1997 semester to listen to, and view, the stored audio lectures and lecture notes for a full-semester senior-level course at the University of Massachusetts. In this paper we provide empirical and analytic characterizations of observed user behavior in MANIC. We characterize both session-level behavior (e.g., the length of individual sessions) as well as interactive user behavior (e.g., the time between starting/stopping/pausing the audio within a session; and the distance of rewinding, fast forwarding and indexed jumping within the audio stream). We also examine how well our measured data can be fit analytically by various distribution functions. Finally, we consider the possible implications of our results for CM system architecture. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anderson D. P., Osawa Y., Govindan R., </author> <title> A File system for continuous media, </title> <journal> ACM Transactions on Computer Systems 10, </journal> <volume> 4 (Nov. </volume> <year> 1992), </year> <pages> 311-337 </pages>
Reference: [2] <author> R. D'Agostino, </author> <title> Goodness of Fit Techniques, </title> <publisher> Marcel Decker, </publisher> <year> 1980. </year>
Reference-contexts: We are currently investigating network-level congestion control protocols for CM, and the effect of client interactivity on the amount of CM data that should be transmitted in advance to the client. We are also currently integrating video into the MANIC system. More rigorous goodness of fits studies <ref> [2] </ref> can be performed to quantify the benefits of one analytic distribution over another. Finally, even though one distribution may more accurately model the workload than another, the overall effect of using different workload models in various performance studies is another topic for future research.
Reference: [3] <author> J. Dey Sircar, J Salehi, J.F. Kurose, D. Towsley, </author> <title> Providing VCR-like Capabilities in Large-Scale Video Servers, </title> <booktitle> in Proc. ACM Multimedia 1994, </booktitle> <month> Oct </month> <year> 1994. </year>
Reference-contexts: For example, understanding how often users fast-forward, rewind, pause or make indexed-jumps within a continuous media stream (and how far they move within the media stream when they do so), can help in designing and evaluating call admission strategies <ref> [3] </ref>, scalable compression techniques [18], and client/server buffer management strategies [4] for CM systems. <p> modeling perspective, we find that session lengths, and the length of time a user spends in continuous audio playout (before a stop, pause, or jump) or with playout halted (before resuming audio playout) has a heavier tail than the exponential distribution that is typically assumed in previous CM analytic modeling <ref> [3, 18] </ref>; both the lognormal and gamma distribution are shown to provide a closer fit to our observed data than the exponential distribution. <p> From a modeling perspective, our results question the accuracy of some previously adopted modeling assumptions <ref> [3, 18] </ref> and provide specific real-world parameters values that can be employed in future studies. We stress, however, that our results are for a specific application, a specific set of multimedia course material, and a specific user population. <p> As discussed above, an individual user's CM activity within a session will consist of alternating intervals of having the audio on and off. Indeed, a number of analytic models of users in interactive CM systems explicitly model this on/off behavior <ref> [3, 18] </ref>. Figure 8 plots the distribution of the length of the individual audio ON periods. Once again, the heights of the histogram bars have been normalized so that the area under the histogram is one. <p> Several observations can be made here. First, a CM server that allocates resources on the basis of worst case demand (e.g., assumes that each session will always be playing audio) will clearly over-reserve resources. A more reasonable basis for resource allocation would be the so called on/off model <ref> [3, 18] </ref> in which a user moves between on periods (where audio is streaming to the user) and off periods (where no audio is being streamed).
Reference: [4] <author> J. Dey, S. Sen, J. Kurose, D. Towsley, J. Salehi, </author> <title> Playback Restart in Interactive Streaming Video Applications, </title> <booktitle> Proc. IEEE Conference on Multimedia Computer and Systems, </booktitle> <address> (June 1997 Ottawa Canada). </address>
Reference-contexts: For example, understanding how often users fast-forward, rewind, pause or make indexed-jumps within a continuous media stream (and how far they move within the media stream when they do so), can help in designing and evaluating call admission strategies [3], scalable compression techniques [18], and client/server buffer management strategies <ref> [4] </ref> for CM systems. In this paper we provide an empirical characterization of observed user behavior with MANIC (Multimedia Asynchronous Networked Individualized Courseware) [8], a WWW based multimedia client/server application, that streams synchronized CM (currently audio) and HTML documents to remote users.
Reference: [5] <author> W. Feng, F. Jahanian, S. Secrest, </author> <title> An Optimal Bandwidth Allocation Strategy for the Delivery of Compressed, Prerecorded Video, </title> <booktitle> Multimedia Systems, </booktitle> <month> Sept. </month> <year> 1997, </year> <pages> pp. 297-309. </pages>
Reference-contexts: Second, if forward jumps are short, playout can also begin immediately if the audio data has already been preloaded into the buffer as a result of server workahead <ref> [16, 13, 5] </ref>. In Figure 10, we plot the distribution of length of forward and backward jumps. Interestingly, there are relatively few backward jumps.
Reference: [6] <author> J. Gemmel, H. Vin, D. Kandlur, P.V. Rangan, </author> <title> Storage Servers: A Tutorial and Survey, </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Efficient delivery of continuous media (CM) such as audio and video, is one the important goals of current networking and operating systems research <ref> [6, 10, 17] </ref>. Considerable research has gone into investigating various networking and operating system mechanisms to make continuous media transfer more efficient. However, little information is available about how users actually use such systems.
Reference: [7] <author> M. Grossglauser, J. </author> <title> Bolot,On the Relevance of Long Range Dependance in Network Traffic, </title> <booktitle> Proc. ACM SIGCOMM 96. </booktitle>
Reference-contexts: Here we see that both the gamma and lognormal distributions tend to match the tail well, while the exponential distributions tends to underestimate the tail of the distribution. Unlike the heavy-tailed phenomena observed in physical systems such a reservoir levels and network traffic <ref> [12, 7] </ref>, there is a very simple explanation for the heavy tail observed here some users simple chose to view course material for a relatively long period of time. will see shortly that that slightly under half of sessions did not play any audio at all.) Figure 6 shows that sessions
Reference: [8] <author> J.F. Kurose, H.I. Lee, J. Padhye, J. Steinberg, M. Stern, `MANIC: </author> <title> Multimedia Asynchronous Networked Individualized Courseware, </title> <type> Technical Report 96-72, </type> <institution> Department of Computer Science, University of Massachusetts, </institution> <address> Amherst MA 01003. </address> <month> Oct. </month> <year> 1996. </year> <note> The MANIC homepage is: http://gaia.cs.umass.edu/nmis/manic.html </note>
Reference-contexts: In this paper we provide an empirical characterization of observed user behavior with MANIC (Multimedia Asynchronous Networked Individualized Courseware) <ref> [8] </ref>, a WWW based multimedia client/server application, that streams synchronized CM (currently audio) and HTML documents to remote users. <p> For a detailed description of MANIC, the reader is referred to <ref> [8] </ref>. The CM course material that was accessed during this study can itself can be accessed via: http://gaia.cs.umass.edu/cs653-1997/ The architecture of the MANIC system is depicted in accompanying text. Pages of text (slides) are displayed as HTML files in the browser window. <p> This is achieved using the synchronized multimedia facility provided by the RealAudio server/player. Details about this synchronization mechanism, and how it is exploited in MANIC, can be found in <ref> [8] </ref>. In addition, MANIC can highlight (and then de-highlight) different portions of the text as the audio progresses, as discussed below. Several CGI scripts running on the WWW server allow the user to perform various control/browsing actions by clicking on the control buttons provided within each slide. <p> These commands include stopping and restarting the audio, moving to the previous or the next slide and jumping to arbitrary slides via an index. A detailed description of the implementation is provided in <ref> [8] </ref>. Here, we only describe what these commands do, and how they affect audio play-out. A screen shot of the MANIC user interface displaying a typical slide is shown in Figure 2. The slide contains two bullet points and a diagram. <p> In each case when the audio stops, the user must explicitly restart playout by using one of the two play commands. We note that while MANIC provides the capability to start/stop and index through audio (i.e., by using the 3 MANIC also provides a non-highlight mode <ref> [8] </ref> for users with slower network connections. In this mode, the user can FF/rewind only at the granularity of a single slide.
Reference: [9] <author> T. Kwon, Y. Choi, S. Lee, </author> <title> Disk Placement for Arbitrary Rate Playback in an Interactive Video Server, </title> <booktitle> Multimedia Systems, </booktitle> <month> July </month> <year> 1997, </year> <pages> pp. 271-281. </pages>
Reference: [10] <author> K. Nahrstedt, R. Steinmetz, </author> <title> Resource Management in Networked Multimedia Operating Systems, </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1995, </year> <pages> pp 4049. </pages>
Reference-contexts: 1 Introduction Efficient delivery of continuous media (CM) such as audio and video, is one the important goals of current networking and operating systems research <ref> [6, 10, 17] </ref>. Considerable research has gone into investigating various networking and operating system mechanisms to make continuous media transfer more efficient. However, little information is available about how users actually use such systems.
Reference: [11] <author> V. Padmanabhan and J. Mogul, </author> <title> Using Predictive Prefetching to Improve World Wide Web Latency, </title> <booktitle> Proceedings of ACM SIGComm, </booktitle> <year> 1996, </year> <pages> pp. 22-36. </pages>
Reference-contexts: We also note that while the population as whole exhibits relatively little locality in their jumps, certain individuals may exhibit high locality in their jumping. In such cases, a model-based prefetching strategy that considers past user-specific actions [19] or makes content-specific prefetching decisions <ref> [11] </ref> may be able to successfully hide jump latency by buffering old data and/or prefetching future CM data. This too remains an issue for future research.
Reference: [12] <author> V. Paxson and S. Floyd, </author> <title> Wide Area Traffic: </title> <journal> the Failure of Poisson Modeling,IEEE/ACM Transactions on Networking, </journal> <volume> Vol. 3, No. 3, </volume> <month> (June </month> <year> 1995), </year> <pages> pp. 226 - 244. </pages>
Reference-contexts: Here we see that both the gamma and lognormal distributions tend to match the tail well, while the exponential distributions tends to underestimate the tail of the distribution. Unlike the heavy-tailed phenomena observed in physical systems such a reservoir levels and network traffic <ref> [12, 7] </ref>, there is a very simple explanation for the heavy tail observed here some users simple chose to view course material for a relatively long period of time. will see shortly that that slightly under half of sessions did not play any audio at all.) Figure 6 shows that sessions
Reference: [13] <author> M. Reisslein and K. Ross, </author> <title> Join the Shortest Queue Prefetching for VBR Encoded Video on Demand, </title> <booktitle> Proc.19997 Int. Conference on Networking Protocols, </booktitle> <address> (Oct. 1997, Atlanta GA). </address>
Reference-contexts: Second, if forward jumps are short, playout can also begin immediately if the audio data has already been preloaded into the buffer as a result of server workahead <ref> [16, 13, 5] </ref>. In Figure 10, we plot the distribution of length of forward and backward jumps. Interestingly, there are relatively few backward jumps.
Reference: [14] <institution> Real Audio homepage: </institution> <note> http://www.realaudio.com. </note>
Reference-contexts: Pages of text (slides) are displayed as HTML files in the browser window. Audio is delivered by the server using the RealAudio Server, and played out at the client side user the RealAudio browser plugin <ref> [14] </ref>. Slide display and audio playout are synchronized i.e., the displayed HTML contents in the WWW browser window change automatically as the audio progresses. This is achieved using the synchronized multimedia facility provided by the RealAudio server/player.
Reference: [15] <author> K. Rothermel, T. Helbig, </author> <title> An Adaptive Protocol for synchronizing Multimedia Systems, </title> <booktitle> Multimedia Systems, </booktitle> <month> Sept. </month> <year> 1997, </year> <pages> pp. 324-336. </pages>
Reference-contexts: From a resource allocation standpoint, a high level of inter-activity would argue against prefetching significant amounts of CM material before its playout. While some amount of workahead is needed to remove network jitter <ref> [15] </ref> and reduce burstiness in the CM stream [16], downloading CM data too far in advance of its playout time can waste network and server resources by downloading data that is never actu ally played.
Reference: [16] <author> J. Salehi, Z. Zhang, J. Kurose, D. Towsley, </author> <title> Sup--porting Stored Video: Reducing Rate Variability and End-to-end Resource Requirements through Optimal Smoothing, </title> <booktitle> Proc. 1996 ACM Sigmetrics Conference, </booktitle> <address> (May 1996, Philadelphia PA). </address>
Reference-contexts: Second, if forward jumps are short, playout can also begin immediately if the audio data has already been preloaded into the buffer as a result of server workahead <ref> [16, 13, 5] </ref>. In Figure 10, we plot the distribution of length of forward and backward jumps. Interestingly, there are relatively few backward jumps. <p> From a resource allocation standpoint, a high level of inter-activity would argue against prefetching significant amounts of CM material before its playout. While some amount of workahead is needed to remove network jitter [15] and reduce burstiness in the CM stream <ref> [16] </ref>, downloading CM data too far in advance of its playout time can waste network and server resources by downloading data that is never actu ally played.
Reference: [17] <author> P. Shenoy, P. Goyal, H. Vin, </author> <title> Issues in Multimedia Server Design, </title> <journal> ACM Computing Surveys, </journal> <month> December </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Efficient delivery of continuous media (CM) such as audio and video, is one the important goals of current networking and operating systems research <ref> [6, 10, 17] </ref>. Considerable research has gone into investigating various networking and operating system mechanisms to make continuous media transfer more efficient. However, little information is available about how users actually use such systems.
Reference: [18] <author> P. Shenoy, H. Vin, </author> <title> Efficient Support for Scan Operations in Video Servers, </title> <booktitle> Proc. ACM Multimedia 95, </booktitle> <month> (Nov. </month> <pages> 5-9, </pages> <address> San Francisco). </address>
Reference-contexts: For example, understanding how often users fast-forward, rewind, pause or make indexed-jumps within a continuous media stream (and how far they move within the media stream when they do so), can help in designing and evaluating call admission strategies [3], scalable compression techniques <ref> [18] </ref>, and client/server buffer management strategies [4] for CM systems. In this paper we provide an empirical characterization of observed user behavior with MANIC (Multimedia Asynchronous Networked Individualized Courseware) [8], a WWW based multimedia client/server application, that streams synchronized CM (currently audio) and HTML documents to remote users. <p> modeling perspective, we find that session lengths, and the length of time a user spends in continuous audio playout (before a stop, pause, or jump) or with playout halted (before resuming audio playout) has a heavier tail than the exponential distribution that is typically assumed in previous CM analytic modeling <ref> [3, 18] </ref>; both the lognormal and gamma distribution are shown to provide a closer fit to our observed data than the exponential distribution. <p> From a modeling perspective, our results question the accuracy of some previously adopted modeling assumptions <ref> [3, 18] </ref> and provide specific real-world parameters values that can be employed in future studies. We stress, however, that our results are for a specific application, a specific set of multimedia course material, and a specific user population. <p> As discussed above, an individual user's CM activity within a session will consist of alternating intervals of having the audio on and off. Indeed, a number of analytic models of users in interactive CM systems explicitly model this on/off behavior <ref> [3, 18] </ref>. Figure 8 plots the distribution of the length of the individual audio ON periods. Once again, the heights of the histogram bars have been normalized so that the area under the histogram is one. <p> Several observations can be made here. First, a CM server that allocates resources on the basis of worst case demand (e.g., assumes that each session will always be playing audio) will clearly over-reserve resources. A more reasonable basis for resource allocation would be the so called on/off model <ref> [3, 18] </ref> in which a user moves between on periods (where audio is streaming to the user) and off periods (where no audio is being streamed).
Reference: [19] <author> Mia K. Stern, Beverly Park Woolf, and James F. </author> <title> Kurose, </title> <booktitle> Intelligence on the Web?, Proceedings of the 8th World Conference of the AIED Society, </booktitle> <month> August 18-22, </month> <year> 1997, </year> <institution> Kobe, </institution> <address> Japan. </address>
Reference-contexts: This is an interesting question for future research. We also note that while the population as whole exhibits relatively little locality in their jumps, certain individuals may exhibit high locality in their jumping. In such cases, a model-based prefetching strategy that considers past user-specific actions <ref> [19] </ref> or makes content-specific prefetching decisions [11] may be able to successfully hide jump latency by buffering old data and/or prefetching future CM data. This too remains an issue for future research.
References-found: 19

