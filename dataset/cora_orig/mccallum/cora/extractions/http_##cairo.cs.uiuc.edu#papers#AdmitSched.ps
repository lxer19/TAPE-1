URL: http://cairo.cs.uiuc.edu/papers/AdmitSched.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Title: New Algorithms for Admission Control and Scheduling to support Multimedia Feedback Remote Control Applications  
Author: Klara Nahrstedt Jonathan Smith 
Affiliation: Computer Science Department Computer Science Department University of Illinois University of Pennsylvania  
Abstract: Multimedia feedback remote control applications create a multimedia control loop between devices such as robot hands and cameras and a human user. Such applications are characterized by continuous update of multimedia data passed to and from the remote device(s), e.g., tactile, force and visual information. The supporting multimedia system must provide application-to-application quality of service guarantees between the human user and the remote devices. To provide such guarantees, networked applications need to either directly or indirectly control network resources (e.g., in switches), and end-point resources such as memory, CPU and I/O device access[And93]. Resource control must be integrated in a robust admission and scheduling process. We assume that such admission and scheduling exist for network resources such as bandwidth and delay, and focus on an admission and scheduling process for the end-points. By integrating the endpoint resources, we discovered several problems, for which we have designed novel admission and scheduling algorithms for control of a resource, namely a multi-level admission service and joint scheduling. We have designed and implemented the algorithms within our OMEGA architecture which controls the availability of end-point resources needed in full-feedback remote control multimedia applications such as telerobotics. These algorithms are discussed in sufficient detail in the paper that they can be easily implemented and adopted by others. The algorithms are validated through experimentation with a telerobotics application executing on an ATM network.
Abstract-found: 1
Intro-found: 1
Reference: [And93] <author> D. P. Anderson. </author> <title> Meta-Scheduling for Distributed Continuous Media. </title> <journal> ACM Transaction on Computer Systems, </journal> <volume> 11(3), </volume> <month> August </month> <year> 1993. </year>
Reference-contexts: For example, the fact that data has arrived at a network adapter "on-time" does not imply that an application receives and processes the data in a timely manner. Real-time communication must be integrated with real-time computing support and applications at network end-points <ref> [And93] </ref>. Anderson provided a uniform theoretical framework and model, called Metascheduler, for resource reservation to achieve application-to-application guarantees [And93]. In practice, however, the applications and real-time computing are still not fully integrated with the real-time communication. <p> Real-time communication must be integrated with real-time computing support and applications at network end-points <ref> [And93] </ref>. Anderson provided a uniform theoretical framework and model, called Metascheduler, for resource reservation to achieve application-to-application guarantees [And93]. In practice, however, the applications and real-time computing are still not fully integrated with the real-time communication. Some orchestration between operating system (OS) and network resources has been tried (e.g., [TTCM92]), but relatively little orchestration among all three types of resources (multimedia devices, OS resources, and network resources) [And93]. <p> guarantees <ref> [And93] </ref>. In practice, however, the applications and real-time computing are still not fully integrated with the real-time communication. Some orchestration between operating system (OS) and network resources has been tried (e.g., [TTCM92]), but relatively little orchestration among all three types of resources (multimedia devices, OS resources, and network resources) [And93]. Unfortunately, availability of these resources is interdependent when guarantees are required. These interdependencies expose some serious limitations in the canonical real-time scheduling algorithms, which we address in Section 5. 3 OMEGA Architecture To provide application-to-application guarantees, we need guaranteed services in the network and at the end-points. <p> Natale and Stankovic take a task precedence graph of robotics tasks and applying breadth-first-search assign time slices to sets of tasks at different processors using laxity metric. Another approach to precedence relations with respect to reservation is shown in <ref> [And93] </ref>. An-derson examines resources which handle streams of continuous media, such as devices, CPU, and network. He parameterizes them uniformly using the Continuous Media resource model by message size, message rate and workahead limit.
Reference: [CT90] <author> D.D. Clark and D.L. Tennenhouse. </author> <title> Architectural Considerations for a New Generation of Protocols. </title> <booktitle> In ACM SIGCOMM'90, </booktitle> <pages> pages 200-208, </pages> <address> Philadelphia, PA, </address> <month> September 2 </month> <year> 1990. </year>
Reference-contexts: We call this system architecture the OMEGA Architecture, alluding to its location at system end-points. The transport subsystem layer in our model combines the roles of the network and transport layers using Integrated Layer Processing <ref> [CT90] </ref>. Functions such as connection management, forward error correction, timing failure detection and timely data movement form the core of the Real-Time Network Protocol (RTNP).
Reference: [FV90] <author> D. Ferrari and D. C. Verma. </author> <title> A Scheme for Real-Time Channel Establishment in Wide--Area Networks. </title> <journal> IEEE JSAC, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Several admission mechanisms, scheduling policies and tests, and buffer allocation schemes to support real-time communication and guaranteed services are presented in <ref> [HLG93, MSST91, FV90] </ref> and other work. The primary CPU resource, processor occupancy, is analyzed in the real-time systems discipline, and also focuses on scheduling. We further discuss the current state of the art in scheduling in Section 5.1.
Reference: [GA91] <author> R. Govindan and D. P. Anderson. </author> <title> Scheduling and IPC Mechanisms for Continuous Media. </title> <type> Technical Report UCB/CSD 91/622, </type> <institution> University of California,Computer Science Division, Berkeley, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: He assumes that per-session, over one non-CPU resource, there exists one process which does the work for the session and all processes are scheduled according to deadline-workahead policy, which can be implemented by split-level scheduling <ref> [GA91] </ref>. In the deadline-workahead policy the critical processes (real-time processes) are scheduled according to EDF.
Reference: [HLG93] <author> J. M. Hyman, A.A. Lazar, and G.Pacifici. </author> <title> A Separation Principle Between Scheduling and Admission Control for Broadband Switching. </title> <journal> IEEE JSAC, </journal> <volume> 11(4) </volume> <pages> 605-616, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Several admission mechanisms, scheduling policies and tests, and buffer allocation schemes to support real-time communication and guaranteed services are presented in <ref> [HLG93, MSST91, FV90] </ref> and other work. The primary CPU resource, processor occupancy, is analyzed in the real-time systems discipline, and also focuses on scheduling. We further discuss the current state of the art in scheduling in Section 5.1.
Reference: [HS92] <author> C.J. Hou and K. Shin. </author> <title> Allocation of Periodic Task moduls with Precedence and Deadline Constraints in Distributed Real-Time Systems. </title> <booktitle> In IEEE Real-Time System Symposium, </booktitle> <pages> pages 147-156, </pages> <address> Phenix, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: For OMEGA, there is a synchronization relation between application and network tasks processing the same packet. This is a special case of a synchronization relation, a precedence relation, which adds ordering constraints and thus loses equivalence. Precedence-constrained scheduling at the transport system level is discussed in <ref> [HS92, SRC85] </ref>. In both, the graph of precedence constrained modules is obtained from the semantics of the communication. A time slicing approach for application tasks with precedence relations is taken in [NS94b].
Reference: [LL73] <author> C. L. Liu and J. W. Layland. </author> <title> Scheduling Algorithms for Multiprogramming in a Hard Real-Time Environment. </title> <journal> Journal of the ACM, </journal> <volume> 20(1) </volume> <pages> 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: The behavior of the considered application tasks allows us to test the tasks as if they would be scheduled using Earliest Deadline First (EDF) policy. For this kind of scheduling, Liu and Layland provide a schedulability test in <ref> [LL73] </ref>. However, because our tasks are non preemptive, the schedulability test must be altered 1 . The altered test in the application subsystem is the test #(1) in Table 3. For each stream i in direction d, the deadline test #(2) in Table 3 holds. <p> Both algorithms, for preemptive and non-preemptive tasks, have been studied [LSD89, SLR86, SKG91], weakening the assumptions of Liu and Layland <ref> [LL73] </ref>. One important assumption remains and that is that the tasks are independent.
Reference: [LSD89] <author> J. Lehoczky, L. Sha, and Y. Ding. </author> <title> The Rate-Monotonic Scheduling Algorithm: Exact Characterization and Average Case Behavior. </title> <booktitle> In Proceedings of IEEE Real-Time Systems Symposium, pages 166 -171, </booktitle> <address> Santa Monica, Califronia, December 1989. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Both algorithms, for preemptive and non-preemptive tasks, have been studied <ref> [LSD89, SLR86, SKG91] </ref>, weakening the assumptions of Liu and Layland [LL73]. One important assumption remains and that is that the tasks are independent.
Reference: [Mok83] <author> A.K. Mok. </author> <title> Fundamental Design Problems of Distributed Systems for the Hard Real-Time Environment. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <year> 1983. </year>
Reference-contexts: While a synchronization relation is a dependency relation, it is also an equivalence relation, i.e., the fact that task A must be synchronized with task B is equivalent to B's requirements for A (there is no semantic context of precedence). Mok <ref> [Mok83] </ref> developed a procedure to generate feasible schedules with a kernelized 14 monitor for a set of non-preemptive periodic tasks with synchronization relations, meaning that the procedure doesn't allow preemption of a job within the critical section.
Reference: [MSST91] <author> T. Murase, H. Suzuki, S. Sato, and T. Takeuchi. </author> <title> A Call Admission Control Scheme for ATM Networks Using a Simple Quality Estimate. </title> <journal> IEEE JSAC, </journal> <volume> 9(9) </volume> <pages> 1452-1460, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: Several admission mechanisms, scheduling policies and tests, and buffer allocation schemes to support real-time communication and guaranteed services are presented in <ref> [HLG93, MSST91, FV90] </ref> and other work. The primary CPU resource, processor occupancy, is analyzed in the real-time systems discipline, and also focuses on scheduling. We further discuss the current state of the art in scheduling in Section 5.1.
Reference: [Nah95] <author> K. Nahrstedt. </author> <title> An Architecture for End-to-End Quality of Service Provision and its Experimental Validation. </title> <type> PhD thesis, </type> <institution> University of Pennsylvania, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: We displayed approxi mately 20 frames/second with EED of 52 ms in our experimental setup. * Scenario 3 and 4: Both scenarios were rejected by the admission service because of several bottlenecks in our experimental platform and implementation <ref> [Nah95] </ref>. One unexpected bottleneck was the display of video using X Windows. We could not display frames rapidly enough without violating the tight bound (20 ms) of sending/receiving sensory data.
Reference: [NS94a] <author> K. Nahrstedt and J. Smith. </author> <title> A Service Kernel for Multimedia Endstations. </title> <booktitle> In IWACA '94 Multimedia: Advanced Teleservices and High-Speed Communication Architectures, </booktitle> <pages> pages 8-22, </pages> <address> Heidelberg, Germany, </address> <month> September </month> <year> 1994. </year> <month> 21 </month>
Reference-contexts: These multiple QoS views must map to a set of resources to be coordinated for management, so they are translated among each other. This is done by services included in the QoS Broker. For example, the translation between application and network QoS is done by the QoS Translator <ref> [NS94a] </ref>.
Reference: [NS94b] <author> M. Di Natale and J. A. Stankovic. </author> <title> Dynamic End-to-End Guarantees in Distributed Real-Time Systems. </title> <booktitle> In Proceedings of Real-Time Systems Symposium, </booktitle> <pages> pages 216-227, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: The application and network tasks share a single processor and 11 are mutually time dependent, and transport tasks are not typically strongly periodic, as is the case for any application tasks. The dependency (precedence ! <ref> [NS94b] </ref>) relation is, for example, read sample (i l ) ! send packet (k (i l 1 )) ! send packet (k (i l 2 )) if fragmentation of i l sample is required. <p> Precedence-constrained scheduling at the transport system level is discussed in [HS92, SRC85]. In both, the graph of precedence constrained modules is obtained from the semantics of the communication. A time slicing approach for application tasks with precedence relations is taken in <ref> [NS94b] </ref>. Natale and Stankovic take a task precedence graph of robotics tasks and applying breadth-first-search assign time slices to sets of tasks at different processors using laxity metric. Another approach to precedence relations with respect to reservation is shown in [And93].
Reference: [NS95] <author> K. Nahrstedt and J. M. Smith. </author> <title> The QoS Broker. </title> <journal> IEEE Multimedia, </journal> <volume> 2(1) </volume> <pages> 53-67, </pages> <month> Spring </month> <year> 1995. </year>
Reference-contexts: Both subsystems must provide guarantees useful to a scheduler for the calls/connections they service end-to-end. Therefore, they require guarantees on the resources needed for the communication. Resource guarantees are negotiated during the call establishment phase by the QoS Broker protocol <ref> [NS95] </ref> (Figure 3), which is an addition to the communication architecture. The broker orchestrates both local and global end-point resource availability. Local resource availability is achieved by using services such as translation (between application QoS and network QoS) and admission. <p> We parameterize all end-point resources through Quality of Service (QoS) parameters maintained in small databases, which represent the requirements for the resources <ref> [NS95] </ref>. The resources in each domain (application, OS, network) maintain domain-specific representations. This, of course, gives rise to multiple views of QoS. Application requirements for multimedia devices are specified through application QoS parameters.
Reference: [R.L94] <author> R.L.R Carmo et al. </author> <title> Real-Time Communication Services in a DQDB Network. </title> <booktitle> In Proceedings of Real-Time Systems Symposium, pages 249 -258, </booktitle> <address> San Juan, Puerto Rico, </address> <month> December </month> <year> 1994. </year>
Reference-contexts: However, in real communication systems this is rarely practical. We adapt a non-preemptive scheduling algorithm. Non-preemptive algorithms are relatively easy to implement, but a high priority message can be blocked by a long low priority message. This is called priority inversion <ref> [R.L94] </ref>. The application/network QoS parameters (sample/rate, packet/rate, importance, sample size, packet size) are mapped onto the system parameters (1) task priorities, (2) task periods, and (3) buffer space requirements.
Reference: [SKG91] <author> L. Sha, M. H. Klein, and J. B. Goodenough. </author> <title> Rate Monotonic Analysis for Real-Time Systems. </title> <booktitle> In Foundations of Real-Time Computing, Scheduling and Resource Management, </booktitle> <pages> pages 129-156. </pages> <publisher> Kluwer Academic Publisher, Norwell, </publisher> <year> 1991. </year>
Reference-contexts: Both algorithms, for preemptive and non-preemptive tasks, have been studied <ref> [LSD89, SLR86, SKG91] </ref>, weakening the assumptions of Liu and Layland [LL73]. One important assumption remains and that is that the tasks are independent.
Reference: [SLR86] <author> L. Sha, J. P. Lehoczky, and R. Rajkumar. </author> <title> Solution of some Practical Problems in Prioritized Preemptive Scheduling. </title> <booktitle> In IEEE-Real-Time Systems Symposium, </booktitle> <pages> pages 181-191, </pages> <address> New Orleans, </address> <year> 1986. </year>
Reference-contexts: Both algorithms, for preemptive and non-preemptive tasks, have been studied <ref> [LSD89, SLR86, SKG91] </ref>, weakening the assumptions of Liu and Layland [LL73]. One important assumption remains and that is that the tasks are independent.
Reference: [SRC85] <author> J. A. Stankovic, K. Ramamritham, and S. Cheng. </author> <title> Evaluation of a Flexible Task Scheduling Algorithm for Distributed Hard Real-Time Systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 34(12) </volume> <pages> 1130-1143, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: For OMEGA, there is a synchronization relation between application and network tasks processing the same packet. This is a special case of a synchronization relation, a precedence relation, which adds ordering constraints and thus loses equivalence. Precedence-constrained scheduling at the transport system level is discussed in <ref> [HS92, SRC85] </ref>. In both, the graph of precedence constrained modules is obtained from the semantics of the communication. A time slicing approach for application tasks with precedence relations is taken in [NS94b].
Reference: [SRL90] <author> L. Sha, R. Rajkumar, and J.P. Lehoczky. </author> <title> Priority Inheritance Protocols: An Aroach to Real-Time Synchronization. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(9) </volume> <pages> 1175-1185, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: The synchronization problem was further investigated in the context of priority-driven preemptive scheduling in <ref> [SRL90] </ref>. What can happen is that due to synchronization, one task with lower priority working in critical region can block tasks with higher priority. One approach to solve the problem is to use the priority inheritance protocols in existing synchronization primitives.
Reference: [ST93] <author> J. M. Smith and C. Brendan S. Traw. </author> <title> Giving Applications Access to Gbit/s Networking. </title> <journal> IEEE Network, </journal> <pages> pages 44-52, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: The upper bound of available aggregate throughput at the end-point is determined by the network host interface and its device driver. For example, in our experimental system the ATM host interface (hardware) provides a transmission rate of 155 Mbps, however, the ATM transport subsystem after overhead provides 135 Mbps <ref> [ST93] </ref>.
Reference: [TTCM92] <author> H. Tokuda, Y. Tobe, S. T. C. Chou, and J. M. F. Moura. </author> <title> Continuous Media Communication with Dynamic QOS Control Using ARTS with an FDDI Network. </title> <booktitle> In ACM SIGCOMM 92, </booktitle> <pages> pages 88-98, </pages> <address> Baltimore, MD, </address> <year> 1992. </year> <month> 22 </month>
Reference-contexts: Anderson provided a uniform theoretical framework and model, called Metascheduler, for resource reservation to achieve application-to-application guarantees [And93]. In practice, however, the applications and real-time computing are still not fully integrated with the real-time communication. Some orchestration between operating system (OS) and network resources has been tried (e.g., <ref> [TTCM92] </ref>), but relatively little orchestration among all three types of resources (multimedia devices, OS resources, and network resources) [And93]. Unfortunately, availability of these resources is interdependent when guarantees are required.
References-found: 21

