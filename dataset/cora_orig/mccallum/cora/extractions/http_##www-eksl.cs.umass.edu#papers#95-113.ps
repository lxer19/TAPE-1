URL: http://www-eksl.cs.umass.edu/papers/95-113.ps
Refering-URL: http://eksl-www.cs.umass.edu/publications.html
Root-URL: 
Title: Fault Identification in Computer Networks: A Review and a New Approach  
Author: Tim Oates 
Address: Box 34610 Amherst, MA 01003-4610  
Affiliation: Computer Science  Experimental Knowledge Systems Laboratory Computer Science Department, LGRC University of Massachusetts  
Pubnum: Technical Report 95-113  
Abstract: As computer networks increase in size, heterogeneity, complexity and pervasiveness, effective management of such networks simultaneously becomes more important and more difficult. This paper explores in detail one aspect of network management, fault identification. Fault identification is the process whereby the existence and nature of network faults are ascertained. Characteristics of the fault identification problem are explored and existing approaches are surveyed. Interestingly, much of the work in this area makes use of techniques from Artificial Intelligence, especially expert systems. Features of the fault identification problem that make it is amenable to AI approaches and resistant to more traditional algorithmic solutions are examined. Finally, a new approach to fault identification is proposed that employs an algorithm for finding dependencies among values in multiple streams of data over time. The new approach is compared to existing approaches, and it advantages and disadvantages are weighed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Cynthia Bournellis. </author> <title> Internet '95. </title> <booktitle> Internet World, </booktitle> <volume> 6(11) </volume> <pages> 47-52, </pages> <year> 1995. </year>
Reference-contexts: The phenomenal growth of the Internet in recent years provides a clear example of the extent to which the use of computer networks is becoming ubiquitous <ref> [1] </ref>. In July of 1993, there were 1.8 million hosts on the Internet. That number rose to 3.2 million in July of 1994, and climbed to 6.6 million in July of 1995.
Reference: [2] <author> J. Case, M. Fedor, M. Schoffstall, and J. Davin. </author> <title> A simple network management protocol. Request for Comments 1157, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: The specification of the above object and 169 others constitute the contents of the Internet standard MIB-II. Network management stations and network elements communicate via the Internet standard Simple Network Management Protocol (SNMP) <ref> [2] </ref>. SNMP operates on top of the User Datagram Protocol (UDP), a connectionless protocol that does not guarantee datagram delivery. Network management services are often most crucial during times of network stress, and the designers of SNMP felt that the use of connection oriented protocols (e.g.
Reference: [3] <author> Robert N. Cronk, Paul H. Callan, and Lawrence Bernstein. </author> <title> Rule based expert systems for network management and operations: An introduction. </title> <journal> IEEE Network, </journal> <volume> 2(5) </volume> <pages> 7-23, </pages> <year> 1993. </year>
Reference-contexts: The complexity of computer networks and the time critical nature of management decisions make network management a domain that is difficult for humans. Expert systems have achieved performance equivalent to that of human experts in a number of domains, including certain aspects of network management <ref> [3] </ref>. However, the dynamic nature of computer networks often makes the knowledge contained in expert systems brittle. That is, such knowledge quickly becomes out of date and ineffective as network topology, composition and usage change over time. <p> Expert systems employ generic reasoning engines to operate on rule bases that embody domain specific expert knowledge. They have enjoyed considerable success in at least three areas of network management: maintenance, provisioning and administration <ref> [3] </ref>. Maintenance and administration include facets of fault management such as monitoring, troubleshooting, diagnosis, traffic management and fault remediation. The most common application of expert systems is in the realm of monitoring and diagnosis, with more than a dozen deployed systems.
Reference: [4] <author> Laurence Crutcher and Aurel A. Lazar. </author> <title> Management and control for giant gigabit networks. </title> <journal> IEEE Network, </journal> <volume> 7(6) </volume> <pages> 62-71, </pages> <year> 1993. </year>
Reference-contexts: Threshold violations are often called events or alarms. To facilitate human reasoning about network state, sensor data is often presented graphically, at a very high level of abstraction. For example, links may be represented as pipes of varying diameter to indicate the amount of traffic they carry <ref> [4] </ref>. The second dimension along which approaches to fault identification often vary is the 3 degree to which the computation of I is automated. At one extreme, human users are solely responsible for ascertaining the existence of faults. <p> More sophisticated functions that are finding their way into products for network managers include browsing through information at different levels of abstraction [11, 18], interactive playback of historical state information [22, 20], and exploration of network state in virtual reality environments <ref> [4] </ref>. 4.2 Event Correlation Event correlation is the interpretation of multiple events as a unit. Although event-driven monitoring is commonly preferred to time-driven monitoring because of the inherent reduction in information, large networks may still generate thousands of events each day.
Reference: [5] <author> Robert H. Deng, Aurel A. Lazar, and Weiguo Wang. </author> <title> A probabilistic approach to fault diagnosis in linear lightwave networks. </title> <editor> In H. G. Hegering and Y. Yemini, editors, </editor> <title> Integrated Network Management, </title> <booktitle> III, </booktitle> <pages> pages 697-708. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: Finally, more sophisticated and theoretically sound approaches to reasoning about the presence of faults based on multiple sources of uncertain evidence (events from multiple points in the network) are beginning to be explored. In <ref> [5] </ref>, the authors use a Bayesian inference model in combination with a probabilistic belief updating algorithm to perform fault identification and diagnosis in Linear Lightwave Networks. 4.3 Automating Fault Identification The technology most commonly used to add significant levels of automation to network management platforms is the rule-based expert system.
Reference: [6] <author> L. Feldkuhn and J. Erickson. </author> <title> Event management as a common functional area of open systems management. </title> <booktitle> In Proceedings of the First IFIP Symposium on Integrated Network Management, </booktitle> <pages> pages 365-376, </pages> <year> 1989. </year>
Reference-contexts: One common approach is to maintain summary statistics for sensor data, such as means or cumulative values, rather than time series [33]. Another is to establish thresholds on the values of state variables for individual components, and to restrict S to contain information about violations of those thresholds <ref> [6, 19] </ref>. Threshold violations are often called events or alarms. To facilitate human reasoning about network state, sensor data is often presented graphically, at a very high level of abstraction. For example, links may be represented as pipes of varying diameter to indicate the amount of traffic they carry [4].
Reference: [7] <author> German Goldszmidt and Yechiam Yemini. </author> <title> Evaluating management decisions via delegation. </title> <editor> In H. G. Hegering and Y. Yemini, editors, </editor> <title> Integrated Network Management, </title> <booktitle> III, </booktitle> <pages> pages 247-257. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: Applications reported in the network management literature include prediction of trunk occupancy in telephone networks [8], computation of a single scalar value based on network state that indicates the overall "health" of the network <ref> [7] </ref>, and detection and prediction of chronic transmission faults in AT&T's digital communications network [31]. Decision trees are a different type 10 of function approximator that can learn mappings from network states to categorical values (typically thought of as class labels).
Reference: [8] <author> Rodney M. Goodman, Barry Ambrose, Hayes Latin, and Sandee Finnell. </author> <title> A hybrid expert system/neural network traffic advice system. </title> <editor> In H. G. Hegering and Y. Yemini, editors, </editor> <title> Integrated Network Management, </title> <booktitle> III, </booktitle> <pages> pages 607-616. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: The goal is to find patterns of activity that are indicative or predictive of network faults. Neural networks are simply function approx-imators that can be trained to identify such patterns in their input. Applications reported in the network management literature include prediction of trunk occupancy in telephone networks <ref> [8] </ref>, computation of a single scalar value based on network state that indicates the overall "health" of the network [7], and detection and prediction of chronic transmission faults in AT&T's digital communications network [31]. <p> However, when complete and informative feature sets are difficult to obtain a priori (perhaps because human experts are incapable of recognizing all of the information they use in making judgements), performance may be poor. For example, in <ref> [8] </ref> the authors used past values of trunk occupancy to predict future values, with little success. 5 A New Approach to Fault Identification In this section we propose a new approach to fault identification based on the idea of network steering.
Reference: [9] <author> Rodney M. Goodman and H. </author> <title> Latin. Automated knowledge acquisition from network management databases. </title> <editor> In I. Krishnan and W. Zimmer, editors, </editor> <title> Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 541-549. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1991. </year>
Reference-contexts: Systems reported in the literature include Function-Based Induction (FBI) [10], which learns decision trees from examples as described above and converts those trees into rule sets, and ITRULE <ref> [9] </ref>, an information theoretic learning algorithm that was used to acquire expert knowledge from trouble ticket and alarm databases for inclusion into a rule-based expert system. Machine learning approaches to acquiring knowledge for network management have met with mixed success.
Reference: [10] <author> Shri K. Goyal. </author> <title> Knowledge technologies for evolving networks. </title> <editor> In I. Krishnan and W. Zimmer, editors, </editor> <title> Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 439-461. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1991. </year>
Reference-contexts: Therefore, knowledge acquisition from human experts, a notoriously difficult task, often becomes a bottleneck. Machine learning techniques are gaining favor in the network management community as one way around the knowledge acquisition bottleneck by automating the acquisition of knowledge about dynamically changing network environments <ref> [10] </ref>. <p> For example, one could have a human expert label network state vectors according to the presence or absence of particular types of faults, and use a decision tree algorithm to learn the mapping used by the expert. Systems reported in the literature include Function-Based Induction (FBI) <ref> [10] </ref>, which learns decision trees from examples as described above and converts those trees into rule sets, and ITRULE [9], an information theoretic learning algorithm that was used to acquire expert knowledge from trouble ticket and alarm databases for inclusion into a rule-based expert system.
Reference: [11] <author> D. Haban and D. Wybranietz. </author> <title> A hybrid monitor for behavior and performance analysis of distributed systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(2), </volume> <year> 1983. </year> <month> 18 </month>
Reference-contexts: As state changes occur and the display is updated, rotating dials and sliding meters provide an intuitive sense for the way in which system state evolves over time. Examples of systems that use animation include SMART and VISIMON [22], Radar [20] and the Test and Measurement Processor (TMP) <ref> [11] </ref>. <p> Examples of systems that use animation include SMART and VISIMON [22], Radar [20] and the Test and Measurement Processor (TMP) [11]. More sophisticated functions that are finding their way into products for network managers include browsing through information at different levels of abstraction <ref> [11, 18] </ref>, interactive playback of historical state information [22, 20], and exploration of network state in virtual reality environments [4]. 4.2 Event Correlation Event correlation is the interpretation of multiple events as a unit.
Reference: [12] <author> Jayant Haritsa, Michael Ball, Nicholas Roussopoulos, John Baras, and Anindya Datta. </author> <title> Design of the MANDATE MIB. </title> <editor> In H. G. Hegering and Y. Yemini, editors, </editor> <title> Integrated Network Management, </title> <booktitle> III, </booktitle> <pages> pages 85-96. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: The amount of sensor data available in large networks can be as high as 20 - 30 gigabytes per day <ref> [12] </ref>. Clearly, some amount of abstraction and/or summarization of such vast quantities of raw data is desirable. One common approach is to maintain summary statistics for sensor data, such as means or cumulative values, rather than time series [33].
Reference: [13] <author> International Standards Organization - ISO. </author> <title> Information technology open systems interconnection common management information protocol part 1: </title> <booktitle> Specification. </booktitle> <volume> volume ISO/IEC 9596 - 1, </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: Note that this requires all network components involved in management, managers and agents, to support all seven layers of the protocol stack. The management protocol is the OSI standard Common Management Information Protocol (CMIP) <ref> [13] </ref> which is supported by the OSI standard Common Management Information Service (CMIS) [14]. Just as agents in the Internet model control MIBs, so do agents in the OSI model.
Reference: [14] <author> International Standards Organization - ISO. </author> <title> Information technology open systems interconnection common management information service definition. </title> <booktitle> volume ISO/IEC 9595, </booktitle> <month> November </month> <year> 1990. </year>
Reference-contexts: Note that this requires all network components involved in management, managers and agents, to support all seven layers of the protocol stack. The management protocol is the OSI standard Common Management Information Protocol (CMIP) [13] which is supported by the OSI standard Common Management Information Service (CMIS) <ref> [14] </ref>. Just as agents in the Internet model control MIBs, so do agents in the OSI model. However, the structure of the OSI MIB is object oriented, and is therefore very different from the Internet model of objects as collections of scalar variables.
Reference: [15] <author> Gabriel Jakboson and Mark D. Weissman. </author> <title> Alarm correlation. </title> <journal> IEEE Network, </journal> <volume> 7(6) </volume> <pages> 62-71, </pages> <year> 1993. </year>
Reference-contexts: Many network management systems in use today include event correlation components. IMPACT is a management platform devoted to correlational tasks as part of the GTE Telecommunications Services NetAlert system <ref> [15] </ref>. IMPACT includes a graphical user interface that allows domain experts to define correlation rules. The left-hand-sides of correlation rules are boolean functions of network state (events). When a left-hand-side matches the current network state (evaluates to true) the action in the rule's right-hand-side is taken.
Reference: [16] <author> J. F. Jordaan and M. E. Paterok. </author> <title> Event correlation in heterogeneous networks using the OSI management framework. </title> <editor> In H. G. Hegering and Y. Yemini, editors, </editor> <title> Integrated Network Management, </title> <booktitle> III, </booktitle> <pages> pages 683-695. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: When a left-hand-side matches the current network state (evaluates to true) the action in the rule's right-hand-side is taken. Actions can either assert or clear correlations. Correlation assertions are meta-events that can in turn be matched in the left-hand-sides of other rules. The event correlation system describe in <ref> [16] </ref> automates certain aspects of the problem by exploring hypotheses about the relationships between events to form correlations and to infer causality. <p> Our approach differs from most current approaches to event correlation in that we consider state information obtained via time-driven monitoring rather than just event driven monitoring. (The work described in <ref> [16] </ref> considers more detailed state information, but only after particular events are hypothesized to be correlated.) The former information allows reasoning about the nature of existing problems as manifested by various events; the latter information allows reasoning about the nature of problems that are likely to appear in the future and
Reference: [17] <author> J. Joyce. </author> <title> Monitoring distributed systems. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 5(2) </volume> <pages> 121-150, </pages> <year> 1987. </year>
Reference-contexts: For event traces and other types of network state information to be of use to humans in making management decisions, that information must be accessible through a user interface. One common interface is a simple textual display with appropriate formatting (e.g. indentation and highlighting) of state information <ref> [17] </ref>. Increasingly, textual displays are being replaced by graphical displays. In particular, animation is becoming common. The display contains graphical images such as dials, histograms, pie charts and meters that convey a snapshot of the network's state.
Reference: [18] <author> J. Magee Kramer and K. Ng. </author> <title> Graphical configuration programming. </title> <journal> IEEE Computing, </journal> <pages> pages 53-65, </pages> <year> 1989. </year>
Reference-contexts: Examples of systems that use animation include SMART and VISIMON [22], Radar [20] and the Test and Measurement Processor (TMP) [11]. More sophisticated functions that are finding their way into products for network managers include browsing through information at different levels of abstraction <ref> [11, 18] </ref>, interactive playback of historical state information [22, 20], and exploration of network state in virtual reality environments [4]. 4.2 Event Correlation Event correlation is the interpretation of multiple events as a unit.
Reference: [19] <author> Lee LaBarre. </author> <title> Management by exception: OSI event generation, reporting and logging. </title> <editor> In I. Krishnan and W. Zimmer, editors, </editor> <title> Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 227-242. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1993. </year>
Reference-contexts: One common approach is to maintain summary statistics for sensor data, such as means or cumulative values, rather than time series [33]. Another is to establish thresholds on the values of state variables for individual components, and to restrict S to contain information about violations of those thresholds <ref> [6, 19] </ref>. Threshold violations are often called events or alarms. To facilitate human reasoning about network state, sensor data is often presented graphically, at a very high level of abstraction. For example, links may be represented as pipes of varying diameter to indicate the amount of traffic they carry [4]. <p> Management of large volumes of event traces can itself be a difficult problem, and schemes for treating logging services as managed objects have been proposed <ref> [19] </ref>. Monitoring systems typically 8 provide facilities to combine traces, called trace merging, to give the network manager dif-ferent views of the system. For example, traces generated by individual objects may be combined to give a more global view of the behavior of a group of objects.
Reference: [20] <author> R. J. LeBlanc and A. D. Robbins. </author> <title> Event driven monitoring of distributed programs. </title> <booktitle> In Proceedings of the Fifth International Conference on Distributed Computing Systems, </booktitle> <pages> pages 512-522, </pages> <year> 1985. </year>
Reference-contexts: As state changes occur and the display is updated, rotating dials and sliding meters provide an intuitive sense for the way in which system state evolves over time. Examples of systems that use animation include SMART and VISIMON [22], Radar <ref> [20] </ref> and the Test and Measurement Processor (TMP) [11]. <p> More sophisticated functions that are finding their way into products for network managers include browsing through information at different levels of abstraction [11, 18], interactive playback of historical state information <ref> [22, 20] </ref>, and exploration of network state in virtual reality environments [4]. 4.2 Event Correlation Event correlation is the interpretation of multiple events as a unit.
Reference: [21] <author> Keith McCloghrie and Marshall T. Rose. </author> <title> Management information base network management of TCP/IP based internets. Request for Comments 1156, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Vendors and researchers were free to extend this core set of objects within the rules of the SMI standard via an "experimental" subtree of objects and a similar "enterprises" subtree. The current Internet standard MIB, MIB-II <ref> [21] </ref>, contains 170 manageable objects.
Reference: [22] <author> B. Mohr. </author> <title> SIMPLE: A performance evaluation tool for parallel and distributed systems. </title> <booktitle> In Proceedings of the Second European Distributed Memory Computing Conference, </booktitle> <pages> pages 80-89, </pages> <year> 1991. </year>
Reference-contexts: As state changes occur and the display is updated, rotating dials and sliding meters provide an intuitive sense for the way in which system state evolves over time. Examples of systems that use animation include SMART and VISIMON <ref> [22] </ref>, Radar [20] and the Test and Measurement Processor (TMP) [11]. <p> More sophisticated functions that are finding their way into products for network managers include browsing through information at different levels of abstraction [11, 18], interactive playback of historical state information <ref> [22, 20] </ref>, and exploration of network state in virtual reality environments [4]. 4.2 Event Correlation Event correlation is the interpretation of multiple events as a unit.
Reference: [23] <author> Tim Oates. </author> <title> MSDD as a tool for classification. </title> <type> EKSL Memorandum 94-29. </type> <institution> Department of Computer Science, University of Massachusetts at Amherst, </institution> <year> 1994. </year>
Reference-contexts: Previous work with the msdd algorithm has shown that it does an excellent job of finding relevant features for specific problems <ref> [23, 25] </ref>, but it is unclear whether the algorithm will be computationally feasible with extremely large state descriptors. 6 Conclusions In this paper we have explored fault identification, one aspect of the general network management problem, in great detail.
Reference: [24] <author> Tim Oates and Paul R. Cohen. </author> <title> Toward a plan steering agent: Experiments with schedule maintenance. </title> <booktitle> In Proceedings of the Second International Conference on AI Planning Systems, </booktitle> <pages> pages 134-139. </pages> <publisher> AAAI Press, </publisher> <year> 1994. </year>
Reference-contexts: In previous work with transportation networks we found that network operation can achieve higher levels of stability when pathologies are predicted and avoided rather than detected and repaired <ref> [24] </ref>. Much as drivers on busy roads monitor for potentially dangerous situations and steer their cars to avoid them, network managers should look for indications of problems that may appear on the horizon and "steer" the state of the network away from such eventualities.
Reference: [25] <author> Tim Oates and Paul R. Cohen. </author> <title> Learning planning operators with conditional and probabilistic effects. </title> <booktitle> In Working Notes of the AAAI Spring Symposium on Planning with Incomplete Information for Robot Problems, </booktitle> <pages> pages 86-94, </pages> <year> 1996. </year> <month> 19 </month>
Reference-contexts: Previous work with the msdd algorithm has shown that it does an excellent job of finding relevant features for specific problems <ref> [23, 25] </ref>, but it is unclear whether the algorithm will be computationally feasible with extremely large state descriptors. 6 Conclusions In this paper we have explored fault identification, one aspect of the general network management problem, in great detail.
Reference: [26] <author> Tim Oates, Matthew D. Schmill, Dawn E. Gregory, and Paul R. Cohen. </author> <title> Detecting complex dependencies in categorical data. </title> <editor> In Doug Fisher and Hans Lenz, editors, </editor> <title> Finding Structure in Data: </title> <journal> Artificial Intelligence and Statistics V, </journal> <pages> pages 185 - 195. </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year> <title> Includes work on an incremental algorithm not contained in workshop version. </title>
Reference-contexts: After defining the fault identification problem and reviewing existing approaches, we present a new approach based on a machine learning algorithm, called Multi-Stream Dependency Detection (msdd), that learns dependencies among values in multiple streams of data over time <ref> [26] </ref>. msdd accepts as input a history of vectors of categorical values that describe the state of the network as it changes over time. From that history, msdd produces a set of probabilistic rules that describe how various features of network state are predictive of future states of the network. <p> A dependency is an unexpectedly frequent or infrequent co-occurrence of events over time. The msdd algorithm provides a very general and efficient framework for finding dependencies among values in multiple streams of categorical data <ref> [26] </ref>. msdd is general in that it performs a simple best-first search over the space of possible dependencies, and can be adapted for specific domains by supplying domain-specific evaluation functions. msdd assumes a set of m streams, S, such that the i th stream, s i , takes values from the
Reference: [27] <author> Information processing systems Open Systems Interconnection. </author> <title> Specification of abstract syntax notation one (ASN.1). International Organization for Standardization, International Standard 8824, </title> <month> December </month> <year> 1987. </year>
Reference-contexts: In particular, objects are described with a subset of Abstract Syntax Notation 1 (ASN.1) <ref> [27] </ref> and are encoded with the Basic Encoding Rules (BER) [28]. The actual collection of objects that can be managed and the operations that can be performed on those objects is called the Management Information Base (MIB).
Reference: [28] <author> Information processing systems Open Systems Interconnection. </author> <title> Specification of basic encoding rules for abstract notation one (ASN.1). International Organization for Standardization, International Standard 8825, </title> <month> December </month> <year> 1987. </year>
Reference-contexts: In particular, objects are described with a subset of Abstract Syntax Notation 1 (ASN.1) [27] and are encoded with the Basic Encoding Rules (BER) <ref> [28] </ref>. The actual collection of objects that can be managed and the operations that can be performed on those objects is called the Management Information Base (MIB). The first Internet standard MIB [29] defined 111 manageable objects for the Internet protocol suite.
Reference: [29] <author> Marshall T. Rose. </author> <title> Management information base network management of TCP/IP based internets: MIB-II. Request for Comments 1213, </title> <month> March </month> <year> 1991. </year>
Reference-contexts: The actual collection of objects that can be managed and the operations that can be performed on those objects is called the Management Information Base (MIB). The first Internet standard MIB <ref> [29] </ref> defined 111 manageable objects for the Internet protocol suite. Vendors and researchers were free to extend this core set of objects within the rules of the SMI standard via an "experimental" subtree of objects and a similar "enterprises" subtree.
Reference: [30] <author> Marshall T. Rose and Keith McCloghrie. </author> <title> Structure and identification of management information for TCP/IP based internets. Request for Comments 1155, </title> <month> May </month> <year> 1990. </year>
Reference-contexts: Objects are defined according to the Internet standard Structure of Management Information <ref> [30] </ref> which specifies rules for naming objects, a syntax for describing the structure of objects, and rules for encoding objects for the purpose of communicating them.
Reference: [31] <author> R. Sasisekharan, V. Seshadri, and S. M. Weiss. </author> <title> Proactive network maintenance using machine learning. </title> <booktitle> In Proceedings of the 1994 Workshop on Knowledge Discovery in Databases, </booktitle> <pages> pages 453-462, </pages> <year> 1994. </year>
Reference-contexts: Applications reported in the network management literature include prediction of trunk occupancy in telephone networks [8], computation of a single scalar value based on network state that indicates the overall "health" of the network [7], and detection and prediction of chronic transmission faults in AT&T's digital communications network <ref> [31] </ref>. Decision trees are a different type 10 of function approximator that can learn mappings from network states to categorical values (typically thought of as class labels).
Reference: [32] <author> Padhraic Smyth, Joseph Statman, Gordon Oliver, and Rodney Goodman. </author> <title> Combining knowledge-based techniques and simulation with applications to communications network management. </title> <editor> In I. Krishnan and W. Zimmer, editors, </editor> <title> Integrated Network Management, </title> <booktitle> II, </booktitle> <pages> pages 505-515. </pages> <publisher> Elsevier Science Publishers B.V., </publisher> <year> 1991. </year>
Reference-contexts: Such knowledge can be used for purposes other than fault identification. For example, rules learned by msdd could serve as the initial model of a simulation of the network, which in turn could become a component of a more complete management system <ref> [32] </ref>. Finally, our approach is faithful to the Internet model in that we place all of the computational burden at the network management stations, and the state vectors required to drive the algorithm can be obtained via periodic polling (or through single requests from a MIB such as RMON [33]).
Reference: [33] <author> Steve Waldbusser. </author> <title> Remote network monitoring management information base. Request for Comments 1271, </title> <month> November </month> <year> 1991. </year> <month> 20 </month>
Reference-contexts: Clearly, some amount of abstraction and/or summarization of such vast quantities of raw data is desirable. One common approach is to maintain summary statistics for sensor data, such as means or cumulative values, rather than time series <ref> [33] </ref>. Another is to establish thresholds on the values of state variables for individual components, and to restrict S to contain information about violations of those thresholds [6, 19]. Threshold violations are often called events or alarms. <p> Finally, our approach is faithful to the Internet model in that we place all of the computational burden at the network management stations, and the state vectors required to drive the algorithm can be obtained via periodic polling (or through single requests from a MIB such as RMON <ref> [33] </ref>). Our approach is similar to some of the event correlation techniques described in Section 4.2. msdd attempts to find portions of the state of the network that are correlated in the sense that they are predictive of or may be predicted by other portions of network state.
References-found: 33

