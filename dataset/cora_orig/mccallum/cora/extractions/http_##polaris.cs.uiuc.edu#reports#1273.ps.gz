URL: http://polaris.cs.uiuc.edu/reports/1273.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/tech_reports.html
Root-URL: http://www.cs.uiuc.edu
Title: EVALUATION OF PROGRAMS AND PARALLELIZING COMPILERS USING DYNAMIC ANALYSIS TECHNIQUES  
Author: BY PAUL MARX PETERSEN 
Degree: 1989 THESIS Submitted in partial fulfillment of the requirements for the degree of Doctor of Philosophy in Computer Science in the Graduate College of the  
Address: 1986  1993 Urbana, Illinois  
Affiliation: B.S., University of Nebraska-Lincoln,  M.S., University of Illinois at Urbana-Champaign,  University of Illinois at Urbana-Champaign,  
Abstract-found: 0
Intro-found: 1
Reference: [All83] <author> John Randal Allen. </author> <title> Dependence Analysis for Subscripted Variables and Its Application to Program Transformations. </title> <type> PhD thesis, </type> <institution> Rice University, </institution> <month> April </month> <year> 1983. </year>
Reference: [All85] <institution> Alliant Computer Systems Corp., Acton, Massachusetts. FX/Series architecture manual, </institution> <year> 1985. </year>
Reference: [Amd67] <author> Gene M. </author> <title> Amdahl. Validity of the single processor approach to achieving large scale computing capabilities. </title> <booktitle> In AFIPS Proc. of the SJCC, </booktitle> <volume> volume 31, </volume> <pages> pages 483-485, </pages> <year> 1967. </year>
Reference: [ASU86] <author> Alfred. V. Aho, Ravi Sethi, and Jeffrey D. Ullman. </author> <booktitle> Compilers: Principles, Techniques and Tools. </booktitle> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1986. </year>
Reference: [ATT] <author> AT&T. </author> <title> System V Interface Definition, </title> <booktitle> third edition. </booktitle>
Reference: [Ban79] <author> Utpal Banerjee. </author> <title> Speedup of Ordinary Programs. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> October </month> <year> 1979. </year>
Reference: [Ban88] <author> Utpal Banerjee. </author> <title> Dependence Analysis for Supercomputing. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference: [BC76] <author> John L. Bruno and Edward Grady Coffman. </author> <title> Computer and Job Shop Scheduling-Theory. </title> <publisher> Wiley, </publisher> <year> 1976. </year>
Reference: [Bel66] <author> L. A. Belady. </author> <title> A Study of Replacement Algorithms for a Virtual-Storage Computer. </title> <journal> IBM Systems Journal, </journal> <volume> 5(2) </volume> <pages> 78-101, </pages> <year> 1966. </year>
Reference: [Blu92] <author> William Joseph Blume. </author> <title> Success and Limitations in Automatic Parallelization of the Perfect Benchmarks Programs. </title> <type> Master's thesis, </type> <institution> Univ. of Illinois at Urbana-Champaign, Center for Supercomputing Res. & Dev., </institution> <month> July </month> <year> 1992. </year>
Reference: [CDL88] <author> David Callahan, Jack Dongarra, and David Levine. </author> <title> Vectorizing Compilers: A Test Suite and Results. </title> <booktitle> In Proceedings of Supercomputing '88, </booktitle> <pages> pages 98-105, </pages> <month> November </month> <year> 1988. </year>
Reference: [CFR + 88] <author> Ron Cytron, Jeanne Ferrante, Barry K. Rosen, Mark N. Wegman, and F. Ken-neth Zadeck. </author> <title> An Efficient Method of Computing Static Single Assignment Form. </title> <type> Technical Report CS-88-16, </type> <institution> IBM T.J. Watson Research Center, </institution> <year> 1988. </year>
Reference: [Che89] <author> Ding-Kai Chen. </author> <title> MAXPAR: An Execution Driven Simulator for Studying Parallel Systems. </title> <type> CSRD Report no. 917, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> October </month> <year> 1989. </year> <month> 150 </month>
Reference: [CKPK90] <author> George Cybenko, Lyle Kipp, Lynn Pointer, and David Kuck. </author> <title> Supercomputer Per--formance Evaluation and the Perfect Benchmarks. </title> <type> Technical Report 965, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> March </month> <year> 1990. </year>
Reference: [CSY90] <author> Ding-Kai Chen, Hong-Men Su, and Pen-Chung Yew. </author> <title> The Impact of Syncronization and Granularity on Parallel Systems. </title> <type> CSRD Report no. 942, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> May </month> <year> 1990. </year>
Reference: [Cyt86] <author> Ron Cytron. </author> <title> DOACROSS: Beyond Vectorization for Multiprocessors. </title> <booktitle> In Proc. 1986 International Conf. on Parallel Processing, </booktitle> <pages> pages 836-844, </pages> <month> August </month> <year> 1986. </year>
Reference: [EHLP91] <author> Rudolf Eigenmann, Jay Hoeflinger, Zhiyuan Li, and David Padua. </author> <title> Experience in the Automatic Parallelization of Four Perfect-Benchmark Programs. </title> <booktitle> Proceedings of the Fourth Workshop on Languages and Compilers for Parallel Computing, </booktitle> <address> Santa Clara, CA, </address> <pages> pages 65-83, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: The results in Chapter 7 indicate that, for the Perfect Benchmarks R fl , only two of the codes will benefit substantially from the removal of the induction calculations. Through the manual optimization 146 listed in <ref> [EHLP91] </ref>, the technique of induction variable removal was cited as beneficial to the same two programs as found by our technique. Next we digress again to provide some background on the static effectiveness of data dependence tests. Another view of a program is through the eyes of a parallelizing compiler.
Reference: [Fu90] <author> Chuigang Fu. </author> <title> Evaluating the Effectiveness of Fortran Vectorizers by Measuring Total Parallelism. </title> <type> CSRD Report no. 1033, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> August </month> <year> 1990. </year>
Reference: [GKT91] <author> Gina Goff, Ken Kennedy, and Chau-Wen Tseng. </author> <title> Practical dependence testing. </title> <journal> SIGPLAN Notices, </journal> <volume> 26(6) </volume> <pages> 15-29, </pages> <month> June </month> <year> 1991. </year> <booktitle> Proceedings of the ACM SIGPLAN '91 Conference on Programming Language Design and Implementation. </booktitle>
Reference-contexts: By pipelining the computation of successive calculations of the inner dot product, we are able to achieve at least partial parallelism. 9.5 Static Results Practically all dependence analysis evaluations have been static, with potential dependences classified as dependent, independent, or statically indeterminant <ref> [GKT91, MHL91] </ref>. Chapter 8 also describes such an experiment. The criterion for the success of a dependence test has been the number of potential dependences it has been able to identify as dependent or independent. <p> is important to understanding a program, it would have a minor impact on these static results. 9.6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a ideal dependence test. This ideal test should be able to determine dependence or independence for all possible subscripts.
Reference: [GMB88] <author> John L. Gustafson, Gary R. Montry, and Robert E. Benner. </author> <title> Development of Parallel Methods for a 1024-Processor Hypercube. </title> <journal> SIAM Journal on Scientific and Statistical Computing, </journal> <volume> 9(4), </volume> <month> July </month> <year> 1988. </year>
Reference: [Hag90] <author> Mohammad Reza Haghighat. </author> <title> Symbolic Dependence Analysis For High Performance Parallelizing Compilers. </title> <type> Master's thesis, </type> <institution> Univ. of Illinois at Urbana-Champaign Center for Supercomputing Res. & Dev., </institution> <month> May </month> <year> 1990. </year>
Reference: [KBC + 74] <author> D. Kuck, P. Budnik, S-C. Chen, Jr. E. Davis, J. Han, P. Kraska, D. Lawrie, Y. Mu-raoka, R. Strebendt, and R. Towle. </author> <title> Measurements of Parallelism in Ordinary FORTRAN Programs. </title> <journal> Computer, </journal> <volume> 7(1) </volume> <pages> 37-46, </pages> <month> Jan., </month> <year> 1974. </year>
Reference: [KBG90] <author> Andrew W. Kwan, Lubomir Bic, and Daniel D. Gajski. </author> <title> Improving Parallel Program Performance Using Critical Path Analysis. </title> <editor> In D. Gelernter, A. Nicolau, and D. Padua, editors, </editor> <booktitle> Languages and Compilers for Parallel Computing, chapter 18, </booktitle> <pages> pages 358-373. </pages> <publisher> The MIT Press, </publisher> <year> 1990. </year>
Reference: [KKP + 81] <author> D. J. Kuck, R. H. Kuhn, D. A. Padua, B. Leasure, and M. Wolfe. </author> <title> Dependence Graphs and Compiler Optimizations. </title> <booktitle> Proceedings of the 8th ACM Symp. on Principles of Programming Languages (POPL), </booktitle> <pages> pages 207-218, </pages> <month> Jan., </month> <year> 1981. </year>
Reference: [KKP90] <author> Xiangyun Kong, David Klappholz, and Kleanthis Psarris. </author> <title> The I Test: A New Test for Subscript Data Dependence. </title> <booktitle> In Proc. 1990 International Conf. on Parallel Processing, </booktitle> <month> August </month> <year> 1990. </year> <month> 151 </month>
Reference: [KSC + 84] <author> David J. Kuck, Ahmed H. Sameh, Ron Cytron, Alexander V. Veidenbaum, Constan--tine D. Polychronopoulos, Gyungho Lee, Tim McDaniel, Bruce R. Leasure, Carol Beckman, James R. B. Davies, and Clyde P. Kruskal. </author> <title> The Effects of Program Restructuring, Algorithm Change, and Architecture Choice on Program Performance. </title> <booktitle> Proceedings of 1984 International Conference on Parallel Processing, </booktitle> <pages> pages 129-138, </pages> <address> Aug.21-24, </address> <year> 1984. </year>
Reference: [Kuc90] <author> Kuck & Associates, Inc. </author> <title> KAP/Concurrent User's Guide. KAI, </title> <address> Champaign, IL 61820, 1 edition, </address> <month> May </month> <year> 1990. </year> <month> #9005010. </month>
Reference: [Kum88] <author> Manoj Kumar. </author> <title> Measuring Parallelism in Computation-Intensive Science / Engineering Applications. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 37(9) </volume> <pages> 5-40, </pages> <year> 1988. </year>
Reference: [Lee80] <author> Ruby Bei-Loh Lee. </author> <title> Emperical Results on the Speed, Efficiency, Redundancy and Quality of Parallel Computations. </title> <booktitle> In Proc. 1980 International Conf. on Parallel Processing, </booktitle> <pages> pages 91-100, </pages> <month> August </month> <year> 1980. </year>
Reference: [Lev89] <author> Gary Mark Levin. </author> <title> An Introduction to ISETL Version 2.0. </title> <institution> Clarkson University, </institution> <month> October </month> <year> 1989. </year>
Reference: [LT79] <author> Thomas Lengauer and Robert Endre Tarjan. </author> <title> A Fast Algorithm for Finding Dominators in a Flowgraph. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 1(1) </volume> <pages> 121-141, </pages> <month> July </month> <year> 1979. </year>
Reference: [LYZ89] <author> Zhiyuan Li, Pen-Chung Yew, and Chuan-Qi Zhu. </author> <title> Data Dependence Analysis on Multi-dimensional Array References. </title> <booktitle> In Proc. 3rd International Conf. on Supercomputing, </booktitle> <pages> pages 215-224, </pages> <month> June </month> <year> 1989. </year>
Reference: [MHL91] <author> Dror E. Maydan, John L. Hennessy, and Monica S. Lam. </author> <title> Efficient and exact data dependence analysis. </title> <journal> SIGPLAN Notices, </journal> <volume> 26(6) </volume> <pages> 1-14, </pages> <month> June </month> <year> 1991. </year> <booktitle> Proceedings of the ACM SIGPLAN '91 Conference on Programming Language Design and Implementation. </booktitle>
Reference-contexts: By pipelining the computation of successive calculations of the inner dot product, we are able to achieve at least partial parallelism. 9.5 Static Results Practically all dependence analysis evaluations have been static, with potential dependences classified as dependent, independent, or statically indeterminant <ref> [GKT91, MHL91] </ref>. Chapter 8 also describes such an experiment. The criterion for the success of a dependence test has been the number of potential dependences it has been able to identify as dependent or independent. <p> is important to understanding a program, it would have a minor impact on these static results. 9.6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a ideal dependence test. This ideal test should be able to determine dependence or independence for all possible subscripts.
Reference: [NF84] <author> Alexandru Nicolau and Joseph A. Fisher. </author> <title> Measuring the Parallelism Available for Very Long Instruction Word Architectures. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-33(11), </volume> <month> November </month> <year> 1984. </year>
Reference: [Pad89] <author> David A. Padua. </author> <title> The Delta Program Manipulation System | Preliminary Design. </title> <type> CSRD Report no. 808, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> June </month> <year> 1989. </year>
Reference: [Par90] <institution> Parallel Computing Forum. PCF Fortran, </institution> <month> April </month> <year> 1990. </year>
Reference: [Per89] <editor> Perfect Club, et al. </editor> <title> The Perfect Club Benchmarks: Effective Performance Evaluation of Supercomputers. </title> <journal> International Journal of Supercomputer Applications, </journal> <pages> pages 5-40, </pages> <month> Fall </month> <year> 1989. </year>
Reference: [PFTV88] <author> William H. Press, Brian P. Flannery, Saul A. Teukolsky, and William T. Vetterling. </author> <title> Numerical Recipes. </title> <publisher> Cambridge University Press, </publisher> <year> 1988. </year> <month> 152 </month>
Reference: [PKL80] <author> David A. Padua, David J. Kuck, and Duncan H. Lawrie. </author> <title> High-Speed Multiprocessors and Compilation Techniques. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(9):763-776, </volume> <month> September </month> <year> 1980. </year>
Reference: [Pug91] <author> William Pugh. </author> <title> The Omega Test: A Fast and Practical Integer Programming Algorithm for Dependence Analysis. </title> <address> Supercomputing'91, </address> <year> 1991. </year>
Reference-contexts: is important to understanding a program, it would have a minor impact on these static results. 9.6 Effectiveness of Data Dependence Tests One must ask the question: Are the existing dependence tests sufficient, and if they are not, where must further effort be expended? A number of papers such as <ref> [MHL91, GKT91, Pug91] </ref> show that each of the many different alternative tests are capable of solving a number of data dependence problems. For evaluation purposes we want to use a ideal dependence test. This ideal test should be able to determine dependence or independence for all possible subscripts.
Reference: [PW86] <author> David A. Padua and Michael J. Wolfe. </author> <title> Advanced Compiler Optimizations for Supercomputers. </title> <journal> Communications of the ACM, </journal> <volume> 29(12) </volume> <pages> 1184-101, </pages> <month> December </month> <year> 1986. </year>
Reference: [SDDS86] <author> J.T. Schwartz, R.B.K. Dewar, E. Dubinsky, and E. Schonberg. </author> <title> Programming with Sets: An Introduction to Setl. </title> <publisher> Springer-Verlag, </publisher> <year> 1986. </year>
Reference: [SLY90] <author> Zhiyu Shen, Zhiyuan Li, and Pen-Chung Yew. </author> <title> An Empirical Study of FORTRAN programs for Parallelizing Compilers. </title> <type> CSRD Report no. 983, </type> <institution> University of Illinois at Urbana-Champaign, Center for Supercomp. Res.&Dev., </institution> <month> April </month> <year> 1990. </year>
Reference: [SM89] <author> Harvey M. Salkin and Kamlesh Mathur. </author> <title> Foundations of Integer Programming. </title> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference: [Sny90] <author> W. Kirk Snyder. </author> <title> The SETL2 Programming Language. </title> <institution> Courant Institute of Mathematical Sciences, </institution> <month> May </month> <year> 1990. </year>
Reference: [Tow76] <author> R. Towle. </author> <title> Control and Data Dependence for Program Transformations. </title> <type> PhD thesis, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> March </month> <year> 1976. </year>
Reference: [WB87] <author> Michael Wolfe and Utpal Banerjee. </author> <title> Data Dependence and Its Application to Parallel Processing. </title> <journal> International Journal of Parallel Processing, </journal> <month> October </month> <year> 1987. </year>
Reference: [WT92] <author> Michael Wolfe and Chau-Wen Tseng. </author> <title> The Power Test for Data Dependence. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(5) </volume> <pages> 591-601, </pages> <month> September </month> <year> 1992. </year> <month> 153 </month>
References-found: 48

