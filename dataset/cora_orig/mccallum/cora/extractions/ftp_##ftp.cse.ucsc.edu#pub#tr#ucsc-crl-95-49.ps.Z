URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-95-49.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: Planar Interchangeable 2-Terminal Routing  
Author: Man-Fai Yu Joel Darnauer Wayne Wei-Ming Dai 
Keyword: package routing, planar routing, routability, network flow, exchangeable pins  
Address: Santa Cruz, CA 95064 USA  
Affiliation: Baskin Center for Computer Engineering Information Sciences University of California, Santa Cruz  
Date: October 19, 1995  
Pubnum: UCSC-CRL-95-49  
Abstract: Many practical routing problems such as BGA, PGA and test fixture routing involve routing two-terminal nets on a plane with exchangeable pins. In this paper, we unify these different problems as instances of the Planar Interchangeable 2-Terminal Routing (PI2TR) problem. We formulate the problem as flows in a routing network. Secondly, we show that PI2TR is NP-complete by reduction from satisfiability. Finally, we show experimental evidence that a simple min-cost flow heuristic considering only the most important cuts in the design can quickly produce routable results in most practical cases. The flow formulation can be generalized to multiple layers with no additional vias. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M.-F. Yu and W. W.-M. Dai, </author> <title> "Pin assignment and routing on a single-layer pin grid array," </title> <booktitle> in Proc. 1st Asia and South Pacific Design Automation Conf., (Makuhari, Japan), </booktitle> <pages> pp. 203-208, </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1995. </year>
Reference-contexts: Often a pin assignment is chosen that cannot be realized. Rather than performing pin assignment and routing as two separate steps, what is needed is a router that performs these two steps simultaneously. Specific package routers like PGA or BGA routers <ref> [1, 2, 3, 4] </ref> have been developed that take advantage of special geometries of their respective problems and the exchangeable freedom of the pins.
Reference: [2] <author> M.-F. Yu and W. W.-M. Dai, </author> <title> "Single-layer fanout routing and routability analysis for ball grid arrays," </title> <booktitle> in IEEE/ACM Intl. Conf. </booktitle> <address> CAD-95, (San Jose, CA), </address> <publisher> IEEE Computer Society Press, </publisher> <month> November </month> <year> 1995. </year>
Reference-contexts: Often a pin assignment is chosen that cannot be realized. Rather than performing pin assignment and routing as two separate steps, what is needed is a router that performs these two steps simultaneously. Specific package routers like PGA or BGA routers <ref> [1, 2, 3, 4] </ref> have been developed that take advantage of special geometries of their respective problems and the exchangeable freedom of the pins. <p> Although these methods are exceptionally efficient, they have a number of limitations: * They rely on the symmetry of the arrays and rings to generate solutions and cannot cope with missing, skewed, or off-grid pads. * Even in these very symmetric cases, these package routers <ref> [3, 2] </ref> may still produce designs that are 2 times more dense than the best possible designs.
Reference: [3] <author> J. Darnauer and W. W.-M. Dai, </author> <title> "Fast pad redistribution from periphery-io to area-io," </title> <booktitle> in Proc. IEEE Multi-Chip Module Conf., </booktitle> <address> (Santa Cruz, CA), </address> <pages> pp. 38-43, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: Often a pin assignment is chosen that cannot be realized. Rather than performing pin assignment and routing as two separate steps, what is needed is a router that performs these two steps simultaneously. Specific package routers like PGA or BGA routers <ref> [1, 2, 3, 4] </ref> have been developed that take advantage of special geometries of their respective problems and the exchangeable freedom of the pins. <p> Although these methods are exceptionally efficient, they have a number of limitations: * They rely on the symmetry of the arrays and rings to generate solutions and cannot cope with missing, skewed, or off-grid pads. * Even in these very symmetric cases, these package routers <ref> [3, 2] </ref> may still produce designs that are 2 times more dense than the best possible designs.
Reference: [4] <author> C. Ying and J. Gu, </author> <title> "Automated pin grid array package routing on multilayer ceramic substrates," </title> <journal> IEEE trans. VLSI Systems, </journal> <volume> vol. 1, no. 4, </volume> <pages> pp. 571-575, </pages> <year> 1993. </year>
Reference-contexts: Often a pin assignment is chosen that cannot be realized. Rather than performing pin assignment and routing as two separate steps, what is needed is a router that performs these two steps simultaneously. Specific package routers like PGA or BGA routers <ref> [1, 2, 3, 4] </ref> have been developed that take advantage of special geometries of their respective problems and the exchangeable freedom of the pins.
Reference: [5] <author> F. M. Maley, </author> <title> Single-layer wire routing and compaction. </title> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: The problem is now to define the set of detailed routings that are potential solutions, and then to choose one that is feasible. Maley <ref> [5] </ref> showed that the routability of any detailed routing can be checked by checking the feasibility of its corresponding topological routing. A topological routing is the equivalence class of detailed routing under homotopic transformation. <p> We delay the discussion of specific cases to Section 4 where a specific algorithm is developed. The overall topological routing can be formed by patching all the triangles together. 2 2.2 Routability of the topological routing Maley <ref> [5] </ref> showed that only a certain set of cuts, the decisive cutset, needs to be checked for a topological routing to determine its routability. The basic idea is that the safety of the shortest cut between two features implies the safety of all the cuts between them.
Reference: [6] <author> W. W.-M. Dai, R. Kong, and M. Sato, </author> <title> "Routability of a rubber-band sketch," </title> <booktitle> in Proc. 28th Design Automation Conf., </booktitle> <address> (San Francisco, CA), </address> <pages> pp. 45-48, </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year>
Reference-contexts: Because there are efficient algorithms for finding a correct detailed routing from a topological routing <ref> [6] </ref>, we will consider a feasible topological routing a solution for PI2TR. 2 Network flow formulation of PI2TR 1 For simplicity, we will assume for now that the wires are permitted to run at any angle, although the formulation could include another parameter to characterize the wiring style. 4 2. <p> Experimental Results 5 Experimental Results Fig. 11 shows a small PGA with its triangulation and its routing done by the flow router. After routing, the intermediate points can be relaxed using methods proposed in <ref> [12, 13, 6, 14] </ref>. 6. Conclusion 15 The router is used on a 444-pin pin grid array package with staggered pins, a 240-pin ball grid array package and a 400-connection industry example. (Fig. 12 & 13). <p> In all examples a topological routing is created and transformed to a detailed routing with methods described by Dai et al <ref> [6] </ref>. All the examples are completed without design rule violations.
Reference: [7] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-completeness. </title> <address> San Francisco: </address> <publisher> W. H. Freeman, </publisher> <year> 1979. </year>
Reference-contexts: section we will show that PI2TR is in fact NP-complete so no polynomial time algorithm that finds a routable topological routing is likely to be found. 3 PI2TR is NP-Complete In this section we describe a proof of NP-completeness of PI2TR by reduction from satisfiability using the method of components <ref> [7] </ref>. PI2TR is in NP as was discussed in Section 1. It remains to show that PI2TR is complete for NP. Since 3-SAT is NP-complete, PI2TR is complete for NP if any instance of 3-SAT can be reduced to an instance of PI2TR.
Reference: [8] <author> Y. Lu, </author> <title> "Dynamic constrained delaunay triangulation and application to multichip module layout," </title> <type> Master's thesis, </type> <institution> University of California, Santa Cruz, </institution> <year> 1991. </year>
Reference-contexts: We use the min-cost formulation. The router has three steps: 10 4. The Flow Router 1. Building the routing network. 2. Solving the min-cost max-flow problem. 3. Transforming the solution into a topological routing. 4.1 Building the routing network We used the incremental Delaunay triangulation described by Lu <ref> [8] </ref> to construct the triangulation, although any other algorithms are equally good. The Delaunay triangulation of N = jA [B [Oj points can be constructed in O (N log N ) time [9]. The dual of the triangulation can be constructed in O (N ) time.
Reference: [9] <author> F. P. Preparata and M. I. Shamos, </author> <title> Computational Geometry: An Introduction. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: The Delaunay triangulation of N = jA [B [Oj points can be constructed in O (N log N ) time <ref> [9] </ref>. The dual of the triangulation can be constructed in O (N ) time. Additional edges can be added in O (jA [ Bj) time.
Reference: [10] <author> C. H. Papadimitriou and K. Steiglitz, </author> <title> Combinatorial Optimization: Algorithms and Complexity. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall, Inc, </publisher> <year> 1982. </year>
Reference-contexts: After the routing network is constructed, we run a min-cost max-flow algorithm on the net work. The algorithm we used is based on the `buildup' algorithm described in Papadimitrou and Steiglitz <ref> [10] </ref>. Informally, we try to find a minimum total cost assignment of flows for a given flow. In this case, the given flow is the maximum flow because the flow is equal to the number of con nections, i.e. jAj.
Reference: [11] <author> R. E. Tarjan, </author> <title> Data Structures and Network Algorithms. </title> <address> Phildelphia, PA.: </address> <publisher> SIAM Publications, </publisher> <year> 1983. </year>
Reference-contexts: If we cannot push jAj flow across the network, the design is unroutable. This is because a bottleneck of cuts in the triangulation is overflowed. This algorithm requires a shortest path algorithm that handles negative-cost edges. We used the algorithm described in Tarjan <ref> [11] </ref>. This algorithm runs in O (jV jjEj) time. Note that the flow 12 4. The Flow Router on an edge can be positive or negative. The direction of the flow is always from the source to the sink.
Reference: [12] <author> D. Staepelaere, J. Jue, T. Dayan, and W. W.-M. Dai, </author> <title> "Surf:a rubber-band routing system for multichip modules," </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <month> December </month> <year> 1993. </year> <note> 18 References </note>
Reference-contexts: Experimental Results 5 Experimental Results Fig. 11 shows a small PGA with its triangulation and its routing done by the flow router. After routing, the intermediate points can be relaxed using methods proposed in <ref> [12, 13, 6, 14] </ref>. 6. Conclusion 15 The router is used on a 444-pin pin grid array package with staggered pins, a 240-pin ball grid array package and a 400-connection industry example. (Fig. 12 & 13).
Reference: [13] <author> W. W.-M. Dai, T. Dayan, and D. Staepelaere, </author> <title> "Topological routing in surf: Generating a rubber-band sketch," </title> <booktitle> in Proc. 28th Design Automation Conf., </booktitle> <address> (San Francisco, CA), </address> <pages> pp. 39-44, </pages> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1991. </year>
Reference-contexts: Experimental Results 5 Experimental Results Fig. 11 shows a small PGA with its triangulation and its routing done by the flow router. After routing, the intermediate points can be relaxed using methods proposed in <ref> [12, 13, 6, 14] </ref>. 6. Conclusion 15 The router is used on a 444-pin pin grid array package with staggered pins, a 240-pin ball grid array package and a 400-connection industry example. (Fig. 12 & 13).
Reference: [14] <author> W. W.-M. Dai, R. Kong, J. Jue, and M. Sato, </author> <title> "Rubber band routing and dynamic data representation," </title> <booktitle> in Proc. 1990 Int'l Conf. on CAD, </booktitle> <address> (San Jose, CA), </address> <pages> pp. 52-55, </pages> <publisher> IEEE Computer Society, </publisher> <month> November </month> <year> 1990. </year>
Reference-contexts: Experimental Results 5 Experimental Results Fig. 11 shows a small PGA with its triangulation and its routing done by the flow router. After routing, the intermediate points can be relaxed using methods proposed in <ref> [12, 13, 6, 14] </ref>. 6. Conclusion 15 The router is used on a 444-pin pin grid array package with staggered pins, a 240-pin ball grid array package and a 400-connection industry example. (Fig. 12 & 13).
References-found: 14

