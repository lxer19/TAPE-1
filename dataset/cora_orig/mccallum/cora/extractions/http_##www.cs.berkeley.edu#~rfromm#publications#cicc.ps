URL: http://www.cs.berkeley.edu/~rfromm/publications/cicc.ps
Refering-URL: http://www.cs.berkeley.edu/~rfromm/
Root-URL: 
Title: Testability Features and the Testability Access of the Alpha 21164 Microprocessor  
Author: Dilip K. Bhavsar and Richard M. Fromm 
Address: Hudson, MA 01749 USA  
Affiliation: Digital Semiconductor Digital Equipment Corporation  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Edmondson, J., and P. Rubinfeld, </author> <title> An overview of the 21164 Microarchitecture, </title> <booktitle> Hot Chips Conf., </booktitle> <month> August </month> <year> 1994. </year>
Reference: [2] <author> Rubinfeld, P. </author> <title> I, The Next Generation Implementation of Alpha, </title> <booktitle> 7th Microprocessor Forum, </booktitle> <month> October </month> <year> 1994. </year>
Reference: [3] <author> Bowhill, W. J., et al, </author> <title> A 300MHz 64b Quad-Issue CMOS RISC Microprocessor, </title> <booktitle> Intl Solid State Circuits Conf., </booktitle> <month> February </month> <year> 1995. </year>
Reference: [4] <author> Bhavsar, D. K., and J. H. Edmondson, </author> <title> Testability Strategy of the Alpha AXP 21164 Microprocessor, </title> <booktitle> Intl Test Conf., </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: Chip quality, fault coverage and test pattern development, testability insertion effort, and the manufacturability of the chip within the existing manufacturing test environment were all serious concerns. On the Alpha 21164, these challenges were met by employing a comprehensive custom design for testability strategy <ref> [4] </ref>. As part of this strategy, the testability features were added to tackle each specific critical testability and manufacturability goal. <p> Results and Conclusions The design effort and the risks in adding the testability features on the Alpha 21164 chip were minimized by choosing a conservative design strategy and by providing a well characterized implementation infrastructure <ref> [4] </ref>. All of the test logic was implemented with fully static logic. Most of the control logic was implemented automatically with logic and layout synthesis tools. Critical paths and timing problems were avoided by adding nonfunctional dummy states where appropriate without adding state bits to state machines.
References-found: 4

