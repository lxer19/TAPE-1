URL: ftp://ftp.media.mit.edu/pub/agents/interface-agents/coll-agents.ps
Refering-URL: http://cs.gmu.edu/syllabus/syllabi-fall96/inft910-tecuci.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: yezdi@media.mit.edu  memetral@media.mit.edu  pattie@media.mit.edu  
Title: Collaborative Interface Agents  
Author: Yezdi Lashkari Max Metral Pattie Maes 
Address: Cambridge, MA 02139  Cambridge, MA 02139  Cambridge, MA 02139  
Affiliation: MIT Media Laboratory,  MIT Media Laboratory,  MIT Media Laboratory,  
Abstract: Interface agents are semi-intelligent systems which assist users with daily computer-based tasks. Recently, various researchers have proposed a learning approach towards building such agents and some working prototypes have been demonstrated. Such agents learn by `watching over the shoulder' of the user and detecting patterns and regularities in the user's behavior. Despite the successes booked, a major problem with the learning approach is that the agent has to learn from scratch and thus takes some time becoming useful. Secondly, the agent's competence is necessarily limited to actions it has seen the user perform. Collaboration between agents assisting different users can alleviate both of these problems. We present a framework for multi-agent collaboration and discuss results of a working prototype, based on learning agents for electronic mail. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Dent, L.; Boticario, J.; McDermott, J.; Mitchell, T.; and Zabowski, D. </author> <year> 1992. </year> <title> A personal learning apprentice. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> 96-103. </pages> <address> San Jose, Califor-nia: </address> <publisher> AAAI Press. </publisher>
Reference: <author> Dorner, S. </author> <year> 1992. </year> <title> Eudora Reference Manual. </title> <publisher> Qual-comm Inc. </publisher>
Reference-contexts: Thus each agent also learns which of its peers is a reliable `expert' vis-a-vis its user for different types of situations. A Single User's Agent This paper describes experiments conducted with implemented interface agents for the electronic mail domain for a commercial email application, Eu-dora <ref> (Dorner 1992) </ref>. This section describes an individual email agent. Each user's interface agent learns by continuously "looking over the shoulder" of the user as the user is performing actions.
Reference: <author> Finin, T.; Weber, J.; Wiederhold, G.; Genesereth, M.; Fritzson, R.; McKay, D.; McGuire, J.; Pelavin, R.; Shapiro, S.; and Beck, C. </author> <year> 1993. </year> <title> Specification of the KQML agent-communication language. </title> <note> Technical Report EIT TR 92-04 (Revised June 15, </note> <year> 1993), </year> <title> Enterprise Integration Technologies, </title> <address> Palo Alto, CA. </address>
Reference-contexts: The Ontolingua tools (Gruber 1993) and the work on the KQML Agent-Communication Language <ref> (Finin et al. 1993) </ref> provide a way for agents using different ontologies to communicate effectively with each other and may be used to implement our collaborative architecture. Our research represents an actually implemented system in a real domain that shows the benefits of collaboration amongst agents.
Reference: <author> Gruber, T. </author> <year> 1993. </year> <title> A translation approach to portable ontology specification. </title> <journal> Knowledge Acquisition 5(2) </journal> <pages> 199-220. </pages>
Reference-contexts: While the analytic frameworks above are important, most are based on restrictive assumptions about the domain or the agents' capabilities and assume that the reason agents cooperate is because they need access to a shared resource or have multiple overlapping goals. The Ontolingua tools <ref> (Gruber 1993) </ref> and the work on the KQML Agent-Communication Language (Finin et al. 1993) provide a way for agents using different ontologies to communicate effectively with each other and may be used to implement our collaborative architecture.
Reference: <author> Hermens, L., and Schlimmer, J. </author> <year> 1993. </year> <title> A machine learning apprentice for the completion of repetitive forms. </title> <booktitle> In Proceedings of the Ninth IEEE Conference on Artificial Intelligence for Applications, </booktitle> <pages> 164-170. </pages> <address> Orlando, Florida: </address> <publisher> IEEE Press. </publisher>
Reference: <author> Kozierok, R., and Maes, P. </author> <year> 1993. </year> <title> A learning interface agent for scheduling meetings. </title> <booktitle> In Proceedings of the ACM SIGCHI International Workshop on Intelligent User Interfaces, </booktitle> <pages> 81-88. </pages> <address> Orlando, Florida: </address> <publisher> ACM Press. </publisher>
Reference-contexts: To address the problems of the rule-based and knowledge-engineered approaches, machine learning techniques have been employed by (Kozierok & Maes 1993; Maes & Kozierok 1993; Hermens & Schlimmer 1993; Dent et al. 1992) and others. In the Calendar Agent <ref> (Kozierok & Maes 1993) </ref>, memory-based reasoning is combined with rules to model each user's meeting scheduling habits. Results described in (Kozierok & Maes 1993) show that the learning approach achieves a level of personalization impossible with knowledge engineering, and without the user intervention required by rule-based systems. <p> In the Calendar Agent <ref> (Kozierok & Maes 1993) </ref>, memory-based reasoning is combined with rules to model each user's meeting scheduling habits. Results described in (Kozierok & Maes 1993) show that the learning approach achieves a level of personalization impossible with knowledge engineering, and without the user intervention required by rule-based systems. <p> In addition, the agent can calculate a confidence in its prediction by considering such factors as the number of situations in its memory and the proximity of the culled situations to the new situation. For a more detailed description, see <ref> (Kozierok & Maes 1993) </ref>. A situation is specified in terms of a set of fields. MBR measures situation proximity by applying a weighted sum of the distance between the corresponding fields of two situations. In the e-mail domain, appropriate fields would be the originator of the message, the subject, etc. <p> This feedback is accomplished in three ways: an activity monitor, an explanation facility, and an interface to browse and edit the agent's memory. The activity monitor presents a small caricature to the user at all times. The caricature depicts states such as alert, thinking, and working, similar to <ref> (Kozierok & Maes 1993) </ref>. An explanation facility provides English descriptions of why the agent suggested an action. An agent starts out with no experience. As messages arrive and its user takes action, its memory grows. <p> Currently, several users are actively making use of the agent on their actual mail. While the computations are intensive, we have achieved satisfactory performance on most high end Macintoshes. The performance of MBR in interface agents has been documented in <ref> (Kozierok & Maes 1993) </ref>. We wish to show that multi-agent collaboration strictly improves upon results obtained from single agent systems. Namely, multi-agent collaboration should steepen the learning curve and improve the handling of entirely novel messages.
Reference: <author> Lai, K.; Malone, T.; and Yu, K. </author> <year> 1988. </year> <title> Object lens: A spreadsheet for cooperative work. </title> <journal> ACM Transactions on Office-Information Systems 5(4) </journal> <pages> 297-326. </pages>
Reference-contexts: We present a collaborative framework to help alleviate these problems. When faced with an unfamiliar situation, an agent consults its peers who may have the necessary experience to help it. Previous interface agents have employed either end-user programming and/or knowledge engineering for knowledge acquisition. For example, <ref> (Lai, Malone, & Yu 1988) </ref> have "semi-autonomous agents" that consist of a collection of user-programmed rules for processing information related to a particular task.
Reference: <author> Maes, P., and Kozierok, R. </author> <year> 1993. </year> <title> Learning interface agents. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> 459-465. </pages> <address> Wash-ington D.C.: </address> <publisher> AAAI Press. </publisher>
Reference-contexts: To address the problems of the rule-based and knowledge-engineered approaches, machine learning techniques have been employed by (Kozierok & Maes 1993; Maes & Kozierok 1993; Hermens & Schlimmer 1993; Dent et al. 1992) and others. In the Calendar Agent <ref> (Kozierok & Maes 1993) </ref>, memory-based reasoning is combined with rules to model each user's meeting scheduling habits. Results described in (Kozierok & Maes 1993) show that the learning approach achieves a level of personalization impossible with knowledge engineering, and without the user intervention required by rule-based systems. <p> In the Calendar Agent <ref> (Kozierok & Maes 1993) </ref>, memory-based reasoning is combined with rules to model each user's meeting scheduling habits. Results described in (Kozierok & Maes 1993) show that the learning approach achieves a level of personalization impossible with knowledge engineering, and without the user intervention required by rule-based systems. <p> In addition, the agent can calculate a confidence in its prediction by considering such factors as the number of situations in its memory and the proximity of the culled situations to the new situation. For a more detailed description, see <ref> (Kozierok & Maes 1993) </ref>. A situation is specified in terms of a set of fields. MBR measures situation proximity by applying a weighted sum of the distance between the corresponding fields of two situations. In the e-mail domain, appropriate fields would be the originator of the message, the subject, etc. <p> This feedback is accomplished in three ways: an activity monitor, an explanation facility, and an interface to browse and edit the agent's memory. The activity monitor presents a small caricature to the user at all times. The caricature depicts states such as alert, thinking, and working, similar to <ref> (Kozierok & Maes 1993) </ref>. An explanation facility provides English descriptions of why the agent suggested an action. An agent starts out with no experience. As messages arrive and its user takes action, its memory grows. <p> Currently, several users are actively making use of the agent on their actual mail. While the computations are intensive, we have achieved satisfactory performance on most high end Macintoshes. The performance of MBR in interface agents has been documented in <ref> (Kozierok & Maes 1993) </ref>. We wish to show that multi-agent collaboration strictly improves upon results obtained from single agent systems. Namely, multi-agent collaboration should steepen the learning curve and improve the handling of entirely novel messages.
Reference: <author> Rosenschein, J., and Genesereth, M. </author> <year> 1985. </year> <title> Deals among rational agents. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 91-99. </pages> <address> Los Angeles, CA: </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Stanfill, C., and Waltz, D. </author> <year> 1986. </year> <title> Toward memory-based reasoning. </title> <journal> Communications of the ACM 29(12) </journal> <pages> 1213-1228. </pages>
Reference: <author> Zlotkin, G., and Rosenschein, J. </author> <year> 1993. </year> <title> A domain theory for task oriented negotiation. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> 416-422. </pages> <address> Chambery, France: </address> <publisher> Morgan Kaufmann. </publisher>
References-found: 11

