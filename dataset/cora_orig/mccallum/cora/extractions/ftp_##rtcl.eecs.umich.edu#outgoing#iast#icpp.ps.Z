URL: ftp://rtcl.eecs.umich.edu/outgoing/iast/icpp.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/routing/
Root-URL: http://www.cs.umich.edu
Email: Email: fiast,kgshing@eecs.umich.edu  
Title: SEQUENCING OF CONCURRENT COMMUNICATION TRAFFIC IN A MESH MULTICOMPUTER WITH VIRTUAL CHANNELS  
Author: Bing-rung Tsai and Kang G. Shin 
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of EECS, The University of Michigan  
Abstract: Under the fixed-path e-cube routing in mesh multicomputers, we evaluate the performance of several low-overhead packet sequencing and flit multiplexing methods. In the presence of concurrent inter-node communication traffic, we found that unless proper packet sequencing is employed, adding more communication resources, such as links and buffers, can actually degrade the network performance. A good packet-sequencing policy combined with proper flit multiplexing is shown to improve performance by more than 30%. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. J. Dally, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: 1 Introduction The use of virtual channels multiplexed over each physical channel was introduced as a mechanism to accomplish deadlock-freedom by placing routing restrictions at intermediate nodes <ref> [1] </ref>. Virtual channels were also found to improve the network throughput via the increased sharing of each physical channel and the resulting reduction of packet blocking [2]. <p> That is, when there are multiple virtual channels per physical channel, packets of these virtual channels are allowed to time-multiplexed over the physical channel, thus blocking less number of packets (waiting for the physical channel to be available). Pipelined-communication mechanisms, such as wormhole routing <ref> [1] </ref>, operate based on the principle that the overall packet latency can be reduced by pipelining the transmission of each packet when the packet must traverse multiple intermediate nodes. A packet is broken up into small flow-control digits or flits, each of which serves as the basic unit of communication. <p> In f-meshes, e-cube routing is used. In w-meshes, a modified version of e-cube routing is implemented to utilize the extra communication links so that each packet is routed via a shortest path. Deadlock-freedom is ensured by using the scheme proposed in <ref> [1] </ref>. That is, the virtual channels over each uni-directional physical channel are divided into high and low channels. Routing restrictions are then imposed such that either a high channel or a low channel, but not both, is allocated to each given packet. <p> This can further reduce the waste of physical bandwidth. When CTS lookahead is implemented, the receiving-end of each virtual channel must send a status bit back to the sending-end. These signals can be sent via separate wires <ref> [1] </ref>, which requires extra hardware.
Reference: [2] <author> W. J. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> vol. 3, no. 2, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Virtual channels were also found to improve the network throughput via the increased sharing of each physical channel and the resulting reduction of packet blocking <ref> [2] </ref>. That is, when there are multiple virtual channels per physical channel, packets of these virtual channels are allowed to time-multiplexed over the physical channel, thus blocking less number of packets (waiting for the physical channel to be available). <p> A fixed number of uni-directional virtual channels are time-multiplexed over each physical channel. Though most of our discussion may apply to general networks, we will focus primarily on the mesh network topology, which has been widely used in evaluating the performance of virtual-channel networks <ref> [2, 3] </ref>. Especially, this paper builds on the work by Dally [2] and Gaughan [4], where wormhole routing was found to significantly reduce packet latency if it is combined with appropriate bandwidth allocation and flow control schemes. <p> Though most of our discussion may apply to general networks, we will focus primarily on the mesh network topology, which has been widely used in evaluating the performance of virtual-channel networks [2, 3]. Especially, this paper builds on the work by Dally <ref> [2] </ref> and Gaughan [4], where wormhole routing was found to significantly reduce packet latency if it is combined with appropriate bandwidth allocation and flow control schemes. We extend their work by focusing on bandwidth allocation through packet sequencing and flit multiplexing. <p> We extend their work by focusing on bandwidth allocation through packet sequencing and flit multiplexing. In the previous related work <ref> [2, 4] </ref>, communication traffic in a multicomputer network is often modeled as a number of mutually-independent, steady flows. However, this type of communication traffic does not always represent the real-world situation well, because network communication tends to be bursty. <p> Like packet sequencing, flit multiplexing can be priority-based. LP multiplexing awards priority to the virtual channel containing a packet of larger remaining bandwidth requirement. By contrast, SP multiplexing gives priority to the one of smaller remaining bandwidth requirement. As pointed out in <ref> [2] </ref>, these multiplexing methods can all be implemented with combinational logic which operates on the contents of the status register associated with each virtual channel. The added hardware cost should not be a concern if the number of virtual channels is not too excessive. <p> CTS lookahead can effectively minimize the waste of physical channel cycles, but its higher implementation cost may not be justifiable if the margin of improvement is small. In [4], it is shown that with pipelined circuit-switching, CTS is not very effective. As for wormhole routing, it was shown in <ref> [2] </ref> that in a network with 32-bit flits and v = 15, without adding extra wires for the lookahead signals, an additional 12.5% traffic overhead is required to implement CTS lookahead. Therefore, CTS lookahead should provide at least 12.5% improvement to justify its implementation overhead.
Reference: [3] <author> W. J. Dally, </author> <title> "Performance analysis of k-ary n-cube interconnection networks," </title> <journal> IEEE Trans. on Computers, </journal> <volume> vol. 39, no. 6, </volume> <pages> pp. 775-785, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: A fixed number of uni-directional virtual channels are time-multiplexed over each physical channel. Though most of our discussion may apply to general networks, we will focus primarily on the mesh network topology, which has been widely used in evaluating the performance of virtual-channel networks <ref> [2, 3] </ref>. Especially, this paper builds on the work by Dally [2] and Gaughan [4], where wormhole routing was found to significantly reduce packet latency if it is combined with appropriate bandwidth allocation and flow control schemes.
Reference: [4] <author> P. T. Gaughan and S. Yalamanchili, </author> <title> "Analytical models of bandwidth allocation in pipelined k-ary n-cubes," </title> <note> submitted to publication, </note> <year> 1993. </year>
Reference-contexts: Though most of our discussion may apply to general networks, we will focus primarily on the mesh network topology, which has been widely used in evaluating the performance of virtual-channel networks [2, 3]. Especially, this paper builds on the work by Dally [2] and Gaughan <ref> [4] </ref>, where wormhole routing was found to significantly reduce packet latency if it is combined with appropriate bandwidth allocation and flow control schemes. We extend their work by focusing on bandwidth allocation through packet sequencing and flit multiplexing. <p> We extend their work by focusing on bandwidth allocation through packet sequencing and flit multiplexing. In the previous related work <ref> [2, 4] </ref>, communication traffic in a multicomputer network is often modeled as a number of mutually-independent, steady flows. However, this type of communication traffic does not always represent the real-world situation well, because network communication tends to be bursty. <p> CTS lookahead can effectively minimize the waste of physical channel cycles, but its higher implementation cost may not be justifiable if the margin of improvement is small. In <ref> [4] </ref>, it is shown that with pipelined circuit-switching, CTS is not very effective.
Reference: [5] <author> T. Tang, </author> <title> "Parallel sorting on the hypercube concurrent processor," </title> <booktitle> in Proc. of the 5th Distributed Memory Computing Conference, </booktitle> <pages> pp. 237-240, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Packet arrival times are often clustered in a short period, which can temporarily saturate the network. Also, these packets may not be independent, and their delivery time as a whole is crucial to the overall performance. This tendency is exemplified by such algorithms as parallel sorting <ref> [5] </ref> and parallel Fourier Transform [6]. In this paper, we define a communication mission to be a set of packets to be exchanged among the task modules which have already been assigned to processing nodes in the network.
Reference: [6] <author> L. Desbat and D. Trystram, </author> <title> "Implementing the discrete Fourier Transform on a hypercube vector-parallel computer," </title> <booktitle> in Proc. of the 4th Distributed Memory Computing Conference, </booktitle> <pages> pp. 407-410, </pages> <month> March </month> <year> 1989. </year>
Reference-contexts: Also, these packets may not be independent, and their delivery time as a whole is crucial to the overall performance. This tendency is exemplified by such algorithms as parallel sorting [5] and parallel Fourier Transform <ref> [6] </ref>. In this paper, we define a communication mission to be a set of packets to be exchanged among the task modules which have already been assigned to processing nodes in the network.
Reference: [7] <author> B. R. Tsai and K. G. Shin, </author> <title> "Combined routing and scheduling of concurrent communication traffic in hypercube multicomputers," </title> <note> submitted to publication, </note> <year> 1993. </year>
Reference-contexts: The simulation results discussed thus far are summarized as follows. * SF packet sequencing outperforms LF in almost all situations. This is surprising since in <ref> [7] </ref>, LF sequencing is shown to be much more effective than SF in a network with large-buffer switching methods like store-and-forward and virtual cut-through.
References-found: 7

