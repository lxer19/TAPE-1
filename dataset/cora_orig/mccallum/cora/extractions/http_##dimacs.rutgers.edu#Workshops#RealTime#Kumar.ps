URL: http://dimacs.rutgers.edu/Workshops/RealTime/Kumar.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/RealTime/program.html
Root-URL: http://www.cs.rutgers.edu
Title: Comparative Performance Analysis of Versions of TCP in a Local Network with a Lossy Link  
Author: Anurag Kumar 
Date: October 22, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> L. Brakmo and L. Peterson, </author> <title> "TCP Vegas: End-to-End Congestion Avoidance on a Global Internet," </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> Vol. 13, No. 8, </volume> <pages> pp. 1465-1480, </pages> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Our model includes the duplicate acknowledgement threshold used by the fast-retransmit feature, and we can study the effect of reducing this threshold. A threshold of 1 is similar to one of the modifications to Reno proposed in the TCP-Vegas proposals (see <ref> [1] </ref>). A simple packet loss model is assumed; with probability p a packet transmitted by the IS transmitter is lost; the losses are independent, i.e., we have a Bernoulli loss model. <p> Setting the duplicate ack threshold for fast-retransmission to 1 can be expected to double the throughput of the basic fast-retransmit protocols for the error probability range (:05; :2). This is related to one of the proposals in TCP-Vegas (see <ref> [1] </ref>). 5. Finally, we have observed that for the purpose of computing the throughput of the protocols with the fast-retransmit feature, it is important to capture the fast-retransmit probability well, and it is sufficient to use crude approximations for the mean cycle times.
Reference: [2] <author> K. Fall, and S. Floyd, </author> <title> "Comparisons of Tahoe, Reno, and Sack TCP," </title> <type> manuscript, </type> <institution> ftp://ftp.ee.lbl.gov, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: 1 Introduction In this work (see full report in [3]), we develop models and analyses for studying the bulk throughput of four versions of TCP; namely, OldTahoe (the original protocol), Tahoe, Reno, and NewReno <ref> [2] </ref>. We assume a local network scenario, in which a host on a local area network (LAN) is transmitting bulk data to a mobile host connected to the LAN by a wireless link. Our models incorporate important aspects, such as, slow-start and congestion avoidance, coarse timers, fast-retransmit, and fast recovery. <p> These results of ours corroborate the observations made by Fall and Floyd <ref> [2] </ref>. 4. Setting the duplicate ack threshold for fast-retransmission to 1 can be expected to double the throughput of the basic fast-retransmit protocols for the error probability range (:05; :2). This is related to one of the proposals in TCP-Vegas (see [1]). 5.
Reference: [3] <author> Anurag Kumar, </author> <title> "Comparative performance of versions of TCP in a local network with a lossy link," </title> <institution> WINLAB Technical Report-TR129, Rutgers University, </institution> <month> October </month> <year> 1996. </year>
Reference-contexts: 1 Introduction In this work (see full report in <ref> [3] </ref>), we develop models and analyses for studying the bulk throughput of four versions of TCP; namely, OldTahoe (the original protocol), Tahoe, Reno, and NewReno [2].
Reference: [4] <author> T.V. Lakshman and U. Madhow, </author> <title> "Performance analysis of window-based flow control using TCP/IP: the effect of high bandwidth-delay products and random loss," </title> <journal> IFIP Transactions C-26, High Performance Networking V, </journal> <pages> pp. 135-150, </pages> <publisher> North-Holland, </publisher> <year> 1994. </year>
Reference-contexts: Our results show how the throughput degrades, for each version, with increasing packet loss probability. For a given loss probability, our results quantify the performance improvement provided by each version. As in [5] and <ref> [4] </ref>, our analysis is also based on a study of the cyclical evolution of the TCP transmission process. Working with a Markov model, we analyse the congestion window process, as well as the duration of the cycle times. <p> For the fast retransmission probability, we found it necessary to use the complete distribution of the congestion window at loss instants, whereas for the mean cycle times an approximation based on a simple fixed-point idea (also reported in <ref> [4] </ref>) worked well. Subsequent to the work reported above, we have developed a throughput analysis of TCP with a correlated (Markov) packet loss model on the wireless link; the parameters of the Markov loss model are obtained from a Raleigh fading model.
Reference: [5] <author> P.P. Mishra, D. Sanghi, and S.K. Tripathi, </author> <title> "TCP Flow Control in Lossy Networks: Analysis and Enhancements," </title> <booktitle> in IFIP Transactions C-13 Computer Networks, Architecture and Applications, </booktitle> <publisher> S.V. </publisher> <editor> Raghavan, G.v. Bochmann, and G. Pujolle (eds.), </editor> <publisher> Elsevier North Holland, </publisher> <pages> pp. 181-193, </pages> <year> 1993. </year>
Reference-contexts: Our results show how the throughput degrades, for each version, with increasing packet loss probability. For a given loss probability, our results quantify the performance improvement provided by each version. As in <ref> [5] </ref> and [4], our analysis is also based on a study of the cyclical evolution of the TCP transmission process. Working with a Markov model, we analyse the congestion window process, as well as the duration of the cycle times.
Reference: [6] <author> R.W. Wolff, </author> <title> Stochastic Modelling and the Theory of Queues, </title> <publisher> Prentice Hall, </publisher> <year> 1990. </year> <month> 3 </month>
Reference-contexts: Working with a Markov model, we analyse the congestion window process, as well as the duration of the cycle times. Formulating the problem as the reward rate in a Markov Renewal-Reward process <ref> [6] </ref>, we can obtain the long run average bulk throughput of the protocol. In the local network scenario the major concern is not to keep the round trip pipe full, but to avoid a coarse timeout.
References-found: 6

