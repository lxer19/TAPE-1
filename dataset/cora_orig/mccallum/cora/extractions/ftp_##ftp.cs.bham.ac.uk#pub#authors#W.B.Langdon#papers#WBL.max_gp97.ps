URL: ftp://ftp.cs.bham.ac.uk/pub/authors/W.B.Langdon/papers/WBL.max_gp97.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Analysis of the MAX Problem in Genetic Programming hold only in some cases, in
Author: John R. Koza and Kalyanmoy Deb and Marco Dorigo and David B. Fogel W. B. Langdon R. Poli tions. 
Keyword: Price's Covariance and Selection Theorem  
Address: Birmingham B15 2TT, UK  Birmingham B15 2TT, UK  
Affiliation: School of Computer Science, The University of Birmingham,  School of Computer Science, The University of Birmingham,  
Note: Genetic Programming 1997: Proceedings of the Second International Conference on Genetic Programming  and Max Garzon and Hitoshi Iba and Rick L. Riolo (eds), Morgan Kaufman  is experimentally tested on GP populations. It is shown to  
Email: W.B.Langdon@cs.bham.ac.uk  R.Poli@cs.bham.ac.uk  
Web: http://www.cs.bham.ac.uk/~wbl  http://www.cs.bham.ac.uk/~rmp  
Abstract: We present a detailed analysis of the evolution of genetic programming (GP) populations using the problem of finding a program which returns the maximum possible value for a given terminal and function set and a depth limit on the program tree (known as the MAX problem). We confirm the basic message of [ Gathercole and Ross, 1996 ] that crossover together with program size restrictions can be responsible for premature convergence to a suboptimal solution. We show that this can happen even when the population retains a high level of variety and show that in many cases evolution from the sub-optimal solution to the solution is possible if sufficient time is allowed. In both cases theoretical models are presented and compared with actual runs. 
Abstract-found: 1
Intro-found: 1
Reference: [ Altenberg, 1994 ] <author> Lee Altenberg. </author> <title> The evolution of evolvability in genetic programming. </title> <editor> In Kenneth E. Kinnear, Jr., editor, </editor> <booktitle> Advances in Genetic Programming, chapter 3, </booktitle> <pages> pages 47-74. </pages> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: Royal Trees [ Tackett, 1995; Punch et al., 1996 ] ) and applying population genetics to GP <ref> [ Altenberg, 1994; Altenberg, 1995 ] </ref> . <p> While <ref> [ Altenberg, 1994 ] </ref> says it applies to genetic algorithms (GAs) this (and [ Langdon, 1996 ] ) are the first experimental tests of its applicability to GP.
Reference: [ Altenberg, 1995 ] <author> Lee Altenberg. </author> <title> The Schema Theorem and Price's Theorem. </title> <editor> In L. Darrell Whitley and Michael D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms 3, </booktitle> <pages> pages 23-49. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Royal Trees [ Tackett, 1995; Punch et al., 1996 ] ) and applying population genetics to GP <ref> [ Altenberg, 1994; Altenberg, 1995 ] </ref> .
Reference: [ Blickle and Thiele, 1995 ] <author> Tobias Blickle and Lothar Thiele. </author> <title> A mathematical analysis of tournament selection. </title> <editor> In Larry J. Eshelman, editor, </editor> <booktitle> Genetic Algorithms: Proceedings of the Sixth International Conference, </booktitle> <pages> pages 9-16. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The chance of an individual i being selected by a tournament is given by its rank r i within the population of size p and the tournament size t by the formula <ref> [ Blickle and Thiele, 1995; Langdon, 1996 ] </ref> (r i =p) t (r i1 =p) t In a large and diverse population this can be approxi mated by t (r i =p) t1 (5) The expected number of children produced by individuals of rank R or less is p i=1 r
Reference: [ Bohm and Geyer-Schulz, 1996 ] <author> Walter Bohm and An-dreas Geyer-Schulz. </author> <title> Exact uniform initialization for genetic programming. </title> <editor> In Richard K. Belew and Michael Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms IV, </booktitle> <address> University of San Diego, CA, USA. </address>
Reference-contexts: Half are created as full trees of this maximum depth and half are created using a grow method which creates trees of different shapes. ( [ Iba, 1996 ] and <ref> [ Bohm and Geyer-Schulz, 1996 ] </ref> discuss alternative means of generating random trees for use as the initial population in GP runs.) With D = 8 about 1 8 (i.e. 1 D ) of trees will be created Table 3: Variety in initial populations, Predicted v.
Reference: [ Gathercole and Ross, 1996 ] <author> Chris Gathercole and Peter Ross. </author> <title> An adverse interaction between crossover and restricted tree depth in genetic programming. </title> <editor> In John R. Koza, David E. Goldberg, David B. Fo-gel, and Rick L. Riolo, editors, </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference. [ Gathercole, </booktitle> <year> 1997 </year> <month> ] 16 Jan 97, </month> <title> Private communication. </title>
Reference-contexts: Royal Trees [ Tackett, 1995; Punch et al., 1996 ] ) and applying population genetics to GP [ Altenberg, 1994; Altenberg, 1995 ] . In this paper we combine the later two approaches by applying Price's Theorem from theoretical biology, plus other detailed analysis, to the MAX problem. <ref> [ Gathercole and Ross, 1996 ] </ref> introduce the MAX problem to GP to highlight deficiencies in the standard GP crossover operator which result from the practical requirement to limit the size of evolved programs. <p> The MAX problem has known optimal solutions which are composed of regularly arranged sub trees or building blocks. Despite this GP finds solving larger versions of the MAX problem difficult. In this paper we extend <ref> [ Gathercole and Ross, 1996 ] </ref> by considering bigger trees, different selection pressures, different initialisations of the population, measuring the frequency with which the depth limit affects individual crossovers, measuring population variety and the number of steps required to solve the MAX problem. <p> Qualitative models of crossover and population variety are presented and compared to measurement. We give an improved explanation for the premature convergence noted by <ref> [ Gathercole and Ross, 1996 ] </ref> and this leads to the realisation that there are two separate reasons why GP finds the MAX problem hard. Firstly the tendency for GP populations to converge in the first few generations to suboptimal solutions from which they can never escape. <p> Section 2 describes the various MAX problems used in these experiments. Section 3 describes the GP used in our experiments, Section 4 gives the results obtained and provides a detailed analysis and comparison with <ref> [ Gathercole and Ross, 1996 ] </ref> . Section 5 shows typically the population retains a high level of diversity and presents models of the variety in the initial population and its subsequent evolution. <p> the behaviour of subsequent generations of the MAX problem. 2 The MAX Problem In the MAX problem "the task is to find the program which returns the largest value for a given terminal and function set and with a depth limit, D, where the root node counts as depth 0" <ref> [ Gathercole and Ross, 1996, page 291 ] </ref> . In this paper we use the function set f +, fi g and there is one terminal 0.5. For a tree to produce the largest value + nodes must be used with 0.5 to assemble subtrees with the value of 2.0. <p> I.e. there can be no introns. 3 GP Parameters Our GP system was set up to be the same as given in <ref> [ Gathercole and Ross, 1996 ] </ref> . The details are given in Table 1, parameters not shown are as [ Koza, 1994, page 655 ] . <p> The percentage of unsuccessful runs is given in Figure 2. These results are similar to those in <ref> [ Gathercole and Ross, 1996 ] </ref> except [ Gathercole and Ross, 1996, Figures 3 and 4 ] do not contain data for depths of 7 or 8. <p> The percentage of unsuccessful runs is given in Figure 2. These results are similar to those in [ Gathercole and Ross, 1996 ] except <ref> [ Gathercole and Ross, 1996, Figures 3 and 4 ] </ref> do not contain data for depths of 7 or 8. <p> Only 0.74% of crossovers resulted in a taller subtree replacing a shorter one. These occur throughout most of the run, half occurring by generation 85 and the last in generation 441 (the mean generation is 105). 2 4.2 Trapping by Suboptimal Solutions <ref> [ Gathercole and Ross, 1996, page 295 ] </ref> suggest the reason why GP finds the MAX problem hard is that the population quickly finds suboptimal solutions which contain + nodes near the root of the tree. To improve on such solutions crossover must replace them with fi nodes. <p> NB programs with a few + nodes near the root can readily reproduce copies of themselves but their children where a + is replaced with a fi are unlikely to survive and so the GP can remain trapped for long periods. 4.3 Modelling the Rate of Improvement <ref> [ Gathercole and Ross, 1996, page 295 ] </ref> says "if there are no fi nodes in any tree at a particular high level, it [is] now impossible for crossover to introduce a fi node to this level; the population has converged to being duplicates of a sub-optimal tree, and no further <p> We suspect this is common to many GP problems. In the case of the MAX problem early high fitness individuals may use + functions to form comparatively large values. Later generations can then yield still larger values by joining subtrees composed of + nodes with fi functions. However, as <ref> [ Gathercole and Ross, 1996 ] </ref> point out, the depth restriction and the mechanics of the crossover operator make the insertion of fi nodes near the root of large trees difficult. <p> As described in <ref> [ Gathercole and Ross, 1996 ] </ref> GP populations have a significant risk of losing vital components of the solutions at the very beginning of the run and these components can not be recovered later in the run. <p> Where solution is possible, the later stages of GP runs are effectively performing randomised hill climbing and so solution time grows exponentially with depth of the solution. We have extended the analysis of the difficulties crossover experiences presented in <ref> [ Gathercole and Ross, 1996 ] </ref> to include a quantitative model of the later evolution of MAX problem populations. Comparison with experimental results indicate the model gives a reasonable indication of the likely rate of improvement. While [ Gathercole and Ross, 1996 ] suggest that MAX problem populations converge, measurements indicate <p> We have extended the analysis of the difficulties crossover experiences presented in <ref> [ Gathercole and Ross, 1996 ] </ref> to include a quantitative model of the later evolution of MAX problem populations. Comparison with experimental results indicate the model gives a reasonable indication of the likely rate of improvement. While [ Gathercole and Ross, 1996 ] suggest that MAX problem populations converge, measurements indicate after many generations up to two thirds of the population are unique depending upon maximum depth and selection pressure. A model of this based on the interaction between crossover and the depth restriction has been presented.
Reference: [ Holland, 1992 ] <author> John H. Holland. </author> <title> Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, </title> <booktitle> Control and Artificial Intelligence. </booktitle> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: However such a theory is of great importance to the field as a whole. Work so far has been principly split between extending the Schema Theorem <ref> [ Holland, 1992 ] </ref> from Genetic Algorithms to GP [ Koza, 1992; O'Reilly and Oppacher, 1995; Whigham, 1995; Poli and Langdon, 1997 ] , studying benchmark problems (e.g.
Reference: [ Iba, 1996 ] <editor> Hitoshi Iba. </editor> <title> Random tree generation of genetic programming. </title> <editor> In Hans-Michael Voigt, Werner Ebeling, Ingo Rechenberg, and Hans-Paul Schwefel, editors, </editor> <booktitle> Parallel Problem Solving from Nature IV, Proceedings of the International Conference on Evolutionary Computation. </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Half are created as full trees of this maximum depth and half are created using a grow method which creates trees of different shapes. ( <ref> [ Iba, 1996 ] </ref> and [ Bohm and Geyer-Schulz, 1996 ] discuss alternative means of generating random trees for use as the initial population in GP runs.) With D = 8 about 1 8 (i.e. 1 D ) of trees will be created Table 3: Variety in initial populations, Predicted v.
Reference: [ Koza, 1992 ] <editor> John R. Koza. </editor> <booktitle> Genetic Programming: On the Programming of Computers by Natural Selection. </booktitle>
Reference-contexts: In this paper two sets of experiments are presented. In the first the usual ramped half-and-half method <ref> [ Koza, 1992, page 93 ] </ref> which creates random trees with depths between 2 and 6 (i.e. D = 1 : : : 5) was used. (However the initial trees obeyed the problem specific height restriction).
Reference: [ Koza, 1994 ] <author> John R. Koza. </author> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title>
Reference-contexts: I.e. there can be no introns. 3 GP Parameters Our GP system was set up to be the same as given in [ Gathercole and Ross, 1996 ] . The details are given in Table 1, parameters not shown are as <ref> [ Koza, 1994, page 655 ] </ref> . On each version of the problem 50 independent runs were conducted (with 6 depths and two types of initialisation in the three bigger problems and 7 tourna ment sizes this makes a total of 3150 runs).
Reference: [ Langdon, 1996 ] <author> W. B. Langdon. </author> <title> Data Structures and Genetic Programming. </title> <type> PhD thesis, </type> <institution> University College, </institution> <address> London, </address> <month> 27 September </month> <year> 1996. </year>
Reference-contexts: The chance of an individual i being selected by a tournament is given by its rank r i within the population of size p and the tournament size t by the formula <ref> [ Blickle and Thiele, 1995; Langdon, 1996 ] </ref> (r i =p) t (r i1 =p) t In a large and diverse population this can be approxi mated by t (r i =p) t1 (5) The expected number of children produced by individuals of rank R or less is p i=1 r <p> While [ Altenberg, 1994 ] says it applies to genetic algorithms (GAs) this (and <ref> [ Langdon, 1996 ] </ref> ) are the first experimental tests of its applicability to GP. In our GP the size of the population does not change so z = 1 and the expected number of children an individual has is given by its rank. <p> We have used Price's Theorem to analyse why this happens and which runs will be effected. (Similar effects are reported in <ref> [ Langdon, 1996 ] </ref> ). 2. Where solution is possible, the later stages of GP runs are effectively performing randomised hill climbing and so solution time grows exponentially with depth of the solution.
Reference: [ O'Reilly and Oppacher, 1995 ] <author> Una-May O'Reilly and Franz Oppacher. </author> <title> The troubling aspects of a building block hypothesis for genetic programming. </title> <editor> In L. Dar-rell Whitley and Michael D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms 3, </booktitle> <pages> pages 73-88. </pages>
Reference: [ Poli and Langdon, 1997 ] <author> Riccardo Poli and W. B. Langdon. </author> <title> A new schema theory for genetic programming with one-point crossover and point mutation. </title> <type> Technical Report CSRP-97-3, </type> <institution> School of Computer Science, The University of Birmingham, </institution> <address> B15 2TT, UK, </address> <month> January </month> <year> 1997. </year> <note> To be presented at GP-97. </note>
Reference: [ Price, 1970 ] <author> George R. Price. </author> <title> Selection and covariance. </title> <journal> Nature, </journal> <volume> 227, August 1 </volume> <pages> 520-521, </pages> <year> 1970. </year>
Reference-contexts: The anticipated benefit of reduced premature convergence does not happen (cf. lower curves on Figure 8). Perhaps selection pressure below that given by a tournament of two is needed? 7 Price's Covariance and Selection The orem Price's Covariance and Selection Theorem <ref> [ Price, 1970 ] </ref> from population genetics relates the change in frequency of a gene in a population from one generation to the next, to the covariance of the gene's frequency in the original population with the number of offspring pro of failed runs with no fi in a higher level. <p> or for any linear combination of genes at any number of loci, holds for any sort of dominance or epistasis (non-linear interaction between genes), for sexual or asexual reproduction, for random or non-random mating, for diploid, haploid or polyploid species, and even for imaginary species with more than two sexes" <ref> [ Price, 1970 ] </ref> . While [ Altenberg, 1994 ] says it applies to genetic algorithms (GAs) this (and [ Langdon, 1996 ] ) are the first experimental tests of its applicability to GP.
Reference: [ Punch et al., 1996 ] <author> William F. Punch, Dou-glas Zongker, and Erik D. Goodman. </author> <title> The royal tree problem, a benchmark for single and multiple population genetic programming. </title> <editor> In Peter J. Angeline and K. E. Kinnear, Jr., editors, </editor> <booktitle> Advances in Genetic Programming 2, chapter 15, </booktitle> <pages> pages 299-316. </pages>
Reference-contexts: Work so far has been principly split between extending the Schema Theorem [ Holland, 1992 ] from Genetic Algorithms to GP [ Koza, 1992; O'Reilly and Oppacher, 1995; Whigham, 1995; Poli and Langdon, 1997 ] , studying benchmark problems (e.g. Royal Trees <ref> [ Tackett, 1995; Punch et al., 1996 ] </ref> ) and applying population genetics to GP [ Altenberg, 1994; Altenberg, 1995 ] .
Reference: [ Tackett, 1995 ] <author> Walter Alden Tackett. </author> <title> Greedy recombination and genetic search on the space of computer programs. </title> <editor> In L. Darrell Whitley and Michael D. Vose, editors, </editor> <booktitle> Foundations of Genetic Algorithms 3. </booktitle>
Reference-contexts: Work so far has been principly split between extending the Schema Theorem [ Holland, 1992 ] from Genetic Algorithms to GP [ Koza, 1992; O'Reilly and Oppacher, 1995; Whigham, 1995; Poli and Langdon, 1997 ] , studying benchmark problems (e.g. Royal Trees <ref> [ Tackett, 1995; Punch et al., 1996 ] </ref> ) and applying population genetics to GP [ Altenberg, 1994; Altenberg, 1995 ] .
Reference: [ Whigham, 1995 ] <author> P. A. Whigham. </author> <title> A schema theorem for context-free grammars. </title> <booktitle> In 1995 IEEE Conference on Evolutionary Computation, </booktitle> <pages> pages 178-181. 9 </pages>
References-found: 16

