URL: http://www.cs.nyu.edu/phd_students/fuchs/dsl.ps
Refering-URL: http://www.cs.nyu.edu/phd_students/fuchs/index.html
Root-URL: http://www.cs.nyu.edu
Email: matt@wdi.disney.com  
Title: Domain Specific Languages for ad hoc Distributed Applications  
Author: Matthew Fuchs Walt Disney Imagineering 
Address: Flower St., POB 25020 Glendale, CA 91221-5020  
Affiliation: 1401  
Abstract: The Internet provides a medium to combine human and computational entities together for ad hoc cooperative transactions. To make this possible, there must be a framework allowing all parties (human or other) to communicate with each other. The current framework makes a fundamental distinction between human agents (who use HTML) and computational agents, which use CORBA or COM. We propose DSLs as a means to allow all kinds of agents to "speak the same language." In particular we adopt some ideas (and syntax) from SGML/XML, especially the strict separation of syntax and semantics, so each agent in a collaboration is capable of applying a behavioral semantics appropriate to its role (buyer, seller, editor). We develop the example of a card game, where the syntax of the language itself implies some of the semantics of the game. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. L. Austin. </author> <title> How to Do Things with Words. </title> <publisher> Oxford University Press, </publisher> <year> 1962. </year>
Reference-contexts: Any particular site might actually have many machines defined for the different ways they might want to handle the incoming information. Our approach is a social model. Exchanged strings represent actions by the various parties. The closest analogy is with speech acts, as first discussed by Austin <ref> [1] </ref> and then extended by Searle [12]. Traditional logic has always considered sentences to be statements about the state of the world. As such they could be assigned truth values based on their correspondance with actual fact.
Reference: [2] <author> Edward Cannon. </author> <title> EDI Guide: a step by step approach. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: With the strong break between language definition and implementation semantics, we can map these languages into GUIs for human agents and functional interfaces for objects, so this approach subsumes both HTML and IDL and presents a unified communication paradigm. This approach has many similarities to EDI <ref> [2] </ref>. In EDI the messages are standardized, so they could be considered a DSL, and each party is free to process them any way they require, so long as it is congruent with the abstract semantics, as determined by the international standards bodies.
Reference: [3] <author> Robert Doorenbos et al. </author> <title> A scalable comparison-shopping agent for the world-wide web. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents. ACM, </booktitle> <year> 1997. </year>
Reference-contexts: The automatic weaving element of AOP is very attractive, as aspects could represent additional information the client could get from the server about the message without being completely dependent on the server for all aspects of processing. The Shopbot <ref> [3] </ref> takes an explicitly AI view to integrating Web pages into a particular application. Shopbot is a shopping agent for the World Wide Web. Using a set of heuristics, it can learn how a shopping site is organized and help a user find products in a specific domain.
Reference: [4] <author> Matthew Fuchs. </author> <title> Beyond the write-only web. </title> <type> Technical report, </type> <year> 1995. </year> <note> http://cs.nyu.edu/phd students/fuchs/in-long.ps. </note>
Reference-contexts: Because the interface between the local applet and server is essentially private, and because a malicious applet can internally alter itself so the malicious code is garbage collected, the client has good reason to know exactly what purchase information passed to the server <ref> [4] </ref>. 3 DSLs for distributed applications We consider domain specific languages as the means to resolve the heterogeneity issue.
Reference: [5] <author> Matthew Fuchs. Dreme: </author> <title> for Life in the Net. </title> <type> PhD thesis, </type> <address> New York University, </address> <year> 1995. </year>
Reference-contexts: There is no real communication between the information from the server and the client's environment beyond the browser. When all code and all applications are developed under a central control, the heterogeneity problem doesn't exist. In our early work with mobile objects <ref> [5] </ref> we developed both display markup languages and object interfaces; as long as all the code was developed by a single source, all went well. However, our goal was to support ad hoc cooperation, and these approaches did not scale well across the range of agents.
Reference: [6] <author> KQML Advisory Group. </author> <title> An overview of kqml: A knowledge query and manipulation language. </title> <type> Technical report, </type> <institution> University of Maryland, </institution> <year> 1992. </year>
Reference-contexts: that due to the lexical scoping it is possible to have one event for a card when it appears during the deal, and another when it is part of play. 7 Related Work Another approach to communicating among agents, either contrasting or complimentary depending on implementation, is given by KIF/KQML <ref> [7, 6] </ref>. This effort has grown out of the AI segment of the agent community. KIF is a predicate calculus based language for encoding ontologies exhaustive analyses of the information in a particular domain. When used as a communication language, small Lisp-like programs are sent and executed remotely.
Reference: [7] <author> Thomas Gruber. </author> <title> A translation approach to portable ontology specifications. </title> <type> Technical Report KSL 92-71, </type> <institution> Knowledge Systems Laboratory, </institution> <year> 1993. </year>
Reference-contexts: that due to the lexical scoping it is possible to have one event for a card when it appears during the deal, and another when it is part of play. 7 Related Work Another approach to communicating among agents, either contrasting or complimentary depending on implementation, is given by KIF/KQML <ref> [7, 6] </ref>. This effort has grown out of the AI segment of the agent community. KIF is a predicate calculus based language for encoding ontologies exhaustive analyses of the information in a particular domain. When used as a communication language, small Lisp-like programs are sent and executed remotely.
Reference: [8] <author> Gregor Kiczales et al. </author> <title> Aspect oriented programming. </title> <booktitle> In Proceedings of DSL '97. </booktitle> <institution> University of Illinois Computer Science, </institution> <year> 1997. </year> <note> http://www-sal.cs.uiuc.edu/ kamin/dsl. </note>
Reference-contexts: KQML is a protocol for wrapping messages among agents heavily influenced by speech acts. Although it was developed with KIF in mind, it is agnostic concerning the language of the message and so could work with DSLs as well. We see this approach as very compatible with aspect-oriented programming <ref> [8] </ref> and jargons [10]. Both of these look at decomposing a problem into a number of different aspects (or jargons), each with its own domain and language. A complete application is built by composing the program from statements in the different domain specific languages.
Reference: [9] <author> David A. Ladd and J. Christopher Ramming. </author> <title> Programming the web: An application-oriented language for hypermedia service program-ming. </title> <type> Technical report, </type> <year> 1997. </year> <note> http://www.bell-labs.com/project/MAWL/papers/Overview.html. </note>
Reference-contexts: In the world of DSLs, we can still consider the operational semantics to implement the abstract semantics on a machine, but we must enlarge somewhat our concept of machine. Mawl <ref> [9] </ref>, for example, is implemented on an HTML/HTTP "machine." If we generally consider the receiving entity as a machine, our view of "machine" becomes quite broad.
Reference: [10] <author> Lloyd Nakatani and Mark Jones. Jargons and infocentrism. </author> <booktitle> In Proceedings of DSL '97. </booktitle> <institution> University of Illinois Computer Science, </institution> <year> 1997. </year> <note> http://www-sal.cs.uiuc.edu/ kamin/dsl. </note>
Reference-contexts: Although it was developed with KIF in mind, it is agnostic concerning the language of the message and so could work with DSLs as well. We see this approach as very compatible with aspect-oriented programming [8] and jargons <ref> [10] </ref>. Both of these look at decomposing a problem into a number of different aspects (or jargons), each with its own domain and language. A complete application is built by composing the program from statements in the different domain specific languages.
Reference: [11] <author> Terence Parr. </author> <title> Obtaining Practical Variants of LL(k) and LR(k) for k &gt; 1 by Splitting the Atomic k-Tuple. </title> <type> PhD thesis, </type> <institution> Purdue University, </institution> <year> 1993. </year>
Reference-contexts: In other words, the parse will report to the application what has happened, not what will happen. LL (k) parsing, in general, has been deprecated until recently because the need for a variable amount of lookahead. However, <ref> [11] </ref> has shown how to mini-mize the lookahead. As most rules seem to be LL (1), this makes LL (k) parsing very attractive. An LR grammar, by contrast, appears able to support the purchase order application since the entire message should be available at the client before parsing begins.
Reference: [12] <author> John Searle. </author> <title> Speech Acts. </title> <publisher> Cambridge University Press, </publisher> <year> 1969. </year>
Reference-contexts: Our approach is a social model. Exchanged strings represent actions by the various parties. The closest analogy is with speech acts, as first discussed by Austin [1] and then extended by Searle <ref> [12] </ref>. Traditional logic has always considered sentences to be statements about the state of the world. As such they could be assigned truth values based on their correspondance with actual fact.
References-found: 12

