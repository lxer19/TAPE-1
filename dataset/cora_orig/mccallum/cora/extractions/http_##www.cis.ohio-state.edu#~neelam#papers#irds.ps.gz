URL: http://www.cis.ohio-state.edu/~neelam/papers/irds.ps.gz
Refering-URL: http://www.cis.ohio-state.edu/~neelam/papers/research.html
Root-URL: 
Email: e-mail: neelam@cis.ohio-state.edu  
Title: Refining Interactions in a Distributed System  
Author: Neelam Soundarajan 
Address: 2015 Neil Avenue Columbus, OH 43210 USA  
Affiliation: Computer and Information Science The Ohio State University  
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> K Apt, N Francez, W deRoever, </author> <title> A proof system for CSP, </title> <journal> ACM TOPLAS, </journal> <year> 1980. </year>
Reference-contexts: Methods such as those of <ref> [1, 10, 11] </ref> formalize this type of refinement. 1 Following standard practice, we use `he', `his', etc. as abbreviations for `he or she', `his or her' etc. 2 Procedural refinement is often also called stepwise refinement; we prefer the term procedural refinement to distin guish it from the other types of
Reference: 2. <author> E Brinskma, B Jonsson, </author> <title> F Orava, Refining interfaces in communicating systems, </title> <booktitle> TAPSOFT '91, LNCS 494, </booktitle> <year> 1991. </year>
Reference-contexts: A number of authors have considered ideas that seem to be related to the notion of interaction refinement. Brinskma et al <ref> [2] </ref> consider what they call interface refinement as a method of refining 3 Many of the ideas presented in this paper can also be applied in the setting of (sequential) Object-Oriented programs since objects, being autonomous entities, are similar to processes in a distributed system. <p> Gerth et al [6] also use the term `interface refinement' but they seem to be interested in a somewhat different problem. They ask `under what conditions is it legitimate to replace synchronous communications with asynchronous ones?', and we do not consider such refinements. But both <ref> [2] </ref> and [6] have one important thing in common with our work: the refinements they consider also manifest themselves in the external behavior of the object (s) in question, rather than being refinements of the internals. <p> Several authors have considered ideas similar to IR. We have already mentioned the work of <ref> [2] </ref> and [6]. Broy [3] considers many different types of refinement (including what we have called procedural and structural refinements). One of these is called interaction refinement; but Broy's notion seems closer to the interface refinement of [2] rather than the general notion we are considering. <p> We have already mentioned the work of <ref> [2] </ref> and [6]. Broy [3] considers many different types of refinement (including what we have called procedural and structural refinements). One of these is called interaction refinement; but Broy's notion seems closer to the interface refinement of [2] rather than the general notion we are considering. Thus it is not clear whether, using Broy's definition, the ABP would be a valid refinement of PP. The simulation approach (see for instance, [9]) seems more general, and it is possible that IR steps can be validated using that approach.
Reference: 3. <author> M Broy, </author> <title> (Inter)Action refinement: the easy way, </title> <note> at http://www4.informatik. tu-muenchen.de/paper_db/papers/broy_easy_way.html </note>
Reference-contexts: Several authors have considered ideas similar to IR. We have already mentioned the work of [2] and [6]. Broy <ref> [3] </ref> considers many different types of refinement (including what we have called procedural and structural refinements). One of these is called interaction refinement; but Broy's notion seems closer to the interface refinement of [2] rather than the general notion we are considering.
Reference: 4. <author> C Creveuil, </author> <title> GC Roman, Formal specification and design of a message router, </title> <journal> ACM TOSEM, </journal> <volume> vol. 3, </volume> <pages> pp. 271-308, </pages> <year> 1994. </year>
Reference-contexts: One important distinction with our approach is that while ours is axiomatic, the simulation approach, as the name suggests, is more operational. Another important difference is that that approach does not distinguish between different types of refinement, whereas our focus is on interaction refinements. Interestingly, Creveuil and Roman <ref> [4] </ref> consider, without using a formalism that explicitly allows for IR steps, the correctness of a message router whose design involves several interaction refinement steps; specifically, these steps introduce additional communications in the system. [4] relies, for its correctness arguments of these steps, on the fact that since such communications are <p> Interestingly, Creveuil and Roman <ref> [4] </ref> consider, without using a formalism that explicitly allows for IR steps, the correctness of a message router whose design involves several interaction refinement steps; specifically, these steps introduce additional communications in the system. [4] relies, for its correctness arguments of these steps, on the fact that since such communications are not explicitly forbidden by the high level specification, they are allowed! While this is an interesting approach, it will not work if a particular interaction refinement altered any of the high-level interactions, as in
Reference: 5. <author> N Francez, </author> <title> I Forman, Interacting processes, </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: We should mention also the work of Francez and Forman <ref> [5] </ref> on Interacting Processes. They introduce the idea of a team a template for a particular type of multi-party interaction. Whenever a set of processes wishes to engage in this type of interaction, they all `enroll' in the particular team. Is a team an interaction refinement? We believe not.
Reference: 6. <author> R Gerth, R Kuiper, J Segers, </author> <title> Interface refinement in reactive systems, </title> <booktitle> CONCUR 92, LNCS 630, </booktitle> <year> 1992. </year>
Reference-contexts: Gerth et al <ref> [6] </ref> also use the term `interface refinement' but they seem to be interested in a somewhat different problem. They ask `under what conditions is it legitimate to replace synchronous communications with asynchronous ones?', and we do not consider such refinements. But both [2] and [6] have one important thing in common <p> Gerth et al <ref> [6] </ref> also use the term `interface refinement' but they seem to be interested in a somewhat different problem. They ask `under what conditions is it legitimate to replace synchronous communications with asynchronous ones?', and we do not consider such refinements. But both [2] and [6] have one important thing in common with our work: the refinements they consider also manifest themselves in the external behavior of the object (s) in question, rather than being refinements of the internals. <p> Several authors have considered ideas similar to IR. We have already mentioned the work of [2] and <ref> [6] </ref>. Broy [3] considers many different types of refinement (including what we have called procedural and structural refinements). One of these is called interaction refinement; but Broy's notion seems closer to the interface refinement of [2] rather than the general notion we are considering.
Reference: 7. <author> CAR Hoare, </author> <title> Communicating Sequential Processes, </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference-contexts: section, `identify-client' is a high level interaction but not a communication, whereas the low level interaction in which CO sends a password to SO (or to AO) is a communication. 5 We use an element of the form (c; v) in 4 We could use other models such as failures <ref> [7] </ref> that would provide more information than traces can; but our goal is to explore the idea of interaction refinement in a simple setting, so we use traces. 5 Actually, sending a password may be a complex interaction involving a number of communications.
Reference: 8. <author> G Holzmann, </author> <title> Design and validation of computer protocols, </title> <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: The protocols are taken from chapter 4 of Holzmann's book <ref> [8] </ref> on the subject. Holzmann starts with a simple protocol, the No-Flow-Control protocol, where the sender S sends a sequence of messages, which we call data messages to distinguish them from other messages to be introduced shortly, and the receiver R accepts them.
Reference: 9. <author> NA Lynch, </author> <title> Distributed algorithms, </title> <address> Morgan-Kaufman, </address> <year> 1996. </year>
Reference-contexts: But both [2] and [6] have one important thing in common with our work: the refinements they consider also manifest themselves in the external behavior of the object (s) in question, rather than being refinements of the internals. Another general approach (see <ref> [9] </ref>, for instance) is to show that a refined system, in some sense, is a `simulation' of the original system. We will return to the relation of our work to that of others later in the paper. <p> Thus it is not clear whether, using Broy's definition, the ABP would be a valid refinement of PP. The simulation approach (see for instance, <ref> [9] </ref>) seems more general, and it is possible that IR steps can be validated using that approach. One important distinction with our approach is that while ours is axiomatic, the simulation approach, as the name suggests, is more operational.
Reference: 10. <author> J Misra, KM Chandy, </author> <title> Proofs of networks of processes, </title> <journal> IEEE Trans. on Software Eng., </journal> <year> 1981. </year>
Reference-contexts: Methods such as those of <ref> [1, 10, 11] </ref> formalize this type of refinement. 1 Following standard practice, we use `he', `his', etc. as abbreviations for `he or she', `his or her' etc. 2 Procedural refinement is often also called stepwise refinement; we prefer the term procedural refinement to distin guish it from the other types of
Reference: 11. <author> S Owicki, D Gries, </author> <title> Verifying properties of parallel processes, </title> <journal> CACM, </journal> <year> 1976. </year> <month> 10 </month>
Reference-contexts: Methods such as those of <ref> [1, 10, 11] </ref> formalize this type of refinement. 1 Following standard practice, we use `he', `his', etc. as abbreviations for `he or she', `his or her' etc. 2 Procedural refinement is often also called stepwise refinement; we prefer the term procedural refinement to distin guish it from the other types of
References-found: 11

