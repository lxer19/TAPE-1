URL: http://www.cs.berkeley.edu/~simmons/download/csd-97-972.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~simmons/abstracts/masters_abstract.html
Root-URL: 
Title: 2D Object Abstraction: The Automatic Generation of Hierarchical Geometric Representations  
Author: Maryann Simmons Carlo H. Sequin 
Date: September 17, 1997  
Affiliation: Computer Science Division Department of Electrical Engineering and Computer Science University of California, Berkeley  
Note: Master's Project under the direction of  
Abstract: This thesis presents an exploratory framework for automatically generating hierarchical object representations specialized for geometric tasks. The approach consists of two subprocesses: the first extracts geometric information from the input object, and the second generates a specialized representation based on this information. The first subprocess produces a multi-resolution representation that encapsulates the salient geometric features of an object, as well as its topological decomposition into parts. The representation is generated in two steps. First, a multi-resolution Geometry Representation (G-Rep) is built. Its main components are a Cell-Based Spatial Representation (CSR) that provides spatial filtering at the desired feature resolution, and an Axial Shape Graph (ASG) that captures local shape information as well as global information about the overall geometric structure of the object. The CSR and ASG components are calculated at multiple resolutions and linked together to form the G-Rep hierarchy. In the second step, the Axial Shape Graph is decomposed into a tree representing the overall shape structure of the object as a hierarchy of subcomponents. Using the Axial Shape Graph, the task of shape decomposition is reduced to a graph partitioning problem whose solution results in a well-balanced part hierarchy. The second subprocess constructs a hierarchy of task-specific representations utilizing the geometric information provided by the G-Rep. The entire representation generation framework is driven by metrics that quantify the desirable characteristics of representations for the particular task. We show that this structure can be utilized to generate representations specialized for the task of Collision Detection in 2D environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Arcelli and G. Sanniti di Baja. </author> <title> Finding local maxima in a psuedo-euclidean distance transform. </title> <booktitle> CVGIP:Graphical Models and Image Processing, </booktitle> <volume> 43 </volume> <pages> 361-367, </pages> <year> 1988. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> following three aspects: 1. the choice of distance metric, 2. the definition of local maxima, 3. the method for assembling the points into a connected skeleton. 8 local maxima d) Discs of weak local maxima In the skeletonization method of di Baja and Thiel [11], and Arcelli and di Baja <ref> [1] </ref>, the local maxima are defined to be loci of the centers of Maximal Discs of the object. Maximal Discs are defined relative to the distance map. <p> Each bar is represented by a linear axis segment with the associated object width stored at each point along the segment. We follow the work of Arcelli and di Baja <ref> [1] </ref> and define an Axis Segment to be the loci of the centers of Maximal Discs. A Maximal Disc is an inscribed disc that touches the boundary of the object in at least two places. <p> If the Distance Map is represented as a 3D surface, with the height corresponding to the distance values, the MAT is the set of local maxima M . Many skeletonization approaches <ref> [12, 1, 25] </ref>, originating with the work of Blum on the SAT [3], utilize a distance map/MAT approach, but with varying definitions of the local maxima set M . <p> Many skeletonization approaches [12, 1, 25], originating with the work of Blum on the SAT [3], utilize a distance map/MAT approach, but with varying definitions of the local maxima set M . We follow the definition of Arcelli and di Baja <ref> [1] </ref> where M is defined to be the centers of the set of Maximal Discs of the object. Any subsequent mention of a "maximum" in this report will be assumed to refer to such a local maximum. <p> The path between axis endpoints may pass through multiple saddles and local maxima. We have implemented an approach based on the path climbing of Niblack et al to make connections directly from axis endpoints. This is similar to the methods employed by Dorst [13] and Arcelli and di Baja <ref> [1] </ref>. An initial pass is made that labels all special cells with a connectivity type (strict maximum, maximum, saddle). Each cell is then assigned a climbing neighbor and saddle cells are assigned multiple climbing neighbors, one for each hump.
Reference: [2] <author> C. L. Bajaj and T. K. Dey. </author> <title> Convex decomposition of polyhedra and robustness. </title> <journal> Siam Journal of Computing, </journal> <volume> 21:2:339-364, </volume> <month> April </month> <year> 1992. </year>
Reference-contexts: First, it has been shown that the problem of optimal convex decomposition is NP-hard [7]. More importantly, the worst case lower bound on the number of resulting subcomponents is O (N 2 ), where N is the number of concave vertices <ref> [2, 7] </ref>. Consider a polygonal approximation to a half circular arc. With a strict convex decomposition, this object would be decomposed into as many pieces as there are edges approximating the curve. There is clearly a tradeoff between the number of subcomponents and the tightness of the convex approximation.
Reference: [3] <author> H. Blum and R.N. Nagel. </author> <title> Shape description using weighted symmetric axis features. </title> <journal> Pattern Recognition, </journal> <volume> 10 </volume> <pages> 167-180, </pages> <year> 1978. </year>
Reference-contexts: There is a vast amount of literature on axial representations (often called skeletons) of 2D images, originating with the work of Blum <ref> [3] </ref>. In this section we will therefore not attempt to give a complete review, but instead describe the work most relevant to our approach. <p> Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> If the Distance Map is represented as a 3D surface, with the height corresponding to the distance values, the MAT is the set of local maxima M . Many skeletonization approaches [12, 1, 25], originating with the work of Blum on the SAT <ref> [3] </ref>, utilize a distance map/MAT approach, but with varying definitions of the local maxima set M . We follow the definition of Arcelli and di Baja [1] where M is defined to be the centers of the set of Maximal Discs of the object.
Reference: [4] <author> G. Borgefors. </author> <title> Distance transformations in arbitrary dimensions. </title> <booktitle> CVGIP:Graphical Models and Image Processing, </booktitle> <volume> 27 </volume> <pages> 321-345, </pages> <year> 1984. </year>
Reference-contexts: The DM calculation utilizes a weighted distance metric: a cell's direct neighbors are a distance d D away, and its indirect neighbors a distance d I away, where d D &lt; d I . It has been shown <ref> [4] </ref> that if d D = 1, setting d I = 1:351 will produce the best approximation to the Euclidean distance. The closer the pseudo-Euclidean metric is to the true distance, the more robust the measure will be under object rotation.
Reference: [5] <author> M. Brady and H. Asada. </author> <title> Smooth local symmetries and their implementation. </title> <journal> International Journal of Robotics Research, </journal> <volume> 3:3:36-60, </volume> <year> 1984. </year>
Reference-contexts: Linking segments are not used to represent regions, only to represent spatial relationships between regions. Other axis-based schemes are the Smoothed Local Symmetries (SLS) of Brady and Asada <ref> [5] </ref>, and Brooks' generalized ribbons [31]. The generator for Brooks' ribbons is a line segment constrained to stay at a fixed angle to the spine.
Reference: [6] <author> C. A. Burbeck and S. M. Pizer. </author> <title> Object representation by cores: Identifying and representing primitive spatial regions. </title> <booktitle> Vision Research, </booktitle> <address> 35:13:1917-1930, </address> <year> 1995. </year>
Reference-contexts: The skeleton is calculated by taking distance map differences of maps 9 generated by different boundary segments and marking the zero values as skeletal points (i.e. the zero values correspond to points that are equidistant from two or more boundary points). Pizer et al <ref> [6] </ref> present a related method of representing an object by axes with associated widths called cores. Cores are computed by assigning pixels medialness values at multiple scales, and then locating ridges in the medialness function. <p> The early work of Pizer presents a multi-resolution blurring approach to produce more stable axial representations [27]. It is also possible to produce an axial representation that is rotation invariant, such as the more recent method of cores presented by Pizer et al <ref> [6] </ref>. It would be possible, therefore, to replace our axial generation approach with one that is more stable. A main advantage of our ASG decomposition approach, however, is that we do not require that the axial representation be exact, or even particularly stable.
Reference: [7] <author> B. Chazelle. </author> <title> Convex partitions of polyhedra: A lower bound and worst-case optimal algorithm. </title> <journal> Siam Journal of Computing, </journal> <volume> 13:3:488-507, </volume> <month> August </month> <year> 1984. </year>
Reference-contexts: In our environment, this corresponds to cells with no DMD vectors pointing into the cell. This is expressed computationally as follows: for each neighbor N i of the cell, the ith bit in the DMD vector of N i is not set: 22 8i 2 <ref> [0; 7] </ref> B (DM D (N i ); i) = 0 where DM D (n) is the Distance Map Direction bit vector of cell n and B (b; i) is the value of the ith bit of bit vector b. This definition is also utilized by Niblack [25]. <p> Our approach has several advantages over a strict convex decomposition of the object. First, it has been shown that the problem of optimal convex decomposition is NP-hard <ref> [7] </ref>. More importantly, the worst case lower bound on the number of resulting subcomponents is O (N 2 ), where N is the number of concave vertices [2, 7]. Consider a polygonal approximation to a half circular arc. <p> First, it has been shown that the problem of optimal convex decomposition is NP-hard [7]. More importantly, the worst case lower bound on the number of resulting subcomponents is O (N 2 ), where N is the number of concave vertices <ref> [2, 7] </ref>. Consider a polygonal approximation to a half circular arc. With a strict convex decomposition, this object would be decomposed into as many pieces as there are edges approximating the curve. There is clearly a tradeoff between the number of subcomponents and the tightness of the convex approximation.
Reference: [8] <author> J. D. Cohen, M. C. Ling, D. Manocha, and M. Ponamgi. I-COLLIDE: </author> <title> An Interactive and Exact Collision Detection System for Large-Scale Environments. </title> <booktitle> In Proceedings of the Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 189-196, </pages> <year> 1995. </year>
Reference-contexts: As dynamic objects move through the virtual world, intersection tests must be performed quickly between the moving object and all other objects near it. Many collision detection systems utilize a hierarchy of representations <ref> [21, 8, 24, 28] </ref>. In these approaches, intersection testing occurs in two main phases: a broad phase followed by a narrow phase [21]. In the broad phase, intersection tests are made against simplified approximations of the object. <p> In addition, we assume that the system can handle non-convex objects as well, although at a significantly higher cost (such as I-Collide <ref> [8] </ref>). If the objects are convex, then the intersection test is extremely fast. If the objects are non-convex, but well-approximated by their convex hull, then the test is still efficient. Different types of representations may be combined in the hierarchy of representations for collision detection.
Reference: [9] <author> Gregory S. Couch. </author> <title> Berkeley UNIGRAFIX 3.1- data structure and language. </title> <type> Technical Report UCB/CSD-94-830, </type> <institution> University of California, Berkeley, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: The work for this thesis was primarily based on input files in the UniGrafix (UG3) <ref> [9] </ref> format, and on images in the Silicon Graphics RGB image format. We discuss the construction of the spatial representation from these two types of input. 3.1 Polygon Insertion In the case of polygonal input, the B-Rep based object description is inserted into a grid at a specified resolution.
Reference: [10] <author> P.E. Danielson. </author> <title> Euclidean distance mapping. </title> <booktitle> Computer Graphics and Image Processing, </booktitle> <address> 14:3:227-248, </address> <month> November </month> <year> 1980. </year>
Reference-contexts: The external areas are left in adaptive form for efficiency. We have implemented a two-pass algorithm to calculate the DM <ref> [10] </ref>. The distance value of each cell in the object is initialized to some large integer value, and exterior cells are initialized to zero.
Reference: [11] <author> G. Sanniti di Baja and E. Thiel. </author> <title> (3-4)-weighted skeleton decomposition for pattern representation and description. </title> <journal> Pattern Recognition, </journal> <volume> 27:8:1039-1049, </volume> <year> 1994. </year>
Reference-contexts: algorithm, with slight variations in the following three aspects: 1. the choice of distance metric, 2. the definition of local maxima, 3. the method for assembling the points into a connected skeleton. 8 local maxima d) Discs of weak local maxima In the skeletonization method of di Baja and Thiel <ref> [11] </ref>, and Arcelli and di Baja [1], the local maxima are defined to be loci of the centers of Maximal Discs of the object. Maximal Discs are defined relative to the distance map. <p> Each axial point is therefore associated with two or more boundary points. Bars and their associated axes are similar to the elementary regions and corresponding segments of di Baja and Thiel <ref> [11] </ref>. The graph structure is composed of the following components: * Nodes: represent Axis Segments and the associated bar components. <p> In these approaches, the points are not further organized into higher level components. The work of di Baja and Thiel <ref> [11] </ref> most closely resembles our axial structure. Once the skeletal points are identified, they are collected into linear segments. The resulting segments are divided into two classes: those that have "representational power" (i.e. correspond to an elementary region) and those that are linking segments only used for showing spatial relationships. <p> The bottom figure in each case shows a possible resulting line that is returned from the linear separability code. points labeled by circles and the right points labeled by triangles. The bottom figure shows the resulting axis line segments. The skeletonization process of di Baja and Thiel <ref> [11] </ref> also forms linear segments from skeletal points. The endpoints of a skeletal branch are set as the end vertices of a linear segment. This segment is then recursively split if the pixels along the branch fall too far outside of the segment. <p> Axial-based representations have been utilized to perform shape decomposition and description. In this section we compare relevant work in 2D shape segmentation to our decomposition approach. Di Baja and Thiel <ref> [11] </ref> present a skeleton decomposition method that can be utilized to represent an object as a collection of elementary regions. We have discussed their skeleton construction approach in Section 2.2.1.
Reference: [12] <author> G. Sanniti di Baja and E. Thiel. </author> <title> Skeletonization algorithm running on path-based distance maps. </title> <journal> Image and Vision Computing, </journal> <volume> 14 </volume> <pages> 47-57, </pages> <year> 1996. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> The skeletons generated have the following desirable properties: they are guaranteed to have the same connectivity as the object, they allow reconstruction of the object, and they are minimal (under the constraint of the previous property). The skeletonization approaches of Dorst [13], di Baja and Thiel <ref> [12] </ref>, and Shih and Pu [33], are all based on the same basic algorithm, with slight variations in the following three aspects: 1. the choice of distance metric, 2. the definition of local maxima, 3. the method for assembling the points into a connected skeleton. 8 local maxima d) Discs of <p> The Axial Shape Graph has the following properties: 1. It has the same connectivity as the object at the specified level of simplification. 2. Nodes correspond to fundamental parts of the object. 3. Edges capture the spatial relationships between fundamental parts. Many of the previous approaches we have discussed <ref> [25, 13, 12, 33] </ref> generate connected skeletal structures. The skeletons produced consist of a collection of branches. <p> If the Distance Map is represented as a 3D surface, with the height corresponding to the distance values, the MAT is the set of local maxima M . Many skeletonization approaches <ref> [12, 1, 25] </ref>, originating with the work of Blum on the SAT [3], utilize a distance map/MAT approach, but with varying definitions of the local maxima set M .
Reference: [13] <author> L. Dorst. </author> <title> Pseudo-euclidean skeletons. </title> <booktitle> In International Conference on Pattern Recognition (ICPR), </booktitle> <pages> pages 286-289, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> The skeletons generated have the following desirable properties: they are guaranteed to have the same connectivity as the object, they allow reconstruction of the object, and they are minimal (under the constraint of the previous property). The skeletonization approaches of Dorst <ref> [13] </ref>, di Baja and Thiel [12], and Shih and Pu [33], are all based on the same basic algorithm, with slight variations in the following three aspects: 1. the choice of distance metric, 2. the definition of local maxima, 3. the method for assembling the points into a connected skeleton. 8 <p> The Axial Shape Graph has the following properties: 1. It has the same connectivity as the object at the specified level of simplification. 2. Nodes correspond to fundamental parts of the object. 3. Edges capture the spatial relationships between fundamental parts. Many of the previous approaches we have discussed <ref> [25, 13, 12, 33] </ref> generate connected skeletal structures. The skeletons produced consist of a collection of branches. <p> The path between axis endpoints may pass through multiple saddles and local maxima. We have implemented an approach based on the path climbing of Niblack et al to make connections directly from axis endpoints. This is similar to the methods employed by Dorst <ref> [13] </ref> and Arcelli and di Baja [1]. An initial pass is made that labels all special cells with a connectivity type (strict maximum, maximum, saddle). Each cell is then assigned a climbing neighbor and saddle cells are assigned multiple climbing neighbors, one for each hump.
Reference: [14] <author> J. D. Foley, A. van Dam, S. K. Feiner, and J. F. Hughes. </author> <title> Computer Graphics: Principles and Practice, chapter Basic Raster Graphics Algorithms for Drawing 2D Primitives. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: The insertion process we have implemented is a scan-line approach designed to be conservative: a grid cell is considered part of the representation if and only if it is touched by some part of the object. This differs from traditional conversion algorithms, which are based upon discrete sample points <ref> [14] </ref>. Neighbors N D = f0; 2; 4; 6g, Indirect Neighbors N I = f1; 3; 5; 7g We first define some relevant terminology as it is used in the remainder of this thesis.
Reference: [15] <author> T. A. Funkhouser. </author> <title> Database and Display Algorithms for Interactive Visualization of Architectural Models. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: used at runtime to cull out large portions of the model that are not visible, but that would still be rendered if only traditional view frustum culling and z-buffering are used. 1 Visual level of detail (LOD) representations are also utilized by the WALKTHRU system to optimize the rendering phase <ref> [15, 16] </ref>. This technique exploits the fact that if an object contributes very little to the final image, it does not need to be represented in full detail to achieve the same visual effect when rendered to the display. Each object has several representations, at various levels of complexity.
Reference: [16] <author> T. A. Funkhouser and C. H. Sequin. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH), </booktitle> <pages> pages 247-54, </pages> <year> 1993. </year>
Reference-contexts: used at runtime to cull out large portions of the model that are not visible, but that would still be rendered if only traditional view frustum culling and z-buffering are used. 1 Visual level of detail (LOD) representations are also utilized by the WALKTHRU system to optimize the rendering phase <ref> [15, 16] </ref>. This technique exploits the fact that if an object contributes very little to the final image, it does not need to be represented in full detail to achieve the same visual effect when rendered to the display. Each object has several representations, at various levels of complexity.
Reference: [17] <author> T. A. Funkhouser, S. J. Teller, C. H. Sequin, and D. Khorramabadi. </author> <title> UCB system for interactive visualization of large architectural models. Presence: </title> <journal> Special Issue on Teleoperators and Virtual Environments, </journal> <volume> 5(1) </volume> <pages> 13-44, </pages> <month> Winter </month> <year> 1995. </year> <month> 69 </month>
Reference-contexts: The intelligent use of specialized representations has played an important role in the success of work done to date in interactive visualization environments and will continue to make a key contribution as the frontiers in this area are pushed even further. The Berkeley architectural WALKTHRU program <ref> [17] </ref> is an illustrative example of a system that achieves significant performance gains by specializing its representations for different tasks. Representations are also specialized within a task to optimize the task when performed in different contexts.
Reference: [18] <author> S. Gottschalk, M. Lin, and D. Manocha. </author> <title> OBBTree:a hierarchical structure for rapid interference detection. </title> <booktitle> In Computer Graphics (Proceedings SIGGRAPH), </booktitle> <pages> pages 171-80, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: For the intermediate level Conservative Hulls, we construct the convex hull of a simplified version of the object. An alternative conservative convex approximation could also be utilized, such as Oriented Bounding Boxes (OBBs) <ref> [18] </ref>. The top row of Figure 27 shows an input object and the corresponding Conservative Hull and axis-aligned Bounding Box, marked as level 0 in the figure. If the original object is not convex, the Conservative Hull may be a very poor approximation. <p> Bounding boxes are often utilized as the sole approximating structure in the hierarchy. Ponamgi et al [28] automatically construct an axis-aligned bounding box hierarchy from the input object utilizing an approach based on a variant of octree subdivision. Optimally aligned bounding boxes have been proposed <ref> [18] </ref>, offering rotation invariance at a slightly higher intersection testing cost. But whether optimally aligned or not, bounding boxes most often do not provide a tight fit of the data. The approach of Hubbard [21] utilizes spheres as approximations for the broad phase of Collision Detection.
Reference: [19] <author> T. He, L. Hong, A. Kaufman, A. Varshney, and S. Wang. </author> <title> Voxel Based Object Simplification. </title> <booktitle> In Proceedings IEEE Visualization, </booktitle> <pages> pages 296-303, </pages> <year> 1995. </year>
Reference-contexts: All such features can therefore be removed when creating the representation to be used for this task. A similar approach based on a spatial representation is utilized by He et al <ref> [19, 20] </ref> as a first step in the generation of simplified representations of 3D objects for rendering. The original object representation is sampled into a uniform 3D voxel grid and the result is low-pass filtered. This provides two levels of simplification.
Reference: [20] <author> T. He, L. Hong, A. Varshney, and S. Wang. </author> <title> Controlled topology simplification. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <pages> pages 171-183, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: All such features can therefore be removed when creating the representation to be used for this task. A similar approach based on a spatial representation is utilized by He et al <ref> [19, 20] </ref> as a first step in the generation of simplified representations of 3D objects for rendering. The original object representation is sampled into a uniform 3D voxel grid and the result is low-pass filtered. This provides two levels of simplification.
Reference: [21] <author> P. M. Hubbard. </author> <title> Collision detection for interactive graphics applications. </title> <journal> IEEE Transactions on Visualization and Computer Graphics, </journal> <volume> 1:3:218-230, </volume> <month> September </month> <year> 1995. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions <ref> [26, 21] </ref>), and calculation of a Distance Map and its Medial Axis Transform (MAT) [3, 13, 1, 25, 36, 30, 22, 33, 12, 27]. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> As dynamic objects move through the virtual world, intersection tests must be performed quickly between the moving object and all other objects near it. Many collision detection systems utilize a hierarchy of representations <ref> [21, 8, 24, 28] </ref>. In these approaches, intersection testing occurs in two main phases: a broad phase followed by a narrow phase [21]. In the broad phase, intersection tests are made against simplified approximations of the object. <p> Many collision detection systems utilize a hierarchy of representations [21, 8, 24, 28]. In these approaches, intersection testing occurs in two main phases: a broad phase followed by a narrow phase <ref> [21] </ref>. In the broad phase, intersection tests are made against simplified approximations of the object. If a possible intersection is detected from these approximate tests, the actual object is tested in the final narrow phase. <p> Optimally aligned bounding boxes have been proposed [18], offering rotation invariance at a slightly higher intersection testing cost. But whether optimally aligned or not, bounding boxes most often do not provide a tight fit of the data. The approach of Hubbard <ref> [21] </ref> utilizes spheres as approximations for the broad phase of Collision Detection.
Reference: [22] <author> R. Kimmel, D. Shaked, and N. Kiryati. </author> <title> Skeletonization via distance maps and level sets. CVGIP:Graphical Models and Image Processing, </title> <address> 62:3:382-391, </address> <year> 1995. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> In this case, the spine/generator characterization is a useful way of describing the shape, and not a means of generating it. Kimmel et al <ref> [22] </ref> present an alternate skeletonization method based on the MAT. The object boundary is first segmented at points of maximal positive curvature. A distance map is calculated for each of the resulting boundary segments.
Reference: [23] <author> S. Lee, L. Lam, and C. Y. Suen. </author> <title> A systematic evaluation of skeletonization algorithms. </title> <journal> International Journal of Pattern Recognition and Artificial Intelligence, </journal> <volume> 7:5:1203-1225, </volume> <year> 1993. </year>
Reference-contexts: In this section we will therefore not attempt to give a complete review, but instead describe the work most relevant to our approach. Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning <ref> [23] </ref>, analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) [3, 13, 1, 25, 36, 30, 22, 33, 12, 27].
Reference: [24] <author> M.C. Lin and J.F. Canny. </author> <title> A fast algorithm for incremental distance calculation. </title> <booktitle> In International Conference on Robotics and Automation, </booktitle> <pages> pages 1008-1014, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: As dynamic objects move through the virtual world, intersection tests must be performed quickly between the moving object and all other objects near it. Many collision detection systems utilize a hierarchy of representations <ref> [21, 8, 24, 28] </ref>. In these approaches, intersection testing occurs in two main phases: a broad phase followed by a narrow phase [21]. In the broad phase, intersection tests are made against simplified approximations of the object. <p> The convex hull is rotation invariant, and more closely approximates a larger class of objects than the axis-aligned bounding box. We are assuming that the collision detection algorithm used is some variant of the Lin-Canny approach <ref> [24] </ref>, such that intersection testing is performed very efficiently between convex objects. In addition, we assume that the system can handle non-convex objects as well, although at a significantly higher cost (such as I-Collide [8]). If the objects are convex, then the intersection test is extremely fast.
Reference: [25] <author> C. W. Niblack, P. B. Gibbons, and D. W. Capson. </author> <title> Generating skeletons and centerlines from the distance transform. CVGIP:Graphical Models and Image Processing, </title> <address> 54:5, </address> <month> September </month> <year> 1992. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> The set of local maxima in this Distance Map is then identified. The final skeleton consists of these pixels with the possible addition of the set of pixels necessary to form a connected structure. Niblack et al <ref> [25] </ref> present a method for generating skeletons for binary images based on a distance transform. <p> The Axial Shape Graph has the following properties: 1. It has the same connectivity as the object at the specified level of simplification. 2. Nodes correspond to fundamental parts of the object. 3. Edges capture the spatial relationships between fundamental parts. Many of the previous approaches we have discussed <ref> [25, 13, 12, 33] </ref> generate connected skeletal structures. The skeletons produced consist of a collection of branches. <p> If the Distance Map is represented as a 3D surface, with the height corresponding to the distance values, the MAT is the set of local maxima M . Many skeletonization approaches <ref> [12, 1, 25] </ref>, originating with the work of Blum on the SAT [3], utilize a distance map/MAT approach, but with varying definitions of the local maxima set M . <p> This definition is also utilized by Niblack <ref> [25] </ref>. <p> In order to describe the ridge-walking implementation, we will first establish terminology for characterizing axial cells in the DM. This follows directly from the work of Niblack <ref> [25] </ref>. * Strict Maximum: A cell with DM distance value d strictly greater than any of its eight nearest neighbors. * Maximum: A cell with DM distance value d greater than or equal to any of its eight nearest neighbors. * Saddle Point: A cell with DM distance value d whose
Reference: [26] <author> R.L. Ogniewicz and O. Kubler. </author> <title> Hierarchic voronoi skeletons. </title> <journal> Pattern Recognition, </journal> <volume> 28:3:343-359, </volume> <year> 1995. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions <ref> [26, 21] </ref>), and calculation of a Distance Map and its Medial Axis Transform (MAT) [3, 13, 1, 25, 36, 30, 22, 33, 12, 27]. Our implementation is of the last type, and thus this section focuses on MAT-based methods.
Reference: [27] <author> S. M. Pizer, W.R. Oliver, and S.H. Bloomberg. </author> <title> Hierarchical shape description via the mulitresolution symmetric axis transform. </title> <journal> IEEE Transactions on Pattern Recognition and Machine Intelligence-PAMI, </journal> <volume> 9:4:505-511, </volume> <year> 1987. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> Many approaches in the vast skeletonization literature have addressed the issue of stability. The early work of Pizer presents a multi-resolution blurring approach to produce more stable axial representations <ref> [27] </ref>. It is also possible to produce an axial representation that is rotation invariant, such as the more recent method of cores presented by Pizer et al [6]. It would be possible, therefore, to replace our axial generation approach with one that is more stable.
Reference: [28] <author> M. Ponamgi, D. Manocha, and M. C. Lin. </author> <title> Incremental Algorithms for Collision Detection Between Solid Models. </title> <type> Technical Report 94/061, </type> <institution> Department of Computer Science, University of North Carolina, Chapel Hill, </institution> <year> 1994. </year>
Reference-contexts: As dynamic objects move through the virtual world, intersection tests must be performed quickly between the moving object and all other objects near it. Many collision detection systems utilize a hierarchy of representations <ref> [21, 8, 24, 28] </ref>. In these approaches, intersection testing occurs in two main phases: a broad phase followed by a narrow phase [21]. In the broad phase, intersection tests are made against simplified approximations of the object. <p> There is clearly a tradeoff between the number of subcomponents and the tightness of the convex approximation. Bounding boxes are often utilized as the sole approximating structure in the hierarchy. Ponamgi et al <ref> [28] </ref> automatically construct an axis-aligned bounding box hierarchy from the input object utilizing an approach based on a variant of octree subdivision. Optimally aligned bounding boxes have been proposed [18], offering rotation invariance at a slightly higher intersection testing cost.
Reference: [29] <author> F.P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, New York, </address> <year> 1985. </year>
Reference-contexts: The left side of each of these intervals is grouped with a set of left points and the right side with a set of right points. A linear programming solution to the 2D linear separability problem <ref> [29] </ref> is then run on the two sets. This procedure determines if it is possible to fit a line that strictly passes through each cell, and if it is possible, it returns one such line. <p> The cost could also be adapted to include the number of edges in the Conservative Hull, and the absolute number of sub-components making up the hierarchy. The Hausdorff distance <ref> [29] </ref> is an additional measure of the accuracy of a representation. It is defined to be the maximum of the distances from each point on the object boundary to the closest point on the representation boundary. <p> Hubbard's sphere hierarchy construction is similar to our approach in that it utilizes an approximate medial axis representation when choosing a set of spheres to represent the object. The medial axis is calculated by constructing the Voronoi diagram <ref> [29] </ref> of the object and taking points along Voronoi cell boundaries as the axial points. Each such cell boundary point is equidistant to two points on the object boundary. In 2D, a circle is associated with each axial point.
Reference: [30] <author> H. Rom and G. Medioni. </author> <title> Hierarchical decomposition and axial shape description. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 15:10:973-981, </volume> <month> October </month> <year> 1993. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> We have discussed their skeleton construction approach in Section 2.2.1. This approach produces a representation composed of the union of a set of overlapping regions, and is thus not a strict decomposition per se. Rom and Medioni <ref> [30] </ref> utilize an axial representation to hierarchically decompose an object based on its shape. This approach is a combination of existing approaches. The input object is represented by a B-spline approximation.
Reference: [31] <author> A. Rosenfeld. </author> <title> Axial representations of shape. </title> <booktitle> CVGIP:Graphical Models and Image Processing, </booktitle> <volume> 33 </volume> <pages> 156-73, </pages> <year> 1986. </year>
Reference-contexts: Our implementation is of the last type, and thus this section focuses on MAT-based methods. MAT-based methods belong to a class of approaches that represent a shape by a spine and a geometric primitive <ref> [31] </ref> that moves along the spine sweeping out the shape, possibly changing its size as it moves. The methods differ in the definition of spines and the generator primitive. In MAT-based methods, the generator is a disc. <p> Linking segments are not used to represent regions, only to represent spatial relationships between regions. Other axis-based schemes are the Smoothed Local Symmetries (SLS) of Brady and Asada [5], and Brooks' generalized ribbons <ref> [31] </ref>. The generator for Brooks' ribbons is a line segment constrained to stay at a fixed angle to the spine. The generator for SLS is a line segment that makes equal angles with the surface normals at the two points where it intersects the shape boundary.
Reference: [32] <author> J.C. Russ. </author> <title> The Image Processing Handbook, chapter 7: Processing Binary Images. </title> <publisher> CRC Press, </publisher> <year> 1995. </year>
Reference-contexts: In the first stage, Axial Points are identified in the spatial representation using a method based on the Medial Axis Transform (MAT) <ref> [32] </ref>, and connected to form Axis Segments. The identification of Axial Points proceeds by first calculating the Distance Map (DM) of the spatial representation. Local Maxima are identified in the DM by applying the Medial Axis Transform.
Reference: [33] <author> F. Y. Shih and C. C. Pu. </author> <title> A skeletonization algorithm by maxima tracking on euclidean distance transform. </title> <journal> Pattern Recognition, </journal> <volume> 28:3:331-341, </volume> <year> 1995. </year>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods. <p> The skeletonization approaches of Dorst [13], di Baja and Thiel [12], and Shih and Pu <ref> [33] </ref>, are all based on the same basic algorithm, with slight variations in the following three aspects: 1. the choice of distance metric, 2. the definition of local maxima, 3. the method for assembling the points into a connected skeleton. 8 local maxima d) Discs of weak local maxima In the <p> The Axial Shape Graph has the following properties: 1. It has the same connectivity as the object at the specified level of simplification. 2. Nodes correspond to fundamental parts of the object. 3. Edges capture the spatial relationships between fundamental parts. Many of the previous approaches we have discussed <ref> [25, 13, 12, 33] </ref> generate connected skeletal structures. The skeletons produced consist of a collection of branches.
Reference: [34] <author> S. J. Teller. </author> <title> Visibility Computations in Densely Occluded Polyhedral Environments. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1992. </year>
Reference-contexts: There are two major representations contributing to the ability of the system to achieve interactive frame rates: visibility cells and level of detail (LOD) representations. The WALKTHRU system performs visibility preprocessing <ref> [34, 35] </ref>, a technique exploiting the fact that in architectural environments only a small portion of the world is visible at any one time. The representation used in this approach models the world as a collection of cells and portals, and computes the cell-to-cell visibility in a preprocessing stage.
Reference: [35] <author> S. J. Teller and C. H. Sequin. </author> <title> Visibility preprocessing for interactive walkthroughs. </title> <booktitle> Computer Graphics (Proceedings SIGGRAPH), </booktitle> <pages> pages 61-69, </pages> <year> 1991. </year>
Reference-contexts: There are two major representations contributing to the ability of the system to achieve interactive frame rates: visibility cells and level of detail (LOD) representations. The WALKTHRU system performs visibility preprocessing <ref> [34, 35] </ref>, a technique exploiting the fact that in architectural environments only a small portion of the world is visible at any one time. The representation used in this approach models the world as a collection of cells and portals, and computes the cell-to-cell visibility in a preprocessing stage.
Reference: [36] <author> M.W. Wright and F. Fallside. </author> <title> Skeletonisation as model-based feature detection. </title> <journal> In IEEE Proceedings I (Communications, Speech and Vision), </journal> <volume> volume 140:1, </volume> <pages> pages 7-11, </pages> <month> February </month> <year> 1993. </year> <month> 70 </month>
Reference-contexts: Many of the skeleton construction methods are based on one of several general approaches: iterative or parallel thinning [23], analytical calculation of the medial axis (Delaunay triangulation and calculation of Voronoi regions [26, 21]), and calculation of a Distance Map and its Medial Axis Transform (MAT) <ref> [3, 13, 1, 25, 36, 30, 22, 33, 12, 27] </ref>. Our implementation is of the last type, and thus this section focuses on MAT-based methods.
References-found: 36

