URL: http://www.ai.mit.edu/~mpf/rc/memos/CCC98_oracle/oracle.ps
Refering-URL: 
Root-URL: 
Title: Separations of reversible and irreversible space-time complexity classes (extended abstract, Revision: 2.42  
Author: Michael P. Frank and M. Josephine Ammer 
Address: Cambridge, Massachusetts  
Affiliation: MIT Artificial Intelligence Laboratory  
Abstract: We prove that irreversible machines cannot always be emulated by reversible machines running in the same space and time. This suggests that certain irreversible parallel architectures cannot be efficiently implemented within our micro-reversible universe. We conjecture that the alternative reversible models, either classical or quantum, describe the most powerful computers that can physically exist.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Theodore Baker, John Gill, and Robert Solovay. </author> <title> Relativizations of the P =?N P question. </title> <booktitle> 4(4) </booktitle> <pages> 431-442, </pages> <month> December </month> <year> 1975. </year>
Reference-contexts: But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. <ref> [1] </ref> proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work [11] and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [2] <author> Gianfranco Bilardi and Franco Preparata. </author> <title> Horizons of parallel computation. </title> <type> Technical Report CS-93-20, </type> <institution> Brown University, </institution> <month> May </month> <year> 1993. </year> <note> Also available on the web at http://www.cs.brown.edu/publications/techreports/reports/CS-93-20.html. </note>
Reference-contexts: Lecerf '63 [12] first established that reversible Turing machines are universal, and Ben-nett '73 <ref> [2] </ref> independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 [6] proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitrary boolean functions. <p> Proof. Part (a): Due to existing relativizable simulations. When S fi = T , Bennett's simple reversible simula tion technique <ref> [2] </ref> can be applied because it takes time O (T ) and space O (T ). Similarly, when T fi ulation of Lange et al. can be used because it takes time O (2 S ) and space O (S).
Reference: [3] <author> Bruce M. Boghosian and Washington Taylor IV. </author> <title> Simulating quantum mechanics on a quantum computer. </title> <type> Manuscript, </type> <month> 8 March </month> <year> 1997. </year> <note> http://xxx.- lanl.gov/abs/quant-ph/9701019. </note>
Reference-contexts: Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 <ref> [3] </ref> introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. <p> To do this, we show how M i can be interpreted as following the rules of Bennett's reversible "pebble game," introduced in <ref> [3] </ref> and analyzed by Li and Vitanyi in [15]. Pebble game rules. The game is played on a linear list of nodes, which we will identify with query strings q 1 ; : : : ; q t .
Reference: [4] <author> Don Coppersmith and Edna Grossman. </author> <title> Generators for certain alternating groups with applications to cryptography. </title> <journal> Appl. Math., </journal> <volume> 29(4) </volume> <pages> 624-627, </pages> <month> Decem-ber </month> <year> 1975. </year>
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 [9], Bilardi & Preparata '93 <ref> [4] </ref>, and Vitanyi '95 [20]. Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers.
Reference: [5] <author> Pierluigi Crescenzi and Christos H. Papadimitriou. </author> <title> Reversible simulation of space-bounded computation. </title> <journal> Theoretical Computer Science, </journal> <volume> 143 </volume> <pages> 159-165, </pages> <year> 1995. </year>
Reference-contexts: Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 <ref> [5] </ref> explain techniques for simulating physics efficiently on parallel quantum computers. Quantum computation models are reversible, but are likely to be strictly more powerful than the non-quantum reversibility considered in this paper.
Reference: [6] <author> W. Daniel Hillis. </author> <title> New computer architectures and their relationship to physics or why computer science is no good. </title> 21(3/4):255-262, 1982. 
Reference-contexts: Lecerf '63 [12] first established that reversible Turing machines are universal, and Ben-nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones. Coppersmith and Grossman '75 <ref> [6] </ref> proved a result in group theory which implied that reversible circuits only 1 bit wider than their input can compute arbitrary boolean functions. Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension.
Reference: [7] <author> Ming Li and Paul Vitanyi. </author> <title> An Introduction to Kol-mogorov Complexity and Its Applications. Graduate Texts in Computer Science. </title> <publisher> Springer-Verlag, </publisher> <address> 2nd edition, </address> <year> 1997. </year>
Reference-contexts: Toffoli and Fredkin also developed much reversible circuit theory [8]. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 <ref> [7] </ref> extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp [11] showed how to simulate Turing machines reversibly in linear space, but using exponential time.
Reference: [8] <author> Ming Li and Paul M. B. Vitanyi. </author> <title> Reversibility and adiabatic computation: trading time and space for energy. </title> <booktitle> 452 </booktitle> <pages> 1-21, </pages> <year> 1996. </year>
Reference-contexts: Toffoli '77 [19] showed that reversible cellular automata can simulate irreversible ones in linear time using an extra spatial dimension. Toffoli and Fredkin also developed much reversible circuit theory <ref> [8] </ref>. Pin '87 [17] showed that reversible finite automata cannot decide all regular languages. Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines.
Reference: [9] <author> N. H. Margolus. </author> <title> Physics and Computation. </title> <type> PhD thesis, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <year> 1988. </year>
Reference-contexts: As for our speculations concerning the ultimate impact of physics on models of computation, authors who endorse similar views include Hillis '82 <ref> [9] </ref>, Bilardi & Preparata '93 [4], and Vitanyi '95 [20]. Margolus '88 [16] discusses the ability of reversible cellular automata to model physics, and Boghosian and Taylor '97 [5] explain techniques for simulating physics efficiently on parallel quantum computers.
Reference: [10] <author> J. E. Pin. </author> <title> On the languages accepted by finite reversible automata. </title> <editor> In Thomas Ottman, editor, </editor> <booktitle> Automata, Languages and Programming, 14th (ICALP), volume 267 of Lecture Notes in Computer Science, </booktitle> <pages> pages 237-249. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Another contribution of our proof is to illustrate ways to use incompressibility arguments in analyzing reversible machines. It is conceivable that similar techniques might increase the range of reversible and irreversible space-time complexity classes that we can separate without resorting to the oracle. 2 Related Work Landauer '61 <ref> [10] </ref> was probably the first to point out that irreversible computer operations cause unavoidable energy dissipation due to the laws of thermodynamics, a fact that has been the primary motivation for the study of reversible models.
Reference: [11] <author> Peter W. Shor. </author> <title> Algorithms for quantum computation: Discrete log and factoring. </title> <booktitle> In Foundations of Computer Science, Proc. 35th Ann. Symp., </booktitle> <pages> pages 124-134. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1994. </year>
Reference-contexts: Bennett '89 [3] introduced a new, more space-efficient reversible simulation for Turing machines. Crescenzi and Papadimitriou '95 [7] extended this to nondeterministic machines. Li and Vitanyi '96 [15] analyzed Bennett's techniques and characterized the benefits of partial reversibility. Most recently, Lange, McKenzie, and Tapp <ref> [11] </ref> showed how to simulate Turing machines reversibly in linear space, but using exponential time. <p> But we are not specialists in quantum systems, and so for now we leave those deep and important questions to others. Acknowledgments Thanks to Dan Spielman for explaining the helpful Baker et al. [1] proof. Gratitude to Alain Tapp of the University of Montreal for discussing his group's work <ref> [11] </ref> and commenting on our proof idea. Thanks very much to Michael Sipser for his guidance and especially for recommending we try an incompressibility argument.
Reference: [12] <author> Tommaso Toffoli. </author> <title> Computation and construction universality of reversible cellular automata. </title> <journal> Computer and System Sciences, </journal> <volume> 15 </volume> <pages> 213-231, </pages> <year> 1977. </year>
Reference-contexts: Lecerf '63 <ref> [12] </ref> first established that reversible Turing machines are universal, and Ben-nett '73 [2] independently rediscovered this, describing a linear-time (but space-inefficient) simulation of irreversible Turing machines by reversible ones.
Reference: [13] <author> Paul M. B. Vitanyi. </author> <title> Physics and the new computation. </title> <booktitle> In Mathematical Foundations of Computer Science, Proc. 20th Int'l Symp. (MFCS), volume 969 of Lecture Notes in Computer Science, </booktitle> <pages> pages 106-128. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year> <note> http://www.cwi.- nl/~paulv/physics.html. 10 </note>
Reference-contexts: The most space-efficient linear-time reversible simulation technique currently known was provided by Bennett ([3], p. 770), and analyzed by Levine and Sherman <ref> [13] </ref> to take space O (S (T =S) 1=(0:58 lg (T=S)) ). Bennett's simulation can be easily seen to work with all self-reversible oracles, so it gives a relativizable upper bound on space.
References-found: 13

