URL: ftp://ftp.cs.unc.edu/pub/users/manocha/PAPERS/KINEMATICS/94ICRA.ps.Z
Refering-URL: http://www.cs.unc.edu/Research/graphics/pubs.html
Root-URL: http://www.cs.unc.edu
Title: A Fast Algorithm and System for the Inverse Kinematics of General Serial Manipulators  
Author: Dinesh Manocha Yunshan Zhu 
Address: Chapel Hill, NC 27599-3175  Chapel Hill, NC 27599-3175  
Affiliation: Department of Computer Science University of North Carolina  Department of Computer Science University of North Carolina  
Note: To Appear in Proc. IEEE Conf. on Robotics and Automation'94  
Abstract: We present fast and robust algorithms for the inverse kinematics of serial manipulators consisting of six or fewer joints. When stated mathematically, the problem of inverse kinematics reduces to simultaneously solving a system of algebraic equations. In this paper, we use a series of algebraic and numeric transformations to reduce the problem to computing the eigenstructure of a matrix pencil. To efficiently compute the eigenstructure, we make use of the symbolic formulation of the matrix and use a number of techniques from linear algebra and matrix computations. The resulting algorithm computes all the solution of a serial manipulator with six or fewer joints in the order of tens of milliseconds on the current workstations. It has been implemented as part of a generic package, KINEM, for the inverse kinematics of serial manipulators. 
Abstract-found: 1
Intro-found: 1
Reference: [AA79] <author> H. Albala and J. </author> <title> Angeles. Numerical solution to the input output displacement equation of the general 7r spatial mechanism. </title> <booktitle> In Proceedings of the Fifth World Congress on Theory of Machines and Mechanisms, </booktitle> <pages> pages 1008-1011, </pages> <year> 1979. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90].
Reference: [ABB + 92] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Don-garra, J. Du Croz, A. Greenbaum, S. Hammarling, and D. Sorensen. </author> <title> LAPACK User's Guide, Release 1.0. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year>
Reference-contexts: The symbolic precomputation uses Maple computer algebra system and the matrix computations are performed using LAPACK <ref> [ABB + 92] </ref>. The performance of the algorithm is mainly determined by the singular value decomposition and eigendecomposition routines.
Reference: [Cra89] <author> J.J. Craig. </author> <title> Introduction to Robotics: Mechanics and Control. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1989. </year>
Reference-contexts: However, no such formulation is known for the general case and no good practical solutions are available to solve them using iterative methods. As a result, most industrial manipulators are designed such that a closed form solution exists <ref> [Cra89] </ref>. The problem of inverse kinematics has been extensively studied in the literature. In the general case, the problem reduces to computing all the solutions of a multivariate algebraic system. The main interest has been in establishing tight bounds on the number of solutions and computing them efficiently and robustly.
Reference: [DC80] <author> J. Duffy and C. Crane. </author> <title> A displacement analysis of the general spatial 7r mechanism. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 15 </volume> <pages> 153-169, </pages> <year> 1980. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. <p> Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in <ref> [DC80, Pri86, LL88a, RR89, RR90] </ref> are constructive and can be used along with algorithms for finding roots of a univariate polynomial. However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic.
Reference: [Dix08] <author> A.L. Dixon. </author> <title> The eliminant of three quantics in two independent variables. </title> <journal> Proceedings of London Mathematical Society, </journal> <volume> 6 </volume> <pages> 49-69, 209-236, </pages> <year> 1908. </year>
Reference-contexts: The resulting problem corresponds to solving three equations in three unknowns. Each equation has degree 6, however the highest degree term corresponds to 2 3 2 5 . Such equations are solved using Dixon's formulation of resultant <ref> [Dix08] </ref> and reducing the problem to eigendecomposition of a 48 fi 48 matrix, followed by back substitution. 5 Implementation and Performance The overall algorithm has been implemented as a pack age, KINEM, for inverse kinematics. It involves symbolic preprocessing, numerical substitution and matrix computa tions.
Reference: [Gan59] <author> F. R. Gantmacher. </author> <title> The Theory of Matrices. </title> <publisher> Chelsea Publishing Company, </publisher> <address> New York, </address> <year> 1959. </year> <note> Volume 1 and 2. </note>
Reference: [GL89] <author> G.H. Golub and C.F. Van Loan. </author> <title> Matrix Computations. </title> <publisher> John Hopkins Press, </publisher> <address> Baltimore, </address> <year> 1989. </year>
Reference-contexts: It is possible that for some special geometries Q is rank deficient. As a result, we perform the rank computation after substitution using the singular-value decompositions (SVD) <ref> [GL89] </ref>. If the rank r is less than 8, we only use r equations to eliminate the power products g i (V 1 ; V 2 ) in (2.4) and thereby obtain (14 r) equations.
Reference: [LL88a] <author> H.Y. Lee and C.G. Liang. </author> <title> Displacement analysis of the general spatial 7-link 7r mechanism. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 23(3) </volume> <pages> 219-226, </pages> <year> 1988. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. <p> It was finally shown that a general 6R manipulator can have at most 16 solutions <ref> [LL88a, RR89] </ref>. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. <p> Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in <ref> [DC80, Pri86, LL88a, RR89, RR90] </ref> are constructive and can be used along with algorithms for finding roots of a univariate polynomial. However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic. <p> This is mainly due to the fact that the problem of computing roots of high degree polynomials can be numerically ill-conditioned [Wil59]. Moreover, the formulations in <ref> [LL88a, RR89, RR90] </ref> are for generic manipulators and do not easily generalize to manipulators with special geometries. For example, if we apply the algorithm presented in [LL88a, RR89] to construct the uni-variate polynomial for a PUMA 560, the resulting polynomial corresponds exactly to zero for all poses of the end-effector. <p> Moreover, the formulations in [LL88a, RR89, RR90] are for generic manipulators and do not easily generalize to manipulators with special geometries. For example, if we apply the algorithm presented in <ref> [LL88a, RR89] </ref> to construct the uni-variate polynomial for a PUMA 560, the resulting polynomial corresponds exactly to zero for all poses of the end-effector.
Reference: [Man92] <author> D. Manocha. </author> <title> Algebraic and Numeric Techniques for Modeling and Robotics. </title> <type> PhD thesis, </type> <institution> Computer Science Division, Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: These are two equations of degree 4 each, however the highest degree of 4 or 5 in each of these equation is 2. We compute all the solutions to these equations using Sylvester resultant formulation and reducing the problem to an eigenvalue formulation <ref> [Man92] </ref>. The resulting matrix is 8 fi 8 and we get at most 8 real solutions of these equations.
Reference: [MC92] <author> D. Manocha and J.F. Canny. </author> <title> Real time inverse kinematics of general 6r manipulators. </title> <booktitle> In Proceedings of IEEE Conference on Robotics and Automation, </booktitle> <pages> pages 383-389, </pages> <year> 1992. </year>
Reference-contexts: For example, the best known algorithm for the inverse kinematics of a general 6R manipulator takes about 10 seconds on an average of CPU time on an IBM 370 3090 using double precision arithmetic [WM91]. The final approach is based on use of linear algebra formulation of the problem <ref> [MC92] </ref>. In particular, the algebraic formulation given in [RR89] is used along with matrix 1 computations. As opposed to deriving a univariate polyno-mial, the problem of inverse kinematics is reduced to computing the eigendecomposition of a numeric matrix. It has been applied to general 6R manipulators in [MC92] and involves symbolic <p> of the problem <ref> [MC92] </ref>. In particular, the algebraic formulation given in [RR89] is used along with matrix 1 computations. As opposed to deriving a univariate polyno-mial, the problem of inverse kinematics is reduced to computing the eigendecomposition of a numeric matrix. It has been applied to general 6R manipulators in [MC92] and involves symbolic preprocessing, numeric substitution and matrix computations. In this paper, we extend on the linear formulation of the inverse kinematics problem and derive properties of manipulators with arbitrary geometry. <p> Otherwise it is a singular matrix polynomial. The following theorem shows how this problem of zero computation can be linearized, and the problem of inverse kinematics is reduced to computing appropriate zeros of a matrix pencil of the form, A B <ref> [MC92, VDD83] </ref>. <p> In case the matrix polynomial is regular and M 2 is well conditioned, this can be further reduced to computing the eigenvalues of <ref> [MC92] </ref> C = 0 I 1 1 4 Robust Algorithm for Inverse Kine matics A generic serial manipulator results in regular matrix polynomials and the solutions are computed using the eigendecomposition of the matrices highlighted in the previous section.
Reference: [Pri86] <author> E.J.F. Primrose. </author> <title> On the input-output equation of the general 7r-mechanism. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 21 </volume> <pages> 509-510, </pages> <year> 1986. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. <p> Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in <ref> [DC80, Pri86, LL88a, RR89, RR90] </ref> are constructive and can be used along with algorithms for finding roots of a univariate polynomial. However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic.
Reference: [RR89] <author> M. Raghavan and B. Roth. </author> <title> Kinematic analysis of the 6r manipulator of general geometry. </title> <booktitle> In International Symposium on Robotics Research, </booktitle> <pages> pages 314-320, </pages> <address> Tokyo, </address> <year> 1989. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. <p> It was finally shown that a general 6R manipulator can have at most 16 solutions <ref> [LL88a, RR89] </ref>. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. <p> Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in <ref> [DC80, Pri86, LL88a, RR89, RR90] </ref> are constructive and can be used along with algorithms for finding roots of a univariate polynomial. However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic. <p> This is mainly due to the fact that the problem of computing roots of high degree polynomials can be numerically ill-conditioned [Wil59]. Moreover, the formulations in <ref> [LL88a, RR89, RR90] </ref> are for generic manipulators and do not easily generalize to manipulators with special geometries. For example, if we apply the algorithm presented in [LL88a, RR89] to construct the uni-variate polynomial for a PUMA 560, the resulting polynomial corresponds exactly to zero for all poses of the end-effector. <p> Moreover, the formulations in [LL88a, RR89, RR90] are for generic manipulators and do not easily generalize to manipulators with special geometries. For example, if we apply the algorithm presented in <ref> [LL88a, RR89] </ref> to construct the uni-variate polynomial for a PUMA 560, the resulting polynomial corresponds exactly to zero for all poses of the end-effector. <p> The final approach is based on use of linear algebra formulation of the problem [MC92]. In particular, the algebraic formulation given in <ref> [RR89] </ref> is used along with matrix 1 computations. As opposed to deriving a univariate polyno-mial, the problem of inverse kinematics is reduced to computing the eigendecomposition of a numeric matrix. It has been applied to general 6R manipulators in [MC92] and involves symbolic preprocessing, numeric substitution and matrix computations. <p> Thus, the problem of inverse kinematics is reduced to solving 6 equations in 6 unknowns. 2.1 Raghavan and Roth Formulation Raghavan and Roth have described methods to reduce this system of six equations to a univariate polynomial <ref> [RR89, RR90] </ref>. The overall approach is similar for all combinations of revolute and prismatic joints, though the degrees of the resulting polynomial are different. <p> The main advantage of the matrix representation arises from the fact that we can use a number of results from linear algebra to compute the corresponding zeros. To utilize the structure, we transform the system of equations, (2.7) into a square system using dialytic elimination, as shown in <ref> [RR89] </ref>. 3.1 Square System The order of the matrix formulation of the inverse kinematics problem is a function of the geometry of the given manipulator. Lets first consider manipulators with two prismatic joints and there are two revolute joints separating the two prismatic joints.
Reference: [RR90] <author> M. Raghavan and B. Roth. </author> <title> A general solution for the inverse kinematics of all series chains. </title> <booktitle> Proc. of the 8th CISM-IFTOMM Symposium on Robots and Manipulators, </booktitle> <year> 1990. </year>
Reference-contexts: It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in <ref> [RR90] </ref>. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in [DC80, Pri86, LL88a, RR89, RR90] are constructive and can be used along with algorithms for finding roots of a univariate polynomial. <p> Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90]. When it comes to practice, three different approaches have been highlighted in the literature. The algebraic formulations given in <ref> [DC80, Pri86, LL88a, RR89, RR90] </ref> are constructive and can be used along with algorithms for finding roots of a univariate polynomial. However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic. <p> This is mainly due to the fact that the problem of computing roots of high degree polynomials can be numerically ill-conditioned [Wil59]. Moreover, the formulations in <ref> [LL88a, RR89, RR90] </ref> are for generic manipulators and do not easily generalize to manipulators with special geometries. For example, if we apply the algorithm presented in [LL88a, RR89] to construct the uni-variate polynomial for a PUMA 560, the resulting polynomial corresponds exactly to zero for all poses of the end-effector. <p> Given a specific geometry it is possible to make use of its structure in the symbolic derivation, as shown for 6R manipulators with the last last three intersecting joints <ref> [RR90] </ref>. However, no equivalent algorithmic approach is known for all possible special geometries. The second approach is based upon homotopy methods to solve a system of polynomial equations and has been demonstrated in [TM85, WM91]. <p> It has been applied to general 6R manipulators in [MC92] and involves symbolic preprocessing, numeric substitution and matrix computations. In this paper, we extend on the linear formulation of the inverse kinematics problem and derive properties of manipulators with arbitrary geometry. Based on the algebraic derivations in <ref> [RR90] </ref>, we show that the inverse kinematics problem corresponds to eigendecomposition of a matrix polynomial of the form A + B + C 2 , where A, B and C are numeric square matrices. <p> Thus, the problem of inverse kinematics is reduced to solving 6 equations in 6 unknowns. 2.1 Raghavan and Roth Formulation Raghavan and Roth have described methods to reduce this system of six equations to a univariate polynomial <ref> [RR89, RR90] </ref>. The overall approach is similar for all combinations of revolute and prismatic joints, though the degrees of the resulting polynomial are different. <p> From these 6 equations, 8 additional equations are obtained by taking their cross products and other combinations <ref> [RR90] </ref>. Taken as a group, there are 14 equations in 5 unknowns and they are represented as a linear system by taking power products of different variables together. In formulating the linear system, one of the variables is suppressed and eventually a polynomial in this suppressed variable is obtained. <p> The overall algorithm for these special cases is similar, except that the orders of the matrices are different and therefore, the number of equations chosen to eliminate the variables and the order of the resulting matrices derived from these equations are different. The rest of the algorithm in <ref> [RR90] </ref> proceeds by using 8 of the 14 equations to solve for the power products on the right-hand-side, and then use these solutions to eliminate these power products from the remaining 6 equations. <p> The analysis presented also include some manipulator geometries with at least three prismatic joints <ref> [RR90] </ref>. Lets consider manipulators consisting of at most one prismatic joints or manipulators with two prismatic separated by one or three revolute joints. In these cases, M ( 3 ) is a 6 fi 9 matrix in (2.7). <p> Currently the algorithm is restricted to manipulators consisting of up to six joints, and it makes no assumption about the geometry of the manipulator. Based on the algebraic formulation in <ref> [RR90] </ref>, we reduce the problem to computing zeros of matrix polynomials and matrix pencils. In order to handle special geometries, we develop robust algorithms based on the matrix formulation. The overall algorithm has been implemented as part of a package, KINEM.
Reference: [RRS73] <author> B. Roth, J. Rastegar, and V. Scheinman. </author> <title> On the design of computer controlled manipulators. </title> <booktitle> In On the Theory and Practice of Robots and Manipulators, </booktitle> <pages> pages 93-113. </pages> <booktitle> First CISM IFToMM Symposium, </booktitle> <year> 1973. </year>
Reference-contexts: the correct computation of all the solutions. fl Supported in part by DARPA Cont. # DAEA-18-90-C-0044 and a Junior Faculty Award y Supported in part by NIH National Center for Research Resources grant RR-02170 Among all manipulator configurations, inverse kinematics of 6R manipulators seems to have received the most attention <ref> [RRS73, AA79, DC80, Pri86, LL88a, RR89] </ref>. It was finally shown that a general 6R manipulator can have at most 16 solutions [LL88a, RR89]. Similar bounds on manipulators consisting of a combination of revolute and prismatic joints have been derived in [RR90].
Reference: [SV89] <author> M.W. Spong and M. Vidyasagar. </author> <title> Robot Dynamics and Control. </title> <publisher> John Wiley and Sons, </publisher> <year> 1989. </year>
Reference-contexts: Methods to handle special geometry are presented in Section 4. Finally, in Section 5 we discuss how these methods are implemented in KINEM and discuss their performance and implementation on the PUMA configuration. 2 Background The serial manipulators are modeled using the Denavit-Hartenberg formalism <ref> [SV89] </ref>. In particular, there is a 4 fi 4 transformation matrix, A i , relating the position of joint i+1 to joint i.
Reference: [TM85] <author> L.W. Tsai and A.P. Morgan. </author> <title> Solving the kinematics of the most general six and five-degree-of-freedom manipulators by continuation methods. </title> <journal> Transactions of the ASME, Journal of Mechanisms, Transmissions and Automation in Design, </journal> <volume> 107 </volume> <pages> 189-200, </pages> <year> 1985. </year>
Reference-contexts: However, no equivalent algorithmic approach is known for all possible special geometries. The second approach is based upon homotopy methods to solve a system of polynomial equations and has been demonstrated in <ref> [TM85, WM91] </ref>. As opposed to eliminating variables from a system of equations, they compute the solutions of the algebraic system by following paths in the complex space. Though robust in practice, the current algorithms and implementations are slow for practical applications.
Reference: [VDD83] <author> P. Van Dooren and P. Dewilde. </author> <title> The eigenstructure of an arbitrary polynomial matrix: </title> <journal> Computational aspects. Lin. Alg. Appl., </journal> <volume> 50 </volume> <pages> 545-579, </pages> <year> 1983. </year>
Reference-contexts: Otherwise it is a singular matrix polynomial. The following theorem shows how this problem of zero computation can be linearized, and the problem of inverse kinematics is reduced to computing appropriate zeros of a matrix pencil of the form, A B <ref> [MC92, VDD83] </ref>.
Reference: [Wil59] <author> J.H. Wilkinson. </author> <title> The evaluation of the zeros of ill-conditioned polynomials. parts i and ii. </title> <journal> Numer. Math., </journal> <volume> 1 </volume> <pages> 150-166 and 167-180, </pages> <year> 1959. </year>
Reference-contexts: However, this approach can be slow in practice (due to symbolic expansion) and suffer from numerical problems, in the context of floating point arithmetic. This is mainly due to the fact that the problem of computing roots of high degree polynomials can be numerically ill-conditioned <ref> [Wil59] </ref>. Moreover, the formulations in [LL88a, RR89, RR90] are for generic manipulators and do not easily generalize to manipulators with special geometries.
Reference: [WL84] <author> D.E. </author> <title> Whitney and C.A. Lozinski. Industrial robot calibration methods and results. </title> <booktitle> In Proceedings of the International Computers in Engineering Conference, </booktitle> <pages> pages 92-100, </pages> <year> 1984. </year>
Reference: [WM91] <author> C. Wampler and A.P. Morgan. </author> <title> Solving the 6r inverse position problem using a generic-case solution methodology. </title> <journal> Mechanisms and Machine Theory, </journal> <volume> 26(1) </volume> <pages> 91-106, </pages> <year> 1991. </year>
Reference-contexts: However, no equivalent algorithmic approach is known for all possible special geometries. The second approach is based upon homotopy methods to solve a system of polynomial equations and has been demonstrated in <ref> [TM85, WM91] </ref>. As opposed to eliminating variables from a system of equations, they compute the solutions of the algebraic system by following paths in the complex space. Though robust in practice, the current algorithms and implementations are slow for practical applications. <p> Though robust in practice, the current algorithms and implementations are slow for practical applications. For example, the best known algorithm for the inverse kinematics of a general 6R manipulator takes about 10 seconds on an average of CPU time on an IBM 370 3090 using double precision arithmetic <ref> [WM91] </ref>. The final approach is based on use of linear algebra formulation of the problem [MC92]. In particular, the algebraic formulation given in [RR89] is used along with matrix 1 computations.
References-found: 20

