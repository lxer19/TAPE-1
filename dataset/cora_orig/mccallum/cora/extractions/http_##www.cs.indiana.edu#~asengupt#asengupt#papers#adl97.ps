URL: http://www.cs.indiana.edu/~asengupt/asengupt/papers/adl97.ps
Refering-URL: http://www.cs.indiana.edu/~asengupt/
Root-URL: http://www.cs.indiana.edu
Email: asengupt@indiana.edu adillon@indiana.edu  
Title: Query By Templates: A Generalized Approach for Visual Query Formulation for Text Dominated Databases  
Author: Arijit Sengupta Andrew Dillon 
Address: Bloomington, IN 47405 Bloomington, IN 47405  
Affiliation: Computer Science Department School of Library Information Science Indiana University Indiana University  
Abstract: The WWW has a great potential of evolving into a globally distributed digital document library.The primary use of such a library is to retrieve information quickly and easily. Because of the size of these libraries, simple keyword searches often result in too many matches. More complex searches involving boolean expressions are difficult to formulate and understand. This paper describes QBT (Query By Templates), a visual method for formulating queries for structured document databases modeled with SGML. Based on Zloof 's QBE (Query By Example), this method incorporates the structure of the documents for composing powerful queries. The goal of this technique is to design an interface for querying structured documents without prior knowledge of the internal structure. This paper describes the rationale behind QBT, illustrates the query formulation principles using QBT, and describes results obtained from a usability analysis on a prototype implementation of QBT on the Web using the Java TM programming language. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Serge Abiteboul, Sophie Cluet, and Tova Milo. </author> <title> Querying and updating the file. </title> <booktitle> Proceedings, 19th Intl. Conference on Very Large Data Bases, </booktitle> <pages> pages 73-84, </pages> <year> 1993. </year>
Reference-contexts: These types of searches are less common in traditional information retrieval systems which lack the capability of involving structure in searches. Searches involving structure and complex operations such as join have been the object of recent research <ref> [4, 1] </ref>. In this paper, we will refer to such searches as "queries". 2 Query languages for structured doc uments The object of developing languages for the purpose of querying is to attain the capability of involving complex operations involving text (data) and structure (meta-data).
Reference: [2] <institution> American National Standards Institute, New York. ANSI X3.135-1992 and ISO/IEC 9075:1992, Database Language SQL, </institution> <year> 1992. </year>
Reference-contexts: These database models are based on strong theoretical foundations and have formal procedural languages to manipulate data. In the case of relational databases, the most commonly used query languages are SQL (Structured Query Language) <ref> [2] </ref> and QBE (Query By Example)[22]. SQL is a textual language with a simple English-like syntax, and is widely implemented in most commercial database systems. QBE provides a visual method for posing queries and is suitable even for inexperienced users.
Reference: [3] <author> Ricardo Baeza-Yates and Gonzalo Navarro. </author> <title> Integrating contents and structures in text retrieval. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 25(4) </volume> <pages> 67-79, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: However, query languages for document databases need to effectively use the document hierarchy. Research on query languages for documents has unearthed a number of such languages. Two very useful surveys of such languages and systems can be obtained from <ref> [13, 3] </ref>. Most database systems implement specific database models, such as the relational model and Object-Oriented (OO) model. These database models are based on strong theoretical foundations and have formal procedural languages to manipulate data.
Reference: [4] <author> Ricardo A. Baeza-Yates and Gaston H. Gonnet. </author> <title> Efficient text searching of regular expressions. </title> <booktitle> Proceedings, 16th International Colloquium on Automata, Languages, and Programming, </booktitle> <pages> pages 46-62, </pages> <year> 1989. </year>
Reference-contexts: These types of searches are less common in traditional information retrieval systems which lack the capability of involving structure in searches. Searches involving structure and complex operations such as join have been the object of recent research <ref> [4, 1] </ref>. In this paper, we will refer to such searches as "queries". 2 Query languages for structured doc uments The object of developing languages for the purpose of querying is to attain the capability of involving complex operations involving text (data) and structure (meta-data).
Reference: [5] <author> Paul Booth. </author> <title> An Introduction to Human-computer Interaction. </title> <publisher> Laurence ErlBaum Associates Publishers, </publisher> <year> 1989. </year>
Reference-contexts: Forms always look the same, whether the underlying database is a poem, a dictionary, a quotation collection, or even a relational database. However, templates can be custom-designed for different types of databases. This way, templates can provide a direct reflection of the users' mental models <ref> [5, Ch.6] </ref>, a significant factor in the design of good user-interfaces. Moreover, templates use the principle of familiarity [15], which is demonstrated to work well for novice users.
Reference: [6] <author> Nathan Combs. </author> <title> Large text database visualization. </title> <booktitle> Advances in Classification Research, Proceedings of the 3rd ASIS SIG/CR Classification Research Workshop, </booktitle> <volume> 3, </volume> <month> Oct </month> <year> 1992. </year>
Reference-contexts: Although the approaches here are directed primarily towards visualization of data, they do provide useful incentive in this work. TEXTVIZ. TEXTVIZ <ref> [6] </ref> is a system for intuitively visualizing, searching, and querying the contents of large text databases under development at TASC. This method uses a map-like representation of documents that shows users how components of documents are related to each other in the collection.
Reference: [7] <author> A. Creed, I. Dennis, and S. </author> <title> Newstead. </title> <journal> Proof-reading on VDUs. Behavior and Information Technology, </journal> <volume> 6(1) </volume> <pages> 3-13, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [8]. Research shows strong evidence of paper as a more natural means of reading <ref> [7, 9] </ref> as well as a means to rectify the problems with reading from a screen [10, 16]. One major advantage of electronic documents over their paper counterpart is the capability of automated searching.
Reference: [8] <author> Andrew Dillon. </author> <title> Designing Usable Electronic Text: Ergonomic Aspects of Human Information Usage. </title> <publisher> Tay-lor & Francis, </publisher> <address> London; Bristol, PA, </address> <year> 1994. </year>
Reference-contexts: Although hypertext documents may provide a more flexible way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience. Whether readers are more comfortable with screen reading or paper reading is a debatable question <ref> [8] </ref>. Research shows strong evidence of paper as a more natural means of reading [7, 9] as well as a means to rectify the problems with reading from a screen [10, 16]. One major advantage of electronic documents over their paper counterpart is the capability of automated searching. <p> One major advantage of electronic documents over their paper counterpart is the capability of automated searching. Many information retrieval techniques have been proposed [20] that can quickly extract portions of documents matching given keywords. Similar searches can be quite difficult in paper documents <ref> [8] </ref>. However, keyword searches do not often retrieve the target documents. For large documents combining text with the logical structure of documents is often necessary. In many cases, many component search conditions need to be combined using boolean expressions to build a narrower search.
Reference: [9] <author> J.D. Gould, L. Alfaro, V. Barnes, R. Finn, N. Grischkowsky, and A. Minuto. </author> <title> Reading is slower from crt displays than from paper: Attempts to isolate a single variable explanation. </title> <booktitle> Human Factors, </booktitle> <volume> 29(3) </volume> <pages> 269-299, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [8]. Research shows strong evidence of paper as a more natural means of reading <ref> [7, 9] </ref> as well as a means to rectify the problems with reading from a screen [10, 16]. One major advantage of electronic documents over their paper counterpart is the capability of automated searching.
Reference: [10] <author> J.D. Gould, L. Alfaro, R. Finn, B. Haupt, and A. Min-uto. </author> <title> Reading from crt displays can be as fast as reading from paper. </title> <booktitle> Human Factors, </booktitle> <volume> 29(5) </volume> <pages> 497-517, </pages> <year> 1987. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [8]. Research shows strong evidence of paper as a more natural means of reading [7, 9] as well as a means to rectify the problems with reading from a screen <ref> [10, 16] </ref>. One major advantage of electronic documents over their paper counterpart is the capability of automated searching. Many information retrieval techniques have been proposed [20] that can quickly extract portions of documents matching given keywords. Similar searches can be quite difficult in paper documents [8].
Reference: [11] <author> International Organization for Standardization, </author> <title> Geneva, Switzerland. ISO 8879: Information Processing Text and Office Systems Standard Generalized Markup Language (SGML), </title> <year> 1986. </year>
Reference-contexts: 1 Introduction The SGML Standard <ref> [11] </ref> has introduced a method for using documents as a means for information interchange and retrieval. We can now use properly fl Copyright 1997 IEEE. Published in the Proceedings of ADL'97, May 7-9, 1997 in Washington D.C. Personal use of this material is permitted. <p> The SGML standard extends the use of electronic documents beyond word processing and towards a means for information interchange. SGML was originally designed as a portable document encoding format for easy interchange between various platforms and systems. As stated in the standard <ref> [11] </ref>, SGML was to be used "for publishing in its broadest definition, ranging from single medium conventional publishing to multimedia data base publishing." SGML achieves this goal by involving a modeling phase in document design and by completely separating layout and structure.
Reference: [12] <author> T. Alan Keahey and Edward L. Robertson. </author> <title> Techniques for non-linear magnification transformations. </title> <booktitle> In Proceedings, Visualisation '96 Information Visualization Symposium. IEEE, </booktitle> <month> October </month> <year> 1996. </year>
Reference-contexts: On the other hand, a structure template can be easily used to navigate through complex hierarchical structures. Even for complex hierarchies, the focus can be concentrated in the regions of interest using advanced methods like differential magnification <ref> [12] </ref>. Another advantage of the template method is its direct relationship to the internal structure of the database. Forms always look the same, whether the underlying database is a poem, a dictionary, a quotation collection, or even a relational database. However, templates can be custom-designed for different types of databases.
Reference: [13] <author> Arjan Loeffen. </author> <title> Text databases: A survey of text models and systems. </title> <booktitle> SIGMOD RECORD, </booktitle> <month> March </month> <year> 1994. </year>
Reference-contexts: However, query languages for document databases need to effectively use the document hierarchy. Research on query languages for documents has unearthed a number of such languages. Two very useful surveys of such languages and systems can be obtained from <ref> [13, 3] </ref>. Most database systems implement specific database models, such as the relational model and Object-Oriented (OO) model. These database models are based on strong theoretical foundations and have formal procedural languages to manipulate data.
Reference: [14] <author> Ted Nelson. </author> <note> Literary Machines, volume Version 87.1. Published by author, </note> <year> 1987. </year>
Reference-contexts: The success of the search depends upon the reader's knowledge of the subject matter, the organization of the text, and similar factors. The recent advent of hypertext documents has changed the traditional sequential method of browsing. Browsing in hypertext documents is considered non-linear <ref> [14, 21] </ref> usually performed by following links in the document to other related areas of the same document or entirely different documents. Although hypertext documents may provide a more flexible way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience.
Reference: [15] <author> Donald Norman. </author> <title> The Design of Everyday things. </title> <publisher> Doubleday Currency, </publisher> <year> 1990. </year>
Reference-contexts: However, templates can be custom-designed for different types of databases. This way, templates can provide a direct reflection of the users' mental models [5, Ch.6], a significant factor in the design of good user-interfaces. Moreover, templates use the principle of familiarity <ref> [15] </ref>, which is demonstrated to work well for novice users. The only disadvantage of templates is that good templates require expensive graphics terminals, while forms work quite well with terminals without graphics capabilities.
Reference: [16] <author> D. Oborne and D. Holton. </author> <title> Reading from screen versas paper: there is no difference. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 28(1) </volume> <pages> 1-9, </pages> <year> 1988. </year>
Reference-contexts: Whether readers are more comfortable with screen reading or paper reading is a debatable question [8]. Research shows strong evidence of paper as a more natural means of reading [7, 9] as well as a means to rectify the problems with reading from a screen <ref> [10, 16] </ref>. One major advantage of electronic documents over their paper counterpart is the capability of automated searching. Many information retrieval techniques have been proposed [20] that can quickly extract portions of documents matching given keywords. Similar searches can be quite difficult in paper documents [8].
Reference: [17] <institution> Open Text Corporation, Waterloo, Ontario, Canada. Open Text 5.0, </institution> <year> 1994. </year>
Reference-contexts: The engine generates its output in HTML which is displayed by the clients. We wrote the engine in C/C++, using the API (Application Programming Interface) provided by the Pat <ref> [17] </ref> software. However, due to limitations of the processing capabilities of Pat, this engine does not support variables or joins.
Reference: [18] <author> Daniel E. Rose and Richard K. Belew. </author> <title> Toward a direct-manipulation interface for conceptual information retrieval systems. Interfaces for Information Retrieval and Online Systems the state of the art, </title> <year> 1991. </year>
Reference: [19] <author> Jeffrey Rubin. </author> <title> Handbook of Usability Testing: How to plan, design and conduct effective tests. </title> <publisher> John Wiley & Sons, Inc., </publisher> <year> 1994. </year>
Reference-contexts: Accuracy: The degree of accuracy of the answers. 3. Satisfaction: How satisfied the users were after using the interface (measured by self-reports in written debriefings.) Twenty subjects were chosen for the experiment. The experiment was conducted using a "between-users" strategy <ref> [19] </ref>, where two distinct groups of users use the two platforms. In our experiment, ten subjects were given the Java-based interface (see Figure 7), while another ten (five novices, five experts) were given the form-based interface (see Figure 8).
Reference: [20] <author> Gerard Salton. </author> <title> Developments in automatic text retrieval. </title> <journal> Science, </journal> <volume> 253 </volume> <pages> 974-980, </pages> <year> 1991. </year>
Reference-contexts: One major advantage of electronic documents over their paper counterpart is the capability of automated searching. Many information retrieval techniques have been proposed <ref> [20] </ref> that can quickly extract portions of documents matching given keywords. Similar searches can be quite difficult in paper documents [8]. However, keyword searches do not often retrieve the target documents. For large documents combining text with the logical structure of documents is often necessary.
Reference: [21] <author> Ben Shneiderman and Greg Kearsley. </author> <title> Hypertext Hands-on! An Introduction to a New Way of Organizing and accessing Information. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The success of the search depends upon the reader's knowledge of the subject matter, the organization of the text, and similar factors. The recent advent of hypertext documents has changed the traditional sequential method of browsing. Browsing in hypertext documents is considered non-linear <ref> [14, 21] </ref> usually performed by following links in the document to other related areas of the same document or entirely different documents. Although hypertext documents may provide a more flexible way of browsing, finding information in hypertext documents by browsing still requires human intelligence, knowledge and experience.
Reference: [22] <author> M. M. Zloof. </author> <title> Query by example: A database language. </title> <journal> IBM Systems Journal, </journal> <volume> 16(4), </volume> <year> 1977. </year>
Reference-contexts: Current implementations primarily use form-based approaches for building queries. In this section, we take a closer look at QBE and form-based querying. Query By Example (QBE). Query By Example <ref> [22] </ref> is a visual language for querying relational databases. This language has a simple interface composed of tabular skeletons representing tables in the database. Users specify queries by entering sample values (or examples) in appropriate areas of the table skeleton. <p> As described earlier, users express their queries by indicating the search keywords in the appropriate regions of the template. In this section, we show all the different types of possible searches that can be performed with QBT. One can treat QBE <ref> [22] </ref> as a special case of QBT where the templates used are table skeletons that instantiate tables in the database. In QBE, queries are specified by entering values in proper positions of the tables. <p> Although QBE uses a 2D tables for querying, the meta-data (attributes of the relations) only appear along the horizontal axis as column headings of the tables. QBE uses the rows to specify multiple search conditions and logical operations between the search conditions (see examples in <ref> [22] </ref>.) In QBT, the regions (meta-data) are distributed along both dimensions of the template, utilizing whole template plane for visualizing the structure. Logical operations between regions can be expressed by physically connecting two or more regions via a logical operator.
References-found: 22

