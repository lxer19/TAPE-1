URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-90-19.ps.Z
Refering-URL: ftp://ftp.cse.ucsc.edu/pub/tr/README.html
Root-URL: http://www.cse.ucsc.edu
Title: "Generation Scavenging: A non-disruptive high performance storage reclamation algorithm," in ACM SIGPLAN/SIGSOFT Symposium on Practical
Author: [] D. Ungar, [] D. Ungar and F. Jackson, [] D. M. Ungar, [] C. B. Weinstock, 
Date: May 1989.  Apr. 1984.  Sept. 1988.  Nov. 1987.  
Note: 106 [33] B. Stroustrup, "Possible directions for C++," in Usenix C++ Workshop Proceedings [39], pp. 399-416. [34] B. Stroustrup, "What is "object-oriented programming"," in Usenix C++ Work shop Proceedings [39], pp. 159-180. [35] B. Stroustrup, C++ Reference Manual. AT&T,  PA), pp. 157-167, Association for Computing Machinery,  in OOPSLA '88 Conference Proceedings, pp. 1-17, Association for Computing Machinery, ACM Press,  Cambridge, MA: The MIT Press, 1986. [39] Usenix Association, Usenix C++ Workshop Proceedings, (Santa Fe, NM),  PhD thesis, Carnegie-Mellon Uni versity, 1976. [41] A. Wikstrom, Functional programming using standard ML. Prentice Hall, 1987.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> "ANSI C Standard," </author> <year> 1989. </year> <title> American National Standard X3.159-1989. </title>
Reference: [2] <author> A. W. Appel, </author> <title> "Garbage collection can be faster than stack allocation," </title> <journal> Information Processing Letters, </journal> <volume> vol. 25, </volume> <pages> pp. 275-279, </pages> <month> June </month> <year> 1987. </year>
Reference: [3] <author> A. W. Appel, </author> <title> "Simple generational garbage collection and fast allocation," </title> <journal> Software|Practice and Experience, </journal> <volume> vol. 19, </volume> <pages> pp. 171-183, </pages> <month> Feb. </month> <year> 1989. </year>
Reference: [4] <author> A. W. Appel, J. R. Ellis, and K. Li, </author> <title> "Real-time concurrent collection on stock multiprocessors," </title> <booktitle> in Proceedings of the SIGPLAN '88 Conference on Programming Language Design and Implementation, </booktitle> <pages> pp. 11-20, </pages> <publisher> Association for Computing Machinery, ACM Press, </publisher> <month> July </month> <year> 1988. </year>
Reference: [5] <author> H. G. Baker, </author> <title> "List processing in real time on a serial computer," </title> <journal> Communications of the ACM, </journal> <volume> vol. 21, </volume> <pages> pp. 280-294, </pages> <month> Apr. </month> <year> 1978. </year>
Reference: [6] <author> J. F. Bartlett, </author> <title> "Compacting garbage collection with ambiguous roots," </title> <type> tech. rep., </type> <institution> Digital Equipment Corporation, Western Research Laboratory, Palo Alto, Califor-nia, </institution> <month> Feb. </month> <year> 1988. </year>
Reference: [7] <author> J. F. Bartlett, </author> <title> "Mostly copying garbage collection picks up generations and C++," </title> <type> Tech. Rep. </type> <institution> TN-12, DEC WRL, </institution> <month> Oct. </month> <year> 1989. </year>
Reference: [8] <author> H.-J. Boehm and M. Weiser, </author> <title> "Garbage collection in an uncooperative environment," </title> <journal> Software|Practice and Experience, </journal> <volume> vol. 18, </volume> <pages> pp. 807-820, </pages> <month> Sept. </month> <year> 1988. </year>
Reference: [9] <author> A. Burgess, </author> <month> Apr. </month> <year> 1990. </year> <type> Personal Communication. </type>
Reference: [10] <author> J. A. Campbell, </author> <title> "A note on an optimal-fit method for dynamic allocation of storage," </title> <journal> Computer Journal, </journal> <volume> vol. 14, </volume> <pages> pp. 7-9, </pages> <month> Feb. </month> <year> 1971. </year>
Reference: [11] <author> L. Cardelli, J. Donahue, L. Glassman, M. Jordan, B. Kalsow, and G. Nelson, </author> <type> "Modula-3 report," tech. rep., </type> <institution> Digital Systems Research Center and Olivetti Research Center, </institution> <address> Palo Alto, CA, </address> <year> 1988. </year>
Reference: [12] <author> J. Cohen, </author> <title> "Garbage collection of linked data structures," </title> <journal> ACM Computing Surveys, </journal> <volume> vol. 13, </volume> <pages> pp. 341-367, </pages> <month> Sept. </month> <year> 1981. </year>
Reference: [13] <author> A. Demers, </author> <month> Dec. </month> <year> 1989. </year> <title> private communication. </title>
Reference: [14] <author> A. Demers, M. Weiser, B. Hayes, H. Bohem, D. Bobrow, and S. Shenker, </author> <title> "Combining generational and conservative garbage collection: Framework and implementations," </title> <booktitle> in popl90, </booktitle> <pages> pp. 261-269, </pages> <year> 1980. </year>

References-found: 14

