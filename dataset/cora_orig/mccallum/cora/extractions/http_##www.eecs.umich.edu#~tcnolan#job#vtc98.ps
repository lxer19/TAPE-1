URL: http://www.eecs.umich.edu/~tcnolan/job/vtc98.ps
Refering-URL: http://www.eecs.umich.edu/~tcnolan/
Root-URL: http://www.eecs.umich.edu
Title: A RECURSIVE METHOD FOR CALCULATING ERROR PROBABILITIES FOR A REED-SOLOMON CODEWORD  
Author: Troy C. Nolan and Wayne E. Stark 
Address: Ann Arbor, Michigan  
Affiliation: University of Michigan Dept. of Electrical Engineering and Computer Science  
Abstract: In this paper a single Reed-Solomon (RS) codeword is transmitted in a channel where each transmitted symbol may experience a different interference level. Each received symbol is decoded using a hard decision mechanism, and the entire codeword is decoded using a bounded-distance (BD) decoder. Due to complexity and speed concerns, it is common practice to assume the probability of incorrect codeword decoding is negligible, and assume the decoder either correctly decodes the received codeword or fails the decoding process. However, we develop an efficient, recursive, mechanism for generating the approximate probabilities of correct decode, incorrect decode, and decoder failure. In the case where each symbol experiences the same fading level our approximation is tight, and in the case where each symbol is faded differently we show a fast mechanism which gives a lower bound and an upper bound. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. E. Blahut, </author> <title> "Theory and Practice of Error Control Codes," </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1983. </year>
Reference-contexts: gfiI l6=j ]p l +[P fB l1 j1jk gfiI l6=0 ](1p l ) (4) The probability of error to a weight k codeword can be found by summing, P ID;k = A k P k j=0 jjk g; (5) where A k is the weight enumerator for an MDS code <ref> [1] </ref> and P k = P is the probability of receiving a certain weight k codeword. <p> Unfortunately, this vector is dependent upon the position of the zero's in the weight k codeword under consideration. In fact, there are N k combinations of zero positions for a weight k codeword <ref> [1] </ref>. Thus, the number of cases to consider grows exponentially. For a realistic code, this complexity limitation is unacceptable.
Reference: [2] <author> A. Michelson and A. Levesque, </author> <title> "Error Control Techniques for Digital Communication," </title> <publisher> John Wiley and Sons, Inc., </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: Errors only BD decoders generally fail to decode to a codeword when the received codeword is not in the decoding sphere of any codeword <ref> [2] </ref>. Thus, the prob ability of decoding failure is as follows: P DF = 1 P CD P ID (7) 4 Case II: Symbols May Experi ence Different Interference While Section 3 assumed each symbol in the transmitted codeword experienced the same interference, this section does not. <p> Probability of in-correct decode when each symbol experiences potentially different interference, P id . 6. Probability of decode failure when each symbol experiences potentially different interference, P df . The major result of this work is the reduction in calculation complexity. Standard methods, such as those found in <ref> [2] </ref>, achieve their result by brute force searching. This method, while accurate, must consider all possibilities of received codewords. In case 1, the complexity of our method grows as O (N ) while the brute force method grows as O (N ).
Reference: [3] <author> S. Wilson, </author> <title> "Digital Modulation and Coding," </title> <publisher> Prentice-Hall, Inc., </publisher> <address> New Jersey, 1996, p. </address> <pages> 211-215. 5 </pages>
References-found: 3

