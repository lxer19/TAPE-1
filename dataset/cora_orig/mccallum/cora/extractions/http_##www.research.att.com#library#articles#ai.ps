URL: http://www.research.att.com/library/articles/ai.ps
Refering-URL: http://www.research.att.com/library/articles/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Brief Look at C  
Author: Bjarne Stroustrup 
Address: Murray Hill, New Jersey 07974  
Affiliation: AT&T Bell Laboratories  
Abstract: This note describes some key aspects of what C ++ is and of how C ++ has developed over the years. The perspective is that of an experienced C ++ user looking at C ++ as a practical tool. No attempts are made to compare C ++ to other languages, though I have tried to answer some questions that I have often heard asked by Lisp programmers.
Abstract-found: 1
Intro-found: 1
Reference: [Gamma,1994] <author> Gamma, et.al.: </author> <title> Design Patterns. </title> <publisher> Addison Wesley. </publisher> <year> 1994. </year> <note> ISBN 0-201-63361-2. </note>
Reference-contexts: For example, 1 used generic programming and 2.1 demonstrated abstract classes and class hierarchies. Much of the work on styles (for example [Kornig,1995b]) and patterns (for example, <ref> [Gamma,1994] </ref>) in the C ++ community has focussed on finding ways to express ideas from a variety of languages and systems in a way that can be effectively and efficiently be utilized by C ++ programmers writing larger production systems.
Reference: [Koenig,1995] <author> Andrew Koenig (editor): </author> <note> The Working Papers for the ANSI-X3J16 /ISO-SC22 WG21 C ++ standards committee. </note>
Reference-contexts: The alternative was to allow C ++ to fracture into dialects. In 1995, the ANSI and ISO C ++ standards committees reached a level of stability of the language and standard library features and a degree of precision of the description that allowed a draft standard to be issued <ref> [Koenig,1995] </ref>. A formal standard is likely in late 1996 or early 1997. During standardization, significant features and libraries were added to C ++ . In general, the standards process confirmed and strengthened the fundamental nature of C ++ and made it more coherent.
Reference: [Koenig,1995b] <author> Andrew Koenig and Bjarne Stroustrup: </author> <title> Foundations for Native C ++ Styles. </title> <journal> Soft ware Practice & Experience. </journal> <year> 1995. </year>
Reference: [Stepanov,1994] <author> Alexander Stepanov and Meng Lee: </author> <title> The Standard Template Library. ISO Program ming language C ++ project. Doc No: </title> <publisher> X3J16/94-0095, WG21/N0482. </publisher>
Reference-contexts: Essentially, the C ++ standard library provides the most common fundamental data structures together with the fundamental algorithms used on them. Every algorithm works with every container without the use of conversions. This framework, conventionally called the STL <ref> [Stepanov,1994] </ref>, is extensible in the sense that users can easily provide containers and algorithms in addition to the ones provided as part of the standard and have these work directly with the standard containers and algorithms. 3 Tools, Environments, and Libraries The stability resulting from by the near-completion of the standard
Reference: [Stroustrup,1991] <author> Bjarne Stroustrup: </author> <title> The C ++ Programming Language (2nd Edition) Addison Wesley, </title> <address> ISBN 0-201-53992-6. </address> <month> June </month> <year> 1991. </year>
Reference-contexts: So can discussions of older features and of features that were considered but didn't make it into C ++ . 2.1 Language Features Basically Standard C ++ is the language described in ``The C ++ Programming Language (2nd edition)'' <ref> [Stroustrup,1991] </ref> with namespaces, run-time type information, plus a few minor features added. Among the many minor improvements, the refinements to the template mechanisms are the most significant.
Reference: [Stroustrup,1994] <author> Bjarne Stroustrup: </author> <title> The Design and Evolution of C ++ Addison Wesley, </title> <type> ISBN 0-201 54330-3. </type> <month> March </month> <year> 1994. </year>
References-found: 6

