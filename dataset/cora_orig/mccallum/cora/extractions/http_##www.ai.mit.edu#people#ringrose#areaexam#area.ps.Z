URL: http://www.ai.mit.edu/people/ringrose/areaexam/area.ps.Z
Refering-URL: http://www.ai.mit.edu/people/ringrose/my-work.html
Root-URL: 
Email: ringrose@ai.mit.edu  
Title: Using Particle Systems for Computer Generation of Complex Objects  
Author: Robert Ringrose 
Address: 545 Technology Square Cambridge, MA 02139  
Affiliation: MIT Leg Lab MIT Artificial Intelligence Laboratory  
Abstract: Computers can create complex shapes, textures, and effects using particle systems without the operator having to specify each detail. The desired result can be static, such as a texture applied to a surface, or dynamic, such as water flowing or fire burning. I summarize three methods of generating complex effects using particle systems, demonstrate extensions to the published methods, and propose another extension increasing simulation speed for complex particle systems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Fleischer, K.; Laidlaw, D.; Currin, B.; and Barr, A. </author> <year> 1995. </year> <title> Cellular texture generation. </title> <booktitle> In Proceedings of SIGGRAPH '95, Annual Conference Series, </booktitle> <pages> 239-248. </pages>
Reference-contexts: Particle systems can simplify the control of complex effects, allowing impressive renditions of fire consuming a planet (Reeves 1983), a fountain (Miller & Pearce 1989), and a thorn covered head <ref> (Fleischer et al. 1995) </ref>. This paper reviews particle systems, as they are used in these examples, and discusses further extensions. A particle system is a cluster of individual particles, 1 each following a set of rules defining its motion. <p> Additionally, Reeves (1993) discusses the use of a hierarchy of particle systems. In this case, a meta-particle system's "particles" are each a particle system, with distributions of their new particles, velocities, and particle 1 (Reeves 1983) (Miller & Pearce 1989) <ref> (Fleischer et al. 1995) </ref> Objects Particles Globules Cells Result Particles in motion Isosurface in motion Static texture Dynamics Newtonian Newtonian Viscous F = ma F = ma F = mv Object interaction None Local Local Environmental None Collisions Environmental interaction inputs Forces Gravity Gravity and Determined by cell programs interparticle and <p> Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels (Miller & Pearce 1989), snow and waterfalls (Sims 1990), spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish (Reynolds 1987), three dimensional textures <ref> (Fleischer et al. 1995) </ref>, and galactic evolution (Xu 1995). All of these would be extremely time-consuming for a human to deal with manually, and there would be no guarantee of physical realism desired in, say, galactic evolution.
Reference: <author> Foley, J. D.; van Dam, A.; Feiner, S. K.; and Hughes, J. F. </author> <year> 1990. </year> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <address> 2 edition. </address>
Reference-contexts: The human eye is good at seeing this kind of ragged edge. The graphics community has addressed this issue at length <ref> (Foley et al. 1990) </ref>. Temporal aliasing appears as things move across the screen on film or video. The most common form of temporal aliasing is "motion judder", images that seem to jump from place to place on the screen instead of moving smoothly.
Reference: <author> Fournier, A., and Reeves, W. </author> <year> 1986. </year> <title> A simple model of ocean waves. </title> <booktitle> In Computer Graphics, </booktitle> <pages> 75-84. </pages>
Reference-contexts: Particle systems are one way of amplifying scene data to create convincing detail. Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels (Miller & Pearce 1989), snow and waterfalls (Sims 1990), spray and foam from waves <ref> (Fournier & Reeves 1986) </ref>, flocks of birds and fish (Reynolds 1987), three dimensional textures (Fleischer et al. 1995), and galactic evolution (Xu 1995).
Reference: <author> Halliday, D., and Resnick, R. </author> <year> 1986. </year> <title> Fundamentals of Physics. </title> <publisher> John Wiley and Sons. 10 Hockney, </publisher> <editor> R. W., and Eastwood, J. W. </editor> <year> 1988. </year> <title> Computer Simulation using Particles. </title> <address> Techno House, Redcliffe Way, Bristol BS1 6NX, England: </address> <publisher> Institute of Physics Publishing. </publisher>
Reference-contexts: However, each particle represents a hypothetical piece of matter which is cooling over time. I used the laws of thermodynamics to chart this hypothetical piece of matter's temperature over time, and Planck's formula for the radiation of a black body <ref> (Halliday & Resnick 1986) </ref> to calculate the emission at red, green, and blue wavelengths. I then displayed two simplified fire simulations, one using each method, to compare. The parameters for the particle system behavior are in Table 2.
Reference: <author> Miller, G., and Pearce, A. </author> <year> 1989. </year> <title> Globular dynamics: a connected paricle system for animating viscous fluids. </title> <journal> Computers and Graphics 13(3) </journal> <pages> 305-309. </pages>
Reference-contexts: Introduction Nature casually introduces effects which are difficult to model or duplicate because of their complexity or dynamics, such as fire, flowing water, and three dimensional surface textures. Particle systems can simplify the control of complex effects, allowing impressive renditions of fire consuming a planet (Reeves 1983), a fountain <ref> (Miller & Pearce 1989) </ref>, and a thorn covered head (Fleischer et al. 1995). This paper reviews particle systems, as they are used in these examples, and discusses further extensions. A particle system is a cluster of individual particles, 1 each following a set of rules defining its motion. <p> Instead, the data is randomly determined using the supplied distributions. Additionally, Reeves (1993) discusses the use of a hierarchy of particle systems. In this case, a meta-particle system's "particles" are each a particle system, with distributions of their new particles, velocities, and particle 1 (Reeves 1983) <ref> (Miller & Pearce 1989) </ref> (Fleischer et al. 1995) Objects Particles Globules Cells Result Particles in motion Isosurface in motion Static texture Dynamics Newtonian Newtonian Viscous F = ma F = ma F = mv Object interaction None Local Local Environmental None Collisions Environmental interaction inputs Forces Gravity Gravity and Determined by <p> These particles' motion is governed by the laws of viscous dynamics (F = mv, rather than F = ma), particle interaction, and forces imposed by the environment. 2 There is a slight discrepancy between these values and the values for c r and c d previously published <ref> (Miller & Pearce 1989) </ref>. To get the published values, multiply c r and c d by r 0 . I believe this is an error; including r 0 gives c r and c d the units of length, while they are used in the equations as if they were dimensionless. <p> Particle systems are one way of amplifying scene data to create convincing detail. Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels <ref> (Miller & Pearce 1989) </ref>, snow and waterfalls (Sims 1990), spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish (Reynolds 1987), three dimensional textures (Fleischer et al. 1995), and galactic evolution (Xu 1995).
Reference: <author> Pang, A., and Smith, K. </author> <year> 1993. </year> <title> Spray rendering: Visualizing using smart particles. </title> <editor> In Nielson, G. M., and Bergeron, D., eds., </editor> <booktitle> Visualization, </booktitle> <pages> 283-90. </pages> <address> Los Alami-tos, CA, USA: </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: However, one might want to include interactions at large distances. The particles could be stars affected by gravity (Xu 1995), birds affected by the other birds they see (Reynolds 1987), or intelligent spatters of paint <ref> (Pang & Smith 1993) </ref>. Astronomers have been modeling galaxys and galactic clusters with particle systems and have developed P 3 M , a method of approximating gravitic interactions at large distances in order (n log n) time (Hockney & Eastwood 1988).
Reference: <author> Raibert, M.; Hodgins, J.; Playter, R.; and Ringrose, R. </author> <year> 1992. </year> <title> Animation of maneuvers: Jumps, somersaults, and gait transitions. In Imagina. Appendix II. </title>
Reference-contexts: There has been some work on inverting the Fourier transform to fool the eye into seeing a clear image <ref> (Raibert et al. 1992) </ref>. Experiments I have implemented a particle system based on the work of Miller and Pearce (1989). I compared an explosion where the particle colors ramp down steadily (Reeves 1983), to an explosion where the particle colors are determined by physics.
Reference: <author> Reeves, W. T. </author> <year> 1983. </year> <title> Particle systems a technique for modeling a class of fuzzy objects. </title> <journal> ACM Tran. </journal> <volume> Graphics 2(2) </volume> <pages> 91-108. </pages>
Reference-contexts: Introduction Nature casually introduces effects which are difficult to model or duplicate because of their complexity or dynamics, such as fire, flowing water, and three dimensional surface textures. Particle systems can simplify the control of complex effects, allowing impressive renditions of fire consuming a planet <ref> (Reeves 1983) </ref>, a fountain (Miller & Pearce 1989), and a thorn covered head (Fleischer et al. 1995). This paper reviews particle systems, as they are used in these examples, and discusses further extensions. <p> Instead, the data is randomly determined using the supplied distributions. Additionally, Reeves (1993) discusses the use of a hierarchy of particle systems. In this case, a meta-particle system's "particles" are each a particle system, with distributions of their new particles, velocities, and particle 1 <ref> (Reeves 1983) </ref> (Miller & Pearce 1989) (Fleischer et al. 1995) Objects Particles Globules Cells Result Particles in motion Isosurface in motion Static texture Dynamics Newtonian Newtonian Viscous F = ma F = ma F = mv Object interaction None Local Local Environmental None Collisions Environmental interaction inputs Forces Gravity Gravity and <p> Experiments I have implemented a particle system based on the work of Miller and Pearce (1989). I compared an explosion where the particle colors ramp down steadily <ref> (Reeves 1983) </ref>, to an explosion where the particle colors are determined by physics. I also duplicated the fountain by Miller and Pearce (1989). Taking an idea from the developmental nature of the particle system of Fleischer et al. (1995), I added the ability for particles to merge and split. <p> Particle systems are one way of amplifying scene data to create convincing detail. Currently, particle systems can model diverse effects including fire <ref> (Reeves 1983) </ref>, fountains and gels (Miller & Pearce 1989), snow and waterfalls (Sims 1990), spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish (Reynolds 1987), three dimensional textures (Fleischer et al. 1995), and galactic evolution (Xu 1995).
Reference: <author> Reynolds, C. W. </author> <year> 1987. </year> <title> Flocks, herds, and schools: A distributed behavioral model. </title> <booktitle> In Computer Graphics, </booktitle> <pages> 25-34. </pages>
Reference-contexts: However, one might want to include interactions at large distances. The particles could be stars affected by gravity (Xu 1995), birds affected by the other birds they see <ref> (Reynolds 1987) </ref>, or intelligent spatters of paint (Pang & Smith 1993). Astronomers have been modeling galaxys and galactic clusters with particle systems and have developed P 3 M , a method of approximating gravitic interactions at large distances in order (n log n) time (Hockney & Eastwood 1988). <p> Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels (Miller & Pearce 1989), snow and waterfalls (Sims 1990), spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish <ref> (Reynolds 1987) </ref>, three dimensional textures (Fleischer et al. 1995), and galactic evolution (Xu 1995). All of these would be extremely time-consuming for a human to deal with manually, and there would be no guarantee of physical realism desired in, say, galactic evolution.
Reference: <author> Sherstinsky, A. </author> <year> 1994. </year> <title> M-Lattice: A System for Signal Synthesis and Processing Based On Reaction-Diffusion. </title> <type> Ph.D. Dissertation, </type> <institution> Massachusetts Institute of Technology. </institution>
Reference-contexts: Generally, though, it works and seems intuitive enough that when it fails a human can fix the problem by appropriately modifying the cell behaviors. An unintuitive but extremely useful example of a "cell program" is one which implements a reaction-diffusion system (Turing 1952) <ref> (Sherstinsky 1994) </ref>. Reaction-diffusion systems create detailed, organic-looking patterns, such as leopard spots or zebra stripes. Although the mathematics of reaction-diffusion systems are fairly complex, the intuition for Turing's basic system as applied to a layer of cells is fairly simple.
Reference: <author> Sims, K. </author> <year> 1990. </year> <title> Particle animation and rendering using data parallel computation. </title> <booktitle> In Computer Graphics, </booktitle> <pages> 405-413. </pages>
Reference-contexts: Particle systems are one way of amplifying scene data to create convincing detail. Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels (Miller & Pearce 1989), snow and waterfalls <ref> (Sims 1990) </ref>, spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish (Reynolds 1987), three dimensional textures (Fleischer et al. 1995), and galactic evolution (Xu 1995).
Reference: <author> Turing, A. M. </author> <year> 1952. </year> <title> The chemical basis of morpho-genesis. </title> <journal> Philosophical Transactions of Royal Society in London 237(B):37-72. </journal>
Reference-contexts: Generally, though, it works and seems intuitive enough that when it fails a human can fix the problem by appropriately modifying the cell behaviors. An unintuitive but extremely useful example of a "cell program" is one which implements a reaction-diffusion system <ref> (Turing 1952) </ref> (Sherstinsky 1994). Reaction-diffusion systems create detailed, organic-looking patterns, such as leopard spots or zebra stripes. Although the mathematics of reaction-diffusion systems are fairly complex, the intuition for Turing's basic system as applied to a layer of cells is fairly simple.
Reference: <author> Xu, G. </author> <year> 1995. </year> <title> A new parallel n-body gravity solver: </title> <journal> Tpm. The Astrophysical Journal Supplement Series 98(1) </journal> <pages> 355-366. </pages>
Reference-contexts: However, one might want to include interactions at large distances. The particles could be stars affected by gravity <ref> (Xu 1995) </ref>, birds affected by the other birds they see (Reynolds 1987), or intelligent spatters of paint (Pang & Smith 1993). <p> Currently, particle systems can model diverse effects including fire (Reeves 1983), fountains and gels (Miller & Pearce 1989), snow and waterfalls (Sims 1990), spray and foam from waves (Fournier & Reeves 1986), flocks of birds and fish (Reynolds 1987), three dimensional textures (Fleischer et al. 1995), and galactic evolution <ref> (Xu 1995) </ref>. All of these would be extremely time-consuming for a human to deal with manually, and there would be no guarantee of physical realism desired in, say, galactic evolution. On the other hand, particle systems can generate far more data than is necessary for a good picture.
Reference: <author> Yaeger, L.; Upson, C.; and Myers, R. </author> <year> 1986. </year> <title> Combining physical and visual simulation creation of the planet jupiter for the film 2010. </title> <booktitle> In Computer Graphics, </booktitle> <pages> 85-93. 11 </pages>
Reference-contexts: Conclusions As it becomes computationally feasable to render more complex scenes, it will be difficult to input all the details necessary for a realistic image. The problems getting the initial state for Jupiter in animations for the movie "2010" illustrate the problems inherent in generating realistic scenes <ref> (Yaeger, Upson, & Myers 1986) </ref>; the animations were driven by particle systems, but getting a realistic initial state proved quite difficult. Particle systems are one way of amplifying scene data to create convincing detail.
References-found: 14

