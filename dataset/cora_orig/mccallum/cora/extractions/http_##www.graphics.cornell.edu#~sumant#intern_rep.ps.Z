URL: http://www.graphics.cornell.edu/~sumant/intern_rep.ps.Z
Refering-URL: http://www.graphics.cornell.edu/~sumant/cv.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Paul Heckbert. </author> <title> Simulating Global Illumination Using Adaptive Meshing. </title> <type> PhD thesis, </type> <month> June </month> <year> 1991. </year>
Reference-contexts: The choice of piece-wise constant function comes from the fact that the solution methods using them are relatively simpler. Much recently we come across methods which attempt to reconstruct the illumination function by computing higher order piecewise polynomials <ref> [1, 2, 3, 4, 5] </ref> over the environment. Computation of higher order functions are preferable because they make good approximations with lesser discretisation. However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. <p> It is carried out in two steps. First a binary choice between continuation or termination is made by sampling a binary probability distribution <ref> [; 1 ] </ref> where = R b a T (s i;j1 ; t)dt. If the sampling indicates continuation then only, one sample, s i;j , is generated from the actual probability distribution function T (s i;j1 ; t)=.
Reference: [2] <author> Steven Gortler, Peter Schroder, Michel F. Cohen, and Pat Hanrahan. </author> <title> Wavelet radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 221-230, </pages> <year> 1993. </year>
Reference-contexts: The choice of piece-wise constant function comes from the fact that the solution methods using them are relatively simpler. Much recently we come across methods which attempt to reconstruct the illumination function by computing higher order piecewise polynomials <ref> [1, 2, 3, 4, 5] </ref> over the environment. Computation of higher order functions are preferable because they make good approximations with lesser discretisation. However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. <p> The various deterministic methods used for illumination function evaluation make use of Galerkin methods <ref> [2, 3, 4] </ref>. However, for the purpose of discussion in this article, we shall keep the generality and shall not make any assumption about the use of either Galerkin method or normalised basis function set and concentrate on the evaluation of f l values.
Reference: [3] <author> Roy Troutman and Nelson L. Max. </author> <title> Radiosity algorithms using higher order finite element methods. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 209-212, </pages> <year> 1993. </year>
Reference-contexts: The choice of piece-wise constant function comes from the fact that the solution methods using them are relatively simpler. Much recently we come across methods which attempt to reconstruct the illumination function by computing higher order piecewise polynomials <ref> [1, 2, 3, 4, 5] </ref> over the environment. Computation of higher order functions are preferable because they make good approximations with lesser discretisation. However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. <p> The various deterministic methods used for illumination function evaluation make use of Galerkin methods <ref> [2, 3, 4] </ref>. However, for the purpose of discussion in this article, we shall keep the generality and shall not make any assumption about the use of either Galerkin method or normalised basis function set and concentrate on the evaluation of f l values.
Reference: [4] <author> Harold R. Zatz. </author> <title> Galerkin radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <volume> 27(4) </volume> <pages> 213-220, </pages> <year> 1993. </year>
Reference-contexts: The choice of piece-wise constant function comes from the fact that the solution methods using them are relatively simpler. Much recently we come across methods which attempt to reconstruct the illumination function by computing higher order piecewise polynomials <ref> [1, 2, 3, 4, 5] </ref> over the environment. Computation of higher order functions are preferable because they make good approximations with lesser discretisation. However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. <p> The various deterministic methods used for illumination function evaluation make use of Galerkin methods <ref> [2, 3, 4] </ref>. However, for the purpose of discussion in this article, we shall keep the generality and shall not make any assumption about the use of either Galerkin method or normalised basis function set and concentrate on the evaluation of f l values.
Reference: [5] <author> Peter Schroder and Pat hanrahan. </author> <title> Wavelet methods for radiance computation. </title> <booktitle> 5th Eurographics Rendering Workshop, </booktitle> <year> 1994, </year> <pages> pages 303-311, </pages> <month> June. </month> <year> 1994. </year>
Reference-contexts: The choice of piece-wise constant function comes from the fact that the solution methods using them are relatively simpler. Much recently we come across methods which attempt to reconstruct the illumination function by computing higher order piecewise polynomials <ref> [1, 2, 3, 4, 5] </ref> over the environment. Computation of higher order functions are preferable because they make good approximations with lesser discretisation. However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions.
Reference: [6] <author> Sumanta N. Pattanaik and S. P. Mudur. </author> <title> Computation of global illumination by monte carlo simulation of the particle model of light. </title> <booktitle> In Proceedings of the Third Eurographics Workshop on Rendering, </booktitle> <pages> pages 71-83, </pages> <address> Bristol, UK, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. The method is based on Monte Carlo/Random walk and may be seen as an extension to the existing particle tracing method <ref> [6, 7] </ref>. Monte Carlo based methods can be classified into a ray-tracing class and into a particle tracing class. Ray-tracing class of methods compute view dependent illumination by tracing rays from the eye point towards the environment. <p> Figure 2 shows the resulting algorithm. At this point it may be worthwhile to recall the particle tracing technique described in <ref> [6, 7] </ref>. It followed an almost similar procedure and estimated the total flux over every surface. The difference is only in the final estimation strategy, i.e. the action taken as each particle left a surface.
Reference: [7] <author> Sumanta N. Pattanaik. </author> <title> Computational Methods for Global Illumination and Visualisation of Complex 3D Environments. </title> <type> PhD thesis, </type> <month> Feb </month> <year> 1993. </year>
Reference-contexts: However, the methods using them are highly complex for an implementation. Here, in this paper, we provide a much simpler algorithm for computation of higher order functions. The method is based on Monte Carlo/Random walk and may be seen as an extension to the existing particle tracing method <ref> [6, 7] </ref>. Monte Carlo based methods can be classified into a ray-tracing class and into a particle tracing class. Ray-tracing class of methods compute view dependent illumination by tracing rays from the eye point towards the environment. <p> Whereas in the radiance equation (equation 4) y is the point visible to x along an incoming direction at x, and the integration is over the incoming hemisphere around x. For the derivation of this equation, see appendix A and also <ref> [7, 11, 13] </ref>. Potential is a general concept and was introduced in [7, 11] to denote the potential characteristic of any (x; fi x ) towards the illumination of some other point or some region. The function g (x; fi x ) provides the exact meaning to the potential. <p> For the derivation of this equation, see appendix A and also [7, 11, 13]. Potential is a general concept and was introduced in <ref> [7, 11] </ref> to denote the potential characteristic of any (x; fi x ) towards the illumination of some other point or some region. The function g (x; fi x ) provides the exact meaning to the potential. <p> For each i, sample (x i;j ; fi x i;j ) is generated from the previous sample 1 Note that <ref> [7, 11] </ref> used the equation 15 as the expression for potential equation. 7 (x i;j1 ; fi x i;j1 ) by equating the nearest surface point y, from x i;j1 along the direction fi x i;j1 , to x i;j and sampling f r (y; fi x i;j1 ; fi y <p> Figure 2 shows the resulting algorithm. At this point it may be worthwhile to recall the particle tracing technique described in <ref> [6, 7] </ref>. It followed an almost similar procedure and estimated the total flux over every surface. The difference is only in the final estimation strategy, i.e. the action taken as each particle left a surface.
Reference: [8] <author> R. L. Cook, Thomas Porter, and Loren Carpenter. </author> <title> Distributed ray tracing. </title> <booktitle> Computer Graphics (SIG-GRAPH '84 Proceedings), </booktitle> <volume> 18(3) </volume> <pages> 137-145, </pages> <month> July </month> <year> 1984. </year>
Reference-contexts: Monte Carlo based methods can be classified into a ray-tracing class and into a particle tracing class. Ray-tracing class of methods compute view dependent illumination by tracing rays from the eye point towards the environment. These methods are basically the extensions of distribution ray tracing <ref> [8] </ref> and/or path tracing [9]. The particle tracing class of methods compute view-independent illumination of the environment by tracing rays from the light source.
Reference: [9] <author> James T. Kajiya. </author> <title> The rendering equation. </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> 20(4) </volume> <pages> 143-150, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: Monte Carlo based methods can be classified into a ray-tracing class and into a particle tracing class. Ray-tracing class of methods compute view dependent illumination by tracing rays from the eye point towards the environment. These methods are basically the extensions of distribution ray tracing [8] and/or path tracing <ref> [9] </ref>. The particle tracing class of methods compute view-independent illumination of the environment by tracing rays from the light source. The main implementations so far compute this view-independent illumination by estimating piecewise constant functions over meshed surfaces and reconstruct the illumination function of the environment from them.
Reference: [10] <author> O. C. Zienkiewicz and K. Morgan. </author> <title> Finite Elements and Approximation. </title> <publisher> McGraw-Hill Book Company. </publisher>
Reference-contexts: Finally we discuss a reprojection technique to reduce the statistical noise in the estimates. 2 Illumination Function Approximation Any continuous function g can be approximated by using a set of trial functions fN m ; m = 1; 2; : : :g as follows <ref> [10] </ref> : g (x) ^g (x) = m=1 where a m are coefficients of approximation which are computed in a manner such that the approximation is accurate. The trial function is also known as shape function (in CAD) or basis function (in functional analysis).
Reference: [11] <author> Sumanta N. Pattanaik and S. P. Mudur. </author> <title> Adjoint equations and random walks for illumination computation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 14(1) </volume> <pages> 77-102, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: So the large number of such individual f k m evaluations will make the process formidable. For this reason, we look for a dual formulation of equation 3 which can lead to a particle tracing like efficient Monte Carlo method <ref> [11] </ref>. Before we give the dual formulation, we discuss briefly about the adjointness which is the necessary mathematical tool for such formulation. 3 Adjoint Illumination Equation and Dual Formulation 3.1 Adjointness In the above formulations we are dealing with radiance function. <p> Whereas in the radiance equation (equation 4) y is the point visible to x along an incoming direction at x, and the integration is over the incoming hemisphere around x. For the derivation of this equation, see appendix A and also <ref> [7, 11, 13] </ref>. Potential is a general concept and was introduced in [7, 11] to denote the potential characteristic of any (x; fi x ) towards the illumination of some other point or some region. The function g (x; fi x ) provides the exact meaning to the potential. <p> For the derivation of this equation, see appendix A and also [7, 11, 13]. Potential is a general concept and was introduced in <ref> [7, 11] </ref> to denote the potential characteristic of any (x; fi x ) towards the illumination of some other point or some region. The function g (x; fi x ) provides the exact meaning to the potential. <p> For each i, sample (x i;j ; fi x i;j ) is generated from the previous sample 1 Note that <ref> [7, 11] </ref> used the equation 15 as the expression for potential equation. 7 (x i;j1 ; fi x i;j1 ) by equating the nearest surface point y, from x i;j1 along the direction fi x i;j1 , to x i;j and sampling f r (y; fi x i;j1 ; fi y <p> Some of the proven methods are : next event estimation, absorption supression and importance sampling. In this section we discuss only the next event estimation. More detail discussion on the other two can be found in <ref> [11] </ref>. Next event estimation changes the estimator without causing any change to the random walk. In equation 14 of section 4 we describe the simplest of the random walk estimator. Section 5 used this estimator to estimate the coefficients f k m . We shall propose here an improved estimator [11] <p> <ref> [11] </ref>. Next event estimation changes the estimator without causing any change to the random walk. In equation 14 of section 4 we describe the simplest of the random walk estimator. Section 5 used this estimator to estimate the coefficients f k m . We shall propose here an improved estimator [11] known as next event estimator, which uses h 0 (s i;j ) in the place of h (s i;j ) of equation 14. h 0 (s i;j ) in this case being h 0 (s i;j ) = a This estimator can be derived easily by an one level expansion
Reference: [12] <author> Malvin H. Kalos and Paula A. Whitlock. </author> <title> Monte Carlo Methods. Volume I. </title> <publisher> John Wiley & Sons, </publisher> <year> 1986. </year>
Reference-contexts: One can write an integral equation corresponding to the operator fl as f fl (x) = b (x) + fl (f fl )(x) = b (x) + a The equations 5 and 6 are said to be an adjoint pair of equations. An important consequence to the adjointness <ref> [12] </ref> as shown in figure (1) is : Z b f (x)b (x)dx = a This consequence tells us that F in equation 7 can be computed either by evaluating R b evaluating R b a f fl (x)a (x)dx.
Reference: [13] <author> Per Christensen, David Salesin, and Tony De Rose. </author> <title> A continuous adjoint formulation for radiance transport. </title> <booktitle> In Proceedings of 4th Eurographics Rendering Workshop, </booktitle> <address> Paris. </address> <month> June </month> <year> 1993. </year>
Reference-contexts: Whereas in the radiance equation (equation 4) y is the point visible to x along an incoming direction at x, and the integration is over the incoming hemisphere around x. For the derivation of this equation, see appendix A and also <ref> [7, 11, 13] </ref>. Potential is a general concept and was introduced in [7, 11] to denote the potential characteristic of any (x; fi x ) towards the illumination of some other point or some region. The function g (x; fi x ) provides the exact meaning to the potential.
Reference: [14] <author> Reuven Y. Rubinstein. </author> <title> Simulation and the Monte Carlo Method. </title> <publisher> John Wiley & Sons, </publisher> <year> 1981. </year>
Reference-contexts: One of the methods of getting the estimated value of g (s i ) is the random walk method <ref> [14] </ref>, using which the estimating equation is g (s i ) = h (s i ) + j=1 where for each value of s i we generate a m i number of samples s i;j by sampling from the distribution function T (s i;j1 ; t), the very first one of
Reference: [15] <author> Stephane G. Mallat. </author> <title> A theory for multiresolution signal decomposition: The wavelet representation. </title> <journal> IEEE Transactions on PAMI, </journal> <volume> 11(7) </volume> <pages> 674-693, </pages> <year> 1989. </year>
Reference-contexts: In fact we are back to the same problem as we had with the early particle tracing technique. 2. Carry out a method similar to that used in Mallat's hierarchical signal decomposition <ref> [15] </ref>. Hierarchical signal decomposition technique carries out reprojections of the signal to lower resolution from the approximation of the signal at a higher resolution. However, the reprojection is localised to the region of low frequency, leaving the high frequency regions unaltered.
Reference: [16] <author> Sumanta N. Pattanaik and Kadi Bouatouch. </author> <title> Interactive walk-through using particle tracing. </title> <editor> In Rae A. Earnshaw and John A. Vince, editors, </editor> <booktitle> Proceedings of CG International 1995. CG International 95, </booktitle> <address> Leeds, UK, </address> <publisher> Academic Press, </publisher> <address> London, </address> <month> 25-30 June </month> <year> 1995. </year> <month> 15 </month>
Reference-contexts: We are trying to see if we can further reproject using a set of basis functions which have continuity along the boundary, for example splines which will remove this problem. 9 Importance Driven Particle Tracing In an accompanied paper <ref> [16] </ref>, we have provided a further development, the importance driven particle tracing algorithm, which provides an efficient method of view dependent illumination computation. The efficiency is derived by bringing changes to the particle emission pattern. <p> The change in the natural emission probability must be compensated in order to have a proper illumination estimation. Also to make the algorithm attractive one must find a very fast method of estimating I. In <ref> [16] </ref> we have provided a very efficient algorithm to carry out all this. 10 Discussion Having provided a number of improvements to the particle tracing technique to make it more attractive we shall now discuss some of the problems still remaining.
References-found: 16

