URL: http://www.lsi.upc.es/dept/techreps/ps/R95-19.ps.gz
Refering-URL: http://www.lsi.upc.es/dept/techreps/1995.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: A Set of Rules for a Constructive Geometric Constraint Solver  
Author: Robert Juan-Arinyo and Antoni Soto 
Date: April 1995  
Address: Av. Diagonal 647, 8a, E-08028 Barcelona  
Affiliation: Departament de Llenguatges i Sistemes Informatics Universitat Politecnica de Catalunya  
Pubnum: Report LSI-95-19-R  
Abstract: This paper presents the set of constructive rules used by a two-dimensional, variational geometric constraint solver based on a constructive approach. The main goal in defining the rules has been to keep the set of rules as small as possible while being able to yield a useful solver with a large enough domain of solvable constructions. The rules can be classified according to their functionality as belonging to one of three possible types: creation rules, merging rules, and constructive rules. Creation rules translate the geometric constraints into the appropiate internal representation. Merging rules are used to compute the transitive closure of angle constraints. Construction rules allow to build triangles and they also build some quadrilaterals. The rules can build any triangle defined by a set of three independent relationships given as either distances between two vertices, angles between two sides and altituds. Quadrilateral rules can build three especific, different quadrilaterals. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Aldelfeld. </author> <title> Variation of geometric based on a geometric-reasoning method. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> 20(3) </volume> <pages> 117-126, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, [3, 7, 11] and rule based mathods, <ref> [1, 14, 16, 17] </ref>. A thorough review on geometric constraint solving techniques can be found in [3]. This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building.
Reference: [2] <author> A.H. Borning. </author> <title> The programming language aspects of ThingLab, a constrained oriented simulation laboratory. </title> <journal> ACM Trans. on Prog. Lang. and Systems, </journal> <volume> 3(4) </volume> <pages> 353-387, </pages> <month> October </month> <year> 1981. </year>
Reference-contexts: Two main approaches have been addressed in geometric constraints solving: non-linear simultaneous equation solving and constructive approach. In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, <ref> [2, 8, 15] </ref>; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [3] <author> W. Bouma, O. Fudos, C. Hoffmann, J. Cai, and R. Paige. </author> <title> A geometric constraint solver. </title> <type> Technical report, </type> <institution> CSD-TR-93-054, Purdue University, </institution> <year> 1993. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, <ref> [3, 7, 11] </ref> and rule based mathods, [1, 14, 16, 17]. A thorough review on geometric constraint solving techniques can be found in [3]. <p> Constructive methods are further classified in graph based methods, [3, 7, 11] and rule based mathods, [1, 14, 16, 17]. A thorough review on geometric constraint solving techniques can be found in <ref> [3] </ref>. This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building.
Reference: [4] <author> B. </author> <title> Buchberger. Grobner Bases: An Algorithmic Method in Polynomial Ideal Theory. </title> <editor> In N. K. Bose, editor, </editor> <booktitle> Multidimensional Systems Theory, </booktitle> <pages> pages 184-232. </pages> <address> D. </address> <publisher> Reidel Publishing Co., </publisher> <year> 1985. </year>
Reference-contexts: In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm <ref> [4] </ref> or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [5] <author> B. Buchberger, G. Collins, and B. Kutzler. </author> <title> Algebraic methods for geometric reasoning. </title> <booktitle> Annual Reviews in Computer Science, </booktitle> <volume> 3 </volume> <pages> 85-120, </pages> <year> 1988. </year>
Reference-contexts: In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis <ref> [5] </ref> and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [6] <author> C.-S. Chou. </author> <title> Mechanical Theorem Proving. </title> <address> D. </address> <publisher> Reidel Publishing, </publisher> <address> Dor-drecht, </address> <year> 1987. </year>
Reference-contexts: In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt <ref> [6, 18] </ref> method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [7] <author> I. Fudos and C.M. Hoffmann. </author> <title> Correctness proof of a geometric constraint solver. </title> <type> Technical Report CSD 93-076, </type> <institution> Computer Sciences Department, Purdue University, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, <ref> [3, 7, 11] </ref> and rule based mathods, [1, 14, 16, 17]. A thorough review on geometric constraint solving techniques can be found in [3].
Reference: [8] <author> J. Gosling. </author> <title> Algebraic constraints. </title> <type> Technical Report CMU-CS-83-132, </type> <institution> Carnegie Mellon University, </institution> <year> 1983. </year>
Reference-contexts: Two main approaches have been addressed in geometric constraints solving: non-linear simultaneous equation solving and constructive approach. In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, <ref> [2, 8, 15] </ref>; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [9] <author> R. Juan-Arinyo. </author> <title> Triangles, ruler and compass. </title> <type> Technical Report LSI-95-6-R, </type> <institution> Universitat Politecnica de Catalunya, LiSI, </institution> <year> 1995. </year>
Reference-contexts: This extension is justified in Section 2. Consistently, new rules have been defined to deal with these new constraints. These rules are based on the construction of triangles with ruler and compass collected in <ref> [9] </ref>. We also include the construction of the quadrilaterals given in [17].
Reference: [10] <author> G. Nelson. Juno, </author> <title> a constraint-based graphics system. </title> <booktitle> SIGGRAPH, </booktitle> <pages> pages 235-243, </pages> <address> San Francisco, </address> <month> July 22-26 </month> <year> 1985. </year>
Reference-contexts: Two main approaches have been addressed in geometric constraints solving: non-linear simultaneous equation solving and constructive approach. In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson <ref> [10] </ref> or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
Reference: [11] <author> J.C. Owen. </author> <title> Algebraic solution for geometry from dimensional constraints. </title> <booktitle> In ACM Symp Foundations of Solid Modeling, </booktitle> <pages> pages 397-407, </pages> <address> Austin, TX, </address> <year> 1991. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, <ref> [3, 7, 11] </ref> and rule based mathods, [1, 14, 16, 17]. A thorough review on geometric constraint solving techniques can be found in [3].
Reference: [12] <author> Pro/ENGINEER. </author> <title> Modeling Users Guide: 2D Sketcher. Parametric Technologies. Release 8.0. </title>
Reference-contexts: The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods <ref> [12, 13, 15] </ref>. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order. It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor.
Reference: [13] <author> G.L. Steele and G.L. Sussman. </author> <title> Constraints a language for expressing almost-hierarchical descriptions. </title> <booktitle> Artificial Intelligence, </booktitle> <pages> pages 1-39, </pages> <month> January </month> <year> 1980. </year> <month> 20 </month>
Reference-contexts: The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods <ref> [12, 13, 15] </ref>. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order. It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor.
Reference: [14] <author> G. Sunde. </author> <title> A CAD system with declarative specification of shape. </title> <booktitle> Eu--rographics Workshop on Intelligent CAD Systems, </booktitle> <pages> pages 90-105, </pages> <month> April </month> <year> 1987. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, [3, 7, 11] and rule based mathods, <ref> [1, 14, 16, 17] </ref>. A thorough review on geometric constraint solving techniques can be found in [3]. This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building. <p> In what follows, a dimensioning scheme will be a set of points and the set of constraints defined on these points. The data representation used is based on the representations reported in <ref> [14, 16, 17] </ref>, but differs from them in some significative details. In [17] it is assumed that the distance constraint perpendicular to a segment defined by the user has been translated into distance and angle constraints before calling the solver. <p> Since this constraint is so often used, we have included a specific representation for it. Therefore, besades the CD sets and the CA sets given in <ref> [14] </ref> and [17], we include the CH sets. These constraints sets are defined as follows. <p> A frame of reference is attached to each CD set to which the points in the set are refered to, <ref> [14, 17] </ref>. It is worth to note that a sketch is solved when all the points in it belong to the same CD set. A CH set is a point and a segment constrained by the perpendicular distance from the point to the segment.
Reference: [15] <author> I. Sutherland. </author> <title> Sketchpad, a man-machine graphical communication system. </title> <booktitle> In Proc. of the Spring Joint Comp. Conference, </booktitle> <pages> pages 329-345. IFIPS, </pages> <year> 1963. </year>
Reference-contexts: Two main approaches have been addressed in geometric constraints solving: non-linear simultaneous equation solving and constructive approach. In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, <ref> [2, 8, 15] </ref>; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order. <p> The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt [6, 18] method; or propagation methods <ref> [12, 13, 15] </ref>. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order. It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor.
Reference: [16] <author> A. Verroust. </author> <title> Etude de Problemes Lies a la Definition, </title> <institution> la Visualisa-tion et l'Animation d'Objects Complexes en Informatique Graphique. </institution> <type> PhD thesis, </type> <institution> Universite de Paris-Sud, Centre d'Orsay, </institution> <year> 1990. </year> <note> (Written in French). </note>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, [3, 7, 11] and rule based mathods, <ref> [1, 14, 16, 17] </ref>. A thorough review on geometric constraint solving techniques can be found in [3]. This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building. <p> This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building. Both the data representation and the rules used are based on those reported in <ref> [16] </ref> and [17], but differ from them in some rather important details. The differences are mainly due to the assumption made in [17] that the distance constraint perpendicular to a segment defined by the user has been translated in a preprocess into distance and angle constraints. <p> In what follows, a dimensioning scheme will be a set of points and the set of constraints defined on these points. The data representation used is based on the representations reported in <ref> [14, 16, 17] </ref>, but differs from them in some significative details. In [17] it is assumed that the distance constraint perpendicular to a segment defined by the user has been translated into distance and angle constraints before calling the solver. <p> See Figure 3. 3 Rules In order to deal with the CH sets, we have consistently extended the rules given in <ref> [16] </ref> and in [17]. According to the functionality of the rules we classify them as creation rules, merging rules or construction rules. <p> Basic construction rules merge three constraint sets into a CD set. Quadrilateral rules merge five constraint sets into a CD set, but, as shown in <ref> [16, 17] </ref>, these rules can be expressed in terms of the basic construction rules by adding an extra point and two constraints derived from the initial set of constraints. <p> . . . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . p 3 ch 3 3.3.10 Quadrilateral Rules Three quadrilateral rules were described in <ref> [16] </ref> and [17]. For each quadrilateral problem first we will give the general rule. Then we will show that the quadrilateral problem can be transformed into an appropiate sequence of triangular problems by adding an extra point and some constraints derived from those constraints already defined in the dimensioning scheme.
Reference: [17] <author> A. Verroust, F. Schonek, and D. </author> <title> Roller. Rule-oriented method for parameterized computer-aided design. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 24(10) </volume> <pages> 531-540, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: It is based on the fact that most configurations on engineering drawings are solvable by using a rather small set of tools like ruler, compass and protractor. Constructive methods are further classified in graph based methods, [3, 7, 11] and rule based mathods, <ref> [1, 14, 16, 17] </ref>. A thorough review on geometric constraint solving techniques can be found in [3]. This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building. <p> This paper describes the set of constructive rules we have selected for the two-dimensional, variational geometric constraint solver based on a constructive approach that our group is building. Both the data representation and the rules used are based on those reported in [16] and <ref> [17] </ref>, but differ from them in some rather important details. The differences are mainly due to the assumption made in [17] that the distance constraint perpendicular to a segment defined by the user has been translated in a preprocess into distance and angle constraints. <p> Both the data representation and the rules used are based on those reported in [16] and <ref> [17] </ref>, but differ from them in some rather important details. The differences are mainly due to the assumption made in [17] that the distance constraint perpendicular to a segment defined by the user has been translated in a preprocess into distance and angle constraints. We will show that this assumption has major drawbacks. As a result, the data representation given in [17] has been extended to include explicitly a new constraint <p> differences are mainly due to the assumption made in <ref> [17] </ref> that the distance constraint perpendicular to a segment defined by the user has been translated in a preprocess into distance and angle constraints. We will show that this assumption has major drawbacks. As a result, the data representation given in [17] has been extended to include explicitly a new constraint type that represents the perpendicular distance between a point and a segment. This extension is justified in Section 2. Consistently, new rules have been defined to deal with these new constraints. <p> This extension is justified in Section 2. Consistently, new rules have been defined to deal with these new constraints. These rules are based on the construction of triangles with ruler and compass collected in [9]. We also include the construction of the quadrilaterals given in <ref> [17] </ref>. <p> In what follows, a dimensioning scheme will be a set of points and the set of constraints defined on these points. The data representation used is based on the representations reported in <ref> [14, 16, 17] </ref>, but differs from them in some significative details. In [17] it is assumed that the distance constraint perpendicular to a segment defined by the user has been translated into distance and angle constraints before calling the solver. <p> In what follows, a dimensioning scheme will be a set of points and the set of constraints defined on these points. The data representation used is based on the representations reported in [14, 16, 17], but differs from them in some significative details. In <ref> [17] </ref> it is assumed that the distance constraint perpendicular to a segment defined by the user has been translated into distance and angle constraints before calling the solver. Let us show that this assumption has a ma jor drawback. <p> translations of the distance constraint perpendicular to a segment from a point into distance and angle constraints, there is not a unique translation such that allows to solve all the triangles specified by dimensioning schemes where one or more altitudes are included, applying just the set of rules defined in <ref> [17] </ref>. Proof. We shall prove the theorem by checking each different possible translation of the three points problem into a four points problem. 1. Translation A. The dimensioning schemes number 8 and 9 in Figure 2 cannot be solved by translation A, but can be solved by translation B. 2. <p> Since this constraint is so often used, we have included a specific representation for it. Therefore, besades the CD sets and the CA sets given in [14] and <ref> [17] </ref>, we include the CH sets. These constraints sets are defined as follows. <p> A frame of reference is attached to each CD set to which the points in the set are refered to, <ref> [14, 17] </ref>. It is worth to note that a sketch is solved when all the points in it belong to the same CD set. A CH set is a point and a segment constrained by the perpendicular distance from the point to the segment. <p> A CH set is a point and a segment constrained by the perpendicular distance from the point to the segment. Note that the CA set definition here is the same than that given in <ref> [17] </ref>, but there is a difference in the role the CA sets will play. In [17] CA sets are initialy created from angle constraints. <p> A CH set is a point and a segment constrained by the perpendicular distance from the point to the segment. Note that the CA set definition here is the same than that given in <ref> [17] </ref>, but there is a difference in the role the CA sets will play. In [17] CA sets are initialy created from angle constraints. Then when two CA sets share a segment they are merged, representing then the transitive closure of the angle constraints and the new CA set no longer fulfills the definition. <p> See Figure 3. 3 Rules In order to deal with the CH sets, we have consistently extended the rules given in [16] and in <ref> [17] </ref>. According to the functionality of the rules we classify them as creation rules, merging rules or construction rules. <p> Basic construction rules merge three constraint sets into a CD set. Quadrilateral rules merge five constraint sets into a CD set, but, as shown in <ref> [16, 17] </ref>, these rules can be expressed in terms of the basic construction rules by adding an extra point and two constraints derived from the initial set of constraints. <p> . . . . . . . . . . . . . . . . . . . . . . . .. . . . . . . . . . . . p 3 ch 3 3.3.10 Quadrilateral Rules Three quadrilateral rules were described in [16] and <ref> [17] </ref>. For each quadrilateral problem first we will give the general rule. Then we will show that the quadrilateral problem can be transformed into an appropiate sequence of triangular problems by adding an extra point and some constraints derived from those constraints already defined in the dimensioning scheme.
Reference: [18] <author> Wu Wen-Tsun. </author> <title> Basic principles of mechanical theorem proving in geometries. </title> <journal> J. of Systems Sciences and Mathematical Sciences, </journal> <volume> 4 </volume> <pages> 207-235, </pages> <year> 1986. </year>
Reference-contexts: In the first approach, constraints are translated to equations. The resulting system of non-linear simultaneous equations is solved using different techniques such as numerical methods, as Newton-Raphson [10] or Relaxation, [2, 8, 15]; symbolic algebraic methods, as Grob-ner basis [5] and the Buchberger's algorithm [4] or Wu-Ritt <ref> [6, 18] </ref> method; or propagation methods [12, 13, 15]. In the constructive approach, constraints are satisfied constructively, by placing geometric elements in some order.
References-found: 18

