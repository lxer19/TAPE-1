URL: http://www.cc.gatech.edu/faculty/ashwin/papers/er-94-01.ps.Z
Refering-URL: http://www.cs.gatech.edu/faculty/ashwin/ABSTRACTS-summary.html
Root-URL: 
Title: Using Genetic Algorithms to Learn Reactive Control Parameters for Autonomous Robotic Navigation  
Author: Ashwin Ram, Ronald Arkin, Gary Boone, and Michael Pearce 
Note: Adaptive Behavior, volume 2, issue 3, pages 277-304, 1994.  
Affiliation: College of Computing Georgia Institute of Technology  
Abstract: This paper explores the application of genetic algorithms to the learning of local robot navigation behaviors for reactive control systems. Our approach evolves reactive control systems in various environments, thus creating sets of "ecological niches" that can be used in similar environments. The use of genetic algorithms as an unsupervised learning method for a reactive control architecture greatly reduces the effort required to configure a navigation system. Unlike standard genetic algorithms, our method uses a floating point gene representation. The system is fully implemented and has been evaluated through extensive computer simulations of robot navigation through various types of environments. 
Abstract-found: 1
Intro-found: 1
Reference: <author> J. Albus, H. McCain, & R. Lumia. </author> <year> (1987). </year> <title> NBS Standard Reference Model for Telerobot Control System Architecture (NASREM). </title> <type> NBS Technical Note 1235, </type> <institution> Robot Systems Division, National Bureau of Standards, </institution> <address> Washington, D.C. </address>
Reference: <author> T. Anderson & M. Donath. </author> <year> (1991). </year> <title> Animal Behavior as a Paradigm for Developing Robot Autonomy. In Designing Autonomous Agents. </title> <editor> P. Maes (Ed.), </editor> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> R. Arkin. </author> <year> (1989). </year> <title> Motor Schema-Based Mobile Robot Navigation, </title> <journal> International Journal of Robotics Research, </journal> <volume> Vol. 8, No. 4, </volume> <pages> pp. 92-112. </pages>
Reference-contexts: Robust individual behaviors must first be designed and implemented, then tuned to fit the response characteristics of the sensors and effectors. The motor schema approach to reactive control has proven to be a powerful method in the field of robotics <ref> (Arkin, 1989) </ref>. This model of robotic systems allows researchers to construct robots that can function robustly and in real time in a dynamic, open world. <p> Motor schemas are manifested as analogs of potential fields <ref> (Arkin, 1989) </ref>. Multiple active schemas are typically present, each producing a velocity vector driving the robot in response to its perceptual stimulus. The individual vectors are summed and normalized, yielding a single combined velocity for the robot.
Reference: <author> R. Arkin & R. Murphy. </author> <year> (1990). </year> <title> Autonomous Navigation in a Manufacturing Environment, </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> Vol. 6, No. 4, </volume> <pages> pp. 445-454. </pages>
Reference: <author> R. Arkin, E. Riseman, & A. Hanson. </author> <year> (1987). </year> <title> AuRA: An Architecture for Vision-based robot Navigation, </title> <booktitle> DARPA Image Understanding Workshop, </booktitle> <pages> pp. 417-431, </pages> <address> Los Angeles. </address>
Reference-contexts: Because a single parameter setting can affect a particular behavior, its relation to other behaviors, and emergent behaviors, it is difficult to fine tune schema parameters manually. In the Autonomous Robot Architecture (AuRA), motor schemas provide the reactive component of navigation <ref> (Arkin, Riseman, & Hanson, 1987) </ref>.
Reference: <author> A. Barto, C. Anderson, & R. Sutton. </author> <year> (1982). </year> <title> Synthesis of Nonlinear Control Surfaces by a Layered Associative Search Network. </title> <journal> Biological Cybernetics Vol. </journal> <volume> 43, </volume> <pages> pp. 175-85. </pages>
Reference-contexts: Fikes, Hart, and Nilsson extended the STRIPS robot navigation system to allow it to learn from its failures (Fikes, Hart, & Nilsson, 1972). Barto, Anderson, and Sutton attempted to solve nonlinear robot navigation tasks using a two-layer connectionist network <ref> (Barto, Anderson, & Sutton, 1982) </ref>. This simulation allowed the robot to learn associations between landmark and the directions of travel that would lead it to the goal, which would provide positive reinforcement. Previous workers have also applied genetic algorithms to robot navigation.
Reference: <author> R. Brooks. </author> <year> (1989). </year> <title> The Whole Iguana. </title> <booktitle> Robotics Science, </booktitle> <pages> pp. 433-56. </pages>
Reference: <author> R. Brooks. </author> <title> A robot that walks: Emergent behaviors from a carefully evolved network. </title> <booktitle> (1989). In IEEE International Conference on Robotics and Automation, </booktitle> <volume> Vol. 2, </volume> <pages> pp. 692-696. </pages>
Reference: <author> L. Davis (Ed.). </author> <year> (1991). </year> <title> Handbook of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold. </publisher>
Reference-contexts: Since extensive parameter studies defeat the purpose of using an optimization algorithm, a few variations suffice to provide confidence in the performance of the algorithm. While our empirically-determined reproduction and crossover probabilities were similar to established research <ref> (Davis, 1991) </ref>, our mutation parameter was found to be equally optimal between 0.5 and 1.0. This was due to the relative mutation used by our algorithm. In a bit-string representation, the mutation operator randomly inverts bits.
Reference: <author> M. Dorigo & U. Schnepf. </author> <year> (1991). </year> <title> Organization of Robot Behavior Through Genetic Learning Processes. </title> <booktitle> Fifth International Conference on Advanced Robotics, </booktitle> <volume> Vol. 2, </volume> <pages> pp. 1456-60. </pages>
Reference-contexts: Previous workers have also applied genetic algorithms to robot navigation. Dorigo and Schnepf used this method to train simulated robots to avoid obstacles and follow moving targets <ref> (Dorigo & Schnepf, 1991) </ref>. The genetic algorithm was used to determine when the robot should switch from one behavior to another, as only one behavior is active at a time.
Reference: <author> A. Elfes. </author> <year> (1987). </year> <title> Sonar-based Real-world Mapping and Navigation. </title> <journal> IEEE Journal of Robotics and Automation. </journal> <volume> R-A-3(3), </volume> <pages> pp. 249-265. </pages>
Reference: <author> R. Fikes, P. Hart, & Nils Nilsson. </author> <title> Learning (1972). and Executing Generalized Robot Plans. </title> <journal> Artificial Intelligence, </journal> <volume> Vol. 3, </volume> <pages> pp. 251-88. </pages>
Reference-contexts: Although learning is an important feature of intelligent and autonomous robot systems, work beyond the conceptual stage is limited. Fikes, Hart, and Nilsson extended the STRIPS robot navigation system to allow it to learn from its failures <ref> (Fikes, Hart, & Nilsson, 1972) </ref>. Barto, Anderson, and Sutton attempted to solve nonlinear robot navigation tasks using a two-layer connectionist network (Barto, Anderson, & Sutton, 1982).
Reference: <author> D. Goldberg. </author> <year> (1989). </year> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley Publishing Company. </publisher>
Reference-contexts: Thus, the offspring values can grow beyond the range of the parents while remaining closely related. 4 3 Genetic Algorithms A genetic algorithm (GA) is a hill-climbing search method that finds near-optimal solutions by subjecting a population of points in a search space to a set of biologically-inspired operators <ref> (Goldberg, 1989) </ref>. The "fitness" of each member of the GA population is computed by an evaluation function that measures how well the individual performs in the task domain. <p> For example, if the string [00000000] was crossed with string [11111111] the result might be [00011111] and [11100000]. The choice of which individuals to cross and where to cut the chromosome is random. This random search component gives GAs much of their power <ref> (Goldberg, 1989) </ref>. The mutation operator is used to prevent the loss of information that occurs as the population converges on the fittest individuals. Premature convergence is said to occur when the population cannot improve because all of the individuals in the population have the same value for a given gene.
Reference: <author> D.F. Gordon & D. Subramanian. </author> <year> (1993). </year> <title> A Multistrategy Learning Schema for Assimilating Advice in Embedded Agents. </title> <booktitle> Second International Workshop on Multistrategy Learning, </booktitle> <pages> pp. 218-233. </pages>
Reference: <author> J.J. Grefenstette, C.L. Ramsey, & A.C. Schultz. </author> <year> (1990). </year> <title> Learning Sequential Decision Rules using Simulation Models and Competition. </title> <journal> Machine Learning, </journal> <volume> Vol. 5, No. 4, </volume> <pages> pp. 355-381. </pages>
Reference-contexts: Grefenstette, Ramsey, and Schultz's SAMUEL system takes a different approach; rather than optimize individual behaviors ("decision rules"), a genetic algorithm is used at the level of tactical plans comprising an entire set of decision rules for a given task <ref> (Grefenstette, Ramsey, & Schultz, 1990) </ref>. Our method, GA-Robot, also uses genetic algorithms to optimize a reactive control system but, unlike the above methods, it focuses on optimizing the individual reactive behaviors themselves.
Reference: <author> C. Janikow & Z. Michalewicz. </author> <year> (1991). </year> <title> An Experimental Comparison of Binary and Float--ing Point Representations in Genetic Algorithms. </title> <booktitle> Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pp. 31-36. </pages>
Reference: <author> L. Kaelbling.(1986). </author> <title> An Architecture for Intelligent Reactive Systems. SRI Technical Note, V 400, </title> <booktitle> SRI International. </booktitle> <month> October. </month>
Reference: <author> D. Payton. </author> <year> (1986). </year> <title> An Architecture for Reflexive Autonomous Vehicle Control. </title> <booktitle> IEEE Conference on Robotics and Automation, </booktitle> <pages> pp. 1838-1845. </pages>
Reference: <author> D. Payton, D. Keirsey, J. Krozel, & K. Rosenblatt. </author> <year> (1992). </year> <title> Do whatever works: A robust approach to fault-tolerant autonomous control. </title> <journal> Applied Intelligence, </journal> <volume> Vol. 2, No. 3, </volume> <pages> pp. 225-250. </pages>
Reference: <author> A. Petland & R. Bolles. </author> <year> (1989). </year> <title> Learning and Recognition in Natural Environments. </title> <booktitle> Robotics Science, </booktitle> <pages> pp. 164-207. </pages>
Reference: <author> A. Ram, R.C. Arkin, K. Moorman, & R.J. Clark. </author> <year> (1992). </year> <title> Case-Based Reactive Navigation: </title>
References-found: 21

