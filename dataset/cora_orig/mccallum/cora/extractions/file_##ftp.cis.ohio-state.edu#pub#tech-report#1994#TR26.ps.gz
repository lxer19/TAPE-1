URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1994/TR26.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Fast Scanline Processing of Useful Implicitly-Defined Shapes: Sphylinders, Cone-Spheres and Rounded Polygons  
Author: Karansher Singh and Richard Parent 
Date: 26 October 1993  
Address: 2036 Neil Avenue, Columbus, OH 43210 USA  
Affiliation: Department of Computer and Information Science The Ohio State University  
Abstract: Implicit Surfaces provide an elegant approach to modeling and animating physically deformable and organic looking objects. A major drawback of this approach is its rendering complexity. Some work has been done on developing fast, robust techniques for ray tracing and polygonization of implicit surfaces. While a fast scanline technique has been proposed for rendering spheres, spheres alone are limited as a modeling primitive. This paper addresses techniques for fast scanline rendering of implicit surfaces in general, and provides details for implicit primitives: spheres, sphylinders, cone-spheres and rounded polygons. These primitives are particularly useful for modeling articulated figures. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. </author> <title> Blinn. A generalization of algebraic surface drawing. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 1(3) </volume> <pages> 235-256, </pages> <year> 1982. </year>
Reference-contexts: Thus F (x; y; z) = P g i (x; y; z) T , where i runs over primitive polynomial functions g i and T is a threshold value 2 <ref> [0; 1] </ref>. The main drawback of this approach is the time taken to sample space in order to determine the implicitly defined surface. While a fast scanline technique has been proposed for rendering spheres [1], spheres alone have limited usefulness as a modeling primitive. <p> The main drawback of this approach is the time taken to sample space in order to determine the implicitly defined surface. While a fast scanline technique has been proposed for rendering spheres <ref> [1] </ref>, spheres alone have limited usefulness as a modeling primitive. <p> In this paper a density function is any function with certain properties (section 2.3) whose domain is the distance ratio of a point. The distance ratio for a point is a normalized value 2 <ref> [0; 1] </ref> obtained as the ratio of the distance of the point from the key point or set of points and a radius of influence for the primitive at that point. The implicit surfaces addressed in this paper are distance surfaces, as defined in [3]. <p> Whenever the sum achieves the threshold, the surface has been encountered and display attributes can be determined [14], [12],[17]. Various techniques for fast and robust ray tracing of implicit surfaces have been studied [16],[8]. Blinn <ref> [1] </ref> addresses the issue of efficiently rendering surfaces defined by spherical density functions by employing scanline processing; modeling molecular structures are the motivating influence in his work. He extends the processing of the basic sphere shape to include affine transformations of spheres. <p> The former technique requires the use of a full zbuffer while the efficiency of the latter technique suffers from performing all computation in unperspected space (the ubiquitous space-time tradeoff). 2.2 Implicit Function Properties Blinn <ref> [1] </ref> uses a powerful heuristic which finds a number of initial guess points, one for each z-span. For each z-span this guess point is either the first point where the primitive's function achieves the threshold value or the point where it attains a maxima. <p> primitives where explicit distance to the skeleton can be computed rather than the square of the distance using geometric arguments, a combination of two quadratics f (x) = 1 2 fl x 2 for x 2 [0; 0:5] and f (x) = 2 fl (1 x) 2 for x 2 <ref> [0:5; 1] </ref> provides similar blending properties. The quartic and quadratic polynomials facilitate precise surface intersection calculation within a nonoverlapping depth span, for all object primitives whose geometry is defined in terms of a skeleton and a constant distance around it (spheres, sphylinders and rounded poly gons).
Reference: [2] <author> J. Bloomenthal. </author> <title> Polygonization of implicit surfaces. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <volume> 5 </volume> <pages> 341-355, </pages> <year> 1988. </year>
Reference-contexts: These may thus be identically applied to the rendering of convolution surfaces. Implicit surfaces can be rendered in one of two ways. One way is to construct a polygonal boundary representation from the summed density functions. This can be done as in [9], <ref> [2] </ref>. The polygonal surface can then be rendered by any of the various standard rendering algorithms. Alternatively, one may trace rays through space, sampling the summed functions as the rays progress away from the observer.
Reference: [3] <author> J. Bloomenthal and K. Shoemake. </author> <title> Convolution surfaces. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 251-256, </pages> <year> 1991. </year>
Reference-contexts: The implicit surfaces addressed in this paper are distance surfaces, as defined in <ref> [3] </ref>. The difference between distance surfaces and convolution surfaces [3] lies in the method of density value calculation for a point in the primitive. The techniques discussed in this paper deal with the geometric properties of the implicit primitives, which are the same for either surface. <p> The implicit surfaces addressed in this paper are distance surfaces, as defined in <ref> [3] </ref>. The difference between distance surfaces and convolution surfaces [3] lies in the method of density value calculation for a point in the primitive. The techniques discussed in this paper deal with the geometric properties of the implicit primitives, which are the same for either surface. These may thus be identically applied to the rendering of convolution surfaces. <p> Thus for functions g i summed over i primitives the normal vector is P &lt; ffig i ffix ; ffig i ffiy ; ffig i ffiz &gt;. For primitives defined with a constant offset distance from a skeleton <ref> [3] </ref> r (spheres, sphylinders and rounded polygons), with an associated function of distance ratio f , the normal vector contribution for the primitive &lt; ffig i ffix ; ffig i ffiy ; ffig i ffiz &gt; is identically f 0 (d)flN r where d is the distance ratio at point, and
Reference: [4] <author> J. Bloomenthal and B. Wyvill. </author> <title> Interactive techniques for implicit modeling. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 109-116, </pages> <year> 1990. </year>
Reference: [5] <author> M. Gascuel. </author> <title> An implicit formulation for precise contact modeling between flexible solids. </title> <booktitle> Proc. of SIG-GRAPH, </booktitle> <pages> pages 313-320, </pages> <year> 1993. </year>
Reference: [6] <author> D. Haumann J. Chadwick and R. Parent. </author> <title> Layered construction for deformable animated characters. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 243-252, </pages> <year> 1989. </year>
Reference-contexts: The user can place the primitives in space by specifying the coordinates of a few points and have a reasonable expectation of the result. * They are expressive. The primitives are useful for modeling a variety of shapes. One of our motivations was the representation of articulated figures [7], <ref> [6] </ref>. * The primitives lend themselves to scanline processing. The calculations which determine extents in x, y and z must be tractable. An object-oriented approach has been used so that pointers to necessary functions are encapsulated in the object data structure.
Reference: [7] <author> N. Thalmann J. Gourret and D. Thalmann. </author> <title> Simulation of object and human skin deformations in a grasping task. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 21-30, </pages> <year> 1989. </year>
Reference-contexts: The user can place the primitives in space by specifying the coordinates of a few points and have a reasonable expectation of the result. * They are expressive. The primitives are useful for modeling a variety of shapes. One of our motivations was the representation of articulated figures <ref> [7] </ref>, [6]. * The primitives lend themselves to scanline processing. The calculations which determine extents in x, y and z must be tractable. An object-oriented approach has been used so that pointers to necessary functions are encapsulated in the object data structure.
Reference: [8] <author> D. Kalra and A. Barr. </author> <title> Guaranteed ray intersections with implicit surfaces. </title> <journal> Computer Graphics, </journal> <volume> 23(3) </volume> <pages> 297-306, </pages> <year> 1989. </year>
Reference: [9] <author> W. Lorenson and H. Cline. </author> <title> Marching cubes: A high resolution 3d surface construction algorithm. </title> <journal> Computer Graphics, </journal> <volume> 21(4) </volume> <pages> 163-169, </pages> <year> 1987. </year>
Reference-contexts: These may thus be identically applied to the rendering of convolution surfaces. Implicit surfaces can be rendered in one of two ways. One way is to construct a polygonal boundary representation from the summed density functions. This can be done as in <ref> [9] </ref>, [2]. The polygonal surface can then be rendered by any of the various standard rendering algorithms. Alternatively, one may trace rays through space, sampling the summed functions as the rays progress away from the observer.
Reference: [10] <author> N. Max. </author> <title> Cone-spheres. </title> <journal> Computer Graphics, </journal> <volume> 24(4) </volume> <pages> 59-62, </pages> <year> 1990. </year>
Reference-contexts: The com-putations presented here with regard to spheres are essentially equivalent to those presented by Blinn; however, the computations found here have a marked geometric flavor as opposed to the algebraic approach of Blinn. Nelson Max <ref> [10] </ref> argues for the usefulness of cone-spheres as a modeling primitive. In his work, sphylinders are just considered as another example of cone-spheres. However, sphylinders present opportunity for computational simplifications which can be taken advantage of if treated as a separate case.
Reference: [11] <author> G. Wyvill C. McPheeters and B. Wyvill. </author> <title> Data structures for soft objects. </title> <journal> Visual Computer, </journal> <volume> 2 </volume> <pages> 227-234, </pages> <year> 1986. </year>
Reference-contexts: The terms metaball, blob and soft objects have been used in previous work to refer to this shape and, by extension, to any such primitive used in constructing an implicit surface. Wyvill <ref> [11] </ref> discusses the representation of what he refers to as soft objects defined by: 1. a set of key points each of which defines the center of a sphere. 2. a set of radii of influence, each of which is a distance from the corresponding key point beyond which the corresponding <p> As developed in Wyvill <ref> [11] </ref>, a simple Hermite cubic solution is well suited to the above. However, to avoid taking square roots in distance ratio calculations, a sixth degree polynomial with the added constraint f ( 1 2 ) = 1 2 is used.
Reference: [12] <author> P.Hanrahan. </author> <title> Ray tracing algebraic surfaces. </title> <journal> Computer Graphics, </journal> <volume> 17(3) </volume> <pages> 83-90, </pages> <year> 1983. </year>
Reference: [13] <author> R. Szeliski and D. Tonnesen. </author> <title> Surface modeling with oriented particle systems. </title> <journal> Computer Graphics, </journal> <volume> 26(2) </volume> <pages> 185-194, </pages> <year> 1992. </year>
Reference: [14] <author> A. Fujimoto T. Tanaka and K. Iwata. </author> <title> Arts: Accelerated ray tracing system. </title> <journal> Computer Graphics and Applications, </journal> <volume> 6(4) </volume> <pages> 16-26, </pages> <year> 1986. </year>
Reference-contexts: Alternatively, one may trace rays through space, sampling the summed functions as the rays progress away from the observer. Whenever the sum achieves the threshold, the surface has been encountered and display attributes can be determined <ref> [14] </ref>, [12],[17]. Various techniques for fast and robust ray tracing of implicit surfaces have been studied [16],[8]. Blinn [1] addresses the issue of efficiently rendering surfaces defined by spherical density functions by employing scanline processing; modeling molecular structures are the motivating influence in his work.
Reference: [15] <author> J. Warren. </author> <title> Blending algebraic surfaces. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 8(4) </volume> <pages> 263-278, </pages> <year> 1989. </year>
Reference-contexts: This makes implicit surfaces an attractive alternative to using higher order surface patches for object modeling <ref> [15] </ref>. * Topological changes to the object due to manipulation of the primitives are handled automatically and elegantly. The simplest implicit shape to use as a modeling primitive is a sphere, within which the function is radially symmetric about a central point in space.
Reference: [16] <author> J. Wilhelms and A. Van Gelder. </author> <title> Octrees for faster isosurface generation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 11(3) </volume> <pages> 201-227, </pages> <year> 1992. </year>
Reference: [17] <author> G. Wyvill and A. Trotman. </author> <title> Ray tracing soft objects. </title> <booktitle> Proc. of Computer Graphics International, </booktitle> <year> 1990. </year>
References-found: 17

