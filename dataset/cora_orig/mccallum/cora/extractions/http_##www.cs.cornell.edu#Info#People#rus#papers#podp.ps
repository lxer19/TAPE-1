URL: http://www.cs.cornell.edu/Info/People/rus/papers/podp.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/rus/papers/papers.html
Root-URL: 
Title: Using White Space for Automated Document Structuring  
Author: Daniela Rus and Kristen Summers 
Date: March 24, 1994  
Affiliation: Department of Computer Science Cornell University  
Abstract: We present and analyze efficient algorithms for the automated recognition and interpretation of layout structures in electronic documents. The key idea is to use the patterns in the distribution of white space in a document to recognize and interpret its components. The recognition algorithm divides the document into a hierarchy of interesting pieces; the interpretation algorithms classify these divisions as base-text, tables, indented lists, polygonal drawings, and graphs. Our methodology allows the automatic markup of documents 1 and the creation of multi-level indices and browsing tools for electronic libraries.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Allan, J. Davis, D. Krafft, D. Rus, and D. Subramanian. </author> <title> Information agents for building hyperlinks, </title> <year> 1993. </year>
Reference-contexts: these document elements combined with a small amount of text analysis enables the execution of conceptually specified retrieval tasks, such as "find precision recall measures for the CACM collection" (discussed in the introduction), "find performance graphs of the Byzantine agreement protocol," and "find a list of assumptions in this paper" <ref> [1] </ref>. In the future, we would like to create a comprehensive library of structure detectors with performance guarantees. 3.1 A Structure Detector for Tables 10 Webster's Seventh Dictionary defines a table as a systematic arrangement of data usually in rows and columns for ready reference. <p> Definition 3.1 Vertical structure: The white space density graph of B is the polygonal line wdg : [0; m] ! <ref> [0; 1] </ref> defined by the points wdg (i) = 1 n j=0 w (B i;j ); 8i 2 N " [0; m]. <p> at a various levels of detail; (3) conceptualizing the search of electronic documents by providing support for retrieval with nonlinguistic cues, an approach supported by our belief that the inherent structures in electronic repositories encode content in a task-specific way [26] and illustrated by examples throughout this paper and in <ref> [1, 26] </ref>; and (4) uniformly marking-up generic documents for other retrieval purposes (for instance, an SGML mark-up for the Smart retrieval system [29]) by automatically recognizing the logical components of documents.
Reference: [2] <author> A. Bookstein. </author> <title> Fuzzy requests: An approach to weighted boolean searches. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 30(4) </volume> <pages> 240-247, </pages> <year> 1980. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [3] <author> A. L. Brown, S. Mantha, and T. Wakayama. </author> <title> A formal specification of document processing. </title> <institution> Xerox Corporation, Webster Research Center. </institution>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in <ref> [3] </ref>. * Information Retrieval. In classical information retrieval [2, 5, 8, 11, 12, 27, 28], the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency. <p> Information about printers' rules can be naturally incorporated, in order to aid in characterization of the revealed structures. * Document Processing. Work in document processing addresses the issue of document layout generation. In <ref> [3, 4, 10] </ref>, a formal separation of document structure from its layout effects is proposed. The suggestion is that a document should be defined by its content and structure, according to a source grammar.
Reference: [4] <author> A. L. Brown, T. Wakayma, and H. A. Blair. </author> <title> A reconstruction of context-dependent document processing in SGML. </title> <institution> Xerox Corporation, Webster Research Center and Syracuse University, School of Computer and Information Science. </institution>
Reference-contexts: Information about printers' rules can be naturally incorporated, in order to aid in characterization of the revealed structures. * Document Processing. Work in document processing addresses the issue of document layout generation. In <ref> [3, 4, 10] </ref>, a formal separation of document structure from its layout effects is proposed. The suggestion is that a document should be defined by its content and structure, according to a source grammar.
Reference: [5] <author> D. A. Buell and D. H. Kraft. </author> <title> Threshold values and boolean retrieval system. </title> <booktitle> Information Processing and Management, </booktitle> <volume> 17(3) </volume> <pages> 127-136, </pages> <year> 1981. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [6] <author> D. Conelly and B. Paddock. </author> <title> XDOC data format: </title> <type> Technical specification. </type> <institution> Xerox Imaging Systems, Inc., </institution> <address> Peabody, MA, </address> <year> 1993. </year>
Reference-contexts: This usage presumes prior knowledge of the portions of the document that constitute figures. In many cases, such an assumption is reasonable. For example, in a PostScript document representation, identifiable commands indicate the inclusion of figures; similarly in the XDOC format, generated by the ScanWorX optical character recognition software <ref> [6] </ref>, figures are separated from text and represented differently. Nonetheless, this distinction may not always be readily available. An ascii text file, such as an electronic news or mail message, will not provide such convenient separations.
Reference: [7] <author> P. Crean, C. Russell, and M. V. Dellon. </author> <title> Overview and programming guide to the mind image management systems. </title> <type> Technical Report X9000627, </type> <institution> Xerox, </institution> <year> 1991. </year>
Reference-contexts: Tools like WAIS [14], Gopher, Netfind [31], Archie, Mind <ref> [7] </ref>, and CORE [19] have been developed in response to this challenge. A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval.
Reference: [8] <author> W. B. Croft. </author> <title> Document representation in probablistic models in information retrieval. </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 31(6) </volume> <pages> 451-457, </pages> <year> 1981. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [9] <author> G. Eliot. Daniel Deronda. </author> <title> The World's Classics. </title> <publisher> Oxford University Press, Oxford, </publisher> <year> 1984. </year>
Reference-contexts: The cover to the paperback Oxford edition <ref> [9] </ref> contains two lines: one with the author's name, and one with the title.
Reference: [10] <author> A. Feng and T. Wakayama. SIMON: </author> <title> A grammar based transformation system for structured documents. </title> <institution> Xerox Corporation, Webster Research Center. </institution>
Reference-contexts: Information about printers' rules can be naturally incorporated, in order to aid in characterization of the revealed structures. * Document Processing. Work in document processing addresses the issue of document layout generation. In <ref> [3, 4, 10] </ref>, a formal separation of document structure from its layout effects is proposed. The suggestion is that a document should be defined by its content and structure, according to a source grammar.
Reference: [11] <author> E. Fox, Q. Chen, and R. </author> <title> France. Integrating search and retrieval with hypertext. </title> <editor> In E. Berk and J. Devlin, editors, </editor> <booktitle> Hypertext/Hypermedia Handbook, </booktitle> <pages> pages 329-355. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [12] <author> M. A. Hearst. </author> <title> Contextualizing retrieval of full-length documents. </title> <type> Technical Report UCB/CSD-94-789, </type> <institution> University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [13] <author> A. Jain and S. Bhattacharjee. </author> <title> Address block location on envelopes using gabor filters. </title> <journal> Pattern Recognition, </journal> <volume> 25(12), </volume> <year> 1992. </year>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in <ref> [13, 23, 25, 33] </ref>, segment pages of one format type each. The 3 systems in [22, 32] find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules.
Reference: [14] <author> B. Kahle. </author> <title> Overview of wide area information servers, 1991. WAIS on-line documentation. </title>
Reference-contexts: Tools like WAIS <ref> [14] </ref>, Gopher, Netfind [31], Archie, Mind [7], and CORE [19] have been developed in response to this challenge. A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15].
Reference: [15] <author> R. Kahn and V. </author> <title> Cerf. </title> <booktitle> The world of knowbots, </booktitle> <year> 1988. </year> <note> Report to the Corporation for National Research Initiative. </note>
Reference-contexts: Tools like WAIS [14], Gopher, Netfind [31], Archie, Mind [7], and CORE [19] have been developed in response to this challenge. A detailed proposal for organizing architectures for retrieving information from electronic repositories is <ref> [15] </ref>. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval.
Reference: [16] <author> D. Kozen. </author> <title> The Design and Analysis of Algorithms. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1992. </year>
Reference-contexts: If t ij = t i 0 j 0 the data in row i and column j and the data in row i 0 and column j 0 are *-similar. The type matrix for the table in Figure 11 is given in Figure 14. A GCD algorithm <ref> [16] </ref> can be used to determine the type, if any, of the overall matrix and thus to decide whether the matrix represents a table.
Reference: [17] <author> H. Kucera and W. Francis. </author> <title> Computational Analysis of Presentday American English. </title> <publisher> Brown University Press, </publisher> <address> Providence, RI, </address> <year> 1967. </year> <month> 24 </month>
Reference-contexts: The analysis makes the following assumptions: * The average word length that occurs in text is known. For English, <ref> [17] </ref> have determined that the average word length of distinct words is 8.1 characters, but of word occurrences in written text, it is 4.7 characters. For simplicity, we assume that in basic text, the average word length is 4 characters. * The blank spaces in base text are distributed independently.
Reference: [18] <author> L. Lamport. </author> <title> L a T E X: A Document Preparation System. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1986. </year>
Reference-contexts: In the case of a scanned-in document, we are not assured that all significant font changes are readily identifiable in this manner. Furthermore, font types as well as sizes carry significant information. For example, the L a T E X environment description <ref> [18] </ref> includes a boldface heading at the beginning of each item. An indentation alphabet that included font type would be able to distinguish between a list of this kind and one without such headings. * Most significantly, work is needed on the classification of the identified structures.
Reference: [19] <author> M. Lesk. </author> <title> The CORE electronic chemistry library. </title> <booktitle> In Proceedings of the SIGIR, </booktitle> <year> 1991. </year>
Reference-contexts: Tools like WAIS [14], Gopher, Netfind [31], Archie, Mind [7], and CORE <ref> [19] </ref> have been developed in response to this challenge. A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval.
Reference: [20] <author> C. Lewis, D. Rus, and M. Scott. </author> <title> A structure detector for tables. </title> <type> Forthcoming Technical Report. </type>
Reference-contexts: Let B be a block of text of n rows and m 10 This section is based on <ref> [20] </ref>. 11 In this, we differ from [25], where the goal is to find the grid structure in a text component known to be a table. 15 columns and w : fcjc is a character g ! f0; 1g with w (" ") = 1 and 8c 6= " "; w <p> This efficient and robust table detector has been implemented and used to build information agents for retrieval tasks whose answers are found in tabular form <ref> [20] </ref>. 15 2 6 6 6 6 6 6 6 6 t 1 t 2 t 4 t 6 t 8 t 9 t 10 t 1 t 2 t 4 t 6 t 8 t 9 t 10 t 1 t 2 t 4 t 0 t 8 t 9
Reference: [21] <institution> Splus Reference Manual. Statistical Sciences, Inc., </institution> <year> 1991. </year>
Reference-contexts: This is due to the fact that the lengths of words and of the spacing between them are variable, and their occurrences in a line of text are random. We have tested the independence of the distribution of white space by extensive experiments with Splus <ref> [21] </ref>. This implies that the blank spaces of a line have a binomial distribution. 12 0 0.2 0.4 0.6 0.8 1 Column Let B be a block of text of n rows and m columns.
Reference: [22] <author> M. Mizuno, Y. Tsuji, T. Tanaka, H. Tanaka, M. Iwashita, and T. Temma. </author> <title> Document recognition system with layout structure generator. </title> <journal> NEC Research and Development, </journal> <volume> 32(2) </volume> <pages> 430-437, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in [13, 23, 25, 33], segment pages of one format type each. The 3 systems in <ref> [22, 32] </ref> find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules.
Reference: [23] <author> G. Nagy, S. Seth, and M. Vishwanathan. </author> <title> A prototype document image analysis system for technical journals. </title> <journal> Computer, </journal> <volume> 25(7), </volume> <year> 1992. </year>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in <ref> [13, 23, 25, 33] </ref>, segment pages of one format type each. The 3 systems in [22, 32] find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules.
Reference: [24] <author> G. Porter and E. Rainero. </author> <title> Document reconstruction: A system for recovering document structure from layout. </title> <booktitle> In Proceedings of the Conference on Electronic Publishing, </booktitle> <pages> pages 127-141, </pages> <year> 1992. </year>
Reference-contexts: The systems in [13, 23, 25, 33], segment pages of one format type each. The 3 systems in [22, 32] find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules. In <ref> [24] </ref>, hierarchies are built that also include intermediate structures; knowledge of the formatting rules for a particular document's style is required. 5 We present an approach that finds document divisions at multiple levels of granularity.
Reference: [25] <author> M. A. Rahgozar, Z. Fan, and E. V. Rainero. </author> <title> Tabular document recognition. </title> <booktitle> In SPIE Proceedings, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in <ref> [13, 23, 25, 33] </ref>, segment pages of one format type each. The 3 systems in [22, 32] find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules. <p> Let B be a block of text of n rows and m 10 This section is based on [20]. 11 In this, we differ from <ref> [25] </ref>, where the goal is to find the grid structure in a text component known to be a table. 15 columns and w : fcjc is a character g ! f0; 1g with w (" ") = 1 and 8c 6= " "; w (c) = 0.
Reference: [26] <author> D. Rus and D. Subramanian. </author> <title> Multi-media RISSC Informatics: Retrieving Information with Simple Structural Components. </title> <booktitle> In Proceedings of the ACM Conference on Information and Knowledge Management, </booktitle> <address> Washington DC, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: The algorithm appears in Figure 2. Our current implementation for step 1 divides the document into text blocks and blank blocks. Each document line in such a block constitutes a sub-block. Other segmentation algorithms are possible, such as the one proposed in <ref> [26] </ref>. The hierarchical document divisions allow an arbitrary degree of nesting in the structure of the document. <p> providing partial models of documents that essentially "compress" the data at a various levels of detail; (3) conceptualizing the search of electronic documents by providing support for retrieval with nonlinguistic cues, an approach supported by our belief that the inherent structures in electronic repositories encode content in a task-specific way <ref> [26] </ref> and illustrated by examples throughout this paper and in [1, 26]; and (4) uniformly marking-up generic documents for other retrieval purposes (for instance, an SGML mark-up for the Smart retrieval system [29]) by automatically recognizing the logical components of documents. <p> at a various levels of detail; (3) conceptualizing the search of electronic documents by providing support for retrieval with nonlinguistic cues, an approach supported by our belief that the inherent structures in electronic repositories encode content in a task-specific way [26] and illustrated by examples throughout this paper and in <ref> [1, 26] </ref>; and (4) uniformly marking-up generic documents for other retrieval purposes (for instance, an SGML mark-up for the Smart retrieval system [29]) by automatically recognizing the logical components of documents.
Reference: [27] <author> G. Salton. </author> <title> Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, </address> <year> 1989. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [28] <author> G. Salton and C. Buckley. </author> <title> Improving retrieval performance by relevance feedback. </title> <journal> Journal of American Society for Information Science, </journal> <volume> 41(4) </volume> <pages> 288-297, </pages> <year> 1990. </year>
Reference-contexts: A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15]. We are inspired by research in three additional areas: information retrieval, automated document structuring, and document processing as described in [3]. * Information Retrieval. In classical information retrieval <ref> [2, 5, 8, 11, 12, 27, 28] </ref>, the data environment is text, and the analyzed unit of structure is typically a word. A document is viewed as a possibly ordered list and is analyzed for word occurrence, location, and/or frequency.
Reference: [29] <author> G. Salton and M. McGill. </author> <title> Introduction to Modern Information Retrieval. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: approach supported by our belief that the inherent structures in electronic repositories encode content in a task-specific way [26] and illustrated by examples throughout this paper and in [1, 26]; and (4) uniformly marking-up generic documents for other retrieval purposes (for instance, an SGML mark-up for the Smart retrieval system <ref> [29] </ref>) by automatically recognizing the logical components of documents. This last would allow users the flexibility to create documents in the format of their choice; these could be automatically integrated with retrieval systems (like the Smart system) that usually rely on mark-up for indexing.
Reference: [30] <author> D. Sankoff and J. Kruskal. </author> <title> Time warps, string edits, and macromolecules: the theory and practice of sequence comparison. </title> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: This table lacks the lexical regularity of Table 10, because there are small irregularities in the lexical structure of the columns. To express this more rigorously, let M be a metric for string comparison (we use the Levenshtein metric <ref> [30] </ref>.) Given * &gt; 0, two 16 1. Form the wdg of the text block. 2. Find column separators of height (100 - * v )% blanks. If none exist, the text is not a table, so quit; otherwise continue. 3.
Reference: [31] <author> M. Schwartz and P. Tsirigotis. </author> <title> Experience with a semantically cognizant internet white pages directory tool. </title> <journal> Journal of Internetworking Research and Experience, </journal> <month> March </month> <year> 1991. </year>
Reference-contexts: Tools like WAIS [14], Gopher, Netfind <ref> [31] </ref>, Archie, Mind [7], and CORE [19] have been developed in response to this challenge. A detailed proposal for organizing architectures for retrieving information from electronic repositories is [15].
Reference: [32] <author> S. Tsujimoto and H. Asada. </author> <title> Major components of a complete text reading system. </title> <booktitle> In Proceedings of the IEEE, </booktitle> <volume> volume 80, </volume> <year> 1992. </year>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in [13, 23, 25, 33], segment pages of one format type each. The 3 systems in <ref> [22, 32] </ref> find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules.
Reference: [33] <author> D. Wang and S. N. Srihari. </author> <title> Classification of newspaper image blocks using texture analysis. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 47 </volume> <pages> 327-352, </pages> <year> 1989. </year> <month> 25 </month>
Reference-contexts: This is a first step towards analyzing the contents of documents. Most work on document structuring applies only to documents whose format is known in advance. The systems in <ref> [13, 23, 25, 33] </ref>, segment pages of one format type each. The 3 systems in [22, 32] find a logical document hierarchy composed of paragraphs, subsections, and sections, based on knowledge of standard printers' formatting rules.
References-found: 33

