URL: http://www.cs.umd.edu/users/seanl/papers/robocup.ps
Refering-URL: http://www.cs.umd.edu/projects/plus/papers.html
Root-URL: 
Email: seanl@cs.umd.edu  hohn@wam.umd.edu  jfarris@wam.umd.edu  garyj@wam.umd.edu  hendler@cs.umd.edu  
Title: Co-Evolving Soccer Softbot Team Coordination with Genetic Programming  
Author: Sean Luke Charles Hohn Jonathan Farris Gary Jackson James Hendler 
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: Genetic Programming is a promising new method for automatically generating functions and algorithms through natural selection. In contrast to other learning methods, Genetic Programming's automatic programming makes it a natural approach for developing algorithmic robot behaviors. In this paper we present an overview of how we apply Genetic Programming to behavior-based team coordination in the RoboCup Soccer Server domain. The result is not just a hand-coded soccer algorithm, but a team of softbots which have learned on their own how to play a reasonable game of soccer.
Abstract-found: 1
Intro-found: 1
Reference: [Holland, 1975] <author> J.H. Holland. </author> <booktitle> Adaption in Natural and Artificial Systems. </booktitle> <publisher> University of Michigan Press, </publisher> <year> 1996. </year>
Reference-contexts: The bulk of this paper describes GP and how we use it to evolve coordinated team behaviors and actions for our soccer softbots in RoboCup-97. 2 Genetic Programming Genetic Programming is a variant of the Genetic Algorithm <ref> [Holland, 1975] </ref> whose aim is to optimize, through pseudo-evolution, functions or algorithms (individuals) to solve some task. The most common form of Genetic Programming is due to John Koza [Koza, 1992]. This form optimizes one or more LISP-like program-trees formed from a primordial soup of atomic functions.
Reference: [Iba, 1996] <author> H. Iba. </author> <title> Emergent Cooperation for Multiple Agents using Genetic Programming. </title> <editor> In J.R. Koza, editor, </editor> <booktitle> Late Breaking Papers of the Genetic Programming 1996 Conference. </booktitle> <publisher> Stanford University Bookstore, </publisher> <address> Stan-ford CA, </address> <pages> pages 66-74, </pages> <year> 1996. </year>
Reference-contexts: Genetic Programming has been successfully applied in the field of multiagent coordination a number of times. [Reynolds, 1993] used GP to evolve boids in his groundbreaking work on flocking and herd coordination. [Raik and Durnota, 1994] used GP to evolve cooperative sporting strategies, and [Luke and Spector, 1996] and <ref> [Iba, 1996] </ref> used GP to develop cooperation in predator-prey environments and other domains).
Reference: [Itsuki, 1995] <author> N. Itsuki. </author> <title> Soccer Server: a simulator for RoboCup. </title> <note> In JSAI AI-Symposium 95: Special Session on RoboCup. </note> <month> December, </month> <year> 1995. </year>
Reference-contexts: For RoboCup's virtual competition, players are not robots but computer programs which manipulate virtual robots through RoboCup's provided simulator, the RoboCup Soccer Server <ref> [Itsuki, 1995] </ref>. Players programs may not communicate with each other except through the limited speech provided them by the Soccer Server itself. The RoboCup Soccer Server's loosely distributed nature of agent coordination and dynamic environment make appealing a reactive, behavior-based approach to coordinating the soccer team.
Reference: [Kitano et al, 1995] <author> H. Kitano, M. Asada, Y. Kuniyoshi, I. Noda, and E. Osawa. </author> <title> RoboCup: The Robot World Cup Initiative. </title> <booktitle> In Proceedings of the IJCAI-95 Workshop on Entertainment and AI/ALife, </booktitle> <year> 1995. </year>
Reference-contexts: 1 Introduction The RoboCup competition pits robots (real and virtual) against each other in a simulated soccer tournament <ref> [Kitano et al, 1995] </ref>. The aim of the RoboCup competition is to foster an interdisciplinary approach to robotics and agent-based Artificial Intelligence by presenting a domain that requires large-scale cooperation and coordination in a dynamic, noisy, complex environment.
Reference: [Koza, 1992] <author> J.R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> The MIT Press, </publisher> <address> Cambridge MA, </address> <year> 1992. </year>
Reference-contexts: The most common form of Genetic Programming is due to John Koza <ref> [Koza, 1992] </ref>. This form optimizes one or more LISP-like program-trees formed from a primordial soup of atomic functions. These trees serve both as the genetic material of an individual, and as the code for the resultant algorithm itself; there is no intermediate representation.
Reference: [Luke and Spector, 1996] <author> S. Luke and L. Spector. </author> <title> Evolving Teamwork and Coordination with Genetic Programming. </title> <editor> In J.R. Koza et al., editors, </editor> <booktitle> Proceedings of the First Annual Conference on Genetic Programming (GP-96). </booktitle> <publisher> The MIT Press, </publisher> <address> Cambridge MA, </address> <pages> pages 150-156, </pages> <year> 1996. </year>
Reference-contexts: Genetic Programming has been successfully applied in the field of multiagent coordination a number of times. [Reynolds, 1993] used GP to evolve boids in his groundbreaking work on flocking and herd coordination. [Raik and Durnota, 1994] used GP to evolve cooperative sporting strategies, and <ref> [Luke and Spector, 1996] </ref> and [Iba, 1996] used GP to develop cooperation in predator-prey environments and other domains).
Reference: [Montana, 1995] <author> D.J. Montana. </author> <title> Strongly Typed Genetic Programming. In Evolutionary Computation. </title> <publisher> The MIT Press, </publisher> <address> Cambridge MA, </address> <month> 3(2) </month> <pages> 199-230, </pages> <year> 1995. </year>
Reference-contexts: We use Strongly-Typed GP <ref> [Montana, 1995] </ref> to provide for a variety of different types of data (booleans, vectors, etc.) accepted and returned by GP functions. Table 1 gives a sampling of the basic functions we provide our GP system with which to build individuals.
Reference: [Raik and Durnota, 1994] <author> S. Raik and B. Durnota. </author> <title> The Evolution of Sporting Strategies. </title> <editor> In R.J. Stonier and X.H. Yu, editors, </editor> <title> Complex Systems: Mechanisms of Adaption. </title> <publisher> IOS Press, Amsterdam, </publisher> <pages> pages 85-92, </pages> <year> 1994. </year>
Reference-contexts: This makes it natural for learning programmatic behaviors in a domain like the Soccer Server. Genetic Programming has been successfully applied in the field of multiagent coordination a number of times. [Reynolds, 1993] used GP to evolve boids in his groundbreaking work on flocking and herd coordination. <ref> [Raik and Durnota, 1994] </ref> used GP to evolve cooperative sporting strategies, and [Luke and Spector, 1996] and [Iba, 1996] used GP to develop cooperation in predator-prey environments and other domains).
Reference: [Reynolds, 1993] <author> C.W. Reynolds. </author> <title> An Evolved, Vision-Based Behavioral Model of Coordinated Group Motion. </title> <editor> In Jean-Arcady Meyer et al., editors, </editor> <booktitle> Proceedings of the Second International Conference on Simulation of Adaptive Behavior. </booktitle> <publisher> The MIT Press, </publisher> <address> Cambridge MA, 384-392, </address> <year> 1993. </year>
Reference-contexts: This makes it natural for learning programmatic behaviors in a domain like the Soccer Server. Genetic Programming has been successfully applied in the field of multiagent coordination a number of times. <ref> [Reynolds, 1993] </ref> used GP to evolve boids in his groundbreaking work on flocking and herd coordination. [Raik and Durnota, 1994] used GP to evolve cooperative sporting strategies, and [Luke and Spector, 1996] and [Iba, 1996] used GP to develop cooperation in predator-prey environments and other domains).
Reference: [Zongker and Punch, 1995] <author> D. Zongker and B. Punch. </author> <note> lil-gp 1.0 User's Manual. Available through the World-Wide Web at http://isl.cps.msu.edu/GA/software/lil-gp, or via anonymous FTP at isl.cps.msu.edu in the /pub/GA/lilgp directory. </note> <year> 1995. </year>
Reference-contexts: The resultant fitness assessments are then used by the Genetic Programming system to determine selection and breeding to form the next generation of soccer teams. We perform our GP runs using a custom strongly-typed multithreaded version of lil-gp 1.1 <ref> [Zongker and Punch, 1995] </ref>. To compensate for the very long evaluation time necessary in this domain (several seconds to several minutes), we perform twenty to eighty evaluations in parallel on a DEC Alpha workstation cluster.
References-found: 10

