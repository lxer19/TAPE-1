URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/aw/www/ps/variational.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/aw/www/gallery.html
Root-URL: 
Email: fwelch|witking@cs.cmu.edu  
Title: Variational Surface Modeling  
Author: William Welch and Andrew Witkin 
Keyword: surface design, constrained optimization, interaction techniques  
Address: Pittsburgh, PA 15213  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: We present a new approach to interactive modeling of freeform surfaces. Instead of a fixed mesh of control points, the model presented to the user is that of an infinitely malleable surface, with no fixed controls. The user is free to apply control points and curves which are then available as handles for direct manipulation. The complexity of the surface's shape may be increased by adding more control points and curves, without apparent limit. Within the constraints imposed by the controls, the shape of the surface is fully determined by one or more simple criteria, such as smoothness. Our method for solving the resulting constrained variational optimization problems rests on a surface representation scheme allowing nonuniform subdivision of B-spline surfaces. Automatic subdivision is used to ensure that constraints are met, and to enforce error bounds. Efficient numerical solutions are obtained by exploiting linearities in the problem formulation and the representation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Babuska and W. C. Rheinboldt. </author> <title> Error estimates for adaptive finite element computations. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 15(4), </volume> <year> 1978. </year>
Reference-contexts: How to estimate this kind of error a priori is an open research problem [27, 16]. More widely used are a posteriori methods in which an estimate is obtained by comparing higher-order solutions to lower-order ones. <ref> [1, 17, 7] </ref> In contrast, constraint error can generally be measured directly, by calculating point-to-point or curve-to-curve distances.
Reference: [2] <author> Richard H. Bartels and John C. Beatty. </author> <title> A technique for the direct manipulation of spline curves. </title> <booktitle> In Proceedings, Graphics Interface, </booktitle> <year> 1989. </year>
Reference-contexts: This yields Q (w) = w i;j=1 @ + 1 leading to Q (w) = (p ^p) H (p ^p) (6) where ^p is the control vector corresponding to the prototype shape. We must then minimize (6) subject to constraints. The curve manipulation techniques of <ref> [2, 11] </ref> can also be cast as a shape-attracting quadratic optimization. They minimize absolute control-point displacement subject to point constraints. That is, their deformation metric is simply (p ^p) T (p ^p), where ^p is the control vector for the current shape.
Reference: [3] <author> Richard. H. Bartels and Gene Golub. </author> <title> The simplex method of linear programming using lu decomposition. </title> <journal> CACM, </journal> <volume> 12(5), </volume> <month> May </month> <year> 1969. </year>
Reference-contexts: This is offset, however, by the need to perform additional solver steps in refining the residual. A more important advantage to the formulation is that dependent constraint rows need not be eliminated prior to building and factoring the augmented matrix. This makes it straightforward to use factorization update techniques <ref> [3, 4] </ref> to incrementally update the factorization of the system matrix as surface constraints are added or deleted. 4.4 Automatic Refinement We are using a piecewise polynomial surface with a finite number of control parameters to approximate an infinite-dimensional variational surface.
Reference: [4] <author> A ke Bj orck. </author> <title> A general updating algorithm for con strained linear least squares problems. </title> <journal> SIAM J. Sci. and Stat. Comp., </journal> <volume> 5(2), </volume> <year> 1984. </year>
Reference-contexts: This is offset, however, by the need to perform additional solver steps in refining the residual. A more important advantage to the formulation is that dependent constraint rows need not be eliminated prior to building and factoring the augmented matrix. This makes it straightforward to use factorization update techniques <ref> [3, 4] </ref> to incrementally update the factorization of the system matrix as surface constraints are added or deleted. 4.4 Automatic Refinement We are using a piecewise polynomial surface with a finite number of control parameters to approximate an infinite-dimensional variational surface.
Reference: [5] <author> George Celniker and Dave Gossard. </author> <title> Deformable curve and surface finite-elements for free-form shape design. </title> <journal> Computer Graphics, </journal> <volume> 25(4), </volume> <month> July </month> <year> 1991. </year> <note> Proceedings SIGGRAPH '91. </note>
Reference-contexts: Moreton [19] minimizes variation of curvature to generate surfaces which skin networks of curves while seeking circular or straight-line cross-sections. Such schemes can give rise to very fair surfaces, but the nonlinearity of their fairness metrics prevents them from being used for interactive surface design. Celniker <ref> [5] </ref> proposed a physically-based model for interactive free-form surface design, in which the surface is modeled using a C 1 mesh of triangular patches, and positions and normals may be controlled along patch boundaries. <p> The ff and fi terms determine resistance to stretching and resistance to bending, respectively. The vector and matrix norms in this function make it highly nonlinear, leading to a difficult nonlinear optimization problem. It is therefore common <ref> [23, 5, 24] </ref> to simplify this objective function by linearizing the matrix norms and B (this is the thin plate under tension model [21, 25]): Q (w) = w i;j=1 where D i w represents the partial derivative of the surface w with respect to the ith parameter.
Reference: [6] <author> George Celniker and William Welch. </author> <title> Linear con straints for nonuniform b-spline surfaces. </title> <booktitle> In Proceedings, Symposium on Interactive 3D Graphics, </booktitle> <year> 1992. </year> <title> formed by constraining curves on each surface to contain a common space curve. Surfaces are then trimmed to the intersection. Right: As the user reshapes the space curve, both adjoining faces follow, maintaining the intersection. surface, following automatic refinement driven by constraint error. Error was measured per surface span. Spans exceeding the specified error tolerance were recursively refined. </title>
Reference-contexts: As the point is moved interactively, the change to the control points is minimized subject to the interpolation constraint. Parametric derivatives are also presented to the user for direct manipulation, to control surface orientation and curvature at a point. Moving beyond point constraints, Celniker and Welch <ref> [6] </ref> presented a technique for freezing the shape of the surface along an embedded curve, although the issues involved in having the surface track a moving control-curve were not addressed. 2.2 Nonuniform surface refinement One of our key requirements is the ability to represent smooth surfaces with no a priori limit <p> We will instead constrain the discretized surface to optimally approximate the constraint in a least-squares sense. Analogous to the objective functions of the previous section, we formulate a transfinite constraint as a quadratic function which achieves a global minimum when the constraint is satisfied <ref> [6] </ref>.
Reference: [7] <author> J. P. De. S. R. Gago, D. W. Kelly, and O. C. Zienkiewicz. </author> <title> A posteriori error analysis and adaptive processes in the finite element method: Part ii adaptive mesh refinement. </title> <journal> Int. J. Numer. Methods Eng., </journal> <volume> 19 </volume> <pages> 1621-1656, </pages> <year> 1983. </year>
Reference-contexts: How to estimate this kind of error a priori is an open research problem [27, 16]. More widely used are a posteriori methods in which an estimate is obtained by comparing higher-order solutions to lower-order ones. <ref> [1, 17, 7] </ref> In contrast, constraint error can generally be measured directly, by calculating point-to-point or curve-to-curve distances.
Reference: [8] <author> Gerald Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Academic Press, Inc., </publisher> <year> 1990. </year>
Reference-contexts: Although a number of nonuniform refinement schemes have been developed, no existing one meets all of our needs. Most of these fail to provide C 2 continuity we require. In computer graphics, Bezier patches <ref> [8] </ref> have been most widely used for nonuniform refinement. In general, however, higher-order continuity between Bezier patches is not preserved if they are manipulated after subdivision, though [20] formulates adaptive Bezier patch refinement with G 1 continuity. <p> Further, we require that points on such a surface be linear functions of its shape control parameters, yielding a more tractable control problem. Tensor-product B-splines <ref> [8] </ref> conveniently represent C n piecewise polynomial surfaces as control-point weighted sums of nonlinear shape functions, and they form the basis of our representation scheme. Unfortunately, the standard tensor-product construction does not allow detail to be nonuniformly added to the surface through local refinement.
Reference: [9] <author> Philip Fong and Hans-Peter Seidel. </author> <title> Control points for multivariate b-spline surfaces over arbitrary triangulations. </title> <journal> Computer Graphics Forum, </journal> <volume> 10 </volume> <pages> 309-317, </pages> <year> 1991. </year>
Reference-contexts: Triangular patches, which support topologically irregular meshes, are widely used in finite element analysis, but have been restricted to first-order continuity. Recent developments <ref> [9] </ref> point to triangular B-spline patches as a way of constructing a surface with higher-order continuity across a triangular mesh, although a computationally efficient refinement scheme for such a representation has not yet been presented.
Reference: [10] <author> D.R. Forsey and R.H. Bartels. </author> <title> Hierarchical b-spline refinement. </title> <journal> Computer Graphics, </journal> <volume> 22(4), </volume> <month> August </month> <year> 1988. </year> <note> Proceedings SIGGRAPH '88. </note>
Reference-contexts: Recent developments [9] point to triangular B-spline patches as a way of constructing a surface with higher-order continuity across a triangular mesh, although a computationally efficient refinement scheme for such a representation has not yet been presented. Forsey <ref> [10] </ref> presents a refinement scheme that uses a hierarchy of rectangular B-spline overlays to produce C 2 surfaces. Overlays can be added manually to add detail to the surface, and large- or small-scale changes to the surface shape can be made by manipulating control points at different levels. <p> We instead represent such a locally refined region as a sum of the original surface and smaller, more finely parameterized surfaces. Surface patches at various levels are evaluated and summed to compute the nonuniform surface's value. This is related to Forsey's overlay scheme for B-spline surface refinement <ref> [10] </ref>, but the formulation is much simpler because there is no notion of hierarchic offsets for overlays. The nonuniform surface is a simple sum of sparse, uniform surface layers, which may overlap in arbitrary ways. <p> Thus, only the regions where refinement has actually taken place within a level are explicitly represented and evaluated. It remains to ensure that the resulting sum of surfaces has the proper degree of parametric continuity. Although the summed surface is not formulated as a hierarchic offset surface as in <ref> [10] </ref>, Forsey's technique for enforcing continuity over a composite offset surface is still applicable. For any patch belonging to a particular level of refinement, we constrain an r-wide band of control-points associated with the patch's boundary to be 0.
Reference: [11] <author> Barry Fowler. </author> <title> Geometric manipulation of tensor product surfaces. </title> <booktitle> In Proceedings, Symposium on Interactive 3D Graphics, </booktitle> <year> 1992. </year> <note> (to appear). </note>
Reference-contexts: Finally, we describe a preliminary implementation and present results. 2 Background 2.1 Direct control of curve and surface points The limitations of control meshes as interactive handles have been noted before. To address them, Fowler and Bartels <ref> [11, 12] </ref> present techniques that allow the user to directly manipulate arbitrary points on linear blend curves and surfaces: the curve/surface is constrained to interpolate the grabbed point. As the point is moved interactively, the change to the control points is minimized subject to the interpolation constraint. <p> This yields Q (w) = w i;j=1 @ + 1 leading to Q (w) = (p ^p) H (p ^p) (6) where ^p is the control vector corresponding to the prototype shape. We must then minimize (6) subject to constraints. The curve manipulation techniques of <ref> [2, 11] </ref> can also be cast as a shape-attracting quadratic optimization. They minimize absolute control-point displacement subject to point constraints. That is, their deformation metric is simply (p ^p) T (p ^p), where ^p is the control vector for the current shape. <p> Constraints to control various parametric derivatives of the surface, such as tangent vectors at a point, are similarly formulated <ref> [11] </ref>. 4.2.2 Transfinite Constraints A constraint which involves a one- or two-dimensional surface entity, such as an embedded curve or surface patch, must be formulated as an integral over the entity.
Reference: [12] <author> Barry Fowler and Richard Bartels. </author> <title> Constraint-based curve manipulation. </title> <booktitle> In ACM Siggraph Course Notes, Topics in the Construction, Manipulation, and Assessment of Spline Surfaces, </booktitle> <year> 1991. </year>
Reference-contexts: Finally, we describe a preliminary implementation and present results. 2 Background 2.1 Direct control of curve and surface points The limitations of control meshes as interactive handles have been noted before. To address them, Fowler and Bartels <ref> [11, 12] </ref> present techniques that allow the user to directly manipulate arbitrary points on linear blend curves and surfaces: the curve/surface is constrained to interpolate the grabbed point. As the point is moved interactively, the change to the control points is minimized subject to the interpolation constraint.
Reference: [13] <author> Gene Golub and Charles Van Loan. </author> <title> Matrix Compu tations. </title> <publisher> Johns Hopkins University Press, </publisher> <year> 1989. </year>
Reference-contexts: In computing a least-squares solution to (10), we can avoid the numerical conditioning problems associated with forming the constraint normal matrix A T A by instead performing a QR factorization <ref> [13] </ref> of the matrix in (10). Since must be chosen small enough to leave a well-conditioned problem, the solution to the penalty system can leave an unacceptably large constraint residual. This can be reduced by performing additional minimization steps on the residual using the same factored matrix [26].
Reference: [14] <author> W.E.L. </author> <title> Grimson. An implementation of a compu tational theory of surface orientation. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 22(1) </volume> <pages> 39-69, </pages> <year> 1983. </year>
Reference-contexts: Surface models based on variational principals have been widely used in computer vision to solve surface reconstruction problems, in which a surface is fit to stereo measurements, noisy position data, surface orientations, shading information etc. <ref> [14, 15, 24] </ref>. Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces [23]. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces [18].
Reference: [15] <author> B.K.P. Horn and M.J. Brooks. </author> <title> The variational ap proach to shape from shading. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 33 </volume> <pages> 174-208, </pages> <year> 1986. </year>
Reference-contexts: Surface models based on variational principals have been widely used in computer vision to solve surface reconstruction problems, in which a surface is fit to stereo measurements, noisy position data, surface orientations, shading information etc. <ref> [14, 15, 24] </ref>. Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces [23]. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces [18].
Reference: [16] <author> D. W. Kelly. </author> <title> The self-equilibration of residuals and upper bound eror estimates in the finite element method. </title> <editor> In I. Babuska, editor, </editor> <title> Accuracy Estimates and Adaptive Refinements in Finite Element Computations, </title> <address> pages 129-146. </address> <publisher> Wiley, </publisher> <year> 1986. </year>
Reference-contexts: How to estimate this kind of error a priori is an open research problem <ref> [27, 16] </ref>. More widely used are a posteriori methods in which an estimate is obtained by comparing higher-order solutions to lower-order ones. [1, 17, 7] In contrast, constraint error can generally be measured directly, by calculating point-to-point or curve-to-curve distances.
Reference: [17] <author> D. W. Kelly, J. P. De. S. R. Gago, and O. C. Zienkiewicz. </author> <title> A posteriori error analysis and adaptive processes in the finite element method: Part i error analysis. </title> <journal> Int. J. Numer. Methods Eng., </journal> <volume> 19 </volume> <pages> 1593-1619, </pages> <year> 1983. </year>
Reference-contexts: How to estimate this kind of error a priori is an open research problem [27, 16]. More widely used are a posteriori methods in which an estimate is obtained by comparing higher-order solutions to lower-order ones. <ref> [1, 17, 7] </ref> In contrast, constraint error can generally be measured directly, by calculating point-to-point or curve-to-curve distances.
Reference: [18] <author> N. J. Lott and D. I. Pullin. </author> <title> Method for fairing b-spline surfaces. </title> <booktitle> Computer-Aided Design, </booktitle> <month> 20(10), </month> <year> 1988. </year>
Reference-contexts: Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces [23]. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces <ref> [18] </ref>. Moreton [19] minimizes variation of curvature to generate surfaces which skin networks of curves while seeking circular or straight-line cross-sections. Such schemes can give rise to very fair surfaces, but the nonlinearity of their fairness metrics prevents them from being used for interactive surface design. <p> When constraint handles are attached to such a surface and manipulated, the surface should gracefully deform from this shape. One way of formulating such a shape attractor is to modify (4) to measure the change in stretch and bending from that of a rest shape ^w <ref> [23, 18] </ref>. This yields Q (w) = w i;j=1 @ + 1 leading to Q (w) = (p ^p) H (p ^p) (6) where ^p is the control vector corresponding to the prototype shape. We must then minimize (6) subject to constraints.
Reference: [19] <author> Henry Moreton and Carlo S equin. </author> <title> Functional mini mization for fair surface design. </title> <booktitle> In these proceedings. </booktitle>
Reference-contexts: Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces [23]. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces [18]. Moreton <ref> [19] </ref> minimizes variation of curvature to generate surfaces which skin networks of curves while seeking circular or straight-line cross-sections. Such schemes can give rise to very fair surfaces, but the nonlinearity of their fairness metrics prevents them from being used for interactive surface design.
Reference: [20] <author> Francis J. M. Schmitt, Brian A. Barsky, and Wen-Hui Du. </author> <title> An adaptive subdivision method for surface-fitting from sampled data. </title> <journal> Computer Graphics, </journal> <volume> 20(4), </volume> <year> 1986. </year> <note> Proceedings SIGGRAPH '86. </note>
Reference-contexts: Most of these fail to provide C 2 continuity we require. In computer graphics, Bezier patches [8] have been most widely used for nonuniform refinement. In general, however, higher-order continuity between Bezier patches is not preserved if they are manipulated after subdivision, though <ref> [20] </ref> formulates adaptive Bezier patch refinement with G 1 continuity. Triangular patches, which support topologically irregular meshes, are widely used in finite element analysis, but have been restricted to first-order continuity.
Reference: [21] <author> D.G. Schweikert. </author> <title> An interpolation curve using a spline in tension. </title> <journal> Journal of Math and Phys., </journal> <volume> 45 </volume> <pages> 312-317, </pages> <year> 1966. </year>
Reference-contexts: The vector and matrix norms in this function make it highly nonlinear, leading to a difficult nonlinear optimization problem. It is therefore common [23, 5, 24] to simplify this objective function by linearizing the matrix norms and B (this is the thin plate under tension model <ref> [21, 25] </ref>): Q (w) = w i;j=1 where D i w represents the partial derivative of the surface w with respect to the ith parameter.
Reference: [22] <author> Gilbert Strang. </author> <title> Introduction to Applied Mathematics. </title> <publisher> Wellesley-Cambridge Press, </publisher> <year> 1986. </year>
Reference-contexts: The proof that natural splines minimize the integral of second derivative squared subject to the interpolation constraints frequently appears as a demonstration problem in the calculus of variations <ref> [22] </ref>. Surface models based on variational principals have been widely used in computer vision to solve surface reconstruction problems, in which a surface is fit to stereo measurements, noisy position data, surface orientations, shading information etc. [14, 15, 24]. <p> More formally, we seek shapes which extremize the integral of a surface metric subject to geometric constraints. Such shapes are not intrinsically linked to any particular surface representation scheme, but exist instead as the solutions to constrained variational optimization problems <ref> [22] </ref>. Our modeler must construct acceptable approximations to such infinite-dimensional variational surfaces using a finite number of control parameters. The approach taken is to approximate the ideal surface as a piecewise polyno mial surface using the nonuniform B-spline representation of the previous section. <p> This is the Rayleigh-Ritz method of approximating a continuum solution with a finite set of continuous linear functions <ref> [22] </ref>. Clearly a minimal solution to equation (5) is 0 we must add constraints to keep the surface from collapsing to a point if things are to be at all interesting. <p> We may make either of two transformations of the problem to an unconstrained optimization. For the first, we reformulate equation (8) by adding a single degree of freedom y i (a Lagrange multiplier <ref> [22] </ref>) for each constraint row A i and we then minimize the unconstrained min fl fl 1 p T Hp p T f + (Ap b) T y fl fl : Differentiating with respect to p then y leads to the augmented system fi fi H A T fi fi fi
Reference: [23] <author> Demetri Terzopoulis, John Platt, Alan Barr, and Kurt Fleischer. </author> <title> Elastically deformable models. </title> <journal> Computer Graphics, </journal> <volume> 21(4), </volume> <month> July </month> <year> 1987. </year> <note> Proceedings of SIG-GRAPH '87. </note>
Reference-contexts: Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces <ref> [23] </ref>. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces [18]. Moreton [19] minimizes variation of curvature to generate surfaces which skin networks of curves while seeking circular or straight-line cross-sections. <p> One such function measures how much the surface is stretched and bent by looking at the differential area and curvature at each point <ref> [23] </ref>: Q (w) = w ff + kBk 2 where G and B represent the first and second fundamental surface forms, and ff and fi weight the matrix norms. The ff and fi terms determine resistance to stretching and resistance to bending, respectively. <p> The ff and fi terms determine resistance to stretching and resistance to bending, respectively. The vector and matrix norms in this function make it highly nonlinear, leading to a difficult nonlinear optimization problem. It is therefore common <ref> [23, 5, 24] </ref> to simplify this objective function by linearizing the matrix norms and B (this is the thin plate under tension model [21, 25]): Q (w) = w i;j=1 where D i w represents the partial derivative of the surface w with respect to the ith parameter. <p> When constraint handles are attached to such a surface and manipulated, the surface should gracefully deform from this shape. One way of formulating such a shape attractor is to modify (4) to measure the change in stretch and bending from that of a rest shape ^w <ref> [23, 18] </ref>. This yields Q (w) = w i;j=1 @ + 1 leading to Q (w) = (p ^p) H (p ^p) (6) where ^p is the control vector corresponding to the prototype shape. We must then minimize (6) subject to constraints.
Reference: [24] <author> D. Terzopoulos. </author> <title> Multi-level reconstruction of visual surfaces. </title> <booktitle> MIT Artificial Intelligence Memo Number 671, </booktitle> <month> April </month> <year> 1981. </year>
Reference-contexts: Surface models based on variational principals have been widely used in computer vision to solve surface reconstruction problems, in which a surface is fit to stereo measurements, noisy position data, surface orientations, shading information etc. <ref> [14, 15, 24] </ref>. Similar formulations have been employed in computer graphics for physically based modeling of deformable surfaces [23]. All of these are based on regular finite difference grids of fixed resolution. Constrained optimization based on second-derivative norms has been used in fairing B-spline surfaces [18]. <p> The ff and fi terms determine resistance to stretching and resistance to bending, respectively. The vector and matrix norms in this function make it highly nonlinear, leading to a difficult nonlinear optimization problem. It is therefore common <ref> [23, 5, 24] </ref> to simplify this objective function by linearizing the matrix norms and B (this is the thin plate under tension model [21, 25]): Q (w) = w i;j=1 where D i w represents the partial derivative of the surface w with respect to the ith parameter.
Reference: [25] <author> D. Terzopoulos. </author> <title> Regularization of inverse visual problems involving discontinuities. </title> <journal> IEEE Trans. Pattern Analysis and Machine Intelligence, </journal> <volume> PAMI-8:413-424, </volume> <year> 1986. </year>
Reference-contexts: The vector and matrix norms in this function make it highly nonlinear, leading to a difficult nonlinear optimization problem. It is therefore common [23, 5, 24] to simplify this objective function by linearizing the matrix norms and B (this is the thin plate under tension model <ref> [21, 25] </ref>): Q (w) = w i;j=1 where D i w represents the partial derivative of the surface w with respect to the ith parameter.
Reference: [26] <author> Charles Van Loan. </author> <title> On the method of weighting for equality-constrained least-squares problems. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 22(5), </volume> <year> 1985. </year>
Reference-contexts: Since must be chosen small enough to leave a well-conditioned problem, the solution to the penalty system can leave an unacceptably large constraint residual. This can be reduced by performing additional minimization steps on the residual using the same factored matrix <ref> [26] </ref>. An advantage to formulating the constrained minimization in this way is that no new variables are added to the system. This is offset, however, by the need to perform additional solver steps in refining the residual.
Reference: [27] <author> O.C. Zienkiewicz and K. Morgan. </author> <title> Finite Elements and Approximation. </title> <publisher> John Wiley and Sons, </publisher> <year> 1983. </year>
Reference-contexts: Such constraint leverage can be reduced by adaptively refining the surface representation. Another technique, reduced quadrature <ref> [27] </ref>, involves numerically evaluating the constraint integral by sampling as if the surface representation was of a lower order. <p> How to estimate this kind of error a priori is an open research problem <ref> [27, 16] </ref>. More widely used are a posteriori methods in which an estimate is obtained by comparing higher-order solutions to lower-order ones. [1, 17, 7] In contrast, constraint error can generally be measured directly, by calculating point-to-point or curve-to-curve distances.
References-found: 27

