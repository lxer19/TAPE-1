URL: http://www.cse.ucsc.edu/research/ccrg/publications/brian.aim98.ps.gz
Refering-URL: http://www.cse.ucsc.edu/~brian/pubs/index.html
Root-URL: http://www.cse.ucsc.edu
Email: brian@cse.ucsc.edu, jj@cse.ucsc.edu  
Title: Internet Multicasting Based on Group-Relative Addressing  
Author: Brian Neil Levine J.J. Garcia-Luna-Aceves 
Address: Santa Cruz, CA 95064, USA  
Affiliation: Computer Engineering Department School of Engineering University of California,  
Abstract: We introduce the Addressable Internet Multicast (AIM) architecture, which extends the IP-multicast architecture with group-relative addressing information along multicast routing trees. AIM permits more efficient and sophisticated multicast routing options and encourages communication and cooperation between IP and higher-layer protocols. AIM enables sources to restrict the delivery of packets to a subset of the receivers in a multicast group on a per-packet basis. AIM also permits receivers to listen to subsets of sources on a subscription basis, and quick formation of new multicast groups defined within the original routing tree. AIM also provides a versatile, scalable anycast service. This new approach encourages cooperation between layers, but maintains independence of operation, and works with any proposed multicast routing protocol. We also present the application of AIM to application-level and transport-level services, such as reliable multicast. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Deering, </author> <title> "Multicast routing in internetworks and extended lans," </title> <booktitle> in Proc. ACM SIGCOMM`88, </booktitle> <month> August </month> <year> 1988, </year> <pages> pp. 55-64. </pages>
Reference-contexts: 1 Introduction The design of multicast protocols for many-to-many communication over an internet-work was first explored by Deering <ref> [1] </ref> a decade ago. Deering's seminal work has become the foundation of the IP-multicast design and architecture [2]. The strength of the IP-multicast architecture is the anonymity of the sources and receivers involved in the session.
Reference: [2] <author> S. Deering, </author> <title> "Host extensions for IP multicasting," Request For Comments 1112, </title> <month> August </month> <year> 1989. </year>
Reference-contexts: 1 Introduction The design of multicast protocols for many-to-many communication over an internet-work was first explored by Deering [1] a decade ago. Deering's seminal work has become the foundation of the IP-multicast design and architecture <ref> [2] </ref>. The strength of the IP-multicast architecture is the anonymity of the sources and receivers involved in the session.
Reference: [3] <author> J.F. Shoch, </author> <title> "Inter-networking naming, addressing & routing," </title> <booktitle> in Proceedings of IEEE COMPCON, </booktitle> <month> fall </month> <year> 1978, </year> <pages> pp. 72-79. </pages>
Reference-contexts: This anonymity greatly reduces the complexity of the mechanisms needed to provide the multipoint distribution. On the other hand, the weakness of the IP-multicast architecture is the absence of addressing <ref> [3, 4] </ref> information within the context of multicast groups, which severely limits packet-delivery semantics; a source in a multicast group can send packets only to the entire group. There is no notion of where hosts are within the group, and accordingly, routes to hosts within the group cannot be determined. <p> There is no notion of where hosts are within the group, and accordingly, routes to hosts within the group cannot be determined. For routing purposes, IP-multicast assigns a class-D IP address for each multicast group. Such addresses are really names <ref> [3, 4] </ref> because they are independent of the relative location of the group members in the multicast routing trees that connects them. This approach has a number of drawbacks.
Reference: [4] <author> J.H. Saltzer, </author> <title> "Naming and binding of objects," in Operating Systems AnAdvanced Course, </title> <editor> R. Bayer, Ed. </editor> <publisher> Springer-Verlag, </publisher> <year> 1978. </year>
Reference-contexts: This anonymity greatly reduces the complexity of the mechanisms needed to provide the multipoint distribution. On the other hand, the weakness of the IP-multicast architecture is the absence of addressing <ref> [3, 4] </ref> information within the context of multicast groups, which severely limits packet-delivery semantics; a source in a multicast group can send packets only to the entire group. There is no notion of where hosts are within the group, and accordingly, routes to hosts within the group cannot be determined. <p> There is no notion of where hosts are within the group, and accordingly, routes to hosts within the group cannot be determined. For routing purposes, IP-multicast assigns a class-D IP address for each multicast group. Such addresses are really names <ref> [3, 4] </ref> because they are independent of the relative location of the group members in the multicast routing trees that connects them. This approach has a number of drawbacks.
Reference: [5] <author> S. Kasera, J. Kurose, and D. Towsley, </author> <title> "Scalable reliable multicast using multiple multicast groups," </title> <booktitle> in ACM Sigmetrics, </booktitle> <month> June </month> <year> 1997. </year>
Reference-contexts: This approach is efficient only when a series of packets justifies the overhead <ref> [5, 6] </ref>. <p> As we have shown, AIM is scales well for per-source and shared multicast trees. In fact, the mechanisms of LMS could easily be adapted to use the positional labels of AIM to work over shared multicast trees. Another previous approach to providing reliability is proposed by Kasera et al <ref> [5] </ref>, which allocates separate multicast groups for each retransmission. All receivers must pro-actively request a missing packet by joining and leaving each group. As an alternative to avoiding the network traffic involved in joining and leaving, a system of local filtering is proposed.
Reference: [6] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven layered multicast," </title> <booktitle> in Proc. ACM SIGCOMM'96, </booktitle> <month> August </month> <year> 1996, </year> <pages> pp. 117-130. </pages>
Reference-contexts: This approach is efficient only when a series of packets justifies the overhead <ref> [5, 6] </ref>.
Reference: [7] <author> S. Floyd et al., </author> <title> "A reliable multicast framework for light-weight sessions and application level framing," </title> <booktitle> in Proc. ACM SIGCOMM'95., </booktitle> <month> August </month> <year> 1995, </year> <pages> pp. 342-356. </pages>
Reference-contexts: multicast transmission on a per-packet basis, many protocols utilize the time-to-live (TTL) field present in all IP packets fl This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) under Grant F19628-96-C-0038. 1 to limit delivery to a locus of routers a limited hop count away <ref> [7, 8, 9, 10] </ref>. This approach is often too crude for most applications. <p> Then n:= n 1 7. Pos-Route (i; L) 8. Else route to (I (i; D min )) ing to the nth ancestor. that do not wish to enforce direct deletion semantics can ignore this part of the RMA definition (e.g., a non-deleting service is provided by SRM <ref> [7] </ref> and STORM [27]). We define the children of a covey G to be the set of coveys that contacts G using a positional anycast service. Accordingly, G is the parent of every covey in the set of children. <p> Figure 3.5 shows the RMA-Route () algorithm for routing packets from one child to all its siblings and its parent. The algorithm calls for the label of the source of the multicast and the label of the parent. Therefore, NAK-avoidance <ref> [7] </ref> or a Ring-based [28] approach between a parent and its children would be feasible, scalable and transparent to the hosts; the construction of a separate multicast group is unnecessary. A sophisticated framework is available for the retransmission strategy as well. <p> Subcasting greatly reduces the latency of receiving retransmissions. Multicasting retransmissions must be done carefully, as it may cause a lot of unnecessary traffic. RMA is different than previous protocols calling for multicast retransmissions to a large set of receivers (e.g., <ref> [9, 7] </ref>) because the ack tree built by RMA is always acceptable (this trivially follows from the definition of positional anycasting), i.e., all hosts downstream on the implicit ack tree are necessarily downstream on the multicast routing tree, which means that packet loss correlation is maintained between a parent and all
Reference: [8] <author> B. Levine, D. Lavo, and J.J. Garcia-Luna-Aceves, </author> <title> "The case for reliable concurrent multicasting using shared ack trees," </title> <booktitle> in Proc. Fourth ACM Multimedia Conference (Multimedia'96), </booktitle> <month> Nov. </month> <year> 1996, </year> <pages> pp. 365-376. </pages>
Reference-contexts: multicast transmission on a per-packet basis, many protocols utilize the time-to-live (TTL) field present in all IP packets fl This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) under Grant F19628-96-C-0038. 1 to limit delivery to a locus of routers a limited hop count away <ref> [7, 8, 9, 10] </ref>. This approach is often too crude for most applications. <p> Weak deletion can fail under topology changes (see <ref> [8] </ref>), but has smaller memory requirements. In both schemes, deletion is not allowed at any covey until all children of that covey have stated that they have correctly received the packet with a positive-ack message.
Reference: [9] <author> S. Paul et al., </author> <title> "Reliable multicast transport protocol (RMTP)," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 15, no. 3, </volume> <pages> pp. 407-421, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: multicast transmission on a per-packet basis, many protocols utilize the time-to-live (TTL) field present in all IP packets fl This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) under Grant F19628-96-C-0038. 1 to limit delivery to a locus of routers a limited hop count away <ref> [7, 8, 9, 10] </ref>. This approach is often too crude for most applications. <p> Positional anycasting forms a logical tree of paths between hosts on the multicast tree; many transport protocols and applications require the use of such a tree of hosts, for example, reliable multicast protocols <ref> [9, 10, 21] </ref> (see Section 3.3), web caching schemes [22], multicast congestion control protocols [23], and USENET news distribution. <p> A sophisticated framework is available for the retransmission strategy as well. Instead of sending retransmissions only to requesting coveys one-by-one, retransmissions may be sent to all children via the Rev-Pos-Anycast-Route () algorithm from the parent. Another option is to send retransmissions to the entire subtree <ref> [9] </ref> each covey heads as a subcast. By a simple modification of the Rev-Pos-Anycast-Route () algorithm: the packet travels toward the destination while the incoming interface has the minimum distance label, and the packet is sent as a normal multicast on all other outgoing interfaces. <p> Subcasting greatly reduces the latency of receiving retransmissions. Multicasting retransmissions must be done carefully, as it may cause a lot of unnecessary traffic. RMA is different than previous protocols calling for multicast retransmissions to a large set of receivers (e.g., <ref> [9, 7] </ref>) because the ack tree built by RMA is always acceptable (this trivially follows from the definition of positional anycasting), i.e., all hosts downstream on the implicit ack tree are necessarily downstream on the multicast routing tree, which means that packet loss correlation is maintained between a parent and all <p> Registration messages are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols <ref> [29, 9, 32] </ref>, congestion control protocols [23], multicast caching schemes [22], and distributed games [33]) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
Reference: [10] <author> R. Yavatkar, J. Griffioen, and M. Sudan, </author> <title> "A reliable dissemination protocol for interactive collaborative applications," </title> <booktitle> in Proc. ACM Multimedia, </booktitle> <month> November </month> <year> 1995, </year> <pages> pp. 333-44. </pages>
Reference-contexts: multicast transmission on a per-packet basis, many protocols utilize the time-to-live (TTL) field present in all IP packets fl This work was supported in part by the Defense Advanced Research Projects Agency (DARPA) under Grant F19628-96-C-0038. 1 to limit delivery to a locus of routers a limited hop count away <ref> [7, 8, 9, 10] </ref>. This approach is often too crude for most applications. <p> Positional anycasting forms a logical tree of paths between hosts on the multicast tree; many transport protocols and applications require the use of such a tree of hosts, for example, reliable multicast protocols <ref> [9, 10, 21] </ref> (see Section 3.3), web caching schemes [22], multicast congestion control protocols [23], and USENET news distribution.
Reference: [11] <author> A. Ballardie, P. Francis, and J. Crowcroft, </author> <title> "Core based trees (CBT): An architecture for scalable inter-domain multicast routing," </title> <booktitle> in Proc. ACM SIGCOMM'93, </booktitle> <month> October </month> <year> 1993, </year> <pages> pp. 85-95. </pages>
Reference-contexts: Following the IP-multicast architecture, we assume that none of the multicast-group members need to know the constituency of the group, and routers are organized into multicast routing trees maintained using any multicast routing protocol <ref> [11, 12, 13, 14, 15] </ref>. Section 2 introduces the Addressable Internet Multicast (AIM) architecture, which generalizes the IP-multicast architecture by introducing addressing information into mul-ticast routing trees. <p> AIM requires either a source-based or shared multicast routing tree (multicast tree for short), which can be constructed and maintained by any multicast routing protocol (e.g., CBT <ref> [11] </ref>, OCBT [13], PIM [12], MIP [14]). AIM extends IP-multicast with three types of labels assigned to the routers of a multicast tree: positional labels, distance labels, and stream labels. A router's positional label specifies its location relative to a fixed point in the multicast tree. <p> Figure 2.3: Positional labeling. 2.1 Positional Labels AIM defines an addressing root for each multicast tree, which is used as a reference point for addressing and routing along the tree. The source is a natural choice for the addressing root of per-source routing trees; similarly, a "core" <ref> [11, 13] </ref>, "rendezvous-point" [12], or "center point" [15] would typically be defined as the addressing root of a shared routing tree. The positional label assigned to a router specifies the router's position in a multicast tree relative to the addressing root.
Reference: [12] <author> S. Deering et al., </author> <title> "An architecture for wide-area multicast routing," </title> <booktitle> in Proc. ACM SIGCOMM'94, </booktitle> <year> 1994, </year> <pages> pp. 126-135. </pages>
Reference-contexts: Following the IP-multicast architecture, we assume that none of the multicast-group members need to know the constituency of the group, and routers are organized into multicast routing trees maintained using any multicast routing protocol <ref> [11, 12, 13, 14, 15] </ref>. Section 2 introduces the Addressable Internet Multicast (AIM) architecture, which generalizes the IP-multicast architecture by introducing addressing information into mul-ticast routing trees. <p> AIM requires either a source-based or shared multicast routing tree (multicast tree for short), which can be constructed and maintained by any multicast routing protocol (e.g., CBT [11], OCBT [13], PIM <ref> [12] </ref>, MIP [14]). AIM extends IP-multicast with three types of labels assigned to the routers of a multicast tree: positional labels, distance labels, and stream labels. A router's positional label specifies its location relative to a fixed point in the multicast tree. <p> The source is a natural choice for the addressing root of per-source routing trees; similarly, a "core" [11, 13], "rendezvous-point" <ref> [12] </ref>, or "center point" [15] would typically be defined as the addressing root of a shared routing tree. The positional label assigned to a router specifies the router's position in a multicast tree relative to the addressing root. <p> This section explains how to include the functionality of AIM in OCBT. This requires extending its join process to assign positional and distance labels, parsing masks in order to deliver packets correctly, and finer details of implementing receiver-defined Streams. Similar extensions would apply to PIM Sparse Mode (PIM-SM) <ref> [12] </ref>. OCBT builds a shared tree. Routers wishing to join the tree send a "join-request" to the nearest core. All off-tree routers traversed on the way are forced to join the CBT tree.
Reference: [13] <author> C. Shields and J.J. Garcia-Luna-Aceves, </author> <title> "The ordered core based tree protocol," </title> <booktitle> in Proc. IEEE INFOCOM'97, </booktitle> <month> April </month> <year> 1997, </year> <pages> pp. 884-91. </pages>
Reference-contexts: Following the IP-multicast architecture, we assume that none of the multicast-group members need to know the constituency of the group, and routers are organized into multicast routing trees maintained using any multicast routing protocol <ref> [11, 12, 13, 14, 15] </ref>. Section 2 introduces the Addressable Internet Multicast (AIM) architecture, which generalizes the IP-multicast architecture by introducing addressing information into mul-ticast routing trees. <p> AIM requires either a source-based or shared multicast routing tree (multicast tree for short), which can be constructed and maintained by any multicast routing protocol (e.g., CBT [11], OCBT <ref> [13] </ref>, PIM [12], MIP [14]). AIM extends IP-multicast with three types of labels assigned to the routers of a multicast tree: positional labels, distance labels, and stream labels. A router's positional label specifies its location relative to a fixed point in the multicast tree. <p> Figure 2.3: Positional labeling. 2.1 Positional Labels AIM defines an addressing root for each multicast tree, which is used as a reference point for addressing and routing along the tree. The source is a natural choice for the addressing root of per-source routing trees; similarly, a "core" <ref> [11, 13] </ref>, "rendezvous-point" [12], or "center point" [15] would typically be defined as the addressing root of a shared routing tree. The positional label assigned to a router specifies the router's position in a multicast tree relative to the addressing root. <p> The router's new prefix must be passed down to its children, who in turn must change their own prefixes. The same applies recursively down the tree. Figure 2.3 illustrates a routing tree that has been assigned positional labels. Certain multicast routing protocols <ref> [13, 14, 15] </ref> build hard-state trees, i.e., changes to the tree topology occur only with link and node failures rather than updates to the unicast routing table. For these protocols, AIM re-labeling only occurs during these failure states. denotes concatenation of two labels. <p> Thus, topology changes can result in an interruption of service as the streams adapt to the new routing tree. This process is guaranteed to be loop-free if the underlying multicast routing tree is loop-free (e.g., MIP [14], OCBT <ref> [13] </ref>, HIP [15]). If the routing tree forms transient loops, then the stream messages may form transient loops as well, as with all traffic on the tree. When none of a parent's children subscribe to a stream, the parent may unsubscribe. <p> The Lightweight Multicast Protocol (LMS) [18] provides a similar service for reliable multicast sessions, and although it does not keep per-packet-loss state, it is unable to route requests for lost data to arbitrary sources in a shared multicast tree built by protocols such as OCBT <ref> [13] </ref>. As we have shown, AIM is scales well for per-source and shared multicast trees. In fact, the mechanisms of LMS could easily be adapted to use the positional labels of AIM to work over shared multicast trees.
Reference: [14] <author> M. Parsa and J.J. Garcia-Luna-Aceves, </author> <title> "A protocol for scalable loop-free multicast routing," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 15, no. 3, </volume> <pages> pp. 316-331, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Following the IP-multicast architecture, we assume that none of the multicast-group members need to know the constituency of the group, and routers are organized into multicast routing trees maintained using any multicast routing protocol <ref> [11, 12, 13, 14, 15] </ref>. Section 2 introduces the Addressable Internet Multicast (AIM) architecture, which generalizes the IP-multicast architecture by introducing addressing information into mul-ticast routing trees. <p> AIM requires either a source-based or shared multicast routing tree (multicast tree for short), which can be constructed and maintained by any multicast routing protocol (e.g., CBT [11], OCBT [13], PIM [12], MIP <ref> [14] </ref>). AIM extends IP-multicast with three types of labels assigned to the routers of a multicast tree: positional labels, distance labels, and stream labels. A router's positional label specifies its location relative to a fixed point in the multicast tree. <p> The router's new prefix must be passed down to its children, who in turn must change their own prefixes. The same applies recursively down the tree. Figure 2.3 illustrates a routing tree that has been assigned positional labels. Certain multicast routing protocols <ref> [13, 14, 15] </ref> build hard-state trees, i.e., changes to the tree topology occur only with link and node failures rather than updates to the unicast routing table. For these protocols, AIM re-labeling only occurs during these failure states. denotes concatenation of two labels. <p> Thus, topology changes can result in an interruption of service as the streams adapt to the new routing tree. This process is guaranteed to be loop-free if the underlying multicast routing tree is loop-free (e.g., MIP <ref> [14] </ref>, OCBT [13], HIP [15]). If the routing tree forms transient loops, then the stream messages may form transient loops as well, as with all traffic on the tree. When none of a parent's children subscribe to a stream, the parent may unsubscribe.
Reference: [15] <author> C. Shields and J.J. Garcia-Luna-Aceves, </author> <title> "Hierarchical multicast routing," </title> <booktitle> in Proc. Seventeenth Annual ACM SIGACT-SIGOPS Symposium on principles of distributed computing (PODC 98), </booktitle> <address> Puerto Vallarta, Mexico, </address> <month> June 28-July 2 </month> <year> 1998. </year>
Reference-contexts: Following the IP-multicast architecture, we assume that none of the multicast-group members need to know the constituency of the group, and routers are organized into multicast routing trees maintained using any multicast routing protocol <ref> [11, 12, 13, 14, 15] </ref>. Section 2 introduces the Addressable Internet Multicast (AIM) architecture, which generalizes the IP-multicast architecture by introducing addressing information into mul-ticast routing trees. <p> The source is a natural choice for the addressing root of per-source routing trees; similarly, a "core" [11, 13], "rendezvous-point" [12], or "center point" <ref> [15] </ref> would typically be defined as the addressing root of a shared routing tree. The positional label assigned to a router specifies the router's position in a multicast tree relative to the addressing root. <p> The router's new prefix must be passed down to its children, who in turn must change their own prefixes. The same applies recursively down the tree. Figure 2.3 illustrates a routing tree that has been assigned positional labels. Certain multicast routing protocols <ref> [13, 14, 15] </ref> build hard-state trees, i.e., changes to the tree topology occur only with link and node failures rather than updates to the unicast routing table. For these protocols, AIM re-labeling only occurs during these failure states. denotes concatenation of two labels. <p> Thus, topology changes can result in an interruption of service as the streams adapt to the new routing tree. This process is guaranteed to be loop-free if the underlying multicast routing tree is loop-free (e.g., MIP [14], OCBT [13], HIP <ref> [15] </ref>). If the routing tree forms transient loops, then the stream messages may form transient loops as well, as with all traffic on the tree. When none of a parent's children subscribe to a stream, the parent may unsubscribe.
Reference: [16] <author> K. A. Ross and C. R.B. Wright, </author> <title> Discrete Mathematics, </title> <publisher> Prentice Hall, </publisher> <address> second edition, </address> <year> 1988. </year>
Reference-contexts: AIM utilizes a prefix labeling scheme for implicit routing along the multicast tree, which is a well-known approach for organizing nodes in a tree <ref> [16] </ref>. The addressing root of the tree is labeled "1". All children are assigned a positional label that consists of their parent's label as a prefix, and as a suffix, an integer unique in the set of the parent's children.
Reference: [17] <author> T. Speakman et al., </author> <title> "Pretty good multicast," </title> <type> Tech. Rep., internet draft, </type> <month> January </month> <year> 1998. </year>
Reference-contexts: The new semantics provided by positional routing allows many new routing options for IP Multicast. For example, routing services that rely on knowledge of the reverse path interface towards a known source (e.g., <ref> [17, 18] </ref>) do not work with shared multicast tree protocols (without an explosion of per-source state at each router). Positional routing solves this problem (see Section 5). The alternative | storing the location of every source in a bi-direction shared tree at each router | is not scalable. <p> For example, the PGM <ref> [17] </ref> protocol, which provides a router-assisted reliable multicast service, keeps state in the routers on a per-lost-packet and per-source basis in order to route retransmissions to subsets of receivers, and to route requests for lost data to specific sources in a per-source multicast routing tree.
Reference: [18] <author> C. Papadopoulos, G. Parulkar, and G. Varghese, </author> <title> "An error control scheme for large-scale multicast applications," </title> <booktitle> in Proc. IEEE INFOCOM'98, </booktitle> <year> 1998, </year> <pages> pp. 1118-1196. </pages>
Reference-contexts: The new semantics provided by positional routing allows many new routing options for IP Multicast. For example, routing services that rely on knowledge of the reverse path interface towards a known source (e.g., <ref> [17, 18] </ref>) do not work with shared multicast tree protocols (without an explosion of per-source state at each router). Positional routing solves this problem (see Section 5). The alternative | storing the location of every source in a bi-direction shared tree at each router | is not scalable. <p> Keeping per-source state at the routers negates the advantages of shared multicast trees. The Lightweight Multicast Protocol (LMS) <ref> [18] </ref> provides a similar service for reliable multicast sessions, and although it does not keep per-packet-loss state, it is unable to route requests for lost data to arbitrary sources in a shared multicast tree built by protocols such as OCBT [13].
Reference: [19] <author> B. N. Levine and J.J. Garcia-Luna-Aceves, </author> <title> "Improving internet multicast with routing labels," </title> <booktitle> in Proc. IEEE International Conference on Network Protocols, </booktitle> <month> October </month> <year> 1997, </year> <pages> pp. 241-50. </pages>
Reference-contexts: Distance labels are computed in a distributed fashion along a multicast tree. Figure 2.7 contains the pseudo-code for the distance labeling algorithm. For initialization, a host informs its attached router the desired distance label type (as determined by the application). 1 Previous work on AIM <ref> [19] </ref> referred to this service as "reachcasting", but we have changed the name to emphasize that AIM replaces the traditional anycasting service. 7 packets take from each host. taken with positional anycasts to ward hosts 1 and 2. <p> Acknowledgments We thank Christos Papadopoulos for insightful comments on and corrections to the original paper describing AIM <ref> [19] </ref>.
Reference: [20] <author> R. Hinden and S. Deering, </author> <title> "IP version 6 addressing architecture," Request for Comments 1884, </title> <month> December </month> <year> 1995. </year>
Reference-contexts: Distance labels are specifically designed to provide an anycasting 1 service that is more versatile and scalable than any previous anycasting architecture (e.g., <ref> [20] </ref>). Distance labels are assigned by each router on the tree to each interface that is a part of the multicast tree (called tree interfaces). <p> Further details of application-level stream advertisement, uniqueness, and maintenance are beyond the scope of this paper. 5 Comparison to Other Work 5.1 Anycast Previous designs for a network-layer anycast service <ref> [20] </ref> route packets toward the nearest host belonging to the anycast group according to the unicast routing tables. Once the packet reaches the nearest host, the packet is not forwarded any further.
Reference: [21] <author> M. Hofmann, </author> <title> "A generic concept for large-scale multicast," </title> <booktitle> in International Zurich Seminar on Digital Communication (IZS'96), </booktitle> <publisher> Springer Verlag, </publisher> <month> Febuary </month> <year> 1996, </year> <pages> pp. 95-106. </pages>
Reference-contexts: Positional anycasting forms a logical tree of paths between hosts on the multicast tree; many transport protocols and applications require the use of such a tree of hosts, for example, reliable multicast protocols <ref> [9, 10, 21] </ref> (see Section 3.3), web caching schemes [22], multicast congestion control protocols [23], and USENET news distribution.
Reference: [22] <author> P. Rodriguez, E.W. Biersack, and K.W. Ross, </author> <title> "Improving the latency in the web: Caching or multicast?," </title> <booktitle> 3rd International WWW Caching Workshop, </booktitle> <month> June 15-17 </month> <year> 1998, </year> <institution> University of Manchester, </institution> <address> England. </address>
Reference-contexts: Positional anycasting forms a logical tree of paths between hosts on the multicast tree; many transport protocols and applications require the use of such a tree of hosts, for example, reliable multicast protocols [9, 10, 21] (see Section 3.3), web caching schemes <ref> [22] </ref>, multicast congestion control protocols [23], and USENET news distribution. Positional anycasting is simple: any packets arriving on the interface with the minimum distance label are forwarded according to the positional route to the destination; all other packets are forwarded to the interface with the minimum distance label. <p> Registration messages are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols [29, 9, 32], congestion control protocols [23], multicast caching schemes <ref> [22] </ref>, and distributed games [33]) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
Reference: [23] <author> D. De Lucia and K. Obraczka, </author> <title> "Multicast feedback suppresion," </title> <booktitle> in Proc. IEEE INFOCOM'97. IEEE, </booktitle> <year> 1997, </year> <pages> pp. 463-70. </pages>
Reference-contexts: Positional anycasting forms a logical tree of paths between hosts on the multicast tree; many transport protocols and applications require the use of such a tree of hosts, for example, reliable multicast protocols [9, 10, 21] (see Section 3.3), web caching schemes [22], multicast congestion control protocols <ref> [23] </ref>, and USENET news distribution. Positional anycasting is simple: any packets arriving on the interface with the minimum distance label are forwarded according to the positional route to the destination; all other packets are forwarded to the interface with the minimum distance label. <p> Registration messages are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols [29, 9, 32], congestion control protocols <ref> [23] </ref>, multicast caching schemes [22], and distributed games [33]) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
Reference: [24] <author> C. Partridge, T. Mendez, and W. Milliken, </author> <title> "Host anycasting service," Request For Comments 1546, </title> <month> November </month> <year> 1993. </year>
Reference-contexts: is specified that is unknown to the on-tree router, then the packet is dropped. 3 AIM Applications 3.1 Anycast-based applications Packets transmitted on an anycast address are provided with unreliable delivery to at least one, and preferably only one, of the receivers that are members of the anycast 12 address <ref> [24] </ref>. There are many proposed uses of an anycast service. For example, anycasting can be an efficient method of locating the best one of a set of servers each replicating a particular service, such as a set web servers, Network Time Protocol (NTP) servers, or Domain Name Server (DNS) lookups.
Reference: [25] <author> S. Raman and S. R. McCanne, </author> <title> "Generalized data naming and scalable state announcements for reliable multicast," </title> <type> Tech. Rep. </type> <institution> UCB/CSD-97-951, UC Berekely, </institution> <month> June </month> <year> 1997. </year>
Reference-contexts: involve any number of heuristics such as load, distance in hops, or distance in delay. 3.2 Data Naming Data naming protocols are an application-level approach to organizing data efficiently for end-to-end transport, enhancing the expressibility of an application's requirements to a lower-level network service, such as a reliable transport protocol <ref> [25, 26] </ref>. Data naming helps large-scale applications to organize their data flows efficiently, allowing efficient dissemination to interested hosts. As applications increase in size, directing data to interested users requires some organization at the application layer. <p> This issue is a natural intersection of work on data naming and AIM. Data naming protocols can be used to separate data into separate data flows (i.e., "containers" <ref> [25, 26] </ref>), and positional routing, anycasting, and streams can be used to support on-the-fly and lightweight data flows within single multicast group, providing greater application control over data dissemination. 3.3 Reliable Multicast Architecture Reliable multicast protocols provide end-to-end reliable many-to-many communication between a number of hosts on an internetwork, over the <p> on sources transmitting over streams and hosts selecting streams to specifically receive; this approach has the advantage that each stream can have an associated meaning in the context of the application (e.g., "stage camera" or "document page 1"), which is a promising approach for supporting applications that perform data naming <ref> [25, 26] </ref>. Requiring the receivers to know the stream associations, rather than every source, allows more meaningful pruning.
Reference: [26] <author> M. Fuchs, C. Diot, T. Turletti, and M. Hoffman, </author> <title> "A naming approach for ALF design," </title> <booktitle> in Proc. HIPPARCH'98 workshop, </booktitle> <address> UCL London, UK, </address> <month> June </month> <year> 1998. </year>
Reference-contexts: involve any number of heuristics such as load, distance in hops, or distance in delay. 3.2 Data Naming Data naming protocols are an application-level approach to organizing data efficiently for end-to-end transport, enhancing the expressibility of an application's requirements to a lower-level network service, such as a reliable transport protocol <ref> [25, 26] </ref>. Data naming helps large-scale applications to organize their data flows efficiently, allowing efficient dissemination to interested hosts. As applications increase in size, directing data to interested users requires some organization at the application layer. <p> This issue is a natural intersection of work on data naming and AIM. Data naming protocols can be used to separate data into separate data flows (i.e., "containers" <ref> [25, 26] </ref>), and positional routing, anycasting, and streams can be used to support on-the-fly and lightweight data flows within single multicast group, providing greater application control over data dissemination. 3.3 Reliable Multicast Architecture Reliable multicast protocols provide end-to-end reliable many-to-many communication between a number of hosts on an internetwork, over the <p> on sources transmitting over streams and hosts selecting streams to specifically receive; this approach has the advantage that each stream can have an associated meaning in the context of the application (e.g., "stage camera" or "document page 1"), which is a promising approach for supporting applications that perform data naming <ref> [25, 26] </ref>. Requiring the receivers to know the stream associations, rather than every source, allows more meaningful pruning.
Reference: [27] <author> X. Rex Xu et al., </author> <title> "Resilient multicast support for continuous-media applications," </title> <booktitle> in NOSSDAV, </booktitle> <year> 1996, </year> <pages> pp. 183-94. </pages>
Reference-contexts: Pos-Route (i; L) 8. Else route to (I (i; D min )) ing to the nth ancestor. that do not wish to enforce direct deletion semantics can ignore this part of the RMA definition (e.g., a non-deleting service is provided by SRM [7] and STORM <ref> [27] </ref>). We define the children of a covey G to be the set of coveys that contacts G using a positional anycast service. Accordingly, G is the parent of every covey in the set of children.
Reference: [28] <author> B. Whetten, S. Kaplan, and T. Montgomery, </author> <title> "A high performance, totally ordered multicast protocol," </title> <booktitle> in Theory and Practice in Distributed Systems, International Workshop, LNCS 938, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: Figure 3.5 shows the RMA-Route () algorithm for routing packets from one child to all its siblings and its parent. The algorithm calls for the label of the source of the multicast and the label of the parent. Therefore, NAK-avoidance [7] or a Ring-based <ref> [28] </ref> approach between a parent and its children would be feasible, scalable and transparent to the hosts; the construction of a separate multicast group is unnecessary. A sophisticated framework is available for the retransmission strategy as well.
Reference: [29] <author> B. N. Levine, S. Paul, and J.J. Garcia-Luna-Aceves, </author> <title> "Organizing multicast receivers deterministically according to packet-loss correlation," </title> <booktitle> in Proc. Sixth ACM International Multimedia Conference (ACM Multimedia 98), </booktitle> <month> September </month> <year> 1998. </year>
Reference-contexts: Therefore, retransmissions received by descendants are very likely not to be extraneous traffic. The only other tree-based protocols that build acceptable ack trees is Tracer <ref> [29] </ref> and OTERS [30], which use IGMP MTRACE messages to discover the tree topology. <p> Registration messages are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols <ref> [29, 9, 32] </ref>, congestion control protocols [23], multicast caching schemes [22], and distributed games [33]) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
Reference: [30] <author> D. Li and D. R. Cheriton, </author> <title> "OTERS (On-Tree Efficient Recovery using Subcasting): A reliable multicast protocol," </title> <booktitle> in Proc. IEEE International Conference on Network Protocols (ICNP'98), </booktitle> <month> October </month> <year> 1998, </year> <pages> pp. 237-245. 22 </pages>
Reference-contexts: Therefore, retransmissions received by descendants are very likely not to be extraneous traffic. The only other tree-based protocols that build acceptable ack trees is Tracer [29] and OTERS <ref> [30] </ref>, which use IGMP MTRACE messages to discover the tree topology.
Reference: [31] <author> B. Cain, S. Deering, and A. Thyagarajan, </author> <title> "Internet group management protocol, </title> <type> version 3," Internet draft, </type> <month> January </month> <year> 1997. </year>
Reference-contexts: Because anycast addresses appear to be normal multicast-group addresses, global anycast addresses based on anycasts are as scalable as the multicast addressing scheme in place today. 19 5.2 Streams The IETF is currently reviewing version 3 of the Internet Group Management Protocol (IGMPv3) <ref> [31] </ref>, which allows hosts to select specific sources from which to receive (or to specifically ignore) and relates to our definition of streams.
Reference: [32] <author> R. Kermode, </author> <title> "Scoped hybrid automatic repeat request with forward error correction (SHARQFEC)," </title> <booktitle> in SIGCOMM'98, </booktitle> <month> September </month> <year> 1998. </year>
Reference-contexts: Registration messages are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols <ref> [29, 9, 32] </ref>, congestion control protocols [23], multicast caching schemes [22], and distributed games [33]) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
Reference: [33] <author> L. Gautier and C. Diot, </author> <title> "Design and evaluation of MiMaze, a multi-player game on the internet," </title> <booktitle> in Proc. IEEE Multimedia Systems Conference, </booktitle> <month> June </month> <year> 1998. </year>
Reference-contexts: are sent only when (and where) the routing tree changes. 20 6 Conclusion As the use of many multicast groups by a single application becomes more prevalent in the Internet (e.g., by reliable multicast error-control protocols [29, 9, 32], congestion control protocols [23], multicast caching schemes [22], and distributed games <ref> [33] </ref>) the limitations of the current multicast design becomes evident. We have shown the versatility of new multicast-based routing services, which are made possible by extending the IP-multicast architecture to include group-relative addressing information.
References-found: 33

