URL: ftp://ftphost.comp.vuw.ac.nz/doc/vuw-publications/CS-TR-92/CS-TR-92-3.ps.gz
Refering-URL: http://www.comp.vuw.ac.nz/~jones/publications/publications_3.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Model-Based Case Adaptation 1  
Phone: Tel: +64 4 471 5328 Fax: +64 4 495 5232  
Author: Eric K. Jones 
Date: July 1992.  
Note: Internet: Tech.Reports@comp.vuw.ac.nz  Publishing Information This report appeared in the Proceedings AAAI-92 Tenth National Conference on Artificial Intelligence, San Mateo, U. S. A.  
Address: PO Box 600 Wellington New Zealand  
Affiliation: VICTORIA UNIVERSITY OF WELLINGTON VUW Department of Computer Science  
Abstract: Technical Report CS-TR-92/3 October 1992 Abstract In this paper, we demonstrate an important role for model-based reasoning in case adaptation. Model-based reasoning can allow a case-based reasoner to apply cases to a wider range of problems than would otherwise be possible. We focus on case adaptation in brainstormer, a planner that uses abstract advice to help it plan in the domain of political and military policy as it relates to terrorism. We show that by equipping a case adapter with an explicit causal model of the planning process, cases presented as advice can be flexibly applied to difficulties that arise at a variety of different stages of planning. 
Abstract-found: 1
Intro-found: 1
Reference: [ Birnbaum et al., 1990 ] <author> Birnbaum, Lawrence; Collins, G.; Freed, M.; and Krulwich, B. </author> <year> 1990. </year> <title> Model-based diagnosis of planning failures. </title> <booktitle> In Proceedings AAAI-88 Eighth National Conference on Artificial Intelligence, </booktitle> <address> Boston. </address> <publisher> AAAI. </publisher> <pages> 318-323. 9 </pages>
Reference-contexts: Unfortunately, new knowledge must be entered in a form that is very close to fully operational. Moreover, failure diagnosis typically requires the user to have a detailed knowledge of reasoning process of the underlying system. (See <ref> [ Birnbaum et al., 1990 ] </ref> and [ Smith et al., 1985 ] , however, for attempts to automate diagnosis completely.) Existing systems employ model-based reasoning to help users manage the complexity of entering data at the operational level, as opposed to facilitating an informal, high-level dialog that sidesteps this complexity.
Reference: [ Charniak, 1988 ] <author> Charniak, E. </author> <year> 1988. </year> <title> Motivation analysis, abductive unification, and nonmonotonic equality. </title> <booktitle> Artificial Intelligence 34 </booktitle> <pages> 275-295. </pages>
Reference-contexts: The resulting explanations are abstract descrip 4 tions of planning actions that the planner could carry out using the advice; the advice fills a slot of the schema. This explanation process is similar in essence to motivational analysis as described in <ref> [ Charniak, 1988 ] </ref> , with several extensions. Four basic inference mechanisms are required for schema-based reasoning: schema activation, slot filling, redescription inference, and "if-added" rules. A schema is activated by retrieving it from memory and instantiating it. <p> Slot filling is accomplished by a process of abductive unification, in which the representation to be explained is hypothesized to be equal to a prototypical filler of the appropriate slot of the schema that explains it, if this equality is consistent with the system's knowledge of them both <ref> [ Charniak, 1988 ] </ref> . As an additional complication, a schema can be retrieved to explain advice that does not abductively unify with any of its slot fillers, if the advice can be redescribed in a different way that does abductively unify.
Reference: [ Davis, 1982 ] <author> Davis, </author> <title> Randall 1982. Teiresias: Applications of meta-level knowlege. </title> <editor> In Davis, Randall and Lenat, D.B., editors 1982, </editor> <booktitle> Knowledge-Based Systems in Artificial Intelligence. </booktitle> <publisher> McGraw-Hill, </publisher> <address> New York. </address> <pages> 229-484. </pages>
Reference-contexts: Brainstormer allows this kind of flexibility, because model-based reasoning can resolve discrepancies between the stage of planning referenced by the advice and the needs of any particular planning problem. The utility of explicit self models has long been recognized in the field of knowledge acquisition. Starting with Teiresias <ref> [ Davis, 1982 ] </ref> , a number of knowledge acquisition systems (e.g. ask [ Gruber, 1989 ] and mole [ Eshelman et al., 1986 ] ) have employed explicit models of the problem solver under construction to simplify knowledge entry.
Reference: [ Eshelman et al., 1986 ] <author> Eshelman, Larry and McDermott, J. </author> <year> 1986. </year> <title> Mole: A knowledge acquisition tool that uses its head. </title> <booktitle> In Proceedings AAAI-86 Fifth National Conference on Artificial Intelligence, </booktitle> <address> Philadelphia. </address> <publisher> AAAI. </publisher> <pages> 950-955. </pages>
Reference-contexts: The utility of explicit self models has long been recognized in the field of knowledge acquisition. Starting with Teiresias [ Davis, 1982 ] , a number of knowledge acquisition systems (e.g. ask [ Gruber, 1989 ] and mole <ref> [ Eshelman et al., 1986 ] </ref> ) have employed explicit models of the problem solver under construction to simplify knowledge entry. Knowledge is typically added in response to the system's failing to handle some new example.
Reference: [ Gruber, 1989 ] <author> Gruber, Thomas R. </author> <year> 1989. </year> <title> Exemplar-Based Knowledge Acquistion. </title> <publisher> Academic Press, </publisher> <address> San Diego. </address>
Reference-contexts: The utility of explicit self models has long been recognized in the field of knowledge acquisition. Starting with Teiresias [ Davis, 1982 ] , a number of knowledge acquisition systems (e.g. ask <ref> [ Gruber, 1989 ] </ref> and mole [ Eshelman et al., 1986 ] ) have employed explicit models of the problem solver under construction to simplify knowledge entry. Knowledge is typically added in response to the system's failing to handle some new example.
Reference: [ Jones, 1991a ] <author> Jones, Eric K. </author> <year> 1991a. </year> <title> Adapting abstract knowledge. </title> <booktitle> In Proceedings of the Thirteenth Annual Conference of the Cognitive Science Society, </booktitle> <address> Chicago, IL. </address> <publisher> Lawrence Erlbaum Associates. </publisher>
Reference-contexts: Brainstormer uses a specialized inference mechanism called redescription inference for this purpose; see <ref> [ Jones, 1991a ] </ref> for details. A third inference mechanism, if-added inference, allows one to write forward-chaining rules that trigger upon filling a slot. 6.2 Using Schema-Based Reasoning We now have sketched the inferential machinery that brainstormer uses to implement model-based case adaptation.
Reference: [ Jones, 1991b ] <author> Jones, Eric K. </author> <year> 1991b. </year> <title> The Flexible Use of Abstract Knowledge in Planning. </title> <type> Ph.D. Dissertation, </type> <institution> Yale University. </institution>
Reference-contexts: In this paper, we identify an important role for model-based reasoning in case adaptation. We focus on case adaptation in brainstormer <ref> [ Jones, 1991b ] </ref> . Brainstormer is a planner that uses abstract advice to help it plan in the domain of political and military policy as it relates to terrorism. <p> Brainstormer's adapter works to resolve several kinds of discrepancies between advice and planning problems. In this paper we focus on just one of these, which we term mismatch in stage of the planning process. See <ref> [ Jones, 1991b ] </ref> for a discussion of several others.
Reference: [ Jones, 1991c ] <author> Jones, Eric K. </author> <year> 1991c. </year> <title> Knowledge refinement using a high-level, non-technical vocabulary. </title> <booktitle> In Machine Learning: Proceedings of the Eighth International Workshop, </booktitle> <address> Chicago, IL. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: the planning process." We then outline brainstormer's approach to resolving mismatches of this kind, which involves reasoning with a causal model of the planning process. 2 Culturally-Shared Models of Planning A major goal of our research is to develop instructable systems that can be advised in a high-level, human-like vocabulary <ref> [ Jones, 1991c ] </ref> . We start from the belief that people communicate advice about planning in terms of high-level culturally-shared models of the planning process. Models describe planning actions, states they produce, plans, goals, and causal relations between the actions and the states. <p> Brainstormer, in contrast, uses model-based reasoning to relieve the user of the burden of spelling out details of how the advice is to be used, permitting higher-level, more flexible interactions between the user and the planner. <ref> [ Jones, 1991c ] </ref> describes brainstormer's relation to other knowledge acquisition and advice-taking systems in greater detail. 9 Conclusion Brainstormer is an exploratory prototype and should be evaluated as such.
Reference: [ Kolodner et al., 1985 ] <author> Kolodner, Janet L.; Simpson, R.L.; and Sycara-Cyranski, K. </author> <year> 1985. </year> <title> A process model of case-based reasoning in problem-solving. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <address> Los Angeles, CA. </address> <publisher> IJCAI, Inc. </publisher>
Reference-contexts: 1 Introduction Most knowledge-based systems cannot use their prior knowledge flexibly: they cannot use what they already know unless it exactly matches the needs of the current problem. Case-based reasoning has been proposed as a framework for addressing this limitation <ref> [ Kolodner et al., 1985 ] </ref> . Traditional systems employ a knowledge-poor process of pattern matching or unification to relate prior knowledge to new problems. <p> Traditional systems employ a knowledge-poor process of pattern matching or unification to relate prior knowledge to new problems. Case-based reasoning, in contrast, countenances a knowledge-intensive process of bringing prior knowledge to bear, thereby aiming to increase the range of problems that a given knowledge base can address <ref> [ Kolodner et al., 1985 ] </ref> . A case-based reasoner proceeds by retrieving prior knowledge in the form of a case that may only partly fit the needs of a current problem, then adapting it to resolve any discrepancies with the problem.
Reference: [ Mostow, 1983 ] <author> Mostow, David J. </author> <year> 1983. </year> <title> Machine transformation of advice into a heuristic search procedure. </title> <editor> In Michalski, Ryszard S.; Carbonell, J.G.; and Mitchell, T.M., editors 1983, </editor> <booktitle> Machine Learning: An Artificial Intelligence Approach. </booktitle> <publisher> Tioga Publishing Company, </publisher> <address> Cambridge, MA. </address> <pages> 367-404. </pages>
Reference-contexts: The user responds with abstract planning advice in the form of a case, which brainstormer proceeds to adapt to fit the problem, by transforming it into specific, contextualized information that resolves the planner's difficulty. Adaptation in brainstormer is thus primarily a task of operationalization in the sense of <ref> [ Mostow, 1983 ] </ref> : converting generic knowledge in an abstract vocabulary into specific useful knowledge in an operational vocabulary. Brainstormer's adapter works to resolve several kinds of discrepancies between advice and planning problems.
Reference: [ Schank, 1986 ] <author> Schank, Roger C. </author> <year> 1986. </year> <title> Explanation Patterns: Understanding Mechanically and Creatively. </title> <publisher> Lawrence Erlbaum Associates, </publisher> <address> Hillsdale, NJ. </address>
Reference-contexts: Proverbs are culturally-shared cases: they identify generic strategies that everyone uses to deal with commonly-occurring problems in planning and social interaction. As such, proverbs provide a rich source of data on culturally-shared models of planning <ref> [ Schank, 1986; White, 1987 ] </ref> . Different proverbs implicitly presuppose different culturally-shared models. Representing a large number of proverbs has proved an effective strategy for developing and testing our representational vocabulary. <p> The canonical model describes planning in terms of plan design and plan execution, building on Schank's idea of the goal-plan-action-state chain <ref> [ Schank, 1986 ] </ref> . Third, there is the operational vocabulary of the planner's data structures, in which the outputs of the adapter are encoded. 2 Brainstormer is equipped with three kinds of knowledge for transforming advice from one vocabulary to another: 1.
Reference: [ Smith et al., 1985 ] <author> Smith, Reid; Winston, H.; Mitchell, T.; and Buchanan, B. </author> <year> 1985. </year> <title> Representation and use of explicit justifications for knowledge-base refinement. </title> <booktitle> In Proceedings Ninth International Joint Conference on Artificial Intelligence, </booktitle> <address> Los Angeles. </address> <publisher> IJCAI, Inc. </publisher> <pages> 675-680. </pages>
Reference-contexts: Unfortunately, new knowledge must be entered in a form that is very close to fully operational. Moreover, failure diagnosis typically requires the user to have a detailed knowledge of reasoning process of the underlying system. (See [ Birnbaum et al., 1990 ] and <ref> [ Smith et al., 1985 ] </ref> , however, for attempts to automate diagnosis completely.) Existing systems employ model-based reasoning to help users manage the complexity of entering data at the operational level, as opposed to facilitating an informal, high-level dialog that sidesteps this complexity.
Reference: [ White, 1987 ] <author> White, Geoffrey M. </author> <year> 1987. </year> <title> Proverbs and cultural models. </title> <editor> In Holland, Dorothy and Quinn, N., editors 1987, </editor> <booktitle> Cultural Models in Language and Thought. </booktitle> <publisher> Cambridge University Press, </publisher> <address> New York. </address> <pages> 151-172. 10 </pages>
Reference-contexts: Proverbs are culturally-shared cases: they identify generic strategies that everyone uses to deal with commonly-occurring problems in planning and social interaction. As such, proverbs provide a rich source of data on culturally-shared models of planning <ref> [ Schank, 1986; White, 1987 ] </ref> . Different proverbs implicitly presuppose different culturally-shared models. Representing a large number of proverbs has proved an effective strategy for developing and testing our representational vocabulary.
References-found: 13

