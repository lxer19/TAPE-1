URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-97-12.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: An Isotach Implementation for Myrinet  
Author: John Regehr 
Note: May 16, 1997  
Abstract: Technical Report CS-97-12 Department of Computer Science University of Virginia Charlottesville, VA 22903 Email: regehr@virginia.edu 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Henri Bal, Rutger Hofman, and Kees Verstoep. </author> <title> A Comparison of Three High Speed Networks for Parallel Cluster Computing. </title> <booktitle> Workshop on Communication and Architectural Support for Network-based Parallel Computing (CANPC'97), </booktitle> <pages> pages 184-197, </pages> <month> February </month> <year> 1997. </year> <note> Available from ftp://ftp.cs.vu.nl/pub/amoeba/orca papers/ canpc97.ps.Z. </note>
Reference-contexts: It is also important to avoid loading the LANai with functionality that could be implemented by the host. 2 We decided to use Myrinet because it is a very fast, scalable network. Also, Myricom provides source code for all Myrinet software, and has worked with us to resolve problems. <ref> [1] </ref> compares Myrinet with ATM and Fast Ethernet in the context of parallel cluster computing. 2.4 Fast Messages Historically, networks such as Ethernet have been slow enough that the overhead associated with the TCP/IP stack has not been a limiting factor in communication bandwidth or latency.
Reference: [2] <author> Nanette J. Boden, Danny Cohen, Robert E. Felderman, Alan E. Kulawik, Charles L. Seitz, Jakov N. Seizovic, and Wen-King Su. </author> <title> Myrinet A Gigabit-per-Second Local-Area Network. </title> <journal> IEEE Micro, </journal> <volume> 15(1) </volume> <pages> 29-36, </pages> <month> February </month> <year> 1995. </year> <note> Available from http:// www.myri.com/research/publications/Hot.ps. </note>
Reference-contexts: Local operations, along with remote requests received from the SIU, are executed at the correct logical time. 2.3. Myrinet 7 2.3 Myrinet Myrinet <ref> [2] </ref> is a local area network based on technology developed for massively parallel processors. <p> Every link has flow control, so the sender will eventually be blocked if the output port remains unavailable. This protocol ensures that the network never drops a message. Deadlock is possible in a cyclic network; deadlock avoidance or 1 This figure, from <ref> [2] </ref>, applies to cables up to 25 m long using the slow (80 Mhz) Myrinet protocol.
Reference: [3] <author> Eric A. Brewer, Frederic T. Chong, Lok T. Liu, John Kubiatowicz, and Shamik D. Sharma. </author> <title> Remote Queues: Exposing Network Queues for Atomicity and Optimization. </title> <booktitle> ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1995. </year> <note> Available from http://www.cs.berkeley.edu/~brewer/papers.html/spaa.ps. </note>
Reference-contexts: The handler for a message is a function specified by the sender that is executed by the receiver when it polls the network after a message has arrived. Good discussions comparing polling and interrupts can be found in <ref> [3] </ref> and [6]. Recent versions of FM have no facility for packet retransmission; they assume that the network will never drop or corrupt a packet. In general, this is a safe assumption for Myrinet.
Reference: [4] <author> Paul F. Reynolds Jr., Craig Williams, and Raymond R. Wagner Jr. </author> <title> Isotach Networks. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 8(4), </volume> <month> April </month> <year> 1997. </year> <note> Available from ftp://ftp.cs.virginia.edu/CS-95-09.ps.Z. </note>
Reference-contexts: A number of features that will be present in the hardware version are not yet implemented; they will be added in the near future. 1 2 Introduction 2 Background 2.1 Isotach Logical Time 2.1.1 Definition An isotach network <ref> [4, 16] </ref> is designed to reduce synchronization overhead in parallel programs by providing strong guarantees about the order in which messages are delivered. These guarantees allow us to enforce atomicity and sequential consistency over the operations performed by a program.
Reference: [5] <author> Leslie Lamport. </author> <title> Time, Clocks, and the Ordering of Events in a Distributed System. </title> <journal> Communications of the ACM, </journal> <volume> 21(7) </volume> <pages> 558-565, </pages> <month> July </month> <year> 1978. </year>
Reference-contexts: A group of operations is executed atomically if the operations all appear to be executed at the same time, and an execution is sequentially consistent if the operations issued by each process appear to be performed in the order in which they were issued. Lamport <ref> [5] </ref> proposed logical time as a way to represent the ordering of events in a distributed system. Isotach logical times are an extension of Lamport's logical times; they are ordered n-tuples of non-negative integers. The first component is the pulse, followed by pid and rank.
Reference: [6] <author> Koen Langendoen, John Romein, Raoul Bhoedjang, and Henri Bal. </author> <title> Integrating Polling, Interrupts, and Thread Management. </title> <booktitle> The 6th Symposium on the Frontiers of Mas 67 68 Bibliography sively Parallel Computation (Frontiers '96), </booktitle> <pages> pages 13-22, </pages> <month> October </month> <year> 1996. </year> <note> Available from ftp://ftp.cs.vu.nl/pub/amoeba/orca papers/frontiers96.ps.Z. </note>
Reference-contexts: The handler for a message is a function specified by the sender that is executed by the receiver when it polls the network after a message has arrived. Good discussions comparing polling and interrupts can be found in [3] and <ref> [6] </ref>. Recent versions of FM have no facility for packet retransmission; they assume that the network will never drop or corrupt a packet. In general, this is a safe assumption for Myrinet.
Reference: [7] <author> The Linux Documentation Project. </author> <note> Available from http://sunsite.unc.edu/mdw/. </note>
Reference-contexts: Linux 11 2.5 Linux Linux <ref> [7] </ref> is an implementation of Unix that is being developed cooperatively over the Internet. It provides virtual memory, preemptive multitasking, TCP/IP networking, and most other features that are expected of a modern Unix. Linux 2.0 runs on a variety of platforms including the x86, Alpha, Sparc, and PowerPC.
Reference: [8] <author> Alan M. Mainwaring, Brent N. Chun, Saul S. Schleimer, and Daniel S. Wilker-son. </author> <title> System Area Network Mapping. </title> <booktitle> In 9th Annual ACM Symposium on Parallel Architectures Algorithms and Architectures, </booktitle> <month> May </month> <year> 1997. </year> <note> Available from http:// HTTP.CS.Berkeley.EDU/~alanm/Papers/mapper.ps. </note>
Reference-contexts: An algorithm to map a Myrinet network, and to construct mutually deadlock-free routes between hosts, can be found in <ref> [8] </ref>. Myrinet is a switched point-to-point network rather than a bus such as Ethernet or FDDI. For reasonable topologies, aggregate bandwidth scales with network size because packets may be using many channels concurrently. An 8-port switch has a bisection bandwidth of more than 10 Gb/s.
Reference: [9] <author> Myricom. Myrinet Documentation. </author> <note> Available from http://www.myri.com/scs/ documentation/. </note>
Reference-contexts: Since the compiler does not understand this, the programmer is effectively forced to add delay slots to the program to avoid race conditions. To write or modify an MCP, it is essential to have access to the Myrinet User Documentation <ref> [9] </ref>. A useful high-level tutorial about writing Myrinet control programs is [13]. 4 Correctness and Performance 4.1 Correctness It was somewhat difficult to verify that the isotach system is correct. As in any complex concurrent system, exhaustive testing is not possible and the possibility of race conditions and deadlock exists.
Reference: [10] <author> Myricom. </author> <title> The Myrinet API. </title> <note> Available from http://www.myri.com/scs/ documentation/mug/development/api.html. </note>
Reference-contexts: Also, it is available in source form, and the code is well written and easy to modify. Other messaging layers under consideration were Berkeley's Active Messages (AM) [15] and Myricom's Myrinet API <ref> [10] </ref>. AM is similar to FM in many ways, although it does not guarantee in-order delivery of messages; the decision to use FM rather than AM was therefore somewhat arbitrary.
Reference: [11] <author> Scott Pakin, Vijay Karamcheti, and Andrew A. Chien. </author> <title> Fast Messages (FM): Efficient, Portable Communication for Workstation Clusters and Massively-Parallel Processors. </title> <journal> IEEE Concurrency, </journal> <note> 1997. Available from http://www-csag.cs.uiuc.edu/papers/ fm-pdt.ps. </note>
Reference-contexts: It runs at 66 Mhz and has 64-bit internal data paths. 2.4. Fast Messages 9 network and application. Illinois Fast Messages version 1.1 <ref> [11, 12] </ref> is a high performance user-level messaging layer for Myrinet and the Cray T3D. It provides reliable, in-order delivery of messages, as well as buffering to decouple the network from the processor.
Reference: [12] <author> Scott Pakin, Mario Lauria, and Andrew Chien. </author> <title> High Performance Messaging on Workstations: Illinois Fast Messages (FM) for Myrinet. </title> <booktitle> Supercomputing, </booktitle> <month> December </month> <year> 1995. </year> <note> Available from http://www-csag.cs.uiuc.edu/papers/myrinet-fm-sc95.ps. </note>
Reference-contexts: It runs at 66 Mhz and has 64-bit internal data paths. 2.4. Fast Messages 9 network and application. Illinois Fast Messages version 1.1 <ref> [11, 12] </ref> is a high performance user-level messaging layer for Myrinet and the Cray T3D. It provides reliable, in-order delivery of messages, as well as buffering to decouple the network from the processor.
Reference: [13] <author> Anthony Skjellum, Gregory Henley, Nathan Doss, and Thomas McMahon. </author> <title> A Guide to Writing Myrinet Control Programs for LANai 3.x. </title> <note> Available from http:// WWW.ERC.MsState.Edu/labs/icdcrl/learn mcp/. </note>
Reference-contexts: To write or modify an MCP, it is essential to have access to the Myrinet User Documentation [9]. A useful high-level tutorial about writing Myrinet control programs is <ref> [13] </ref>. 4 Correctness and Performance 4.1 Correctness It was somewhat difficult to verify that the isotach system is correct. As in any complex concurrent system, exhaustive testing is not possible and the possibility of race conditions and deadlock exists.
Reference: [14] <author> Rashmi Srinivasa. </author> <title> Parallel Rule-based Systems on Isotach Networks. </title> <type> Master's thesis, </type> <institution> University of Virginia, </institution> <year> 1996. </year>
Reference-contexts: Therefore, it is not only responsible for isotach functionality, but also for putting packets onto the network, and for transferring incoming messages into receive buffers in host memory. The V2 (hardware) SIU will reside between the host network interface and a 1 See <ref> [14] </ref> for a detailed description of a parallel rule-based system using isotach. 3.3. The Switch Interface Unit 23 switch, and will buffer packets briefly as it timestamps outgoing messages and sorts incoming messages. Figure 3.3 shows the structure of the SIU; it applies to both versions.
Reference: [15] <author> Thorsten von Eicken, David E. Culler, Seth Copen Goldstein, and Klaus Erik Schauser. </author> <title> Active Messages: a Mechanism for Integrated Communication and Computation. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <year> 1992. </year> <note> Bibliography 69 </note>
Reference-contexts: In summary, FM was chosen because it is a high performance network layer for Myrinet that provides strong message delivery guarantees. Also, it is available in source form, and the code is well written and easy to modify. Other messaging layers under consideration were Berkeley's Active Messages (AM) <ref> [15] </ref> and Myricom's Myrinet API [10]. AM is similar to FM in many ways, although it does not guarantee in-order delivery of messages; the decision to use FM rather than AM was therefore somewhat arbitrary.
Reference: [16] <author> Craig C. Williams. </author> <title> Concurrency Control in Asynchronous Computations. </title> <type> PhD thesis, </type> <institution> University of Virginia, </institution> <month> January </month> <year> 1993. </year> <note> Available from ftp://ftp.cs.virginia.edu/ pub/dissertations/9301.ps.Z. </note>
Reference-contexts: A number of features that will be present in the hardware version are not yet implemented; they will be added in the near future. 1 2 Introduction 2 Background 2.1 Isotach Logical Time 2.1.1 Definition An isotach network <ref> [4, 16] </ref> is designed to reduce synchronization overhead in parallel programs by providing strong guarantees about the order in which messages are delivered. These guarantees allow us to enforce atomicity and sequential consistency over the operations performed by a program.
References-found: 16

