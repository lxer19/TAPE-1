URL: http://www.eecs.berkeley.edu/~galicia/HWSW/support.ps
Refering-URL: http://www.eecs.berkeley.edu/~galicia/HWSW/HWSW.html
Root-URL: http://www.cs.berkeley.edu
Title: Supporting Hardware/Software Codesign in Ptolemy  
Author: by Ron Galicia 
Date: July 28, 1997  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. Buck, S. Ha, E. A. Lee, and D. G. Messerschmitt, "Ptolemy: </author> <title> A framework for simulating and prototyping heterogeneous systems," </title> <journal> Int. J. of Comput. Sim., </journal> <volume> vol. 4, </volume> <pages> pp. 155-182, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: 1 Introduction Ptolemy <ref> [1] </ref> is a design environment that heavily emphasizes simulation and interaction between various models of computation. Currently, it has very little built-in support for representing and interacting with an architecture model, though some work has been done to address this [4].
Reference: [2] <author> A. Abnous and J. Rabaey, </author> <title> "Ultra-low-power domain-specific multimedia processors," </title> <booktitle> in IEEE VLSI Signal Processing Workshop (W. </booktitle> <editor> Burleson, K. Konstantinides, and T. Meng, </editor> <booktitle> eds.), </booktitle> <pages> pp. 461-470, </pages> <institution> The Institute of Electrical and Electronics Engineers, </institution> <year> 1996. </year>
Reference-contexts: Currently, it has very little built-in support for representing and interacting with an architecture model, though some work has been done to address this [4]. A current trend towards lower power, lower cost, and smaller area designs <ref> [2] </ref> makes a representation of the target architecture necessary to devise, implement, and compare the effectiveness of different resource-constrained scheduling and assignment strategies. The driving forces within the Ptolemy project have been abstraction of system descriptions and heterogeneous models of computation coupled with simulation.
Reference: [3] <author> E. A. Lee and D. G. Messerschmitt, </author> <title> "Synchronous data flow," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 75, </volume> <pages> pp. 1235-1245, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: As it creates a graph it can attach node attributes it finds useful, such as memory size, execution time , and power consumption, to the nodes. In Figure 2, the SDF <ref> [3] </ref> graph maps into firings in an acyclic precedence graph (APEG), which in turn is assigned to the computational resources, P 1-P 4, representing either a GP, DSP, ASIC, or PLD. This proposal would obviate flagArray thereby allowing multiple and concurrent cooperating schedulers.
Reference: [4] <author> E. K. Pauer and J. B. </author> <title> Prime, "An architectural trade capability using the Ptolemy kernel," </title> <booktitle> in IEEE International Conference on Acoustics, Speech and Signal Processing, </booktitle> <volume> vol. 2, </volume> <pages> pp. 1252-1255, </pages> <month> May </month> <year> 1996. </year> <month> 4 </month>
Reference-contexts: 1 Introduction Ptolemy [1] is a design environment that heavily emphasizes simulation and interaction between various models of computation. Currently, it has very little built-in support for representing and interacting with an architecture model, though some work has been done to address this <ref> [4] </ref>. A current trend towards lower power, lower cost, and smaller area designs [2] makes a representation of the target architecture necessary to devise, implement, and compare the effectiveness of different resource-constrained scheduling and assignment strategies.
References-found: 4

