URL: http://www.cs.umass.edu/~immerman/pub/tree.ps
Refering-URL: http://www.cs.umass.edu/~immerman/pub_immerman.html
Root-URL: 
Email: etessami@dimacs.rutgers.edu immerman@cs.umass.edu  
Phone: 1179,  
Title: Tree Canonization and Transitive Closure  
Author: Kousha Etessami Neil Immerman 
Keyword: COUNT 2LO) NL.  
Address: P.O. Box  Piscataway, NJ 08855-1179 Amherst, MA 01003  
Affiliation: DIMACS Computer Science Department  Rutgers University University of Massachusetts  
Abstract: We prove that tree isomorphism is not expressible in the language (FO + TC + COUNT). This is surprising since in the presence of ordering the language captures NL, whereas tree isomorphism and canonization are in L ([Lin92]). Our proof uses an Ehrenfeucht-Frasse game for transitive closure logic with counting [Gra91, IL90]. As a corresponding upper bound, we show that tree canonization is expressible in (FO+COUNT)[log n]. The best previous upper bound had been (FO+COUNT)[n O(1) ] ([DM90]). The lower bound remains true for bounded-degree trees, and we show that for bounded-degree trees counting is not needed in the upper bound. These results are the first separations of the unordered versions of the logical languages for NL, AC 1 , and ThC 1 . Our results were motivated by our conjecture in [EI95] that (FO + TC + COUNT + 1LO) = NL, i.e., that a one-way local ordering sufficed to capture NL. We disprove this conjecture, but we prove that a two-way local ordering does suffice, i.e., (FO + TC + 
Abstract-found: 1
Intro-found: 1
Reference: [AKL + 79] <author> R. Aleliunas, R. Karp, R. Lipton, L. Lovasz, and C. Rackoff. </author> <title> Random walks, universal traversal sequences, and the complexity of the maze problem. </title> <booktitle> In 20th IEEE Found. of Comp. Sci. Symp., </booktitle> <pages> pages 218-223, </pages> <year> 1979. </year>
Reference-contexts: Note that a polynomial length universal traversal sequence, which exists by the results of <ref> [AKL + 79] </ref>, gives the logic (FO + DTC + COUNT + 2LO) a systematic way to reach each node, and thus a way to construct a total ordering of all weakly connected components (based on when a vertex is first hit), and thus a canonization algorithm.
Reference: [BIS90] <author> D. Mix Barrington, N. Immerman, and H. Straubing. </author> <title> On uniformity within NC 1 . JCSS, </title> <booktitle> 41 </booktitle> <pages> 274-306, </pages> <year> 1990. </year>
Reference-contexts: domain such that for all trees T 00 isomorphic to T the same ordered (canonical) tree T 0 is the output of f. 2 Recall that (FO + COUNT+ )[log n] is equal to ThC 1 , the set of problems recognized by uniform sequences of polynomial-size, log-depth threshold circuits, <ref> [BIS90] </ref>. Furthermore, for the transitive closure logic, in the presence of ordering, counting quantifiers give no extra power, i.e., (FO + TC + COUNT+ ) = (FO + TC+ ) = NL Thus, Corollary 1.5 separates the unordered versions of the languages for NL and ThC 1 .
Reference: [CFI92] <author> J. Cai, M. Furer, and N. Immerman. </author> <title> An optimal lower bound on the number of variables for graph identification. </title> <journal> Combinatorica, </journal> <volume> 12 </volume> (4):389-410, 1992. 
Reference-contexts: In section 5 we show that two-way locally ordered transitive closure logic corresponds precisely to N L. In section 6, we prove Theorems 1.4 and 1.6. 2 Background In this paper our notation follows the conventions of Descriptive Complexity [Imm96]. See [Imm87] for a survey, <ref> [CFI92] </ref> for discussion of numbers, counting quantifiers and their associated Ehrenfeucht-Frasse games (hereafter called E-F games), and [EI95] for needed background and results concerning local orderings. <p> We will use it in section 4 to prove a lower bound on tree-isomorphism. We first recall some notation for similar games such as the C k -game from <ref> [IL90; CFI92] </ref>. <p> We write (A; ~a) ~ m;p (B; ~ b), to denote the fact that PLAYER II has a winning strategy in G m;p ((A; ~a),(B; ~ b)), meaning it can win regardless of the moves made by PLAYER I. The Counting Move in the above game comes straight from <ref> [IL90, CFI92] </ref>, and essentially the same TC Move was presented in [Gra91]. The idea behind the TC move is as follows: Player I, in order to reveal that the two structures disagree on the transitive closure of some 2k-ary formula ', will choose a '-path of k-tuples in one structure. <p> To do so view all incoming edges as greater in the ordering than the outgoing edges. 8 A refutation of Conjecture 1.1 can also be obtained as a corollary of the results of <ref> [CFI92] </ref>. A slight modification of the gadgets used there, from undirected gadgets to directed ones, yields this result. 14 2. Note that there is one ordering for each vertex in a component. <p> order to express properties like tree isomorphism, and what does the addition buy us in expressive power? In particular, what do we gain by adding an operator for tree canonization? Do we get much closer to the order-independent complexity class? We would conjecture that properties derived from the results of <ref> [CFI92] </ref> would still not be expressible in this extended logic.
Reference: [CM92] <author> A. Calo and J. Makowsky. </author> <title> The Ehrenfeucht-Frasse games for transitive closure. </title> <booktitle> In 2nd Inter. Symp. on Logical Foundations of Computer Science, </booktitle> <year> 1992. </year>
Reference-contexts: quantifier block [QB] and a quantifier-free formula M 0 such that A 2 K () A j= [QB] t (jAj) M 0 3 Ehrenfeucht-Frasse Game for TC logic with Counting In this section we describe an E-F game for the logic (FO + TC + COUNT) ([Gra91, IL90], see also <ref> [CM92] </ref> for a different E-F game for TC). We will use it in section 4 to prove a lower bound on tree-isomorphism. We first recall some notation for similar games such as the C k -game from [IL90; CFI92].
Reference: [CR80] <author> S. A. Cook and C. W. Rackoff. </author> <title> Space lower bounds for maze threadability of restricted machines. </title> <journal> SIAM J. Comput., </journal> <volume> 9 </volume> (3):636-652, 1980. 
Reference-contexts: In [EI95] we introduced local orderings in graphs as an intermediate step between ordered and unordered graphs. We showed that the language (FO + DTC + 1LO) extends the Jumping Automata on Graphs (JAG) model <ref> [CR80] </ref> to a more robust complexity class that fl This research was supported by NSF grant CCR-9207797. 1 still permits interesting lower bounds on graph reachability. <p> There is no assumption about consistency between F and H. In [EI95] it was shown that (FO + DTC + 1LO) is related to, but strictly more powerful than a well known structured model for space bounded computation called JAGs <ref> [CR80] </ref>. It was there also shown that with (FO + TC + 1LO) one can express a total ordering on all vertices reachable from a particular vertex. It was then conjectured that (FO + TC + 1LO + COUNT) = NL.
Reference: [DM90] <author> P. Dublish and S. Maheshwari. </author> <title> Query languages which express all ptime queries for trees and unicyclic graphs. </title> <booktitle> In Proc. of MFCS 90 LNCS vol. </booktitle> <volume> 452, </volume> <year> 1990. </year>
Reference-contexts: Theorem 1.3 follows. 6 Tree Canonization 2 (FO + COUNT)[log n] We obtain a (FO + COUNT)[log n] formula for tree canonization. This improves on the previous best upper bound of (FO + LFP + COUNT) <ref> [DM90] </ref> for tree canonization without ordering. Note that (FO+LFP +COUNT) = (FO+COUNT)[n O (1) ]. We also show that for bounded-degree tree isomorphism a (FO)[log n] formula is sufficient, i.e., without counting. Let jvj denote the number of nodes in st (v).
Reference: [EI95] <author> K. Etessami and N. Immerman. </author> <title> Reachability and the power of local ordering. </title> <journal> Theoretical Computer Science, </journal> <volume> 148 </volume> <pages> 227-260, </pages> <year> 1995. </year>
Reference-contexts: Fact 1 ([Imm87, Imm88]) (FO + TC+ ) = NL ; (FO + DTC+ ) = L The ordering is necessary. Indeed without the ordering the parity of the number of vertices in a graph is not expressible in (FO + TC). In <ref> [EI95] </ref> we introduced local orderings in graphs as an intermediate step between ordered and unordered graphs. <p> On the other hand, we showed that the language (FO + TC + 1LO) is strong enough to express a total ordering on the set of vertices reachable from a given vertex. This work had led us to conjecture in <ref> [EI95] </ref> that, when we add counting, all NL properties are expressible in this logic: Conjecture 1.1 ([EI95]) (FO + TC + COUNT + 1LO) = NL In the present paper we prove that this conjecture is false. <p> In section 6, we prove Theorems 1.4 and 1.6. 2 Background In this paper our notation follows the conventions of Descriptive Complexity [Imm96]. See [Imm87] for a survey, [CFI92] for discussion of numbers, counting quantifiers and their associated Ehrenfeucht-Frasse games (hereafter called E-F games), and <ref> [EI95] </ref> for needed background and results concerning local orderings. <p> In our study of graph structures there are intermediate forms of ordering that one could augment a structure with besides a total ordering. Two of these, One-Way Local Ordering (denoted 1LO) and Two-way Local Ordering (denoted 2LO) were studied in <ref> [EI95] </ref>: Definition 2.1 One-Way Local Ordering. Consider a graph G = hf1; 2; : : : ; ng; fv 1 ; v 2 ; : : : ; v n g; ; 1; n; E; F; s; ti in which F is a ternary relation on vertices. <p> A two-way local ordering (denoted 2LO) is just a one-way local ordering, H, on the incoming edges to each vertex, in addition to the one-way local ordering, F , on the outgoing edges. There is no assumption about consistency between F and H. In <ref> [EI95] </ref> it was shown that (FO + DTC + 1LO) is related to, but strictly more powerful than a well known structured model for space bounded computation called JAGs [CR80]. <p> Proof The idea for expressing E 0 is to 1. Totally order each (weakly) connected component of E, using the method of <ref> [EI95] </ref> (specifically, see Theorem 3.11 of that paper), which is based on distinguishing vertices by the lexicographically least shortest path that leads to them from a given vertex. <p> of the component of x is less than or equal to that of 15 the component of y (lexicographically and in terms of containment of constants)." We leave it to the reader to verify that this formula is expressible using TC, counting quantifiers, and the component orderings constructible, via the <ref> [EI95] </ref> method from the available two-way local ordering. Since each c G is in a singleton component, its position is determined uniquely, and the formula V c (i) is easy to derive from the above construction.
Reference: [Ete95] <author> K. Etessami. </author> <title> Counting quantifiers, successor relations, and logarithmic space. </title> <booktitle> In 10th Structure in Complexity Theory Conf., </booktitle> <pages> pages 1-10, </pages> <year> 1995. </year> <note> to appear in JCSS. </note>
Reference-contexts: As yet, there are no non-trivial lower bounds for transitive closure logics with two-way local ordering and numbers, even without counting. The best that is known is a separation of (FO + COUNT + 2LO) from (FO + DTC + 2LO), implicit in the lower bound of <ref> [Ete95] </ref>. Acknowledgements Thanks to Allan Borodin and Steven Lindell for various helpful discussions. Thanks to Janos Makowsky and to the anonymous referees for pointing out an error in our earlier proof of Corollary 4.10.
Reference: [Gra91] <author> E. Gradel. </author> <title> On transitive closure logic. </title> <booktitle> In Proceed. 5th Workshop on Comp. Sci. Logic, volume 626 of LNCS, </booktitle> <pages> pages 149-163, </pages> <year> 1991. </year>
Reference-contexts: The Counting Move in the above game comes straight from [IL90, CFI92], and essentially the same TC Move was presented in <ref> [Gra91] </ref>. The idea behind the TC move is as follows: Player I, in order to reveal that the two structures disagree on the transitive closure of some 2k-ary formula ', will choose a '-path of k-tuples in one structure.
Reference: [Hel96] <author> L. Hella. </author> <type> personal communication. </type> <year> 1996. </year>
Reference-contexts: We have observed that these separations also hold in the presence of one-way local ordering. Recently, L. Hella and H. Imhof <ref> [Hel96] </ref> have extended our results to show that tree isomorphism is not expressible in some even stronger logics, in particular in the logic augmented with the alternating transitive closure (ATC) operator ([Imm87]).
Reference: [IL90] <author> N. Immerman and E. Lander. </author> <title> Describing graphs: A first-order approach to graph canonization. </title> <editor> In Alan Selman, editor, </editor> <booktitle> Complexity Theory Retrospective, </booktitle> <pages> pages 59-81. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: We will use it in section 4 to prove a lower bound on tree-isomorphism. We first recall some notation for similar games such as the C k -game from <ref> [IL90; CFI92] </ref>. <p> We write (A; ~a) ~ m;p (B; ~ b), to denote the fact that PLAYER II has a winning strategy in G m;p ((A; ~a),(B; ~ b)), meaning it can win regardless of the moves made by PLAYER I. The Counting Move in the above game comes straight from <ref> [IL90, CFI92] </ref>, and essentially the same TC Move was presented in [Gra91]. The idea behind the TC move is as follows: Player I, in order to reveal that the two structures disagree on the transitive closure of some 2k-ary formula ', will choose a '-path of k-tuples in one structure.
Reference: [Imm82] <author> N. Immerman. </author> <title> Upper and lower bounds for first order expressibility. </title> <journal> JCSS, </journal> <volume> 25 </volume> (1):76-98, 1982. 
Reference-contexts: To count the size of a bounded degree subtree in FO [log n] we use the same 2=3-1=3 technique used by Ruzzo [Ruz80] to prove CFL's are recognizable by tree-size bounded alternating Turing machines, and, in the logical setting, used in <ref> [Imm82] </ref> (specifically, Theorem B.1) to prove a related result.
Reference: [Imm87] <author> N. Immerman. </author> <title> Languages that capture complexity classes. </title> <journal> SIAM J. Comput., </journal> <volume> 16:4:760-778, </volume> <year> 1987. </year>
Reference-contexts: In section 5 we show that two-way locally ordered transitive closure logic corresponds precisely to N L. In section 6, we prove Theorems 1.4 and 1.6. 2 Background In this paper our notation follows the conventions of Descriptive Complexity [Imm96]. See <ref> [Imm87] </ref> for a survey, [CFI92] for discussion of numbers, counting quantifiers and their associated Ehrenfeucht-Frasse games (hereafter called E-F games), and [EI95] for needed background and results concerning local orderings.
Reference: [Imm88] <author> N. Immerman. </author> <title> Nondeterministic space is closed under complementation. </title> <journal> SIAM J. Comput., </journal> <volume> 17:5:935-938, </volume> <year> 1988. </year>
Reference: [Imm89] <author> N. Immerman. </author> <title> Expressibility and parallel complexity. </title> <journal> SIAM J. of Comput., </journal> <volume> 18 </volume> <pages> 625-638, </pages> <year> 1989. </year>
Reference-contexts: We will be considering expressibility via first-order formulas of non-constant size. Recall that FO [t (n)] denotes the set of properties expressible by first-order formulas iterated t (n) times <ref> [Imm89] </ref>: by a quantifier block, denoted [QB], we mean a sequence (Q 1 z 1 :M 1 )(Q 2 z 2 :M 2 ) : : : (Q r z r :M r ) where each Q i is a quantifier and each M i is a quantifier free formula.
Reference: [Imm96] <author> N. Immerman. </author> <title> Descriptive Complexity. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <note> to appear 1996. </note>
Reference-contexts: In section 5 we show that two-way locally ordered transitive closure logic corresponds precisely to N L. In section 6, we prove Theorems 1.4 and 1.6. 2 Background In this paper our notation follows the conventions of Descriptive Complexity <ref> [Imm96] </ref>. See [Imm87] for a survey, [CFI92] for discussion of numbers, counting quantifiers and their associated Ehrenfeucht-Frasse games (hereafter called E-F games), and [EI95] for needed background and results concerning local orderings.
Reference: [Lin92] <author> S. Lindell. </author> <title> A logspace algorithm for tree canonization. </title> <booktitle> In 24th Symp. on Theory of Comput., </booktitle> <pages> pages 400-404, </pages> <year> 1992. </year>
Reference-contexts: Theorem 1.2 is quite surprising because tree isomorphism is so simple, and order independent, and it seemed to require little more than counting plus a limited use of TC. Tree Isomorphism and even Tree Canonization 1 are known to be in L <ref> [Lin92] </ref>. A Corollary of Theorem 1.2 is that Conjecture 1.1 is false. This is because a 1LO on a tree gives no new information when edges are directed from the leaves to the root. <p> It follows that a non-uniform version of (FO + DTC + COUNT + 2LO) includes all of L. Thus a lower bound 3 Tree-isomorphism-like properties are not a candidate for this, because Lindell's result <ref> [Lin92] </ref> goes through with 2LO regardless of the edge directions. 20 on the uniform language (FO + DTC + COUNT + 2LO) will be very interesting and will likely be quite difficult.
Reference: [Ott96] <author> M. Otto. </author> <title> The expressive power of fixed-point logic with counting. </title> <journal> Journal of Symbolic Logic, </journal> <volume> 61(1) </volume> <pages> 147-176, </pages> <year> 1996. </year>
Reference: [Ruz80] <author> W.-L. Ruzzo. </author> <title> Tree-size bounded alternation. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 21, </volume> <year> 1980. </year> <month> 22 </month>
Reference-contexts: To count the size of a bounded degree subtree in FO [log n] we use the same 2=3-1=3 technique used by Ruzzo <ref> [Ruz80] </ref> to prove CFL's are recognizable by tree-size bounded alternating Turing machines, and, in the logical setting, used in [Imm82] (specifically, Theorem B.1) to prove a related result. <p> The following claim provides what is needed. 19 Claim 6.2 Given a formula '(x) expressible in FO [log n] over k-bounded degree (directed) trees, there is a formula (i) expressible in FO [log n] such that (i) () 9!ix'(x) Proof The proof is another application of Ruzzo's technique <ref> [Ruz80] </ref>. We quantify the root of the tree and count the number of nodes in its subtree (all vertices) satisfy the property '.
References-found: 19

