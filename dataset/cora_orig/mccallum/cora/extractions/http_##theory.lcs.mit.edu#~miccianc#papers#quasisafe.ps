URL: http://theory.lcs.mit.edu/~miccianc/papers/quasisafe.ps
Refering-URL: http://theory.lcs.mit.edu/~cis/zk/zk.html
Root-URL: 
Title: An Efficient Non-Interactive Statistical Zero-Knowledge Proof System for Quasi-Safe Prime Products  
Author: Rosario Gennaro Daniele Micciancio Tal Rabin 
Keyword: safe primes, zero-knowledge, non-interactive proofs, RSA, undeniable signatures.  
Date: November 8, 1997  
Abstract: We present efficient zero-knowledge proof systems for quasi-safe prime products and other related languages. Quasi-safe primes are a relaxation of safe primes, a class of prime numbers useful in many cryptographic applications. Our proof systems achieve higher security and better efficiency than all previously known ones. In particular, all our proof systems are perfect or statistical zero-knowledge, meaning that even a computationally unbounded adversary cannot extract any information from the proofs. Moreover, our proof systems are extremely efficient because they do not use general reductions to NP-complete problems, can be easily parallelized preserving zero-knowledge, and are non-interactive for computationally unbounded provers. The prover can also be efficiently implemented given some trapdoor information and using very little interaction. We demonstrate the applicability of quasi-safe primes by showing how they can be effectively used in the context of RSA based undeniable signatures to enforce the use of "good" public keys, i.e., keys such that if a signer can convince a recipient of the validity of a signature, then he won't be able to subsequently deny the same signature in case of a dispute. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Blum, A. De Santis, S. Micali, G. Persiano, </author> <title> "Non-Interactive Zero-Knowledge," </title> <note> in SIAM J. Comput., Vol.20, No.6, pp.1084-1118. </note>
Reference-contexts: Although zero-knowledge proofs for the language of safe prime products can be constructed using general results on NP languages <ref> [7, 2, 3, 8, 1] </ref>, these general solutions are not efficient and achieve only computational zero-knowledge (i.e., no computationally bounded adversary can extract information from the proof). <p> The reader is referred to <ref> [1] </ref> for a complete description. In a non-interactive proof system, a prover wants to convince a verifier that a string x (the common input) belongs to some language L.
Reference: [2] <author> M. Blum, P. Feldman, S. Micali, </author> <title> "Noninteractive Zero-Knowledge and its Applications," </title> <booktitle> Proc. of 20th ACM Symposium on Theory of Computing, </booktitle> <year> 1988, </year> <pages> pp. 103-112. </pages>
Reference-contexts: Although zero-knowledge proofs for the language of safe prime products can be constructed using general results on NP languages <ref> [7, 2, 3, 8, 1] </ref>, these general solutions are not efficient and achieve only computational zero-knowledge (i.e., no computationally bounded adversary can extract information from the proof). <p> Namely, an odd prime P = 2 ^p + 1 is quasi-safe if ^p is a prime power, i.e., ^p = p ff for some prime p. We give an efficient one-sided error non-interactive statistical zero-knowledge (NIZK <ref> [2] </ref>) proof system for the language of quasi-safe prime products N = P Q such that P = 2p ff + 1; Q = 2q fi + 1; p; q are distinct odd primes satisfying P; Q; p; q 6 1 (mod 8), P 6 Q (mod 8) and p 6
Reference: [3] <author> A. De Santis, S. Micali, G. Persiano, </author> <title> "Non-Interactive Zero-Knowledge Proof Systems," </title> <booktitle> in Advances in Cryptology - CRYPTO87, Lecture Notes in Computer Science 293, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1987, </year> <pages> pp. 52-72. </pages>
Reference-contexts: Although zero-knowledge proofs for the language of safe prime products can be constructed using general results on NP languages <ref> [7, 2, 3, 8, 1] </ref>, these general solutions are not efficient and achieve only computational zero-knowledge (i.e., no computationally bounded adversary can extract information from the proof).
Reference: [4] <author> R. Gennaro, H. Krawczyk, T. Rabin, </author> <title> "RSA-Based Undeniable Signature," </title> <booktitle> in Advances in Cryptology - CRYPTO97, Lecture Notes in Computer Science 1294, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 132-149. </pages> <note> Final version available from http://www.research.ibm.com/security/papers1997.html </note>
Reference-contexts: For example, the use of safe primes has been recommended in the choice of RSA moduli because prime products N = P Q are believed to be harder to factor when P and 1 Q are safe. The undeniable signature scheme in <ref> [4] </ref> requires the RSA modulus to be the product of safe primes in order to achieve undeniability. [5] uses safe prime products to prove modular polynomial relations in zero-knowledge. <p> In particular we would like to be able to prove that a number is a safe prime product in zero-knowledge [6]. Certifying a number N = P Q as the product of two safe primes is of critical importance in applications such as the undeniable signature scheme in <ref> [4] </ref>, where if P and Q are not safe the signer can convince somebody of the validity of a signature, and subsequently deny the same signature in case of a dispute. <p> However, in our proof system the prover has only to loose by not following the above protocol because if x 62 hgi the verifier will certainly reject the input in stage 4 of the proof system. 5 Applications: Undeniable Signatures In <ref> [4] </ref> a new undeniable signature scheme was presented based on the RSA signature algorithm. The scheme is proven secure under the assumption that the composite modulus N is the product of two safe primes P and Q. <p> This assumption is needed in order to bound the probability of cheating by the prover during the confirmation and denial protocol. While in general one trusts the prover to choose a "safe" N as it appears to be in his own interest, the undeniable signature scheme of <ref> [4] </ref> is an example of a scheme where the prover might have an interest in choosing N differently as that could give him the possibility to deny valid signatures. A problem left open in [4] was how to make sure that the signer had chosen N correctly 1 . In [4] <p> "safe" N as it appears to be in his own interest, the undeniable signature scheme of <ref> [4] </ref> is an example of a scheme where the prover might have an interest in choosing N differently as that could give him the possibility to deny valid signatures. A problem left open in [4] was how to make sure that the signer had chosen N correctly 1 . In [4] the proven bound on the probability of cheating is O (1) p where N = P Q and P = 2p + 1 and Q = 2q + 1, p &lt; q. <p> <ref> [4] </ref> is an example of a scheme where the prover might have an interest in choosing N differently as that could give him the possibility to deny valid signatures. A problem left open in [4] was how to make sure that the signer had chosen N correctly 1 . In [4] the proven bound on the probability of cheating is O (1) p where N = P Q and P = 2p + 1 and Q = 2q + 1, p &lt; q. <p> That is the probability of cheating for the prover remains O (1) p where N = P Q and P = 2p ff + 1, Q = 2q fi + 1, p &lt; q. 1 In <ref> [4] </ref> two partial solutions are presented but neither of them is fully satisfactory either in security or in efficiency 2 This is an easy exercise for the reader, the final paper will present the full details of this proof 11 However in [4] one could say that jpj = O (jN <p> fi + 1, p &lt; q. 1 In <ref> [4] </ref> two partial solutions are presented but neither of them is fully satisfactory either in security or in efficiency 2 This is an easy exercise for the reader, the final paper will present the full details of this proof 11 However in [4] one could say that jpj = O (jN j) and from that establish that the probability of error was negligible. <p> Thus effectively quasi-safe primes are sufficient for the security of the <ref> [4] </ref> undeniable signature scheme.
Reference: [5] <author> E. Fujisaki, T. Okamoto, </author> <title> "Statistical Zero Knowledge Protocols to Prove Modular Polynomial Relations," </title> <booktitle> in Advances in Cryptology - CRYPTO97, Lecture Notes in Computer Science 1294, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997, </year> <pages> pp. 16-30. </pages>
Reference-contexts: The undeniable signature scheme in [4] requires the RSA modulus to be the product of safe primes in order to achieve undeniability. <ref> [5] </ref> uses safe prime products to prove modular polynomial relations in zero-knowledge. In general, safe prime products have proven particularly useful in cryptographic application due to the special structure of Z fl P Q when P and Q are safe primes.
Reference: [6] <author> S. Goldwasser, S. Micali, C. Rackoff, </author> <title> "The Knowledge Complexity of Interactive Proof Systems," </title> <journal> SIAM J. Comput. </journal> <volume> Vol. 18, No. 1, </volume> <pages> pp. 186-208, </pages> <month> February </month> <year> 1989. </year>
Reference-contexts: In particular we would like to be able to prove that a number is a safe prime product in zero-knowledge <ref> [6] </ref>.
Reference: [7] <author> O. Goldreich, S. Micali, A. Wigderson, </author> <title> "Proofs that Yield Nothing But Their Validity or All Languages in NP Have Zero-Knowledge Proof Systems," </title> <journal> Journal of ACM, </journal> <volume> Vol. 38, No. 1, </volume> <month> July </month> <year> 1991, </year> <pages> pp. 691-729. </pages>
Reference-contexts: Although zero-knowledge proofs for the language of safe prime products can be constructed using general results on NP languages <ref> [7, 2, 3, 8, 1] </ref>, these general solutions are not efficient and achieve only computational zero-knowledge (i.e., no computationally bounded adversary can extract information from the proof).
Reference: [8] <author> U. Feige, D. Lapidot, A. Shamir, </author> <title> "Multiple Non-Interactive Zero Knowledge Proofs Under General Assumptions," </title> <booktitle> Proc. of 31st Symp. on Foundations of Computer Science, </booktitle> <year> 1990, </year> <pages> pp. 308-317. 12 </pages>
Reference-contexts: Although zero-knowledge proofs for the language of safe prime products can be constructed using general results on NP languages <ref> [7, 2, 3, 8, 1] </ref>, these general solutions are not efficient and achieve only computational zero-knowledge (i.e., no computationally bounded adversary can extract information from the proof).
References-found: 8

