URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1995/tr-95-028.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1995.html
Root-URL: http://www.icsi.berkeley.edu
Email: staunton@tenet.CS.Berkeley.EDU  
Title: Tenet Suite 1 and the Continuous Media Toolkit  
Author: Peter Staunton 
Keyword: multimedia, continuous media toolkit, Tenet protocols, real-time communication, continuous media player.  
Date: June 1995  
Address: TR-95-028  
Affiliation: Tenet Group University of California at Berkeley International Computer Science Institute  
Abstract: The Continuous Media Toolkit (CMT) [1][2] is a flexible toolkit which facilitates development of local and distributed continuous media applications. Data transfer across a computer network is provided on a connectionless, best-effort basis using a network protocol called Cyclic-UDP [3]. A second set of network protocols, called Tenet Suite 1 [4][5], has been designed to provide a simplex, unicast, connection-oriented service to realtime traffic in a packetswitched internetwork, with guaranteed performance in terms of data throughput, end-to-end delay, delay jitter, and loss rate. This report describes an extension to CMT which allows an application developer to employ the guaranteed network services of Tenet Suite 1. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Patel, </author> <title> Introduction to CMT, document to accompany the Continuous Media Toolkit, </title> <month> ftp://mm-ftp.cs.berkeley.edu/pub/multimedia/cmt/Hidden/cmt-3.0.a2.tar.Z </month> <year> (1995). </year>
Reference: [2] <author> L. A. Rowe, </author> <title> Continuous Media Applications, Presented at Multipoint Workshop held in conjunction with ACM Multimedia '94, </title> <address> San Francisco, CA, </address> <month> (Nov. </month> <year> 1994). </year>
Reference: [3] <author> B. C. Smith, </author> <title> Implementation Techniques for Continuous Media Systems and Applications, </title> <type> Ph.D. </type> <institution> thesis in Computer Science, University of California at Berkeley, </institution> <month> (September </month> <year> 1994). </year>
Reference-contexts: Finally, when the MjpegPlay object is destroyed, commands are passed to jvdriver to relinquish the shared memory segments and to the other processes to detach from it. 4. New CMT objects for Tenet Suite 1 This section takes a closer look at Cyclic-UDP <ref> [3] </ref>, the set of network protocols already supported by CMT. The functional requirements of the toolkits network objects are discussed, and consideration given to those of new objects that use the protocols of Tenet Suite 1. The implementation of these new objects is described.
Reference: [4] <author> D. Ferrari, A. Banerjea, and H. Zhang, </author> <title> Network Support for Multimedia - A Discussion of the Tenet Approach, </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 26, </volume> <pages> pp. 1267-1280, </pages> <year> (1994). </year>
Reference: [5] <author> A. Banerjea, D. Ferrari, B. Mah, M. Moran, D. Verma, and H. Zhang, </author> <title> The Tenet Real-Time Protocol Suite: Design, Implementation, and Experiences, </title> <type> Technical Report TR-94-059, </type> <institution> International Computer Science Institute, Berkeley, </institution> <address> CA, </address> <month> (November </month> <year> 1994). </year> <month> 17 </month>
Reference: [6] <author> J. K. Ousterhout, </author> <title> Tcl and the Tk Toolkit, </title> <publisher> Addison-Wesley (1994). </publisher>
Reference-contexts: Support is provided for a wide variety of media formats, hardware platforms, and operating systems. The toolkit is based on Tcl/Tk <ref> [6] </ref>. Applications can be easily developed by writing short, simple scripts without any familiarity with compiled programming languages such as C or C++. This API empowers the developer to create, connect, control, and destroy objects with relative ease. <p> The implementation of these new objects is described. Details are given on how these can be used by the application developer. 4.1 Cyclic-UDP CMT is based on Tcl/Tk <ref> [6] </ref>, a scripting language and interface toolkit developed by Professor John Ousterhout at the University of California at Berkeley. A number of commands have been added to the basic Tcl/Tk interpreter which allow creation and manipulation of media objects, and facilitate distributed programming.
Reference: [7] <author> L. A. Rowe and B. C. Smith, </author> <title> A Continuous Media Player, </title> <booktitle> Proc. 3rd. Int. Workshop on Network and OS Support for Digital Audio and Video, </booktitle> <address> San Diego CA (November 1992). </address>
Reference-contexts: Logical time can also advance at a negative rate to allow movie playback in reverse. A number of sample applications accompany the toolkit. The most extensive of these is the Continuous Media Player (CM Player) <ref> [7] </ref>. This allows a user to select and view a movie stored on either a local or remote file server, or a combination of both. The graphical user interface is shown in Figure 1.
Reference: [8] <author> D. Verma and H. Zhang, </author> <title> Design Documents for RTIP / RMTP, </title> <type> unpublished, </type> <institution> University of California at Berkeley and International Computer Science Institute, Berkeley, </institution> <address> CA (May 1991). </address>
Reference-contexts: Protocol IP Internet Protocol Applications Common datalink layer 3 The architecture of Tenet Suite 1, shown in Figure 2, consists of the network protocols RTIP, RMTP, and RCAP. Real-Time Internet Protocol (RTIP) <ref> [8] </ref> exists at the network layer and guarantees end-to-end packet delivery. Real-time Message Transport Protocol (RMTP) is a transport layer protocol that sits above RTIP, fragmenting and reassembling messages as required. Real-time Channel Administration Protocol (RCAP) [9][10] is responsible for channel establishment, status reporting, and channel teardown.
Reference: [9] <author> A. Banerjea and B. A. Mah, </author> <title> The Real-Time Channel Administration Protocol, </title> <booktitle> Proc. 2nd. Int. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Heidelberg (November 1991). </address>
Reference: [10] <author> A. Banerjea and B. A. Mah, </author> <title> The Design of a Real-Time Channel Administration Protocol, </title> <type> unpublished, </type> <institution> University of California at Berkeley and International Computer Science Institute, Berkeley, </institution> <address> CA (May 1991). </address>
Reference: [11] <author> W. B. Pennebaker and J. L. Mitchell, </author> <title> JPEG Still Image Data Compression Standard, </title> <publisher> Van Nostrand Reinhold (1992). </publisher>
Reference-contexts: Motion JPEG is simply a sequence of still images, each image having been compressed using the JPEG (Joint Photographic Experts Group) <ref> [11] </ref> standard for still image compression. Each frame can be viewed as being independent of all others since only intra-frame compression is performed. MPEG (Motion Picture Experts Group), on the other hand, is a standard designed specifically for compression of video.
Reference: [12] <author> K. Patel, L. A. Rowe and B. C. Smith, </author> <title> Performance of a Software MPEG Video Decoder, </title> <booktitle> Proc. ACM Multimedia 93, </booktitle> <address> Anaheim CA (August 1993). </address>
Reference-contexts: Compressed images are stored in files, and transferred, frame by frame, to the users location where they are decompressed and displayed using a local X server. CMT provides image decompression in both hardware and software <ref> [12] </ref>. On a DEC 5000 workstation running ULTRIX 4.2A, typical display rates of 1 frame every second and 1 frame every 2-3 seconds, were observed for software decoding of S/F sized (320x240) video using MPEG and Motion JPEG respectively.
Reference: [13] <author> W. Kernighan and D. M. Ritchie, </author> <title> The C Programming Language, </title> <publisher> Prentice-Hall (1978). </publisher>
Reference: [14] <author> W. R. Stevens, </author> <title> UNIX Network Programming, </title> <publisher> Prentice-Hall (1990). </publisher>
Reference: [15] <author> A. Gupta, W. Heffner, M. Moran, C. Szyperski, </author> <title> Network Support for Realtime Multi-Party Applications, </title> <booktitle> Fourth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> Lancaster, England, </address> <month> (November </month> <year> 1993). </year>
Reference: [16] <author> R. Bettati, D. Ferrari, A. Gupta, W. Heffner, W. Howe, M. Moran, Q. Nguyen, R. Yavatkar, </author> <title> Connection Establishment for Multiparty Realtime Communication, </title> <booktitle> Proceedings of the Fifth International Workshop on Network and Operating System Support for Digital Audio and Video , Durham, </booktitle> <address> NH, </address> <month> (April </month> <year> 1995). </year>
References-found: 16

