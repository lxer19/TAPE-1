URL: http://www.cs.msu.edu/~huangyih/Publications/a2d-journal.ps
Refering-URL: http://www.cs.msu.edu/~huangyih/Publications/index.html
Root-URL: http://www.cs.msu.edu
Title: An Adaptive Global Reduction Algorithm for Wormhole-Routed 2D Meshes  M) for sufficiently long vectors. The O(  
Author: Yih Huang and Philip K. McKinley p 
Keyword: Previously known asymptotically optimal algorithms with complexity O(log N M) incur inherent network contention among constituent messages.  performance is negligible. Keywords: Wormhole routing, global reduction, 2D mesh, collective commu  
Date: October 1995.  
Note: N  119, San Antonio, Texas,  This work was supported in part by DOE grant DE-FG02-93ER25167, by NSF grants MIP-9204066, CDA-9121641, CDA9222901, and by an Ameritech Faculty Fellowship.  
Web: fhuangyih, mckinleygcps.msu.edu  
Address: East Lansing, Michigan 48824  
Affiliation: Department of Computer Science Michigan State University  
Abstract: This paper presents a global reduction algorithm for wormhole-routed 2D meshes. Well-known reduction algorithms that are optimized for short vectors have complexity O(M log N), where N = nfin is the number of nodes, and M the vector length. Algorithms suitable for long vectors have complexity O( The proposed algorithm adapts to the given vector length, resulting in complexities O(M log N) for short vectors, O(log N + M) for medium-sized vectors, and O( N + M) version is preferred to the O(log N + M) version for long vectors, due to its small coefficient associated with M; the dominating factor for such vectors. The algorithm is contention-free in a synchronous environment. Under asynchronous execution models, depth contention (contention among message-passing steps) may occur. However, simulation studies show that the effect of depth contention on the actual nication. A concise and preliminary version of this paper was published in the Proceedings of the Seventh IEEE Symposium on Parallel and Distributed Processing, pp. 114 p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Intel Corporation, </author> <title> Paragon XP/S Product Overview, 1991. [2] "CRAY T3D system architecture overview manual," </title> <year> 1993. </year>
Reference-contexts: 1 Introduction Massively parallel processors (MPPs) are often characterized by low-dimensional mesh topologies, due to their ease of design and manufacturing. Examples include the Intel Paragon <ref> [1] </ref>, which uses a 2D mesh topology, and the Cray T3D [2], which uses a 3D torus topology. The large-diameter problem of such topologies is compensated by the use of wormhole-routed switching [3], in which messages are divided into very small units, called flits, and are pipelined through the network.
Reference: [3] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-36, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Examples include the Intel Paragon [1], which uses a 2D mesh topology, and the Cray T3D [2], which uses a 3D torus topology. The large-diameter problem of such topologies is compensated by the use of wormhole-routed switching <ref> [3] </ref>, in which messages are divided into very small units, called flits, and are pipelined through the network. Each channel along the path from the source to the destination of a message is seized by a header flit and held by the message until a trailer flit passes over it.
Reference: [4] <author> R. Felderman, A. DeSchon, D. Cohen, and G. Finn, </author> <title> "ATOMIC: A high speed local communication architecture," </title> <journal> Journal of High Speed Networks, </journal> <volume> vol. 3, no. 1, </volume> <pages> pp. 1-29, </pages> <year> 1994. </year>
Reference-contexts: The routing algorithm decides the path taken by a message. Wormhole routing has been used not only in the design of MPPs, but more recently in the construction of high-speed local area networks <ref> [4, 5] </ref>. Wormhole-routed networks generally outperform store-and-forward networks when the traffic patterns are sparse, but may incur network contention, the competition among two or more messages for the same channel, when the traffic is heavy.
Reference: [5] <author> N. J. Boden, D. Cohen, R. E. Felderman, A. E. Kulawik, C. L. Seitz, J. N. Seizovic, and W.-K. Su, </author> <title> "Myrinet a gigabit-per-second local-area network," </title> <journal> IEEE Micro, </journal> <volume> vol. 15, no. 1, </volume> <pages> pp. 29-36, </pages> <year> 1995. </year>
Reference-contexts: The routing algorithm decides the path taken by a message. Wormhole routing has been used not only in the design of MPPs, but more recently in the construction of high-speed local area networks <ref> [4, 5] </ref>. Wormhole-routed networks generally outperform store-and-forward networks when the traffic patterns are sparse, but may incur network contention, the competition among two or more messages for the same channel, when the traffic is heavy.
Reference: [6] <author> Message Passing Interface Forum, </author> <title> "Document for standard message-passing interface," </title> <type> Tech. Rep. </type> <institution> CS-93-214, University of Tennessee, </institution> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Wormhole-routed networks generally outperform store-and-forward networks when the traffic patterns are sparse, but may incur network contention, the competition among two or more messages for the same channel, when the traffic is heavy. Heavy traffic can result from invocations of collective communication operations <ref> [6] </ref>, such as all-to-all broadcast, all-to-all personalized communication, and global reduction. Such operations are "noisy" by nature, because typically information stored at one node must be learned by many other nodes. <p> In a global reduction operation, the result vector y of a global combine is distributed to all participating nodes. The above definitions conform semantically to operations defined in the Message Passing Interface (MPI) standard <ref> [6] </ref>. Specifically, these definitions of combine and reduction correspond to MPI REDUCE and MPI ALLREDUCE 2 operations, respectively. This paper presents a new algorithm for the global reduction operation on wormhole-routed 2D meshes. The algorithm is applicable to both current MPPs and future wormhole-routed LANs.
Reference: [7] <author> P. K. McKinley, H. Xu, A.-H. Esfahanian, and L. M. Ni, </author> <title> "Unicast-based multicast communication in wormhole-routed direct networks," </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> vol. 5, </volume> <pages> pp. 1254-1265, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: In this regard, deterministic routing may even be preferred to adaptive routing because its predictability allows the algorithm designer to "schedule" the message-passing pattern into a sequence of contention-free communication 1 steps <ref> [7] </ref>. Associated with the sending of every message is software overhead for preparing buffers, setting up network interfaces, interrupting the processor at the receiving node, and so on. The overheads invoked by sending and receiving a message will be referred to collectively as the startup latency of the message. <p> The A2D-R algorithm introduces no inherent contention, that is, messages generated in the same communication step will not conflict with one another. Under an asynchronous execution model, messages from different communication steps might interfere with one another (referred to as depth contention <ref> [7] </ref>). However, simulation results show that depth contention has negligible effect on performance. The remainder of the paper is organized as follows. Section 2 defines the system model for which the A2D-R algorithm is designed. <p> This model is referred to as SPMD or MIMD in the literature. 1 The two execution models introduce network contention of different types. Inherent contention, also called stepwise contention <ref> [7] </ref>, occurs when two messages in the same step compete for the same channel. Such contention may arise from the nature of the network topology, the underlying routing algorithm, or both. Inherent contention can be observed in both SIMD and MIMD environments. Depth contention [7] occurs in an asynchronous environment when <p> Inherent contention, also called stepwise contention <ref> [7] </ref>, occurs when two messages in the same step compete for the same channel. Such contention may arise from the nature of the network topology, the underlying routing algorithm, or both. Inherent contention can be observed in both SIMD and MIMD environments. Depth contention [7] occurs in an asynchronous environment when earlier 1 Despite acknowledged differences, the terms SPMD and MIMD will be used interchangeably in this paper. 4 finishers proceed to send messages in the next program step, but these messages interfere with messages from the previous communication step. <p> Executed under an asynchronous model, the algorithm may incur depth contention | messages generated in different communication steps interfere with one another <ref> [7] </ref>; the effect of depth contention will be discussed in Section 6.
Reference: [8] <author> L. M. Ni and P. K. McKinley, </author> <title> "A survey of wormhole routing techniques in direct networks," </title> <journal> IEEE Computer, </journal> <volume> vol. 26, </volume> <pages> pp. 62-76, </pages> <month> Feb. </month> <year> 1993. </year> <month> 30 </month>
Reference-contexts: Since the A2D-R algorithm always sends messages along rows or columns exclusively, any shortest-path routing algorithms will satisfy our routing needs. Dimension-ordered routing, which is perhaps the most popular routing algorithm used in commercial/experimental MPPs <ref> [8] </ref>, falls in this category. The execution model of a set of interconnected processing nodes can be either synchronous or asynchronous. In a synchronous environment, programs execute in a lock-step manner. <p> The distance term fid is usually small compared to the other terms; this relative distance-insensitivity of wormhole routing has been demonstrated through measurements on commercial systems <ref> [8] </ref>. Therefore, many researchers have adopted the simplified cost model, ff + fim [11, 12, 13].
Reference: [9] <author> M. D. Noakes, D. Wallach, and W. J. Dally, </author> <title> "The J-machine multicomputer: An architectural evaluation," </title> <booktitle> in Twentieth Annual International Symposium in Computer Architecture, </booktitle> <address> (San Diego, CA), </address> <year> 1993. </year>
Reference-contexts: In this paper, message length is measured in the number of data elements, rather than bytes. The ratio of ff to fi is a good indication of the significance of software overhead. On modern MPPs <ref> [9, 10] </ref>, the value of this ratio ranges from tens to hundreds, making software overhead the dominating cost factor for handling short and medium-length messages. However, the second factor fiM becomes increasingly important with longer messages. The above communication cost model is not precise.
Reference: [10] <author> Z. Bozkus, S. Ranka, G. Fox, and A. Choudhary, </author> <title> "Performance comparison of the CM-5 and Intel Touchstone Delta for data parallel operations," </title> <booktitle> in Proceedings of the Fifth IEEE Symposium on Parallel and Distributed Processing, </booktitle> <pages> pp. 307-310, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: In this paper, message length is measured in the number of data elements, rather than bytes. The ratio of ff to fi is a good indication of the significance of software overhead. On modern MPPs <ref> [9, 10] </ref>, the value of this ratio ranges from tens to hundreds, making software overhead the dominating cost factor for handling short and medium-length messages. However, the second factor fiM becomes increasingly important with longer messages. The above communication cost model is not precise.
Reference: [11] <author> M. Barnett, L. Shuler, R. van de Geijn, S. Gupta, D. G. Payne, and J. Watts, </author> <title> "Interproces-sor collective communication library (InterCom)," </title> <booktitle> in Scalable High Performance Computing Conference, </booktitle> <year> 1994. </year>
Reference-contexts: The distance term fid is usually small compared to the other terms; this relative distance-insensitivity of wormhole routing has been demonstrated through measurements on commercial systems [8]. Therefore, many researchers have adopted the simplified cost model, ff + fim <ref> [11, 12, 13] </ref>. The accuracy of this simplification in the context of our proposed algorithm will be justified through simulation. 3 Building-Block Algorithms The proposed A2D-R algorithm is constructed by carefully combining previously known algorithms for 1D-array combine, reduction, and data distribution. <p> Since these changes in strip lengths occur within a typical range of M values, from several elements to thousands of elements, the adaptive nature of the proposed algorithm should prove useful in such situations. 7 Related Work This research was inspired by the work of Barnett, et al. <ref> [11, 12] </ref>. The problem of coping with various vector lengths, in the context of global reduction, is studied in [12, 15]. Specifically, six reduction algorithms for wormhole-routed 2D meshes are discussed in [12]. <p> They either switch from one component algorithm to another when the vector length exceeds a threshold, or apply one component algorithm along one dimension and another algorithm along the other dimension. The InterCom communication library <ref> [11] </ref>, designed for the Intel Paragon machine, ad 28 dresses the issue of variable vector lengths for a wide range of collective communication operations, including global reduction.
Reference: [12] <author> M. Barnett, R. Littlefield, D. G. Payne, and R. A. van de Geijn, </author> <title> "Global combine algorithms for 2-D meshes with wormhole routing," </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> vol. 24, no. 2, </volume> <year> 1995. </year>
Reference-contexts: The distance term fid is usually small compared to the other terms; this relative distance-insensitivity of wormhole routing has been demonstrated through measurements on commercial systems [8]. Therefore, many researchers have adopted the simplified cost model, ff + fim <ref> [11, 12, 13] </ref>. The accuracy of this simplification in the context of our proposed algorithm will be justified through simulation. 3 Building-Block Algorithms The proposed A2D-R algorithm is constructed by carefully combining previously known algorithms for 1D-array combine, reduction, and data distribution. <p> Applying the same idea to the B-R algorithm leads to a 2D reduction algorithm that requires time 4ff (n 1) + 4fi n1 n M + 2fl n1 n M . An even faster version of 2D bucket reduction is given in <ref> [12] </ref>. That version, referred to as B2D-R in this paper, consists of the following four stages: 1. Apply the B-C algorithm along rows. This stage comprises n 1 communication steps, each of which operates on segments of length M=n. <p> Apply the B-D algorithm along columns. This stage collects the segments of size M=n along rows. Each node will hold the entire final vector y after this stage. It is shown in <ref> [12] </ref> that the time required by the B2D-R algorithm has the closed form T B2D-R = 4ff (n 1) + 2fi N N 1 M The coefficients 2 and 1 of the transmission delay term fiM and the computation delay term flM , respectively, are proved to be optimal for sufficiently <p> time required by the B2D-R algorithm has the closed form T B2D-R = 4ff (n 1) + 2fi N N 1 M The coefficients 2 and 1 of the transmission delay term fiM and the computation delay term flM , respectively, are proved to be optimal for sufficiently long vectors <ref> [12] </ref>. <p> Interested readers may refer to <ref> [12] </ref> for an illustration of the algorithm, the proof of the optimality of the transmission/computation delays, and a detailed derivation of the above performance equation. Table 1 summarizes the complexities of the two 2D reduction algorithms described above: tree-based reduction and bucket-based reduction. <p> The B2D-R algorithm does not perform as well as the other two for short or medium-length vectors, due to its 4ff (n 1) startup latencies. (B2D-R cannot be applied when vector length is less than 256, due to its method of vector segmentation <ref> [12] </ref>.) As vector length is increased, the B2D-R algorithm catches up and, after M &gt; 400, outperforms the BSBT2D-R algorithm. B2D-R eventually merges with the A2D-R algorithm, when the number of vector elements reaches about 8000. <p> Since these changes in strip lengths occur within a typical range of M values, from several elements to thousands of elements, the adaptive nature of the proposed algorithm should prove useful in such situations. 7 Related Work This research was inspired by the work of Barnett, et al. <ref> [11, 12] </ref>. The problem of coping with various vector lengths, in the context of global reduction, is studied in [12, 15]. Specifically, six reduction algorithms for wormhole-routed 2D meshes are discussed in [12]. <p> The problem of coping with various vector lengths, in the context of global reduction, is studied in <ref> [12, 15] </ref>. Specifically, six reduction algorithms for wormhole-routed 2D meshes are discussed in [12]. Among the six algorithms, the one optimized for short vectors is a 2D version of the SBT-based reduction, and the one optimal for long vectors is the B2D-R algorithm discussed in Section 3. <p> The problem of coping with various vector lengths, in the context of global reduction, is studied in [12, 15]. Specifically, six reduction algorithms for wormhole-routed 2D meshes are discussed in <ref> [12] </ref>. Among the six algorithms, the one optimized for short vectors is a 2D version of the SBT-based reduction, and the one optimal for long vectors is the B2D-R algorithm discussed in Section 3. Other algorithms in that paper fall somewhere between the two, but incur inherent contention. <p> Other algorithms in that paper fall somewhere between the two, but incur inherent contention. Two contention-free hybrid algorithms, which use the other algorithms as component algorithms, are also presented in <ref> [12] </ref>. They either switch from one component algorithm to another when the vector length exceeds a threshold, or apply one component algorithm along one dimension and another algorithm along the other dimension.
Reference: [13] <author> J. Bruck, L. de Coster, N. DeWulf, C.-T. Ho, and R. Lauwereins, </author> <title> "On the design and implementation of broadcast and global combine operations using the postal model," </title> <booktitle> in Proceedings of the 1994 Symposium on Parallel and Distributed Processing, </booktitle> <pages> pp. 594-602, </pages> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: The distance term fid is usually small compared to the other terms; this relative distance-insensitivity of wormhole routing has been demonstrated through measurements on commercial systems [8]. Therefore, many researchers have adopted the simplified cost model, ff + fim <ref> [11, 12, 13] </ref>. The accuracy of this simplification in the context of our proposed algorithm will be justified through simulation. 3 Building-Block Algorithms The proposed A2D-R algorithm is constructed by carefully combining previously known algorithms for 1D-array combine, reduction, and data distribution.
Reference: [14] <author> S. L. Johnsson and C.-T. Ho, </author> <title> "Optimum broadcasting and personalized communication in hypercubes," </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. C-38, </volume> <pages> pp. 1249-1268, </pages> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: In the SBT-D stage, the vector y is distributed back to all nodes, following the reverse communication pattern. The SBT-D stage is also referred to as the recursive doubling broadcast algorithm in the literature <ref> [14] </ref>. This stage incurs another log n startup latencies and transmission delays, although no computation is required.
Reference: [15] <author> M. Barnett, R. Littlefield, D. G. Payne, and R. A. van de Geijn, </author> <title> "Global combine on mesh architectures with wormhole routing," </title> <booktitle> in Proceedings of the 7th International Parallel Processing Symposium, </booktitle> <address> (Newport Beach, CA), </address> <month> April 13-16 </month> <year> 1993. </year>
Reference-contexts: An alternative to a tree-based algorithm is to divide vectors into segments, or "buckets," and cycle the buckets around the 1-D array. Transmissions and computations take place on individual segments, instead of the entire vector. This algorithm is referred to as bucket reduction (B-R) in the literature <ref> [15] </ref>, and consists of two stages: 1. Bucket Combine (B-C). This stage comprises n 1 communication steps, each of which sends subvectors (or segments) of length M n to an adjacent node and combines 8 the received segment with a corresponding local segment. <p> The problem of coping with various vector lengths, in the context of global reduction, is studied in <ref> [12, 15] </ref>. Specifically, six reduction algorithms for wormhole-routed 2D meshes are discussed in [12]. Among the six algorithms, the one optimized for short vectors is a 2D version of the SBT-based reduction, and the one optimal for long vectors is the B2D-R algorithm discussed in Section 3.
Reference: [16] <author> P. K. McKinley and C. Trefftz, "MultiSim: </author> <title> A tool for the study of large-scale multiprocessors," </title> <booktitle> in Proc. 1993 International Workshop on Modeling, Analysis and Simulation of Computer and Telecommunication Networks (MASCOTS), </booktitle> <pages> pp. 57-62, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: In order to study the effects of these factors, to account for real system characteristics, and to compare the performance of the various algorithms, a simulation study was conducted. As part of the an earlier project, we have developed a simulation tool called MultiSim <ref> [16] </ref> for the study of large-scale multiprocessors. MultiSim is based on an event-driven simulation package, CSIM [17], which allows multiple pseudo-processes to execute in a quasi-parallel fashion and provides a convenient interface for writing modular simulation programs.
Reference: [17] <author> H. D. Schwetman, "Csim: </author> <title> A C-based, process-oriented simulation language," </title> <type> Tech. Rep. </type> <institution> PP-080-85, Microelectronics and Computer Technology Corporation, </institution> <year> 1985. </year> <month> 31 </month>
Reference-contexts: As part of the an earlier project, we have developed a simulation tool called MultiSim [16] for the study of large-scale multiprocessors. MultiSim is based on an event-driven simulation package, CSIM <ref> [17] </ref>, which allows multiple pseudo-processes to execute in a quasi-parallel fashion and provides a convenient interface for writing modular simulation programs.
References-found: 16

