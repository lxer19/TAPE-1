URL: http://ballade.cs.ucla.edu:8080/~cong/papers/iccad95_dualpart.ps.Z
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Multi-Way VLSI Circuit Partitioning Based on Dual Net Representation  
Author: Jason Cong, Wilburt Labio, and Narayanan Shivakumar 
Address: Los Angeles, CA 90024  
Affiliation: UCLA Computer Science Department University of California,  
Abstract: In this paper, we study the area-balanced multi-way partitioning problem of VLSI circuits based on a new dual netlist representation named the hybrid dual netlist (HDN). Given a netlist, we first compute a K-way partition of the nets based on the HDN representation, and then transform a K-way net partition into a K-way module partitioning solution. The main contribution of our work is the formulation and solution of the K-way module contention (K-MC) problem, which determines the best assignment of the modules in contention to partitions, while maintaining user-specified area requirements, when we transform the net partition into a module partition. Under a natural definition of binding factor between nets and modules, and preference function between partitions and modules, we show that the K-MC problem can be reduced to a min-cost max-flow problem. We present efficient solutions to the K-MC problem based on network flow computation. Extensive experimental results show that our algorithm consistently outperforms the conventional K-FM partitioning algorithm by a significant margin. 
Abstract-found: 1
Intro-found: 1
Reference: [AlKa93] <author> Alpert, C. J. and A. B. Kahng, </author> <title> ``Geometric Embed-dings for Faster (and Better) Multi-Way Netlist Partitioning,'' </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 743-748, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering [CoHK91, HaKa92], multicommodity-flow based clustering [YeCL92], clique based clustering [CoSm93], geometric embedding with min-diameter clustering <ref> [AlKa93] </ref>, and clustering based on maximum fanout-free cones (MFFCs) [CoLB94]. Since the objective of the partitioning problem is to minimize the number of nets to be cut, we believe that assigning nets, instead of modules, to partitions will lead to better partitioning solutions in general.
Reference: [Bo87] <author> Boppana, R., </author> <title> ``Eigenvalues and Graph Bisection: An Average-Case Analysis,'' </title> <booktitle> IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 280-285, </pages> <year> 1987. </year>
Reference-contexts: The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods [KeLi70, FiMa82, Kr84, KiGV83], the graph spectral method <ref> [Bo87, HaKa91] </ref>, and the net-based partitioning method [HaKa92b, CoHK92].
Reference: [ChSZ93] <author> Chan, P., M. Schlag, and J. Zien, </author> <title> ``Spectral K-Way Ratio-Cut Partitioning and Clustering,'' </title> <booktitle> Proc. 30th ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: The multi-way partitioning algorithms include the recursive bi-partitioning by Kernighan and Lin [KeLi70], a generalization of the FM-algorithm with lookahead by Sanchis [Sa89], the primal-dual algorithm [YeCL91], and a generalization of the graph spectral-based partitioning method to multi-way ratio-cut by Chan, Schlag, and Zien <ref> [ChSZ93] </ref>.
Reference: [CoHK91] <author> Cong, J., L. Hagen, and A. Kahng, </author> <title> ``Random Walks for Circuit Clustering,'' </title> <booktitle> IEEE 4th Int'l ASIC Conf., </booktitle> <pages> pp. </pages> <address> P14-2.1, </address> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering <ref> [CoHK91, HaKa92] </ref>, multicommodity-flow based clustering [YeCL92], clique based clustering [CoSm93], geometric embedding with min-diameter clustering [AlKa93], and clustering based on maximum fanout-free cones (MFFCs) [CoLB94].
Reference: [CoHK92] <author> Cong, J., L. Hagen, and A. Kahng, </author> <title> ``Net Partitions Yield Better Module Partitions,'' </title> <booktitle> IEEE 29th Design Automation Conference, </booktitle> <pages> pp. 47-52, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods [KeLi70, FiMa82, Kr84, KiGV83], the graph spectral method [Bo87, HaKa91], and the net-based partitioning method <ref> [HaKa92b, CoHK92] </ref>. The multi-way partitioning algorithms include the recursive bi-partitioning by Kernighan and Lin [KeLi70], a generalization of the FM-algorithm with lookahead by Sanchis [Sa89], the primal-dual algorithm [YeCL91], and a generalization of the graph spectral-based partitioning method to multi-way ratio-cut by Chan, Schlag, and Zien [ChSZ93]. <p> Since the objective of the partitioning problem is to minimize the number of nets to be cut, we believe that assigning nets, instead of modules, to partitions will lead to better partitioning solutions in general. The net-based bipartitioning algorithm by Cong, Hagen, and Kahng <ref> [CoHK92] </ref> is therefore of particular interest to us. This algorithm first computes a bipartitioning of the nets using the graph spectral method, and then transforms the net bipartitioning solution into a module bipartitioning solution by solving the module contention problem. <p> The subsequent subsections describe these phases in detail. 3.2. Generating dual netlist representations The net intersection graph (NIG) was used in <ref> [CoHK92] </ref> since the graph spectral based algorithm used in their method for net partitioning applies only to graphs and cannot be used for hypergraphs.
Reference: [CoLB94] <author> Cong, J., Z. Li, and R. Bagrodia, </author> <title> ``Acyclic Multi-Way Partitioning of Boolean Networks,'' </title> <booktitle> Proc. ACM/IEEE 31st Design Automation Conf., </booktitle> <pages> pp. 670-675, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering [CoHK91, HaKa92], multicommodity-flow based clustering [YeCL92], clique based clustering [CoSm93], geometric embedding with min-diameter clustering [AlKa93], and clustering based on maximum fanout-free cones (MFFCs) <ref> [CoLB94] </ref>. Since the objective of the partitioning problem is to minimize the number of nets to be cut, we believe that assigning nets, instead of modules, to partitions will lead to better partitioning solutions in general.
Reference: [CoLS94] <author> Cong, J., W. Labio, and N. Shivakumar, </author> <title> ``Multi-Way VLSI Circuit Partitioning Based on Dual Net Representation,'' </title> <institution> in UCLA Computer Science Department Tech. Report CSD-940029, </institution> <month> (Aug. </month> <year> 1994). </year>
Reference-contexts: In practice, if we relax the area constraint parameter a as defined in Section 2, we can always satisfy condition C1.) When condition C1 is true, we have the following results (proofs of these results can be found in <ref> [CoLS94] </ref>). Lemma The value of the maximum flow in the assign ment network is m. Theorem 1 The min-cost max-flow in the assignment network induces a module assignment whose total prefer ence function is maximum. <p> We have developed efficient procedures to update the binding factors and preference functions after each module assignment or re-assignment during the flow computation. Details of these procedures can be found in <ref> [CoLS94] </ref>. It is interesting to note that this dynamic updating of binding factors and preference functions can be easily incorporated in our min-cost max-flow algorithm after each flow augmentation. <p> Characteristics of the Test Circuits. results can be found in <ref> [CoLS94] </ref>.) For each example, the K-FM algorithm was run 20 times, each on a random initial module partitioning. In order to obtain a fair comparison, we make sure that the runtime K-DualPART/SF and K-DualPART/DF are comparable with that of the K-FM algorithm.
Reference: [CoSm93] <author> Cong, J. and M. Smith, </author> <title> ``A Bottom-up Clustering Algorithm with Applications to Circuit Partitioning in VLSI Designs,'' </title> <booktitle> ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 755-760, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering [CoHK91, HaKa92], multicommodity-flow based clustering [YeCL92], clique based clustering <ref> [CoSm93] </ref>, geometric embedding with min-diameter clustering [AlKa93], and clustering based on maximum fanout-free cones (MFFCs) [CoLB94].
Reference: [FiMa82] <author> Fiduccia, C. and R. Mattheyses, </author> <title> ``A Linear Time Heuristic for Improving Network Partitions,'' </title> <booktitle> ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 175-181, </pages> <year> 1982. </year>
Reference-contexts: This problem has many applications in VLSI circuit design ranging from circuit layout to logic simulation and emulation. The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods <ref> [KeLi70, FiMa82, Kr84, KiGV83] </ref>, the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92]. <p> We use the K-FM partitioning algorithm <ref> [FiMa82, Sa89] </ref> to partition the 1 2 5 7 a c e g j a c e g j a c e g j a c e g j (a) Netlist (NL) (b) Netlist Hypergraph (NH) (c) Net Intersection Graph (NIG) (d) Dual Net Hyper Graph (DNHG) nets into K partitions. <p> Note that HDN is a hypergraph in general. Since we use the K-FM algorithm for net partitioning (see next sub-section), a hypergraph representation presents no problem to us. 3.3. Partition of dual netlist representation After constructing the HDN hypergraph, we use the K-way Fiduccia-Mattheyses (K-FM) algorithm <ref> [FiMA82, Sa89] </ref> to compute a K-way partitioning of HDN to obtain a K-way partitioning of the nets in the original netlist. We want to minimize the number of edges cut in HDN so that the subsequent module contention is easier to solve.
Reference: [FoFu62] <author> Ford, L. R. and D. R. Fulkerson, </author> <title> Flows in Networks, </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, N.J. </address> <year> (1962). </year>
Reference-contexts: Moreover, the cost of the max-flow equals m . MAX minus the total preference function of the corresponding module assignment. We use the augmenting path algorithm <ref> [FoFu62] </ref> for computing a minimum-cost maximum-flow in the assignment network. We start with a flow of value zero. At each step, we compute the minimum cost augmenting path in the residual graph of the assignment network.
Reference: [HaKa91] <author> Hagen, L. and A. B. Kahng, </author> <title> ``Fast spectral methods for ratio cut partitioning and clustering,'' </title> <booktitle> Proc. ICCAD-91, </booktitle> <pages> pp. </pages> <address> 10--13, </address> <year> 1991. </year>
Reference-contexts: The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods [KeLi70, FiMa82, Kr84, KiGV83], the graph spectral method <ref> [Bo87, HaKa91] </ref>, and the net-based partitioning method [HaKa92b, CoHK92].
Reference: [HaKa92] <author> Hagen, L. and A. Kahng, </author> <title> ``A New Approach to Effective Circuit Clustering,'' </title> <booktitle> Int'l Conf. on Computer-Aided Design , pp. </booktitle> <pages> 422-427, </pages> <month> Nov. </month> <year> 1992. </year> <note> [HaKa92b] Hagen, </note> <author> L. and A. B. Kahng, </author> <title> ``New Spectral Methods for Ratio Cut Partitioning and Clustering,'' </title> <journal> IEEE Trans. on CAD, </journal> <pages> pp. 1074-1085, </pages> <month> Sept. </month> <year> 1992. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering <ref> [CoHK91, HaKa92] </ref>, multicommodity-flow based clustering [YeCL92], clique based clustering [CoSm93], geometric embedding with min-diameter clustering [AlKa93], and clustering based on maximum fanout-free cones (MFFCs) [CoLB94].
Reference: [KeLi70] <author> Kernighan, B. and S. Lin, </author> <title> ``An Efficient Heuristic Procedure for Partitioning of Electrical Circuits,'' </title> <journal> Bell System Technical J., </journal> <month> Feb. </month> <year> 1970. </year>
Reference-contexts: This problem has many applications in VLSI circuit design ranging from circuit layout to logic simulation and emulation. The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods <ref> [KeLi70, FiMa82, Kr84, KiGV83] </ref>, the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92]. <p> The bipartitioning algorithms include the iterative improvement methods [KeLi70, FiMa82, Kr84, KiGV83], the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92]. The multi-way partitioning algorithms include the recursive bi-partitioning by Kernighan and Lin <ref> [KeLi70] </ref>, a generalization of the FM-algorithm with lookahead by Sanchis [Sa89], the primal-dual algorithm [YeCL91], and a generalization of the graph spectral-based partitioning method to multi-way ratio-cut by Chan, Schlag, and Zien [ChSZ93].
Reference: [KiGV83] <author> Kirkpatrick, S., C. D. Gelat, and M. P. Vecchi, Jr., </author> <title> ``Optimization by Simulated Annealing,'' </title> <journal> Science, </journal> <volume> Vol. 220, </volume> <pages> pp. 671-680, </pages> <month> May, </month> <year> 1983. </year>
Reference-contexts: This problem has many applications in VLSI circuit design ranging from circuit layout to logic simulation and emulation. The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods <ref> [KeLi70, FiMa82, Kr84, KiGV83] </ref>, the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92].
Reference: [Kr84] <author> Krishnamurthy, B., </author> <title> ``An Improved Min-Cut Algorithm for Partitioning VLSI Networks,'' </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. 33, </volume> <pages> pp. 438-446, </pages> <year> 1984. </year>
Reference-contexts: This problem has many applications in VLSI circuit design ranging from circuit layout to logic simulation and emulation. The existing partitioning algorithms in the literature can be grouped into two-way partitioning (bipartitioning) algorithms and multi-way partitioning algorithms. The bipartitioning algorithms include the iterative improvement methods <ref> [KeLi70, FiMa82, Kr84, KiGV83] </ref>, the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92].
Reference: [Sa89] <author> Sanchis, L., </author> <title> ``Multiple-Way Network Partitioning,'' </title> <journal> IEEE Trans. on Computers, </journal> <volume> Vol. 38, </volume> <pages> pp. 62-81, </pages> <year> 1989. </year>
Reference-contexts: The bipartitioning algorithms include the iterative improvement methods [KeLi70, FiMa82, Kr84, KiGV83], the graph spectral method [Bo87, HaKa91], and the net-based partitioning method [HaKa92b, CoHK92]. The multi-way partitioning algorithms include the recursive bi-partitioning by Kernighan and Lin [KeLi70], a generalization of the FM-algorithm with lookahead by Sanchis <ref> [Sa89] </ref>, the primal-dual algorithm [YeCL91], and a generalization of the graph spectral-based partitioning method to multi-way ratio-cut by Chan, Schlag, and Zien [ChSZ93]. <p> We use the K-FM partitioning algorithm <ref> [FiMa82, Sa89] </ref> to partition the 1 2 5 7 a c e g j a c e g j a c e g j a c e g j (a) Netlist (NL) (b) Netlist Hypergraph (NH) (c) Net Intersection Graph (NIG) (d) Dual Net Hyper Graph (DNHG) nets into K partitions. <p> Note that HDN is a hypergraph in general. Since we use the K-FM algorithm for net partitioning (see next sub-section), a hypergraph representation presents no problem to us. 3.3. Partition of dual netlist representation After constructing the HDN hypergraph, we use the K-way Fiduccia-Mattheyses (K-FM) algorithm <ref> [FiMA82, Sa89] </ref> to compute a K-way partitioning of HDN to obtain a K-way partitioning of the nets in the original netlist. We want to minimize the number of edges cut in HDN so that the subsequent module contention is easier to solve.
Reference: [YeCL91] <author> Yeh, C. W., C. K. Cheng, and T. T. Lin, </author> <title> ``A General Purpose Multiple-Way Partitioning Algorithm,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: The multi-way partitioning algorithms include the recursive bi-partitioning by Kernighan and Lin [KeLi70], a generalization of the FM-algorithm with lookahead by Sanchis [Sa89], the primal-dual algorithm <ref> [YeCL91] </ref>, and a generalization of the graph spectral-based partitioning method to multi-way ratio-cut by Chan, Schlag, and Zien [ChSZ93].
Reference: [YeCL92] <author> Yeh, C. W., C. K. Cheng, and T. T. Lin, </author> <title> ``A Probabilistic Multicommodity-Flow Solution to Circuit Clustering Problems,'' </title> <booktitle> Int'l Conf. on Computer-Aided Design, </booktitle> <pages> pp. 428-431, </pages> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: To reduce the computational complexity for partitioning very large circuits, cluster-based partitioning methods have been introduced based on various clustering techniques, such as random-walk clustering [CoHK91, HaKa92], multicommodity-flow based clustering <ref> [YeCL92] </ref>, clique based clustering [CoSm93], geometric embedding with min-diameter clustering [AlKa93], and clustering based on maximum fanout-free cones (MFFCs) [CoLB94].
References-found: 18

