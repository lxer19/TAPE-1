URL: ftp://coast.cs.purdue.edu/pub/doc/tools/haller-skey_ISOC.ps.Z
Refering-URL: http://www.cs.purdue.edu/coast/archive/data/categ39.html
Root-URL: http://www.cs.purdue.edu
Title: THE S/KEY TM ONE-TIME PASSWORD SYSTEM The S/KEY system has several advantages compared with other
Author: Neil M. Haller 
Note: Bellcore.  has been in experimental use at Bellcore for two years. It is available by anonymous ftp on the Internet.  
Address: Morristown, New Jersey  
Affiliation: Bellcore  
Abstract: Computing systems have been under increasingly sophisticated attack over the Internet and by using dial-up access ports. One form of attack is eavesdropping on network connections to obtain login id's and passwords of legitimate users. This information is used at a later time to attack the system. We have developed a prototype software system, the S/KEY TM one-time password system, to counter this type of attack and have been using it experimentally for external access to a research computer complex at 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Eugene H. Spafford, </author> <title> The Internet worm program: An analysis. </title> <journal> Computer Communications Review 19(1) </journal> <pages> 17-57, </pages> <month> January </month> <year> 1989. </year>
Reference-contexts: These include guessing poorly chosen passwords, potentially with dictionary attacks; taking advantage of bugs in privileged UNIX system software (an example is the "Morris Worm" of November 1988 that exploited a bug in the Internet finger server <ref> [1] </ref> .), and taking advantage of system configuration errors or poorly chosen system defaults. Properly configured and administered systems are not generally vulnerable to these attacks. Other attacks take advantage of the information that crosses communications networks.
Reference: 2. <author> R. M. Wong, T. A. Berson, R. J. Feiertag, "Polonius: </author> <title> An Identity Authentication System", </title> <booktitle> Proceedings of the 1985 Symposium on Security and Privacy, </booktitle> <pages> pp. 101-107, </pages> <address> Oakland, California, </address> <month> April </month> <year> 1985. </year>
Reference-contexts: The client then uses some computing device to compute a key-based cryptographic function (see below, Secure Hash Functions) of this string and then return the output of this function to the host. The host executes the same function and compares the results. <ref> [2] </ref> A weakness of this system is that the secret keys must be available to the host, and protecting this host becomes a critical link in the security chain. This system can be implemented in software or as a special purpose device to be carried by the client.
Reference: 3. <author> J. G. Steiner, C. Neuman, and J. I. Schiller. </author> <title> Kerberos: An authentication service for open network systems. </title> <booktitle> USENIX Conference Proceedings, </booktitle> <pages> pp. 191-202, </pages> <address> Dallas, Texas, </address> <month> February </month> <year> 1988. </year>
Reference-contexts: The S/KEY system as described here is implemented in software. It is straightforward to convert this system to utilize a portable device, but we have not done so. A notable example of a security protocol is the Kerberos 1 <ref> [3] </ref> authentication system from MIT's project Athena. [4] Kerberos solves the problem of passive eavesdropping within a single computing environment called a realm (multiple realms may be joined).
Reference: 4. <author> Champine, G., Geer, D., and Ruh, W. </author> <title> "Project Athena as a Distributed Computer System", </title> <booktitle> IEEE Computer, </booktitle> <month> September </month> <year> 1990. </year>
Reference-contexts: The S/KEY system as described here is implemented in software. It is straightforward to convert this system to utilize a portable device, but we have not done so. A notable example of a security protocol is the Kerberos 1 [3] authentication system from MIT's project Athena. <ref> [4] </ref> Kerberos solves the problem of passive eavesdropping within a single computing environment called a realm (multiple realms may be joined). This system does not, however, address the problem of access across a network using client software that is unable to fully participate in the Kerberos protocol.
Reference: 5. <author> R. L. Rivest, </author> <title> The MD4 Message-Digest Algorithm, Request For Comments (RFC) 1320, MIT and RSA Data Security, </title> <publisher> Inc., </publisher> <month> April </month> <year> 1992. </year>
Reference-contexts: We have chosen a hash function with 2 64 (about 10 19 values. As the basis of our secure hash function, we chose the MD4 Message Digest algorithm 4 designed by Ronald Rivest <ref> [5] </ref> of RSA Data Security Inc. MD4 accepts an arbitrary number of bits as input and produces 16 bytes of output.
Reference: 6. <author> Leslie Lamport, </author> <title> "Password Authentication with Insecure Communication", </title> <journal> Communications of the ACM 24.11 (November 1981), </journal> <pages> 770-772. - 8 </pages> - 
Reference-contexts: Techniques under study include the encryption or protecting with cryptographic checksums of some or all of every packet of data exchanged. ACKNOWLEDGMENTS The idea behind our system was originally described by Leslie Lamport. <ref> [6] </ref> The specific system described was proposed by Phil Karn who wrote most of the UNIX software. Additional details of the design were contributed by the author and John S. Walden who wrote the initial version of the MS-DOSclient software.
References-found: 6

