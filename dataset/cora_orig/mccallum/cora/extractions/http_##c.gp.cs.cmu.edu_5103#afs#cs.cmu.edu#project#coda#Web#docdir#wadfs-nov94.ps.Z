URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/project/coda/Web/docdir/wadfs-nov94.ps.Z
Refering-URL: http://c.gp.cs.cmu.edu:5103/afs/cs.cmu.edu/project/coda/Web/docs-afs.html
Root-URL: http://www.cs.cmu.edu
Title: An Empirical Study of a Wide-Area Distributed File System  
Author: Mirjana Spasojevic M. Satyanarayanan 
Date: November 9, 1994  
Affiliation: Transarc Corporation  Carnegie Mellon University  
Abstract: The evolution of the Andrew File System (AFS) into a wide-area distributed file system has encouraged collaboration and information dissemination on a much broader scale than ever before. In this paper, we examine AFS as a provider of wide-area file services to over a hundred organizations around the world. We discuss usage characteristics of AFS derived from empirical measurements of the system. Our observations indicate that AFS provides robust and efficient data access in its current configuration, thus confirming its viability as a design point for wide-area distributed file systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Andreessen, M. </author> <type> NCSA Mosaic Technical Summary. </type> <month> February </month> <year> 1993. </year>
Reference-contexts: For example, World-Wide Web provides easy access to hypertext documents. By following pointers in the documents, a user browses the information space using semantic relationships between documents, rather than the physical organization of the information. Graphical browsers like Mosaic <ref> [1] </ref> simplify the task of choosing pointers and provide an uniform view of the information space. While these services demonstrate novel approaches in using and sharing data on the Internet, they rarely address the question of scale. They lack support for caching, replication, location transparency, authentication and protection mechanisms.
Reference: [2] <author> Baker, M.G., Hartman, J.H., Kupfer, M.D., Shirriff, K.W., Ousterhout, J.K., </author> <title> Measurements of a Distributed File System. </title> <booktitle> Proceedings of the Thirteenth ACM Symposium on Operating System Principles, </booktitle> <address> Pacific Grove, CA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: The ability to easily access one's files from any machine enhances a user's mobility within his organization. Although the accessing of someone else's files is not a frequent event (a fact confirmed by many previous studies <ref> [2, 11] </ref>), ease of access once the fl This research was funded by the Advanced Research Project Agency, under contract number MDA972-90-C-0036, ARPA order number 7312.
Reference: [3] <author> Berners-Lee, T., Calliau, R., Luotonen, A., Frystyk Nielsen, H., Secret, A., </author> <title> The World-Wide Web. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 37, No. 8, </volume> <month> August </month> <year> 1994. </year>
Reference-contexts: is the role of a wide-area file system like AFS in the development of information services on the Internet? Over the past several years the community has witnessed the birth of many services that provide remote information retrieval and data sharing|Archie [4], Gopher [9], WAIS [8], and the World-Wide Web <ref> [3] </ref>. The increasing demand for these services demonstrates the value of wide-area information sharing. These services help locate data of interest through browsing and searching. They provide access to not only textual documents, but to audio and video data, as well.
Reference: [4] <author> Emtage, A., Deutsch, P., Archie: </author> <title> An Electronic Directory Service for the Internet. </title> <booktitle> Usenix Conference Proceedings, </booktitle> <month> Winter </month> <year> 1992. </year>
Reference-contexts: 6 Future Role of AFS on the Internet What is the role of a wide-area file system like AFS in the development of information services on the Internet? Over the past several years the community has witnessed the birth of many services that provide remote information retrieval and data sharing|Archie <ref> [4] </ref>, Gopher [9], WAIS [8], and the World-Wide Web [3]. The increasing demand for these services demonstrates the value of wide-area information sharing. These services help locate data of interest through browsing and searching. They provide access to not only textual documents, but to audio and video data, as well.
Reference: [5] <author> Howard, J.H., Kazar, M.L., Menees, S.G., Nichols, D.A., Satyanarayanan, M., Sidebotham, R.N., West, M.J., </author> <title> Scale and Performance in a Distributed File System. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> Vol. 6, No. 1, </volume> <month> February </month> <year> 1988. </year>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients.
Reference: [6] <author> Kazar, </author> <title> M.L., Synchronization and Caching Issues in the Andrew File System. </title> <booktitle> Usenix Conference Proceedings, </booktitle> <month> Winter </month> <year> 1988. </year>
Reference-contexts: Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients. Files and directories are cached on the local disks of clients using a consistency mechanism based on callbacks <ref> [6] </ref>. Directories are cached in their entirety, while files are cached in 64 KB chunks. All updates to a file are propagated to its server upon close. Directory modifications are propagated immediately. Backup, disk quota enforcement, and most other administrative operations in AFS operate on volumes [19].
Reference: [7] <author> Kistler, J., Satyanarayanan, M., </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Trans. on Computer Systems, </journal> <volume> Vol. 10, No. 1, </volume> <month> February </month> <year> 1992. </year>
Reference-contexts: Further, examination of the raw data shows that, on average, 30% of the clients referenced foreign data each day. We also repeated the study originally reported by Kistler and Satyanarayanan <ref> [7] </ref> on the extent of sequential write sharing on directories and files. Every time a user modified an AFS directory or file, the user's identity was compared to that of the user who made the previous modification.
Reference: [8] <author> Kahle, B., Medlar, A., </author> <title> An Information System for Corporate Users: Wide Area Information Servers. </title> <journal> Connexions The Interoperability Report, </journal> <volume> Vol 5, No 11, </volume> <month> Nov </month> <year> 1991. </year>
Reference-contexts: AFS on the Internet What is the role of a wide-area file system like AFS in the development of information services on the Internet? Over the past several years the community has witnessed the birth of many services that provide remote information retrieval and data sharing|Archie [4], Gopher [9], WAIS <ref> [8] </ref>, and the World-Wide Web [3]. The increasing demand for these services demonstrates the value of wide-area information sharing. These services help locate data of interest through browsing and searching. They provide access to not only textual documents, but to audio and video data, as well.
Reference: [9] <author> McCahill, M., </author> <title> The internet Gopher Protocol: A Distributed Server Information System. </title> <journal> Connexions - The Interoperability Report, </journal> <volume> Vol 6, No 7, </volume> <month> July </month> <year> 1992. </year>
Reference-contexts: Role of AFS on the Internet What is the role of a wide-area file system like AFS in the development of information services on the Internet? Over the past several years the community has witnessed the birth of many services that provide remote information retrieval and data sharing|Archie [4], Gopher <ref> [9] </ref>, WAIS [8], and the World-Wide Web [3]. The increasing demand for these services demonstrates the value of wide-area information sharing. These services help locate data of interest through browsing and searching. They provide access to not only textual documents, but to audio and video data, as well.
Reference: [10] <author> Morris, J. H., Satyanarayanan, M., Conner, M.H., Howard, J.H., Rosenthal, D.S. and Smith, F.D. Andrew: </author> <title> A Distributed Personal Computing Environment. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 29, No. 3, </volume> <month> March </month> <year> 1986. </year>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients.
Reference: [11] <author> Ousterhout, J., Da Costa, H., Harrison, D., Kunze, J., Kupfer, M., Thompson, J. </author> <title> A Trace-Driven Analysis of the 4.2BSD File System. </title> <booktitle> Proceedings of the 10th ACM Symposium on Operating System Principles, </booktitle> <month> December, </month> <year> 1985. </year>
Reference-contexts: The ability to easily access one's files from any machine enhances a user's mobility within his organization. Although the accessing of someone else's files is not a frequent event (a fact confirmed by many previous studies <ref> [2, 11] </ref>), ease of access once the fl This research was funded by the Advanced Research Project Agency, under contract number MDA972-90-C-0036, ARPA order number 7312. <p> The collected statistics are summarized in Figure 12. Our data indicates that the most frequently fetched chunks are in the range 1-8KB. These correspond to entire files or directories. This result is consistent with many earlier studies of file size distributions which have reported small average file size <ref> [11, 14] </ref>. The distribution of data transfers on file servers and clients is roughly similar. The results from Section 4.1 indicate that the amount of data housed by active volumes is about 1.5GB per file server.
Reference: [12] <author> Postel, J., Reynolds, J., </author> <title> File Transfer Protocol (FTP). </title> <type> Technical report 959, </type> <institution> USC Information Science Institute, </institution> <month> October </month> <year> 1985. </year>
Reference: [13] <author> Sandberg, R., Goldberg, D., Kleiman, S., Walsh, D., Lyon, B., </author> <title> Design and Implementation of the Sun Network Filesystem. </title> <booktitle> Summer Usenix Conference Proceedings, </booktitle> <year> 1985. </year>
Reference: [14] <author> Satyanarayanan, M., </author> <title> A Study of File Sizes and Functional Lifetimes. </title> <booktitle> Proceedings of the 8th ACM Symposium on Operating System Principles, Asilomar, </booktitle> <month> December </month> <year> 1981. </year>
Reference-contexts: The collected statistics are summarized in Figure 12. Our data indicates that the most frequently fetched chunks are in the range 1-8KB. These correspond to entire files or directories. This result is consistent with many earlier studies of file size distributions which have reported small average file size <ref> [11, 14] </ref>. The distribution of data transfers on file servers and clients is roughly similar. The results from Section 4.1 indicate that the amount of data housed by active volumes is about 1.5GB per file server.
Reference: [15] <author> Satyanarayanan, M., Howard, J.H., Nichols, D.N., Sidebotham, R.N., Spector, A.Z. and West, M.J., </author> <title> The ITC Distributed File System: </title> <booktitle> Principles and Design. Proc. 10th ACM Symposium on Operating System Principles, </booktitle> <month> December </month> <year> 1985. </year>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients.
Reference: [16] <author> Satyanarayanan, M., </author> <title> Integrating Security in a Large Distributed System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 7, No. 3, </volume> <month> August </month> <year> 1989. </year>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients.
Reference: [17] <author> Satyanarayanan, M., </author> <title> Scalable, Secure, and Highly Available Distributed File Access. </title> <journal> IEEE Computer, </journal> <volume> Vol. 23, </volume> <editor> N. </editor> <volume> 5, </volume> <month> May </month> <year> 1990. </year> <month> 22 </month>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients.
Reference: [18] <author> Satyanarayanan, M., </author> <title> The Influence of Scale on Distributed File System Design. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 18, No. 1, </volume> <month> January </month> <year> 1992. </year>
Reference-contexts: this success engenders a new question: "Is the distributed file system paradigm sustainable at very large scale?" In other words, how well can a very large distributed file system meet the goals of simplifying system administration, supporting effective sharing of data, and preserving transparency? Growth brings many problems with it <ref> [18] </ref>: the level of trust between users is lowered; failures tend to be more frequent; administrative coordination is more difficult; performance is degraded. Overall, mechanisms that work well at small scale tend to function less effectively as a system grows.
Reference: [19] <author> Sidebotham, R.N., </author> <title> Volumes: The Andrew File System Data Structuring Primitive. </title> <booktitle> European Unix User Group Conference Proceedings, </booktitle> <month> August </month> <year> 1986. </year>
Reference-contexts: Directories are cached in their entirety, while files are cached in 64 KB chunks. All updates to a file are propagated to its server upon close. Directory modifications are propagated immediately. Backup, disk quota enforcement, and most other administrative operations in AFS operate on volumes <ref> [19] </ref>. A volume is a set of files and directories located on one server and forming a partial subtree of the shared name space. A typical installation has one volume per user, one or more volumes per project, and a number of volumes containing system software.
Reference: [20] <author> Smith, A.J., </author> <title> Analysis of Long Term File Reference Patterns for Application to File Migration Algorithms. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. SE-7, No. 4, </volume> <month> July </month> <year> 1981. </year>
Reference-contexts: The hazard rate drops sharply to around 40% on day 2 and continues to slowly decrease thereafter. This indicates the existence of a set of "hot" volumes which are accessed daily. Earlier studies of file lifetimes and access patterns by Smith <ref> [20, 21] </ref> have found that for a file migration algorithm it is useful to use the time since last reference, the file size, the type of file and the file age.
Reference: [21] <author> Smith, A.J., </author> <title> Long Term File Migration Algorithms. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 24, No. 8, </volume> <month> August </month> <year> 1981. </year>
Reference-contexts: The hazard rate drops sharply to around 40% on day 2 and continues to slowly decrease thereafter. This indicates the existence of a set of "hot" volumes which are accessed daily. Earlier studies of file lifetimes and access patterns by Smith <ref> [20, 21] </ref> have found that for a file migration algorithm it is useful to use the time since last reference, the file size, the type of file and the file age.
Reference: [22] <author> Spasojevic, M., Satyanarayanan, M., </author> <title> A Usage Profile and Evaluation of a Wide-Area Distributed File System. </title> <booktitle> Usenix Conference Proceedings, </booktitle> <month> Winter </month> <year> 1994. </year>
Reference-contexts: Our data spanned 50 file servers and 300 clients from 12 cells in 7 states. Preliminary results from this collection were presented in an earlier paper <ref> [22] </ref>. The data collection code was refined and extended based on the insights gained in this preliminary study. The second round of measurements widened coverage to 70 file servers and over 900 clients from 14 cells. <p> The questionnaire was distributed in two ways: first, by posting on several Netnews bboards; second, by direct mailing to AFS contacts in different cells. We received about 100 responses from 50 cells. A detailed discussion on the results of this questionnaire is presented in our preliminary study <ref> [22] </ref>. Here we summarize the most important findings. The AFS user community consists of a number of academic, government and commercial sites. Consequently, AFS users tend to have a very diverse background. However, responses to our questionnaire came from a technically sophisticated group of respondents.
Reference: [23] <author> Spasojevic, M., Bowman, M., Spector, A., </author> <title> Using a Wide-Area File System Within the World-Wide Web. </title> <booktitle> Proc. of the Second Int. WWW Conference, </booktitle> <month> October </month> <year> 1994. </year>
Reference-contexts: They lack support for caching, replication, location transparency, authentication and protection mechanisms. The dramatic increase in data sharing exposes problems of increased server and network load, high latency, and inadequate security. A recent study on using a wide-area file system within the World-Wide Web <ref> [23] </ref> demonstrates that most of the functionality of the Web service can be implemented by storing documents in AFS. A simple modification in the Web client facilitates retrieving documents, whenever possible, through a wide-area file system. This allows utilization of wide-area file system features in building a more scalable service.
Reference: [24] <author> Spector, A.Z., </author> <title> Thoughts on Large Distributed File Systems. </title> <booktitle> Proc. of the German National Computer Conference, </booktitle> <month> October </month> <year> 1986. </year>
Reference: [25] <author> Spector, A.Z., Kazar, </author> <title> M.L., Wide Area File Service and the AFS Experimental System. </title> <journal> Unix Review, </journal> <volume> Vol. 7, No. 3, </volume> <month> March </month> <year> 1989. </year>
Reference-contexts: While asymptotic limits to growth are inevitable, they do not appear to be just around the corner. 2 2 Background 2.1 Design The rationale, detailed design, and evolution of AFS have been well documented in previous papers <ref> [5, 10, 15, 16, 17, 25] </ref>. In this section, we provide just enough detail of the current version of AFS (AFS-3) to make the rest of the paper understandable. Using a set of trusted servers, AFS presents a location-transparent Unix file name space to clients. <p> Each cell is a completely autonomous environment. But a federation of cells can cooperate in presenting users with a uniform, seamless file name space. The ability to decompose a distributed system into cells simplifies delegation of administrative responsibility <ref> [25] </ref>. As originally designed, AFS was intended for a LAN. However, the RPC protocol currently used in AFS has been designed to perform well both on LANs as well as on wide-area networks.
Reference: [26] <author> Steiner, J.G., Neuman, C., Schiller, J.I., </author> <title> Kerberos: An Authentication Service for Open Network Systems. </title> <booktitle> Usenix Conference Proceedings, </booktitle> <month> Winter </month> <year> 1988. </year>
Reference-contexts: AFS uses an access list mechanism for protection. The granularity of protection is an entire directory rather than individual files. Users may be members of groups, and access lists may specify rights for users and groups. Authentication relies on Kerberos <ref> [26] </ref>. AFS supports multiple administrative cells, each with its own servers, clients, system administrators and users. Each cell is a completely autonomous environment. But a federation of cells can cooperate in presenting users with a uniform, seamless file name space.
Reference: [27] <author> Transarc Corporation, </author> <title> AFS 3.1 Programmer's Reference Manual. </title> <address> FS-00-D180, Pittsburgh, PA, </address> <month> October </month> <year> 1991. </year>
Reference-contexts: the United States at the time of the snapshot. 5 CLIENT CLIENT CLIENT DATA COLLECTOR CENTRAL REPOSITORY WIDE AREA NETWORK LINK SERVER FILE CLIENT CLIENT CLIENT DATA COLLECTOR CENTRAL REPOSITORY WIDE AREA NETWORK LINK SERVER FILE 3.2 Data Collection Mechanism Our measurements were performed via the xstat data collection facility <ref> [27] </ref>. The AFS code was instrumented to allow collection of extended statistics concerning the operation of servers and clients. These statistics could be obtained remotely via an RPC call from any AFS client or server at any time.
References-found: 27

