URL: http://www.cs.utexas.edu/users/diz/llsz.ps
Refering-URL: http://www.cs.utexas.edu/users/diz/pubs.html
Root-URL: 
Title: Efficient construction of a small hitting set for combinatorial rectangles in high dimension  
Author: Nathan Linial Michael Luby Michael Saks David Zuckerman 
Note: Research partially done while visiting the International Computer Science Institute. Research supported in part by a grant from the Israel-USA Binational Science Foundation.  94301. A large portion of this research was done while still at the International Computer Science Institute in Berkeley, California. Research supported in part by National Science Foundation operating grants CCR-9304722 and NCR-9416101, and United States-Israel Binational Science Foundation grant No.  
Address: Jerusalem, Israel.  130 Lytton Avenue, Palo Alto, California  
Affiliation: Hebrew University, Computer Science Department,  DEC/SRC,  
Date: May 28, 1997  92-00226.  
Abstract: fl A preliminary version of this paper appeared in Proceedings of the 25th Annual ACM Sym posium on Theory of Computing, 1993. x Department of Mathematics, Rutgers University, New Brunswick, NJ 08854, USA. Supported in part by NSF under grants CCR-8911388 and CCR-9215293 and by AFOSR grants AFOSR-89-0512 AFOSR-90-0008, and by DIMACS, which is supported by NSF grant STC-91-19999 and by the New Jersey Commission on Science and Technology. Research partially done while visiting the International Computer Science Institute. Department of Computer Sciences, The University of Texas at Austin, Austin, Texas, 78713, USA. Partially supported by NSF NYI Grant No. CCR-9457799. Most of this research was done while the author was at MIT, partially supported by an NSF Postdoctoral Fellowship. Research partially done while visiting the International Computer Science Institute. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> "Deterministic Simulation in LOGSPACE", </title> <booktitle> Proceedings of 19th ACM Symposium on Theory of Computing, </booktitle> <year> 1987, </year> <pages> pp. 132-140. </pages>
Reference-contexts: Now n=2 jN i (A)j jAj (1 + ff=2) i jAj2 (ff=2)i , since 1 + x 2 x for x 2 <ref> [0; 1] </ref>. Thus i 2 ff log n ff (log n ff log i n jAj 1. Similarly j 2 jBj 1. 3 A Lower Bound Before giving our construction, we give a lower bound. <p> Our construction has two main parts. The first part is a construction, based on expander graphs, of an (m; d; *)-hitting set whose size is polynomial in m, 1=*, and 2 d . This construction generalizes one of [17, Zuckerman], which is closely related to a previous construction of <ref> [1, Ajtai,Komlos,Szemeredi] </ref>. This construction is described in Section 5. The inadequacy of this construction for our problem is that the dependence on d is exponential and we want the dependence on d to be logarithmic.
Reference: [2] <author> R. Armoni, M. Saks, A. Wigderson, and S. Zhou, </author> <title> "Discrepancy sets and pseudorandom generators for combinatorial rectangles", </title> <booktitle> Proc. 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: But then S misses the rectangle with f1g in the ith coordinate, f2g in the jth coordinate, and f1; 2g everywhere else, although this rectangle has volume 1=4 &gt; *. To deal with m 3, let : [m] d ! <ref> [2] </ref> d be defined via (x 1 ; : : : ; x d ) = (d2x 1 =me; : : : ; d2x d =me). Let S be an (m; d; *)-hitting set, and consider its image (S) [2] d . <p> To deal with m 3, let : [m] d ! <ref> [2] </ref> d be defined via (x 1 ; : : : ; x d ) = (d2x 1 =me; : : : ; d2x d =me). Let S be an (m; d; *)-hitting set, and consider its image (S) [2] d . As we observed, if j (S)j &lt; log 2 d, then it misses a rectangle R of the form f1g fi f2g fi f1; 2g (in some order of coordinates). But then S misses 1 (R) whose volume is bm=2c dm=2e=m 2 2=9, a contradiction. <p> Building on ideas of the present paper, <ref> [2, Armoni, Saks, Wigderson, Zhou] </ref>, made some progress on this problem. As described in [11, Luby, Velickovic] progress on this problem has also been made using a different approach. See also [8, Kahn, Linial, Samorodnitsky]. <p> As described in [11, Luby, Velickovic] progress on this problem has also been made using a different approach. See also [8, Kahn, Linial, Samorodnitsky]. A somewhat less natural generalization of the discrepancy problem is motivated by the GF <ref> [2] </ref> counting problem considered in [10, Karpinski, Luby] and [12, Luby, Velickovic, Wigderson]: Is there a polynomial time algorithm that on input d, m, *, and k, produces a set S of size at most polynomial in d, m, 1=* and k with the following property: for every set of at <p> of points that are contained in an odd number of the k rectangles has discrepancy at most * with respect to S. (When k = 1 this is again the discrepancy problem.) A solution to this problem would immediately yield a polynomial time deterministic approximation algorithm for the above-mentioned GF <ref> [2] </ref> counting problem. As described in [12], some progress on this problem has been made using a different 23 approach. Acknowledgment The authors are very grateful to Boban Velickovic for discovering a crucial error in the original paper, and to the anonymous referee for a careful reading and very helpful suggestions.
Reference: [3] <author> Carter, J.L., Wegman, </author> <title> M.N., "Universal classes of hash functions", </title> <journal> J. Comput. System Sci. </journal> <note> 18 (1979) pp. 143-154. </note>
Reference: [4] <author> Chor, B., Goldreich, O., </author> <title> "On the Power of Two-Point Based Sampling," </title> <note> Journal of Complexity 5 (1989) pp. 96-106. </note>
Reference-contexts: A randomized algorithm for witness finding that uses O (n) random bits and solves the problem for * = 1=poly (n) was introduced in [9, Karp,Pippenger,Sipser] and [16, Sipser], and subsequently <ref> [4, Chor,Goldreich] </ref> found a substantially simpler randomized algorithm using only 2n random bits (in fact, a simple modification of their procedure reduces this to n bits). Unfortunately, there is no deterministic algorithm for the general witness finding problem.
Reference: [5] <author> Even, G., Goldreich, O., Luby, M., Nisan, N., Boban Velickovic, B., </author> <title> "Approximations of General Independent Distributions", </title> <booktitle> Proceedings of the 24th ACM Symposium on Theory of Computing, </booktitle> <year> 1992. </year>
Reference-contexts: This work was motivated by the problem of finding efficient constructions of small sample spaces that approximate the independent uniform distribution on many multivalued random variables (these can easily be used to simulate non-uniformly distributed random variables, see e.g., <ref> [5, Even, Goldreich, Luby, Nisan, Velickovic] </ref>). Let X = hX 1 ; : : : ; X d i be a sequence of d random variables taking on values in [m]. <p> It is a natural problem to find a set S of points in [0; 1) d which meets every geometric rectangle R with vol (R) *. As noted in <ref> [5] </ref>, this geometric question easily reduces to the combinatorial version we consider here, where m = O (d=*). Solving the combinatorial problem turned out to require many more ideas than a solution to the geometric version. Two constructions given in [5] are comparable to the work described here. <p> As noted in <ref> [5] </ref>, this geometric question easily reduces to the combinatorial version we consider here, where m = O (d=*). Solving the combinatorial problem turned out to require many more ideas than a solution to the geometric version. Two constructions given in [5] are comparable to the work described here. The first is a set S of size (md) O (log (1=*)) and in the second one S has size (md=*) O (log (d)) . There is one aspect in which the constructions of [5] is stronger than those described here: for each <p> Two constructions given in <ref> [5] </ref> are comparable to the work described here. The first is a set S of size (md) O (log (1=*)) and in the second one S has size (md=*) O (log (d)) . There is one aspect in which the constructions of [5] is stronger than those described here: for each combinatorial rectangle R, the fraction of points in S that belong to R is within an additive factor * of vol (R) (so consequently S hits each R with vol (R) * at least once). <p> On the other hand, the construction here improves over the constructions of <ref> [5] </ref> in terms of jSj, and this improvement is more substantial than might first appear. For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in [5] are of size <p> the constructions of <ref> [5] </ref> in terms of jSj, and this improvement is more substantial than might first appear. For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in [5] are of size n O (log (n)) . One of the constructions in [5] is based on Nisan's pseudorandom generator that maps O (log 2 (n)) bits to n O (1) (n) bits and fools any logspace machine [14, Nisan]. <p> For interesting cases of d, m and 1=*, i.e., when all parameter are polynomial in n, we give the first explicit constructions of size polynomial in n. In contrast, the constructions in <ref> [5] </ref> are of size n O (log (n)) . One of the constructions in [5] is based on Nisan's pseudorandom generator that maps O (log 2 (n)) bits to n O (1) (n) bits and fools any logspace machine [14, Nisan]. <p> Combinatorial rectangles may be viewed as a special case of nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in <ref> [5] </ref>. A similar idea gives the n O (log (n)) size universal traversal sequences found in [14], which is the best explicit construction to date. It is important to identify interesting special cases when this n O (log (n)) barrier can be broken, and the size brought down to polynomial. <p> 3 (for the choices of the sets J r ) which is 2 O (k 2 ) = 2 O (k 0 ) and is thus bounded by a polynomial in 1=*. 9 Open Problems The problem considered in this paper was directly motivated by the discrepancy problem stated in <ref> [5] </ref>. The discrepancy problem is the stronger version of the hitting problem, where, instead of hitting each rectangle R with vol (R) * at least once, each rectangle is hit a fraction of times that is within * of its volume.
Reference: [6] <author> Friedman, J., </author> <title> "Constructing O(n log(n)) size monotone formulae for the kth threshold function of n boolean variables", </title> <note> SIAM J. on Computing 15 (1986). </note>
Reference-contexts: What we want is to get the dimension down to O (k 0 ) (which is also O (k 2 )). We will need a more complicated family of functions, one that is similar to a family previously used in [15, Schmidt, Siegel] and <ref> [6, Friedman] </ref>. Look again at Lemma 10. Notice that if we take p 4-([q]) then this implies that there is an f 2 F for which -(B (f )) -([q])=2, i.e., the weight of the elements that are mapped to bad locations is at most half the total weight.
Reference: [7] <author> Gabber, O., Galil, Z., </author> <title> "Explicit constructions of linear-sized superconcentra-tors", </title> <note> Journal of Computer System Science 22 (1981) 407-420. </note>
Reference: [8] <author> Kahn, J., Linial, N., Samorodnitsky, A. "Inclusion-Exclusion: </author> <title> Exact and approximate", </title> <journal> Combinatorica, </journal> <note> in press. </note>
Reference-contexts: Building on ideas of the present paper, [2, Armoni, Saks, Wigderson, Zhou], made some progress on this problem. As described in [11, Luby, Velickovic] progress on this problem has also been made using a different approach. See also <ref> [8, Kahn, Linial, Samorodnitsky] </ref>.
Reference: [9] <author> Karp, R., Pippenger, N. and Sipser, M., </author> <title> "Time-Randomness Tradeoff", </title> <booktitle> presented at the AMS conference on probabilistic computational complexity, </booktitle> <address> Durham, New Hampshire, </address> <year> 1982. </year> <month> 24 </month>
Reference-contexts: Over the past few years, research has centered on designing efficient algorithms for the witness finding problem that use fewer random bits. A randomized algorithm for witness finding that uses O (n) random bits and solves the problem for * = 1=poly (n) was introduced in <ref> [9, Karp,Pippenger,Sipser] </ref> and [16, Sipser], and subsequently [4, Chor,Goldreich] found a substantially simpler randomized algorithm using only 2n random bits (in fact, a simple modification of their procedure reduces this to n bits). Unfortunately, there is no deterministic algorithm for the general witness finding problem.
Reference: [10] <author> Karpinski, M., Luby, M., </author> <title> "Approximating the Number of Solutions to a GF[2] Formula," </title> <note> Journal of Algorithms 14, (1993) pp. 280-287. </note>
Reference-contexts: As described in [11, Luby, Velickovic] progress on this problem has also been made using a different approach. See also [8, Kahn, Linial, Samorodnitsky]. A somewhat less natural generalization of the discrepancy problem is motivated by the GF [2] counting problem considered in <ref> [10, Karpinski, Luby] </ref> and [12, Luby, Velickovic, Wigderson]: Is there a polynomial time algorithm that on input d, m, *, and k, produces a set S of size at most polynomial in d, m, 1=* and k with the following property: for every set of at most k rectangles, the volume
Reference: [11] <author> Luby, M., Velickovic, B., </author> <title> "On Deterministic Approximation of DNF", </title> <booktitle> Proceedings of 23rd ACM Symposium on Theory of Computing, </booktitle> <year> 1991, </year> <pages> pp. 430-438. </pages>
Reference-contexts: Building on ideas of the present paper, [2, Armoni, Saks, Wigderson, Zhou], made some progress on this problem. As described in <ref> [11, Luby, Velickovic] </ref> progress on this problem has also been made using a different approach. See also [8, Kahn, Linial, Samorodnitsky].
Reference: [12] <author> Luby, M., Wigderson, A., and Velickovic, B., </author> <title> "Deterministic Approximate Counting of Depth-2 Circuits", </title> <type> personal communication, </type> <year> 1992. </year>
Reference-contexts: As described in [11, Luby, Velickovic] progress on this problem has also been made using a different approach. See also [8, Kahn, Linial, Samorodnitsky]. A somewhat less natural generalization of the discrepancy problem is motivated by the GF [2] counting problem considered in [10, Karpinski, Luby] and <ref> [12, Luby, Velickovic, Wigderson] </ref>: Is there a polynomial time algorithm that on input d, m, *, and k, produces a set S of size at most polynomial in d, m, 1=* and k with the following property: for every set of at most k rectangles, the volume of the set of <p> As described in <ref> [12] </ref>, some progress on this problem has been made using a different 23 approach. Acknowledgment The authors are very grateful to Boban Velickovic for discovering a crucial error in the original paper, and to the anonymous referee for a careful reading and very helpful suggestions.
Reference: [13] <author> Margulis, G. A., </author> <title> "Explicit construction of concentrators", </title> <address> Problemy Peredaci Informacii 9, </address> <year> (1973) </year> <month> 71-80. </month> <title> (English translation in Problems Inform. Transmission, </title> <year> 1975). </year>
Reference-contexts: We will need: Lemma 2 <ref> [13, Margulis] </ref>,[7, Gabber,Galil] For each integer n that is a perfect square, there is an explicitly constructible (n; 8; ff) expander for ff = (2 p If a; b are vertices, dist G (a; b) is, as usual, the length (number of edges) of the shortest path from a to b.
Reference: [14] <author> Nisan, N., </author> <title> "Pseudorandom Generators for Space-Bounded Computation", </title> <journal> Combinatorica, </journal> <volume> 12 (1992), </volume> <pages> pp. 449-461. </pages>
Reference-contexts: In contrast, the constructions in [5] are of size n O (log (n)) . One of the constructions in [5] is based on Nisan's pseudorandom generator that maps O (log 2 (n)) bits to n O (1) (n) bits and fools any logspace machine <ref> [14, Nisan] </ref>. Combinatorial rectangles may be viewed as a special case of nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in [5]. <p> Combinatorial rectangles may be viewed as a special case of nonuniform logspace tests; hence trying all seeds of Nisan's generator gives the construction in [5]. A similar idea gives the n O (log (n)) size universal traversal sequences found in <ref> [14] </ref>, which is the best explicit construction to date. It is important to identify interesting special cases when this n O (log (n)) barrier can be broken, and the size brought down to polynomial.
Reference: [15] <author> Schmidt, J., Siegel, A., </author> <title> "The Spatial Complexity of oblivious k-probe hash functions", </title> <journal> SIAM Journal on Computing, </journal> <volume> 19 (1990), </volume> <pages> pp. 775-786. </pages>
Reference-contexts: What we want is to get the dimension down to O (k 0 ) (which is also O (k 2 )). We will need a more complicated family of functions, one that is similar to a family previously used in <ref> [15, Schmidt, Siegel] </ref> and [6, Friedman]. Look again at Lemma 10.
Reference: [16] <author> Sipser, M., "Expanders, </author> <title> Randomness, or Time vs. Space," </title> <journal> Journal of Computer and System Sciences 36(1988) p. </journal> <pages> 379-383. </pages>
Reference-contexts: Over the past few years, research has centered on designing efficient algorithms for the witness finding problem that use fewer random bits. A randomized algorithm for witness finding that uses O (n) random bits and solves the problem for * = 1=poly (n) was introduced in [9, Karp,Pippenger,Sipser] and <ref> [16, Sipser] </ref>, and subsequently [4, Chor,Goldreich] found a substantially simpler randomized algorithm using only 2n random bits (in fact, a simple modification of their procedure reduces this to n bits). Unfortunately, there is no deterministic algorithm for the general witness finding problem.
Reference: [17] <author> Zuckerman, D., </author> <title> "Simulating BPP Using a General Weak Random Source," </title> <journal> Al-gorithmica, </journal> <note> to appear. Preliminary version in Proceedings of 32nd IEEE Symposium on Foundations of Computer Science, </note> <year> 1991, </year> <pages> pp. 79-89. 25 </pages>
Reference-contexts: Our construction has two main parts. The first part is a construction, based on expander graphs, of an (m; d; *)-hitting set whose size is polynomial in m, 1=*, and 2 d . This construction generalizes one of <ref> [17, Zuckerman] </ref>, which is closely related to a previous construction of [1, Ajtai,Komlos,Szemeredi]. This construction is described in Section 5. The inadequacy of this construction for our problem is that the dependence on d is exponential and we want the dependence on d to be logarithmic. <p> This generalizes a construction in <ref> [17] </ref>. To describe the construction we need a few definitions.
References-found: 17

