URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-54.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-54.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "When trees collide: an approximation algorithm for the generalized Steiner tree problem on networks," </title> <booktitle> Proceedings of the 23rd Annual ACM Symposium on Theory of Computing (1991), </booktitle> <pages> pp. 134-144. </pages>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem [10, 15, 20, 23] and even some of its generalizations <ref> [1, 6] </ref>, the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem. The performance guarantee is logarithmic. <p> For example, consider the following generalization of the Steiner problem: given a set of pairs of nodes (s i ; t i ), find a minimum-cost subgraph in which each s i is connected to t i . The edge-weighted version of this problem was addressed in <ref> [1] </ref>; the node-weighted version can be approximately solved using the method of this paper. We use a framework due to Goemans and Williamson [6] to formulate problems like that described above.
Reference: [2] <author> P. Berman, </author> <type> personal communication, </type> <year> 1991. </year>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem [10, 15, 20, 23] and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P <ref> [2, 13] </ref>. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem. The performance guarantee is logarithmic. Thus assuming ~ P 6 N P , the accuracy of our approximation is within a constant factor of the best-possible approximation achievable in polynomial time. <p> A set cover is a collection of sets S i whose union is B. The set cover problem is to find a minimum-cost set-cover. Berman <ref> [2] </ref> showed that, in the presence of node-weights, approximating the minimum-cost Steiner tree is as hard as approximating set cover. More specifically, he showed that any instance of set-cover can be formulated as an instance of the node-weighted Steiner tree problem. The reduction is illustrated in Figure 1.
Reference: [3] <author> V. Chvatal, </author> <title> "A greedy heuristic for the set-covering problem," </title> <journal> Math. of OR Vol. </journal> <volume> 4, No. 3, </volume> <pages> pp. </pages> <month> 233-235 </month> <year> (1979). </year>
Reference-contexts: Theorem 1.1 There is a polynomial-time algorithm to approximate the node-weighted Steiner tree prob lem in networks. The performance ratio is 2 ln k, where k is the number of terminals. An example due to Chvatal <ref> [3] </ref> can be adapted to show that the cost of our algorithm's output can be as much as ln k times optimal. Our method can be easily applied to more general node-weighted network-design problems.
Reference: [4] <author> S. E. Dreyfus, and R. A. Wagner, </author> <title> "The Steiner problem in graphs," </title> <journal> Networks, </journal> <volume> vol. 1 (1971), </volume> <pages> pp. 195-207. </pages>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges.
Reference: [5] <author> J. Edmonds, and E. L. Johnson, </author> <title> "Matching, Euler tours and the Chinese postman", </title> <journal> Math. Prog. </journal> <volume> 5, </volume> <year> (1973), </year> <pages> pp. 88-124. </pages>
Reference: [6] <author> M. X. Goemans, and D. P. Williamson, </author> <title> "A general approximation technique for constrained forest problems", </title> <booktitle> Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 307-316. </pages>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem [10, 15, 20, 23] and even some of its generalizations <ref> [1, 6] </ref>, the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem. The performance guarantee is logarithmic. <p> The edge-weighted version of this problem was addressed in [1]; the node-weighted version can be approximately solved using the method of this paper. We use a framework due to Goemans and Williamson <ref> [6] </ref> to formulate problems like that described above. Many network-design problems can be formulated as finding a subgraph of minimum-cost that covers a family of cuts in the graph (the particular family depends on the problem). <p> Many network-design problems can be formulated as finding a subgraph of minimum-cost that covers a family of cuts in the graph (the particular family depends on the problem). For certain families of cuts, the edge-weighted problem can be approximated to within a factor of two <ref> [6] </ref>. We show in Section 5 that the node-weighted variants of these network design problems can also be approximated; the performance is as in Theorem 1.1. 2 The algorithm In this section we describe the algorithm. <p> Thus we can use a 0-1 function f on the set of node-subsets to define a family of cuts: f (S) = 1 whenever (S) is in the family. Goemans and Williamson <ref> [6] </ref> proposed a class of cut-families and showed that they are useful in modeling network design problems such as the point-to-point connection problem. <p> The algorithm reduces the number of active trees in the network by at least one in each iteration, so it eventually terminates and outputs a set of inactive trees as the final solution. Thus each connected component of the solution is inactive. It follows <ref> [6] </ref> that the solution is in fact a cut-cover. The proof of the performance guarantee proceeds as before, except that we define the value of the potential function i to be the number of active trees in the current solution, rather than the number of trees.
Reference: [7] <author> S. L. Hakimi, </author> <title> "Steiner's problem in graphs and its implications," </title> <journal> Networks, </journal> <volume> vol. 1 (1971), </volume> <pages> pp. 113-133. </pages>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges.
Reference: [8] <author> F. K. Hwang and D. S. Richards, </author> <title> "Steiner tree problems," </title> <journal> Networks, </journal> <volume> Vol. 22, No. 1, </volume> <pages> pp. </pages> <month> 55-90 </month> <year> (1992). </year>
Reference-contexts: Thus assuming ~ P 6 N P , the accuracy of our approximation is within a constant factor of the best-possible approximation achievable in polynomial time. The algorithm we propose is only a slight variant of a heuristic proposed by Rayward-Smith and Clare in 1986 <ref> [8, 17, 16] </ref> for the standard edge-weighted Steiner tree problem. The key to our analysis is a decomposition lemma for trees; this lemma may be useful in other contexts as well. We also show how to generalize the algorithm and its analysis to handle more general connectivity requirements.
Reference: [9] <author> D. S. Johnson, </author> <title> "Approximation algorithms for Combinatorial Problems," </title> <journal> J. Comp. System. Sci., </journal> <volume> 9, </volume> <pages> pp. </pages> <month> 256-278 </month> <year> (1974). </year>
Reference: [10] <author> L. Kou, G. Markowsky and L. Berman, </author> <title> "A fast algorithm for Steiner trees," </title> <journal> Acta Informatica, </journal> <volume> vol. 15 (1981), </volume> <pages> pp. 141-145. </pages>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem <ref> [10, 15, 20, 23] </ref> and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem.
Reference: [11] <author> F. T. Leighton and S. Rao, </author> <title> "An approximate max-flow min-cut theorem for uniform multicommodity flow problems with application to approximation algorithms," </title> <booktitle> Proceedings of the 29th Annual IEEE Conference on Foundations of Computer Science (1988), </booktitle> <pages> pp. 422-431. </pages>
Reference-contexts: Also P r j=1 Cost j is exactly the cost of the spider decomposition, which is at most OPT. Substituting in the above equation and simplifying yields h i OP T We now use the above lemma in conjunction with an analysis technique due to Leighton and Rao <ref> [11] </ref> to complete the proof of the performance guarantee. Substituting Equation (4) into (3) and using the inequality h i 2 (h i 1), we get i i1 (1 2OP T If the total number of iterations of the algorithm is p, then p = 0 while p1 2.
Reference: [12] <author> L. Lovasz, </author> <title> "On the Ratio of Optimal Integral and Fractional Covers," </title> <journal> Discrete Math., </journal> <volume> 13, </volume> <pages> pp. </pages> <month> 383-390 </month> <year> (1975). </year>
Reference: [13] <author> C. Lund and M. Yannakakis, </author> <title> "On the Hardness of Approximating Minimization Problems," </title> <type> (manuscript). </type>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem [10, 15, 20, 23] and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P <ref> [2, 13] </ref>. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem. The performance guarantee is logarithmic. Thus assuming ~ P 6 N P , the accuracy of our approximation is within a constant factor of the best-possible approximation achievable in polynomial time. <p> All other nodes and all edges have zero cost. It is easy to check that a Steiner tree for the k + 1 nodes corresponds to a set cover of the same cost, and vice versa. It has recently been proved <ref> [13] </ref> that no polynomial-time approximation algorithm for set-cover achieves an approximation factor smaller than 1 4 ln jBj (unless Deterministic time n polylogn contains NP). By Berman's reduction, the same holds for the node-weighted Steiner tree problem.
Reference: [14] <author> K. Mehlhorn, </author> <title> "A faster approximation algorithm for the Steiner problem in graphs," </title> <journal> Information Processing Letters, </journal> <volume> vol. 27(3) (1988), </volume> <pages> pp. 125-128. </pages>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges.
Reference: [15] <author> J. Plesnik, </author> <title> "A bound for the Steiner tree problem in graphs," </title> <journal> Math. Slovaca, </journal> <volume> vol. 31 (1981), </volume> <pages> pp. 155-163. </pages>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem <ref> [10, 15, 20, 23] </ref> and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem.
Reference: [16] <author> V. J. Rayward-Smith, </author> <title> "The computation of nearly minimal Steiner trees in graphs," </title> <journal> Internat, J. Math. Ed. Sci. Tech., </journal> <volume> 14 (1), </volume> <pages> pp. </pages> <month> 15-23 </month> <year> (1983). </year>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges. <p> Thus assuming ~ P 6 N P , the accuracy of our approximation is within a constant factor of the best-possible approximation achievable in polynomial time. The algorithm we propose is only a slight variant of a heuristic proposed by Rayward-Smith and Clare in 1986 <ref> [8, 17, 16] </ref> for the standard edge-weighted Steiner tree problem. The key to our analysis is a decomposition lemma for trees; this lemma may be useful in other contexts as well. We also show how to generalize the algorithm and its analysis to handle more general connectivity requirements.
Reference: [17] <author> V. J. Rayward-Smith and A. Clare, </author> <title> "On finding Steiner vertices", </title> <journal> Networks, </journal> <volume> 16, </volume> <pages> pp. </pages> <month> 283-294 </month> <year> (1986). </year>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges. <p> Thus assuming ~ P 6 N P , the accuracy of our approximation is within a constant factor of the best-possible approximation achievable in polynomial time. The algorithm we propose is only a slight variant of a heuristic proposed by Rayward-Smith and Clare in 1986 <ref> [8, 17, 16] </ref> for the standard edge-weighted Steiner tree problem. The key to our analysis is a decomposition lemma for trees; this lemma may be useful in other contexts as well. We also show how to generalize the algorithm and its analysis to handle more general connectivity requirements.
Reference: [18] <author> G. Reich and P. Widmayer, </author> <title> "Beyond Steiner's problem: A VLSI oriented generalization," </title> <booktitle> in Proc., 15th International Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <pages> pp. 196-210, </pages> <address> Castle Rolduc, </address> <year> (1989). </year>
Reference-contexts: The goal is to find a minimum-cost arborescence rooted at the distinguished node and spanning the terminals. A transformation of the node-Steiner problem to the directed version was proposed by A. Segev [19]. The group Steiner problem, proposed by Reich and Widmayer <ref> [18] </ref>, arises in VLSI design. In this problem, we are given an undirected edge-weighted graph and a collection of node-subsets, called groups. The goal is to find a minimum-cost connected subgraph containing at least one node from each group.
Reference: [19] <author> A. Segev, </author> <title> "The Node-Weighted Steiner Tree Problem," </title> <journal> Networks, </journal> <volume> Vol. 17, </volume> <pages> pp. 1-17, </pages> <year> (1987). </year>
Reference-contexts: The goal is to find a minimum-cost arborescence rooted at the distinguished node and spanning the terminals. A transformation of the node-Steiner problem to the directed version was proposed by A. Segev <ref> [19] </ref>. The group Steiner problem, proposed by Reich and Widmayer [18], arises in VLSI design. In this problem, we are given an undirected edge-weighted graph and a collection of node-subsets, called groups. The goal is to find a minimum-cost connected subgraph containing at least one node from each group.
Reference: [20] <author> H. Takahashi and A. </author> <title> Matsuyama, " An approximate solution for the Steiner problem in graphs," </title> <journal> Math. Japonica, </journal> <volume> vol. 24 (1980), </volume> <pages> pp. 573-577. </pages>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem <ref> [10, 15, 20, 23] </ref> and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem.
Reference: [21] <author> Pawel Winter, </author> <title> "Steiner problem in networks : a survey," </title> <booktitle> BIT 25 (1985), </booktitle> <pages> pp. 485-496. </pages>
Reference-contexts: Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges. Indeed, Winter's survey <ref> [21] </ref> on the network Steiner problem closes with the sentence, "Further investigation of the vertex-weighted SPN [Steiner problem in networks] is needed." One reason for the dearth of results on the node-weighted variant may be that it is harder than the standard problem.
Reference: [22] <author> Y. F. Wu, P. Widmayer and C. K. Wong, </author> <title> "A faster approximation algorithm for the Steiner problem in graphs," </title> <journal> Acta Informatica, </journal> <volume> vol. 23 (1986), </volume> <pages> pp. 321-331. </pages>
Reference-contexts: 1 Introduction The Steiner problem in networks is a classic hard problem in combinatorial optimization. Much research has been devoted to heuristics for its solution <ref> [4, 7, 14, 16, 17, 22] </ref>. Despite a slew of new approximation algorithms for this problem and some of its variants, no approximation algorithm has been given for perhaps the most natural variant: the node-weighted Steiner tree problem, in which costs can be assigned to nodes as well as edges.
Reference: [23] <author> A. Z. Zelikovsky, </author> <title> "The 11/6-approximation algorithm for the Steiner problem on networks," </title> <institution> Institute of Mathematics, Kishinev, USSR. </institution> <month> 9 </month>
Reference-contexts: Indeed, while constant-factor approximations are known for the standard problem <ref> [10, 15, 20, 23] </ref> and even some of its generalizations [1, 6], the node-weighted version cannot be approximated to within less than a logarithmic factor unless ~ P N P [2, 13]. 1 In this paper, we give the first approximation algorithm for the node-weighted Steiner tree problem.
References-found: 23

