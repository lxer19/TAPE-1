URL: http://choices.cs.uiuc.edu/singhai/Papers/mesh_generation.ps
Refering-URL: http://choices.cs.uiuc.edu/singhai/Papers/triang.html
Root-URL: http://www.cs.uiuc.edu
Email: (singhai@cs.uiuc.edu)  
Title: Optimal Triangulation and Mesh Generation Term paper for  
Author: Ashish Singhai 
Note: cussed.  
Address: UIUC, Urbana IL 61801  
Affiliation: DCS,  
Date: Spring 1994  August 15, 1994  
Pubnum: CS474,  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Bern, H. Edelsbrunner, D. Eppsein, S. Mitchell, and T. S. Tan. </author> <title> Edge-insertion for optimal triangulations. </title> <booktitle> In Proc. Latin American Theoretical Informatics, </booktitle> <year> 1992. </year>
Reference-contexts: It can be used to compute the triangulation which minimizes the maximum angle in time O (n 2 log n) [11]. There is a generalized treatment of edge insertion in <ref> [1] </ref> using the concept of anchor vertices. The idea is that it is not possible to improve a triangulation without inserting a new edge throught the anchor vertex which crosses the triangle edge adjacent to it. In an optimal triangulation, all the vertices are anchor vertices.
Reference: [2] <author> M. Bern and D. Eppstein. </author> <title> Mesh generation and optimal triangulation. </title> <editor> In D.-Z. Du and Frank Hwang, editors, </editor> <booktitle> Computing in Euclidean Geometry, </booktitle> <pages> pages 23-90. </pages> <publisher> World Scientific, </publisher> <year> 1992. </year>
Reference-contexts: A diagonal splits the polygon into two smaller polygons, one on each side, which have the diagonal in common. Lemma 1 Every polygon with more than three sides has a diagonal [9] <ref> [2] </ref>. The above lemma suggests a very simple way of triagulating a polygon, i.e. recursively identifying a diagonal and triangulating the resulting polygons. The algorithm terminates when the lemma does not apply anymore and all the sub-polygons are triangles.
Reference: [3] <author> M. Bern, D. Eppstein, and J. R. Gilbert. </author> <title> Provably good mesh generation. </title> <booktitle> In Proc. 31stIEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 231-241, </pages> <year> 1990. </year>
Reference-contexts: It also guarantees that the circumcenter of the triangles is contained within them and is useful for constructing the dual triangulations. One of the interesting approaches for solving this, and other problems is discussed in <ref> [3] </ref> using Quadtrees. Definition 7 (Quadtree) A quadtree is the recursive subdivision of a square region of the R 2 plane into four smaller squares. Bern et. al. use this approach to solve various problems such as no small angles, no obtuse angles, bounded aspect ratio.
Reference: [4] <author> M. Bern, D. Eppstein, and J. R. Gilbert. </author> <title> Polynomial size non-obtuse triangulation of polygons. </title> <booktitle> In Proc. 7thACM Symposium on Computational Geometry, </booktitle> <pages> pages 342-350, </pages> <address> Vancouver, Canada, </address> <year> 1991. </year>
Reference-contexts: The result is a triangulation with all angles measuring between 30 ffi and 120 ffi . There are many interesting results related to polygons in <ref> [4] </ref> which are summarized below. Theorem 3 An n-vertex polygon can be triangulated with O (n 2 ) non-obtuse triangles. Theorem 4 An n-vertex convex polygon can be triangulated with O (n 1:85 ) non-obtuse triangles.
Reference: [5] <author> B. Chazelle. </author> <title> Triangulating a simple polygon in linear time. </title> <journal> Discrete and Com-puational Geometry, </journal> <volume> 6 </volume> <pages> 485-524, </pages> <year> 1991. </year>
Reference-contexts: lemma 1, discussed in [9] implies an O (n) algorithm for identifying a diagonal in a simple polygon, hence the algorithm described above will run in O (n 2 ) time. 2 Over the years, newer algorithms for this problem have been designed with impro-ved time bounds, the best being <ref> [5] </ref> which runs in O (n) time and is optimal. The dynamic programming approach due to Klincsek [14] can optimize different criteria in triangulations of polygons. More precisely it optmizes decomposable measures.
Reference: [6] <author> L. P. Chew. </author> <title> Guaranteed quality triangular meshes, 1989. </title> <type> Tech. Rep. </type> <institution> TR-89-983. </institution>
Reference-contexts: Another algorithm for producing no small angle triangulations of planar graphs is due to Chew <ref> [6] </ref> which starts with the DT of the input and adds a steiner point at the center of chosen triangles. The result is a triangulation with all angles measuring between 30 ffi and 120 ffi . There are many interesting results related to polygons in [4] which are summarized below.
Reference: [7] <author> B. </author> <title> Delaunay. Sur la sphere vide. </title> <institution> Otdelenie Matematicheskii i Estestvennyka Nauk 7, VII Seria:793-800, </institution> <year> 1934. </year>
Reference-contexts: programming based upon this algorithm, discussed in [17]. 4 Triangulating a Point Set There has been great interest in finding efficient algorithms for constructing triangulations for a point set which optimize certain criterion (or multiple criteria at the same time.) One of the most important constructions is Delaunay Triangulation (DT) <ref> [7] </ref>, which is the dual of Voronoi Diagram. In the following, S denotes the input point set (S R 2 ). <p> An inner edge e is called locally delaunay, if it satisfies the empty circle criterion. It can be shown that if all the edges of a triangulation are locally delaunay, then that triangulation is actually the DT <ref> [7] </ref>. The flip algorithm starts with any triangulation and considers each edge e in turn. The edge e is replaced by the other diagonal of the quadrangle formed by the two triangles containing e if it is not locally delaunay.
Reference: [8] <author> H. Edelsbrunner. </author> <title> Algorithms in combinatorial geometry. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [9] <author> H. Edelsbrunner. </author> <title> class notes for cs474, </title> <month> Spring </month> <year> 1994. </year>
Reference-contexts: A diagonal splits the polygon into two smaller polygons, one on each side, which have the diagonal in common. Lemma 1 Every polygon with more than three sides has a diagonal <ref> [9] </ref> [2]. The above lemma suggests a very simple way of triagulating a polygon, i.e. recursively identifying a diagonal and triangulating the resulting polygons. The algorithm terminates when the lemma does not apply anymore and all the sub-polygons are triangles. The proof of the lemma 1, discussed in [9] implies an <p> a diagonal <ref> [9] </ref> [2]. The above lemma suggests a very simple way of triagulating a polygon, i.e. recursively identifying a diagonal and triangulating the resulting polygons. The algorithm terminates when the lemma does not apply anymore and all the sub-polygons are triangles. The proof of the lemma 1, discussed in [9] implies an O (n) algorithm for identifying a diagonal in a simple polygon, hence the algorithm described above will run in O (n 2 ) time. 2 Over the years, newer algorithms for this problem have been designed with impro-ved time bounds, the best being [5] which runs in O <p> Geometric realization of V S is the Delaunay Triangulation D S of S which is a bijection <ref> [9] </ref>.
Reference: [10] <author> H. Edelsbrunner and Nimish R. Shah. </author> <title> Triangulating topological spaces, </title> <month> January </month> <year> 1994. </year> <type> Tech. Rep. </type> <institution> UIUCDCS-R-94-1848. </institution>
Reference-contexts: The topological notion of triangula tion also includes a homeomorphism between S K and X in addition to the simplicial complex K <ref> [10] </ref>. Each face in the triangulation of a two dimensional domain X R 2 is a triangle except for the outer face. Triangulation being a large area, there are different kinds of problems that exist. <p> D S;X (geometric realization of the nerve N (V S;X ), where V S;X = fV p " X j p 2 Sg) is homeomorphic to X in <ref> [10] </ref>. 6
Reference: [11] <author> H. Edelsbrunner, T. S. Tan, and R. Waupotitsch. </author> <title> A polynomial time algorithm for the minmax angle triangulation. </title> <booktitle> In Proc. 5thACM Symposium on Computational Geometry, </booktitle> <pages> pages 44-52, </pages> <year> 1990. </year>
Reference-contexts: It can be used to compute the triangulation which minimizes the maximum angle in time O (n 2 log n) <ref> [11] </ref>. There is a generalized treatment of edge insertion in [1] using the concept of anchor vertices. The idea is that it is not possible to improve a triangulation without inserting a new edge throught the anchor vertex which crosses the triangle edge adjacent to it.
Reference: [12] <author> D. Eppstein. </author> <title> Approximating the minimum weight triangulation. </title> <booktitle> In Proc. 3rd ACM-SIAM Symposium on Disc. Algorithms, </booktitle> <year> 1992. </year>
Reference-contexts: Bern et. al. also provide a variation of the same algorithm which guarantees that all angles measure within 36 ffi and 80 ffi . It is very interesting that the quadtree algorithm also approximates the minimum weight triangulation as shown in <ref> [12] </ref> Other approaches have also dealt with polygonal regions and planar (straight line) graphs. Note that any algorithm suitable for planar graphs must also work for simple polygons and for polygons with holes. Baker et. al. first sovled the problem of triangulating planar graphs with no small angles.
Reference: [13] <author> S. Fortune. </author> <title> A sweepline algorithm for voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 153-174, </pages> <year> 1987. </year>
Reference-contexts: lower convex hull of the lifted point set, where the lifting map is : (x 1 ; x 2 ) = (x 1 ; x 2 ; x 2 1 + x 2 There are many algorithms available for computing DT in O (n log n) time such as [16] <ref> [13] </ref>. It is also possible to use a three dimensional convex hull algorithm, e.g. [15] and compute the DT using the convex hull of the lifted point set as described above. DT is important because it maximizes the minimum angle, minimizes the maximum circumcircle and minimizes the min-containment circle.
Reference: [14] <author> G. T. Klincsek. </author> <title> Minimal triangulations of polygonal domains. </title> <journal> Ann. Disc. Math., </journal> <volume> 9 </volume> <pages> 121-123, </pages> <year> 1980. </year>
Reference-contexts: The dynamic programming approach due to Klincsek <ref> [14] </ref> can optimize different criteria in triangulations of polygons. More precisely it optmizes decomposable measures. The basic idea is the same as the simple algorithm described above, but during the triangulation of the sub-polygons, the results are remembered for later use.
Reference: [15] <author> F. P. Preparata and S. J. Hong. </author> <title> Convex hulls of finite sets of poins in two and three dimensions. </title> <journal> Communications of the ACM, </journal> <volume> 20 </volume> <pages> 87-93, </pages> <year> 1977. </year>
Reference-contexts: It is also possible to use a three dimensional convex hull algorithm, e.g. <ref> [15] </ref> and compute the DT using the convex hull of the lifted point set as described above. DT is important because it maximizes the minimum angle, minimizes the maximum circumcircle and minimizes the min-containment circle.
Reference: [16] <author> M. I. Shamos and D. Hoey. </author> <title> Closest point problems. </title> <booktitle> In Proc. 16thIEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 151-162, </pages> <year> 1975. </year>
Reference-contexts: the lower convex hull of the lifted point set, where the lifting map is : (x 1 ; x 2 ) = (x 1 ; x 2 ; x 2 1 + x 2 There are many algorithms available for computing DT in O (n log n) time such as <ref> [16] </ref> [13]. It is also possible to use a three dimensional convex hull algorithm, e.g. [15] and compute the DT using the convex hull of the lifted point set as described above. DT is important because it maximizes the minimum angle, minimizes the maximum circumcircle and minimizes the min-containment circle.
Reference: [17] <author> F. F. Yao. </author> <title> Speedup in dynamic programming. </title> <journal> SIAM J. Algebraic and Disc Methods, </journal> <volume> 3 </volume> <pages> 39-46, </pages> <year> 1982. </year> <month> 7 </month>
Reference-contexts: Theorem 1 ([14]) A triagulation of a simple polygon optimizing any decomposable measure can be computed in time O (n 3 ). There are slight improvements in the time bound and the class of problems solvable using dynamic programming based upon this algorithm, discussed in <ref> [17] </ref>. 4 Triangulating a Point Set There has been great interest in finding efficient algorithms for constructing triangulations for a point set which optimize certain criterion (or multiple criteria at the same time.) One of the most important constructions is Delaunay Triangulation (DT) [7], which is the dual of Voronoi Diagram.
References-found: 17

