URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR94443.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: A Serial Implementation of Cuppen's Divide and Conquer Algorithm for the Symmetric Eigenvalue Problem  
Author: Jeffery D Rutter consisted of Profs. J. Demmel, B. Parlett, and R. Fateman. 
Degree: in partial satisfaction of the requirements for the degree Master of Arts in Mathematics in February 1993. The committee in charge  
Note: The author acknowledges the support by subcontract no. 20552402 to Argonne National Laboratory at the University of Chicago, under Department of Energy contract W-31-109-Eng-38, as well as NSF grant ASC-9005933. This thesis was  
Date: February, 1994  submitted  
Address: Berkeley, CA 94720  
Affiliation: Department of Mathematics University of California at Berkeley  
Abstract: This also appears as Computer Science Division Report UCB//CSD-94-799, University of California, Berkeley. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Anderson, Z. Bai, C. Bischof, J. Demmel, J. Dongarra, J. Du Croz, A. Green-baum, S. Hammarling, A. McKenney, S. Ostrouchov, and D. Sorensen. </author> <title> LAPACK Users' Guide, Release 1.0. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1992. </year> <pages> 235 pages. </pages>
Reference-contexts: If this space is available, if the full eigendecomposition is desired, and if either highly optimized BLAS are available or highly clustered eigenvalues are possible, we recommend divide and conquer as the algorithm of choice. The software will soon be available as part of the LAPACK library <ref> [1] </ref>. 1.2. <p> The calling sequence for the main routine sstedc is given in appendix A. The complete software will be available as part of the LAPACK library <ref> [1] </ref>. This chapter is organized in the following fashion: Section 4.1 details the structure of the code with respect to the calculation of the eigensystem of a symmetric tridiagonal matrix. Section 4.2 explains the code used to find only the eigenvalues of a symmetric tridiagonal matrix. <p> Symmetric dense and tridiagonal matrices generated by the LAPACK test code slatms <ref> [1] </ref>. These matrices are of the form U DU T where U is a random orthogonal matrix and D is a diagonal matrix chosen according to a "mode" as follows. Three of the possible six modes were tested.
Reference: [2] <author> ANSI/IEEE, </author> <title> New York. IEEE Standard for Binary Floating Point Arithmetic, </title> <address> Std 754-1985 edition, </address> <year> 1985. </year>
Reference-contexts: All implementations use real single precision IEEE arithmetic <ref> [2] </ref>. The algorithms are compared for speed, accuracy of the eigenvalues and eigenvectors (measured by residuals), and orthogonality of the eigenvectors. We use a variety of dense and tridiagonal test matrices of dimensions from 5 to 1000.
Reference: [3] <author> C. F. Borges and W. B. Gragg. </author> <title> A parallel divide and conquer algorithm for the generalized real symmetric definite tridiagonal eigenproblem. </title> <note> Working Paper, </note> <year> 1992. </year>
Reference-contexts: We use the zero-finder in [14] which is faster and more reliable than the original one in [7] or in <ref> [3] </ref>; see [14] for details. It is also easy to derive an expression for the eigenvectors of T : Lemma 3.0.2 If is an eigenvalue of D + zz T then (D I) 1 z is its eigenvector.
Reference: [4] <author> J.J.M. Cuppen. </author> <title> A divide and conquer method for the symmetric tridiagonal eigenproblem. </title> <journal> Numer. Math., </journal> <volume> 36 </volume> <pages> 177-195, </pages> <year> 1981. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1. <p> RESULTS 1.1. Results This report discusses a serial implementation of Cuppen's divide and conquer algorithm for computing all the eigenvalues and all the eigenvectors of a real symmetric tridiagonal matrix <ref> [4] </ref>. Our implementation incorporates recent improvements of Li [14], Gu and Eisenstat [10], and Kahan [12]. In contrast to earlier implementations, ours is designed to work correctly on the Cray XMP, Cray YMP, Cray C90, Cray 2, and other machines which similarly lack guard digits in their floating point arithmetic. <p> A similar phenomenon occurs if some z i is very small. These observations can save half the work for some matrices. There will be further details on deflation in the next chapter. See <ref> [4, 7, 19, 10] </ref> for more details.
Reference: [5] <author> P. Deift, T. Nanda, and C. Tomei. </author> <title> ODEs and the symmetric eigenvalue problem. </title> <journal> SIAM J. Num. Anal., </journal> <volume> 20(1), </volume> <year> 1983. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1.
Reference: [6] <author> J. Demmel, M. Heath, and H. van der Vorst. </author> <title> Parallel numerical linear algebra. </title> <editor> In A. Iserles, editor, </editor> <booktitle> Acta Numerica, </booktitle> <volume> volume 2. </volume> <publisher> Cambridge University Press, </publisher> <year> 1993. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1.
Reference: [7] <author> J. Dongarra and D. Sorensen. </author> <title> A fully parallel algorithm for the symmetric eigenproblem. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 8(2) </volume> <pages> 139-154, </pages> <month> March </month> <year> 1987. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1. <p> We use the zero-finder in [14] which is faster and more reliable than the original one in <ref> [7] </ref> or in [3]; see [14] for details. It is also easy to derive an expression for the eigenvectors of T : Lemma 3.0.2 If is an eigenvalue of D + zz T then (D I) 1 z is its eigenvector. <p> A similar phenomenon occurs if some z i is very small. These observations can save half the work for some matrices. There will be further details on deflation in the next chapter. See <ref> [4, 7, 19, 10] </ref> for more details.
Reference: [8] <author> G. Golub and C. Van Loan. </author> <title> Matrix Computations. </title> <publisher> Johns Hopkins University Press, </publisher> <address> Baltimore, MD, 2nd edition, </address> <year> 1989. </year>
Reference-contexts: a great deal of deflation, or when k is not much smaller than n. * Bidiagonal Singular Value Decomposition An obvious algorithm for the bidiagonal SVD is to find the eigendecomposition of a symmetric tridiagonal matrix with zero diagonal and the bidiagonal matrix entries strung along the sub- and superdiagonals <ref> [8] </ref>. But this may fail to compute orthogonal singular vectors if the matrix is ill-conditioned. There is an alternative formulation of divide-and-conquer specialized to bidiagonal matrices which is discussed in [11] | one could adapt the the methods in the report to the basic algorithm in [11]. 68 5.6.
Reference: [9] <author> M. Gu. </author> <type> personal communication, </type> <year> 1994. </year>
Reference-contexts: THEORETICAL PERFORMANCE ANALYSIS 67 distributed (slatms, MODE=5) eigenvalues logarithmically distributed (slatms, MODE=5) using the DEC Alpha with Fortran BLAS Chapter 6 Future Work Ideas for extending the usefulness of the divide and conquer code include: * Computing a Subset of the Eigenvectors A recent idea of Gu <ref> [9] </ref> suggests it is possible to compute some subset of the eigenvectors rather than all of them, by a modified version of the divide and conquer path which currently computes eigenvalues only.
Reference: [10] <author> M. Gu and S. Eisenstat. </author> <title> A stable algorithm for the rank-1 modification of the symmetric eigenproblem. </title> <institution> Computer Science Dept. Report YALEU/DCS/RR-916, Yale University, </institution> <month> September </month> <year> 1992. </year> <note> 70 BIBLIOGRAPHY 71 </note>
Reference-contexts: RESULTS 1.1. Results This report discusses a serial implementation of Cuppen's divide and conquer algorithm for computing all the eigenvalues and all the eigenvectors of a real symmetric tridiagonal matrix [4]. Our implementation incorporates recent improvements of Li [14], Gu and Eisenstat <ref> [10] </ref>, and Kahan [12]. In contrast to earlier implementations, ours is designed to work correctly on the Cray XMP, Cray YMP, Cray C90, Cray 2, and other machines which similarly lack guard digits in their floating point arithmetic. <p> These values are used to recompute ^z 1 ; : : : ; ^z n and this ^ z is used to compute the eigenvectors. See <ref> [10] </ref> for more details. The overall efficiency of the algorithm is also significantly aided by deflation, which means that some roots of the secular equation can be found very cheaply. <p> A similar phenomenon occurs if some z i is very small. These observations can save half the work for some matrices. There will be further details on deflation in the next chapter. See <ref> [4, 7, 19, 10] </ref> for more details. <p> I 5 0 2 Q 1 3 1 G T P T 1 0 IXC 4 I 5 A 2 Q 1 Q 3 Q 4 5 @ P T 2 ~ Q 3 1 The idea of distinguishing the columns of Q according to their sparsity structure appears in <ref> [10] </ref>. Since the order of the deflated values is irrelevant to further computation on this problem, P IXC looks like: P IXC = 4 I 5 The dimensions of I are the same as the number of deflated values (i.e. the number of columns in Q 4 ). <p> Each such call solves for one root of the secular equation (stored directly into D) as well as its associated eigenvector (stored temporarily in Q). Once all of the roots have been found, the eigenvectors are modified according to the methods designed by Gu and Eisenstat <ref> [10] </ref> and the rows of this eigenvector matrix are permuted according to premultiplication by P T IXC . <p> Each such call solves for one root of the secular equation as well as its associated eigenvector. Once all of the roots have been found, the eigenvectors are modified according to the methods in <ref> [10] </ref>. This matrix of eigenvectors is stored for use in computing subsequent z-vectors. 7. slaeda calculates the z-vector needed for a rank-one repair problem. Understanding this section of code requires an understanding of the data structure used to store the permutations, Givens rotations, and intermediate eigenvector matrices.
Reference: [11] <author> E. Jessup and D. Sorensen. </author> <title> A divide and conquer algorithm for computing the singular value decomposition of a matrix. </title> <booktitle> In Proceedings of the Third SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <pages> pages 61-66, </pages> <address> Philadel-phia, PA, </address> <year> 1989. </year> <note> SIAM. </note>
Reference-contexts: But this may fail to compute orthogonal singular vectors if the matrix is ill-conditioned. There is an alternative formulation of divide-and-conquer specialized to bidiagonal matrices which is discussed in <ref> [11] </ref> | one could adapt the the methods in the report to the basic algorithm in [11]. 68 5.6. THEORETICAL PERFORMANCE ANALYSIS 69 * Parallelizing Divide and Conquer There are several challenges to overcome to fully exploit the available parallelism in this algorithm. <p> But this may fail to compute orthogonal singular vectors if the matrix is ill-conditioned. There is an alternative formulation of divide-and-conquer specialized to bidiagonal matrices which is discussed in <ref> [11] </ref> | one could adapt the the methods in the report to the basic algorithm in [11]. 68 5.6. THEORETICAL PERFORMANCE ANALYSIS 69 * Parallelizing Divide and Conquer There are several challenges to overcome to fully exploit the available parallelism in this algorithm. First, different nodes in the divide and conquer tree in Figure 3.0.1 may all be done independently.
Reference: [12] <author> W. Kahan. </author> <type> personal communication, </type> <year> 1993. </year>
Reference-contexts: RESULTS 1.1. Results This report discusses a serial implementation of Cuppen's divide and conquer algorithm for computing all the eigenvalues and all the eigenvectors of a real symmetric tridiagonal matrix [4]. Our implementation incorporates recent improvements of Li [14], Gu and Eisenstat [10], and Kahan <ref> [12] </ref>. In contrast to earlier implementations, ours is designed to work correctly on the Cray XMP, Cray YMP, Cray C90, Cray 2, and other machines which similarly lack guard digits in their floating point arithmetic.
Reference: [13] <author> K. Li and T.-Y. Li. </author> <title> An algorithm for symmetric tridiagonal eigenproblems | divide and conquer with homotopy continuation. </title> <journal> SIAM J. Sci. Comp., </journal> <volume> 14(3), </volume> <month> May </month> <year> 1993. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1. <p> The method is compared to the LAPACK implementations of QR iteration (ssteqr), bisection followed by inverse iteration (sstebz and sstein), and root-free QR followed by inverse iteration (ssterf and sstein). Although we did not directly test the algorithms based on homotopies and Laguerre iteration in <ref> [13, 16] </ref>, we believe our testing of both bisection with inverse iteration, as well as root-free QR followed by inverse iteration, will bracket the behavior of these algorithms (this is suggested but not guaranteed by the data in [13, 16], which used different test matrices, so further testing would be of <p> not directly test the algorithms based on homotopies and Laguerre iteration in <ref> [13, 16] </ref>, we believe our testing of both bisection with inverse iteration, as well as root-free QR followed by inverse iteration, will bracket the behavior of these algorithms (this is suggested but not guaranteed by the data in [13, 16], which used different test matrices, so further testing would be of interest). All implementations use real single precision IEEE arithmetic [2]. The algorithms are compared for speed, accuracy of the eigenvalues and eigenvectors (measured by residuals), and orthogonality of the eigenvectors.
Reference: [14] <author> R.-C. Li. </author> <title> Solving the secular equation stably and efficiently. </title> <institution> UC Berkeley Math Dept. </institution> <note> Report, in preparation, </note> <year> 1992. </year>
Reference-contexts: RESULTS 1.1. Results This report discusses a serial implementation of Cuppen's divide and conquer algorithm for computing all the eigenvalues and all the eigenvectors of a real symmetric tridiagonal matrix [4]. Our implementation incorporates recent improvements of Li <ref> [14] </ref>, Gu and Eisenstat [10], and Kahan [12]. In contrast to earlier implementations, ours is designed to work correctly on the Cray XMP, Cray YMP, Cray C90, Cray 2, and other machines which similarly lack guard digits in their floating point arithmetic. <p> Since f () is monotonic on the intervals (d i ; d i+1 ) it is possible to find a version of Newton's method that converges fast and monotonically to each root with a starting point in (d i ; d i+1 ). We use the zero-finder in <ref> [14] </ref> which is faster and more reliable than the original one in [7] or in [3]; see [14] for details. <p> We use the zero-finder in <ref> [14] </ref> which is faster and more reliable than the original one in [7] or in [3]; see [14] for details. It is also easy to derive an expression for the eigenvectors of T : Lemma 3.0.2 If is an eigenvalue of D + zz T then (D I) 1 z is its eigenvector. <p> 1 : k) 2 c + 1 : n; 1 : k) Q2 (b n S (k 1 + 1 : k 1 + k 2 ; 1 : k) S (k 1 + k 2 + 1 : k; 1 : k) 6. slaed4 is a routine described in <ref> [14] </ref>.
Reference: [15] <author> T.-Y. Li and N. H. Rhee. </author> <title> Homotopy algorithm for symmetric eigenvalue problems. </title> <journal> Num. Math., </journal> <volume> 55 </volume> <pages> 265-280, </pages> <year> 1989. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1.
Reference: [16] <author> T.-Y. Li and Z. Zeng. </author> <title> Laguerre's iteration in solving the symmetric tridiagonal eigenproblem a revisit. </title> <institution> Michigan State University preprint, </institution> <year> 1992. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1. <p> The method is compared to the LAPACK implementations of QR iteration (ssteqr), bisection followed by inverse iteration (sstebz and sstein), and root-free QR followed by inverse iteration (ssterf and sstein). Although we did not directly test the algorithms based on homotopies and Laguerre iteration in <ref> [13, 16] </ref>, we believe our testing of both bisection with inverse iteration, as well as root-free QR followed by inverse iteration, will bracket the behavior of these algorithms (this is suggested but not guaranteed by the data in [13, 16], which used different test matrices, so further testing would be of <p> not directly test the algorithms based on homotopies and Laguerre iteration in <ref> [13, 16] </ref>, we believe our testing of both bisection with inverse iteration, as well as root-free QR followed by inverse iteration, will bracket the behavior of these algorithms (this is suggested but not guaranteed by the data in [13, 16], which used different test matrices, so further testing would be of interest). All implementations use real single precision IEEE arithmetic [2]. The algorithms are compared for speed, accuracy of the eigenvalues and eigenvectors (measured by residuals), and orthogonality of the eigenvectors.
Reference: [17] <author> T.-Y. Li, H. Zhang, and X.-H. Sun. </author> <title> Parallel homotopy algorithm for symmetric tridiagonal eigenvalue problem. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 12(3) </volume> <pages> 469-487, </pages> <year> 1991. </year>
Reference-contexts: The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1.
Reference: [18] <author> B. Parlett. </author> <title> The Symmetric Eigenvalue Problem. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1980. </year>
Reference-contexts: Introduction A broad range of applications involve real symmetric eigenproblems <ref> [18] </ref>. Matrices arising in such applications may be dense, irregularly sparse, banded, or even tridiag-onal. <p> The symmetric tridiagonal eigenproblem has been attacked in many different ways, including QR and QL methods, divide and conquer algorithms such as Cuppen's method, Laguerre iteration, Toda flow, Rayleigh quotient iteration, Jacobi's method, homotopy method, and bisection (or another method for find eigenvalues only) with inverse iteration <ref> [18, 6, 4, 7, 5, 17, 13, 15, 16] </ref>. QR is the most commonly used method. In this report we will be comparing Cuppen's divide and conquer method, bisection with inverse iteration, the QR method, and root-free QR with inverse iteration. 1 2 1.1. RESULTS 1.1. <p> Algorithm 2.1.1 The Bisection Algorithm 1. Determine a region which contains all of the eigenvalues: compute all Gersh gorin disks to find an interval containing all n eigenvalues. 2. Compute all eigenvalues to desired accuracy using bisection method. For details on the bisection algorithm, see <ref> [18] </ref>. Inverse iteration is an application of the power method to (A ^ I) 1 , where ^ is one of the computed eigenvalues. The eigenvectors computed by inverse iteration may 5 6 2.3. <p> QR is the standard algorithm for computing all eigenvalues and all eigenvectors. See <ref> [18] </ref> for details. The LAPACK routine which implements the QR algorithm on symmetric tridiag onal matrices is ssteqr. 2.3. Root-Free QR This algorithm is the Pal-Walker-Kahan variant of the QR algorithm [18]. <p> QR is the standard algorithm for computing all eigenvalues and all eigenvectors. See <ref> [18] </ref> for details. The LAPACK routine which implements the QR algorithm on symmetric tridiag onal matrices is ssteqr. 2.3. Root-Free QR This algorithm is the Pal-Walker-Kahan variant of the QR algorithm [18]. It computes all of the eigenvalues of a symmetric tridiagonal matrix using a QR algorithm which 7 does not require the use of square roots.
Reference: [19] <author> D. Sorensen and P. Tang. </author> <title> On the orthogonality of eigenvectors computed by divide-and-conquer techniques. </title> <journal> SIAM J. Num. Anal., </journal> <volume> 28(6) </volume> <pages> 1752-1775, </pages> <year> 1991. </year>
Reference-contexts: A similar phenomenon occurs if some z i is very small. These observations can save half the work for some matrices. There will be further details on deflation in the next chapter. See <ref> [4, 7, 19, 10] </ref> for more details.
Reference: [20] <author> H. Trotter. </author> <title> Eigenvalue distributions of large hermitian matrices: Wigner's semicircle law and a theorem of Kac, Murdock, Szego. </title> <booktitle> Advances in Mathematics, </booktitle> <volume> 54 </volume> <pages> 67-82, </pages> <year> 1984. </year>
References-found: 20

