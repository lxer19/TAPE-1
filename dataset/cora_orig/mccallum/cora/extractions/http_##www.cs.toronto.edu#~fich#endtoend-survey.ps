URL: http://www.cs.toronto.edu/~fich/endtoend-survey.ps
Refering-URL: http://www.cs.toronto.edu/~fich/
Root-URL: http://www.cs.toronto.edu
Title: END-TO-END COMMUNICATION  
Author: Faith E. Fich 
Address: FRANCE  
Affiliation: Department of Computer Science, University of Toronto, CANADA Laboratoire de Recherche en Informatique, Universite de Paris-Sud,  
Abstract: End-to-end communication is the problem of sending a sequence of messages from one processor, the sender, to another processor, the receiver, through an unreliable communication network. This paper surveys positive and negative results concerning deterministic protocols for end-to-end communication in asynchronous networks and presents open questions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Adler and F. Fich, </author> <title> The Complexity of End-to-End Communication in Memoryless Networks, </title> <type> manuscript, </type> <year> 1998. </year>
Reference-contexts: The protocol can be extended to tolerate packet loss and duplication, without storage at intermediate processors, by incorporating a version of the alternating bit protocol along each path, rather than along each link. For end-to-end protocols that do not use any memory at intermediate nodes, Adler and Fich <ref> [1] </ref> have proved lower bounds on the size of packet headers necessary to tolerate packet loss. These lower bounds are expressed as a function of the network topology.
Reference: [2] <author> Y. Afek, H. Attiya, A. Fekete, M. Fischer, N. Lynch, Y. Mansour, D. Wang, and L. Zuck, </author> <title> Reliable Communication Over Unreliable Channels, </title> <journal> JACM, </journal> <volume> vol. 41, no. 6, </volume> <year> 1994, </year> <pages> pages 1267-1297. </pages>
Reference-contexts: It tolerates both packet loss and duplication. With the possibility of packet loss, Fekete and Lynch [14] have proved that there are no correct headerless protocols; thus the alternating bit protocol uses the shortest possible headers. Counting protocols <ref> [2, 26] </ref> are another way to handle packet reordering and loss. They are based on the following observation: Suppose R knows an upper bound b on the number of old packets in the network at a particular time. <p> In these protocols, the value of b depends on the number of packet losses that have occurred. Hence, b and the number of packets successfully transmitted per message can be arbitrarily large. However, Afek et al. <ref> [2] </ref> have proved that any protocol tolerating both packet reordering and loss either requires unbounded sequence numbers or can cause R to receive an unbounded number of packets per message. 3 General Networks For general networks, end-to-end communication is not possible if there is a permanent cut of failed links separating
Reference: [3] <author> Y. Afek, B. Awerbuch, and E. Gafni, </author> <title> Applying Static Network Protocols to Dynamic Networks, </title> <booktitle> 28th FOCS, </booktitle> <year> 1987, </year> <pages> pages 358-370. </pages>
Reference: [4] <author> Y. Afek, B. Awerbuch, E. Gafni, Y. Mansour, A. Rosen, and N. Shavit, </author> <title> Slide-The Key to Polynomial End-to-End Communication, </title> <journal> Journal of Algorithms, </journal> <volume> vol. 22, no. 1, </volume> <year> 1997, </year> <pages> pages 158-186. </pages>
Reference-contexts: For many networks, this quantity may be substantially smaller. The slide protocol <ref> [4] </ref> was designed for networks with bidirectional links that can fail (but not recover). It behaves very differently from sequence number based protocols: No headers are used and intermediate processors do not duplicate or destroy packets.
Reference: [5] <author> Y. Afek and E. Gafni, </author> <title> End-to End Communication in Unreliable Networks, </title> <booktitle> 7th PODC, </booktitle> <year> 1988, </year> <pages> pages 131-148. </pages>
Reference-contexts: Therefore, there must exist a path from S to R (and a path from R to S) such that any packet sent along an edge of the path infinitely many times will be successfully transmitted along that edge infinitely many times. This condition is known as eventual connectivity <ref> [5, 6, 13] </ref>. When links are subject to packet duplication, reordering, and loss, end-to-end communication can be achieved by protocols that use sequence numbers. Each intermediate processor passes on the packets it receives to all of its other neighbours, flooding the network. <p> Any protocol that tolerates only link failures (such as the previous two protocols) can be extended to handle packet loss and duplication by using the alternating bit protocol on every link <ref> [5] </ref>. At each intermediate processor, one bit of storage is required for each in-coming and out-going link, and storage for one packet is needed for each out-going link.
Reference: [6] <author> Y. Afek and E. Gafni, </author> <title> Bootstrap Network Resynchronization, </title> <booktitle> 10th PODC, </booktitle> <year> 1991, </year> <pages> pages 295-307. </pages>
Reference-contexts: Therefore, there must exist a path from S to R (and a path from R to S) such that any packet sent along an edge of the path infinitely many times will be successfully transmitted along that edge infinitely many times. This condition is known as eventual connectivity <ref> [5, 6, 13] </ref>. When links are subject to packet duplication, reordering, and loss, end-to-end communication can be achieved by protocols that use sequence numbers. Each intermediate processor passes on the packets it receives to all of its other neighbours, flooding the network.
Reference: [7] <author> A. Aho, J. Ullman, A. Wyler, and M. </author> <title> Yannakakis, </title> <journal> Comput. Math. Appl., </journal> <volume> vol. 8, </volume> <year> 1982, </year> <pages> pages 205-214. </pages>
Reference-contexts: End-to-end communication has been studied in other settings, such as synchronous models (where the time for a packet to traverse a link is fixed and the same for all links) <ref> [7] </ref>, semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) [29, 24], and models where faults and/or packet delivery times are probabilistic [20, 21]. 1 Randomized protocols that allow a small probability of error have also been considered [17].
Reference: [8] <author> B. Awerbuch and S. </author> <title> Even, Reliable Broadcast Protocols in Unreliable Networks, </title> <journal> Networks, </journal> <volume> vol. 16, </volume> <year> 1986, </year> <pages> pages 381-396. </pages>
Reference-contexts: To avoid having one message generate an infinite number of packets (in networks with cycles), each intermediate processor also 2 remembers the largest sequence number it has seen and only forwards packets with that sequence number <ref> [8, 27] </ref>. An alternative method to limit the number of packets in the network is to add a hop count to the packet headers [22]. Each time a packet is forwarded along an edge, its hop count is incremented.
Reference: [9] <author> B. Awerbuch, O. Goldreich, and A. Herzberg, </author> <title> A Quantitative Approach to Dynamic Networks, </title> <booktitle> 9th PODC, </booktitle> <year> 1990, </year> <pages> 189-203. </pages>
Reference: [10] <author> B. Awerbuch, Y. Mansour, and N. Shavit, </author> <title> Polynomial End to End Communication, </title> <booktitle> 30th FOCS, </booktitle> <year> 1989, </year> <pages> pages 358-363. </pages>
Reference: [11] <author> B. Awerbuch, B. Patt-Shamir, and G. Varghese, </author> <title> Self-stabilizing End-to-End Communication, </title> <journal> Journal of High Speed Networks, </journal> <volume> vol. 5, no. 4, </volume> <year> 1996, </year> <pages> pages 365-381. </pages>
Reference: [12] <author> K. Bartlett, R. Scantlebury, and P. Wilkinson, </author> <title> A Note on Reliable, Full-Duplex Transmission over Half-Duplex Links, </title> <journal> CACM, </journal> <volume> vol. 12, </volume> <year> 1969, </year> <pages> pages 260-261. </pages>
Reference-contexts: Unfortunately, in this protocol, the length of packet headers grows without bound. However, Wang and Zuck [28] have shown that any protocol tolerating both packet reordering and duplication requires unbounded sequence numbers. The alternating bit protocol <ref> [12, 20] </ref> uses single bit headers: the least significant bit of the sequence number. It tolerates both packet loss and duplication. With the possibility of packet loss, Fekete and Lynch [14] have proved that there are no correct headerless protocols; thus the alternating bit protocol uses the shortest possible headers.
Reference: [13] <author> S. Dolev and J. Welch, </author> <title> Crash Relient Communication in Dynamic Networks, </title> <journal> IEEE Transactions of Computers, </journal> <volume> vol. 46, </volume> <year> 1997, </year> <pages> pages 14-26. </pages>
Reference-contexts: Therefore, there must exist a path from S to R (and a path from R to S) such that any packet sent along an edge of the path infinitely many times will be successfully transmitted along that edge infinitely many times. This condition is known as eventual connectivity <ref> [5, 6, 13] </ref>. When links are subject to packet duplication, reordering, and loss, end-to-end communication can be achieved by protocols that use sequence numbers. Each intermediate processor passes on the packets it receives to all of its other neighbours, flooding the network. <p> The idea is to treat each simple S-R path separately. First, suppose that only link failures can occur. Then, for each message, S sends a packet containing the message along each simple S-R path, using the index of the path as a packet header. Dolev and Welch <ref> [13] </ref> combine this approach with bounded sequence numbers to obtain a protocol with O (log p) bit headers, where p is the number of simple paths in the network from S to R. storage at S.
Reference: [14] <author> A. Fekete and N. Lynch, </author> <title> The Need for Headers: An Impossibility Result for Communication over Unreliable Channels, </title> <booktitle> CONCUR '90, Lecture Notes in Computer Science, </booktitle> <volume> vol. 458, </volume> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pages 199-215. </pages>
Reference-contexts: The alternating bit protocol [12, 20] uses single bit headers: the least significant bit of the sequence number. It tolerates both packet loss and duplication. With the possibility of packet loss, Fekete and Lynch <ref> [14] </ref> have proved that there are no correct headerless protocols; thus the alternating bit protocol uses the shortest possible headers. Counting protocols [2, 26] are another way to handle packet reordering and loss.
Reference: [15] <author> A. Fekete, N. Lynch, Y. Mansour, and J. Spinelli, </author> <title> The Impossibility of Implementing Reliable Communication in the Face of Crashes, </title> <journal> JACM, </journal> <volume> vol. 40, no. 5, </volume> <year> 1993, </year> <pages> pages 1087-1107. </pages>
Reference: [16] <author> F. Fich and A. Rosen, </author> <type> manuscript, </type> <year> 1997. </year>
Reference-contexts: Instead of counting the number of hops a packet has travelled, it suffices to identify a feedback vertex set (a set of vertices, at least one of which must appear in every cycle) and count until the number of visits to processors in this set exceeds the set's cardinality <ref> [16] </ref>. For many networks, this quantity may be substantially smaller. The slide protocol [4] was designed for networks with bidirectional links that can fail (but not recover). It behaves very differently from sequence number based protocols: No headers are used and intermediate processors do not duplicate or destroy packets.
Reference: [17] <author> O. Goldreich, A. Herzberg, and Y. Mansour, </author> <title> Source to Destination Communication in the Presence of Faults, </title> <booktitle> 8th PODC, </booktitle> <year> 1989, </year> <pages> pages 85-101. 5 </pages>
Reference-contexts: all links) [7], semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) [29, 24], and models where faults and/or packet delivery times are probabilistic [20, 21]. 1 Randomized protocols that allow a small probability of error have also been considered <ref> [17] </ref>. These are all beyond the scope of this survey. 2 Networks with No Intermediate Nodes The simplest interconnection network of interest consists of two processors with one link going from each processor to the other processor.
Reference: [18] <author> A. Herzberg, </author> <title> Connection-Based Communication in Dynamic Networks, </title> <booktitle> 11th PODC, </booktitle> <year> 1992, </year> <pages> pages 13-24. </pages>
Reference: [19] <author> E. Kushilevitz, R. Ostrovsky, and A. Rosen, </author> <title> Log-Space Polynomial End-to-End Communication, </title> <booktitle> 28th STOC, </booktitle> <year> 1995, </year> <pages> pages 559-568. </pages>
Reference-contexts: Because the number of packets in the network is always bounded above by a polynomial in n, R can use the counting protocol approach to determine the next message to output. Kushilevitz, Ostrovsky, and Rosen <ref> [19] </ref> improve this protocol by having different packets cancel one another, producing empty packets. Only one packet is stored at each intermediate processor.
Reference: [20] <author> R. Ladner, A. LaMarca, and E. Tempero, </author> <title> Counting Protocols for Reliable End-to-End Transmission, </title> <journal> JCSS, </journal> <volume> vol. 56, no. 1, </volume> <year> 1998, </year> <pages> pages 96-111. </pages>
Reference-contexts: (where the time for a packet to traverse a link is fixed and the same for all links) [7], semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) [29, 24], and models where faults and/or packet delivery times are probabilistic <ref> [20, 21] </ref>. 1 Randomized protocols that allow a small probability of error have also been considered [17]. <p> Unfortunately, in this protocol, the length of packet headers grows without bound. However, Wang and Zuck [28] have shown that any protocol tolerating both packet reordering and duplication requires unbounded sequence numbers. The alternating bit protocol <ref> [12, 20] </ref> uses single bit headers: the least significant bit of the sequence number. It tolerates both packet loss and duplication. With the possibility of packet loss, Fekete and Lynch [14] have proved that there are no correct headerless protocols; thus the alternating bit protocol uses the shortest possible headers.
Reference: [21] <author> Y. Mansour and B. Schieber, </author> <title> The Intractability of Bounded Protocols for On-Line Sequence Transmission Over Unreliable Channels, </title> <journal> JACM, </journal> <volume> vol. 39, no. 4, </volume> <year> 1992, </year> <pages> pages 783-799. </pages>
Reference-contexts: (where the time for a packet to traverse a link is fixed and the same for all links) [7], semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) [29, 24], and models where faults and/or packet delivery times are probabilistic <ref> [20, 21] </ref>. 1 Randomized protocols that allow a small probability of error have also been considered [17].
Reference: [22] <author> J. Postel, </author> <title> Internet Protocol, Network Working Group Request for Comments 791, </title> <month> September </month> <year> 1981. </year>
Reference-contexts: An alternative method to limit the number of packets in the network is to add a hop count to the packet headers <ref> [22] </ref>. Each time a packet is forwarded along an edge, its hop count is incremented. A packet is destroyed whenever its hop count exceeds the number of processors in the network or the length of the longest simple path between S and R.
Reference: [23] <author> M. Stenning, </author> <title> A Data Transfer Protocol, </title> <journal> Computer Net., </journal> <volume> vol. 1, </volume> <year> 1976, </year> <pages> pages 99-110. </pages>
Reference-contexts: This variant eliminates the problem of packet reordering by not putting more than one packet on a link at a time. Packet loss, duplication, and reordering can all be tolerated using sequence numbers <ref> [23] </ref>. Essentially, S sends the i'th message in a packet with header i and keeps sending it until receiving an acknowledgement packet with header i from R. Then S proceeds to the next message.
Reference: [24] <author> C. Sunshine and Y. Dalal, </author> <title> Connection Management in Transport Protocols, </title> <journal> Computer Net., </journal> <volume> vol. 2, </volume> <year> 1978, </year> <pages> pages 454-473. </pages>
Reference-contexts: End-to-end communication has been studied in other settings, such as synchronous models (where the time for a packet to traverse a link is fixed and the same for all links) [7], semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) <ref> [29, 24] </ref>, and models where faults and/or packet delivery times are probabilistic [20, 21]. 1 Randomized protocols that allow a small probability of error have also been considered [17].
Reference: [25] <author> A. Tanenbaum, </author> <title> Computer Networks, Third Edition, </title> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: However, networks, especially large networks, are subject to faults, for example, message loss, link failures, and processor crashes. Because of their complexity, communication networks are usually built in a sequence of layers <ref> [25] </ref>. At each layer (above the physical layer), there is a protocol that uses the services provided by the layer below to provide better or more complicated services to the layer above. This may introduce other sorts of faults, for example, message duplication or reordering.
Reference: [26] <author> E. Tempero and R. Ladner, </author> <title> Recoverable Sequence Transmission Protocols, </title> <journal> JACM, </journal> <volume> vol. 42, no. 5, </volume> <year> 1995, </year> <pages> pages 1059-1090. </pages>
Reference-contexts: It tolerates both packet loss and duplication. With the possibility of packet loss, Fekete and Lynch [14] have proved that there are no correct headerless protocols; thus the alternating bit protocol uses the shortest possible headers. Counting protocols <ref> [2, 26] </ref> are another way to handle packet reordering and loss. They are based on the following observation: Suppose R knows an upper bound b on the number of old packets in the network at a particular time.
Reference: [27] <author> U. Vishkin, </author> <title> A Distributed Orientation Algorithm, </title> <journal> IEEE Trans. on Information Theory, </journal> <volume> vol. 29, </volume> <year> 1983, </year> <pages> pages 624-629. </pages>
Reference-contexts: To avoid having one message generate an infinite number of packets (in networks with cycles), each intermediate processor also 2 remembers the largest sequence number it has seen and only forwards packets with that sequence number <ref> [8, 27] </ref>. An alternative method to limit the number of packets in the network is to add a hop count to the packet headers [22]. Each time a packet is forwarded along an edge, its hop count is incremented.
Reference: [28] <author> D. Wang and L. Zuck, </author> <title> Tight Bounds for the Sequence Transmission Problem, </title> <booktitle> 8th PODC, </booktitle> <year> 1989, </year> <pages> pages 73-83. </pages>
Reference-contexts: Then S proceeds to the next message. Similarly, R continues to send the same acknowledgement until it receives a packet containing the next message. Unfortunately, in this protocol, the length of packet headers grows without bound. However, Wang and Zuck <ref> [28] </ref> have shown that any protocol tolerating both packet reordering and duplication requires unbounded sequence numbers. The alternating bit protocol [12, 20] uses single bit headers: the least significant bit of the sequence number. It tolerates both packet loss and duplication.
Reference: [29] <author> D. Wang and L. Zuck, </author> <title> Real-Time Sequence Transmission Problem 10th PODC, </title> <booktitle> 1991, </booktitle> <pages> pages 111-124. </pages>
Reference-contexts: End-to-end communication has been studied in other settings, such as synchronous models (where the time for a packet to traverse a link is fixed and the same for all links) [7], semi-synchronous models (where there is a known upper bound on the time for a packet to traverse a link) <ref> [29, 24] </ref>, and models where faults and/or packet delivery times are probabilistic [20, 21]. 1 Randomized protocols that allow a small probability of error have also been considered [17].
References-found: 29

