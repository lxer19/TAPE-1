URL: http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume5/gerevini96a.ps.Z
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/gerevini96a.html
Root-URL: 
Email: gerevini@ing.unibs.it  schubert@cs.rochester.edu  
Title: Accelerating Partial-Order Planners: Some Techniques for Effective Search Control and Pruning  
Author: Alfonso Gerevini Lenhart Schubert 
Address: Via Branze 38, I-25123 Brescia, Italy  Rochester, NY 14627-0226, USA  
Affiliation: Dipartimento di Elettronica per l'Automazione, Universita di Brescia  Department of Computer Science, University of Rochester  
Note: Journal of Artificial Intelligence Research 5 (1996) 95-137 Submitted 3/96; published 9/96  
Abstract: We propose some domain-independent techniques for bringing well-founded partial-order planners closer to practicality. The first two techniques are aimed at improving search control while keeping overhead costs low. One is based on a simple adjustment to the default A* heuristic used by ucpop to select plans for refinement. The other is based on preferring "zero commitment" (forced) plan refinements whenever possible, and using LIFO prioritization otherwise. A more radical technique is the use of operator parameter domains to prune search. These domains are initially computed from the definitions of the operators and the initial and goal conditions, using a polynomial-time algorithm that propagates sets of constants through the operator graph, starting in the initial conditions. During planning, parameter domains can be used to prune nonviable operator instances and to remove spurious clobbering threats. In experiments based on modifications of ucpop, our improved plan and goal selection strategies gave speedups by factors ranging from 5 to more than 1000 for a variety of problems that are nontrivial for the unmodified version. Crucially, the hardest problems gave the greatest improvements. The pruning technique based on parameter domains often gave speedups by an order of magnitude or more for difficult problems, both with the default ucpop search strategy and with our improved strategy. The Lisp code for our techniques and for the test problems is provided in on-line appendices.
Abstract-found: 1
Intro-found: 1
Reference: <author> Allen, J., & Schubert, L. </author> <year> (1991). </year> <title> The TRAINS project. </title> <type> Tech. rep. 382, </type> <institution> Dept. of Computer Science, Univ. of Rochester, Rochester, NY. </institution> <note> Also slightly revised as Language and discourse in the TRAINS project, </note> <editor> in A. Ortony, J. Slack, and O. Stock (eds.), </editor> <title> Communication from an Artificial Intelligence Perspective: </title> <publisher> Theoretical Springer-Verlag, Heidelberg, </publisher> <pages> pp. 91-120. </pages>
Reference: <author> Allen, J., Schubert, L., Ferguson, G., Heeman, P., Hwang, C., Kato, T., Light, M., Martin, N., Miller, B., Poesio, M., & Traum, B. </author> <year> (1995). </year> <title> The TRAINS project: A case study in building a conversational planning agent. </title> <journal> Experimental and Theoretical Artificial Intelligence, </journal> <volume> 7, </volume> <pages> 7-48. </pages>
Reference: <author> Barrett, A., Golden, K., Penberthy, S., & Weld, D. </author> <year> (1994). </year> <title> UCPOP user's manual. </title> <type> Tech. rep. </type> <institution> 93-09-06, Dept. of Computer Science and Engineering, University of Washington, </institution> <address> Seattle, WA 98105. </address>
Reference-contexts: These are conditions that are not state-dependent (e.g., a numerical relation like (add-one ?x ?y), or a geometrical one like (loc-in-room ?x ?y ?room)) and are established by Lisp functions <ref> (Barrett et al., 1994) </ref>. <p> Very recently this implementation has also been packaged into ucpop 4.0, a new version of ucpop which is available by anonymous ftp to cs.washington.edu. 3. Experiments Using UCPOP In order to test our ideas we modified version 2.0 of ucpop <ref> (Barrett et al., 1994) </ref>, replacing its default plan-selection strategy (S+OC+UC) and goal-selection strategy (LIFO) to incorporate strategies discussed in the previous sections.
Reference: <author> Blum, A., & Furst, M. </author> <year> (1995). </year> <title> Fast planning through planning graph analysis. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pp. </pages> <address> 1636-1642 Montreal, CA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Chapman, D. </author> <year> (1987). </year> <title> Planning for conjunctive goals. </title> <journal> Artificial Intelligence, </journal> <volume> 32 (3), </volume> <pages> 333-377. </pages>
Reference-contexts: A state-of-the-art example of such a planner is ucpop (Barrett et al., 1994; Penberthy & Weld, 1992), whose intellectual ancestry includes strips (Fikes & Nilsson, 1971), tweak <ref> (Chapman, 1987) </ref>, and snlp (McAllester & Rosenblitt, 1991). Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe (Wilkins, 1988), prs (Georgeff & Lansky, 1987), or O-Plan (Currie & Tate, 1991).
Reference: <author> Currie, K., & Tate, A. </author> <year> (1991). </year> <title> O-Plan: The open planning architecture. </title> <journal> Artificial Intelli gence, </journal> <volume> 51 (1). </volume>
Reference-contexts: Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe (Wilkins, 1988), prs (Georgeff & Lansky, 1987), or O-Plan <ref> (Currie & Tate, 1991) </ref>. However, there appear to be ample opportunities for bringing well-founded planners closer to practicality.
Reference: <author> Fikes, R., & Nilsson, N. </author> <year> (1971). </year> <title> STRIPS: A new approach to the application of theorem proving to problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 2, </volume> <pages> 189-208. </pages>
Reference-contexts: 1. Introduction We are concerned here with improving the performance of "well-founded" domain-independ-ent planners planners that permit proofs of soundness, completeness, or other desirable theoretical properties. A state-of-the-art example of such a planner is ucpop (Barrett et al., 1994; Penberthy & Weld, 1992), whose intellectual ancestry includes strips <ref> (Fikes & Nilsson, 1971) </ref>, tweak (Chapman, 1987), and snlp (McAllester & Rosenblitt, 1991). Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe (Wilkins, 1988), prs (Georgeff & Lansky, 1987), or O-Plan (Currie & Tate, 1991).
Reference: <author> Georgeff, M., & Lansky, A. </author> <year> (1987). </year> <title> Reactive reasoning and planning. </title> <booktitle> In Proceedings of the Sixth National Conference of the American Association for Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 677-682 Seattle, WA. </address> <publisher> Morgan Kaufmann. 135 Gerevini & Schubert Gerevini, </publisher> <editor> A., & Schubert, L.K. </editor> <year> (1995). </year> <title> Computing parameter domains as an aid to planning. </title> <booktitle> In Proc. of the 3rd Int. Conf. on Artificial Intelligence Planning Systems (AIPS-96), </booktitle> <pages> pp. </pages> <address> 94-101 Menlo Park, CA. </address> <publisher> The AAAI Press. </publisher>
Reference-contexts: Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe (Wilkins, 1988), prs <ref> (Georgeff & Lansky, 1987) </ref>, or O-Plan (Currie & Tate, 1991). However, there appear to be ample opportunities for bringing well-founded planners closer to practicality.
Reference: <author> Goldszmidt, M., Darwiche, A., Chavez, T., Smith, D., & White, J. </author> <year> (1994). </year> <title> Decision-theory for crisis management. </title> <type> Tech. rep. </type> <institution> RL-TR-94-235, Rome Laboratory. </institution>
Reference: <author> Green, C. </author> <year> (1969). </year> <title> Application of theorem proving to problem solving. </title> <booktitle> In Proceedings of the First International Joint Conference on Artificial Intelligence (IJCAI-69), </booktitle> <pages> pp. 219-239. </pages>
Reference-contexts: In the case of T of H, we added a 3-operator version to the ucpop single-operator version, since T of H is a particularly hard problem for ucpop and its difficulty has long been known to be sensitive to the formalization (e.g., <ref> (Green, 1969) </ref>). Fixa is a problem from Dan Weld's "fridge domain", in which the compressor in the fridge is to be exchanged, requiring unscrewing several screws, stopping the fridge, removing the backplane, and making the exchange.
Reference: <author> Joslin, D. </author> <year> (1995). </year> <type> Personal communication. </type>
Reference-contexts: This was with *d-sep* turned off, which is the implicit setting in LCFR <ref> (Joslin, 1995) </ref>. In our experiments we also tested a variant of LCFR, where the switch is forced to be on. The resulting goal strategy in combination with our plan strategy S+OC performed significantly better for T-of-H1, solving the problem generating/exploring 7423/6065 plans, and using 110.45 CPU seconds. <p> Note also that a comparison of our implementation of LCFR and Joslin & Pollack's implementation used for the experiments discussed in (Joslin & Pollack, 1994) showed that our implementation is considerably faster <ref> (Joslin, 1995) </ref>. 11. In their experiments tw-2, the easiest among tw-2-6, was not solved by ucpop even when allowed to run for over eight hours. On the other hand, ucpop using LCFR solves tw-6, the hardest problem, without ever reaching a dead-end node in the search tree. 12.
Reference: <author> Joslin, D., & Pollack, M. </author> <year> (1994). </year> <title> Least-cost flaw repair: a plan refinement strategy for partial-order planning. </title> <booktitle> In Proceedings of the Twelfth National Conference of the American Association for Artificial Intelligence (AAAI-94), </booktitle> <pages> pp. </pages> <address> 1004-1009 Seattle, WA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: As evidence that the effectiveness of using parameter domains in combination with our search strategy is not dependent on some peculiarity of the latter, we also include some results for ucpop's default strategy, Joslin and Pollack's "least cost flaw repair" (LCFR) strategy <ref> (Joslin & Pollack, 1994) </ref> and for Peot and Smith's "least commitment" (LC) open condition selection strategy (Peot & Smith, 1993) in Section 5. In Section 6, we state our conclusions, comment on some related work and mention possible extensions of our techniques. 2. <p> on several problems in the ucpop suite, emphasizing those that had proved most challenging for previous strategies, on some artificial problems due to Kambhampati et al. (1995), in the trains transportation domain developed in Rochester (Allen & Schubert, 1991; Allen et al., 1995), and in Joslin & Pollack's TileWorld domain <ref> (Joslin & Pollack, 1994) </ref>. We briefly describe the test problems and the platforms and parameter settings we used, and then present the experimental results for our improved search strategies. 6. 2. and 3. are zero-commitment choices. <p> The resulting goal strategy in combination with our plan strategy S+OC performed significantly better for T-of-H1, solving the problem generating/exploring 7423/6065 plans, and using 110.45 CPU seconds. Note also that a comparison of our implementation of LCFR and Joslin & Pollack's implementation used for the experiments discussed in <ref> (Joslin & Pollack, 1994) </ref> showed that our implementation is considerably faster (Joslin, 1995). 11. In their experiments tw-2, the easiest among tw-2-6, was not solved by ucpop even when allowed to run for over eight hours. <p> In our second round of experiments, we tested the effectiveness of the parameter domain technique in combination with our improved search strategy, i.e., S+OC/ZLIFO. In addition, we combined S+OC with LCFR (least cost flaw selection) <ref> (Joslin & Pollack, 1994) </ref>, so (or when-clause). We then find corresponding (partially bound) effects, and add any new effects to the list of predications still to be propagated.
Reference: <author> Kambhampati, S., Knoblock, C. A., & Yang, Q. </author> <year> (1995). </year> <title> Planning as refinement search: A unified framework for evaluating design tradeoff in partial-order planning. </title> <journal> Artificial Intelligence. Special Issue on Planning and Scheduling, </journal> <pages> 76 (1-2). </pages>
Reference-contexts: The artificial problems correspond to two parameter settings for ART-# est -# clob , one of the two artificial domains that served as a testbed for Kambhampati et al.'s extensive study of the behavior of various planning strategies as a function of problem parameters <ref> (Kambhampati et al., 1995) </ref>. ART-# est -# clob provides two layers of 10 operators each, where those in layer 1 achieve the preconditions of those in layer 2, and each operator in layer 2 achieves one of the 10 goals.
Reference: <author> Korf, R. </author> <year> (1992). </year> <title> Linear-space best-first search: Summary of results. </title> <booktitle> In Proceedings of the Tenth National Conference of the American Association for Artificial Intelligence (AAAI-92), </booktitle> <pages> pp. 533-538. </pages>
Reference: <author> McAllester, D., & Rosenblitt, D. </author> <year> (1991). </year> <title> Systematic nonlinear planning. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI-91), </booktitle> <pages> pp. </pages> <address> 634-639 Anheim, Los Angeles, CA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A state-of-the-art example of such a planner is ucpop (Barrett et al., 1994; Penberthy & Weld, 1992), whose intellectual ancestry includes strips (Fikes & Nilsson, 1971), tweak (Chapman, 1987), and snlp <ref> (McAllester & Rosenblitt, 1991) </ref>. Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe (Wilkins, 1988), prs (Georgeff & Lansky, 1987), or O-Plan (Currie & Tate, 1991). However, there appear to be ample opportunities for bringing well-founded planners closer to practicality.
Reference: <author> Nilsson, N. </author> <year> (1980). </year> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Tioga Pub. Co., </publisher> <address> Palo Alto, CA. </address>
Reference-contexts: There are two points of which the reader should be reminded. First, in order for A* to guarantee discovery of an optimal plan (i.e., the "admissibility" condition), h (p) should not overestimate the remaining solution cost <ref> (Nilsson, 1980) </ref>. Second, if the aim is not necessarily to find an optimal solution but to find a satisfactory solution quickly, then f (p) can be augmented to include a term that estimates the remaining cost of finding a solution. <p> Thus we will prefer to pursue a plan p 0 that seems closer to being complete to a plan p further from completion, even though the overall complexity estimate for p 0 may be greater than for p <ref> (Nilsson, 1980) </ref> (pages 87-88). Alternatively, we could add a heuristic estimate of the remaining cost of finding a solution to f (p) that is more or less independent of the estimate h (p).
Reference: <author> Penberthy, J., & Weld, D. </author> <year> (1992). </year> <title> UCPOP: A sound, complete, partial order planner for ADL. </title> <editor> In Nebel, B., Rich, C., & Swartout, W. (Eds.), </editor> <booktitle> Proceedings of the Third International Conference on Principles of Knowledge Representation and Reasoning (KR92), </booktitle> <pages> pp. </pages> <address> 103-114 Boston, MA. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: In another set of tests in the trains world, we use our own improved search strategies as baseline, i.e., we ask whether additional speedups are obtainable by use of parameter 1. The search strategy is described as "A* or IDA*" search in <ref> (Penberthy & Weld, 1992) </ref>; in the code for ucpop 2.0 it is described more generally as best-first, since arbitrary ranking functions, not necessarily corresponding to A* heuristics, may be plugged in.
Reference: <author> Peot, M. A., & Smith, D. E. </author> <year> (1993). </year> <title> Threat-removal strategies for partial-order planning. </title> <booktitle> In Proceedings of the Eleventh National Conference of the American Association for Artificial Intelligence (AAAI-93), </booktitle> <pages> pp. </pages> <address> 492-499 Washington, D.C. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: domains in combination with our search strategy is not dependent on some peculiarity of the latter, we also include some results for ucpop's default strategy, Joslin and Pollack's "least cost flaw repair" (LCFR) strategy (Joslin & Pollack, 1994) and for Peot and Smith's "least commitment" (LC) open condition selection strategy <ref> (Peot & Smith, 1993) </ref> in Section 5. In Section 6, we state our conclusions, comment on some related work and mention possible extensions of our techniques. 2. <p> The individual domains and intersected domains grow monotonically during the propagation process, and in the end represent the desired parameter domains of the operators. We illustrate this process through an example. Consider the simple planning problem depicted in Figure 2 where an "operator graph" <ref> (Smith & Peot, 1993) </ref> is used to describe the logical dependencies among the operators, while the iterative computation of the parameter domains is graphically illustrated with a "domain-propagation graph" below the operator graph. The initial conditions (P A) and (P B) unify with the precondition (P ?x) of op1.
Reference: <author> Schubert, L., & Gerevini, A. </author> <year> (1995). </year> <title> Accelerating partial order planners by improving plan and goal choices. </title> <booktitle> In Proc. of the 7th IEEE Int. Conf. on Tools with Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 442-450 Herndon, Virginia. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: In view of the results we have presented and the possibilities for further speedups we have mentioned, we think it plausible that well-founded, domain-independent planners may yet become competitive with more pragmatically designed planners. Acknowledgements This work amalgamates and extends two conference papers on improving search <ref> (Schubert & Gerevini, 1995) </ref> and using computed parameter domains (Gerevini & Schubert, 1996) to accelerate partial-order planners. The research was supported in part by Rome Lab contract F30602-91-C-0010 and NATO Collaborative Research Grant CRG951285.
Reference: <author> Smith, D. E., & Peot, M. A. </author> <year> (1993). </year> <title> Postponing threats in partial-order planning. </title> <booktitle> In Proceedings of the Eleventh National Conference of the American Association for Artificial Intelligence (AAAI-93), </booktitle> <pages> pp. </pages> <address> 500-506 Washington, D.C. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: domains in combination with our search strategy is not dependent on some peculiarity of the latter, we also include some results for ucpop's default strategy, Joslin and Pollack's "least cost flaw repair" (LCFR) strategy (Joslin & Pollack, 1994) and for Peot and Smith's "least commitment" (LC) open condition selection strategy <ref> (Peot & Smith, 1993) </ref> in Section 5. In Section 6, we state our conclusions, comment on some related work and mention possible extensions of our techniques. 2. <p> The individual domains and intersected domains grow monotonically during the propagation process, and in the end represent the desired parameter domains of the operators. We illustrate this process through an example. Consider the simple planning problem depicted in Figure 2 where an "operator graph" <ref> (Smith & Peot, 1993) </ref> is used to describe the logical dependencies among the operators, while the iterative computation of the parameter domains is graphically illustrated with a "domain-propagation graph" below the operator graph. The initial conditions (P A) and (P B) unify with the precondition (P ?x) of op1.
Reference: <author> Smith, D. E. </author> <year> (1996). </year> <type> Personal communication. </type> <note> 136 Accelerating Partial-Order Planners Srinivasan, </note> <author> R., & Howe, A. </author> <year> (1995). </year> <title> Comparison of methods for improving search efficiency in a partial-order planner. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pp. 1620-1626. </pages>
Reference-contexts: Our algorithm deals with the additional complexities of conditional effects and equalities (and in semi-automated fashion with quantification) and appears to be more efficient <ref> (Smith, 1996) </ref>. Other distinctive features of our work are the method of incrementally refining domains 20. This was suggested to us by David Smith as well as Mike Williamson. Williamson tried ZLIFO with 5 randomized versions of T-of-H1, and reported a large performance degradation (Williamson & Hanks, 1996).
Reference: <author> Weld, D. </author> <year> (1994). </year> <title> An introduction to least commitment planning. </title> <journal> AI Magazine, </journal> <volume> 15 (4), </volume> <pages> 27-62. </pages>
Reference-contexts: However, in our current implementation we do not exploit this third point. We have incorporated these techniques into ucpop (version 2.0), along with our earlier improvements to the plan and goal selection strategies. Parameter domains are handled through an extension of the "varset" data structure <ref> (Weld, 1994) </ref> to include the domains of the variables (parameters), and by extending the unification process to implement the filtering discussed above. 14 We now describe our experiments with this enhanced system. 5.2 Experimental Results Using Parameter Domains Our main goal here is to show that while the overhead determined by
Reference: <author> Wilkins, D. </author> <year> (1988). </year> <title> Practical Planning: Extending the Classical AI Planning Paradigm. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA. </address>
Reference-contexts: Such planners unfortunately do not perform well at present, in comparison with more practically oriented planners such as sipe <ref> (Wilkins, 1988) </ref>, prs (Georgeff & Lansky, 1987), or O-Plan (Currie & Tate, 1991). However, there appear to be ample opportunities for bringing well-founded planners closer to practicality.
Reference: <author> Williamson, M., & Hanks, S. </author> <year> (1995). </year> <title> Flaw selection strategies for value-directed planning. </title> <booktitle> In Proceedings of the Third International Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pp. 237-244. </pages>
Reference: <author> Yang, Q., & Chan, A.Y.M. </author> <year> (1994). </year> <title> Delaying variable binding commitments in planning. </title> <booktitle> In Proceedings of the Second International Conference on Artificial Intelligence Planning Systems, </booktitle> <pages> pp. 182-187. 137 </pages>
References-found: 25

