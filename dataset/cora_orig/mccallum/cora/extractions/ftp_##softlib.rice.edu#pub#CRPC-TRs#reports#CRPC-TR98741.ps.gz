URL: ftp://softlib.rice.edu/pub/CRPC-TRs/reports/CRPC-TR98741.ps.gz
Refering-URL: http://www.crpc.rice.edu/CRPC/softlib/TRs_online.html
Root-URL: 
Title: Multidisciplinary Analysis and Optimization (MA&O) Symposium  
Author: Alan Carle and Mike Fagan Lawrence L. Green 
Degree: Submitted to the  
Keyword: Automatic Adjoint Code Generation  Keywords: ADIFOR, ADJIFOR, Adjoint code generation, Automatic differentiation, CFL3D  
Date: February, 1998  
Note: to CFL3D 1  7th AIAA/USAF/NASA/ISSMO  
Pubnum: CRPC-TR98741  
Abstract: Preliminary Results from the Application of Abstract We describe ADJIFOR, an automated adjoint code generator for Fortran, and present preliminary results from the application of ADJIFOR to augment the CFL3D flow solver. Based on these initial results with CFL3D, we argue that, even in its infancy, ADJIFOR can deliver derivatives accurately and efficiently for use in aerodynamic shape optimization problems with 200 to 500 independent design variables. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Biedron and J. Thomas. </author> <title> A generalized patched-grid algorithm with application to the F-18 forebody with actuated control strake. </title> <booktitle> Computing Systems in Engineering, </booktitle> <address> 1(2-4):563-576, </address> <year> 1990. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [2] <author> C. Bischof, T. Knauff, L. Green, and K. Haigler. </author> <title> Parallel calculation of sensitivity derivatives for aircraft design using automatic differentiation. </title> <booktitle> In 5th AIAA/NASA/USAF/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 73-86, </pages> <address> Panama City, Florida, </address> <month> September 7-9, </month> <year> 1994. </year> <month> AIAA-94-4261-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [3] <author> Christian Bischof, Alan Carle, George Corliss, and Andreas Griewank. </author> <title> ADIFOR|generating derivative codes from FORTRAN programs. </title> <journal> Scientific Programming, </journal> <volume> 1 </volume> <pages> 11-29, </pages> <year> 1992. </year>
Reference-contexts: Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design [17, 2, 9, 10, 15, 19, 11, 8]. These papers describe the use of ADIFOR, an AD tool for Fortran <ref> [3, 4] </ref>. ADIFOR implements the "forward mode" of AD. For a code with n independent variables (or design variables) and m dependent variables, the forward mode computes the derivatives using time and space proportional to n. Obviously, for problems with a large number of independent variables, this cost is prohibitive.
Reference: [4] <author> Christian Bischof, Alan Carle, Peyvand Khademi, and Andrew Mauer. Adifor 2.0: </author> <title> Automatic dif ferentiation of fortran 77 programs. </title> <journal> IEEE Computational Science and Engineering, </journal> <volume> 3(3) </volume> <pages> 18-32, </pages> <month> Fall </month> <year> 1996. </year>
Reference-contexts: Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design [17, 2, 9, 10, 15, 19, 11, 8]. These papers describe the use of ADIFOR, an AD tool for Fortran <ref> [3, 4] </ref>. ADIFOR implements the "forward mode" of AD. For a code with n independent variables (or design variables) and m dependent variables, the forward mode computes the derivatives using time and space proportional to n. Obviously, for problems with a large number of independent variables, this cost is prohibitive.
Reference: [5] <author> W. Compton, J. Thomas, W. Abeyounis, and M. Mason. </author> <title> Transonic Navier-Stokes solutions of three dimensional afterbody flows. </title> <type> TM 4111, </type> <institution> NASA, </institution> <month> July </month> <year> 1989. </year> <month> 9 </month>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [6] <author> F. Ghaffari, J. Luckring, J. Thomas, B. Bates, and R. Biedron. </author> <title> Multiblock Navier-Stokes solutions about the F/A-18 wing-lex-fuselage configuration. </title> <journal> Journal of Aircraft, </journal> <volume> 30(3) </volume> <pages> 293-303, </pages> <year> 1993. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [7] <author> Andreas Griewank. </author> <title> Achieving logarithmic growth of temporal and spatial complexity in reverse auto matic differentiation. </title> <journal> Optimization Methods and Software, </journal> <volume> 1(1) </volume> <pages> 35-54, </pages> <year> 1992. </year>
Reference-contexts: If L = I, then the reverse mode computes J . Unless checkpointing <ref> [7] </ref> or additional mathematical knowledge is employed, the need to record intermediate program state makes the memory requirements of adjoint codes very high.
Reference: [8] <author> J. Issac and R. Kapania. </author> <title> Aeroelastic sensitivity analysis of wings using automatic differentiation. </title> <booktitle> In 6th AIAA/NASA/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 1176-1186, </pages> <address> Bellevue, Washington, </address> <month> September 4-6, </month> <year> 1996. </year> <month> AIAA-96-4119-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [9] <author> V. Korivi, L. Sherman, A. Taylor, G. Hou, L. Green, and P. Newman. </author> <title> First- and second-order aero dynamic sensitivity derivatves via automatic differentiation with incremental iterative methods. </title> <booktitle> In 5th AIAA/NASA/USAF/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 87-120, </pages> <address> Panama City, Florida, </address> <month> September 7-9, </month> <year> 1994. </year> <month> AIAA-94-4262-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [10] <author> V. Korivi, A. Taylor, and P. Newman. </author> <title> Aerodynamic optimization studies using a 3-d supersonic Euler code with efficient calculation of sensitivity derivatives. </title> <booktitle> In 5th AIAA/NASA/USAF/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 170-194, </pages> <address> Panama City, Florida, </address> <month> September 7-9, </month> <year> 1994. </year> <month> AIAA-94-4270-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [11] <author> C. Moen, P. Spence, J. Meza, and T. Plantenga. </author> <title> Automatic differentiation for gradient-based opti mization of radiatively heated microelectronics manufacturing equipment. </title> <booktitle> In 6th AIAA/NASA/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 1167-1175, </pages> <address> Bellevue, Washington, </address> <month> September 4-6, </month> <year> 1996. </year> <month> AIAA-96-4118-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [12] <author> C. Rumsey, R. Biedron, and J. Thomas. CFL3D: </author> <title> Its history and some recent applications. </title> <type> TM 112861, </type> <institution> NASA, </institution> <month> May </month> <year> 1997. </year> <title> presented at the "Godunov's Method for Gas Dynamics" Symposium, </title> <address> Ann Arbor, MI, </address> <month> May 1-2, </month> <year> 1997. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [13] <author> C. Rumsey, M. Sanetrik, R. Biedron, N. Melson, and E. Parlette. </author> <title> Efficiency and accuracy of time accurate turbulent Navier-Stokes computations. </title> <journal> Computers & Fluids, </journal> <volume> 25(2) </volume> <pages> 217-236, </pages> <year> 1996. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [14] <author> C. Rumsey and V. Vatsa. </author> <title> Comparison of the predictive capabilities of several turbulence models. </title> <journal> Journal of Aircraft, </journal> <volume> 32(3) </volume> <pages> 510-514, </pages> <year> 1995. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [15] <author> J. Su and J. Renaud. </author> <title> Automatic differentiation in robust optimization. </title> <booktitle> In 6th AIAA/NASA/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 201-215, </pages> <address> Bellevue, Washington, </address> <month> September 4-6, </month> <year> 1996. </year> <month> AIAA-96-4005-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [16] <author> J. Thomas, S. Krist, and W. Anderson. </author> <title> Navier-Stokes computations of vortical flows over low-aspect ratio wings. </title> <journal> AIAA Journal, </journal> <volume> 28(2) </volume> <pages> 205-212, </pages> <year> 1990. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [17] <author> E. Unger and L. Hall. </author> <title> The use of automatic differentiation in an aircraft design problem. </title> <booktitle> In 5th AIAA/NASA/USAF/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 64-72, </pages> <address> Panama City, Florida, </address> <month> September 7-9, </month> <year> 1994. </year> <month> AIAA-94-4260-CP. </month>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
Reference: [18] <author> V. Vatsa, J. Thomas, and B. Wedan. </author> <title> Navier-Stokes computations of a prolate spheroid at angle of attack. </title> <journal> Journal of Aircraft, </journal> <volume> 26(11) </volume> <pages> 986-993, </pages> <year> 1989. </year>
Reference-contexts: From its inception in the early 1980's, the CFL3D code has been continuously improved, applied to a wide variety of problems, verified extensively by experiment and other CFD results, and widely distributed for use in industry <ref> [1, 5, 6, 12, 14, 13, 16, 18] </ref>. The most recent CFL3D code version 5.0, used in the current studies, includes significant new capability (sliding patched-zones for use in rotor-stator computations) and improved computational efficiency and memory usage compared to previous code versions.
Reference: [19] <author> B. Wujek and J. Renaud. </author> <title> Automatic differentiation for more efficient multidisciplinary design analysis and optimization. </title> <booktitle> In 6th AIAA/NASA/ISSMO Symposium on multidisciplinary analysis and optimization, </booktitle> <pages> pages 1151-1166, </pages> <address> Bellevue, Washington, </address> <month> September 4-6, </month> <year> 1996. </year> <note> AIAA-96-4117-CP. 10 </note>
Reference-contexts: 1 Introduction Automatic differentiation (AD) is a set of techniques for automatically augmenting computer codes to compute derivatives of their outputs with respect to their inputs. Numerous papers presented at recent MDO conferences have claimed that AD can provide the derivatives required for use in simulation-based design <ref> [17, 2, 9, 10, 15, 19, 11, 8] </ref>. These papers describe the use of ADIFOR, an AD tool for Fortran [3, 4]. ADIFOR implements the "forward mode" of AD.
References-found: 19

