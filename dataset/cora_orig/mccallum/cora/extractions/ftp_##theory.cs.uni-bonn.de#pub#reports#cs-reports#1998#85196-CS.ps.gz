URL: ftp://theory.cs.uni-bonn.de/pub/reports/cs-reports/1998/85196-CS.ps.gz
Refering-URL: http://cs.uni-bonn.de/info5/publications/CS-1998-en.html
Root-URL: http://cs.uni-bonn.de
Email: Email: marek@cs.uni-bonn.de  
Title: Some Separation Problems on Randomized OBDDs  
Author: Marek Karpinski Rustam Mubarakzjanov 
Note: Research partially supported by DFG Grant KA 673/4-1, by the ESPRIT BR Grants 7097, and EC-US 030, and by the Volkswagen-Stiftung.  
Affiliation: Dept. of Computer Science, University of Bonn, and International Computer Science Institute, Berkeley, California.  
Abstract: We investigate the relationships between complexity classes of Boolean functions that are computable by polynomial size branching programs. In the first part of this paper, we consider different general cases of branching programs: deterministic, non-deterministic, randomized and probabilistic, with and without restrictions on times or on order of reading inputs. We are able to show the following. If Q; Q 1 ; Q 2 are some of these complexity classes such that there are two functions f 1 ; f 2 in Q but not belonging to Q 1 , Q 2 respectively then there is a function f 2 Q n (Q 1 [ Q 2 ). This fact gives a possibility to show non emptiness of different combinations of the complexity classes. In the second part of this paper, we show that the class PP (polynomial time probabilistic) and all of the 11 classes obtained by some intersection or union of BPP (polynomial time randomized), NP and coNP are different for the ordered case of read-once branching programs. We present also some complexity results on other classes of branching programs. y Dept. of Computer Science, University of Bonn. Visiting from Dept. of Theoretical Cybernetics University of Kazan. Research supported by the Volkswagen-Stiftung and partially by the Russia Fund for Basic Research 96-01-01692. Email: rustam@ksu.ru 
Abstract-found: 1
Intro-found: 1
Reference: [AK96] <author> F. Ablayev and M. Karpinski, </author> <title> On the power of randomized branching programs, </title> <booktitle> Proc. </booktitle> <address> ICALP'96, </address> <publisher> LNCS 1099, Springer, </publisher> <year> 1996, </year> <pages> pp. 348-356. </pages>
Reference-contexts: What is the relationship between these classes ? In 1996 Ablayev and Karpinski found a function f n which belonged to BP P OBDD (and the same time to coN P OBDD) but did not belong to N P OBDD <ref> [AK96] </ref>. In 1997 Ablayev found a function from the class N P OBDD n BP POBDD [A97]. These results are valid for the complexity classes of ordered branching programs. <p> We show that all these classes are different, evident inclusions are 7 proper and there is no non-evident inclusion. The following functions will be used : g n defined in [A97] (used also in [SZ96a]), f n defined in <ref> [AK96] </ref> and q n defined in [AKM98].
Reference: [A97] <author> F. Ablayev, </author> <title> Randomization and nondeterminism are incomparable for ordered read-once branching programs, </title> <booktitle> Proc. </booktitle> <address> ICALP'97, </address> <publisher> LNCS 1256, Springer, </publisher> <year> 1997, </year> <pages> pp. </pages> <note> 195-202; also available as ECCC TR97-021 (1997) at http://www.ecc.uni-trier.de/eccc </note>
Reference-contexts: In 1997 Ablayev found a function from the class N P OBDD n BP POBDD <ref> [A97] </ref>. These results are valid for the complexity classes of ordered branching programs. <p> We show that all these classes are different, evident inclusions are 7 proper and there is no non-evident inclusion. The following functions will be used : g n defined in <ref> [A97] </ref> (used also in [SZ96a]), f n defined in [AK96] and q n defined in [AKM98]. <p> HW B from [B91], [P95b] is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from [BHR95], Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from <ref> [A97] </ref> is (n 3 p p p n =n)-stable; 6. ACH from [P95b] is (m=2; m=4; 2 m=4 )-stable n = 2m + log 2 m. 11 Theorem 3 Let h n be a (k; k 0 ; 2 d 0 (k 0 ) )-stable function of n variables. <p> Proof. We use ideas of <ref> [A97] </ref> in this proof. For any X 1 , jX 1 j = k, the function h n can be described by communication matrix CM for a partition (X 1 ; X n X 1 ). <p> There is a column of CM corresponding to this variable x that has different components in two rows iff assignments of x are different. That means that CM has jSj fi k 0 Boolean sub-matrix with different rows. Following notations of <ref> [A97] </ref> we obtain that ts (CM ) = k 0 and for the complexity of randomized branching program (1 p; p)-computing the function h n , the following holds size (P ) 2 P C U p; (f)1 where P C U p; (f ) dlogjSje (1 k 0 H (p)=logjSj)
Reference: [AK98] <author> F. Ablayev and M. Karpinski, </author> <title> On the power of randomized ordered branching programs, </title> <address> ECCC TR98-004, </address> <year> 1998, </year> <note> available at http://www.ecc.uni-trier.de/eccc 14 </note>
Reference-contexts: From this point of view, there are no results for the function from Remark 2 except that it has been proved that f n 62 N P kOBDD <ref> [AK98] </ref>. It is worth to note that as it was mentioned in [P95b] the Boolean function ACH ("Achilles-Heel") is in P BP 1 n [ k2N P k OBDD. We shall show in this section that ACH is difficult for non-deterministic and randomized OBDD. <p> It is shown in [DHRS97] that the one-way communication complexity of Las V egas computation is at most 2 times smaller than the one-way deterministic communication complexity. A proof of this result can be directly transformed to the proof that P = LasV egas for "weak-ordered" (see <ref> [AK98] </ref> for a definition) branching programs and therefore P OBDD = LasV egasOBDD (the authors proved this fact first for the Las-Vegas public coin OBDDs with all random variables read before the deterministic variables [KM98]).
Reference: [AKM98] <author> F.Ablayev, M.Karpinski and R.Mubarakzjanov, </author> <title> On BPP versus NP [coN P for Ordered Read-Once Branching Programs, </title> <booktitle> Proc. Randomized Algorithms, Brno, </booktitle> <year> 1998. </year>
Reference-contexts: Let P P fp n g BP = P P p BP if p n = p for any n. It is shown in <ref> [AKM98] </ref> that P P 1=2 BP = P P p BP for any p; 0 &lt; p &lt; 1. Therefore we write just P P BP instead of P P p BP . For the (a; b)-computation, a &lt; b, we use other notation. <p> Because of a result of <ref> [AKM98] </ref>, one can assume that the function h 1 ; h 2 are 1=2- ( (1=2*; 1=2+*)- ) computable by probabilistic (randomized) branching programs B 1 ; B 2 . Firstly, we consider the case of randomized branching programs. A branching program B (h) computing h consists of two parts. <p> We show that all these classes are different, evident inclusions are 7 proper and there is no non-evident inclusion. The following functions will be used : g n defined in [A97] (used also in [SZ96a]), f n defined in [AK96] and q n defined in <ref> [AKM98] </ref>. Remark 2 g n 2 (NP " coN P ) n BP P; f n 2 (BP P " coN P ) n NP; :f n 2 (BP P " N P ) n coN P , q n 2 BP P n (N P [ coN P ). <p> There is no known function that does not belong to BP P BP 1. If one considers the complexity class AC 0 and looks for smallest complexity class containing some function it is important to know if the function belongs to AC 0 . It is proved in <ref> [AKM98] </ref> that f n ; q n 62 AC 0 . We believe that g n 62 AC 0 but we were not able to prove it. We summarize known results.
Reference: [BDG88] <author> J.L.Balcazar, J.Diaz and J.Gabarro, </author> <title> Structural Complexity I, </title> <publisher> Springer, </publisher> <address> Berlin, 191 P.,1988. </address>
Reference: [BRS93] <author> A. Borodin, A. Razborov and R. Smolensky, </author> <title> On lower bounds for read-k-times branching programs, Computational Complexity, </title> <type> 3, </type> <year> (1993), </year> <pages> 1-18. </pages>
Reference: [BHR95] <author> Y.Breitbard, H.B.Hunt III and D.Rosenkratz, </author> <title> On the size of binary decision diagrams representing Boolean functions, </title> <booktitle> Theoretical Computer Science, </booktitle> <month> 145 </month> <year> (1995), </year> <month> pp.45-69. </month>
Reference-contexts: HW B from [B91], [P95b] is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from <ref> [BHR95] </ref>, Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from [A97] is (n 3 p p p n =n)-stable; 6.
Reference: [B91] <author> R.E. Bryant, </author> <title> On the complexity of VLSI implementations and graph representations of Boolean functions with application to integer multiplication, </title> <journal> IEEE Trans. Computers, </journal> <volume> C-40(2): </volume> <pages> 205-213, </pages> <year> Feb.1991. </year>
Reference-contexts: HW B from <ref> [B91] </ref>, [P95b] is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from [BHR95], Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from [A97] is (n 3 p p p n =n)-stable; 6.
Reference: [DHRS97] <author> P.Duris, J.Hromokovic, </author> <title> J.D.P.Rolim and G.Schnitger,On the Power of Las Vegas for One-Way Communication Complexity, Finite Automata, and Polynomial-time Computations, </title> <address> ECCC TR97-029, </address> <year> 1997, </year> <note> available at http://www.ecc.uni-trier.de/eccc/ </note>
Reference-contexts: Otherwise it is not allowed to make mistakes: the algorithms give allways correct outputs. 13 It is shown in [S98b] that the LasV egasBP 1 and PBP 1 complexity classes are different (see Remark 3). For OBDDs, we have a surprisingly different result. It is shown in <ref> [DHRS97] </ref> that the one-way communication complexity of Las V egas computation is at most 2 times smaller than the one-way deterministic communication complexity.
Reference: [JRSW97] <author> S.Jukna, A.Razborov, </author> <title> P.Savicky and I.Wegener,On P versus N P " co NP for decision trees and read-once branching programs, </title> <address> ECCC TR97-023, </address> <year> 1997, </year> <note> available at http://www.ecc.uni-trier.de/eccc/ </note>
Reference-contexts: Note that if a function is k-mixed (following the definitions of <ref> [JRSW97] </ref>) or k-stable (following the definitions of [S98a]) then it is (k; k; 2 k )-stable. We list some examples of (k; k 0 ; d (k 0 ))-stable functions of n variables. Examples. 1. All 3 functions considered in [JRSW97] a (k; k; 2 k )-stable, for the following k <p> that if a function is k-mixed (following the definitions of <ref> [JRSW97] </ref>) or k-stable (following the definitions of [S98a]) then it is (k; k; 2 k )-stable. We list some examples of (k; k 0 ; d (k 0 ))-stable functions of n variables. Examples. 1. All 3 functions considered in [JRSW97] a (k; k; 2 k )-stable, for the following k (see also [S98a]): (a) if n = q 2 + q + 1 then k = (q + 1)=2 if q is prime, k = d p qe otherwise for "characteristic function of blocking set"; (b) k = d (n=(2dlog
Reference: [KM98] <author> M.Karpinski and R.Mubarakzjanov, </author> <title> Some Separation Problems on Randomized OBDDs, </title> <type> Manuscript, </type> <year> 1998. </year>
Reference-contexts: result can be directly transformed to the proof that P = LasV egas for "weak-ordered" (see [AK98] for a definition) branching programs and therefore P OBDD = LasV egasOBDD (the authors proved this fact first for the Las-Vegas public coin OBDDs with all random variables read before the deterministic variables <ref> [KM98] </ref>). The following theorem presents some relationships between the complexity classes determined as a combinations of those for OBDD and BP1.
Reference: [P95a] <institution> S.Ponzio,A lower bound for integer multiplication with read-once branching programs, </institution> <note> Proc. 27-th STOC, </note> <year> (1995), </year> <pages> 130-139. </pages>
Reference: [P95b] <institution> S.Ponzio,Restricted Branching Programs and Hardware Veryfication, </institution> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1995. </year>
Reference-contexts: From this point of view, there are no results for the function from Remark 2 except that it has been proved that f n 62 N P kOBDD [AK98]. It is worth to note that as it was mentioned in <ref> [P95b] </ref> the Boolean function ACH ("Achilles-Heel") is in P BP 1 n [ k2N P k OBDD. We shall show in this section that ACH is difficult for non-deterministic and randomized OBDD. Thathachar [T98] gave functions in P BP (k + 1) n N P BP . <p> 3.3) there is an explicit Boolean function in AC 0 " NP BP 1 " coN P BP 1 n P BP 1; 3. [S98b] there is an explicit Boolean function ADDR () in BP P " NP BP 1 " coN P BP 1 n P BP 1; 4. <ref> [P95b] </ref> there is an explicit function ISA in AC 0 " P BP 1 n P OBDD; 5. [P95b] there is an explicit function HW B in P BP 1 n AC 0 " P OBDD. <p> 1 n P BP 1; 3. [S98b] there is an explicit Boolean function ADDR () in BP P " NP BP 1 " coN P BP 1 n P BP 1; 4. <ref> [P95b] </ref> there is an explicit function ISA in AC 0 " P BP 1 n P OBDD; 5. [P95b] there is an explicit function HW B in P BP 1 n AC 0 " P OBDD. <p> HW B from [B91], <ref> [P95b] </ref> is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from [BHR95], Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from [A97] is (n 3 p p p n =n)-stable; 6. ACH from [P95b] is (m=2; m=4; 2 m=4 )-stable n <p> HW B from [B91], <ref> [P95b] </ref> is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from [BHR95], Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from [A97] is (n 3 p p p n =n)-stable; 6. ACH from [P95b] is (m=2; m=4; 2 m=4 )-stable n = 2m + log 2 m. 11 Theorem 3 Let h n be <p> HW B from [B91], <ref> [P95b] </ref> is (0:6n; 0:1n; i 0:1n )-stable; 4. ISA from [BHR95], Theorem 3, [P95b] is (k; k; 2 k )-stable, where k = dn=dlog 2 nee 3; 5. g n from [A97] is (n 3 p p p n =n)-stable; 6. ACH from [P95b] is (m=2; m=4; 2 m=4 )-stable n = 2m + log 2 m. 11 Theorem 3 Let h n be a (k; k 0 ; 2 d 0 (k 0 ) )-stable function of n variables.
Reference: [SZ96a] <author> P. Savicky and S. </author> <title> Zak,A large lower bound for 1-branching programs, </title> <booktitle> ECCC, Revision 01 of TR96-036, </booktitle> <year> (1996), </year> <note> available at http:==www.eccc.uni-trier.de=eccc= . 15 </note>
Reference-contexts: We show that all these classes are different, evident inclusions are 7 proper and there is no non-evident inclusion. The following functions will be used : g n defined in [A97] (used also in <ref> [SZ96a] </ref>), f n defined in [AK96] and q n defined in [AKM98].
Reference: [SZ96b] <author> P. Savicky and S. </author> <title> Zak,A hierarchy for (1; +k)-branching pro-grams with respect to k, </title> <address> ECCC, TR96-050, </address> <year> (1996), </year> <note> available at http:==www.eccc.uni-trier.de=eccc= </note> . 
Reference: [S97a] <institution> M.Sauerhoff,A Lower Bound for Randomized Read-k-Times Branching Programs, ECCC, TR97-019, </institution> <year> 1997, </year> <note> available at http://www.eccc.uni-trier.de/eccc/ </note>
Reference-contexts: This family of functions we call just a function implying that the function depends of the number of variables. Following definitions of <ref> [S97a] </ref>, we denote the class of Boolean functions which are computable by polynomial size deterministic (non-deterministic) bra-nching programs by PBP (N PBP ). The class coN PBP contains all Boolean functions the negations of which are computable by polynomial size non-deterministic branching programs. <p> In 1997 Ablayev found a function from the class N P OBDD n BP POBDD [A97]. These results are valid for the complexity classes of ordered branching programs. In 1997 Sauerhoff <ref> [S97a] </ref> shown that a function P ERM corresponding to a permutation matrix is in (BP P OBDD " coN P OBDD) n N BP BP 1. 2 Operations closed for complexity classes Lemma 1 Let a Boolean function h (x) be presented as follows h (x) = h (x 1 ; <p> It is proved in [AKM98] that f n ; q n 62 AC 0 . We believe that g n 62 AC 0 but we were not able to prove it. We summarize known results. Remark 3 1. <ref> [S97a] </ref> The function P ERM ("permutation matrix") belongs to AC 0 " BP P OBDD " coN P OBDD n N P BP 1; 2. [JRSW97](Theorem 3.3) there is an explicit Boolean function in AC 0 " NP BP 1 " coN P BP 1 n P BP 1; 3. [S98b]
Reference: [S97b] <institution> M.Sauerhoff,On Nondeterminism versus Randomness for Read-Once Branching Programs, ECCC, TR97-030, </institution> <year> 1997, </year> <note> available at http://www.eccc.uni-trier.de/eccc/ </note>
Reference-contexts: We shall show in this section that ACH is difficult for non-deterministic and randomized OBDD. Thathachar [T98] gave functions in P BP (k + 1) n N P BP . Other results of the paper [T98] and a result <ref> [S97b] </ref> about randomized branching programs presented functions not belonging to BP P * with small *. There is no known function that does not belong to BP P BP 1.
Reference: [S98a] <author> M.Sauerhoff, </author> <title> Randomness and Nondeterminism are Incomparable for Read-Once Branching Programs, </title> <address> ECCC, TR98-018, </address> <year> 1998, </year> <note> available at http://www.eccc.uni-trier.de/eccc/ </note>
Reference-contexts: We show that all these results except the first one can be improved in the sense of the Remark 1 by proving that these function are in N P OBDD " coN P OBDD n BP P OBDD: We use some definitions based on those from <ref> [S98a] </ref>. 10 Let h n be a Boolean function with n variables X, d (k) be an integer function, k 0 ; k 2 f1; : : : ; n 1g, k 0 k. <p> Note that if a function is k-mixed (following the definitions of [JRSW97]) or k-stable (following the definitions of <ref> [S98a] </ref>) then it is (k; k; 2 k )-stable. We list some examples of (k; k 0 ; d (k 0 ))-stable functions of n variables. Examples. 1. All 3 functions considered in [JRSW97] a (k; k; 2 k )-stable, for the following k (see also [S98a]): (a) if n = <p> (following the definitions of <ref> [S98a] </ref>) then it is (k; k; 2 k )-stable. We list some examples of (k; k 0 ; d (k 0 ))-stable functions of n variables. Examples. 1. All 3 functions considered in [JRSW97] a (k; k; 2 k )-stable, for the following k (see also [S98a]): (a) if n = q 2 + q + 1 then k = (q + 1)=2 if q is prime, k = d p qe otherwise for "characteristic function of blocking set"; (b) k = d (n=(2dlog 2 ne) (1=2) e 1 for the function based on AND of ORs <p> The function ADDR () on n variables from <ref> [S98a] </ref> is (k; k; 2 k )-stable, where : f0; 1g m ! f0; 1g, m = d (n=(dlog 2 ne)e, is a function with the property that any assignment of constant values to at most k m 1 variables does not make a constant function; 3.
Reference: [S98b] <author> M.Sauerhoff,Comment 1 on the paper: </author> <title> Randomness and Nondeter-minism are Incomparable for Read-Once Branching Programs, </title> <address> ECCC, TR98-018, </address> <year> 1998, </year> <note> available at http://www.eccc.uni-trier.de/eccc/ </note>
Reference-contexts: [S97a] The function P ERM ("permutation matrix") belongs to AC 0 " BP P OBDD " coN P OBDD n N P BP 1; 2. [JRSW97](Theorem 3.3) there is an explicit Boolean function in AC 0 " NP BP 1 " coN P BP 1 n P BP 1; 3. <ref> [S98b] </ref> there is an explicit Boolean function ADDR () in BP P " NP BP 1 " coN P BP 1 n P BP 1; 4. [P95b] there is an explicit function ISA in AC 0 " P BP 1 n P OBDD; 5. [P95b] there is an explicit function HW <p> For these randomized algorithms, it is possible an answer "I do not know" with probability less than * &lt; 1=2 for each input. Otherwise it is not allowed to make mistakes: the algorithms give allways correct outputs. 13 It is shown in <ref> [S98b] </ref> that the LasV egasBP 1 and PBP 1 complexity classes are different (see Remark 3). For OBDDs, we have a surprisingly different result.
Reference: [T98] <author> J.Thathachar, </author> <title> On Separating The Read-k-Times Branch-ingProgram Hierarchy, </title> <address> ECCC, TR98-02, </address> <year> 1998, </year> <note> available at http://www.eccc.uni-trier.de/eccc/ 16 </note>
Reference-contexts: It is worth to note that as it was mentioned in [P95b] the Boolean function ACH ("Achilles-Heel") is in P BP 1 n [ k2N P k OBDD. We shall show in this section that ACH is difficult for non-deterministic and randomized OBDD. Thathachar <ref> [T98] </ref> gave functions in P BP (k + 1) n N P BP . Other results of the paper [T98] and a result [S97b] about randomized branching programs presented functions not belonging to BP P * with small *. <p> We shall show in this section that ACH is difficult for non-deterministic and randomized OBDD. Thathachar <ref> [T98] </ref> gave functions in P BP (k + 1) n N P BP . Other results of the paper [T98] and a result [S97b] about randomized branching programs presented functions not belonging to BP P * with small *. There is no known function that does not belong to BP P BP 1.
References-found: 20

