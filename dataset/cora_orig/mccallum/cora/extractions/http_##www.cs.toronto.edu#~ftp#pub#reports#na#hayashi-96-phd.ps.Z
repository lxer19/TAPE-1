URL: http://www.cs.toronto.edu/~ftp/pub/reports/na/hayashi-96-phd.ps.Z
Refering-URL: http://www.cs.toronto.edu/NA/reports.html
Root-URL: http://www.cs.toronto.edu
Title: Numerical Solution of Retarded and Neutral Delay Differential Equations using Continuous Runge-Kutta Methods  
Author: by Hiroshi Hayashi 
Degree: A thesis submitted in conformity with the requirements for the degree of Doctor of Philosophy  
Note: c Copyright by Hiroshi Hayashi 1996  
Address: Toronto  
Affiliation: Graduate Department of Computer Science University of  
Abstract-found: 0
Intro-found: 1
Reference: <author> Arndt, H. </author> <year> 1984. </year> <title> Numerical solution of retarded initial value problems: Local and global error and stepsize control. </title> <journal> Numer. Math., </journal> <volume> 43 </volume> <pages> 343-360. </pages>
Reference-contexts: Propagated derivative discontinuity points are determined at the beginning of integration. (Only constant delay is considered.) Arndt <ref> (Arndt 1984) </ref> developed a general convergence theory for RDEs by considering that a numerical method is actually trying to solve the SDE y 0 (t) = f (t; y (t); z (t oe (t; z (t)))); for t 0 t t F ; (y (t) = OE (t); for t t
Reference: <author> Baker, C. T. H. and Paul, C. A. H. </author> <year> 1993a. </year> <title> A global convergence theorem for a class of PCERK methods and vanishing lag DDEs. </title> <type> Private communication. </type>
Reference: <author> Baker, C. T. H. and Paul, C. A. H. </author> <year> 1993b. </year> <title> Parallel continuous Runge-Kutta methods and vanishing lag delay differential equations. </title> <booktitle> Advanced in Computational Mathematics, </booktitle> <volume> 1 </volume> <pages> 367-394. </pages>
Reference-contexts: We make use of the following two lemmas in this chapter. The first lemma is the key step for a proof of convergence. This lemma was used to prove the order of convergence of another method for RDEs in <ref> (Baker and Paul 1993b) </ref>.
Reference: <author> Brauer, F. and Nohel, J. A. </author> <year> 1989. </year> <title> The Qualitative Theory of Ordinary Differential Equations: An Introduction. </title> <publisher> Dover, </publisher> <address> New York. </address>
Reference-contexts: ; for n = 0; 1; : : :; 24 where fe n g; fd n g, and fh n g are nonnegative sequences, and L is a nonnegative constant, then e n e 1 + i=0 ! 0 n X h j L A : The following Gronwall inequality <ref> (Brauer and Nohel 1989, p. 32) </ref> is applied in x3.1.3 and x3.2.3 when we derive global error bounds.
Reference: <author> Castleton, R. N. and Grimm, L. J. </author> <year> 1973. </year> <title> A first order method for differential equations of neutral type. </title> <journal> Math. Comput., </journal> <volume> 27 </volume> <pages> 571-577. </pages>
Reference-contexts: * First order derivative discontinuity at the initial point since (lim h!0 +(f 1 (h; y (h); y (h oe))) = 0:0849 ) 6= (OE 0 (lim h!0 +(f 2 (h; y (h); y (h oe))) = 0:0398 ) 6= (OE 0 * No vanishing delay Problem 7: Artificial problem <ref> (Castleton and Grimm 1973) </ref> y 0 (t) = cos (t)(1 + y (ty 2 (t))) + y (t)y 0 (ty 2 (t)) sin (t + t sin 2 (t)); for 0 t 1:4.
Reference: <author> Dormand, J. R. and Prince, P. J. </author> <year> 1986. </year> <title> Runge-Kutta triples. </title> <journal> Computers Math. Applic., 12A(9):1007-1017. </journal>
Reference: <author> Driver, R. D. </author> <year> 1977. </year> <title> Ordinary and Delay Differential Equations. </title> <publisher> Springer, </publisher> <address> Berlin. </address>
Reference-contexts: Introduction 1.1 Motivation A delay differential equation (DDE) can provide us with a realistic model of many phenomena arising in applied mathematics. For example, a DDE can be used for the modeling of population dynamics, the spread of infectious diseases, two-body problems of electrodynamics, etc. More examples are discussed in <ref> (Driver 1977, pp. 226-240) </ref>, (Hairer, Norsett and Wanner 1993, pp. 339-353), (Kuang 1993, pp. 3-11), and (Macdonald 1989, pp. 9-27). Although there exist several codes to solve DDEs, most of them are concerned only with retarded type 1 DDEs and cannot handle some difficulties properly. <p> conditions for the existence and uniqueness of solutions to the RDE (1.4) are f is continuous with respect to t; y (t), and y (t oe (t; y (t))), y (t) is continuous, f satisfies a Lipschitz condition in the last two arguments, OE is continuous, and f is bounded <ref> (Driver 1977) </ref>. For the NDE (1.5), it may be required that a Lipschitz constant for the derivative delay term be less than one (Grimm 1971) as well as similar conditions to those for the RDE.
Reference: <author> El'sgol'ts, L. E. and Norkin, S. B. </author> <year> 1973. </year> <title> Introduction to the Theory and Application of Differential Equations with Deviating Arguments. </title> <publisher> Academic Press, </publisher> <address> New York. </address>
Reference: <author> Enright, W. H. </author> <year> 1989a. </year> <title> Analysis of error control strategies for continuous Runge-Kutta methods. </title>
Reference: <author> SIAM J. </author> <title> Numer. </title> <journal> Anal., </journal> <volume> 26 </volume> <pages> 588-599. </pages>
Reference: <author> Enright, W. H. </author> <year> 1989b. </year> <title> A new error-control for initial value solvers. </title> <journal> Applied Maths. and Computation, </journal> <volume> 31 </volume> <pages> 288-301. </pages>
Reference-contexts: Defect control quantifies the error in the numerical solution over the whole interval while standard local error control quantifies the discrete error associated with the mesh points. An 17 other advantage over local error control discussed in <ref> (Enright 1989b) </ref> is that the relationship between achieved accuracy and prescribed tolerance is almost independent of the method while this is not usually true for local error control (especially for RK methods). It is natural to use defect control for DDEs since a continuous approximation is always available. <p> Defect control for SDEs based on a single sample defect value is discussed in <ref> (Enright 1989b) </ref>. One might feel that a single sample point in [t n ; t n+1 ] may not be appropriate for DDEs because of the delay argument which is possibly in a past step.
Reference: <author> Enright, W. H. </author> <year> 1993. </year> <title> The relative efficiency of alternative defect control schemes for high order continuous Runge-Kutta formulas. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 30(5) </volume> <pages> 1419-1445. </pages>
Reference-contexts: 8 is an NDE and the delay vanishes at t = =2 that is in the interior of integration interval. 4.2 A Description of Codes The experimental code we have developed was implemented as a modified version of DVERK (Hull, Enright and Jackson 1976) and based on the formula CVSS6B <ref> (Enright 1993) </ref>, which is a 6th order CRK formula. We call the code DDVERK. See Appendix A for the prologue of DDVERK and Appendix B for a sample program to solve Problem 7. <p> <ref> (Enright 1993) </ref>, which is a 6th order CRK formula. We call the code DDVERK. See Appendix A for the prologue of DDVERK and Appendix B for a sample program to solve Problem 7. The estimate of the defect we used is sampled at o = 0:64 (which was justified in (Enright 1993) for SDEs) and is the maximum norm of the weighted defect. The weight for the jth component is 1=(max (1; jy 0 j (t)j)). The minimum stepsize, Hmin, is taken as 10 6 unless otherwise specified. <p> Multipoint defect sampling for error control may improve the reliability of the method. Defect control based on 2-point sampling is applied to boundary value problems (BVP) of ordinary differential equations by Enright and Muir <ref> (Enright and Muir 1993) </ref>. An improvement of reliability over 1-point sampling (without significantly increasing the cost) is demonstrated 67 by their numerical results. Recall that BVPs usually require more function evaluations per step compared with SDEs and DDEs.
Reference: <author> Enright, W. H. and Higham, D. J. </author> <year> 1991. </year> <title> Parallel defect control. </title> <journal> BIT, </journal> <volume> 31 </volume> <pages> 647-663. </pages>
Reference: <author> Enright, W. H. and Hu, M. </author> <year> 1994. </year> <title> Interpolating Runge-Kutta methods for vanishing delay differential equations. </title> <type> Technical Report 292/94, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference-contexts: This is considered by Enright and Hu <ref> (Enright and Hu 1994) </ref> where an interpolant, instead of extrapolation in Algorithm 1, is constructed using information from both the previous step and the current step.
Reference: <author> Enright, W. H., Jackson, K. R., Norsett, S. P., and Thomsen, P. G. </author> <year> 1986. </year> <title> Interpolants for Runge-Kutta formulas. </title> <journal> ACM Trans. Math. Soft., </journal> <volume> 12 </volume> <pages> 193-218. </pages>
Reference-contexts: See <ref> (Enright et al. 1986) </ref> for the derivation of this representation. One reason to use the above representation rather than (2.1) is that the above representation usually needs less storage 1 . Another reason is related to a discontinuous problem and will be discussed in the next section.
Reference: <author> Enright, W. H., Jackson, K. R., Norsett, S. P., and Thomsen, P. G. </author> <year> 1988. </year> <title> Effective solution of discontinuous IVPs using a Runge-Kutta formula pair with interpolants. </title> <journal> Applied Maths. and Computation, </journal> <volume> 27 </volume> <pages> 313-335. </pages>
Reference-contexts: For some applications, a continuous approximation to the solution of an SDE is needed, for example, to obtain dense output for plotting the solution of an SDE, to find roots of a function associated with the solution of an SDE, or to handle discontinuities <ref> (Enright et al. 1988) </ref>(Hairer, Norsett 13 14 and Wanner 1993, pp. 188-203). <p> In addition to the same type of discontinuities that can arise in the solution of SDEs, we must consider propagated discontinuities described in x1.2.2. The strategy we adopt to cope with discontinuities is based on the method for discontinuous SDEs developed and discussed in detail in <ref> (Enright et al. 1988) </ref>. <p> This is the main reason to use the representation (2.2) rather than the representation (2.1) for the polynomial interpolant for evaluating the delay 18 term. This strategy was found to be very effective for discontinuous problems for SDEs in <ref> (Enright et al. 1988) </ref>. We only changed some parameters for this strategy and applied it to DDEs. From the numerical experiments we carried out, it seems to work effectively for a large class of retarded and neutral type DDEs. A discontinuous problem for NDEs is more critical.
Reference: <author> Enright, W. H. and Muir, P. </author> <year> 1993. </year> <title> A Runge-Kutta type boundary value ODE solver with defect control. </title> <type> Technical Report 267/93, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference-contexts: 8 is an NDE and the delay vanishes at t = =2 that is in the interior of integration interval. 4.2 A Description of Codes The experimental code we have developed was implemented as a modified version of DVERK (Hull, Enright and Jackson 1976) and based on the formula CVSS6B <ref> (Enright 1993) </ref>, which is a 6th order CRK formula. We call the code DDVERK. See Appendix A for the prologue of DDVERK and Appendix B for a sample program to solve Problem 7. <p> <ref> (Enright 1993) </ref>, which is a 6th order CRK formula. We call the code DDVERK. See Appendix A for the prologue of DDVERK and Appendix B for a sample program to solve Problem 7. The estimate of the defect we used is sampled at o = 0:64 (which was justified in (Enright 1993) for SDEs) and is the maximum norm of the weighted defect. The weight for the jth component is 1=(max (1; jy 0 j (t)j)). The minimum stepsize, Hmin, is taken as 10 6 unless otherwise specified. <p> Multipoint defect sampling for error control may improve the reliability of the method. Defect control based on 2-point sampling is applied to boundary value problems (BVP) of ordinary differential equations by Enright and Muir <ref> (Enright and Muir 1993) </ref>. An improvement of reliability over 1-point sampling (without significantly increasing the cost) is demonstrated 67 by their numerical results. Recall that BVPs usually require more function evaluations per step compared with SDEs and DDEs.
Reference: <author> Enright, W. H. and Pryce, J. </author> <year> 1987. </year> <title> Two FORTRAN packages for assessing initial value methods. </title> <journal> ACM Trans. Math. Soft., </journal> <volume> 13(1) </volume> <pages> 1-27. </pages> <note> 75 76 Feldstein, </note> <author> A. and Neves, K. W. </author> <year> 1984. </year> <title> High order methods for state-dependent delay differential equations with nonsmooth solutions. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 21 </volume> <pages> 844-863. </pages>
Reference-contexts: The reliability and robustness for more difficult problems (especially large systems of equations with multiple delays) is one of the areas for future investigations. Comparisons among ARCHI, DDVERK, and DRKLAG were provided in Chapter 4. More detailed comparisons (using a testing package such as DETEST and NDETEST <ref> (Enright and Pryce 1987) </ref> for SDEs) of softwares for DDEs is also a subject for future investigations.
Reference: <author> Gatica, J. and Waltman, P. </author> <year> 1982. </year> <title> A threshold model of antigen antibody dynamics with fading memory. </title> <editor> In Lakshmikantham, editor, </editor> <booktitle> Nonlinear phenomena in mathematical science, </booktitle> <pages> pages 425-439, </pages> <address> New York. </address> <publisher> Academic Press. </publisher>
Reference-contexts: is OE 1 (t) = 3 1:030713491 ; for t 0: * No analytical solution available * A system of RDEs with a constant delay * First order derivative discontinuity at the initial point * No vanishing delay 41 42 Problem 2: Model of antigen antibody dynamics with fading memory <ref> (Gatica and Waltman 1982) </ref> y 0 y 0 y 0 y 0 3ffi y 1 (t)y 2 (t) y 3 (t) exp (ffiy 4 (t)); for 0 t 40 with r 1 = 0:02; r 2 = 0:005; ff = 3; and ffi = 0:01.
Reference: <author> Gladwell, I., Shampine, L. F., Baca, L. S., and Brankin, R. W. </author> <year> 1987. </year> <title> Practical aspects of interpolation in use Runge-Kutta codes. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 8 </volume> <pages> 322-341. </pages>
Reference: <author> Grimm, L. J. </author> <year> 1971. </year> <title> Existence and continuous dependence for a class of nonlinear neutral differential equation. </title> <journal> Proc. Amer. Soc., </journal> <volume> 29(3). </volume>
Reference-contexts: For the NDE (1.5), it may be required that a Lipschitz constant for the derivative delay term be less than one <ref> (Grimm 1971) </ref> as well as similar conditions to those for the RDE.
Reference: <author> Hairer, E., Norsett, S. P., and Wanner, G. </author> <year> 1993. </year> <title> Solving Ordinary Differential Equations I. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <note> second edition. </note>
Reference-contexts: For example, a DDE can be used for the modeling of population dynamics, the spread of infectious diseases, two-body problems of electrodynamics, etc. More examples are discussed in (Driver 1977, pp. 226-240), <ref> (Hairer, Norsett and Wanner 1993, pp. 339-353) </ref>, (Kuang 1993, pp. 3-11), and (Macdonald 1989, pp. 9-27). Although there exist several codes to solve DDEs, most of them are concerned only with retarded type 1 DDEs and cannot handle some difficulties properly. <p> DDELAY solves both RDEs and NDEs, but does not solve a problem if its delay vanishes except at the initial point. RETARD is another code based on the Dormand-Prince 5 (4) pair DOPRI5 by Hairer, Norsett, and Wanner <ref> (Hairer, Norsett and Wanner 1993) </ref>. This only solves RDEs and also cannot handle small delays. 1.3.2 Numerical Methods for NDEs NDEs have received little attention in the literature although the codes ARCHI, DDELAY, and DRKLAG have been developed.
Reference: <author> Higham, D. J. </author> <year> 1989a. </year> <title> Defect estimation in Adams PECE codes. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 10 </volume> <pages> 964-976. </pages>
Reference: <author> Higham, D. J. </author> <year> 1989b. </year> <title> Highly continuous Runge-Kutta interpolants. </title> <type> Technical Report 220/89, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference: <author> Higham, D. J. </author> <year> 1989c. </year> <title> Robust defect control with Runge-Kutta schemes. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 26 </volume> <pages> 1175-1183. </pages>
Reference: <author> Higham, D. J. </author> <year> 1989d. </year> <title> Runge-Kutta defect control using Hermite-Birkhoff interpolation. </title> <type> Technical Report 221/89, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference: <author> Horn, M. K. </author> <year> 1983. </year> <title> Fourth- and fifth-order, scaled Runge-Kutta algorithms for treating dense output. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 20(3) </volume> <pages> 558-568. </pages>
Reference: <author> Hull, T. E., Enright, W. H., and Jackson, K. R. </author> <year> 1976. </year> <title> User's guide for DVERK-a subroutine for solving non-stiff ODE's. </title> <type> Technical Report 100, </type> <institution> Department of Computer Science, University of Toronto. </institution>
Reference-contexts: The main theoretical result we establish is that the global error of the numerical solution is bounded by a multiple of the prescribed tolerance. We have implemented our method as an experimental Fortran code based on DVERK <ref> (Hull, Enright and Jackson 1976) </ref>. It is worth noting that only two research codes (ARCHI and DRKLAG) can handle RDEs and NDEs with vanishing delays. We have carried out numerical experiments over various kinds of DDEs and reported the statistics. <p> = 0; t = =2, and t = Note that Problem 8 is an NDE and the delay vanishes at t = =2 that is in the interior of integration interval. 4.2 A Description of Codes The experimental code we have developed was implemented as a modified version of DVERK <ref> (Hull, Enright and Jackson 1976) </ref> and based on the formula CVSS6B (Enright 1993), which is a 6th order CRK formula. We call the code DDVERK. See Appendix A for the prologue of DDVERK and Appendix B for a sample program to solve Problem 7.
Reference: <author> Jackiewicz, Z. </author> <year> 1981a. </year> <title> The numerical solution of Volterra functional differential equations of neutral type. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 4 </volume> <pages> 615-626. </pages>
Reference: <author> Jackiewicz, Z. </author> <year> 1981b. </year> <title> One step methods for the numerical solution of Volterra functional differential equations of neutral type. </title> <journal> Applicable Anal., </journal> <volume> 12 </volume> <pages> 1-11. </pages>
Reference-contexts: To determine the functions b (q) i (o ), algebraic systems must be solved so that the condition kz (q) n ); for t n t t n+1 ; is satisfied, where y n (t) is the local solution. It has been pointed out by Jackiewicz <ref> (Jackiewicz 1981b) </ref> that the order of this method extended for NDEs does not necessarily exceed one. Neves (Neves 1975b) developed a numerical method based on the fourth order Merson's formula with a two-point Hermite interpolant defined by the endpoints of each step.
Reference: <author> Jackiewicz, Z. </author> <year> 1982. </year> <title> Adams methods for neutral functional differential equations. </title> <journal> Numer. Math., </journal> <volume> 39 </volume> <pages> 221-230. </pages>
Reference: <author> Jackiewicz, Z. </author> <year> 1984. </year> <title> One-step methods of any order for neutral functional differential equations. </title>
Reference-contexts: This might be because NDEs are hard to analyze mathematically: there is no smoothing in propagated derivative discontinuities and one must approximate derivative delay terms. Two implicit one step methods of arbitrary order p were proposed by Jackiewicz <ref> (Jackiewicz 1984) </ref> for the NDE based on the Picard iteration y (q) (t) = y (t n ) + t n for q = 1; 2; ; p.
Reference: <author> SIAM J. </author> <title> Numer. </title> <journal> Anal., </journal> <volume> 21(3) </volume> <pages> 486-511. </pages>
Reference: <author> Jackiewicz, Z. </author> <year> 1986. </year> <title> Quasilinear multistep methods and variable step predictor-corrector methods for neutral functional differential equations. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 23(2) </volume> <pages> 423-452. </pages>
Reference-contexts: Jackiewicz also has published a series of papers investigating the solution of NDEs by mul-tistep methods: methods in (Jackiewicz 1981a; Jackiewicz 1982) are based on Adams-Moulton formulas; methods in <ref> (Jackiewicz 1986) </ref> are based on predictor-corrector formulas with fixed order; methods (Jackiewicz 1987) are based on variable-step variable-order Adams-Bashford Adams-Moulton predictor-corrector formulas with equal intervals for back values; methods in (Jackiewicz and Lo 1991) are based on variable-step variable-order Adams-Bashford Adams Moulton predictor-corrector formulas with unequal intervals for back values. 1.4
Reference: <author> Jackiewicz, Z. </author> <year> 1987. </year> <title> Variable-step variable-order algorithm for the numerical solution of neutral functional differential equations. </title> <journal> Appl. Numer. Math., </journal> <volume> 3 </volume> <pages> 317-329. </pages> <note> 77 Jackiewicz, </note> <author> Z. and Lo, E. </author> <year> 1991. </year> <title> The numerical solution of neutral functional differential equations by Adams predictor-corrector methods. </title> <journal> Appl. Numer. Math., </journal> 8:477-491. 
Reference-contexts: Jackiewicz also has published a series of papers investigating the solution of NDEs by mul-tistep methods: methods in (Jackiewicz 1981a; Jackiewicz 1982) are based on Adams-Moulton formulas; methods in (Jackiewicz 1986) are based on predictor-corrector formulas with fixed order; methods <ref> (Jackiewicz 1987) </ref> are based on variable-step variable-order Adams-Bashford Adams-Moulton predictor-corrector formulas with equal intervals for back values; methods in (Jackiewicz and Lo 1991) are based on variable-step variable-order Adams-Bashford Adams Moulton predictor-corrector formulas with unequal intervals for back values. 1.4 Contributions of the Thesis The main contribution of this thesis is
Reference: <author> Karoui, A. and Vaillancourt, R. </author> <year> 1994. </year> <title> Computer solutions of state-dependent delay differential equations. </title> <journal> Computers Math. Applic., </journal> <volume> 27(4) </volume> <pages> 37-51. </pages>
Reference-contexts: If some delay arguments are in the past steps, the continuous approximation z (t) is used to compute the delay values. The Fortran code ARCHI (Paul 1992b) based on this method is described in Chapter 4. Karoui and Vaillancourt <ref> (Karoui and Vaillancourt 1994) </ref> developed a numerical method based on the Verner's 5 (6) Runge-Kutta pair with a three-point fifth-degree Hermite interpolant.
Reference: <author> Karoui, A. and Vaillancourt, R. </author> <year> 1995. </year> <title> A numerical method for vanishing-lag delay differential equations. </title> <journal> Appl. Numer. Math., </journal> <volume> 17 </volume> <pages> 383-395. </pages>
Reference-contexts: This method, implemented as a Fortran code SYSDEL, has been extended so that small delays are handled by extrapolation in <ref> (Karoui and Vaillancourt 1995) </ref>. There are also at least two other Fortran codes which solve RDEs. One is DDELAY based on Adams-Moulton methods and Gear's BDF methods by Kahaner and Suther-land.
Reference: <author> Kuang, Y. </author> <year> 1991. </year> <title> On neutral delay logistics Gauss-type predator-prey systems. Dyn. Stab. </title> <journal> Systems, </journal> <volume> 6 </volume> <pages> 173-189. </pages>
Reference-contexts: (t) = ln (t); OE 2 (t) = t * Analytical solution: y 1 (t) = ln (t); y 2 (t) = 1=t * A system of RDEs with a state dependent delay * No discontinuity * A vanishing delay at t = 1 Problem 5: Model of food-limited population <ref> (Kuang and Feldstein 1991) </ref> y 0 (t) = ry (t)(1 y (t 1) cy 0 (t 1)); for 0 t 40; where r = = p p * No analytical solution available * A scalar NDE with a constant delay * First order derivative discontinuity at the initial point since h!0 <p> 1) cy 0 (t 1)); for 0 t 40; where r = = p p * No analytical solution available * A scalar NDE with a constant delay * First order derivative discontinuity at the initial point since h!0 + * No vanishing delay Problem 6: Logistic Gauss-type predator-prey systems <ref> (Kuang 1991) </ref> y 0 1 (t o )) y 1 (t) 2 + 1 y 0 y 1 (t) 2 + 1 ! for 0 t 2 with ff = 1=10; ae = 29=10; and o = 21=50.
Reference: <author> Kuang, Y. </author> <year> 1993. </year> <title> Delay Differential Equations with Applications in Population Dynamics. </title> <publisher> Academic Press, </publisher> <address> Boston. </address>
Reference-contexts: For example, a DDE can be used for the modeling of population dynamics, the spread of infectious diseases, two-body problems of electrodynamics, etc. More examples are discussed in (Driver 1977, pp. 226-240), (Hairer, Norsett and Wanner 1993, pp. 339-353), <ref> (Kuang 1993, pp. 3-11) </ref>, and (Macdonald 1989, pp. 9-27). Although there exist several codes to solve DDEs, most of them are concerned only with retarded type 1 DDEs and cannot handle some difficulties properly.
Reference: <author> Kuang, Y. and Feldstein, A. </author> <year> 1991. </year> <title> Boundedness of solutions of a nonlinear nonautonomous neutral delay equation. </title> <journal> J. Math. Anal. Appl., </journal> <volume> 156 </volume> <pages> 293-304. </pages>
Reference-contexts: (t) = ln (t); OE 2 (t) = t * Analytical solution: y 1 (t) = ln (t); y 2 (t) = 1=t * A system of RDEs with a state dependent delay * No discontinuity * A vanishing delay at t = 1 Problem 5: Model of food-limited population <ref> (Kuang and Feldstein 1991) </ref> y 0 (t) = ry (t)(1 y (t 1) cy 0 (t 1)); for 0 t 40; where r = = p p * No analytical solution available * A scalar NDE with a constant delay * First order derivative discontinuity at the initial point since h!0 <p> 1) cy 0 (t 1)); for 0 t 40; where r = = p p * No analytical solution available * A scalar NDE with a constant delay * First order derivative discontinuity at the initial point since h!0 + * No vanishing delay Problem 6: Logistic Gauss-type predator-prey systems <ref> (Kuang 1991) </ref> y 0 1 (t o )) y 1 (t) 2 + 1 y 0 y 1 (t) 2 + 1 ! for 0 t 2 with ff = 1=10; ae = 29=10; and o = 21=50.
Reference: <author> Macdonald, N. </author> <year> 1989. </year> <title> Biological Delay Systems: Linear Stability Theory. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge. </address>
Reference-contexts: For example, a DDE can be used for the modeling of population dynamics, the spread of infectious diseases, two-body problems of electrodynamics, etc. More examples are discussed in (Driver 1977, pp. 226-240), (Hairer, Norsett and Wanner 1993, pp. 339-353), (Kuang 1993, pp. 3-11), and <ref> (Macdonald 1989, pp. 9-27) </ref>. Although there exist several codes to solve DDEs, most of them are concerned only with retarded type 1 DDEs and cannot handle some difficulties properly.
Reference: <author> Neves, K. W. </author> <year> 1975a. </year> <title> Algorithm 497, automatic integration of functional differential equations. Collected Algorithm From ACM. </title>
Reference-contexts: Neves (Neves 1975b) developed a numerical method based on the fourth order Merson's formula with a two-point Hermite interpolant defined by the endpoints of each step. The Fortran code DMRODE is presented in <ref> (Neves 1975a) </ref>. Neves (Neves 1975b) has suggested two ways to handle discontinuities with the code: ignoring them and depending on the error control 8 mechanism; stopping the integration at the discontinuity point and then requiring the user to restart the integration.
Reference: <author> Neves, K. W. </author> <year> 1975b. </year> <title> Automatic integration of functional differential equations: An approach. </title> <journal> ACM Trans. Math. Soft., </journal> <volume> 1 </volume> <pages> 357-368. </pages>
Reference-contexts: It has been pointed out by Jackiewicz (Jackiewicz 1981b) that the order of this method extended for NDEs does not necessarily exceed one. Neves <ref> (Neves 1975b) </ref> developed a numerical method based on the fourth order Merson's formula with a two-point Hermite interpolant defined by the endpoints of each step. The Fortran code DMRODE is presented in (Neves 1975a). Neves (Neves 1975b) has suggested two ways to handle discontinuities with the code: ignoring them and depending <p> Neves <ref> (Neves 1975b) </ref> developed a numerical method based on the fourth order Merson's formula with a two-point Hermite interpolant defined by the endpoints of each step. The Fortran code DMRODE is presented in (Neves 1975a). Neves (Neves 1975b) has suggested two ways to handle discontinuities with the code: ignoring them and depending on the error control 8 mechanism; stopping the integration at the discontinuity point and then requiring the user to restart the integration. <p> = 0:1; OE 3 (t) = OE 4 (t) = 0; for t 0: * No analytical solution available * A system of RDEs with a state dependent delay * First order derivative discontinuity at the initial point * A vanishing delay at t = 0 Problem 3: Artificial problem <ref> (Neves 1975b) </ref> y 0 (t) = 1 y exp 1 t ; for 0:1 t 10; * Analytical solution: y (t) = ln (t) * A scalar RDE with a time dependent delay * No discontinuity * A vanishing delay at t = 1 Problem 4: Artificial problem (Neves 1975b) y <p> Artificial problem <ref> (Neves 1975b) </ref> y 0 (t) = 1 y exp 1 t ; for 0:1 t 10; * Analytical solution: y (t) = ln (t) * A scalar RDE with a time dependent delay * No discontinuity * A vanishing delay at t = 1 Problem 4: Artificial problem (Neves 1975b) y 0 y 0 2 (t) exp (1 y 2 (t)); 43 for 0:1 t 5.
Reference: <author> Neves, K. W. </author> <year> 1981. </year> <title> Control of interpolatory error in retarded differential equations. </title> <journal> ACM Trans. Math. Soft., </journal> <volume> 7 </volume> <pages> 421-444. </pages>
Reference-contexts: The method proposed by Tavernini is used in DMRODE when a delay is smaller than the current stepsize. Neves <ref> (Neves 1981) </ref> has also proposed two error control mechanisms which handle discontinuities: monitoring the difference between the delay value computed by extrapolation from the previous step and the delay value computed by a local interpolant; monitoring the difference between the solution computed by extrapolation from the previous step and the solution
Reference: <author> Neves, K. W. and Feldstein, A. </author> <year> 1976. </year> <title> Characterization of jump discontinuities for state dependent delay differential equations. </title> <journal> J. Math. Anal. Appl., </journal> <volume> 56 </volume> <pages> 689-707. </pages>
Reference-contexts: Neves and Feldstein <ref> (Neves and Feldstein 1976) </ref> discussed the characteristics of discontinuities for DDEs with state dependent delays. They pointed out that the order of the derivative discontinuity for RDEs will generally smooth as time increases while there may be no such smoothing for NDEs.
Reference: <author> Neves, K. W. and Thompson, S. </author> <year> 1992a. </year> <title> Software for the numerical solution of system of functional differential equations with state-dependent delays. </title> <journal> Appl. Numer. Math., </journal> <volume> 9 </volume> <pages> 385-401. </pages>
Reference-contexts: At the present time, as far as we know, only two research codes exist to solve both retarded and neutral type 1 DDEs with vanishing delays 1 : ARCHI (Paul 1992b), developed by Baker and Paul, DRKLAG <ref> (Neves and Thompson 1992a) </ref>, developed by Neves and Thompson. This fact together with the recent development of continuous numerical methods and some other tools useful in solving DDEs motivated us to work on this subject.
Reference: <author> Neves, K. W. and Thompson, S. </author> <year> 1992b. </year> <title> Solution of systems of functional differential equations with state dependent delays. </title> <type> Technical Report TR-92-003, </type> <institution> Computer Science, Radford University. </institution>
Reference-contexts: Their method is based on the continuously embedded Runge-Kutta formula pair 5 (4) of Sarafyan with a cubic 4th order interpolant. The resulting Fortran code DRKLAG is described in <ref> (Neves and Thompson 1992b) </ref>. Discontinuity difficulties are handled either by the error control mechanism or locating the discontinuity points by solving associated nonlinear equations. Small delays and vanishing delays are handled by either restricting the stepsize to be smaller than the delays or using extrapolation. <p> Then it estimates the maximum continuous local error by manipulating this polynomial. * The starting stepsize: the user must supply the starting stepsize. We used 0.1 for the starting stepsize for all problems but Problem 4. The starting stepsize for Problem 4 is described in the next section. DRKLAG <ref> (Neves and Thompson 1992b) </ref> * The underlying formula: based on a continuously embedded RK formula pair 5 (4) of Sarafyan with a cubic 4th order interpolant. * Discontinuity handling: there are two options, either rootfinding or ignoring.
Reference: <author> Oberle, H. J. and Pesch, H. J. </author> <year> 1981. </year> <title> Numerical treatment of delay differential equations by Hermit interpolation. </title> <journal> Numer. Math., </journal> <volume> 37 </volume> <pages> 235-255. </pages>
Reference-contexts: Oppelstrup (Oppelstrup 1978) described a numerical method based on the Runge-Kutta Fehlberg 5 (4) formula with a three-point fourth-degree Hermite-Birkhoff interpolant. This method does not directly handle discontinuities by some special techniques. Oberle and Pesch <ref> (Oberle and Pesch 1981) </ref> developed a numerical method for RDEs with constant delays. The method is based on the Runge-Kutta Fehlberg 4 (5) and 7 (8) pairs with three- and five-points Hermite interpolants.
Reference: <author> Oppelstrup, J. </author> <year> 1978. </year> <title> The RKFHB4 method for delay differential equations. In Numerical treatment of differential equations, </title> <booktitle> Lecture Notes in Mathematics 631, </booktitle> <pages> pages 133-146, </pages> <address> New York. </address> <publisher> Springer. </publisher>
Reference-contexts: An automatic detection of discontinuities by means of a nonlinear equation solver is described by Feldstein and Neves (Feldstein and Neves 1984). Oppelstrup <ref> (Oppelstrup 1978) </ref> described a numerical method based on the Runge-Kutta Fehlberg 5 (4) formula with a three-point fourth-degree Hermite-Birkhoff interpolant. This method does not directly handle discontinuities by some special techniques. Oberle and Pesch (Oberle and Pesch 1981) developed a numerical method for RDEs with constant delays.
Reference: <author> Paul, C. A. H. </author> <year> 1992a. </year> <title> Developing a delay differential equation solver. </title> <journal> Appl. Numer. Math., </journal> <volume> 9 </volume> <pages> 403-414. </pages>
Reference-contexts: With the use of such a graph, the dependency of propagated discontinuities among the components of RDEs are specified. This is particularly important for systems of equations with multiple delays. Baker and Paul (Baker and Paul 1993a; Baker and Paul 1993b) and Paul <ref> (Paul 1992a) </ref> developed a numerical method based on a continuous Runge-Kutta method with an iterative scheme for vanishing delays.
Reference: <author> Paul, C. A. H. </author> <year> 1992b. </year> <title> Runge-Kutta Methods for Functional Differential Equations. </title> <type> PhD thesis, </type> <institution> Manchester Univ., </institution> <address> England. </address> <note> 78 Paul, </note> <author> C. A. H. </author> <year> 1994. </year> <title> A test set of functional differential equations. </title> <type> Technical Report 243, </type> <institution> The Department of Mathematics, The University of Manchester, </institution> <address> Manchester, England. </address>
Reference-contexts: At the present time, as far as we know, only two research codes exist to solve both retarded and neutral type 1 DDEs with vanishing delays 1 : ARCHI <ref> (Paul 1992b) </ref>, developed by Baker and Paul, DRKLAG (Neves and Thompson 1992a), developed by Neves and Thompson. This fact together with the recent development of continuous numerical methods and some other tools useful in solving DDEs motivated us to work on this subject. <p> If some delay arguments are in the past steps, the continuous approximation z (t) is used to compute the delay values. The Fortran code ARCHI <ref> (Paul 1992b) </ref> based on this method is described in Chapter 4. Karoui and Vaillancourt (Karoui and Vaillancourt 1994) developed a numerical method based on the Verner's 5 (6) Runge-Kutta pair with a three-point fifth-degree Hermite interpolant. <p> This implies that we perform at least one iteration. For a discussion of the discontinuity handling see x2.2. 46 For comparison, we solved the same problem set using available codes whose descriptions are as follows. ARCHI <ref> (Paul 1992b) </ref> * The underlying formula : based on the 5th order Dormand and Prince explicit RK formula with a quartic 5th order interpolant. * Discontinuity handling: there are two options, either tracking or no tracking.
Reference: <author> Shampine, L. F. </author> <year> 1985. </year> <title> Interpolation for Runge-Kutta methods. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 22 </volume> <pages> 1014-1027. </pages>
Reference: <author> Shampine, L. F. </author> <year> 1986. </year> <title> Some practical Runge-Kutta formulas. </title> <journal> Math. Comput., </journal> <volume> 46 </volume> <pages> 135-150. </pages>
Reference: <author> Shampine, L. F. and Zhang, W. </author> <year> 1990. </year> <title> Rate of convergence of multistep codes started by variation of order and stepsize. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 27(6) </volume> <pages> 1506-1518. </pages>
Reference-contexts: Recall that for SDEs, a method usually starts with a low order formula and then increases the order according to the problem and tolerance. The theory behind their high orders of convergence for variable stepsize and variable order multistep methods is discussed in <ref> (Shampine and Zhang 1990) </ref>. The proportionality of global error to tolerance is a desirable property and it was demonstrated in numerical experiments presented in Chapter 4 that three methods considered here have this property for most problems.
Reference: <author> Tavernini, L. </author> <year> 1971. </year> <title> One-step methods for the numerical solution of Volterra functional differential equations. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 8 </volume> <pages> 786-795. </pages>
Reference-contexts: lth right-hand derivative agree at t = t d for l = 0; : : : ; r 1 while its rth left-hand derivative and rth right-hand derivative do not agree at t = t d . 7 1.3 A Review of Previous Work 1.3.1 Numerical Methods for RDEs Tavernini <ref> (Tavernini 1971) </ref> proposed a one step method of arbitrary order p for Volterra integro-differential equations. (The Volterra integro-differential equation Tavernini considered is y 0 (t) = f (t; y (t); t 0 where the kernel k is a function depending on the solution y (t) over [t 0 ; t].) Suppose <p> With the rootfinding option, the code assumes that a derivative discontinuity occurs at the initial point t = t 0 . The code then tries to locate propagated discontinuities by finding zeros of the associated nonlinear equations. 47 * Small delays and vanishing delays: Tavernini's method <ref> (Tavernini 1971) </ref> is used in the first step. In other steps, there are two options, either restricting the stepsize or using extrapolation. With the extrapolation option, the code still restricts the amount the stepsize may increase on each step. As a consequence, the number of steps taken can be large.
Reference: <author> Verner, J. H. </author> <year> 1993. </year> <title> Differentiable interpolants for high-order Runge-Kutta methods. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 30(5) </volume> <pages> 1446-1466. </pages>
Reference: <author> Wheldon, T., Kirk, J., and Finlay, H. </author> <year> 1974. </year> <editor> Cyclical granulopoiesis in chronic granulocytic leukemia: </editor> <title> A simulation study. </title> <journal> Blood, </journal> <volume> 43 </volume> <pages> 379-387. </pages>
Reference-contexts: We created Problem 8 by modifying Problem 7. The first four problems are RDEs and the last four are NDEs. We note that all the NDEs (Problems 5, 6, 7, and 8) have delays in both their solutions and derivatives. Problem 1: Model of chronic granulocytic leukemia <ref> (Wheldon, Kirk and Finlay 1974) </ref> y 0 1:1 p 1 + 40y 2 (t) y 0 100y 1 (t) 2:43y 2 (t); for 0 t 100.
Reference: <author> Wille, D. R. and Baker, C. T. H. </author> <year> 1992. </year> <title> The tracking of derivative discontinuities in systems of delay-differential equations. </title> <journal> Appl. Numer. Math., </journal> <volume> 9 </volume> <pages> 209-222. </pages>
Reference-contexts: When extrapolation is used, the amount the stepsize may increase on each step is restricted so that extrapolation is sufficiently accurate. In the case where a delay is smaller than the stepsize in the first step, DRKLAG uses the approach proposed by Tavernini. Wille and Baker <ref> (Wille and Baker 1992) </ref> discussed a technique to locate propagated derivative discontinuities by means of a directed graph. With the use of such a graph, the dependency of propagated discontinuities among the components of RDEs are specified. This is particularly important for systems of equations with multiple delays. <p> The code then tries to locate propagated discontinuities by finding zeros of the associated nonlinear equations based on the algorithm proposed by Wille and Baker <ref> (Wille and Baker 1992) </ref>. With the `no tracking' option, the error control mechanism of the underlying formula is relied on to handle discontinuities. We report results with the tracking option. * Small delays and vanishing delays: there are two options, either extrapolation or refinement.
References-found: 58

