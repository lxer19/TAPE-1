URL: http://www.cs.berkeley.edu/~pm/Papers/mclauchlan_murray_iccv95.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~pm/Abstracts/abstracts.html
Root-URL: 
Email: Email pm,dwm@robots.oxford.ac.uk  
Title: A unifying framework for structure and motion recovery from image sequences  
Author: Philip F. McLauchlan and David W. Murray, 
Address: Parks Road, Oxford, OX1 3PJ, U.K.  
Affiliation: Department of Engineering Science, University of Oxford,  
Abstract: This paper proposes a statistical framework that enables 3D structure and motion to be computed optimally from an image sequence, on the assumption that feature measurement errors are independent and Gaussian distributed. The analysis and results demonstrate that computing both camera/scene motion and 3D structure is essential to computing either with any accuracy. Having computed optimal estimates of structure and motion over a small number of initial images, a recursive version of the algorithm (previously reported) recomputes sub-optimal estimates given new image data. The algorithm is designed explicitly for real-time implementation, and the complexity is proportional to the number of tracked features. 3D projective, affine and Euclidean models of structure and motion recovery have been implemented, incorporating both point and line features into the computation. The framework can handle any feature type and camera model that may be encapsulated as a projection equation from scene to image. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.J. Azarbayejani, B. Horowitz, and A. Pentland. </author> <title> Recursive estimation of structure and motion using relative orientation constraints. </title> <note> In Proc. IEEE CVPR , pp 294-299, </note> <year> 1993. </year>
Reference-contexts: discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images [22, 21, 20] or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically <ref> [6, 1, 18] </ref>. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF). <p> It is straightforward to derive the covariance matrix for the parameters of 2D image lines. 5 Experimentation and results Recently some approaches to computing 3D motion have appeared that attempt to avoid computing the full 3D structure parameters, either partially in the case of <ref> [1] </ref> or completely in [18]. We compare these approaches with the VSDF using simulated data of 15 random 3D points in a 3D sphere of radius 600 units, projected into 100 images using a camera with focal length 100 units. <p> We concatenate the rotations computed from each pair of images to produce the total rotation computed since the first image. This method, like [18], avoids recursive estimation of structure completely. 3. Substituting the single-parameter structure representation in <ref> [1] </ref> in the VSDF computation; the "one-parameter" method.
Reference: [2] <author> P. A. Beardsley, A. Zisserman, and D. W. Murray. </author> <title> Navigation using affine structure from motion. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <volume> volume 2, </volume> <pages> pp 85-96, </pages> <year> 1994. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine <ref> [10, 2] </ref>, orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. <p> update equation 3 is taken as the final estimate, so that only the structure state vectors are adjusted: ^ y i = ^ y fl i E i R i - i : Updating the motion estimates separately from the structure estimates in this way is a commonly used technique <ref> [6, 2] </ref> and in practice it works quite well, as we shall see when we evaluate the different techniques experimentally. 2.4 Adding/removing structure vectors The VSDF allows the set of tracked features to vary arbitrarily from image to image, When a new feature appears it is incorporated into the VSDF by <p> They must subsequently be improved by applying batch optimization iterations. The last camera matrix P (k) of the initialization sequence is a special case since it contains five arbitrary parameters instead of a single scaling factor <ref> [2] </ref>. x (k) must therefore be formed of 12 5 = 7 parameters. Setting one row of P (k) to (0 0 0 1) and multiplying the existing P (j) by the relevant 4 fi4 homography achieves this. A row is chosen that avoids division by zero in the computation. <p> The standard "VSDF" recursive mode which updates the latest motion estimate simultaneously with the structure update (Section 2.3.2). 3. The "Simple" mode which updates motion and structure separately (Section 2.3.3. The Droid system for recovering egomotion [6] and the 3D reconstruction algorithm of Beardsley et al. <ref> [2] </ref> both use this technique. 4. The "Batch" mode which computes the optimal batch estimates of motion and structure over the whole image sequence (Section 2.2. The recursive modes 1, 2 and 3 all use a two-frame batch initialization.
Reference: [3] <author> T.J. Broida, S. Chandrashekhar, and R. Chellappa. </author> <title> Recursive estimation of 3-D kinematics and structure from a long image sequence. </title> <journal> IEEE Transations, AES, </journal> <volume> 26(4) </volume> <pages> 639-656, </pages> <year> 1990. </year>
Reference-contexts: As can be seen from Fig. 4, there is little difference in the accuracy of the two algorithms. 6 Discussion and conclusions Recursive algorithms typically impose some form of dynamic constraints on the motion parameters, the resulting algorithm usually being some form of Kalman filter <ref> [3, 18] </ref>, in contrast to batch algorithms that impose no constraints between motion parameters [21, 22]. We have demonstrated that this distinction is artificial, and that there is no need to impose dynamic motion constraints in recursive computation. These constraints in any case do not transfer easily to uncalibrated representations.
Reference: [4] <author> J. F. Canny. </author> <title> Finding edges and lines in images. </title> <type> Master's thesis, </type> <institution> MIT, </institution> <year> 1983. </year>
Reference-contexts: In this way we have a minimal set of parameters that is simple to incorporate into the VSDF. Line segments are fitted to strings of edges obtained from a local implementation of the Canny edge detector <ref> [4] </ref> and matched between frames by enforcing constraints of proximity, tangent direction difference and length ratio.
Reference: [5] <author> O. D. Faugeras. </author> <title> What can be seen in three dimensions with an uncalibrated stereo rig? In G. </title> <editor> Sandini, editor, </editor> <booktitle> Proc. 2nd Eu-ropean Conf. on Computer Vision, </booktitle> <address> Santa Margharita Ligure, Italy, </address> <pages> pp 563-578. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: 1 Introduction With the advent of uncalibrated methods of scene reconstruction there has been a renewed explosion of algorithms for recovering structure and motion. All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective <ref> [5, 11] </ref>, affine [10, 2], orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. <p> Since the VSDF implementation of the affine imaging model has been described in [12] we shall con centrate on the 3D projective and Euclidean models. 3.1 The projective model The most general form of Equation 1 with unknown calibration is the projective camera model u = P X proj <ref> [9, 5] </ref>. Here u is an image position in P 2 , is an unknown scaling factor and P is an unconstrained 3 fi 4 camera matrix. In the projective model the motion can only be recovered modulo an unknown invertible 4 fi 4 homography.
Reference: [6] <author> C. Harris and J. M. Pike. </author> <title> 3D positional integration from image sequences. </title> <booktitle> In Proc. 3rd Alvey Vision Conf., </booktitle> <address> Cambridge, </address> <pages> pp 233-236, </pages> <year> 1987. </year>
Reference-contexts: discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images [22, 21, 20] or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically <ref> [6, 1, 18] </ref>. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF). <p> update equation 3 is taken as the final estimate, so that only the structure state vectors are adjusted: ^ y i = ^ y fl i E i R i - i : Updating the motion estimates separately from the structure estimates in this way is a commonly used technique <ref> [6, 2] </ref> and in practice it works quite well, as we shall see when we evaluate the different techniques experimentally. 2.4 Adding/removing structure vectors The VSDF allows the set of tracked features to vary arbitrarily from image to image, When a new feature appears it is incorporated into the VSDF by <p> The standard "VSDF" recursive mode which updates the latest motion estimate simultaneously with the structure update (Section 2.3.2). 3. The "Simple" mode which updates motion and structure separately (Section 2.3.3. The Droid system for recovering egomotion <ref> [6] </ref> and the 3D reconstruction algorithm of Beardsley et al. [2] both use this technique. 4. The "Batch" mode which computes the optimal batch estimates of motion and structure over the whole image sequence (Section 2.2. The recursive modes 1, 2 and 3 all use a two-frame batch initialization.
Reference: [7] <author> R. </author> <title> Hartley. Lines and points in three views a unified approach. </title> <booktitle> In ARPA Image Understanding Workshop, Monterrey, </booktitle> <year> 1994. </year>
Reference-contexts: We allow the unity element to change position, removing a possible source of instability. To initialize the projective motion parameters we use the three-frame algorithm of Hartley <ref> [7] </ref>, utilizing the first, middle and final images in the sequence 1 : : : k. This allows us to incorporate point and line features on an equal basis, which is prohibited by two-image methods such as the fundamental matrix, being based solely on point features.
Reference: [8] <author> R.I. </author> <title> Hartley. Euclidean reconstruction from uncalibrated views. </title> <booktitle> In Applications of Invariance in Computer Vision, </booktitle> <pages> pp 237-256. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: If the original update Equation 3 had been used directly the update would take time O ((k + n) 3 ). Similar batch update equations have appeared in pho-togrammetry [17], and have been exploited by Hart-ley <ref> [8] </ref>. The second form of the update equations 6 have complexity O (k + n 3 ), again less than O ((k + n) 3 ).
Reference: [9] <author> R.I. Hartley, R. Gupta, and T. Chang. </author> <title> Stereo from uncalibrated cameras. </title> <booktitle> In Proc. of the IEEE Conf. on Computer Vision and Pattern Recognition, </booktitle> <pages> pp 761-764, </pages> <year> 1992. </year>
Reference-contexts: Since the VSDF implementation of the affine imaging model has been described in [12] we shall con centrate on the 3D projective and Euclidean models. 3.1 The projective model The most general form of Equation 1 with unknown calibration is the projective camera model u = P X proj <ref> [9, 5] </ref>. Here u is an image position in P 2 , is an unknown scaling factor and P is an unconstrained 3 fi 4 camera matrix. In the projective model the motion can only be recovered modulo an unknown invertible 4 fi 4 homography.
Reference: [10] <author> J. J. Koenderink and A. J. van Doorn. </author> <title> Affine structure from motion. </title> <journal> J. Opt. Soc. Am. A, </journal> <volume> 8(2) </volume> <pages> 377-385, </pages> <year> 1991. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine <ref> [10, 2] </ref>, orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable.
Reference: [11] <author> Q.-T. Luong and T. Vieville. </author> <title> Canonic representations for the geometries of multiple projective views. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <pages> pp 589-599, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: 1 Introduction With the advent of uncalibrated methods of scene reconstruction there has been a renewed explosion of algorithms for recovering structure and motion. All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective <ref> [5, 11] </ref>, affine [10, 2], orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable.
Reference: [12] <author> P. F. McLauchlan, I. D. Reid, and D. W. Murray. </author> <title> Recursive affine structure and motion from image sequences. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <volume> volume 1, </volume> <pages> pp 217-224, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The VSDF has already been used to calibrate a camera mounted on a robot head/eye platform [13], and to recover recursively 3D affine structure and motion <ref> [12] </ref>. Here we advance the method in several ways. <p> Thus only ^ x (k+1) and the ^ y i 's are updated. This leads to the VSDF recursive update rule <ref> [12] </ref>: ^ x (k+1) = ^ x (k+1) fl + x (k+1) i + y i d where x d = (A 0 B 0 C 1 B 0&gt; ) 1 (D &gt; B 0 C 1 E &gt; )R 1 - i (E i R i - i B 0 <p> These are described below, although there is insufficient space to provide complete details. The Jacobian matrices D (j) (j) i are easily obtained from h (j) i . Since the VSDF implementation of the affine imaging model has been described in <ref> [12] </ref> we shall con centrate on the 3D projective and Euclidean models. 3.1 The projective model The most general form of Equation 1 with unknown calibration is the projective camera model u = P X proj [9, 5].
Reference: [13] <author> P.F. McLauchlan and D.W. Murray. </author> <title> Active camera calibration for a head-eye platform using a variable state-dimension filter. Accepted for PAMI, </title> <year> 1994. </year>
Reference-contexts: The VSDF has already been used to calibrate a camera mounted on a robot head/eye platform <ref> [13] </ref>, and to recover recursively 3D affine structure and motion [12]. Here we advance the method in several ways.
Reference: [14] <author> D.W. Murray and L.S. Shapiro. </author> <title> Dynamic update of planar structure and motion: the case of constant motion. Accepted for CVGIP, </title> <year> 1994. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine [10, 2], orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar <ref> [14, 19] </ref>). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. From an intellectual standpoint this is unsatisfactory, as the underlying physical problems being solved are not diverse.
Reference: [15] <author> C. Poelman and T. Kanade. </author> <title> A paraperspective factorization method for shape and motion recovery. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <volume> volume 2, </volume> <pages> pp 97-108, </pages> <year> 1994. </year>
Reference-contexts: Poelman & Kanade <ref> [15] </ref> used the same measurement matrix factorization algorithm as the input to an algorithm to recover structure and motion assuming paraperspective projection, a special case of affine projection (see [16] for geometric and analytical descriptions of the various camera models).
Reference: [16] <author> L. S. Shapiro. </author> <title> Affine Analysis of Image Sequences. </title> <type> PhD thesis, </type> <institution> University of Oxford, </institution> <year> 1993. </year>
Reference-contexts: Poelman & Kanade [15] used the same measurement matrix factorization algorithm as the input to an algorithm to recover structure and motion assuming paraperspective projection, a special case of affine projection (see <ref> [16] </ref> for geometric and analytical descriptions of the various camera models). They recovered camera roll, pitch and yaw angles from an image sequence of a model "hotel", which could then be compared with the measured values obtained directly from the camera platform.
Reference: [17] <editor> C.C. Slama, C. Theurer, and S.W. Henriksen, editors. </editor> <title> Manual of Photogrammetry. </title> <journal> American Society of Photogrammetry, </journal> <year> 1980. </year>
Reference-contexts: This is made possible by C being block-diagonal. inverting it is an O (n) operation. If the original update Equation 3 had been used directly the update would take time O ((k + n) 3 ). Similar batch update equations have appeared in pho-togrammetry <ref> [17] </ref>, and have been exploited by Hart-ley [8]. The second form of the update equations 6 have complexity O (k + n 3 ), again less than O ((k + n) 3 ).
Reference: [18] <author> S. Soatto, R. Frezza, and P. Perona. </author> <title> Motion estimation on the essential manifold. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <pages> pp 61-72, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images [22, 21, 20] or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically <ref> [6, 1, 18] </ref>. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF). <p> One of the conclusions we draw in x 6 is that there is evidence against the argument of Soatto et al <ref> [18] </ref> that computing 3D structure is not required to compute accurate motion estimates. <p> It is straightforward to derive the covariance matrix for the parameters of 2D image lines. 5 Experimentation and results Recently some approaches to computing 3D motion have appeared that attempt to avoid computing the full 3D structure parameters, either partially in the case of [1] or completely in <ref> [18] </ref>. We compare these approaches with the VSDF using simulated data of 15 random 3D points in a 3D sphere of radius 600 units, projected into 100 images using a camera with focal length 100 units. <p> Computing the motion between adjacent pairs of frames using the batch Euclidean method; the "two-frame" method. We concatenate the rotations computed from each pair of images to produce the total rotation computed since the first image. This method, like <ref> [18] </ref>, avoids recursive estimation of structure completely. 3. Substituting the single-parameter structure representation in [1] in the VSDF computation; the "one-parameter" method. <p> The results for the "two-frame" approach appear to be in agreement with those of Soatto, Frezza and Perona <ref> [18] </ref>, but contradictory to their conclusion a b 3D structure for the Euclidean VSDF and one-parameter algorithms, the latter of which rapidly reaches a point from which it cannot improve. b) Execution times for the three recursive algorithms on a Sparc-2. <p> As can be seen from Fig. 4, there is little difference in the accuracy of the two algorithms. 6 Discussion and conclusions Recursive algorithms typically impose some form of dynamic constraints on the motion parameters, the resulting algorithm usually being some form of Kalman filter <ref> [3, 18] </ref>, in contrast to batch algorithms that impose no constraints between motion parameters [21, 22]. We have demonstrated that this distinction is artificial, and that there is no need to impose dynamic motion constraints in recursive computation. These constraints in any case do not transfer easily to uncalibrated representations.
Reference: [19] <author> S. Sull and N. Ahuja. </author> <title> Integrated 3D analysis of flight image sequences. </title> <booktitle> In Proc. 3rd European Conf. on Computer Vision, Stockholm, </booktitle> <pages> pp 211-216, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine [10, 2], orthographic [21], perspective [22]) and the scene model employed, if any (e.g. planar <ref> [14, 19] </ref>). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. From an intellectual standpoint this is unsatisfactory, as the underlying physical problems being solved are not diverse.
Reference: [20] <author> R. Szeliski and S.B. Kang. </author> <title> Recovering 3D shape and motion from image streams using non-linear least squares. </title> <booktitle> In Proc. of the IEEE CVPR, </booktitle> <pages> pp 752-753, </pages> <year> 1993. </year>
Reference-contexts: We are grateful to Ian Reid, Larry Shapiro and Paul Beardsley for discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images <ref> [22, 21, 20] </ref> or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically [6, 1, 18]. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF).
Reference: [21] <author> C. Tomasi and T. Kanade. </author> <title> Shape and motion from image streams under orthography: A factorization approach. </title> <journal> Int. J. of Computer Vision, </journal> <volume> 9(2) </volume> <pages> 137-154, </pages> <year> 1992. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine [10, 2], orthographic <ref> [21] </ref>, perspective [22]) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. From an intellectual standpoint this is unsatisfactory, as the underlying physical problems being solved are not diverse. <p> We are grateful to Ian Reid, Larry Shapiro and Paul Beardsley for discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images <ref> [22, 21, 20] </ref> or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically [6, 1, 18]. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF). <p> procedure. x (k) is therefore reduced to five parameters by dividing t (k) by its largest element and eliminating that element, which is thenceforth effectively fixed at unity. 4 Incorporating line segments Most structure from motion algorithms deal with one type of feature, either line segments [24] or points (corners) <ref> [21] </ref>. The VSDF formulation is very general in this respect. Any type of image feature can be used. <p> We now demonstrate that the performance degradation of the recursive VSDF over an alternative optimal batch algorithm is negligible even over a large number of time steps on real image data. The measurement matrix factorization (SVD) method of Tomasi & Kanade <ref> [21] </ref> is just such an optimal batch algorithm image 1 image 151 algorithms in recovering camera roll, pitch and yaw angles under paraperspective projection from a sequence of a hotel in paraperspective projection (courtesy of Conrad Poelman). for recovering affine structure and motion. <p> little difference in the accuracy of the two algorithms. 6 Discussion and conclusions Recursive algorithms typically impose some form of dynamic constraints on the motion parameters, the resulting algorithm usually being some form of Kalman filter [3, 18], in contrast to batch algorithms that impose no constraints between motion parameters <ref> [21, 22] </ref>. We have demonstrated that this distinction is artificial, and that there is no need to impose dynamic motion constraints in recursive computation. These constraints in any case do not transfer easily to uncalibrated representations.
Reference: [22] <author> J. Weng, N. Ahuja, and T.S. Huang. </author> <title> Optimal motion and structure estimation. </title> <journal> IEEE Trans. on PAMI, </journal> <volume> 15(9) </volume> <pages> 864-884, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: All the algorithms share the assumption of a rigid world, but they can categorized according to the model of projection from scene to image (e.g. projective [5, 11], affine [10, 2], orthographic [21], perspective <ref> [22] </ref>) and the scene model employed, if any (e.g. planar [14, 19]). Whilst such vigour and variety indicates a fertile soil, there is a danger that the ensuing jungle becomes impenetrable. From an intellectual standpoint this is unsatisfactory, as the underlying physical problems being solved are not diverse. <p> We are grateful to Ian Reid, Larry Shapiro and Paul Beardsley for discussions. framework that will allow the whole spectrum of representations to be efficiently computed, because existing methods are either batch methods that operate on a small number of images <ref> [22, 21, 20] </ref> or if they are recursive employ ad hoc dynamic assumptions that make the algorithms difficult to analyze theoretically [6, 1, 18]. In this paper we present a unifying framework for the recovery of structure and motion, based on the variable state-dimension filter (VSDF). <p> little difference in the accuracy of the two algorithms. 6 Discussion and conclusions Recursive algorithms typically impose some form of dynamic constraints on the motion parameters, the resulting algorithm usually being some form of Kalman filter [3, 18], in contrast to batch algorithms that impose no constraints between motion parameters <ref> [21, 22] </ref>. We have demonstrated that this distinction is artificial, and that there is no need to impose dynamic motion constraints in recursive computation. These constraints in any case do not transfer easily to uncalibrated representations.
Reference: [23] <author> J. Weng, T. S. Huang, and N. Ahuja. </author> <title> Motion and structure from two perspective views: algorithms, error analysis and error estimation. </title> <journal> IEEE Trans. on PAMI, </journal> <volume> 11(5) </volume> <pages> 451-476, </pages> <year> 1989. </year>
Reference-contexts: The motion parameters are thus x (j) = ( t X t Y t Z ) &gt; . A canonical Euclidean frame is set by fixing R (1) = I and t (1) = 0. We then use the two-image method described in <ref> [23] </ref> to compute R (k) and t (k) , given an initial sequence 1 : : : k. t (k) is recovered up to an unknown scale factor. This provides an estimate ^ x (k) fl .
Reference: [24] <author> Z. Zhang and O.D. Faugeras. </author> <title> Tracking and grouping 3d line segments. </title> <booktitle> In Proc. 3rd Int'l Conf. on Computer Vision, </booktitle> <address> Osaka, </address> <pages> pp 577-580, </pages> <address> Washington DC, 1990. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: from any subsequent fitting procedure. x (k) is therefore reduced to five parameters by dividing t (k) by its largest element and eliminating that element, which is thenceforth effectively fixed at unity. 4 Incorporating line segments Most structure from motion algorithms deal with one type of feature, either line segments <ref> [24] </ref> or points (corners) [21]. The VSDF formulation is very general in this respect. Any type of image feature can be used.
References-found: 24

