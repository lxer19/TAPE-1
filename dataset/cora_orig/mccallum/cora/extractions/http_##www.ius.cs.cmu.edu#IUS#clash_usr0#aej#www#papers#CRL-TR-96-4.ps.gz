URL: http://www.ius.cs.cmu.edu/IUS/clash_usr0/aej/www/papers/CRL-TR-96-4.ps.gz
Refering-URL: http://www.ius.cs.cmu.edu/usr/users/aej/www/research/modeling.html
Root-URL: 
Title: Registration and Integration of Textured 3-D Data  
Author: Andrew Johnson and Sing Bing Kang 
Date: CRL 96/4 Sept., 1996  
Affiliation: Digital Equipment Corporation Cambridge Research Lab  
Abstract-found: 0
Intro-found: 1
Reference: [Azarbayejani and Pentland, 1995] <author> A. Azarbayejani and A. P. Pentland. </author> <title> Recursive estimation of motion, structure, and focal length. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 17(6):562575, </volume> <month> June </month> <year> 1995. </year>
Reference: [Bajaj et al., 1995] <author> C. Bajaj, F. Bernardini, and G. Xu. </author> <title> Automatic reconstruction of surfaces and scalar fields from 3-D scans. </title> <journal> Computer Graphics (SIGGRAPH'95), </journal> <volume> :109118, </volume> <month> August </month> <year> 1995. </year>
Reference-contexts: Hoppe et al. [Hoppe et al., 1992] use an augmented Euclidean Minimal Spanning Tree to create a signed distance function from a set of unorganized points. They then polygonize the signed distance function using the Marching Cubes surface poly-gonizer. Bajaj et al. <ref> [Bajaj et al., 1995] </ref> use alpha-shapes and Bernstein-Bezier forms to construct smooth surfaces from a set of unorganized points. Because unstructured point algorithms have no surface information to begin with, they produce smooth surfaces which can give unreliable surface estimates near discontinuities in the scene.
Reference: [Besl and McKay, 1992] <author> P. Besl and N. McKay. </author> <title> A method of registration of 3-D shapes. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 12(2):239256, </volume> <year> 1992. </year>
Reference-contexts: Since no assumptions can be made about the shape of the data, the registration algorithm used must be able to handle free-form surfaces. The Iterative Closest Point algorithm (ICP) <ref> [Besl and McKay, 1992; Zhang, 1994] </ref> is an established algorithm for registration of free-form surfaces that is simple to implement and easy to modify to meet specific needs. A requirement of the Iterative Closest Point algorithm is that the two data sets to be registered are coarsely aligned. <p> To solve this problem Besl and McKay <ref> [Besl and McKay, 1992] </ref> proposed the Iterative Closest Point algorithm which establishes correspondences between data sets by matching points in one data set to the closest points in the other data set. Traditional ICP works as follows.
Reference: [Boissonnat, 1984] <author> J. Boissonnat. </author> <title> Geometric structures for three-dimensional shape representation. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 3(4):266286, </volume> <year> 1984. </year>
Reference-contexts: The structured data approaches can be broken down further into surface based and volumetric approaches. Integration algorithms that can be applied to unstructured point sets are useful when no underlying surface information is available. The surface is constructed using proximity information in 3-D space. Boissonnat <ref> [Boissonnat, 1984] </ref> developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp [Veltkamp, 1991] creates surfaces from unorganized points by generalizing the concept of closest point using a fl-neighborhood graph, when constructing a 3-D tetrahedronization of space.
Reference: [Chen and Medioni, 1994] <author> Y. Chen and G. Medioni. </author> <title> Surface description of complex objects from range images. </title> <booktitle> In IEEE Computer Society Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 153158, </pages> <year> 1994. </year>
Reference-contexts: By using the surface information these algorithms will produce better results than those produced by the unorganized point algorithms. However, dependence on a view-based retriangulation step will result in poor results near complex regions of high curvature. Chen and Medioni <ref> [Chen and Medioni, 1994] </ref> avoid the view dependent retriangulation step by growing a deformable surface to the surface data. However, their approach assumes the object being modeled is genus zero which is not true when modeling complex scenes.
Reference: [Curless and Levoy, 1996] <author> B. Curless and M. Levoy. </author> <title> A volumetric method for building complex models from range images. </title> <journal> Computer Graphics (SIGGRAPH'96), </journal> <volume> :303312, </volume> <month> August </month> <year> 1996. </year>
Reference: [Eberly et al., 1994] <author> D. Eberly, R. Gardner, B. Morse, S. Pizer, and C. Scharlach. </author> <title> Ridges for image analysis. </title> <journal> The Journal of Mathematical Imaging and Vision, </journal> <volume> 4(4):353373, </volume> <month> December </month> <year> 1994. </year>
Reference-contexts: In the next sections, we show how we can build a volumetric surface probability field and robustly extract a single consensus surface from it. 3.2 Occupancy grids The occupancy grid paradigm was first developed to create detailed spatial maps from wide-angle sonar measurements <ref> [Eberly et al., 1994] </ref>. Later it was determined that occupancy grids were a useful method for accumulating the probability of surface from multiple (possibly of different type) noisy sensors [Martin and Moravec, 1996]. The fundamental procedure for creating an occupancy grid is simple. <p> The most difficult component of this approach is detecting the ridges in the surface probability function. In the overview of ridge detection operators by Eberly et al. <ref> [Eberly et al., 1994] </ref>, they define a ridge as a point that it a local maximum of some function along a special direction. In image analysis the special directions are usually computed as the eigenvectors of the local Hessian of the function.
Reference: [Elfes, 1987] <author> A. Elfes. </author> <title> Sonar-based real world mapping and navigation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-3(3):249265, </volume> <year> 1987. </year>
Reference-contexts: Our algorithm is most similar to the volumetric approaches that construct a 3-D implicit surface function. We construct an implicit function describing the surface using a volumetric data structure. However, we approach the problem from the direction of probabilistic occupancy grids developed 16 3 Integration by Elfes <ref> [Elfes, 1987] </ref>. Occupancy grids describe the probability of surface based on the proximity of points and a sensor error model. The occupancy grid paradigm is intuitive and is easily changed to accommodate different sensors.
Reference: [Faugeras and Hebert, 1986] <author> O. Faugeras and M. Hebert. </author> <title> The representation, recognition and locating of 3-D objects. </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(3):2752, </volume> <year> 1986. </year>
Reference-contexts: Given the (m i ; s i ) pairs, compute the rigid transformation T that will minimize the 3-D Euclidean distance between them using the quaternion method of Faugeras and Hebert <ref> [Faugeras and Hebert, 1986] </ref>: T (t x ; t y ; t z ; r x ; r y ; r z ) = min X jjs i T (m i )jj (3) Finally, transform the points in M by T repeat the iterations until the convergence criterion is met.
Reference: [Foley et al., 1990] <author> J. D. Foley, A. van Dam, S. K. Feiner, and J. F. Hughes. </author> <title> Computer Graphics: </title> <booktitle> Principles and Practice. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, 2nd edition, </address> <year> 1990. </year>
Reference-contexts: Therefore, we would like the color model to separate intensity from intrinsic color, so that the role of intensity in the matching of color can be reduced. The color model that we chose that meets this criterion is the YIQ color model <ref> [Foley et al., 1990] </ref>. In the YIQ model the intensity of light is conveyed by the Y channel and the intrinsic color (hue, saturation) is conveyed by the I and Q channels.
Reference: [Friedman et al., 1977] <author> J. Friedman, J. Bentley, and R. Finkel. </author> <title> An algorithm for finding best matches in logarithmic expected time. </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3(3):209226, </volume> <year> 1977. </year>
Reference-contexts: Zhang [Zhang, 1994] also proposed an iterative closest point algorithm that has two improvements over the algorithm of Besl and McKay. The first improvement used k-dimensional trees <ref> [Friedman et al., 1977; Sproull, 1991] </ref> to speed up the closest point computation. The second improvement uses robust statistics to generate a dynamic distance threshold on the distance allowed between closest points.
Reference: [Gortler et al., 1996] <author> S. J. Gortler, R. Grzeszczuk, R. Szeliski, and M. F. Cohen. </author> <title> The lumigraph. </title> <journal> Computer Graphics (SIGGRAPH'96), </journal> <volume> :4354, </volume> <month> August </month> <year> 1996. </year> <note> 38 6 Summary </note>
Reference: [Higuchi et al., 1993] <author> K. Higuchi, M. Hebert, and K. </author> <title> Ikeuchi. Building 3-D models from unregistered range images. </title> <type> Technical Report CMU-CS-93-214, </type> <institution> Carnegie Mellon University, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: They assume, however, that the surfaces of objects can be represented using planar patches. There is work that involves modeling of free-form (i.e., smooth-varying) objects as well <ref> [Higuchi et al., 1993; Shum et al., 1995] </ref>, but they require exhausive search in pose space to determine relative camera location.
Reference: [Hilton et al., 1996] <author> A. Hilton, A. Stoddart, J. Illingworth, and T. Windeatt. </author> <title> Reliable surface reconstruction from multiple range images. </title> <booktitle> In Fourth European Conference on Computer Vision (ECCV'96), </booktitle> <pages> pages 117126, </pages> <publisher> Springer-Verlag, </publisher> <address> Cambridge, England, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: Once the implicit surface is constructed, it is polygonized using the Marching Cubes algorithm to create the surface from the volumetric data. The methods vary in how the implicit surface is constructed and the volumetric data is organized. Hilton et al. <ref> [Hilton et al., 1996] </ref> and Curless and Levoy [Cur-less and Levoy, 1996] have developed volumetric integration algorithms that construct a weighted signed distance function to the surface from structured point data. Hilton et al. use surface normal and distance to compute the signed distance function.
Reference: [Hoppe et al., 1992] <author> H. Hoppe, T. DeRose, T. Duchamp, J. McDonald, and W. Stuetzle. </author> <title> Surface reconstruction from unorganized points. </title> <journal> Computer Graphics (SIGGRAPH'92), </journal> <volume> :7178, </volume> <month> July </month> <year> 1992. </year>
Reference-contexts: Boissonnat [Boissonnat, 1984] developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp [Veltkamp, 1991] creates surfaces from unorganized points by generalizing the concept of closest point using a fl-neighborhood graph, when constructing a 3-D tetrahedronization of space. Hoppe et al. <ref> [Hoppe et al., 1992] </ref> use an augmented Euclidean Minimal Spanning Tree to create a signed distance function from a set of unorganized points. They then polygonize the signed distance function using the Marching Cubes surface poly-gonizer.
Reference: [Kang and Szeliski, 1996] <author> S. B. Kang and R. Szeliski. </author> <title> 3-D scene data recovery using omnidirectional multibaseline stereo. </title> <booktitle> In Proc.s IEEE Computer Society Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 364370, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Discussion of data merging issues and future work is given in Section 5 before we summarize our work in Section 6. 1.2 Recovery of 3-D scene data In our work, we use 3-D data recovered from omnidirectional multibaseline stereo, i.e., using multiple panoramic images <ref> [Kang and Szeliski, 1996] </ref>. Each panoramic image spans a 360 ffi horizontal field of view. The primary advantage of this method is that at any given camera center location, the scene can be recovered at a very wide horizontal field of view. <p> Kang in 1995, and was originally referred to in the web site http://www.research.digital.com/CRL/personal/sbk/research/scene-sensing.html. 1.2 Recovery of 3-D scene data 3 omnidirectional multibaseline stereo recovered points textured 3-D data 4 1 Introduction Full details can be found in <ref> [Kang and Szeliski, 1996] </ref>. The approach is straightforward: at each camera location in the scene, sequences of images are captured while rotating the camera about the vertical axis passing through the camera optical center. Each set of images are then composited to produce panoramas at each camera location.
Reference: [Kang et al., 1995] <author> S. B. Kang, A. Johnson, and R. Szeliski. </author> <title> Extraction of Concise and Realistic 3-D Models from Real Data. </title> <type> Technical Report 95/7, </type> <institution> Digital Equipment Corporation, Cambridge Research Lab, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: By connecting the 3-D points based on the connectivity given by the Delaunay triangulation of the 2-D image coordinates, a 3-D triangular surface mesh is generated <ref> [Kang et al., 1995] </ref>. The surface normal at each vertex in the mesh can be determined by fitting a plane to the vertex and all of the vertices adjacent to it in the mesh.
Reference: [Kolb, 1994] <author> C. E. Kolb. </author> <title> Rayshade User's Guide and Reference Manual. </title> <month> August </month> <year> 1994. </year>
Reference-contexts: At the top of the figure are shown two textured 3-D data sets (in wireframe and texture mapped) generated from a synthetic room model generated using the Rayshade modeling package <ref> [Kolb, 1994] </ref>. The room has 4 walls, a doorway into another room and various objects along the wall (tori, vases, columns). The walls of the room are also texture mapped with common vision images (such as the mandrill face image) to add extra texture to the scene.
Reference: [Levoy and Hanrahan, 1996] <author> M. Levoy and P. Hanrahan. </author> <title> Light field rendering. </title> <journal> Computer Graphics (SIGGRAPH'96), </journal> <volume> :3142, </volume> <month> August </month> <year> 1996. </year>
Reference: [Lorensen and Cline, 1987] <author> W. Lorensen and H. Cline. </author> <title> Marching cubes: A high resolution 3D surface construction algorithm. </title> <journal> Computer Graphics (SIGGRAPH'92), </journal> <volume> :163169, </volume> <month> July </month> <year> 1987. </year>
Reference-contexts: It will also prevent false surfaces from being generated by noisy gradients calculated from small surface probabilities. Using the threshold is a computation-ally cheaper way to eliminate valleys. Once the implicit surface function is defined, it is polygonized using the standard Marching Cubes algorithm <ref> [Lorensen and Cline, 1987] </ref> with a modified lookup table of 22 cases to prevent the creation of holes in the surface [Montani et al., 1994].
Reference: [Martin and Moravec, 1996] <author> M. Martin and H. Moravec. </author> <title> Robot Evidence Grids. </title> <type> Technical Report CMU-RI-TR-96-06, </type> <institution> The Robotics Institute, Carnegie Mellon University, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: Later it was determined that occupancy grids were a useful method for accumulating the probability of surface from multiple (possibly of different type) noisy sensors <ref> [Martin and Moravec, 1996] </ref>. The fundamental procedure for creating an occupancy grid is simple. First the world is partitioned into a fixed grid; in our case, the grid is a 3-D array of voxels. Stored in each voxel is the probability of surface existing in that voxel.
Reference: [Matthies and Shafer, 1987] <author> L. Matthies and S. A. Shafer. </author> <title> Error modeling in stereo navigation. </title> <journal> IEEE Journal of Robotics and Automation, </journal> <volume> RA-3(3):239248, </volume> <month> June </month> <year> 1987. </year>
Reference-contexts: Our sensor model combines a model describing the sensor error distribution and a model that spreads the contribution of the point along the surface that is being imaged. Matthies and Shafer <ref> [Matthies and Shafer, 1987] </ref> show that a good approximation of the error model for stereo is an ellipsoidal gaussian distribution centered at the measured 3-D point and oriented along the line of sight.
Reference: [McMillan and Bishop, 1995] <author> L. McMillan and G. Bishop. </author> <title> Plenoptic modeling: An image-based rendering system. </title> <journal> Computer Graphics (SIGGRAPH'95), </journal> <volume> :3946, </volume> <month> August </month> <year> 1995. </year>
Reference: [Montani et al., 1994] <author> C. Montani, R. Scateni, and R. Scopigno. </author> <title> A modified look-up table for implicit disambiguation of marching cubes. Visual Computer, </title> <address> 10:353355, </address> <year> 1994. </year>
Reference-contexts: Using the threshold is a computation-ally cheaper way to eliminate valleys. Once the implicit surface function is defined, it is polygonized using the standard Marching Cubes algorithm [Lorensen and Cline, 1987] with a modified lookup table of 22 cases to prevent the creation of holes in the surface <ref> [Montani et al., 1994] </ref>. The resulting consensus surface mesh is the best surface mesh based on the scene data because it corresponds to the surface of highest probability given the sensor model.
Reference: [Naher and Uhrig] <author> S. Naher and C. Uhrig. </author> <title> The LEDA User Manual Version R 3.3.1. </title> <type> 6 Summary 39 </type>
Reference-contexts: The discontinuity in the resulting combined texture bears testimony to the recovered shapes at the two different sites not being exact. 4 Implementation The code for our model merging work is written in C++ and uses LEDA (Library of Efficient Data types and Algorithms) <ref> [Naher and Uhrig] </ref>. LEDA is a library of data types and algorithms that includes, among others, graph data structures and algorithms to manipulate them.
Reference: [Rutishauser et al., 1994] <author> M. Rutishauser, M. Stricker, and M. Trobina. </author> <title> Merging range images of arbitrarily shaped objects. </title> <booktitle> In IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'94), </booktitle> <pages> pages 573580, </pages> <publisher> IEEE Computer Society, </publisher> <address> Seattle, Washing-ton, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Turk and Levoy [Turk and Levoy, 1994] developed a method which zips together overlapping surface meshes followed by adjustment of mesh vertex positions based on all the overlapping data. The algorithm of Rutishauser et al. <ref> [Rutishauser et al., 1994] </ref> use a sensor error model to combine redundant points followed by a retriangulation step. By using the surface information these algorithms will produce better results than those produced by the unorganized point algorithms.
Reference: [Seitz and Dyer, 1996] <author> S. M. Seitz and C. R. Dyer. </author> <title> View morphing. </title> <journal> Computer Graphics (SIG-GRAPH'96), </journal> <volume> :2130, </volume> <month> August </month> <year> 1996. </year>
Reference: [Shum et al., 1994] <author> H.-Y. Shum, K. Ikeuchi, and R. Reddy. </author> <title> Principal component analysis with missing data and its application to object modeling. </title> <booktitle> In IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'94), </booktitle> <pages> pages 560565, </pages> <publisher> IEEE Computer Society, </publisher> <address> Seattle, Washington, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: This is then followed by integrating the different views to result in a seamless 3-D textured model. The problem is illustrated in Figure 1. A lot of research work has been done in the area of model creation through multiple view merging. Shum et al. <ref> [Shum et al., 1994] </ref>, for example, recover the merged model through simultaneous determination of planar surface parameter location and pose of constituent range data sets. They assume, however, that the surfaces of objects can be represented using planar patches.
Reference: [Shum et al., 1995] <author> H.-Y. Shum, K. Ikeuchi, and R. Reddy. </author> <title> An integral approach to free-form object modeling. </title> <type> Technical Report CMU-CS-95-135, </type> <institution> Carnegie Mellon University, </institution> <month> May </month> <year> 1995. </year>
Reference-contexts: They assume, however, that the surfaces of objects can be represented using planar patches. There is work that involves modeling of free-form (i.e., smooth-varying) objects as well <ref> [Higuchi et al., 1993; Shum et al., 1995] </ref>, but they require exhausive search in pose space to determine relative camera location.
Reference: [Simon, 1996] <author> D. Simon. </author> <title> Fast and Accurate Shape-Based Registration. </title> <type> PhD thesis, </type> <institution> Carnegie Mellon University, </institution> <year> 1996. </year>
Reference-contexts: Other measurements of registration error and an extensive discussion of the ICP algorithm can be found in <ref> [Simon, 1996] </ref>. 14 3 Integration 3 Integration The purpose of registering the individual textured 3-D data sets is to place them in a common world coordinate system.
Reference: [Simon et al., 1994] <author> D. Simon, M. Hebert, and T. Kanade. </author> <title> Real-time 3-D pose estimation using a high-speed range sensor. </title> <booktitle> In IEEE Int'l Conference on Robotics and Automation, </booktitle> <pages> pages 2235 2241, </pages> <publisher> IEEE Society, </publisher> <month> May </month> <year> 1994. </year>
Reference-contexts: He showed good results with stereo data, which motivated our use of the ICP algorithm for registration. Simon et al. <ref> [Simon et al., 1994] </ref> created a real time 3-D tracking system that built on Besl and McKay's ICP algorithm.
Reference: [Soucy and Laurendeau, 1992] <author> M. Soucy and D. Laurendeau. </author> <title> Multi-resolution surface modeling from multiple range views. </title> <booktitle> In IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'92), </booktitle> <pages> pages 348353, </pages> <publisher> IEEE Computer Society Press, </publisher> <address> Champaign, Illinois, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: With connectivity, the surface normal at each point can be calculated, giving a richer description of the shape of the object than 3-D points without surface normals. Surface based algorithms for integration of structured points usually operate on polygonal meshes. Soucy and Laurendeau <ref> [Soucy and Laurendeau, 1992] </ref> partition the points into disjoint sets based on a Venn diagram of views. Within each disjoint set they create a rectangular grid of surface points which are integrated along boundaries in the Venn diagram.
Reference: [Sproull, 1991] <author> R. Sproull. </author> <title> Refinements to nearest neighbor searching in k-dimensional trees. </title> <journal> Algorithmica, </journal> <volume> 6:579589, </volume> <year> 1991. </year>
Reference-contexts: Zhang [Zhang, 1994] also proposed an iterative closest point algorithm that has two improvements over the algorithm of Besl and McKay. The first improvement used k-dimensional trees <ref> [Friedman et al., 1977; Sproull, 1991] </ref> to speed up the closest point computation. The second improvement uses robust statistics to generate a dynamic distance threshold on the distance allowed between closest points.
Reference: [Szeliski and Kang, 1994] <author> R. Szeliski and S. B. Kang. </author> <title> Recovering 3D shape and motion from image streams using nonlinear least squares. Journal of Visual Communication and Image Representation, </title> <address> 5(1):1028, </address> <month> March </month> <year> 1994. </year>
Reference: [Taylor and Kriegman, 1995] <author> C. J. Taylor and D. J. Kriegman. </author> <title> Struction and motion from line segments in multiple images. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 17(11):10211032, </volume> <month> November </month> <year> 1995. </year>
Reference: [Turk and Levoy, 1994] <author> G. Turk and M. Levoy. </author> <title> Zippered polygonal meshes from range images. 40 6 Summary Computer Graphics (SIGGRAPH'94), </title> <address> :311318, </address> <month> July </month> <year> 1994. </year>
Reference-contexts: Soucy and Laurendeau [Soucy and Laurendeau, 1992] partition the points into disjoint sets based on a Venn diagram of views. Within each disjoint set they create a rectangular grid of surface points which are integrated along boundaries in the Venn diagram. Turk and Levoy <ref> [Turk and Levoy, 1994] </ref> developed a method which zips together overlapping surface meshes followed by adjustment of mesh vertex positions based on all the overlapping data. The algorithm of Rutishauser et al. [Rutishauser et al., 1994] use a sensor error model to combine redundant points followed by a retriangulation step.
Reference: [Veltkamp, 1991] <author> R. Veltkamp. </author> <title> 2D and 3D object reconstruction with the g-neighborhood graph. </title> <type> Technical Report CS-R9116, </type> <institution> CWI Centre for Mathematics and Computer Science, </institution> <year> 1991. </year>
Reference-contexts: Integration algorithms that can be applied to unstructured point sets are useful when no underlying surface information is available. The surface is constructed using proximity information in 3-D space. Boissonnat [Boissonnat, 1984] developed an algorithm for efficient computation of the Delaunay tetrahedronization of space. Veltkamp <ref> [Veltkamp, 1991] </ref> creates surfaces from unorganized points by generalizing the concept of closest point using a fl-neighborhood graph, when constructing a 3-D tetrahedronization of space.
Reference: [Waters et al., 1996] <author> K. Waters, J. Rehg, M. Loughlin, S. B. Kang, and D. Terzopoulos. </author> <title> Visual sensing of humans for active public interfaces. </title> <address> Cambridge, UK, </address> <month> April </month> <year> 1996. </year>
Reference-contexts: The work described here is used to recover 3-D models of indoor scenes for the on-going Smart Kiosk project at Cambridge Research Lab, Digital Equipment Corp. <ref> [Waters et al., 1996] </ref>. The Smart Kiosk can be considered as an enhanced version of the Automatic Teller Machine, with 5 Discussion and future work 35 blending scheme.
Reference: [Zhang, 1994] <author> Z. Zhang. </author> <title> Iterative point matching for registration of free-form curves and surfaces. </title> <journal> International Journal of Computer Vision, </journal> <volume> 13(2):119152, </volume> <year> 1994. </year>
Reference-contexts: Since no assumptions can be made about the shape of the data, the registration algorithm used must be able to handle free-form surfaces. The Iterative Closest Point algorithm (ICP) <ref> [Besl and McKay, 1992; Zhang, 1994] </ref> is an established algorithm for registration of free-form surfaces that is simple to implement and easy to modify to meet specific needs. A requirement of the Iterative Closest Point algorithm is that the two data sets to be registered are coarsely aligned. <p> Since their algorithm looks for a corresponding scene point for every model point, incorrect registration can occur when a model point does not have a 6 2 Registration corresponding scene point due to occlusion in the scene. Zhang <ref> [Zhang, 1994] </ref> also proposed an iterative closest point algorithm that has two improvements over the algorithm of Besl and McKay. The first improvement used k-dimensional trees [Friedman et al., 1977; Sproull, 1991] to speed up the closest point computation. <p> They found that the greatest speed improvements were due to the use of k-d trees and the ICP acceleration. We have developed an ICP algorithm that builds on the algorithm presented by Zhang <ref> [Zhang, 1994] </ref>. <p> A pseudo-code description of the Color ICP algorithm is given in Figure 4. To make our ICP algorithm robust to registration when the model is not a proper subset of 10 2 Registration the scene, we have incorporated the dynamic maximum distance threshold employed by Zhang <ref> [Zhang, 1994] </ref>. This threshold limits the maximum distance between closest points (6-D); if two points are farther apart than this threshold, they are not used to compute the rigid transformation.
References-found: 39

