URL: http://robotics.eecs.berkeley.edu/~clairet/conflicts.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~gpappas/atms/publications.html
Root-URL: 
Email: fclairet,gpappas,sastryg@eecs.berkeley.edu  
Title: Conflict Resolution for Air Traffic Management: a Study in Multi-Agent Hybrid Systems  
Author: Claire Tomlin, George J. Pappas and Shankar Sastry 
Keyword: Index terms: hybrid systems, air traffic management, conflict resolution, verification.  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California at Berkeley  
Abstract: Air Traffic Management (ATM) of the future allows for the possibility of free flight, in which aircraft choose their own optimal routes, altitudes, and velocities. The safe resolution of trajectory conflicts between aircraft is necessary to the success of such a distributed control system. In this paper, we present a method to synthesize provably safe conflict resolution maneuvers. The method models the aircraft and the maneuver as a hybrid control system, and calculates the maximal set of safe initial conditions for each aircraft, so that separation is assured in the presence of uncertainties in the actions of the other aircraft. Examples of maneuvers using both speed and heading changes are worked out in detail. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Honeywell Inc. </institution> <type> Markets Report. Technical Report NASA Contract NAS2-114279, </type> <note> Final Report for AATT Contract, </note> <year> 1996. </year>
Reference-contexts: 1 Introduction Air transportation systems are faced with soaring demands for air travel. The annual air traffic rate in the U.S. is expected to grow by 3 to 5 percent annually for at least the next 15 years <ref> [1] </ref>. <p> This is clearly not optimal and disallows aircraft to fly directly to the destination and take advantage of favorable winds. This problem is particularly evident in transoceanic routes which are experiencing the greatest demand growth (for example, nearly 15% <ref> [1] </ref> annually across the Pacific Ocean). * Increased Air Traffic Control (ATC) workload: Separation among aircraft as well as vectoring aircraft in order to avoid weather hazards is performed centrally by ATC. <p> The heading changes of both aircraft are assumed to occur simultaneously. For this example, the velocities of the aircraft are chosen to be the same as in the second example of Section 3: v 1 2 [2; 4], v 2 = <ref> [1; 5] </ref> and r = =2. The radius of the relative protected zone is 5 miles while the alert zone has a radius of 25 miles 1 .
Reference: [2] <author> T. S. Perry. </author> <title> In search of the future of air traffic control. </title> <journal> IEEE Spectrum, </journal> <volume> 34(8) </volume> <pages> 18-35, </pages> <year> 1997. </year>
Reference-contexts: In congested areas, such the regions close to urban airports referred to as TRACONs, controllers frequently simplify their heavy workload by keeping aircraft in holding patterns outside the TRACON. * Obsolete technology: The computer technology used in most ATC centers is nearly 30 years old <ref> [2] </ref>. Communication is restricted to congested voice communication between the aircraft and ATC. Navigation is performed by flying over fixed VHF Omni-Directional Range (VOR) points. In view of the above problems, the aviation community is working towards an innovative concept called Free Flight [3]. <p> The heading changes of both aircraft are assumed to occur simultaneously. For this example, the velocities of the aircraft are chosen to be the same as in the second example of Section 3: v 1 2 <ref> [2; 4] </ref>, v 2 = [1; 5] and r = =2. The radius of the relative protected zone is 5 miles while the alert zone has a radius of 25 miles 1 .
Reference: [3] <institution> Radio Technical Commission for Aeronautics. Final report of RTCA Task Force 3: Free flight implementation. </institution> <type> Technical report, </type> <address> RTCA, Washington DC, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: Communication is restricted to congested voice communication between the aircraft and ATC. Navigation is performed by flying over fixed VHF Omni-Directional Range (VOR) points. In view of the above problems, the aviation community is working towards an innovative concept called Free Flight <ref> [3] </ref>. Free Flight allows pilots to choose their own routes, altitude and speed. User preference would be restricted only in congested airspace, or to prevent unauthorized entry of special use airspace (such as military airspace).
Reference: [4] <author> Honeywell Inc. </author> <title> Technology and Procedures Report. </title> <type> Technical Report NASA NAS2-114279, </type> <note> Final Report for AATT Contract, </note> <year> 1996. </year>
Reference-contexts: User preference would be restricted only in congested airspace, or to prevent unauthorized entry of special use airspace (such as military airspace). Free Flight is potentially feasible because of enabling technologies such as Global Positioning Systems (GPS), datalink communications like Automatic Dependence Surveillance-Broadcast (ADS-B) <ref> [4, 5] </ref>, Traffic Alert and Collision Avoidance Systems (TCAS) [6] and powerful on-board computation. In addition, tools such as NASA's Center-TRACON Automation System (CTAS) [7] and MITRE's URET [8] will serve as decision support tools for ground controllers in an effort to reduce ATC workload and optimize capacity. <p> Such algorithms would be used either on the ground by Air Traffic Control or in the air by the Flight Management System (FMS) of each aircraft. In the proposed Free Flight airspace, each aircraft is surrounded by two virtual cylinders <ref> [4] </ref>, the protected zone and the alert zone, shown in Figure 1. A conflict or loss of separation between two aircraft occurs whenever the protected zones of the aircraft overlap. <p> The heading changes of both aircraft are assumed to occur simultaneously. For this example, the velocities of the aircraft are chosen to be the same as in the second example of Section 3: v 1 2 <ref> [2; 4] </ref>, v 2 = [1; 5] and r = =2. The radius of the relative protected zone is 5 miles while the alert zone has a radius of 25 miles 1 .
Reference: [5] <author> Honeywell Inc. </author> <title> Concepts and Air Transportation Systems Report. </title> <type> Technical Report NASA Contract NAS2-114279, </type> <note> Final Report for AATT Contract, 1996. 24 </note>
Reference-contexts: User preference would be restricted only in congested airspace, or to prevent unauthorized entry of special use airspace (such as military airspace). Free Flight is potentially feasible because of enabling technologies such as Global Positioning Systems (GPS), datalink communications like Automatic Dependence Surveillance-Broadcast (ADS-B) <ref> [4, 5] </ref>, Traffic Alert and Collision Avoidance Systems (TCAS) [6] and powerful on-board computation. In addition, tools such as NASA's Center-TRACON Automation System (CTAS) [7] and MITRE's URET [8] will serve as decision support tools for ground controllers in an effort to reduce ATC workload and optimize capacity. <p> The heading changes of both aircraft are assumed to occur simultaneously. For this example, the velocities of the aircraft are chosen to be the same as in the second example of Section 3: v 1 2 [2; 4], v 2 = <ref> [1; 5] </ref> and r = =2. The radius of the relative protected zone is 5 miles while the alert zone has a radius of 25 miles 1 .
Reference: [6] <author> W. H. Harman. </author> <title> TCAS : A system for preventing midair collisions. </title> <journal> The Lincoln Laboratory Journal, </journal> <volume> 2(3) </volume> <pages> 437-457, </pages> <year> 1989. </year>
Reference-contexts: Free Flight is potentially feasible because of enabling technologies such as Global Positioning Systems (GPS), datalink communications like Automatic Dependence Surveillance-Broadcast (ADS-B) [4, 5], Traffic Alert and Collision Avoidance Systems (TCAS) <ref> [6] </ref> and powerful on-board computation. In addition, tools such as NASA's Center-TRACON Automation System (CTAS) [7] and MITRE's URET [8] will serve as decision support tools for ground controllers in an effort to reduce ATC workload and optimize capacity. <p> The work of [11, 12] formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem. The user interface of CTAS allows controllers to manually alter aircraft trajectories to resolve conflicts in en route airspace [14]. TCAS <ref> [6] </ref> provides resolution advisories (flight level changes) to pilots involved in two-aircraft conflicts, however these advisories are not formally verified. Conflict prediction, resolution, and verification are the most important modules that are in need of augmentation in the current implementations of CTAS and TCAS.
Reference: [7] <author> H. Erzberger, T. J. Davis, and S. Green. </author> <booktitle> Design of Center-TRACON Automation System. In Proceedings of the AGARD Guidance and Control Syposium on Machine Intelligence in Air Traffic Management, pages 11.1-11.12, </booktitle> <address> Berlin, Germany, </address> <year> 1993. </year>
Reference-contexts: Free Flight is potentially feasible because of enabling technologies such as Global Positioning Systems (GPS), datalink communications like Automatic Dependence Surveillance-Broadcast (ADS-B) [4, 5], Traffic Alert and Collision Avoidance Systems (TCAS) [6] and powerful on-board computation. In addition, tools such as NASA's Center-TRACON Automation System (CTAS) <ref> [7] </ref> and MITRE's URET [8] will serve as decision support tools for ground controllers in an effort to reduce ATC workload and optimize capacity.
Reference: [8] <author> D. J. Brudnicki and A. L. McFarland. </author> <title> User Request Evaluation Tool (URET) conflict probe performance and benefits assessment. </title> <booktitle> In Proceedings of the U.S.A./Europe ATM Seminar, </booktitle> <address> Eurocontrol, Paris, </address> <year> 1997. </year>
Reference-contexts: In addition, tools such as NASA's Center-TRACON Automation System (CTAS) [7] and MITRE's URET <ref> [8] </ref> will serve as decision support tools for ground controllers in an effort to reduce ATC workload and optimize capacity.
Reference: [9] <author> L. Yang and J. Kuchar. </author> <title> Prototype conflict alerting logic for free flight. </title> <booktitle> In Proceedings of the 35th AIAA Aerospace Sciences Meeting & Exhibit, </booktitle> <pages> AIAA 97-0220, </pages> <address> Reno, NV, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: When an aircraft enters the alert zone of another aircraft, the aircraft exchange sensor and intent information in order to predict and resolve the conflict. Current research endeavors in conflict prediction and resolution include <ref> [9, 10, 11, 12, 13] </ref>. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Current research endeavors in conflict prediction and resolution include [9, 10, 11, 12, 13]. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as <ref> [9, 10] </ref>, assume stochastic uncertainty in the measured information and determine the probability of collision. The work of [11, 12] formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem.
Reference: [10] <author> R. A. Paielli and H. Erzberger. </author> <title> Conflict probability and estimation for free flight. </title> <booktitle> In Proceedings of the 35th AIAA Aerospace Sciences Meeting & Exhibit, </booktitle> <pages> AIAA 97-0001, </pages> <address> Reno, NV, </address> <month> January </month> <year> 1997. </year>
Reference-contexts: When an aircraft enters the alert zone of another aircraft, the aircraft exchange sensor and intent information in order to predict and resolve the conflict. Current research endeavors in conflict prediction and resolution include <ref> [9, 10, 11, 12, 13] </ref>. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Current research endeavors in conflict prediction and resolution include [9, 10, 11, 12, 13]. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as <ref> [9, 10] </ref>, assume stochastic uncertainty in the measured information and determine the probability of collision. The work of [11, 12] formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem.
Reference: [11] <author> J. Krozel, T. Mueller, and G. Hunter. </author> <title> Free flight conflict detection and resolution analysis. </title> <booktitle> In Proceedings of the AIAA Guidance, Navigation and Control Conference, </booktitle> <address> AIAA-96-3763, San Diego, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: When an aircraft enters the alert zone of another aircraft, the aircraft exchange sensor and intent information in order to predict and resolve the conflict. Current research endeavors in conflict prediction and resolution include <ref> [9, 10, 11, 12, 13] </ref>. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Current research endeavors in conflict prediction and resolution include [9, 10, 11, 12, 13]. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as <ref> [11, 13] </ref>, calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. The work of <ref> [11, 12] </ref> formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem. The user interface of CTAS allows controllers to manually alter aircraft trajectories to resolve conflicts in en route airspace [14].
Reference: [12] <author> Y. Zhao and R. Schultz. </author> <title> Deterministic resolution of two aircraft conflict in free flight. </title> <booktitle> In Proceedings of the AIAA Guidance, Navigation and Control Conference, </booktitle> <address> AIAA-97-3547, New Orleans, LA, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: When an aircraft enters the alert zone of another aircraft, the aircraft exchange sensor and intent information in order to predict and resolve the conflict. Current research endeavors in conflict prediction and resolution include <ref> [9, 10, 11, 12, 13] </ref>. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. The work of <ref> [11, 12] </ref> formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem. The user interface of CTAS allows controllers to manually alter aircraft trajectories to resolve conflicts in en route airspace [14].
Reference: [13] <author> J.-H. Oh and E. Feron. </author> <title> Fast detection and resolution of multiple conflicts for 3-Dimensional free flight. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <address> San Diego, CA, </address> <year> 1997. </year>
Reference-contexts: When an aircraft enters the alert zone of another aircraft, the aircraft exchange sensor and intent information in order to predict and resolve the conflict. Current research endeavors in conflict prediction and resolution include <ref> [9, 10, 11, 12, 13] </ref>. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as [11, 13], calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Current research endeavors in conflict prediction and resolution include [9, 10, 11, 12, 13]. Conflict prediction could be spatial, temporal or probabilistic. Spatial and temporal approaches, such as <ref> [11, 13] </ref>, calculate the four dimensional coordinates of a possible conflict. Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. <p> Probabilistic approaches, such as [9, 10], assume stochastic uncertainty in the measured information and determine the probability of collision. The work of [11, 12] formulates conflict resolution as an optimal control problem whereas <ref> [13] </ref> treats the problem as a convex optimization problem. The user interface of CTAS allows controllers to manually alter aircraft trajectories to resolve conflicts in en route airspace [14]. TCAS [6] provides resolution advisories (flight level changes) to pilots involved in two-aircraft conflicts, however these advisories are not formally verified.
Reference: [14] <author> R. Slattery and S. Green. </author> <title> Conflict free trajectory planning for air traffic control automation. </title> <type> Technical Report NASA TM-108790, </type> <institution> NASA Ames Research Center, Moffett Field, </institution> <address> CA, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: The work of [11, 12] formulates conflict resolution as an optimal control problem whereas [13] treats the problem as a convex optimization problem. The user interface of CTAS allows controllers to manually alter aircraft trajectories to resolve conflicts in en route airspace <ref> [14] </ref>. TCAS [6] provides resolution advisories (flight level changes) to pilots involved in two-aircraft conflicts, however these advisories are not formally verified. Conflict prediction, resolution, and verification are the most important modules that are in need of augmentation in the current implementations of CTAS and TCAS.
Reference: [15] <author> C. Tomlin, G. Pappas, J. Lygeros, D. Godbole, and S. Sastry. </author> <title> Hybrid control models of next generation Air Traffic Management. </title> <editor> In P. Antsaklis, W. Kohn, A. Nerode, and S. Sastry, editors, </editor> <booktitle> Hybrid Systems IV, Lecture Notes in Computer Science 1273, </booktitle> <pages> pages 378-404. </pages> <publisher> Springer-Verlag, </publisher> <year> 1997. </year> <note> Longer version available as UCB/ERL Memo M97/7. </note>
Reference-contexts: TCAS [6] provides resolution advisories (flight level changes) to pilots involved in two-aircraft conflicts, however these advisories are not formally verified. Conflict prediction, resolution, and verification are the most important modules that are in need of augmentation in the current implementations of CTAS and TCAS. In <ref> [15] </ref> a possible future architecture for Air Traffic Management (ATM) is presented. In our paradigm, aircraft are allowed to self-optimize in the spirit of Free Flight, communicate state and intent data to each other using an ADS-B datalink for conflict prediction, and coordinate with each other to resolve potential conflicts.
Reference: [16] <author> Robert L. Grossman, Anil Nerode, Anders P. Ravn, and Hans Rischel, </author> <title> editors. Hybrid Systems. </title> <booktitle> Lecture Notes in Computer Science 736. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1993. </year> <month> 25 </month>
Reference-contexts: The interaction and information exchange of all of the aircraft involved in the maneuver results in a multi-agent hybrid control system. There are several approaches to hybrid system modeling, verification, and controller design (see, for example, <ref> [16, 17, 18, 19] </ref>). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata [21], and hybrid input/output automata [22].
Reference: [17] <editor> Panos Antsaklis, Wolf Kohn, Anil Nerode, and Shankar Sastry, editors. </editor> <booktitle> Hybrid Systems II. Lecture Notes in Computer Science 999. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The interaction and information exchange of all of the aircraft involved in the maneuver results in a multi-agent hybrid control system. There are several approaches to hybrid system modeling, verification, and controller design (see, for example, <ref> [16, 17, 18, 19] </ref>). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata [21], and hybrid input/output automata [22].
Reference: [18] <editor> R. Alur, T.A. Henzinger, and E.D. Sontag, editors. </editor> <booktitle> Hybrid Systems III. Lecture Notes in Computer Science 1066. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The interaction and information exchange of all of the aircraft involved in the maneuver results in a multi-agent hybrid control system. There are several approaches to hybrid system modeling, verification, and controller design (see, for example, <ref> [16, 17, 18, 19] </ref>). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata [21], and hybrid input/output automata [22].
Reference: [19] <author> P Antsaklis, W. Kohn, A. Nerode, and S. Sastry, </author> <title> editors. Hybrid Systems IV. </title> <booktitle> Lecture Notes in Computer Science 1273. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: The interaction and information exchange of all of the aircraft involved in the maneuver results in a multi-agent hybrid control system. There are several approaches to hybrid system modeling, verification, and controller design (see, for example, <ref> [16, 17, 18, 19] </ref>). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata [21], and hybrid input/output automata [22].
Reference: [20] <author> Rajeev Alur and David Dill. </author> <title> A theory of timed automata. </title> <journal> Theoretical Computer Science, </journal> <volume> 126 </volume> <pages> 183-235, </pages> <year> 1994. </year>
Reference-contexts: There are several approaches to hybrid system modeling, verification, and controller design (see, for example, [16, 17, 18, 19]). The computer science approach is to extend models of finite state automata to timed automata <ref> [20] </ref>, linear hybrid automata [21], and hybrid input/output automata [22]. Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system [23, 24, 25].
Reference: [21] <author> R. Alur, C. Courcoubetis, T.A. Henzinger, P.-H. Ho, X. Nicollin, A. Olivero, J. Sifakis, and S. Yovine. </author> <title> The algorithmic analysis of hybrid systems. </title> <editor> In G. Cohen and J.-P. Quadrat, editors, </editor> <booktitle> Proceedings of the 11th International Conference on Analysis and Optimization of Systems: Discrete-event Systems, Lecture Notes in Control and Information Sciences 199, </booktitle> <pages> pages 331-351. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: There are several approaches to hybrid system modeling, verification, and controller design (see, for example, [16, 17, 18, 19]). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata <ref> [21] </ref>, and hybrid input/output automata [22]. Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system [23, 24, 25].
Reference: [22] <author> N. Lynch, R. Segala, F. Vaandrager, and H.B. Weinberg. </author> <title> Hybrid I/O automata. In Hybrid Systems III, </title> <booktitle> Lecture Notes in Computer Science 1066, </booktitle> <pages> pages 496-510. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: There are several approaches to hybrid system modeling, verification, and controller design (see, for example, [16, 17, 18, 19]). The computer science approach is to extend models of finite state automata to timed automata [20], linear hybrid automata [21], and hybrid input/output automata <ref> [22] </ref>. Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system [23, 24, 25].
Reference: [23] <author> T.A. Henzinger. </author> <title> The theory of hybrid automata. </title> <booktitle> In Proceedings of the 11th Annual Symposium on Logic in Computer Science, </booktitle> <pages> pages 278-292. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system <ref> [23, 24, 25] </ref>. Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques [26], which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed [27, 28]. <p> The hybrid model presented in this section provides an organized, formal way to model and prove the safety of the maneuver. The hybrid model described below is inspired by that of <ref> [23] </ref> for linear hybrid automata, with the difference that we allow for a nonlinear continuous dynamic model within each discrete state and a general discrete transition relation. 5 Hybrid System Model A hybrid system H is defined to be the tuple H = (Q fi M; U fi D; ; I
Reference: [24] <author> A. Puri and P. Varaiya. </author> <title> Decidability of of hybrid systems with rectangular differential inclusions. </title> <booktitle> In Proceedings of the 6th International Computer Aided Verification Conference, </booktitle> <address> Stanford, CA, </address> <pages> pages 95-104, </pages> <year> 1994. </year>
Reference-contexts: Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system <ref> [23, 24, 25] </ref>. Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques [26], which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed [27, 28].
Reference: [25] <author> G. Pappas and S. Sastry. </author> <title> Towards continuous abstractions of dynamical and control systems. </title> <editor> In P. Antsaklis, W. Kohn, A. Nerode, and S. Sastry, editors, </editor> <booktitle> Hybrid Systems IV, Lecture Notes in Computer Science 1273, </booktitle> <pages> pages 329-341. </pages> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: Linear hybrid automata model or abstract the continuous dynamics by differential inclusions of the form A _x b and verify properties of the resulting abstracted system <ref> [23, 24, 25] </ref>. Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques [26], which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed [27, 28]. <p> In addition, we are extending the verification methodology to include lift and drag aerodynamic forces in the dynamics of the aircraft. Some preliminary results in this context have been presented in <ref> [25] </ref>, [43].
Reference: [26] <author> Z. Manna and A. Pnueli. </author> <title> Temporal Verification of Reactive Systems: Safety. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques <ref> [26] </ref>, which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed [27, 28]. Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31].
Reference: [27] <author> O. Maler, A. Pnueli, and J. Sifakis. </author> <title> On the synthesis of discrete controllers for timed systems. </title> <editor> In Ernst W. Mayr and Claude Puech, editors, </editor> <booktitle> STACS 95: Theoretical Aspects of Computer Science, Lecture Notes in Computer Science 900, </booktitle> <pages> pages 229-242. </pages> <publisher> Springer Verlag, </publisher> <address> Munich, </address> <year> 1995. </year>
Reference-contexts: Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques [26], which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed <ref> [27, 28] </ref>. Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation.
Reference: [28] <author> H. Wong-Toi. </author> <title> The synthesis of controllers for linear hybrid automata. </title> <booktitle> In Proceedings of the IEEE Conference on Decision and Control, </booktitle> <address> San Diego, CA, </address> <year> 1997. </year> <month> 26 </month>
Reference-contexts: Specifications are verified for these models using either model checking, which exhaustively check all system trajectories, or deductive theorem proving techniques [26], which prove the specification by induction on all system trajectories. In this framework, controller design has also been developed <ref> [27, 28] </ref>. Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation.
Reference: [29] <author> T. A. Henzinger, P. H. Ho, and H. Wong-Toi. </author> <title> A user guide to HYTECH. </title> <editor> In E. Brinksma, W. Cleaveland, K. Larsen, T. Margaria, and B. Steffen, editors, </editor> <booktitle> TACAS 95: Tools and Algorithms for the Construction and Analysis of Systems, Lecture Notes in Computer Science 1019, </booktitle> <pages> pages 41-71. </pages> <publisher> Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In this framework, controller design has also been developed [27, 28]. Automated computational tools have been developed for both model checking <ref> [29, 30] </ref>, and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of [32, 33, 34, 35, 36, 37].
Reference: [30] <author> C. Daws, A. Olivero, S. Tripakis, and S. Yovine. </author> <title> The tool KRONOS. In Hybrid Systems III, </title> <booktitle> Verification and Control, </booktitle> <pages> pages 208-219. </pages> <booktitle> Lecture Notes in Computer Science 1066, </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: In this framework, controller design has also been developed [27, 28]. Automated computational tools have been developed for both model checking <ref> [29, 30] </ref>, and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of [32, 33, 34, 35, 36, 37].
Reference: [31] <author> N. Bjorner, A. Browne, E. Chang, M. Colon, A. Kapur, Z. Manna, H. Sipma, and T. Uribe. </author> <title> STeP: The Stanford Temporal Prover (educational release), user's manual. </title> <type> Technical report, </type> <institution> STAN-CS-TR-95-1562, Department of Computer Science, Stanford University, </institution> <year> 1995. </year>
Reference-contexts: In this framework, controller design has also been developed [27, 28]. Automated computational tools have been developed for both model checking [29, 30], and theorem proving <ref> [31] </ref>. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of [32, 33, 34, 35, 36, 37].
Reference: [32] <author> R.W. Brockett. </author> <title> Hybrid models for motion control systems. </title> <editor> In H. Trentelman and J.C. Willems, editors, </editor> <booktitle> Perspectives in Control, </booktitle> <pages> pages 29-54. </pages> <publisher> Birkhauser, </publisher> <address> Boston, </address> <year> 1993. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems.
Reference: [33] <author> M. S. Branicky. </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Sciences, Massachusetts Institute of Technology, </institution> <year> 1994. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems. <p> Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory <ref> [33] </ref>, optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics. <p> Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control <ref> [33, 36, 37] </ref>, and control of discrete event systems [38, 39], to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics.
Reference: [34] <author> L. Tavernini. </author> <title> Differential automata and their discrete simulators. Nonlinear Analysis, </title> <journal> Theory, Methods and Applications, </journal> <volume> 11(6) </volume> <pages> 665-683, </pages> <year> 1987. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems.
Reference: [35] <author> A. Deshpande. </author> <title> Control of Hybrid Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Sciences, University of California at Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems.
Reference: [36] <author> J. Lygeros. </author> <title> Hierarchical, Hybrid Control of Large Scale Systems. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Sciences, University of California at Berkeley, </institution> <year> 1996. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems. <p> Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control <ref> [33, 36, 37] </ref>, and control of discrete event systems [38, 39], to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics.
Reference: [37] <author> A. Nerode and W. Kohn. </author> <title> Models for hybrid systems: Automata, topologies, controllability, observability. </title> <editor> In Robert L. Grossman, Anil Nerode, Anders P. Ravn, and Hans Rischel, editors, </editor> <title> Hybrid System, </title> <booktitle> Lecture Notes in Computer Science 736, </booktitle> <pages> pages 317-356. </pages> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Automated computational tools have been developed for both model checking [29, 30], and theorem proving [31]. Control theoretic approaches to modeling, analysis, and controller design for hybrid systems have extended the theory of dynamical systems to include discrete modes of operation. Modeling approaches include those of <ref> [32, 33, 34, 35, 36, 37] </ref>. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems [38, 39], to hybrid systems. <p> Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control <ref> [33, 36, 37] </ref>, and control of discrete event systems [38, 39], to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics.
Reference: [38] <author> M. Lemmon, J. A. Stiver, and P. J. Antsaklis. </author> <title> Event identification and intelligent hybrid control. </title> <editor> In Robert L. Grossman, Anil Nerode, Anders P. Ravn, and Hans Rischel, editors, </editor> <booktitle> Hybrid Systems, Lecture Notes in Computer Science 736, </booktitle> <pages> pages 268-296. </pages> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems <ref> [38, 39] </ref>, to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics.
Reference: [39] <author> M. Heymann, F. Lin, and G. Meyer. </author> <title> Control synthesis for a class of hybrid systems subject to configuration-based safety constraints. </title> <editor> In O. Maler, editor, </editor> <title> Hybrid and Real Time Systems, </title> <booktitle> Lecture Notes in Computer Science 1201, </booktitle> <pages> pages 376-391. </pages> <publisher> Springer Verlag, </publisher> <year> 1997. </year> <month> 27 </month>
Reference-contexts: Modeling approaches include those of [32, 33, 34, 35, 36, 37]. Analysis and design techniques extend existing control techniques, such as stability theory [33], optimal control [33, 36, 37], and control of discrete event systems <ref> [38, 39] </ref>, to hybrid systems. Our conflict resolution algorithms are in the spirit of model checking, but we use control theoretic (deductive) techniques to calculate the reachable region for hybrid systems with general nonlinear dynamics.
Reference: [40] <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> John Wiley, </publisher> <year> 1967. </year>
Reference-contexts: In order to compute this safe set of initial states, we first develop a method to compute the controlled invariant subsets for continuous systems in the presence of disturbances. A natural framework for this type of problem is zero-sum noncooperative dynamic game theory <ref> [40, 41] </ref>. In this framework, uncertain information about neighboring aircraft is treated as a disturbance. For a two-aircraft example, assuming a saddle solution to the game exists, each aircraft chooses an optimal policy assuming the worst possible disturbance.
Reference: [41] <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Non-cooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1995. </year>
Reference-contexts: In order to compute this safe set of initial states, we first develop a method to compute the controlled invariant subsets for continuous systems in the presence of disturbances. A natural framework for this type of problem is zero-sum noncooperative dynamic game theory <ref> [40, 41] </ref>. In this framework, uncertain information about neighboring aircraft is treated as a disturbance. For a two-aircraft example, assuming a saddle solution to the game exists, each aircraft chooses an optimal policy assuming the worst possible disturbance. <p> Equations (33) are not defined at t = 0, since s 1 = s 2 = 0 on @T , giving rise to "abnormal extremals" (meaning that the optimal Hamiltonian loses dependence on u and d at these points. Analogously to <ref> [41] </ref> (p. 442-443), we use an indirect method to calculate u fl (0) and d fl (0): at any point (x r ; y r ; r ) on @T , the derivatives of the switching functions s 1 and s 2 are _s 1 = y r v 1 (37)
Reference: [42] <author> J. Lygeros, D. N. Godbole, and S. Sastry. </author> <title> A verified hybrid controller for automated vehicles. </title> <type> Technical Report UCB-ITS-PRR-97-9, </type> <institution> Institute of Transportation Studies, University of Cal-ifornia, Berkeley, </institution> <year> 1997. </year> <note> To appear in the IEEE Transactions on Automatic Control, Special Issue on Hybrid Systems, </note> <month> April </month> <year> 1998. </year>
Reference-contexts: In this framework, uncertain information about neighboring aircraft is treated as a disturbance. For a two-aircraft example, assuming a saddle solution to the game exists, each aircraft chooses an optimal policy assuming the worst possible disturbance. This is motivated by the work of <ref> [42] </ref>, in which game 4 theoretic methods are used to prove safety of a set of maneuvers in Intelligent Vehicle Highway Systems. Along with the safe set of initial states, we calculate the corresponding safe set of control inputs as a function of the state.
Reference: [43] <author> J. Lygeros, C. Tomlin, and S. Sastry. </author> <title> Multiobjective hybrid controller synthesis. </title> <editor> In O. Maler, editor, </editor> <title> Hybrid and Real-Time Systems, </title> <booktitle> Lecture Notes in Computer Science 1201, </booktitle> <pages> pages 109-123. </pages> <publisher> Springer-Verlag, </publisher> <address> Grenoble, </address> <year> 1997. </year>
Reference-contexts: At the boundary of its safe region, the aircraft must apply the particular control which keeps it out of its unsafe region. Thus, we are naturally led to a switching control based protocol which is least restrictive. A more detailed description of this multiobjective methodology may be found in <ref> [43] </ref>. The resultant hybrid system is safe by design, as we illustrate with two versions of an interesting example of two aircraft conflict resolution in the horizontal plane. The organization of this paper is as follows: In Section 2 our modeling formalism and design methodology for hybrid systems is described. <p> (x; t) = fu 2 U j J (x; u (); d fl (); t) 0g (27) Additional system requirements, such as optimal fuel trajectories and passenger comfort, can now be incorporated by optimizing secondary and tertiary criteria within the constraints of set (27), following the multiobjective design methodology of <ref> [43] </ref>. <p> In addition, we are extending the verification methodology to include lift and drag aerodynamic forces in the dynamics of the aircraft. Some preliminary results in this context have been presented in [25], <ref> [43] </ref>.
Reference: [44] <author> C. Tomlin, G. Pappas, and S. Sastry. </author> <title> Conflict resolution for air traffic management: A case study in multi-agent hybrid systems. </title> <type> Technical report, </type> <institution> UCB/ERL M96/38, Electronics Research Laboratory, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: Inserting equations (5) and (8) in equation (4) results in the SE (2) relative configuration dynamics in local coordinates _x r = v 1 + v 2 cos r + ! 1 y r _ r = ! 2 ! 1 Similar results for SE (3) may be found in <ref> [44] </ref>. Thus for each discrete state q, the dynamics _x = f q (x; u; d) is described by (9), with x = (x r ; y r ; r ) T .
Reference: [45] <author> J. Kosecka, C. Tomlin, G. Pappas, and S. Sastry. </author> <title> Generation of conflict resolution maneuvers for air traffic management. </title> <booktitle> In International Conference on Intelligent Robots and Systems (IROS), </booktitle> <pages> pages 1598-1603, </pages> <address> Grenoble, </address> <year> 1997. </year>
Reference-contexts: The type of maneuver that may be verified with this technique can be much more general than that described here: in <ref> [45] </ref> we construct various parameter-dependent maneuvers for two, three, and four aircraft by using artificial potential field methods from robotic path planning to produce the maneuvers.
Reference: [46] <author> J. A. Sethian. </author> <title> Theory, algorithms, and applications of level set methods for propagating interfaces. </title> <type> Technical report, </type> <institution> Center for Pure and Applied Mathematics (PAM-651), University of California, Berkeley, </institution> <year> 1995. </year> <month> 28 </month>
Reference-contexts: The computation of the solution to the Hamilton-Jacobi-Isaacs PDE when J fl (x; t) is not a smooth function of x and t is possible, a survey paper <ref> [46] </ref> presents efficient computation schemes. In addition, we are extending the verification methodology to include lift and drag aerodynamic forces in the dynamics of the aircraft. Some preliminary results in this context have been presented in [25], [43].
References-found: 46

