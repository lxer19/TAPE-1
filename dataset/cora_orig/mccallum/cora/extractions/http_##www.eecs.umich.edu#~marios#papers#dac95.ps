URL: http://www.eecs.umich.edu/~marios/papers/dac95.ps
Refering-URL: http://www.eecs.umich.edu/~marios/pubs.html
Root-URL: http://www.cs.umich.edu
Title: DelaY: An Efficient Tool for Retiming with Realistic Delay Modeling  
Author: Kumar N. Lalgudi Marios C. Papaefthymiou 
Address: New Haven, CT 06520  
Affiliation: Department of Electrical Engineering Yale University  
Abstract: The retiming transformation can be used to optimize synchronous circuits for maximum speed of operation by relocating their storage elements. In this paper, we describe DelaY, a tool for retiming edge-triggered circuits under a realistic delay model that handles load-dependent gate delays, variable register setup times, interconnect delays, and clock skew. The operation of DelaY relies on a novel linear programming formulation of the retiming problem in this model. For the special case where clock skew is monotonic and all registers have equal propagation delays, the retiming algorithm in our tool runs in polynomial time and can transform any given edge-triggered circuit to achieve a specified clock period in O(V 3 F ) steps, where V is the number of logic gates in the circuit and F is bounded by the number of registers in the circuit. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year>
Reference-contexts: Algorithm GDMfeas terminates in O (V 3 F ) steps. The parameters D and W required for Inequalities (18) and (19) in Step 1 can be computed in O (V E + V 2 lg V ) time using Johnson's algorithm for all-pairs shortest-paths <ref> [1] </ref>. The functions f (r (v)) and g (r (u); r (v j )) can be computed in O (1) time. Since we have only V variables and no variable can exceed F , the body of the while loop is executed O (V F ) times.
Reference: [2] <author> F. de Lange, A. v. d. Hoeven, E. Deprettere, and J. Bu. </author> <title> An optimal floating-point pipeline CMOS CORDIC processor: algorithm, automated design, layout and performance. </title> <booktitle> In Custom Integrated Circuits Conference, </booktitle> <year> 1988. </year>
Reference-contexts: VII. Experimental Results We have implemented DelaY using the C programming language and integrated it into the SIS tools from Berkeley. In this section, we discuss some empirical results from the application of DelaY on a fourth-order IIR cascade filter [3], a floating point CORDIC processor <ref> [2] </ref>, and a serial/parallel multiplier [10]. The component delays in all three circuits were obtained using a few reasonable assumptions. Specifically, we assumed that bigger blocks have greater delays than smaller blocks.
Reference: [3] <author> S. Dey, M. Potkonjak, and R. Roy. </author> <title> Exploiting hardware sharing in high-level synthesis for partial scan optimization. </title> <booktitle> In Digest of Technical Papers of the 1993 IEEE International Conference on CAD, </booktitle> <pages> pages 20-25, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: VII. Experimental Results We have implemented DelaY using the C programming language and integrated it into the SIS tools from Berkeley. In this section, we discuss some empirical results from the application of DelaY on a fourth-order IIR cascade filter <ref> [3] </ref>, a floating point CORDIC processor [2], and a serial/parallel multiplier [10]. The component delays in all three circuits were obtained using a few reasonable assumptions. Specifically, we assumed that bigger blocks have greater delays than smaller blocks. <p> Fourth-order IIR cascade filter. (a) Original circuit. (b) Optimally retimed circuit obtained by Tim. (c) Optimally retimed circuit obtained by DelaY. from the Control Data Flow Graph in <ref> [3] </ref>. The original circuit in Fig. 4 (a) can be clocked with a period of 15 units. Fig. 4 (b) shows the optimally retimed IIR filter obtained from Tim. In the simple delay model, this circuit can be clocked with a period of 11 units.
Reference: [4] <author> J. P. Fishburn. </author> <title> Clock skew optimization. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 39(7) </volume> <pages> 945-951, </pages> <month> July </month> <year> 1990. </year>
Reference: [5] <author> A. T. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: VI. An Efficient Retiming Algorithm Our Algorithm GDMfeas for the efficient retiming of one-way extendible circuits is described in Fig. 2. The operation of this algorithm is based on the fact that simple integer programming programs can be solved by iterative relaxations <ref> [5, 13] </ref>. Initially, all constraints corresponding to Inequalities (18) and (19) are inserted into a queue, and all variables r (v) are set to zero. The algorithm proceeds by iteratively removing constraints from the queue.
Reference: [6] <author> K. N. Lalgudi and M. C. Papaefthymiou. </author> <title> Efficient retiming under a general delay model. </title> <booktitle> In Advanced Research in VLSI: Proc. of the 1995 MIT/UNC-Chapel Hill Conference. </booktitle> <publisher> IEEE Press, </publisher> <month> March </month> <year> 1995. </year>
Reference-contexts: Proof. It can be shown that Algorithm GDMfeas computes a unique nonnegative solution for Inequalities (18) and (19) in which every variable r (v) attains its minimum value that does not exceed F <ref> [6] </ref>.
Reference: [7] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year>
Reference: [8] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6(1), </volume> <year> 1991. </year> <note> Also available as MIT/LCS/TM-372. </note>
Reference-contexts: We assigned arbitrary values to t e and t b to make the circuits one-way end-extendible. In our experiments, we applied the following procedure. We first retimed each circuit to achieve its minimum clock period using Tim [15], a timing package that assumes the simple delay model described in <ref> [8] </ref>. We then calculated the actual clock period of the retimed circuit based on the realistic delay model and compared it with the optimal clock period obtained using DelaY. Our experimental results are summarized in Fig. 3.
Reference: [9] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase, </title> <booktitle> level-clocked circuits. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference: [10] <author> B. Lockyear and C. Ebeling. </author> <title> The practical application of re-timing to the design of high performance systems. </title> <booktitle> In Digest of Technical Papers of the 1993 IEEE International Conference on CAD, </booktitle> <pages> pages 288-295, </pages> <month> November </month> <year> 1993. </year>
Reference-contexts: In this section, we discuss some empirical results from the application of DelaY on a fourth-order IIR cascade filter [3], a floating point CORDIC processor [2], and a serial/parallel multiplier <ref> [10] </ref>. The component delays in all three circuits were obtained using a few reasonable assumptions. Specifically, we assumed that bigger blocks have greater delays than smaller blocks. We also assumed that bigger blocks have a greater driving resistance, and thus larger values of t e on their fanout edges.
Reference: [11] <author> S. Malik, E. Sentovich, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming and resynthesis: Optimizing sequential networks with combinational techniques. </title> <booktitle> In Proc. of the Hawaii International Conference on System Sciences, </booktitle> <month> June </month> <year> 1990. </year>
Reference: [12] <author> G. D. </author> <title> Micheli. Synchronous logic synthesis: algorithms for cycle-time minimization. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 10 </volume> <pages> 63-73, </pages> <month> January </month> <year> 1991. </year>
Reference: [13] <author> M. C. Papaefthymiou. </author> <title> A Timing Analysis and Optimization System for Level-Clocked Circuitry. </title> <type> PhD thesis, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <month> September </month> <year> 1993. </year> <note> Available as MIT/LCS/TR-605. </note>
Reference-contexts: VI. An Efficient Retiming Algorithm Our Algorithm GDMfeas for the efficient retiming of one-way extendible circuits is described in Fig. 2. The operation of this algorithm is based on the fact that simple integer programming programs can be solved by iterative relaxations <ref> [5, 13] </ref>. Initially, all constraints corresponding to Inequalities (18) and (19) are inserted into a queue, and all variables r (v) are set to zero. The algorithm proceeds by iteratively removing constraints from the queue.
Reference: [14] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-delay cycles. </title> <journal> Mathematical Systems Theory, </journal> <volume> 27 </volume> <pages> 65-84, </pages> <year> 1994. </year>
Reference: [15] <author> M. C. Papaefthymiou and K. H. Randall. Tim: </author> <title> a timing package for two-phase, </title> <booktitle> level-clocked circuitry. In Proceedings of the 30th ACM/IEEE Design Automation Conference, </booktitle> <month> June </month> <year> 1993. </year> <note> Also available as an MIT VLSI Memo 92-693, </note> <month> October </month> <year> 1992. </year>
Reference-contexts: We assigned arbitrary values to t e and t b to make the circuits one-way end-extendible. In our experiments, we applied the following procedure. We first retimed each circuit to achieve its minimum clock period using Tim <ref> [15] </ref>, a timing package that assumes the simple delay model described in [8]. We then calculated the actual clock period of the retimed circuit based on the realistic delay model and compared it with the optimal clock period obtained using DelaY. Our experimental results are summarized in Fig. 3.
Reference: [16] <author> A. Schrijver. </author> <title> Theory of Linear and Integer Programming. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1986. </year>
Reference: [17] <author> E. M. Sentovich, K. J. Singh, L. Lavagno, C. Moon, R. Mur-gai, A. Saldanha, H. Savoj, P. R. Stephan, R. K. Brayton, and A. L. Sangiovanni-Vincentelli. </author> <title> SIS: A system for sequential circuit synthesis. </title> <type> Technical Report UCB/ERL M92/41, </type> <institution> University of California, Berkeley, </institution> <month> May </month> <year> 1992. </year>
Reference: [18] <author> N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming of circuits with single phase level-sensitive latches. </title> <booktitle> In International Conference on Computer Design, </booktitle> <month> October </month> <year> 1991. </year>
Reference: [19] <author> N. V. Shenoy and R. Rudell. </author> <title> Efficient implementation of re-timing. </title> <booktitle> In Digest of Technical Papers of the 1994 IEEE/ACM International Conference on CAD, </booktitle> <month> November </month> <year> 1994. </year>
Reference: [20] <author> T. Soyata and E. Friedman. </author> <title> Retiming with non-zero clock skew, variable register and interconnect delay. </title> <booktitle> In Digest of Technical Papers of the 1994 IEEE International Conference on CAD, </booktitle> <month> November </month> <year> 1994. </year>
Reference: [21] <author> T. Soyata, E. Friedman, and J. Mulligan. </author> <title> Integration of clock skew and register delays into a retiming algorithm. </title> <booktitle> In Proceedings of International Symposium on Circuits and Systems, </booktitle> <pages> pages 1483-1486, </pages> <month> May </month> <year> 1993. </year>
References-found: 21

