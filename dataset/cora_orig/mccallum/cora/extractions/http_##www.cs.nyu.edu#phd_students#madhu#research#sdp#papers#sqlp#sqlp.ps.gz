URL: http://www.cs.nyu.edu/phd_students/madhu/research/sdp/papers/sqlp/sqlp.ps.gz
Refering-URL: http://www.cs.nyu.edu/phd_students/madhu/research/sdp/papers.html
Root-URL: http://www.cs.nyu.edu
Title: Mixed Semidefinite-Quadratic-Linear Programs  
Author: Jean-Pierre Haeberly Madhu V. Nayakkankuppam Michael L. Overton 
Abstract: We consider mixed semidefinite-quadratic-linear programs. These are linear optimization problems with three kinds of cone constraints, namely: the semidefinite cone, the quadratic cone and the nonnegative orthant. We outline a primal-dual path following method to solve these problems and highlight the main features of SDPpack, a Matlab package which solves such programs. We give some examples where such mixed programs arise, and provide numerical results on benchmark problems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Adler and F. Alizadeh. </author> <title> Primal-dual interior point algorithms for convex quadratically constrained and semidefinite optimization problems. </title> <type> Technical Report RRR 46-95, </type> <institution> RUTCOR, Rutgers University, </institution> <address> New Brunswick, NJ 08903, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: The condition for equality in Cauchy-Schwarz shows that if z T f = 0, then (z (k) ) T f (k) + (k) (k) = 0; with (k) z (k) = (k) f (k) ; k = 1; : : : ; M: Following <ref> [1] </ref>, this condition may be conveniently expressed as Arw (z) Arw (f ) e q = 0 where e q is a block vector whose kth block is e (k) k = 1; : : : ; M , and the block diagonal matrix Arw (z) = diag (arw ( (1) <p> Finally, the third complementarity condition (z (0) ) T f (0) = 0 implies the componentwise condition (z (0) ) k (f (0) ) k = 0, k = 1; : : : ; p 0 , since z (0) 0 and f (0) 0. Letting e ` = <ref> [1; : : : ; 1] </ref> T , this is conveniently written as diag (z (0) ) diag (f (0) ) e ` = 0: This much is just linear algebra.
Reference: [2] <author> F. Alizadeh, J.-P. A. Haeberly, M. V. Nayakkankuppam, M. L. Over-ton, and S. Schmieta. </author> <title> SDPpack User Guide (Version 0.9 Beta). </title> <type> Technical Report 737, </type> <institution> Courant Institute of Mathematical Sciences, </institution> <address> New York NY, </address> <month> June </month> <year> 1997. </year> <note> Also available from the SDPpack web page: http://www.cs.nyu.edu/faculty/overton/sdppack. </note>
Reference-contexts: Of the many flavors of interior-point methods [15, 17], we briefly describe the algorithm implemented in the public domain package SDPpack <ref> [2] </ref>. This is a primal-dual path-following algorithm based on the "XZ+ZX" direction of [4] (to be translated here as "ZF+FZ" given the notational differences), using a Mehrotra predictor-corrector scheme. The optimality conditions are completely determined by the three complementarity conditions together with the primal and the dual constraints. <p> Primal (dual) unboundedness is an indication of dual (primal) infeasibility. For full details, we refer the reader to the SDPpack User Manual <ref> [2] </ref>; see also Table 1. Due to the loop overhead in Matlab, each block diagonal matrix is stored as one large sparse matrix, instead of as individual blocks. This has the advantage that a sparse block in such a matrix is efficiently handled using Matlab's sparse matrix operations. <p> The last column (tf) is the termination flag (denoted termflag in SDPpack User Manual). A brief description of this flag is given in Table 1; for a more detailed explanation, consult the SDPpack User Manual <ref> [2] </ref>.
Reference: [3] <author> F. Alizadeh, J.-P. A. Haeberly, and M. L. Overton. </author> <title> Complementarity and nondegeneracy in semidefinite programming. </title> <journal> Mathematical Programming (Series B), </journal> <note> 1997. 16 J.-P. Haeberly et al. </note>
Reference-contexts: A stand-alone C code currently under development incorporates some techniques to improve performance on sparse problems. 3.3 Miscellaneous Features The package provides several support routines which include: * the routines scomp, pcond and dcond to examine complementarity and degeneracy conditions <ref> [3, 6] </ref>. These may be used, in particular, to check whether the computed primal and the dual solutions are unique. * the routine makesql to generate random SQLP's with solutions having prescribed "ranks". <p> Haeberly et al. Since nondegeneracy automatically implies bounds on ranks of the solution <ref> [3] </ref>, this routine is particularly useful in generating test problems whose solutions have specified degeneracy and complementarity proper ties. * the routine preproc to examine the consistency of the constraints.
Reference: [4] <author> F. Alizadeh, J.-P. A. Haeberly, and M. L. Overton. </author> <title> Primal-dual interior-point methods for semidefinite programming: convergence rates, stability and numerical results. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 8(3) </volume> <pages> 746-768, </pages> <year> 1998. </year>
Reference-contexts: Of the many flavors of interior-point methods [15, 17], we briefly describe the algorithm implemented in the public domain package SDPpack [2]. This is a primal-dual path-following algorithm based on the "XZ+ZX" direction of <ref> [4] </ref> (to be translated here as "ZF+FZ" given the notational differences), using a Mehrotra predictor-corrector scheme. The optimality conditions are completely determined by the three complementarity conditions together with the primal and the dual constraints. <p> A T 0 0 0 0 A s A q A ` 0 0 Arw (z) 0 0 Arw (f ) 0 0 0 0 diag (z (0) ) 0 0 diag (f (0) ) 3 7 7 7 7 : Here the symbol fl is the "symmetrized Kronecker product" <ref> [4] </ref>: for symmetric block diagonal matrices A; B; X (with block sizes n 1 ; : : : ; n L ), (A fl B) svecX = 1 svec (AXB + BXA) : This linear system is not solved directly, but via an efficient method exploiting block Gaussian elimination, that is
Reference: [5] <author> L. El Ghaoui and H. Lebret. </author> <title> Robust solutions to least-squares problems with uncertain data. </title> <journal> SIAM Journal on Matrix Analysis and Applications, </journal> <volume> 18(4) </volume> <pages> 1035-1064, </pages> <year> 1997. </year>
Reference-contexts: More information about any routine is available by typing help &lt;routine name&gt; from the Matlab prompt. 4 Applications We consider two examples of SQLP. Robust least squares This problem is taken from <ref> [5] </ref>. <p> It is shown in <ref> [5] </ref> that this problem can be formulated using quadratic cone constraints. Adding componentwise bound constraints, say x min x x max , converts this into an SQLP with a quadratic and a linear component. <p> These are problems with one semidefinite block and a linear block. The constraint matrices are extremely sparse, and the spatial mesh adjacency relation they describe gives them a banded structure; the results are shown in Table 4. Robust Least Squares This problem from <ref> [5] </ref> was described in Section 4. Numerical results for this problem class are shown in Table 5. Truss topology design These problems are pure SDP's that arise in truss topology design. The constraint matrices here are extremely sparse even for the moderately sized problems.
Reference: [6] <author> L. Faybusovich. </author> <title> Linear systems in Jordan algebras and primal-dual interior-point algorithms. </title> <journal> Journal of Computational and Applied Mathematics, </journal> <volume> 86 </volume> <pages> 149-175, </pages> <year> 1997. </year>
Reference-contexts: A stand-alone C code currently under development incorporates some techniques to improve performance on sparse problems. 3.3 Miscellaneous Features The package provides several support routines which include: * the routines scomp, pcond and dcond to examine complementarity and degeneracy conditions <ref> [3, 6] </ref>. These may be used, in particular, to check whether the computed primal and the dual solutions are unique. * the routine makesql to generate random SQLP's with solutions having prescribed "ranks".
Reference: [7] <author> J. Gondzio. </author> <title> Multiple centrality corrections in a primal-dual method for linear programming. </title> <journal> Computational Optimization and Applications, </journal> <volume> 6 </volume> <pages> 137-156, </pages> <year> 1996. </year>
Reference-contexts: We are concerned with extending some of these techniques to SQLP, namely * Gondzio's multiple centrality corrections <ref> [7] </ref>, and * Mehrotra's higher order corrections [12]. The main motivation behind considering these enhancements for SQLP is the ratio of the cost of forming and factorizing the Schur complement matrix relative to the cost of a backsolve. For SQLP, this ratio is typically much larger than for LP.
Reference: [8] <author> J.-P. A. Haeberly, M. V. Nayakkankuppam, and M. L. Overton. </author> <title> Extending Mehrotra and Gondzio higher order corrections to mixed semidefinite-quadratic-linear programming. Optimization Methods and Software. </title> <note> To appear. </note>
Reference-contexts: Mixed Semidefinite-Quadratic-Linear Programs 15 Schur complement matrix, it is worthwhile to improve the quality of the search direction by solving multiple linear systems with the same coefficient matrix, but different right hand sides. Both the above schemes can be extended to SQLP, and are described in detail elsewhere <ref> [8] </ref>. In our preliminary experiments, adapting Gondzio's multiple centrality corrections to SQLP reduces iteration count and CPU time, roughly to the same extent as reported for LP.
Reference: [9] <author> C. Helmberg, F. Rendl, R. Vanderbei, and H. Wolkowicz. </author> <title> An interior point method for semidefinite programming. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 6(2) </volume> <pages> 342-361, </pages> <year> 1996. </year>
Reference-contexts: If they are consistent, the redundant constraints, if any, are eliminated via a QR factorization of the constraint matrix A (see (14)). * the specialized solvers dsdp and lsdp (based on the "XZ method" <ref> [9, 10] </ref>) that exploit the special structure of problems arising in combinatorial optimization (for example, MAX-CUT relaxations and the Lovasz - function).
Reference: [10] <author> M. Kojima, S. Shindoh, and S. Hara. </author> <title> Interior point methods for the monotone linear complementarity problem in symmetric matrices. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 7(1) </volume> <pages> 86-125, </pages> <year> 1997. </year>
Reference-contexts: If they are consistent, the redundant constraints, if any, are eliminated via a QR factorization of the constraint matrix A (see (14)). * the specialized solvers dsdp and lsdp (based on the "XZ method" <ref> [9, 10] </ref>) that exploit the special structure of problems arising in combinatorial optimization (for example, MAX-CUT relaxations and the Lovasz - function).
Reference: [11] <author> Z.-Q. Luo, J. F. Sturm, and Z. Zhang. </author> <title> Duality and self-duality for conic convex programming. </title> <type> Technical report, </type> <institution> Econometric Institute, Erasmus University, </institution> <address> Rotterdam (The Netherlands), </address> <month> March </month> <year> 1996. </year>
Reference-contexts: The results are summarized in Table 6. LMI problems These problems are pure SDP's that arise in control applications. On the problems where the final complementarity residual is unsatisfactory (see Table 7), the dual iterates indeed get large, indicating that the primal problem may be infeasible or weakly infeasible <ref> [11] </ref>. 6 Other Computational Issues Several enhancements to the basic interior-point iteration of Section 2 have been proposed, and some used with success, in linear programming.
Reference: [12] <author> S. Mehrotra. </author> <title> Higher order methods and their performance. </title> <type> Technical Report Technical Report 90-16R1, </type> <institution> Department of Industrial Engineering and Management Sciences, Northwestern University, </institution> <address> Evanston, IL, </address> <year> 1991. </year>
Reference-contexts: We are concerned with extending some of these techniques to SQLP, namely * Gondzio's multiple centrality corrections [7], and * Mehrotra's higher order corrections <ref> [12] </ref>. The main motivation behind considering these enhancements for SQLP is the ratio of the cost of forming and factorizing the Schur complement matrix relative to the cost of a backsolve. For SQLP, this ratio is typically much larger than for LP.
Reference: [13] <author> S. Mehrotra. </author> <title> On the implementation of a primal-dual interior point method. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 2 </volume> <pages> 575-601, </pages> <year> 1992. </year>
Reference-contexts: If a unit primal (dual) step is taken, the new iterate also satisfies the primal (dual) equality constraints. The choice of the sequence of values for greatly influences the performance of the algorithm. The method described above is Mehrotra's predictor-corrector scheme <ref> [13] </ref>, originally proposed for linear programming, which significantly reduces the number of interior-point iterations needed to compute a solution of given accuracy.
Reference: [14] <author> Y. E. Nesterov and A. Nemirovskii. </author> <title> Interior-Point Polynomial Algorithms in Convex Programming, </title> <booktitle> volume 13 of Studies in applied mathematics. </booktitle> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1994. </year>
Reference-contexts: Letting e ` = [1; : : : ; 1] T , this is conveniently written as diag (z (0) ) diag (f (0) ) e ` = 0: This much is just linear algebra. To go further we make use of a well known result from optimization theory <ref> [14] </ref> stating that if strictly feasible primal and dual variables exist (points which satisfy all the inequalities strictly), then the optimal primal and dual objective values are equal, and that there exist primal and dual variables achieving these optimal values. Thus, the complementarity conditions must hold at the (optimal) solutions. <p> It is well known that, for all &gt; 0, this nonlinear system of equations has a unique solution satisfying the cone inequality constraints: the set of such solutions is called the central path <ref> [14] </ref>. As ! 0, this central solution converges to a (not necessarily unique) primal-dual solution of the SQLP. The algorithm we now outline uses Newton's method to approximately follow the central path as ! 0.
Reference: [15] <author> Y. E. Nesterov and M. J. Todd. </author> <title> Primal-dual interior-point methods for self-scaled cones. </title> <journal> SIAM Journal on Optimization, </journal> <volume> 8 </volume> <pages> 324-364, </pages> <year> 1998. </year>
Reference-contexts: Of the many flavors of interior-point methods <ref> [15, 17] </ref>, we briefly describe the algorithm implemented in the public domain package SDPpack [2]. This is a primal-dual path-following algorithm based on the "XZ+ZX" direction of [4] (to be translated here as "ZF+FZ" given the notational differences), using a Mehrotra predictor-corrector scheme.
Reference: [16] <author> L. Vandenberghe, S. Boyd, and A. El Gamal. </author> <title> Optimal wire and transistor sizing for circuits with non-tree topology. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer-Aided Design, </booktitle> <address> San Jose, CA, </address> <month> November </month> <year> 1997. </year> <title> Mixed Semidefinite-Quadratic-Linear Programs 17 </title>
Reference-contexts: It is shown in [5] that this problem can be formulated using quadratic cone constraints. Adding componentwise bound constraints, say x min x x max , converts this into an SQLP with a quadratic and a linear component. Clock mesh design This circuit design problem, taken from <ref> [16] </ref>, deals with the propagation of a clock signal in integrated circuits. A rectangular mesh with fixed grid points is given. The interconnecting wire segment between grid points i and j is assumed to be a rectangular strip of a fixed length, but variable width d ij . <p> A synchronous clock signal (of fixed frequency) applied to a fixed subset of the grid points has to be propagated to the entire mesh with minimal delay. There is an inherent tradeoff between the dominant delay (see <ref> [16] </ref> for Mixed Semidefinite-Quadratic-Linear Programs 13 the definition) and the power consumption of the circuit. <p> The goal is to optimally choose the widths d ij of the rectangular wire segments so that the power consumption of the circuit is minimized for a fixed value of the dominant delay that we are willing to tolerate. It is shown in <ref> [16] </ref> that this can be formulated as an SDP. Physical limitations on the width of the segments further impose bound constraints of the form d min d ij d max , which results in an SQLP with a semidefinite and a linear block. <p> Each problem in Table 3 also has three blocks of equal size; the block sizes for the five runs are 50, 100, 150, 200 and 250. Clock mesh design This problem from <ref> [16] </ref> was described in Section 4. These are problems with one semidefinite block and a linear block. The constraint matrices are extremely sparse, and the spatial mesh adjacency relation they describe gives them a banded structure; the results are shown in Table 4.

References-found: 16

