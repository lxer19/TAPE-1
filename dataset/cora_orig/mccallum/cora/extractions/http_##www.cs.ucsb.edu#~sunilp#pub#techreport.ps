URL: http://www.cs.ucsb.edu/~sunilp/pub/techreport.ps
Refering-URL: http://www.cs.ucsb.edu/~sunilp/pub.html
Root-URL: http://www.cs.ucsb.edu
Title: Efficient I/O for Very Large Multimedia Applications  
Author: Sunil Prabhakar Divyakant Agrawal Amr El Abbadi 
Address: Santa Barbara, CA 93106, U.S.A.  
Affiliation: Department of Computer Science University of California  
Abstract: The ever growing needs of large multimedia systems cannot be met by magnetic disks due to their high cost and low storage density. Consequently, cheaper and denser tertiary storage systems are being integrated into the storage hierarchies of these applications. Although tertiary storage is cheaper, the access latency is very high due to the need to load and unload media on the drives. This high latency and the bursty nature of I/O traffic result in the accumulation of I/O requests for tertiary storage. We study the problem of scheduling these requests to improve performance. In particular we address the issues of scheduling across multiple tapes or disks as opposed to most other studies which consider only one or two media. We focus on algorithms that minimize the number of switches and show through simulation that these result in near-optimal schedules. For single drive libraries an efficient algorithm that produces optimal schedules is developed. For multiple drives the problem is shown to be NP-Complete. Efficient and effective heuristics are presented for both single and multiple drives. The scheduling policies developed achieve significant performance gains over naive policies. The algorithms are simple to implement and are not restrictive. The study encompasses all types of storage libraries handling removable media, such as tapes and optical disks.
Abstract-found: 1
Intro-found: 1
Reference: [ABZ96] <author> M. Andrews, M. A. Bender, and L. Zhang. </author> <title> New algorithms for the disk scheduling problem. </title> <booktitle> In Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Processors, on the other hand, are many orders of magnitude faster than these switch and seek times. These differences in speed coupled with the fact that I/O traffic is bursty in nature <ref> [ABZ96, RW93] </ref> increase the potential of a large number of requests accumulating at the library. Processing requests in first come first serve (FCFS) order in such a system results in poor performance. <p> For disk scheduling, a number of requests need to be serviced on different locations. The drive has to seek between requests that are not contiguously located. Numerous algorithms have been proposed for efficiently servicing disk requests, such as C-SCAN [Teo72] and HEADSCHEDULE <ref> [ABZ96] </ref>. The major difference between disk scheduling and robotic library scheduling is that tertiary storage media such as tapes or optical disks are removable as opposed to fixed magnetic disks. <p> Further, it can be assumed that these requests arrive together, and thus the problem can be viewed as off-line scheduling with requests arriving together. This technique has also been used for studying disk scheduling policies <ref> [ABZ96] </ref>. <p> Note also that the order of 8 processing of requests within a medium is not restricted, i.e. any of the existing scheduling schemes (e.g. <ref> [HS96, LO96, ABZ96] </ref>) can be used. It is necessary only to be able to determine the seek and transfer times for each request.
Reference: [CDK + 95] <author> L. T. Chen, R. Drach, M. Keating, S. Louise, D. Rotem, and A. Shoshani. </author> <title> Efficient organization and access of multi-dimensional datasets on tertiary storage systems. </title> <booktitle> In Information Systems, </booktitle> <volume> volume 20, </volume> <pages> pages 155-83. </pages> <publisher> Elsevier Science, </publisher> <year> 1995. </year>
Reference-contexts: The feasibility of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95]. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance <ref> [CDK + 95, SS94] </ref>. 2.3 Problem Specification It has been shown that I/O traffic is bursty [RW93], i.e. a large number of requests arrive together followed by a long period during which no more requests arrive.
Reference: [CHL93] <author> M. J. Carey, L. M. Haas, and M. Livny. </author> <title> Tapes hold data, too: Challenges of tuples on tertiary store. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pages 413-7, </pages> <address> Washington, DC, </address> <year> 1993. </year>
Reference-contexts: Although tertiary storage, in particular magnetic tape, has historically been used primarily for archival or backup purposes, the exploding storage requirements and the higher cost of secondary storage are forcing computer architects and designers to re-evaluate the role of tertiary storage <ref> [CHL93] </ref>. Commercially available automatic tape and disk libraries or juke boxes (e.g. [EXA96, SON96, Qua96]) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media.
Reference: [DK93] <author> A. L. Drapeau and R. H. Katz. </author> <title> Striping in large tape libraries. </title> <booktitle> In Proc. of Supercomputing, </booktitle> <pages> pages 378-387, </pages> <address> Portland, Oregon, 1993. </address> <publisher> ACM. </publisher>
Reference-contexts: It is assumed that requests do not span more than one medium. Though it is possible that techniques such as striping could be used to split data items across several media, two independent studies <ref> [GM95, DK93] </ref> have concluded that due to the small number of drives in tertiary libraries, striping is not beneficial in the presence of concurrent users. <p> Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], a log structured file system for tertiary media has been proposed. The feasibility of striping in tape based systems has been studied by Drapeau and Katz <ref> [DK93] </ref> and also by Golubchik and Muntz [GM95].
Reference: [EXA96] <author> EXABYTE. </author> <title> Products. </title> <address> http://www.Exabyte.CO M:80/Products/, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or juke boxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic tape or an optical or magneto-optical disk.
Reference: [FM96] <author> D. A. Ford and J. Myllymaki. </author> <title> A log-structured organization for tertiary storage. </title> <booktitle> In Proceedings of the Twelfth International Conference on Data Engineering, </booktitle> <pages> pages 20-7, </pages> <address> New Orleans, Louisiana, </address> <year> 1996. </year>
Reference-contexts: Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage [SS93, ML95, Sar95a, Sar95b]. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In <ref> [FM96] </ref>, a log structured file system for tertiary media has been proposed. The feasibility of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95].
Reference: [GJ79] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Several variations of the problem of scheduling tasks on processors have been investigated <ref> [Par95, GJ79] </ref>. The various parameters studied include single versus multiple processors, preemptive versus non preemptive tasks, tasks with and without release times and deadlines, precedence constraints between tasks, tasks with weights or priorities and tasks with setup times.
Reference: [GM95] <author> L. Golubchik and R. Muntz. </author> <title> Analysis of striping techniques in robotic storage libraries. </title> <booktitle> In Proceedings of the Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 225-38, </pages> <address> Monterey, CA, </address> <year> 1995. </year>
Reference-contexts: It is assumed that requests do not span more than one medium. Though it is possible that techniques such as striping could be used to split data items across several media, two independent studies <ref> [GM95, DK93] </ref> have concluded that due to the small number of drives in tertiary libraries, striping is not beneficial in the presence of concurrent users. <p> In [FM96], a log structured file system for tertiary media has been proposed. The feasibility of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz <ref> [GM95] </ref>.
Reference: [HS96] <author> B. K. Hillyer and A. Silberschatz. </author> <title> Random I/O scheduling in online tertiary storage. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <address> Canada, </address> <year> 1996. </year>
Reference-contexts: The algorithms developed for disks assume that all requests are located on the currently loaded medium which is not true for robotic libraries. More recent work on tape scheduling <ref> [HS96, LO96] </ref> has studied efficient processing schedules for I/O requests for single tapes. In [HS96] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. <p> The algorithms developed for disks assume that all requests are located on the currently loaded medium which is not true for robotic libraries. More recent work on tape scheduling [HS96, LO96] has studied efficient processing schedules for I/O requests for single tapes. In <ref> [HS96] </ref> Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. <p> The order of processing the requests optimally within a medium is not important for our discussion. This order can be as simple as the order of the block numbers for linear tapes or more complex such as those suggested by Hillyer and Silberschatz <ref> [HS96] </ref> for serpentine tapes or any disk scheduling policy for optical disks. <p> Note also that the order of 8 processing of requests within a medium is not restricted, i.e. any of the existing scheduling schemes (e.g. <ref> [HS96, LO96, ABZ96] </ref>) can be used. It is necessary only to be able to determine the seek and transfer times for each request.
Reference: [LKB77] <author> J.K. Lenstra, A. K. G. Rinnooy Kan, and P. Brucker. </author> <title> Complexity of machine scheduling problems. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 1 </volume> <pages> 343-362, </pages> <year> 1977. </year>
Reference: [LLKS85] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys. </author> <title> The Traveling Salesman Problem. </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> 1985. </year>
Reference: [LO96] <author> J. Li and C. Orji. </author> <title> I/O scheduling in tape-based tertiary systems. </title> <journal> Journal of Mathematical Modelling and Scientific Computing, </journal> <volume> 6, </volume> <year> 1996. </year>
Reference-contexts: The algorithms developed for disks assume that all requests are located on the currently loaded medium which is not true for robotic libraries. More recent work on tape scheduling <ref> [HS96, LO96] </ref> has studied efficient processing schedules for I/O requests for single tapes. In [HS96] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. <p> More recent work on tape scheduling [HS96, LO96] has studied efficient processing schedules for I/O requests for single tapes. In [HS96] Hillyer and Silberschatz have analyzed algorithms for scheduling batched requests for a single serpentine tape that is loaded on the drive. Li and Orji <ref> [LO96] </ref> have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage [SS93, ML95, Sar95a, Sar95b]. <p> Note also that the order of 8 processing of requests within a medium is not restricted, i.e. any of the existing scheduling schemes (e.g. <ref> [HS96, LO96, ABZ96] </ref>) can be used. It is necessary only to be able to determine the seek and transfer times for each request.
Reference: [ML95] <author> J. Myllymaki and M. Livny. </author> <title> Disk-tape joins: Synchronizing disk and tape access. </title> <booktitle> In Joint International Conference on Measurement and Modeling of ComputerSystems. SIGMET-RICS '95/PERFORMANCE '95, </booktitle> <pages> pages 279-90, </pages> <address> Ottawa, Canada, </address> <year> 1995. </year>
Reference-contexts: Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage <ref> [SS93, ML95, Sar95a, Sar95b] </ref>. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], a log structured file system for tertiary media has been proposed.
Reference: [ML96] <author> J. Myllymaki and M. Livny. </author> <title> Efficient buffering for concurrent disk and tape I/O. </title> <booktitle> In Proceedings of Performance '96, Int. Conf. on Performance Theory, Measurement and Evaluation of Computer Communication Systems, </booktitle> <address> Lausanne, Switzerland, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage [SS93, ML95, Sar95a, Sar95b]. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel <ref> [ML96] </ref>. In [FM96], a log structured file system for tertiary media has been proposed. The feasibility of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95].
Reference: [Moo96] <author> R. Moore. </author> <title> Private Communication, </title> <booktitle> 1996. </booktitle> <pages> 21 </pages>
Reference-contexts: It is interesting to note that despite the inefficiency of the naive FCFS policy, it is used in commercial systems <ref> [Moo96] </ref>. 7 Conclusion We have investigated the problem of efficient I/O scheduling for tertiary libraries, a problem of great importance to multimedia applications handling large volumes of data. We began by developing scheduling algorithms that minimize the number of media switches (Minimum Switching scheduling).
Reference: [MP93] <author> T. E. Morton and D. W. Pentico. </author> <title> Heuristic Scheduling Systems with applications to Production Systems and Project Management. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1993. </year>
Reference-contexts: This measure, also known as the optimization function, could be one of several possibilities. Some of the popular optimization functions that have been studied in the literature include <ref> [Pin95, MP93] </ref>: Makespan: the time at which the last request is completed, TWCT: the Total Weighted Completion Time (each job has an assigned weight), and TWT: - the Total Waiting Time for all jobs and Throughput: the average number of requests serviced per second. <p> Thus the assumption is reasonable. 2.2 Related Work The problem of task or job scheduling has been extensively studied in the literature <ref> [Pin95, MP93] </ref>. Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Several variations of the problem of scheduling tasks on processors have been investigated [Par95, GJ79].
Reference: [PAES97] <author> S. Prabhakar, D. Agrawal, A. El Abbadi, and A. Singh. </author> <title> Scheduling tertiary I/O in database applications. </title> <booktitle> In Eighth International Workshop on Database and Expert Systems Applications, </booktitle> <pages> pages 722-727, </pages> <address> Toulouse, France, </address> <month> September </month> <year> 1997. </year> <journal> IEEE Computer Society. </journal>
Reference-contexts: Although tapes and optical disks, the two leading tertiary storage technologies today, differ significantly in their access characteristics (one is sequential and the other is random access) our study is general enough to be applicable to both. Preliminary results were presented in an earlier workshop <ref> [PAES97] </ref>. The rest of this paper is organized as follows. Section 2 describes the problem and discusses related work. Section 3 addresses the problem of minimum switching scheduling on a single drive.
Reference: [Par95] <author> G. R. Parker. </author> <title> Deterministic Scheduling Theory. </title> <publisher> Chapman & Hall, 2-6 Boundary Row, </publisher> <address> London SE1 8HN, UK, </address> <year> 1995. </year>
Reference-contexts: Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Several variations of the problem of scheduling tasks on processors have been investigated <ref> [Par95, GJ79] </ref>. The various parameters studied include single versus multiple processors, preemptive versus non preemptive tasks, tasks with and without release times and deadlines, precedence constraints between tasks, tasks with weights or priorities and tasks with setup times.
Reference: [Pin95] <author> M. Pinedo. </author> <title> Scheduling Theory, </title> <booktitle> Algorithms and Systems. Prentice-Hall International Series in Industrial and Systems Engineering. </booktitle> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1995. </year>
Reference-contexts: This measure, also known as the optimization function, could be one of several possibilities. Some of the popular optimization functions that have been studied in the literature include <ref> [Pin95, MP93] </ref>: Makespan: the time at which the last request is completed, TWCT: the Total Weighted Completion Time (each job has an assigned weight), and TWT: - the Total Waiting Time for all jobs and Throughput: the average number of requests serviced per second. <p> Thus the assumption is reasonable. 2.2 Related Work The problem of task or job scheduling has been extensively studied in the literature <ref> [Pin95, MP93] </ref>. Related areas are discussed here, with emphasis on the applicability of existing results to our problem. Several variations of the problem of scheduling tasks on processors have been investigated [Par95, GJ79]. <p> The analogous algorithm for the minimum weighted completion time problem (M W CT )[LKB77] has been shown to have an upper bound. In particular the algorithm is guaranteed to produce a solution that is within (1 + p 2)=2 (approximately within 20%) of the optimal for M W CT <ref> [Pin95] </ref>. This bound does not necessarily hold for the multiple drive problem due to the other constant factors in the cost. Given its good performance guarantee for the M W CT problem, we evaluated this algorithm for the multiple drive problem.
Reference: [Qua96] <institution> Quantum. Products and technology. </institution> <address> http://www.quantum.com/products, Oct. </address> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or juke boxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic tape or an optical or magneto-optical disk. <p> The DLT4700 mini tape library has a load/unload cycle of 29 seconds and the average seek time is about 68 seconds <ref> [Qua96] </ref>. Processors, on the other hand, are many orders of magnitude faster than these switch and seek times. These differences in speed coupled with the fact that I/O traffic is bursty in nature [ABZ96, RW93] increase the potential of a large number of requests accumulating at the library.
Reference: [RW93] <author> C. Ruemmler and J. Wilkes. </author> <title> UNIX disk access patterns. </title> <booktitle> In USENIX, </booktitle> <pages> pages 405-420, </pages> <month> Winter </month> <year> 1993. </year>
Reference-contexts: Processors, on the other hand, are many orders of magnitude faster than these switch and seek times. These differences in speed coupled with the fact that I/O traffic is bursty in nature <ref> [ABZ96, RW93] </ref> increase the potential of a large number of requests accumulating at the library. Processing requests in first come first serve (FCFS) order in such a system results in poor performance. <p> Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance [CDK + 95, SS94]. 2.3 Problem Specification It has been shown that I/O traffic is bursty <ref> [RW93] </ref>, i.e. a large number of requests arrive together followed by a long period during which no more requests arrive. Under these settings, the scheduling problem can be simplified by considering the requests in each burst independently.
Reference: [Sar95a] <author> S. Sarawagi. </author> <title> Database systems for efficient access to tertiary memory. </title> <booktitle> In Proceedings of the Fourteenth IEEE Symposium on Mass Storage Systems, </booktitle> <pages> pages 120-6, </pages> <address> Monterey, California, 1995. </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage <ref> [SS93, ML95, Sar95a, Sar95b] </ref>. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], a log structured file system for tertiary media has been proposed.
Reference: [Sar95b] <author> S. Sarawagi. </author> <title> Query processing in tertiary memory databases. </title> <booktitle> In Proc. of the 21st Int. Conf. on Very Large Data Bases, </booktitle> <pages> pages 585-596, </pages> <address> San Francisco, California, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage <ref> [SS93, ML95, Sar95a, Sar95b] </ref>. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], a log structured file system for tertiary media has been proposed.
Reference: [Sch86] <author> H. D. Schwetman. CSIM: </author> <title> A C-based, process-oriented simulation language. </title> <booktitle> In Proceedings of the 1986 Winter Simulation Conference, </booktitle> <pages> pages 387-396, </pages> <month> December </month> <year> 1986. </year>
Reference-contexts: section, we investigate experimentally the utility of extra media switches. 5.2 Experimental Results We first present the simulation setup used to conduct the experiments and then the results of the experiments. 5.2.1 Experimental Setup The experiments were conducted using an event driven simulator for robotic libraries developed using the CSIM <ref> [Sch86] </ref> simulation package. A model of a general robotic library consisting of a configurable number of drives, robot arms and media has been developed. The performance of the drives and robot arms and the characteristics of the media are also configurable.
Reference: [SON96] <author> SONY. </author> <title> Recording media products. </title> <address> http://sony.sosin.com.sg/record-media/, Oct. </address> <year> 1996. </year>
Reference-contexts: Commercially available automatic tape and disk libraries or juke boxes (e.g. <ref> [EXA96, SON96, Qua96] </ref>) provide automated access to large amounts of tertiary storage. These libraries can hold hundreds or thousands of media. Throughout this paper we will use the term medium to refer to a tertiary storage unit such as a magnetic tape or an optical or magneto-optical disk. <p> For example, the SONY OSL-2001 juke box can switch optical disks in about 5 seconds and the average seek time for optical disks is 28 - 40 milliseconds <ref> [SON96] </ref>. The DLT4700 mini tape library has a load/unload cycle of 29 seconds and the average seek time is about 68 seconds [Qua96]. Processors, on the other hand, are many orders of magnitude faster than these switch and seek times.
Reference: [SS93] <author> S. Sarawagi and M. Stonebraker. </author> <title> Single query opimization for tertiary memory. </title> <type> Technical Report s2k-94-45, </type> <institution> Computer Science Div. U.C. Berkeley, </institution> <month> December </month> <year> 1993. </year>
Reference-contexts: Li and Orji [LO96] have studied efficient scheduling policies for linear tapes. Both these studies do not consider scheduling requests for more than one medium. Work has also been done on optimizing the performance of relational database management systems that incorporate tertiary storage <ref> [SS93, ML95, Sar95a, Sar95b] </ref>. Myllymaki and Livny have investigated the benefits of executing tape and disk I/O in parallel [ML96]. In [FM96], a log structured file system for tertiary media has been proposed.
Reference: [SS94] <author> S. Sarawagi and M. Stonebraker. </author> <title> Efficient organization of large multidimensional arrays. </title> <booktitle> In IEEE Int. Conf. on Data Engineering, </booktitle> <pages> pages 328-336, </pages> <address> Houston, TX, USA, Feb. 1994. </address> <publisher> IEEE Comput. Soc. Press. </publisher>
Reference-contexts: The feasibility of striping in tape based systems has been studied by Drapeau and Katz [DK93] and also by Golubchik and Muntz [GM95]. Other studies have looked at the problem of reorganization of data that is stored on tertiary media in order to improve retrieval performance <ref> [CDK + 95, SS94] </ref>. 2.3 Problem Specification It has been shown that I/O traffic is bursty [RW93], i.e. a large number of requests arrive together followed by a long period during which no more requests arrive.
Reference: [Teo72] <author> T. J. Teorey. </author> <title> Properties of disk scheduling policies in multiprogrammed computer systems. </title> <booktitle> In Proceedings of the AFIPS Fall Joint Computer Conference, </booktitle> <pages> pages 1-11, </pages> <year> 1972. </year>
Reference-contexts: For disk scheduling, a number of requests need to be serviced on different locations. The drive has to seek between requests that are not contiguously located. Numerous algorithms have been proposed for efficiently servicing disk requests, such as C-SCAN <ref> [Teo72] </ref> and HEADSCHEDULE [ABZ96]. The major difference between disk scheduling and robotic library scheduling is that tertiary storage media such as tapes or optical disks are removable as opposed to fixed magnetic disks.
References-found: 28

