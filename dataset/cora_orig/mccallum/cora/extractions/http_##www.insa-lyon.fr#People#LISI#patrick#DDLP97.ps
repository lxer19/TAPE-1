URL: http://www.insa-lyon.fr/People/LISI/patrick/DDLP97.ps
Refering-URL: http://www.cs.toronto.edu/~mendel/dwbib.html
Root-URL: 
Email: hacid@cantor.informatik.rwth-aachen.de  fpatrick,crigg@lisi.insa-lyon.fr  
Phone: Tel +33 4 72 43 85 88 Fax: +33 4 72 43 87 13  
Title: A Rule-Based Language for Ordered Multidimensional Databases  
Author: Mohand-Sad Hacid Patrick Marcel, Christophe Rigotti 
Address: RWTH Aachen, Ahornstrae 55, 52074 Aachen, Germany  B^atiment 501, F-69621 Villeurbanne Cedex  
Affiliation: LuFg Theoretical Computer Science  Laboratoire d'Ingenierie des Systemes d'Information INSA Lyon,  
Abstract: This paper presents a rule-based language that supports multidimensional tables. It provides a simple and declarative way to express every query computable in polynomial time on ordered tables. We define its model-theoretic semantics and develop an equivalent fixpoint theory that is a basis for the reuse of standard optimization techniques.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul and S. Grumbach. </author> <title> A rule-based language with functions and sets. </title> <journal> ACM TODS, </journal> <volume> 16(1) </volume> <pages> 1-30, </pages> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: Let I be an interpretation. I satisfies r, denoted I j= r, iff for each valuation -, with -(r) = A B 1 ; : : : ; B n we have: 1. A 2 I, or 2. 9B i ; i 2 <ref> [1; : : : ; n] </ref>, B i is a positive literal, and B i 62 I, or 3. 9B i ; i 2 [1; : : : ; n], B i is a negative literal of the form :C and C 2 I, or 4. table (fAg) edb P , <p> A 2 I, or 2. 9B i ; i 2 <ref> [1; : : : ; n] </ref>, B i is a positive literal, and B i 62 I, or 3. 9B i ; i 2 [1; : : : ; n], B i is a negative literal of the form :C and C 2 I, or 4. table (fAg) edb P , or 5. 9B i ; i 2 [1; : : : ; n], B i is a negative literal, and table (fB i g) <p> is a positive literal, and B i 62 I, or 3. 9B i ; i 2 <ref> [1; : : : ; n] </ref>, B i is a negative literal of the form :C and C 2 I, or 4. table (fAg) edb P , or 5. 9B i ; i 2 [1; : : : ; n], B i is a negative literal, and table (fB i g) * edb P . The cases 1, 2 and 3 reflect the standard semipositive Datalog : semantics. <p> Remark B It should be noticed that even simple programs may have no model, as it is the case in other languages that allow some kind of monovaluation (e.g., Datalog with single-valued data functions [2], COL <ref> [1] </ref>). As an example, the following program defines two different cell contents for the same cell reference, and thus it has no model: a (b; c) : hei : Remark C We insist on the fact that the valuations map variables of V only to constants of D. <p> A ground atom A is an immediate consequence for I and P if either A 2 I, or 9r 2 R P and 9- with -(r) = A B 1 ; : : : ; B n , and: * 8i 2 <ref> [1; : : : ; n] </ref>, if B i is a negative literal of the form :C, then table (fB i g) edb P , and C 62 I, and * 8i 2 [1; : : : ; n], if B i is a positive literal, then B i 2 I, <p> -(r) = A B 1 ; : : : ; B n , and: * 8i 2 <ref> [1; : : : ; n] </ref>, if B i is a negative literal of the form :C, then table (fB i g) edb P , and C 62 I, and * 8i 2 [1; : : : ; n], if B i is a positive literal, then B i 2 I, and * table (fAg) * edb P .
Reference: [2] <author> S. Abiteboul and R. Hull. </author> <title> Data functions, datalog and negation. </title> <booktitle> In Proc. ACM SIGMOD, </booktitle> <pages> pages 143-153, </pages> <address> Chicago, IL, </address> <month> Jun. </month> <year> 1988. </year>
Reference-contexts: This difficulty is overcome by combining techniques stemming from previous works done in the area of databases and logic programming: * the use of a totally ordered domain (e.g., [3, chap. 17]), * the semantics of "monovaluation" as in Datalog with single-valued data functions <ref> [2] </ref>, and * a higher-order syntax as in Hilog [6] allowing schema browsing as in F-logic [11]. The main contributions of this paper are the following: first, we define a model-theoretic declarative semantics, that allows a high level specification of multidimensional data manipulations. <p> An interpretation is a consistent set of ground atoms. This consistency criterion is drawn from the semantics of Datalog with single-valued data functions <ref> [2] </ref>. Remark A Standard stable model semantics and well-founded semantics for normal programs can be generalized for languages with second order syntax and first order semantics like Hilog [14], and can also be used in our case. <p> Remark B It should be noticed that even simple programs may have no model, as it is the case in other languages that allow some kind of monovaluation (e.g., Datalog with single-valued data functions <ref> [2] </ref>, COL [1]). As an example, the following program defines two different cell contents for the same cell reference, and thus it has no model: a (b; c) : hei : Remark C We insist on the fact that the valuations map variables of V only to constants of D.
Reference: [3] <author> S. Abiteboul, R. Hull, and V. Vianu. </author> <booktitle> Foundations of databases. </booktitle> <year> 1995. </year>
Reference-contexts: This difficulty is overcome by combining techniques stemming from previous works done in the area of databases and logic programming: * the use of a totally ordered domain (e.g., <ref> [3, chap. 17] </ref>), * the semantics of "monovaluation" as in Datalog with single-valued data functions [2], and * a higher-order syntax as in Hilog [6] allowing schema browsing as in F-logic [11]. <p> The semantics of a program is given with respect to a finite set of ground atoms called the input, that represents the extensional part of the database (as for the presentation of semipositive Datalog : made in <ref> [3, Chapter 15] </ref>). fl Programs and Inputs. A program P is a pair noted hR P ; edb P i where R P is a set of range-restricted rules, and edb P is a set of ground names including min, max and succ. <p> Theorem 4.3 provides a straightforward naive evaluation procedure. 5 Expressive Power In this section, we characterize the expressive power of our language. The result relies on the fact that it is equivalent to that of semipositive Datalog : on ordered databases (see <ref> [3] </ref> for a presentation).
Reference: [4] <author> R. Agrawal, A. Gupta, and S. Sarawagi. </author> <title> Modeling multidimensional databases. </title> <type> Research report, </type> <institution> IBM Almaden research center, </institution> <address> 650 Harry road, San Jose, CA 95120, </address> <year> 1996. </year>
Reference-contexts: More recently, multidimensional structures has become the central focus of data representations and manipulations used in On-Line Analytical Processing (OLAP) [7, 8], a new challenging technology. Data models and languages capturing some of the OLAP functionalities have been designed <ref> [9, 4] </ref>, however to our knowledge no rule-based language has been proposed. In this paper we introduce such a language supporting ordered multidimensional tables. It is based on the point of view that a Datalog-like fact represents an entry (called cell reference) in a table. <p> Because of the growing interest in multidimensional models (e.g., OLAP [7]) the corresponding theoretical basis are currently investigated. Gyssens et al. [9] proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. <ref> [4] </ref> defined an algebra for providing multidimensional manipulations capabilities on top of relational database systems. To our knowledge, our work is the first one which proposes a formal rule-based language dedicated to multidimensional tabular data manipulations.
Reference: [5] <author> J.-F. Boulicaut, M.-S. Hacid, P. Marcel, and C. Rigotti. </author> <title> Un langage de manipulation de donnees pour feuilles de calcul. </title> <institution> Research report RR-97-01, LISI, INSA de Lyon, </institution> <month> Jan. </month> <year> 1997. </year> <pages> 24 pages, </pages> <note> in french, submitted. </note>
Reference-contexts: Beyond multidimensional databases 132 restructuring, a very promising field of application for this language is its use as a data ma-nipulation language for spreadsheet programs. This aspect is discussed in <ref> [5] </ref>. Our future work concern the incorporation of aggregates to specify table summarization.
Reference: [6] <author> W. Chen, M. Kifer, and D.S. Warren. HiLog: </author> <title> a foundation for higher-order logic programming. </title> <journal> JLP, </journal> <volume> 15(3) </volume> <pages> 187-230, </pages> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: overcome by combining techniques stemming from previous works done in the area of databases and logic programming: * the use of a totally ordered domain (e.g., [3, chap. 17]), * the semantics of "monovaluation" as in Datalog with single-valued data functions [2], and * a higher-order syntax as in Hilog <ref> [6] </ref> allowing schema browsing as in F-logic [11]. The main contributions of this paper are the following: first, we define a model-theoretic declarative semantics, that allows a high level specification of multidimensional data manipulations. <p> Our framework gives a direct syntax and semantics for multidimensionnal table manipulation in deductive databases, and as in the case of Hilog (that can be encoded in Prolog <ref> [6] </ref>) this direct syntactical and semantical representation of specific concepts provides an easily understandable formulation level and a better basis for evaluation. fl 6 Conclusion We proposed a rule-based language devoted to multidimensional tables representations and manipulations. Typical examples illustrated its use for restructuring ordered multidimensional databases.
Reference: [7] <author> E. F. Codd, S. B. Codd, and C. T. Salley. </author> <title> Providing olap (on-line analytical processing) to user-analysts: An IT mandate. </title> <address> White paper - http://www.arborsoft.com/essabse/wht ppr/coddTOC.html, </address> <year> 1993. </year>
Reference-contexts: More recently, multidimensional structures has become the central focus of data representations and manipulations used in On-Line Analytical Processing (OLAP) <ref> [7, 8] </ref>, a new challenging technology. Data models and languages capturing some of the OLAP functionalities have been designed [9, 4], however to our knowledge no rule-based language has been proposed. In this paper we introduce such a language supporting ordered multidimensional tables. <p> Because of the growing interest in multidimensional models (e.g., OLAP <ref> [7] </ref>) the corresponding theoretical basis are currently investigated. Gyssens et al. [9] proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. [4] defined an algebra for providing multidimensional manipulations capabilities on top of relational database systems.
Reference: [8] <author> R. Finkelstein. </author> <title> Understanding the need for on-line analytical servers. </title> <address> White paper - http://www.arborsoft.com/essabse/wht ppr/finkTOC.html, </address> <year> 1995. </year>
Reference-contexts: More recently, multidimensional structures has become the central focus of data representations and manipulations used in On-Line Analytical Processing (OLAP) <ref> [7, 8] </ref>, a new challenging technology. Data models and languages capturing some of the OLAP functionalities have been designed [9, 4], however to our knowledge no rule-based language has been proposed. In this paper we introduce such a language supporting ordered multidimensional tables.
Reference: [9] <author> M. Gyssens, L. V. S. Lakshmanan, and I. N. Subramanian. </author> <title> Tables as a paradigm for querying and restructuring. </title> <booktitle> In Proc. 15th ACM PODS, </booktitle> <address> Montreal, PQ, Canada, </address> <month> Jun. </month> <year> 1996. </year>
Reference-contexts: More recently, multidimensional structures has become the central focus of data representations and manipulations used in On-Line Analytical Processing (OLAP) [7, 8], a new challenging technology. Data models and languages capturing some of the OLAP functionalities have been designed <ref> [9, 4] </ref>, however to our knowledge no rule-based language has been proposed. In this paper we introduce such a language supporting ordered multidimensional tables. It is based on the point of view that a Datalog-like fact represents an entry (called cell reference) in a table. <p> Because of the growing interest in multidimensional models (e.g., OLAP [7]) the corresponding theoretical basis are currently investigated. Gyssens et al. <ref> [9] </ref> proposed a model of tabular database and an algebra for querying and restructuring it. Agrawal et al. [4] defined an algebra for providing multidimensional manipulations capabilities on top of relational database systems.
Reference: [10] <author> M. S. Hacid, P. Marcel, and C. Rigotti. </author> <title> A rule based CQL for 2 dimensional tables. </title> <editor> In V. Gaege, A. Brodsky, O. Gunther, D. Srivastava, V. Vianu, and M. Wallace, editors, </editor> <booktitle> Proc. 2nd Int. Workshop on Constraint Database Systems, volume 1191 of LNCS, </booktitle> <pages> pages 92-104, </pages> <address> Delphi, Greece, </address> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: To our knowledge, our work is the first one which proposes a formal rule-based language dedicated to multidimensional tabular data manipulations. We described only a core language, and various classical extensions can be made (e.g., the orthogonal combination with a constraint language over a concrete domain <ref> [10] </ref>). Beyond multidimensional databases 132 restructuring, a very promising field of application for this language is its use as a data ma-nipulation language for spreadsheet programs. This aspect is discussed in [5]. Our future work concern the incorporation of aggregates to specify table summarization.
Reference: [11] <author> M. Kifer, G. Lausen, and J. Wu. </author> <title> Logical foundations of object-oriented and frame-based languages. </title> <journal> JACM, </journal> <volume> 42(4) </volume> <pages> 741-843, </pages> <month> Jul. </month> <year> 1995. </year>
Reference-contexts: works done in the area of databases and logic programming: * the use of a totally ordered domain (e.g., [3, chap. 17]), * the semantics of "monovaluation" as in Datalog with single-valued data functions [2], and * a higher-order syntax as in Hilog [6] allowing schema browsing as in F-logic <ref> [11] </ref>. The main contributions of this paper are the following: first, we define a model-theoretic declarative semantics, that allows a high level specification of multidimensional data manipulations. Next we give a formal equivalent operational semantics that is a basis for the reuse of optimization methods developed for deductive databases.
Reference: [12] <author> D. Maier and B. Vance. </author> <title> A call to order. </title> <booktitle> In Proc. 12th ACM PODS, </booktitle> <pages> pages 1-16, </pages> <address> Washington, DC, </address> <month> May. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Representation of data in multidimensional structures with direct access (i.e., ordered data structures like lists or multidimensional arrays) is desirable in a variety of disciplines. In the area of databases, Maier and Vance <ref> [12] </ref> argued that the proposed extensions of the relational model (e.g., nested relations, complex objects, bags, lists, : : : ) lack in representation capabilities for contexts that could benefit from database technologies (such as scientific computing), and thus they pointed out the need for better supports of ordered data structures.
Reference: [13] <author> C. P. Papadimitriou. </author> <title> A note on the expressive power of prolog. </title> <journal> Bulletin of the EATCS, </journal> <volume> 26 </volume> <pages> 21-23, </pages> <year> 1985. </year>
Reference-contexts: Proof. By the two previous propositions, and since semipositive Datalog : expresses exactly qptime on ordered databases with min and max <ref> [13] </ref>. fl Remark D Although our programs can be encoded as semipositive Datalog : programs, this encoding is neither natural nor suggestive of specific evaluation technics.

References-found: 13

