URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/93-38.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: A Study of Theoretical Issues in the Synthesis of Delay Fault Testable Circuits 1  
Author: Sreejit Chakravarty Bell Hall 
Keyword: INDEX TERMS: Delay Fault Testable Circuits; Logic Optimization; Logic Synthesis; Testability Enhancing Tranformations; Testability Preserving Transformations.  
Address: New York Buffalo, NY 14260  
Affiliation: Dept. of Computer Science State University of  
Abstract: TECH. REPORT No. 93-38. Revised Version of 92-31 ) ABSTRACT Several useful multilevel logic optimization transformations (MLOT), not known to preserve path delay fault testability (PDFT), are shown to indeed do so. We show that, while minimizing area, a number of MLOTs can also be used to "improve" PDFT! A sufficient condition for identifying PDFT unate circuits is presented. We show how these results can be used to: improve a known method for synthesizing PDFT circuits; and to prove the PDFT of designs not known to be so. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Ashar, S. Devadas, and K. Keutzer, </author> <title> "Testability Properties of Multilevel logic networks derived from binary decision diagrams," </title> <booktitle> In Proc. Santa Crutz Conf. Adv. Research in VLSI, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits <ref> [1, 10, 13, 14] </ref> are area "inefficient".
Reference: [2] <author> R. K. Brayton, et. al., </author> <title> "MIS: A Multiple-Level Logic Optimization System," </title> <journal> IEEE Transactions on CAD/ISCAS, </journal> <month> November </month> <year> 1987, </year> <pages> pp. 1062 - 1081. </pages>
Reference-contexts: An atomic transformation (AT) T transforms a circuit C into a functionally equivalent circuit C T . ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution <ref> [2] </ref>, Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits [1, 10, 13, 14] are area "inefficient". <p> It is weaker than [10] in that it identifies conditions for MPP-HF DFT and not SPP-HF DFT circuits. Applications of these theoreticals results are discussed. Fanout free circuits contain no fanout points. In Tree Circuits, factored form <ref> [2] </ref> or Multilevel Expressions ( Figure1 (a) ) only primary inputs can fanout. 2 Testability Properties of ATs The following definitions are from [2]. A cube is a collection of input literals like fa; b; cg denoting the product term abc. <p> Applications of these theoreticals results are discussed. Fanout free circuits contain no fanout points. In Tree Circuits, factored form <ref> [2] </ref> or Multilevel Expressions ( Figure1 (a) ) only primary inputs can fanout. 2 Testability Properties of ATs The following definitions are from [2]. A cube is a collection of input literals like fa; b; cg denoting the product term abc. If a sum-of-product expression ( SOP ) consist of one cube it is a single cube else, it is a multiple cube ( e.g. ab + ab ).
Reference: [3] <author> B. Becker, R. Dreschsler, H. Hengster, </author> <title> "Local Circuit Transformations Preserving Robust Path-Delay-Fault Testability," </title> <type> Tech. Report, </type> <institution> Department of Informatiks, Univ. of Frankfurt, </institution> <address> FRG, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: Theorem 2.3. DSCC, XORC, D (2,2,3)C are MPP-HF as well as SPP-HF TPTs. A result along the lines of Theorem 2.3 is claimed in [16] and a very similar result was obtained in <ref> [3] </ref>. The proof sketch in [3] is different from the one we present here. Some of the derivations in our proofs are used to prove the rest of the results in the section. <p> Theorem 2.3. DSCC, XORC, D (2,2,3)C are MPP-HF as well as SPP-HF TPTs. A result along the lines of Theorem 2.3 is claimed in [16] and a very similar result was obtained in <ref> [3] </ref>. The proof sketch in [3] is different from the one we present here. Some of the derivations in our proofs are used to prove the rest of the results in the section. <p> This is because even if C a of Figure 2 (a) is not an SPP-HF DFT circuit it may be an MPP-HF DFT circuit. In this case we need to know if C b of Figure 2 (b) is at least an MPP-HF DFT circuit. From <ref> [3] </ref> it is not clear which of MPP or SPP "hazard free" RTs are being assumed. Thus, Theorem 2.3 is stronger than the result in [3] since we prove it for SPP-HF as well as MPP-HF RTs. <p> In this case we need to know if C b of Figure 2 (b) is at least an MPP-HF DFT circuit. From <ref> [3] </ref> it is not clear which of MPP or SPP "hazard free" RTs are being assumed. Thus, Theorem 2.3 is stronger than the result in [3] since we prove it for SPP-HF as well as MPP-HF RTs. The next results show how some of these ATs can or cannot be used to enhance DFT of the given circuit.
Reference: [4] <author> M. Bryan, S. Devadas and K. Keutzer, </author> <title> "Testability Preserving Circuit Transformations," </title> <booktitle> 1990 IEEE Int'l Conference on Computer-Aided Design, </booktitle> <pages> pp. 456 - 459. </pages>
Reference-contexts: If an atomic transformation is a SPP-HF or MPP-HF TPT then it can be used for the above purpose. Inverter Migration, Algebraic Resubstitution [5], Algebraic Resubstitution with "constrained" complement <ref> [5, 4] </ref> are SPP-HF TPTs whereas Extended Factorization [14] is an MPP-HF TPT. <p> Note that XORC, D (2,2,3)C are two useful instances of algebraic resubstitution with complement that do not satisfy the "con 2 Abbreviation for a two cube, with the two terms containing two literals each and its support having three variables 2 straint" <ref> [4, 5] </ref> but are SPP-HF TPTs. These results help in the exploration of a much larger design space. TPTs are useful when a DFT circuit is available. Often it isn't. In addition, a designer may not want to trade off "testability" with "area".
Reference: [5] <author> S. Devadas and K. Keutzer, </author> <title> "Synthesis of Robust Delay-Fault Testable Circuits: </title> <journal> Practice", IEEE Transactions on CAD/ISCAS, </journal> <month> March </month> <year> 1992, </year> <pages> pp. 277-300. </pages>
Reference-contexts: If an atomic transformation is a SPP-HF or MPP-HF TPT then it can be used for the above purpose. Inverter Migration, Algebraic Resubstitution <ref> [5] </ref>, Algebraic Resubstitution with "constrained" complement [5, 4] are SPP-HF TPTs whereas Extended Factorization [14] is an MPP-HF TPT. <p> If an atomic transformation is a SPP-HF or MPP-HF TPT then it can be used for the above purpose. Inverter Migration, Algebraic Resubstitution [5], Algebraic Resubstitution with "constrained" complement <ref> [5, 4] </ref> are SPP-HF TPTs whereas Extended Factorization [14] is an MPP-HF TPT. <p> Note that XORC, D (2,2,3)C are two useful instances of algebraic resubstitution with complement that do not satisfy the "con 2 Abbreviation for a two cube, with the two terms containing two literals each and its support having three variables 2 straint" <ref> [4, 5] </ref> but are SPP-HF TPTs. These results help in the exploration of a much larger design space. TPTs are useful when a DFT circuit is available. Often it isn't. In addition, a designer may not want to trade off "testability" with "area".
Reference: [6] <author> S. Devadas and K. Keutzer, </author> <title> "Synthesis of Robust Delay-Fault Testable Circuits: </title> <journal> Theory," IEEE Transactions on CAD/ISCAS, </journal> <month> January </month> <year> 1992, </year> <pages> pp. 87-101. </pages>
Reference-contexts: 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing <ref> [6, 10, 11, 14, 18] </ref>; and gate delay testing [6]. We assume path delay testing that uses the path delay fault model discussed below. <p> 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing [6, 10, 11, 14, 18]; and gate delay testing <ref> [6] </ref>. We assume path delay testing that uses the path delay fault model discussed below. Along every physical path, from an input to an output of the combinational circuit, two distinct transitions - P f , input falling and P r , input rising can propagate. <p> Each B i is DFT. Moreover, (8i)c i is a function of C 0 ; x 1 ; y 1 ; : : : ; x i1 ; y i1 . Therefore, c i is independent of x i ; y i . This and Theorem 4.4 from <ref> [6] </ref> implies that carry lookahead adders are MPP-HF DFT. This also implies that adders using group carrylookahead are also MPP-HF DFT. Prior to this only ripple carry adders were known to be DFT [6]. 4.2 Unate Decomposition Shannon's Expansion of Boolean expression E w.r.t. a splitting variable X j is given <p> This and Theorem 4.4 from <ref> [6] </ref> implies that carry lookahead adders are MPP-HF DFT. This also implies that adders using group carrylookahead are also MPP-HF DFT. Prior to this only ripple carry adders were known to be DFT [6]. 4.2 Unate Decomposition Shannon's Expansion of Boolean expression E w.r.t. a splitting variable X j is given by X j E 0 + X j E 1 where: E 1 ; E 0 are cofactors of E w.r.t. X j .
Reference: [7] <author> G. Hactel et. al., </author> <title> "On the Properties of Algebraic Transformations and the Multi-fault Testability of Multilevel Logic," </title> <booktitle> In Proc. 1989 IEEE International Conference on Computer-Aided Design, </booktitle> <month> November </month> <year> 1989, </year> <pages> pp. 422 - 425. </pages>
Reference-contexts: An atomic transformation (AT) T transforms a circuit C into a functionally equivalent circuit C T . ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability <ref> [7, 15] </ref>. Known synthesis methods for delay fault testable ( DFT ) circuits [1, 10, 13, 14] are area "inefficient".
Reference: [8] <author> N. K. Jha, I. Pomerantz, S. M. Reddy, R. J. Miller, </author> <title> "Synthesis of Multi-Level Combinational Circuits for Complete Robust Path Delay Fault Testability," </title> <booktitle> In Proc. IEEE/ACM International Fault-Tolerant Computing Symposium, </booktitle> <pages> pp. 280-287, </pages> <year> 1992. </year>
Reference-contexts: Often it isn't. In addition, a designer may not want to trade off "testability" with "area". We show that a number of area optimization ATs, if carefully applied, can be used to improve testability while reducing area. Use of ATs, like SR-1, to enhance testability <ref> [8] </ref> motivates the notion of Testability Enhancing Transformations ( TETs ) discussed in Section 2. We show that: Division by Multiple Cube (DMC)and DSCC are TETs; and Division by Single Cube (DSC), XORC and D (2,2,3)C are not TETs. <p> SR-1 <ref> [8] </ref> ( Figures 3 (a), (c) ) rewrites E as: A = a 1 : : : a t ; E = A (B 1 + : : : + B m ). where: l; a 0 i s; b 0 j s; r are input literals and A 0 i <p> Note that while considering TETs we do not worry if the "hazard free" RT is MPP or SPP. SR-1 is a TET (Theorem 1 of <ref> [8] </ref>). We next show that some ATs are TETs while others are not. For a proof of Theorem 2.4, stated below, see Appendix III. Theorem 2.4 DSC, XORC, D (2,2,3)C are not TETs. <p> c; f &gt; p 3 &gt; t ; &lt; p 1 &lt; B; h; g &gt; p 3 &gt; t + : : : + &lt; p 1 &lt; B; k; g &gt; p 3 &gt; t =)&lt; p 1 &lt; B; h; f &gt; p 3 &gt; t In <ref> [8] </ref> heuristics for carefully selecting the proper SR-1 transformation to improve testability was suggested. Similar heuristics can be derived from the first two ( third ) implications suggests a heuristic for DMC ( DSCC ).
Reference: [9] <author> S. Kundu and A. K. Parmanick, </author> <title> "Testability Preserving Boolean Transformation for Logic Synthesis," </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 331 - 338, </pages> <year> 1993. </year> <month> 11 </month>
Reference: [10] <author> S. Kundu, S. M. Reddy and N. K. Jha, </author> <title> "On the Design of Robustly Testable CMOS Combinational Logic Circuits," </title> <journal> IEEE Transactions on CAD/ISCAS, </journal> <month> August </month> <year> 1991, </year> <pages> pp. 1036 - 1048. </pages>
Reference-contexts: 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing <ref> [6, 10, 11, 14, 18] </ref>; and gate delay testing [6]. We assume path delay testing that uses the path delay fault model discussed below. <p> ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits <ref> [1, 10, 13, 14] </ref> are area "inefficient". <p> Understanding characteristics of DFT circuits is useful in enhancing known synthesis procedures and ascertain if known implementations are DFT. Such characteristics for two level circuits are known <ref> [10] </ref>. We present a sufficient condition that helps in identifying unate, multilevel circuits that are MPP-HF DFT. Our result is stronger than [10] in that it identifies multilevel unate MPP-HF DFT circuits. It is weaker than [10] in that it identifies conditions for MPP-HF DFT and not SPP-HF DFT circuits. <p> Understanding characteristics of DFT circuits is useful in enhancing known synthesis procedures and ascertain if known implementations are DFT. Such characteristics for two level circuits are known <ref> [10] </ref>. We present a sufficient condition that helps in identifying unate, multilevel circuits that are MPP-HF DFT. Our result is stronger than [10] in that it identifies multilevel unate MPP-HF DFT circuits. It is weaker than [10] in that it identifies conditions for MPP-HF DFT and not SPP-HF DFT circuits. Applications of these theoreticals results are discussed. Fanout free circuits contain no fanout points. <p> Such characteristics for two level circuits are known <ref> [10] </ref>. We present a sufficient condition that helps in identifying unate, multilevel circuits that are MPP-HF DFT. Our result is stronger than [10] in that it identifies multilevel unate MPP-HF DFT circuits. It is weaker than [10] in that it identifies conditions for MPP-HF DFT and not SPP-HF DFT circuits. Applications of these theoreticals results are discussed. Fanout free circuits contain no fanout points. <p> 4.1.<ref> [10] </ref> Let C 0 ; C 1 be MPP-HF ( SPP-HF ) DFT circuits implementing cofactors E 0 ; E 1 of X j . Then, C derived using decomposition rules of Figure 10 are MPP-HF ( SPP-HF ) DFT circuits. The following Unate Decomposition paradigm to synthesize DFT circuits [10] can be enhanced as discussed below. Robust-Testable-Design (F) Step 1. Minimize the function F for a two level design. Step 2. Check if the DFs in the two-level circuit of Step 1 are detectable. If yes, stop. Step 3. <p> Convert C 1 into a stuck-at irredundant circuit C E by identifying the irredundant s-a faults and eliminating them. Step 3. If C E is MPP-HF DFT then return. Else, choose a binate variable X j as the splitting variable using heuristics from <ref> [10] </ref>. Step 4. Determine the cofactors C 0 E ; C 1 E of C E w.r.t X j . Use MultiLevel Decomposition to construct MPP-HF DFT versions C 0 ; C 1 respectively of C 0 E ; C 1 Step. 5.
Reference: [11] <author> C. J. Lin and S. M. Reddy, </author> <title> "On Delay Fault Testing in Logic Circuits," </title> <journal> IEEE Transactions on CAD/ISCAS, </journal> <volume> Vol. 6, No. 5, </volume> <month> Sept. </month> <year> 1987, </year> <pages> pp. 694-703. </pages>
Reference-contexts: 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing <ref> [6, 10, 11, 14, 18] </ref>; and gate delay testing [6]. We assume path delay testing that uses the path delay fault model discussed below.
Reference: [12] <author> E. Mendelson, </author> <title> Introduction to Mathematical Logic. Second Edition. </title> <address> D. </address> <publisher> Van Nostrand. </publisher>
Reference: [13] <author> I. Pomerantz and S. M. Reddy, </author> <title> "Achieving complete delay fault testability by extra inputs," </title> <booktitle> In Proc. Intl. Test Conference, </booktitle> <month> Oct., </month> <year> 1991. </year>
Reference-contexts: ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits <ref> [1, 10, 13, 14] </ref> are area "inefficient".
Reference: [14] <author> A. K. Pramanick and S. M. Reddy, </author> <title> "On the Design of Path Delay Fault Testable Combinational Circuits," </title> <booktitle> In Proc. 20th IEEE International Fault- Tolerant Computing Symposium, </booktitle> <month> June </month> <year> 1990, </year> <pages> pp. 374 - 381. </pages>
Reference-contexts: 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing <ref> [6, 10, 11, 14, 18] </ref>; and gate delay testing [6]. We assume path delay testing that uses the path delay fault model discussed below. <p> An atomic transformation (AT) T transforms a circuit C into a functionally equivalent circuit C T . ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization <ref> [14] </ref>, transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits [1, 10, 13, 14] are area "inefficient". <p> ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability [7, 15]. Known synthesis methods for delay fault testable ( DFT ) circuits <ref> [1, 10, 13, 14] </ref> are area "inefficient". <p> If an atomic transformation is a SPP-HF or MPP-HF TPT then it can be used for the above purpose. Inverter Migration, Algebraic Resubstitution [5], Algebraic Resubstitution with "constrained" complement [5, 4] are SPP-HF TPTs whereas Extended Factorization <ref> [14] </ref> is an MPP-HF TPT. We show that a number of other useful ATs [15] like Division by Single Cube and its Complement ( DSCC ), Division by XOR and its complement ( XORC ), Division by D (2,2,3) 2 and its complement ( D (2,2,3)C ) are SPP-HF TPTs.
Reference: [15] <author> J. Rajski and J. Vasudevamurthy, </author> <title> "The Testability Preserving Concurrent Decomposition and Factorization of Boolean Expressions" IEEE Trans. </title> <journal> on CAD, </journal> <volume> Vol. 11, No. 6, </volume> <pages> pp. 778 - 793, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: An atomic transformation (AT) T transforms a circuit C into a functionally equivalent circuit C T . ATs used in multilevel optimization systems include Inverter-Migration, Algebraic Resubstitution [2], Extended Factorization [14], transformations based on Dual Extraction [15]etc. All these ATs preserve stuck-at testability <ref> [7, 15] </ref>. Known synthesis methods for delay fault testable ( DFT ) circuits [1, 10, 13, 14] are area "inefficient". <p> Inverter Migration, Algebraic Resubstitution [5], Algebraic Resubstitution with "constrained" complement [5, 4] are SPP-HF TPTs whereas Extended Factorization [14] is an MPP-HF TPT. We show that a number of other useful ATs <ref> [15] </ref> like Division by Single Cube and its Complement ( DSCC ), Division by XOR and its complement ( XORC ), Division by D (2,2,3) 2 and its complement ( D (2,2,3)C ) are SPP-HF TPTs.
Reference: [16] <author> J. Rajski, J. Vasudevamurthy and A. El-Maleh, </author> <title> "Recent Advances in Synthesis with Testability", </title> <booktitle> IEEE VLSI Test Symposium, </booktitle> <pages> pp. 254 - 256, </pages> <year> 1992. </year>
Reference-contexts: Theorem 2.3. DSCC, XORC, D (2,2,3)C are MPP-HF as well as SPP-HF TPTs. A result along the lines of Theorem 2.3 is claimed in <ref> [16] </ref> and a very similar result was obtained in [3]. The proof sketch in [3] is different from the one we present here. Some of the derivations in our proofs are used to prove the rest of the results in the section.
Reference: [17] <author> A. Saldhana, R. K. Brayton, A. L. Sangiovanni-Vincentelli, </author> <title> "Equivalence of Robust Delay-Fault and Single Stuck-Fault Test Generation," </title> <journal> IEEE/ACM Design Automation Conference, pp. </journal> <volume> 173 - 176, </volume> <year> 1992. </year>
Reference-contexts: Relationship between tests for stuck-at faults and RTs for DFs were studied in <ref> [17] </ref>. In [17] RTs for a path in a network fi was derived from a test for a stuck-at fault in another network fi 0 . We construct RTs for a path in fi from a test for a stuck-at fault in the network fi itself. <p> Relationship between tests for stuck-at faults and RTs for DFs were studied in <ref> [17] </ref>. In [17] RTs for a path in a network fi was derived from a test for a stuck-at fault in another network fi 0 . We construct RTs for a path in fi from a test for a stuck-at fault in the network fi itself. However, unlike the method in [17], our <p> In <ref> [17] </ref> RTs for a path in a network fi was derived from a test for a stuck-at fault in another network fi 0 . We construct RTs for a path in fi from a test for a stuck-at fault in the network fi itself. However, unlike the method in [17], our method can be used to construct RTs for paths starting at unate inputs only. From Lemmas 3.1, 3.2 we have Theorem 3.3. Theorem 3.3. All-path-irredundancy is a condition for unate circuits to be MPP-HF DFT. Cor. 3.4.
Reference: [18] <author> G. L. Smith, </author> <title> "Model for Delay Faults Based Upon Paths," </title> <booktitle> In Proc. 1985 IEEE International Test Conference, </booktitle> <month> Nov. </month> <year> 1985, </year> <pages> pp. 342 - 349. 12 </pages>
Reference-contexts: 1 Introduction Delay testing attempts to verify the timing specifications of circuits. Two models for delay testing are: path delay testing <ref> [6, 10, 11, 14, 18] </ref>; and gate delay testing [6]. We assume path delay testing that uses the path delay fault model discussed below.
References-found: 18

