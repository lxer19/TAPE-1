URL: ftp://theory.lcs.mit.edu/pub/tcryptol/98-09.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1998/98-09.html
Root-URL: 
Email: Email: mihir@cs.ucsd.edu.  Email: canetti@  Email: hugo@ee.technion.ac.il.  
Title: A Modular Approach to the Design and Analysis of Authentication and Key Exchange Protocols  
Author: Mihir Bellare Ran Canetti Hugo Krawczyk watson.ibm.com. 
Web: http://www-cse.ucsd.edu/users/mihir.  
Address: San Diego, 9500 Gilman Drive, La Jolla, CA 92093.  PO Box 704, Yorktown Heights, New York 10598.  32000, Israel,  New York, USA.  
Affiliation: Department of Computer Science Engineering, Mail Code 0114, University of California at  Science and Engineering. IBM T.J. Watson Research Center,  Department of Electrical Engineering, Technion, Haifa  and IBM T.J. Watson Research Center,  
Date: March 13, 1998  
Note: Theory of Computing, ACM, 1998. This is the full version.  Supported in part by NSF CAREER Award CCR-9624439 and a 1996 Packard Foundation Fellowship in  
Abstract: An extended abstract of this paper appears in Proceedings of the 30th Annual Symposium on the Abstract We present a general framework for constructing and analyzing authentication protocols in realistic models of communication networks. This framework provides a sound formalization for the authentication problem and suggests simple and attractive design principles for general authentication and key exchange protocols. The key element in our approach is a modular treatment of the authentication problem in cryptographic protocols; this applies to the definition of security, to the design of the protocols, and to their analysis. In particular, following this modular approach, we show how to systematically transform solutions that work in a model of idealized authenticated communications into solutions that are secure in the realistic setting of communication channels controlled by an active adversary. Using these principles we construct and prove the security of simple and practical authentication and key-exchange protocols. In particular, we provide a security analysis of some well-known key exchange protocols (e.g. authenticated Diffie-Hellman key exchange), and of some of the techniques underlying the design of several authentication protocols that are currently being deployed on a large scale for the Internet Protocol and other applications. 
Abstract-found: 1
Intro-found: 1
Reference: [Bea] <author> D. Beaver, </author> <title> "Foundations of Secure Interactive Computing", </title> <booktitle> Advances in Cryptology Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 576, </volume> <editor> J. Feigenbaum ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This captures the idea of "equivalent behavior" of protocols running in different models of communication. (Below we illustrate this notion by sketching how it is used to define secure key-exchange protocols.) The notion draws from general definitions of secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. <p> We want to capture the idea that `running 0 in an unauthenticated network has the same effect as running in an authenticated network'. This is done following a general approach used for defining secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. That is: Definition 1 Let and 0 be message-driven protocols for n parties.
Reference: [BCK] <author> M. Bellare, R. Canetti and H. Krawczyk, </author> <title> "A Modular Approach to the Design and Analysis of Authentication and Key Exchange Protocols", Available at 23 http://www-cse.ucsd.edu/users/mihir and at the Theory of Cryptography Library, </title> <address> http://theory.lcs.mit.edu/~tcryptol, March 1998. </address>
Reference-contexts: In Section 5 we show the application of the tools developed in previous sections to the construction of specific secure key exchange protocols. This is exemplified through several important variants of the authenticated Diffie-Hellman protocol. Proofs are omitted throughout, for lack of space. They appear in <ref> [BCK] </ref>. 2 Authenticators We introduce authenticators, i.e. compilers for unauthenticated networks, and show how to build them from simple protocols. Informally, an authenticator takes a protocol for (ideally) authen 6 ticated networks and turns it into a protocol that has similar input-output characteristics in an unauthenticated network.
Reference: [BPRR] <author> M. Bellare, E. Petrank, C. Rackoff and P. Rogaway, </author> <title> "Authenticated key ex change in the public key model," </title> <type> 1995-96. </type>
Reference-contexts: They also provided and proved secure some simple protocols. Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings [SR]; Lucks to consider dictionary attacks [Luc]; Blake-Wilson, Johnson and Menezes [BlMe, BJM] and Bellare, Petrank, Rackoff and Rogaway <ref> [BPRR] </ref> for the public key setting. See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange. A different approach to the analysis of authentication and key exchange protocols is provided through the use of logic tools.
Reference: [BR1] <author> M. Bellare and P. Rogaway, </author> <title> "Entity authentication and key distribution", </title> <booktitle> Advances in Cryptology - Crypto 93 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 773, </volume> <editor> D. Stinson ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Here authentication cannot be achieved by simply applying signatures or message authentication codes to the transmitted data (although these primitives are useful tools in the design of complete solutions). Several facets of the authentication problem have received a rigorous treatment, most notably entity authentication between two parties <ref> [BR1] </ref> and authenticated message transmission [Ra]. However there are basic and general questions that still remain untreated. The first part of our effort will go into properly formulating and then solving these. <p> Experience indicates that it is far more subtle and harder to achieve than may appear at first glance. A very large number of proposed protocols succumb to attacks not envisioned by their designers. The first works to provide formal foundations in this area were those of Bellare and Rogaway <ref> [BR1, BR2] </ref>. They addressed the problems of entity authentication and key exchange in the two party, shared key model, and the problem of three party key distribution (Needham Schroeder [NS], or Kerberos [SNS] model). Generalizations are possible in order to accommodate other tasks and models of interest. <p> The above-mentioned works of Bellare and Rogaway <ref> [BR1, BR2] </ref> provided formalizations for certain cases. They introduced the model of an adversary in charge of all communications, modeled sessions and session key reveal attacks, and suggested that the session key should be strongly secure, in the sense of semantic security.
Reference: [BR2] <author> M. Bellare and P. Rogaway, </author> <title> "Provably secure session key distribution- the three party case," </title> <booktitle> Proceedings of the 27th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1995. </year>
Reference-contexts: Experience indicates that it is far more subtle and harder to achieve than may appear at first glance. A very large number of proposed protocols succumb to attacks not envisioned by their designers. The first works to provide formal foundations in this area were those of Bellare and Rogaway <ref> [BR1, BR2] </ref>. They addressed the problems of entity authentication and key exchange in the two party, shared key model, and the problem of three party key distribution (Needham Schroeder [NS], or Kerberos [SNS] model). Generalizations are possible in order to accommodate other tasks and models of interest. <p> The above-mentioned works of Bellare and Rogaway <ref> [BR1, BR2] </ref> provided formalizations for certain cases. They introduced the model of an adversary in charge of all communications, modeled sessions and session key reveal attacks, and suggested that the session key should be strongly secure, in the sense of semantic security.
Reference: [BlMe] <author> S. Blake-Wilson and A. Menezes, </author> <title> "Entity authentication and authenticated key transport protocols employing asymmetric techniques", </title> <booktitle> Proceedings of the 1997 Security Protocols Workshop, </booktitle> <year> 1997. </year>
Reference-contexts: They also provided and proved secure some simple protocols. Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings [SR]; Lucks to consider dictionary attacks [Luc]; Blake-Wilson, Johnson and Menezes <ref> [BlMe, BJM] </ref> and Bellare, Petrank, Rackoff and Rogaway [BPRR] for the public key setting. See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange. A different approach to the analysis of authentication and key exchange protocols is provided through the use of logic tools.
Reference: [BJM] <author> S. Blake-Wilson, D. Johnson and A. Menezes, </author> <title> "Key exchange protocols and their security analysis," </title> <booktitle> Proceedings of the sixth IMA International Conference on Cryptography and Coding, </booktitle> <year> 1997. </year>
Reference-contexts: They also provided and proved secure some simple protocols. Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings [SR]; Lucks to consider dictionary attacks [Luc]; Blake-Wilson, Johnson and Menezes <ref> [BlMe, BJM] </ref> and Bellare, Petrank, Rackoff and Rogaway [BPRR] for the public key setting. See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange. A different approach to the analysis of authentication and key exchange protocols is provided through the use of logic tools.
Reference: [BCG] <author> M. Ben-Or, R. Canetti and O. Goldreich, </author> <title> "Asynchronous Secure Computations", </title> <booktitle> Proceedings of the 25th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1993. </year>
Reference-contexts: In order to capture these concerns we allow our adversaries total control over the scheduling of messages. Formally, this modeling is reminiscent of the asynchronous model used in the theory of secure distributed computing (see <ref> [BCG] </ref> for instance). Yet, it is stressed that the notion of asynchrony there is different from the one here in several respects; in addition the motivations are different. In Section 2.1 we present basic definitions that are central for our formalization and techniques.
Reference: [BGW] <author> M. Ben-Or, S. Goldwasser, and A. Wigderson, </author> <title> Completeness theorems for non cryptographic fault-tolerant distributed computations, </title> <booktitle> Proceedings of the 20th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1988. </year>
Reference-contexts: Many of the fundamental works and techniques for the design of cryptographic protocols were developed under the idealized assumption of "au-thenticated links" between the communicating parties. Prime examples are the Diffie-Hellman key exchange protocol [DH] as well as much of the work on secure distributed function evaluation (eg, <ref> [Y, GMW, BGW, CCD] </ref>). This abstraction of the authentication problem is of great value when developing higher level protocols. However, implementing these "authenticated links" in realistic environments is far less trivial than one would have initially imagined. In particular, networks are often asynchronous in nature, and protocols are often message-driven.
Reference: [BGH+] <author> R. Bird, I. Gopal, A. Herzberg, P. Janson, S. Kutten, R. Molva and M. Yung, </author> <title> "Systematic design of two-party authentication protocols," </title> <booktitle> Advances in Cryptology -Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 576, </volume> <editor> J. Feigenbaum ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Related work. As indicated above, the design of these protocols has a long history in which many protocols are proposed and broken. The works of Bird et al. <ref> [BGH+] </ref> and Diffie et al. [DOW], the first in the model of shared secrets and the second in the public key model, exposed several of the subtleties involved.
Reference: [BAN] <author> M. Burrows, M. Abadi and R. Needham, </author> <title> "A logic for authentication," </title> <note> DEC Systems Research Center Technical Report 39, </note> <month> February </month> <year> 1990. </year> <booktitle> Earlier versions in Proceedings of the Second Conference on Theoretical Aspects of Reasoning about Knowledge, 1988, and Proceedings of the Twelfth ACM Symposium on Operating Systems Principles, </booktitle> <year> 1989. </year>
Reference-contexts: See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange. A different approach to the analysis of authentication and key exchange protocols is provided through the use of logic tools. The best known example is the BAN logic of <ref> [BAN] </ref>. This approach, however, abstracts out the cryptographic mechanisms and replace them with ideal primitives, thus limiting the significance of a successful analysis of a given protocol (on the other hand, these tools have proven useful to "debug" some weaknesses from certain authentication protocols).
Reference: [Ca1] <author> R. Canetti, </author> <title> "Modular Composition of Secure Multiparty Protocols", Available at the Theory of Cryptography Library, </title> <address> http://theory.lcs.mit.edu/ tcryptol, </address> <year> 1998. </year>
Reference-contexts: This captures the idea of "equivalent behavior" of protocols running in different models of communication. (Below we illustrate this notion by sketching how it is used to define secure key-exchange protocols.) The notion draws from general definitions of secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. <p> We want to capture the idea that `running 0 in an unauthenticated network has the same effect as running in an authenticated network'. This is done following a general approach used for defining secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. That is: Definition 1 Let and 0 be message-driven protocols for n parties.
Reference: [Ca2] <author> R. Canetti, </author> <title> "Towards realizing random oracles: Hash functions that hide all partial in formation", </title> <booktitle> Advances in Cryptology - Crypto 97 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1294, </volume> <editor> B. Kaliski ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: For discussion and more details on this assumption see, for instance, <ref> [Ca2, NR] </ref>.) 2 Let C sig and C enc be the layered authenticators based on mt-authenticators sig and enc , respectively (see Section 3). Then, it follows from Corollary 8 that both C sig (dh) and C enc (dh) are secure KE protocols in unauthenticated networks.
Reference: [CHH] <author> R. Canetti, S. Halevi and A. Herzberg, </author> <title> "How to Maintain Authenticated Commu nication", </title> <booktitle> 16th PODC, </booktitle> <pages> 15-25, </pages> <year> 1997. </year>
Reference-contexts: Finally we note that a similar notion of an "authenticator" is used in <ref> [CHH] </ref>. There, however, both the setting and the solution are quite different: they design a proactive authenticator against a mobile adversary and in an ideally synchronized network. Organization. In Section 2 we present our communication models and formulate the central notion of an authenticator, i.e. a compiler for authenticated networks.
Reference: [CFGN] <author> R. Canetti, U. Feige, O. Goldreich and M. Naor, </author> <title> "Adaptively Secure Computa tion", </title> <booktitle> Proceedings of the 28th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1996. </year> <note> Fuller version MIT-LCS-TR #682, 1996. 24 </note>
Reference-contexts: This more conservative formalization captures the reluctance of parties to base their security on the good will of other parties to locally erase data. See <ref> [CFGN] </ref> for a discussion. In this work, the distinction between the two formalizations will become apparent in Section 5. 4 We do not limit the number of parties that the adversary can corrupt. <p> In some cases non-committing (ie, adaptively secure) encryption will suffice <ref> [CFGN] </ref>. See details there. 20 Typically in practice, the exchange is bi-directional. That is, both A and B send encrypted values to each other, and the established key is some function (say, the bitwise exclusive or) of the two values.
Reference: [CCD] <author> D. Chaum, C. Cr epeau, and I. Damgard, </author> <title> "Multiparty unconditionally secure proto cols", </title> <booktitle> Proceedings of the 20th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1988. </year>
Reference-contexts: Many of the fundamental works and techniques for the design of cryptographic protocols were developed under the idealized assumption of "au-thenticated links" between the communicating parties. Prime examples are the Diffie-Hellman key exchange protocol [DH] as well as much of the work on secure distributed function evaluation (eg, <ref> [Y, GMW, BGW, CCD] </ref>). This abstraction of the authentication problem is of great value when developing higher level protocols. However, implementing these "authenticated links" in realistic environments is far less trivial than one would have initially imagined. In particular, networks are often asynchronous in nature, and protocols are often message-driven.
Reference: [DH] <author> W. Diffie and M. Hellman, </author> <title> "New directions in cryptography," </title> <journal> IEEE Trans. Info. Theory IT-22, </journal> <month> November </month> <year> 1976, </year> <pages> pp. 644-654. </pages>
Reference-contexts: Many of the fundamental works and techniques for the design of cryptographic protocols were developed under the idealized assumption of "au-thenticated links" between the communicating parties. Prime examples are the Diffie-Hellman key exchange protocol <ref> [DH] </ref> as well as much of the work on secure distributed function evaluation (eg, [Y, GMW, BGW, CCD]). This abstraction of the authentication problem is of great value when developing higher level protocols. <p> We exemplify this process using the basic Diffie-Hellman protocol for idealized authenticated links <ref> [DH] </ref> and transforming it into several flavors of "authenticated Diffie-Hellman" through different mt-authenticators. As said before this reduces to only proving the basic Diffie-Hellman protocol in the much simpler authenticated model. <p> Then C (ke) is a secure KE protocol in unauthenticated networks. 2 We consider two well-known KE protocols in the authenticated-links model: the Diffie-Hellman protocol <ref> [DH] </ref>, denoted dh, and an encryption-based protocol, denoted eb. Encryption-based KE.
Reference: [DOW] <author> W. Diffie, P. van Oorschot and M. Wiener, </author> <title> "Authentication and authenticated key exchanges", Designs, Codes and Cryptography, </title> <type> 2, </type> <year> 1992, </year> <pages> pp. 107-125. </pages>
Reference-contexts: As said before this reduces to only proving the basic Diffie-Hellman protocol in the much simpler authenticated model. Remarkably, we are able to provide in this way with analysis of several of the underlying key exchange mechanisms used in some well known practical key distribution protocols (see <ref> [DOW, Kra, ISO, HC] </ref>). <p> Related work. As indicated above, the design of these protocols has a long history in which many protocols are proposed and broken. The works of Bird et al. [BGH+] and Diffie et al. <ref> [DOW] </ref>, the first in the model of shared secrets and the second in the public key model, exposed several of the subtleties involved. <p> Omitting any one of these elements makes our proof fail and actual attacks against the security of the scheme are possible. This includes the less obvious case in which B's identity is omitted. An attack in this case was described by Diffie et al <ref> [DOW] </ref>. 3.2 An encryption-based mt-authenticator We construct a mt-authenticator, enc , based on public key encryption. In addition, enc uses a message authentication (MAC) scheme.
Reference: [DDN] <author> D. Dolev, C. Dwork and M. Naor, </author> <title> "Non-malleable cryptography", TR CS95-27, </title> <booktitle> Weizmann Institute. Preliminary version in Proceedings of the 23rd Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1991. </year>
Reference-contexts: In addition, enc uses a message authentication (MAC) scheme. This protocol is based on the authentication technique underlying the key exchange mechanisms in [Kra]. (It is also reminiscent of the <ref> [DDN] </ref> message authentication protocol.) Protocol sig proceeds as follows. <p> It must eventually decide whether the given ciphertext is an encryption of a given value. Here we use a weak version of [RS] security (see remark after the proof of Proposition 5). The first encryption scheme secure in this sense appears in <ref> [DDN] </ref>. Proposition 5 Assume that the encryption scheme in use is secure against chosen ciphertext attacks in the sense of [RS], and that the MAC scheme in use is secure. Then protocol enc emulates protocol mt in unauthenticated networks. <p> Instead, they only need to know, given enc e fl (N fl ) and a value v, the appropriate MAC (ie, mac N fl (v)). 2. An alternative mt-authenticator, based on encryption schemes that are non-malleable against chosen ciphertext attacks, is described in <ref> [DDN] </ref>. Their construction does not use MAC schemes; instead it uses the `full power' of the decryption oracle. 4 Key exchange protocols: Definitions and usage In Section 3 we presented authenticators that treated each message separately.
Reference: [GMW] <author> O. Goldreich, S. Micali and A. Wigderson, </author> <title> "How to play any mental game, or A completeness theorem for protocols with honest majority," </title> <booktitle> Proceedings of the 19th Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1987. </year>
Reference-contexts: Many of the fundamental works and techniques for the design of cryptographic protocols were developed under the idealized assumption of "au-thenticated links" between the communicating parties. Prime examples are the Diffie-Hellman key exchange protocol [DH] as well as much of the work on secure distributed function evaluation (eg, <ref> [Y, GMW, BGW, CCD] </ref>). This abstraction of the authentication problem is of great value when developing higher level protocols. However, implementing these "authenticated links" in realistic environments is far less trivial than one would have initially imagined. In particular, networks are often asynchronous in nature, and protocols are often message-driven.
Reference: [GMR] <author> S. Goldwasser, S. Micali and R. Rivest, </author> <title> "A digital signature scheme secure against adaptive chosen-message attacks," </title> <journal> SIAM Journal of Computing, </journal> <volume> Vol. 17, No. 2, </volume> <month> April </month> <year> 1988, </year> <pages> pp. 281-308. </pages>
Reference: [ISO] <editor> ISO/IEC IS 9798-3, </editor> <title> "Entity authentication mechanisms | Part 3: Entity authentication using asymmetric techniques", </title> <year> 1993. </year>
Reference-contexts: As said before this reduces to only proving the basic Diffie-Hellman protocol in the much simpler authenticated model. Remarkably, we are able to provide in this way with analysis of several of the underlying key exchange mechanisms used in some well known practical key distribution protocols (see <ref> [DOW, Kra, ISO, HC] </ref>). <p> Then, it follows from Corollary 8 that both C sig (dh) and C enc (dh) are secure KE protocols in unauthenticated networks. Protocol C sig (dh) is very similar to a signature-based KE protocol used in an ISO standard <ref> [ISO, MVV] </ref>. C enc (dh) is very similar to the SKEME KE protocol [Kra]. Remarks. 1. Naive application of C sig and C enc to protocoldh results in a 6-move protocol.
Reference: [HC] <author> D. Harkins and D. Carrel, ed., </author> <title> "The Internet Key Exchange (IKE)", Internet Draft, </title> <address> draft-ietf-ipsec-isakmp-oakley-06.txt, </address> <month> February </month> <year> 1998. </year>
Reference-contexts: As said before this reduces to only proving the basic Diffie-Hellman protocol in the much simpler authenticated model. Remarkably, we are able to provide in this way with analysis of several of the underlying key exchange mechanisms used in some well known practical key distribution protocols (see <ref> [DOW, Kra, ISO, HC] </ref>).
Reference: [Kra] <author> H. Krawczyk, "SKEME: </author> <title> A Versatile Secure Key Exchange Mechanism for Internet,", </title> <booktitle> Proceedings of the 1996 Internet Society Symposium on Network and Distributed System Security, </booktitle> <month> Feb. </month> <year> 1996, </year> <pages> pp. 114-127. </pages>
Reference-contexts: As said before this reduces to only proving the basic Diffie-Hellman protocol in the much simpler authenticated model. Remarkably, we are able to provide in this way with analysis of several of the underlying key exchange mechanisms used in some well known practical key distribution protocols (see <ref> [DOW, Kra, ISO, HC] </ref>). <p> In addition, enc uses a message authentication (MAC) scheme. This protocol is based on the authentication technique underlying the key exchange mechanisms in <ref> [Kra] </ref>. (It is also reminiscent of the [DDN] message authentication protocol.) Protocol sig proceeds as follows. <p> Protocol C sig (dh) is very similar to a signature-based KE protocol used in an ISO standard [ISO, MVV]. C enc (dh) is very similar to the SKEME KE protocol <ref> [Kra] </ref>. Remarks. 1. Naive application of C sig and C enc to protocoldh results in a 6-move protocol. Yet it is straightforward to see that the 6 moves can be `collapsed' to 3 moves by `piggybacking' messages of one protocol on the other. This is done as follows.
Reference: [Luc] <author> S. Lucks, </author> <title> "Open key exchange: How to defeat dictionary attacks without encrypting public keys," </title> <booktitle> Proceedings of the 1997 Security Protocols Workshop, </booktitle> <year> 1997. </year>
Reference-contexts: They also provided and proved secure some simple protocols. Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings [SR]; Lucks to consider dictionary attacks <ref> [Luc] </ref>; Blake-Wilson, Johnson and Menezes [BlMe, BJM] and Bellare, Petrank, Rackoff and Rogaway [BPRR] for the public key setting. See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange.
Reference: [MVV] <editor> A. Menezes, P. Van Oorschot and S. Vanstone, </editor> <booktitle> "Handbook of Applied Cryptog raphy," </booktitle> <publisher> CRC Press, </publisher> <year> 1996. </year>
Reference-contexts: Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings [SR]; Lucks to consider dictionary attacks [Luc]; Blake-Wilson, Johnson and Menezes [BlMe, BJM] and Bellare, Petrank, Rackoff and Rogaway [BPRR] for the public key setting. See <ref> [MVV, Chapter 12] </ref> for general background and information on the subject of authenticated key exchange. A different approach to the analysis of authentication and key exchange protocols is provided through the use of logic tools. The best known example is the BAN logic of [BAN]. <p> Finally, S outputs whatever A outputs. 18 We stress that not all proposed key exchange protocols in the literature follow this modular approach (see <ref> [MVV] </ref>). <p> Then, it follows from Corollary 8 that both C sig (dh) and C enc (dh) are secure KE protocols in unauthenticated networks. Protocol C sig (dh) is very similar to a signature-based KE protocol used in an ISO standard <ref> [ISO, MVV] </ref>. C enc (dh) is very similar to the SKEME KE protocol [Kra]. Remarks. 1. Naive application of C sig and C enc to protocoldh results in a 6-move protocol.
Reference: [MR] <author> S. Micali and P. Rogaway, </author> <title> "Secure Computation", </title> <type> Manuscript, </type> <year> 1992. </year> <note> Preliminary version in Advances in Cryptology - Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. 576, </note> <editor> J. Feigenbaum ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: This captures the idea of "equivalent behavior" of protocols running in different models of communication. (Below we illustrate this notion by sketching how it is used to define secure key-exchange protocols.) The notion draws from general definitions of secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. <p> We want to capture the idea that `running 0 in an unauthenticated network has the same effect as running in an authenticated network'. This is done following a general approach used for defining secure multi-party protocols <ref> [MR, Bea, Ca1] </ref>. That is: Definition 1 Let and 0 be message-driven protocols for n parties.
Reference: [NR] <author> M. Naor and O. Reingold, </author> <title> "Efficient cryptographic primitives based on the deci sional Diffie-Hellman assumption", </title> <booktitle> Proceedings of the 38th Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1997. </year>
Reference-contexts: For discussion and more details on this assumption see, for instance, <ref> [Ca2, NR] </ref>.) 2 Let C sig and C enc be the layered authenticators based on mt-authenticators sig and enc , respectively (see Section 3). Then, it follows from Corollary 8 that both C sig (dh) and C enc (dh) are secure KE protocols in unauthenticated networks.
Reference: [NY] <author> M. Naor and M. Yung, </author> <title> "Public key cryptosystems provably secure against chosen ciphertext attacks", </title> <booktitle> Proceedings of the 22nd Annual Symposium on the Theory of Computing, ACM, </booktitle> <year> 1990. </year>
Reference: [NS] <author> R. Needham and M. Schroeder, </author> <title> "Using encryption for authentication in large net works of computers," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 21, No. 12, </volume> <month> December </month> <year> 1978, </year> <pages> pp. 993-999. </pages>
Reference-contexts: The first works to provide formal foundations in this area were those of Bellare and Rogaway [BR1, BR2]. They addressed the problems of entity authentication and key exchange in the two party, shared key model, and the problem of three party key distribution (Needham Schroeder <ref> [NS] </ref>, or Kerberos [SNS] model). Generalizations are possible in order to accommodate other tasks and models of interest. But these formalizations are not always easy to work with. They also regard key-exchange as a stand-alone problem without putting it in a the wider context of authentication.
Reference: [Ra] <author> C. Rackoff, </author> <title> "Some definitions, protocols and proofs about secure authentication," IBM CASCON 92. </title>
Reference-contexts: Several facets of the authentication problem have received a rigorous treatment, most notably entity authentication between two parties [BR1] and authenticated message transmission <ref> [Ra] </ref>. However there are basic and general questions that still remain untreated. The first part of our effort will go into properly formulating and then solving these.
Reference: [SR] <author> V. Shoup and A. Rubin. </author> <title> Session key distribution using smart cards. </title> <booktitle> Advances in Cryp tology - Eurocrypt 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1070, </volume> <editor> U. Mau-rer ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: They also provided and proved secure some simple protocols. Various works address extending their framework to other settings and problems; for example, Shoup and Rubin to smart card settings <ref> [SR] </ref>; Lucks to consider dictionary attacks [Luc]; Blake-Wilson, Johnson and Menezes [BlMe, BJM] and Bellare, Petrank, Rackoff and Rogaway [BPRR] for the public key setting. See [MVV, Chapter 12] for general background and information on the subject of authenticated key exchange.
Reference: [RS] <author> C. Rackoff and D. Simon, </author> <title> "Non-interactive zero-knowledge proof of knowledge and chosen ciphertext attack", </title> <booktitle> Advances in Cryptology - Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 576, </volume> <editor> J. Feigenbaum ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The initialization function I first invokes, once for each party, the key generation algorithm of a public key encryption scheme semantically secure against chosen ciphertext attack in the sense of <ref> [RS] </ref>, with security parameter k. 11 Let enc and dec denote the encrypting and decrypting algorithms, and let mac denote the MAC scheme in use. Let e i and d i denote the signing and verification keys associated with party P i . <p> It must eventually decide whether the given ciphertext is an encryption of a given value. Here we use a weak version of <ref> [RS] </ref> security (see remark after the proof of Proposition 5). The first encryption scheme secure in this sense appears in [DDN]. Proposition 5 Assume that the encryption scheme in use is secure against chosen ciphertext attacks in the sense of [RS], and that the MAC scheme in use is secure. <p> Here we use a weak version of <ref> [RS] </ref> security (see remark after the proof of Proposition 5). The first encryption scheme secure in this sense appears in [DDN]. Proposition 5 Assume that the encryption scheme in use is secure against chosen ciphertext attacks in the sense of [RS], and that the MAC scheme in use is secure. Then protocol enc emulates protocol mt in unauthenticated networks. Proof: Up till the definition of event B, the proof is identical to the proof of Proposition 4.
Reference: [SNS] <author> J. Steiner, C. Newman and J. Schiller, </author> <title> "Kerberos: an authentication service for open network systems," </title> <booktitle> Proceedings of the USENIX Winter Conference, </booktitle> <year> 1988, </year> <pages> pp. 191-202. </pages>
Reference-contexts: The first works to provide formal foundations in this area were those of Bellare and Rogaway [BR1, BR2]. They addressed the problems of entity authentication and key exchange in the two party, shared key model, and the problem of three party key distribution (Needham Schroeder [NS], or Kerberos <ref> [SNS] </ref> model). Generalizations are possible in order to accommodate other tasks and models of interest. But these formalizations are not always easy to work with. They also regard key-exchange as a stand-alone problem without putting it in a the wider context of authentication.
Reference: [Y] <author> A. Yao, </author> <title> Protocols for Secure Computation, </title> <booktitle> In Proc. 23th Annual Symp. on Foundations of Computer Science, </booktitle> <pages> pages 160-164. </pages> <publisher> IEEE, </publisher> <year> 1982. </year> <month> 26 </month>
Reference-contexts: Many of the fundamental works and techniques for the design of cryptographic protocols were developed under the idealized assumption of "au-thenticated links" between the communicating parties. Prime examples are the Diffie-Hellman key exchange protocol [DH] as well as much of the work on secure distributed function evaluation (eg, <ref> [Y, GMW, BGW, CCD] </ref>). This abstraction of the authentication problem is of great value when developing higher level protocols. However, implementing these "authenticated links" in realistic environments is far less trivial than one would have initially imagined. In particular, networks are often asynchronous in nature, and protocols are often message-driven.
References-found: 35

