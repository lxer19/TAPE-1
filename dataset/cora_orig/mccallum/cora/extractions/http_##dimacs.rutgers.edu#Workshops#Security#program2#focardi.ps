URL: http://dimacs.rutgers.edu/Workshops/Security/program2/focardi.ps
Refering-URL: http://dimacs.rutgers.edu/Workshops/Security/program2/program.html
Root-URL: http://www.cs.rutgers.edu
Email: focardi@dsi.unive.it  fghelli,gorrierig@cs.unibo.it  
Title: Using Non Interference for the Analysis of Security Protocols  
Author: Riccardo Focardi Anna Ghelli Roberto Gorrieri 
Note: e mail:  e mail:  
Address: Via Torino 155, I 30173 Venezia Mestre (Italy)  Mura Anteo Zamboni 7, I 40127 Bologna (Italy)  
Affiliation: Dipartimento di Matematica Applicata ed Informatica, Universita Ca' Foscari di Venezia  Dipartimento di Scienze dell'Informazione, Universita di Bologna  
Abstract: Non interference [GM82] was originally proposed as a means for analyzing the security of computer systems. In this paper we show that its theory can be profitably exploited also for the analysis of security protocols. As a simple case study, we consider the paradigmatic example of the Needham-Schroeder public-key protocol, that was already shown incorrect and fixed in [Low96]. As expected, our analysis discovers the same bug; what is really new is the methodology, based on the idea of proving the absence of information flow between the protocol partners and potential external attackers.
Abstract-found: 1
Intro-found: 1
Reference: [FG] <author> R. Focardi and R. Gorrieri. </author> <title> "The Compositional Security Checker: A Tool for the Verification of Information Flow Security Properties". </title> <note> To appear in IEEE Transactions on Software Engineering. A preliminary version can be found in http://www.cs.unibo.it/ fo-cardi/www/ps/Tool.ps.gz. </note>
Reference-contexts: As expected, our analysis discovers the same bug; what is really new is the methodology, based on the idea of proving the absence of information flow between the 1 protocol partners and potential external attackers. This methodology is general and is not tailored for authentication protocols. In <ref> [FG] </ref> the same technique presented here is used to check a simple session key distribution protocol based on public-key (see Section 7 for more details on this issue). <p> One typical choice is: one action representing the start of the protocol and two actions representing the correct termination of the protocol for the two partners. The formal verification of these properties is fully automatized thanks to the CoSeC tool <ref> [FG, FG96] </ref> that accepts finite-state protocol specifications and check over them the NI-based information flow properties. The paper is organized as follows. In Section 2 we present the model and the NI-based properties we use in the protocol specification and analysis. <p> The operational semantics of SPA is given (as usual) associating to each agent a particular state of the labelled transition system (E; Act; !) where ! E fi Act fi E and, intuitively, E ! E 0 means that agent E can execute moving to E 0 (see <ref> [FG95, FG] </ref> for more details). In the following the expression E =) E 0 is a shorthand for E ( t t !) fl E 0 , where ( t denotes a (possibly empty) sequence of t labelled transitions. <p> We have the following result [FG95]: Proposition 2.4 NDC = SNNI It is interesting to observe that this characterization of NDC through the SNNI property is possible since we are using an equivalence notion which is not able to detect deadlocks. In <ref> [FG95, FG] </ref> it is shown that under finer equivalence notions (testing, bisimulation) this result does not hold and a good (i.e., easy to check) characterization of NDC is still to be found. 3 The Needham-Schroeder public key protocol The aim of the Needham-Schroeder protocol [NS78] is to establish mutual authentication between <p> The tool used for this analysis is the Compositional Security Checker (CoSeC), a semantic-based tool for the automatic verification of some compositional information flow properties <ref> [FG96, FG] </ref>. In particular, using CoSeC, we check if the following holds: P rotocol 0 nf ake T P rotocol 0 =f ake As we said above, the action f ake represents the Enemy activity. <p> We can also see that the method is not tailored for authentication. In <ref> [FG] </ref>, we show how to use exactly the same NI-based property and the same kind of analysis to check a simple session key distribution protocol based on public-key.
Reference: [FG95] <author> R. Focardi and R. Gorrieri. </author> <title> "A Classification of Security Properties for Process Algebras". </title> <journal> Journal of Computer Security, </journal> <volume> 3(1) </volume> <pages> 5-33, </pages> <year> 1994/1995. </year>
Reference-contexts: The operational semantics of SPA is given (as usual) associating to each agent a particular state of the labelled transition system (E; Act; !) where ! E fi Act fi E and, intuitively, E ! E 0 means that agent E can execute moving to E 0 (see <ref> [FG95, FG] </ref> for more details). In the following the expression E =) E 0 is a shorthand for E ( t t !) fl E 0 , where ( t denotes a (possibly empty) sequence of t labelled transitions. <p> This can be useful if we want a parameter representing the level of a certain action. 2.3 NI generalization In this section we present the Non Deducibility on Compositions (NDC , for short) property, proposed in <ref> [FG95] </ref> as a generalization of NI in a process algebraic setting. It is simply based on the idea of checking the system against all high level potential interactions. <p> This definition of NDC is difficult to use in practice, because of the universal quantification on high level processes. We need an alternative formulation of BNDC which avoids universal quantification, exploiting local information only. It is possible to prove <ref> [FG95] </ref> that NDC is equivalent to Strong Non-deterministic Non Interference (SNNI , for short) which is defined as follows: Definition 2.3 E 2 SNNI () E n Act H T E=Act H . 4 This property is a natural generalization of NI to non-deterministic systems. <p> So, if the two terms are equivalent, then for every trace with high level actions we can find another trace without such actions but with the same subsequence of low level actions. We have the following result <ref> [FG95] </ref>: Proposition 2.4 NDC = SNNI It is interesting to observe that this characterization of NDC through the SNNI property is possible since we are using an equivalence notion which is not able to detect deadlocks. <p> We have the following result [FG95]: Proposition 2.4 NDC = SNNI It is interesting to observe that this characterization of NDC through the SNNI property is possible since we are using an equivalence notion which is not able to detect deadlocks. In <ref> [FG95, FG] </ref> it is shown that under finer equivalence notions (testing, bisimulation) this result does not hold and a good (i.e., easy to check) characterization of NDC is still to be found. 3 The Needham-Schroeder public key protocol The aim of the Needham-Schroeder protocol [NS78] is to establish mutual authentication between
Reference: [FG96] <author> R. Focardi and R. Gorrieri. </author> <title> "Automatic Compositional Verification of Some Security Properties". </title> <booktitle> In Proceedings of Second International Workshop on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'96), </booktitle> <pages> pages 167-186, </pages> <address> Passau (Germany), March 1996. </address> <publisher> Springer-Verlag, LNCS 1055. </publisher>
Reference-contexts: One typical choice is: one action representing the start of the protocol and two actions representing the correct termination of the protocol for the two partners. The formal verification of these properties is fully automatized thanks to the CoSeC tool <ref> [FG, FG96] </ref> that accepts finite-state protocol specifications and check over them the NI-based information flow properties. The paper is organized as follows. In Section 2 we present the model and the NI-based properties we use in the protocol specification and analysis. <p> The tool used for this analysis is the Compositional Security Checker (CoSeC), a semantic-based tool for the automatic verification of some compositional information flow properties <ref> [FG96, FG] </ref>. In particular, using CoSeC, we check if the following holds: P rotocol 0 nf ake T P rotocol 0 =f ake As we said above, the action f ake represents the Enemy activity.
Reference: [Ghe97] <author> A. Ghelli. </author> <title> "Analisi di un Protocollo di Autenticazione con il Security Checker". </title> <type> Master's thesis, </type> <institution> Universita degli Studi di Bologna, </institution> <month> March </month> <year> 1997. </year>
Reference-contexts: For example, only one session can be established. In <ref> [Ghe97] </ref> it has been studied an improved model which allows the execution of multiple sessions. Another possible extension of the model is related to the equivalence notion used in the analysis. Trace equivalence is not able to detect deadlocks. In [Ghe97] this protocol has been analyzed also with respect to a <p> For example, only one session can be established. In <ref> [Ghe97] </ref> it has been studied an improved model which allows the execution of multiple sessions. Another possible extension of the model is related to the equivalence notion used in the analysis. Trace equivalence is not able to detect deadlocks. In [Ghe97] this protocol has been analyzed also with respect to a stronger equivalence notion (bisimulation equivalence) which is able to detect the presence of deadlocks. 7 Related work The Needham-Schroeder public key protocol has been considered in many papers as an example to illustrate protocol analysis techniques and tools.
Reference: [GM82] <author> J. A. Goguen and J. Meseguer. </author> <title> "Security Policy and Security Models". </title> <booktitle> In Proceedings of the 1982 Symposium on Security and Privacy, </booktitle> <pages> pages 11-20. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> April </month> <year> 1982. </year>
Reference-contexts: 1 Introduction Non-Interference (NI for short) <ref> [GM82] </ref> was introduced in order to circumvent difficulties in classic approaches to computer security.
Reference: [Hoa85] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <publisher> Prentice-Hall, </publisher> <year> 1985. </year>
Reference-contexts: SPA has one additional operator, namely the hiding operator E=L of CSP <ref> [Hoa85] </ref>, which is useful in characterizing some security properties in an algebraic style. Moreover the set of visible actions is partitioned into high and low level actions in order to specify multilevel systems. <p> In [Low96] it is presented an analysis method based on the FDR tool and CSP <ref> [Hoa85] </ref> language. The FDR tool takes as input a CSP specification and a CSP implementation and verifies if the latter refines the former.
Reference: [Low96] <author> G. Lowe. </author> <title> "Breaking and Fixing the Needham-Schroeder Public-key Protocol using FDR". </title> <booktitle> In Proceedings of Second International Workshop on Tools and Algorithms for the Construction and Analysis of Systems (TACAS'96), </booktitle> <pages> pages 146-166, </pages> <address> Passau (Germany), March 1996. </address> <publisher> Springer-Verlag, LNCS 1055. </publisher>
Reference-contexts: The aim of this paper is precisely to show that the theory of NI properties can be profitably applied in typical problems of network security. As a simple case study, we consider the paradigmatic example of the Needham-Schroeder public-key protocol, that was already shown incorrect and fixed in <ref> [Low96] </ref>. As expected, our analysis discovers the same bug; what is really new is the methodology, based on the idea of proving the absence of information flow between the 1 protocol partners and potential external attackers. This methodology is general and is not tailored for authentication protocols. <p> As an example, in the attack reported in <ref> [Low96] </ref> we have that B is convinced to communicate with A but A has never sent an authentication request to B. <p> Here we consider the reduced version of the protocol, omitting the public key requests by A and B. The formalization we give is very similar to the one in <ref> [Low96] </ref>. The main difference is in the language used (the CSP in that case). We are not interested in giving a new formalization of the protocol and of the enemy. The aim of this paper is to show a new technique to analyze the protocol based on NI-like properties. <p> We are not interested in giving a new formalization of the protocol and of the enemy. The aim of this paper is to show a new technique to analyze the protocol based on NI-like properties. So the main difference with respect to <ref> [Low96] </ref> work can be found in the protocol analysis section (i.e., Section 6). <p> In particular the enemy is able to use only the information gained in the last intercepted message when (s)he introduces new messages in the system. This is different from what is done in <ref> [Low96] </ref> where the enemy has a local memory where (s)he can store stolen information and reuse it later. We could define this more complex enemy also in our model but we prefer to use the simpler version with no memory which is sufficient for this analysis. <p> In <ref> [Low96] </ref> it is presented an analysis method based on the FDR tool and CSP [Hoa85] language. The FDR tool takes as input a CSP specification and a CSP implementation and verifies if the latter refines the former. <p> As in <ref> [Low96] </ref> we obtain that the protocol fails in the initiator authentication, since we can have r connection (b id; a id; ok) without request (a id; b id). But unlike [Low96], our model allows to consider more than two actions at the same time. <p> As in <ref> [Low96] </ref> we obtain that the protocol fails in the initiator authentication, since we can have r connection (b id; a id; ok) without request (a id; b id). But unlike [Low96], our model allows to consider more than two actions at the same time. In this way it is possible to test if the protocol achieves mutual authentication with only one check. Moreover we observe that the (i) check is not a sufficient condition to responder authentication.
Reference: [Mil89] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: we introduce the model and the language we use for the specification of protocols and we also present the generalization of NI we use in the protocol analysis. 2.1 SPA and Semantic Equivalences In the following, protocols will be specified using the Security Process Algebra, an extension of Milner's CCS <ref> [Mil89] </ref>. SPA has one additional operator, namely the hiding operator E=L of CSP [Hoa85], which is useful in characterizing some security properties in an algebraic style. Moreover the set of visible actions is partitioned into high and low level actions in order to specify multilevel systems. <p> Moreover, for every constant Z there must be the corresponding definition: Z def = E. The meaning of 0, :E, E + E, EjE, E n L, E [f ] and Z = E is as for CCS <ref> [Mil89] </ref>. <p> In all the examples reported in this paper will use such value passing calculus, because it leads to more readable specifications than those written in pure SPA. As an example, consider the following buffer cell <ref> [Mil89] </ref>: C = in (x):C 0 (x) def where x is a variable that can assume values in NI (we usually write x 2 NI ). C reads a natural value n through action in and stores it in variable x. <p> To reflect the fact that it can accept any input value, binding variable x, we translate it into P v2 NI in v . So the definition becomes: C = v2 NI v VSPA is very similar to the value-passing CCS introduced in <ref> [Mil89] </ref>. The main difference is that in VSPA we can have more than one parameter for actions and parameters are multi-sorted. <p> As in <ref> [Mil89] </ref> the semantics of the value-passing calculus is given as a translation into the pure calculus. <p> We consider only agents without free variables because if an agent has a free variable then it becomes a family of agents, one for each value of the variable. The translation can be given inductively on the structure of agents (see <ref> [Mil89] </ref> for more details about this kind of translation). Note that we do not partition the set of actions into two levels; we directly refer to the partition in the pure calculus.
Reference: [NS78] <author> R. Needham and M. Schroeder. </author> <title> "Using encryption for authentication in large networks of computers". </title> <journal> Communications of the ACM, </journal> <volume> 21(12) </volume> <pages> 993-999, </pages> <year> 1978. </year> <month> 13 </month>
Reference-contexts: In [FG95, FG] it is shown that under finer equivalence notions (testing, bisimulation) this result does not hold and a good (i.e., easy to check) characterization of NDC is still to be found. 3 The Needham-Schroeder public key protocol The aim of the Needham-Schroeder protocol <ref> [NS78] </ref> is to establish mutual authentication between two users A and B. It uses public key cryptography. We will denote with P K U and SK U the public and secret keys for a generic user U , respectively.
References-found: 9

