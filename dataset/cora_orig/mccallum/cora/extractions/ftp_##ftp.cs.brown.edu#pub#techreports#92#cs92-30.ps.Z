URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-30.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-30.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "When trees collide: an approximation algorithm for the generalized Steiner tree problem on networks," </title> <booktitle> Proceedings of the 23rd Annual ACM Symposium on Theory of Computing (1991), </booktitle> <pages> pp. 134-144. </pages>
Reference-contexts: 1 Introduction: The framework On designing a network The following scenario was proposed in <ref> [1] </ref>. You are in the job of providing communication links to customers. You have a set of clients with communication requirements; each client has specified a pair of cities (called a site-pair) between which the client must have communication capabilities. <p> The network you must construct need not be connected; all that is needed is that every client's pair of cities be connected through your network. Unfortunately, your job's NP-complete. So you come up with an approximately good solution <ref> [1] </ref> and build a network using this strategy. Soon you notice that your clients are complaining. The links used in your network seem to be breaking down pretty often. <p> In this paper, we give the first approximation algorithm for augmenting this generalized Steiner network to a network in which each site-pair is two-connected. Combining this with the solution offered to your earlier problem in <ref> [1] </ref>, this provides an approximation for a general two-connected Steiner network design problem. In fact, you weren't so unlucky after all. <p> For this, we turn to the work of Goemans and Williamson in [6] where they define the notion of proper functions. Proper functions are a class of functions used for defining the activity of cuts in a graph. In <ref> [1] </ref>, we provided the first approximation algorithm for the generalized network Steiner problem. The algorithm presented there involved construction of feasible primal and dual solutions with an approximate relation between their values. <p> There has also been considerable work on characterizations of integer polyhedra arising from connectivity constraints [7], and construction of minimum-cost two-connected survivable networks [5, 13]. As mentioned in the previous section, Agrawal, Klein and Ravi <ref> [1] </ref> introduced the technique of a primal-dual method for approximating the minimum-cost generalized Steiner network. Though this result addressed arbitrary connectivity requirements between pairs of nodes, it allowed for edge replication. This was consequently generalized by Goemans and Williamson in [6].
Reference: [2] <author> K. P. Eswaran, and R. E. Tarjan, </author> <title> "Augmentation problems", </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 5 (1976), </volume> <pages> pp. 653-665. </pages>
Reference: [3] <author> Greg N. Fredrickson, and Joseph Ja'Ja', </author> <title> "Approximation algorithms for several graph augmentation prob-lems", </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 10, No. 2 (1981), </volume> <pages> pp. 270-283. </pages>
Reference-contexts: Moreover, they do not want you to duplicate any link in the already existing network since the link failures seem to be related to the location of the cables. By duplicating links, you are only making both copies prone to failure. Well, your problem is NP-complete again <ref> [3] </ref>. If you were lucky to have a large enough clientele so that your network spanned all the cities, then you could use the approximate solution in [3]. <p> By duplicating links, you are only making both copies prone to failure. Well, your problem is NP-complete again <ref> [3] </ref>. If you were lucky to have a large enough clientele so that your network spanned all the cities, then you could use the approximate solution in [3]. Or if you were plain lucky and fl Connectivity refers to edge-connectivity throughout this paper unless stated otherwise explicitly. 1 Research supported by an IBM Graduate Fellowship. <p> The minimum-cost augmentation problem is to choose a minimum-cost set of edges in G whose addition to G 0 yields a graph that obeys the constraints of (IP). This problem generalizes the minimum-cost bridge-connectivity augmentation problem considered in <ref> [3, 9] </ref> and also the Steiner version considered in [14]. <p> In Section 4, we present the second-phase augmentation algorithm. In the following section, we prove the performance bound of this phase. Then we prove the results on augmentation. We close with some implementation issues and open problems. 2 Related work Fredrickson and Ja'Ja', in their pioneering work <ref> [3] </ref> on approximation algorithms for weighted graph augmentation problems, provided the first approximate solution for the problem of augmenting a given graph to be two-connected. The performance guarantee of their algorithm was a multiplicative factor of two. Their technique also gave an approximate solution to the minimum-cost two-connected subgraph problem. <p> We also extended these results to derive approximation algorithms for augmentation problems in this setting. We note that the performance bounds of the algorithms we have presented in Theorems 1.1 and 1.2 are existentially tight. This can be seen by their performance on an example graph taken from <ref> [3] </ref>. This graph is reproduced in Figure 6. The thick (solid and dashed) edges are of unit cost and the thin edges have cost * close to zero.
Reference: [4] <author> Greg N. Fredrickson, and Joseph Ja'Ja', </author> <title> "On the relationship between the biconnectivity augmentation and Travelling Salesman problems", </title> <booktitle> Theoretical Computer Science 19 (1982), </booktitle> <pages> pp. 189-201. </pages>
Reference-contexts: Khuller and Vishkin have presented algorithms with better performance guarantees for the minimum two-connected subgraph problems in [10]. The bounds are 3 2 for the two edge-connected case and 5 2 for the two node-connected case. When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' <ref> [4] </ref> present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability [5, 8, 11, 12, 15] that addresses constructing minimum-cost k-connected subgraphs under such cost functions.
Reference: [5] <author> M. X. Goemans, and D. J. Bertsimas, </author> <title> "Survivable Networks, Linear Programming Relaxations and the Parsimonious Property", </title> <address> OR 216-90, </address> <institution> Center for Operations Research, MIT (1990). </institution>
Reference-contexts: When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' [4] present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability <ref> [5, 8, 11, 12, 15] </ref> that addresses constructing minimum-cost k-connected subgraphs under such cost functions. However, our interest is in the general case when the cost function does not satisfy the triangle inequality. <p> However, our interest is in the general case when the cost function does not satisfy the triangle inequality. There has also been considerable work on characterizations of integer polyhedra arising from connectivity constraints [7], and construction of minimum-cost two-connected survivable networks <ref> [5, 13] </ref>. As mentioned in the previous section, Agrawal, Klein and Ravi [1] introduced the technique of a primal-dual method for approximating the minimum-cost generalized Steiner network. Though this result addressed arbitrary connectivity requirements between pairs of nodes, it allowed for edge replication.
Reference: [6] <author> M. X. Goemans, and D. P. Williamson, </author> <title> "A general approximation technique for constrained forest problems", </title> <booktitle> Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 307-316. </pages>
Reference-contexts: Any set of edges that crosses each of the active cuts twice is a feasible solution to the two-connected Steiner network problem. We can generalize this two-connected network design problem by extending our notion of active cuts. For this, we turn to the work of Goemans and Williamson in <ref> [6] </ref> where they define the notion of proper functions. Proper functions are a class of functions used for defining the activity of cuts in a graph. In [1], we provided the first approximation algorithm for the generalized network Steiner problem. <p> In [1], we provided the first approximation algorithm for the generalized network Steiner problem. The algorithm presented there involved construction of feasible primal and dual solutions with an approximate relation between their values. Subsequently, Goemans and Williamson <ref> [6] </ref> generalized this result to a technique for approximating a large class of constrained forest problems. They introduced the notion of proper functions whose elegant definition captures the connectivity requirements for a variety of constrained forest problems. <p> For this, we set f (S) to 1 whenever jS " Cj 6= jS " Dj and to 0 otherwise. Strategy The algorithm we present in this paper works in two phases. In the first phase, the algorithm in <ref> [6] </ref> is applied to construct a partial solution F 1 that partially satisfies the requirements in (IP), namely, the solution satisfies the one-connectivity constraints: x ((S)) f (S) ; 6= S V . <p> The second phase is a careful reapplication of the methods of Goemans and Williamson. We define an auxiliary function f 0 specifying a different notion of active cuts, based on the partial solution F 1 . If f 0 were proper, then we could reapply the method in <ref> [6] </ref> directly. Unfortunately, f 0 is not proper and so we need to adapt this method. Approximating augmentation The techniques used in proving Theorem 1.1 can be adapted to provide approximation algorithms for minimum-cost augmentation. <p> Though this result addressed arbitrary connectivity requirements between pairs of nodes, it allowed for edge replication. This was consequently generalized by Goemans and Williamson in <ref> [6] </ref>. Our paper combines the two-phase idea of Fredrickson and Ja'Ja' with a primal-dual method tailored to provide an approximate solution in both phases. 3 Background Following [6], we define the notion of a proper function f : 2 V ! f0; 1g. <p> This was consequently generalized by Goemans and Williamson in <ref> [6] </ref>. Our paper combines the two-phase idea of Fredrickson and Ja'Ja' with a primal-dual method tailored to provide an approximate solution in both phases. 3 Background Following [6], we define the notion of a proper function f : 2 V ! f0; 1g. <p> In the first phase, we construct an approximate solution to the following modified integer program: Min e2E c e x e subject to constraints: x ((S)) f (S) ; 6= S V (IP1) We do this using the method in <ref> [6] </ref>. Let the solution generated be denoted by F 1 . We shall use F 1 to denote the set of edges in this solution returned in the first phase. It follows from [6] that F 1 induces a forest in G. The algorithm in [6] implicitly constructs a dual solution <p> constraints: x ((S)) f (S) ; 6= S V (IP1) We do this using the method in <ref> [6] </ref>. Let the solution generated be denoted by F 1 . We shall use F 1 to denote the set of edges in this solution returned in the first phase. It follows from [6] that F 1 induces a forest in G. The algorithm in [6] implicitly constructs a dual solution to the above linear program to prove the performance guarantee. This dual to the linear relaxation of the above integer program (using x e 0) is the following. <p> this using the method in <ref> [6] </ref>. Let the solution generated be denoted by F 1 . We shall use F 1 to denote the set of edges in this solution returned in the first phase. It follows from [6] that F 1 induces a forest in G. The algorithm in [6] implicitly constructs a dual solution to the above linear program to prove the performance guarantee. This dual to the linear relaxation of the above integer program (using x e 0) is the following. <p> Max SV f (S) y S subject to constraints: P S:e2 (S) y S c e e 2 E Recall that A is the set of terminals in V . We will be using the following results from <ref> [6] </ref>. Theorem 3.1 ([6]) The solution F 1 feasible for (IP1) and the dual y constructed are related by X c e (2 jAj X y S Lemma 3.2 ([6]) Let e 2 N where N is a connected component of a minimal solution F 1 . <p> Note that the dual solution y provided by the algorithm of <ref> [6] </ref> is feasible for (LP) by setting r e = 0 for all edges e. The value of the above program (LP) with this solution is 2 P SV y S . Thus we have OP T 2 P SV y S . <p> As long as there remains an active cluster, there remain at least two clusters since f 0 (V ) = 0. In the end, we do a clean-up to retain only essential edges and remove redundant edges. The algorithm We use the notation of <ref> [6] </ref>. We shall use C to denote the set of clusters that the algorithm maintains. For a vertex v, we let C v denote the cluster containing v. We shall use a counter t which records the iteration number during the course of the algorithm. <p> We shall use the above lemma in the proof of the performance guarantee. 5 The Performance Guarantee Our analysis of the algorithm is modeled on that of <ref> [6] </ref>. In this section, we prove Theorem 3.6. From the construction of the ~y values and the choice of edges in F , we get the following lemma directly. Lemma 5.1 The solution ~y satisfies ~y S &gt; 0 only when j (S) " F 1 j = 1. <p> Theorem 5.2 For each iteration number t, the sum of the degrees of the active nodes in the graph (C (t); F 2 (t)) is at most 2 (k (t) 1). The proof of Theorem 3.6 is adapted from a proof by Goemans and Williamson <ref> [6] </ref>. They use a lemma similar to our Theorem 5.2 in order to prove Theorem 3.6 by induction on the iteration count t. However, our proof of Theorem 5.2 differs completely from the proof of its counterpart in [6]. <p> of Theorem 3.6 is adapted from a proof by Goemans and Williamson <ref> [6] </ref>. They use a lemma similar to our Theorem 5.2 in order to prove Theorem 3.6 by induction on the iteration count t. However, our proof of Theorem 5.2 differs completely from the proof of its counterpart in [6]. We now show that the above theorem suffices to prove Theorem 3.6. Proof of Theorem 3.6: The proof is by induction on the iteration count t. From Lemma 5.1, we can write P P P S:(S)3e ~y S . <p> We then define a minimal version F 1 of F by retaining only the edges in F that are critical. Formally, we define F 1 fe 2 F : for some connected component N of (V; F feg); f (N ) = 1g It follows from the results in <ref> [6] </ref> that if F is feasible for the one-connectivity constraints, then so is F 1 . We can then use F 1 as the skeletal forest and apply the second-phase algorithm in Section 4. <p> This completes the proof of the stronger bound in Theorem 1.2. 7 Implementation issues We note that our algorithm can be implemented in time O (n 2 log n) where n = jV j using the techniques in <ref> [6] </ref>. We address the implementation of the clean-up steps. The important observation here is the initial forest F 1 and the candidate set of edges F both form acyclic subgraphs. Hence the total number edges in them is O (n).
Reference: [7] <author> M. Grotschel, and C. L. Monma, </author> <title> "Integer polyhedra arising from certain network design problems with connectivity constraints," </title> <journal> SIAM J. on Discrete Math., </journal> <volume> Vol 3, No. 4 (1990), </volume> <pages> pp. 502-523. </pages>
Reference-contexts: However, our interest is in the general case when the cost function does not satisfy the triangle inequality. There has also been considerable work on characterizations of integer polyhedra arising from connectivity constraints <ref> [7] </ref>, and construction of minimum-cost two-connected survivable networks [5, 13]. As mentioned in the previous section, Agrawal, Klein and Ravi [1] introduced the technique of a primal-dual method for approximating the minimum-cost generalized Steiner network.
Reference: [8] <author> M. Grotschel, C. L. Monma, and M. Stoer, </author> <title> "Computational results with a cutting plane algorithm for designing communication networks with low-connectivity constraints," </title> <note> to appear, </note> <institution> Oper. Res., </institution> <year> (1992). </year>
Reference-contexts: When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' [4] present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability <ref> [5, 8, 11, 12, 15] </ref> that addresses constructing minimum-cost k-connected subgraphs under such cost functions. However, our interest is in the general case when the cost function does not satisfy the triangle inequality.
Reference: [9] <author> S. Khuller, and R. Thirumella, </author> <title> "Approximation algorithms for graph augmentation," </title> <type> Technical report UMIACS-TR-91-132, </type> <institution> CS-TR-2766, Univ. of Maryland, </institution> <month> September </month> <year> (1991), </year> <note> to appear in Journal of Algorithms. </note>
Reference-contexts: The minimum-cost augmentation problem is to choose a minimum-cost set of edges in G whose addition to G 0 yields a graph that obeys the constraints of (IP). This problem generalizes the minimum-cost bridge-connectivity augmentation problem considered in <ref> [3, 9] </ref> and also the Steiner version considered in [14]. <p> Their technique also gave an approximate solution to the minimum-cost two-connected subgraph problem. The performance guarantee is a multiplicative factor of three. Their solution for the latter problem starts with a minimum spanning tree and augments this to be two-connected. Khuller and Thirumella <ref> [9] </ref> have extended these results and provided more efficient algorithms for the same. Recently, Ravi [14] observed that this method generalizes to find minimum-cost two-connected Steiner subgraphs of a given graph. All the above methods are also able to solve the node two-connected versions approximately.
Reference: [10] <author> S. Khuller, and U. Vishkin, </author> <title> "Biconnectivity approximations and graph carvings", </title> <type> Technical Report UMIACS-TR-92-5, </type> <institution> CS-TR-2825 Univ. of Maryland, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Recently, Ravi [14] observed that this method generalizes to find minimum-cost two-connected Steiner subgraphs of a given graph. All the above methods are also able to solve the node two-connected versions approximately. Khuller and Vishkin have presented algorithms with better performance guarantees for the minimum two-connected subgraph problems in <ref> [10] </ref>. The bounds are 3 2 for the two edge-connected case and 5 2 for the two node-connected case.
Reference: [11] <author> C. L. Monma, and C. W. Ko, </author> <title> "Methods for designing survivable communication networks,"NATO Advanced Research Workshop, </title> <address> Denmark, </address> <year> (1989). </year>
Reference-contexts: When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' [4] present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability <ref> [5, 8, 11, 12, 15] </ref> that addresses constructing minimum-cost k-connected subgraphs under such cost functions. However, our interest is in the general case when the cost function does not satisfy the triangle inequality.
Reference: [12] <author> C. L. Monma, B. S. Munson, and W. R. Pulleybank, </author> <title> "Minimum-weight two-connected spanninf networks," </title> <journal> Math. Programming, </journal> <volume> 46 (1990), </volume> <pages> pp. 153-171. </pages>
Reference-contexts: When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' [4] present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability <ref> [5, 8, 11, 12, 15] </ref> that addresses constructing minimum-cost k-connected subgraphs under such cost functions. However, our interest is in the general case when the cost function does not satisfy the triangle inequality.
Reference: [13] <author> C. L. Monma, and D. F. Shallcross, </author> <title> "Methods for designing communication networks with certain two-connectivity survivability constraints", </title> <journal> Operations Research, </journal> <volume> 37, </volume> <pages> pp. 531-541, </pages> <year> (1989). </year>
Reference-contexts: However, our interest is in the general case when the cost function does not satisfy the triangle inequality. There has also been considerable work on characterizations of integer polyhedra arising from connectivity constraints [7], and construction of minimum-cost two-connected survivable networks <ref> [5, 13] </ref>. As mentioned in the previous section, Agrawal, Klein and Ravi [1] introduced the technique of a primal-dual method for approximating the minimum-cost generalized Steiner network. Though this result addressed arbitrary connectivity requirements between pairs of nodes, it allowed for edge replication.
Reference: [14] <author> R. Ravi, </author> <title> "Approximation algorithms for Steiner augmentations for two-connectivity", </title> <type> Technical Report TR-CS-92-21, </type> <institution> Brown University, </institution> <month> April </month> <year> (1992). </year>
Reference-contexts: Additional support provided by DARPA contract N00014-91-J-4052 ARPA Order No. 8225. 3 Disclaimer: Even now, the authors are in no way connected to AT&T. 1 your network had only one tree, you could turn to the extension in <ref> [14] </ref> to augment this tree. However, considering your past history with fortune, no approximation algorithms are known in the general case. In this paper, we give the first approximation algorithm for augmenting this generalized Steiner network to a network in which each site-pair is two-connected. <p> The minimum-cost augmentation problem is to choose a minimum-cost set of edges in G whose addition to G 0 yields a graph that obeys the constraints of (IP). This problem generalizes the minimum-cost bridge-connectivity augmentation problem considered in [3, 9] and also the Steiner version considered in <ref> [14] </ref>. <p> The performance guarantee is a multiplicative factor of three. Their solution for the latter problem starts with a minimum spanning tree and augments this to be two-connected. Khuller and Thirumella [9] have extended these results and provided more efficient algorithms for the same. Recently, Ravi <ref> [14] </ref> observed that this method generalizes to find minimum-cost two-connected Steiner subgraphs of a given graph. All the above methods are also able to solve the node two-connected versions approximately. Khuller and Vishkin have presented algorithms with better performance guarantees for the minimum two-connected subgraph problems in [10].
Reference: [15] <author> K. Steiglitz, P. Weiner, and D. J. Kleitman, </author> <title> "The design of minimum-cost survivable networks," </title> <journal> IEEE Trans, on Circuit Theory, CT-16, </journal> <volume> 4, </volume> <pages> pp. 455-460, </pages> <year> (1969). </year> <month> 19 </month>
Reference-contexts: When the cost function c obeys the triangle inequality, then Fredrickson and Ja'Ja' [4] present an adaptation of Christofides' heuristic to solve the minimum-cost biconnectivity augmentation problem with a performance factor of 3 2 . There has been considerable previous work on network survivability <ref> [5, 8, 11, 12, 15] </ref> that addresses constructing minimum-cost k-connected subgraphs under such cost functions. However, our interest is in the general case when the cost function does not satisfy the triangle inequality.
References-found: 15

