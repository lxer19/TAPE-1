URL: http://www.cs.washington.edu/homes/alon/site/files/ijcai95.ps
Refering-URL: http://www.cs.washington.edu/homes/alon/site/PaperAbstractPresentation_bib7.html
Root-URL: 
Email: nayak@ptolemy.arc.nasa.gov  levy@research.att.com  
Title: A Semantic Theory of Abstractions  
Author: P. Pandurang Nayak Alon Y. Levy 
Address: MS 269-2 Moffett Field, CA 94035.  600 Mountain Avenue, Room 2C-406 Murray Hill, NJ 07974.  
Affiliation: Recom Technologies, NASA Ames Research Center,  AT&T Bell Laboratories AI Principles Research Department  
Abstract: In this paper we present a semantic theory of abstractions based on viewing abstractions as model level mappings. This theory captures important aspects of abstractions not captured in the syntactic theory of abstractions presented by Giunchiglia and Walsh [ 1992 ] . Instead of viewing abstractions as syntactic mappings, we view abstraction as a two step process: first, the intended domain model is abstracted and then a set of (abstract) formulas is constructed to capture the abstracted domain model. Viewing and justifying abstractions as model level mappings is both natural and insightful. This basic theory yields abstractions that are weaker than the base theory. We show that abstractions that are stronger than the base theory are model level mappings under certain simplifying assumptions. We provide a precise characterization of the abstract theory that exactly implements an intended abstraction, and show that this theory, while being axiomatizable, is not always finitely axiomati-zable. We present an algorithm that automatically constructs the strongest abstract theory that implements the intended abstraction.
Abstract-found: 1
Intro-found: 1
Reference: [ Chang, 1979 ] <author> Chang, C. L. </author> <year> 1979. </year> <title> Resolution plans in theorem proving. </title> <booktitle> In Procs. of IJCAI-79. </booktitle> <pages> 143-148. </pages>
Reference-contexts: Davis's work on diagnosis uses an abstract theory that is an MI abstraction of the base theory under the simplifying assumption that there are no bridge faults [ Davis, 1984 ] . The heuristic underlying the use of Connection graphs in <ref> [ Chang, 1979 ] </ref> is to use an MI abstraction of the base theory, under the simplifying assumption that different literals in a clause share no common variables, e.g., a clause P (x) _ Q (x) is revised to the stronger clause P (y) _ Q (z).
Reference: [ Davis, 1984 ] <author> Davis, R. </author> <year> 1984. </year> <title> Diagnostic reasoning based on structure and behavior. </title> <journal> Artif. Intell. </journal> <volume> 24 </volume> <pages> 347-410. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis <ref> [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] </ref> , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . Until recently there has been no unifying account of these disparate forms of abstractions. <p> Davis's work on diagnosis uses an abstract theory that is an MI abstraction of the base theory under the simplifying assumption that there are no bridge faults <ref> [ Davis, 1984 ] </ref> . <p> First, the simplifying assumptions underlying the abstraction are made explicit, and therefore can be used in reasoning, as has been done in compositional modeling [ Falkenhainer and Forbus, 1991; Iwasaki and Levy, 1994 ] and diagnosis <ref> [ Davis, 1984; Nayak, 1994b; Struss, 1992 ] </ref> . Second, we can show that an abstraction will yield false proofs only if the simplifying assumptions are inappropriate.
Reference: [ Eiter and Gottlob, 1992 ] <author> Eiter, T, and Gottlob, G. </author> <year> 1992. </year> <title> On the complexity of propositional knowledge base revision, updates and counterfactuals. </title> <journal> Artif. Intell. </journal> <volume> 57 </volume> <pages> 227-270. </pages>
Reference-contexts: In this section we describe a procedure that automatically creates the strongest MI abstraction for a given model-level mapping. This procedure can be complemented with techniques from <ref> [ Eiter and Gottlob, 1992 ] </ref> when incorporating the simplifying assumptions requires belief revision. We consider the case where L abs results from adding a set of new predicates and dropping some old predicates from L base , i.e., the object and function constants are unchanged.
Reference: [ Ellman, 1992 ] <author> Ellman, T., ed. </author> <year> 1992. </year> <title> Procs. </title> <booktitle> of the Workshop on Approximation and Abstraction of Computational Theories. </booktitle>
Reference-contexts: Until recently there has been no unifying account of these disparate forms of abstractions. However, in the last few years, there has been an explosion of interest in understanding the underlying principles of abstractions and approximations <ref> [ Ellman, 1992; Lowry, 1992; van Baalen, 1994 ] </ref> . A comprehensive theory of the principles underlying abstractions is useful for a number of reasons. Such a theory can provide the means for clearly understanding the different types of abstractions and approximations used in past work.
Reference: [ Ellman, 1993 ] <author> Ellman, T, </author> <year> 1993. </year> <title> Abstraction via approximate symmetry. </title> <booktitle> In Procs. of IJCAI-93. </booktitle> <pages> 916-921. </pages>
Reference-contexts: Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction <ref> [ Ellman, 1993 ] </ref> , and automatic programming [ Lowry, 1989 ] . Until recently there has been no unifying account of these disparate forms of abstractions. <p> In particular, abstractions that admit false proofs are commonly used to speed up problem solving by guiding the search (e.g., <ref> [ Ellman, 1993; Imielinski, 1987; Sacerdoti, 1974 ] </ref> ). In this section we argue that such abstractions can be, and are best viewed as MI abstractions in conjunction with a set of simplifying assumptions. Example 3 Consider Imielinski's domain abstractions [ 1987 ] .
Reference: [ Enderton, 1972 ] <author> Enderton, H. B. </author> <year> 1972. </year> <title> A Mathematical Introduction to Logic. </title> <publisher> Academic Press, Inc. </publisher>
Reference-contexts: The denotation of R in (M base ) is this relation restricted to the universe of (M base ). In addition, similar wffs are used to specify the denotations of abstract object and function constants (see <ref> [ Enderton, 1972 ] </ref> for details). Example 5 Consider Example 1 again. The abstraction mapping preserves the universe of discourse. Hence, 8 is the wff (v 1 = v 1 ), which is satisfied by all elements. <p> When contains object or function constants, the translation is more complex and we refer the reader to <ref> [ Enderton, 1972 ] </ref> for details. Non-atomic sentences are mapped in the natural way: f (:) = :f (), f ( ^ ) = f () ^ f ( ). <p> Example 6 Continuing Example 5, the translation of the abstract sentence 8xF oreignCar (x) is 8x (x = x) ) (J apaneseCar (x) _ EuropeanCar (x)). 2 The following lemma, taken from <ref> [ Enderton, 1972 ] </ref> , is the key property of f . It formalizes the sense in which and f () say the same thing: Lemma 1 Let M base be any model of T base and be a sentence in L abs . <p> If T base is axiomatizable, then so is T abs . Proof: A theory is axiomatizable iff it is effectively enumerable <ref> [ Enderton, 1972 ] </ref> . Since T base is axiomatizable, we can enumerate the theorems of T base . Whenever we encounter a theorem of the form f (), where is a sentence of L abs , we add as a theorem of T abs .
Reference: [ Falkenhainer and Forbus, 1991 ] <author> Falkenhainer, B. and For-bus, K. D. </author> <year> 1991. </year> <title> Compositional modeling: Finding the right model for the job. </title> <journal> Artif. Intell. </journal> <volume> 51 </volume> <pages> 95-143. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] , compositional modeling <ref> [ Falkenhainer and Forbus, 1991 ] </ref> , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . Until recently there has been no unifying account of these disparate forms of abstractions. <p> First, the simplifying assumptions underlying the abstraction are made explicit, and therefore can be used in reasoning, as has been done in compositional modeling <ref> [ Falkenhainer and Forbus, 1991; Iwasaki and Levy, 1994 ] </ref> and diagnosis [ Davis, 1984; Nayak, 1994b; Struss, 1992 ] . Second, we can show that an abstraction will yield false proofs only if the simplifying assumptions are inappropriate.
Reference: [ Genesereth, 1984 ] <author> Genesereth, M. R. </author> <year> 1984. </year> <title> The use of design descriptions in automated diagnosis. </title> <journal> Artif. Intell. </journal> <volume> 24 </volume> <pages> 411-436. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis <ref> [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] </ref> , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . Until recently there has been no unifying account of these disparate forms of abstractions. <p> For example, sign algebras [ Williams, 1991 ] and quantity spaces [ Kuipers, 1986 ] are MI abstractions of the real algebra. Structural and behavioral abstractions used in model-based diagnosis <ref> [ Genesereth, 1984; Hamscher, 1991 ] </ref> are MI abstractions. Ground abstractions, where a clause is replaced by (some of) its ground instances, used in theorem proving [ Plaisted, 1981 ] are MI abstractions.
Reference: [ Giunchiglia and Walsh, 1992 ] <author> Giunchiglia, F. and Walsh, T. </author> <year> 1992. </year> <title> A theory of abstraction. </title> <booktitle> Artif. Intell. </booktitle> <address> 57(2-3):323-389. </address>
Reference-contexts: Finally, an understanding of different abstractions within a common framework can allow the transfer of techniques between disparate domains. Recently, Giunchiglia and Walsh have presented an elegant theory of abstractions that unifies past work and provides a vocabulary to discuss different types of abstractions <ref> [ Giunchiglia and Walsh, 1992 ] </ref> . Their theory characterizes abstractions as syntactic mappings between formulas of formal systems. <p> As mentioned earlier, the strongest theory that implements this intended abstraction consists of the axioms in (2) and (5). 1 Note that, since the axioms in (1) and (3) are mutually disjoint, the preorder v defined in <ref> [ Giunchiglia and Walsh, 1992 ] </ref> provides no help in selecting between the two options. We introduce a class of model increasing (MI) abstractions, a strict subset of TD abstractions. Like TD abstractions, MI abstractions yield no false proofs. However, they have additional natural properties such as compositionality .
Reference: [ Green, 1969 ] <author> Green, C. </author> <year> 1969. </year> <title> Application of theorem proving to problem solving. </title> <booktitle> In Procs. of IJCAI-69. </booktitle> <pages> 219-239. </pages>
Reference-contexts: Each predicate is assigned a criticality level. Operators are abstracted at level i by dropping preconditions whose criticality is less than i. We now discuss the precise semantic steps involved in constructing this abstraction. We use Green's formulation of planning problems <ref> [ Green, 1969 ] </ref> : actions are represented by axioms of the form q 1 (s) ^ : : : ^ q n (s) ) r (do (A; s)), where q i are literals representing preconditions and r the postcondition of operator A, and do (A; s) is the state resulting
Reference: [ Hamscher, 1991 ] <author> Hamscher, W. C. </author> <year> 1991. </year> <title> Modeling digital circuits for troubleshooting. </title> <journal> Artif. Intell. </journal> <volume> 51 </volume> <pages> 223-271. </pages>
Reference-contexts: For example, sign algebras [ Williams, 1991 ] and quantity spaces [ Kuipers, 1986 ] are MI abstractions of the real algebra. Structural and behavioral abstractions used in model-based diagnosis <ref> [ Genesereth, 1984; Hamscher, 1991 ] </ref> are MI abstractions. Ground abstractions, where a clause is replaced by (some of) its ground instances, used in theorem proving [ Plaisted, 1981 ] are MI abstractions.
Reference: [ Imielinski, 1987 ] <author> Imielinski, T. </author> <year> 1987. </year> <title> Domain abstraction and limited reasoning. </title> <booktitle> In Procs. of IJCAI-87. </booktitle> <pages> 997-1003. </pages>
Reference-contexts: In particular, abstractions that admit false proofs are commonly used to speed up problem solving by guiding the search (e.g., <ref> [ Ellman, 1993; Imielinski, 1987; Sacerdoti, 1974 ] </ref> ). In this section we argue that such abstractions can be, and are best viewed as MI abstractions in conjunction with a set of simplifying assumptions. Example 3 Consider Imielinski's domain abstractions [ 1987 ] .
Reference: [ Iwasaki and Levy, 1994 ] <author> Iwasaki, Y. and Levy, A. Y. </author> <year> 1994. </year> <title> Automated model selection for simulation. </title> <booktitle> In Procs. of AAAI-94. </booktitle>
Reference-contexts: First, the simplifying assumptions underlying the abstraction are made explicit, and therefore can be used in reasoning, as has been done in compositional modeling <ref> [ Falkenhainer and Forbus, 1991; Iwasaki and Levy, 1994 ] </ref> and diagnosis [ Davis, 1984; Nayak, 1994b; Struss, 1992 ] . Second, we can show that an abstraction will yield false proofs only if the simplifying assumptions are inappropriate.
Reference: [ Kuipers, 1986 ] <author> Kuipers, B. </author> <year> 1986. </year> <title> Qualitative simulation. </title> <journal> Artif. Intell. </journal> <volume> 29 </volume> <pages> 289-338. </pages>
Reference-contexts: For example, sign algebras [ Williams, 1991 ] and quantity spaces <ref> [ Kuipers, 1986 ] </ref> are MI abstractions of the real algebra. Structural and behavioral abstractions used in model-based diagnosis [ Genesereth, 1984; Hamscher, 1991 ] are MI abstractions.
Reference: [ Levy, 1994 ] <author> Levy, A. Y. </author> <year> 1994. </year> <title> Creating abstractions using relevance reasoning. </title> <booktitle> In Procs. of AAAI-94. </booktitle>
Reference: [ Lowry, 1989 ] <author> Lowry, M. R. </author> <year> 1989. </year> <title> Algorithm Synthesis Through Problem Reformulation. </title> <type> Ph.D. Dissertation, </type> <institution> Stanford University. </institution>
Reference-contexts: used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming <ref> [ Lowry, 1989 ] </ref> . Until recently there has been no unifying account of these disparate forms of abstractions.
Reference: [ Lowry, 1992 ] <author> Lowry, M. R., ed. </author> <year> 1992. </year> <title> Procs. </title> <booktitle> of the Workshop on Change of Representation and Reformulation. </booktitle>
Reference-contexts: Until recently there has been no unifying account of these disparate forms of abstractions. However, in the last few years, there has been an explosion of interest in understanding the underlying principles of abstractions and approximations <ref> [ Ellman, 1992; Lowry, 1992; van Baalen, 1994 ] </ref> . A comprehensive theory of the principles underlying abstractions is useful for a number of reasons. Such a theory can provide the means for clearly understanding the different types of abstractions and approximations used in past work.
Reference: [ Nayak and Joskowicz, 1996 ] <author> Nayak, P. P. and Joskowicz, L. </author> <title> Efficient Compositional Modeling for Generating Causal Explanations. </title> <journal> Artif. Intell. </journal> <note> To appear. </note>
Reference: [ Nayak, 1994a ] <author> Nayak, P. P. </author> <year> 1994a. </year> <title> Causal approximations. </title> <journal> Artif. Intell. </journal> <volume> 70 </volume> <pages> 277-334. </pages>
Reference: [ Nayak, 1994b ] <author> Nayak, P. P. </author> <year> 1994b. </year> <title> Diagnosis with multiple theories. </title> <booktitle> In Procs. of the Fifth International Workshop on Principles of Diagnosis. </booktitle>
Reference-contexts: Hence, M base is a model of both T base and S base , and hence (M base ) is a model of both T abs and S abs , and hence a model of T abs [ S abs . 2 Compositionality is exploited in diagnosis with multiple theories <ref> [ Nayak, 1994b ] </ref> , and in compositional modeling [ Falkenhainer and Forbus, 1991; Nayak, 1994a; Nayak and Joskowicz, 1996; Iwasaki and Levy, 1994 ] where theories are built by composing knowledge from different sources. <p> First, the simplifying assumptions underlying the abstraction are made explicit, and therefore can be used in reasoning, as has been done in compositional modeling [ Falkenhainer and Forbus, 1991; Iwasaki and Levy, 1994 ] and diagnosis <ref> [ Davis, 1984; Nayak, 1994b; Struss, 1992 ] </ref> . Second, we can show that an abstraction will yield false proofs only if the simplifying assumptions are inappropriate.
Reference: [ Plaisted, 1981 ] <author> Plaisted, D. </author> <year> 1981. </year> <title> Theorem proving with abstraction. </title> <journal> Artif. Intell. </journal> <volume> 16 </volume> <pages> 47-108. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving <ref> [ Plaisted, 1981 ] </ref> , diagnosis [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . <p> Moreover, problem solvers ultimately reason by applying inference rules to formulas, and hence understanding the properties of abstractions as mappings between formulas is essential. However, viewing abstractions as syntactic mappings captures only one aspect of abstractions. Consider the following example. Example 1 Predicate abstractions <ref> [ Plaisted, 1981; Tenenberg, 1990 ] </ref> are a class of abstractions based on the observation that the distinctions between a set of predicates P 1 ; : : : ; P n in a theory are often irrelevant. <p> ) F ast (x) J apaneseCar (x) ) Reliable (x) (3) Applying the same mapping to axioms 3 would result in the following: F oreignCar (x) ) F ast (x) F oreignCar (x) ) Reliable (x) (4) However, adding these axioms to the axioms in (2) leads to false proofs <ref> [ Plaisted, 1981 ] </ref> , which may be undesirable. For example, one can infer that Toyotas are fast, and BMWs are reliable|inferences not sanctioned by the base theory. The syntactic theory of abstractions does distinguish between abstractions that yield false proofs (TI) and those that don't (TD). <p> Structural and behavioral abstractions used in model-based diagnosis [ Genesereth, 1984; Hamscher, 1991 ] are MI abstractions. Ground abstractions, where a clause is replaced by (some of) its ground instances, used in theorem proving <ref> [ Plaisted, 1981 ] </ref> are MI abstractions. These applications exploit the following important property of MI abstractions: Proposition 1 Let T abs be an MI abstraction of T base . If T abs is inconsistent, then T base is inconsistent.
Reference: [ Sacerdoti, 1974 ] <author> Sacerdoti, E. </author> <year> 1974. </year> <title> Planning in a hierarchy of abstraction spaces. </title> <journal> Artif. Intell. </journal> <volume> 5 </volume> <pages> 115-135. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning <ref> [ Sacerdoti, 1974 ] </ref> , theorem proving [ Plaisted, 1981 ] , diagnosis [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . <p> Our work generalizes Tenenberg's treatment of predicate abstractions [ Tenenberg, 1990 ] , and we disprove his conjecture that the predicate abstraction of a finite theory is always finitely axiomatizable. Abstractions that admit false proofs are commonly used to speed up problem solving by guiding search, e.g., ABSTRIPS <ref> [ Sacerdoti, 1974 ] </ref> . We show that all such abstractions can be viewed as MI abstractions in conjunction with a set of simplifying assumptions. <p> In particular, abstractions that admit false proofs are commonly used to speed up problem solving by guiding the search (e.g., <ref> [ Ellman, 1993; Imielinski, 1987; Sacerdoti, 1974 ] </ref> ). In this section we argue that such abstractions can be, and are best viewed as MI abstractions in conjunction with a set of simplifying assumptions. Example 3 Consider Imielinski's domain abstractions [ 1987 ] . <p> As mentioned earlier, the simplifying assumption made in ABSTRIPS <ref> [ Sacerdoti, 1974 ] </ref> is that the literal dropped from preconditions of actions can always be achieved without affecting the truth value of literals with higher criticality.
Reference: [ Struss, 1992 ] <author> Struss, P. </author> <year> 1992. </year> <title> What's in SD? Towards a theory of modeling for diagnosis. </title> <editor> In Hamscher, W.; Console, L.; and de Kleer, J., eds. </editor> <year> 1992, </year> <title> Readings in Model-Based Diagnosis. </title> <publisher> Morgan Kaufmann. </publisher> <pages> 419-449. </pages>
Reference-contexts: 1 Introduction Abstractions and approximations are pervasive in human common-sense reasoning and problem-solving. Abstractions have been used in a variety of problem-solving settings including planning [ Sacerdoti, 1974 ] , theorem proving [ Plaisted, 1981 ] , diagnosis <ref> [ Davis, 1984; Genesereth, 1984; Struss, 1992 ] </ref> , compositional modeling [ Falkenhainer and Forbus, 1991 ] , constraint satisfaction [ Ellman, 1993 ] , and automatic programming [ Lowry, 1989 ] . Until recently there has been no unifying account of these disparate forms of abstractions. <p> First, the simplifying assumptions underlying the abstraction are made explicit, and therefore can be used in reasoning, as has been done in compositional modeling [ Falkenhainer and Forbus, 1991; Iwasaki and Levy, 1994 ] and diagnosis <ref> [ Davis, 1984; Nayak, 1994b; Struss, 1992 ] </ref> . Second, we can show that an abstraction will yield false proofs only if the simplifying assumptions are inappropriate.
Reference: [ Tenenberg, 1990 ] <author> Tenenberg, J. D. </author> <year> 1990. </year> <title> Abstracting first order theories. </title> <editor> In Benjamin, Paul, ed. </editor> <year> 1990, </year> <title> Change of Representation and Inductive Bias. </title> <publisher> Kluwer, </publisher> <address> Boston, Mass. </address> [ <publisher> van Baalen, </publisher> <editor> 1994 ] van Baalen, J., ed. </editor> <booktitle> 1994. Procs. of the Workshop on Theory Reformulation and Abstraction. </booktitle>
Reference-contexts: Moreover, problem solvers ultimately reason by applying inference rules to formulas, and hence understanding the properties of abstractions as mappings between formulas is essential. However, viewing abstractions as syntactic mappings captures only one aspect of abstractions. Consider the following example. Example 1 Predicate abstractions <ref> [ Plaisted, 1981; Tenenberg, 1990 ] </ref> are a class of abstractions based on the observation that the distinctions between a set of predicates P 1 ; : : : ; P n in a theory are often irrelevant. <p> We show that if the base theory is axiomatizable, then so is its strongest MI abstraction. We present a procedure to automatically construct the strongest MI abstraction. Our work generalizes Tenenberg's treatment of predicate abstractions <ref> [ Tenenberg, 1990 ] </ref> , and we disprove his conjecture that the predicate abstraction of a finite theory is always finitely axiomatizable. Abstractions that admit false proofs are commonly used to speed up problem solving by guiding search, e.g., ABSTRIPS [ Sacerdoti, 1974 ] .
Reference: [ Weld, 1992 ] <author> Weld, D. S. </author> <year> 1992. </year> <title> Reasoning about model accuracy. </title> <booktitle> Artif. Intell. </booktitle> <address> 56(2-3):255-300. </address>
Reference-contexts: The revised theory can now be abstracted by combining the two railroad cars into a single, composite rigid body. The fitting approximations in <ref> [ Weld, 1992 ] </ref> are all of this form. 2 Viewing abstractions as a combination of a set of simplifying assumptions and an MI abstraction has two key advantages.
Reference: [ Williams, 1991 ] <author> Williams, B. C. </author> <year> 1991. </year> <title> A theory of interactions: unifying qualitative and quantitative algebraic reasoning. </title> <journal> Artif. Intell. </journal> <volume> 51 </volume> <pages> 39-94. </pages>
Reference-contexts: For example, sign algebras <ref> [ Williams, 1991 ] </ref> and quantity spaces [ Kuipers, 1986 ] are MI abstractions of the real algebra. Structural and behavioral abstractions used in model-based diagnosis [ Genesereth, 1984; Hamscher, 1991 ] are MI abstractions.
References-found: 26

