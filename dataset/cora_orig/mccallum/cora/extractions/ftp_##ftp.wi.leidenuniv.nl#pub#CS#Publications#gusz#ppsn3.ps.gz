URL: ftp://ftp.wi.leidenuniv.nl/pub/CS/Publications/gusz/ppsn3.ps.gz
Refering-URL: http://www.wi.leidenuniv.nl/~gusz/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email: -gusz, peraue, zsofi-@cs.vu.nl  
Title: Genetic algorithms with multi-parent recombination  
Author: A.E. Eiben, P-E. Rau, Zs. Ruttkay 
Address: 1081HV Amsterdam  
Affiliation: Artificial Intelligence Group Dept. of Mathematics and Computer Science Vrije Universiteit Amsterdam De Boelelaan 1081a  
Date: 1994, pp.78-87  
Note: Appeared in: Proceedings of the 3rd Conference on Parallel Problem Solving from Nature, LNCS 866, Springer-Verlag,  
Abstract: In this paper we investigate genetic algorithms where more than two parents are involved in the recombination operation. In particular, we introduce gene scanning as a reproduction mechanism that generalizes classical crossovers, such as n-point crossover or uniform crossover, and is applicable to an arbitrary number (two or more) of parents. We performed extensive tests for optimizing numerical functions, the TSP and graph coloring to observe the effect of different numbers of parents. The experiments show that 2-parent recombination is outperformed when using more parents on the classical DeJong functions. For the other problems the results are not conclusive, in some cases 2 parents are optimal, while in some others more parents are better. 
Abstract-found: 1
Intro-found: 1
Reference: [Che91] <author> P. Cheeseman, B. Kenefsky and W.M. Taylor, </author> <title> Where the really hard problems are, </title> <booktitle> Proc. of IJCAI-91, </booktitle> <year> 1991, </year> <pages> pp. 331-337. </pages>
Reference-contexts: This is known to be a very tough constraint satisfaction problem. (Note that this problem is different from the graph coloring problem discussed in [DavL91].) We considered 'difficult, but solvable' graphs: ones which can be coloured with 3 colours, but for which solutions are difficult to construct <ref> [Che91] </ref>. Since graph colouring is a rather epistatic problem [DavY91], it is out of the scope of applicability of traditional GAs. Earlier we defined and tested heuristic GAs which not only could cope with the problem, but outperformed the applicable classical deterministic search methods.
Reference: [Cor93] <author> A.L. Corcoran and R.L. Wainwright, LibGA: </author> <title> A User Friendly Workbench for Order-Based Genetic Algorithm Research, </title> <booktitle> Proc. of Applied Computing: Sates of the Art and Practice-1993, </booktitle> <year> 1993, </year> <pages> pp. 111-117. </pages>
Reference: [DavY91] <author> Y. Davidor, </author> <title> Epistasis Variance: A Viewpoint on GA-Hardness, </title> <booktitle> Proc. of FOGA-90, </booktitle> <year> 1991, </year> <pages> pp. 23-35. </pages>
Reference-contexts: Since graph colouring is a rather epistatic problem <ref> [DavY91] </ref>, it is out of the scope of applicability of traditional GAs. Earlier we defined and tested heuristic GAs which not only could cope with the problem, but outperformed the applicable classical deterministic search methods. For more details, on representation and test results, see [Eib94].
Reference: [DavL91] <author> L. Davis, </author> <title> Handbook of Genetic Algorithms, </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: This is known to be a very tough constraint satisfaction problem. (Note that this problem is different from the graph coloring problem discussed in <ref> [DavL91] </ref>.) We considered 'difficult, but solvable' graphs: ones which can be coloured with 3 colours, but for which solutions are difficult to construct [Che91]. Since graph colouring is a rather epistatic problem [DavY91], it is out of the scope of applicability of traditional GAs.
Reference: [Eib91] <author> A.E. Eiben, </author> <title> A Method for Designing Decision Support Systems for Operational Planning, </title> <type> PhD Thesis, </type> <institution> Eindhoven University of Technology, </institution> <year> 1991. </year>
Reference-contexts: The scanning techniques described in this chapter all generate one child from n parents (n 2). 2 2.1 Gene scanning techniques We have defined a number of genetic operators based on gene scanning as introduced in <ref> [Eib91] </ref>. The general mechanism for scanning is to assign a marker to each parent as well as to the child. The marker for the child traverses all its positions from left to right, one at a time.
Reference: [Eib94] <author> A.E. Eiben, P-E., Rau, Zs. Ruttkay, </author> <title> Applying Genetic Algorithms to Solve Constrained Problems, </title> <note> to be presented at the ECAI-94. </note>
Reference-contexts: Earlier we defined and tested heuristic GAs which not only could cope with the problem, but outperformed the applicable classical deterministic search methods. For more details, on representation and test results, see <ref> [Eib94] </ref>. Representation seems to be an important factor in determining whether multi-parent recombination is superior to two parent recombination. For the DeJong functions and the function from [Mic92] we applied the standard binary representation.
Reference: [Gol89] <author> D.E. Goldberg, </author> <title> Genetic Algorithms in Search, Optimization and Machine Learning, </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year> <month> 10 </month>
Reference-contexts: For numerical optimization we have chosen four well-known DeJong functions (the formulas were taken from <ref> [Gol89] </ref>) and a function from [Mic92] because these functions provide a test-bench with variously shaped functions. The first 'real' problem is the TSP because it enjoys much attention in the GA community and is important in practice. We use an instance concerning 30 cities [Oli87] to keep running times down.
Reference: [Gre85] <author> J. Grefenstette, R. Gopal, B. Rosmaita and D. Van Gucht, </author> <title> Genetic Algorithms for the Travelling Salesman Problem, </title> <booktitle> Proc. of ICGA-85, </booktitle> <year> 1985, </year> <month> pp.160-168. </month>
Reference: [Mic92] <author> Z. Michalewicz, </author> <title> Genetic Algorithms + Data Structures = Evolution Programs, </title> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: For numerical optimization we have chosen four well-known DeJong functions (the formulas were taken from [Gol89]) and a function from <ref> [Mic92] </ref> because these functions provide a test-bench with variously shaped functions. The first 'real' problem is the TSP because it enjoys much attention in the GA community and is important in practice. We use an instance concerning 30 cities [Oli87] to keep running times down. <p> For more details, on representation and test results, see [Eib94]. Representation seems to be an important factor in determining whether multi-parent recombination is superior to two parent recombination. For the DeJong functions and the function from <ref> [Mic92] </ref> we applied the standard binary representation. For the TSP and graph coloring we used order based representation, furthermore we tested graph coloring with a representation based on a ternary alphabet. <p> on F2 (chromosome length = 22) 3 9 15 the optimum for OB/FB/U-Scanning on F3 (chromosome length = 50) 80 90 100 110 2 3 4 5 6 7 8 9 10 250 290 330 the optimum for OB/FB/U-Scanning on F4 (chromosome length = 240) 6 On the function from <ref> [Mic92] </ref> the three versions of scanning showed the following behaviour. 37.8 38 38.2 38.4 38.6 on the function from [Mic92], pg. 34 (maximization problem, chromosome length = 33) For the graph coloring problem we applied primarily order based representation, decoding permutations similar to the way in which it is done for <p> 80 90 100 110 2 3 4 5 6 7 8 9 10 250 290 330 the optimum for OB/FB/U-Scanning on F4 (chromosome length = 240) 6 On the function from <ref> [Mic92] </ref> the three versions of scanning showed the following behaviour. 37.8 38 38.2 38.4 38.6 on the function from [Mic92], pg. 34 (maximization problem, chromosome length = 33) For the graph coloring problem we applied primarily order based representation, decoding permutations similar to the way in which it is done for scheduling problems. We tested two graphs with 90 nodes and 5 edges per node. <p> On the DeJong functions it outperformed 1-point crossover by respectively, 42%, 19%, 40% and 59%. On the function from <ref> [Mic92] </ref> fitness based scanning was 1.3% worse than the usual 1-point crossover. Let us remark that on the function F2 OB-Scan proved to be better than FB-Scan and outperformed 1-point crossover by as much as 70%. For the TSP we compared different versions of scanning with order1 crossover. <p> We also observed that the different versions of scanning show different behaviour, i.e. reach optimal performance at different numbers of parents. Nevertheless, on all of the DeJong functions we tested the optimal number was higher than 2. For the function from <ref> [Mic92] </ref> 2 parents proved optimal, although the difference in performance between different numbers of parents remained under 1%. This suggests that for this function the number of parents does not really matter. The TSP shows a somewhat similar picture.
Reference: [Mh89] <author> H. Mhlenbein, </author> <title> Parallel Genetic Algorithms, Population Genetics and Combinatorial Optimization, </title> <booktitle> Proc. of ICGA-89, </booktitle> <year> 1989, </year> <pages> pp. 416-421. </pages>
Reference-contexts: However, for a mathematician or computer scientist this restriction should not be self-evident. Still, there are almost no GA publications reporting on recombination mechanisms based on more than two parents, we are aware of only two, namely <ref> [Mh89, Ser92] </ref>. In this paper we try to find out whether multi-parent crossovers should be avoided for some practical reasons or whether they offer advantages and have just been overlooked. Besides the motivation above we have another argument for investigating multi-parent crossovers.
Reference: [Oli87] <author> I.M. Oliver, D.J. Smith and J.R.C. Holland, </author> <title> A study of permutation crossover operators on the travelling salesman problem, </title> <booktitle> Proc. of ICGA-87, </booktitle> <year> 1987, </year> <pages> pp. 224-230. </pages>
Reference-contexts: The first 'real' problem is the TSP because it enjoys much attention in the GA community and is important in practice. We use an instance concerning 30 cities <ref> [Oli87] </ref> to keep running times down. For the second 'real' problem we have chosen graph 3-coloring: the nodes of a graph must be colored using three colors in such a way that no neighboring nodes have the same color.
Reference: [Ser92] <author> G. Seront and H. Bersini, </author> <title> In Search of a Good Evolution-Optimization Crossover, </title> <booktitle> Proc. of PPSN 2, </booktitle> <year> 1992, </year> <pages> pp. 479-488. </pages>
Reference-contexts: However, for a mathematician or computer scientist this restriction should not be self-evident. Still, there are almost no GA publications reporting on recombination mechanisms based on more than two parents, we are aware of only two, namely <ref> [Mh89, Ser92] </ref>. In this paper we try to find out whether multi-parent crossovers should be avoided for some practical reasons or whether they offer advantages and have just been overlooked. Besides the motivation above we have another argument for investigating multi-parent crossovers.
Reference: [Whi91] <author> D. Whitley, T. Starkweather and D. Shaner, </author> <title> The traveling salesman and sequence scheduling: quality solutions using genetic edge recombination, </title> <booktitle> In: [DavL91], </booktitle> <pages> pp. 350-372. </pages>
Reference-contexts: A similar crossover to ABC was proposed in <ref> [Whi91] </ref>. The main difference between Whitley's crossover and ABC occurs when all the immediate successors to a city have already been inherited by the child.
References-found: 13

