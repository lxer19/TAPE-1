URL: http://www.cs.princeton.edu/~erez/hp.ps
Refering-URL: http://www.cs.princeton.edu/~erez/publications.html
Root-URL: http://www.cs.princeton.edu
Email: Email: shaih@theory.lcs.mit.edu  Email: erez@cs.toronto.edu  
Title: Storing Classified Files  
Author: Shai Halevi Erez Petrank 
Address: 545 Technology Square, Cambridge, MA 02139, USA.  Toronto, Toronto, Ontario, Canada M5S 1A4.  
Affiliation: Laboratory for Computer Science, MIT,  Department of Computer Science, University of  
Date: December 6, 1995  
Abstract: We initiate a study of a natural problem in secure systems, namely storing classified files on-line. A system of classified files contains a set of files (or documents), a set of users, and an authorization structure which defines the subset of files each user is authorized to see. We want a user in the system to be able to see every file in her "authorized list" but not any other file. We present definitions of secure classified file systems and discuss various aspects of such systems, such as static versus dynamic models, resilience, the role of a central trusted entity, etc. We also present a highly space-efficient implementation for a secure system which is based on RSA. 
Abstract-found: 1
Intro-found: 1
Reference: [BR93] <author> M. Bellare and P. Rogaway. </author> <title> Random oracles are practical: a paradigm for designing efficient protocols. </title> <booktitle> Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <address> Fairfax, VA, </address> <year> 1993. </year>
Reference-contexts: It is widely believed that such "secure hashing" guarantees indistinguishability. Indeed, if we model H as a random oracle (See <ref> [BR93] </ref> for a complete discussion and many examples) then it is possible to prove that the resulting scheme is secure in the sense of indistinguishability. 3.2 The dynamic model A more interesting model to consider is the dynamic model, in which the authorization structure may change with time, and the distributor
Reference: [Bl93] <author> M. </author> <title> Blaze. A Cryptographic File System for Unix. </title> <booktitle> Proceedings of the First ACM Conference on Computer and Communications Security, </booktitle> <pages> Pages 9-16, </pages> <address> Fairfax, VA, </address> <year> 1993. </year> <note> Also available on-line from ftp://ftp.research.att.com/dist/mab/cfs.ps </note>
Reference-contexts: Other works include encryption of files and concentrate on facilitating access of users to their files. These works usually assumes that each user should only be able to read her own files (e.g., <ref> [Bl93] </ref>). We are not aware of any work which considered the problem of arbitrary authorization structures in a file system. Another related work was done by Fiat and Naor ([FN93]) in the context of encrypting broadcast of movies.
Reference: [FN93] <author> A. Fiat and M. Naor. </author> <title> Broadcast Encryption. </title> <booktitle> in Proceedings of Advances in Cryptography CRYPTO'93, </booktitle> <address> Santa Barbara, CA USA, 1993. </address> <publisher> Springer-Verlag. </publisher> <pages> pp. 480-491. </pages>
Reference-contexts: This key has to allow a determination of any set of users as elligble to seeing the next film. Although the problem statement and the various tradeoffs are quite similar to ours, there are some fundamental differences between these problems which make the solutions in <ref> [FN93] </ref> useless in our problem (and vise-versa). Moreover, the setting of [FN93] forces them to give each user O (n log 2 n) keys and to store in the public space additional O (n 2 log 3 n) keys with each encrypted movie 2 . <p> Although the problem statement and the various tradeoffs are quite similar to ours, there are some fundamental differences between these problems which make the solutions in <ref> [FN93] </ref> useless in our problem (and vise-versa). Moreover, the setting of [FN93] forces them to give each user O (n log 2 n) keys and to store in the public space additional O (n 2 log 3 n) keys with each encrypted movie 2 . <p> Recall that in our suggestion of a secure file system, it is enough to 2 This assumes full resilience. It is shown in <ref> [FN93] </ref> how to save space when the required resilience is smaller. 2 give each user only one key and it is enough to store each file once, with only one additional related number in the public space. 1.4 Contributions of this paper A conceptual contribution of this paper is in initiating
Reference: [GM82] <author> S. Goldwasser and S. Micali, </author> <title> Probabilistic Encryption. </title> <journal> in JCSS , Vol. </journal> <volume> 28, No. 2, </volume> <year> 1984, </year> <pages> pp. 270-299. </pages>
Reference-contexts: In fact, what we need is a much stronger notion of 5 security: We need to prevent the adversary from knowing anything about these keys. That is, we want the keys to be polynomially indistinguishable from random strings given the relevant inputs (See <ref> [GM82] </ref>).
Reference: [Ir95] <author> C.E. </author> <title> Irvine. A Multilevel File System for High Assurance. </title> <booktitle> in proccedings of IEEE Symp. on Security and Privacy, </booktitle> <address> CA, </address> <year> 1995, </year> <pages> pp. 78-87. 12 </pages>
Reference-contexts: Last, our scheme is simple and so is the intuition as to why it is secure. So although the proof may be technically involved, the implementation of the system is easy. 1.3 Related work Although there has been work on introducing security into file-systems (e.g. <ref> [Ir95] </ref>), this work is mostly concerned with access control and not with secrecy of files. Other works include encryption of files and concentrate on facilitating access of users to their files. These works usually assumes that each user should only be able to read her own files (e.g., [Bl93]).
Reference: [RSA78] <author> R. Rivest, A. Shamir and L. Adelman. </author> <title> A Method for Obtaining Digital Signature and Public Key Cryptosystems. </title> <journal> Comm. of ACM, </journal> <volume> 21 (1978), </volume> <pages> pp. 120-126 </pages>
Reference: [Sha82] <author> A. Shamir. </author> <title> On the Generation of Cryptographically Strong Pseudo-Random Number Sequences. </title> <journal> ACM Trans. Comput. Sys., </journal> <volume> 1 (1983), </volume> <pages> pp. 38-44 </pages>
References-found: 7

