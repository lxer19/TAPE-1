URL: http://www.cs.dartmouth.edu/~nicol/papers/ides/wsc97-ides.ps
Refering-URL: http://www.cs.dartmouth.edu/~nicol/papers/ides/index.html
Root-URL: http://www.cs.dartmouth.edu
Title: THE IDES FRAMEWORK: A CASE STUDY IN DEVELOPMENT OF A PARALLEL DISCRETE-EVENT SIMULATION SYSTEM  
Author: David M. Nicol Michael M. Johnson Ann S. Yoshimura 
Address: Hanover, NH 03755  Livermore, CA 94550  
Affiliation: Department of Computer Science Dartmouth College  Sandia National Laboratories  
Abstract: This tutorial describes considerations in the design and development of the IDES parallel simulation system. IDES is a Java-based parallel/distributed simulation system designed to support the study of complex large-scale enterprise systems. Using the IDES system as an example, we discuss how anticipated model and system constraints molded our design decisions with respect to modeling, synchronization, and communication strategies. 
Abstract-found: 1
Intro-found: 1
Reference: [FGU97] <author> Franks, S., Gomes, F., Unger, B., Cleary, J. </author> <title> State Saving for Interactive Optimistic Simulation, </title> <booktitle> In: Proc. 11 th Workshop on Parallel and Distributed Simulation , 72-79, </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Entity Class Declaration In the face of these considerations, we implemented what is commonly known as copy statesaving (see <ref> [FGU97] </ref> for a discussion of various statesaving policies). Immediately prior to receipt of a message or processing of an event, the system checkpoints the mutable state of the affected entity. The state saving mechanism relies on the Java implementation of object serialization.
Reference: [Nicol89] <author> Nicol, D.M., Michael, C., Inouye, P.M.. </author> <title> Efficient Aggregation of Multiple LPs in Distributed Memory Parallel Simulations. </title> <booktitle> In: Proc. 1989 Winter Simulation Conference, </booktitle> <pages> pp. 680-685. </pages>
Reference: [Nicol93] <author> Nicol, </author> <title> D.M. The Cost of Conservative Synchronization in Parallel Discrete-Event Simulations. </title> <journal> Journal of the ACM , 40(2) </journal> <pages> 304-333, </pages> <month> April </month> <year> 1993. </year>
Reference: [Nicol95] <author> Nicol, </author> <title> D.M. NonCommittal Barrier Synchronization. </title> <journal> Parallel Computing, </journal> <volume> vol 21, </volume> <pages> pp. 529-549, </pages> <year> 1995. </year>
Reference-contexts: All that is needed to implement this algorithm is user code access to the partially reduced value that is typically in tree-based reduction algorithms. We have based our implementation on the noncommittal barrier synchronization <ref> [Nicol95] </ref>. 4 IDES Modeling There are a large number of factors that potentially affect performance of the IDES system. We thought it prudent, prior to building IDES, to anticipate some of the performance considerations, by first building an analytic model of IDES and study its behavior.
Reference: [NJYG97] <author> Nicol, D.M., Johnson, </author> <title> M.M., Yoshimura, A.S., and Goldsby, M.E. 1997. Performance Modeling of the IDES Framework, </title> <booktitle> In: Proc. 11 th Workshop on Parallel and Distributed Simulation , 38-45, </booktitle> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: We thought it prudent, prior to building IDES, to anticipate some of the performance considerations, by first building an analytic model of IDES and study its behavior. We have already reported on that work in <ref> [NJYG97] </ref>, we only sketch the approach and results here. The model recognizes that the key elements governing a sub-models behavior with respect to synchronization are (1) its time of next event, and (2) its minimum known receive time on generated messages.

References-found: 5

