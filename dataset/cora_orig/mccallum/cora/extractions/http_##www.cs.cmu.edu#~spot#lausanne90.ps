URL: http://www.cs.cmu.edu/~spot/lausanne90.ps
Refering-URL: http://www.cs.cmu.edu/~spot/research.html
Root-URL: http://www.cs.cmu.edu
Title: Integration of High-Level Animation Controls, Simulation Methods, and Gestural Specification  
Author: Brook Conner Henry Kaufman Matthias Wloka Bob Zeleznik Daniel G. Aliaga Wm. Scott Draves Philip M. Hubbard Brian Knep Michael J. Natkin Paul S. Strauss John F. Hughes Andries van Dam 
Date: September 9, 1990  
Abstract: We present an interactive modeling and animation system that enables the close integration of a variety of simulation and animation paradigms. The system models diverse objects undergoing a wide variety of changes over time. These changes can be specified by different methods of control. Real-time update speeds are facilitated through maintenance of data dependency networks combined with a detailed caching and data invalidation scheme. The system is an extensible testbed, enabling research in the interaction of disparate controller types. 
Abstract-found: 1
Intro-found: 1
Reference: [Bar81] <author> Alan H. Barr. </author> <title> Superquadrics and angle-preserving transformations. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 1(1), </volume> <year> 1981. </year>
Reference: [Bie90] <author> Eric A. Bier. </author> <title> Snap-dragging in three dimensions. </title> <booktitle> In Proceedings of the ACM SIGGRAPH, </booktitle> <pages> pages 193-204, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: The cloth would tell another object (most likely a spline patch) how to behave. Thus, the "cloth-ness" of the flag is inherent in the model. Alternately, constrained kinematic motion of objects, since it is more likely to be an interaction tool, (such as snap-dragging <ref> [Bie90] </ref>) is more logically implemented as a client of the database. In practice, how a controller is implemented is more a matter of convenience than anything else.
Reference: [Bor90] <author> Lisa Kay Borden. </author> <title> Articulated objects in bags. </title> <type> Master's thesis, </type> <institution> Brown University, </institution> <year> 1990. </year>
Reference-contexts: The interface to the API remains the same. 16 clients to edit all aspects of the database, from time-varying parameters to model hierarchy to three-dimensional gestural specification [Gol90][GGH + 89]. Articulated bodies can be built and manipulated gesturally in real time using an inverse kinematics algorithm <ref> [Bor90] </ref>. As a further example, we have implemented a finite-element cloth simulator which can interact with other objects in the scene through attachment and nonpenetration constraints based on [Wei88]. Currently we are integrating a rigid body dynamics simulator into the system as well [MW88][Hah88].
Reference: [BPZ87] <author> Cliff Brett, Steve Pieper, and David Zeltzer. </author> <title> Putting it all together: An integrated package for viewing and editing 3d 18 microworlds. </title> <type> Technical report, </type> <institution> The Media Laboratory, Mas--sachusetts Institute of Technology, </institution> <year> 1987. </year>
Reference: [Bro90] <institution> Brown University Computer Graphics Group. Demo reel, </institution> <month> May </month> <year> 1990. </year> <note> Undistributed video tape. </note>
Reference-contexts: Sporadic requests are handled across the network to conserve memory on the local machine. Persistent requests choose to optimize speed, since they are often indicative of a need for interactivity. 6 The Prototype Implementation We currently have an interactive distributed modeling and animation system running on the BAGS substrate <ref> [Bro90] </ref>. We have a variety of networked 7 Currently, the client explicitly indicates whether its requests are sporadic or persistent on an object by object basis. There is no reason that good application of heuristic techniques cannot automate this procedure.
Reference: [Far90] <author> Gerald Farin. </author> <title> Curves and Surfaces for Computer Aided Geometric Design. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1990. </year>
Reference-contexts: Uses of this stored data will be discussed further in section 5. Changes include standard linear transformations (scale, translate, rotate, shear, mirror, or an arbitrary transform specified by a matrix), nonlinear changes (twists, bends, waves, tapers, and free-form (Bernstein-Bezier) deformations <ref> [Far90] </ref>), and changes to affect surface attributes (color, reflectance, transparency, bumpiness, and others dependent on the lighting model). 6 Additionally, changes can specify parameters to objects. These parame-ters give data, in the form of name-value pairs, to an object that is relevant only to very specific classes.
Reference: [GGH + 89] <author> Tinsley Galyean, Melissa Gold, William Hsu, Henry Kaufman, and Mark Stern. </author> <title> Manipulation of virtual three-dimensional objects using two-dimensional input devices. </title> <type> Technical report, </type> <institution> Brown University, </institution> <year> 1989. </year>
Reference: [Gol90] <author> Melissa Gold. </author> <title> Multi-dimensional input devices and interaction techniques for a modeler-animator. </title> <type> Master's thesis, </type> <institution> Brown University, </institution> <year> 1990. </year>
Reference: [Hah88] <author> James K. Hahn. </author> <title> Realistic animation of rigid bodies. </title> <booktitle> In Proceedings of the ACM SIGGRAPH, </booktitle> <pages> pages 299-308, </pages> <month> August </month> <year> 1988. </year>
Reference: [HH90] <author> Pat Hanrahan and Paul Haeberli. </author> <title> Direct wysiwyg painting and texturing on 3d shapes. </title> <booktitle> In Proceedings of the ACM SIGGRAPH, </booktitle> <pages> pages 215-223, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Take for example something as basic as pattern-mapping. Perhaps we wish to paint on an object as part of an animation, changing the pattern with each frame <ref> [HH90] </ref>. With a few such objects in the scene, memory bandwidth requirements quickly exceed the capabilites of anything outside of custom hardware. We require high computational efficiency as well. As noted earlier, many desirable modeling techniques (such as constraint satisfaction or dynamic simulation) require large amounts of calculation.
Reference: [HN87] <author> Brent Halperin and Van Nguyen. </author> <title> A model for object-based inheritance. </title> <booktitle> In Research Directions in Object-Oriented Programming. </booktitle> <publisher> The MIT Press, </publisher> <year> 1987. </year>
Reference: [Kal90] <author> Devendra Kalra. </author> <title> A Unified Framework for Constraint-Based Modeling. </title> <type> PhD thesis, </type> <institution> California Institue of Technology, </institution> <year> 1990. </year>
Reference: [LTH86] <author> David H. Laidlaw, Willaim B. Trumbore, and John F. Hughes. </author> <title> Constructive solid geometry for polyhedral objects. </title> <booktitle> In Proceedings of the ACM SIGGRAPH, </booktitle> <pages> pages 161-170, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: A clear case of when caching is useful is boundary representations of CSG objects, something which can be slow to compute <ref> [LTH86] </ref>. Caching a transformation matrix might not be as wise, unless the matrix was obtained by a laborious series of calculations. Cached data is kept in the state of the object itself.
Reference: [MW88] <author> Matthew Moore and Jane Wilhelms. </author> <title> Collision detection and response for computer animation. </title> <booktitle> In Proceedings of the ACM SIG-GRAPH, </booktitle> <pages> pages 289-298, </pages> <month> August </month> <year> 1988. </year> <month> 19 </month>
Reference: [Str88] <author> Paul S. Strauss. </author> <title> Bags: The brown animation generation system. </title> <type> Technical Report CSS-88-22, </type> <institution> Brown University, </institution> <year> 1988. </year>
Reference-contexts: We begin by describing the problems that BAGS was designed to solve, followed by a detailed description of the design and implementation of the system. 1.1 Electronic Books | The Goal of BAGS The Brown Animation Generation System <ref> [Str88] </ref> was conceived as part of our ongoing research to develop the technologies necessary for interactive electronic books. We believe that electronic books used for teaching, research, and general instruction 1 will commonly involve "illustrations" that are animations of scientific, mathematical, and engineering visualizations [YMvD85].
Reference: [Weg87] <author> Peter Wegner. </author> <title> The object-oriented classification paradigm. </title> <booktitle> In Research Directions in Object-Oriented Programming. </booktitle> <publisher> The MIT Press, </publisher> <year> 1987. </year>
Reference: [Wei88] <author> Jerry Weil. </author> <title> A simplified approach to animating cloth objects. written while at Optomystic, </title> <year> 1988. </year>
Reference-contexts: Articulated bodies can be built and manipulated gesturally in real time using an inverse kinematics algorithm [Bor90]. As a further example, we have implemented a finite-element cloth simulator which can interact with other objects in the scene through attachment and nonpenetration constraints based on <ref> [Wei88] </ref>. Currently we are integrating a rigid body dynamics simulator into the system as well [MW88][Hah88]. BAGS is implemented entirely in the C programming language. We consider portability to be of high importance, and thus we regularly maintain the BAGS code on many different architectures.
Reference: [WMW86] <author> Brian Wyvill, Craig McPheeters, and Geoff Wyvill. </author> <title> Data structure for soft objects. </title> <journal> The Visual Computer, </journal> <volume> 2(4), </volume> <year> 1986. </year>
Reference-contexts: Another familiar aggregate is a CSG (constructive solid geometry) object. Other aggregates supported by BAGS include spline paths (composed of groups of points), prisms, objects of revolution (both small groups of spline paths), ducts (multiple cross-sections interpolated and extruded along an arbitrary path), bicubic patch meshes, and blobby surfaces <ref> [WMW86] </ref> (blending the surfaces of the objects of which it is aggregate). Aggregates and their subparts maintain knowledge about the relationships between each other, in a fashion similar to the aforementioned prototype hierarchy. Consider a spline path.
Reference: [YMvD85] <author> N. Yankelovich, N. Meyrowitz, and Andries van Dam. </author> <title> Reading and writing the electronic book. </title> <journal> IEEE Computer, </journal> <volume> 18(10), </volume> <month> October </month> <year> 1985. </year>
Reference-contexts: We believe that electronic books used for teaching, research, and general instruction 1 will commonly involve "illustrations" that are animations of scientific, mathematical, and engineering visualizations <ref> [YMvD85] </ref>. BAGS is designed to create and allow interaction with this kind of illustration. Many current media for animations in electronic books, like CD ROM and video disks, are limited, in that they present the user with a predefined sequence of frames, a canned movie.

References-found: 19

