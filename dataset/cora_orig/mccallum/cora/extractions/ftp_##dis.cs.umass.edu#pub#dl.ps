URL: ftp://dis.cs.umass.edu/pub/dl.ps
Refering-URL: http://dis.cs.umass.edu/research/dcbl.html
Root-URL: 
Email: fnagendra,lesserg@cs.umass.edu  lander@bbtech.com  
Phone: 2  
Title: Retrieval and Reasoning in Distributed Case Bases  
Author: M V Nagendra Prasad Victor R. Lesser and Susan E. Lander 
Address: Amherst, MA 01003  401 Main Street Amherst, MA 0l002  
Affiliation: 1 Department of Computer Science University of Massachusetts  Blackboard Technology Group, Inc.  
Abstract: The proliferation of electronically available networked information has led researchers to examine the issues involved in developing automated methods for gathering information in response to a query from a user. However, most of this literature deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different repositories or digital libraries. This paper deals with a different model of response to a query, involving composition of mutually related partial responses spread across a network of information repositories. We present a system for cooperative retrieval and composition of a case in which subcases are distributed across different agents in a multi-agent system. From a Gestalt perspective, a good overall case may not be the one derived from the summation of best subcases. Each agent's local view may result in best local cases, which when assembled may not result in the best overall case in terms of global measures. We propose a negotiation-driven case retrieval algorithm as an approach to dynamically resolving inconsistencies between different Appeared in the Journal of Visual Communication and Image Representation, Special Issue on Digital Libraries, Vol 7, No. 1, March 1996, pp 74 - 87. Also as UMASS CS Technical Report 95-27, 1995. y The work reported here is supported in part by NSF Center for Intelligent Information Retrieval (CIIR), and Office of Naval Research contract N00014-95-1-1198. The content of the information does not necessarily reflect the position or the policy of the U.S. Government and no official endorsement should be inferred. case pieces during the retrieval process.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Arens,Y., Chee, C. Y., Hsu, C., and Knoblock, C. A., </author> <title> Retrieving and integrating data from multiple information sources, </title> <journal> in International Journal on Intelligent and Cooperative Information Systems, </journal> <volume> 2 (2), </volume> <year> 1993, </year> <pages> pp. 127-158. </pages>
Reference-contexts: 1 Introduction The recent explosion in networked information resources has been attracting much attention towards automated methods for gathering information in response to a query from a user <ref> [1, 4, 24] </ref>. However, most of this literature deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different repositories or digital libraries. In this paper, we deal with a different model of response to a query.
Reference: [2] <author> R. Barletta and W. Mark., </author> <title> Breaking cases into pieces, </title> <booktitle> In Proceedings of Case-Based Reasoning Workshop, </booktitle> <address> St. Paul, MN., </address> <year> 1988, </year> <pages> pp 12-17. </pages>
Reference-contexts: This sort of representation is different from the distributed case base scenario we discussed in the paper. In a multi-agent system, there may be no monolithic case until the subcases are retrieved and assembled. Barletta and Mark <ref> [2] </ref> break cases into pieces where each piece is a sequence of actions used to recover from a hypothesized fault. JULIANA [28] and CELIA [26] implement a distributed case representation that is closer in spirit to the work described here.
Reference: [3] <editor> A. H. Bond and L. Gasser, Eds., </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Agent-based architectures offer concurrency, modularity, robustness, separation of concerns, and other advantages of a distributed system [20]. A multi-agent system comprises a group of intelligent agents working towards a set of common global goals or separate individual goals that interact <ref> [3] </ref>. In such a system, each of the agents may not be individually capable of achieving the global goal and/or their goals have interactions and hence a need for coordination among the set of agents.
Reference: [4] <author> M. C. Bowman, P. B. Danzig, U. Manber, and M. F. Schwartz, </author> <title> Scalable Internet Resource Discovery: Research Problems and Approaches, </title> <journal> Communications of the ACM, </journal> <volume> 37(8), </volume> <year> 1994, </year> <pages> pp 98 - 107, </pages> <note> cntd on 114. </note>
Reference-contexts: 1 Introduction The recent explosion in networked information resources has been attracting much attention towards automated methods for gathering information in response to a query from a user <ref> [1, 4, 24] </ref>. However, most of this literature deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different repositories or digital libraries. In this paper, we deal with a different model of response to a query.
Reference: [5] <author> D. R. Brown, R. Mecklenburg, D. L. Crandall, K. Y. Hwang, and R. Haddad, </author> <title> Distributed Component Information in Engineering Design, </title> <note> 1995, submitted for review. </note>
Reference-contexts: An agent has to obtain its components from manufacturer-specified catalogue case bases that may be distributed across the Internet. For example, it may treat WWW-accessible distributed component library like PARTNET <ref> [5, 25] </ref> as its case base from which to draw its components. In addition to the constraints arising from the overall design requirements, constraints on a component also arise from the specifications of other components in the design.
Reference: [6] <author> N. Carver, and V. Lesser., </author> <title> Sophisticated Cooperation in FA/C Distributed Problem Solving Systems, </title> <booktitle> Proceedings of AAAI-91, 1991, </booktitle> <publisher> AAAI Press/MIT Press, </publisher> <pages> pp 191-198. </pages>
Reference-contexts: This gives rise to a need for the agents to cooperatively access their case bases to retrieve and assemble a good composite case. In our work on Negotiated Search [18] 1 and DRESUN <ref> [6] </ref>, we proposed certain general mechanisms for performing distributed search in multi-agent systems. We draw upon our experience with these methods to extend them to case-based systems in a distributed environment. The rest of the paper is organized as follows. Section 2 presents situations where distributed case bases could arise. <p> An agent could apply different subsets of its local constraints at different times and perform evidential reasoning on partially satisfied sets of solutions to decide on further application of constraints like in DRESUN <ref> [6] </ref>. 8 Agents perform an asynchronous parallel distributed search to obtain a good overall case from case pieces. At a given point in time, there may be more than one developing partial case.
Reference: [7] <author> N. Carver, Q. Long, and V. R. Lesser, </author> <title> Reasoning About Inconsistency in Cooperative Distributed Problem Solving, </title> <type> Unpublished memo, </type> <institution> Department of Computer Science, University of Massachusetts, Amherst, </institution> <year> 1993. </year>
Reference-contexts: An agent recognizes particular features of the solution space and decides to use a more efficient customized search strategy. It can advise the other agent to play a particular role in 7 A similar method for generating feedback has been presented in <ref> [7] </ref>. 8 The predicates and their associated advice are coded into the system by a knowledge engineer. Alternatively, one could appeal to machine learning techniques to let the agents acquire this knowledge through experience. 9 this customized search. <p> However, much of the past work in DAI has primarily focussed on exploiting interactions among subgoals to resolve control uncertainty. This paper deals with explicit detection of inconsistencies among the local solutions and subsequent focussed resolution of these inconsistencies <ref> [7] </ref>. In negotiated retrieval, feedback on the causes of conflicts detected leads to an improved retrieval in subsequent rounds where these conflicts are avoided. An agent that assimilates feedback from other agents enhances its view of global problem solving requirements leading to an improved retrieval process.
Reference: [8] <author> S. E. Conry, K. Kuwabara, V. R. Lesser, and R. A. Meyer, </author> <title> Multistage Negotiation for Distributed Constraint Satisfaction, </title> <journal> IEEE Systems, Man, and Cybernetics, </journal> <volume> 21(6), </volume> <pages> pp 1462-1477. </pages>
Reference-contexts: In addition, assimilation may be specialized based on context, i.e., the feedback assimilated is applicable only in specific contexts at the local agent. For example, a particular constraint may be applicable only if certain features are within certain ranges of values <ref> [8] </ref>. In addition, the assimilation process may also involve transformations where an agent uses the feedback from other agents to generate its own local constraints rather than directly incorporating the feedback. <p> Termination criteria depend on problem solving requirements. Various termination criteria ranging from simple heuristics to complicated decision theoretic methods have been proposed for multi-agent systems <ref> [8] </ref>. One simple criteria used in our DCBR systems to be discussed later is as follows: Any agent that detects a case that has subcase contributions by all the relevant agents and has been validated against their local constraints issues a termination message to all the agents.
Reference: [9] <author> D. D. Corkill and V. R. Lesser, </author> <title> The use of meta-level control for coordination in a distributed problem solving network, </title> <booktitle> in Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp 748-756, </pages> <address> Karlsruhe, FRG, </address> <year> 1983. </year>
Reference-contexts: It uses the problem specification i and the presently available information 4 Organizational knowledge consists of a specification of general node interaction patterns <ref> [9] </ref> or static meta-level information about knowledge/case organization in the local databases of the agents. 7 on the problem-solving state (including previously tried solutions, conflicts they caused and feedback in the form of violated constraints from other agents) to achieve this task 5 . * Extend an existing partial case: Input:
Reference: [10] <author> D. D. Corkill, </author> <title> A Framework for Organizational Self-design in Distributed Problem-solving Networks, </title> <type> Ph.D. Dissertation, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, </institution> <year> 1983. </year>
Reference: [11] <author> K. Decker and V. R. Lesser, </author> <title> Generalizing the Partial Global Planning Algorithm, </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(2), </volume> <year> 1992, </year> <pages> pp 319 - 346. </pages>
Reference: [12] <author> K. Decker and V. R. Lesser, </author> <title> Quantitative Modeling of Complex Computational Task Environments, </title> <booktitle> in Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pp 217-224, </pages> <address> Washington, </address> <year> 1993. </year>
Reference-contexts: Selectively sharing relevant partial results of a local search or data can enhance the global problem solving quality and efficiency without paying a large price for communication. In some recent studies, Decker and Lesser <ref> [12] </ref> further quantify these observations and discuss various trade-offs involved in communication versus enhanced problem solving efficiency. However, much of the past work in DAI has primarily focussed on exploiting interactions among subgoals to resolve control uncertainty.
Reference: [13] <author> Durfee, E.H., Lesser, V.R. and Corkill, </author> <title> D.D., "Coherent Cooperation Among Communicating Problem Solvers," </title> <journal> IEEE Transactions on Computers, </journal> <volume> Vol. 36, No. 11, </volume> <month> November </month> <year> 1987, </year> <pages> pp. 1275-1291. </pages>
Reference-contexts: It can decide to inform the existence of only the best ones or to inform once every few time units, all the new partial cases that emerged during the last time window <ref> [13] </ref>. An agent may also decide to inform others about more than just the existence of the cases.
Reference: [14] <author> E. H. Durfee and V. R. Lesser, </author> <title> Partial Global Planning: A coordination framework for distributed hypothesis formation, </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(5) </volume> <pages> 1167-1183, </pages> <month> September </month> <year> 1991. </year>
Reference: [15] <author> Kolodner, J. L., </author> <title> Case-Based Reasoning, </title> <publisher> Morgan Kaufmann Pub., </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference: [16] <author> Kolodner, J. L. and Simpson, R. L., </author> , <title> The MEDIATOR: Analysis of an early case-based problem solver, </title> <booktitle> Cognitive Science 13(4), </booktitle> <year> 1989, </year> <pages> pp 507-549. </pages>
Reference-contexts: There has been some work in breaking a single case into pieces and reasoning with these pieces in a single agent context. MEDIATOR <ref> [16] </ref> represents large cases monolithically with pieces embedded as parts which can be located within a larger case. A case is indexed both by its own indices and those of its pieces. This sort of representation is different from the distributed case base scenario we discussed in the paper.
Reference: [17] <author> Lander, S. E., </author> <title> Negotiated Search in Heterogeneous Multi-Agent Systems, </title> <type> Ph.D. thesis, </type> <institution> Department of Computer Science, University of Massachusetts, Amherst, </institution> <year> 1993. </year>
Reference-contexts: However, this may not be the only way. In the case of a set of reusable agents <ref> [17] </ref>, each agent could have acquired its own independent problem-solving experiences by participating in different teams of agents. Or a Case-Knowledge Engineer could design each of the case bases by giving them episodes from his collection of cases. <p> The receiving agents assimilate this feedback, leading to an enhanced view of the global requirements for future operations. Any subsequent initiate, extend or merge is more likely to avoid the same conflicts. Our problem is cast as a distributed constraint optimization problem <ref> [17] </ref> implying that not all constraints need to be satisfied in a solution. As many constraints are satisfied as is possible. Constraints have differing amounts of flexibility. Some may be hard, meaning that they must be satisfied in any legal solution. <p> A partial case s, denoted by s , is composed of one or more locally retrieved cases (from different agents): s = i 1 i 2 : : : u z 2 For example in TEAM <ref> [17] </ref>, from which our DCBR system draws its inspiration, an agent's sub-design possesses shared features with another agent's sub-design. Pump and Motor agents share a parameter required-power. Both agents have to arrive at the same value for the required-power parameter. <p> Alternatively, one could appeal to machine learning techniques to let the agents acquire this knowledge through experience. 9 this customized search. Lander <ref> [17] </ref> presents a good example of a customized search called linear compromise where agents, upon recognizing the linear nature of their solution space, decide to exchange end points and extrapolate between them to find the intersection point as a mutual compromise solution. <p> The DENEGOT system [21] presents a negotiated planning algorithm suitable to the specific context of distributed planning. The NCR algorithm presented here is a generalization of the negotiated search algorithm presented in TEAM <ref> [17] </ref> and is more generally applicable to reasoning about inconsistencies in distributed data. The following section presents a multi-agent system that incorporates a restricted form of negotiated retrieval (i.e., negotiated search as discussed in Lander [17]) and then shows a brief trace from the system. <p> NCR algorithm presented here is a generalization of the negotiated search algorithm presented in TEAM <ref> [17] </ref> and is more generally applicable to reasoning about inconsistencies in distributed data. The following section presents a multi-agent system that incorporates a restricted form of negotiated retrieval (i.e., negotiated search as discussed in Lander [17]) and then shows a brief trace from the system. <p> In the section on experiments, we discuss an abstract DCBR system and show some early empirical results on the negotiated retrieval mechanism. 4 CBR-TEAM: A Multi-Agent Design System We now present a multi-agent system called CBR-TEAM whose core is derived from TEAM <ref> [17] </ref>. TEAM is a parametric design system that uses a cooperative heterogeneous set of reusable agents, each of which has the capability to produce a component of the overall design that is stored in a centralized blackboard. <p> The TEAM system has six domain agents for the design of six components in a steam condenser and a critic agent that checks for certain features in the assembled design. It is a multi-strategy inferencing system <ref> [17] </ref> in which different strategies are seamlessly integrated into a design framework. The interactions between the components generate constraints for these strategies leading agents to iteratively negotiate on their results to find an acceptable design. <p> Agents whose components do not match are said to be in conflict. The conflicting set of agents negotiate a resolution which involves a search guided by numerical-valued constraints on the mutually known parameters, or other strategies like linear compromise <ref> [17] </ref>. CBR-TEAM is a modification of the TEAM system involving three agents, each producing a component of a steam condenser part as shown in Figure 2. <p> Literature on multi-agent systems contains algorithms similar to those of the negotiated retrieval. The DENEGOT system [21] presents a distributed negotiation algorithm for distributed planning and TEAM presents a negotiated search algorithm for distributed search among a set of heterogeneous agents <ref> [17] </ref>. Negotiated retrieval is specifically tailored to distributed case bases with strategies for broadening and deepening a search in a case base not necessarily applicable to planning domains dealt with in DENEGOT. In addition, negotiating over conflicts in subcases can be qualitatively different from negotiations over plans in DENEGOT. <p> Thus we resort to weak declarative constraint based knowledge to reason about possible interactions between subcases. The strategies in negotiated retrieval include the strategies in negotiated search as a subset. In this sense, negotiated retrieval is more general than negotiated search. In addition, negotiated search as discussed in Lander <ref> [17] </ref> imposes a sequentiality in search by giving an agent only two options either extend an existing solution or initiate a new solution which other agents sequentially extend. 7 Conclusion & Future Work This paper makes an initial foray into methods for performing retrieval of cases distributed across multiple agents.
Reference: [18] <author> Lander, S. E and Lesser, V. R., </author> <title> Understanding the Role of Negotiation in Distributed Search Among Heterogeneous Agents, </title> <booktitle> in Proceedings of the International Joint Conference on Artificial Intelligence, </booktitle> <address> Chambery, France, </address> <year> 1993, </year> <pages> pp 438 - 444. </pages>
Reference-contexts: This gives rise to a need for the agents to cooperatively access their case bases to retrieve and assemble a good composite case. In our work on Negotiated Search <ref> [18] </ref> 1 and DRESUN [6], we proposed certain general mechanisms for performing distributed search in multi-agent systems. We draw upon our experience with these methods to extend them to case-based systems in a distributed environment. The rest of the paper is organized as follows.
Reference: [19] <author> Lehnert, W. and Sundheim, B., </author> <title> "A Performance Evaluation of Text-Analysis Technologies," </title> <journal> AI Magazine, </journal> <year> 1991, </year> <pages> pp 81-94. </pages>
Reference-contexts: Any unstructured database like a text database can also be converted to a case base by generating semantic descriptors characterizing each document in the database. Much of the work in information extraction and text summarization concentrates on generating such descriptors <ref> [19] </ref>. Given such descriptor generating capabilities, any set of databases with inter-related data can be treated as distributed case bases. Information requirements of many real life applications lead to such distributed case bases.
Reference: [20] <author> Lesser, V. R., </author> <title> A retrospective view of FA/C distributed problem solving, </title> <journal> IEEE Systems, Man, and Cybernetics, </journal> <volume> 21(6), </volume> <pages> pp 1346-1363. </pages>
Reference-contexts: Passive data sources like databases can be transformed into pro-active agents by wrapping them with intelligent interfaces. Agent-based architectures offer concurrency, modularity, robustness, separation of concerns, and other advantages of a distributed system <ref> [20] </ref>. A multi-agent system comprises a group of intelligent agents working towards a set of common global goals or separate individual goals that interact [3]. <p> Due to its partial view of the problem-solving situation, an agent may have access only to a part of the environment, and communication bandwidth limitations and heterogeneity of representations may limit its view of other agents' state. Given these uncertainties <ref> [20] </ref>, an agent may have to do evidential reasoning and focused negotiation to resolve them to the extent that it can make positive contributions to the on-going problem solving process. <p> This sort of broadening of allowed strategies upon failure is similar to the broadening of retrieval in our algorithm. The negotiated retrieval algorithm benefits from a long history of thought in DAI and Multi-agent systems. Lesser <ref> [20] </ref> discusses the importance of interactions among subgoals and data distributed across a set of agents in distributed problem solving. Selectively sharing relevant partial results of a local search or data can enhance the global problem solving quality and efficiency without paying a large price for communication.
Reference: [21] <author> Moehlman, T., Lesser, V. R., and Buteau, B., </author> <title> Decentralized Negotiation: An Approach to the Distributed Planning Problem, Group decision and Negotiation, 1(2), </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1992, </year> <pages> pp 161-192. </pages>
Reference-contexts: of an agent's constraints as soft constraints and hard constraints where the former set represents solution preferences and the later set represents those constraints that are relaxed only as a result of explicit recognition by the agents that the set is too constrained to lead to a mutually acceptable solution <ref> [21] </ref>. Relaxing a soft constraint may only involve penalties in terms of loss of optimality in the desirable attributes. For example, relaxing a soft constraint may lead to less robust solutions. Softness of a constraint represents its degree of flexibility. <p> The DENEGOT system <ref> [21] </ref> presents a negotiated planning algorithm suitable to the specific context of distributed planning. The NCR algorithm presented here is a generalization of the negotiated search algorithm presented in TEAM [17] and is more generally applicable to reasoning about inconsistencies in distributed data. <p> An agent that assimilates feedback from other agents enhances its view of global problem solving requirements leading to an improved retrieval process. Literature on multi-agent systems contains algorithms similar to those of the negotiated retrieval. The DENEGOT system <ref> [21] </ref> presents a distributed negotiation algorithm for distributed planning and TEAM presents a negotiated search algorithm for distributed search among a set of heterogeneous agents [17].
Reference: [22] <author> Nagendraprasad, M. V., Lesser, V. R., and Lander, S. E., </author> <title> Learning Organizational Roles in a Multi-agent System, </title> <type> TR 95-35, </type> <institution> Department of Computer Science, University of Mas-sachusetts, Amherst, </institution> <year> 1995. </year>
Reference-contexts: CBR-TEAM is a modification of the TEAM system involving three agents, each producing a component of a steam condenser part as shown in Figure 2. This three-component design can be combined with a heat exchanger to get a complete steam condenser. 9 Nagendra Prasad, Lander and Lesser <ref> [22] </ref> discuss in detail the issues in learning the order of instantiation of such operators. 11 The agents in CBR-TEAM retrieve and use suitable members from libraries of manufacturer-specified models for designing their components.
Reference: [23] <author> Robert Neches, </author> <title> Private communications, </title> <month> January, </month> <year> 1995. </year>
Reference-contexts: Information requirements of many real life applications lead to such distributed case bases. Let us illustrate this with another example: a venture capitalist assembling a team of experts for a startup company (introduced by Neches <ref> [23] </ref>). We can imagine an automated assistant for the venture capitalist querying a multi-agent system that assembles the team by letting each agent access its own resume database of various experts for a particular aspect of the company: technical, management, sales, etc.
Reference: [24] <author> Tim Oates, M V NagendraPrasad, V. R. Lesser, </author> <title> Cooperative Information Gathering: A Distributed Problem Solving Approach, </title> <type> Technical Report 94-66, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, </institution> <year> 1994. </year>
Reference-contexts: 1 Introduction The recent explosion in networked information resources has been attracting much attention towards automated methods for gathering information in response to a query from a user <ref> [1, 4, 24] </ref>. However, most of this literature deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different repositories or digital libraries. In this paper, we deal with a different model of response to a query. <p> In this paper, we deal with a different model of response to a query. No single source of information may contain the complete response to a query; this may necessitate piecing together mutually related partial responses from disparate and possibly heterogeneous sources <ref> [24] </ref>. For example, consider a multi-agent parametric mechanical design system where each agent has to contribute a component to assemble a complete design. An agent has to obtain its components from manufacturer-specified catalogue case bases that may be distributed across the Internet.
Reference: [25] <author> Partnet: </author> <title> The Distributed Component Information System, </title> <address> http://part.net </address>
Reference-contexts: An agent has to obtain its components from manufacturer-specified catalogue case bases that may be distributed across the Internet. For example, it may treat WWW-accessible distributed component library like PARTNET <ref> [5, 25] </ref> as its case base from which to draw its components. In addition to the constraints arising from the overall design requirements, constraints on a component also arise from the specifications of other components in the design.
Reference: [26] <author> Redmond, M.A., </author> <title> Distributed cases for case-based reasoning: Facilitating use of multiple cases, </title> <booktitle> In Proceedings of AAAI-90, </booktitle> <address> Cambridge, MA, </address> <publisher> AAAI Press/MIT Press, </publisher> <year> 1990, </year> <pages> pp 304-309. </pages>
Reference-contexts: The issue of distributed case bases, to our knowledge, has not been studied in the multi-agent context. Barletta et al.[2] and Redmond et al. <ref> [26] </ref> deal with distributed cases in single agent systems. In these approaches, each case is divided into subcases or snippets and a snippet is indexed using both global goals and the local context of that snippet within the case. <p> In a multi-agent system, there may be no monolithic case until the subcases are retrieved and assembled. Barletta and Mark [2] break cases into pieces where each piece is a sequence of actions used to recover from a hypothesized fault. JULIANA [28] and CELIA <ref> [26] </ref> implement a distributed case representation that is closer in spirit to the work described here. Cases are broken into pieces called snippets, each of which represents the pursual of a goal. These snippets are linked to other causally related snippets. Following the links can reconstruct a full case.
Reference: [27] <author> Rissland, E., Daniels, J., Rubinstein, B., and Skalak, D., </author> <title> Case-Based Diagnostic Analysis in a Blackboard Architecture, </title> <booktitle> in the Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pp 66-72, </pages> <address> Washington, </address> <year> 1993. </year>
Reference: [28] <author> Shinn, H.S., </author> <title> The Role of mapping in analogical transfer, </title> <booktitle> In Proceedings of the Tenth Annual Conference of the Cognitive Science Society, </booktitle> <address> Northvale, NJ:Erlbaum, </address> <year> 1988. </year> <month> 22 </month>
Reference-contexts: In a multi-agent system, there may be no monolithic case until the subcases are retrieved and assembled. Barletta and Mark [2] break cases into pieces where each piece is a sequence of actions used to recover from a hypothesized fault. JULIANA <ref> [28] </ref> and CELIA [26] implement a distributed case representation that is closer in spirit to the work described here. Cases are broken into pieces called snippets, each of which represents the pursual of a goal. These snippets are linked to other causally related snippets.
References-found: 28

