URL: http://www.isi.edu/~valente/papers/valente-94j.ps.gz
Refering-URL: http://www.isi.edu/~valente/papers/valente-94j.html
Root-URL: http://www.isi.edu
Email: e-mail: fandre,breukerg@lri.jur.uva.nl  
Title: Making Ends Meet: Conceptual Models and Ontologies in Legal Problem Solving  
Author: Andre Valente and Joost Breuker 
Address: Kloveniersburgwal 72, 1012 CZ Amsterdam, The Netherlands  
Affiliation: University of Amsterdam Department of Computer Science and Law  
Abstract: Conceptual models, such as the ones used in KADS, have been proposed as important tools for developing knowledge-based systems. These models come usually associated with a domain-independent task such as planning or diagnosis. Such strategy, however, has been criticized for not paying enough attention to the representation and acquisition of domain knowledge. It has been argued that ontologies can provide this missing step. Ontologies are coherent specifications (theories) of the main concepts involved in application domains such as physical systems, medicine or law. Nevertheless, research on these two perspectives have been usually separated. One can find libraries of ontologies (such as the ones developed with ONTOLINGUA) or conceptual models (such as the KADS library), but rarely both. In this article, we show with a specific example that the two ends meet. We propose separately a KADS conceptual model for a central legal task (namely assessment) and an ontology of legal knowledge (specifically normative knowledge). We then show that a connection between the two does exist, and it is based on the roles that knowledge can play in legal problem solving.
Abstract-found: 1
Intro-found: 1
Reference: [Alchourron & Bulygin, 1971] <author> C. E. Alchourron and E. Bulygin. </author> <title> Normative Systems. </title> <publisher> Springer-Verlag, Wien, </publisher> <year> 1971. </year>
Reference-contexts: Formalizations of normative systems have been discussed mainly as an application of deontic logics. These are formalisms where the so-called deontic concepts of obligation, permission and prohibition are formalized, usually as modal operators <ref> [Alchourron & Bulygin, 1971] </ref>. In this section, we present a model of the legal domain in the form of a simple formalization of normative systems. 2 The formalization is based on a small set of commonsense intuitions about how a normative system works.
Reference: [Balder & Akkermans, 1992] <author> J. R. Balder and J. M. Akkermans. </author> <title> TheME: an environment for building formal KADS-II models of expertise. </title> <booktitle> In Proceedings of the Twelfth International Conference on Expert Systems and their Applications, </booktitle> <address> Avignon, France, </address> <month> June </month> <year> 1992. </year> <title> Also in: </title> <journal> AI Communications, </journal> <volume> 5(3), </volume> <pages> page 136, </pages> <year> 1992. </year>
Reference-contexts: There are two ways to fix the meaning of these terms (see fig 1). The first one is by formalization, using logics. KADS has therefore developed an FML (formal modeling language) that allows translation of CML models in logics <ref> [Balder & Akkermans, 1992] </ref>. The other way is not by formal semantics, but by reference. The CML models can be mapped upon descriptions of machine architectures. The "design languages" developed in KADS provide operationalizations that describe the working of the machinery.
Reference: [Breuker & denHaan, 1991] <author> J.A. Breuker and N. den Haan. </author> <title> Separating world and regulation knowledge: where is the logic? In M. </title> <editor> Ser-got, editor, </editor> <booktitle> Proceedings of the third international conference on AI and Law, </booktitle> <pages> pages 41-51, </pages> <address> New York, NJ, 1991. </address> <publisher> ACM. </publisher>
Reference-contexts: Basically, it consists of the specification of what elements in law play the static roles used in the model: * In law, the description of the cases being analyzed is made by a world description (or theory) <ref> [Breuker & denHaan, 1991] </ref>. This is a description of the agents and objects which the law refers to, plus their actions, and relations between all these elements. <p> This solves, or rather evades, also some of the problems involved in finding the right abstractions. It should be noted that the world knowledge is a model of a social system as viewed by the legislator and is essentially terminological knowledge (see <ref> [Breuker & denHaan, 1991] </ref>, [Valente & Breuker, 1994b]). The formal model of the normative system (fi) becomes only relevant when the normative knowledge is brought to attention. The abstract case description corresponds with a situation S, i.e. situations can fill this dynamic input role. <p> There is strongly suggestive evidence by the fact that both authors have been involved in the both approaches. Moreover, we have had a similar experience before. In [Breuker et al., 1993] a strong mapping is reported between the architecture of a legal knowledge system | TRACS <ref> [Breuker & denHaan, 1991] </ref> | for testing Dutch traffic regulations, and a more abstract conceptual model for assessment. TRACS was developed purely on the basis of problems in represent ing the traffic regulations.
Reference: [Breuker & van deVelde, 1994] <author> J. Breuker and W. van de Velde, </author> <title> editors. Reusable Problem Solving Components: The CommonKADS Library for Expertise Modelling. </title> <publisher> IOS Press, </publisher> <address> Amster-dam, Washington, </address> <year> 1994. </year> <note> In press. </note>
Reference-contexts: However, KADS also provides support by providing skeletal (components) of models of problem solving that can be reused, combined and refined as to construct the conceptual model of a specific application (called an expertise model). A library of such reusable components has been con-structed <ref> [Breuker & van deVelde, 1994] </ref>. However, it appears that this library contains almost exclusively (parts of) problem solving methods for various problem types, such as diagnosis, planning, assessment, etc., while only rudimentary generic models of domain knowledge are available. <p> Therefore, the analysis we present here concerns the kernel of legal reasoning: a minimal "legal reasoning engine". 3.2 The Legal Assessment Model The legal assessment model is selected and adapted from the assessment models in the new CommonKADS Library [Valente & Lockenhoff, 1993] <ref> [Breuker & van deVelde, 1994, Chapter 7] </ref>). The function structure is the basic tool in KADS for describing a model for problem-solving in the CommonKADS Library. It describes the flow of inference in the knowledge level, without establishing detailed control issues.
Reference: [Breuker et al., 1987] <author> J. A. Breuker, B. J. Wielinga, M. van Someren, R. de Hoog, A. Th. Schreiber, P. de Greef, B. Bre-deweg, J. Wielemaker, J. P. Billault, M. Davoodi, and S. A. Hayward. </author> <title> Model Driven Knowledge Acquisition: Interpretation Models. </title> <institution> ESPRIT Project P1098 Deliv--erable D1 (task A1), University of Amsterdam and STL Ltd, </institution> <year> 1987. </year>
Reference-contexts: TRACS was developed purely on the basis of problems in represent ing the traffic regulations. The assessment model was originally conceived by the same author <ref> [Breuker et al., 1987] </ref>, but had not been considered at all.
Reference: [Breuker et al., 1993] <author> J. Breuker, B. Bredeweg, and A. Valente. </author> <title> Reusable problem solving components: the CommonKADS library. </title> <booktitle> In Proceedings of the Third KADS User Meeting, </booktitle> <pages> pages 251-269, </pages> <address> Munich, </address> <year> 1993. </year> <institution> Siemens AG. </institution>
Reference-contexts: Therefore, it becomes very important to show that this formalization and representation can also be operationalized in a simple architecture, but more importantly, in effective algorithms. Elsewhere, we have shown that a simple architecture can be easily mapped upon the conceptual model for (legal) assessment problems <ref> [Breuker et al., 1993] </ref>. The correspondence may look too good, and suspicion may be raised that the assessment model or the formalization of the normative system has largely influenced the other approach. There is strongly suggestive evidence by the fact that both authors have been involved in the both approaches. <p> There is strongly suggestive evidence by the fact that both authors have been involved in the both approaches. Moreover, we have had a similar experience before. In <ref> [Breuker et al., 1993] </ref> a strong mapping is reported between the architecture of a legal knowledge system | TRACS [Breuker & denHaan, 1991] | for testing Dutch traffic regulations, and a more abstract conceptual model for assessment.
Reference: [Clancey, 1985] <author> W. J. Clancey. </author> <title> Heuristic classification. </title> <journal> Artificial Intelligence, </journal> <volume> 27 </volume> <pages> 289-350, </pages> <year> 1985. </year>
Reference-contexts: The major important justification for having conceptual modeling lan-guages as first class objects in a methodology, was found in [Newell, 1982]'s claim for knowledge level descriptions, independent of the "symbol level" languages that are used for implementing knowledge systems (see e.g. <ref> [Clancey, 1985] </ref>). Independence of an implementation formalism has indeed the practical advantage that one is not committed immediately to a particular platform, nor to the detailed actual working of the program.
Reference: [Gruber, 1992] <author> T. Gruber. Ontolingua: </author> <title> A mechanism to support portable ontologies. version 3.0. </title> <type> Technical report, </type> <institution> Knowledge Systems Laboratory, Stanford University, California, </institution> <year> 1992. </year>
Reference-contexts: The reason is that conceptual modelling is largely biased towards a description of the reasoning. An important source for developing reusable components for domain knowledge is in the abstraction of domain ontologies <ref> [Gruber, 1992] </ref>. It is claimed that these domain ontologies provide a complementary perspective to the problem solving methods. However, this claim is not tested.
Reference: [Hart & Honore, 1985] <author> H.L.A. Hart and T. Honore. </author> <title> Causation in the Law. </title> <publisher> Oxford University Press, </publisher> <address> New York, </address> <note> second edition edition, 1985. ISBN 0-19-825474-1. </note>
Reference-contexts: These are not covered by the formal model, because it is restricted to an account of the normative knowledge in legal reasoning. The causal and intentional relations play a very important role in legal reasoning (cf. <ref> [Hart & Honore, 1985] </ref>), but this causal and "responsibility" knowledge requires separate representation and inference [Valente & Breuker, 1994b]. The model of the normative systems only specifies how situations are represented, as sets of circumstances, without further organization.
Reference: [Hart, 1961] <author> H.L.A. Hart. </author> <title> The Concept of Law. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1961. </year>
Reference-contexts: structured in a hierarchy of concepts or terms, but it can also take the form of a full logical theory. * The distinction between the set of norms and the conflict resolution criteria corresponds to a well-established distinction used in legal theory, namely that between primary rules and secondary rules <ref> [Hart, 1961] </ref>. Primary rules (corresponding to the set of norms), operate on social behavior, classifying it as legal or illegal. Secondary rules (corresponding to the conflict resolution criteria) refer to primary rules, establishing an internal priority between them.
Reference: [Newell, 1982] <author> A. Newell. </author> <title> The knowledge level. </title> <journal> Artificial Intelligence, </journal> <volume> 18 </volume> <pages> 87-127, </pages> <year> 1982. </year>
Reference-contexts: In this paper we will use the methodology as defined in its most recent version, called CommonKADS, which is the product of the ESPRIT P5248 project. 1 and used. The major important justification for having conceptual modeling lan-guages as first class objects in a methodology, was found in <ref> [Newell, 1982] </ref>'s claim for knowledge level descriptions, independent of the "symbol level" languages that are used for implementing knowledge systems (see e.g. [Clancey, 1985]).
Reference: [Schreiber et al., 1993] <editor> A. Th. Schreiber, B. J. Wielinga, and J. A. Breuker, editors. KADS: </editor> <title> A Principled Approach to Knowledge-Based System Development, volume 11 of Knowledge-Based Systems Book Series. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1993. </year> <note> ISBN 0-12-629040-7. </note>
Reference-contexts: Because in knowledge engineering the initial focus has been on implementation platforms, it has taken some time and extensive research programs like those for the KADS methodology, 1 before languages to express conceptual models were developed 1 KADS is a methodology for developing knowledge-based systems <ref> [Schreiber et al., 1993] </ref>. It was created throughout a many years research effort that includes several ESPRIT projects and many major academic and industrial partners in Europe.
Reference: [Schreiber et al., 1994] <author> G. Schreiber, B. Wielinga, H. Akkermans, and W. van de Velde. </author> <title> CML: The CommonKADS conceptual modelling language. </title> <booktitle> In Proceedings of the Eu-ropean Knowledge Acquisition Workshop EKAW-94. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Therefore, in KADS the conceptual modeling language (CML) has a frame-like representation and a graphical mode of expression <ref> [Schreiber et al., 1994] </ref>. The problem with CML's informal vocabulary | and for that matter, any other conceptual modeling language | is that it lacks precision in its semantics.
Reference: [Sergot & Jones, 1992] <author> Marek Sergot and Andrew Jones. </author> <title> Deontic Logic in the Representation of Law: Towards a Methodology. </title> <journal> Artificial Intelligence and Law, </journal> <volume> 1(1) </volume> <pages> 45-64, </pages> <year> 1992. </year>
Reference-contexts: The formalization may be precise etc. but may turn out to be completely intractable. In fact, the formalization we have presented is an alternative for the usual formalization of legal reasoning by a deontic logic (cf. <ref> [Sergot & Jones, 1992] </ref>). Implementations of deontic logics yield very serious problems and are in principle intractable. Therefore, it becomes very important to show that this formalization and representation can also be operationalized in a simple architecture, but more importantly, in effective algorithms.
Reference: [Svensson et al., 1992] <author> J.S. Svensson, P.J.M. Kordelaar, J.G.J. Wassink, and G.J. van 't Eind. ExpertisZe, </author> <title> a Tool for Determining the Effects of Social Security Information. </title> <editor> In C.A.F.M Grutters, J.A.P.J. Breuker, H.J. van den Heerik, A.H.J. Schmidt, and C.N.J. de Vey Mestdagh, editors, </editor> <booktitle> Proceedings of Legal Knowledge Based Systems: Information Technology and Law, JURIX-1992, </booktitle> <pages> pages 51-61, </pages> <address> Lelystad, NL, </address> <month> December </month> <year> 1992. </year> <note> Koninklijke Ver--mande. </note>
Reference-contexts: The assessment model was originally conceived by the same author [Breuker et al., 1987], but had not been considered at all. In this case one can find a similar architecture for another legal reasoning system (ExpertiSZe <ref> [Svensson et al., 1992] </ref>), but one may also argue that almost all other legal reasoning systems exhibit another architecture, but, in general, these architectures are less articulate.
Reference: [Valente & Breuker, 1994a] <author> A. Valente and J. Breuker. </author> <title> A commonsense theory of normative reasoning in law. </title> <editor> In Giovanni Sartor, editor, </editor> <booktitle> Proceedings of the ICLP'94 Workshop on Legal Applications of Logic Programming, </booktitle> <address> Genova, </address> <month> june </month> <year> 1994. </year>
Reference-contexts: It is not our intention to present the formalism in full detail in this paper; for a more complete description, see <ref> [Valente & Breuker, 1994a] </ref>. The formalism is built (and presented) as follows. We start by defining a small formalism to represent and reason with situations. We distinguish between two types of situations, generic and specific, and a match predicate that formalizes a comparison between them. <p> The rationale behind this definition cannot be discussed here in detail, but it refers to the use of a minimality criterion which tries to avoid the use of redundant information in the matching, which may produce unwanted consequences (for details, see <ref> [Valente & Breuker, 1994a] </ref>). A prime implicant of a sentence E is a conjunction S which logically implies E but for which no proper subset of C also implies E. <p> The abstract case description corresponds with a situation S, i.e. situations can fill this dynamic input role. The primary norms can be represented as normative functions. The evaluate function can be accomplished by a matching algorithm which we have not discussed here (see <ref> [Valente & Breuker, 1994a] </ref>), based on algorithms for computing prime implicants available in the literature. The outcome is the set of norms which yielded Illegal, which fills the violated norms role.
Reference: [Valente & Breuker, 1994b] <author> A. Valente and J. Breuker. </author> <title> A functional ontology of law. </title> <editor> In G. Bargellini and S. Binazzi, editors, </editor> <title> Towards a global expert system in law. </title> <publisher> CEDAM Publishers, </publisher> <address> Padua, Italy, </address> <year> 1994. </year>
Reference-contexts: We will first describe the formalizationof the use of normative concepts in legal reasoning | the ontological analysis is not fully presented (but see <ref> [Valente & Breuker, 1994b] </ref>). Then we will show that a domain specific elaboration of one of the models from the CommonKADS library for solving assessment problems, easily maps onto this formalization. <p> We distinguish between two types of situations, generic and specific, and a match predicate that formalizes a comparison between them. Based on these concepts, we define individual norms 2 This is a simplification, since there are in fact other knowledge categories involved in law (see <ref> [Valente & Breuker, 1994b] </ref>). by how they are applied to situations Then, we define normative systems as sets of norms plus a specification of how conflicts between norms are to be handled, and what to do when all norms are silent (i.e. which default to use). 2.1 Situations Intuition 1 Norms <p> The causal and intentional relations play a very important role in legal reasoning (cf. [Hart & Honore, 1985]), but this causal and "responsibility" knowledge requires separate representation and inference <ref> [Valente & Breuker, 1994b] </ref>. The model of the normative systems only specifies how situations are represented, as sets of circumstances, without further organization. Therefore, we can only give an informal account of the structure case function, which is a rather complex one. <p> This solves, or rather evades, also some of the problems involved in finding the right abstractions. It should be noted that the world knowledge is a model of a social system as viewed by the legislator and is essentially terminological knowledge (see [Breuker & denHaan, 1991], <ref> [Valente & Breuker, 1994b] </ref>). The formal model of the normative system (fi) becomes only relevant when the normative knowledge is brought to attention. The abstract case description corresponds with a situation S, i.e. situations can fill this dynamic input role. The primary norms can be represented as normative functions.
Reference: [Valente & Lockenhoff, 1993] <author> A. Valente and C. Lockenhoff. </author> <title> Organization as guidance: A library of assessment models. </title> <booktitle> In Proceedings of the Seventh European Knowledge Acquisition Workshop (EKAW'93), </booktitle> <pages> pages 243-262, </pages> <year> 1993. </year>
Reference-contexts: Legal assessment consists of assessing a certain case in the light of a certain body of law in order to verify whether it complies or not with the law. The model is selected from a library of assessment models which has been developed in KADS <ref> [Valente & Lockenhoff, 1993] </ref>, and further adapted and made specific for law by mapping the knowledge roles used in the task to role names which resemble the structures to which they correspond in legal problems. 3.1 Assessment and Law Assessment problems are characterized by the fact that a description of a <p> However, these tasks also imply assessment as a subtask. Therefore, the analysis we present here concerns the kernel of legal reasoning: a minimal "legal reasoning engine". 3.2 The Legal Assessment Model The legal assessment model is selected and adapted from the assessment models in the new CommonKADS Library <ref> [Valente & Lockenhoff, 1993] </ref> [Breuker & van deVelde, 1994, Chapter 7]). The function structure is the basic tool in KADS for describing a model for problem-solving in the CommonKADS Library. It describes the flow of inference in the knowledge level, without establishing detailed control issues. <p> criteria, to yield a single decision class which states whether the case is compliant with the measurement system or not. 7 There is another class of assessment problems, called grading in which the decision is a score or grade that determines in some scale how `good' the case is (see <ref> [Valente & Lockenhoff, 1993] </ref>). case description (story) abstract case WORLD KNOWLEDGE NORMATIVE KNOWLEDGE abstract case description structure case structured case description evaluate case violated norms resolve conflicts decision PRIMARY NORMS (commanding norms) SYSTEM MODEL SECONDARY NORMS (empowering norms, derogative norms, principles) case description abstract case SYSTEM DESCRIPTION MEASUREMENT SYSTEM abstract case
Reference: [vanDijk, 1980] <author> Teun van Dijk. Macrostructures: </author> <title> an interdisciplinary study of global structures in discourse, interaction and cognition. </title> <publisher> Erlbaum, </publisher> <address> Hillsdale, NJ, </address> <year> 1980. </year>
Reference-contexts: Fig. 2). The reasoning starts with the input of a case description. The formal model does not specify the structure of a case description. The "raw" case description has usually the form of a "story": i.e. situations connected by causal and intentional relations (cf. <ref> [vanDijk, 1980] </ref>). These are not covered by the formal model, because it is restricted to an account of the normative knowledge in legal reasoning.
References-found: 19

