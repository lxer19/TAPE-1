URL: http://www.cs.purdue.edu/homes/mja/papers/subnet.ps
Refering-URL: http://www.cs.purdue.edu/coast/coast-library.html
Root-URL: http://www.cs.purdue.edu
Email: mja@cs.purdue.edu  dec@cs.purdue.edu  
Title: Algorithms for Variable Length Subnet Address Assignment  
Author: Mikhail J. Atallah (Fellow) Douglas E. Comer 
Keyword: Index Terms Addressing, algorithms, computer networks, prefix codes.  
Note: Portions of this work were supported by sponsors of the COAST Laboratory.  
Address: West Lafayette, IN 47907 U.S.A.  West Lafayette, IN 47907 U.S.A.  
Affiliation: COAST Laboratory and Department of Computer Sciences Purdue University  Department of Computer Sciences Purdue University  
Abstract: In a computer network that consists of M subnetworks, the L-bit address of a machine consists of two parts: A prefix s i that contains the address of the subnetwork to which the machine belongs, and a suffix (of length L js i j) containing the address of that particular machine within its subnetwork. In fixed-length subnetwork addressing, js i j is independent of i, whereas in variable-length subnetwork addressing, js i j varies from one subnetwork to another. To avoid ambiguity when decoding addresses, there is a requirement that no s i be a prefix of another s j . The practical problem is how to find a suitable set of s i 's in order to maximize the total number of addressable machines, when the ith subnetwork contains n i machines. Not all of the n i machines of a subnetwork i need be addressable in a solution: If n i &gt; 2 Ljs i j then only 2 Ljs i j machines of that subnetwork are addressable (none is addressable if the solution assigns no address s i to that subnetwork). The abstract problem implied by this formulation is: Given an integer L, and given M (not necessarily distinct) positive integers n 1 ; ; n M , find M binary strings s 1 ; ; s M (some of which may be empty) such that (i) no nonempty string s i is prefix of another string s j , (ii) no s i is more than L bits long, and (iii) the quantity P js k j6=0 minfn k ; 2 Ljs k j g is maximized. We generalize the algorithm to the case where each n i also has a priority p i associated with it and there is an additional constraint involving priorities: Some subnetworks are then more important than others and are treated preferentially when assigning addresses. The algorithms can be used to solve the case when L itself is a variable; that is, when the input no longer specifies L but rather gives a target integer fl for the number of addressable machines, and the goal is to find the smallest L whose corresponding optimal solution results in at least fl addressable machines. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Apostolico and Z. Galil (Eds), </author> <title> Combinatorial Algorithms on Words, </title> <publisher> Springer, </publisher> <year> 1985. </year>
Reference-contexts: Finally, what follows assumes the reader is familiar with basic techniques and terminology from the text algorithms and data structures literature | we refer the reader to, for example, the references <ref> [1, 2, 3] </ref>. 2 Preliminaries The following definitions and observations will be useful later on. We assume, without loss of generality, that n 1 n M .
Reference: [2] <author> T. Cormen, C. Leiserson, R. Rivest, </author> <title> Introduction to Algorithms, </title> <publisher> McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: Finally, what follows assumes the reader is familiar with basic techniques and terminology from the text algorithms and data structures literature | we refer the reader to, for example, the references <ref> [1, 2, 3] </ref>. 2 Preliminaries The following definitions and observations will be useful later on. We assume, without loss of generality, that n 1 n M .
Reference: [3] <author> M. Crochemore and W. Rytter, </author> <title> Text Algorithms, </title> <publisher> Oxford University Press, </publisher> <year> 1994. </year>
Reference-contexts: Finally, what follows assumes the reader is familiar with basic techniques and terminology from the text algorithms and data structures literature | we refer the reader to, for example, the references <ref> [1, 2, 3] </ref>. 2 Preliminaries The following definitions and observations will be useful later on. We assume, without loss of generality, that n 1 n M .
Reference: [4] <editor> Internet Assigned Numbers Authority (IANA), </editor> <title> "Class A Subnet Experiment", </title> <type> RFC 1797, 04/25/1995. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].
Reference: [5] <author> D. Knox and S. Panchanathan, </author> <title> "Parallel searching techniques for routing table lookup," </title> <booktitle> Proceedings of the 12th Annual Joint Conference of the IEEE Computer and Communications Societies IEEE INFOCOM '93, </booktitle> <address> San Francisco, CA, </address> <publisher> v 3, </publisher> <year> 1993, </year> <pages> pp. 1400-1405. </pages>
Reference-contexts: For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see <ref> [7, 5] </ref>. Finally, what follows assumes the reader is familiar with basic techniques and terminology from the text algorithms and data structures literature | we refer the reader to, for example, the references [1, 2, 3]. 2 Preliminaries The following definitions and observations will be useful later on.
Reference: [6] <author> B. Manning, </author> <title> "Class A Subnet Experiment Results and Recommendations", </title> <type> RFC 1879, 01/15/1996. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].
Reference: [7] <author> A.J. McAuley and P.J. Francis, </author> <title> "Fast routing table lookup using CAMs," </title> <booktitle> Proceedings of the 12th Annual Joint Conference of the IEEE Computer and Communications Societies IEEE INFOCOM '93, </booktitle> <address> San Francisco, CA, </address> <publisher> v 3, </publisher> <year> 1993, </year> <pages> pp. 1382-1891. </pages>
Reference-contexts: For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see <ref> [7, 5] </ref>. Finally, what follows assumes the reader is familiar with basic techniques and terminology from the text algorithms and data structures literature | we refer the reader to, for example, the references [1, 2, 3]. 2 Preliminaries The following definitions and observations will be useful later on.
Reference: [8] <author> J. Mogul and J. Postel, </author> <title> "Internet standard subnetting procedure", </title> <type> RFC 0950, 08/01/1985. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].
Reference: [9] <author> J. Mogul, </author> <title> "Broadcasting Internet datagrams in the presence of subnets", </title> <type> RFC 0922, 10/01/1984. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].
Reference: [10] <author> J. Mogul, </author> <title> "Internet subnets", </title> <type> RFC 0917, 10/01/1984. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].
Reference: [11] <author> T. Pummill and B. Manning, </author> <title> "Variable Length Subnet Table For IPv4", </title> <type> RFC 1878, 12/26/1995. </type>
Reference-contexts: Before proceeding with the technical details of our approach, we should stress that in the above we have provided only enough background and motivation to make this paper self-contained. The reader interested in more background than we provided can find, in references <ref> [11, 8, 9, 10, 6, 4, 12] </ref>, the specifications for standard subnet addressing, and other related topics. For a more general discussion of hierarchical addressing, its benefits in large networks, and various lookup solution methods (e.g., digital trees), see [7, 5].

References-found: 11

