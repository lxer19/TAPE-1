URL: ftp://ftp.cc.gatech.edu/pub/gvu/tr/1998/98-17.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1998/
Root-URL: 
Title: Compressing the incidence graph of triangle meshes  A.1. Problem statement and contribution summary  
Author: Jarek Rossignac 
Date: May 22, 1998 (Revised June 16, 1998)  
Web: http://www.gvu.gatech.edu/people/faculty/jarek.rossignac/  
Affiliation: GVU Center, Georgia Institute of Technology  
Note: Edgebreaker:  A. Introduction  A.2. Outline of the paper  
Abstract: J. Rossignac Technical Report GIT-GVU-98-17 1 Abstract Edgebreaker is a simple scheme for compressing the triangle/vertex incidence graphs (sometimes called topology) of three-dimensional triangle meshes. Edgebreaker improves upon the worst case and the expected compression ratios of previously reported schemes, most of which require O(nlogn) bits to store the incidence graph of a mesh of n triangles. Edgebreaker requires only 2n bits or less for simple meshes and can also support fully general meshes by using additional storage per handle and hole. Edgebreakers compression and decompression processes perform an identical traversal of the mesh from one triangle to an adjacent one. At each stage, compression produces an op-code describing the topological relation between the current triangle and the boundary of the remaining part of the mesh. Decompression uses these op-codes to reconstruct the entire incidence graph. Because Edgebreakers compression and decompression are independent of the vertex locations, Edgebreaker may be combined with a variety of vertex-compressing techniques that exploit topological information about the mesh to better estimate vertex locations. Edgebreaker may be used to transfer the entire surface bounding a 3D polyhedron or only a triangulated surface patch, for which the bounding loops are already known and need not be transferred. Its superior compression capabilities, the simplicity of its implementation, and its versatility make Edgebreaker the perfect candidate for the emerging 3D data exchange standards for interactive graphic applications. The paper sets geometric compression in a The objective of the technique reported here is to compress the incidence graph (sometimes called topology) of a triangle-mesh without exploiting any knowledge of the location of its vertices. In our scheme, called Edgebreaker, the compression and the decompression processes invade the mesh by breaking through one edge (called gate) of its boundary at a time and by removing (compression) or recreating (decompression) the triangle incident upon the gate. Edgebreaker can encode, with 2t+b-2 bits or less, any simple mesh (simply connected, orientable, manifold with boundary) having t triangles and b exterior edges in its bounding loop. Edgebreaker can also encode fully general, non-manifold meshes with holes and handles, using log(h)+log(t)+k additional bits per handle or hole in the mesh, where h is the number of handles or holes, and k is a small constant. (The symbol log stands for a base-2 logarithm throughout this paper.) For meshes with relatively few handles and few bounding edges, the compressed data requires between 1.5 and 2 bits of storage per triangle. This ratio may be even lower for compressing patches with a complex bounding loops and relatively few interior vertices. Good compression ratios may be achieved by previously reported approaches for highly complex and uniformly tessellated meshes [Taubin98]. Edgebreaker leads to much simpler and more efficient coding and decoding algorithms. Furthermore, it significantly reduces the worst case output size of previously reported approaches and thus is particularly suitable for compressing large collections of simple disconnected meshes. Edgebreaker may be easily combined with lossy techniques that compress vertex location data. These techniques may for instance use a variable length coding of vertex corrective terms that are added to geometric estimates computed from previously received vertices [Taubin98]. Such estimates are based on incidence information, which therefore must be decoded before the vertices. Edgebreaker may be used to efficiently transfer the entire surface bounding a 3D model or the triangulation of a surface patch for which the bounding loops are already known. Because of its simplicity and versatility, Edgebreaker promises to play an important role in the emerging 3D data exchange standards for interactive graphic applications. First, in the Motivation sub-section, we explain why compression of 3D model is important and why we chose to focus on triangle meshes. Then, in the Background sub-section, after introducing the appropriate concepts, terminology, and notation, we explain why it is important to compress the incident graph independently of the vertex location. Subsequently, in the Simple Meshes section, we present the Edgebreaker approach for simple meshes, demonstrate its correctness, and justify our claims on the compression ratios. We then discuss the merits of this approach in the context of Prior Art. Finally, we provide Implementation details and then explain how to support more General Triangle Meshes. formal topological framework and offers a new comparative perspective on prior art.
Abstract-found: 1
Intro-found: 1
References-found: 0

