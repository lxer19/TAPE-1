URL: ftp://prospero.isi.edu/pub/papers/security/pbaa.ps.Z
Refering-URL: http://www.isi.edu/isi-technical-reports.html
Root-URL: http://www.isi.edu
Title: Proxy-Based Authorization and Accounting for Distributed Systems  
Author: B. Clifford Neuman 
Affiliation: Information Sciences Institute University of Southern California  
Date: May 1993.  
Note: Proceedings of the 13th International Conference on Distributed Computing Systems, Pittsburgh,  
Abstract: Despite recent widespread interest in the secure authentication of principals across computer networks there has been considerably less discussion of distributed mechanisms to support authorization and accounting. By generalizing the authentication model to support restricted proxies, both authorization and accounting can be easily supported. This paper presents the proxy model for authorization and shows how the model can be used to support a wide range of authorization and accounting mechanisms. The proxy model strikes a balance between access-control-list and capability-based mechanisms allowing each to be used where appropriate and allowing their use in combination. The paper describes how restricted proxies can be supported using existing authentication methods. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> European Computer Manufacturers Association. </author> <title> Security in open systems: Data elements and service definitions, </title> <month> December </month> <year> 1989. </year> <title> Standard ECMA-138. </title>
Reference-contexts: Roles can not be used to implement the authorization server described in Section 3.2. Functionality similar to that of the authorization and group services of Sections 3.2 and 3.3 has been proposed as part of the European Computer Manufacturers Association standard for security in open systems <ref> [1] </ref>. The ECMA standard defines Privilege Attributed Certificates (PACs) signed by an authority and certifying that the bearer or a named principal possess certain privileges. Work is underway for the Open Software Foundation's Distributed Computing Environment that uses restricted proxies as supported by Kerberos to pass authorization information.
Reference: [2] <author> Andrew D. Birrell, Roy Levin, Roger M. Need-ham, and Michael D. Schroeder. Grapevine: </author> <title> An exercise in distributed computing. </title> <journal> Communications of the ACM, </journal> <volume> 25(4) </volume> <pages> 260-274, </pages> <month> April </month> <year> 1982. </year>
Reference-contexts: Some of the earliest work in the area is found in Grapevine <ref> [2] </ref> where end-servers query registration servers to determine whether a client is a member of a particular group. A similar approach is employed in Sun's Yellow Pages where centrally maintained files such as /etc/group are consulted for authorization purposes. In both approaches, the authorization decision remains with the local system.
Reference: [3] <author> Marlena E. Erdos and Joseph N. Pato. </author> <title> Extending the OSF DCE authorization system to support practical delegation. </title> <booktitle> In Proceedings of the PSRG Workshop on Network and Distributed System Security, </booktitle> <pages> pages 93-100, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: In particular, they have implemented a privilege attribute server that signs certificates asserting a principal's unique identifier and a set of user groups to which the principal belongs. Plans are in place to extend their mechanism to support delegation <ref> [3] </ref>. Surprisingly little attention has been paid to the issue of accounting in distributed systems. Sentry [9] lays the groundwork for accounting by describing a mechanism that would be co-located with an authentication and authorization server.
Reference: [4] <author> M. Gasser, A. Goldstein, C. Kaufman, and B. Lampson. </author> <title> The Digital distributed system security architecture. </title> <booktitle> In Proceedings of the 1989 National Computer Security Conference, </booktitle> <pages> pages 305-319, </pages> <month> October </month> <year> 1989. </year>
Reference-contexts: Support for proxies was first included in the Kerberos protocol specification in mid 1989 [7]. At about the same time, another mechanisms for delegation was developed as part of the Digital Distributed System Security Architecture <ref> [4, 5] </ref>. In the DSSA, principals generate and sign delegation certificates to allow intermediate systems to act on their behalf.
Reference: [5] <author> M. Gasser and E. McDermott. </author> <title> An architecture for practical delegation in a distributed system. </title> <booktitle> In Proceedings of the 1990 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 20-30, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: Support for proxies was first included in the Kerberos protocol specification in mid 1989 [7]. At about the same time, another mechanisms for delegation was developed as part of the Digital Distributed System Security Architecture <ref> [4, 5] </ref>. In the DSSA, principals generate and sign delegation certificates to allow intermediate systems to act on their behalf.
Reference: [6] <author> Paul A. Karger. </author> <title> Authentication and discretionary access control in computer networks. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 10(1) </volume> <pages> 27-37, </pages> <year> 1985. </year>
Reference-contexts: In both approaches, the authorization decision remains with the local system. With the distributed authorization and group services supported by restricted proxies, the authorization decision can be delegated to a remote server. There have been several proposals concerning forwarding and delegation of authentication in distributed systems. Karger <ref> [6] </ref> proposed a server that keeps track of special passwords that are established when a user logs in. These passwords are passed to other systems which act on the user's behalf for operations that require the cascaded use of multiple servers.
Reference: [7] <author> John T. Kohl and B. Clifford Neuman. </author> <title> The Ker-beros network authentication service: </title> <type> Version 5 draft protocol specification. </type> <month> August </month> <year> 1989. </year> <month> Revised November </month> <year> 1989, </year> <month> October </month> <year> 1990, </year> <month> December </month> <year> 1990, </year> <month> June </month> <year> 1991, </year> <month> September </month> <year> 1992, </year> <month> April </month> <year> 1993. </year>
Reference-contexts: The differences between Sollins' approach and proxy-based cascaded authorization was described in Section 3.4. The proxy model described by this paper was designed for use in Version 5 of the Kerberos authentication system. Support for proxies was first included in the Kerberos protocol specification in mid 1989 <ref> [7] </ref>. At about the same time, another mechanisms for delegation was developed as part of the Digital Distributed System Security Architecture [4, 5]. In the DSSA, principals generate and sign delegation certificates to allow intermediate systems to act on their behalf. <p> Without this step an attacker would be able to reuse a ticket that it obtained by eavesdropping on an earlier exchange. Kerberos has been in use at MIT since Fall of 1986, and it has been used elsewhere since then. Version 5 of Kerberos <ref> [7] </ref> is the first major revision of the protocol since its original release and contains several new features important for the practical support of restricted proxies.
Reference: [8] <author> S. J. Mullender and A. S. Tanenbaum. </author> <title> The design of a capability-based distributed operating system. </title> <journal> The Computer Journal, </journal> <volume> 29(4) </volume> <pages> 289-299, </pages> <year> 1986. </year>
Reference-contexts: Although they share a common mechanism, it seems apparent now that there is little to be gained by requiring all three services to be co-located. Like the accounting mechanism described here, Sentry pointed out the need to support multiple currencies. Amoeba <ref> [8] </ref> supports a distributed bank server identical in purpose to the accounting server based on restricted proxies. The protocol used by Amoeba's bank server is significantly different, however. In Amoeba, a client must contact the bank and transfer funds into the server's account before it contacts the server.
Reference: [9] <author> B. Clifford Neuman. Sentry: </author> <title> A discretionary access control server. </title> <type> Bachelor's Thesis, </type> <institution> Mas-sachusetts Institute of Technology, </institution> <month> June </month> <year> 1985. </year>
Reference-contexts: Plans are in place to extend their mechanism to support delegation [3]. Surprisingly little attention has been paid to the issue of accounting in distributed systems. Sentry <ref> [9] </ref> lays the groundwork for accounting by describing a mechanism that would be co-located with an authentication and authorization server. Although they share a common mechanism, it seems apparent now that there is little to be gained by requiring all three services to be co-located.
Reference: [10] <author> B. Clifford Neuman. </author> <title> Proxy-based authorization and accounting for distributed systems. </title> <type> Technical Report 91-02-01, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <month> March </month> <year> 1991. </year>
Reference-contexts: This section describes several of the more useful restrictions and some that demonstrate the flexibility of the model. Additional restrictions are described in <ref> [10] </ref>. Neither should be construed as a complete list. 7.1 Grantee This restriction specifies a list of principals authorized to use a proxy and the number of principals from the list needed to exercise the proxy (usually one).
Reference: [11] <author> Karen R. Sollins. </author> <title> Cascaded authentication. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 156-163, </pages> <month> April </month> <year> 1988. </year>
Reference-contexts: by an authorization server, then the client would present the group proxy to the authorization server, and if all checks out, the authorization server would return an authorization proxy to be used by the client as described in the previous subsection. 3.4 Cascaded authorization In a paper on cascaded authentication <ref> [11] </ref>, Sollins proposed a method to pass authorization from party to party when a task involves cascaded operations by parties that do not completely trust one another. A similar mechanism is supported more efficiently by restricted proxies. <p> This scheme is not encryption-based, but relies on secure channels for passing the special passwords. These channels might be implemented on top of an end-to-end encryption mechanism. A mechanism that comes close to restricted proxies is the cascaded authentication mechanism described by Sollins <ref> [11] </ref> in which restrictions can be added as credentials are passed from system to system. The differences between Sollins' approach and proxy-based cascaded authorization was described in Section 3.4. The proxy model described by this paper was designed for use in Version 5 of the Kerberos authentication system.

References-found: 11

