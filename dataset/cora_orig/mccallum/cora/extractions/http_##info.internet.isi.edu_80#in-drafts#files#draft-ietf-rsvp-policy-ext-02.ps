URL: http://info.internet.isi.edu:80/in-drafts/files/draft-ietf-rsvp-policy-ext-02.ps
Refering-URL: http://info.internet.isi.edu:80/in-drafts/files/
Root-URL: http://www.isi.edu
Title: RSVP Extensions for Policy Control  Status of  
Affiliation: IBM T.J. Watson Research Center  
Date: September 19, 1997  Apr. 1997  March 19, 1997  
Note: Internet Draft Shai Herzog Expires  File: draft-ietf-rsvp-policy-ext-02.ps  To learn the current status of any Internet-Draft, please check the "1id-abstracts.txt" listing contained in the Internet-Drafts Shadow Directories on ds.internic.net (US East Coast), nic.nordu.net (Europe), ftp.isi.edu (US West Coast), or munnari.oz.au (Pacific Rim). This document does not advocate particular policy control mechanisms; however, a Router/Server Policy Protocol description for these extensions can be found in [LPM].  
Pubnum: Memo  
Abstract: This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress." Abstract This memo presents a set of extensions for supporting generic policy based admission control in RSVP. 1 These extensions include the standard format of POLICY DATA objects, a generic RSVP/Policy-Control interface, and a description of RSVP's handling of policy events. 
Abstract-found: 1
Intro-found: 1
Reference: [Bak96] <author> F. Baker. </author> <title> RSVP Cryptographic Authentication Internet-Draft, </title> <address> draft-ietf-rsvp-md5-02.txt, </address> <year> 1996. </year>
Reference-contexts: INTEGRITY Object The INTEGRITY object provides guarantees that the object was not compromised. It follows the rules from <ref> [Bak96] </ref>, and is calculated over the SESSION object, POLICY DATA object, and the message type field 4 as if they formed one continuous in-order message, without any alignment.
Reference: [RSVPSP] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin, </author> <title> Resource ReSerVation Protocol (RSVP) Version 1 Functional Specification. </title> <type> Internet-Draft, </type> <institution> draft-ietf-RSVPSP-14.[ps,txt], </institution> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Therefore, it is reasonable to expect that RSVP be accompanied by mechanisms for controlling and enforcing access and usage policies. Historically, when RSVP Ver. 1 was developed, the knowledge and understanding of policy issues was in its infancy. As a result, Ver. 1 of the RSVP Functional Specifications <ref> [RSVPSP] </ref> left a place holder for policy support in the form of POLICY DATA objects. However, it deliberately refrained from specifying mechanisms, message formats, or providing insight into how policy enforcement should be carried out. This document is intended to fill in this void. <p> document is limited to these extensions; a discussion of accounting and access control policies for resource reservation protocols can be found in [Arch] and a description of a router-server Policy Protocol for these extensions can be found in [LPM]. 2 Policy Data Object Format The following replaces section A.13 in <ref> [RSVPSP] </ref>. POLICY DATA objects are carried by RSVP messages and contain policy information. <p> All policy options appear as RSVP objects; some use their valid original format while others appear as NULL objects. Shai Herzog Expires September 19, 1997 [Page 4] Internet Draft RSVP Extensions for Policy Control 2.2.1 RSVP Objects as Policy Options The following objects retain the same format specified in <ref> [RSVPSP] </ref> however, they gain different semantics when used inside POLICY DATA objects. FILTER SPEC object (list) The set of senders associated with the POLICY DATA object. If none is provided, the policy information is assumed to be associated with all the flows of the session. <p> for Duplicates times. +-------------+------------+-----------+------------+ +-------------+------------+-----------+------------+ | Multiplier | Duplicates | Reserve (0) | +-------------+------------+------------------------+ For example, for Multiplier=16 and Duplicates=3, the policy should be refreshed on RSVP's refreshes number 1,2,3,16,17,18,... 3 RSVP/Policy Control Interface Conceptually, this section belong to Section 3.10.3 titled "RSVP/Policy Control Interface" of the RSVP functional specification <ref> [RSVPSP] </ref>. Policy control in RSVP is modeled as a set of functions which are provided by a separate component known as Local Policy Module. The LPM controls the use of POLICY DATA objects and provides authorization information to RSVP. 3.1 Synchronous vs. <p> A preemptable reservation may be canceled at any time by admission control to make room for another more important reservation. (See TC Preempt () and the discussion of service preemption in <ref> [RSVPSP] </ref>.) Parameter refresh-period has the same value and semantics as in RSVP. * Call: PC OutPolicy (message type, rsvp hop list, session, shr ind, filter spec list, max pd, avail pd, cbp, giveup time, out policy objects) -&gt; RCode Before RSVP finalizes an any outgoing RSVP message it calls PC OutPolicy <p> In a synchronous, when an upcall mechanism is not supported, RSVP must verify the status of reservations before refreshing them. * Call: PC Init (K, upcall,... ) -&gt; RCode This call initializes the LPM and sets specific RSVP/policy configuration parameters. K is the soft-state multiplier for refresh-period (see <ref> [RSVPSP] </ref>) and upcall registers a routine that may be called by the LPM to notify RSVP on policy changes. (See next item) * Call: upcall (event type, cbp, message type, lih, rsvp hop list, session, shr ind, filter spec list, out policy objects, RCode) Event type determines the original call type <p> cbp (see Section 3.2). * RSVP resumes the previously halted operation and uses the provided context para meters as if they were returned by the original (previously pending) call. 3.4.2 Error Signaling Policy errors are reported by either ResvErr or PathErr messages with a policy failure error code (specified in <ref> [RSVPSP] </ref>). Policy error message must include a POLICY DATA object; 11 If results are still unavailable at giveup time, the answer is assumed to be failure (for AuthCheck) or no output (for OutPolicy).
Reference: [LPM] <author> S. </author> <title> Herzog Local Policy Modules (LPM): Policy Enforcement for Resource Reservation Protocols. </title> <type> Internet-Draft, </type> <institution> draft-ietf-rsvp-policy-lpm-01.[ps,txt], </institution> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: The scope of this document is limited to these extensions; a discussion of accounting and access control policies for resource reservation protocols can be found in [Arch] and a description of a router-server Policy Protocol for these extensions can be found in <ref> [LPM] </ref>. 2 Policy Data Object Format The following replaces section A.13 in [RSVPSP]. POLICY DATA objects are carried by RSVP messages and contain policy information. <p> Option List The list of options and their usage is defined in Section 2.2. Policy Element List The contents of policy elements is opaque to RSVP and its internal format is only known to the Local Policy Module (LPM). (See Section 3 and <ref> [LPM] </ref>). Policy Elements have the following format: +-------------+------------+-----------+------------+ | Length | P-type | +--------------------------+------------------------+ // Policy information (Opaque to RSVP) // | | 2.2 Policy Data Options This section describes a set of options that may appear as options in POLICY DATA objects. <p> Query results may be commonly delayed when policy decisions are performed by an external server (See <ref> [LPM] </ref>). Consider a case where an average query takes 10ms; a synchronous RSVP/policy implementation would be roughly limited to less than 100 unicast flows and even much less for multicast flows. <p> This section describes these actions in greater detail. 3.4.1 Pending Results and Asynchronous Notification For various reasons the LPM may need to consult an external entity (e.g., server) for partial policy processing. (For a description of a router/server protocol see <ref> [LPM] </ref>). For efficiency reasons, RSVP must not be forced to wait idly while external policy processing takes place. Instead, A configurable option permits calls to PC AuthCheck () or PC OutPolicy () to terminate with a "pending" return value whenever results are delayed (for any reason).
Reference: [Arch] <author> S. </author> <title> Herzog Accounting and Access Control Policies for Resource Reservation Protocols. </title> <type> Internet-Draft, </type> <institution> draft-ietf-rsvp-policy-arch-01.[ps,txt], </institution> <month> Nov. </month> <year> 1996. </year> <institution> Author's Address Shai Herzog IBM T. J. Watson Research Center, </institution> <address> P.O. Box 704 Yorktown Heights, NY 10598 Phone: </address> <note> (914) 784-6059 Email: herzog@watson.ibm.com Shai Herzog Expires September 19, 1997 [Page 13] </note>
Reference-contexts: In this document we describe a set of extensions to RSVP for supporting policy based admission control as well, in one atomic operation. The scope of this document is limited to these extensions; a discussion of accounting and access control policies for resource reservation protocols can be found in <ref> [Arch] </ref> and a description of a router-server Policy Protocol for these extensions can be found in [LPM]. 2 Policy Data Object Format The following replaces section A.13 in [RSVPSP]. POLICY DATA objects are carried by RSVP messages and contain policy information.
References-found: 4

