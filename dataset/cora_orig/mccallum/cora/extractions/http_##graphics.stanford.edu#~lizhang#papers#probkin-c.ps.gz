URL: http://graphics.stanford.edu/~lizhang/papers/probkin-c.ps.gz
Refering-URL: http://graphics.stanford.edu/~lizhang/interests.html
Root-URL: http://www.cs.stanford.edu
Email: flizhang,harish,jbasch,indykg@cs.stanford.edu  
Title: Probabilistic Analysis for Combinatorial Functions of Moving Points  
Author: Li Zhang Harish Devarajan Julien Basch Piotr Indyk 
Address: Stanford, CA94305  
Affiliation: Computer Science Department Stanford University  
Abstract: We initiate a probabilistic study of configuration functions of moving points. In our probabilistic model, a particle is given an initial position and a velocity drawn independently at random from the same distribution D. We show that if n particles are drawn independently at random from the uniform distribution on the square, their convex hull undergoes fi(log 2 n) combinatorial changes in expectation, their Voronoi diagram undergoes fi(n 3=2 ) combinatorial changes, and their closest pair undergoes fi(n) combinatorial changes. 
Abstract-found: 1
Intro-found: 1
Reference: [Ata85] <author> M. J. Atallah. </author> <title> Some dynamic computational geometry problems. </title> <journal> Comput. Math. Appl., </journal> <volume> 11 </volume> <pages> 1171-1181, </pages> <year> 1985. </year>
Reference-contexts: In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories <ref> [OW84, Ata85, GMR91, KTI95, BGH97] </ref>. Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry"). <p> In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories [OW84, Ata85, GMR91, KTI95, BGH97]. Different questions have been asked in this context. In particular, Atal-lah <ref> [Ata85] </ref>, studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry").
Reference: [BCL90] <author> J. L. Bentley, K. L. Clarkson, and D. B. Levine. </author> <title> Fast linear expected-time algorithms for computing maxima and convex hulls. </title> <booktitle> In Proc. 1st ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 179-187, </pages> <year> 1990. </year>
Reference-contexts: To appear in the 13th Symposium of Computational Ge ometry, 1997. smaller than in the worst case, and, more importantly, in that it often allows one to design algorithms that have expected running times against which worst case aware algorithms cannot compete <ref> [Sei86, BCL90, Dwy91] </ref>. For instance, the convex hull of n points drawn independently uniformly at random from a d-dimensional hypercube has expected complexity O (log d1 n), and can be computed in expected linear time.
Reference: [BGH97] <author> J. Basch, L. J. Guibas, and J. Hershberger. </author> <title> Data structures for mobile data. </title> <booktitle> In 8th Symposium on Discrete algorithms, </booktitle> <pages> pages 747-756, </pages> <year> 1997. </year>
Reference-contexts: In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories <ref> [OW84, Ata85, GMR91, KTI95, BGH97] </ref>. Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry"). <p> Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry"). More recently, Basch, Guibas, and Hersh-berger <ref> [BGH97] </ref> have designed kinetic data structures to maintain these attributes in an online setting, measuring the quality of a kinetic data structure by the ratio of the worst case number of changes to the configuration of interest, to the worst case number of changes to the data structure itself, for low <p> We also give related (not tight) results, and analyze the expected run 1 ning time of one of the algorithms proposed in <ref> [BGH97] </ref> for the maintenance of the convex hull. 2 Probabilistic Setting As a point in the plane cannot move without losing its identity, we call the objects of our study particles. <p> From this and Devroye's moment inequalities [Dev83], we deduce that the number of changes to the furthest pair is polylogarithmic in expectation, for the square distribu tion. In <ref> [BGH97] </ref>, a kinetic data structure is described to maintain the convex hull of a set of moving points. <p> Our convex hull result directly imply: Theorem 2 If n particles are drawn independently at random from the uniform distribution on the unit square, then the kinetic data structure of <ref> [BGH97] </ref> processes a linear number of events in expectation to maintain the convex hull. <p> Our probabilistic framework provides a way that is different from and complementary to <ref> [BGH97] </ref> for analysing and compar ing kinetic data structures. We now review several kinetic data structures for the maintenance of the closest pair. The Delaunay tri angulation can be used to maintain the closest pair, and will do it in roughly n 3=2 time in our probabilistic model. <p> How do other methods compare? A method is to maintain the L 1 Delaunay triangulation [CD85], as one of its edges is the closest pair, but our method shows that it undergoes roughly the same number of changes as the L 2 Delaunay. Another method was proposed in <ref> [BGH97] </ref> and modified in [BGSZ], whose average running time is experimentally also roughly fi .
Reference: [BGSZ] <author> J. Basch, L. J. Guibas, C. Silverstein, and L. Zhang. </author> <title> A practical evaluation of kinetic data structures. This volume. </title>
Reference-contexts: This measure is not ideal and would gain to be replaced by one similar to the competitive ratio, but there is no result in this direction yet. In the meanwhile, an experimental study has been undertaken to assess the quality of these data structures in practice <ref> [BGSZ] </ref>, showing that the worst case analysis can hide vastly different results in terms of expectation when the point positions and speeds are drawn at random from some distributions. It is this study that motivated the present paper. <p> Given a distribu tion D in R d , we say that a particle is drawn from D if its initial position and velocity are each drawn independently at random from D. In <ref> [BGSZ] </ref>, a number of particles were independently drawn at random this way, and the number of events of several kinetic data structures, for several underlying distributions, were studied experimentally. <p> Another method was proposed in [BGH97] and modified in <ref> [BGSZ] </ref>, whose average running time is experimentally also roughly fi .
Reference: [CD85] <author> L. P. Chew and R. L. Drysdale, III. </author> <title> Voronoi diagrams based on convex distance functions. </title> <booktitle> In Proc. 1st Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 235-244, </pages> <year> 1985. </year>
Reference-contexts: The Delaunay tri angulation can be used to maintain the closest pair, and will do it in roughly n 3=2 time in our probabilistic model. How do other methods compare? A method is to maintain the L 1 Delaunay triangulation <ref> [CD85] </ref>, as one of its edges is the closest pair, but our method shows that it undergoes roughly the same number of changes as the L 2 Delaunay. Another method was proposed in [BGH97] and modified in [BGSZ], whose average running time is experimentally also roughly fi .
Reference: [Dev83] <author> L. P. Devroye. </author> <title> Moment inequalities for random variables in computational geometry. </title> <journal> Computing, </journal> <volume> 30 </volume> <pages> 111-119, </pages> <year> 1983. </year>
Reference-contexts: From this and Devroye's moment inequalities <ref> [Dev83] </ref>, we deduce that the number of changes to the furthest pair is polylogarithmic in expectation, for the square distribu tion. In [BGH97], a kinetic data structure is described to maintain the convex hull of a set of moving points.
Reference: [Dwy90] <author> R. A. Dwyer. Kinder, </author> <title> gentler average-case analysis for convex hulls and maximal vectors. </title> <journal> SIGACT News, </journal> <volume> 21(2) </volume> <pages> 64-71, </pages> <year> 1990. </year>
Reference-contexts: Another approach is to look at the expected description complexity when the points are drawn from a given distribution. This type of analysis, initiated by Renyi and Sulanke [RS63] and pursued by others <ref> [Efr65, Ray70, Dwy90] </ref>, gets its value from the fact that this expectation is in general much fl The authors' names appear in random order. y Supported in part by National Science Foundation grant CCR-9623851 and by US Army MURI grant DAAH04-96-1-0007. z Supported in part by the Okawa Foundation. x Supported
Reference: [Dwy91] <author> R. A. Dwyer. </author> <title> Higher-dimensional Voronoi diagrams in linear expected time. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 343-367, </pages> <year> 1991. </year>
Reference-contexts: To appear in the 13th Symposium of Computational Ge ometry, 1997. smaller than in the worst case, and, more importantly, in that it often allows one to design algorithms that have expected running times against which worst case aware algorithms cannot compete <ref> [Sei86, BCL90, Dwy91] </ref>. For instance, the convex hull of n points drawn independently uniformly at random from a d-dimensional hypercube has expected complexity O (log d1 n), and can be computed in expected linear time.
Reference: [Efr65] <author> B. Efron. </author> <title> The convex hull of a random set of points. </title> <journal> Biometrika, </journal> <volume> 52(3) </volume> <pages> 331-343, </pages> <year> 1965. </year>
Reference-contexts: Another approach is to look at the expected description complexity when the points are drawn from a given distribution. This type of analysis, initiated by Renyi and Sulanke [RS63] and pursued by others <ref> [Efr65, Ray70, Dwy90] </ref>, gets its value from the fact that this expectation is in general much fl The authors' names appear in random order. y Supported in part by National Science Foundation grant CCR-9623851 and by US Army MURI grant DAAH04-96-1-0007. z Supported in part by the Okawa Foundation. x Supported
Reference: [GMR91] <author> L. Guibas, J. S. B. Mitchell, and T. Roos. </author> <title> Voronoi diagrams of moving points in the plane. </title> <booktitle> In Proc. 17th Internat. Workshop Graph-Theoret. Concepts Comput. Sci., volume 570 of Lecture Notes in Computer Science, </booktitle> <pages> pages 113-125. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories <ref> [OW84, Ata85, GMR91, KTI95, BGH97] </ref>. Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry").
Reference: [KSG] <author> D.-J. Kim, S.-Y. Shin, and L. J. Guibas. </author> <title> Fast collision detection among multiple moving spheres. This volume. </title>
Reference-contexts: Another method was proposed in [BGH97] and modified in [BGSZ], whose average running time is experimentally also roughly fi . At last, one may consider a more straightforward algorithm, which cuts the square (say) into n cells and tracks every particle as it goes from cell to cell <ref> [KSG] </ref>: although extremely bad in the worst case, it is easy to see that the average case of this algorithm in our probabilistic model is also precisely fi .
Reference: [KTI95] <author> N. Katoh, T. Tokuyama, and K. Iwano. </author> <title> On minimum and maximum spanning trees of linearly moving points. </title> <journal> Discrete Comput. Geom., </journal> <volume> 13 </volume> <pages> 161-176, </pages> <year> 1995. </year>
Reference-contexts: In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories <ref> [OW84, Ata85, GMR91, KTI95, BGH97] </ref>. Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry").
Reference: [OW84] <author> T. Ottmann and D. Wood. </author> <title> Dynamical sets of points. Comput. Vision Graph. </title> <journal> Image Process., </journal> <volume> 27 </volume> <pages> 157-166, </pages> <year> 1984. </year>
Reference-contexts: In parallel, in the past decade, a number of papers have considered a setting where points are allowed to move along low degree algebraic trajectories <ref> [OW84, Ata85, GMR91, KTI95, BGH97] </ref>. Different questions have been asked in this context. In particular, Atal-lah [Ata85], studied the number of times the combinatorial description of the convex hull or closest pair can change, in the worst case ("dynamic computational geometry").
Reference: [Ray70] <author> H. Raynaud. </author> <title> Sur l'enveloppe convexe des nuages de points aleatoires. </title> <journal> J. Appl. Prob., </journal> <volume> 7 </volume> <pages> 35-48, </pages> <year> 1970. </year>
Reference-contexts: Another approach is to look at the expected description complexity when the points are drawn from a given distribution. This type of analysis, initiated by Renyi and Sulanke [RS63] and pursued by others <ref> [Efr65, Ray70, Dwy90] </ref>, gets its value from the fact that this expectation is in general much fl The authors' names appear in random order. y Supported in part by National Science Foundation grant CCR-9623851 and by US Army MURI grant DAAH04-96-1-0007. z Supported in part by the Okawa Foundation. x Supported
Reference: [RS63] <author> A. Renyi and R. Sulanke. Uber die konvexe Hulle von n zufallig gerwahten Punkten I. Z. Wahrsch. </author> <title> Verw. </title> <journal> Gebiete, </journal> <volume> 2 </volume> <pages> 75-84, </pages> <year> 1963. </year>
Reference-contexts: This is not entirely satisfactory, as this description complexity can vary tremendously depending on the positions of the points. Another approach is to look at the expected description complexity when the points are drawn from a given distribution. This type of analysis, initiated by Renyi and Sulanke <ref> [RS63] </ref> and pursued by others [Efr65, Ray70, Dwy90], gets its value from the fact that this expectation is in general much fl The authors' names appear in random order. y Supported in part by National Science Foundation grant CCR-9623851 and by US Army MURI grant DAAH04-96-1-0007. z Supported in part by <p> There is probably a good reason for that. 4 Some proof ideas The basic idea behind the proofs of the three results of theorem 1 is as follows. Firstly, we recall the ap 2 proach of Renyi and Sulanke <ref> [RS63] </ref> for computing the expected size of the static convex hull.
Reference: [Sei86] <author> R. Seidel. </author> <title> Constructing higher-dimensional convex hulls at logarithmic cost per face. </title> <booktitle> In Proc. 18th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 404-413, </pages> <year> 1986. </year> <month> 3 </month>
Reference-contexts: To appear in the 13th Symposium of Computational Ge ometry, 1997. smaller than in the worst case, and, more importantly, in that it often allows one to design algorithms that have expected running times against which worst case aware algorithms cannot compete <ref> [Sei86, BCL90, Dwy91] </ref>. For instance, the convex hull of n points drawn independently uniformly at random from a d-dimensional hypercube has expected complexity O (log d1 n), and can be computed in expected linear time.
References-found: 16

