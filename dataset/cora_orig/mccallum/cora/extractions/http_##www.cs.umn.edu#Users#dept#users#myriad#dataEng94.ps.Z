URL: http://www.cs.umn.edu/Users/dept/users/myriad/dataEng94.ps.Z
Refering-URL: http://www.cs.umn.edu/Users/dept/users/myriad/
Root-URL: http://www.cs.umn.edu
Email: fpengjsrivastajshekharg@cs.umn.edu  
Title: Resolving Attribute Incompatibility in Database Integration: An Evidential Reasoning Approach  
Author: Ee-Peng Lim, Jaideep Srivastava, Shashi Shekhar 
Address: Minneapolis, MN 55455  
Affiliation: Department of Computer Science, Univ. of Minnesota,  
Abstract: Resolving domain incompatibility among independently developed databases often involves uncertain information. DeMichiel [5] showed that uncertain information can be generated by the mapping of conflicting attributes to a common domain, based on some domain knowledge. In this paper, we show that uncertain information can also arise when the database integration process requires information not directly represented in the component databases, but can be obtained through some summary of data. We therefore propose an extended relational model based on Dempster-Shafer theory of evidence[14] to incorporate such uncertain knowledge about the source databases. We also develop a full set of extended relational operations over the extended relations. In particular, an extended union operation has been formalized to combine two extended relations using Dempster's rule of combination. The closure and boundedness properties of our proposed extended operations are formulated. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.F. Baldwin. </author> <title> Evidential support logic programming. </title> <journal> Fuzzy Sets and Systems, </journal> <volume> 24 </volume> <pages> 1-26, </pages> <year> 1987. </year>
Reference-contexts: Let P be the compound predicate S ^ T . The support of P , (sn P ; sp P ), is computed based on the multiplicative rule in <ref> [7, 1] </ref> as shown below: sn P = sn S sn T , sp P = sp S sp T 3.1.2 Tuple Membership Derivation Function An obvious way to interpret the new tuple membership value is that it should reflect the satisfaction of both the predicate P and the membership of
Reference: [2] <author> D. Barbara, H. Garcia-Molina, and D. Porter. </author> <title> The management of probabilistic data. </title> <journal> IEEE TKDE, </journal> <volume> 4(5) </volume> <pages> 487-502, </pages> <year> 1992. </year>
Reference-contexts: Lee [9]. While the model is similar to the ours, there are some distinguished differences between the two models as will be explained later in this subsection. * A probabilistic data model (PDM) has been proposed by Barbara et al <ref> [2] </ref> to represent database entities whose properties cannot be deterministically classified. Their model attaches probabilities to the attribute values. However, the model allows probabilities to be assigned only to indi vidual values, and not their subsets. Contributions: We propose an evidential reasoning approach to resolve attribute value conflict. <p> To be consistent with this interpretation, our proposed operations have to satisfy the closure and boundness properties defined in Section 3.6. We have also incorporated Dempster's rule of combination into the extended union operation for the purpose of resolving attribute conflict. PDM proposed by Barbara et al <ref> [2] </ref> is based on probability theory. The model does not capture tuple membership information. Interestingly, in [2] Barbara et al discuss the potential need of a COMBINE operator to combine two probability distributions of an attribute. <p> We have also incorporated Dempster's rule of combination into the extended union operation for the purpose of resolving attribute conflict. PDM proposed by Barbara et al <ref> [2] </ref> is based on probability theory. The model does not capture tuple membership information. Interestingly, in [2] Barbara et al discuss the potential need of a COMBINE operator to combine two probability distributions of an attribute. We believe that such an operator has been realized in our model by the use of Dempster's rule of combination. 1.4 Outline of Paper This paper is organized as follows.
Reference: [3] <author> A. Chatterjee and A. Segev. </author> <title> Data manipulation in heterogeneous databases. </title> <journal> ACM SIGMOD Record, </journal> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: 1 Introduction The increasing need for applications that access data from multiple independent databases has posed a great challenge to the database research community to solve the data heterogeneity problem. Chatterjee and Segev <ref> [3] </ref> define data heterogeneity to be the incompatibility that occurs among similar attributes resulting in the same data being represented differently in different databases. <p> Several approaches have been developed to resolve them [6, 8] and we do not intend to discuss them in this paper. Solutions to the entity identification problem usually compare attributes between tuples from different relations, with additional domain knowledge, to determine whether the tuples represent the same real-world entity <ref> [10, 3] </ref>. Attribute value conflict resolution needs to be performed only when a pair of tuples (from different databases) representing the same real-world entity are found to conflict in some attribute values [12, 5, 15]. In this paper, we assume that entity identification precedes attribute value conflict resolution.
Reference: [4] <author> U. Dayal. </author> <title> Processing queries over generalized hierarchies in a multidatabase systems. </title> <booktitle> In Proc. of the 9th VLDB Conf., </booktitle> <year> 1983. </year>
Reference-contexts: The integrated relation contains all the attributes in both local relations. 1.3 Related Work and Our Contributions Several approaches to the attribute value conflict problem have been proposed in the past: * Dayal's Aggregate Attributes: Dayal <ref> [4] </ref> proposed the use of aggregate functions, e.g. average, maximum, minimum etc. to resolve discrepancies in attribute values. <p> For instance, if the salary attribute values of record instances in two employee relations do not agree, an average is defined over them to derive the correct salary attribute value for the integrated relation. While aggregate functions <ref> [4] </ref> are useful in resolving conflicts for numeric attributes, our approach is appropriate when aggregate function cannot be defined over attribute values which are 1 To save space, the speciality and rating attribute values have been abbreviated. 2 For simplicity, we assume that the uncertain attributes of relation R B are <p> Their model attaches probabilities to the attribute values. However, the model allows probabilities to be assigned only to indi vidual values, and not their subsets. Contributions: We propose an evidential reasoning approach to resolve attribute value conflict. Our approach is different from the other approaches to attribute value conflict <ref> [4, 5] </ref> in that it can combine attribute values which contain quantified uncertainties. Furthermore, Dempster's rule of combining uncertainties has provides our approach a formal and well founded theory of combining information. Our approach generalizes the partial value concept [5] to capture extra uncertainty information.
Reference: [5] <author> L.G. DeMichiel. </author> <title> Resolving database incompatibility:an approach to performing relational operations over mismatched domains. </title> <journal> IEEE TKDE, </journal> <volume> 1(4), </volume> <year> 1989. </year>
Reference-contexts: Attribute value conflict resolution needs to be performed only when a pair of tuples (from different databases) representing the same real-world entity are found to conflict in some attribute values <ref> [12, 5, 15] </ref>. In this paper, we assume that entity identification precedes attribute value conflict resolution. It has been observed that relying on definite and precise semantic information alone to perform integration cannot resolve all data heterogeneity problems. <p> In this case, we can treat the aggregate function approach and our approach as separate classes of attribute integration methods which can co-exist in the integration framework. * DeMichiel's Partial Values: The use of partial values to represent uncertain information from source databases was first proposed by DeMichiel <ref> [5] </ref>. When an attribute value cannot be mapped into a single definite value, a partial value may result. A partial value can be characterized as a set of values of which exactly one must be correct. <p> Their model attaches probabilities to the attribute values. However, the model allows probabilities to be assigned only to indi vidual values, and not their subsets. Contributions: We propose an evidential reasoning approach to resolve attribute value conflict. Our approach is different from the other approaches to attribute value conflict <ref> [4, 5] </ref> in that it can combine attribute values which contain quantified uncertainties. Furthermore, Dempster's rule of combining uncertainties has provides our approach a formal and well founded theory of combining information. Our approach generalizes the partial value concept [5] to capture extra uncertainty information. <p> Furthermore, Dempster's rule of combining uncertainties has provides our approach a formal and well founded theory of combining information. Our approach generalizes the partial value concept <ref> [5] </ref> to capture extra uncertainty information. In DeMichiel's approach, querying relations containing partial values may produce a set of true tuples and another set of may-be tuples.
Reference: [6] <author> R. Elmasri, J. Larson, and S. Navathe. </author> <title> Schema integration algorithms for federated databases and logical database design. </title> <type> Technical report, </type> <institution> Honeywell Corporate Systems Development Division, </institution> <year> 1986. </year>
Reference-contexts: The first two cases are schema level incompatibility problems. Several approaches have been developed to resolve them <ref> [6, 8] </ref> and we do not intend to discuss them in this paper. Solutions to the entity identification problem usually compare attributes between tuples from different relations, with additional domain knowledge, to determine whether the tuples represent the same real-world entity [10, 3].
Reference: [7] <author> H.Y. Hau and R.L. Kashyap. </author> <title> Belief combination and propagation in a lattice-structured inference network. </title> <journal> IEEE Trans. on Systems, Man, and Cybernetics, </journal> <volume> 20(1) </volume> <pages> 45-57, </pages> <month> Feb. </month> <year> 1990. </year>
Reference-contexts: In this paper, we assume that the atomic predicates are mutually independent. A discussion on combining the supports of dependent predicates is given in <ref> [7] </ref>. Let S and T be predicates with support values (sn S ; sp S ) and (sn T ; sp T ), respectively. Let P be the compound predicate S ^ T . <p> Let P be the compound predicate S ^ T . The support of P , (sn P ; sp P ), is computed based on the multiplicative rule in <ref> [7, 1] </ref> as shown below: sn P = sn S sn T , sp P = sp S sp T 3.1.2 Tuple Membership Derivation Function An obvious way to interpret the new tuple membership value is that it should reflect the satisfaction of both the predicate P and the membership of
Reference: [8] <author> J.A. Larson, S.B. Navathe, and R. Elmasri. </author> <title> A theory of attribute equivalence in databases with application to schema integration. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 15(4), </volume> <month> April </month> <year> 1989. </year>
Reference-contexts: The first two cases are schema level incompatibility problems. Several approaches have been developed to resolve them <ref> [6, 8] </ref> and we do not intend to discuss them in this paper. Solutions to the entity identification problem usually compare attributes between tuples from different relations, with additional domain knowledge, to determine whether the tuples represent the same real-world entity [10, 3].
Reference: [9] <author> S.K. Lee. </author> <title> Imprecise and uncertain information in databases: An evidential approach. </title> <booktitle> In Proc.of the 8th Int'l Conf. on IEEE Data Eng., </booktitle> <pages> pages 614-621, </pages> <year> 1992. </year>
Reference-contexts: In the following, we discuss the relationship between our extended data model and two other related models which have been proposed lately. * A version of extended relational model, also based on Dempster-Shafer theory has been proposed by S.K. Lee <ref> [9] </ref>. While the model is similar to the ours, there are some distinguished differences between the two models as will be explained later in this subsection. * A probabilistic data model (PDM) has been proposed by Barbara et al [2] to represent database entities whose properties cannot be deterministically classified. <p> Since we are applying evidential reasoning formalism to solving data heterogeneity problem, we have extended the traditional relational model to capture uncertain data. Based on the extended relational model by Lee <ref> [9] </ref>, we have defined a generalized closed world assumption for interpreting tuples not contained in the extended relation, such that query evaluation on our extended relations is finite. To be consistent with this interpretation, our proposed operations have to satisfy the closure and boundness properties defined in Section 3.6. <p> Definition (Evidence set): Let fi A be the domain of an attribute A. An evidence set is a collec tion of subsets of fi A associated with a mass function assignment <ref> [9] </ref>. For example, for the restaurant wok, ES1 = [fcantoneseg 1 2 ; fhunan; sichuang 1 1 speciality ] is an evidence set associated with the speciality attribute.
Reference: [10] <author> E-P. Lim, J. Srivastava, S. Prabhakar, and J. Richardson. </author> <title> Entity identification problem in database integration. </title> <booktitle> Proc. of 9th IEEE Data Eng. Conf., </booktitle> <year> 1993. </year>
Reference-contexts: Several approaches have been developed to resolve them [6, 8] and we do not intend to discuss them in this paper. Solutions to the entity identification problem usually compare attributes between tuples from different relations, with additional domain knowledge, to determine whether the tuples represent the same real-world entity <ref> [10, 3] </ref>. Attribute value conflict resolution needs to be performed only when a pair of tuples (from different databases) representing the same real-world entity are found to conflict in some attribute values [12, 5, 15]. In this paper, we assume that entity identification precedes attribute value conflict resolution.
Reference: [11] <author> E-P. Lim, J. Srivastava, and S. Shekhar. </author> <title> Attribute value conflict in database integration: An evidential reasoning approach. </title> <type> Technical Report TR93-14, </type> <institution> Dept of Comp Sc, Univ of Minnesota, </institution> <year> 1993. </year>
Reference-contexts: Given the definitions of our extended relational op- erations, we can show the following theorem: Theorem 1: The extended relational operations, fl fl fl fl fl 1, satisfy the Closure and Boundedness properties. Proof: Please refer to <ref> [11] </ref>. 4 Conclusion We have presented in this paper an approach, based on the Dempster-Shafer theory of evidence, to resolve attribute value conflict between relations from independently developed databases. We demonstrate that relations modeling both entity and relationship types can be integrated in a uniform manner.
Reference: [12] <author> W. Litwin and A. Abdellatif. </author> <title> Multidatabase interoperability. </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1986. </year>
Reference-contexts: Attribute value conflict resolution needs to be performed only when a pair of tuples (from different databases) representing the same real-world entity are found to conflict in some attribute values <ref> [12, 5, 15] </ref>. In this paper, we assume that entity identification precedes attribute value conflict resolution. It has been observed that relying on definite and precise semantic information alone to perform integration cannot resolve all data heterogeneity problems.
Reference: [13] <author> J. Pearl. </author> <title> Bayesian and belief-functions formalisms for evidential reasoning: A conceptual analysis. </title> <editor> In G. Shafer and J. Pearl, editors, </editor> <booktitle> Readings in Uncertain Reasoning, </booktitle> <pages> pages 540-574. </pages> <publisher> Morgan Kauffmann, </publisher> <year> 1985. </year>
Reference-contexts: The above plausibility function indicates the maximum degree to which speciality (wok) 2 fcantonese; hunan; sichuang, based on the evidence set ES1. In other words, speciality (wok) 2 fcantonese, hunan,sichuang cannot be disproved based on ES1 and is therefore plausible <ref> [13] </ref>. From the definition, Bel (A) P ls (A). Their difference, P ls (A) Bel (A), indicates the degree to which the evidence set is uncertain whether to support A or A. 2.2 Combining Evidence Sets A mass function is treated as some belief assignment on a domain of values.
Reference: [14] <author> G. Shafer. </author> <title> A Mathematical Theory of Evidence. </title> <publisher> Princeton Univ. Press, </publisher> <address> Princeton, NJ, </address> <year> 1976. </year>
Reference-contexts: In the last decade, a few approaches have been proposed for the attribute value conflict problem as discussed in Section 1.3. However, approaches that explicitly consider uncertainty have been considered only in the recent past. In this paper, we use the Dempster-Shafer theory of evidence <ref> [14] </ref> to model the uncertainty faced in resolving the attribute conflict. We examine the problem of combining the tuples in two sets of relations, each from a distinct database, sharing a relation definition generated based on the global schema. <p> It is possible to have multiple mass functions on the same domain, which correspond to different evidence sets. Given two evidence sets ES 1 and ES 2 , with mass functions m 1 and m 2 respectively, Dempster's Rule of Combination can be used to combine them <ref> [14] </ref>.

References-found: 14

