URL: ftp://www.cs.rutgers.edu/pub/technical-reports/hpcd-tr-45.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: THE USE OF ARTIFICIAL INTELLIGENCE TO IMPROVE THE NUMERICAL OPTIMIZATION OF COMPLEX ENGINEERING DESIGNS Written
Author: BY MARK A. SCHWABACHER Thomas Ellman and Andrew Gelsey 
Degree: A dissertation submitted to the Graduate School|New Brunswick  in partial fulfillment of the requirements for the degree of Doctor of Philosophy  and approved by  
Date: October, 1996  
Note: Graduate Program in Computer Science  
Address: New Jersey  Brunswick, New Jersey  
Affiliation: Rutgers, The State University of  New  
Abstract-found: 0
Intro-found: 1
Reference: [ Bhatta and Goel 1995 ] <author> S. Bhatta and A. Goel. </author> <title> Model-based design idexing and index learning in engineering design. </title> <booktitle> In Working Notes of the IJCAI Workshop on Machine Learning in Engineering, </booktitle> <month> August </month> <year> 1995. </year>
Reference-contexts: Researchers in case-based reasoning have investigated the use of library-retrieval techniques for case-based design [ Sycara and Navinchandra 1992, Kolodner 1993 ] , but have not used them to initialize an iterative design process. <ref> [ Bhatta and Goel 1995 ] </ref> describe a system that learns to retrieve a starting point for the design of a high-acidity sulfuric acid cooler.
Reference: [ Bouchard et al. 1988 ] <author> E. E. Bouchard, G. H. Kidwell, and J. E. Rogan. </author> <title> The application of artificial intelligence technology to aeronautical system design. </title> <booktitle> In AIAA/AHS/ASEE Aircraft Design Systems and Operations Meeting, </booktitle> <address> Atlanta, Geor-gia, </address> <month> September </month> <year> 1988. </year> <month> AIAA-88-4426. </month>
Reference-contexts: A number of research efforts have combined AI techniques with numerical optimization. [ Ellman et al. 1993 ] describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. <ref> [ Bouchard et al. 1988 ] </ref> describes ways in which expert systems could be applied to the parametric design of aeronautical systems. [ Hoeltzel and Chieng 1987 ] describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance
Reference: [ Bramlette et al. 1990 ] <author> M. Bramlette, E. Bouchard, E. Buckman, and L. Takacs. </author> <title> Current applications of genetic algorithms to aeronautical systems. </title> <booktitle> In Proceedings of the Sixth Annual Aerospace Applications of Artifical Intelligence Conference, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] . <ref> [ Bramlette et al. 1990 ] </ref> surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Breiman 1984 ] <author> L. Breiman. </author> <title> Classification And Regression Trees. </title> <booktitle> Wadsworth International Group, </booktitle> <address> Belmont, Calif., </address> <year> 1984. </year>
Reference-contexts: The specific inductive-learning systems used in this work are C4.5 [ Quinlan 1993 ] (release 3.0, with windowing turned off) and CART 1 <ref> [ Breiman 1984 ] </ref> . (See Appendix A for a summary of inductive learning and C4.5.) 2.4 Results Our hypotheses were the following: 1. <p> We used CART (Classification And Regression Trees), which builds a "regression tree" that has a numerical constant at each leaf <ref> [ Breiman 1984 ] </ref> . We trained CART on the 100 randomly generated training goals as follows: For each design parameter, we gave CART a set of training data, where each item in the training data included the goal and the optimal value of the design parameter.
Reference: [ Cerbone 1992 ] <author> G. Cerbone. </author> <title> Machine learning in engineering: Techniques to speed up numerical optimization. </title> <type> Technical Report 92-30-09, </type> <institution> Oregon State University Department of Computer Science, </institution> <year> 1992. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: A survey of multidisciplinary aerospace design optimization can be found in [ Sobieszczanski-Sobieski and Haftka 1996 ] . 7.1 Prototype Selection Cerbone <ref> [ Cerbone 1992 ] </ref> has reported work which applied machine-learning techniques to a problem similar to our prototype-selection problem. His design space, in the domain of truss design, has an exponential number of disconnected search spaces.
Reference: [ Char et al. 1992 ] <author> B.W. Char, K.O. Geddes, G.H. Gonnet, B.L. Leong, M.B. Monagan, and S.M. Watt. </author> <title> First Leaves: A Tutorial Introduction to Maple V. </title> <publisher> Springer-Verlag and Waterloo Maple Publishing, </publisher> <year> 1992. </year>
Reference-contexts: into the simulator, we did not need to use it as an explicit constraint. 3 Although this figure shows only a "snapshot" of the search space for specific values of the other design parameters, we believe that the trend shown in the figure is generally applicable. 35 we used Maple <ref> [ Char et al. 1992 ] </ref> , a symbolic algebra package, to invert the displacement formula, and created a new set of operators that vary certain parameters while maintaining displacement at the minimum displacement allowed by the constraint.
Reference: [ Choy and Agogino 1986 ] <author> J. Choy and A. Agogino. Symon: </author> <title> Automated symbolic monotonicity analysis system for qualitative design optimization. </title> <booktitle> In Proceedings ASME International Computers in Engineering Conference, </booktitle> <year> 1986. </year>
Reference-contexts: effect on retrieval time, and not based on its impact on optimization performance. 7.2 Reformulation Selection Gelsey et al. [ Gelsey and Smith 1995, Gelsey et al. 1996b ] describe a Search Space Toolkit which assists in determining properties of the search space that can be used for 101 reformulation. <ref> [ Choy and Agogino 1986 ] </ref> describe a system that automates [ Papalam-bros and Wilde 1988 ] 's method of using monotonicity analysis to detect constraint activity. In [ Williams and Cagan 1994 ] , Williams and Cagan present activity analysis, a technique inspired by monotonicity analysis.
Reference: [ Clark and Matwin 1993 ] <author> P. Clark and S. Matwin. </author> <title> Using qualitative models to guide inductive learning. </title> <booktitle> In Proceedings of the tenth international machine learning conference, </booktitle> <pages> pages 49-56. </pages> <publisher> Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: A second approach is to modify the tree induction algorithm so that it will never construct a tree that violates the constraints. A similar approach was used to constrain decision lists in <ref> [ Clark and Matwin 1993 ] </ref> . Finally, even after our learning approach is applied, every additional future optimization can serve as an additional training point for the learning. Thus learning methods that can work in an incremental fashion might also prove useful for this task.
Reference: [ Dvorak and Kuipers 1991 ] <author> Daniel Dvorak and Benjamin Kuipers. </author> <title> Process monitoring and diagnosis. </title> <journal> IEEE Expert, </journal> <volume> 6(3) </volume> <pages> 67-74, </pages> <month> June </month> <year> 1991. </year>
Reference-contexts: Other automated intelligent controllers for numerical simulators are described in [ Gelsey 1991, Gelsey 1995a, Sacks 1991, Yip 1991, Zhao 1994 ] , but these do not address the issue of model and simulation quality assurance. Intelligent monitoring for complex systems has received considerable attention (e.g., 102 <ref> [ Dvorak and Kuipers 1991 ] </ref> ), but this work has focused on diagnosis of problems in dynamically changing physical systems as opposed to problems in the execution of computational algorithms which are attempting to simulate the behavior of physical systems. 7.4 Rule-Based Gradients Much work has been done on computing
Reference: [ Ellman and Schwabacher 1993 ] <author> T. Ellman and M. Schwabacher. </author> <title> Abstraction and decomposition in hillclimbing design optimization. </title> <type> Technical Report CAP-TR-14, </type> <institution> Department of Computer Science, Rutgers University, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: We chose these operators because the results of our earlier work on operator-importance analysis suggested that these are the four most important operators <ref> [ Ellman and Schwabacher 1993 ] </ref> . 18 Table 2.1: A portion of the input to C4.5 for prototype selection in the yacht domain.
Reference: [ Ellman et al. 1992 ] <author> T. Ellman, J. Keane, and M. Schwabacher. </author> <title> The Rut-gers CAP Project Design Associate. </title> <type> Technical Report CAP-TR-7, </type> <institution> Department of Computer Science, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <year> 1992. </year> <note> ftp://ftp.cs.rutgers.edu/pub/technical-reports/cap-tr-7.ps.Z. 150 </note>
Reference-contexts: In many cases the quality of competing designs can be assessed using domain-specific evaluation functions, and in such cases the design-modification process is often accomplished by an optimization method such as hillclimbing search <ref> [ Ramachandran et al. 1992, Ellman et al. 1992 ] </ref> . Such a design system can be seen as a case-based reasoning system [ Kolodner 1993 ] , in which the prototype-selection method is the indexing process, and 14 the optimization method is the adaptation process.
Reference: [ Ellman et al. 1993 ] <author> T. Ellman, J. Keane, and M. Schwabacher. </author> <title> Intelligent model selection for hillclimbing search in computer-aided design. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <address> Washington, D.C., </address> <year> 1993. </year>
Reference-contexts: None of this literature addresses the particular difficulties of attempting to optimize functions defined by large "real-world" numerical simulators. A number of research efforts have combined AI techniques with numerical optimization. <ref> [ Ellman et al. 1993 ] </ref> describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. [ Bouchard et al. 1988 ] describes ways in which expert systems could be applied to the
Reference: [ Forbus and Falkenhainer 1990 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: An integration of qualitative and quantitative knowledge. </title> <booktitle> In Proceedings, Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 380-387, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference: [ Forbus and Falkenhainer 1992 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: Scaling up to large models. </title> <booktitle> In Proceedings, Tenth National Conference on Artificial Intelligence, </booktitle> <address> San Jose, CA, </address> <year> 1992. </year>
Reference: [ Forbus and Falkenhainer 1995 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Scaling up self-explanatory simulations: Polynomial-time compilation. </title> <booktitle> In Proceedings, Fourteenth Internationnal Joint Conference on Artificial Intelligence, </booktitle> <address> Montreal, Quebec, Canada, </address> <year> 1995. </year>
Reference: [ Gage et al. 1995 ] <author> P. Gage, I. Kroo, and I. Sobieski. </author> <title> Variable-complexity genetic algorithm for topological design. </title> <journal> AIAA Journal, </journal> <volume> 33(11) </volume> <pages> 2212-2217, </pages> <year> 1995. </year>
Reference-contexts: Powell has tested his system on a realistic jet engine design problem. He does not, however, address the issues of unevaluable points, or search space selection. Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP in two ways.
Reference: [ Gage 1994 ] <author> P. </author> <title> Gage. New approaches to optimization in aerospace conceptual design. </title> <type> Ph.D. Thesis, </type> <institution> Stanford University, </institution> <year> 1994. </year>
Reference-contexts: Powell has tested his system on a realistic jet engine design problem. He does not, however, address the issues of unevaluable points, or search space selection. Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP in two ways.
Reference: [ Gelsey and Smith 1995 ] <author> Andrew Gelsey and Don Smith. </author> <title> A search space toolkit. </title> <booktitle> In Proceedings, 11th IEEE Conference on Artificial Intelligence Applications, </booktitle> <pages> pages 117-123, </pages> <address> Los Angeles, CA, </address> <month> February </month> <year> 1995. </year>
Reference-contexts: They evaluate the performance of this indexing system based on its effect on retrieval time, and not based on its impact on optimization performance. 7.2 Reformulation Selection Gelsey et al. <ref> [ Gelsey and Smith 1995, Gelsey et al. 1996b ] </ref> describe a Search Space Toolkit which assists in determining properties of the search space that can be used for 101 reformulation. [ Choy and Agogino 1986 ] describe a system that automates [ Papalam-bros and Wilde 1988 ] 's method of
Reference: [ Gelsey et al. 1995 ] <author> Andrew Gelsey, Doyle D. Knight, Song Gao, and Mark Schwabacher. </author> <title> NPARC simulation and redesign of the NASA P2 hypersonic inlet. </title> <booktitle> In 31st Joint Propulsion Conference, </booktitle> <address> San Diego, CA, </address> <month> July </month> <year> 1995. </year> <month> AIAA-95-2760. </month>
Reference-contexts: We have demonstrated that complex, multidisciplinary designs can be automatically optimized, when using the appropriate augmentations to existing optimization methods such as CFSQP. Using these augmentations, we have produced designs that have been published in the engineering literature, along with descriptions of our techniques <ref> [ Gelsey et al. 1995, Shukla et al. 1996a ] </ref> . 8.3.2 Contribution to machine learning We applied inductive learning to engineering design optimization. It was not immediately obvious that inductive learning would be applicable to this problem. <p> The search spaces that we used contained some unevaluable points, which were handled using the techniques described in Chapter 4 and Chapter 5. These optimizations produced inlet designs that are better than the previously best-known designs, and have been published in the aeronautical engineering literature <ref> [ Gelsey et al. 1995, Shukla et al. 1996a ] </ref> . Empirically testing optimization in these domains without our techniques would have been prohibitively computationally expensive, but we believe that the optimizations would not have succeeded without using our techniques.
Reference: [ Gelsey et al. 1996a ] <author> Andrew Gelsey, Mark Schwabacher, and Don Smith. </author> <title> Using modeling knowledge to guide design space search. </title> <editor> In J.S. Gero and F. Sudweeks, editors, </editor> <booktitle> Artificial Intelligence in Design '96, </booktitle> <pages> pages 367-385. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> The Netherlands, </address> <year> 1996. </year>
Reference: [ Gelsey et al. 1996b ] <author> Andrew Gelsey, Don Smith, Mark Schwabacher, Khaled Rasheed, and Keith Miyake. </author> <title> A search space toolkit. Decision Support Systems, </title> <note> special issue on Unification of Artificial Intelligence with Optimization, ?(?):?-?, 1996. To appear. </note>
Reference-contexts: These domains include the design of racing yachts (see Chapter 2 and Chapter 3), the design of exhaust nozzles for supersonic jets <ref> [ Gelsey et al. 1996b ] </ref> , the design of inlets for hypersonic jets (see Chapter B), and the design of inlets for supersonic missiles (Project Cheapshot) [ Zha et al. 1996 ] . All of these domains use simulators that are more expensive than our airframe simulator. <p> They evaluate the performance of this indexing system based on its effect on retrieval time, and not based on its impact on optimization performance. 7.2 Reformulation Selection Gelsey et al. <ref> [ Gelsey and Smith 1995, Gelsey et al. 1996b ] </ref> describe a Search Space Toolkit which assists in determining properties of the search space that can be used for 101 reformulation. [ Choy and Agogino 1986 ] describe a system that automates [ Papalam-bros and Wilde 1988 ] 's method of
Reference: [ Gelsey 1991 ] <author> Andrew Gelsey. </author> <title> Using intelligently controlled simulation to predict a machine's long-term behavior. </title> <booktitle> In Proceedings, Ninth National Conference on Artificial Intelligence, </booktitle> <pages> pages 880-887, </pages> <address> Cambridge, MA, </address> <month> July </month> <year> 1991. </year>
Reference: [ Gelsey 1995a ] <author> Andrew Gelsey. </author> <title> Automated reasoning about machines. </title> <journal> Artificial Intelligence, </journal> <volume> 74(1) </volume> <pages> 1-53, </pages> <month> March </month> <year> 1995. </year>
Reference: [ Gelsey 1995b ] <author> Andrew Gelsey. </author> <title> Intelligent automated quality control for computational simulation. </title> <journal> Artificial Intelligence for Engineering Design, Analysis and Manufacturing (AI EDAM), </journal> <volume> 9(5) </volume> <pages> 387-400, </pages> <month> November </month> <year> 1995. </year> <month> 151 </month>
Reference-contexts: Furthermore, this meaningless value may appear better than the value for any physically realizable design, thus leading the search procedure to a worthless but apparently very good design. <ref> [ Gelsey 1995b ] </ref> investigates the types of modeling knowledge that are needed so that a simulator can be reliably invoked by another program, and describes algorithms for detecting assumption violations and other problems that might lead to low-quality or unreliable simulation results. <p> As far as we know, nobody has applied machine learning to predicting constraint activity, or to selection of a search space reformulation for design optimization. 7.3 Model Constraints <ref> [ Gelsey 1995b ] </ref> examines the types of modeling knowledge that are needed so that a simulator can be reliably invoked by another program and describes algorithms for detecting assumption violations and other problems that might lead to low-quality or unreliable simulation results, but strategies for communicating information about modeling failures
Reference: [ Gill et al. 1981 ] <author> Philip E. Gill, Walter Murray, and Margaret H. Wright. </author> <title> Practical Optimization. </title> <publisher> Academic Press, </publisher> <address> London ; New York, </address> <year> 1981. </year>
Reference-contexts: Even if it were practical to re-write the legacy codes using modern software engineering techniques, some pathologies would always exist. Many simulators require the solution of a set of equations that has no closed-form solution. In these cases, numerical root finding must be used. Numerical root finding is undecidable <ref> [ Gill et al. 1981 ] </ref> . Therefore, imperfect root-finding algorithms must be used. There are several types of pathologies: * Multiple local optima. Physical. There can be multiple physically meaningful local optima. Noise. <p> Inter-GEN is discussed further in the related work chapter (Chapter 7). 1.6 Our Approach Our approach is to use a state-of-the-art gradient-based optimization method, such as sequential quadratic programming <ref> [ Gill et al. 1981 ] </ref> , augmented with artificial-intelligence-based techniques. (See Appendix A for an overview of numerical optimization.) We use machine learning-based techniques to set up the optimization with prototype selection (see Chapter 2) and reformulation selection (see Chapter 3). (See Appendix A for an overview of machine learning.) <p> the domain of conceptual design of supersonic transport aircraft, and found that using multi-level simulation and optimization can decrease the cost of design space search by an order of magnitude. 98 Chapter 7 Related Work A great deal of work has been done in the area of numerical optimization algorithms. <ref> [ Gill et al. 1981 ] </ref> provides an applications-oriented overview of numerical optimization algorithms. [ Peressini et al. 1988 ] describes the mathematics of nonlinear programming algorithms. [ Vanderplaats 1984 ] describes the application of numerical optimization to engineering design. [ More and Wright 1993 ] provides a guide to commercially <p> The quasi inverse Hessian is updated on each iteration using the gradient of f with respect to x. In CFSQP, this update is done using the Broyden-Fletcher-Goldfarb-Shanno update formula <ref> [ Gill et al. 1981 ] </ref> . SQP is thus a quasi-Newton method. 5 CFSQP stands for "C code for Feasible Sequential Quadratic Programming." 124 Solving a quadratic programming problem is a much easier task than solving an arbitrary nonlinear programming problem. <p> The second condition is that the improvement in the objective function during the line minimization is less than a certain tolerance. Gradient-based nonlinear optimization methods such as CFSQP work reasonably well when the objective and constraint functions satisfy the following assumptions <ref> [ Gill et al. 1981 ] </ref> : * they are smooth (the objective and constraint functions and their first derivatives are continuous) * they are defined everywhere * they have only one local optimum (which is the global optimum) Unfortunately, these assumptions do not always hold for functions defined by realistic
Reference: [ Goldberg 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: SA's are based on an analogy with thermodynamics, specifically the way in which metals cool and anneal [ Press et al. 1986 ] . GA's are based on an analogy with Darwin's theory of evolution <ref> [ Goldberg 1989 ] </ref> . The problem with applying SA's and GA's to complex engineering design is that they are slow. They tend to require thousands (if not tens of thousands) of simulations before they converge.
Reference: [ Haas et al. 1992 ] <author> M. Haas, R. Elmquist, and D. Sobel. </author> <title> NAWC Inlet Design and Analysis (NIDA) Code, </title> <note> Final Report. UTRC Report R92-970037-1, </note> <year> 1992. </year>
Reference-contexts: NIDA was developed at United Technology Research Center (UTRC) as an inlet analysis/design tool <ref> [ Haas et al. 1992 ] </ref> .
Reference: [ Hoeltzel and Chieng 1987 ] <author> D. Hoeltzel and W. Chieng. </author> <title> Statistical machine learning for the cognitive selection of nonlinear programming algorithms in engineering design optimization. </title> <booktitle> In Advances in Design Automation, </booktitle> <address> Boston, MA, </address> <year> 1987. </year>
Reference-contexts: describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. [ Bouchard et al. 1988 ] describes ways in which expert systems could be applied to the parametric design of aeronautical systems. <ref> [ Hoeltzel and Chieng 1987 ] </ref> describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance that would be obtained if the design were carried out at a more detailed level. [ Orelup et al. 1988 ] describes
Reference: [ IYRU 1985 ] <institution> The Rating Rule and Measurement Instructions of the International Twelve Metre Class. International Yacht Racing Union, </institution> <year> 1985. </year>
Reference-contexts: mass of the yacht, before adding any ballast, must be less than or equal to the mass of the water that it displaces. (In other words, the boat must not sink.) Yachts entered in the 1987 America's Cup race had to satisfy a hard constraint known as the 12-Meter Rule <ref> [ IYRU 1985 ] </ref> .
Reference: [ Knight 1994 ] <author> D. Knight. </author> <title> Survey of high-speed inlet design methodology. Technical Report ARPA Inlet Design Group Report No. </title> <type> 1, </type> <institution> Department of Mechanical and Aerospace Engineering, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <month> March </month> <year> 1994. </year> <note> http://www.cs.rutgers.edu/hpcd/Area II.1/report1.ps.Z. </note>
Reference-contexts: Some engineers have tried to use automated optimization, and have been unhappy with the results; others have heard about these failures, and have therefore not even tried to use automated optimization <ref> [ Knight 1994 ] </ref> . We believe that the pathologies described in Section 1.4 are a major reason for these failures. The manual design process described above is slow. It requires large amounts of human time and calendar time. It also usually fails to produce an optimal design.
Reference: [ Kolodner 1993 ] <author> J. Kolodner. </author> <title> Case-Based Reasoning. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference-contexts: Such a design system can be seen as a case-based reasoning system <ref> [ Kolodner 1993 ] </ref> , in which the prototype-selection method is the indexing process, and 14 the optimization method is the adaptation process. <p> In contrast to this, our work has also evaluated retrieval strategies in terms of the quality of the resulting designs. Researchers in case-based reasoning have investigated the use of library-retrieval techniques for case-based design <ref> [ Sycara and Navinchandra 1992, Kolodner 1993 ] </ref> , but have not used them to initialize an iterative design process. [ Bhatta and Goel 1995 ] describe a system that learns to retrieve a starting point for the design of a high-acidity sulfuric acid cooler.
Reference: [ Kroo et al. 1994 ] <author> Ilan Kroo, Steve Altus, Robert Braun, Peter Gage, and Ian Sobieski. </author> <title> Multidisciplinary optimization methods for aircraft preliminary design. </title> <booktitle> In Fifth AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <address> Panama City, Florida, </address> <month> September </month> <year> 1994. </year> <pages> AIAA 94-4325. </pages>
Reference-contexts: Further, the GA has the potential to find a smooth subspace of the overall search space before starting SQP. Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes <ref> [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] </ref> . [ Bramlette et al. 1990 ] surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Lawrence et al. 1995 ] <author> C. Lawrence, J. Zhou, and A. </author> <title> Tits. User's guide for CFSQP version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical Report TR-94-16r1, </type> <institution> Institute for Systems Research, University of Maryland, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: a quadratic program to the nonlinear program 2. solve the quadratic programming problem 3. perform a minimization along the line defined by the current point and the min imum of the quadratic programming problem 4. repeat The experiments described in this thesis used a state-of-the-art implementation of SQP called CFSQP <ref> [ Lawrence et al. 1995 ] </ref> . 5 Fitting a quadratic program to the objective function can be done by computing the Hessian of the objective function f with respect to x, and the gradient of each constraint function g i with respect to x.
Reference: [ Letcher et al. 1987 ] <author> J. Letcher, J. Marshall, J. Oliver, and N. Salvesen. </author> <title> Stars and Stripes. </title> <journal> Scientific American, </journal> <volume> 257(2), </volume> <month> August </month> <year> 1987. </year>
Reference-contexts: In the experiments described in this thesis, the following 8 In 1992, the 12-meter class was replaced with the new America's Cup Class. 9 This is the boat that won the 1987 America's Cup competition, returning the trophy to the United States after an Australian win in 1983 <ref> [ Letcher et al. 1987 ] </ref> . 129 design parameters were varied: 1. Length. The length of the yacht, as measured along the water line. 2. Beam. The maximum width of the yacht at the water line. 3. Hull Depth.
Reference: [ Letcher 1991 ] <author> J. Letcher. </author> <title> The Aero/Hydro VPP Manual. </title> <institution> Aero/Hydro, Inc., Southwest Harbor, ME, </institution> <year> 1991. </year>
Reference-contexts: We used two simulators to analyze yachts. The first is a "Velocity-Prediction Program" called "AHVPP" from AeroHydro, Inc., which is a marketed product used in yacht design <ref> [ Letcher 1991 ] </ref> . It takes as input a set of surfaces, which are represented within our system using B-splines [ Rogers and Adams 1990 ] . It requires about 10 seconds of CPU time on a Sun SPARCstation 2.
Reference: [ Lowry and McCartney 1991 ] <author> M. Lowry and R. </author> <title> McCartney, editors. Automating Software Design. </title> <publisher> AAAI Press, </publisher> <address> Menlo Park, CA, </address> <year> 1991. </year>
Reference-contexts: It might, for example, include numerical integration to extract the numbers needed in the objective and constraint functions from a flow field that is output by a computational fluid dynamics code. We have built the preprocessors and postprocessors by hand. It might be possible to use automatic programming techniques <ref> [ Lowry and McCartney 1991 ] </ref> to automate this process. 108 Step 3: Run parameter studies Once the preprocessor and postprocessor have been written, it is possible to run parameter studies to produce graphs of cross-sections of the search space.
Reference: [ Mattingly et al. 1987 ] <author> Jack D. Mattingly, William H. Heiser, and Daniel H. Daley. </author> <title> Aircraft Engine Design. </title> <booktitle> AIAA education series. American Institute of Aeronautics and Astronautics, </booktitle> <address> New York, N.Y., </address> <year> 1987. </year>
Reference-contexts: Figure A.6 shows the class of nozzles supported by the current system, the axisymmetric scheduled convergent-divergent exhaust nozzles often found in supersonic aircraft <ref> [ Mattingly et al. 1987 ] </ref> .
Reference: [ More and Wright 1993 ] <author> Jorge J. More and Stephen J. Wright. </author> <title> Optimization Software Guide. </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1993. </year>
Reference-contexts: has been done in the area of numerical optimization algorithms. [ Gill et al. 1981 ] provides an applications-oriented overview of numerical optimization algorithms. [ Peressini et al. 1988 ] describes the mathematics of nonlinear programming algorithms. [ Vanderplaats 1984 ] describes the application of numerical optimization to engineering design. <ref> [ More and Wright 1993 ] </ref> provides a guide to commercially available numerical optimization software. None of this literature addresses the particular difficulties of attempting to optimize functions defined by large "real-world" numerical simulators.
Reference: [ Murthy et al. 1994 ] <author> S. Murthy, S. Kasif, S. Salzberg, and R. Beigel. </author> <title> A system for induction of oblique decision trees. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 1-32, </pages> <year> 1994. </year> <month> 152 </month>
Reference-contexts: The border between 46 these regions does not appear to be axis parallel, and appears to be nonlinear. This suggests that better performance might be achieved using an "oblique" decision tree learner, such as OC1 <ref> [ Murthy et al. 1994 ] </ref> , or by attempting to learn nonlinear region boundaries. As would be expected, even though our yacht-domain results with C4.5 were nearly optimal for 100 examples, results degrade when given less training data.
Reference: [ Orelup et al. 1988 ] <author> M. F. Orelup, J. R. Dixon, P. R. Cohen, and M. K. Simmons. Dominic II: </author> <title> Meta-level control in iterative redesign. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 25-30, </pages> <address> St. Paul, MN, </address> <year> 1988. </year>
Reference-contexts: the parametric design of aeronautical systems. [ Hoeltzel and Chieng 1987 ] describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance that would be obtained if the design were carried out at a more detailed level. <ref> [ Orelup et al. 1988 ] </ref> describes a system called Dominic II that uses an expert system to switch among various strategies during numerical optimization. None of these efforts is focused directly on the problems of search-space pathology addressed in this thesis.
Reference: [ Papalambros and Wilde 1988 ] <author> P. Papalambros and J. Wilde. </author> <title> Principles of Optimal Design. </title> <publisher> Cambridge University Press, </publisher> <address> New York, NY, </address> <year> 1988. </year>
Reference-contexts: This incorporation is done by making the inequality constraint into an equality constraint, and then solving for one of the design parameters in terms of the other design parameters. <ref> [ Papalambros and Wilde 1988 ] </ref> describe how monotonicity knowledge can be used to determine that certain constraints will be active at the optimum. <p> These soft constraints are: * draft constraint * beam constraint * displacement constraint * winglet span constraint For example, the beam constraint states if beam &lt; 3:6m, then add four times the difference to length 34 While constructing the simulator, we used a reasoning process similar to that described in <ref> [ Papalambros and Wilde 1988 ] </ref> to determine that the constraint described by the basic formula of the 12-Meter Rule, above, will always be active, since the objective function being minimized, course-time, is monotonically non-increasing in sail-area, 1 and the left-hand-side of the constraint is monotonically increasing in sail-area.
Reference: [ Peressini et al. 1988 ] <author> Anthony L. Peressini, Francis E. Sullivan, and J. J. Uhl, Jr. </author> <title> The Mathematics of Nonlinear Programming. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1988. </year>
Reference-contexts: simulation and optimization can decrease the cost of design space search by an order of magnitude. 98 Chapter 7 Related Work A great deal of work has been done in the area of numerical optimization algorithms. [ Gill et al. 1981 ] provides an applications-oriented overview of numerical optimization algorithms. <ref> [ Peressini et al. 1988 ] </ref> describes the mathematics of nonlinear programming algorithms. [ Vanderplaats 1984 ] describes the application of numerical optimization to engineering design. [ More and Wright 1993 ] provides a guide to commercially available numerical optimization software.
Reference: [ Powell and Skolnick 1993 ] <author> D. Powell and M. Skolnick. </author> <title> Using genetic algorithms in engineering design optimization with non-linear constraints. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 424-431, </pages> <institution> Univeristy of Illinois at Urbana-Champaign, </institution> <address> July 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Powell <ref> [ Powell 1990, Powell and Skolnick 1993 ] </ref> has built a system called Inter-GEN that seeks to combine the ability of genetic algorithms to handle certain pathologies with the speed of numerical optimization algorithms.
Reference: [ Powell 1990 ] <author> D. Powell. Inter-GEN: </author> <title> A hybrid approach to engineering design optimization. </title> <type> Technical report, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <month> December </month> <year> 1990. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: Powell <ref> [ Powell 1990, Powell and Skolnick 1993 ] </ref> has built a system called Inter-GEN that seeks to combine the ability of genetic algorithms to handle certain pathologies with the speed of numerical optimization algorithms.
Reference: [ Press et al. 1986 ] <author> W. Press, B. Flannery, S. Teukolsky, and W. Vetterling. </author> <title> Numerical Recipes. </title> <publisher> Cambridge University Press, </publisher> <address> New York, NY, </address> <year> 1986. </year>
Reference-contexts: SA's are based on an analogy with thermodynamics, specifically the way in which metals cool and anneal <ref> [ Press et al. 1986 ] </ref> . GA's are based on an analogy with Darwin's theory of evolution [ Goldberg 1989 ] . The problem with applying SA's and GA's to complex engineering design is that they are slow. <p> First, prototype selection may impact quality when the design process is guided by a nonlinear evaluation function with unknown global properties that may include pathologies. Since there is no known method that is guaranteed to find the global optimum of an arbitrary nonlinear function <ref> [ Press et al. 1986 ] </ref> , most design systems rely on iterative local search methods whose results are sensitive to the initial starting point. Second, prototype selection may impact quality when the prototypes lie in disjoint search spaces.
Reference: [ Quinlan 1990 ] <author> J. R. Quinlan. </author> <title> Learning logical definitions from relations. </title> <journal> Machine Learning, </journal> <volume> 5 </volume> <pages> 239-266, </pages> <year> 1990. </year>
Reference-contexts: Finally, learning methods operating on more expressive representations, such as inductive logic programming systems like FOIL <ref> [ Quinlan 1990 ] </ref> , may enable going beyond the simple representation of goals used here and handling more complicated goals, such as those involving multiple disciplines. 2.5.3 Conclusion We have described and demonstrated the utility of two methods of choosing an initial prototype for optimization.
Reference: [ Quinlan 1993 ] <author> John Ross Quinlan. C4.5: </author> <title> Programs for Machine Learning. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1993. </year>
Reference-contexts: If learning is successful this mapping extrapolates from the training data and can be used successfully in future design sessions to map a new goal into an appropriate initial prototype in the design library. The specific inductive-learning systems used in this work are C4.5 <ref> [ Quinlan 1993 ] </ref> (release 3.0, with windowing turned off) and CART 1 [ Breiman 1984 ] . (See Appendix A for a summary of inductive learning and C4.5.) 2.4 Results Our hypotheses were the following: 1. <p> If learning is successful, these mappings extrapolate from the training data and can be used successfully in future design sessions to map a new goal into an appropriate reformulation. The specific inductive-learning system used in this work is C4.5 <ref> [ Quinlan 1993 ] </ref> (release 6.0). 3.3 Results Our hypotheses were the following: 1. The best choice of reformulation depends on the goal, so the C4.5 learning method would have a lower error rate than the most frequent class (MFC) learning method. 2. <p> The inductive learner attempts to learn a mapping from the attributes onto the class. After training, when presented with an unseen attribute set, the learner predicts the class. A.3.1 C4.5 C4.5 is an inductive learning system developed by Quinlan <ref> [ Quinlan 1993 ] </ref> . It learns decision trees from the training data. <p> C4.5 then does pruning, in order to remove branches of the tree that apply to only a small portion of the training data. Pruning can avoid "overfitting" by allowing C4.5 to ignore noise in the training data. The following example of how C4.5 works is taken from <ref> [ Quinlan 1993 ] </ref> . Suppose 6 Information gain is also known in information theory [ Shannon and Weaver 1949 ] as mutual information. 126 Table A.1: A sample training set for C4.5.
Reference: [ Ramachandran et al. 1992 ] <author> N. Ramachandran, N. Langrana, L. Steinberg, and V. Ja-malabad. </author> <title> Initial design strategies for iterative design. </title> <booktitle> Research in Engineering Design, </booktitle> <volume> 4 </volume> <pages> 159-169, </pages> <year> 1992. </year>
Reference-contexts: In many cases the quality of competing designs can be assessed using domain-specific evaluation functions, and in such cases the design-modification process is often accomplished by an optimization method such as hillclimbing search <ref> [ Ramachandran et al. 1992, Ellman et al. 1992 ] </ref> . Such a design system can be seen as a case-based reasoning system [ Kolodner 1993 ] , in which the prototype-selection method is the indexing process, and 14 the optimization method is the adaptation process. <p> Cerbone also presents two learners that incorporate background knowledge by incorporating the objective function into the learner. Research on prototype-retrieval strategies for hillclimbing design optimization is reported by Ramachandran et al. <ref> [ Ramachandran et al. 1992 ] </ref> , who investigated a number of library-based methods for finding starting points for the DPMED iterative parameter-design system. These included a nearest-neighbor method, a curve-fitting method, and a hybrid method. The curve-fitting method is similar to our prototype synthesis method.
Reference: [ Rogers and Adams 1990 ] <author> D. Rogers and J. Adams. </author> <title> Mathematical elements for computer graphics. </title> <publisher> McGraw-Hill, </publisher> <address> 2nd edition, </address> <year> 1990. </year>
Reference-contexts: We used two simulators to analyze yachts. The first is a "Velocity-Prediction Program" called "AHVPP" from AeroHydro, Inc., which is a marketed product used in yacht design [ Letcher 1991 ] . It takes as input a set of surfaces, which are represented within our system using B-splines <ref> [ Rogers and Adams 1990 ] </ref> . It requires about 10 seconds of CPU time on a Sun SPARCstation 2. The second simulator is a simplified version of AHVPP, called RUVPP, which was developed at Rutgers and represents a yacht geometry by a set of design parameters.
Reference: [ Rogers 1989 ] <author> J. L. Rogers. </author> <title> A knowledge-based tool for multilevel decomposition of a complex design problem. </title> <type> Technical Report NASA Technical Paper 2903, </type> <institution> Langley Research Center, National Aeronautics and Space Administration, Hampton, VA, </institution> <year> 1989. </year>
Reference: [ Sacerdoti 1974 ] <author> E. D. Sacerdoti. </author> <title> Planning in a hierarchy of abstraction spaces. </title> <journal> Artificial Intelligence, </journal> <volume> 5:115 - 135, </volume> <year> 1974. </year>
Reference-contexts: Multi-level representations have been studied extensively by artificial intelligence researchers. Multi-level techniques for planning and theorem proving go back as far 86 as <ref> [ Sacerdoti 1974 ] </ref> . The importance of decomposing a problem into multiple levels was discussed at length in Simon's classic work on AI and Design, reprinted as [ Simon 1981 ] .
Reference: [ Sacks 1991 ] <author> Elisha P. Sacks. </author> <title> Automatic analysis of one-parameter ordinary differential equations by intelligent numeric simulation. </title> <journal> Artificial Intelligence, </journal> <volume> 48(1) </volume> <pages> 27-56, </pages> <month> February </month> <year> 1991. </year>
Reference: [ Schwabacher and Gelsey 1996a ] <author> M. Schwabacher and A. Gelsey. </author> <title> Intelligent gradient-based search of incompletely defined design spaces. </title> <type> Technical Report HPCD-TR-38, </type> <institution> Department of Computer Science, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <year> 1996. </year> <note> ftp://ftp.cs.rutgers.edu/pub/technical-reports/hpcd-tr-38.ps.Z. 153 </note>
Reference: [ Schwabacher and Gelsey 1996b ] <author> M. Schwabacher and A. Gelsey. </author> <title> Multi-level simulation and numerical optimization of complex engineering designs. </title> <booktitle> In 6th AIAA/NASA/USAF Multidisciplinary Analysis & Optimization Symposium, </booktitle> <address> Belle-vue, WA, </address> <month> September </month> <year> 1996. </year> <month> AIAA-96-4021. </month>
Reference: [ Schwabacher et al. 1994 ] <author> M. Schwabacher, H. Hirsh, and T. </author> <title> Ellman. Learning prototype-selection rules for case-based iterative design. </title> <booktitle> In Proceedings of the Tenth IEEE Conference on Artificial Intelligence for Applications, </booktitle> <address> San Antonio, Texas, </address> <year> 1994. </year>
Reference: [ Schwabacher et al. 1995 ] <author> M. Schwabacher, H. Hirsh, and T. </author> <title> Ellman. Inductive learning for engineering design optimization. </title> <editor> In Aha, D., and Riddle, P. (Eds.), </editor> <booktitle> Working Notes for Applying Machine Learning in Practice: A Workshop at the Twelfth International Machine Learning Conference (Technical Report AIC-95-023). </booktitle> <address> Washington, DC: </address> <institution> Naval Research Laboratory, </institution> <note> Navy Center for Applied Research in Artificial Intelligence. http://www.aic.nrl.navy.mil/~aha/imlc95-workshop/, 1995. </note>
Reference: [ Schwabacher et al. 1996a ] <author> M. Schwabacher, T. Ellman, and H. Hirsh. </author> <title> Inductive learning for engineering design optimization. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis and Manufacturing, </booktitle> <volume> 10(2) </volume> <pages> 179-180, </pages> <year> 1996. </year> <note> Research Abstract. </note>
Reference: [ Schwabacher et al. 1996b ] <author> M. Schwabacher, T. Ellman, H. Hirsh, and G. Richter. </author> <title> Learning to choose a reformulation for numerical optimization of engineering designs. </title> <editor> In J.S. Gero and F. Sudweeks, editors, </editor> <booktitle> Artificial Intelligence in Design '96, </booktitle> <pages> pages 447-462. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> The Netherlands, </address> <year> 1996. </year>
Reference: [ Shannon and Weaver 1949 ] <author> C. Shannon and W. Weaver. </author> <title> The mathematical theory of communication. </title> <publisher> University of Illinois Press, </publisher> <address> Urbana, IL, </address> <year> 1949. </year>
Reference-contexts: Pruning can avoid "overfitting" by allowing C4.5 to ignore noise in the training data. The following example of how C4.5 works is taken from [ Quinlan 1993 ] . Suppose 6 Information gain is also known in information theory <ref> [ Shannon and Weaver 1949 ] </ref> as mutual information. 126 Table A.1: A sample training set for C4.5.
Reference: [ Shukla et al. 1996a ] <author> Vijay Shukla, Andrew Gelsey, Mark Schwabacher, Donald Smith, and Doyle D. Knight. </author> <title> Automated redesign of the NASA P8 hypersonic inlet using numerical optimization. </title> <booktitle> In AIAA Joint Propulsion Conference, </booktitle> <year> 1996. </year>
Reference-contexts: We have demonstrated that complex, multidisciplinary designs can be automatically optimized, when using the appropriate augmentations to existing optimization methods such as CFSQP. Using these augmentations, we have produced designs that have been published in the engineering literature, along with descriptions of our techniques <ref> [ Gelsey et al. 1995, Shukla et al. 1996a ] </ref> . 8.3.2 Contribution to machine learning We applied inductive learning to engineering design optimization. It was not immediately obvious that inductive learning would be applicable to this problem. <p> The search spaces that we used contained some unevaluable points, which were handled using the techniques described in Chapter 4 and Chapter 5. These optimizations produced inlet designs that are better than the previously best-known designs, and have been published in the aeronautical engineering literature <ref> [ Gelsey et al. 1995, Shukla et al. 1996a ] </ref> . Empirically testing optimization in these domains without our techniques would have been prohibitively computationally expensive, but we believe that the optimizations would not have succeeded without using our techniques.
Reference: [ Shukla et al. 1996b ] <author> Vijay Shukla, Andrew Gelsey, Mark Schwabacher, Donald Smith, and Doyle D. Knight. </author> <title> Automated design optimization for hypersonic inlets. </title> <journal> AIAA Journal of Aircraft, </journal> <note> 1996. Submitted; currently being reviewed. </note>
Reference: [ Simon 1981 ] <editor> H. Simon. </editor> <booktitle> The Sciences of the Artificial. </booktitle> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1981. </year>
Reference-contexts: Multi-level techniques for planning and theorem proving go back as far 86 as [ Sacerdoti 1974 ] . The importance of decomposing a problem into multiple levels was discussed at length in Simon's classic work on AI and Design, reprinted as <ref> [ Simon 1981 ] </ref> . Some researchers have applied the multi-level paradigm to engineering design [ Sobieszczanski-Sobiesky 1982, Sobieszczanski-Sobieski et al. 1985, Rogers 1989, Ellman and Schwabacher 1993 ] , but have not focussed on the use of multi-level optimization to deal with multiple apparent optima in the search space.
Reference: [ Sobieszczanski-Sobieski and Haftka 1996 ] <author> Jaroslaw Sobieszczanski-Sobieski and Raphael T. Haftka. </author> <title> Multidisciplinary aerospace design optimization: Survey of recent developments. </title> <booktitle> In 34th AIAA Aerospace Sciences Meeting and Exhibit, </booktitle> <address> Reno, Nevada, </address> <month> January </month> <year> 1996. </year> <month> AIAA-96-0711. </month>
Reference-contexts: A survey of multidisciplinary aerospace design optimization can be found in <ref> [ Sobieszczanski-Sobieski and Haftka 1996 ] </ref> . 7.1 Prototype Selection Cerbone [ Cerbone 1992 ] has reported work which applied machine-learning techniques to a problem similar to our prototype-selection problem. His design space, in the domain of truss design, has an exponential number of disconnected search spaces. <p> The second approach takes the derivatives of each subcomponent of the simulator, and then solves a system of linear equations to obtain the derivatives of the entire system with respect to the design parameters. These methods are surveyed in <ref> [ Sobieszczanski-Sobieski and Haftka 1996 ] </ref> .
Reference: [ Sobieszczanski-Sobieski et al. 1985 ] <author> J. Sobieszczanski-Sobieski, B. B. James, and A. R. Dovi. </author> <title> Structural optimization by multilevel decomposition. </title> <journal> AIAA Journal, </journal> <volume> 23(11) </volume> <pages> 1775-1782, </pages> <month> November </month> <year> 1985. </year>
Reference-contexts: Further, the GA has the potential to find a smooth subspace of the overall search space before starting SQP. Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes <ref> [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] </ref> . [ Bramlette et al. 1990 ] surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Sobieszczanski-Sobiesky 1982 ] <author> J. Sobieszczanski-Sobiesky. </author> <title> A linear decomposition method for large optimization problems|blueprint for development. </title> <type> Technical Report NASA TM-83248, </type> <institution> National Aeronautics and Space Administration, </institution> <year> 1982. </year> <month> 154 </month>
Reference-contexts: These methods are surveyed in [ Sobieszczanski-Sobieski and Haftka 1996 ] . As far as we know, nobody has addressed the issue of computing gradients in the presence of pathologies such as unevaluable points. 7.5 Multi-level design Other work which uses the multi-level paradigm, such as <ref> [ Sobieszczanski-Sobiesky 1982 ] </ref> , is described in Section 6.1, but none of this work focuses on the problem of performing optimization in the presence of many apparent local optima.
Reference: [ Sycara and Navinchandra 1992 ] <author> K. Sycara and D. Navinchandra. </author> <title> Retrieval strategies in a case-based design system. </title> <editor> In C. Tong and D. Sriram, editors, </editor> <booktitle> Artificial Intelligence in Engineering Design (Volume II), </booktitle> <pages> pages 145 - 164. </pages> <publisher> Academic Press, </publisher> <address> New York, NY, </address> <year> 1992. </year>
Reference-contexts: when applied to each of these problems, but also the impact on optimization performance of using these techniques. 2.2 The Problem Many automated design systems begin by retrieving an initial prototype from a library of previous designs, using the given design goal as an index to guide the retrieval process <ref> [ Sycara and Navinchandra 1992 ] </ref> . The retrieved prototype is then modified by a set of design modification operators to tailor the selected design to the given goals. <p> In contrast to this, our work has also evaluated retrieval strategies in terms of the quality of the resulting designs. Researchers in case-based reasoning have investigated the use of library-retrieval techniques for case-based design <ref> [ Sycara and Navinchandra 1992, Kolodner 1993 ] </ref> , but have not used them to initialize an iterative design process. [ Bhatta and Goel 1995 ] describe a system that learns to retrieve a starting point for the design of a high-acidity sulfuric acid cooler.
Reference: [ Tong et al. 1992 ] <author> Siu Shing Tong, David Powell, and Sanjay Goel. </author> <title> Integration of artificial intelligence and numerical optimization techniques for the design of complex aerospace systems. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <month> AIAA-92-1189. </month>
Reference: [ Tong 1988 ] <author> S. S. Tong. </author> <title> Coupling symbolic manipulation and numerical simulation for complex engineering designs. </title> <booktitle> In International Association of Mathematics and Computers in Simulation Conference on Expert Systems for Numerical Computing, </booktitle> <institution> Purdue University, </institution> <year> 1988. </year>
Reference-contexts: They tend to require thousands, or even tens of thousands, of simulations, and are thus not practical when each simulation is expensive. 99 Powell [ Powell 1990, Tong et al. 1992, Powell and Skolnick 1993 ] has built a module called Inter-GEN, part of the ENGINEOUS system <ref> [ Tong 1988 ] </ref> , that seeks to combine the ability of genetic algorithms to handle multiple local optima with the speed of numerical optimization algorithms. It contains a genetic algorithm, and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two.
Reference: [ Tufte 1983 ] <author> E. Tufte. </author> <title> Visual display of quantitative information. </title> <publisher> Graphics Press, </publisher> <address> Cheshire, Conn., </address> <year> 1983. </year>
Reference-contexts: We augmented CFSQP with model constraints and rule-based gradients before we collected training data for learning, and we obtained good learning 118 results on the first attempt. The value of visualization We have found that visualization <ref> [ Tufte 1983 ] </ref> can be very helpful in determining the noisiness of the training data. For example, Figure 3.5 shows the training data from which we learned the activity of the beam constraint for reformulation selection.
Reference: [ Vanderplaats 1984 ] <author> Garret N. Vanderplaats. </author> <title> Numerical Optimization Techniques for Engineering Design : With Applications. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: order of magnitude. 98 Chapter 7 Related Work A great deal of work has been done in the area of numerical optimization algorithms. [ Gill et al. 1981 ] provides an applications-oriented overview of numerical optimization algorithms. [ Peressini et al. 1988 ] describes the mathematics of nonlinear programming algorithms. <ref> [ Vanderplaats 1984 ] </ref> describes the application of numerical optimization to engineering design. [ More and Wright 1993 ] provides a guide to commercially available numerical optimization software. None of this literature addresses the particular difficulties of attempting to optimize functions defined by large "real-world" numerical simulators.
Reference: [ Weiss and Kulikowski 1991 ] <author> Sholom M. Weiss and Casimir A. </author> <title> Kulikowski. Computer Systems That Learn. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1991. </year>
Reference-contexts: A.3 Inductive Learning The problem addressed by an inductive-learning <ref> [ Weiss and Kulikowski 1991 ] </ref> system is to take a collection of labeled training data and produce rules that make accurate predictions on future data. Each item in the training data is labeled with a set of attributes and a class. <p> If trained and tested on the same data, a learner that simply "memorized" all the training data would have a zero error rate, 7 although it might have very poor performance when tested on unseen data. Cross validation <ref> [ Weiss and Kulikowski 1991 ] </ref> is a way of evaluating an inductive learner when only a limited amount of training and testing data is available.
Reference: [ Williams and Cagan 1994 ] <author> B. Williams and J. Cagan. </author> <title> Activity analysis: The qualitative analysis of stationary points for optimal reasoning. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <address> Seattle, WA, </address> <year> 1994. </year>
Reference-contexts: In <ref> [ Williams and Cagan 1994 ] </ref> , Williams and Cagan present activity analysis, a technique inspired by monotonicity analysis. Their technique is similar to the technique described in this thesis, except that they use qualitative reasoning instead of machine learning to determine which constraints will be active at the optimum.
Reference: [ Yip 1991 ] <author> Kenneth Yip. </author> <title> Understanding complex dynamics by visual and symbolic reasoning. </title> <journal> Artificial Intelligence, </journal> <volume> 51(1-3):179-221, </volume> <month> October </month> <year> 1991. </year>
Reference: [ Zha et al. 1996 ] <author> G.-C. Zha, D. Smith, M. Schwabacher, A. Gelsey, and D. Knight. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <booktitle> In AIAA Symposium on Multidisciplinary Design, </booktitle> <year> 1996. </year> <note> AIAA Paper 96-4142. </note>
Reference-contexts: These domains include the design of racing yachts (see Chapter 2 and Chapter 3), the design of exhaust nozzles for supersonic jets [ Gelsey et al. 1996b ] , the design of inlets for hypersonic jets (see Chapter B), and the design of inlets for supersonic missiles (Project Cheapshot) <ref> [ Zha et al. 1996 ] </ref> . All of these domains use simulators that are more expensive than our airframe simulator.
Reference: [ Zhao 1994 ] <author> Feng Zhao. </author> <title> Extracting and representing qualitative behaviors of complex systems in phase space. </title> <journal> Artificial Intelligence, </journal> <volume> 69(1-2):51-92, </volume> <year> 1994. </year> <month> 155 </month>
References-found: 75

