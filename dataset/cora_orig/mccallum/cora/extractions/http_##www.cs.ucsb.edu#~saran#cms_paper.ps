URL: http://www.cs.ucsb.edu/~saran/cms_paper.ps
Refering-URL: http://www.cs.ucsb.edu/~saran/pub.html
Root-URL: http://www.cs.ucsb.edu
Title: COMPUTATIONAL MODELING SYSTEMS  
Author: Terence R. Smith, Jianwen Su, Amr El Abbadi, Divyakant Agrawal, Gustavo Alonso, and Amitabh Saran 
Keyword: Key words: Computational modeling systems, scientific database systems, data models  
Address: Santa Barbara, CA 93106, U.S.A.  
Affiliation: Department of Computer Science, University of California,  
Note: Pergamon Information Systems Vol. 20, No. 2, pp. 127-153, 1995 Copyright c 1994 Elsevier Science Ltd Printed in Great Britain. All rights reserved  in final revised form  
Phone: 0306-4379/95 $9.50 0.00  
Date: (Received 28 February 1994;  1 December 1994)  
Abstract: A computational modeling system (CMS) provides scientific investigators with a unified computational environment and easy access to a broad range of modeling tools. The goal of a CMS is to provide computational support that increases the efficiency of scientists in the iterative process of modeling. A CMS consists of a computational modeling environment and transparent computational support for the environment. The modeling environment is based on a characterization of scientific modeling activities that is focussed on the manner in which scientific concepts are represented, manipulated, and evaluated, in the scientific modeling process. Based on a formalization of the representation for a concept as representational structures (or "R-structures"), the process of scientific modeling may be viewed as one in which (1) extensible collections R-structures are constructed, evaluated and applied in modeling both the phenomena in specific application domains and the phenomena of the modeling process itself; and (2) instances of the domain elements of R-structures are created and sequences of transformations are applied to the instances. R-structures provide a "complete" and consistent foundation for both the modeling environment of a CMS and its associated, high-level computational modeling language (CML). CML may be employed in creating, accessing, and manipulating R-structures and their components in a simple, uniform manner. A CMS provides a unifying framework for the integration of existing tools, such as DBMS and mathematical software modules, and a distributed modeling environment. Based on the general specification of a CMS, we have designed and implemented a specific CMS, Amazonia, which supports earth science applications in terms of a specific set of R-structures and a "seamlessly" integrated and extendable collection of computational modules, including an object-oriented DBMS. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> Design and Implementation of Large Spatial Databases: </editor> <booktitle> First Symposium, volume 409 of Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag (1989). </publisher>
Reference: [2] <institution> Proceedings of the 4th International Symposium on Spatial Data Handling, </institution> <address> Zurich, </address> <month> Switzerlang </month> <year> (1990). </year>
Reference: [3] <author> P. Adams and M. Solomon. </author> <title> An overview of the CAPITL software development environment. </title> <type> Technical Report TR-1143, </type> <institution> Computer Science Dept., Univ. of Wisconsin-Madison (1993). </institution>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments <ref> [47, 3, 24, 6] </ref> may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45]. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [4] <author> G. Alonso and A. El Abbadi. </author> <title> GOOSE: Geographic Object Oriented Support Environment. </title> <booktitle> Proceedings of the ACM Workshop on Advances in Geographic Information Systems, </booktitle> <address> Arlington, Virginia, USA, </address> <pages> pp. </pages> <month> 38-49 </month> <year> (1993). </year>
Reference-contexts: Unlike transformations, executions of model schemas are persistent, in the sense that the intermediate results are saved. In addition, the data dependencies between steps can be found according to the syntax from the body of a transformation defining a model schema. In CMS, a subsystem called GOOSE <ref> [4] </ref>, monitors the computations occurring in the system, and is able to extract and store the model schema and related information, such as the data lineage. We now discuss the R-structure Project.
Reference: [5] <author> G. Alonso and A. El Abbadi. </author> <title> Cooperative modeling in applied geographic research. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 3(1) </volume> <month> 83-102 </month> <year> (1994). </year>
Reference-contexts: Facilities to restart a model are also supported. Other operations such as lineage tracking, consistency checking and change propagation are also performed at this level. This approach is particularly suitable for cooperative development as has been shown in <ref> [5] </ref>. Important examples of model support include the tracking of data interdependencies and providing persistent data structures that represent model schemas. Amazonia, therefore, provides capabilities for defining, evaluating and manipulating complex models in terms of simple manipulations on graphs representing the model schema.
Reference: [6] <author> T. Andrews. </author> <title> Using an object database to build integrated design environments. </title> <editor> In R. Gupta and E. Horowitz, editors, </editor> <title> Object-Oriented Databases with Applications to CASE, Networks, and VLSI CAD, </title> <journal> Data and Knowledge Base Systems, </journal> <volume> chapter 17, </volume> <pages> pp. 313-323. </pages> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ (1991). </address>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments <ref> [47, 3, 24, 6] </ref> may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45]. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [7] <author> F. Bancilhon, C. Delobel, and P. C. Kanellakis. </author> <title> Building an object-oriented database system: </title> <note> the story of O 2 . Morgan Kaufmann (1992). </note>
Reference-contexts: We now describe Amazonia in terms of its integrated modeling environment, its components, and the data access system. 6.1. Integrated Modeling Environment The integrated modeling environment of Amazonia includes a user interface, CML engine (previously implemented using POSTGRES [35] and currently implemented using O 2 <ref> [7] </ref>), modeling support and tool management modules. The last two modules are discussed in Sections 6.2 and 6.3. An icon based user interface feeds the user commands to the CML engine. The CML engine interprets CML commands.
Reference: [8] <author> G. M. Birtwistle, O.-J. Dahl, B. Myhrhaug, and K. Nygaad. </author> <title> SIMULA Begin. </title> <publisher> Auerbach Press, </publisher> <address> Philadelphia, PA. </address> <year> (1973). </year>
Reference-contexts: If the latter does not already exist in the system, CML will create one with Rectangular-Grid-Maps as its super R-structure and with display-dem among its transformations. Abstract R-structures provide "external" specifications of concrete R-structures and their role is similar to that of abstract data types <ref> [8] </ref>. The R-domain of a concrete R-structure specifies representations for all the elements. This specification involves a structural component and a "value" component that is specified in terms of a set of constraints on the subcomponents in the structural representation.
Reference: [9] <author> W. J. Campbell and R. Cromp. </author> <title> Evolution of an Intelligent Information Fusion System. </title> <journal> Photogrammetric Engineering and Remote Sensing, </journal> <volume> 56(6) </volume> <month> 867-870 </month> <year> (1990). </year>
Reference-contexts: 1. INTRODUCTION The lack of integrated computational support for a comprehensive range of scientific modeling activities reduces the efficiency of many scientific investigations [42, 41]. Scientific investigators frequently spend significant amounts of time and other resources in resolving computational issues, such as database access <ref> [9] </ref>, that are irrelevant to their scientific goals. In this paper, we present the design of a computational modeling system (CMS), which is intended to provide scientific investigators with a unified computational environment and easy access to a broad range of modeling tools.
Reference: [10] <author> L. Cardelli. </author> <title> A semantics of multiple inheritance. </title> <editor> In G. Kahn, D.B. MacQueen, and G. Plotkin, editors, </editor> <booktitle> Semantics of Data Types, volume 173 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 51-67. </pages> <publisher> Springer-Verlag (1984). </publisher>
Reference-contexts: For this reason, CML users must specify the concrete R-structure of the super abstract R-structure from which transformations may be inherited. Furthermore, the structures must be compatible under the usual sub-typing rules <ref> [10, 12, 11] </ref>. The user may "name" the elements using values of type String. Although these names play the same role as object identifiers, this option provides more flexibility and ease in scientific modeling activities.
Reference: [11] <author> L. Cardelli. </author> <title> Structural subtyping and the notion of power types. </title> <booktitle> In Proc. ACM Symp. on Principles of Programming Languages (1988). </booktitle>
Reference-contexts: For this reason, CML users must specify the concrete R-structure of the super abstract R-structure from which transformations may be inherited. Furthermore, the structures must be compatible under the usual sub-typing rules <ref> [10, 12, 11] </ref>. The user may "name" the elements using values of type String. Although these names play the same role as object identifiers, this option provides more flexibility and ease in scientific modeling activities.
Reference: [12] <author> L. Cardelli and P. Wegner. </author> <title> On understanding types, data abstraction, and polymorphism. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(4) </volume> <month> 471-522 </month> <year> (1985). </year>
Reference-contexts: For this reason, CML users must specify the concrete R-structure of the super abstract R-structure from which transformations may be inherited. Furthermore, the structures must be compatible under the usual sub-typing rules <ref> [10, 12, 11] </ref>. The user may "name" the elements using values of type String. Although these names play the same role as object identifiers, this option provides more flexibility and ease in scientific modeling activities.
Reference: [13] <author> W. Chu, </author> <title> editor. Proceedings of the NSF Scientific Database Projects, </title> <booktitle> AAAS Workshop on Advances in Data management for the Scientist and Engineer, </booktitle> <address> Boston, MA. </address> <year> (1993). </year>
Reference-contexts: There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications <ref> [13, 25] </ref>. As a result of this interest, several systems have been developed on the basis of relational database technology. In CMS, core concepts that underlie the modeling environment are based on significant generalizations of existing constructs in semantic data models (see [18, 32]) and object-oriented data models (see [53]).
Reference: [14] <author> S. de Hoop and P. van Oosterom. </author> <title> Storage and manipulation of topology in Postgres. </title> <booktitle> In Proceedings of EGIS, </booktitle> <pages> pp. 1324-1336, </pages> <address> Munich, Germany (1992). </address>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [15] <author> H. D. Ebbinghaus, J. Flum, and W. Thomas. </author> <title> Mathematical Logic. </title> <publisher> Springer-Verlag (1984). </publisher>
Reference-contexts: It is widely accepted that this system is sufficient for expressing "all" of mathematics. It is shown in <ref> [15] </ref> how one may employ this framework in constructing a first order treatment for any mathematical construct, and it is shown in particular how one may construct a first order treatment of what we have termed R-structures.
Reference: [16] <author> P. K. Garg and A. R. Harrison. </author> <title> Quantitative representation of land-surface morphology from digital elevation models. </title> <booktitle> In [2]. </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., <ref> [16, 23, 27, 50] </ref>). Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [17] <author> D. Harel, H. Lachover, A. Naamad, A. Pnuell, M. Politi, R. Sherman, A. Shtull-Trauring, and M. Trakhtenbrot. Statemate: </author> <title> a working environment for the development of complex reactive systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(4) </volume> <month> 403-414 </month> <year> (1990). </year>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes <ref> [40, 17, 45] </ref>. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [18] <author> R. Hull and R. King. </author> <title> Semantic data modeling: Survey, applications, and research issues. </title> <journal> ACM Computing Surveys, </journal> <volume> 19(3) </volume> <month> 201-260 </month> <year> (1987). </year>
Reference-contexts: As a result of this interest, several systems have been developed on the basis of relational database technology. In CMS, core concepts that underlie the modeling environment are based on significant generalizations of existing constructs in semantic data models (see <ref> [18, 32] </ref>) and object-oriented data models (see [53]). In particular, this permits a large range of phenomena to be easily represented at both the conceptual and the implementation levels. As a result, it is easy to integrate into CMS many tools that support the modeling environment, including DBMS. <p> For abstract R-structures, it is necessary to specify a set of super R-structures from which the R-structure inherits concrete representations, constraints, and transformations. The R-domain of a super R-structure contains the R-domain of any sub R-structure. Note that the semantics is the same as in many semantic data models <ref> [18] </ref> and reflects the natural meaning of inheritance. Some object-oriented systems such as C++, however, do not provide the "inclusion" semantics and require the user's explicit assertion similar to "type casting".
Reference: [19] <author> P. Jankowski and C. ZumBrunnen. </author> <title> A model management approach to modeling and simulation natural systems. </title> <booktitle> In [2]. </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., [16, 23, 27, 50]). Early modeling support systems <ref> [19, 20, 21, 22] </ref> are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [20] <author> C. V. Jones. </author> <title> An introduction to graph-based modeling systems, Part I: Overview. </title> <journal> ORSA Journal on Computing, </journal> <volume> 2(2) </volume> <month> 136-151 </month> <year> (1990). </year>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., [16, 23, 27, 50]). Early modeling support systems <ref> [19, 20, 21, 22] </ref> are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [21] <author> C. V. Jones. </author> <title> An introduction to graph-based modeling systems, Part II: Graph-grammars and the implementation. </title> <journal> ORSA Journal on Computing, </journal> <volume> 3(3) </volume> <month> 180-206 </month> <year> (1991). </year>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., [16, 23, 27, 50]). Early modeling support systems <ref> [19, 20, 21, 22] </ref> are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [22] <author> C. V. Jones. </author> <title> An integrated modeling environment based on attributed graphs and graph-grammars. Decision Support Systems, </title> <booktitle> 10 255-275 (1993). Computational Modeling Systems 153 </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., [16, 23, 27, 50]). Early modeling support systems <ref> [19, 20, 21, 22] </ref> are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [23] <author> D. B. Kidner, C. B. Jones, D. G. Knight, and D. H. Smith. </author> <title> Digital terrain models for radio path profiles. </title> <booktitle> In [2]. </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., <ref> [16, 23, 27, 50] </ref>). Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [24] <author> L.-C. Liu. </author> <title> Object database support for CASE. </title> <editor> In R. Gupta and E. Horowitz, editors, </editor> <title> Object-Oriented Databases with Applications to CASE, Networks, and VLSI CAD, </title> <journal> Data and Knowledge Base Systems, </journal> <volume> chapter 14, </volume> <pages> pp. 261-282. </pages> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ (1991). </address>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments <ref> [47, 3, 24, 6] </ref> may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45]. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [25] <author> D. D. E. Long, P. E. Mantey, A. T. Pang, G. G. Langdon, Jr, R. A. Levinson, H. G. Kolsky, B. R. Gritton, C. H. Wash, and L. K. Rosenfeld. REINAS: </author> <title> Real time environmental information network and analysis system: Concept statement. </title> <type> Technical Report UCSC-CRL-93-05, </type> <institution> Baskin Center for Computer & Information Sciences, </institution> <address> U. C. Santa Cruz (1992). </address>
Reference-contexts: There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications <ref> [13, 25] </ref>. As a result of this interest, several systems have been developed on the basis of relational database technology. In CMS, core concepts that underlie the modeling environment are based on significant generalizations of existing constructs in semantic data models (see [18, 32]) and object-oriented data models (see [53]).
Reference: [26] <author> C. B. Medeiros and F. Pires. </author> <title> Databases for GIS. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 23(1) </volume> <month> 107-115 </month> <year> (1994). </year>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [27] <author> D. G. Morris and R. W. Flavin. </author> <title> A digital terrain model for hydrology. </title> <booktitle> In [2]. </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., <ref> [16, 23, 27, 50] </ref>). Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [28] <author> B. C. Neumann. PROSPERO: </author> <title> A tool for organizing internet resources. </title> <journal> Electronic Networking: Research, Applications, and Policy, </journal> <month> 2(1) </month> <year> (1992). </year>
Reference-contexts: Distributed Access System The distributed access system provides transparent and homogeneous access to a distributed collection of heterogeneous data and services. Recently, a file system called Prospero <ref> [28] </ref> has been developed which can be used to integrate Unix files and directories scattered across the internet. We have extended the Prospero file system to provide data handling and remote service capabilities.
Reference: [29] <author> J. K. Ousterhout. </author> <title> Tcl: An embeddable command language. </title> <booktitle> In Proceedings of the Winter 1990 USENIX Conference, </booktitle> <address> Washington, DC, USA (1990). </address>
Reference-contexts: Amazonia, therefore, provides capabilities for defining, evaluating and manipulating complex models in terms of simple manipulations on graphs representing the model schema. The interface (as a part of the user interface) is currently being developed using Tcl and Tk <ref> [29, 30] </ref>. Computational Modeling Systems 151 6.3. Tool Management Module In providing computational support, the diverse set of software tools used in the construction of models must be integrated into a coherent unit.
Reference: [30] <author> J. K. Ousterhout. </author> <title> An X11 toolkit based on the Tcl language. </title> <booktitle> In Proceedings of the Winter 1991 USENIX Conference, </booktitle> <address> Dallas, TX, USA (1991). </address>
Reference-contexts: Amazonia, therefore, provides capabilities for defining, evaluating and manipulating complex models in terms of simple manipulations on graphs representing the model schema. The interface (as a part of the user interface) is currently being developed using Tcl and Tk <ref> [29, 30] </ref>. Computational Modeling Systems 151 6.3. Tool Management Module In providing computational support, the diverse set of software tools used in the construction of models must be integrated into a coherent unit.
Reference: [31] <author> H. B. Paul, H. J. Schek, M. H. Scholl, G. Weikum, and U. Deppisch. </author> <title> Architecture and implementation of the Darmstadt database kernel system. </title> <booktitle> In Proc. ACM SIGMOD Int. Conf. on Management of Data, </booktitle> <pages> pp. 196-206, </pages> <address> San Francisco, CA (1987). </address>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [32] <author> J. Peckham and F. Maryanski. </author> <title> Semantic data models. </title> <journal> ACM Computing Surveys, </journal> <volume> 20(3) </volume> <month> 153-189 </month> <year> (1988). </year>
Reference-contexts: As a result of this interest, several systems have been developed on the basis of relational database technology. In CMS, core concepts that underlie the modeling environment are based on significant generalizations of existing constructs in semantic data models (see <ref> [18, 32] </ref>) and object-oriented data models (see [53]). In particular, this permits a large range of phenomena to be easily represented at both the conceptual and the implementation levels. As a result, it is easy to integrate into CMS many tools that support the modeling environment, including DBMS.
Reference: [33] <author> R. Ramakrishnan, D. Srivastava, and S. Sudarshan. </author> <title> CORAL | control, relations and logic. </title> <editor> In L.-Y. Yuan, editor, </editor> <booktitle> Proceedings of the 18th International Conference on Very Large Data Bases, </booktitle> <pages> pp. 238-250, </pages> <address> Vancouver, BC, Canada (1992). </address>
Reference-contexts: Access to the tools is on a demand driven basis. Parameters are provided to tune the tool performance. We have integrated front end tools of DBMS such as POSTGRES, Coral <ref> [33] </ref>, and O 2 , and mathematical tools, such as Matlab, with relative ease. 6.4. Distributed Access System The distributed access system provides transparent and homogeneous access to a distributed collection of heterogeneous data and services.
Reference: [34] <author> A. A. G. Requicha. </author> <title> Representations for rigid solids: theory, methods, </title> <journal> and systems. Computing Surveys, </journal> <volume> 12(4) </volume> <month> 437-464 </month> <year> (1980). </year>
Reference-contexts: A concept cannot be defined apart from some symbolic representation. The nature of the symbolic representation of a concept is a critical determinant of its value in the modeling process <ref> [34] </ref>. While there may be several "equivalent" representations of a given concept, some representations may be more efficient than others in the sense that they require less space to store and/or a smaller number of steps during the application of a given transformation (operator).
Reference: [35] <author> L. A. Rowe and M. R. Stonebraker. </author> <title> The POSTGRES data model. </title> <booktitle> In Proceedings of the 13th Conference on Very Large Data Bases, </booktitle> <pages> pp. 83-96, </pages> <address> Brighton, England (1987). </address>
Reference-contexts: We now describe Amazonia in terms of its integrated modeling environment, its components, and the data access system. 6.1. Integrated Modeling Environment The integrated modeling environment of Amazonia includes a user interface, CML engine (previously implemented using POSTGRES <ref> [35] </ref> and currently implemented using O 2 [7]), modeling support and tool management modules. The last two modules are discussed in Sections 6.2 and 6.3. An icon based user interface feeds the user commands to the CML engine. The CML engine interprets CML commands.
Reference: [36] <author> R. L. Santalesa. </author> <title> Matlab (Software Review) (the Mathwork Inc's interactive numeric computation software). </title> <journal> IEEE Spectrum, </journal> <month> 27(1) </month> <year> (1990). </year>
Reference-contexts: As an example, the following command creates a virtual concrete R-domain for the R-structure DEM in a format that is intended to be interpretable by Matlab <ref> [36] </ref>: CREATE CONCRETE R-STRUCTURE DEM::MatlabFormat SUPER R-STRUCTURES = NONE R-DOMAIN = EXTERNAL It is also possible to introduce transformations from Matlab, such as display-dem, into the set of transformations associated with the R-structure DEM.
Reference: [37] <author> A. M. Sastri. </author> <title> Experiences in heterogeneous service and data access using distributed approaches. </title> <type> Master's thesis, </type> <institution> Computer Science Department, University of California, Santa Barbara (1994). </institution>
Reference-contexts: These modifications have been made to Prospero by changing the underlying network protocols between Prospero clients and servers. Further details about these protocols appear in <ref> [37] </ref>. 7. CONCLUSIONS Based on many close research interactions with earth scientists, our principle conclusion is that computational support for scientific database and modeling activities must be based on a foundation that incorporates a complete and consistent characterization of the process of modeling.
Reference: [38] <author> M Scholl and A. Voisard. </author> <title> Thematic map modeling. </title> <booktitle> In [1], </booktitle> <pages> pp. 167-192. </pages>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [39] <institution> Spatial Data Transfer Standards, U.S. </institution> <note> Geological Survey (1992). </note>
Reference-contexts: Computational Modeling Systems 139 We also note that various "standards" for concepts may be represented in terms of a basic set of R-structures. For example, the recently adopted "Federal Spatial Data Transfer Standard" <ref> [39] </ref> provides logical specifications and data structures for an important subset of "standard" spatial concepts. 4.1.
Reference: [40] <author> I. Shy, R. Taylor, and L. Osterweil. </author> <title> A metaphor and a conceptual architecture for software development environments. </title> <editor> In F. W. Long, editor, </editor> <booktitle> Software Engineering Environments. Proc. int. Workshop on Environments, Chinon, France, volume 467 of Lecture Notes in Computer Science, </booktitle> <pages> pp. 77-97. </pages> <publisher> Springer-Verlag (1989). </publisher>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes <ref> [40, 17, 45] </ref>. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [41] <author> T. R. Smith, J. Su, D. Agrawal, and A. El Abbadi. </author> <title> Database and modeling systems for the earth sciences. </title> <journal> IEEE Bulletin on Data Engineering, </journal> <month> 16(1) </month> <year> (1993). </year>
Reference-contexts: 1. INTRODUCTION The lack of integrated computational support for a comprehensive range of scientific modeling activities reduces the efficiency of many scientific investigations <ref> [42, 41] </ref>. Scientific investigators frequently spend significant amounts of time and other resources in resolving computational issues, such as database access [9], that are irrelevant to their scientific goals.
Reference: [42] <author> T. R. Smith, J. Su, D. Agrawal, and A. El Abbadi. MDBS: </author> <title> A modeling and database system to support research in the earth sciences. </title> <booktitle> In Chu [13]. </booktitle>
Reference-contexts: 1. INTRODUCTION The lack of integrated computational support for a comprehensive range of scientific modeling activities reduces the efficiency of many scientific investigations <ref> [42, 41] </ref>. Scientific investigators frequently spend significant amounts of time and other resources in resolving computational issues, such as database access [9], that are irrelevant to their scientific goals.
Reference: [43] <author> T. R. Smith, J. Su, and A. Saran. </author> <title> Virtual Structures | A Technique for Supporting Scientific Database Applications. </title> <booktitle> In Proc. 13th Int. Conf. on the E-R Approach (1994). </booktitle>
Reference-contexts: The main contribution of this paper is a conceptual basis for the computational modeling environment of a CMS. Although we include a brief overview of the computational support that we have designed and implemented for a specific CMS, more detailed information concerning such support may be found in <ref> [43] </ref>. The paper is organized as follows: in Section 2, we characterize the process of scientific modeling both in general terms and in terms of a specific example drawn from the earth sciences. The example is employed throughout the paper to illustrate various issues. <p> Hence one may create a uniform view of integrated software packages. y Detailed implementation issues are discussed in <ref> [43] </ref>. Computational Modeling Systems 145 The user may also attach constraints to R-structures which specify conditions on structured values that represent valid elements. In the current design, constraints are defined as boolean transformations and the maintenance of constraints is performed at the time of the creation of elements. <p> We have already developed necessary techniques that allow additions of new tools into the system. Specifically, necessary information about each tool is stored as an R-structure in CMS and the operations are handled by the tool management module <ref> [43] </ref>. 148 Terence R. Smith et al. 5.8. Creating Modeling Schemas and Projects We now describe how methodological concepts, such as modeling schemas and projects, may be instantiated as high-level R-structures with the use of CML. <p> Such support is provided by the tool management module. In Amazonia, tools are accessed through CML constructs which in turn contain native tool language commands <ref> [43] </ref>. For the purpose of interprocess communication, I/O redirection, pipes and coprocessors are not satisfactory solutions since they often require modification of the tools. Instead, tools are executed as background server processes.
Reference: [44] <author> T. R. Smith, C. Zhan, and G. Peng. </author> <title> A knowledge-based, two-step procedure for extracting channel networks from noisy dem data. </title> <journal> Computers and Geoscience, </journal> <volume> 16(6) </volume> <month> 777-786 </month> <year> (1990). </year>
Reference-contexts: There are a variety of procedures for extracting and manipulating representations of such concepts. Although they are typically complex and characterized by evolving sets of heuristics (e.g., <ref> [44] </ref>), we may interpret such procedures as transformations from one set of land surface representations to some other set of land surface representations. There are many modeling situations, however, for which neither a "standard" set of concepts nor a "standard" set of representations for concepts has been defined.
Reference: [45] <author> X. Song and L. J. Osterweil. </author> <title> Engineering Software Design Processes to Guide Process Execution. </title> <type> Technical Report 94-23, </type> <institution> Comp. Sci. Dept., </institution> <address> U. Mass. </address> <year> (1994). </year>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes <ref> [40, 17, 45] </ref>. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [46] <author> W. R. Stevens. </author> <title> Advanced Programming in UNIX Environment. </title> <publisher> Addison-Wesley (1992). </publisher>
Reference-contexts: Instead, tools are executed as background server processes. The tool management system employs the concept of pseudo-terminals which ensures that any tool using the standard input/output interface can be integrated into the system <ref> [46] </ref>. Since a tool runs in non-interactive mode by default, issues such as handling asynchrony of the tool and processing command responses arise. In particular, the module must detect command terminations and error sequences.
Reference: [47] <author> R. Taylor, F. Belz, L. Clarke, L. Osterweil, R. Selby, J. Wileden, A. Wolf, and M. Young. </author> <title> Foundations for the Arcadia Environment Architecture. </title> <type> Technical Report 88-96, </type> <institution> Comp. Sci. Dept., </institution> <address> U. Mass. </address> <year> (1988). </year>
Reference-contexts: Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments <ref> [47, 3, 24, 6] </ref> may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45]. CMS, on the other hand, provides a comprehensive modeling environment based on a general and unifying characterization of scientific modeling activity.
Reference: [48] <author> P. van Oosterom and T. Vijlbrief. </author> <title> Building a GIS on top of the open DBMS Postgres. </title> <booktitle> In Proceedings of EGIS, </booktitle> <pages> pp. 775-787, </pages> <address> Brussels, Belgium (1991). </address>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [49] <author> W. Waterfeld and H.-J. Schek. </author> <title> The DASDBS Geo-Kernel an extensible database system for GIS. </title> <editor> In A. K. Turner, editor, </editor> <title> Three Dimensional Modeling with Geoscientific Information Systems, </title> <booktitle> chapter 8, </booktitle> <pages> pp. 69-84. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Netherlands (1992). </address>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [50] <author> R. Weibel and M. Heller. </author> <title> A framework for digital terrain modeling. </title> <booktitle> In [2]. </booktitle>
Reference-contexts: Such diversity of support unnecessarily complicates the modeling process. In relation to the first approach, for example, a variety of distinct computational environments have been developed to support such restricted domains of applications as digital terrain modeling (e.g., <ref> [16, 23, 27, 50] </ref>). Early modeling support systems [19, 20, 21, 22] are specialized and lack support for complex, structured datasets. CASE tools and software development environments [47, 3, 24, 6] may also be viewed as specialized modeling environments with respect to software processes [40, 17, 45].
Reference: [51] <author> A. Wolf. </author> <title> The DASDBS GEO-Kernel, concepts, experiences, and the second step. </title> <booktitle> In [1]. </booktitle>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [52] <author> A. Wolf. </author> <title> How to fit Geo-objects into databases | an extensibility approach. </title> <booktitle> In Proc. of the First European Conference on GIS, </booktitle> <address> Amsterdam (1990). </address>
Reference-contexts: As examples of the second approach, a large number of modules have been developed that support statistical modeling techniques while there have been many extensions of DBMS technology focussed on the representation, manipulation, storage, and retrieval of spatial data <ref> [31, 51, 38, 48, 14, 26, 52, 49] </ref>. There is a currently increasing interest in database issues such as heterogeneity, derived data management, and optimization that arise in scientific applications [13, 25]. As a result of this interest, several systems have been developed on the basis of relational database technology.
Reference: [53] <author> S. B. Zdonik and D. Maier. </author> <title> Readings in Object-Oriented Database Systems. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, CA (1990). </address>
Reference-contexts: As a result of this interest, several systems have been developed on the basis of relational database technology. In CMS, core concepts that underlie the modeling environment are based on significant generalizations of existing constructs in semantic data models (see [18, 32]) and object-oriented data models (see <ref> [53] </ref>). In particular, this permits a large range of phenomena to be easily represented at both the conceptual and the implementation levels. As a result, it is easy to integrate into CMS many tools that support the modeling environment, including DBMS.
References-found: 53

