URL: http://info.internet.isi.edu:80/in-drafts/files/draft-ietf-rps-rpsl-04.ps
Refering-URL: http://info.internet.isi.edu:80/in-drafts/files/
Root-URL: http://www.isi.edu
Title: Internet Draft Elise Gerich At Home Network Marten Terpstra Bay Networks Routing Policy Specification Language
Author: Cengiz Alaettinoglu draft-ietf-rps-rpsl-.txt Tony Bates Daniel Karrenberg RIPE David Meyer Curtis Villamizar 
Note: Please check the I-D abstract listing contained in each Internet Draft directory to learn the current status of this or any other Internet Draft.  
Affiliation: USC/Information Sciences Institute  Cisco Systems  University of Oregon  
Date: Expires May 17, 1998  November 17, 1997  
Pubnum: ANS  Memo  
Abstract: This Internet Draft is the reference document for the Routing Policy Specification Language (RPSL). RPSL allows a network operator to be able to specify routing policies at various levels in the Internet hierarchy; for example at the Autonomous System (AS) level. At the same time, policies can be specified with sufficient detail in RPSL so that low level router configurations can be generated from them. RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. This document is an Internet Draft, and can be found as draft-ietf-rps-rpsl-04.txt in any standard internet drafts repository. Internet Drafts are working documents of the Internet Engineering Task Force (IETF), its Areas, and its Working Groups. Note that other groups may also distribute working documents as Internet Drafts. Internet Drafts are draft documents valid for a maximum of six months. Internet Drafts may be updated, replaced, or obsoleted by other documents at any time. It is not appropriate to use Internet Drafts as reference material, or to cite them other than as a "working draft" or "work in progress." 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> Internet Routing Registry. </institution> <note> Procedures. http://www.ra.net/RADB.tools.docs/, http://www.ripe.net/db/doc.html. </note>
Reference-contexts: RPSL is object oriented; that is, objects contain pieces of policy and administrative information. These objects are registered in the Internet Routing Registry (IRR) by the authorized organizations. The registration process is beyond the scope of this document. Please refer to <ref> [1, 15, 2] </ref> for more details on the IRR. In the following sections, we present the classes that are used to define various policy and administrative objects. The "mntner " class defines entities authorized to add, delete and modify a set of objects. <p> 65535]) rp-attribute: # BGP aspath attribute aspath # prepends AS numbers from last to first order prepend (as_number, ...) typedef: # a community value in RPSL is either # a 4 byte integer # internet, no_export, no_advertise (see RFC-1997) # two 2-byte integers to be concatanated eg. -3561,70-community_elm union integer <ref> [1, 4294967200] </ref>, enum [internet, no_export, no_advertise], list [2:2] of integer [0, 65535] typedef: # list of community values - 40, no_export, -3561,70-- community_list list of community_elm rp-attribute: # BGP community attribute community # set to a list of communities operator=(community_list) # order independent equality comparison operator==(community_list) # append community values operator.=(community_elm)
Reference: [2] <author> C. Alaettinoglu, D. Meyer, and J. Schmitz. </author> <title> Application of Routing Policy Specification Language (RPSL) on the Internet. Internet Draft draft-ietf-rps-appl-rpsl-00.ps, </title> <month> March </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: RPSL is object oriented; that is, objects contain pieces of policy and administrative information. These objects are registered in the Internet Routing Registry (IRR) by the authorized organizations. The registration process is beyond the scope of this document. Please refer to <ref> [1, 15, 2] </ref> for more details on the IRR. In the following sections, we present the classes that are used to define various policy and administrative objects. The "mntner " class defines entities authorized to add, delete and modify a set of objects. <p> However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document <ref> [2] </ref>. Alaettinoglu et. al. Expires May 17, 1998 [Page 4] Internet Draft RPSL November 17, 1997 2 RPSL Names, Reserved Words, and Representation Each class has a set of attributes which store a piece of information about the objects of the class.
Reference: [3] <author> T. Bates. </author> <title> Specifying an `Internet Router' in the Routing Registry. </title> <type> Technical Report RIPE-122, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Sets of ASes and routes can be defined using the "as-set " and "route-set " classes. The "dictionary" class provides the extensibility to the language. The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents <ref> [4, 11, 14, 10, 3] </ref> and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. <p> The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents [4, 11, 14, 10, 3] and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents <ref> [11, 14, 10, 3] </ref> as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document [2]. Alaettinoglu et. al.
Reference: [4] <author> T. Bates, E. Gerich, L. Joncheray, J-M. Jouanigot, D. Karrenberg, M. Terpstra, and J. Yu. </author> <title> Representation of IP Routing Policies in a Routing Registry. </title> <type> Technical Report ripe-181, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. RPSL is a replacement for the current Internet policy specification language known as RIPE-181 <ref> [4] </ref> or RFC-1786 [5]. RIPE-81 [6] was the first language deployed in the Internet for specifying routing policies. It was later replaced by RIPE-181 [4]. <p> RPSL is a replacement for the current Internet policy specification language known as RIPE-181 <ref> [4] </ref> or RFC-1786 [5]. RIPE-81 [6] was the first language deployed in the Internet for specifying routing policies. It was later replaced by RIPE-181 [4]. Through operational use of RIPE-181 it has become apparent that certain policies cannot be specified and a need for an enhanced and more generalized language is needed. RPSL addresses RIPE-181's limitations. <p> Sets of ASes and routes can be defined using the "as-set " and "route-set " classes. The "dictionary" class provides the extensibility to the language. The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents <ref> [4, 11, 14, 10, 3] </ref> and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL.
Reference: [5] <author> T. Bates, E. Gerich, L. Joncheray, J-M. Jouanigot, D. Karrenberg, M. Terpstra, and J. Yu. </author> <title> Representation of IP Routing Policies in a Routing Registry. </title> <type> Technical Report RFC-1786, </type> <institution> Network Information Center, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. RPSL is a replacement for the current Internet policy specification language known as RIPE-181 [4] or RFC-1786 <ref> [5] </ref>. RIPE-81 [6] was the first language deployed in the Internet for specifying routing policies. It was later replaced by RIPE-181 [4]. Through operational use of RIPE-181 it has become apparent that certain policies cannot be specified and a need for an enhanced and more generalized language is needed. <p> The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents [4, 11, 14, 10, 3] and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 <ref> [5] </ref> and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document [2]. Alaettinoglu et. al.
Reference: [6] <author> T. Bates, J-M. Jouanigot, D. Karrenberg, P. Lothberg, and M. Terpstra. </author> <title> Representation of IP Routing Policies in the RIPE Database. </title> <type> Technical Report ripe-81, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> February </month> <year> 1993. </year>
Reference-contexts: RPSL is extensible; new routing protocols and new protocol features can be introduced at any time. RPSL is a replacement for the current Internet policy specification language known as RIPE-181 [4] or RFC-1786 [5]. RIPE-81 <ref> [6] </ref> was the first language deployed in the Internet for specifying routing policies. It was later replaced by RIPE-181 [4]. Through operational use of RIPE-181 it has become apparent that certain policies cannot be specified and a need for an enhanced and more generalized language is needed.
Reference: [7] <author> R. Chandra, P. Traina, and T. Li. </author> <title> BGP Communities Attribute. Request for Comment RFC-1997, </title> <institution> Network Information Center, </institution> <month> August </month> <year> 1996. </year>
Reference-contexts: The dictionary defines two types: community elm and community list. community elm type is either a 4-byte unsigned integer, or one of the keywords no export or no advertise (defined in <ref> [7] </ref>), or Alaettinoglu et. al.
Reference: [8] <author> D. Crocker. </author> <title> Standard for the format of ARPA Internet text messages. Request for Comment RFC-822, </title> <institution> Network Information Center, </institution> <month> August </month> <year> 1982. </year>
Reference-contexts: For example, June 24, 1996 is represented as 19960624. hemail-addressi is as described in RFC-822 <ref> [8] </ref>. hdns-namei is as described in RFC-1034 [16]. hnic-handlei is a uniquely assigned identifier [13] used by routing, address allocation, and other registries to unambiguously refer to contact information. person and role classes map NIC handles to actual person names, and contact information. hfree-formi is a sequence of ASCII characters. hX-namei
Reference: [9] <author> V. Fuller, T. Li, J. Yu, and K. Varadhan. </author> <title> Classless Inter-Domain Routing (CIDR): an Address Assignment and Aggregation Strategy, </title> <year> 1993. </year>
Reference-contexts: AS3561:AS-PEERS action pref = 20; accept community.contains (-3561,80-) import: from AS3561:AS-PEERS action pref = 20; accept community.contains (-3561,70-) import: from AS3561:AS-PEERS action pref = 0; accept ANY 8 Advanced route Class 8.1 Specifying Aggregate Routes The components, aggr-bndry, aggr-mtd, export-comps, inject, and holes attributes are used for specifying aggregate routes <ref> [9] </ref>. A route object specifies an aggregate route if any of these attributes, with the exception of inject, is specified. The origin attribute for an aggregate route Alaettinoglu et. al. <p> If &lt;protocol&gt; is omitted, it defaults to any protocol. &lt;filter&gt; implicitly contains an "AND" term with the more specifics of the aggregate so that only the component routes are selected. If the keyword ATOMIC is used, the aggregation is done atomically <ref> [9] </ref>. If a &lt;filter&gt; is not specified it defaults to more specifics. If the components attribute is missing, all more specifics without the ATOMIC keyword is used. route: 128.8.0.0/15 origin: AS1 components: &lt;^AS2&gt; route: 128.8.0.0/15 origin: AS1 components: protocol BGP -128.8.0.0/16^+- protocol OSPF -128.9.0.0/16^+- paths starting with AS2 are aggregated.
Reference: [10] <author> D. Karrenberg and T. Bates. </author> <title> Description of Inter-AS Networks in the RIPE Routing Registry. </title> <type> Technical Report RIPE-104, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: Sets of ASes and routes can be defined using the "as-set " and "route-set " classes. The "dictionary" class provides the extensibility to the language. The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents <ref> [4, 11, 14, 10, 3] </ref> and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. <p> The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents [4, 11, 14, 10, 3] and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents <ref> [11, 14, 10, 3] </ref> as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document [2]. Alaettinoglu et. al.
Reference: [11] <author> D. Karrenberg and M. Terpstra. </author> <title> Authorisation and Notification of Changes in the RIPE Database. </title> <type> Technical Report ripe-120, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Sets of ASes and routes can be defined using the "as-set " and "route-set " classes. The "dictionary" class provides the extensibility to the language. The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents <ref> [4, 11, 14, 10, 3] </ref> and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. <p> The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents [4, 11, 14, 10, 3] and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents <ref> [11, 14, 10, 3] </ref> as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document [2]. Alaettinoglu et. al. <p> A provider, before he/she can create RPSL objects, first needs to create a mntner object. The attributes of the mntner class are shown in Figure 1. The mntner class was first described in <ref> [11] </ref>.
Reference: [12] <author> B. W. Kernighan and D. M. Ritchie. </author> <title> The C Programming Language. </title> <publisher> Prentice-Hall, </publisher> <year> 1978. </year>
Reference-contexts: In the first form, the type defined is either of the types &lt;type-1&gt; through &lt;type-N&gt; (analogous to unions in C <ref> [12] </ref>). In the second form, the type defined is a list type where the list elements are of &lt;type&gt; and the list contains at least &lt;min elems&gt; and at most &lt;max elems&gt; elements. The size specification is optional.
Reference: [13] <author> D. Kessens, W. Woeber, and D. Conrad. </author> <title> RIDE referencing. Internet Draft draft-kessens-ride-referencing-00.txt, </title> <institution> Network Information Center, </institution> <month> August </month> <year> 1997. </year>
Reference-contexts: For example, June 24, 1996 is represented as 19960624. hemail-addressi is as described in RFC-822 [8]. hdns-namei is as described in RFC-1034 [16]. hnic-handlei is a uniquely assigned identifier <ref> [13] </ref> used by routing, address allocation, and other registries to unambiguously refer to contact information. person and role classes map NIC handles to actual person names, and contact information. hfree-formi is a sequence of ASCII characters. hX-namei is a name of an object of type X.
Reference: [14] <author> A. Lord and M. Terpstra. </author> <title> RIPE Database Template for Networks and Persons. </title> <type> Technical Report ripe-119, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Sets of ASes and routes can be defined using the "as-set " and "route-set " classes. The "dictionary" class provides the extensibility to the language. The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents <ref> [4, 11, 14, 10, 3] </ref> and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents [11, 14, 10, 3] as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. <p> The "inet-rtr " class is used to specify routers. Many of these classes were originally defined in earlier documents [4, 11, 14, 10, 3] and have all been enhanced. This document is self-contained. However, the reader is encouraged to read RIPE-181 [5] and the associated documents <ref> [11, 14, 10, 3] </ref> as they provide significant background as to the motivation and underlying principles behind RIPE-181 and consequently, RPSL. For a tutorial on RPSL, the reader should read the RPSL applications document [2]. Alaettinoglu et. al. <p> Even though it does not describe routing policy, we still describe it here briefly since many policy objects make reference to person objects. The person class was first described in <ref> [14] </ref>. Attribute Value Type person hfree-formi mandatory, single-valued nic-hdl hnic-handlei mandatory, single-valued, class key address hfree-formi mandatory, multi-valued phone see description in text mandatory, multi-valued fax-no same as phone optional, multi-valued e-mail hemail-addressi mandatory, multi-valued The attributes of the person class are shown in Figure 3.
Reference: [15] <author> A. M. R. Magee. </author> <title> RIPE NCC Database Documentation. </title> <type> Technical Report RIPE-157, </type> <institution> RIPE, RIPE NCC, </institution> <address> Amsterdam, Netherlands, </address> <month> May </month> <year> 1997. </year> <note> Alaettinoglu et. al. Expires May 17, 1998 [Page 49] Internet Draft RPSL November 17, </note> <year> 1997 </year>
Reference-contexts: RPSL is object oriented; that is, objects contain pieces of policy and administrative information. These objects are registered in the Internet Routing Registry (IRR) by the authorized organizations. The registration process is beyond the scope of this document. Please refer to <ref> [1, 15, 2] </ref> for more details on the IRR. In the following sections, we present the classes that are used to define various policy and administrative objects. The "mntner " class defines entities authorized to add, delete and modify a set of objects. <p> The mntner class also specifies what entities can create, delete and update other objects. These classes do not specify routing policies and each registry may have different or additional requirements on them. Here we present the common denominator for completeness which is the RIPE database implementation <ref> [15] </ref>. Please consult your routing registry for the latest specification of these classes and attributes. 3.1 mntner Class The mntner class defines entities that can create, delete and update RPSL objects. A provider, before he/she can create RPSL objects, first needs to create a mntner object.
Reference: [16] <author> P. V. Mockapetris. </author> <title> Domain names concepts and facilities. Request for Comment RFC-1034, </title> <institution> Network Information Center, </institution> <month> November </month> <year> 1987. </year>
Reference-contexts: For example, June 24, 1996 is represented as 19960624. hemail-addressi is as described in RFC-822 [8]. hdns-namei is as described in RFC-1034 <ref> [16] </ref>. hnic-handlei is a uniquely assigned identifier [13] used by routing, address allocation, and other registries to unambiguously refer to contact information. person and role classes map NIC handles to actual person names, and contact information. hfree-formi is a sequence of ASCII characters. hX-namei is a name of an object of
Reference: [17] <author> Y. Rekhter. </author> <title> Inter-Domain Routing Protocol (IDRP). </title> <journal> Journal of Internetworking Research and Experience, </journal> <volume> 4 </volume> <pages> 61-80, </pages> <year> 1993. </year>
Reference-contexts: An AS-path policy filter matches the set of routes which traverses a sequence of ASes matched by the AS-path regular expression. A router can check this using the AS PATH attribute in the Border Gateway Protocol [18], or the RD PATH attribute in the Inter-Domain Routing Protocol <ref> [17] </ref>. Alaettinoglu et. al. Expires May 17, 1998 [Page 21] Internet Draft RPSL November 17, 1997 AS-path Regular Expressions are POSIX compliant regular expressions over the alphabet of AS numbers. The regular expression constructs are as follows: ASN where ASN is an AS number.
Reference: [18] <author> Y. Rekhter and T. Li. </author> <title> A Border Gateway Protocol 4 (BGP-4). Request for Comment RFC-1771, </title> <institution> Network Information Center, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: An AS-path policy filter matches the set of routes which traverses a sequence of ASes matched by the AS-path regular expression. A router can check this using the AS PATH attribute in the Border Gateway Protocol <ref> [18] </ref>, or the RD PATH attribute in the Inter-Domain Routing Protocol [17]. Alaettinoglu et. al. Expires May 17, 1998 [Page 21] Internet Draft RPSL November 17, 1997 AS-path Regular Expressions are POSIX compliant regular expressions over the alphabet of AS numbers.
Reference: [19] <author> C. Villamizar, R. Chandra, and R. Govindan. </author> <title> BGP Route Flap Damping. Internet Draft draft-ietf-idr-route-damp-00, </title> <institution> Network Information Center, </institution> <month> October </month> <year> 1997. </year>
Reference-contexts: The mandatory asno option is the AS number of the peer router. The optional flap damp option instructs the router to damp route flaps <ref> [19] </ref> when importing routes from the peer router. It can be specified with or without parameters. If parameters are missing, they default to: flap_damp (1000, 2000, 750, 900, 900, 20000) That is, a penalty of 1000 is assigned at each route flap, the route is suppressed when penalty reaches 2000.
References-found: 19

