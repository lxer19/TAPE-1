URL: http://www.cs.umn.edu/Users/dept/users/du/papers/cluster.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: Cluster Placement: A Data Placement Scheme for A Mass Storage System of Video-On-Demand Servers  
Author: Horng-Juing Lee and David Du 
Keyword: Multimedia, Video on demand, Mass storage system, Disk array, Data Placement.  
Address: Minneapolis, MN 55455  
Affiliation: Distributed Multimedia Center 1 Dept. of Computer Science University of Minnesota  
Abstract: The retrieval process of a continuous media is considered as a periodic request which each subrequest retrieves a block of data. The next data block has to be ready before the display of the current data block is completed. The size of data block, called buffer size, along with the access time of the data block then determine the number of such requests that can be supported. This implies that to reduce access time, it can either decrease the required buffer size and/or increase the number of retrieval processes. This paper addresses the issue of reducing access time from data placement perspective. We propose a data placement scheme called Cluster Placement for a mass storage system of Video-On-Demand (VOD) servers. The cluster placement divides disk cylinders into equal-size clusters and stores video data across clusters. Retrieval processes are synchronized such that a batch of subrequests are within a cluster range. However, the cluster accessed by the current batch of subrequests may different from the one accessed by the next batch. The range of disk seek operations for a batch of subrequests can then be limited within a cluster range compared to the whole disk area in the normal case. Consequently, reduces the disk access time. We identify several design issues associated with the cluster placement scheme; one important issue is the relationship between underlying disk scheduling policies with video placement schemes. We illustrated the effectiveness of the proposed cluster placement by applying NTSC video quality into an array of eight disks under FIFO, C-SCAN, and GSS disk scheduling schemes. The analytic result shows that the proposed cluster placement can reduce the required buffer size from 3% to 40% when compared to a contiguous placement. We also conducted an experiment on SGI Onyx system which connected to a level-3 RAID (Redundant Array of Inexpensive Disks). The result shows that the proposed cluster placement can reduce buffer size up to 25% or support one more retrieval process when compared to the contiguous placement. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Dan A., Sitaram D., Shahabuddin P., </author> <title> "Scheduling Policies for an On-Demand Video Server with Batching", </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <year> 1994, </year> <pages> pp 15-23. </pages>
Reference: [2] <author> Ghandeharizadeh D., Ramos L., </author> <title> "Continuous Retrieval of Multimedia Data Using Parallelism", </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> vol. 5, no. 4, </volume> <month> August </month> <year> 1993, </year> <pages> pp 658-669. </pages>
Reference-contexts: Ghandeharizadeh and Ramous used the replication approach to provide parallelism for continuous retrieval of video streams <ref> [2] </ref>. Lougher and Shepherd designed and implemented 3 a file server specially for continuous media [5]. The system considered temporal relations between media streams and clustered media streams which are recorded at the same time. For each stream, it is stored contiguously.
Reference: [3] <author> Hsieh J., Lin M., Liu J.C.L., Du D.H.C., </author> <title> Ruwart T.M., "Performance of A Mass Storage System for Video-On-Demand", </title> <journal> IEEE INFOCOM'95, </journal> <month> April </month> <year> 1995. </year> <month> 28 </month>
Reference-contexts: 1 Introduction A VOD server consists of three components: an interface to a mass storage system, a video processing unit, and a network interface <ref> [3] </ref>. The interface to a storage system supports concurrent I/O accesses and provides guaranteed bandwidth. The video processing unit requires fast processing speed, large memory space, and an enormous system bus bandwidth to handle in/out traffic between the storage system and the network. <p> The access time of a read request then becomes the longest access time among all A fi D sub-requests. One example of the hierarchical RAIDs system used in a VOD server has been reported in <ref> [3] </ref> where a utility called logical volume in SGI ONYX manages 32 level-3 RAIDs. Each level-3 RAID is controlled by a Ciprico controller. Each level-3 RAID consists of 8 data disks and one parity-check disk. <p> As pointed out by [10], a larger block size can reduce the impact of disk overheads. However, in the meantime, a larger block consumes more main memory. The buffer size may also bounded by the constraints of a underlying operating system <ref> [3] </ref>. The study of the block size trade-off is one of the major concerns in this paper and will be discussed in Section 5. <p> The figures show that more clusters means longer initial response time in the worst case. 6 Experiment The experiment measures the effectiveness of the cluster placement scheme in a real computing environment. The experiment is a modified version of the one reported in <ref> [3] </ref>. We conducted the experiment on SGI Onyx machine with one RAID 3 disk array. Onyx machines are characterized as shared memory symmetric multiprocessing computer architectures. In our Onyx configuration, we installed 20 processors (MIPS R4400 150 MHz) with 4-way interleaving 768 MBytes RAM.
Reference: [4] <author> Liu J., Du D.H.C., Schnepf J., </author> <title> "Supporting Random Access on the Retrieval of Digital Contin--uous media", </title> <journal> Journal of Computer Communication: Special Issue on Multimedia storage and Databases, </journal> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: The analysis is based on the cluster placement scheme shown in Figure 2 and 3 (a). Table 1 lists symbols and their definitions used in the analysis. 5.1 FIFO We assume two-buffer scheme is used; one buffer holds data frames for display and the other one for prefetch <ref> [4] </ref>. 5.1.1 Analysis For serving the first request of a set of N user requests, disk heads must first move from previous cluster to the cluster which the first request asked.
Reference: [5] <author> Lougher P.K., Shepherd D., </author> <title> "The Design of a Storage Server for Contiguous Media", </title> <journal> Computer Journal, </journal> <volume> vol. 36 no. 1, </volume> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: A mass storage system of a Video-On-Demand (VOD) server needs to support the retrieval of video data to satisfy the continuous playback requirement (i.e., jitter-free playback). Many issues have been investigated including disk scheduling schemes and multiple disks architecture to support jitter-free playback <ref> [8, 5, 12, 14] </ref>. Most of the previous work assumed either a contiguous placement scheme or no data placement scheme (i.e., randomly placed). In this paper, we study the impact of the placement scheme in terms of the buffer size and number of users that can be supported. <p> Ghandeharizadeh and Ramous used the replication approach to provide parallelism for continuous retrieval of video streams [2]. Lougher and Shepherd designed and implemented 3 a file server specially for continuous media <ref> [5] </ref>. The system considered temporal relations between media streams and clustered media streams which are recorded at the same time. For each stream, it is stored contiguously. Rangan and Vin proposed a storage pattern to guarantee continuous retrieval of media streams [8].
Reference: [6] <author> Oyang Y-J, Lee M-H, Wen C-H, Cheng C-Y, </author> <title> "Design of Multimedia Storage Systems for On-Demand Playback", </title> <booktitle> Proc. Data Engineering , 1995, </booktitle> <pages> pp 457-465. </pages>
Reference-contexts: Experiment setup and results are reported in Section 6. Section 7 concludes the paper. 2 Related Work Oyang and et al. proposed a design procedure for multimedia storage system <ref> [6] </ref>. They also proposed a data placement scheme to divides disk space into regions and place video across regions. The placement scheme is fixed by placing data from region zero to region N 1 (assume disk space is divided into N regions) and then region N 1 to region zero. <p> They also did not address placement issues within a region. Furthermore, no empirical data is provided. In summary, the cluster placement proposed in this paper provides a more generic aspect of data placement and the approach proposed in <ref> [6] </ref> can be considered as a special case of the cluster placement. Ghandeharizadeh and Ramous used the replication approach to provide parallelism for continuous retrieval of video streams [2]. Lougher and Shepherd designed and implemented 3 a file server specially for continuous media [5].
Reference: [7] <author> Paterson D.A., Gibson G., Katz R.H., </author> <title> "A Case for Redundant Arrays of Inexpensive Disks (RAID)", </title> <booktitle> Proc. SIGMOD , 1988. </booktitle>
Reference-contexts: In this paper, we discuss the data placement issues on disk devices. It is commonly agreed that a single disk cannot provide the required bandwidth and capacity needed by applications which manipulate continuous media. An alternative is to use the Redundant Arrays of Inexpensive Disks (RAID) architecture <ref> [7] </ref>. An array of fast, small form-factor, low-power drives can provide larger capacity and higher bandwidth. Five levels of RAID architectures have been proposed which differ on the parity-checking scheme and data stripping scheme [7]. <p> An alternative is to use the Redundant Arrays of Inexpensive Disks (RAID) architecture <ref> [7] </ref>. An array of fast, small form-factor, low-power drives can provide larger capacity and higher bandwidth. Five levels of RAID architectures have been proposed which differ on the parity-checking scheme and data stripping scheme [7]. One feature of the RAID system is that it can be considered as an array of synchronized disks where data is stripped over all data disks. Therefore, a read request to a RAID will be transformed by the RAID controller into concurrent read operations to the constituent physical disks. <p> However, not all the disks present such characteristics. Some disks suffers longer seek time even the seek distance is shorter when the seek distance is within some range <ref> [7] </ref>. Therefore, the characteristics of the disk seek operation has to be included as a design factor. Factor 2: Required buffer size: It is commonly agreed that using larger buffer size will support more retrieval requests.
Reference: [8] <author> Rangan P.V., Vin H.M., </author> <title> "Designing File Systems for Digital Video and Audio", </title> <journal> Operating Systems Review, </journal> <volume> vol. 25, no. 5, </volume> <year> 1991, </year> <pages> pp 69-79. </pages>
Reference-contexts: A mass storage system of a Video-On-Demand (VOD) server needs to support the retrieval of video data to satisfy the continuous playback requirement (i.e., jitter-free playback). Many issues have been investigated including disk scheduling schemes and multiple disks architecture to support jitter-free playback <ref> [8, 5, 12, 14] </ref>. Most of the previous work assumed either a contiguous placement scheme or no data placement scheme (i.e., randomly placed). In this paper, we study the impact of the placement scheme in terms of the buffer size and number of users that can be supported. <p> In other words, the prefetched data must be available before the current buffer is completely consumed. Therefore, a designer must, for example, consider the worst case seek time overheads incurred between retrievals in Fist-In-First-Out (FIFO) disk scheduling <ref> [8] </ref>. Disk retrieval time is increased, as a result, a larger buffer space is desired to compensate the longer seek time. The cluster placement divides disk cylinders into equal-size clusters. A cluster is a disk area containing a set of consecutive disk cylinders. <p> The system considered temporal relations between media streams and clustered media streams which are recorded at the same time. For each stream, it is stored contiguously. Rangan and Vin proposed a storage pattern to guarantee continuous retrieval of media streams <ref> [8] </ref>. The model is related to disk and device characteristics to the playback requirements of media streams. Tobagi and etc. described a disk array management for video files [12]. They addressed the issues of disk scheduling, memory requirement, and start-up latency.
Reference: [9] <author> Rangan P.V., Vin H.M., </author> <title> "Efficient Storage Techniques for Digital Continuous Multimedia", </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> vol. 5, no. 4, </volume> <month> August </month> <year> 1993, </year> <pages> pp 564-573. </pages>
Reference: [10] <author> Reddy A.L.N., </author> <title> Wyllie J.C., "I/O Issues in a Multimedia System", </title> <journal> IEEE Computer, </journal> <volume> vol. 27 no. 3 1994, </volume> <pages> pp 69-74. </pages>
Reference-contexts: For instance, for any video file must wait for 3 service cycles before being started. * Issue 2: Block size: A block of data represents the request size of a disk read operation. Its value is used to partition a video file. As pointed out by <ref> [10] </ref>, a larger block size can reduce the impact of disk overheads. However, in the meantime, a larger block consumes more main memory. The buffer size may also bounded by the constraints of a underlying operating system [3].
Reference: [11] <author> Ruemmler C., Wilkes J., </author> <title> "An Introduction to Disk Drive Modeling", </title> <journal> IEEE Computer, </journal> <volume> vol. 27 no. 3 1994, </volume> <pages> pp 17-28. </pages>
Reference-contexts: The playback rate is 30 fps (frames per second), therefore, a display duration for a frame (i.e., T frame playback ) is 33.33 ms. Table 3 lists the characteristics of a HP 97560 disk <ref> [11] </ref>. Therefore, for transfer a frame of data (i.e., 100Kbits), it takes 100Kbits R transfer = 4.25 ms. it is a nonlinear relation. It means dividing a disk area into 2 clusters does not cut the disk seek time in half.
Reference: [12] <author> Tobagi F.A., Pang J., Baird R., Gang M., </author> <title> "Streaming RAID: A Disk Array Management System for Video Files", </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <year> 1993, </year> <pages> pp 393-400. </pages>
Reference-contexts: A mass storage system of a Video-On-Demand (VOD) server needs to support the retrieval of video data to satisfy the continuous playback requirement (i.e., jitter-free playback). Many issues have been investigated including disk scheduling schemes and multiple disks architecture to support jitter-free playback <ref> [8, 5, 12, 14] </ref>. Most of the previous work assumed either a contiguous placement scheme or no data placement scheme (i.e., randomly placed). In this paper, we study the impact of the placement scheme in terms of the buffer size and number of users that can be supported. <p> For each stream, it is stored contiguously. Rangan and Vin proposed a storage pattern to guarantee continuous retrieval of media streams [8]. The model is related to disk and device characteristics to the playback requirements of media streams. Tobagi and etc. described a disk array management for video files <ref> [12] </ref>. They addressed the issues of disk scheduling, memory requirement, and start-up latency. However, they did not mention the kind of data placement scheme used in the paper. 3 Motivation and Models In this section, we describe the motivation.
Reference: [13] <author> Vin H., Rangan V., </author> <title> "Designing a Multiuser HDTV Storage Server", </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 11, no. 1, </volume> <month> Jan. </month> <year> 1993, </year> <pages> pp 153-164. </pages>
Reference: [14] <author> Yu P.S., Chen M.S., </author> <title> Kandlur D.D., "Grouped Sweeping Scheduling for DASD-based Multimedia Storage Management", </title> <journal> Multimedia Systems, </journal> <volume> vol. 1, no. 3, </volume> <year> 1993, </year> <pages> pp 99-109. 29 </pages>
Reference-contexts: A mass storage system of a Video-On-Demand (VOD) server needs to support the retrieval of video data to satisfy the continuous playback requirement (i.e., jitter-free playback). Many issues have been investigated including disk scheduling schemes and multiple disks architecture to support jitter-free playback <ref> [8, 5, 12, 14] </ref>. Most of the previous work assumed either a contiguous placement scheme or no data placement scheme (i.e., randomly placed). In this paper, we study the impact of the placement scheme in terms of the buffer size and number of users that can be supported. <p> The analysis is based on NTSC quality video and an array of eight disks under FIFO, C-SCAN, and GSS (Grouped Sweeping Scheduling) <ref> [14] </ref> disk scheduling schemes. The results showed that: 1. In FIFO scheme, the cluster placement can reduce the required buffer size up to 40% when compared to the contiguous placement. 2 2. <p> Different scheduling policies such as FIFO or C-SCAN can be applied here. 11 5 Analysis and Results We analyze the impact of the cluster placement under FIFO, C-SCAN, and GSS disk scheduling schemes <ref> [14] </ref>. The performance evaluation is based on two parameters: Number of Users Supported (N user ) and Buffer Size (B). For FIFO and C-SCAN schemes, we define the disk access models. For GSS, we adopt the disk access model proposed by Yu and et al. [14]. <p> and GSS disk scheduling schemes <ref> [14] </ref>. The performance evaluation is based on two parameters: Number of Users Supported (N user ) and Buffer Size (B). For FIFO and C-SCAN schemes, we define the disk access models. For GSS, we adopt the disk access model proposed by Yu and et al. [14]. We illustrate the effectiveness of the cluster placement by applying the characteristics of NTSC quality video and an array of eight disks into our analysis. The analysis is based on the cluster placement scheme shown in Figure 2 and 3 (a). <p> The cluster placement can reduce buffer size from 8.27% to 3.1% when compared to the contiguous scheme. 5.3 GSS We applied the cluster placement scheme into a disk scheduling scheme called Grouped Sweeping Scheduling (GSS) proposed by Yu and et al. <ref> [14] </ref>. The GSS provided a framework for minimizing buffer space. For n requests, they are divided into g groups. Groups are served in fixed order and requests within a group are served in SCAN scheme. <p> The number of buffers needed becomes n + d n g e. For FIFO, it needs n + 1 buffers. For SCAN, it needs 2 buffers for each request. Therefore, in the analysis, we consider total buffer requirements (in unit of track as proposed in <ref> [14] </ref>) instead of buffer size. 16 5.3.1 Numeric Results be supported. It shows that to support 40 users, GSS:Contiguous needs total buffer space of 640 tracks. The GSS:Cluster scheme needs buffer space of 400, 432, 480, 480, and 640 tracks in 32-, 16-, 8-, 4-, and 2-cluster schemes correspondingly.
References-found: 14

