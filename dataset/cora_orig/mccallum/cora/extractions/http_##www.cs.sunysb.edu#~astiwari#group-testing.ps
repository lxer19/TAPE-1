URL: http://www.cs.sunysb.edu/~astiwari/group-testing.ps
Refering-URL: http://www.cs.sunysb.edu/~astiwari/
Root-URL: http://www.cs.sunysb.edu
Title: GROUP TESTING  
Author: Ashish Tiwari 
Date: December 3, 1997  
Abstract: To find optimal algorithms for combinatorial group testing is difficult, and there are not many optimal results in the existing literature. There are no general constructions for the nonadaptive group testing problem that give a non trivial set of tests. Various bounds have been established for the number of tests required either combinatorially or by using probabilistic methods. In this report, some of the best known bounds for the problem are mentioned. Also, a construction of tests for the general nonadaptive group testing problem has been suggested. After that, the algorithm is slightly modified so that it becomes an adaptive group testing algorithm but the total number of possible tests doesn't increase much. This can be useful when we are optimizing over both the total number of tests that may be called and the number of tests that are called in any sample run. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Z. Du and F. K. Hwang. </author> <title> Combinatorial Group Testing and Applications. </title> <publisher> World Scientific Publishing, </publisher> <year> 1993. </year>
Reference-contexts: In the latter, a deterministic model is used and the goal usually is to minimize the number of tests under a worst case scenario. To find optimal algorithms for combinatorial group testing is difficult, and there are not many optimal results in the existing literature <ref> [1] </ref>. In fact the computational complexity of combinatorial group testing has not been determined. It is known that the problem belongs to the class PSPACE. 1 A prototype CGT problem is described as follows : Consider a set I of n items known to contain exactly d defectives. <p> Hence C j cannot be contained in that union. Clearly this is a very weak condition. There is no construction of tests for the nonadaptive group testing problem in literature that gives better results than the trivial identity matrix (i.e. test each item individually). It has been argued in <ref> [1] </ref> that an equireplicated pairwise balanced design is a bad idea. <p> This is a very simple construction and can be seen in <ref> [1] </ref>. 4.1 Lower Bounds Erdos, Frankl, and Furedi [3] proved the following lower bound for the num ber of tests required in a nonadaptive group testing problem : t (d; n) &gt; d (1 + o (1)) ln n Dyachkov and Rykov [4] obtained a better lower bound by a more
Reference: [2] <institution> See reference [19] in Ch 4 of [1] </institution>
Reference-contexts: The disjunct property allows easier decoding by noting that the components of a supercode code are exactly those code words which are contained in the supercode word. Applications of superimposed codes have been indicated in file retrieval, data communication and design of magnetic memory <ref> [2] </ref>. 3 Applications The primary biological application of group testing is for screening libraries of clones with hybridization probes. This is a step in constructing physical maps and for finding genes. Group testing started as an idea to do large scale blood testing economically.
Reference: [3] <institution> See reference [9] in Ch 4 of [1] </institution>
Reference-contexts: This is a very simple construction and can be seen in [1]. 4.1 Lower Bounds Erdos, Frankl, and Furedi <ref> [3] </ref> proved the following lower bound for the num ber of tests required in a nonadaptive group testing problem : t (d; n) &gt; d (1 + o (1)) ln n Dyachkov and Rykov [4] obtained a better lower bound by a more elaborate analysis. t (d; n) K d (1
Reference: [4] <institution> See reference [6] in Ch 4 of [1] </institution>
Reference-contexts: very simple construction and can be seen in [1]. 4.1 Lower Bounds Erdos, Frankl, and Furedi [3] proved the following lower bound for the num ber of tests required in a nonadaptive group testing problem : t (d; n) &gt; d (1 + o (1)) ln n Dyachkov and Rykov <ref> [4] </ref> obtained a better lower bound by a more elaborate analysis. t (d; n) K d (1 + o (1)) log n for d fixed and n approaching infinity.
Reference: [5] <institution> See reference [8] in Ch 4 of [1] 12 </institution>
Reference-contexts: For constant weight matrices, i.e., where each item occurs in the same number of tests, we have the following lower bound. t (d; n) ff log d where ff = dw=t &lt; 1 and w = constant weight. 4.2 Upper Bounds Dyachkov , Rykov and Rashad <ref> [5] </ref> obtained an asymtotic upper bound of t (d; n). d (1 + o (1)) log n where A d approaches 1 d log e (1 + o (1)) as d appraoches infinity.
References-found: 5

