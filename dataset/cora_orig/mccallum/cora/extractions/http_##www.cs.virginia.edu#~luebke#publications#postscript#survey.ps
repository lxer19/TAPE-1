URL: http://www.cs.virginia.edu/~luebke/publications/postscript/survey.ps
Refering-URL: http://www.cs.virginia.edu/~luebke/publications.html
Root-URL: http://www.cs.virginia.edu
Title: A Survey of Polygonal Simplification Algorithms  
Author: David Luebke 
Address: Chapel Hill  
Affiliation: Department of Computer Science University of North Carolina at  
Pubnum: UNC Technical Report TR97-045  
Abstract: 1. ABSTRACT 
Abstract-found: 1
Intro-found: 1
Reference: [Aliaga 97] <author> Aliaga, Daniel. </author> <title> SGI Performance Tips (Talk). </title> <note> For more information see: http://www.cs.unc.edu/~aliaga/IR-perf.html. </note>
Reference-contexts: Experiments on an SGI Onyx with InfiniteReality graphics, for example, indicate that Gouraud-shaded depth-buffered unlit triangles render two to three times faster in a display list than in a tightly optimized immediate mode display loop <ref> [Aliaga 97] </ref>. For these reasons view-dependent techniques seem unlikely to completely supplant view-independent techniques in the near future. 5.4 Geometry Compression A field closely related to polygonal simplification is geometry compression.
Reference: [Clark 76] <author> Clark, James. </author> <title> Hierarchical Geometric Models for Visible Surface Algorithms, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 19, No 10, </volume> <pages> pp 547-554. </pages>
Reference-contexts: As early as 1976 James Clark d e-scribed the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a co n-stant frame rate <ref> [Clark 76, Cosman 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution repr e-sentations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Cohen 96] <author> Cohen, Jon, A. Varshney, D. Manocha, G. Turk, H. Weber, P. Agarwal, F. Brooks, W. Wright. </author> <title> Simplification Envelopes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 30 (SIGGRAPH 96). </volume>
Reference-contexts: are perhaps the most likely models to have complex t o-pologies. 4.7 Simplification Envelopes Simplification envelopes, presented by Jonathan Cohen, Ami-tabh Varshney, Dinesh Manocha, Greg Turk, Hans Weber, Pankaj Agrawal, Frederick Brooks, and William Wright, provide a method of guaranteeing fidelity bounds while enforcing global as well as local topology <ref> [Cohen 96] </ref>. Simplification envelopes per se are more of a framework than an individual algorithm, and the authors of this paper present two examples of algorithms within this framework.
Reference: [Cosman 81] <author> Cosman, M., and R. Schumacker. </author> <title> System Strategies to Optimize CIG Image Content. </title> <booktitle> Proceedings Image II Conference (Scotsdale, </booktitle> <address> Arizona), </address> <year> 1981. </year>
Reference-contexts: As early as 1976 James Clark d e-scribed the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a co n-stant frame rate <ref> [Clark 76, Cosman 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution repr e-sentations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Deering 95] <author> Deering, Michael. </author> <title> Geometry Compression, </title> <journal> Computer Graphics, </journal> <volume> Vol. 29 (SIGGRAPH 95). </volume>
Reference-contexts: Deering introduced the first geometry compression algorithm for general 3-D polygonal models. His approach applies quantiz a-tion and lossy compression to attributes such as the position, normal, and color of vertices, achieving compression rates of 6-10:1 <ref> [Deering 95] </ref>. Taubin and Rossignac extend this idea by compressing the topological connectivity of polygons in the mesh. Decomposing the triangulated model into a tree of linear triangle strips allows significant compression of connectivity information, averaging roughly two bits per triangle [Taubin 96].
Reference: [Eck 95] <author> Eck, Matthias, T. DeRose, T. Duchamp, H. Hoppe, M. Louns-bery, W. Stuetzle. </author> <title> Multiresolution Analysis of Arbitrary Meshes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 29 (SIGGRAPH 95). </volume>
Reference-contexts: 97], independently developing a system similar in many ways to the Luebke-Erikson algorithm described above. 4.10 Multiresolution Analysis of Arbitrary Meshes This adaptive subdivision algorithm by Matthias Eck, Tony DeRose, Tom Duchamp, Hughes Hoppe, Michael Lounsbery, and Werner Stuetzle uses a compact wavelet representation to guide the recursive subdivision process <ref> [ Eck 95] </ref>. By adding or subtracting wavelet coefficients the algorithm can smoothly interpolate between levels of detail. The algorithm provides fidelity-based simplification by using enough wavelet coeff i-cients to guarantee that the simplified surface lies within a user-specified distance of the original model.
Reference: [Garland 94] <author> Garland, Michael, and P. Heckbert. </author> <title> Multiresolution Modeling for Fast Rendering. </title> <booktitle> Proceedings of Graphics Interface 94 (1994). </booktitle>
Reference-contexts: As a starting point for such a metric, they suggest the sum of the squared distances in RGB color space between corresponding pixels. <ref> [Garland 94] </ref>. 5.3 View-dependence View-dependent algorithms are quite new to the field of general polygonal simplification, and possess some definite advantages over view-independent approaches. View-independent methods are less general, making some implicit assumptions regarding object size. To begin with, physically large objects must be subdivided.
Reference: [He 95] <author> Taosong He, L. Hong, A. Kaufman, A. Varshney, and S. Wang. </author> <title> Voxel-Based Object Simplification. </title> <booktitle> Proceedings Visualization 95, </booktitle> <publisher> IEEE Computer Society Press (Atlanta, </publisher> <address> GA), </address> <year> 1995, </year> <pages> pp. 296-303. </pages>
Reference: [Hoppe 93] <author> Hoppe, Hughes. </author> <title> Mesh Optimization, </title> <journal> Computer Graphics, </journal> <volume> Vol. 27 (SIGGRAPH 93). </volume>
Reference-contexts: Writing a robust system based on simplif i-cation envelopes is a substantial undertaking. 4.8 Mesh Optimization This paper by Hughes Hoppe, Tony DeRose, Tom Duchamp, John McDonald, and Werner Stuetzle, describes a complex sampling approach, which evolved out of the authors work on surface reconstruction of laserscanned datasets <ref> [Hoppe 93] </ref>. Surface reconstruction is the problem of creating a three-dimensional mesh from a collection of sample points. Mesh optimization, as the name suggests, treats simplification as an optimization problem.
Reference: [Hoppe 96] <author> Hoppe, Hughes. </author> <title> Progressive Meshes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 30 (SIGGRAPH 96). </volume>
Reference-contexts: Second, a recursive subdiv i-sion of the base model may not be able to capture the exact geometry of the original model, especially around sharp corners and creases in the mesh <ref> [Hoppe 96] </ref>. Decimation techniques iteratively remove vertices or faces from the mesh, retriangulating the resulting hole after each step. This process continues until it reaches a user-specified degree of simplification. <p> Among the contributions of this paper was the introduction of a method to smoothly interpolate between different levels of detail, a process for which Hughes Hoppe has since used the term geomorph <ref> [Hoppe 96] </ref>. 4.3 Multi-Resolution 3D Approximations for Rendering Complex Scenes This vertex-merging algorithm by Jarek Rossignac and Paul Borrel is one of the few schemes that neither requires nor pr e-serves valid topology. <p> The fidelity of the resulting simplifications is quite high for smooth organic forms, but the algorithm has difficulty capturing sharp features in the original model unless the features happen to fall along a division in the base mesh <ref> [Hoppe 96] </ref>. 4.11 Surface Simplification Using Quadric Error Metrics This recent view-independent vertex-merging algorithm by M i-chael Garland and Paul Heckbert strikes perhaps the best ba lance yet between speed, fidelity, and robustness. <p> The simplicity and robust nature of vertex merging no doubt play a large part in this trend. Earlier work by Hoppe and Ronfard has probably played a part as well by demonstrating that high-quality simplification is possible with an algorithm based entirely on edge collapses <ref> [Hoppe 96, Ronfard 96] </ref>. Re presentations such as progressive meshes and the HDS vertex tree provide a very general framework for experimenting with diffe rent simplification strategies, including the relatively new view-dependent criteria. <p> These algorithms transmit a coarse version of the data first, followed by a stream of refin e-ments, which the receiving process uses to reconstruct the orig i-nal. The progressive mesh representation is by design well suited for progressive transmission of polygonal models <ref> [Hoppe 96] </ref>. If the mainstream debut of 3-D graphics occurs on the scale of the WWW, polygonal simplification algorithms may well be measured by their ability to support compression and progre s-sive transmission. 6.
Reference: [Hoppe 97] <author> Hoppe, Hughes. </author> <title> View-Dependent Refinement of Progressive Meshes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 31 (SIGGRAPH 97). </volume>
Reference-contexts: Hoppe also describes how to model some of these attributes in the energy function, allowing normals, color, and material ide n-tifiers to guide the simplification process. Finally, Hoppe has recently extended progressive meshes to perform view-dependent simplification at run time <ref> [Hoppe 97] </ref>, independently developing a system similar in many ways to the Luebke-Erikson algorithm described above. 4.10 Multiresolution Analysis of Arbitrary Meshes This adaptive subdivision algorithm by Matthias Eck, Tony DeRose, Tom Duchamp, Hughes Hoppe, Michael Lounsbery, and Werner Stuetzle uses a compact wavelet representation to guide the recursive subdivision process <p> ISSUES AND TRENDS 5.1 Mechanism The field of polygonal simplification appears to be converging on vertex merging as the underlying mechanism for polygon reduction. All four surface simplification papers in the SI G-GRAPH 97 conference, for example, present algorithms based on merging vertices <ref> [Hoppe 97, Luebke 97, Garland 97, Popovic 97] </ref>. The simplicity and robust nature of vertex merging no doubt play a large part in this trend. <p> Again, view-dependent techniques can be designed to automatically merge objects without requiring the user to explicitly establish a hierarchy of objects to be merged [Luebke 97]. Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes <ref> [Hoppe 97, Luebke 97, Xia 96] </ref>, preservation of specular highlights [Xia 96], and a g-gressive simplification of backfacing regions [Hoppe 97]. View-independent algorithms can address none of these criteria. However, view-dependence also suffers some significant drawbacks. View-dependent methods inherently involve more runtime computation than view-independent approaches. <p> Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes [Hoppe 97, Luebke 97, Xia 96], preservation of specular highlights [Xia 96], and a g-gressive simplification of backfacing regions <ref> [Hoppe 97] </ref>. View-independent algorithms can address none of these criteria. However, view-dependence also suffers some significant drawbacks. View-dependent methods inherently involve more runtime computation than view-independent approaches. When the CPU rather than the graphics subsystem is the limiting factor in rendering performance, view-dependent approaches become less attractive.
Reference: [Lorenson 87] <author> Lorenson, William, and H. Cline. </author> <title> Marching Cubes: A High Resolution 3D Surface Construction Algorithm, </title> <journal> Computer Graphics, </journal> <volume> Vol. 21 (SIGGRAPH 87). </volume>
Reference-contexts: Schroeder, Jonathan A. Zarge, and William E. Lorenson [Schroeder 92] coined the term decimation for iterative removal of vertices. Schroeders decimation scheme is designed to operate on the output of the Marching Cubes algorithm for extracting isosurfaces from volumetric data <ref> [Lorenson 87] </ref>, and is still the most commonly used algorithm for this purpose. Marching Cubes output is often heavily overtesselated, with coplanar regions divided into many more polygons than necessary, and Schroeders algorithm excels at removing this redundant geometry.
Reference: [Low 97] <author> Low, Kok-Lim, and T.S. Tan. </author> <title> Model Simplification Using Vertex Clustering. </title> <booktitle> In 1997 Symposium on Interactive 3D Graphics (1995), ACM SIGGRAPH, </booktitle> <pages> pp. 75-82. </pages>
Reference-contexts: only way to predict how many triangles an LOD will have using a specified grid resolution is to perform the simplification. 4.4 Model Simplification Using Vertex Clus tering Kok-Lim Low and Tiow-Seng Tan have carefully examined the Rossignac-Borrel algorithm and invented a revised version that addresses some of these shortcomings <ref> [Low 97] </ref>. Observing that the spatial binning invoked by the 3-D grid is simply a form of vertex clustering, Low and Tan introduce a different clustering approach they call floating-cell clustering.
Reference: [Luebke 97] <author> Luebke, David, and C. Erikson. </author> <title> View-Dependent Simplification of Arbitrary Polygonal Environments, </title> <journal> Computer Graphics, </journal> <volume> Vol. 31 (SIGGRAPH 97). </volume>
Reference-contexts: This obse r--vation has been made elsewhere and forms the basis for the Luebke-Erikson algorithm, described next. 4.5 View-Dependent Simplification of Arbi trary Polygonal Environments This vertex-merging algorithm by David Luebke and Carl Eri k-son is one of the first to provide interactive view-dependent simplification of arbitrary polygonal scenes <ref> [Luebke 97] </ref>. The algorithm, referred to as Hierarchical Dynamic Simplification or HDS, was designed for visualization of very complex CAD models and, like the Rossignac-Borrel approach, neither requires nor preserves manifold topology. <p> ISSUES AND TRENDS 5.1 Mechanism The field of polygonal simplification appears to be converging on vertex merging as the underlying mechanism for polygon reduction. All four surface simplification papers in the SI G-GRAPH 97 conference, for example, present algorithms based on merging vertices <ref> [Hoppe 97, Luebke 97, Garland 97, Popovic 97] </ref>. The simplicity and robust nature of vertex merging no doubt play a large part in this trend. <p> Again, view-dependent techniques can be designed to automatically merge objects without requiring the user to explicitly establish a hierarchy of objects to be merged <ref> [Luebke 97] </ref>. Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes [Hoppe 97, Luebke 97, Xia 96], preservation of specular highlights [Xia 96], and a g-gressive simplification of backfacing regions [Hoppe 97]. View-independent algorithms can address none of these criteria. <p> Again, view-dependent techniques can be designed to automatically merge objects without requiring the user to explicitly establish a hierarchy of objects to be merged [Luebke 97]. Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes <ref> [Hoppe 97, Luebke 97, Xia 96] </ref>, preservation of specular highlights [Xia 96], and a g-gressive simplification of backfacing regions [Hoppe 97]. View-independent algorithms can address none of these criteria. However, view-dependence also suffers some significant drawbacks. View-dependent methods inherently involve more runtime computation than view-independent approaches.
Reference: [Popovic 97] <author> Popovic, Jovan, and H. Hoppe. </author> <title> Progressive Simplicial Complexes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 31 (SIGGRAPH 97). </volume>
Reference-contexts: ISSUES AND TRENDS 5.1 Mechanism The field of polygonal simplification appears to be converging on vertex merging as the underlying mechanism for polygon reduction. All four surface simplification papers in the SI G-GRAPH 97 conference, for example, present algorithms based on merging vertices <ref> [Hoppe 97, Luebke 97, Garland 97, Popovic 97] </ref>. The simplicity and robust nature of vertex merging no doubt play a large part in this trend.
Reference: [Ronfard 96] <author> Ronfard, Rmi, and J. Rossignac. </author> <title> Full-range Approximation of Triangulated Polyhedra, </title> <journal> Computer Graphics Forum, </journal> <volume> Vol. 15 (Eurographics 96). </volume>
Reference-contexts: The simplicity and robust nature of vertex merging no doubt play a large part in this trend. Earlier work by Hoppe and Ronfard has probably played a part as well by demonstrating that high-quality simplification is possible with an algorithm based entirely on edge collapses <ref> [Hoppe 96, Ronfard 96] </ref>. Re presentations such as progressive meshes and the HDS vertex tree provide a very general framework for experimenting with diffe rent simplification strategies, including the relatively new view-dependent criteria.
Reference: [Rossignac 92] <author> Rossignac, Jarek, and P. Borrel. </author> <title> Multi-Resolution 3D Approximations for Rendering Complex Scenes, pp. 455-465 in Geometric Modeling in Computer Graphics, </title> <publisher> Springer-Verlag, </publisher> <editor> Eds. B. Fal-cidieno and T.L. Kunii, </editor> <address> Genova, Italy, 6/28/93-7/2/93. </address> <note> Also published as IBM Research Report RC17697 (77951) 2/19/92. </note>
Reference: [Schroeder 92] <author> Schroeder, William, J. Zarge and W. Lorenson, </author> <title> Decimation of Triangle Meshes, </title> <journal> Computer Graphics, </journal> <volume> Vol. 26 (SIGGRAPH 92) </volume>
Reference-contexts: In addition, a topology-preserving approach r e-quires a mesh with valid topology to begin with. Some a l-gorithms, such as <ref> [Schroeder 92] </ref> ignore regions in the mesh with invalid local topology, leaving the regions u n simplified, while others simply crash. Topology-modifying algorithms do not necessarily preserve local or global topology. <p> Schroeder, Jonathan A. Zarge, and William E. Lorenson <ref> [Schroeder 92] </ref> coined the term decimation for iterative removal of vertices. Schroeders decimation scheme is designed to operate on the output of the Marching Cubes algorithm for extracting isosurfaces from volumetric data [Lorenson 87], and is still the most commonly used algorithm for this purpose.
Reference: [Taubin 96] <author> Taubin, Gabriel, and J. Rossignac. </author> <title> Geometric Compres--sion through Topological Surgery, </title> <note> IBM Research Technical Report RC-20340 (1996). </note>
Reference-contexts: Taubin and Rossignac extend this idea by compressing the topological connectivity of polygons in the mesh. Decomposing the triangulated model into a tree of linear triangle strips allows significant compression of connectivity information, averaging roughly two bits per triangle <ref> [Taubin 96] </ref>.
Reference: [Taubin 97] <author> Taubin, Gabriel (Chair). </author> <title> VRML Compressed Binary Format Working Group Home Page. </title> <note> For more information see: http://www.vrml.org/WorkingGroups/vrml-cbf/cbfwg.html. </note>
Reference-contexts: The Taubin-Rossignac algorithm has since been incorp orated into a proposal for the next-generation binary format of VRML, the Virtual Reality Modeling Language, and the authors of the proposal report compression ratios of 50:1 or more for large VRML models <ref> [Taubin 97] </ref>. 5.5 Progressive Transmission As the bandwidth and processing power available to home users increase, 3-D graphics seem likely to undergo a mass-market debut similar to that which has recently shaken the hypertext-oriented World Wide Web.
Reference: [Teller 91] <author> Teller, Seth, and C. Sequin. </author> <title> Visibility Preprocessing for Interactive Walkthroughs, </title> <journal> Computer Graphics, </journal> <volume> Vol. 25 (SIGGRAPH 91). </volume>
Reference-contexts: Gouraud shading and texture mapping fall into this category. Using information about the model to cull away large po r-tions of the model that are occluded from the current vie w-point. The visibility processing approach described by Seth Teller and Carlo Sequin is an excellent example <ref> [Teller 91] </ref>. Polygonal simplification methods simplify the polygonal geometry of small or distant objects to reduce the rendering cost without a significant loss in the visual content of the scene. These methods are the subject of this paper.
Reference: [Turk 92] <author> Turk, Greg. </author> <title> Retiling Polygonal Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Vol. 26 (SIGGRAPH 92). </volume>
Reference-contexts: The decimation alg o-rithm accepts models with non-manifold vertices, but does not attempt to simplify those regions of the model. 4.2 ReTiling Polygonal Surfaces Another of the first papers to address simplification of arbitrary polyhedral objects, this algorithm by Greg Turk <ref> [Turk 92] </ref> co m-bines elements of the sampling and decimation mechanisms. The retiling algorithm works best on smoothly curved surfaces without sharp edges or discontinuities, preferring organic forms such as people or animals to mechanical shapes such as furniture or machine parts.
Reference: [Xia 96] <author> Xia, Julie, and A. Varshney. </author> <title> Dynamic View-Dependent Simplification for Polygonal Models, Visualization 96. </title>
Reference-contexts: Again, view-dependent techniques can be designed to automatically merge objects without requiring the user to explicitly establish a hierarchy of objects to be merged [Luebke 97]. Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes <ref> [Hoppe 97, Luebke 97, Xia 96] </ref>, preservation of specular highlights [Xia 96], and a g-gressive simplification of backfacing regions [Hoppe 97]. View-independent algorithms can address none of these criteria. However, view-dependence also suffers some significant drawbacks. View-dependent methods inherently involve more runtime computation than view-independent approaches. <p> Finally, view-dependent methods offer the poss i-bility of more sophisticated simplification criteria. Some exa m-ples include preservation of silhouettes [Hoppe 97, Luebke 97, Xia 96], preservation of specular highlights <ref> [Xia 96] </ref>, and a g-gressive simplification of backfacing regions [Hoppe 97]. View-independent algorithms can address none of these criteria. However, view-dependence also suffers some significant drawbacks. View-dependent methods inherently involve more runtime computation than view-independent approaches.
References-found: 23

