URL: http://www.research.microsoft.com/~dbwilson/embed/embed-spaa-2.1.ps
Refering-URL: http://www.research.microsoft.com/~dbwilson/embed/
Root-URL: http://www.research.microsoft.com
Title: Embedding Leveled Hypercube Algorithms into Hypercubes (Extended Abstract)  
Author: David Bruce Wilson 
Date: 6 2  
Note: (n= log n) log  
Address: Cambridge, Massachusetts 02139  
Affiliation: Department of Mathematics and Laboratory for Computer Science Massachusetts Institute of Technology  
Abstract: When a leveled hypercube algorithm (one dimension used at a time) is mapped in the straightforward way into a hypercube in which all edges are useable at once, most of the host machine's bandwidth is unused. This paper shows how to construct embeddings which better utilize the host's edges. In particular, I show how to map an n-dimensional leveled hypercube algorithm into an n-dimensional host hypercube so that the communication throughput of every guest edge is fi times the communication throughput of a host edge. Furthermore, the routing can be done on edge-disjoint paths of length at most n. This result can be applied to other algorithms that are run on hypercubes. For example, if an algorithm runs on a mesh with a axes each of length 2 l , but uses only one axis at a time, then it can be embedded in an la-dimensional hypercube so that each mesh edge has throughput fi 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. S. Greenberg and S. N. Bhatt. </author> <title> Routing multiple paths in hypercubes. </title> <booktitle> In Proceedings of the 2nd Annual ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> pages 45--54, </pages> <year> 1990. </year>
Reference-contexts: There are embeddings that better utilize the machine's bandwidth; the communication throughput of the guest edges is larger than that of the host edges. We will say that the guest edges are accelerated. At one extreme, embeddings that accelerate the edges of a cycle have been worked out <ref> [1] </ref>. The cycle embeddings can be composed to make a mesh embedding. This paper concentrates at the opposite extreme, and gives embeddings which accelerate the edges of a hypercube, assuming only one guest dimension is used at a time. <p> Suppose E embeds the mesh into a hypercube so that each mesh axis k uses hypercube dimensions (k; 0); (k; 1); : : : ; (k; l 1). Embedding E can be chosen so that each mesh edge is simulated with communication throughput fi (l) <ref> [1] </ref>. If only one mesh axis is used at a time, and F : Q a ,! Q a is a leveled embedding, then the mesh can be embedded into Q la with l1 Y F (0;i);(1;i);:::;(a1;i) E and the host hypercube edges will not be overloaded.
Reference: [2] <author> J. Kahn, G. Kalai, and N. Linial. </author> <title> The influence of variables on boolean functions (extended abtract). </title> <booktitle> In Proceedings of the 29th Annual IEEE Symp. on Foundations of Computer Science, </booktitle> <pages> pages 68--80, </pages> <year> 1988. </year>
Reference-contexts: Since an equal number of nodes are colored 0 and 1, there is some dimension d such that (2 n log n=n) dimension-d edges are bichromatic <ref> [2] </ref>. There are (2 n log n=n) dimension-d guest edges crossing host dimension 0, but only 2 n1 dimension-0 host edges.
Reference: [3] <author> F. T. Leighton. </author> <title> Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hypercubes. </title> <publisher> Mor-gan Kaufmann Publishers, </publisher> <year> 1992. </year>
Reference-contexts: Often the software that these machines run use only a few hypercube dimensions at a time. Many hypercube algorithms are leveled: they use only one dimension at a time (see for instance <ref> [3] </ref> or [7]). A programming language may allow the programmer to specify communication in a mesh, but along only one mesh axis at a time [5].
Reference: [4] <author> T. Leighton, F. Makedon, S. Plotkin, C. Stein, E. Tardos, and S. Tragoudas. </author> <title> Fast approximation algorithms for multicommodity flow problems. </title> <booktitle> In Proceedings of the 23rd Annual ACM Symp. on Theory of Computing, </booktitle> <pages> pages 101--111, </pages> <year> 1991. </year> <note> To appear in JCSS. </note>
Reference-contexts: According to a multicommodity flow program written by Cliff Stein (see <ref> [4] </ref>), there is an embedding which accelerates each dimension by more than 3=2 (most probably 7=4). The table entries for n = 5, 15, and 20 can be increased when I find the exact acceleration. Section 5 gives the leveled embedding E 6 for Q 6 which has acceleration 2.
Reference: [5] <institution> Thinking Machines Corporation. </institution> <note> Introduction to Programming in C/Paris. </note>
Reference-contexts: Many hypercube algorithms are leveled: they use only one dimension at a time (see for instance [3] or [7]). A programming language may allow the programmer to specify communication in a mesh, but along only one mesh axis at a time <ref> [5] </ref>.
Reference: [6] <author> Thinking Machines Corporation. </author> <title> Connection Machine Model CM-2 Technical Summary, </title> <month> May </month> <year> 1989. </year>
Reference-contexts: The twelve-dimensional case is interesting in part because of the CM-2. There are 16 CM-2 processors per chip, so the communication network of the 64K-processor CM-2 is a twelve-dimensional hypercube <ref> [6] </ref>. First we need a couple definitions. Suppose that E : Q m ,! Q m is an embedding which we would like to apply to Q n , where m n. We may view E as an operation on m address bits.
Reference: [7] <author> J. D. Ullman. </author> <title> Computational Aspects of VLSI. </title> <publisher> Computer Science Press, </publisher> <year> 1983. </year>
Reference-contexts: Often the software that these machines run use only a few hypercube dimensions at a time. Many hypercube algorithms are leveled: they use only one dimension at a time (see for instance [3] or <ref> [7] </ref>). A programming language may allow the programmer to specify communication in a mesh, but along only one mesh axis at a time [5].
Reference: [8] <author> D. B. Wilson. </author> <title> Embedding weak hypercubes into strong hypercubes. </title> <type> Bachelor's thesis, </type> <institution> Dept. Elec. Eng. & Computer Sci., MIT, </institution> <year> 1991. </year> <title> Supervised by Charles E. </title> <publisher> Leiser-son. </publisher>
Reference-contexts: Though I don't present it here, the next section refers to a leveled embedding E 4 : Q 4 ,! Q 4 which has acceleration 3=2. This embedding and others can be found in my Bachelor's thesis <ref> [8] </ref>. 3 Composing Embeddings Embeddings for small hypercubes can be repeatedly composed to construct embeddings for larger hypercubes. This section shows how to do this when the number of dimensions factors nicely. <p> The node map of E 4 is given in Table 2. I have not found a simple description of E 4 's edge map, but it is given explicitly in <ref> [8] </ref>. Dimensions 0 and 1 are accelerated by the upper bound 2, while dimensions 2 and 3 are accelerated by 3/2. One leveled embedding for Q 5 , E 2;3;4 0;1;2 3 , has acceleration 3=2. There is another leveled embedding for Q 5 with larger acceleration.
References-found: 8

