URL: http://www.cs.umn.edu/Users/dept/users/pchen/EI/EI.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/pchen/EI/
Root-URL: http://www.cs.umn.edu
Title: Entity Identification Using Approximate Matching  
Author: Chandrasekhar Boddu Travis Richardson Ping-Yao Chen Warrick Irwin Jaideep Srivastava 
Address: MN 55344 Minneapolis, MN 55455  
Affiliation: Department of Computer Science APERTUS TECHNOLOGIES University of Minnesota Eden Prairie,  
Abstract: The objective of Entity Identification (EI) is to determine the correspondence between object instances from multiple databases that represent the same real world entity. In this paper we investigate the EI problem at the level of database instances. We propose a framework where each data record is represented as a point in a multi-dimensional attribute space, and therefore the EI problem can be formulated as that of clustering points in this space. Efficiency and Effectiveness are two metrics to judge any entity identification technique. The worst case complexity of any EI algorithm is shown to be O( N(N1) 2 ). In this paper, we show how the transitivity of record matching can be used to optimize the EI process. Specifically we identify the problems of selecting the best entity to match with first, and selecting the best record in an entity to match first. We present a number of heuristics for each, and identify data characteristics under which each heuristic is expected to perform well. Finally, we evaluate the performance and effectiveness of the EI algorithm and the heuristics using data from real world application.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahmed, P. DeSmedt, W. Du, B. Kent, M. Ketabchi, W. Litwin, A. Rafii, and M-C. Shan. </author> <title> The pegasus heterogeneous multidatabase system. </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1991. </year>
Reference-contexts: First is the use of key equivalence, e.g. Multibase [4, 5] where the assumption is that a common key exists, and thus the problem is eliminated. Second is user specified equivalence, as suggested in the Pegasus project <ref> [1] </ref> where the responsibility of specifying equivalent records is fully upon the user. Third approach is probabilistic key equivalence [8] where distance between keys of a record pair is used to determine the probability of match between them. <p> However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. The approach in <ref> [1] </ref> does not address efficiency, while [9] might not necessarily produce correct results. We propose an approach to solve the EI problem on the data file derived after the resolution of schema incompatibilities, and therefore each record in the file has a set of common attributes. <p> Experimentation and performance evaluation are given in Section 5. Section 6 provides the conclusions. 2 Problem Formulation 2.1 Entity Identification Using Approximate Matching When matching a record pair, most approaches usually expect a complete matching <ref> [1, 4, 5, 8] </ref> and identify them as the same entity. Our approach does not perform matching in such a precise manner. Rather, we measure the degree of similarity between a record pair. If the measurement is within some threshold, we classify these two records into an entity.
Reference: [2] <institution> Apertus Technologies | private communication, </institution> <year> 1995. </year>
Reference-contexts: However, the average complexity can be less because of the transitivity assumption. 3.3 An Application of the EI algorithm Solution to the EI problem is central to the Enterprise Sync product from Apertus Technologies Inc. <ref> [2] </ref>. Figure 4 shows details of their implementation. The entire EI task is done in an incremental fashion, called bashing: A bash unit refers to picking an unintegrated record and finding all records it can match with.
Reference: [3] <author> A. Chatterjee and A. Segev. </author> <title> Data manipulation in heterogeneous databases. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: Third approach is probabilistic key equivalence [8] where distance between keys of a record pair is used to determine the probability of match between them. In the fourth approach probabilistic attribute equivalence is proposed by <ref> [3] </ref> where a weighted sum of attribute distances between records is used to determine match probability. Fifth approach is to use a set of heuristic rules, as discussed in [9]. Most approaches try to solve the problem by using the common keys 2 between relations [4, 5, 8].
Reference: [4] <author> U. Dayal. </author> <title> Processing queries over generalized hierarchies in a multidatabase systems. </title> <booktitle> In Proc. of the 9th VLDB Conf., </booktitle> <year> 1983. </year>
Reference-contexts: This leads to the task of instance integration being performed frequently, potentially for each query. 1.1 Related Work Peng et. al. [7] classified the existing approaches to entity identification into five categories. First is the use of key equivalence, e.g. Multibase <ref> [4, 5] </ref> where the assumption is that a common key exists, and thus the problem is eliminated. Second is user specified equivalence, as suggested in the Pegasus project [1] where the responsibility of specifying equivalent records is fully upon the user. <p> Fifth approach is to use a set of heuristic rules, as discussed in [9]. Most approaches try to solve the problem by using the common keys 2 between relations <ref> [4, 5, 8] </ref>. However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. The approach in [1] does not address efficiency, while [9] might not necessarily produce correct results. <p> Experimentation and performance evaluation are given in Section 5. Section 6 provides the conclusions. 2 Problem Formulation 2.1 Entity Identification Using Approximate Matching When matching a record pair, most approaches usually expect a complete matching <ref> [1, 4, 5, 8] </ref> and identify them as the same entity. Our approach does not perform matching in such a precise manner. Rather, we measure the degree of similarity between a record pair. If the measurement is within some threshold, we classify these two records into an entity.
Reference: [5] <author> L. G. DeMichiel. </author> <title> Resolving database incompatibility: an approach to performing relational operations over mismatched domains. </title> <journal> IEEE TKDE, </journal> <volume> 1(4), </volume> <year> 1989. </year>
Reference-contexts: This leads to the task of instance integration being performed frequently, potentially for each query. 1.1 Related Work Peng et. al. [7] classified the existing approaches to entity identification into five categories. First is the use of key equivalence, e.g. Multibase <ref> [4, 5] </ref> where the assumption is that a common key exists, and thus the problem is eliminated. Second is user specified equivalence, as suggested in the Pegasus project [1] where the responsibility of specifying equivalent records is fully upon the user. <p> Fifth approach is to use a set of heuristic rules, as discussed in [9]. Most approaches try to solve the problem by using the common keys 2 between relations <ref> [4, 5, 8] </ref>. However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. The approach in [1] does not address efficiency, while [9] might not necessarily produce correct results. <p> Experimentation and performance evaluation are given in Section 5. Section 6 provides the conclusions. 2 Problem Formulation 2.1 Entity Identification Using Approximate Matching When matching a record pair, most approaches usually expect a complete matching <ref> [1, 4, 5, 8] </ref> and identify them as the same entity. Our approach does not perform matching in such a precise manner. Rather, we measure the degree of similarity between a record pair. If the measurement is within some threshold, we classify these two records into an entity.
Reference: [6] <author> W. Kent. </author> <title> The breakdown of the information model in mdbss. </title> <booktitle> SIGMOD Record, </booktitle> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: Database incompatibilities can be classified into schema-level and instance-level incompatibilities. Schema incompatibilities have been studied under the name of schema integration and a number of approaches have been presented. Recent research has illustrated that this is not sufficient, and techniques for instance integration must also be developed <ref> [6, 7] </ref>. In a single database system, an object instance usually uniquely models a real-world entity. 1 However, it is not always the case that a real-world entity is modeled by a single object instance among multiple autonomous databases, and therefore the entity identification problem arises [7]. <p> Moreover, multiple record instances from the same data file may in some cases correspond to the same real-world entity, e.g. records a 2 and a 3 represent to entity e 2 . Kent pointed this out as the breakdown of the information model <ref> [6] </ref>. In an environment where the local databases are autonomous and continue to support their pre-existing applications, the complete set of database instances can often not be integrated at one time.
Reference: [7] <author> E-P Lim, J. Srivastava, S. Prabhakar, and J. Richardson. </author> <title> Entity identification problem in database integration. </title> <booktitle> Proceedings of IEEE Data Engineering Conference, </booktitle> <year> 1993. </year>
Reference-contexts: Database incompatibilities can be classified into schema-level and instance-level incompatibilities. Schema incompatibilities have been studied under the name of schema integration and a number of approaches have been presented. Recent research has illustrated that this is not sufficient, and techniques for instance integration must also be developed <ref> [6, 7] </ref>. In a single database system, an object instance usually uniquely models a real-world entity. 1 However, it is not always the case that a real-world entity is modeled by a single object instance among multiple autonomous databases, and therefore the entity identification problem arises [7]. <p> In a single database system, an object instance usually uniquely models a real-world entity. 1 However, it is not always the case that a real-world entity is modeled by a single object instance among multiple autonomous databases, and therefore the entity identification problem arises <ref> [7] </ref>. The objective of entity identification (EI) is to determine the correspondence between object instances from multiple databases. As shown in Figure 1, record instances from different databases can correspond to the same real-world entity, e.g. records a 4 and b 1 both represent to entity e 3 . <p> This leads to the task of instance integration being performed frequently, potentially for each query. 1.1 Related Work Peng et. al. <ref> [7] </ref> classified the existing approaches to entity identification into five categories. First is the use of key equivalence, e.g. Multibase [4, 5] where the assumption is that a common key exists, and thus the problem is eliminated. <p> Fifth approach is to use a set of heuristic rules, as discussed in [9]. Most approaches try to solve the problem by using the common keys 2 between relations [4, 5, 8]. However, the relations may have no common key, even though they might share some common key attributes <ref> [7] </ref>. The other problem is the efficiency and effectiveness of the algorithm. The approach in [1] does not address efficiency, while [9] might not necessarily produce correct results. <p> This property is a measure of the effectiveness of the EI algorithm. Full effectiveness has been called soundness of entity idenification in <ref> [7] </ref>. These two metrics may often conflict with each other. Ideally one would like an algorithm with full effectiveness, but may obligatorily suffer some trade-offs of the effectiveness for a gain in performance (reduction in complexity and cost) due to limited computing resources.
Reference: [8] <author> C. Pu. </author> <title> Key equivalence in heterogeneous databases. </title> <booktitle> In Proc. of the 1st Int'l Workshop on Interoperability in Multidatabase Systems, </booktitle> <year> 1991. </year>
Reference-contexts: Multibase [4, 5] where the assumption is that a common key exists, and thus the problem is eliminated. Second is user specified equivalence, as suggested in the Pegasus project [1] where the responsibility of specifying equivalent records is fully upon the user. Third approach is probabilistic key equivalence <ref> [8] </ref> where distance between keys of a record pair is used to determine the probability of match between them. In the fourth approach probabilistic attribute equivalence is proposed by [3] where a weighted sum of attribute distances between records is used to determine match probability. <p> Fifth approach is to use a set of heuristic rules, as discussed in [9]. Most approaches try to solve the problem by using the common keys 2 between relations <ref> [4, 5, 8] </ref>. However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. The approach in [1] does not address efficiency, while [9] might not necessarily produce correct results. <p> Experimentation and performance evaluation are given in Section 5. Section 6 provides the conclusions. 2 Problem Formulation 2.1 Entity Identification Using Approximate Matching When matching a record pair, most approaches usually expect a complete matching <ref> [1, 4, 5, 8] </ref> and identify them as the same entity. Our approach does not perform matching in such a precise manner. Rather, we measure the degree of similarity between a record pair. If the measurement is within some threshold, we classify these two records into an entity.
Reference: [9] <author> Y. R. Wang and S. E. Madnick. </author> <title> The inter-database instance identification problem in integration autonomous systems. </title> <booktitle> In Proc. of the Int'l Conf. on Data Eng., 1989. </booktitle> <volume> 22 23 </volume>
Reference-contexts: In the fourth approach probabilistic attribute equivalence is proposed by [3] where a weighted sum of attribute distances between records is used to determine match probability. Fifth approach is to use a set of heuristic rules, as discussed in <ref> [9] </ref>. Most approaches try to solve the problem by using the common keys 2 between relations [4, 5, 8]. However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. <p> However, the relations may have no common key, even though they might share some common key attributes [7]. The other problem is the efficiency and effectiveness of the algorithm. The approach in [1] does not address efficiency, while <ref> [9] </ref> might not necessarily produce correct results. We propose an approach to solve the EI problem on the data file derived after the resolution of schema incompatibilities, and therefore each record in the file has a set of common attributes.
References-found: 9

