URL: ftp://ftp.cs.rochester.edu/pub/papers/theory/98.tr682.Whats_up_with_downward_collapse.ps.gz
Refering-URL: http://www.cs.rochester.edu/trs/theory-trs.html
Root-URL: 
Title: What's Up with Downward Collapse: Using the Easy-Hard Technique to Link Boolean and Polynomial Hierarchy Collapses  
Author: Edith Hemaspaandra Lane A. Hemaspaandra Harald Hempel 
Date: February, 1998  
Address: Syracuse, NY 13214 USA  Rochester, NY 14627 USA  07740 Jena Germany  
Affiliation: Department of Mathematics Le Moyne College  Department of Computer Science University of Rochester  Institut fur Informatik Friedrich-Schiller-Universitat Jena  
Pubnum: Technical Report UR-CS-TR-98-682  
Abstract: During the past decade, nine papers have obtained increasingly strong consequences from the assumption that boolean or bounded-query hierarchies collapse. The final four papers of this nine-paper progression actually achieve downward collapse|that is, they show that high-level collapses induce collapses at (what beforehand were thought to be) lower complexity levels. For example, for each k 2 it is now known that if P p k [1] = P p k [2] then PH = p k . This article surveys the history, the results, and the technique|the so-called easy-hard method|of these nine papers. 1. J. Kadin. The polynomial time hierarchy collapses if the boolean hierarchy collapses. 
Abstract-found: 1
Intro-found: 1
Reference: [BBJ + 89] <author> A. Bertoni, D. Bruschi, D. Joseph, M. Sitharam, and P. Young. </author> <title> Generalized boolean hierarchies and boolean hierarchies over RP. </title> <booktitle> In Proceedings of the 7th Conference on Fundamentals of Computation Theory, </booktitle> <pages> pages 35-46. </pages> <note> Springer-Verlag Lecture Notes in Computer Science #380, </note> <month> August </month> <year> 1989. </year>
Reference-contexts: But for j = 2; 3; : : : not even that is known. Note that the NP case seems special; for p k , k 2, the relation holds for all j (by [HHH,BF96,HHH97]). Hemaspaandra and Rothe [HR97] study boolean hierarchies over UP, and Bertoni et al. <ref> [BBJ + 89] </ref> study boolean hierarchies over R.
Reference: [BCO91] <author> R. Beigel, R. Chang, and M. Ogiwara. </author> <title> A relationship between difference hierarchies and relativized polynomial hierarchies. </title> <type> Technical Report TR 91-1184, </type> <institution> Department of Computer Science, Cornell University, </institution> <address> Ithaca, NY, </address> <month> January </month> <year> 1991. </year>
Reference-contexts: all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 <ref> [BCO91] </ref> [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can <p> A careful analysis of the proof of Theorem 3.12 as given in [BCO93] in combination with a new trick, namely applying an idea developed in <ref> [BCO91, BCO93] </ref> twice, yields the following theorem. Theorem 4.1 has been independently obtained by Reith and Wagner [RW98].
Reference: [BCO93] <author> R. Beigel, R. Chang, and M. Ogiwara. </author> <title> A relationship between difference hierarchies and relativized polynomial hierarchies. </title> <journal> Mathematical Systems Theory, </journal> <volume> 26(3) </volume> <pages> 293-310, </pages> <year> 1993. </year>
Reference-contexts: nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] <ref> [BCO93] </ref> Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best <p> Define for complexity classes C and D, CD = fCD j C 2 C ^ D 2 Dg, where CD denotes the symmetric difference of the sets C and D. A careful analysis of the proof of Theorem 3.12 as given in <ref> [BCO93] </ref> in combination with a new trick, namely applying an idea developed in [BCO91, BCO93] twice, yields the following theorem. Theorem 4.1 has been independently obtained by Reith and Wagner [RW98]. <p> A careful analysis of the proof of Theorem 3.12 as given in [BCO93] in combination with a new trick, namely applying an idea developed in <ref> [BCO91, BCO93] </ref> twice, yields the following theorem. Theorem 4.1 has been independently obtained by Reith and Wagner [RW98]. <p> Beigel, Chang, and Ogihara <ref> [BCO93] </ref> further improved the results of Chang and Kadin. They followed the approach of Wagner, but with two major innovations: First, they used complete languages for the levels of the boolean hierarchy that do not force them to distinguish between odd and even levels.
Reference: [BF96] <author> H. Buhrman and L. Fortnow. </author> <title> Two queries. </title> <type> Technical Report 96-20, </type> <institution> Department of Computer Science, University of Chicago, Chicago, IL, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: All those results have in common that a collapse of the boolean or bounded-query hierarchy induces a collapse of the polynomial hierarchy at a higher level. In 1996 Hemaspaandra, Hemaspaandra, and Hempel [HHH] and also Buhrman and Fortnow <ref> [BF96] </ref> obtained so called downward collapse results within the polynomial hierarchy, the easy-hard technique playing a crucial role in the proofs. The term downward collapse refers to the fact that the collapse of larger classes implies the collapse of smaller classes, the collapse translates downwards. <p> the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 <ref> [BF96] </ref> [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key results of the relevant <p> Theorem 3.17 <ref> [BF96] </ref> If P p 2 [1] = P p 2 [2] then PH = p 2 = p 9) Hemaspaandra/Hemaspaandra/Hempel 1997 [HHH97] In [HHH97] the approaches of [HHH96a,HHH] and [BF96] were combined with new ideas to obtain a result that implies Theorems 3.14, 3.15, 3.17, and more. <p> Theorem 3.17 <ref> [BF96] </ref> If P p 2 [1] = P p 2 [2] then PH = p 2 = p 9) Hemaspaandra/Hemaspaandra/Hempel 1997 [HHH97] In [HHH97] the approaches of [HHH96a,HHH] and [BF96] were combined with new ideas to obtain a result that implies Theorems 3.14, 3.15, 3.17, and more. <p> The key contribution of [HHH96b] was the insight that, since each string is easy or hard, one can completely discard the search for such strings! Rather, one can simply always use the input itself as an easy or hard string (whichever it happened to be). [HHH96a] and <ref> [BF96] </ref> extended this approach in two different directions. The approach of [HHH96b] works only for 1-vs-2 query access to p k , k &gt; 2. [BF96] extends the result to the 1-vs-2 query case for k 2, via modifying the test of whether the input is easy or hard to nondeterministically <p> for such strings! Rather, one can simply always use the input itself as an easy or hard string (whichever it happened to be). [HHH96a] and <ref> [BF96] </ref> extended this approach in two different directions. The approach of [HHH96b] works only for 1-vs-2 query access to p k , k &gt; 2. [BF96] extends the result to the 1-vs-2 query case for k 2, via modifying the test of whether the input is easy or hard to nondeterministically simply assume both that the input is easy and that the input is hard. <p> They do this by having the machines independently latch onto a certain lexicographically extreme string signaled by the input. However, recall from Section 3 the two improvements just mentioned|from k &gt; 2 to k 2 via <ref> [BF96] </ref> and from 1-vs-2 to j-vs-j + 1 via [HHH]|are incomparable. Neither paper allows both improvements to work simultaneously. <p> Hence L D p 3 2 D 3 . H Since L D p 3 is complete for coD p 3 we obtain D p p End of Proof of Main Claim 8) Buhrman/Fortnow 1996 <ref> [BF96] </ref> Theorem 5.8 If P p 2 [1] = P p 2 [2] then PH = p Proof: Main Claim If P p 2 [1] = NP p 2 then PH = p 2 , where NP p 2 = fAB j A 2 NP ^ B 2 p 2 g. <p> Can one show P p k [j+1] =) PH = P p for k 1 and j 2? Note that the above claim for k &gt; 2 and j = 1 has been proven in [HHH96b] whereas the claim for k = 2 and j = 1 first appeared in <ref> [BF96] </ref>. Can one prove a downward collapse result within the bounded-truth-table hierarchy and the boolean hierarchy over NP? In particular, for which, if any, j does it hold that P NP (j+1)-tt =) DIFF j (NP) = coDIFF j (NP)? Buhrman and Fortnow [BF96] give an oracle relative to which this <p> and j = 1 first appeared in <ref> [BF96] </ref>. Can one prove a downward collapse result within the bounded-truth-table hierarchy and the boolean hierarchy over NP? In particular, for which, if any, j does it hold that P NP (j+1)-tt =) DIFF j (NP) = coDIFF j (NP)? Buhrman and Fortnow [BF96] give an oracle relative to which this fails for j = 1. But for j = 2; 3; : : : not even that is known. Note that the NP case seems special; for p k , k 2, the relation holds for all j (by [HHH,BF96,HHH97]).
Reference: [BF98] <author> H. Buhrman and L. Fortnow. </author> <title> Two queries. </title> <booktitle> In Proceedings of the 13th Annual IEEE Conference on Computational Complexity. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> June </month> <year> 1998. </year> <note> To appear. 35 </note>
Reference-contexts: earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] <ref> [BF98] </ref> Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key results of the relevant papers.
Reference: [CGH + 88] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wagner, and G. Wechsung. </author> <title> The boolean hierarchy I: Structural properties. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1232-1252, </pages> <year> 1988. </year>
Reference-contexts: However, this was achieved in [HHH97], via a new twist. [HHH97] provides an improved way of allowing the underlying p k machines of DIFF ( p k ) languages to work together. In particular, [HHH97] does so by exploiting the so-called telescoping normal form of boolean (or difference) hierarchies <ref> [CGH + 88] </ref>|a normal form that in concept dates as far back as the work of Hausdorff [Hau14]. 5.2 Detailed Technical Discussion of the Easy-Hard Technique and its Extensions In this section we study the easy-hard technique in its original version, and in the increasingly strong extensions developed in the series <p> Without loss of generality let L 1 L 2 <ref> [CGH + 88] </ref>.
Reference: [CGH + 89] <author> J. Cai, T. Gundermann, J. Hartmanis, L. Hemachandra, V. Sewelson, K. Wagner, and G. Wechsung. </author> <title> The boolean hierarchy II: </title> <journal> Applications. SIAM Journal on Computing, </journal> <volume> 18(1) </volume> <pages> 95-111, </pages> <year> 1989. </year>
Reference: [CK89] <author> R. Chang and J. Kadin. </author> <title> The boolean hierarchy and the polynomial hierarchy: A closer connection. </title> <type> Technical Report TR 89-1008, </type> <institution> Department of Computer Science, Cornell University, </institution> <address> Ithaca, NY, </address> <month> May </month> <year> 1989. </year>
Reference-contexts: dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 <ref> [CK89] </ref> [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse
Reference: [CK96] <author> R. Chang and J. Kadin. </author> <title> The boolean hierarchy and the polynomial hierarchy: A closer connection. </title> <journal> SIAM Journal on Computing, </journal> <volume> 25(2) </volume> <pages> 340-354, </pages> <year> 1996. </year>
Reference-contexts: and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] <ref> [CK96] </ref> Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the <p> Chang and Kadin <ref> [CK96] </ref>, independent of Wagner's work, also used the stronger notion of hardness.
Reference: [Hau14] <editor> F. Hausdorff. Grundzuge der Mengenlehre. </editor> <address> Leipzig, </address> <year> 1914. </year>
Reference-contexts: In particular, [HHH97] does so by exploiting the so-called telescoping normal form of boolean (or difference) hierarchies [CGH + 88]|a normal form that in concept dates as far back as the work of Hausdorff <ref> [Hau14] </ref>. 5.2 Detailed Technical Discussion of the Easy-Hard Technique and its Extensions In this section we study the easy-hard technique in its original version, and in the increasingly strong extensions developed in the series of papers that this article studies.
Reference: [HHH] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> A downward collapse within the polynomial hierarchy. </title> <journal> SIAM Journal on Computing. </journal> <note> To appear. </note>
Reference-contexts: All those results have in common that a collapse of the boolean or bounded-query hierarchy induces a collapse of the polynomial hierarchy at a higher level. In 1996 Hemaspaandra, Hemaspaandra, and Hempel <ref> [HHH] </ref> and also Buhrman and Fortnow [BF96] obtained so called downward collapse results within the polynomial hierarchy, the easy-hard technique playing a crucial role in the proofs. <p> and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] <ref> [HHH] </ref> Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key results <p> They add a new bit of "code" to ensure that the nondeterministic branch making the wrong assumption will do no harm to the overall algorithm. <ref> [HHH] </ref>, on the other hand, removes the 1-vs-2 restriction but adds a scheme implementing "0-bit communication" between machines. They do this by having the machines independently latch onto a certain lexicographically extreme string signaled by the input. <p> Perhaps the best place in the original literature to get a feel for the easy-hard technique in the more powerful "downward collapse" form is the paper of Hemaspaandra, Hemaspaandra, and Hempel <ref> [HHH] </ref>, which initiated this form of the technique.
Reference: [HHH96a] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> A downward translation in the polynomial hierarchy. </title> <type> Technical Report TR-630, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY, </address> <month> July </month> <year> 1996. </year>
Reference-contexts: versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 <ref> [HHH96a] </ref> [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key <p> The key contribution of [HHH96b] was the insight that, since each string is easy or hard, one can completely discard the search for such strings! Rather, one can simply always use the input itself as an easy or hard string (whichever it happened to be). <ref> [HHH96a] </ref> and [BF96] extended this approach in two different directions.
Reference: [HHH96b] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> An upward separation in the polynomial hierarchy. </title> <type> Technical Report Math/Inf/96/15, </type> <institution> Institut fur Informatik, Friedrich-Schiller-Universitat, Jena, Germany, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 <ref> [HHH96b] </ref> [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a <p> dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 <ref> [HHH96b] </ref> [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close <p> Corollary 3.13 [BCO91,BCO93] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = m-tt k . 6) Hemaspaandra/Hemaspaandra/Hempel 1996 <ref> [HHH96b] </ref> Motivated by the question of whether the collapse of query order classes has some effect on the polynomial hierarchy, Hemaspaandra, Hemaspaandra, and Hempel came up with a very surprising downward collapse result. <p> This was the the first "downward translation of equality" (equivalently, "downward collapse) result ever obtained within the bounded query hierarchies. Theorem 3.14 <ref> [HHH96b] </ref> For k &gt; 2, if P p k [1] = P p k [2] then PH = p k = p 5 7) Hemaspaandra/Hemaspaandra/Hempel 1996 [HHH96a,HHH] Generalizing the ideas developed in [HHH96b], the authors extended their results to also hold for j-vs-j + 1 queries. <p> Theorem 3.14 <ref> [HHH96b] </ref> For k &gt; 2, if P p k [1] = P p k [2] then PH = p k = p 5 7) Hemaspaandra/Hemaspaandra/Hempel 1996 [HHH96a,HHH] Generalizing the ideas developed in [HHH96b], the authors extended their results to also hold for j-vs-j + 1 queries. More precisely, a collapse of the bounded-truth-table hierarchy over p k at level m implies the collapse of the boolean hierarchy over p k at level m. <p> Second, they made use of the mind change technique to effectively check the existence of hard strings and their effect on the outcome of the reduction using those hard strings. Their second innovation includes a modified argumentation for collapsing the polynomial hierarchy. The key contribution of <ref> [HHH96b] </ref> was the insight that, since each string is easy or hard, one can completely discard the search for such strings! Rather, one can simply always use the input itself as an easy or hard string (whichever it happened to be). [HHH96a] and [BF96] extended this approach in two different directions. <p> The approach of <ref> [HHH96b] </ref> works only for 1-vs-2 query access to p k , k &gt; 2. [BF96] extends the result to the 1-vs-2 query case for k 2, via modifying the test of whether the input is easy or hard to nondeterministically simply assume both that the input is easy and that the <p> K Since p 2-tt 3 (Claim I), 2-tt 3 P p 4 P NP p 3 (Claim J) we have proven 5 P NP p 3 and thus PH = 1-tt 3 . End of Proof of Main Claim 25 6) Hemaspaandra/Hemaspaandra/Hempel 1996 <ref> [HHH96b] </ref> Theorem 5.6 If P p 3 [1] = P p 3 [2] then PH = p Proof: Main Claim If P (P; p 3 ) = P (NP; p 3 ) then PH = p where P (P; p 3 ) and P (NP; p 3 ) are the classes <p> Can one show P p k [j+1] =) PH = P p for k 1 and j 2? Note that the above claim for k &gt; 2 and j = 1 has been proven in <ref> [HHH96b] </ref> whereas the claim for k = 2 and j = 1 first appeared in [BF96].
Reference: [HHH97] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> Translating equality downwards. </title> <type> Technical Report TR-657, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY, </address> <month> April </month> <year> 1997. </year>
Reference-contexts: versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 <ref> [HHH97] </ref> [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key results of the relevant papers. <p> 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 <ref> [HHH97] </ref> [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been used to collapse the polynomial hierarchy, can best be seen by a close look at the key results of the relevant papers. <p> Theorem 3.17 [BF96] If P p 2 [1] = P p 2 [2] then PH = p 2 = p 9) Hemaspaandra/Hemaspaandra/Hempel 1997 <ref> [HHH97] </ref> In [HHH97] the approaches of [HHH96a,HHH] and [BF96] were combined with new ideas to obtain a result that implies Theorems 3.14, 3.15, 3.17, and more. Theorem 3.18 [HHH97] For all m 1 and all k &gt; 1, if P p m-tt = P k (m+1)-tt then DIFF m ( p <p> Theorem 3.17 [BF96] If P p 2 [1] = P p 2 [2] then PH = p 2 = p 9) Hemaspaandra/Hemaspaandra/Hempel 1997 <ref> [HHH97] </ref> In [HHH97] the approaches of [HHH96a,HHH] and [BF96] were combined with new ideas to obtain a result that implies Theorems 3.14, 3.15, 3.17, and more. Theorem 3.18 [HHH97] For all m 1 and all k &gt; 1, if P p m-tt = P k (m+1)-tt then DIFF m ( p k ) <p> 3.17 [BF96] If P p 2 [1] = P p 2 [2] then PH = p 2 = p 9) Hemaspaandra/Hemaspaandra/Hempel 1997 <ref> [HHH97] </ref> In [HHH97] the approaches of [HHH96a,HHH] and [BF96] were combined with new ideas to obtain a result that implies Theorems 3.14, 3.15, 3.17, and more. Theorem 3.18 [HHH97] For all m 1 and all k &gt; 1, if P p m-tt = P k (m+1)-tt then DIFF m ( p k ) = coDIFF m ( p k ). <p> However, recall from Section 3 the two improvements just mentioned|from k &gt; 2 to k 2 via [BF96] and from 1-vs-2 to j-vs-j + 1 via [HHH]|are incomparable. Neither paper allows both improvements to work simultaneously. However, this was achieved in <ref> [HHH97] </ref>, via a new twist. [HHH97] provides an improved way of allowing the underlying p k machines of DIFF ( p k ) languages to work together. In particular, [HHH97] does so by exploiting the so-called telescoping normal form of boolean (or difference) hierarchies [CGH + 88]|a normal form that in <p> However, recall from Section 3 the two improvements just mentioned|from k &gt; 2 to k 2 via [BF96] and from 1-vs-2 to j-vs-j + 1 via [HHH]|are incomparable. Neither paper allows both improvements to work simultaneously. However, this was achieved in <ref> [HHH97] </ref>, via a new twist. [HHH97] provides an improved way of allowing the underlying p k machines of DIFF ( p k ) languages to work together. In particular, [HHH97] does so by exploiting the so-called telescoping normal form of boolean (or difference) hierarchies [CGH + 88]|a normal form that in concept dates as far back <p> Neither paper allows both improvements to work simultaneously. However, this was achieved in <ref> [HHH97] </ref>, via a new twist. [HHH97] provides an improved way of allowing the underlying p k machines of DIFF ( p k ) languages to work together. In particular, [HHH97] does so by exploiting the so-called telescoping normal form of boolean (or difference) hierarchies [CGH + 88]|a normal form that in concept dates as far back as the work of Hausdorff [Hau14]. 5.2 Detailed Technical Discussion of the Easy-Hard Technique and its Extensions In this section we study the easy-hard <p> End of Proof of Main Claim 9) Hemaspaandra/Hemaspaandra/Hempel 1997 <ref> [HHH97] </ref> Theorem 5.9 If P p 2-tt = P 2 3-tt then PH = D p 2 p Proof: Main Claim If PD p 2 = NPD p 2 then D p 2 = coD p where PD p 2 is defined similar to NPD p 2 as in Main Claim <p> Finally, for completeness, we mention that strongest currently known downward translations regarding the research line described in this survey are found in the final paper surveyed, <ref> [HHH97] </ref>, except that very recently the key result of one subpart of that paper has itself been further extended in [HHH98].
Reference: [HHH98] <author> E. Hemaspaandra, L. Hemaspaandra, and H. Hempel. </author> <title> Downward collapse from a weaker hypothesis. </title> <type> Technical Report TR-681, </type> <institution> Department of Computer Science, University of Rochester, Rochester, </institution> <address> NY, </address> <month> February </month> <year> 1998. </year>
Reference-contexts: Finally, for completeness, we mention that strongest currently known downward translations regarding the research line described in this survey are found in the final paper surveyed, [HHH97], except that very recently the key result of one subpart of that paper has itself been further extended in <ref> [HHH98] </ref>.
Reference: [HR97] <author> L. Hemaspaandra and J. </author> <title> Rothe. Unambiguous computation: Boolean hierarchies and sparse Turing-complete sets. </title> <journal> SIAM Journal on Computing, </journal> <volume> 26(3) </volume> <pages> 634-653, </pages> <year> 1997. </year>
Reference-contexts: But for j = 2; 3; : : : not even that is known. Note that the NP case seems special; for p k , k 2, the relation holds for all j (by [HHH,BF96,HHH97]). Hemaspaandra and Rothe <ref> [HR97] </ref> study boolean hierarchies over UP, and Bertoni et al. [BBJ + 89] study boolean hierarchies over R.
Reference: [Kad87] <author> J. Kadin. </author> <title> The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <type> Technical Report TR 87-843, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: topic of this article. 2 The Timeline Table 1 gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 <ref> [Kad87] </ref> [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by
Reference: [Kad88] <author> J. Kadin. </author> <title> The polynomial time hierarchy collapses if the boolean hierarchy collapses. </title> <journal> SIAM Journal on Computing, </journal> <volume> 17(6) </volume> <pages> 1263-1282, </pages> <year> 1988. </year> <note> Erratum appears in the same journal, 20(2):404. </note>
Reference-contexts: 1 Introduction Does the polynomial hierarchy collapse if the boolean hierarchy or the bounded-query hierarchy collapse? Kadin <ref> [Kad88] </ref> was able to answer this question affirmatively with the help of the easy-hard technique. <p> of this article. 2 The Timeline Table 1 gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] <ref> [Kad88] </ref> Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the <p> The last four papers of our survey use the (modified) easy-hard method to prove downward collapse results within the polynomial hierarchy. Kadin <ref> [Kad88] </ref> constructed a sparse set S containing enough information such that one can effectively extract a lexicographically extreme hard string for a given length if there exists one. <p> application to the unambiguous polynomial hierarchy, or to the "R hierarchy"? Finally, if one wants to go into the actual journal literature, where should one start? Perhaps the best place in the original literature to get a first feel for the easy-hard technique in its initial form is Kadin's paper <ref> [Kad88] </ref>, which initiated the technique. Perhaps the best place in the original literature to get a feel for the easy-hard technique in the more powerful "downward collapse" form is the paper of Hemaspaandra, Hemaspaandra, and Hempel [HHH], which initiated this form of the technique.
Reference: [KSW87] <author> J. Kobler, U. Schoning, and K. Wagner. </author> <title> The difference and truth-table hierarchies for NP. </title> <journal> RAIRO Theoretical Informatics and Applications, </journal> <volume> 21 </volume> <pages> 419-435, </pages> <year> 1987. </year>
Reference-contexts: Obviously for all k 1, P p m-tt P p k [m] for all m 1. Also, P p 1-tt = P p It is well-known <ref> [KSW87] </ref> that the bounded-truth-table and the boolean hierarchy intertwine, i.e., for all m 1 and all k 1, DIFF m ( p k ) [ coDIFF m ( p k ) P k m-tt DIFF m+1 ( p k ) " coDIFF m+1 ( p k ): Hence a result DIFF
Reference: [LLS75] <author> R. Ladner, N. Lynch, and A. Selman. </author> <title> A comparison of polynomial time reducibilities. </title> <journal> Theoretical Computer Science, </journal> <volume> 1(2) </volume> <pages> 103-124, </pages> <year> 1975. </year> <month> 36 </month>
Reference-contexts: 1, it holds that BH ( p k ), the difference hierarchy over p k , is sandwiched between p k [ p k+1 Restricting the type of access to an oracle one has leads to the notions of bounded-Turing and bounded-truth-table query classes (see, e.g., Ladner, Lynch, and Selman <ref> [LLS75] </ref>). Definition 3.3 Let k 0 be an integer. 1. For m 1, P p k [m] denotes the set of languages recognizable by some deterministic polynomial time Turing machine (DPTM) making at most m queries to a p k oracle. 2.
Reference: [PY84] <author> C. Papadimitriou and M. Yannakakis. </author> <title> The complexity of facets (and some facets of complexity). </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28(2) </volume> <pages> 244-259, </pages> <year> 1984. </year>
Reference-contexts: For instance, DIFF 2 (NP) is exactly the class DP <ref> [PY84] </ref>. Similarly (and for reasons to be explained more formally later), we will for every k 1 denote DIFF 2 ( p k ) by D p k . <p> Proof: 14 Main Claim If D p 3 = coD p 3 then PH = p 5 , where D p 3 is the p 3 analogue of the class DP <ref> [PY84] </ref>, in particular D p 3 = fL 1 L 2 j L 1 ; L 2 2 3 g. Since P p 3 [1] D p 3 [2] and P p 3 P p 3 [2] the theorem follows immediately from the above claim.
Reference: [RW98] <author> S. Reith and K. Wagner. </author> <title> On boolean lowness and boolean highness. </title> <type> Manuscript, </type> <month> January </month> <year> 1998. </year>
Reference-contexts: A careful analysis of the proof of Theorem 3.12 as given in [BCO93] in combination with a new trick, namely applying an idea developed in [BCO91, BCO93] twice, yields the following theorem. Theorem 4.1 has been independently obtained by Reith and Wagner <ref> [RW98] </ref>. Theorem 4.1 For all m 1 and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = DIFF m ( p k )DIFF m1 ( p k+1 ). Let us compare the results of Theorem 3.12 and Theorem 4.1.
Reference: [Sto77] <author> L. Stockmeyer. </author> <title> The polynomial-time hierarchy. </title> <journal> Theoretical Computer Science, </journal> <volume> 3 </volume> <pages> 1-22, </pages> <year> 1977. </year>
Reference-contexts: This will also nicely illustrate the improvements each made with respect to the results that were known before it. A definition of the basic concepts involved seems appropriate at this point. The polynomial hierarchy was introduced by Stockmeyer <ref> [Sto77] </ref>. Definition 3.1 1. For any set of languages C, let coC = fL j L 2 Cg. 2. [Sto77] p 0 = p (b) For all k 0, p k , p k , and p k+1 . (c) The polynomial hierarchy, PH, is defined by PH = S p <p> A definition of the basic concepts involved seems appropriate at this point. The polynomial hierarchy was introduced by Stockmeyer <ref> [Sto77] </ref>. Definition 3.1 1. For any set of languages C, let coC = fL j L 2 Cg. 2. [Sto77] p 0 = p (b) For all k 0, p k , p k , and p k+1 . (c) The polynomial hierarchy, PH, is defined by PH = S p So, for instance, p 1 = NP, p 3 = NP (NP NP ) .
Reference: [Wag] <author> K. Wagner. </author> <title> A note on parallel queries and the symmetric-difference hierarchy. </title> <journal> Information Processing Letters. </journal> <note> To appear. </note>
Reference-contexts: Though both theorems collapse the polynomial hierarchy to a class containing DIFF m1 ( p k+1 ) and contained in DIFF m ( p k+1 ), their results differ substantially. It is immediate from a recent paper of Wagner <ref> [Wag] </ref> that (m1)-tt k is a strict superset of DIFF m ( p k )DIFF m1 ( p k+1 ) unless the polynomial hierarchy collapses.
Reference: [Wag87] <author> K. Wagner. </author> <title> Number-of-query hierarchies. </title> <type> Technical Report 158, </type> <institution> Institut fur Mathematik, Universitat Augsburg, Augsburg, Germany, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: 2 The Timeline Table 1 gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 <ref> [Wag87] </ref> [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in <p> The Timeline Table 1 gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 <ref> [Wag87] </ref> [Wag87] Wagner 2/89 [Wag89] [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular <p> and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = p Corollary 3.5 [Kad87,Kad88] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = p k+2 . 2) Wagner 1987 <ref> [Wag87] </ref> Kadin's technique together with oracle replacement enabled Wagner to improve Kadin's results significantly by showing that a collapse of the boolean hierarchy over p k at level m implies a collapse of the polynomial hierarchy to p k+2 . Theorem 3.6 [Wag87] For all m 1 and all k 1, <p> PH = p k+2 . 2) Wagner 1987 <ref> [Wag87] </ref> Kadin's technique together with oracle replacement enabled Wagner to improve Kadin's results significantly by showing that a collapse of the boolean hierarchy over p k at level m implies a collapse of the polynomial hierarchy to p k+2 . Theorem 3.6 [Wag87] For all m 1 and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = p Corollary 3.7 [Wag87] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = p k+2 <p> Theorem 3.6 <ref> [Wag87] </ref> For all m 1 and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = p Corollary 3.7 [Wag87] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = p k+2 . 3) Wagner 1989 [Wag89] Wagner observed that a modified definition of hard strings yields an even stronger collapse of the polynomial hierarchy. <p> According to B, this algorithm is correct. E By a result of Yap [Yap83], p 3 ( p 3 ) S for a sparse set S implies p 5 = p 5 and hence PH = p 5 . End of Proof of Main Claim 2) Wagner 1987 <ref> [Wag87] </ref> Theorem 5.2 If P p 3 [1] = P p 3 [2] then PH = P p 4 . Proof: Main Claim If D p 3 = coD p 3 then PH = P p 4 . Clearly, the theorem follows as an immediate corollary from the above claim. <p> Note that a straightforward adaption of the proof of Theorem 5.2 to this new definition would suffice to prove Theorem 5.3. However, Wagner used a slightly different approach and obtained stronger intermediate results than in <ref> [Wag87] </ref>. Though those stronger intermediate results do not lead to a better overall result, they appear in the papers of Chang and Kadin [CK89,CK96] and Beigel, Chang, and Ogihara [BCO91,BCO93] again and play an important role there. 18 A As in the proof of Theorem 5.1 (Kadin 1987).
Reference: [Wag89] <author> K. Wagner. </author> <title> Number-of-query hierarchies. </title> <type> Technical Report 4, </type> <institution> Institut fur Informatik, Universitat Wurzburg, Wurzburg, Germany, </institution> <month> February </month> <year> 1989. </year>
Reference-contexts: 1 gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 <ref> [Wag89] </ref> [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has <p> gives the relevant dates and citations for all nine papers, in particular the dates of the earliest versions and pointers to the earliest and most recent versions. 2 Date of Author (s) Earliest Version Earliest Version Most Recent Version Kadin 6/87 [Kad87] [Kad88] Wagner 10/87 [Wag87] [Wag87] Wagner 2/89 <ref> [Wag89] </ref> [Wag89] Chang/Kadin 5/89 [CK89] [CK96] Beigel/Chang/Ogiwara 1/91 [BCO91] [BCO93] Hemaspaandra/Hemaspaandra/ Hempel 6/96 [HHH96b] [HHH96b] Hemaspaandra/Hemaspaandra/ Hempel 7/96 [HHH96a] [HHH] Buhrman/Fortnow 9/96 [BF96] [BF98] Hemaspaandra/Hemaspaandra/ Hempel 4/97 [HHH97] [HHH97] Table 1: Timeline. 3 The Results The pace and amount of change underwent by the easy-hard technique, in particular how it has been <p> and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = p Corollary 3.7 [Wag87] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = p k+2 . 3) Wagner 1989 <ref> [Wag89] </ref> Wagner observed that a modified definition of hard strings yields an even stronger collapse of the polynomial hierarchy. <p> In particular, he showed that a collapse of the boolean hierarchy over p k at level m implies a collapse of the polynomial hierarchy to a level within p k+2 , namely, the boolean closure of p k+1 , BH ( p Theorem 3.8 <ref> [Wag89] </ref> For all m 1 and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = BH ( p Corollary 3.9 [Wag89] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = <p> a level within p k+2 , namely, the boolean closure of p k+1 , BH ( p Theorem 3.8 <ref> [Wag89] </ref> For all m 1 and all k 1, if DIFF m ( p k ) = coDIFF m ( p k ) then PH = BH ( p Corollary 3.9 [Wag89] For all m 1 and all k 1, if P p m-tt = P k (m+1)-tt then PH = BH ( p k+1 ). 4) Chang/Kadin 1989 [CK89,CK96] Chang and Kadin refined the method originally used by Kadin to further tighten the connection between the boolean hierarchy and the polynomial <p> I Since L p 5 is complete for p 5 we conclude p 5 = P p 4 and thus PH = P p 4 . End of Proof of Main Claim 3) Wagner 1989 <ref> [Wag89] </ref> Theorem 5.3 If P p 3 [1] = P p 3 [2] then PH = P p 4 [3] . Proof: Main Claim As in the proof of Theorem 5.2 (Wagner 1987), but P p 4 replaced by P p 4 [3] . <p> Since this would clearly require only one hard pair one could similarly to H derive even L p 4 [2] . However, the possibility of reducing L p 5 to a p 3 language first appeared in <ref> [Wag89] </ref> and was crucially used in [CK89,CK96] and [BCO91,BCO93]. 21 A As in the proof of Theorem 5.1 (Kadin 1987). B,C,D,E,F, and G As in the proof of Theorem 5.3 (Wagner 1989).
Reference: [Yap83] <author> C. Yap. </author> <title> Some consequences of non-uniform conditions on uniform classes. </title> <journal> Theoretical Computer Science, </journal> <volume> 26 </volume> <pages> 287-300, </pages> <year> 1983. </year> <month> 37 </month>
Reference-contexts: Kadin [Kad88] constructed a sparse set S containing enough information such that one can effectively extract a lexicographically extreme hard string for a given length if there exists one. He shows that coNP NP S , which by a result of Yap <ref> [Yap83] </ref> implies PH p 3 . 1 Wagner used a different approach in his two papers [Wag87,Wag89]. He collapsed the polynomial hierarchy directly (without constructing a sparse oracle) using oracle replacement and hard strings in the form of advice. <p> Compute h (hx; !i) and accept if and only if h 0 (hx; !i) 2 L p 3 . According to B, this algorithm is correct. E By a result of Yap <ref> [Yap83] </ref>, p 3 ( p 3 ) S for a sparse set S implies p 5 = p 5 and hence PH = p 5 .
References-found: 27

