URL: http://www.cs.caltech.edu/~ps/papers/mgrid/SC-93-23.ps.Z
Refering-URL: http://www.cs.caltech.edu/~ps/papers/mgrid/
Root-URL: http://www.cs.caltech.edu
Author: Peter Deuflhard 
Date: 93-23 (October 1993)  
Note: Preprint SC  
Abstract: Cascadic Conjugate Gradient Methods for Elliptic Partial Differential Equations I. Algorithm and Numerical Results 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Babuska, W.C. Rheinboldt: </author> <title> Estimates for Adaptive Finite Element Computations. </title> <journal> SIAM J. Numer. Anal. </journal> <volume> 15, </volume> <editor> p. </editor> <month> 736-754 </month> <year> (1978). </year>
Reference-contexts: Comparison runs with the hierarchical bases preconditioner due to Yserentant [14], the multilevel preconditioner due to Bramble, Pasciak and Xu [6] and even without any preconditioning are presented. Two different CPCG modes are exemplified, an adaptive mode | including an adaptive mesh refinement strategy in the spirit of <ref> [1] </ref> based on the edge oriented error estimator of [7] | and a uniform mode. A convergence theory explaining the surprising numerical findings of Section 2 will be given in Part II of this paper. 1. <p> This strategy, however, sometimes produced unsatisfactory meshes in critical examples. Therefore, the more advanced versions [8] and [5] realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt <ref> [1] </ref>. It is based on local extrapolation of energy error contributions from the edges as obtained by the edge oriented discretization error indicator due to [7]. Let j denote the contribution from a single edge out of the (usually non-uniform) mesh associated with level j. <p> Let j denote the contribution from a single edge out of the (usually non-uniform) mesh associated with level j. Then j1 is the contribution of the corresponding father edge. The extrapolation technique due to <ref> [1] </ref> then supplies certain guesses ~ j+1 = j (2.1) for the expected contributions from the son edges on an imaginated level j + 1 obtained from uniform mesh refinement. There are several reasonable heuristics to exploit this information.
Reference: [2] <author> I. Babuska, R.B. Kellogg, J. Pitkaranta: </author> <title> Direct and Inverse Error Estimates for Finite Elements with Mesh Refinements. </title> <journal> Numer. Math., </journal> <volume> 33, </volume> <editor> p. </editor> <month> 447-471 </month> <year> (1979) </year>
Reference-contexts: In the case of adaptive meshes | assuming energy error equidistribution and once more linear finite elements | we will expect a contraction factor fi = ^ fi j = ( n j 2 on the basis of theoretical results of <ref> [2] </ref>. This choice, too, will be used later in the appropriate context. Because of the relations * (i) 0 * 0 ; * i * i , we end up with the sufficient condition * i " 2 (i) for termination at finite element level i.
Reference: [3] <author> R.E. Bank: </author> <title> A-posteriori Error Estimates, Adaptive Local Mesh Refinement and Multigrid Iteration. </title> <editor> In: W. Hackbusch, U. Trottenberg (eds.): </editor> <title> Multi-grid Methods II. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, Heidelberg, New York: Lect. </address> <note> Notes Math. Vol. 1228, </note> <author> p. </author> <month> 7-23 </month> <year> (1986). </year>
Reference-contexts: Any such mesh refinement strategy will naturally aim at equidistributing the energy error. In the earlier version [7] of the cascade principle a mean value strategy 15 due to Bank <ref> [3] </ref> has been used. This strategy, however, sometimes produced unsatisfactory meshes in critical examples. Therefore, the more advanced versions [8] and [5] realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt [1].
Reference: [4] <author> F. Bornemann: </author> <title> An Adaptive Multilevel Approach to Parabolic Equations in Two Space Dimensions. Dissertation, </title> <address> FU Berlin (1991). </address>
Reference-contexts: The bump is largest for CCG and smallest for BPX. The HB variant ranges in between. The different picture in terms of computing times is explained by the fact that each cg iteration with BPX preconditioning (even in a rather efficient implementation | see e.g. <ref> [4] </ref>) costs a rough factor of 3 more than each pure cg iteration. Remark. It should be mentioned that the above Fig. 8 does not contradict Fig. 10, p. 3198 in [8], wherein the effect of BPX preconditioning versus no preconditioning has been exemplified as well.
Reference: [5] <author> F. Bornemann, B. Erdmann, R. Kornhuber: </author> <title> Adaptive Multilevel-Methods in Three Space Dimensions. </title> <journal> Int. J. Numer. Methods Eng. </journal> <volume> 36, </volume> <editor> p. </editor> <month> 3187-3203 </month> <year> (1993). </year>
Reference-contexts: In the former realization of this concept due to [7], the whole iteration control mechanism was based on cheap approximate energy error norms, which led to a close coupling between the local error estimators and the PCG termination criterion. In the course of further development | see <ref> [5, 8, 10, 11] </ref> | the unclear quality of this approximation motivated the use of rather stringent heuristic safety factors. On one hand, this increased the robustness in critical examples, but on the other hand, this decreased the efficiency in less critical examples. <p> The implementation of this criterion requires the iterative quantities " j , which | as we will see below | can be obtained cheaply from the PCG iteration. PCG method as inner iteration. In previous versions of cascade type algorithms | such as <ref> [5, 8, 7] </ref> | the criterion (1.31) could not be used, since there only rough discretization error indicators from the mesh refinement strategies were available. <p> In the earlier version [7] of the cascade principle a mean value strategy 15 due to Bank [3] has been used. This strategy, however, sometimes produced unsatisfactory meshes in critical examples. Therefore, the more advanced versions [8] and <ref> [5] </ref> realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt [1]. It is based on local extrapolation of energy error contributions from the edges as obtained by the edge oriented discretization error indicator due to [7].
Reference: [6] <author> J.H. Bramble, J.E. Pasciak, J. Xu: </author> <title> Parallel Multilevel Preconditioners. </title> <journal> Math. Comp., </journal> <volume> 55, </volume> <editor> p. </editor> <month> 1-22 </month> <year> (1990). </year>
Reference-contexts: In Section 2, the proposed CPCG method is illustrated by numerical experiments. The good old Laplace equation is once more used as a work horse. Comparison runs with the hierarchical bases preconditioner due to Yserentant [14], the multilevel preconditioner due to Bramble, Pasciak and Xu <ref> [6] </ref> and even without any preconditioning are presented. Two different CPCG modes are exemplified, an adaptive mode | including an adaptive mesh refinement strategy in the spirit of [1] based on the edge oriented error estimator of [7] | and a uniform mode. <p> ; Dirichlet boundary conditions are imposed such that u = x (x 1)y (y 1) is the solution. 14 The comparative performance of the following three variants of the CPCG al- gorithm will be presented: | CPCG-HB: algorithm with hierarchical bases preconditioner [14] | CPCG-BPX: algorithm with multilevel BPX preconditioner <ref> [6] </ref> | CCG: algorithm without any preconditioner In the simple case of the Laplace equation, the HB preconditioner is known to be nearly uniformly spectrally equivalent in 2-D | see [14], whereas the BPX preconditioner is known to be uniformly spectrally equivalent independent of the space dimension | see [9].
Reference: [7] <author> P. Deuflhard, P. Leinen, H. Yserentant: </author> <title> Concepts of an Adaptive Hierarchical Finite Element Code. IMPACT 1, </title> <editor> p. </editor> <month> 3-35 </month> <year> (1989). </year>
Reference-contexts: Introduction This paper deals with cascadic preconditioned conjugate gradient methods to be called CPCG methods | for the solution of general elliptic boundary value problems for partial differential equations. Any such method is based on the so-called cascade principle that has been presented earlier in <ref> [7] </ref>. The former concept and its algorithmic realization will be significantly simplified and, at the same time, made considerably more robust. Cascade type algorithms work down a sequence of linear systems of equations associated with finite elements on successively finer grids. <p> Within each discretization level the PCG termination criterion aims at keeping the iteration error below the expected discretization error. In the former realization of this concept due to <ref> [7] </ref>, the whole iteration control mechanism was based on cheap approximate energy error norms, which led to a close coupling between the local error estimators and the PCG termination criterion. <p> Two different CPCG modes are exemplified, an adaptive mode | including an adaptive mesh refinement strategy in the spirit of [1] based on the edge oriented error estimator of <ref> [7] </ref> | and a uniform mode. A convergence theory explaining the surprising numerical findings of Section 2 will be given in Part II of this paper. 1. Energy Error Control in Cascadic Precon ditioned CG Methods In this section CPCG methods are derived in a unified framework. <p> The implementation of this criterion requires the iterative quantities " j , which | as we will see below | can be obtained cheaply from the PCG iteration. PCG method as inner iteration. In previous versions of cascade type algorithms | such as <ref> [5, 8, 7] </ref> | the criterion (1.31) could not be used, since there only rough discretization error indicators from the mesh refinement strategies were available. <p> Any such mesh refinement strategy will naturally aim at equidistributing the energy error. In the earlier version <ref> [7] </ref> of the cascade principle a mean value strategy 15 due to Bank [3] has been used. This strategy, however, sometimes produced unsatisfactory meshes in critical examples. Therefore, the more advanced versions [8] and [5] realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt [1]. <p> Therefore, the more advanced versions [8] and [5] realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt [1]. It is based on local extrapolation of energy error contributions from the edges as obtained by the edge oriented discretization error indicator due to <ref> [7] </ref>. Let j denote the contribution from a single edge out of the (usually non-uniform) mesh associated with level j. Then j1 is the contribution of the corresponding father edge.
Reference: [8] <author> B. Erdmann, R. Roitzsch, F. Bornemann: </author> <title> KASKADE numerical experiments. </title> <type> Technical Report TR 91-1, </type> <institution> Konrad-Zuse-Zentrum Berlin (ZIB), </institution> <year> (1991). </year>
Reference-contexts: In the former realization of this concept due to [7], the whole iteration control mechanism was based on cheap approximate energy error norms, which led to a close coupling between the local error estimators and the PCG termination criterion. In the course of further development | see <ref> [5, 8, 10, 11] </ref> | the unclear quality of this approximation motivated the use of rather stringent heuristic safety factors. On one hand, this increased the robustness in critical examples, but on the other hand, this decreased the efficiency in less critical examples. <p> The implementation of this criterion requires the iterative quantities " j , which | as we will see below | can be obtained cheaply from the PCG iteration. PCG method as inner iteration. In previous versions of cascade type algorithms | such as <ref> [5, 8, 7] </ref> | the criterion (1.31) could not be used, since there only rough discretization error indicators from the mesh refinement strategies were available. <p> Any such mesh refinement strategy will naturally aim at equidistributing the energy error. In the earlier version [7] of the cascade principle a mean value strategy 15 due to Bank [3] has been used. This strategy, however, sometimes produced unsatisfactory meshes in critical examples. Therefore, the more advanced versions <ref> [8] </ref> and [5] realized a mesh refinement technique in the spirit of Babu ska and Rheinboldt [1]. It is based on local extrapolation of energy error contributions from the edges as obtained by the edge oriented discretization error indicator due to [7]. <p> Remark. It should be mentioned that the above Fig. 8 does not contradict Fig. 10, p. 3198 in <ref> [8] </ref>, wherein the effect of BPX preconditioning versus no preconditioning has been exemplified as well. There, however, the iteration has been continued far below the discretization error.
Reference: [9] <author> P. Oswald: </author> <title> On Discrete Norm Estimates Related to Multilevel Precondi-tioners in the Finite Element Method. In: Proceedings of the International Conference on the Constructive Theory of Functions, </title> <note> Varna 1991 (to appear). </note>
Reference-contexts: preconditioner [6] | CCG: algorithm without any preconditioner In the simple case of the Laplace equation, the HB preconditioner is known to be nearly uniformly spectrally equivalent in 2-D | see [14], whereas the BPX preconditioner is known to be uniformly spectrally equivalent independent of the space dimension | see <ref> [9] </ref>. In 2-D, the expected numerical efficiency will be nearly the same for both preconditioners.
Reference: [10] <author> R. Roitzsch: </author> <note> KASKADE User's Manual. Konrad-Zuse-Zentrum Berlin (ZIB), Technical Report Report TR 89-4 (1989) </note>
Reference-contexts: In the former realization of this concept due to [7], the whole iteration control mechanism was based on cheap approximate energy error norms, which led to a close coupling between the local error estimators and the PCG termination criterion. In the course of further development | see <ref> [5, 8, 10, 11] </ref> | the unclear quality of this approximation motivated the use of rather stringent heuristic safety factors. On one hand, this increased the robustness in critical examples, but on the other hand, this decreased the efficiency in less critical examples.
Reference: [11] <author> R. Roitzsch: </author> <title> KASKADE programmer's manual. </title> <institution> Konrad-Zuse-Zentrum Berlin (ZIB), </institution> <note> Technical Report TR89-5 (1989). </note>
Reference-contexts: In the former realization of this concept due to [7], the whole iteration control mechanism was based on cheap approximate energy error norms, which led to a close coupling between the local error estimators and the PCG termination criterion. In the course of further development | see <ref> [5, 8, 10, 11] </ref> | the unclear quality of this approximation motivated the use of rather stringent heuristic safety factors. On one hand, this increased the robustness in critical examples, but on the other hand, this decreased the efficiency in less critical examples.
Reference: [12] <author> R. Winther: </author> <title> Some Superlinear Convergence Results for the Conjugate Gradient Method. </title> <journal> SIAM J. Numer. Anal. </journal> <volume> 17, </volume> <editor> p. </editor> <month> 14-17 </month> <year> (1980). </year> <month> 24 </month>
Reference-contexts: 2 m X " k (1.17) we obviously have the relation * 0 = * 0 * m+1 * 0 : (1.18) A corresponding bound for the left hand side of (1.15) can be obtained recalling that the cg method is superlinearly convergent even in Hilbert spaces (see e.g. 5 <ref> [12] </ref>) so that there exists a threshold index k 0 and an associated contraction factor fi such that " k fi" k1 ; fi &lt; 1 k &gt; k 0 : (1.19) This assumption implies that * m * m = 1 fi From (1.18) and (1.20) we can see that
Reference: [13] <author> J. Xu: </author> <title> Theory of Multilevel Methods. </title> <type> Thesis. AM 48, </type> <month> PennState </month> <year> (1989). </year>
Reference-contexts: In 2-D, the expected numerical efficiency will be nearly the same for both preconditioners. Based on the subtle condition number estimates of Xu <ref> [13] </ref>, the expectation for the algorithm without any preconditioning would be that it might be asymptotically disastrous in rather uniform grids (which exhibit a geometric increase of the number of nodes) and slightly less disastrous in highly non-uniform grids (with an additive increase of the number of nodes).
Reference: [14] <author> H. Yserentant: </author> <title> On the Multilevel Splitting of Finite Element Spaces. </title> <journal> Nu-mer. Math. </journal> <volume> 49, </volume> <editor> p. </editor> <month> 379-412 </month> <year> (1986). </year> <month> 25 </month>
Reference-contexts: In Section 2, the proposed CPCG method is illustrated by numerical experiments. The good old Laplace equation is once more used as a work horse. Comparison runs with the hierarchical bases preconditioner due to Yserentant <ref> [14] </ref>, the multilevel preconditioner due to Bramble, Pasciak and Xu [6] and even without any preconditioning are presented. <p> 2 (x 2 + y 2 x y) ; Dirichlet boundary conditions are imposed such that u = x (x 1)y (y 1) is the solution. 14 The comparative performance of the following three variants of the CPCG al- gorithm will be presented: | CPCG-HB: algorithm with hierarchical bases preconditioner <ref> [14] </ref> | CPCG-BPX: algorithm with multilevel BPX preconditioner [6] | CCG: algorithm without any preconditioner In the simple case of the Laplace equation, the HB preconditioner is known to be nearly uniformly spectrally equivalent in 2-D | see [14], whereas the BPX preconditioner is known to be uniformly spectrally equivalent independent <p> al- gorithm will be presented: | CPCG-HB: algorithm with hierarchical bases preconditioner <ref> [14] </ref> | CPCG-BPX: algorithm with multilevel BPX preconditioner [6] | CCG: algorithm without any preconditioner In the simple case of the Laplace equation, the HB preconditioner is known to be nearly uniformly spectrally equivalent in 2-D | see [14], whereas the BPX preconditioner is known to be uniformly spectrally equivalent independent of the space dimension | see [9]. In 2-D, the expected numerical efficiency will be nearly the same for both preconditioners.
References-found: 14

