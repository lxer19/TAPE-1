URL: ftp://ftp-db.deis.unibo.it/pub/stefano/hicss98.ps.gz
Refering-URL: http://www.cs.toronto.edu/~mendel/dwbib.html
Root-URL: 
Email: mgolfarelli@deis.unibo.it dmaio@deis.unibo.it srizzi@deis.unibo.it  
Title: Conceptual Design of Data Warehouses from E/R Schemes  
Author: Matteo Golfarelli Dario Maio Stefano Rizzi 
Affiliation: DEIS Univ. of Bologna DEIS, CSITE Univ. of Bologna DEIS Univ. of Bologna  
Note: Copyright 1998 IEEE. Published in the Proceedings of the Hawaii International Conference On System Sciences, January 6-9, 1998, Kona, Hawaii.  
Abstract: Data warehousing systems enable enterprise managers to acquire and integrate information from heterogeneous sources and to query very large databases efficiently. Building a data warehouse requires adopting design and implementation techniques completely different from those underlying information systems. In this paper we present a graphical conceptual model for data warehouses, called Dimensional Fact model, and propose a semi-automated methodology to build it from the preexisting Entity/Relationship schemes describing a database. Our conceptual model consists of treestructured fact schemes whose basic elements are facts, attributes, dimensions and hierarchies; other features which may be represented on fact schemes are the additivity of fact attributes along dimensions, the optionality of dimension attributes and the existence of non-dimension attributes. Compatible fact schemes may be overlapped in order to relate and compare data. Fact schemes may be integrated with information of the conjectured workload, expressed in terms of query patterns, to be used as the input of a design phase whose output are the logical and physical schemes of the data warehouse. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Barquin, and S. Edelstein. </author> <title> Planning and Designing the Data Warehouse. </title> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: The fact table stores fact attributes; its key is defined by importing the keys of the dimension tables. Different versions of these base schemes have been proposed in order to improve the overall performances <ref> [1] </ref>, handle the sparsity of data [13] and optimize the access to aggregated data [9]. In particular, the efficiency issues raised by data warehousing have been addressed by means of new indexing techniques (see [14] for a survey), among which we mention bitmap indices [13].
Reference: [2] <author> S. Chaudhuri, and U. Dayal. </author> <title> An overview of data warehousing and OLAP technology. </title> <booktitle> SIGMOD Record, </booktitle> <volume> vol. 26, </volume> <editor> n. </editor> <volume> 1, </volume> <pages> pp. 65-74, </pages> <year> 1997. </year>
Reference-contexts: roll-up, drill down, drill across and slice-and-dice; they are used, respectively, to aggregate fact attributes in order to view data at a higher level of abstraction, disaggregate fact attributes in order to introduce further detail, relate and compare distinct facts, select and project facts so as to reduce their dimensionality <ref> [2] </ref>. On a fact scheme, a query may be represented by a query pattern, which consists in a set of markers placed on the dimension attributes. One or more markers can be placed within each hierarchy, to indicate at what level (s) fact instances must be aggregated.
Reference: [3] <author> S. Chaudhuri, and K. Shim. </author> <title> Including group-by in query optimization. </title> <booktitle> In Proc. 20th Int. Conf. on Very Large Data Bases, </booktitle> <pages> pp. 354-366, </pages> <year> 1994. </year>
Reference-contexts: The first phase encompasses typical issues concerning distributed heterogeneous information services, such as inconsistent data, incompatible data structures, data granularity, etc. (for instance, see [16]). The third phase requires capabilities of aggregate navigation [7], optimization of complex queries <ref> [3] </ref>, advanced indexing techniques [11] and friendly visual interface to be used for OnLine Analytical Processing (OLAP) [4] and data mining [6]. As to the second phase, designing the DW requires techniques completely different from those adopted for operational information systems.
Reference: [4] <author> G. Colliat. </author> <title> OLAP, relational and multidimensional database systems. </title> <booktitle> SIGMOD Record, </booktitle> <volume> vol. 25, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 64-69, </pages> <year> 1996. </year>
Reference-contexts: The third phase requires capabilities of aggregate navigation [7], optimization of complex queries [3], advanced indexing techniques [11] and friendly visual interface to be used for OnLine Analytical Processing (OLAP) <ref> [4] </ref> and data mining [6]. As to the second phase, designing the DW requires techniques completely different from those adopted for operational information systems.
Reference: [5] <author> C. Fahrner, and G. Vossen. </author> <title> A survey of database transformations based on the Entity-Relationship model. </title> <journal> Data & Knowledge Engineering, </journal> <volume> vol. 15, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 213-250. </pages> <year> 1995. </year>
Reference-contexts: The Entity/Relationship (E/R) model is widespread in the enterprises as a conceptual formalism to provide standard documentation for relational information systems, and many efforts have been done to use E/R schemes as the input for designing non-relational databases as well <ref> [5] </ref>; unfortunately, as argued in [10]: "Entity relation data models [...] cannot be understood by users and they cannot be navigated usefully by DBMS software.
Reference: [6] <author> U.M. Fayyad, G. Piatetsky-Shapiro, and P. Smyth. </author> <title> Data mining and knowledge discovery in databases: an overview. </title> <journal> Comm. of the ACM, </journal> <volume> vol. 39, n.11, </volume> <year> 1996. </year>
Reference-contexts: The third phase requires capabilities of aggregate navigation [7], optimization of complex queries [3], advanced indexing techniques [11] and friendly visual interface to be used for OnLine Analytical Processing (OLAP) [4] and data mining <ref> [6] </ref>. As to the second phase, designing the DW requires techniques completely different from those adopted for operational information systems.
Reference: [7] <author> A. Gupta, V. Harinarayan, and D. Quass. </author> <title> Aggregate-query processing in data-warehousing environments. </title> <booktitle> In Proc. 21th Int. Conf. on Very Large Data Bases, </booktitle> <address> Zurich, Switzerland, </address> <year> 1995. </year>
Reference-contexts: The first phase encompasses typical issues concerning distributed heterogeneous information services, such as inconsistent data, incompatible data structures, data granularity, etc. (for instance, see [16]). The third phase requires capabilities of aggregate navigation <ref> [7] </ref>, optimization of complex queries [3], advanced indexing techniques [11] and friendly visual interface to be used for OnLine Analytical Processing (OLAP) [4] and data mining [6]. As to the second phase, designing the DW requires techniques completely different from those adopted for operational information systems.
Reference: [8] <author> V. Harinarayan, A. Rajaraman, and J. Ulman. </author> <title> Implementing Data Cubes Efficiently. </title> <booktitle> In Proc. of ACM Sigmod Conf., </booktitle> <address> Montreal, Canada, </address> <year> 1996. </year>
Reference-contexts: The multidimensional model may be mapped on the logical level differently depending on the underlying DBMS. If a DBMS supporting directly the multidimensional model is used, fact attributes are typically represented as the cells of multidimensional arrays whose indices are determined by key attributes <ref> [8] </ref>. On the other hand, in relational DBMSs the multidimensional model of the DW is mapped in most cases through star schemes [10] consisting of a set of dimension tables and a central fact table.
Reference: [9] <author> T. Johnson, and D. Shasha. </author> <title> Hierarchically split cube forests for decision support: description and tuned design. </title> <journal> Bullettin of Technical Committee on Data Engineering.vol. </journal> <volume> 20, </volume> <editor> n. </editor> <volume> 1, </volume> <year> 1997. </year>
Reference-contexts: The fact table stores fact attributes; its key is defined by importing the keys of the dimension tables. Different versions of these base schemes have been proposed in order to improve the overall performances [1], handle the sparsity of data [13] and optimize the access to aggregated data <ref> [9] </ref>. In particular, the efficiency issues raised by data warehousing have been addressed by means of new indexing techniques (see [14] for a survey), among which we mention bitmap indices [13].
Reference: [10] <author> R. Kimball. </author> <title> The data warehouse toolkit. </title> <publisher> John Wiley & Sons, </publisher> <year> 1996. </year>
Reference-contexts: The Entity/Relationship (E/R) model is widespread in the enterprises as a conceptual formalism to provide standard documentation for relational information systems, and many efforts have been done to use E/R schemes as the input for designing non-relational databases as well [5]; unfortunately, as argued in <ref> [10] </ref>: "Entity relation data models [...] cannot be understood by users and they cannot be navigated usefully by DBMS software. <p> On the other hand, in relational DBMSs the multidimensional model of the DW is mapped in most cases through star schemes <ref> [10] </ref> consisting of a set of dimension tables and a central fact table. Dimension tables are strongly denormalized and are used to select the facts of interest based on the user queries. The fact table stores fact attributes; its key is defined by importing the keys of the dimension tables. <p> Fact schemes with no fact attributes correspond, on the logical level, to factless fact tables, typically used for event tracking or as coverage tables <ref> [10] </ref>. 3.1. Additivity In general, querying an information system means linking different concepts through user-defined paths in order to retrieve some data of interest; in particular, for relational databases this is done by formulating a set of joins to connect relation schemes. <p> Aggregation requires to define a proper operator for composing the attribute values characterizing each fact instance into attribute values characterizing each cluster as a whole. As a guideline, most fact attributes should be additive <ref> [10] </ref>. This means that the sum operator can be used to aggregate attribute values along all hierarchies.
Reference: [11] <author> D. Lomet, and B. Salzberg. </author> <title> The Hb-Tree: a multidimensional indexing method with good guaranteed performance. </title> <journal> ACM Trans. On Database Systems, </journal> <volume> vol. 15, </volume> <editor> n. </editor> <volume> 44, pp.625-658, </volume> <year> 1990. </year>
Reference-contexts: The first phase encompasses typical issues concerning distributed heterogeneous information services, such as inconsistent data, incompatible data structures, data granularity, etc. (for instance, see [16]). The third phase requires capabilities of aggregate navigation [7], optimization of complex queries [3], advanced indexing techniques <ref> [11] </ref> and friendly visual interface to be used for OnLine Analytical Processing (OLAP) [4] and data mining [6]. As to the second phase, designing the DW requires techniques completely different from those adopted for operational information systems.
Reference: [12] <author> F. McGuff. </author> <title> Data modeling for data warehouses. </title> <month> October </month> <year> 1996. </year> <note> http://members.aol.com/fmcguff/dwmodel/dwmodel.htm. </note>
Reference-contexts: Data within a DW are organized according to the multidimensional model. In <ref> [12] </ref>, the author proposes an approach to the design of DWs based on a business model of the enterprise which is actually a relational database scheme.
Reference: [13] <author> P. O'Neil, and G. Graefe. </author> <title> Multi-table joins through bitmapped join indices. </title> <booktitle> SIGMOD Record, </booktitle> <volume> vol. 24, </volume> <editor> n. </editor> <volume> 3, </volume> <pages> pp. 8-11, </pages> <year> 1995. </year>
Reference-contexts: The fact table stores fact attributes; its key is defined by importing the keys of the dimension tables. Different versions of these base schemes have been proposed in order to improve the overall performances [1], handle the sparsity of data <ref> [13] </ref> and optimize the access to aggregated data [9]. In particular, the efficiency issues raised by data warehousing have been addressed by means of new indexing techniques (see [14] for a survey), among which we mention bitmap indices [13]. <p> order to improve the overall performances [1], handle the sparsity of data <ref> [13] </ref> and optimize the access to aggregated data [9]. In particular, the efficiency issues raised by data warehousing have been addressed by means of new indexing techniques (see [14] for a survey), among which we mention bitmap indices [13]. A bitmap index for attribute a is a matrix of bits with one column for each possible value a can assume and one row for each non-empty cell of a data-cube (or for each row of a fact table). 3.
Reference: [14] <author> S. Sarawagi. </author> <title> Indexing OLAP data. </title> <journal> Bullettin of Technical Committee on Data Engineering.vol. </journal> <volume> 20, </volume> <editor> n. </editor> <volume> 1, </volume> <year> 1997. </year>
Reference-contexts: In particular, the efficiency issues raised by data warehousing have been addressed by means of new indexing techniques (see <ref> [14] </ref> for a survey), among which we mention bitmap indices [13].
Reference: [15] <author> J. Widom. </author> <title> Research Problems in Data Warehousing. </title> <booktitle> In Proc. 4th Int. Conf. on Information and Knowledge Management, </booktitle> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: These information are brought together into a single repository, called a data warehouse (DW), suitable for direct querying and analysis and as a source for building logical data marts oriented to specific areas of the enterprise <ref> [15] </ref>. While it is universally recognized that a DW leans on a multidimensional model, little is said about how to carry out its conceptual design starting from the user requirements.
Reference: [16] <author> Y. Zhuge, H. Garcia-Molina, and J. L. Wiener. </author> <title> The Strobe Algorithms for Multi-Source Warehouse Consistency. </title> <booktitle> In Proc. Conference on Parallel and Distributed Information Systems, </booktitle> <address> Miami Beach, FL, </address> <year> 1996. </year>
Reference-contexts: The first phase encompasses typical issues concerning distributed heterogeneous information services, such as inconsistent data, incompatible data structures, data granularity, etc. (for instance, see <ref> [16] </ref>). The third phase requires capabilities of aggregate navigation [7], optimization of complex queries [3], advanced indexing techniques [11] and friendly visual interface to be used for OnLine Analytical Processing (OLAP) [4] and data mining [6].
References-found: 16

