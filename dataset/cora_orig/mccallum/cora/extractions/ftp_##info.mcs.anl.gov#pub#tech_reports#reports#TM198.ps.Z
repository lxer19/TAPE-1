URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/TM198.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/tech_memos.htm
Root-URL: http://www.mcs.anl.gov
Title: Users Guide for the ANL IBM SP1  
Author: William Gropp and Ewing Lusk Steven C. Pieper 
Note: This work was supported by the Office of Scientific Computing and the Nuclear Physics Division, U.S. Department of Energy, under Contract W-31-109-Eng-38.  
Date: October 1994  
Web: ANL/MCS-TM-198  http://www.mcs.anl.gov/gropp/sp1/guide/guide.html  
Address: 9700 South Cass Avenue Argonne, IL 60439  
Affiliation: ARGONNE NATIONAL LABORATORY  Mathematics and Computer Science Division  Physics Division  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Ralph Butler and Ewing Lusk. </author> <title> Monitors, messages, and clusters: The p4 parallel programming system. </title> <journal> Journal of Parallel Computing. </journal> <note> To appear (also Argonne National Laboratory, </note> <institution> Mathematics and Computer Science Division preprint MCS-P362-0493). </institution>
Reference-contexts: Documentation: No implementation-specific documentation is yet available. Our implementation uses Chameleon, so the usual Chameleon methods of preparing programs and starting jobs apply. Supported Transport Layers: EUI, EUI-H, Ethernet/IP, Switch/IP. Contact: gropp@mcs.anl.gov or lusk@mcs.anl.gov for more information. 8 3.2.4 p4 p4 <ref> [1, 2] </ref> is a portable message-passing system that runs on a very wide variety of parallel systems and workstations. It is in use at approximately 200 sites around the world. Existing p4 programs will run unchanged on the SP1.
Reference: [2] <author> Ralph Butler and Ewing Lusk. </author> <title> User's guide to the p4 parallel programming system. </title> <type> Technical Report ANL-92/17, </type> <institution> Argonne National Laboratory, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Documentation: No implementation-specific documentation is yet available. Our implementation uses Chameleon, so the usual Chameleon methods of preparing programs and starting jobs apply. Supported Transport Layers: EUI, EUI-H, Ethernet/IP, Switch/IP. Contact: gropp@mcs.anl.gov or lusk@mcs.anl.gov for more information. 8 3.2.4 p4 p4 <ref> [1, 2] </ref> is a portable message-passing system that runs on a very wide variety of parallel systems and workstations. It is in use at approximately 200 sites around the world. Existing p4 programs will run unchanged on the SP1. <p> Examples: `/usr/local/p4-1.3/examples' on bonnie and clyde contains C and Fortran examples, example makefiles, and a makefile that can be used to construct your makefiles with the appropriate options for the SP1's various transport layers. Documentation: `/home/lusk/ibm/p4-1.3/docs' contains the latexinfo source for the manual <ref> [2] </ref>, an ASCII version, and the Postscript for a reference card. `/home/lusk/p4.manual' contains the Postscript for the manual itself in (`p4.ps'). The manual is also online via info and any of the inside-Emacs or stand-alone info readers (e.g., gnu-info). Supported Transport Layers: EUI, EUI-H, Ethernet/IP, Switch/IP.
Reference: [3] <author> Message Passing Interface Forum. </author> <title> Document for a standard message-passing interface. </title> <type> Technical Report CS-93-214, </type> <institution> University of Tennessee, </institution> <month> November </month> <year> 1993. </year>
Reference-contexts: Contact: fortran-m@mcs.anl.gov for more information. 7 3.2.3 MPI MPI (Message Passing Interface) is a new message-passing system "standard" that has recently been defined by a broadly based group of parallel computing vendors, library writers (including us), and users. The current draft is now in the public-comment stage <ref> [3] </ref>. It should be finalized in the spring of 1994. The current draft is available in `/home/gropp/MPI/mpi-report.tex' and `mpi-report.ps'. A version is available on the World Wide Web.
Reference: [4] <author> William D. Gropp and Barry F. Smith. </author> <title> Chameleon parallel programming tools users manual. </title> <type> Technical Report ANL-93/23, </type> <institution> Argonne National Laboratory, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: Chameleon provides a common startup model that simplifies choosing a transport layer. Examples: `/home/gropp/tools.n/comm/examples' contains C and Fortran examples as well as makefiles. Documentation: `/home/gropp/tools.n/docs/tutorial/parallel.tex'. The script `/home/gropp/tools.n/bin/toolman' will start an xman for the manual pages for the Chameleon routines (and others). See also <ref> [4] </ref>. Supported Transport Layers: EUI, EUI-H, p4 Special Comments: The Chameleon makefiles provide portability by using names defined on the make command line. You should set ARCH=rs6000 and BOPT=g (for debugging) or BOPT=O (for production) 6 and COMM=p4, COMM=eui, or COMM=euih for the transport layers p4, EUI, and EUI-H, respectively. <p> Contact: gropp@mcs.anl.gov for more information. How to compile and link: Examples may be found in `/usr/local/tools.core /comm/examples'. Chameleon uses fairly complicated makefiles to achieve portability to a wide variety of systems; you should look at the Chameleon manual <ref> [4] </ref> for more details. The value of ARCH for the SP1 is rs6000. If you are using the usual Chameleon makefile, an appropriate make line for EUI-H is make ARCH=rs6000 COMM=euih BOPT=O How to run: Chameleon provides a nearly consistent interface for all transport layers.
Reference: [5] <author> Virginia Herrarte and Ewing Lusk. </author> <title> Studying parallel program behavior with Upshot. </title> <type> Technical Report ANL-91/15, </type> <institution> Argonne National Laboratory, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: This is useful for finding the cause of deadlock in parallel applications. 7.4 upshot Upshot <ref> [5] </ref> is a portable X Windows program for visualizing the behavior of a parallel program. Both Chameleon and p4 can generate the event logs that upshot reads. To generate an event log from Chameleon, use the -event flag a.out -np 4 -event This generates a file `bl'.
Reference: [6] <author> Peter Hochschild. </author> <title> Using EUIH: An Experimental EUI Implementation. </title> <institution> IBM, </institution> <year> 1993. </year>
Reference-contexts: All 128 nodes may be accessed using EUI-H when the machine is configured for that (usually at night when a request has been made (see Section 4.6 [Scheduling Use of the SP1], page 16). Features specific to EUI-H are documented in <ref> [6] </ref>. Note that this version of EUI-H is the version of IBM Research; it contains only the Fortran bindings for EUI. 3.1.5 Identifying a Transport Layer Being Used The transport layer used depends on the parallel environment chosen and possibly the hostnames.
Reference: [7] <author> IBM. </author> <title> IBM AIX Parallel Environment Parallel Programming Subroutine Reference Release 2.0, </title> <month> June </month> <year> 1994. </year>
Reference-contexts: In addition, at most 64 nodes are available to EUI. EUI is documented in <ref> [7] </ref>. 3.1.4 EUI-H EUI-H is an experimental, low-overhead implementation of the EUI interface. EUI-H does not support either xpdbx or vt. It is difficult to provide standard input to EUI-H programs (but see Section 3.2.1 [Chameleon], page 6).
Reference: [8] <author> D. H. Lawrie. </author> <title> Access and alignment of data in an array processor. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-24(12):1145-1155, </volume> <month> December </month> <year> 1975. </year> <month> 41 </month>
Reference-contexts: Higher performance can be reached by using the BLAS or ESSL routines. There is a "wiring" diagram in `spnode1:/tmp/actual.top' for the 128-way system and `spnode65:/tmp/actual.top' for the upper 64-way system (actually, just one half of the links; all are assumed bidirectional). For a reference to the omega network, see <ref> [8] </ref>. 2.2 Software Since each SP1 node is running a full Unix, most of the usual Unix tools are available. Users may log directly into any SP1 node by using telnet, rlogin, or rsh.
References-found: 8

