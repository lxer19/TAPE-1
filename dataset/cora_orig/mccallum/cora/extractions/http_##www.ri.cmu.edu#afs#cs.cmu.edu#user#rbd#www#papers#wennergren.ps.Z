URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/rbd/www/papers/wennergren.ps.Z
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/rbd/www/bib-musund.html
Root-URL: 
Title: Recent Work In Real-Time 1 Music Understanding By Computer  
Author: Roger B. Dannenberg 
Address: Pittsburgh, PA 15213 USA  
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: Music Understanding refers to the recognition or identification of structure and pattern in musical information. Three distinct music understanding projects initiated by the author are discussed. In the first, Computer Accompaniment, the goal is to follow a performer in a score. Knowledge of the position in the score as a function of time can be used to synchronize an accompaniment to the live performer and automatically adjust to tempo variations. In the second project, it is shown that statistical methods can be used to recognize the location of an improvisor in a cyclic chord progression such as the 12-bar blues. This problem is similar to Computer Accompaniment; however, much less information is conveyed by any one note because pitches are not predetermined. The third project, Beat Tracking, attempts to identify musical beats using note-onset times from a live performance. Parallel search techniques are used to consider several hypotheses simultaneously, and both timing and higher-level musical knowledge are integrated to evaluate the hypotheses. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Allen, P. E., and R. B. Dannenberg. </author> <year> (1990). </year> <title> Tracking Musical Beats in Real Time. </title> <booktitle> In Proc. of the 1990 International Computer Music Conf., </booktitle> <institution> Computer Music Association, </institution> <note> (to appear). </note>
Reference-contexts: Furthermore, once the foot tapper gets off the beat, it is very difficult to lock back into synchronization. I am currently working with Paul Allen on a system that is designed to be both reliable and responsive to tempo change <ref> (Allen and Dannenberg, 1990) </ref>. Our 6 observation was that simpler foot tappers often came to a situation where the interpretation of a note onset was ambiguous.
Reference: <author> Bloch, J. J. and R. B. Dannenberg. </author> <year> (1985). </year> <title> Real-Time Computer Accompaniment of Keyboard Performances. </title> <booktitle> In Proc. of the 1985 International Computer Music Conf., Computer Music Association, </booktitle> <pages> 279-290. </pages>
Reference-contexts: It is important in this case to allow notes within a chord (compound event) in the score to arrive in any order. (Note that the LCS algorithm disallows reordering.) The resulting algorithm is time-independent. This work was performed with Joshua Bloch <ref> (Bloch and Dannenberg, 1985) </ref> and the reader is referred to our paper for further details. The Matcher performs a fairly low-level recognition task where efficiency is important and relatively little knowledge is required.
Reference: <author> Chafe, C., B. Mont-Reynaud, and L. Rush. </author> <year> (1982). </year> <title> Toward an Intelligent Editor of Digital Audio: Recognition of Musical Constructs. </title> <journal> Computer Music Journal 6(1), </journal> <pages> 30-41. </pages>
Reference-contexts: This improvisation understanding task can be divided into two subtasks: finding the beat and finding the harmonic progression. After lengthy discussions with Bernard Mont-Reynaud, who developed beat-tracking software for an automatic music transcription system <ref> (Chafe et. al., 1982) </ref>, we decided to collaborate in the design and implementation of a ``blues follower'' program (Dannenberg and Mont-Reynaud, 1987). Dr. Mont-Reynaud designed the beat follower or ``foot tapper'', and I designed the harmonic analysis software.
Reference: <author> Dannenberg, R. B. </author> <year> (1984). </year> <title> An On-Line Algorithm for Real-Time Accompaniment. </title> <booktitle> In Proc. of the 1984 International Computer Music Conf., Computer Music Association, </booktitle> <pages> 193-198. </pages>
Reference-contexts: Note that the computer performs a precomposed part, so there is no real-time composition involved but rather a responsive synchronization. Several computer accompaniment systems have been implemented by the author and his colleagues <ref> (Dannenberg, 1984, Bloch and Dannenberg, 1985, Dannenberg and Mukaino, 1988) </ref>. These differ from the accompaniment systems of others (Vercoe and Puckette, 1985, Lifton, 1985) primarily in the algorithms used for score following. Only the score following component developed by the author will be described here.
Reference: <author> Dannenberg, R. B. and B. Mont-Reynaud. </author> <year> (1987). </year> <title> Following an Improvisation in Real Time. </title> <booktitle> In Proc. of the 1987 International Computer Music Conf., Computer Music Association, </booktitle> <pages> 241-248. </pages>
Reference-contexts: After lengthy discussions with Bernard Mont-Reynaud, who developed beat-tracking software for an automatic music transcription system (Chafe et. al., 1982), we decided to collaborate in the design and implementation of a ``blues follower'' program <ref> (Dannenberg and Mont-Reynaud, 1987) </ref>. Dr. Mont-Reynaud designed the beat follower or ``foot tapper'', and I designed the harmonic analysis software. Since ``foot tapping'' is the subject of the next section, we will proceed to the 4 problem of harmonic analysis.
Reference: <author> Dannenberg, R. B. and H. Mukaino. </author> <year> (1988). </year> <title> New Techniques for Enhanced Quality of Computer Accompaniment. </title> <booktitle> In Proc. of the 1988 International Computer Music Conf., Computer Music Association, </booktitle> <pages> 243-249. </pages>
Reference-contexts: Several systems have been implemented based on these techniques, and the results are quite good. Recent work has extended the Matcher to handle trills, glissandi, and grace notes as special cases that would otherwise cause problems <ref> (Dannenberg and Mukaino, 1988) </ref>, and this version has been used successfully for several concerts. 3. Following Improvisations Knowledgeable listeners can often identify a popular song even when the melody is not played. This is possible because harmonic and rhythmic structures are present even without the melody.
Reference: <author> Lifton, John. </author> <year> (1985). </year> <title> Some Technical and Aesthetic Considerations in Software for Live Interactive Performance. </title> <booktitle> In Proc. of the 1985 International Computer Music Conf., Computer Music Association, </booktitle> <pages> pages 303-306. </pages>
Reference-contexts: Several computer accompaniment systems have been implemented by the author and his colleagues (Dannenberg, 1984, Bloch and Dannenberg, 1985, Dannenberg and Mukaino, 1988). These differ from the accompaniment systems of others <ref> (Vercoe and Puckette, 1985, Lifton, 1985) </ref> primarily in the algorithms used for score following. Only the score following component developed by the author will be described here. Score following can be considered to have two subtasks as shown in figure 1. 2.1.
Reference: <author> Longuet-Higgins, H. C. and C. S. Lee. </author> <year> (1982). </year> <title> The Perception of Musical Rhythms. </title> <journal> Perception, </journal> <volume> 11, </volume> <pages> 115-128. </pages>
Reference: <editor> Sankoff, D. and J. B. Kruskal (eds.). </editor> <year> (1983). </year> <title> Time Warps, String Edits, and Macromolecules: The Theory and Practice of Sequence Comparison. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass. </address>
Reference-contexts: The matcher described here overcomes this problem and works well in practice. The matcher is derived from the dynamic programming algorithm for finding the longest common subsequence (LCS) of two strings <ref> (Sankoff and Kruskal, 1983) </ref>. Imagine starting with two strings and eliminating arbitrary characters from each string until the the remaining characters (subsequences) match exactly. If these strings represent the performance and score, respectively, then a common subsequence represents a potential correspondence between performed notes and the score (see figure 2).
Reference: <author> Vercoe, B. and M. Puckette. </author> <year> (1985). </year> <title> Synthetic Rehearsal: Training the Synthetic Performer. </title> <booktitle> In Proc. of the 1985 International Computer Music Conf., Computer Music Association, </booktitle> <pages> 275-278. 9 </pages>
Reference-contexts: Several computer accompaniment systems have been implemented by the author and his colleagues (Dannenberg, 1984, Bloch and Dannenberg, 1985, Dannenberg and Mukaino, 1988). These differ from the accompaniment systems of others <ref> (Vercoe and Puckette, 1985, Lifton, 1985) </ref> primarily in the algorithms used for score following. Only the score following component developed by the author will be described here. Score following can be considered to have two subtasks as shown in figure 1. 2.1.
References-found: 10

