URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr92/tr92-038.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr92-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Hybrid Heterogeneous Hierarchical Models for Knowledge-Based Autonomous Systems The need to efficiently represent each level
Author: Victor T. Miller Paul A. Fishwick 
Note: 1.0 INTRODUCTION  
Address: 231 Aero building Gainesville, Florida, 32611  Gainesville, Florida, 32611  
Affiliation: University of Florida, Department of Aerospace and Mechanical Engineering Sciences  University of Florida, Department of Computer and Information Science 301 Bldg CSE  
Abstract: Complex High Autonomy Systems generally require the use of multiple modelling formalisms and multiple levels of abstraction in order to accurately and efficiently describe their dynamic characteristics. It is often necessary to integrate several modelling formalisms together if we want to reason about, simulate or analyze a system. Moreover, the use of a hierarchical representation helps us to more intelligently organize the models during development. We discuss a general modelling approach called Hybrid Heterogeneous Hierarchical Modelling (HHH Modelling) which supports multiple representations and hierarchical development of Knowledge-Based Autonomous System Simulations. In this context, we discuss methods to describe how different modelling formalisms may interact with each other in terms of data input/output and inter-model coordination (coordination between two different models). However, our major focus will be on intra-model coordination. Intra-model coordination is a method by which the components of a model can be coordinated with other models. For instance, when the state of a finite state machine is coordinated with a Petri net. The benefits of intra-model coordination become clear when hybrid analysis methods (symbolic, numerical, and knowledge-based) are applied to a single model. 
Abstract-found: 1
Intro-found: 1
Reference: [Bob] <author> Bobrow D.G. (ed), </author> <title> Qualitative Reasoning about Physical Systems, </title> <publisher> MIT Press, </publisher> <address> Cambridge Massachusetts, </address> <year> 1986. </year>
Reference-contexts: Each formalism has several consistent naming schemes which can be compiled into a consistent fact-base. The knowledge-base is a set of rules which are based on how controllers work and how each of the individual formalisms model semantics. We call these formalism rules. For instance, Qualitative Reasoning methods <ref> [Bob] </ref> form part of the knowledge-base for block diagrams. Together with the fact-base, the knowledge-base can interpret the model. We will use a pseudo-Prolog representation to present the interpretation process. It is assumed that the interpretation process uses a goal directed deduction algorithm (also one which allows for truth-maintenance). <p> If this failed, the trace [] function can use methods such and constraint propagation [] and qualitative simulation <ref> [Bob] </ref> to derive an answer (if possible) for the nextState []. Note that the NextState [] facts can be derived directly from knowledge about formalisms. From Figures 13 and 14, we can derive NextState [OverTime, Normal , (Size&lt;Min)] NextState [Both up, Robot 1 down, Stochastic (0.25)].
Reference: [Fish91a] <author> Fishwick P. A., </author> <title> "Heterogeneous Decomposition and Inter-Level Coupling for Combined Modeling," </title> <booktitle> In 1991 Winter Simulation Conference, </booktitle> <month> December </month> <year> 1991, </year> <note> Phoenix, AZ, pp. 1120- 1128. </note>
Reference-contexts: Other modelling formalisms may provide the means to discern important features that are not evident in other formalisms (conceptual efficiency). The use and benefits of multiple models types has been investigated in theories such as multifacetted modelling [Zeig84] and heterogeneous inter-level refinement <ref> [Fish91a] </ref>. The general concept of heterogeneous modelling which we discuss in this paper draws upon research in multi-models, combined models, multifacetted models, homomorphic models, and abstract models. One of the ways of advancing the field of simulation requires improving the available modelling methods [ren].
Reference: [Fish91b] <author> Fishwick P. A., </author> <title> "Fuzzy Simulation: Specifying and Identifying Qualitative Models," </title> <journal> International Journal of General Systems, </journal> <volume> Volume 19, Number 3, </volume> <year> 1991, </year> <pages> pp. 295 - 316. </pages>
Reference-contexts: Numerical techniques refers to traditional computational simulation methods and numerical approximation. Interpretation methods are those that are related to the field of Artificial Intelligence and Knowledge Engineering. These range from fuzzy or quantitative simulation <ref> [Fish91b] </ref> up to and including logic methods and semantic networks. In general, Hybrid analysis (symbolic, numeric, and interpretative) requires different model specification strategies and processes for each type of analysis. This duplicates a substantial amount of effort on the part of the investigator.
Reference: [Fish92] <author> Fishwick P. A., and Zeigler B.P., </author> <title> "A Multimodel Methodology for Qualitative Model Engineering," </title> <journal> ACM Transactions on Modelling and Computer Simulation. </journal> <volume> (Volume 2, Issue 1, </volume> <year> 1992). </year>
Reference-contexts: We call the extended theory hybrid model theory. Hybrid model theory is a direct attempt to simultaneously embrace two themes which are directly related to HHH modelling. First, it expands, clarifies, and establishes a solid mathematical foundation for the notion of heterogeneous refinement as introduced in <ref> [Fish92] </ref>. In Fishwick and Zeigler's presentation, the concept of heterogeneous refinement was described as a method which helps bridge the gap between AI and simulation models in a formal manner. <p> This is quite different from inter-model coordination where, for instance, the output of a state machine is the input to a block diagram. In intra-model coordination, for example, a state component in a state machine controller model is replaced by a block diagram model <ref> [Fish92] </ref>. The controller model of a state machine essentially keeps track of several component models. Whether these components are simple state models which are based on conditions (input = 'a' etc.) or complex models like block diagrams is inconsequential to the controller.
Reference: [Gra] <author> Graybeal, W.J., and U.W. Pooch, </author> <title> Simulation: Principles and Methods, </title> <publisher> Winthrop Publishers, Inc., </publisher> <year> 1980. </year>
Reference-contexts: A purely symbolic result for several attributes of interest can also be obtained from the queuing network. For example, because the network was defined as a M/M/C/ /FIFO system, the expected number of palettes in the model is <ref> [Gra] </ref> TR92-038 Computer Information Sciences, University of Florida 27 L palette = (C-1)!(Cm - l) l lm (l / m) 2 [ ] P 0 1 P 0 = + ] [ ( m ) C! ( m ) ( Cm -1 C-1 where C = 2, the number of servers
Reference: [Mill92] <author> Miller V.T., </author> <title> and P.A. Fishwick, "Reasoning with Heterogeneous Hierarchical Models," </title> <booktitle> Applications of Artificial Intelligence X: Knowledge-Based Systems, </booktitle> <address> Orlando FL., </address> <month> April </month> <year> 1992. </year>
Reference-contexts: The static information would stipulate, for instance, that an assembly is made of parts (madeOf [assembly, parts]). Combining semantic nets and mathematical formalism like queuing networks in the context of HHH modelling is discussed in <ref> [Mill92] </ref>. Simple state information can be derived from the semantics of the queues and servers labeled with nouns.
Reference: [Mill93] <author> Miller V.T., </author> <title> "Hybrid Heterogeneous Hierarchical Models for Knowledge-Based Autonomous Systems," </title> <institution> University of Florida, Computer and Information Sciences Department, </institution> <type> Ph.d. Dissertation, </type> <year> 1993. </year> <title> [ren] ren T.I., "Bases for Advanced Simulation: Paradigms for the Future," Modelling and Simulation Methodology, </title> <publisher> North-Holland, </publisher> <year> 1989, </year> <note> Chapter I.2. </note>
Reference-contexts: Hybrid model theory deals with the alteration and investigation of incomplete or incorrect models. With this in mind, we introduce the definition of a model in hybrid model theory <ref> [Mill93] </ref>. <p> In the next section, an example is given to show why. This is a semantic requirement imposed by hybrid model theory. There are several of these semantic requirements <ref> [Mill93] </ref> which not only make coordination possible, but allow for symbolic and interpretation analysis. However, all of the requirements can easily be checked automatically by a HHH model compiler. <p> The form of transition, output, and memory functions of controllers are all very similar. Because of this, we can generalize the interpretation of models and optimize during numerical analysis. The mathematical presentation of these functions can be found in <ref> [Mill93] </ref>. For exemplary purposes we have converted the transition function of a parallel controller into pseudo-code: While continue [input_time, Q.current_time] For Each a A a.d [a.t.map [Q.current_time]] endFor update [Q.current_time] end While return Q The program shows that a parallel controller loops twice. <p> However, during interpretation it is necessary to keep these functions separate. This makes it easy to ascertain specific information. The selective and state controller models also have well-defined transition, memory, and output functions. These are also presented in <ref> [Mill93] </ref>. TR92-038 Computer Information Sciences, University of Florida 21 5.0 KAS MODELLING The following discussion is based on the process an investigator might go through in an attempt to model an Automated Flexible Manufacturing System (AFMS). <p> Each model's delta time is examined to determine the minimum time slice required for the simulation. Those models whose delta times are greater than the simulations time period are considered as static systems. A more complete treatment of numerical analysis (simulation) can be found in <ref> [Mill93] </ref>. To perform a numerical analysis, the entire model must be checked for completeness (compiled). The compiler requires default values for variables at the leaf models in the hierarchical model, but does not require a complete conceptual model (by numerical values we also mean fuzzy numbers [Zad]).
Reference: [Prh] <author> Prhofer H., </author> <title> "System Theoretic Foundations for combined discrete-Continuous System Simulation," </title> <institution> Doktor der technischen Wissenschaften, Dept. of Systems Theory and Information Engineering, Johannes Kepler University, Linz, Austria, 1991. TR92-038 Computer Information Sciences, University of Florida 40 </institution>
Reference-contexts: The modifications will not alter the behavior of the formalisms. In some cases, however, the computational power of the formalisms may increase. General system theory (GST) will be the foundation upon which we develop a theory for HHH modelling. GST has already been used for multi-models <ref> [Prh] </ref>. However, the GST definition does not have sufficient structure for what we call component coordination (GST does handle model coordination and was therefore a good starting point). Also, GST does not clearly integrate with domain independent knowledge-base reasoning techniques. <p> The third element which classifies a formalism is the way in which time is used. There has already been significant advances in combined discrete-event and continuous model simulation through the use of time TR92-038 Computer Information Sciences, University of Florida 7 bases <ref> [Prh] </ref>. This will form the foundation for hybrid model theory. Once again however, we extend the time description to include elements necessary for symbolic and interpretation methods. We call this extension a Time Domain.
Reference: [Roth] <editor> Rothenberg J., </editor> <booktitle> "Artificial Intelligence and Simulation (Tutorial)," Winter SImulation Conference 1990, </booktitle> <pages> pp. 22-24. </pages>
Reference-contexts: Furthermore, we assert that no one modelling formalism will provide such a representation. This assertion is based upon the pragmatics of model building. Specific modelling formalisms are used by investigators because they are convenient to use, have preferable attributes, or fulfill some pragmatic requirement <ref> [Roth] </ref>. We clearly identify two dilemmas to investigators of KAS systems. First, since pragmatic issues are dictated by the investigators preferences and convenience, and pragmatic issues vary within different sections of large complex systems, a single modelling formalism locks the investigator into a method which is neither preferable nor convenient.
Reference: [Schr] <author> Schriber T.J., </author> <title> An Introduction to Simulation Using GPSS/H, </title> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <year> 1991 </year>
Reference-contexts: The second dilemma concerns the trade-offs between convenience and generality. For example, queuing networks may be efficient for modelling arrival/departure behavior, but not general enough for the modelling of complex KAS models. Similarly, simulation languages such as GPSS <ref> [Schr] </ref> are general enough to be used for almost all types of simulation, but lack the developmental efficiency, conceptual efficiency and convenience of mathematical based modelling formalisms. Additionally, simulation languages have traditionally lacked symbolic and interpretative analysis methods.
Reference: [Stan] <author> Standridge C.R, and A. B. Pritsker, </author> <title> TESS - The extended Simulation Support System, </title> <publisher> Halsted Press 1987. </publisher>
Reference-contexts: The process of modelling the AFMS in section 5.1 is not just a graphical interface method for a simulation language (like TESS <ref> [Stan] </ref> is for GPSS).
Reference: [Wym] <author> Wymore A. W., </author> <title> A Mathematical Theory of Systems Engineering: the elements, </title> <editor> Rober E. </editor> <publisher> Krieger Publishing Co., </publisher> <address> Huntington New York, </address> <year> 1977. </year>
Reference-contexts: Group Controller Model state machine Petri net queuing net TR92-038 Computer Information Sciences, University of Florida 8 Inter-model coordination is another term for model coupling <ref> [Zieg84, Wym] </ref>. Because hybrid model theory has incorporated system theory (next section), this type of coordination will not be extensively explained. Model coupling can be found in most system theory literature. <p> General system theory will be used as a starting point towards developing a common representation for the formalisms which we have chosen. This section introduces the mathematical foundation of general system theory for background purposes; a more complete presentation can be found in <ref> [Wym] </ref>.
Reference: [Zad] <author> Zadeh L.A., K. Fu, K. Tanaka, and M Shimura, </author> <title> Fuzzy Sets and their Application to Cognitive and Decision Processes, </title> <publisher> Academic Press, </publisher> <year> 1975. </year>
Reference-contexts: To perform a numerical analysis, the entire model must be checked for completeness (compiled). The compiler requires default values for variables at the leaf models in the hierarchical model, but does not require a complete conceptual model (by numerical values we also mean fuzzy numbers <ref> [Zad] </ref>). It would be nice if the system could set up default initial conditions for the investigator. However, this is not the purpose of HHH modelling or hybrid model theory.
Reference: [Zeig76] <author> Zeigler B.P., </author> <title> Theory of Modelling and Simulation, </title> <publisher> John Wiley, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: The magnitude comparison can be used to circumscribe the system when any of the three types of analysis (symbolic, numerical, interpretation) are required. 3.4 Named Sets In systems theory, a convenient representation of "assignment" is represented by a structured set <ref> [Zeig76, Zeig84] </ref>. In this paper, we simply call these sets named.
Reference: [Zeig84] <author> Zeigler B.P., </author> <title> Multifacetted Modelling and Discrete Event Simulation, </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1984. </year> <institution> TR92-038 Computer Information Sciences, University of Florida 41 </institution>
Reference-contexts: Other modelling formalisms may provide the means to discern important features that are not evident in other formalisms (conceptual efficiency). The use and benefits of multiple models types has been investigated in theories such as multifacetted modelling <ref> [Zeig84] </ref> and heterogeneous inter-level refinement [Fish91a]. The general concept of heterogeneous modelling which we discuss in this paper draws upon research in multi-models, combined models, multifacetted models, homomorphic models, and abstract models. One of the ways of advancing the field of simulation requires improving the available modelling methods [ren]. <p> The magnitude comparison can be used to circumscribe the system when any of the three types of analysis (symbolic, numerical, interpretation) are required. 3.4 Named Sets In systems theory, a convenient representation of "assignment" is represented by a structured set <ref> [Zeig76, Zeig84] </ref>. In this paper, we simply call these sets named.
References-found: 15

