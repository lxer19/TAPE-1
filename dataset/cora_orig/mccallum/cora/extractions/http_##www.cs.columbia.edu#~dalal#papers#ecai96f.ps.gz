URL: http://www.cs.columbia.edu/~dalal/papers/ecai96f.ps.gz
Refering-URL: http://www.cs.columbia.edu/~dalal/papers.html
Root-URL: http://www.cs.columbia.edu
Title: Semantics of an Anytime Family of Reasoners  
Author: Mukesh Dalal 
Abstract: An anytime family of propositional reasoners is a sequence R 0 ; R 1 ; : : : of inference relations such that each R i is sound, tractable, and makes more inferences than R i1 , and each theory has a complete reasoner in the family. Anytime families are useful for resource-bounded reasoning in knowledge representation systems. Although several anytime families have been proposed in the literature, only one of them has been provided with a model-theoretic semantics. We present model-theoretic semantics for a new anytime family of reasoners that are based on Boolean Constraint Propagation. For proving soundness and completeness results, we develop a new knowledge compilation technique called vivification. This allows us to obtain logically equivalent theories for which Boolean Constraint Propagation efficiently makes all logical inferences. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. D. Belnap, </author> <title> `A useful four-valued logic', in Modern Uses of Multiple-Valued Logics, </title> <editor> eds., G. Epstein and J. M. Dunn, </editor> <publisher> Reidel, </publisher> <year> (1977). </year>
Reference-contexts: Intuitively, a valuation maps atoms to real numbers in the closed interval [0,1]. This mapping naturally extends to negative literals (one minus the valuation of the atom) and formulas (sum of valuations of the literals in the support set): Definition: A valuation is a function A ! <ref> [0; 1] </ref>. A valuation v is extended to the set of formulas as follows: 1. v (:p) = 1 v (p), for any atom p; 2. v ( ) = Sfv (ff) j ff 2 S ( )g, for any formula . <p> Other families of reason-ers [18, 10] have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in <ref> [1, 19, 17] </ref>, Cadoli and Schaerf [6] presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [2] <author> C. E. Blair, R. G. Jeroslow, and J. K. Lowe, </author> <title> `Some results and experiments in programming techniques for propositional logc', </title> <journal> Comput. and Operations Research, </journal> <volume> 13(5), </volume> <pages> 633-645, </pages> <year> (1986). </year>
Reference-contexts: In this paper, we provide a model-theoretic semantics for the anytime family ` BCP = ` BCP 1 ; : : : given in [12]. Since ` BCP is defined using boolean constraint propagation (BCP) [23], the semantics of ` BCP is based on the semantics of BCP <ref> [2, 13] </ref>. 1 Columbia University, Department of Computer Science. New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. Although BCP is an efficient linear-time method [23, 27], it does not make all inferences that are logically entailed. <p> The reasoner ` BCP 0 is complete for Horn, positive, and negative theories, while the reasoner ` BCP 1 is also complete for 2-CNF theories. For example, G 0 ` BCP 0 P 1 S. 3 MODEL-THEORETIC SEMANTICS In this section, we extend the semantics of BCP <ref> [2, 13] </ref> to the anytime family ` BCP . Some of the definitions are taken from [13]: The set of literals occurring in a formula is called the support set of the formula: Definition: The support set, S ( ), of any formula is defined as follows: 1.
Reference: [3] <author> M. Boddy and T. Dean, </author> <title> `Solving time dependent planning problems', </title> <type> Technical report, </type> <institution> Dept. of Computer Science, Brown University, </institution> <year> (1988). </year>
Reference-contexts: The incompleteness of these reasoners make them unsuitable for several tasks where more inferences are needed [16]. An attractive approach that is tractable as well as complete in the limit is based on the notion of anytime reasoners <ref> [3] </ref>. They are complete reasoners that provide partial answers even if stopped prematurely; the degree of completeness of the answer improves with the time used in computing the answer.
Reference: [4] <author> H.K. Buning, </author> <title> `On generalized Horn formulas and k-resolution', </title> <journal> Theoretical Computer Science, </journal> <volume> 116, </volume> <pages> 405-413, </pages> <year> (1993). </year>
Reference-contexts: (G; k) ` BCP In particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In [12], we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments [6], bounded resolution <ref> [18, 4] </ref>, and access-limited logics [9, 10]. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6].
Reference: [5] <author> M. Cadoli, </author> <title> `Panel on knowledge compilation and approximations: terminology, questions, and references', </title> <booktitle> in Fourth International Symposium on Artificial Intelligence and Mathematics (AI/MATH-96), </booktitle> <pages> pp. 183-186, </pages> <address> Florida, </address> <year> (1996). </year>
Reference-contexts: The term vivid is inspired by [20], where vivid theories are ones where an answer can be read off quickly. For a knowledge base that is accessed frequently, it might be useful to compile its theory into an equivalent vivid theory <ref> [25, 5] </ref>. This process of vivification is defined using a fixed-point construction based on inferences made by BCP. By suitably restricting this construction, we also define notions of partial vivification. Partial vivification provides a complete characterization of the reasoners in the anytime family ` BCP .
Reference: [6] <author> M. Cadoli and M. Schaerf, </author> <title> `Approximation in concept description languages', </title> <booktitle> in Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <editor> eds., B. Nebel, C. Rich, and W. </editor> <booktitle> Swartout, </booktitle> <pages> pp. 330-341, </pages> <address> Cambridge, Mas-sachusetts, (1992). </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: Such a family is called an anytime family of reasoners, since given any reasoning task, one can presumably start with ` 0 , and successively proceed to the next reasoner if more time is available. <ref> [6] </ref> also presented a family of reasoners that can be viewed as an anytime family (some details of this family are given in Section 6). The two anytime families cited above are incomparable, that is, different inferences are made at corresponding levels. Although the reasoners in [6] were specified using a <p> more time is available. <ref> [6] </ref> also presented a family of reasoners that can be viewed as an anytime family (some details of this family are given in Section 6). The two anytime families cited above are incomparable, that is, different inferences are made at corresponding levels. Although the reasoners in [6] were specified using a model-theoretic semantics, no model-theoretic semantics is known for the reasoners in [12] which have been specified using inference rules. This is a serious problem, since the importance of model-theoretic semantics for reasoners has been convincingly established in several papers (c.f. [19]). <p> Viv (G; k) ` BCP In particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In [12], we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments <ref> [6] </ref>, bounded resolution [18, 4], and access-limited logics [9, 10]. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. <p> BCP of reasoners is incomparable with the family of approximate entailments <ref> [6] </ref>, bounded resolution [18, 4], and access-limited logics [9, 10]. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. Although work on knowledge compilation (c.f. [14, 22]) has a similar flavor of adding clauses to theories for obtaining completeness, there has been no attempt yet to obtain either anytime families or semantics. Other families of reason-ers [18, 10] have not been given model-theoretic semantics. <p> Other families of reason-ers [18, 10] have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in [1, 19, 17], Cadoli and Schaerf <ref> [6] </ref> presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [7] <author> C. Chang and R.C. Lee, </author> <title> Symbolic Logic and Mechanical Theorem Proving, </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1973. </year> <title> 2 [6] also defines a family of unsound but complete entailment relations, using a similar idea. </title>
Reference-contexts: Recall that we only allow clausal formulas. c fl 1996 M. Dalal ECAI 96. 12th European Conference on Artificial Intelligence Edited by W. Wahlster Published in 1996 by John Wiley & Sons, Ltd. Clausal boolean constraint propagation (BCP) [23] is a variant of unit resolution <ref> [7] </ref>.
Reference: [8] <institution> Proceedings of the AAAI Workshop on Tractable Reasoning, </institution> <note> ed., </note> <editor> J. Crawford, </editor> <booktitle> American Association for Artificial Intelligence, </booktitle> <address> San Jose, California, </address> <year> 1992. </year>
Reference-contexts: 1 INTRODUCTION Since deductive reasoning is intractable for propositional knowledge representation systems, several tractable approaches for making incomplete inferences have been proposed <ref> [8] </ref>. The incompleteness of these reasoners make them unsuitable for several tasks where more inferences are needed [16]. An attractive approach that is tractable as well as complete in the limit is based on the notion of anytime reasoners [3].
Reference: [9] <author> J. Crawford and B. Kuipers, </author> <title> `Towards a theory of access-limited logic for knowledge representation', </title> <booktitle> in Proceedings First International Conference on Principles of Knowledge Representation and Reasoning (KR'89), </booktitle> <pages> pp. 67-78, </pages> <year> (1989). </year>
Reference-contexts: particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In [12], we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments [6], bounded resolution [18, 4], and access-limited logics <ref> [9, 10] </ref>. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6].
Reference: [10] <author> J.M. Crawford and B.J. Kuipers, </author> <title> `Negation and proof by contradiction in access-limited logic', </title> <booktitle> in Proceedings Ninth National Conference on Artificial Intelligence (AAAI-91), </booktitle> <pages> pp. 897-903, </pages> <year> (1991). </year>
Reference-contexts: particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In [12], we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments [6], bounded resolution [18, 4], and access-limited logics <ref> [9, 10] </ref>. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. <p> Although work on knowledge compilation (c.f. [14, 22]) has a similar flavor of adding clauses to theories for obtaining completeness, there has been no attempt yet to obtain either anytime families or semantics. Other families of reason-ers <ref> [18, 10] </ref> have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in [1, 19, 17], Cadoli and Schaerf [6] presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [11] <author> M. Dalal, </author> <note> `Anytime clausal reasoning'. Submitted to Annals of Mathematics and Artificial Intelligence, </note> <year> 1996. </year>
Reference-contexts: In Section 5, we prove the soundness and completeness results. In Section 6, we make a comparison with related approaches, and then conclude in Section 7. Although proof sketches are provided for the main claims, full proofs are given in <ref> [11] </ref>. 2 THE ANYTIME FAMILY In this section, we review the definition of the anytime family ` BCP given in [12]. For this, we restrict our attention to clausal propositional theories [24]. Consider a denumerable set A = fP; Q; : : :g of propositional symbols, called atoms.
Reference: [12] <author> M. Dalal, </author> <title> `Anytime families of tractable propositional reasoners', </title> <booktitle> in Fourth International Symposium on Artificial Intelligence and Mathematics (AI/MATH-96), </booktitle> <pages> pp. 42-45, </pages> <address> Florida, </address> <year> (1996). </year>
Reference-contexts: They are complete reasoners that provide partial answers even if stopped prematurely; the degree of completeness of the answer improves with the time used in computing the answer. They are often used for providing a quick first cut to a problem, which can be later improved. <ref> [12] </ref> presented a family ` 0 ; ` 1 ; : : : of reasoners such that each ` i is sound and tractable, each ` i+1 is at least as complete as ` i , and each theory has a complete reasoner ` i for reasoning with it. <p> The two anytime families cited above are incomparable, that is, different inferences are made at corresponding levels. Although the reasoners in [6] were specified using a model-theoretic semantics, no model-theoretic semantics is known for the reasoners in <ref> [12] </ref> which have been specified using inference rules. This is a serious problem, since the importance of model-theoretic semantics for reasoners has been convincingly established in several papers (c.f. [19]). <p> This is a serious problem, since the importance of model-theoretic semantics for reasoners has been convincingly established in several papers (c.f. [19]). In this paper, we provide a model-theoretic semantics for the anytime family ` BCP = ` BCP 1 ; : : : given in <ref> [12] </ref>. Since ` BCP is defined using boolean constraint propagation (BCP) [23], the semantics of ` BCP is based on the semantics of BCP [2, 13]. 1 Columbia University, Department of Computer Science. New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. <p> Although proof sketches are provided for the main claims, full proofs are given in [11]. 2 THE ANYTIME FAMILY In this section, we review the definition of the anytime family ` BCP given in <ref> [12] </ref>. For this, we restrict our attention to clausal propositional theories [24]. Consider a denumerable set A = fP; Q; : : :g of propositional symbols, called atoms. A literal is either an atom or its complement; for example, P and :P . <p> It is shown in <ref> [12] </ref> that ` BCP 0 ; ` BCP 1 ; : : : is an anytime family of reasoners for inferring formulas from theories. The reasoner ` BCP 0 is complete for Horn, positive, and negative theories, while the reasoner ` BCP 1 is also complete for 2-CNF theories. <p> G ` BCP 2. G j k 4. Viv (G; k) ` BCP In particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In <ref> [12] </ref>, we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments [6], bounded resolution [18, 4], and access-limited logics [9, 10].
Reference: [13] <author> M. Dalal, </author> <title> `Semantics of an efficient propositional reasoner: Preliminary report', </title> <booktitle> in Proceedings of the Ninth Florida AI Research Symposium (FLAIRS-96), </booktitle> <year> (1996). </year> <note> to be published. </note>
Reference-contexts: In this paper, we provide a model-theoretic semantics for the anytime family ` BCP = ` BCP 1 ; : : : given in [12]. Since ` BCP is defined using boolean constraint propagation (BCP) [23], the semantics of ` BCP is based on the semantics of BCP <ref> [2, 13] </ref>. 1 Columbia University, Department of Computer Science. New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. Although BCP is an efficient linear-time method [23, 27], it does not make all inferences that are logically entailed. <p> The reasoner ` BCP 0 is complete for Horn, positive, and negative theories, while the reasoner ` BCP 1 is also complete for 2-CNF theories. For example, G 0 ` BCP 0 P 1 S. 3 MODEL-THEORETIC SEMANTICS In this section, we extend the semantics of BCP <ref> [2, 13] </ref> to the anytime family ` BCP . Some of the definitions are taken from [13]: The set of literals occurring in a formula is called the support set of the formula: Definition: The support set, S ( ), of any formula is defined as follows: 1. <p> For example, G 0 ` BCP 0 P 1 S. 3 MODEL-THEORETIC SEMANTICS In this section, we extend the semantics of BCP [2, 13] to the anytime family ` BCP . Some of the definitions are taken from <ref> [13] </ref>: The set of literals occurring in a formula is called the support set of the formula: Definition: The support set, S ( ), of any formula is defined as follows: 1. S (ff) = fffg, for any literal ff; 2. <p> For example, a valuation that maps atom P to 0.2 is neither a model nor a counter-model of P . Definition: For any theory G and any formula : G j iff no model of G is a counter-model of . It is shown in <ref> [13] </ref> that a formula can be entailed, in this semantics, from a theory iff it can be inferred using BCP: Lemma 1 ([13]) For any theory G and any formula : G j iff G ` BCP . Thus, ` BCP is sound and complete with respect to j.
Reference: [14] <author> A. del Val, </author> <title> `An analysis of approximate knowledge compilation', </title> <booktitle> in Proceedings Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pp. 830-836, </pages> <year> (1995). </year>
Reference-contexts: Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. Although work on knowledge compilation (c.f. <ref> [14, 22] </ref>) has a similar flavor of adding clauses to theories for obtaining completeness, there has been no attempt yet to obtain either anytime families or semantics. Other families of reason-ers [18, 10] have not been given model-theoretic semantics.
Reference: [15] <author> R. Dionne, E. Mays, and F.J. Oles, </author> <title> `The equivalence of model-theoretic and structural subsumption in description logics', </title> <booktitle> in Proceedings Thirteenth International Joint Conference on Artificial Intelligence (IJCAI-93), </booktitle> <pages> pp. 710-716, </pages> <year> (1993). </year>
Reference-contexts: BCP can be characterized algebraically <ref> [15] </ref> using an equivalence relation = BCP on theories generated by the following equality schemas: 1: ff g [ G = BCP ff g; f (ff); (ff 1 _ : : : _ ff n )g [ G; where G is any theory, ff's are any literals, and n is any
Reference: [16] <author> J. Doyle and R. Patil, </author> <title> `Two theses of knowledge representation: language restrictions, taxanomic classification, and the utility of representation services', </title> <journal> Artificial Intelligence, </journal> <volume> 48(3), </volume> <pages> 261-297, </pages> <year> (1991). </year>
Reference-contexts: 1 INTRODUCTION Since deductive reasoning is intractable for propositional knowledge representation systems, several tractable approaches for making incomplete inferences have been proposed [8]. The incompleteness of these reasoners make them unsuitable for several tasks where more inferences are needed <ref> [16] </ref>. An attractive approach that is tractable as well as complete in the limit is based on the notion of anytime reasoners [3].
Reference: [17] <author> A.M. Frisch, </author> <title> `Inference without chaining', </title> <booktitle> in Proceedings Tenth International Joint Conference on Artificial Intelligence (IJCAI-87), </booktitle> <pages> pp. 515-519, </pages> <year> (1987). </year>
Reference-contexts: Other families of reason-ers [18, 10] have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in <ref> [1, 19, 17] </ref>, Cadoli and Schaerf [6] presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [18] <author> G. Gallo and M.G. Scutella, </author> <title> `Polynomially solvable satisfiability problems', </title> <journal> Information Processing Letters, </journal> <volume> 29, </volume> <pages> 221-227, </pages> <year> (1988). </year>
Reference-contexts: (G; k) ` BCP In particular, the reasoners ` BCP k in the anytime family are sound and complete with respect to j k . 6 COMPARISON In [12], we show that our anytime family ` BCP of reasoners is incomparable with the family of approximate entailments [6], bounded resolution <ref> [18, 4] </ref>, and access-limited logics [9, 10]. Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. <p> Although work on knowledge compilation (c.f. [14, 22]) has a similar flavor of adding clauses to theories for obtaining completeness, there has been no attempt yet to obtain either anytime families or semantics. Other families of reason-ers <ref> [18, 10] </ref> have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in [1, 19, 17], Cadoli and Schaerf [6] presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [19] <author> H.J. Levesque, </author> <title> `A logic of implicit and explicit belief', </title> <booktitle> Proceedings National Conference on Artificial Intelligence (AAAI-84), </booktitle> <pages> 198-202, </pages> <year> (1984). </year>
Reference-contexts: Although the reasoners in [6] were specified using a model-theoretic semantics, no model-theoretic semantics is known for the reasoners in [12] which have been specified using inference rules. This is a serious problem, since the importance of model-theoretic semantics for reasoners has been convincingly established in several papers (c.f. <ref> [19] </ref>). In this paper, we provide a model-theoretic semantics for the anytime family ` BCP = ` BCP 1 ; : : : given in [12]. <p> Other families of reason-ers [18, 10] have not been given model-theoretic semantics. Extending the earlier work on three- and four-valued logics in <ref> [1, 19, 17] </ref>, Cadoli and Schaerf [6] presented a family j= 3 S of entailment Logic Programming, Theorem Proving and Search 363 M.
Reference: [20] <author> H.J. Levesque, </author> <title> `Making believers out of computers', </title> <journal> Artificial Intelligence, </journal> <volume> 30, </volume> <pages> 81-108, </pages> <year> (1986). </year>
Reference-contexts: We show that any theory can be transformed into a logically equivalent theory from which BCP can make all allowed inferences such theories are called vivid. The term vivid is inspired by <ref> [20] </ref>, where vivid theories are ones where an answer can be read off quickly. For a knowledge base that is accessed frequently, it might be useful to compile its theory into an equivalent vivid theory [25, 5].
Reference: [21] <author> J.W. Lloyd, </author> <title> Foundations of Logic Programming, </title> <publisher> Springer-Verlag, </publisher> <address> 2 edn., </address> <year> 1987. </year>
Reference-contexts: Since T G;k is a monotonic operator over a finite lattice, it has a least fixpoint [26], which can also be characterized using the ordinal powers of T G;k , defined in the usual manner (c.f. <ref> [21] </ref>): Definition: For any theory G and any k 2 N , the ordinal powers of the operator T G;k are defined as follows: T G;k "0 = ; T G;k "! = [fT G;k "n j n 2 N g Intuitively T G;k "1 is the set of all k-formulas
Reference: [22] <author> P. Marquis, </author> <title> `Knowledge compilation using theory prime implicates', </title> <booktitle> in Proceedings Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pp. 837-843, </pages> <year> (1995). </year>
Reference-contexts: Since only the approximate entailments have been provided with some semantics, we now compare our anytime family ` BCP of reasoners and its semantics with the reasoners given in [6]. Although work on knowledge compilation (c.f. <ref> [14, 22] </ref>) has a similar flavor of adding clauses to theories for obtaining completeness, there has been no attempt yet to obtain either anytime families or semantics. Other families of reason-ers [18, 10] have not been given model-theoretic semantics.
Reference: [23] <author> D. McAllester, </author> <title> `Truth maintenance', </title> <booktitle> in Proceedings Eighth National Conference on Artificial Intelligence (AAAI-90), </booktitle> <pages> pp. 1109-1116, </pages> <year> (1990). </year>
Reference-contexts: In this paper, we provide a model-theoretic semantics for the anytime family ` BCP = ` BCP 1 ; : : : given in [12]. Since ` BCP is defined using boolean constraint propagation (BCP) <ref> [23] </ref>, the semantics of ` BCP is based on the semantics of BCP [2, 13]. 1 Columbia University, Department of Computer Science. New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. <p> New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. Although BCP is an efficient linear-time method <ref> [23, 27] </ref>, it does not make all inferences that are logically entailed. We show that any theory can be transformed into a logically equivalent theory from which BCP can make all allowed inferences such theories are called vivid. <p> Recall that we only allow clausal formulas. c fl 1996 M. Dalal ECAI 96. 12th European Conference on Artificial Intelligence Edited by W. Wahlster Published in 1996 by John Wiley & Sons, Ltd. Clausal boolean constraint propagation (BCP) <ref> [23] </ref> is a variant of unit resolution [7].
Reference: [24] <author> E. Mendelson, </author> <title> Introduction to Mathematical Logic, </title> <publisher> Van Nostrand, </publisher> <address> Princeton, N.J., </address> <year> 1964. </year>
Reference-contexts: Although proof sketches are provided for the main claims, full proofs are given in [11]. 2 THE ANYTIME FAMILY In this section, we review the definition of the anytime family ` BCP given in [12]. For this, we restrict our attention to clausal propositional theories <ref> [24] </ref>. Consider a denumerable set A = fP; Q; : : :g of propositional symbols, called atoms. A literal is either an atom or its complement; for example, P and :P .
Reference: [25] <author> B. Selman, H. Levesque, and D. Mitchell, </author> <title> `A new method for solving hard satisfiability problems', </title> <booktitle> in Proceedings Tenth National Conference on Artificial Intelligence (AAAI-92), </booktitle> <pages> pp. 440-446, </pages> <year> (1992). </year>
Reference-contexts: The term vivid is inspired by [20], where vivid theories are ones where an answer can be read off quickly. For a knowledge base that is accessed frequently, it might be useful to compile its theory into an equivalent vivid theory <ref> [25, 5] </ref>. This process of vivification is defined using a fixed-point construction based on inferences made by BCP. By suitably restricting this construction, we also define notions of partial vivification. Partial vivification provides a complete characterization of the reasoners in the anytime family ` BCP .
Reference: [26] <author> A. Tarski, </author> <title> `A lattice-theoretical fixpoint theorem and its applications', </title> <journal> Pacific J. Math., </journal> <volume> 5, </volume> <pages> 285-309, </pages> <year> (1955). </year>
Reference-contexts: It then follows directly from the definitions that any basic clause in T G;k (M ) is also in T D;p (S). Since T G;k is a monotonic operator over a finite lattice, it has a least fixpoint <ref> [26] </ref>, which can also be characterized using the ordinal powers of T G;k , defined in the usual manner (c.f. [21]): Definition: For any theory G and any k 2 N , the ordinal powers of the operator T G;k are defined as follows: T G;k "0 = ; T G;k <p> Using <ref> [26] </ref>, it follows from Lemma 4 that the least fixpoint lfp (T G;k ) of T G;k is given by T G;k "!. We will refer to lfp (T G;k ) as the kth fixpoint of G; k is said to be the index of this fixpoint.
Reference: [27] <author> H. Zhang and M. E. Stickel, </author> <title> `An efficient algorithm for unit propagation', </title> <booktitle> in Fourth International Symposium on Artificial Intelligence and Mathematics (AI/MATH-96), </booktitle> <pages> pp. 166-169, </pages> <address> Florida, </address> <year> (1996). </year> <title> Logic Programming, Theorem Proving and Search 364 M. </title> <type> Dalal </type>
Reference-contexts: New York, NY 10027, USA. Phone: (212) 939-7114. E-mail: dalal@cs.columbia.edu. WWW: http://www.cs.columbia.edu/~dalal/. Although BCP is an efficient linear-time method <ref> [23, 27] </ref>, it does not make all inferences that are logically entailed. We show that any theory can be transformed into a logically equivalent theory from which BCP can make all allowed inferences such theories are called vivid.
References-found: 27

