URL: http://www.cs.utexas.edu/users/cnchu/pubs/c05.ps
Refering-URL: http://www.cs.utexas.edu/users/cnchu/pubs/pubs.html
Root-URL: 
Email: cnchu@cs.utexas.edu and wong@cs.utexas.edu  
Title: A Polynomial Time Optimal Algorithm for Simultaneous Buffer and Wire Sizing  
Author: Chris C. N. Chu and D. F. Wong 
Address: Austin, Austin, TX 78712, U.S.A.  
Affiliation: Department of Computer Sciences, University of Texas at  
Abstract: An interconnect joining a source and a sink is divided into fixed-length uniform-width wire segments, and some adjacent segments have buffers in between. The problem we considered is to simultaneously size the buffers and the segments so that the Elmore delay from the source to the sink is minimized. Previously, no polynomial time algorithm for the problem has been reported in literature. In this paper, we present a polynomial time algorithm SBWS for the simultaneous buffer and wire sizing problem. SBWS is an iterative algorithm with guaranteed convergence to the optimal solution. It runs in quadratic time and uses constant memory for computation. Also, experimental results show that SBWS is extremely efficient in practice. For example, for an interconnect of 10000 segments and buffers, the CPU time is only 0:127 second. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Chung-Ping Chen, Yao-Wen Chang, and D. F. Wong. </author> <title> Fast performance-driven optimization for buffered clock trees based on Lagrangian relaxation. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 405-408, </pages> <year> 1996. </year>
Reference-contexts: Also, no bound on the run time of the algorithm is reported. [15] gives an algorithm for simultaneous buffer insertion, buffer sizing and wire sizing based on dynamic programming. However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. <ref> [1, 7, 9] </ref> give greedy algorithms for simultaneous transistor/buffer and wire sizing. These algorithms are shown to be very efficient in practice.
Reference: [2] <author> Chung-Ping Chen and D. F. Wong. </author> <title> A fast algorithm for optimal wire-sizing under Elmore delay model. </title> <booktitle> In Proc. IEEE ISCAS, </booktitle> <volume> volume 4, </volume> <pages> pages 412-415, </pages> <year> 1996. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in the near future. Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, <ref> [2, 3, 4, 10, 14] </ref> are various results on wire sizing alone. [16] applies the sequential quadratic programming approach to simultaneous gate and wire sizing.
Reference: [3] <author> Chung-Ping Chen and D. F. Wong. </author> <title> Optimal wire-sizing function with fringing capacitance consideration. </title> <booktitle> In Proc. ACM/IEEE Design Automation Conf., </booktitle> <pages> pages 604-607, </pages> <year> 1997. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in the near future. Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, <ref> [2, 3, 4, 10, 14] </ref> are various results on wire sizing alone. [16] applies the sequential quadratic programming approach to simultaneous gate and wire sizing.
Reference: [4] <author> Chung-Ping Chen, Hai Zhou, and D. F. Wong. </author> <title> Optimal non-uniform wire-sizing under the Elmore delay model. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 38-43, </pages> <year> 1996. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in the near future. Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, <ref> [2, 3, 4, 10, 14] </ref> are various results on wire sizing alone. [16] applies the sequential quadratic programming approach to simultaneous gate and wire sizing. <p> However, it is not difficult to see that the problem can still be solved by the ideas of this paper without much modification. For other objectives like minimizing delay subject to area bound or minimizing area subject to delay bound, we can apply the Lagrangian relaxation technique as in <ref> [4] </ref> to reduce the problems to a problem of minimizing a weighted sum. Interconnect with tree topology: SBWS is designed for interconnects with a line topology. As this is the case for most interconnects in a circuit, SBWS can be applied to them directly. <p> As this is the case for most interconnects in a circuit, SBWS can be applied to them directly. However, there are some interconnects with tree topology. For weighted sink delay objective, those interconnects can be handled by SBWS using a similar technique as in <ref> [4] </ref>. That is we use an iterative algorithm to optimize the tree edges one at a time. At each time we manipulate an edge, we keep all the other edges fixed and apply SBWS to that edge. <p> At each time we manipulate an edge, we keep all the other edges fixed and apply SBWS to that edge. For other objectives like minimizing maximum delay or minimizing area with delay bounds, we can apply the Lagrangian relaxation technique as in <ref> [4] </ref> to reduce the problems to a problem of minimizing weighted sink delay. Better theoretical bound on run time: A quadratic run time is proved in Theorem 1. However, the experimental results in Section 4 suggest that the actual run time of SBWS is close to linear.
Reference: [5] <author> Chris C. N. Chu and D. F. Wong. </author> <title> Closed form solution to simultaneous buffer insertion/sizing and wire sizing. </title> <booktitle> In Proc. Intl. Symp. on Physical Design, </booktitle> <pages> pages 192-197, </pages> <year> 1997. </year>
Reference-contexts: However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. [1, 7, 9] give greedy algorithms for simultaneous transistor/buffer and wire sizing. These algorithms are shown to be very efficient in practice. However, no bounds on the run time of them are known. <ref> [5] </ref> considers buffer insertion, buffer sizing and wire sizing simultaneously and a closed form optimal solution is obtained. However, in that paper, only wire area capacitance is considered. Wire fringing capacitance, which will become more and more significant as feature size decreases, is ignored. <p> However, in that paper, only wire area capacitance is considered. Wire fringing capacitance, which will become more and more significant as feature size decreases, is ignored. Taking wire fringing capacitance into account significantly complicates the problem and <ref> [5] </ref> can only give an approximate solution. [6] shows that the simultaneous buffer insertion and wire sizing problem can be formulated as a convex quadratic program. The convex quadratic program has a small size and some special structures, and so can be solved very efficiently. <p> The problem is to determine the buffer sizes and segment widths so that the Elmore delay from the source to the sink is minimized. In particular, both wire area capacitance and wire fringing capacitance are taken into account, and an approach completely different from that in <ref> [5] </ref> is required here. The details of the problem formulation are discussed in Section 2. We make the following contributions in this paper: * We present an iterative algorithm SBWS for the simultaneous buffer and wire sizing problem. <p> Then the range [R; 2R) will contain the optimal R n and hence can be used to start the binary search. The algorithm is summarized below. A good initial guess for the value of R in step 1 can be obtained by the result of <ref> [5] </ref>. When there is no fringing capacitance, we can use [5] to find the exact value of the optimal x n . <p> The algorithm is summarized below. A good initial guess for the value of R in step 1 can be obtained by the result of <ref> [5] </ref>. When there is no fringing capacitance, we can use [5] to find the exact value of the optimal x n . With fringing capacitance (as in our case), we can use it to obtain a good approximation to x n , and hence a good approximation to R n .
Reference: [6] <author> Chris C. N. Chu and D. F. Wong. </author> <title> A new approach to simultaneous buffer insertion and wire sizing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 614-621, </pages> <year> 1997. </year>
Reference-contexts: However, in that paper, only wire area capacitance is considered. Wire fringing capacitance, which will become more and more significant as feature size decreases, is ignored. Taking wire fringing capacitance into account significantly complicates the problem and [5] can only give an approximate solution. <ref> [6] </ref> shows that the simultaneous buffer insertion and wire sizing problem can be formulated as a convex quadratic program. The convex quadratic program has a small size and some special structures, and so can be solved very efficiently.
Reference: [7] <author> Jason Cong and Lei He. </author> <title> An efficient approach to simultaneous transistor and interconnect sizing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 181-186, </pages> <year> 1996. </year>
Reference-contexts: Also, no bound on the run time of the algorithm is reported. [15] gives an algorithm for simultaneous buffer insertion, buffer sizing and wire sizing based on dynamic programming. However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. <ref> [1, 7, 9] </ref> give greedy algorithms for simultaneous transistor/buffer and wire sizing. These algorithms are shown to be very efficient in practice.
Reference: [8] <author> Jason Cong, Lei He, Cheng-Kok Koh, and Patrick H. Madden. </author> <title> Performance optimization of VLSI interconnect layout. INTEGRATION, </title> <journal> the VLSI Journal, </journal> <volume> 21 </volume> <pages> 1-94, </pages> <year> 1996. </year>
Reference-contexts: Nowadays, feature size has been down to 0.25m in advance technology. Interconnect delay has become the dominating factor in determining system performance. In many systems designed today, as much as 50% to 70% of clock cycle are consumed by interconnect delay <ref> [8] </ref>. It is predicted in [11] that the feature size will be reduced to 0:18m by 1999 and 0:13m by 2002. So we expect the significance of interconnect delay will further increase in the near future. <p> The convex quadratic program has a small size and some special structures, and so can be solved very efficiently. However, if buffer sizing is considered also, only a brute-force enumeration of the buffer sizes is proposed. See <ref> [8] </ref> for a comprehensive survey on previous works. In this paper, we consider the problem of minimizing interconnect delay by simultaneously sizing buffers and wire segments. Basically, an interconnect joining a source and a sink is divided into some fixed-length uniform-width wire segments.
Reference: [9] <author> Jason Cong, Cheng-Kok Koh, and Kwok-Shing Leung. </author> <title> Simultaneous buffer and wire sizing for performance and power optimization. </title> <booktitle> In Proc. Intl. Symp. on Low Power Electronics and Design, </booktitle> <pages> pages 271-276, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: Also, no bound on the run time of the algorithm is reported. [15] gives an algorithm for simultaneous buffer insertion, buffer sizing and wire sizing based on dynamic programming. However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. <ref> [1, 7, 9] </ref> give greedy algorithms for simultaneous transistor/buffer and wire sizing. These algorithms are shown to be very efficient in practice.
Reference: [10] <author> Jason Cong and Kwok-Shing Leung. </author> <title> Optimal wiresizing under the distributed Elmore delay model. </title> <journal> IEEE Trans. Computer-Aided Design, </journal> <volume> 14(3) </volume> <pages> 321-336, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in the near future. Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, <ref> [2, 3, 4, 10, 14] </ref> are various results on wire sizing alone. [16] applies the sequential quadratic programming approach to simultaneous gate and wire sizing.
Reference: [11] <author> Jim DeTar. </author> <title> Advances outpace SIA roadmap (Semiconductor Industry Association alters projections) (Industry Trend or Event). Electronic News, </title> <address> 42(2147):1, </address> <month> December 16 </month> <year> 1996. </year>
Reference-contexts: Nowadays, feature size has been down to 0.25m in advance technology. Interconnect delay has become the dominating factor in determining system performance. In many systems designed today, as much as 50% to 70% of clock cycle are consumed by interconnect delay [8]. It is predicted in <ref> [11] </ref> that the feature size will be reduced to 0:18m by 1999 and 0:13m by 2002. So we expect the significance of interconnect delay will further increase in the near future.
Reference: [12] <author> R. J. Duffin, E. L. Peterson, and C. Zener. </author> <title> Geometric Programming Theory and Application. </title> <publisher> John Wiley & Sons, Inc., </publisher> <address> NY, </address> <year> 1967. </year>
Reference-contexts: write D in (3) in term of x i as D = R i1 bc i x i + x i f i ) + terms independent of x i So @D=@x i = 0 is equivalent to bc i R i1 x 2 Note that D is a posynomial <ref> [12] </ref> in x 1 ; : : : ; x n . It is well known that under a variable transformation, a posynomial is equivalent to a convex function. So D has a unique global minimum and no other local minimum.
Reference: [13] <author> W. C. </author> <title> Elmore. The transient response of damped linear network with particular regard to wideband amplifiers. </title> <journal> J. Applied Physics, </journal> <volume> 19 </volume> <pages> 55-63, </pages> <year> 1948. </year>
Reference-contexts: Let the upstream ca-pacitances of component i be R i1 . Let the downstream capacitances of component i be C i if i 2 B, or C i + f i =2 if i 2 W. In this paper, the widely used Elmore delay model <ref> [13] </ref> is used for delay calculation. Basically, the Elmore delay from the source to the sink is the sum of the delays associated with the components, where the delay associated with a component is equal to its resistance times its downstream capacitance.
Reference: [14] <author> J. P. Fishburn. </author> <title> Shaping a VLSI wire to minimize Elmore delay. </title> <booktitle> In Proc. European Design and Test Conference, </booktitle> <year> 1997. </year>
Reference-contexts: So we expect the significance of interconnect delay will further increase in the near future. Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, <ref> [2, 3, 4, 10, 14] </ref> are various results on wire sizing alone. [16] applies the sequential quadratic programming approach to simultaneous gate and wire sizing.
Reference: [15] <author> John Lillis, Chung-Kuan Cheng, and Ting-Ting Lin. </author> <title> Optimal wire sizing and buffer insertion for low power and a generalized delay model. </title> <journal> IEEE J. Solid-State Circuits, </journal> <volume> 31(3) </volume> <pages> 437-447, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: Also, no bound on the run time of the algorithm is reported. <ref> [15] </ref> gives an algorithm for simultaneous buffer insertion, buffer sizing and wire sizing based on dynamic programming. However, their algorithm runs in pseudo-polynomial time and requires a substantial amount of memory. [1, 7, 9] give greedy algorithms for simultaneous transistor/buffer and wire sizing.
Reference: [16] <author> N. Menezes, R. Baldick, and L. T. Pileggi. </author> <title> A sequential quadratic programming approach to concurrent gate and wire sizing. </title> <booktitle> In Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <pages> pages 144-151, </pages> <year> 1995. </year>
Reference-contexts: Both buffer sizing and wire sizing have been shown to be effective techniques to reduce interconnect delay and many works have been done during the past few years. For example, [2, 3, 4, 10, 14] are various results on wire sizing alone. <ref> [16] </ref> applies the sequential quadratic programming approach to simultaneous gate and wire sizing.
References-found: 16

