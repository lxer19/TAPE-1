URL: http://www.cs.berkeley.edu/~wilkerso/wormfinal.ps
Refering-URL: http://www.cs.berkeley.edu/~wilkerso/
Root-URL: 
Title: Nearly Tight Bounds for Wormhole Routing  
Author: Abhiram Ranade Saul Schleimer Daniel Shawcross Wilkerson 
Keyword: wormhole routing, packet routing, cut-through, off-line routing, butterfly, multi-dimensional mesh, trees.  
Address: Berkeley, California 94720  
Affiliation: University of California,  
Abstract: We present nearly tight bounds for wormhole routing on Butterfly networks which indicate it is fundamentally different from store-and-forward packet routing. For instance, consider the problem of routing N log N (randomly generated) log N length messages from the inputs to the outputs of an N input Butterfly. We show that with high probability that this must take time at least (log 3 N=(log log N ) 2 ). The best lower bound known earlier was (log 2 N ), which is simply the flit congestion in each link. Thus our lower bound shows that wormhole routing (unlike store-and-forward-routing) is very ineffective in utilizing communication links. We also give a routing algorithm which nearly matches our lower bound. That is, we show that with high probability the time is O(log 3 N log log N ), which improves upon the previous best bound of O(log 4 N ). Our method also extends to other networks such as the two-dimensional mesh, where it is nearly optimal. Finally, we consider the problem of o*ine wormhole routing, where we give optimal algorithms for trees and multidimensional meshes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bhatt, G. Bilardi, G. Pucci, A. Ranade, A. Rosenberg, and E. Schwabe. </author> <title> On Bufferless Routing of Variable Length Messages in Leveled Networks. </title> <booktitle> In First European Symposium on Algorithms, </booktitle> <pages> pages 300-343, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: In Section 4 we present o*ine algorithms to construct schedules for constant dimensional meshes and trees. We present algorithms that route in the optimal time O (c + d) on these networks. Our results on trees improve upon the ones by Bhatt et al <ref> [1] </ref>, and extend the algorithm of [1] for two dimensional meshes to higher dimensions. In Section 5 we present a wormhole routing problem for which the routing time is (cd). <p> We present algorithms that route in the optimal time O (c + d) on these networks. Our results on trees improve upon the ones by Bhatt et al <ref> [1] </ref>, and extend the algorithm of [1] for two dimensional meshes to higher dimensions. In Section 5 we present a wormhole routing problem for which the routing time is (cd). Any wormhole routing problem can be solved in O (cd) time using o*ine computation, and our example shows that this bound is existentially tight. <p> The schedules have length O (c + d) and thus match the congestion+dilation lower bound. We require on k dimensional meshes that the paths consist of at most one straight segment in each dimension. Our tree results improve the ones in <ref> [1] </ref>, while our k dimensional mesh results generalize the case k = 2 presented there. The schedules we compute actually satisfy a stronger model, the bufferless routing model [1]. In this model we have the additional restriction that once any message starts moving it does not stop along the way. <p> Our tree results improve the ones in <ref> [1] </ref>, while our k dimensional mesh results generalize the case k = 2 presented there. The schedules we compute actually satisfy a stronger model, the bufferless routing model [1]. In this model we have the additional restriction that once any message starts moving it does not stop along the way. Clearly, every bufferless schedule is a wormhole schedule, but not vice versa. We will first derive bufferless schedules for problems where the message length L = 1.
Reference: [2] <author> S. Felperin, P. Raghavan, and E. Upfal. </author> <title> A theory of wormhole routing in parallel computers. </title> <booktitle> In Proceedings of the IEEE Annual Symposium on The Foundations of Computer Science, </booktitle> <pages> pages 563-572, </pages> <year> 1992. </year>
Reference-contexts: In previous work, Felperin, Upfal and Raghavan showed that this bound can be matched on two dimensional meshes <ref> [2] </ref>, and gave suboptimal upper bounds for the butterfly. Their results were extended by Greenberg and Oh [3] to levelled directed networks and fat-trees. Except for two-dimensional meshes, all these results were substantially worse than the lower bound of (c + d). The situation is considerably different in packet routing. <p> In each case L log N denotes the number of flits in each message. For the lightly loaded prob lem our algorithm takes time O (L log N log log N ). In comparison, the algorithm of Felperin et al <ref> [2] </ref> takes time O (L log N min (L; log N )). For L = log N , our time bound is O (log 2 N log log N ), as opposed to O (log 3 N ) for Felperin et al. <p> Notice that the congestion+dilation lower bound for this problem is only (log 2 N ). Our algorithm from Section 2.4 completes routing in time O (log 3 N log log N ), nearly matching the improved lower bound. Note that the previous upper bound for this problem, implied in <ref> [2] </ref> is O (log 4 N ). Our generic algorithm for levelled directed networks can also be used to construct an on-line routing algorithm for routing "one-bend paths" on two dimensional meshes. This algorithm (Section 2.4) matches the performance of the algorithm of Felperin et al [2] for large enough messages. <p> this problem, implied in <ref> [2] </ref> is O (log 4 N ). Our generic algorithm for levelled directed networks can also be used to construct an on-line routing algorithm for routing "one-bend paths" on two dimensional meshes. This algorithm (Section 2.4) matches the performance of the algorithm of Felperin et al [2] for large enough messages. In Section 4 we present o*ine algorithms to construct schedules for constant dimensional meshes and trees. We present algorithms that route in the optimal time O (c + d) on these networks. <p> Any wormhole routing problem can be solved in O (cd) time using o*ine computation, and our example shows that this bound is existentially tight. We begin by clarifying our model of wormhole routing. 1.2 Model Our model is similar to that of Felperin et al <ref> [2] </ref>. A routing network is a directed graph, where processors and switches are nodes and channels are directed edges. We only consider networks with bounded degree. A flit (flow control unit) is the atomic unit of information that may move through the network. <p> In each time step the head flit may advance along its path if that link is free, and the buffer unoccupied; else it remains in its current buffer. Following Felperin et al <ref> [2] </ref> and Greenberg and Oh [3] we assume that when the head of a message moves forward, all its flits also move forward. 2 A routing algorithm on levelled di rected networks A d-levelled directed network G is a network in which each vertex is assigned a level in the range <p> Thus at least one flit from C gets delivered to level d at each timestep on or after step d. Then the lemma follows by noting that C contains only jCjL flits. 2.2 Our algorithm Our algorithm builds upon the "delayed greedy" idea of Felperin et al <ref> [2] </ref>, and has two phases: phase one Each message picks a color at random from f1 : : : ffg, where ff is constant which we will fix later. We then run ff sub-phases, such that in the i th sub-phase only the worms of color i participate. <p> These times compare favorably with the previous work <ref> [2, 3] </ref> for L &gt; log log N . But getting these timings requires extending the basic wormhole model as suggested above, and this seems to us to violate the basic motivation of the wormhole model: simplicity. 6.2 Other problems The work presented here raises several questions.
Reference: [3] <author> R. Greenberg and H.-C. Oh. </author> <title> Universal Wormhole Routing. </title> <booktitle> In IEEE Symposium on Parallel and Distributed Processing, </booktitle> <year> 1993. </year>
Reference-contexts: In previous work, Felperin, Upfal and Raghavan showed that this bound can be matched on two dimensional meshes [2], and gave suboptimal upper bounds for the butterfly. Their results were extended by Greenberg and Oh <ref> [3] </ref> to levelled directed networks and fat-trees. Except for two-dimensional meshes, all these results were substantially worse than the lower bound of (c + d). The situation is considerably different in packet routing. <p> This implies that wormhole routing is fundamentally different from packet routing. In Section 2 we present a generic algorithm for wormhole routing on levelled directed networks. For reasonably long messages, our algorithm considerably improves upon the one presented by Greenberg and Oh <ref> [3] </ref>. Our Butterfly algorithm presented in Section 2.4 is an instance of our generic algorithm. <p> In each time step the head flit may advance along its path if that link is free, and the buffer unoccupied; else it remains in its current buffer. Following Felperin et al [2] and Greenberg and Oh <ref> [3] </ref> we assume that when the head of a message moves forward, all its flits also move forward. 2 A routing algorithm on levelled di rected networks A d-levelled directed network G is a network in which each vertex is assigned a level in the range 0 through d and such <p> These times compare favorably with the previous work <ref> [2, 3] </ref> for L &gt; log log N . But getting these timings requires extending the basic wormhole model as suggested above, and this seems to us to violate the basic motivation of the wormhole model: simplicity. 6.2 Other problems The work presented here raises several questions.
Reference: [4] <author> F. T. Leighton. </author> <title> Introduction to parallel algorithms and architectures. </title> <address> Morgan-Kaufman, </address> <year> 1991. </year>
Reference-contexts: We present a simple estimate of the time required by the greedy algorithm. Our proof is similar to the idea in Lemma 1.8 of Leighton <ref> [4] </ref>. Lemma 1 Consider a set of paths on a d-levelled directed network and let C be a connected component of the associated path graph. Using the greedy algorithm all the messages in C are delivered in time d + jCjL, where jCj denotes the number of messages in C. <p> Let M = N log N denote the total number of messages, and L denote the length of each message. We will prove lower bounds on the time to route such problems. Using Chernoff bounds (e.g. see Leighton <ref> [4] </ref>) it is possible to show that the congestion in every link will be L log N with high probability.
Reference: [5] <author> Tom Leighton, Bruce Maggs, Abhiram Ranade, and Satish Rao. </author> <title> Routing and Sorting on Fixed-Connection Networks. </title> <journal> Journal of Algorithms, </journal> <volume> 16(4), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Except for two-dimensional meshes, all these results were substantially worse than the lower bound of (c + d). The situation is considerably different in packet routing. In this case, Leighton, Maggs and Rao [6] show that schedules achieving time O (c + d) exist. Leighton, Maggs, Ranade and Rao <ref> [5] </ref> give distributed, on-line algorithms to finish the routing in time O (c+d) for worst-case as well as average case routing problems on most known networks. 1.1 Main results and Overview In this paper we improve the upper bounds as well as the lower bound for the time to route messages <p> We only consider how to route messages going "in the north-east" direction, other directions can be handled by making four copies of the mesh <ref> [5] </ref>. We see the mesh as a (2 p N 2)-levelled directed network where the north-west to south-east diagonals form the levels. The mesh and the paths on it are then extended in the natural way so that all paths start and end on the same level. <p> Packet routing, after all, is wormhole routing with L = 1. This we feel is a harder problem, since we do not know how to solve the heavily loaded packet routing problem without invoking random priorities as in <ref> [5] </ref> 2 One approach to achieve this goal may be to strengthen Lemma 1. This lemma gives a really outrageous bound on the performance of the greedy algorithm, while extensive experiments suggest that the greedy algorithm performs very well. There are open problems for long messages as well.
Reference: [6] <author> Tom Leighton, Bruce Maggs, and Satish Rao. </author> <title> Universal Packet Routing Algorithms. </title> <booktitle> In Proceedings of the IEEE Annual Symposium on The Foundations of Computer Science, </booktitle> <year> 1988. </year> <title> 2 Maggs and Sitaraman have recently solved the light loading case. </title>
Reference-contexts: Their results were extended by Greenberg and Oh [3] to levelled directed networks and fat-trees. Except for two-dimensional meshes, all these results were substantially worse than the lower bound of (c + d). The situation is considerably different in packet routing. In this case, Leighton, Maggs and Rao <ref> [6] </ref> show that schedules achieving time O (c + d) exist.
References-found: 6

