URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P480.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts94.htm
Root-URL: http://www.mcs.anl.gov
Title: Parallel Molecular Dynamics: Communication Requirements for Massively Parallel Machines  
Author: Valerie E. Taylor Rick L. Stevens Kathryn E. Arnold 
Address: Evanston, IL 60208 Argonne, IL 60439  
Affiliation: EECS Department MCS Division Northwestern University Argonne National Laboratory  
Abstract: Molecular mechanics and dynamics are becoming widely used to perform simulations of molecular systems, from large-scale computations of materials to the design and modeling of drug compounds. In this paper we address two major issues: a good decomposition method that can take advantage of future massively parallel processing systems for modest-sized problems in the range of 50,000 atoms and the communication requirements needed to achieve 30 to 40% efficiency on MPPs. We analyzed a scalable benchmark molecular dynamics program executing on the Intel Touchstone Delta parallelized with an interaction decomposition method. Using a validated analytical performance model of the code, we determined that for an MPP with a four-dimensional mesh topology and 400 MHz processors the communication startup time must be at most 30 clock cycles and the network bandwidth must be at least 2.3 GB/s. This configuration results in 30 to 40% efficiency of the MPP for a problem with 50,000 atoms executing on 50,000 processors. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Barnes, J., and P. </author> <title> Hut "A Hierarchical O(NlogN) Force-Calculation Algorithm," </title> <booktitle> Nature, </booktitle> <address> 324:446, </address> <year> 1986. </year>
Reference: [2] <author> Bird, G. A., </author> <title> Molecular Gas Dynamics, </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1976. </year>
Reference: [3] <author> Brooks, B. R. and M. Hodoscek, </author> <title> "Parallelization of CHARMM for MIMD machines," </title> <journal> Chemical Design Automation News, </journal> <volume> 7 </volume> <pages> 16-22, </pages> <year> 1992. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [4] <author> Clark, T. W., J. A. McCammon, and L. R. Scott, </author> <title> "Parallel Molecular Dynamics," </title> <booktitle> Proc. 5th SIAM Conference on Parallel Processing for Scientific Computing, </booktitle> <pages> 338-344. </pages> <publisher> SIAM, </publisher> <year> 1992. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [5] <author> Ding, Hong-Qiang, Naoki Karasawa, and William A. Goddard III, </author> <title> "Atomic Level Simulations on a Million Particles: The Cell Multipole Method for Coulomb and London Nonbond Interactions," </title> <journal> J. Chem. Phys., </journal> <volume> 97 </volume> <pages> 4309-4314, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: These short-range models have been shown to be very accurate for molecular dynamics. Other approximation techniques for N-body systems, such as the fast multipole method [8] and cell multipole method <ref> [5] </ref>, show great promise for improving the run time of very large scale problems; however, they do little to help with small to modest-sized systems with at most 50,000 atoms, which is the focus of this paper.
Reference: [6] <author> Fincham, D., </author> <title> "Parallel Computers and Molecular Simulation," </title> <journal> Molecular Simulation, </journal> <volume> 1 </volume> <pages> 1-45, </pages> <year> 1987. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [7] <author> Fox, G. C., M. A. Johnson, G. A. Lyzenga, S. W. Otto, J. K. Salmon, and D. W. Walker, </author> <title> Solving Problems on Concurrent Processors: Volume 1, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1988. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [8] <author> Greengard, L., and V. Rokhlin, </author> <title> "A Fast Algorithm for Particle Simulations," </title> <journal> J. Comp. Phys., </journal> <volume> 73 </volume> <pages> 325-348, </pages> <year> 1987. </year>
Reference-contexts: These short-range models have been shown to be very accurate for molecular dynamics. Other approximation techniques for N-body systems, such as the fast multipole method <ref> [8] </ref> and cell multipole method [5], show great promise for improving the run time of very large scale problems; however, they do little to help with small to modest-sized systems with at most 50,000 atoms, which is the focus of this paper.
Reference: [9] <author> Hockney, R. W., S. P. Goel, and J. W. Eastwood, </author> <title> "Quiet High-Resolution Computer Models of a Plasma," </title> <journal> J. Comp. Phys., </journal> <volume> 14 </volume> <pages> 148-158, </pages> <year> 1974. </year>
Reference-contexts: Recall from Section 2 that the original code checks all atoms to determine the interactions to be calculated. In this section we consider an optimized code for which the number of computations is reduced by using techniques such as neighbor lists [18] and link-cell method <ref> [9] </ref>. The neighbor list technique consists of maintaining a list of nearby atoms for each atom. This list is examined for possible interactions instead of checking all atoms in the system; the list is rebuilt every few time steps.
Reference: [10] <author> Karplus, M., and R. N. Porter, </author> <title> Atoms and Molecules, </title> <editor> W. A. </editor> <publisher> Benjamin, Inc., </publisher> <address> MenloPark, California, </address> <year> 1970. </year>
Reference: [11] <author> Lin, S. L., J. Mellor-Crummey, B. M. Pettit, and G. N. Phillips, Jr., </author> <title> "Molecular Dynamics on a Distributed-Memory Multiprocessor," </title> <journal> Comp. Chem., </journal> <volume> 13, 8 </volume> <pages> 1022-1035, </pages> <year> 1992. </year> <note> Reprinted from Frontiers 1995 8 </note>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [12] <author> Lusk, E. and R. Butler, </author> <title> "User's Guide to the p4 Parallel Programming System," </title> <type> Technical Report ANL-92/17, </type> <institution> Argonne National Laboratory, </institution> <month> Oc-tober </month> <year> 1992. </year>
Reference-contexts: The original program was rewritten in C with the p4 message-passing library developed at Argonne National Laboratory <ref> [12] </ref>. This library allows the code to be portable to other machines such as the Paragon, IBM SP, and CM-5. We developed analytical models of the sequential and parallel execution time based upon the costs described in the preceding sections.
Reference: [13] <author> Moss, D. S., and T. P. Flores, </author> <title> "Molecular Dynamics of Protein Molecules," </title> <booktitle> Supercomputational Science, </booktitle> <pages> 251-268, </pages> <year> 1990. </year>
Reference: [14] <author> NASA-JPL Petaflops Workshop, </author> <month> February 22-24, </month> <year> 1994, </year> <institution> Pasedena, California. </institution>
Reference-contexts: We analyze the use of current and future MPPs for these modest-sized problems. We believe that computers designed and built in the next ten to twenty years will most likely fall into three general design families <ref> [14] </ref>.
Reference: [15] <author> Noakes, M. O., and W. J. Dally, </author> <title> "System Design of the J-Machine," </title> <booktitle> Proceedings of the Sixth MIT Conference on Research in VLSI, </booktitle> <publisher> MIT Press, </publisher> <pages> 179-194, </pages> <year> 1990. </year>
Reference-contexts: The startup time of 714e-11s corresponds to approximately 3 clock cycles for the 400 MHz processors. To achieve this startup time on future MPPs, we believe that a type of "active" message with significant hardware assistance is needed, similar to that found in the J-Machine <ref> [15] </ref>. Next we consider a four-dimensional mesh topology. Figure 5 is the efficiency plot with varying startup times and network bandwidth for this topology.
Reference: [16] <author> Plimpton, S., </author> <title> "Fast Parallel Algorithms for Short-Range Molecular Dynamics," </title> <type> Technical Report SAND91-1144, </type> <institution> Sandia National Laboratories, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems. <p> In contrast, we use an interaction decomposition method that assigns unique atom pairs to different processors; the pairs represent the interactions. This method is limited by the number of interactions, which is much greater than the number of atoms for short-range models. Specifically, we extend the work of Plimpton <ref> [16] </ref> to consider the case of the number of processors greater than or equal to the number of atoms. We present an analytical performance model of real code, which allows us to understand the performance on existing machines and identify the features needed to achieve good performance on future machines. <p> We assign half of the interactions in each block of a given processor in this section to its transpose proces sor; each processor is assigned N (N1) 2P interactions. Hence, each interaction is mapped to a unique processor; the mapping is similar to that of Plimpton <ref> [16] </ref>. An example of this mapping is illustrated in Figure 1 for a 4 fi 4 array of processors with 16 atoms, numbered 1 to 16. Each box corresponds to a processor; the processor is identified by the (i; j) coordinate of the grid. <p> We assume the average size of the neighbor list is 78 atoms. This is consistent with the problems analyzed in <ref> [16] </ref>. systems with 17,576 to 50,653 atoms executed on up to 40,000 processors.
Reference: [17] <author> Smith, W. </author> <title> "Molecular Dynamics on Hypercube Parallel Computers," </title> <journal> Physics Communications, </journal> <volume> 62 </volume> <pages> 229-248, </pages> <year> 1991. </year>
Reference-contexts: This class of machines is likely to be memory limited because of cost. Molecular dynamics is a good application to examine because it has modest memory requirements. Many implementations of parallel molecular dynamics have been developed for the first two classes of MPPs <ref> [3, 4, 6, 7, 11, 16, 17] </ref>, but few groups have addressed issues related to the use of the third class, particularly for small to modest-sized problems.
Reference: [18] <author> Verlet, L., </author> <title> "Computer Experiments on Classical Fluids I: Thermodynamical Properties of Lennard-Jones Molecules," </title> <journal> Phys. Rev., </journal> <volume> 159 </volume> <pages> 98-103, </pages> <year> 1967. </year>
Reference-contexts: Recall from Section 2 that the original code checks all atoms to determine the interactions to be calculated. In this section we consider an optimized code for which the number of computations is reduced by using techniques such as neighbor lists <ref> [18] </ref> and link-cell method [9]. The neighbor list technique consists of maintaining a list of nearby atoms for each atom. This list is examined for possible interactions instead of checking all atoms in the system; the list is rebuilt every few time steps.
References-found: 18

