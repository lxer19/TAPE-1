URL: file://ftp.cs.utexas.edu/pub/techreports/tr95-25.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/shenoy/papers.html
Root-URL: 
Email: E-mail: fshenoy,ving@cs.utexas.edu,  
Phone: Phone: (512) 471-9738, Fax: (512) 471-7866  
Title: Efficient Support for Scan Operations in Video Servers  
Author: Prashant J. Shenoy and Harrick M. Vin 
Address: Taylor Hall 2.124, Austin, Texas 78712-1188  
Affiliation: Department of Computer Sciences, University of Texas at Austin  
Abstract: In this paper, we present an algorithm that integrates scalable compression techniques with placement algorithms for disk-arrays to provide efficient support for interactive scan operations (i.e., fast-forward and rewind) in video servers. We demonstrate that by suitably exploiting the characteristics of video streams and human perceptual tolerances, the overhead of such interactive operations can be substantially reduced. We present an analytical model for analyzing the impact of the fast-forward operation on the performance of the disk-array-based server. We validate the model through extensive simulations and analyze our results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Anderson, Y. Osawa, and R. Govindan. </author> <title> A File System for Continuous Media. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(4) </volume> <pages> 311-337, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
Reference: [2] <author> E. Chang and A. Zakhor. </author> <title> Scalable Video Placement on Parallel Disk Arrays. </title> <booktitle> In Proceedings of IS&T/SPIE International Symposium on Electronic Imaging: Science and Technology, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year> <month> 14 </month>
Reference-contexts: A multimedia server may employ a fixed-size block placement policy, or a variable-size block placement policy to store compressed video streams on a disk-array <ref> [15, 2, 9] </ref>. In the fixed-size block placement policy, each media block consists of a fixed number of storage units (i.e., bytes). Since, each media stream stored on the array is compressed using a variable bit rate (VBR) compression algorithm, each block contains variable number of frames.
Reference: [3] <author> Ming-Syan Chen, Dilip D. Kandlur, and Philip S. Yu. </author> <title> Support for Fully Interactive Playout in a Disk-Array-Based Video Server. </title> <booktitle> In Proceedings of the Second International Conference on Multimedia, </booktitle> <pages> pages 391-398, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: been extensively studied [1, 7, 11, 13, 14, 16], methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames <ref> [3] </ref>. In the former scheme, fast-forward at n-times the normal playback rate requires n-times as many frames to be retrieved (as compared to the normal playback), yielding an n-fold increase in the load on the server. <p> This is because, such compression techniques create inter-frame 1 2 dependencies, which may prevent every n th frame selected by the above method to be independently decoded (see Section 2 for a detailed exposition of this problem for the MPEG compression standard). To avoid this problem, Chen et al. <ref> [3] </ref> have recently proposed a fast-forward scheme in which: (1) video streams are stored on disks in terms of segments, that consist of a group of video frames which have inter-frame dependencies; and (2) fast-forward at n-times the normal playback is achieved by accessing and displaying only one out of every
Reference: [4] <author> T. Chiang and D. Anastassiou. </author> <title> Hierarchical Coding of Digital Television. </title> <journal> IEEE Communications, </journal> <volume> 32(4) </volume> <pages> 38-45, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Examples of such chroma partitioning techniques include the SNR scalability and the data partitioning modes of the MPEG-2 standard <ref> [4] </ref>. Whereas the SNR scalability mode creates the low-resolution and residual components by controlling the granularity of quantization, the data partitioning technique achieves a similar effect by explicitly dividing the frequency domain coefficients between the two components. <p> Figure 2 depicts the main steps involved in the MPEG compression algorithm. The MPEG-2 standard extends the MPEG compression standard by permitting the use of scalable compression techniques while encoding video streams <ref> [4] </ref>. Specifically, MPEG-2 provides support for scalability in the spatial, temporal, and chroma dimensions.
Reference: [5] <author> Jayanta K. Dey-Sircar, James D. Salehi, James F. Kurose, and Don Towsley. </author> <title> Providing VCR Capabilities in Large-Scale Video Servers. </title> <booktitle> In Proceedings of the Second International Conference on Multimedia, </booktitle> <pages> pages 25-32, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: requirement of video streams have been extensively studied [1, 7, 11, 13, 14, 16], methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback <ref> [5] </ref>, or (2) skip frames [3]. In the former scheme, fast-forward at n-times the normal playback rate requires n-times as many frames to be retrieved (as compared to the normal playback), yielding an n-fold increase in the load on the server. <p> The additional bandwidth that must be set aside, however, is dependent on the probability of clients requesting a transition from playback to fast-forward, as well as the expected duration for which a client will remain in the fast-forward mode <ref> [5] </ref>. In schemes that skip frames, fast-forward at n-times the normal playback rate is achieved by transmitting every n th frame to the client site.
Reference: [6] <author> D. Le Gall. </author> <title> MPEG: A Video Compression Standard for Multimedia Apllications. </title> <journal> Communications of the ACM, </journal> <volume> 34(4) </volume> <pages> 46-58, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Although conceptually elegant, such frame skipping schemes may not be directly applicable for video streams that are encoded using compression techniques that exploit temporal redundancy between successive frames (e.g., MPEG compression standard <ref> [6] </ref>). This is because, such compression techniques create inter-frame 1 2 dependencies, which may prevent every n th frame selected by the above method to be independently decoded (see Section 2 for a detailed exposition of this problem for the MPEG compression standard). <p> However, independently maintaining such a fast-forward stream may incur substantial storage space overhead. To minimize the storage space overhead, the MPEG standard has proposed the creation of a video stream containing D frames, which only contain the DC coefficients of the transform blocks <ref> [6] </ref>. However, this yields a video stream with very poor resolution, which is not acceptable for most applications. <p> Compression algorithms that exploit only the spatial redundancies within a frame (e.g., JPEG [10]) independently encode successive frames of a video stream. In such a scenario, both pre-compression and post-compression partitioning are logically equivalent and do not affect compression efficiency. Inter-frame compression algorithms (e.g., MPEG <ref> [6] </ref>), on the other hand, exploit both the spatial and temporal redundancies present in a video stream, and hence, create dependencies between encoded frames. The extent of compression achieved by these algorithms is critically dependent on the correlation between successive frames of a video stream. <p> In what follows, we show how these techniques may be employed for the MPEG compression algorithm. 2.2 Supporting Fast-Forward for MPEG Streams 2.2.1 The MPEG Compression Standard The MPEG compression algorithm exploits the large temporal and spatial redundancies present within an image to achieve a high degree of compression <ref> [6] </ref>.
Reference: [7] <author> J. Gemmell and S. Christodoulakis. </author> <title> Principles of Delay Sensitive Multimedia Data Storage and Retrieval. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(1) </volume> <pages> 51-90, </pages> <year> 1992. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
Reference: [8] <author> E.K. Lee and R.H. Katz. </author> <title> An Analytic Performance Model for Disk Arrays. </title> <booktitle> In Proceedings of the 1993 ACM SIGMETRICS, </booktitle> <pages> pages 98-109, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: equally spaced across the C cylinders of a disk, we define t exp seek = t seek B exp c , where: t seek (x) = a x 1 + b (x 1) + c otherwise and a, b, and c are constants (determined using physical characteristics of a disk) <ref> [8] </ref>. The rotational latency t exp defined to be half of the maximum rotational latency.
Reference: [9] <author> S. Paek, P. Bocheck, and S. F. Chang. </author> <title> Scalable MPEG2 Video Servers with Heterogeneous QoS on Parallel Disk Arrays. </title> <booktitle> In Proceedings of the Fifth International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: A multimedia server may employ a fixed-size block placement policy, or a variable-size block placement policy to store compressed video streams on a disk-array <ref> [15, 2, 9] </ref>. In the fixed-size block placement policy, each media block consists of a fixed number of storage units (i.e., bytes). Since, each media stream stored on the array is compressed using a variable bit rate (VBR) compression algorithm, each block contains variable number of frames.
Reference: [10] <author> William B. Pennebaker and Joan L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: Clearly, such temporal partitioning can be accomplished either prior-to, or after compression (referred to as pre-compression and post-compression partitioning, respectively) (See Figure 1). The applicability between the two approaches, however, is dependent on the compression algorithm. Compression algorithms that exploit only the spatial redundancies within a frame (e.g., JPEG <ref> [10] </ref>) independently encode successive frames of a video stream. In such a scenario, both pre-compression and post-compression partitioning are logically equivalent and do not affect compression efficiency.
Reference: [11] <author> F.A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID: A Disk Storage System for Video and Audio Files. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <address> Anaheim, CA, </address> <pages> pages 393-400, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
Reference: [12] <author> K. S. Trivedi. </author> <title> Probability & Statistics With Reliability, Queuing, </title> <booktitle> And Computer Science Applications. </booktitle> <publisher> Prentice-Hall, Inc., </publisher> <year> 1982. </year>
Reference-contexts: However, since a multimedia server services clients by proceeding in rounds, we assume that such transitions occur only at round boundaries. This behavior can be modeled using a two state discrete-parameter Markov chain <ref> [12] </ref> (see Figure 6). In figure 6, P pl denotes the probability of switching from playback to fast-forward, and P ff denotes the probability of switching from fast-forward to playback mode. <p> That is, X j i 's are independent. Hence, we get: Z (B j ) = i=1 j where Z (B j ) and Z (X j i ) are the z-transforms of the random variables B j and X j i respectively <ref> [12] </ref>. Since Z (X j (1 p i ) + p i z, we get Z (B j ) = i=1 ((1 p i ) + p i z).
Reference: [13] <author> H. M. Vin, A. Goyal, A. Goyal, and P. Goyal. </author> <title> An Observation-Based Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In Proceedings of the IEEE International Conference on Multimedia Computing and Systems (ICMCS'94), Boston, </booktitle> <pages> pages 234-243, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
Reference: [14] <author> H. M. Vin, P. Goyal, A. Goyal, and A. Goyal. </author> <title> A Statistical Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In Proceedings of the ACM Multimedia'94, </booktitle> <address> San Francisco, </address> <pages> pages 33-40, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
Reference: [15] <author> H. M. Vin, S. S. Rao, and P. Goyal. </author> <title> Optimizing the Placement of Multimedia Objects on Disk Arrays. </title> <booktitle> In Proceedings of the Second IEEE International Conference on Multimedia Computing and Systems (ICMCS'95), </booktitle> <year> 1995. </year>
Reference-contexts: A multimedia server may employ a fixed-size block placement policy, or a variable-size block placement policy to store compressed video streams on a disk-array <ref> [15, 2, 9] </ref>. In the fixed-size block placement policy, each media block consists of a fixed number of storage units (i.e., bytes). Since, each media stream stored on the array is compressed using a variable bit rate (VBR) compression algorithm, each block contains variable number of frames. <p> The derivation of the analytical model is similar to that of the model presented in <ref> [15] </ref> for determining optimal media block sizes in case of a fixed-size block placement policy. 3 Determining the overhead of the fast forward operation 3.1 Modeling Client Behavior A client in the playback mode can switch to the fast forward mode at any random instant, and vice versa. <p> Since the distribution functions of B j 's yielded by the round-robin allocation algorithm are dependent, we use the following result derived in <ref> [15] </ref> : maxf0; D fl F B j (x) (D 1)g F B max (x) F B j (x) the lower bound of F B max (x) yields an upper bound on B max .
Reference: [16] <author> P. Yu, M.S. Chen, and D.D. Kandlur. </author> <title> Design and Analysis of a Grouped Sweeping Scheme for Multimedia Storage Management. </title> <booktitle> Proceedings of Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, </address> <pages> pages 38-49, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: Whereas techniques for meeting the real-time playback requirement of video streams have been extensively studied <ref> [1, 7, 11, 13, 14, 16] </ref>, methods for efficiently supporting interactive scan operations have not been adequately investigated. 1.2 Relation to Previous Work In general, schemes that support fast-forward and rewind either: (1) display frames at a rate higher than normal playback [5], or (2) skip frames [3].
References-found: 16

