URL: ftp://ftp.cse.ucsc.edu/pub/reinas/papers/eurographics.ginzu.ps.gz
Refering-URL: http://www.cse.ucsc.edu/research/slvg/ginzu.html
Root-URL: http://www.cse.ucsc.edu
Title: Metaphors for visualization  
Author: Alex Pang and Michael Clifton 
Address: California, 95064, USA  
Affiliation: Computer and Information Sciences Board University of California, Santa Cruz  
Abstract: This paper investigates the use of several common objects such as spray cans, flashlights, carving knives, and others as metaphors for visualization. The motivation behind this work is to provide an intuitive and natural 3D interface such that users will view these objects as tools during the visualization process. To help achieve this goal, the selection of the object tools are derived from expressions commonly used during visualization. For example, "let's paint this (iso)surface red"; "cut away the front part of that volume"; "look at it from this angle"; "you get similar effects from an x-ray photo"; and "let's explore this data set". In this paper, we also extend the metaphor of cutting planes to allow users to carve non-planar cross-sectional cuts through their data sets. This extension will directly benefit applications such as medical visualization where one might want to generate curved coronal cross-sections of lumbar spines; and in oceanography where one might want to compare numerical model output against data obtained along non-planar ship tracks.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Gary Bishop et al. </author> <title> Research directions in virtual environments: Report of an NSF invitational workshop. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 153-177, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: This frees up the mental process of the user to concentrate on data analyses instead of keeping track of how to interact with the widget in order to get to the data. This objective is also in line with the human-computer software interface recommendations by <ref> [1] </ref> and the scenarios of use approach by [2]. The added level of indirection that users have to deal with is surprisingly common in application of virtual reality technology to scientific visualization applications.
Reference: [2] <author> John M. Carroll and Mary Beth Rosson. </author> <title> Putting metaphors to work. </title> <booktitle> In Graphics Interface '94, </booktitle> <pages> pages 112-119, </pages> <year> 1994. </year>
Reference-contexts: This objective is also in line with the human-computer software interface recommendations by [1] and the scenarios of use approach by <ref> [2] </ref>. The added level of indirection that users have to deal with is surprisingly common in application of virtual reality technology to scientific visualization applications. For example, one of the 3D widgets [3, 4] presented was a floating rectangle where the corners, edges and the entire rectangle were grabbable.
Reference: [3] <author> Tom Meyer and Al Globus. </author> <title> Direct manipulation of isosurfaces and cutting planes in virtual environments. </title> <type> Technical report, </type> <institution> Dept. of Computer Science, </institution> <year> 1993. </year> <type> Technical Report 93-54. </type>
Reference-contexts: The added level of indirection that users have to deal with is surprisingly common in application of virtual reality technology to scientific visualization applications. For example, one of the 3D widgets <ref> [3, 4] </ref> presented was a floating rectangle where the corners, edges and the entire rectangle were grabbable. The position, size and orientation of this rectangle was then controlled by grabbing on to the different parts of the rectangle and manipulating them.
Reference: [4] <author> Robert C. Zeleznik et al. </author> <title> An interactive 3d toolkit for constructing 3d widgets. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 81-84, </pages> <year> 1993. </year>
Reference-contexts: The added level of indirection that users have to deal with is surprisingly common in application of virtual reality technology to scientific visualization applications. For example, one of the 3D widgets <ref> [3, 4] </ref> presented was a floating rectangle where the corners, edges and the entire rectangle were grabbable. The position, size and orientation of this rectangle was then controlled by grabbing on to the different parts of the rectangle and manipulating them.
Reference: [5] <author> Henry Fuchs. </author> <note> Siggraph '91 Demo, </note> <year> 1991. </year>
Reference-contexts: In contrast, the 3D widgets in this paper rely on the users' experience with common everyday objects. Thus, control and manipulation of these 3D widgets can be achieved in a natural and unobtrusive way. A simple example, based on <ref> [5] </ref>, is the use of a treadmill/bicycle metaphor to allow the user to walk/bike around the data set. In this scenario, the bike handles are used to control the direction of travel and view while the leg movements control the speed.
Reference: [6] <author> Steve Bryson and Creon Levit. </author> <title> The Virtual Windtunnel: An environment for the exploration of three-dimensional unsteady flows. </title> <booktitle> In Proceedings: Visualization '91, </booktitle> <pages> pages 17 - 24. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1991. </year>
Reference-contexts: One that has received significant amounts of attention is the virtual wind tunnel experiment <ref> [6] </ref>. This is an immersive environment where the user can move about and examine flow fields by simply positioning a rake that generates streamlines.
Reference: [7] <author> David J. Sturman. </author> <title> Whole-hand Input. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1992. </year>
Reference-contexts: The utility of these virtual reality interfaces can be greatly enhanced when combined with the power of using metaphors that facilitate their use. The recognition of gestures associated with some of these metaphors have also been investigated by <ref> [7] </ref>. The interactions associated with the metaphors that we are proposing will build upon and extend the conceptual design of spray rendering [8, 9].
Reference: [8] <author> Alex Pang, Naim Alper, Jeff Furman, and Jiahua Wang. </author> <title> Design issues of spray rendering. </title> <booktitle> In Proceedings: </booktitle> <volume> Compugraphics '93, </volume> <pages> pages 58 - 67, </pages> <year> 1993. </year>
Reference-contexts: The recognition of gestures associated with some of these metaphors have also been investigated by [7]. The interactions associated with the metaphors that we are proposing will build upon and extend the conceptual design of spray rendering <ref> [8, 9] </ref>. Spray rendering uses the metaphor of providing the users with a shelf of spray cans, each of which can generate a different way of visualizing a data set.
Reference: [9] <author> Alex Pang. </author> <title> Spray rendering. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 14(5):57 - 63, </volume> <year> 1994. </year>
Reference-contexts: The recognition of gestures associated with some of these metaphors have also been investigated by [7]. The interactions associated with the metaphors that we are proposing will build upon and extend the conceptual design of spray rendering <ref> [8, 9] </ref>. Spray rendering uses the metaphor of providing the users with a shelf of spray cans, each of which can generate a different way of visualizing a data set.
Reference: [10] <author> William Reeves. </author> <title> Particle systems: A technique for modelling a class of fuzzy objects. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 359-376, </pages> <year> 1983. </year>
Reference-contexts: An attractive feature of spray rendering is that most users have at one time or another operated an aerosol can. Hence, learning how to use the system is quite intuitive. Internally, spray rendering combines particle systems <ref> [10] </ref> and behavioral animation [11]. Particle systems were originally designed for modeling objects that were difficult to model using traditional techniques but have also been used in visualization applications such as particle aging and tracing [12].
Reference: [11] <author> Craig Reynolds. </author> <title> Flocks, herds, and schools: A distributed behavioral model. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 25-34, </pages> <year> 1987. </year>
Reference-contexts: An attractive feature of spray rendering is that most users have at one time or another operated an aerosol can. Hence, learning how to use the system is quite intuitive. Internally, spray rendering combines particle systems [10] and behavioral animation <ref> [11] </ref>. Particle systems were originally designed for modeling objects that were difficult to model using traditional techniques but have also been used in visualization applications such as particle aging and tracing [12]. In these applications the particles were usually passive and were simply advected by the flow field.
Reference: [12] <author> Johan Stolk and Jarke J. van Wijk. </author> <title> Surface-particles for 3d flow visualization. </title> <booktitle> In Proceedings Second Eurographics Workshop on Visualization in Scientific Computing, </booktitle> <year> 1991. </year>
Reference-contexts: Internally, spray rendering combines particle systems [10] and behavioral animation [11]. Particle systems were originally designed for modeling objects that were difficult to model using traditional techniques but have also been used in visualization applications such as particle aging and tracing <ref> [12] </ref>. In these applications the particles were usually passive and were simply advected by the flow field. We incorporate behavioral animation strategies with these particles so that they may interact with other particles as well as with the data field that they are traveling through.
Reference: [13] <author> William Lorensen and Harvey Cline. </author> <title> Marching cubes: A high resolution 3D surface construction algorithm. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 163-169, </pages> <year> 1987. </year>
Reference-contexts: Targets are features, usually in the data set, that the spart is programmed to seek out. As these targets are found, the sparts are made visible according to how their behaviors are defined. For example, the marching cube <ref> [13] </ref> algorithm may be modified so that several independent sparts are looking for the iso-surface rather than have the marching cube algorithm process the entire volume data. In this case, the iso-surface sparts would be seeking for surfaces of the specified threshold value.
Reference: [14] <author> J. P. M. Hultquist. </author> <title> Constructing stream surfaces in steady 3d vector fields. </title> <booktitle> In Proceedings: Visualization '92, </booktitle> <pages> pages 171 - 177. </pages> <publisher> IEEE Computer Society, </publisher> <year> 1992. </year>
Reference-contexts: It is also possible for the spart to leave behind a non-visible marker for communication with other cooperating sparts. One example where sparts work in pairs is the flow tracking ribbon sparts <ref> [14] </ref>.
Reference: [15] <author> Alex Pang and Naim Alper. </author> <title> Bump mapped vector fields. </title> <booktitle> In SPIE & IS&T Conference Proceedings on Electronic Imaging: Visual Data Exploration and Analysis. SPIE, </booktitle> <month> Feb </month> <year> 1995. </year>
Reference-contexts: One example where sparts work in pairs is the flow tracking ribbon sparts [14]. Using this framework, we have been able to modify several existing visualization techniques and also introduce some new ones <ref> [15] </ref>, as well as extend it to a collaborative environment where multiple geographically distributed users can share spray cans and visualizations within a shared virtual workspace [16]. 3 Approach We are investigating the effectiveness of several metaphors for visualization that allow users to directly manipulate and generate visualization through interactions with
Reference: [16] <author> Alex Pang, Craig M. Wittenbrink, and Tom Goodman. CSpray: </author> <title> A collaborative scientific visualization application. </title> <booktitle> In Proceedings SPIE IS &T's Conference Proceedings on Electronic Imaging: Multimedia Computing and Networking, </booktitle> <month> Feb </month> <year> 1995. </year>
Reference-contexts: Using this framework, we have been able to modify several existing visualization techniques and also introduce some new ones [15], as well as extend it to a collaborative environment where multiple geographically distributed users can share spray cans and visualizations within a shared virtual workspace <ref> [16] </ref>. 3 Approach We are investigating the effectiveness of several metaphors for visualization that allow users to directly manipulate and generate visualization through interactions with VR devices. These metaphors include but are not limited to: spray cans, flashlights, and kitchen knives.
Reference: [17] <author> Thomas Baudel and Michel Beaudouin-Lafon. Charade: </author> <title> Remote control of objects using free-hand gestures. </title> <journal> Communications of the ACM, </journal> <volume> 36(7) </volume> <pages> 28-35, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: However, it also presents some interesting issues such as segmentation of hand gestures as pointed out in <ref> [17] </ref>. It also requires us to modify our local contouring algorithm to hand-carved surfaces. Since the hand posture for holding a knife is quite similar to holding a flashlight, we modified the hand posture to a karate chop instead.
Reference: [18] <author> Colin Ware and Steven Osborne. </author> <title> Exploration and virtual camera control in virtual three dimensional environments. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 175-183, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: What the user needs is a way to view the data from different positions and orientations; perhaps from within the data set as well. The metaphor we chose to adopt here is the eyeball-in-hand as proposed by <ref> [18] </ref>. This can be simply modified to an eyeball or flashlight mounted on a spelunker's helmet when we move to an immersive environment. In the meantime, the user uses one hand to manipulate the data and the other hand to control our virtual (tennis ball) eyeball.
Reference: [19] <author> Roger E. Axtell. </author> <title> Gestures: The Do's and Taboos of Body Language Around the World. </title> <publisher> John Wiley & Sons, </publisher> <year> 1991. </year> <title> through torus. torus. through head. through head. </title>
Reference-contexts: For example, the okay (thumb forming a circle with the index finger) or the good luck (thumbs up) symbol may mean different things to different culture; much like the American way of waving goodbye may be construed to mean a beckoning virtual eyeball. gesture in other cultures <ref> [19] </ref>.
References-found: 19

