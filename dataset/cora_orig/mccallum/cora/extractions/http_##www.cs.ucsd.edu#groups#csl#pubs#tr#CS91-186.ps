URL: http://www.cs.ucsd.edu/groups/csl/pubs/tr/CS91-186.ps
Refering-URL: http://www.cs.ucsd.edu/groups/csl/pubs/author.html
Root-URL: http://www.cs.ucsd.edu
Title: Figure 1: Layers of system abstraction ENVIRONMENTS OPERATING SYSTEM NETWORK SOFTWARE PROGRAMMABLE I/O BOARDS HARDWARE
Abstract-found: 0
Intro-found: 1
Reference: 1. <author> G. H. Domann, </author> <title> ``B-ISDN,'' </title> <journal> Journal of Lightwave Technology 6(11), </journal> <pages> pp. 1720-1727 </pages> (). 
Reference-contexts: We expect the design of new personal computers and workstations to incorporate digital technology in the form of standard digital communications interfaces for applications such as FAX and High Definition Television (HDTV), as well as telecommunications services such as the Integrated Services Digital Network (ISDN) and Broadband ISDN <ref> [1] </ref>. Future directions in distributed systems development will require the support and integration of multimedia information (e.g., video, audio, dataglove input), to make adequate use of these emerging technologies and to provide a rich framework for creative expression.
Reference: 2. <author> D. P. Anderson, R. Govindan, and G. Homsy, </author> <title> ``Abstractions for Continuous Media in a Network Window System,'' </title> <type> Report No. </type> <address> UCB/CSD 90/596, Berkeley, CA (September 1990). </address>
Reference-contexts: Programming environments and window systems are being developed or extended to include multimedia information. Considerable research is focused on object-oriented programming systems, where the objects may include audio and video information. Window systems are being extended to include video and audio <ref> [2] </ref>. The requirements of multimedia systems include real-time processing requirements which have to date been largely considered only in the design of embedded real-time systems. However, these systems typically do not have to 1 UCSD CSL System Support for Multimedia support a general computing environment. <p> For example, for telephone quality audio, a 1-2% data loss hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 The term ``continuous media'' is used to distinguish information which is continuous in nature, such as audio and motion video, from the more general types of information encompassed by the term ``multimedia.'' <ref> [2] </ref> 2 UCSD CSL System Support for Multimedia during talkspurts is usually acceptable [3]. The perceived error may vary, however, depending on the particular encoding schemes used and the level of compression. These two observations lead to a characterization of DCM as soft real-time traffic. <p> Priorities include not only traditional CPU scheduling priority, but may also include real-time deadlines or lag time tolerances. Whenever possible, it is advantageous to allow processes to work ahead <ref> [2, 16] </ref>, so that processing is done prior to deadlines if resources are available, to get work out of the way as early as possible. Scheduling of network resources for DCM flows is also needed. Isochronous communication requires reservation of bandwidth to avoid network buffering. <p> We note that this complexity can be overwhelming. This is in contrast to the simplicity of using virtual circuits which has been used very effectively in existing systems [6]. An interesting inter-flow synchronization scheme worth noting is that of logical time systems (LTS) <ref> [2] </ref>, where a set of related media flows are associated with a common time-frame and clock rate. All timing information for the flows in a LTS is relative to the common start time. Each flow in the LTS terminates at a device.
Reference: 3. <author> D. Ferrari, </author> <title> ``Client Requirements for Real-Time Communication Services,'' </title> <journal> IEEE Communications Magazine, </journal> <volume> 28(11), </volume> <pages> pp. </pages> <month> 65-72 (November </month> <year> 1990). </year>
Reference-contexts: If the time required for this data to travel from the sender to the receiver cannot be kept within a certain bound, the data cannot be effectively used for interactive communication. Various guidelines set this tolerance to tens or a few hundreds of milliseconds <ref> [3] </ref>. Keeping the maximum delay within bounds is not sufficient for continuous communication. Buffering limitations can impose the additional constraint that the maximum inter-arrival time of packets at the destination must also be bounded. Meeting delay requirements may require dropping packets when they accumulate between the sender and the receiver. <p> 1-2% data loss hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 The term ``continuous media'' is used to distinguish information which is continuous in nature, such as audio and motion video, from the more general types of information encompassed by the term ``multimedia.'' [2] 2 UCSD CSL System Support for Multimedia during talkspurts is usually acceptable <ref> [3] </ref>. The perceived error may vary, however, depending on the particular encoding schemes used and the level of compression. These two observations lead to a characterization of DCM as soft real-time traffic. <p> These two observations lead to a characterization of DCM as soft real-time traffic. This traffic requires specific performance levels for acceptable behavior, but has some tolerance to data loss when the requirements cannot be met <ref> [3] </ref>. Another important characteristic of DCM is their very high traffic volume. For example, telephone quality voice requires a digital data rate of 64 Kb/s. For CD quality stereo sound, bandwidths of 1.4 Mb/s will be needed. Digiti-zation of a video frame measuring 640480 pixels requires about 7 Mb. <p> To overcome this difficulty, ``fractional'' guarantees have been suggested, where a specific horizon is introduced. For example, one could require that n of the last m messages satisfy the given performance criterion 4 <ref> [3] </ref>. 3.5. Quality of Service Specifications A quality of service (QOS) specification should be able to fully express an application's service needs while providing information necessary for the system to meet those needs. <p> Quality of Service Specifications A quality of service (QOS) specification should be able to fully express an application's service needs while providing information necessary for the system to meet those needs. It has been suggested that the application itself is best equipped to describe its own requirements <ref> [10, 3, 11, 5] </ref>. However, the parameters that succinctly capture these requirements may not always be entirely clear. There have been a number of efforts to determine both the necessary QOS parameters and a complementary resource reservation algorithm.
Reference: 4. <author> G. Karlsson and M. Vetterli, </author> <title> ``Packet Video and Its Integration into the Network Architecture,'' </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 7(5), </volume> <pages> pp. </pages> <month> 739-751 (June </month> <year> 1989). </year>
Reference-contexts: For most broadcast quality video, 30-45 Mb/s is sufficient. Throughput requirements such as these are beyond the capabilities of most current systems. New hierarchical coding techniques split DCM signals into subcomponents of varying importance <ref> [4] </ref>. These methods are also referred to as layered, subband, or component coding. Less important components can be dropped without causing an interruption of service. Communications can continue in the presence of delays, errors, or network congestion, with only a drop in service quality. <p> The most effective coding and compression techniques will be sophisticated hierarchical methods, based on band-pass filtering in three dimensions (2D image and time) <ref> [4] </ref>. 3. Network Communication Issues Several key issues relate to communication channel implementation. Most of these issues are traditional points of controversy, which have been resolved in some sense for conventional data communications. <p> It is instructive to attempt to position the various functions, transformations, and services performed in relation to DCM with respect to the ISO OSI reference model <ref> [4, 5] </ref>. Figure 3 shows the most important functions and their suggested layering. Notice that there is no a priori set boundary between user and system space, between operating system and network software, or between hardware and software.
Reference: 5. <author> C. Nicolaou, </author> <title> ``An Architecture for Real-Time Multimedia Communication Systems,'' </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <pages> pp. </pages> <month> 391-400 (April </month> <year> 1990). </year>
Reference-contexts: It is instructive to attempt to position the various functions, transformations, and services performed in relation to DCM with respect to the ISO OSI reference model <ref> [4, 5] </ref>. Figure 3 shows the most important functions and their suggested layering. Notice that there is no a priori set boundary between user and system space, between operating system and network software, or between hardware and software. <p> Quality of Service Specifications A quality of service (QOS) specification should be able to fully express an application's service needs while providing information necessary for the system to meet those needs. It has been suggested that the application itself is best equipped to describe its own requirements <ref> [10, 3, 11, 5] </ref>. However, the parameters that succinctly capture these requirements may not always be entirely clear. There have been a number of efforts to determine both the necessary QOS parameters and a complementary resource reservation algorithm. <p> These parameters are used in the specification of a scheduling algorithm guaranteeing performance in a packet-switched wide-area network, utilizing processing at intermediate network nodes [12]. Regardless of the parameters chosen, they should be rich enough to facilitate scheduling, synchronization, buffer allocation, and flow control <ref> [10, 11, 5] </ref>. At some point during a connection's lifetime, QOS parameter refinement may become necessary in the face of events such as dynamic changes in multicast group membership or requests for improved QOS, e.g., changing video-image resolution.
Reference: 6. <author> W. H. Leung, T. J. Baumgartner, Y. H. Hwang, M. J. Morgan, and S.-C. Tu, </author> <title> ``A Software Architecture for Workstations Supporting Multimedia Conferencing in Packet Switching Networks,'' </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <pages> pp. </pages> <month> 380-390 (April </month> <year> 1990). </year>
Reference-contexts: A single connectivity model should be able to capture these group interaction topologies, as well as the more conventional one-to-one and one-to-all communication. To support these connection topologies, Leung has suggested a new operating system object, called a ``connector,'' which is a switchboard connecting multiple inputs to multiple outputs <ref> [6] </ref>. An important property of connections is reconfigurability. During the course of a session, a connection could be reconfigured for several reasons. First, the connectivity of the session may change, with participants either leaving or joining the session. <p> One way to achieve synchronization is for the sender to bundle several flows together on a single virtual-circuit using time division multiplexing. Properties associated with virtual circuits <ref> [6] </ref> (e.g., order preservation and duplicate elimination) are good for achieving smooth interleaving of multiple flows, because the receiver need only route incoming flows to their appropriate destination devices, thereby reducing synchronization complexity at the receiver. <p> We note that this complexity can be overwhelming. This is in contrast to the simplicity of using virtual circuits which has been used very effectively in existing systems <ref> [6] </ref>. An interesting inter-flow synchronization scheme worth noting is that of logical time systems (LTS) [2], where a set of related media flows are associated with a common time-frame and clock rate. All timing information for the flows in a LTS is relative to the common start time. <p> Given that I/O boards of all types (network, graphics, audio) can be constructed to support their own processors and memory, one can place a small operating system on those boards to support processes which can be initiated remotely. Leung et al <ref> [6] </ref> had such a scheme, where they placed a small real-time kernel on their multimedia workstation's network interface board. Such a general purpose system is not only good for performance, but is very flexible and extensible. This also stresses the importance of having a uniform abstraction for I/O.
Reference: 7. <author> B. Leiner, Ed., </author> <title> ``Critical Issues in High-Speed Networking,'' </title> <type> RFC 1077, </type> <institution> Network Information Center, SRI International, </institution> <address> Menlo Park, CA (November 1988). </address>
Reference-contexts: Efficient Data Movement Due to the high data volume of DCM it is important to provide efficient data transfer mechanisms even when high speed fiber-optic networks are available. 3 Therefore, support for efficient multicasting is an important requirement, well recognized <ref> [7] </ref>, but poorly supported at the present time. Multicasting refers to one-to-many communication, in contrast to unicasting which is one-to-one communication, and broadcasting which is one-to-all communication [8].
Reference: 8. <author> A. J. Frank, L. D. Wittie, and A. J. Bernstein, </author> <title> ``Multicast Communication on Network Computers,'' </title> <booktitle> IEEE Software 2(3), </booktitle> <pages> pp. </pages> <month> 49-61 </month> <year> (1985). </year>
Reference-contexts: Multicasting refers to one-to-many communication, in contrast to unicasting which is one-to-one communication, and broadcasting which is one-to-all communication <ref> [8] </ref>. Multicast can be thought of as intermediate service between unicast and broadcast, and, unfortunately, many times it is implemented as either a broadcast (with filtering at higher protocol layers), or as a series of unicasts from the source.
Reference: 9. <author> S. E. Deering and D. R. Cheriton, </author> <title> ``Multicast Routing in Internetworks and Extended LANs,'' </title> <journal> ACM Transactions on Computer Systems 8(2), </journal> <pages> pp. </pages> <month> 85-110 (May </month> <year> 1990). </year>
Reference-contexts: Broadcasting sends the data to many more nodes than required. Multiple unicasts could use the same link several times to carry the same data, and the sender must work harder to send the multiple copies. However, multi-casting can be done efficiently using tree-based communication structures <ref> [9] </ref>. These structures can reduce bandwidth utilization by reducing the number of copies of data sent over the network. This is achieved by delaying duplication of data until the routes to different destinations diverge.
Reference: 10. <author> D. P. Anderson, S.-Y. Tzou, R. Wahbe, R. Govindan, and M. Andrews, </author> <title> Support for Continuous Media in the DASH System, </title> <institution> University of California, Berkeley, Berkeley, </institution> <address> CA (October 16, </address> <year> 1989). </year>
Reference-contexts: Quality of Service Specifications A quality of service (QOS) specification should be able to fully express an application's service needs while providing information necessary for the system to meet those needs. It has been suggested that the application itself is best equipped to describe its own requirements <ref> [10, 3, 11, 5] </ref>. However, the parameters that succinctly capture these requirements may not always be entirely clear. There have been a number of efforts to determine both the necessary QOS parameters and a complementary resource reservation algorithm. <p> Values for maximum message size, data rate, and burst rate, along with a proposed reservation protocol defined as an extension to Internet Protocol (IP), have been described by the DASH system <ref> [10] </ref>. Little and Ghafoor define QOS as a six-tuple consisting of a speed ratio (ratio of actual to nominal data presentation rate), utilization ratio (ratio of data presented to data available), average delay, maximum jitter, maximum bit error rate and maximum packet error rate [11]. <p> These parameters are used in the specification of a scheduling algorithm guaranteeing performance in a packet-switched wide-area network, utilizing processing at intermediate network nodes [12]. Regardless of the parameters chosen, they should be rich enough to facilitate scheduling, synchronization, buffer allocation, and flow control <ref> [10, 11, 5] </ref>. At some point during a connection's lifetime, QOS parameter refinement may become necessary in the face of events such as dynamic changes in multicast group membership or requests for improved QOS, e.g., changing video-image resolution. <p> Deadline scheduling algorithms have been proposed and should be applied in order to achieve the required performance goals <ref> [10, 12] </ref>.
Reference: 11. <author> T. D. C. Little and A. Ghafoor, </author> <title> ``Synchronization and Storage Models for Multimedia Objects,'' </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <pages> pp. </pages> <month> 413-427 (April </month> <year> 1990). </year>
Reference-contexts: Quality of Service Specifications A quality of service (QOS) specification should be able to fully express an application's service needs while providing information necessary for the system to meet those needs. It has been suggested that the application itself is best equipped to describe its own requirements <ref> [10, 3, 11, 5] </ref>. However, the parameters that succinctly capture these requirements may not always be entirely clear. There have been a number of efforts to determine both the necessary QOS parameters and a complementary resource reservation algorithm. <p> Little and Ghafoor define QOS as a six-tuple consisting of a speed ratio (ratio of actual to nominal data presentation rate), utilization ratio (ratio of data presented to data available), average delay, maximum jitter, maximum bit error rate and maximum packet error rate <ref> [11] </ref>. Ferrari characterizes a set of guaranteed real-time communication channels with the parameters of channel capacity, maximum packet size, per packet delay bound, and maximum packet loss rate. <p> These parameters are used in the specification of a scheduling algorithm guaranteeing performance in a packet-switched wide-area network, utilizing processing at intermediate network nodes [12]. Regardless of the parameters chosen, they should be rich enough to facilitate scheduling, synchronization, buffer allocation, and flow control <ref> [10, 11, 5] </ref>. At some point during a connection's lifetime, QOS parameter refinement may become necessary in the face of events such as dynamic changes in multicast group membership or requests for improved QOS, e.g., changing video-image resolution.
Reference: 12. <author> D. Ferrari and D. C. Verma, </author> <title> ``A Scheme for Real-Time Channel Establishment in Wide-Area Networks,'' </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3), </volume> <pages> pp. </pages> <month> 368-379 (April </month> <year> 1990). </year>
Reference-contexts: These parameters are used in the specification of a scheduling algorithm guaranteeing performance in a packet-switched wide-area network, utilizing processing at intermediate network nodes <ref> [12] </ref>. Regardless of the parameters chosen, they should be rich enough to facilitate scheduling, synchronization, buffer allocation, and flow control [10, 11, 5]. <p> Deadline scheduling algorithms have been proposed and should be applied in order to achieve the required performance goals <ref> [10, 12] </ref>.
Reference: 13. <author> C. Topolcic, Ed., </author> <title> ``Experimental Internet Stream Protocol, </title> <type> Version 2 (ST-II),'' RFC 1190, </type> <institution> Network Information Center, SRI International, </institution> <address> Menlo Park, CA (October 1990). </address>
Reference-contexts: Most current packet-switched networks and operating systems do not support QOS specifications for multimedia communication. A major effort is currently underway to specify and implement a network layer protocol, ST-II <ref> [13] </ref>, which supports many of the desired services for DCM, such as flow connections with QOS parameters, efficient multicasting, etc. To achieve these objectives, unlike the Internet Protocol (IP), ST-II keeps connection state information in gateways. 3.6.
Reference: 14. <author> D. D. Clark, V. Jacobson, J. Romkey, and H. Salwen, </author> <title> ``An Analysis of TCP Processing Overhead,'' </title> <journal> IEEE Communications Magazine 27(6), </journal> <pages> pp. </pages> <month> 23-29 (June </month> <year> 1989). </year>
Reference-contexts: Timer management for error control through retransmission, and checksumming for error detection are time consuming operations in current network protocols <ref> [14, 15] </ref>. If these services are not required, or are unusable by DCM applications, there should be mechanisms to bypass them. If possible, light-weight protocols which provide only the absolutely necessary services, should be adopted.
Reference: 15. <author> W. Doeringer, D. Dykeman, M. Kaiserswerth, B. Meister, H. Rudin, and R. Williamson, </author> <title> ``A Survey of Light-Weight Transport Protocols for High-Speed Networks,'' </title> <journal> IEEE Transactions on Communications 38(11), </journal> <pages> pp. </pages> <year> 2025-2039 </year> <month> (November </month> <year> 1990). </year>
Reference-contexts: Timer management for error control through retransmission, and checksumming for error detection are time consuming operations in current network protocols <ref> [14, 15] </ref>. If these services are not required, or are unusable by DCM applications, there should be mechanisms to bypass them. If possible, light-weight protocols which provide only the absolutely necessary services, should be adopted.
Reference: 16. <author> B. Arons, C. Binding, K. Lantz, and C. Schmandt, </author> <title> ``The VOX Audio Server,'' </title> <booktitle> Proc. Multimedia '89, </booktitle> <month> (April 20-23, </month> <year> 1989). </year>
Reference-contexts: Priorities include not only traditional CPU scheduling priority, but may also include real-time deadlines or lag time tolerances. Whenever possible, it is advantageous to allow processes to work ahead <ref> [2, 16] </ref>, so that processing is done prior to deadlines if resources are available, to get work out of the way as early as possible. Scheduling of network resources for DCM flows is also needed. Isochronous communication requires reservation of bandwidth to avoid network buffering.
Reference: 17. <author> D. M. Ritchie, </author> <title> ``A Stream Input-Output System,'' </title> <journal> AT&T Bell Laboratories Technical Journal, </journal> <volume> 63(8), </volume> <pages> pp. </pages> <year> 1897-1910 </year> <month> (October </month> <year> 1984). </year>
Reference-contexts: Filters transform the data flowing through an I/O channel. Restricting all but the most important of hierarchically coded DCM flows is an example of a filtering operation. Filters are similar in concept to the modules which can be pushed onto a stream in AT&T Streams <ref> [17] </ref>. In addition to their data manipulation functions, filters can act as splitters or joiners (i.e., a filter in reverse). In addition to the AT&T Streams functionality, we envision a facility to allow filters to be propagated toward the source end of an I/O channel.
Reference: 18. <author> M. Accetta, R. Baron, W. Bolosky, D. Golub, R. Rashid, A. Tevanian, and M. Young, </author> <title> ``Mach: A New Kernel Foundation for UNIX Development,'' </title> <booktitle> Proceedings of the Summer USENIX, </booktitle> <month> (July, </month> <year> 1986). </year>
Reference-contexts: An approach gaining popularity is to have a small kernel utilizing user-level processes for higher level functions. This structure is flexible, protection is enforced through message passing, and efficiency can be improved by integrating virtual memory and message passing as is done in Mach <ref> [18] </ref>. Of course, if the cost of context switching 10 UCSD CSL System Support for Multimedia is high, this approach can be inefficient. Finally, one can have a modular I/O system by providing a mechanism similar to AT&T Streams.
Reference: 19. <author> D. D. Clark and D. L. Tennenhouse, </author> <title> ``Architectural Considerations for a New Generation of Protocols,'' </title> <booktitle> ACM SIGCOMM '90, </booktitle> <pages> pp. 200-208 (September 24-27, </pages> <year> 1990). </year> <month> 12 </month>
Reference-contexts: High-bandwidth delay-sensitive data exacerbates such performance problems. This problem is well-known; Clark and Tennenhouse describe an approach to solving this problem for network protocols <ref> [19] </ref>. They suggest identifying functions performed at multiple levels, and they suggest how to avoid repeating such functions. 6. Conclusion We have presented the primary issues relevant to supporting DCM applications by the network software and operating system. Real-time guarantees are needed to ensure continuity when presenting DCM.
References-found: 19

