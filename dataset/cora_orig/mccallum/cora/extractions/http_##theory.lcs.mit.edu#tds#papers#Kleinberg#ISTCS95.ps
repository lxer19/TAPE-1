URL: http://theory.lcs.mit.edu/tds/papers/Kleinberg/ISTCS95.ps
Refering-URL: http://theory.lcs.mit.edu/tds/papers/Kleinberg/ISTCS95.html
Root-URL: 
Title: Trade-offs between Message Delivery and Quiesce Times in Connection Management Protocols  
Author: Jon Kleinberg Hagit Attiya Nancy Lynch 
Abstract: The problem of implementing reliable message delivery using timing information is considered. Two important parameters, from the point of view of system performance, are the time required to deliver a message and the time that elapses between periods of quiescence, in which a processor returns to an initial state and deletes all earlier connection records. It has been frequently observed that there is no known protocol which simultaneously optimizes both these quantities; in this paper we prove such trade-offs precisely in the form of lower bounds. Despite the simple nature of the problem, the relationships among these lower bounds are quite subtle, in that they depend critically on the level of synchronization in the processors' clocks. We consider three basic timing models: asynchronous processors, processors that have (approximately) synchronized clocks, and processors with clocks that read different values but run at (approximately) the same rate. We mainly focus on networks that can duplicate and re-order packets; at the end, we also consider message loss and processor crashes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Y. Afek, H. Attiya, A. Fekete, M. Fischer, N. Lynch, Y. Mansour, D. Wang, L. Zuck, </author> <title> "Reliable communication over an unreliable channel," </title> <note> to appear in Journal of the ACM. (Also Technical Memo MIT/LCS/TM-447.) </note>
Reference-contexts: Harvey and Lynch [7] propose a number of the problems considered here, and obtain some of the initial results on duplication. In the fully asynchronous setting, Fekete, Lynch, Mansour, and Spinelli, and Afek et. al., prove impossibility results for different types of reliable communication <ref> [5, 1] </ref>. Wang and Zuck [17] consider the sequence transmission problem, in which a sender must transmit a specified sequence of data to a receiver over a faulty channel.
Reference: [2] <author> H. Attiya, S. Dolev, J. Welch, </author> <title> "Connection management without retaining information," </title> <type> Technical Report LPCR 9316, </type> <institution> Laboratory for Parallel Computing Research, Dept. of Computer Science, The Technion, </institution> <month> June </month> <year> 1993. </year>
Reference-contexts: Further results in an asynchronous model, based on the minimum amount of information that must be maintained between connections, are proved by Attiya, Dolev, and Welch <ref> [2] </ref>; their paper deals with the existence or non-existence of connection management algorithms, and not with bounds on quiescence time. <p> We are dealing with asynchronous processors, so the clock component of the state can take only a single value (and hence is trivial). Without giving the processors any additional power (i.e. UID's), we can show that at-most-once delivery is impossible. A similar result is proved in <ref> [2] </ref>. Proposition 1 Consider the asynchronous model without UID's. If R must eventually quiesce, then at-most-once delivery is not possible. Proof. Consider, by way of contradiction, a protocol for at-most-once delivery in this model. First consider an execution e in which R delivers a message and quiesces.
Reference: [3] <author> H. Attiya, R. Rappoport, </author> <title> "The level of handshake required for establishing a connection," </title> <booktitle> Proc 8th Internation Workshop on Distributed Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: Further results in an asynchronous model, based on the minimum amount of information that must be maintained between connections, are proved by Attiya, Dolev, and Welch [2]; their paper deals with the existence or non-existence of connection management algorithms, and not with bounds on quiescence time. Attiya and Rappoport <ref> [3] </ref> consider the connection management problem primarily in the asynchronous setting, focusing on the amount of information exchange that must take place between parties establishing a connection. 3 2 Preliminaries I was feeling kinda lonesome and blue and needed somebody to talk to.
Reference: [4] <author> D. Belsnes, </author> <title> "Single message communication," </title> <journal> IEEE Transactions on Communications, </journal> <volume> 24(1976). </volume>
Reference-contexts: Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter. <p> Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake <ref> [4, 16] </ref> at the latter. Clock-based protocols are in general based on the maximum packet lifetime (mpl) of the network; this is simply the longest amount of time that any copy of a packet can remain undelivered in the network.
Reference: [5] <author> A. Fekete, N. Lynch, Y. Mansour, J. Spinelli, </author> <title> "The impossibility of implementing reliable communication in the face of crashes," </title> <journal> Journal of the ACM, </journal> <volume> 40(1993), </volume> <pages> pp. 1087-1107. </pages>
Reference-contexts: Harvey and Lynch [7] propose a number of the problems considered here, and obtain some of the initial results on duplication. In the fully asynchronous setting, Fekete, Lynch, Mansour, and Spinelli, and Afek et. al., prove impossibility results for different types of reliable communication <ref> [5, 1] </ref>. Wang and Zuck [17] consider the sequence transmission problem, in which a sender must transmit a specified sequence of data to a receiver over a faulty channel. <p> We are also interested in obtaining tight bounds for the case of processor crashes; one possible approach is the "pumping" technique of Fekete et. al. <ref> [5] </ref>.
Reference: [6] <author> R. Gawlick, R. Segala, J. Stgaard-Andersen, N. Lynch, </author> <title> "Liveness in timed and untimed systems," </title> <booktitle> Proc. 21st International Colloquium on Automata, Languages, and Programming, </booktitle> <year> 1994. </year>
Reference-contexts: Formally, S are R are timed I/O automata of the type considered by Lynch and Vaandrager [12], augmented with liveness properties as in Gawlick et. al. <ref> [6] </ref>. (See also [10] for background on general I/O automata.) Speaking informally, the fundamental property of S and R is that their states consist of an internal component and a clock component.
Reference: [7] <author> A. Harvey, N. Lynch, </author> <booktitle> Notes on connection management, </booktitle> <month> DEC, </month> <year> 1990. </year>
Reference-contexts: The theoretical research on this problem has been much less voluminous than the practical work mentioned above. Harvey and Lynch <ref> [7] </ref> propose a number of the problems considered here, and obtain some of the initial results on duplication. In the fully asynchronous setting, Fekete, Lynch, Mansour, and Spinelli, and Afek et. al., prove impossibility results for different types of reliable communication [5, 1].
Reference: [8] <author> B. Liskov, L. Shrira, J. Wroclawski, </author> <title> "Efficient at-most-once messages based on synchronized clocks," </title> <journal> ACM Transactions on Computer Systems </journal>
Reference-contexts: Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter. <p> A large number of protocols have been proposed to optimize these parameters (e.g. [4, 8, 14, 15, 16, 18]). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. <ref> [8] </ref>) and the canonical three-packet handshake [4, 16] at the latter. Clock-based protocols are in general based on the maximum packet lifetime (mpl) of the network; this is simply the longest amount of time that any copy of a packet can remain undelivered in the network.
Reference: [9] <author> J. Stgaard-Andersen, N. Lynch, B. Lampson, </author> <title> "Correctness of communications protocols: a case study," </title> <type> Technical Report MIT/LCS/TR-589, </type> <month> November </month> <year> 1993. </year>
Reference-contexts: For more complicated types of failures, some additional acknowledgement is needed before quiescence. Analyzing this protocol in detail is not something we will undertake here (see <ref> [9] </ref> and [13] for detailed analyses); for now we simply note that it is a very robust way to deliver messages within time 3d and quiesce immediately. The following lower bound shows that in an asynchronous system, there is no way to improve on the worst-case performance of this protocol.
Reference: [10] <author> N. Lynch, M. Tuttle, </author> <title> "Hierarchical correctness proofs for distributed algorithms," </title> <booktitle> Proc. 6th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1987, </year> <pages> pp. 137-151. </pages> <note> (Full version in Technical Report MIT/LCS/TR-387.) </note>
Reference-contexts: Formally, S are R are timed I/O automata of the type considered by Lynch and Vaandrager [12], augmented with liveness properties as in Gawlick et. al. [6]. (See also <ref> [10] </ref> for background on general I/O automata.) Speaking informally, the fundamental property of S and R is that their states consist of an internal component and a clock component.
Reference: [11] <author> N. Lynch, I. Saias, R. Segala, </author> <title> "Proving time bounds for randomized distributed algorithms," </title> <booktitle> Proc. 13th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1994. </year>
Reference-contexts: This probability now extends uniquely to the -algebra generated by all sets of the form ; i.e. the smallest collection of sets containing all which is closed under complement and countable union. Constructions of this sort are a central topic of <ref> [11] </ref>. An execution e is consistent with a packet history P l if the j th packet sent in e takes time t j , or is lost if j 2 l.
Reference: [12] <author> N. Lynch, F. Vaandrager, </author> <title> "Forward and backward simulations part II: </title> <journal> timing--based systems," </journal> <note> Technical Memo MIT/LCS/TM-487.b, </note> <month> September </month> <year> 1993. </year>
Reference-contexts: In general, we will not be concerned with the structure of U S and U R ; U S simply provides inputs to S, consisting of messages that it wants delivered. Formally, S are R are timed I/O automata of the type considered by Lynch and Vaandrager <ref> [12] </ref>, augmented with liveness properties as in Gawlick et. al. [6]. (See also [10] for background on general I/O automata.) Speaking informally, the fundamental property of S and R is that their states consist of an internal component and a clock component.
Reference: [13] <author> L. Murphy, A.U. Shankar, </author> <title> "Connection management for the transport layer: service specification and protocol verification," </title> <journal> IEEE Trans. on Communications, </journal> <volume> 39(1991), </volume> <pages> pp. 1762-1775. </pages>
Reference-contexts: For more complicated types of failures, some additional acknowledgement is needed before quiescence. Analyzing this protocol in detail is not something we will undertake here (see [9] and <ref> [13] </ref> for detailed analyses); for now we simply note that it is a very robust way to deliver messages within time 3d and quiesce immediately. The following lower bound shows that in an asynchronous system, there is no way to improve on the worst-case performance of this protocol.
Reference: [14] <author> C. Sunshine, Y. Dalal, </author> <title> "Connection management in transport protocols," Computer Networks, </title> <publisher> 2(1978),. </publisher>
Reference-contexts: Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter.
Reference: [15] <author> A. Tanenbaum, </author> <title> Computer Networks, </title> <publisher> Prentice-Hall, </publisher> <year> 1988. </year>
Reference-contexts: We are interested here in problems of connection management, in which a sender S wishes to open a connection to a remote receiver R, transmit information, and later release the connection. Connection management constitutes the transport layer of the OSI hierarchy (see e.g. <ref> [15] </ref>). Protocols based on the transport layer are the basis for ftp, telnet, remote procedure calls, and a number of other common primitives. <p> Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter.
Reference: [16] <author> R. Tomlinson, </author> <title> "Selecting sequence numbers," </title> <journal> ACM Operating Systems Review, </journal> <volume> 3(1975). </volume>
Reference-contexts: Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter. <p> Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake <ref> [4, 16] </ref> at the latter. Clock-based protocols are in general based on the maximum packet lifetime (mpl) of the network; this is simply the longest amount of time that any copy of a packet can remain undelivered in the network.
Reference: [17] <author> D. Wang, L. Zuck, </author> <title> "Tight bounds for the sequence transmission problem," </title> <booktitle> Proc. 8th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1989, </year> <pages> pp. 73-83. </pages>
Reference-contexts: Harvey and Lynch [7] propose a number of the problems considered here, and obtain some of the initial results on duplication. In the fully asynchronous setting, Fekete, Lynch, Mansour, and Spinelli, and Afek et. al., prove impossibility results for different types of reliable communication [5, 1]. Wang and Zuck <ref> [17] </ref> consider the sequence transmission problem, in which a sender must transmit a specified sequence of data to a receiver over a faulty channel.
Reference: [18] <author> R. Watson, </author> <title> "The Delta-t transport protocol: features and experience," </title> <booktitle> Proc. IEEE Conference on Local Computer Networks, </booktitle> <pages> pp. 399-407, </pages> <year> 1989. </year> <month> 21 </month>
Reference-contexts: Message delivery time determines the latency of packet transmission, especially in short incarnations such as remote procedure calls. Time until quiescence affects how much information must be stored at each node. A large number of protocols have been proposed to optimize these parameters (e.g. <ref> [4, 8, 14, 15, 16, 18] </ref>). Viewed on a spectrum that ranges from near-optimal message delivery time to near-optimal quiescence time, we have a number of clock-based protocols at the former extreme (e.g. [8]) and the canonical three-packet handshake [4, 16] at the latter.
References-found: 18

