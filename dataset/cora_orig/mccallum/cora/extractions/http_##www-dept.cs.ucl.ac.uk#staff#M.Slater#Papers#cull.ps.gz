URL: http://www-dept.cs.ucl.ac.uk/staff/M.Slater/Papers/cull.ps.gz
Refering-URL: http://www-dept.cs.ucl.ac.uk/staff/M.Slater/publications.html
Root-URL: http://www.cs.ucl.ac.uk
Title: View Volume Culling Using a Probabilistic Caching Scheme  
Author: Mel Slater and Yiorgos Chrysanthou 
Keyword: Clipping, culling, graphics pipeline, BSP trees, virtual reality walkthrough.  
Address: Gower Street London WC1E 6BT, UK.  
Affiliation: Department of Computer Science University College London  
Abstract: This paper describes a new algorithm for view volume culling. During an interactive walkthrough of a 3D scene, at any moment a large proportion of objects will be outside of the view volume. Frame-to-frame coherence implies that the sets of objects that are completely outside, completely inside, or intersecting the boundary of the view volume, will change slowly over time. This coherence is exploited to develop an algorithm that quickly identifies these three sets of objects, and partitions those completely outside into subsets which are probabilistically sampled according to their distance from the view volume. A statistical object representation scheme is used to classify objects into the various sets. The algorithm is implemented in the context of a Binary Space Partition tree, and preliminary investigation of the algorithm on two scenes with more than 11,000 polygons, suggests that it is approximately twice as fast as the hierarchical bounding box approach to culling, and that only about 14% of the total frame-polygons are passed through the viewing pipeline during the course of a walkthrough. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Airey, J., Rohlf, J., Brooks, F. </author> <title> (1990) Towards image realism with Interactive Update Rates in Complex Virtual Building Environments, </title> <booktitle> SIGGRAPH 1990 Symposium on Interactive 3D Graphics, </booktitle> <volume> 24(2), </volume> <pages> 41-50. </pages>
Reference: <author> Blinn, J.F. </author> <title> (1991) A Trip Down the Graphics Pipeline Line Clipping IEEE CG&A Jan, </title> <type> 11(1) 98-105. </type>
Reference: <author> Clark, J.H. </author> <title> (1976) Hierarchical Geometric Models for visible surface algorithms, </title> <journal> Communications of the ACM, </journal> <month> 19(10), </month> <pages> 547-554. </pages>
Reference: <author> Coorg, S., Teller, S. </author> <title> (1996) A Spatially and Temporarily Coherent Object Space Visibility Algorithm, </title> <type> Tech. </type> <note> Report MIT February 1996. </note>
Reference-contexts: Its impact is lessened for environments that have a large number of smaller objects (for example, as might be found within a complex room). However, <ref> (Coorg and Teller, 1996) </ref> have started to address how this problem might be tackled in the context of visibility culling.
Reference: <author> Funkhouser, T., Sequin, C. and Teller, S. </author> <title> (1992) Management of Large Amounts of Data in Interactive Building Walkthroughs, </title> <booktitle> in Proc. 1992 ACM Symposium on Interactive 3D Graphics, </booktitle> <pages> 11-20. </pages>
Reference: <author> Fuchs, H., Kedem, </author> <title> Z.M., Naylor, B.F. (1980) On visible surface generation by a priori tree structures, </title> <journal> Computer Graphics (SIGGRAPH), </journal> <volume> 14(3), </volume> <pages> 124-133. </pages>
Reference: <author> Fuchs, H. Abram, G.D., Grant, E.D. </author> <title> (1983) Near real-time shaded display of rigid objects, </title> <booktitle> Computer Graphics (SIGGRAPH) 17(3), </booktitle> <pages> 65-72. </pages>
Reference-contexts: A test scene (S1) was a representation of a laboratory in the Computer Science Department at UCL. This consisted of 307 objects composed of 11,752 initial faces, and the size of the corresponding BSP tree was 23,648 faces. (The tree was constructed using Fuchs method as described in <ref> (Fuchs, Abram and Grant, 1983) </ref>).
Reference: <author> Gottschalk, S., Lin, M.C., Manocha, D. </author> <year> (1996) </year> <month> OBBTree: </month> <title> A Hierarchical Structure for Rapid Interference Detection, </title> <booktitle> Computer Graphics (SIGGRAPH Proceedings), </booktitle> <pages> 171-180. </pages>
Reference-contexts: Hence an object can be approximated by its mean vector (location) and covariance matrix (dispersion and correlation). This idea has been used in <ref> (Gottschalk, Lin, and Manocha, 1996) </ref> where the eigenvectors (or principle components) obtained from the covariance matrix are used to determine an objects oriented bounding box. In our algorithm the object is approximated by a bounding ellipsoid. <p> However, this ellipsoid approximation is not accurate where there is an uneven distribution of vertices around the object - in this case the density is distributed closer to the region of the greatest density of vertices. This was pointed out by <ref> (Gottschalk, Lin, and Manocha, 1996) </ref> who attempted to improve this situation for their oriented bounding box approximation by evening out the data distribution. In the context of collision detection this is important, but less important for VV culling - where anyway the scheme is probabilistic for rapid walkthrough.
Reference: <author> Greene, N., Kass, M., Miller G. </author> <title> (1993) Hierarchical Z-Buffer Visibility, </title> <booktitle> Computer Graphics (SIGGRAPH Proceedings), </booktitle> <pages> 231-238. </pages>
Reference: <author> Greene, N. </author> <title> (1996) Hierarchical Polygon Tiling With Coverage Masks, </title> <booktitle> Computer Graphics (SIGGRAPH Proceedings), </booktitle> <pages> 65-74. </pages>
Reference: <author> Naylor, B. </author> <title> (1992) Partitioning Image Tree Representation and generation from 3D Geometric Models, </title> <booktitle> Proceedings of Graphics Interface 92, (Vancouver), </booktitle> <pages> 201-212. </pages>
Reference: <author> Normand, V. and Tromp, J. </author> <title> (1996) Collaborative Virtual Environments: The COVEN Project, </title> <booktitle> Proceedings of the Framework for Immersive Virtual Environments Conference, </booktitle> <address> FIVE96, </address> <month> December, </month> <editor> ed. by M. Bergamasco, </editor> <address> Pisa. </address>
Reference-contexts: 1. Introduction In the COVEN (Collaborative Virtual Environments) project <ref> (Normand and Tromp, 1996) </ref> we are developing a very large scenario for a virtual travel rehearsal within London.
Reference: <author> Rohlf, J. and Helman, J. </author> <title> (1994) IRIS Performer: A High Performance Multiprocessing Toolkit for Real-Time 3D Graphics, </title> <booktitle> Computer Graphics (SIGGRAPH Proceedings), </booktitle> <pages> 381-394. </pages>
Reference: <author> Sudarsky, O. and Gotsman C. </author> <title> (1996) OutputSensitive Visibility Algorithms for Dynamic Scenes with Applications to Virtual Reality, Eurographics 96, </title> <editor> J. Rossignac and F. </editor> <publisher> Sillion (eds) Blackwell Publishers, </publisher> <pages> 249-258. </pages>
Reference: <author> Teller, S. and Sequin, C. </author> <title> (1991) Visibility Preprocessing for Interactive Walkthroughs, </title> <booktitle> Computer Graphics (SIGGRAPH) 25(4), </booktitle> <pages> 61-69. </pages>

References-found: 15

