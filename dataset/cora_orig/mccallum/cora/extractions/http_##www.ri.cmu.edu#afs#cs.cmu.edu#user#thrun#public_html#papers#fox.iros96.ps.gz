URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/thrun/public_html/papers/fox.iros96.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/thrun/public_html/papers/full.html
Root-URL: 
Email: Email: ffox,wolframg@uran.cs.uni-bonn.de, thrun@cs.cmu.edu  
Title: Controlling Synchro-drive Robots with the Dynamic Window Approach to Collision Avoidance  
Author: Dieter Fox Wolfram Burgard and Sebastian Thrun yz 
Note: In Proceedings of the 1996 IEEE/RSJ International Conference on Intelligent Robots and Systems  
Address: Bonn, D-53117 Bonn  15213  
Affiliation: Dept. of Computer Science III, University of  Dept. of Computer Science, Carnegie Mellon University, Pittsburgh, P A  
Abstract: This paper proposes the dynamic window approach to reactive collision avoidance for mobile robots equipped with synchro-drives. The approach is derived directly from the motion dynamics of the robot and is therefore particularly well-suited for robots operating at high speed. It differs from previous approaches in that the search for commands controlling the translational and rotational velocity of the robot is carried out directly in the space of velocities. The advantage of our approach is that it correctly and in a rigorous way incorporates the dynamics of the robot. This is done by reducing the search space to the dynamic window, which consists of the velocities reachable within a short time interval. Within the dynamic window the approach only considers admissible velocities yielding a trajectory on which the robot is able to stop safely. Among these velocities the combination of translational and rotational velocity is chosen by maximizing an objective function. The objective function includes a measure of progress towards a goal location, the forward velocity of the robot, and the distance to the next obstacle on the trajectory. In extensive experiments the approach presented here has been found to safely control our mobile robot RHINO with speeds of up to 95 cm/sec, in populated and dynamic environments. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Johann Borenstein and Yoram Koren. </author> <title> Real-time obstacle avoidance for fast mobile robots in cluttered environments. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, volume CH-2876, </booktitle> <pages> pages 572-577, </pages> <year> 1990. </year>
Reference-contexts: Boren-stein and Koren [7] identified that such methods often fail to find trajectories between closely spaced obstacles; they also can produce oscillatory behavior in narrow corridors. In [2], the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram <ref> [1] </ref>. This approach uses an occupancy grid representation for modeling the robot's environment, which is generated and updated continuously using ultrasonic proximity sensors. <p> Current approaches deal poorly with the constraints imposed by the dynamics of the robot. This is due to the fact that most of the local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 6] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only legitimate if infinite forces can be asserted on the robot. <p> It is simply a projection on the translational velocity v. Smoothing All three components of the objective function are normalized to <ref> [0; 1] </ref> and locally smoothed. The smoothing increases side-clearance of the robot. The resulting objective function for our example is shown in Figure 5. In the plot the values for non-admissible velocities are set to zero (compare with Figures 2 and 3). <p> For example, in a configuration similar to the ones shown in Figures 9 and 10 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 5 Discussion This paper describes the dynamic window approach to collision avoidance for mobile synchro-drive robots. <p> configuration similar to the ones shown in Figures 9 and 10 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 5 Discussion This paper describes the dynamic window approach to collision avoidance for mobile synchro-drive robots.
Reference: [2] <author> Johann Borenstein and Yoram Koren. </author> <title> The vector field histogram fast obstacle avoidance for mobile robots. </title> <journal> IEEE Transactions on Robotics and Automation, </journal> <volume> 7(3) </volume> <pages> 278-288, </pages> <year> 1991. </year>
Reference-contexts: These methods are extremely fast, and they typically consider only the small subset of obstacles close to the robot. Boren-stein and Koren [7] identified that such methods often fail to find trajectories between closely spaced obstacles; they also can produce oscillatory behavior in narrow corridors. In <ref> [2] </ref>, the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram [1]. This approach uses an occupancy grid representation for modeling the robot's environment, which is generated and updated continuously using ultrasonic proximity sensors. <p> Current approaches deal poorly with the constraints imposed by the dynamics of the robot. This is due to the fact that most of the local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 6] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only legitimate if infinite forces can be asserted on the robot. <p> For example, in a configuration similar to the ones shown in Figures 9 and 10 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 5 Discussion This paper describes the dynamic window approach to collision avoidance for mobile synchro-drive robots. <p> configuration similar to the ones shown in Figures 9 and 10 Borenstein et al. report that their robot traveled with an average speed of 58 cm/sec through a cluttered environment <ref> [1, 2] </ref>. As far as it can be judged from a single example (which is all that is available in [1, 2]), our results compare favorably to those of Borenstein et al. 5 Discussion This paper describes the dynamic window approach to collision avoidance for mobile synchro-drive robots.
Reference: [3] <author> Joachim Buhmann, Wolfram Burgard, Armin B. Cremers, Dieter Fox, Thomas Hofmann, Frank Schneider, Jiannis Strikos, and Sebastian Thrun. </author> <title> The mobile robot Rhino. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <year> 1995. </year>
Reference-contexts: for the construction of local world models (obstacle line fields), the method has proven to avoid collisions reliably with speeds of up to 95 cm/sec on several robots in several indoor environments (University of Bonn, Carnegie Mellon University, 1994 AAAI robot competition, 1995 IJCAI robot exhibition, and others, see also <ref> [3] </ref>). The method has also successfully been operated based on cameras and infrared detectors as sensory input. <p> A complete sonar sweep takes approximately 0.4 sec. The infrared detectors and the camera system are not used in the experiments reported here. 4.1 The Obstacle Line Field The world is modeled by an obstacle line field <ref> [3] </ref>, which is a two-dimensional description of sensory data relative to the robot's position (see Figure 6). We adjusted our sonar sensors such that most erroneous readings indicate a too long distance. To be maximally conservative, every reading is converted to an obstacle line. <p> Notice that the approach described here is only part of the overall RHINO control architecture. For example, approaches for building occupancy maps, global path planning and computer vision are surveyed in <ref> [3] </ref>. The technique of approximating the trajectories of mobile robots by circular arcs is not restricted to synchro-drive robots. If the influence of the shape of the robot on the curvatures depending on steering commands is taken into account, the dynamic window approach can also be applied to non-synchro-drive robots.
Reference: [4] <author> Dieter Fox, Wolfram Burgard, and Sebas-tian Thrun. </author> <title> The dynamic window approach to collision avoidance. </title> <type> Technical Report IAI-TR-95-13, </type> <institution> University of Bonn, </institution> <year> 1995. </year> <note> http://www.cs.uni-bonn.de/~fox/. </note>
Reference-contexts: It quickly reacts to unforeseen obstacles, and re-plans dynamically, trading off direct progress towards the goal and clearance. The dynamic window approach is based on an approximation of the exact motion equations of synchro-drive robots by sequences of sequences of circular arcs <ref> [4] </ref>. In a nutshell, the dynamic window approach works as follows. It first prunes the overall search space of trajectories, resulting in a two-dimensional space of circular trajectories. Then, the search space is reduced to the admissible velocities allowing the robot to stop safely without colliding with an obstacle. <p> The dynamic window approach is especially designed to deal with such situations. By only considering the admissible velocities in the dynamic window the robot detects that it cannot turn to the right and therefore keeps its straight motion direction. 3 The Dynamic Window Approach In <ref> [4] </ref> we showed how to approximate the trajectory of a synchro-drive robot by a sequence of circular arcs. In the remainder of this paper we will refer to these circles as curvatures.
Reference: [5] <author> Huosheng Hu and Michael Brady. </author> <title> A Bayesian approach to real-time obstacle avoidance for a mobile robot. </title> <booktitle> In Autonomous Robots, </booktitle> <volume> volume 1, </volume> <pages> pages 69-92. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1994. </year>
Reference-contexts: However, global approaches are not appropriate for fast obstacle avoidance. Their strength is global path planning. More specifically, these methods have proven problematic when the global world model is inaccurate, or simply not available, as is typically the case in most populated indoor environments. Hu/Brady, Moravec and others <ref> [5, 9] </ref>, have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning [10].
Reference: [6] <author> Oussama Khatib. </author> <title> Real-time obstacle avoidance for robot manipulator and mobile robots. </title> <journal> The International Journal of Robotics Research, </journal> <volume> 5(1) </volume> <pages> 90-98, </pages> <year> 1986. </year>
Reference-contexts: However, the key advantage of local techniques over global ones lies in their low computational complexity, which is particularly important when the world model is updated frequently based on sensor information. For example, potential field methods, as proposed by <ref> [6] </ref>, determine the steering direction by (hypothetically) assuming that obstacles assert negative forces on the robot, and that the target location asserts a positive force. These methods are extremely fast, and they typically consider only the small subset of obstacles close to the robot. <p> Current approaches deal poorly with the constraints imposed by the dynamics of the robot. This is due to the fact that most of the local approaches generate motion commands for the robot in two separate stages <ref> [1, 2, 6] </ref>. In the first stage a desired motion direction is determined. In the second stage the steering commands yielding a motion into the desired direction are generated. Strictly speaking, such an approach is only legitimate if infinite forces can be asserted on the robot.
Reference: [7] <author> Yoram Koren and Johann Borenstein. </author> <title> Potential field methods and their inherent limitations for mobile robot navigation. </title> <booktitle> In Proc. IEEE Int. Conf. Robotics and Automation, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: These methods are extremely fast, and they typically consider only the small subset of obstacles close to the robot. Boren-stein and Koren <ref> [7] </ref> identified that such methods often fail to find trajectories between closely spaced obstacles; they also can produce oscillatory behavior in narrow corridors. In [2], the vector field histogram approach is proposed, which extends the previously developed virtual force field histogram [1]. <p> It should be noted that after having driven round the obstacle RHINO follows straight lines whenever possible, and does not oscillate, as sometimes is the case with potential field approaches <ref> [7] </ref>. Fast Motion through Cluttered Environments The third experiment is shown in Figure 10 and involves traveling through a cluttered corridor. All humans in the corridor are smoothly circumvented with a start robot competition maximal speed of 95 cm/sec.
Reference: [8] <author> Jean-Claude Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year> <note> ISBN 0-7923-9206-X. </note>
Reference-contexts: Experimental results are summarized in Section 4, followed by a discussion of further research issues. 2 Related Work The collision avoidance approaches for mobile robots can roughly be divided into two categories: global and local. The global techniques, such as road-map, cell decomposition and potential field methods (see <ref> [8] </ref> for an overview and further references), generally assume that a complete model of the robot's environment is available. The advantage of global approaches lies in the fact that a complete trajectory from the starting point to the target point can be computed off-line.
Reference: [9] <author> Hans P. Moravec. </author> <title> Sensor fusion in certainty grids for mobile robots. </title> <journal> AI Magazine, </journal> <pages> pages 61-74, </pages> <month> Summer </month> <year> 1988. </year>
Reference-contexts: However, global approaches are not appropriate for fast obstacle avoidance. Their strength is global path planning. More specifically, these methods have proven problematic when the global world model is inaccurate, or simply not available, as is typically the case in most populated indoor environments. Hu/Brady, Moravec and others <ref> [5, 9] </ref>, have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning [10]. <p> To be maximally conservative, every reading is converted to an obstacle line. If the sensors would produce spurious short readings (e.g. due to cross-talk), more sophisticated sensor interpretation and integration models such as for example occupancy probability grid maps <ref> [9] </ref> would be required. The obstacle line field is centered around the robot's position and is built out of the data gathered by proximity sensors.
Reference: [10] <author> Jacob T. Schwartz, Micha Scharir, and John Hopcroft. </author> <title> Planning, Geometry and Complexity of Robot Motion. </title> <publisher> Ablex Publishing Corporation, </publisher> <address> Norwood, NJ, </address> <year> 1987. </year>
Reference-contexts: Hu/Brady, Moravec and others [5, 9], have shown how to update global world models based on sensory input, using probabilistic representations. A second disadvantage of global methods is their slowness due to the inherent complexity of robot motion planning <ref> [10] </ref>. This is particularly problematic if the underlying world model changes on-the-fly, because of the resulting need for repeated adjustments of the global plan. In such cases, planning in a global model is usually too expensive to be done repeatedly.
Reference: [11] <author> Reid Simmons. </author> <title> The curvature-velocity method for local obstacle avoidance. </title> <note> To appear in Proceedings of ICRA '96. </note>
Reference-contexts: Occupancy information is transformed into a histogram description of the free space around the robot, which is used to compute the motion direction and velocity for the robot. In <ref> [11] </ref> a method similar to ours has been proposed which, according to Simmons, has been developed later but independently. As noted above, local methods are typically very fast, and they quickly adapt to unforeseen changes in the environment.
Reference: [12] <author> Sebastian Thrun. </author> <title> Exploration and model building in mobile robot domains. </title> <booktitle> In Proceedings of the ICNN-93, </booktitle> <pages> pages 175-180, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year> <institution> IEEE Neural Network Council. </institution>
Reference-contexts: Each of these examples show the complete path to a particular goal point, which in our tests is set by a human operator. In the every-day use, these goal points are set automatically by a global path planner described in <ref> [12] </ref>. parameters Role of the Dynamic Window The first experiment demonstrates the impact of the dynamic window on the behavior of the robot. The three paths in Figure 8 are examples for the typical behavior of the robot under different dynamics constraints.
References-found: 12

