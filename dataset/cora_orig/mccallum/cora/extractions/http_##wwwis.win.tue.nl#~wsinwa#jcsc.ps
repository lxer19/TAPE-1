URL: http://wwwis.win.tue.nl/~wsinwa/jcsc.ps
Refering-URL: http://wwwis.win.tue.nl/~wsinwa/
Root-URL: http://www.win.tue.nl
Email: e-mail: wsinwa@win.tue.nl  
Phone: telephone: -31 40 2474295,  
Title: The Application of Petri Nets to Workflow Management  
Author: W.M.P. van der Aalst 
Address: P.O. Box 513, NL-5600 MB, Eindhoven, The Netherlands,  
Affiliation: Departmentof Mathematics and ComputingScience, Eindhoven Universityof Technology,  
Abstract: Workflow management promises a new solution to an age-old problem: controlling, monitoring, optimizing and supporting business processes. What is new about workflow management is the explicit representation of the business process logic which allows for computerized support. This paper discusses the use of Petri nets in the context of workflow management. Petri nets are an established tool for modeling and analyzing processes. On the one hand, Petri nets can be used as a design language for the specification of complex workflows. On the other hand, Petri net theory provides for powerful analysis techniques which can be used to verify the correctness of workflow procedures. This paper introduces workflow management as an application domain for Petri nets, presents state-of-the-art results with respect to the verification of workflows, and highlights some Petri-net-based work-flow tools. 
Abstract-found: 1
Intro-found: 1
Reference: [Aal94] <author> W.M.P. van der Aalst. </author> <title> Putting Petri nets to work in industry. </title> <booktitle> Computers in Industry, </booktitle> <volume> 25(1) </volume> <pages> 45-54, </pages> <year> 1994. </year>
Reference-contexts: At another level we want to specify a more detailed behavior. The extension with hierarchy allows for such an approach. For a more elaborate discussion on these extensions and other kinds of high-level Petri nets, the reader is referred to <ref> [Jen96, Aal94, Hee94] </ref>. 14 4 Mapping workflow management concepts onto Petri nets Most workflow management systems and methodologies to support workflow management separate the modeling of the workflow process (How?) from the modeling of the structure of the organization and the resources within the organization (By whom?).
Reference: [Aal95] <author> W.M.P. van der Aalst. </author> <title> A class of Petri net for modeling and analyzing business processes. </title> <institution> Computing Science Reports 95/26, Eindhoven University of Technology, Eindhoven, </institution> <year> 1995. </year>
Reference-contexts: We can use one of the many standard Petri-net-based analysis tools to verify that the extended net is live and bounded. Therefore, the workflow process specified in Figure 15 is guaranteed to behave properly (cf. Definition 7). Theorem 1 is an extension of the results presented in <ref> [Aal95, SH95] </ref>. In [Aal95] we restrict ourselves to free-choice WF-nets. In free-choice Petri nets it is not allowed to mix choice and synchronization (see Definition 8). <p> Therefore, the workflow process specified in Figure 15 is guaranteed to behave properly (cf. Definition 7). Theorem 1 is an extension of the results presented in [Aal95, SH95]. In <ref> [Aal95] </ref> we restrict ourselves to free-choice WF-nets. In free-choice Petri nets it is not allowed to mix choice and synchronization (see Definition 8).
Reference: [Aal96a] <author> W.M.P. van der Aalst. </author> <title> Structural Characterizations of Sound Work-flow Nets. </title> <institution> Computing Science Reports 96/23, Eindhoven University of Technology, Eindhoven, </institution> <year> 1996. </year>
Reference-contexts: The following theorem shows that the extended net allows for the formulation of the soundness property in terms of well-known Petri net properties. Theorem 1 A WF-net PN is sound if and only if (PN ; i) is live and bounded. Proof. See [Aal97] or <ref> [Aal96a] </ref>. fl This theorem shows that standard Petri-net-based analysis techniques can be used to verify soundness. Consider for example the workflow process definition shown in Figure 15. We can use one of the many standard Petri-net-based analysis tools to verify that the extended net is live and bounded. <p> It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary. Corollary 1 A free-choice WF-net can be checked for soundness in polynomial time. Proof. See <ref> [Aal96a] </ref>. fl Corollary 1 shows that, for free-choice nets, there are efficient algorithms to decide soundness. It can also be shown that sound free-choice WF-nets are safe ([Aal96a]). 39 Although most workflow management systems only allow for free-choice work--flows, free-choice WF-nets are not a completely satisfactory structural characterization of `good' workflows. <p> Although both WF-nets are not free-choice, it is possible to verify soundness for such a WF-net very efficiently. Corollary 2 A well-structured WF-net can be checked for soundness in polynomial time. Proof. See <ref> [Aal96a] </ref>. The proof uses the results presented in [ES90] and [BCD95]. fl Well-structured WF-nets and free-choice WF-nets have similar properties. In both cases soundness can be verified very efficiently and soundness implies safeness. <p> The WF-net shown in Figure 26 is not S-coverable because c5 is not in any S-component. The following theorem shows that a S-coverability is a generalization of the free-choice property and well-structuredness. Theorem 2 A sound free-choice WF-net is S-coverable. A sound well-structured WF-net is S-coverable. Proof. See <ref> [Aal96a] </ref>. fl All the sound WF-nets presented in this paper are S-coverable. Every S-coverable WF-net is safe. The two WF-nets which are not sound, see Figure 26 and Figure 20, are not S-coverable. These examples show that there is a high correlation between S-coverability and soundness.
Reference: [Aal96b] <author> W.M.P. van der Aalst. </author> <title> Three Good reasons for Using a Petri-net-based Workflow Management System. </title> <editor> In S. Navathe and T. Wakayama, editors, </editor> <booktitle> Proceedings of the International Working Conference on Information and Process Integration in Enterprises (IPIC'96), </booktitle> <pages> pages 179-201, </pages> <address> Camebridge, Massachusetts, </address> <month> Nov </month> <year> 1996. </year>
Reference-contexts: This shows that the software industry recognizes the potential of workflow management tools. In order to become aware of the impact of workflow management in the near future, it is useful to consider the evolution of information systems over the last four decades (cf. <ref> [Aal96b] </ref>). Figure 1 shows the phenomenon of workflow management in a historical perspective. The figure illustrates the evolution of information systems in the last four decades by describing the architecture of a typical information system in terms of its components. <p> Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
Reference: [Aal97] <author> W.M.P. van der Aalst. </author> <title> Verification of Workflow Nets. </title> <editor> In P. Azema and G. Balbo, editors, </editor> <booktitle> Application and Theory of Petri Nets 1997, volume 1248 of Lecture Notes in Computer Science, </booktitle> <pages> pages 407-426. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1997. </year> <month> 49 </month>
Reference-contexts: The following theorem shows that the extended net allows for the formulation of the soundness property in terms of well-known Petri net properties. Theorem 1 A WF-net PN is sound if and only if (PN ; i) is live and bounded. Proof. See <ref> [Aal97] </ref> or [Aal96a]. fl This theorem shows that standard Petri-net-based analysis techniques can be used to verify soundness. Consider for example the workflow process definition shown in Figure 15. We can use one of the many standard Petri-net-based analysis tools to verify that the extended net is live and bounded.
Reference: [AH97] <author> W.M.P. van der Aalst and K.M. van Hee. </author> <title> Workflow Management: Modellen, Methoden en Systemen (in Dutch). </title> <publisher> Academic Service, </publisher> <address> Schoonhoven, </address> <year> 1997. </year>
Reference-contexts: Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
Reference: [AHV97] <author> W.M.P. van der Aalst, D. Hauschildt, and H.M.W. </author> <title> Verbeek. A Petri-net-based Tool to Analyze Workflows. </title> <editor> In B. Farwer, D. Moldt, and M.O. Stehr, editors, </editor> <booktitle> Proceedings of Petri Nets in System Engineering (PNSE'97), </booktitle> <pages> pages 78-90, </pages> <address> Hamburg, </address> <month> Sept </month> <year> 1997. </year> <institution> University of Hamburg (FBI-HH-B-205/97). </institution>
Reference: [Bak96] <institution> Bakkenist Management Consultants. ExSpect 5.0 User Manual, </institution> <year> 1996. </year>
Reference: [BCD95] <author> K. Barkaoui, J.M. Couvreur, and C. Dutheillet. </author> <title> On liveness in Extended Non Self-Controlling Nets. </title> <editor> In G. De Michelis and M. Diaz, editors, </editor> <booktitle> Application and Theory of Petri Nets 1995, volume 935 of Lecture Notes in Computer Science, </booktitle> <pages> pages 25-44. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1995. </year>
Reference-contexts: Although both WF-nets are not free-choice, it is possible to verify soundness for such a WF-net very efficiently. Corollary 2 A well-structured WF-net can be checked for soundness in polynomial time. Proof. See [Aal96a]. The proof uses the results presented in [ES90] and <ref> [BCD95] </ref>. fl Well-structured WF-nets and free-choice WF-nets have similar properties. In both cases soundness can be verified very efficiently and soundness implies safeness. In spite of these similarities, there are sound well-structured WF-nets which are not free-choice (Figure 27) and there are sound free-choice WF-nets which are not well-structured.
Reference: [Bes87] <author> E. </author> <title> Best. Structure theory of Petri nets: the free choice hiatus. </title> <editor> In W. Brauer, W. Reisig, and G. Rozenberg, editors, </editor> <title> Advances in Petri Nets 1986 Part I: Petri Nets, central models and their properties, </title> <booktitle> volume 254 of Lecture Notes in Computer Science, </booktitle> <pages> pages 168-206. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year>
Reference-contexts: Therefore, we consider the non-free-choice construct shown in Figure 24 to be improper. In literature, the term confusion is often used to refer to the situation shown in Figure 24. choice. Free-choice Petri nets have been studied extensively (cf. <ref> [Bes87, DE95, Des92, Esp90, Hac72] </ref>) because they seem to be a good compromise between expressive power and analyzability. It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary.
Reference: [CEP93] <author> A. Cheng, J. Esparza, and J. Palsberg. </author> <title> Complexity results for 1-safe nets. In R.K. Shyamasundar, editor, </title> <booktitle> Foundations of software technology and theoretical computer science, volume 761 of Lecture Notes in Computer Science, </booktitle> <pages> pages 326-337. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: However, there are a number of problems: 37 * For a complex WF-net it may be intractable to decide soundness. For arbi-trary WF-nets soundness is decidable but also expensive in terms of time and space complexity. If fact, the problem of deciding liveness and boundedness is EXPSPACE-hard (cf. <ref> [CEP93] </ref>). * Soundness is a minimal requirement. Readability and maintainability issues are not addressed by Theorem 1. * Theorem 1 does not show how a non-sound WF-net should be modified, i.e., it does not identify constructs which invalidate the soundness property.
Reference: [Che76] <author> P.P. Chen. </author> <title> The Entity-Relationship Model: Towards a unified view of Data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1 </volume> <pages> 9-36, </pages> <month> Jan </month> <year> 1976. </year>
Reference-contexts: This situation of disorder and lack of consensus resulted in an incomprehensive set of DBMSs. However, emerging standards such as the Relational Data Model [Cod70] and the Entity-Relationship Model <ref> [Che76] </ref> lead to a common formal basis for many DBMSs. As a result, the use of these DBMSs boosted. There are many similarities between today's workflow management systems and the DBMSs of the early seventies. Despite the efforts of the Workflow Management Coalition a real conceptual standard is missing.
Reference: [Cod70] <author> E.F. Codd. </author> <title> A Relational Model for Large Shared Data Banks. </title> <journal> Communications of the ACM, </journal> <volume> 13(6) </volume> <pages> 377-387, </pages> <month> June </month> <year> 1970. </year>
Reference-contexts: In the beginning of the seventies most of the pioneers in the field of DBMSs were using their own ad-hoc concepts. This situation of disorder and lack of consensus resulted in an incomprehensive set of DBMSs. However, emerging standards such as the Relational Data Model <ref> [Cod70] </ref> and the Entity-Relationship Model [Che76] lead to a common formal basis for many DBMSs. As a result, the use of these DBMSs boosted. There are many similarities between today's workflow management systems and the DBMSs of the early seventies.
Reference: [DE95] <author> J. Desel and J. Esparza. </author> <title> Free choice Petri nets, </title> <booktitle> volume 40 of Cam-bridge tracts in theoretical computer science. </booktitle> <publisher> Cambridge University Press, </publisher> <address> Cambridge, </address> <year> 1995. </year>
Reference-contexts: Therefore, we consider the non-free-choice construct shown in Figure 24 to be improper. In literature, the term confusion is often used to refer to the situation shown in Figure 24. choice. Free-choice Petri nets have been studied extensively (cf. <ref> [Bes87, DE95, Des92, Esp90, Hac72] </ref>) because they seem to be a good compromise between expressive power and analyzability. It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary. <p> This definition corresponds to the definition given in <ref> [DE95] </ref>. A subnet PN s which satisfies the requirements stated in Definition 10 is called an S-component.
Reference: [Des92] <author> J. Desel. </author> <title> A proof of the Rank theorem for extended free-choice nets. </title> <editor> In K. Jensen, editor, </editor> <booktitle> Application and Theory of Petri Nets 1992, volume 616 of Lecture Notes in Computer Science, </booktitle> <pages> pages 134-153. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year> <month> 50 </month>
Reference-contexts: Therefore, we consider the non-free-choice construct shown in Figure 24 to be improper. In literature, the term confusion is often used to refer to the situation shown in Figure 24. choice. Free-choice Petri nets have been studied extensively (cf. <ref> [Bes87, DE95, Des92, Esp90, Hac72] </ref>) because they seem to be a good compromise between expressive power and analyzability. It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary.
Reference: [EKR95] <author> C. Ellis, K. Keddara, and G. Rozenberg. </author> <title> Dynamic change within workflow systems. </title> <editor> In N. Comstock and C. Ellis, editors, </editor> <booktitle> Conf. on Organizational Computing Systems, </booktitle> <pages> pages 10 - 21. </pages> <publisher> ACM SIGOIS, ACM, </publisher> <month> Aug </month> <year> 1995. </year> <institution> Milpitas, </institution> <address> CA. </address>
Reference-contexts: Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
Reference: [EN93] <author> C.A. Ellis and G.J. Nutt. </author> <title> Modelling and Enactment of Workflow Systems. </title> <editor> In M. Ajmone Marsan, editor, </editor> <booktitle> Application and Theory of Petri Nets 1993, volume 691 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-16. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1993. </year>
Reference-contexts: Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
Reference: [ES90] <author> J. Esparza and M. Silva. </author> <title> Circuits, Handles, Bridges and Nets. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Advances in Petri Nets 1990, volume 483 of Lecture Notes in Computer Science, </booktitle> <pages> pages 210-242. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: Although both WF-nets are not free-choice, it is possible to verify soundness for such a WF-net very efficiently. Corollary 2 A well-structured WF-net can be checked for soundness in polynomial time. Proof. See [Aal96a]. The proof uses the results presented in <ref> [ES90] </ref> and [BCD95]. fl Well-structured WF-nets and free-choice WF-nets have similar properties. In both cases soundness can be verified very efficiently and soundness implies safeness.
Reference: [Esp90] <author> J. Esparza. </author> <title> Synthesis rules for Petri nets, and how they can lead to new results. </title> <editor> In J.C.M. Baeten and J.W. Klop, editors, </editor> <booktitle> Proceedings of CONCUR 1990, volume 458 of Lecture Notes in Computer Science, </booktitle> <pages> pages 182-198. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: Therefore, we consider the non-free-choice construct shown in Figure 24 to be improper. In literature, the term confusion is often used to refer to the situation shown in Figure 24. choice. Free-choice Petri nets have been studied extensively (cf. <ref> [Bes87, DE95, Des92, Esp90, Hac72] </ref>) because they seem to be a good compromise between expressive power and analyzability. It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary.
Reference: [GCEV72] <author> K. Gostellow, V. Cerf, G. Estrin, and S. Volansky. </author> <title> Proper Termination of Flow-of-control in Programs Involving Concurrent Processes. </title> <journal> ACM Sigplan, </journal> <volume> 7(11) </volume> <pages> 15-27, </pages> <year> 1972. </year>
Reference-contexts: Sometimes the term proper termination is used to describe the first two requirements <ref> [GCEV72] </ref>. The third and last requirement states that there are no dead transitions (tasks) in the initial state i, i.e., for each transition t it is possible to reach (starting from i) a state where t is enabled.
Reference: [Hac72] <author> M.H.T. Hack. </author> <title> Analysis production schemata by Petri nets. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <address> Cambridge, Mass., </address> <year> 1972. </year>
Reference-contexts: Therefore, we consider the non-free-choice construct shown in Figure 24 to be improper. In literature, the term confusion is often used to refer to the situation shown in Figure 24. choice. Free-choice Petri nets have been studied extensively (cf. <ref> [Bes87, DE95, Des92, Esp90, Hac72] </ref>) because they seem to be a good compromise between expressive power and analyzability. It is a class of Petri nets for which strong theoretical results and efficient analysis techniques exist. For example, the well-known Rank Theorem ([DE95]) allows us to formulate the following corollary.
Reference: [Hee94] <author> K.M. van Hee. </author> <title> Information System Engineering: a Formal Approach. </title> <publisher> Cambridge University Press, </publisher> <year> 1994. </year>
Reference-contexts: At another level we want to specify a more detailed behavior. The extension with hierarchy allows for such an approach. For a more elaborate discussion on these extensions and other kinds of high-level Petri nets, the reader is referred to <ref> [Jen96, Aal94, Hee94] </ref>. 14 4 Mapping workflow management concepts onto Petri nets Most workflow management systems and methodologies to support workflow management separate the modeling of the workflow process (How?) from the modeling of the structure of the organization and the resources within the organization (By whom?).
Reference: [HL91] <author> K. Hayes and K. Lavery. </author> <title> Workflow management software: the business opportunity. </title> <type> Technical report, </type> <institution> Ovum Ltd, </institution> <address> London, </address> <year> 1991. </year>
Reference-contexts: In other words, the information system also has to manage the flow of work through the organization. Many organizations with complex business processes have identified the need for concepts, techniques, and tools to support the management of workflows. Based on this need the term workflow management was born (cf. <ref> [HL91, Kou95] </ref>). Until recently there were no generic tools to support workflow management. As a result, parts of the business process were hard-coded in the applications. For example, an application to support task X triggers another application to support task 1 Y. <p> The main purpose of a workflow management system is the support of the definition, execution, registration and control of processes. Because processes are a dominant factor in workflow management, it is important to use an established framework for modeling and analyzing workflow processes <ref> [HL91, Kou95, Law97] </ref>. In this paper we use a framework based on Petri nets. Petri nets are a well-founded process modeling technique. The classical Petri net was invented by Carl Adam Petri in the sixties ([Pet62]).
Reference: [HVA97] <author> D. Hauschildt, H.M.W. Verbeek, and W.M.P. van der Aalst. WOFLAN: </author> <title> a Petri-net-based Workflow Analyzer. </title> <institution> Computing Science Reports 97/12, Eindhoven University of Technology, Eindhoven, </institution> <year> 1997. </year>
Reference: [Jen96] <author> K. Jensen. </author> <title> Coloured Petri Nets. Basic concepts, analysis methods and practical use. </title> <booktitle> EATCS monographs on Theoretical Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1996. </year> <month> 51 </month>
Reference-contexts: At another level we want to specify a more detailed behavior. The extension with hierarchy allows for such an approach. For a more elaborate discussion on these extensions and other kinds of high-level Petri nets, the reader is referred to <ref> [Jen96, Aal94, Hee94] </ref>. 14 4 Mapping workflow management concepts onto Petri nets Most workflow management systems and methodologies to support workflow management separate the modeling of the workflow process (How?) from the modeling of the structure of the organization and the resources within the organization (By whom?).
Reference: [Joo94] <author> S. Joosten. </author> <title> Trigger Modelling for Workflow Analysis. </title> <editor> In G. Chroust and A. Benczur, editors, </editor> <booktitle> Proceedings CON'94: Workflow Management, Challenges, Paradigms and Products, </booktitle> <pages> pages 236-247, </pages> <address> Vienna, </address> <month> Oct </month> <year> 1994. </year>
Reference: [Kou95] <author> T.M. Koulopoulos. </author> <title> The Workflow Imperative. </title> <publisher> Van Nostrand Reinhold, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: In other words, the information system also has to manage the flow of work through the organization. Many organizations with complex business processes have identified the need for concepts, techniques, and tools to support the management of workflows. Based on this need the term workflow management was born (cf. <ref> [HL91, Kou95] </ref>). Until recently there were no generic tools to support workflow management. As a result, parts of the business process were hard-coded in the applications. For example, an application to support task X triggers another application to support task 1 Y. <p> The main purpose of a workflow management system is the support of the definition, execution, registration and control of processes. Because processes are a dominant factor in workflow management, it is important to use an established framework for modeling and analyzing workflow processes <ref> [HL91, Kou95, Law97] </ref>. In this paper we use a framework based on Petri nets. Petri nets are a well-founded process modeling technique. The classical Petri net was invented by Carl Adam Petri in the sixties ([Pet62]).
Reference: [Law97] <author> P. Lawrence, </author> <title> editor. Workflow Handbook 1997, Workflow Management Coalition. </title> <publisher> John Wiley and Sons, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: Therefore, several software vendors recognized the need for workflow management systems. A workflow management system (WFMS) is a generic software tool which allows for the definition, execution, registration and control of workflows (cf. <ref> [Law97] </ref>). At the moment many vendors are offering a workflow management system. This shows that the software industry recognizes the potential of workflow management tools. <p> The main purpose of a workflow management system is the support of the definition, execution, registration and control of processes. Because processes are a dominant factor in workflow management, it is important to use an established framework for modeling and analyzing workflow processes <ref> [HL91, Kou95, Law97] </ref>. In this paper we use a framework based on Petri nets. Petri nets are a well-founded process modeling technique. The classical Petri net was invented by Carl Adam Petri in the sixties ([Pet62]). <p> To standardize the five interfaces shown in Figure 5, the WfMC aims at a common Workflow Application Programming Interface (WAPI). The WAPI is envisaged as a common set of API calls and related interchange formats which may be grouped together to support each of the five interfaces (cf. <ref> [Law97] </ref>). The architecture shown in Figure 5 has been adopted by most vendors. For most of the interfaces, standards have been proposed. Unfortunately, these proposed standards are at a technical level with the emphasis on syntax instead of semantics. There is no consensus at a conceptual level.
Reference: [MBea95] <author> M. Ajmone Marsan, G. Balbo, G. Conte, et al. </author> <title> Modelling with Generalized Stochastic Petri Nets. Wiley series in parallel computing. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1995. </year>
Reference-contexts: Linear algebraic techniques can be used to verify many properties, e.g., place invariants, transition invariants, and (non-)reachability. Coverability graph analysis, model checking, and reduction techniques can be used to analyze the dynamic behavior of a Petri net. Simulation and Markov-chain analysis can be used for performance evaluation (cf. <ref> [MBea95] </ref>). The abundance of available analysis techniques shows that Petri nets can be seen as a solver independent medium between the design of the workflow process definition and the analysis of the workflow. Today's workflow management systems give limited support to performance analysis. <p> (In the extended net an extra transition t fl is added which connects o and i, thus making the net cyclic.) Strong fairness corresponds to the probablistic interpretation of fairness, e.g., the enabling time of each task is negative exponentially distributed, or enabled tasks are selected in random order (cf. <ref> [MBea95] </ref>). Assuming soundness and strong fairness, it is guaranteed that each case will end up in place o eventually. A weaker form of fairness is often not sufficient. Consider for example the following notion of fairness: a transition that is enabled infinitely often, will fire eventually.
Reference: [MEM94] <editor> G. De Michelis, C. Ellis, and G. Memmi, editors. </editor> <booktitle> Proceedings of the second Workshop on Computer-Supported Cooperative Work, Petri nets and related formalisms, </booktitle> <address> Zaragoza, Spain, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
Reference: [Mur89] <author> T. Murata. </author> <title> Petri Nets: Properties, Analysis and Applications. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(4) </volume> <pages> 541-580, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: Since then the use and study of Petri nets have increased considerably. For a review of the history of Petri nets and an extensive bibliography the reader is referred to <ref> [Mur89] </ref>. 3.1 Classical Petri net The classical Petri net is a directed bipartite graph with two node types called places and transitions. The nodes are connected via directed arcs. Connections between two nodes of the same type are not allowed. <p> The first requirement in Definition 7 states that starting from the initial state (state i), it is always possible to reach the state with one token in place o (state o). If we assume fairness (cf. <ref> [Val87, Mur89] </ref>) then the first requirement implies that eventually state o will be reached. The fairness assumption is reasonable in the context of workflow management: all choices are made (implicitly or explicitly) by applications, humans, or external actors. <p> However, this does not guarantee that the firing sequence will occur. For example, it is possible that always one of the time-outs occurs before the task archive occurs. Therefore, we assume strong fairness (cf. <ref> [Val87, Mur89] </ref>).
Reference: [Pal97] <author> Pallas Athena. </author> <title> Protos User Manual. Pallas Athena BV, </title> <address> Plasmolen, The Netherlands, </address> <year> 1997. </year>
Reference: [Pet62] <institution> C.A. Petri. Kommunikation mit Automaten. </institution> <type> PhD thesis, </type> <institution> Institut fur instrumentelle Mathematik, Bonn, </institution> <year> 1962. </year>
Reference: [Rei85] <author> W. Reisig. </author> <title> Petri nets: an introduction, </title> <booktitle> volume 4 of Monographs in theoretical computer science: an EATCS series. </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1985. </year>
Reference-contexts: From a formal point of view, it is possible to construct WF-nets which are sound but not S-coverable. Typically, these nets contain places which do not restrict the firing of a transition, but which are not in any S-component. (See for example Figure 65 in <ref> [Rei85] </ref>.) From a practical point of view, these WF-nets are to be avoided. WF-nets which are not S-coverable are difficult to interpret because the structural and dynamical properties do not match. For example, these nets can be live and bounded but not structurally bounded.
Reference: [SH95] <author> P.A. Straub and C. Hurtado. </author> <title> The Simple Control Property of Business Process Models. </title> <booktitle> In XV International Conference of the Chilean Computer Science Society, </booktitle> <year> 1995. </year>
Reference-contexts: We can use one of the many standard Petri-net-based analysis tools to verify that the extended net is live and bounded. Therefore, the workflow process specified in Figure 15 is guaranteed to behave properly (cf. Definition 7). Theorem 1 is an extension of the results presented in <ref> [Aal95, SH95] </ref>. In [Aal95] we restrict ourselves to free-choice WF-nets. In free-choice Petri nets it is not allowed to mix choice and synchronization (see Definition 8). <p> Definition 7). Theorem 1 is an extension of the results presented in [Aal95, SH95]. In [Aal95] we restrict ourselves to free-choice WF-nets. In free-choice Petri nets it is not allowed to mix choice and synchronization (see Definition 8). Independently, Straub and Hur-tado <ref> [SH95] </ref> found necessary and sufficient conditions for the soundness of COPA nets. (COPA nets correspond to a subclass of free-choice Petri nets.) 5.4 Structural characterizations of soundness Theorem 1 gives a useful characterization of the quality of a workflow process definition.
Reference: [SL96] <author> Software-Ley. </author> <title> COSA User Manual. </title> <publisher> Software-Ley GmbH, </publisher> <address> Pullheim, Germany, </address> <year> 1996. </year>
Reference: [Val87] <author> R. Valk. </author> <title> Infinite Behaviour and Fairness. </title> <editor> In W. Brauer, W. Reisig, and G. Rozenberg, editors, </editor> <title> Advances in Petri Nets 1986 Part I: Petri Nets, central models and their properties, </title> <booktitle> volume 254 of Lecture Notes in Computer Science, </booktitle> <pages> pages 377-396. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1987. </year> <month> 52 </month>
Reference-contexts: The first requirement in Definition 7 states that starting from the initial state (state i), it is always possible to reach the state with one token in place o (state o). If we assume fairness (cf. <ref> [Val87, Mur89] </ref>) then the first requirement implies that eventually state o will be reached. The fairness assumption is reasonable in the context of workflow management: all choices are made (implicitly or explicitly) by applications, humans, or external actors. <p> However, this does not guarantee that the firing sequence will occur. For example, it is possible that always one of the time-outs occurs before the task archive occurs. Therefore, we assume strong fairness (cf. <ref> [Val87, Mur89] </ref>).
Reference: [WFM96] <author> WFMC. </author> <title> Workflow Management Coalition Terminology and Glossary (WFMC-TC-1011). </title> <type> Technical report, </type> <institution> Workflow Management Coalition, </institution> <address> Brussels, </address> <year> 1996. </year>
Reference-contexts: which can be derived from the application data.) Examples of application data are the address of the complainant and the evaluation report. 4.2 Routing constructs In the process dimension, building blocks such as the AND-split, AND-join, OR-split and OR-join are used to model sequential, conditional, parallel, and iterative routing (WfMC <ref> [WFM96] </ref>). Clearly, a WF-net can be used to specify the routing of cases. In Section 2, four types of routing have been identified: sequential, parallel, conditional, and iteration. Sequential routing is used to deal with causal relationships between tasks. Consider two tasks A and B.
Reference: [Wil89] <author> R. Wild. </author> <title> Production and Operations Management : Principles and Techniques. </title> <address> Cassell, London, </address> <year> 1989. </year>
Reference: [WR96] <editor> M. Wolf and U. Reimer, editors. </editor> <booktitle> Proceedings of the International Conference on Practical Aspects of Knowledge Management (PAKM'96), Workshop on Adaptive Workflow, </booktitle> <address> Basel, Switzerland, </address> <month> Oct </month> <year> 1996. </year> <month> 53 </month>
Reference-contexts: Petri nets are not based on a software package of a specific vendor and do not cease to exist if a new version is released or when one vendor takes over another vendor. Other references where the use of Petri nets for workflow modeling is advocated are <ref> [Aal96b, WR96, MEM94, EKR95, EN93, AH97] </ref>. In the remainder of this paper we will show how Petri nets can be applied to the domain of workflow management. To do this, we first introduce the basic concepts of workflow management and workflow management systems. Then we introduce the basic Petri-net terminology.
References-found: 40

