URL: http://www.cs.washington.edu/research/jair/volume7/mammen97a.ps
Refering-URL: http://www.cs.washington.edu/research/jair/abstracts/mammen97a.html
Root-URL: 
Email: mammen@cs.umass.edu  hogg@parc.xerox.com  
Title: A New Look at the Easy-Hard-Easy Pattern of Combinatorial Search Difficulty  
Author: Dorothy L. Mammen Tad Hogg 
Address: Amherst, MA 01003, U.S.A.  3333 Coyote Hill Road Palo Alto, CA 94304, U.S.A.  
Affiliation: Department of Computer Science University of Massachusetts  Xerox Palo Alto Research Center  
Note: Journal of Artificial Intelligence Research 7 (1997) 47-66 Submitted 10/96; published 9/97  
Abstract: The easy-hard-easy pattern in the difficulty of combinatorial search problems as constraints are added has been explained as due to a competition between the decrease in number of solutions and increased pruning. We test the generality of this explanation by examining one of its predictions: if the number of solutions is held fixed by the choice of problems, then increased pruning should lead to a monotonic decrease in search cost. Instead, we find the easy-hard-easy pattern in median search cost even when the number of solutions is held constant, for some search methods. This generalizes previous observations of this pattern and shows that the existing theory does not explain the full range of the peak in search cost. In these cases the pattern appears to be due to changes in the size of the minimal unsolvable subproblems, rather than changing numbers of solutions.
Abstract-found: 1
Intro-found: 1
Reference: <author> Asahiro, Y., Iwama, K., & Miyano, E. </author> <year> (1993). </year> <title> Random generation of test instances with controlled attributes. </title> <booktitle> In Second DIMACS Challenge Workshop. </booktitle>
Reference-contexts: This tends to emphasize problems with many solutions and results in instances that are somewhat easier than uniform random selection. Cha & Iwama (1995) have also used the approach of generating problems with specific attributes, for SAT problems, using the AIM generators <ref> (Asahiro, Iwama, & Miyano, 1993) </ref>. We solved these problems using dynamic backtracking (Ginsberg, 1993) in most cases, using random variable and value ordering. For comparison, we also did some searches with simple chronological backtrack instead.
Reference: <author> Bayardo, Jr., R. J., & Schrag, R. </author> <year> (1996). </year> <title> Using CSP look-back techniques to solve exceptionally hard SAT instances. </title> <editor> In Freuder, E. C. (Ed.), </editor> <booktitle> Principles and Practice of Constraint Programming - CP96, </booktitle> <pages> pp. </pages> <address> 46-60 Cambridge, MA. </address> <publisher> Springer. </publisher>
Reference: <author> Cha, B., & Iwama, K. </author> <year> (1995). </year> <title> Performance test of local search algorithms using new types of random CNF formulas. </title> <booktitle> In Proceedings of the Fourteenth International Joint 64 The Easy-Hard-Easy Pattern of Combinatorial Search Difficulty Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 304-310 Montreal, Quebec, Canada. </address>
Reference: <author> Cheeseman, P., Kanefsky, B., & Taylor, W. </author> <year> (1991). </year> <title> Where the really hard problems are. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 331-337 Sydney, Australia. </address>
Reference: <author> Crawford, J. M., & Auton, L. D. </author> <year> (1993). </year> <title> Experimental results on the cross-over point in satisfiability problems. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 21-27 Washington, DC, USA. </address>
Reference: <author> Gent, I. P., MacIntyre, E., Prosser, P., & Walsh, T. </author> <year> (1995). </year> <title> Scaling effects in the CSP phase transition. </title> <editor> In Montanari, U., & Rossi, F. (Eds.), </editor> <booktitle> Proc. of Principles and Practices of Constraint Programming PPCP95, </booktitle> <pages> pp. 70-87. </pages> <publisher> Springer-Verlag. </publisher>
Reference: <author> Gent, I. P., & Walsh, T. </author> <year> (1994a). </year> <title> Easy problems are sometimes hard. </title> <journal> Artificial Intelligence, </journal> <volume> 70, </volume> <pages> 335-345. </pages>
Reference: <author> Gent, I. P., & Walsh, T. </author> <year> (1994b). </year> <title> The SAT phase transition. </title> <editor> In Cohn, A. (Ed.), </editor> <booktitle> Proceedings of the ECAI-94, </booktitle> <pages> pp. 105-109. </pages> <publisher> John Wiley and Sons. </publisher>
Reference: <author> Gent, I. P., & Walsh, T. </author> <year> (1996). </year> <title> The satisfiability constraint gap. </title> <journal> Artificial Intelligence, </journal> <volume> 81 (1-2), </volume> <pages> 59-80. </pages>
Reference: <author> Ginsberg, M. L. </author> <year> (1993). </year> <title> Dynamic backtracking. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 1, </volume> <pages> 25-46. </pages>
Reference-contexts: Cha & Iwama (1995) have also used the approach of generating problems with specific attributes, for SAT problems, using the AIM generators (Asahiro, Iwama, & Miyano, 1993). We solved these problems using dynamic backtracking <ref> (Ginsberg, 1993) </ref> in most cases, using random variable and value ordering. For comparison, we also did some searches with simple chronological backtrack instead. The search cost is measured as the number of nodes explored. 2.2 Graph Coloring We also experimented with the 3-coloring problem.
Reference: <author> Hogg, T. </author> <year> (1996). </year> <title> Refining the phase transitions in combinatorial search. </title> <journal> Artificial Intelligence, </journal> <volume> 81, </volume> <pages> 127-154. </pages>
Reference-contexts: This observation has motivated the introduction of additional parameters describing problem structure based on a more precise specification of the number of solutions <ref> (Hogg, 1996) </ref>. In this paper we investigate the generality of this explanation by examining problems for which the number of solutions is restricted, including cases where the number is specified exactly to be either zero or one.
Reference: <author> Hogg, T., & Williams, C. P. </author> <year> (1994). </year> <title> The hardest constraint problems: A double phase transition. </title> <journal> Artificial Intelligence, </journal> <volume> 69, </volume> <pages> 359-377. </pages>
Reference-contexts: 1994), for propositional satisfiability (SAT) as a function of the ratio of number of clauses to number of variables (Cheeseman et al., 1991; Mitchell, Selman, & Levesque, 1992; Crawford & Auton, 1993; Gent & Walsh, 1994b), and for constraint satisfaction problems (CSPs) as a function of the number of nogoods <ref> (Williams & Hogg, 1994) </ref> and constraint tightness (Smith, 1994; Prosser, 1996). This regularity raises the possibility of determining, prior to search, the likely difficulty of problems. Unfortunately, this is not yet possible because of the high variance associated with the observations. <p> The existing explanation for the concentration of hard problems relies on a competition between changes in the number of solutions and the amount of pruning provided by the problem constraints <ref> (Williams & Hogg, 1994) </ref>. With few constraints, there are many solutions so the search is usually easy. As constraints are added the number of solutions drops rapidly, making problems harder. But the new constraints also increase the pruning of unproductive search choices, tending to make search easier.
Reference: <author> Johnson, D. S., Aragon, C. R., McGeoch, L. A., & Schevon, C. </author> <year> (1991). </year> <title> Optimization by simulated annealing: An experimental evaluation; part II, Graph coloring and number partitioning. </title> <journal> Operations Research, </journal> <volume> 39 (3), </volume> <pages> 378-406. </pages>
Reference-contexts: For the 100-node graphs we studied, the number of binary nogoods is given by 150fl. In this case, we used a simple chronological backtrack search in combination with the Brelaz heuristic for variable and value ordering <ref> (Johnson, Aragon, McGeoch, & Schevon, 1991) </ref>. This heuristic assigns the most constrained nodes first (i.e., those with the most distinctly colored neighbors), breaking ties by choosing nodes with the most uncolored neighbors, and with any remaining ties broken randomly.
Reference: <author> Kask, K., & Dechter, R. </author> <year> (1995). </year> <title> GSAT and local consistency. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 616-622 Montreal, Quebec, Canada. </address>
Reference: <author> Kirkpatrick, S., & Selman, B. </author> <year> (1994). </year> <title> Critical behavior in the satisfiability of random boolean expressions. </title> <journal> Science, </journal> <volume> 264, </volume> <pages> 1297-1301. </pages>
Reference: <author> Mitchell, D., Selman, B., & Levesque, H. </author> <year> (1992). </year> <title> Hard and easy distributions of SAT problems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 459-465 San Jose, CA, USA. </address>
Reference-contexts: Thus empirical studies of these methods are restricted to consider solvable problems and incidentally provide a useful examination of the properties of solvable problems. Furthermore, a study of satisfiability problems with backtracking search is consistent with a peak in cost for solvable problems <ref> (Mitchell et al., 1992) </ref>, but there were insufficient highly constrained solvable problems to make a definite conclusion for the behavior with many constraints. <p> In contrast to our observations, a monotonic decrease in cost has been reported for unsolvable binary random constraint problems (Smith & Dyer, 1996) and for unsolvable 3SAT problems <ref> (Mitchell et al., 1992) </ref>. In the case of 3SAT, the explanation may well be choice of algorithm.
Reference: <author> Prosser, P. </author> <year> (1996). </year> <title> An empirical study of phase transitions in binary constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 81, </volume> <pages> 81-109. </pages> <note> 65 Mammen & Hogg Smith, </note> <author> B. M. </author> <year> (1994). </year> <title> Phase transition and the mushy region in constraint satisfaction problems. </title> <editor> In Cohn, A. (Ed.), </editor> <booktitle> Proceedings of the ECAI-94, </booktitle> <pages> pp. 100-104. </pages> <publisher> John Wiley and Sons. </publisher>
Reference: <author> Smith, B. M., & Dyer, M. E. </author> <year> (1996). </year> <title> Locating the phase transition in binary constraint satisfaction problems. </title> <journal> Artificial Intelligence, </journal> <volume> 81, </volume> <pages> 155-181. </pages>
Reference-contexts: The fraction of solvable problems is also shown in Figure 1, scaled from 1.0 on the left to 0.0 on the right. This illustrates that the hard problems are concentrated in the so-called "mushy region" <ref> (Smith & Dyer, 1996) </ref> where the probability of a solution is changing from 1.0 to 0.0. In particular, the peak in search cost is near the "crossover point," the point at which half the problems are solvable and half unsolvable. <p> In contrast to our observations, a monotonic decrease in cost has been reported for unsolvable binary random constraint problems <ref> (Smith & Dyer, 1996) </ref> and for unsolvable 3SAT problems (Mitchell et al., 1992). In the case of 3SAT, the explanation may well be choice of algorithm. <p> This notion forms the basis for another common interpretation of the cost peak. That is, these critically constrained problems will typically be hard to search (because most of the constraints must be instantiated before any unproductive search paths can be identified) and, since they are concentrated at the transition <ref> (Smith & Dyer, 1996) </ref>, give rise to the search peak. This explanation does not include any discussion of the changes in pruning capability as constraints are added.
Reference: <author> Snedecor, G. W., & Cochran, W. G. </author> <year> (1967). </year> <note> Statistical Methods (6th edition). </note> <institution> Iowa State Univ. Press, Ames, Iowa. </institution>
Reference-contexts: For this problem class, the crossover point occurs at just over 75 binary nogoods, and the peak in dynamic backtracking solution cost occurs at about 85 binary nogoods. In all of our results in this paper, we include 95% confidence intervals <ref> (Snedecor & Cochran, 1967) </ref>. These intervals for the estimate of the median obtained from our samples are given approximately by the percentiles 50 100= p N of the data, where N is the number of samples.
Reference: <author> Williams, C. P., & Hogg, T. </author> <year> (1994). </year> <title> Exploiting the deep structure of constraint problems. </title> <journal> Artificial Intelligence, </journal> <volume> 70, </volume> <pages> 73-117. </pages>
Reference-contexts: 1994), for propositional satisfiability (SAT) as a function of the ratio of number of clauses to number of variables (Cheeseman et al., 1991; Mitchell, Selman, & Levesque, 1992; Crawford & Auton, 1993; Gent & Walsh, 1994b), and for constraint satisfaction problems (CSPs) as a function of the number of nogoods <ref> (Williams & Hogg, 1994) </ref> and constraint tightness (Smith, 1994; Prosser, 1996). This regularity raises the possibility of determining, prior to search, the likely difficulty of problems. Unfortunately, this is not yet possible because of the high variance associated with the observations. <p> The existing explanation for the concentration of hard problems relies on a competition between changes in the number of solutions and the amount of pruning provided by the problem constraints <ref> (Williams & Hogg, 1994) </ref>. With few constraints, there are many solutions so the search is usually easy. As constraints are added the number of solutions drops rapidly, making problems harder. But the new constraints also increase the pruning of unproductive search choices, tending to make search easier.
Reference: <author> Yugami, N., Ohta, Y., & Hara, H. </author> <year> (1994). </year> <title> Improving repair-based constraint satisfaction methods by value propagation. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pp. </pages> <address> 344-349 Seattle, WA, USA. </address> <month> 66 </month>
References-found: 21

