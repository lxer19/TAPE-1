URL: http://www.cs.rpi.edu/~maniattb/physics/tutdraft.ps.Z
Refering-URL: http://www.cs.rpi.edu/~maniattb/physics.html
Root-URL: http://www.cs.rpi.edu
Title: An extended RECSIS Tutorial  
Author: William A. Maniatty Paul Stoler 
Note: Contents  
Date: November 4, 1997  
Address: Troy, NY 12180 Troy, NY 12180  
Affiliation: Department Of Computer Science Department of Physics Rensselaer Polytechnic Institute Rensselaer Polytechnic Institute  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> V. Blobel. </author> <title> The BOS system for CLAS detector dynamic memory management. </title> <type> Technical report, CEBAF, CLAS collaboration, </type> <year> 1995. </year> <note> Additional information available on line at ftp://ftp.cebaf.gov/pub/clas/doc/BOS.ps. </note>
Reference-contexts: For more details see Freyberger and Ito's CLAS O*ine Code Management [4]. Typically RECSIS traverses data in the BOS bank format, for details on the overall BOS data structure see The BOS system for CLAS detector Dynamic Memory Management <ref> [1] </ref>. 1.3 A General Overview of Running RECSIS Running RECSIS as a user involves the following steps: 1. Creating a personal copy of the unmodified user package templates | The CLAS user package provides you with a programming template to access with the RECSIS library. For details see Section 2.1. <p> Recall that the data pertaining to physics events are stored using the BOS utilities data structires <ref> [1] </ref>. 1. Determine the layout of the CLAS bank you are interested in by reading the data description layout (ddl) file. This example uses the bank, CC, that is the raw Cerenkov counter bank.
Reference: [2] <author> CEBAF, </author> <title> Newport News, VA. CODA CEBAF On-line Data Acquisition User's Manual, </title> <month> January </month> <year> 1995. </year> <note> Additional information available on line at http://alcor.cebaf.gov/coda2.0/manuals/pdf/manuals/coda1.4.pdf. </note>
Reference-contexts: The data analyzed is typically generated by the CLAS On Line Data Acquisition software (CODA), and some familiarity with the data layouts used is helpful. For more information about CODA 3 , see CODA CEBAF On-line Data Acquisition User's Manual <ref> [2] </ref>. 1.2 Who Should Read This and Prerequisites For Reading This document is intended for people who want to analyze data with RECSIS. <p> Meaning of Event Type 3 ClasSim generated 2 GEANT generated 1 SDA generated 0 Control Record 1 15 Physics Related Events (Unspecified) 16 Sync Event 17 Pre Start Event 18 Go Event 19 Pause Event 20 End Event &gt; 20 Assumed to be Monte Carlo Generated Table 1: Event Types <ref> [2] </ref> 7 Banktype = B16 F M T Address of ith hit No I IW (ind + i fl MaxOff + Col ) No F RW (ind + i fl MaxOff + Col ) Yes I IW16 (2 fl ind + i fl MaxOff + Col ) Table 2: Addressing Mode
Reference: [3] <author> O. Couet. </author> <title> Physics Analysis Workstation. Application Software Group, Computing and Networks Division, </title> <publisher> CERN, </publisher> <year> 1995. </year> <note> Additional information available on line at http://wwwinfo.cern.ch/asd/paw/index.html. </note>
Reference-contexts: lysator's C pages at http://www.lysator.liu.se/c/ . * Fortran [6], with some on line examples at http://www3.huji.ac.il/~agay/fortran.html . * TK/TCL [7], additional on-line information can be found at http://sunscript.sun.com/ . 1 see http://www.cebaf.gov/~freyberg/recsis.html 2 see http://www.cebaf.gov/~longhi/recsis.html. 3 see http://alcor.cebaf.gov/coda2.0/manuals/pdf/manuals/coda1.4.pdf 2 You should have some familiarity with the CERN libraries, and PAW <ref> [3] </ref>, in particular you should be acquainted with the concept of ntuples and histograms in that framework, for details see: http://wwwinfo.cern.ch/asd/index.html. Familiarity with the code management system (CMS) at CEBAF is helpful (especially cvs and make). For more details see Freyberger and Ito's CLAS O*ine Code Management [4]. <p> Running your user package | This allows you to run the user package. This step is how you obtain your results, and is described in Section 5. 7. Examining the output of your user package| This can be done with CERN's PAW package <ref> [3] </ref>. 8. Debugging your user package | In the event that you have a failure in running your user package this describes using the CLAS software supported debugging facilities to enable use of your local debugger.
Reference: [4] <author> A. Freyberger and M. Ito. </author> <title> CLAS o*ine code management. </title> <type> Technical Report CLAS-NOTE 97-0003, CEBAF, CLAS collaboration, </type> <year> 1997. </year> <note> Additional information available on line at ftp://ftp.cebaf.gov/pub/clas/notes/clas notes97.html. </note>
Reference-contexts: Familiarity with the code management system (CMS) at CEBAF is helpful (especially cvs and make). For more details see Freyberger and Ito's CLAS O*ine Code Management <ref> [4] </ref>. Typically RECSIS traverses data in the BOS bank format, for details on the overall BOS data structure see The BOS system for CLAS detector Dynamic Memory Management [1]. 1.3 A General Overview of Running RECSIS Running RECSIS as a user involves the following steps: 1. <p> CLAS package repository's root directory, i.e. dirname | do cd dirname where dirname is the repository directory you will use for your personal copy of the user package. (c) Obtain the user source code | It is recommended that you use the CMS code management tool to do this, see <ref> [4] </ref>. <p> Login and initialize your environment | According to the naming conventions described in CLAS Offline Code Management <ref> [4] </ref> To do this you should execute a site dependent startup script. Letting /clas-repository be the directory path to where your librarian placed your CLAS o*ine software installation, and your site have the name site (examples might be pitt, rpi, cmu, ...). <p> A directory named ~/clas might be a traditional choice. (a) Access the CLAS repository at CEBAF This is done via the cvs utility as described in <ref> [4] </ref>. You will need to authenticate your identity in order to access the repository with the cvs source revision control tool. You will need to have an account at CEBAF having clas group privileges (telnet into CEBAF and type groups to check this) to do this. i. <p> your personal CLAS package repository's root directory | do: cd dirname where dirname is the repository directory you will use for your personal copy of the user package. (d) Obtain the user source code | It is recommended that you use the CMS code management tool to do this, see <ref> [4] </ref>.
Reference: [5] <author> B. W. Kernighan and D. M. Ritchie. </author> <title> The C Programming Language: ANSI C Version. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ USA, </address> <year> 1988. </year>
Reference-contexts: The user interface to RECSIS requires the ability to program, in either C and/or Fortran 77 and the TCL programming language. Many guides exist for the following: * C | For Hardcopy see <ref> [5] </ref>, on line information at lysator's C pages at http://www.lysator.liu.se/c/ . * Fortran [6], with some on line examples at http://www3.huji.ac.il/~agay/fortran.html . * TK/TCL [7], additional on-line information can be found at http://sunscript.sun.com/ . 1 see http://www.cebaf.gov/~freyberg/recsis.html 2 see http://www.cebaf.gov/~longhi/recsis.html. 3 see http://alcor.cebaf.gov/coda2.0/manuals/pdf/manuals/coda1.4.pdf 2 You should have some familiarity with the
Reference: [6] <author> M. Metcalf and J. Reid. </author> <title> Fortran 90/95 explained. </title> <publisher> Oxford University Press, Oxford, </publisher> <address> England, </address> <year> 1996. </year> <note> Additional information available on line at http://wwwcn.cern.ch/asdoc/f90.html. </note>
Reference-contexts: The user interface to RECSIS requires the ability to program, in either C and/or Fortran 77 and the TCL programming language. Many guides exist for the following: * C | For Hardcopy see [5], on line information at lysator's C pages at http://www.lysator.liu.se/c/ . * Fortran <ref> [6] </ref>, with some on line examples at http://www3.huji.ac.il/~agay/fortran.html . * TK/TCL [7], additional on-line information can be found at http://sunscript.sun.com/ . 1 see http://www.cebaf.gov/~freyberg/recsis.html 2 see http://www.cebaf.gov/~longhi/recsis.html. 3 see http://alcor.cebaf.gov/coda2.0/manuals/pdf/manuals/coda1.4.pdf 2 You should have some familiarity with the CERN libraries, and PAW [3], in particular you should be acquainted with the
Reference: [7] <author> J. K. Ousterhout. </author> <title> Tcl and the Tk Tool Kit. </title> <publisher> Addison-Wesley Professional Computing. Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1994. </year>
Reference-contexts: Many guides exist for the following: * C | For Hardcopy see [5], on line information at lysator's C pages at http://www.lysator.liu.se/c/ . * Fortran [6], with some on line examples at http://www3.huji.ac.il/~agay/fortran.html . * TK/TCL <ref> [7] </ref>, additional on-line information can be found at http://sunscript.sun.com/ . 1 see http://www.cebaf.gov/~freyberg/recsis.html 2 see http://www.cebaf.gov/~longhi/recsis.html. 3 see http://alcor.cebaf.gov/coda2.0/manuals/pdf/manuals/coda1.4.pdf 2 You should have some familiarity with the CERN libraries, and PAW [3], in particular you should be acquainted with the concept of ntuples and histograms in that framework, for details see:
Reference: [8] <author> Dong Zhao. </author> <note> Column-wise ntuple i/o optimization. Additional information available on line at http://www-d0.fnal.gov/o*ine/challenge/cwn io.html. 26 </note>
Reference-contexts: | Does the actual initializations, in particular see the following source lines: * Line 119 | Book histogram "50" using the CERN hbook package. * Lines 121-125 | Create a Column-Wise Ntuple , which is preferred over Row-Wise NTuples for efficiency reasons (and for flexibility too) according to Dong Zhao <ref> [8] </ref> in Column-Wise Ntuple I/O Optimization . 4.1.4 Changes made to user evnt.F This section describes the modifications made to support analysis and recording of data structures for an exper iment in the USER_EVNT subroutine. The source listing of the modified code appears in Appendix A.4.
References-found: 8

