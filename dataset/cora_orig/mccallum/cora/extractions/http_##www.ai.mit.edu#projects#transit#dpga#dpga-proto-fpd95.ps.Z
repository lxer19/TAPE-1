URL: http://www.ai.mit.edu/projects/transit/dpga/dpga-proto-fpd95.ps.Z
Refering-URL: http://www.ai.mit.edu/projects/transit/dpga_prototype_documents.html
Root-URL: 
Email: fedtau,kuang,beethovn,jhbrowng@ai.mit.edu  andre@ai.mit.edu  
Phone: Phone: (617) 253-5868 FAX: (617) 253-5060  
Title: A First Generation DPGA Implementation  
Author: Edward Tau Derrick Chen Ian Eslick Jeremy Brown Andr e DeHon 
Address: NE43-791, 545 Technology Sq., Cambridge, MA 02139  
Affiliation: MIT Artificial Intelligence Laboratory  
Note: FPD'95 Third Canadian Workshop of Field-Programmable Devices May 29-June 1, 1995, Montreal, Canada  
Abstract: Dynamically Programmable Gate Arrays (DPGAs) represent a hybrid architecture lying between traditional FPGAs and SIMD arrays. Notably, these arrays can efficiently support computations where the function of the array elements needs to vary both among array elements during any single cycle and within any single array element over time. We describe our minimal, first generation DPGA. This DPGA uses traditional 4-LUTs for the basic array element, but backs LUT and interconnect programming cells with a 4-context memory implemented using dynamic RAM. Additionally, this DPGA supports non-intrusive background loads of non-active contexts and automatic refresh for the dynamic memory cells. We draw several lessons from this design experience which may be relevant to future DPGA and FPGA designs. 
Abstract-found: 1
Intro-found: 1
Reference: [Atm93] <institution> Atmel Corporation, </institution> <address> 2125 O'Nel Drive, San Jose, CA 95131. </address> <booktitle> Configurable Logic Design and Application Book, </booktitle> <year> 1993. </year>
Reference-contexts: Reprogrammable FPGAs implement these programmable elements as memory cells, commonly static RAMs. These cells are configured during a slow programming phase which typically takes 10's of milliseconds due to limited bandwidth to off-chip memories [Xil93] <ref> [Atm93] </ref>. Once configured, the array personality is static until reloaded. Each array element, consequently, performs the same function throughout the epoch of operation for the device.
Reference: [BDK93] <author> Michael Bolotski, Andr e DeHon, and Thomas F. Knight Jr. </author> <title> Unifying FPGAs and SIMD Arrays. </title> <type> Transit Note 95, </type> <institution> MIT Artificial Intelligence Laboratory, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: Devices such as the AT6000 from Atmel can support partial reloads during operation, but the reload still takes a millisecond or more due to bandwidth limitations, and cells cannot be used during the reload operation. Dynamically Programmable Gate Arrays (DP-GAs) <ref> [BDK93] </ref> [DeH94] differ from traditional FP-GAs by providing on-chip memory for multiple array personalities. The configuration memory resources are replicated to contain several configurations for the fixed computing and interconnect resources.
Reference: [DeH94] <author> Andr e DeHon. </author> <title> DPGA-Coupled Microprocessors: </title> <booktitle> Commodity ICs for the Early 21st Century. In Proceedings of the IEEE Workshop on FPGAs for Custom Computing Machines, </booktitle> <year> 1994. </year>
Reference-contexts: Devices such as the AT6000 from Atmel can support partial reloads during operation, but the reload still takes a millisecond or more due to bandwidth limitations, and cells cannot be used during the reload operation. Dynamically Programmable Gate Arrays (DP-GAs) [BDK93] <ref> [DeH94] </ref> differ from traditional FP-GAs by providing on-chip memory for multiple array personalities. The configuration memory resources are replicated to contain several configurations for the fixed computing and interconnect resources.
Reference: [Xil93] <author> Xilinx, Inc., </author> <title> 2100 Logic Drive, </title> <address> San Jose, CA 95124. </address> <booktitle> The Programmable Logic Data Book, </booktitle> <year> 1993. </year>
Reference-contexts: Reprogrammable FPGAs implement these programmable elements as memory cells, commonly static RAMs. These cells are configured during a slow programming phase which typically takes 10's of milliseconds due to limited bandwidth to off-chip memories <ref> [Xil93] </ref> [Atm93]. Once configured, the array personality is static until reloaded. Each array element, consequently, performs the same function throughout the epoch of operation for the device.
References-found: 4

