URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3689/3689.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/authors/Anurag_Acharya-no-abs.html
Root-URL: 
Title: Titan: a High-Performance Remote-sensing Database  
Author: Chialin Chang, Bongki Moon, Anurag Acharya, Carter Shock Alan Sussman, Joel Saltz 
Address: College Park 20742  
Affiliation: Institute for Advanced Computer Studies and Department of Computer Science University of Maryland,  
Abstract: There are two major challenges for a high-performance remote-sensing database. First, it must provide low-latency retrieval of very large volumes of spatio-temporal data. This requires effective declustering and placement of a multi-dimensional dataset onto a large disk farm. Second, the order of magnitude reduction in data-size due to post-processing makes it imperative, from a performance perspective, that the postprocessing be done on the machine that holds the data. This requires careful coordination of computation and data retrieval. This paper describes the design, implementation and evaluation of Titan, a parallel shared-nothing database designed for handling remote-sensing data. The computational platform for Titan is a 16-processor IBM SP-2 with four fast disks attached to each processor. Titan is currently operational and contains about 24 GB of data from the Advanced Very High Resolution Radiometer (AVHRR) on the NOAA-7 satellite. The experimental results show that Titan provides good performance for global queries, and interactive response times for local queries.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Acharya, M. Uysal, R. Bennett, A. Mendelson, M. Beynon, J. Hollingsworth, J. Saltz, and A. Sussman. </author> <title> Tuning the performance of I/O-intensive parallel applications. </title> <booktitle> In Proceedings of the Fourth ACM Workshop on I/O in Parallel and Distributed Systems, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: results and describes ongoing work. 2 System Overview Titan consists of two parts: * a front-end, to interact with querying clients, perform initial query processing and partition data retrieval and computation; and * a back-end, to retrieve the data and perform post-processing and composition operations. 1 The bandwidths reported in <ref> [1] </ref> were measured under AIX 3.5. <p> Another factor that should be taken into consideration for selecting the data layout is the geometry of individual data units; square groups of pixels provide better indexing than more elongated data units. From <ref> [1] </ref>, we know that for our SP-2 configuration the best I/O performance is achieved for blocks larger than 128 KB. We chose to partition the AVHRR data in tiles of 204x204 pixels. <p> Comparing this value to the aggregate application-level disk bandwidth of 10.6 MB/sec achievable on an SP-2 node, as measured by a micro-benchmark using the UNIX filesystem interface <ref> [1] </ref>, the results show that very little I/O overhead is incurred by Titan. The difference between the heights of the left bar and the I/O part of the right bar indicates the amount of overlap between disk operations and computation on the node.
Reference: [2] <institution> Web site for AVHRR data from the NASA Goddard distributed active archive center. </institution> <address> http://daac.gsfc.nasa.gov/CAMPAIGN DOCS/FTP SITE/readmes/pal.html. </address>
Reference-contexts: The NOAA satellites orbit the earth approximately 14 times a day. Each file consists of a sequence of scan lines, each line containing 409 pixels. Each pixel consists of five readings, each in a different band of the electromagnetic spectrum. The AVHRR files provided by NASA <ref> [2] </ref> are organized in a band-interleaved form (i.e., all the values 5 for a single pixel are stored consecutively). However, the satellite data processing programs that we are aware of process either band one and two data or band three, four and five data [7, 29].
Reference: [3] <author> Ling Tony Chen and Doron Rotem. </author> <title> Declustering objects for visualization. </title> <booktitle> In Proceedings of the 19th VLDB Conference, </booktitle> <pages> pages 85-96, </pages> <address> Dublin, Ireland, </address> <year> 1993. </year>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based <ref> [3, 6, 9] </ref> and graph-theoretic [10, 20, 21]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23].
Reference: [4] <author> D. DeWitt, N. Kabra, J. Luo, J. Patel, and J-B Yu. </author> <title> Client-server Paradise. </title> <booktitle> In Proceedings of the 20 th VLDB Conference, </booktitle> <year> 1994. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 24, 8, 31, 32] </ref>. These systems are capable of handling map-based raster images as well as geographic entities such as map points (e.g. cities) and line segments (e.g. rivers, roads). The systems provide powerful query operations, including various forms of spatial joins.
Reference: [5] <author> K. Doan, C. Plaisant, and B. Shneiderman. </author> <title> Query previews in networked information systems. </title> <type> Technical Report CS-TR-3524, </type> <institution> Department of Computer Science, University of Maryland, </institution> <month> Oct </month> <year> 1995. </year> <note> Also available as CAR-TR-788, ISR-TR-95-90. </note>
Reference-contexts: Second, the index supports quick winnowing of large portions of the data base when presented with localized queries. Third, the index allows query previews that enable users to quickly refine their queries, without forcing large volumes of data to be retrieved from disks <ref> [5] </ref>. Finally, the index is extensible it is easy to include data from other sensors without re-engineering the indexing scheme or re-indexing existing data. 5 Query Processing As described in Section 2, Titan consists of a front-end and a set of back-end nodes.
Reference: [6] <author> H. C. Du and J. S. Sobolewski. </author> <title> Disk allocation for Cartesian product files on multiple-disk systems. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 7(1) </volume> <pages> 82-101, </pages> <month> March </month> <year> 1982. </year>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based <ref> [3, 6, 9] </ref> and graph-theoretic [10, 20, 21]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23]. <p> Ignoring the effects of disk caching, the maximum number of data blocks fetched from the same disk (i.e., max M i=1 fN i (q)g) is considered a plausible measure of the actual block transfer time <ref> [6, 21] </ref>. Definition 2 A cluster of blocks is a group of data blocks that are contiguous on disk. 3 Then, given a query q, the model seek time is defined to be the number of clusters in the answer set of q.
Reference: [7] <author> Jeff Eidenshink and Jim Fenno. </author> <title> Source code for LAS, </title> <editor> ADAPS and XID, </editor> <year> 1995. </year> <institution> Eros Data Center, Sioux Falls. </institution>
Reference-contexts: The following subsections describe each of these techniques used to provide low-latency data retrieval. 3.1 Data Partitioning The data partitioning decisions in Titan were motivated by the format of AVHRR data and the common query patterns identified by NASA researchers <ref> [7, 29] </ref> and our collaborators in the University of Maryland Geography Department [13, 18]. AVHRR data is organized as one file per satellite orbit. The NOAA satellites orbit the earth approximately 14 times a day. Each file consists of a sequence of scan lines, each line containing 409 pixels. <p> However, the satellite data processing programs that we are aware of process either band one and two data or band three, four and five data <ref> [7, 29] </ref>. This grouping is due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [12] whereas the last three bands can be used to estimate cloud cover and surface temperature [19]. <p> Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. Experimental results Based on the common query patterns identified by earth science researchers <ref> [7, 12, 18] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions as shown in Figure 3.
Reference: [8] <author> Michael Shapiro et al. </author> <title> GRASS 4.0 Programmer's Manual. </title> <institution> US Army Construction Engineering Research Laboratory, </institution> <year> 1992. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 24, 8, 31, 32] </ref>. These systems are capable of handling map-based raster images as well as geographic entities such as map points (e.g. cities) and line segments (e.g. rivers, roads). The systems provide powerful query operations, including various forms of spatial joins.
Reference: [9] <author> Christos Faloutsos and Pravin Bhagwat. </author> <title> Declustering using fractals. </title> <booktitle> In the 2nd International Conference on Parallel and Distributed Information Systems, </booktitle> <pages> pages 18-25, </pages> <address> San Diego, CA, </address> <month> January </month> <year> 1993. </year> <month> 23 </month>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based <ref> [3, 6, 9] </ref> and graph-theoretic [10, 20, 21]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23].
Reference: [10] <author> M. T. Fang, R. C. T. Lee, and C. C. Chang. </author> <title> The idea of de-clustering and its applications. </title> <booktitle> In Proceedings of the 12th VLDB Conference, </booktitle> <pages> pages 181-188, </pages> <address> Kyoto, Japan, </address> <year> 1986. </year>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based [3, 6, 9] and graph-theoretic <ref> [10, 20, 21] </ref>. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23]. <p> This algorithm was originally proposed for declustering grid files on a large disk farm, and has been shown to outperform Fang et al. 's Short Spanning Path algorithm <ref> [10] </ref> for that task. Other graph-theoretic algorithms such as Fang et al. 's Minimal Spanning Tree (MST) [10] and Liu et al. 's iterative partitioning (ITP) algorithms were not selected because (1) MST does not guarantee that the partitions are balanced in size, which means some partitions may be impractically large, <p> This algorithm was originally proposed for declustering grid files on a large disk farm, and has been shown to outperform Fang et al. 's Short Spanning Path algorithm <ref> [10] </ref> for that task. Other graph-theoretic algorithms such as Fang et al. 's Minimal Spanning Tree (MST) [10] and Liu et al. 's iterative partitioning (ITP) algorithms were not selected because (1) MST does not guarantee that the partitions are balanced in size, which means some partitions may be impractically large, and (2) ITP is based on a multi-pass Kernighan-Lin algorithm [17], which requires no fewer than O <p> To achieve a good clustering of multidimensional datasets, we have considered clustering techniques based on Hilbert space-filling curves [22] and the Short Spanning Path (SSP) algorithm <ref> [10] </ref>. Both methods can be used to map multidimensional objects onto the one-dimensional disk space. 8 It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves [15, 22].
Reference: [11] <author> Michael R. Garey and David S. Johnson. </author> <title> Computers and Intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: In addition, since the remotely sensed image database is static and Minimax declustering is also a quadratic algorithm, the SSP algorithm was the selected as the clustering method. Finding the shortest spanning path is NP-complete <ref> [11] </ref>. Therefore, the SSP algorithm employs a heuristic to generate a path that is short, but not necessarily the shortest. The algorithm works by first picking a vertex randomly from a given set of N vertices.
Reference: [12] <author> S. Goward, B. Markham, D. Dye, W. Dulaney, and J. Yang. </author> <title> Normalized difference vegetation index measurements from the Advanced Very High Resolution Radiometer. </title> <booktitle> Remote Sensing of Environment, </booktitle> <volume> 35 </volume> <pages> 257-77, </pages> <year> 1991. </year>
Reference-contexts: This grouping is due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region <ref> [12] </ref> whereas the last three bands can be used to estimate cloud cover and surface temperature [19]. To take advantage of these query patterns, Titan stores AVHRR data in two parts, one containing data for bands one and two and the other containing data for bands three, four and five. <p> Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. Experimental results Based on the common query patterns identified by earth science researchers <ref> [7, 12, 18] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions as shown in Figure 3.
Reference: [13] <institution> NSF/ARPA Grand Challenge Project at the University of Maryland for Land Cover Dynamics, </institution> <year> 1995. </year> <note> http://www.umiacs.umd.edu:80/research/GC/. </note>
Reference-contexts: subsections describe each of these techniques used to provide low-latency data retrieval. 3.1 Data Partitioning The data partitioning decisions in Titan were motivated by the format of AVHRR data and the common query patterns identified by NASA researchers [7, 29] and our collaborators in the University of Maryland Geography Department <ref> [13, 18] </ref>. AVHRR data is organized as one file per satellite orbit. The NOAA satellites orbit the earth approximately 14 times a day. Each file consists of a sequence of scan lines, each line containing 409 pixels.
Reference: [14] <author> Antonin Guttman. R-Trees: </author> <title> A dynamic index structure for spatial searching. </title> <booktitle> In Proceedings of the 1984 ACM-SIGMOD Conference, </booktitle> <pages> pages 47-57, </pages> <address> Boston, MA, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees <ref> [14] </ref>. A survey of declustering methods can be found in [23]. Since the Titan index is similar in behavior to an R-tree (see Section 4), we have adopted a graph-theoretic algorithm Moon et al. 's Minimax spanning tree algorithm [21]. <p> For expediency and due to the relatively small number of blocks in the database, we have implemented the index as a simplified R-tree <ref> [14] </ref>. The index is a binary tree whose interior nodes are bounding quadrilaterals for their children. Leaf nodes in the index correspond to data blocks and contain spatial and temporal extent, meta-data such as sensor type and satellite number, and the position on disk for each data block.
Reference: [15] <author> H. V. Jagadish. </author> <title> Linear clustering of objects with multiple attributes. </title> <booktitle> In Proceedings of the 1990 ACM-SIGMOD Conference, </booktitle> <pages> pages 332-342, </pages> <address> Atlantic City, NJ, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Both methods can be used to map multidimensional objects onto the one-dimensional disk space. 8 It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves <ref> [15, 22] </ref>. The advantage of using space-filling curves is that the linearization mapping is of linear cost in the number of objects, while SSP is a quadratic algorithm. In [21], however, we have empirically shown that the SSP algorithm achieves better declustering than a Hilbert curve-based algorithm. <p> The metric given in Definition 2 was originally proposed in <ref> [15] </ref> and used to analyze the clustering properties of space-filling curves [15, 22]. As was pointed out in [15], small gaps between fetched blocks are likely to be immaterial. <p> The metric given in Definition 2 was originally proposed in [15] and used to analyze the clustering properties of space-filling curves <ref> [15, 22] </ref>. As was pointed out in [15], small gaps between fetched blocks are likely to be immaterial. Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. <p> The metric given in Definition 2 was originally proposed in <ref> [15] </ref> and used to analyze the clustering properties of space-filling curves [15, 22]. As was pointed out in [15], small gaps between fetched blocks are likely to be immaterial. Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme.
Reference: [16] <author> Ibrahim Kamel and Christos Faloutsos. </author> <title> Parallel R-trees. </title> <booktitle> In Proceedings of the 1992 ACM-SIGMOD Conference, </booktitle> <pages> pages 195-204, </pages> <address> San Diego, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Every edge has an associated cost, which represents the probability that two vertices (i.e., data blocks) will be accessed together in a single query. To generate the edge costs, we have chosen the proximity index proposed by Kamel and Faloutsos <ref> [16] </ref>. The alternative we considered, Euclidean distance is suitable for point objects that occupy zero area in the problem space but does not capture the distinction among pairs of partially overlapped spatial objects of non-zero area or volume 2 .
Reference: [17] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell System Technical Journal, </journal> <volume> 49(2) </volume> <pages> 291-307, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: al. 's Minimal Spanning Tree (MST) [10] and Liu et al. 's iterative partitioning (ITP) algorithms were not selected because (1) MST does not guarantee that the partitions are balanced in size, which means some partitions may be impractically large, and (2) ITP is based on a multi-pass Kernighan-Lin algorithm <ref> [17] </ref>, which requires no fewer than O (N 2 fi p) operations, where N is the number of data blocks and p is the number of passes. Even though the number of passes, p, is usually low, the complexity is not polynomial bounded.
Reference: [18] <author> S. Liang, L. Davis, J. Townshend, R. Chellappa, R. Dubayah, S. Goward, J. JaJa, S. Krishnamachari, N. Roussopoulos, J. Saltz, H. Samet, T. Shock, and M. Srinivasan. </author> <title> Land cover dynamics investigation using parallel computers. </title> <booktitle> In Proceedings of the 1995 International Geoscience and Remote Sensing Symposium, Quantitative Remote Sensing for Science and Applications., </booktitle> <pages> pages 332-4, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: subsections describe each of these techniques used to provide low-latency data retrieval. 3.1 Data Partitioning The data partitioning decisions in Titan were motivated by the format of AVHRR data and the common query patterns identified by NASA researchers [7, 29] and our collaborators in the University of Maryland Geography Department <ref> [13, 18] </ref>. AVHRR data is organized as one file per satellite orbit. The NOAA satellites orbit the earth approximately 14 times a day. Each file consists of a sequence of scan lines, each line containing 409 pixels. <p> Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme. Experimental results Based on the common query patterns identified by earth science researchers <ref> [7, 12, 18] </ref>, we generated synthetic queries that uniformly cover the land masses of the world. We divided the land masses into 12 disjoint regions as shown in Figure 3.
Reference: [19] <author> S. Liang, S. Goward, J. Ranson, R. Dubayah, and S. Kalluri. </author> <title> Retrieval of atmospheric water vapor and land surface temperature from AVHRR thermal imagery. </title> <booktitle> In Proceedings of the 1995 International Geoscience and Remote Sensing Symposium, Quantitative Remote Sensing for Science and Applications., </booktitle> <pages> pages 1959-61, </pages> <month> July </month> <year> 1995. </year>
Reference-contexts: This grouping is due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [12] whereas the last three bands can be used to estimate cloud cover and surface temperature <ref> [19] </ref>. To take advantage of these query patterns, Titan stores AVHRR data in two parts, one containing data for bands one and two and the other containing data for bands three, four and five.
Reference: [20] <author> Duen-Ren Liu and Shashi Shekhar. </author> <title> A similarity graph-based approach to declustering problems and its application towards parallelizing grid files. </title> <booktitle> In the 11th Inter. Conference on Data Engineering, </booktitle> <pages> pages 373-381, </pages> <address> Taipei, Taiwan, </address> <month> March </month> <year> 1995. </year> <month> 24 </month>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based [3, 6, 9] and graph-theoretic <ref> [10, 20, 21] </ref>. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23].
Reference: [21] <author> Bongki Moon, Anurag Acharya, and Joel Saltz. </author> <title> Study of scalable declustering algorithms for parallel grid files. </title> <booktitle> In Proceedings of the Tenth International Parallel Processing Symposium, </booktitle> <pages> pages 434-440, </pages> <address> Honolulu, Hawaii, </address> <month> April </month> <year> 1996. </year> <note> Extended version is available as CS-TR-3589 and UMIACS-TR-96-4. </note>
Reference-contexts: Numerous declustering methods have been reported in the literature. For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based [3, 6, 9] and graph-theoretic <ref> [10, 20, 21] </ref>. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in [23]. <p> A survey of declustering methods can be found in [23]. Since the Titan index is similar in behavior to an R-tree (see Section 4), we have adopted a graph-theoretic algorithm Moon et al. 's Minimax spanning tree algorithm <ref> [21] </ref>. This algorithm was originally proposed for declustering grid files on a large disk farm, and has been shown to outperform Fang et al. 's Short Spanning Path algorithm [10] for that task. <p> A detailed description of the Minimax declustering algorithm is given in <ref> [21] </ref>. 3.3 Clustering In addition to maximizing disk parallelism by declustering, it is important to reduce the number of disk seeks by suitably ordering the data blocks assigned to a single disk. <p> The advantage of using space-filling curves is that the linearization mapping is of linear cost in the number of objects, while SSP is a quadratic algorithm. In <ref> [21] </ref>, however, we have empirically shown that the SSP algorithm achieves better declustering than a Hilbert curve-based algorithm. Given that clustering is the dual of declustering, we conjecture that the SSP algorithm will achieve better clustering. <p> Ignoring the effects of disk caching, the maximum number of data blocks fetched from the same disk (i.e., max M i=1 fN i (q)g) is considered a plausible measure of the actual block transfer time <ref> [6, 21] </ref>. Definition 2 A cluster of blocks is a group of data blocks that are contiguous on disk. 3 Then, given a query q, the model seek time is defined to be the number of clusters in the answer set of q.
Reference: [22] <author> Bongki Moon, H.V. Jagadish, Christos Faloutsos, and Joel H. Saltz. </author> <title> Analysis of the clustering properties of Hilbert space-filling curve. </title> <institution> Technical Report CS-TR-3611 and UMIACS-TR-96-20, University of Maryland, College Park, MD, </institution> <month> March </month> <year> 1996. </year> <note> Submitted to IEEE Transactions on Knowledge and Data Engineering. </note>
Reference-contexts: To achieve a good clustering of multidimensional datasets, we have considered clustering techniques based on Hilbert space-filling curves <ref> [22] </ref> and the Short Spanning Path (SSP) algorithm [10]. Both methods can be used to map multidimensional objects onto the one-dimensional disk space. 8 It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves [15, 22]. <p> Both methods can be used to map multidimensional objects onto the one-dimensional disk space. 8 It is widely believed that the Hilbert curve achieves the best clustering among space-filling curves <ref> [15, 22] </ref>. The advantage of using space-filling curves is that the linearization mapping is of linear cost in the number of objects, while SSP is a quadratic algorithm. In [21], however, we have empirically shown that the SSP algorithm achieves better declustering than a Hilbert curve-based algorithm. <p> The metric given in Definition 2 was originally proposed in [15] and used to analyze the clustering properties of space-filling curves <ref> [15, 22] </ref>. As was pointed out in [15], small gaps between fetched blocks are likely to be immaterial. Therefore, later in this section we use the total distance to be traveled by the disk arm, as well as the model seek time, to evaluate the clustering scheme.
Reference: [23] <author> Bongki Moon and Joel H. Saltz. </author> <title> Scalability analysis of declustering methods for Cartesian product files. </title> <institution> Technical Report CS-TR-3590 and UMIACS-TR-96-5, University of Maryland, College Park, MD, </institution> <month> April </month> <year> 1996. </year> <note> Submitted to IEEE Transactions on Knowledge and Data Engineering. </note>
Reference-contexts: Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files [25] and R-trees [14]. A survey of declustering methods can be found in <ref> [23] </ref>. Since the Titan index is similar in behavior to an R-tree (see Section 4), we have adopted a graph-theoretic algorithm Moon et al. 's Minimax spanning tree algorithm [21].
Reference: [24] <author> S. Morehouse. </author> <title> The ARC/INFO geographic information system. </title> <journal> Computers and Geosciences: An International Journal, </journal> <volume> 18(4) </volume> <pages> 435-41, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 24, 8, 31, 32] </ref>. These systems are capable of handling map-based raster images as well as geographic entities such as map points (e.g. cities) and line segments (e.g. rivers, roads). The systems provide powerful query operations, including various forms of spatial joins.
Reference: [25] <author> J. Nievergelt and H. Hinterberger. </author> <title> The Grid File: An adaptive, symmetric multikey file structure. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 9(1) </volume> <pages> 38-71, </pages> <month> March </month> <year> 1984. </year>
Reference-contexts: For multidimensional datasets, such declustering methods can be classified into two approaches: grid-based [3, 6, 9] and graph-theoretic [10, 20, 21]. Grid-based methods have been developed to decluster Cartesian product files, while graph-theoretic methods are aimed at declustering more 6 general spatial access structures such as grid files <ref> [25] </ref> and R-trees [14]. A survey of declustering methods can be found in [23]. Since the Titan index is similar in behavior to an R-tree (see Section 4), we have adopted a graph-theoretic algorithm Moon et al. 's Minimax spanning tree algorithm [21].
Reference: [26] <author> J. A. Orenstein and T. H. Merrett. </author> <title> A class of data structures for associative searching. </title> <booktitle> In the 3rd ACM SIGACT-SIGMOD Symposium on Principles of Database Systems, </booktitle> <pages> pages 181-190, </pages> <address> Waterloo, Canada, </address> <month> April </month> <year> 1984. </year>
Reference-contexts: The position of a data block is described by a [disk,offset] pair. The leaf nodes are arranged in a z-ordering <ref> [26] </ref> before the index is built. Sorting the leaves spatially allows access to the index as a range tree.
Reference: [27] <author> R. C. Prim. </author> <title> Shortest connection networks and some generalizations. </title> <journal> Bell System Technical Journal, </journal> <volume> 36(11) </volume> <pages> 1389-1401, </pages> <month> November </month> <year> 1957. </year>
Reference-contexts: The key idea of the Minimax declustering algorithm is to extend Prim's minimal spanning tree algorithm <ref> [27] </ref> to construct as many spanning trees as there are disks in the disk farm, and then assign all the blocks associated with a single spanning tree to a single disk.
Reference: [28] <author> C.T. Shock, C. Chang, L. Davis, S. Goward, J. Saltz, and A. Sussman. </author> <title> A high performance image database system for remote sensing. </title> <booktitle> In 24th AIPR Workshop on Tools and Techniques for Modeling and Simulation, </booktitle> <address> Washington, D.C., </address> <month> October </month> <year> 1995. </year>
Reference-contexts: This means that they are suitable for the output images we have described, rather than the original data. Maintaining remote-sensing data in its raw form is necessary for two reasons <ref> [28] </ref>: (1) a significant amount of earth science research is devoted to developing correlations between raw sensor readings at the satellite and various properties of the earth's surface; once the composition operation is performed it is no longer possible to retrieve the original data and (2) the process of generating a
Reference: [29] <author> Peter Smith and Bin-Bin Ding. </author> <title> Source code for the AVHRR Pathfinder system, 1995. Main program of the AVHRR Land Pathfinder effort (NASA Goddard). </title>
Reference-contexts: The following subsections describe each of these techniques used to provide low-latency data retrieval. 3.1 Data Partitioning The data partitioning decisions in Titan were motivated by the format of AVHRR data and the common query patterns identified by NASA researchers <ref> [7, 29] </ref> and our collaborators in the University of Maryland Geography Department [13, 18]. AVHRR data is organized as one file per satellite orbit. The NOAA satellites orbit the earth approximately 14 times a day. Each file consists of a sequence of scan lines, each line containing 409 pixels. <p> However, the satellite data processing programs that we are aware of process either band one and two data or band three, four and five data <ref> [7, 29] </ref>. This grouping is due to the properties of the bands: the first two bands provide information to estimate the amount of chlorophyll in a region [12] whereas the last three bands can be used to estimate cloud cover and surface temperature [19].
Reference: [30] <author> M. Snir, P. Hochschild, D.D. Frye, and K.J. Gildea. </author> <title> The communication software and parallel environment of the IBM SP2. </title> <journal> IBM Systems Journal, </journal> <volume> 34(2) </volume> <pages> 205-221, </pages> <year> 1995. </year>
Reference-contexts: In MPL, the processor participates in the communication protocol to copy messages between user space and the network adapter. This memory copy operation is a major memory bandwidth bottleneck on a thin SP-2 node, leaving no time for the processor to perform computation while interprocessor communication takes place <ref> [30] </ref>. Snir et al. did, however, report that better overlap between computation and communication can be achieved with wide SP-2 nodes [30], which have higher memory bandwidth. 7 Evaluation The experimental results presented in Section 6 show that Titan delivers good performance for both small and large queries. <p> This memory copy operation is a major memory bandwidth bottleneck on a thin SP-2 node, leaving no time for the processor to perform computation while interprocessor communication takes place <ref> [30] </ref>. Snir et al. did, however, report that better overlap between computation and communication can be achieved with wide SP-2 nodes [30], which have higher memory bandwidth. 7 Evaluation The experimental results presented in Section 6 show that Titan delivers good performance for both small and large queries. In particular, Titan provides interactive response times for local queries.
Reference: [31] <author> M. Ubell. </author> <title> The Montage extensible datablade architecture. </title> <booktitle> In Proceedings of the 1994 ACM-SIGMOD Conference, </booktitle> <pages> page 482, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 24, 8, 31, 32] </ref>. These systems are capable of handling map-based raster images as well as geographic entities such as map points (e.g. cities) and line segments (e.g. rivers, roads). The systems provide powerful query operations, including various forms of spatial joins.
Reference: [32] <author> T. Vijlbrief and P. van Oosterom. </author> <title> The GEO++ system: An extensible GIS. </title> <booktitle> In Proceedings of the Fifth International Symposium on Spatial Data Handling, </booktitle> <pages> pages 40-50, </pages> <month> August </month> <year> 1992. </year> <month> 25 </month>
Reference-contexts: This requires careful coordination of computation and data retrieval to avoid slowing down either process. Several database systems have been designed for handling geographic datasets <ref> [4, 24, 8, 31, 32] </ref>. These systems are capable of handling map-based raster images as well as geographic entities such as map points (e.g. cities) and line segments (e.g. rivers, roads). The systems provide powerful query operations, including various forms of spatial joins.
References-found: 32

