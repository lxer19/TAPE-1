URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1996/1996-17.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: fmarkdb,marc,rene,markovg@cs.ruu.nl  
Title: Simple Traversal of a Subdivision Without Extra Storage  
Author: Mark de Berg, Marc van Kreveld, Rene van Oostrum and Mark Overmars 
Keyword: Subdivisions, traversal algorithms, topological data structure, windowing, three dimensions.  
Address: P.O. Box 80.089, 3508 TB, The Netherlands  
Affiliation: Department of Computer Science, Utrecht University,  
Abstract: In this paper we show how to traverse a subdivision and to report all cells, edges and vertices, without making use of mark bits in the structure or a stack. We do this by performing a depth-first search on the subdivision, using local criteria for deciding what is the next cell to visit. Our method is extremely simple and provably correct. The algorithm has applications in the field of Geographic Information Systems (GIS), where traversing subdivisions is a common operation, but modifying the database is unwanted or impossible. We show how to adapt our algorithm to answer related queries, such as windowing queries and reporting connected subsets of cells that have a common attribute. Finally, we show how to extend our algorithm such that it can handle convex 3-dimensional subdivisions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Avis and K. Fukuda. </author> <title> A pivoting algorithm for convex hulls and vertex enumeration of arrangements and polyhedra. </title> <booktitle> In Proc. 7th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 98-104, </pages> <year> 1991. </year>
Reference-contexts: Other work on ordering of triangles was done by De Floriani et al. [8], who used the order for visibility purposes. In the field of computational geometry, efficient traversal algorithms have also been studied. Avis and Fukuda <ref> [1] </ref> gave an algorithm to report the vertices of an arrangement or a convex polytope without using mark bits in the data structure that represents the arrangement or polytope. Their description is a rather abstract one and does not address non-convex subdivisions; see also Fukuda and Rosta [9].
Reference: [2] <author> D. Avis and K. Fukuda. </author> <title> Reverse search for enumeration. </title> <type> Technical Report SOCS-92.21, </type> <institution> School of Computer Science, McGill University, </institution> <year> 1992. </year>
Reference-contexts: Their description is a rather abstract one and does not address non-convex subdivisions; see also Fukuda and Rosta [9]. A generic algorithm for traversing graph-like data structures without storing any information about the visited parts of the data structure was developed by Avis and Fukuda <ref> [2] </ref>. In this paper we extend the result of Gold et al. [11] and Edelsbrunner et al. [7] to traverse subdivisions without using mark bits. Our ideas are similar to those of Avis and Fukuda [2] and of Edelsbrunner et al. [7]. <p> information about the visited parts of the data structure was developed by Avis and Fukuda <ref> [2] </ref>. In this paper we extend the result of Gold et al. [11] and Edelsbrunner et al. [7] to traverse subdivisions without using mark bits. Our ideas are similar to those of Avis and Fukuda [2] and of Edelsbrunner et al. [7]. Unlike their methods, our algorithm applies to any subdivision of which the vertices and edges form a connected graph. Furthermore, we provide various practical extensions for windowing and reporting parts of subdivisions.
Reference: [3] <author> P.A. Burrough. </author> <title> Principles of Geographical Information Systems for Land Resources Assessment. Number 12 in Monographs on Soil and Resources Survey. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1986. </year> <month> 16 </month>
Reference-contexts: This is not a restriction; simple adaptations to the algorithms can be done so that they apply to the quad edge structure [13], the fully topological network structure <ref> [3] </ref>, the ARC/INFO structure [15], the DIME file [16], or any other vector data structure that stores the topology explicitly. In the next section we give a brief description of the doubly-connected edge list structure.
Reference: [4] <author> M. de Berg, M. van Kreveld, M. Overmars, and O. Schwarzkopf. </author> <title> Computational Geometry by Example. 1996. </title> <type> manuscript. </type>
Reference-contexts: In all cases, no mark bits are required in the data structure. Some of our results have been obtained by Snoeyink [18] simultaneously. We present our algorithms using the doubly-connected edge list structure <ref> [4, 14, 17] </ref>, a 2 standard data structure used in computational geometry that stores topology explicitly.
Reference: [5] <author> D. P. Dobkin and M. J. Laszlo. </author> <title> Primitives for the manipulation of three-dimensional subdivisions. </title> <booktitle> In Proc. 3rd Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 86-99, </pages> <year> 1987. </year>
Reference-contexts: Dobkin and Laszlo <ref> [5] </ref> have developed data structures and operations for handling three-dimensional subdivisions; these are comparable with the DCEL data structure and operations which we used in the two-dimensional setting. Again, we need to determine for each cell in the subdivision which one of its neighbors is its predecessor in the traversal.
Reference: [6] <author> H. Edelsbrunner. </author> <title> An acyclicity theorem for cell complexes in d dimensions. </title> <booktitle> In Proc. 5th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 145-151, </pages> <year> 1989. </year>
Reference: [7] <author> H. Edelsbrunner, L.J. Guibas, and J. Stolfi. </author> <title> Optimal point location in a monotone subdivision. </title> <journal> SIAM J. Computing, </journal> <volume> 15 </volume> <pages> 317-340, </pages> <year> 1986. </year>
Reference-contexts: A generic algorithm for traversing graph-like data structures without storing any information about the visited parts of the data structure was developed by Avis and Fukuda [2]. In this paper we extend the result of Gold et al. [11] and Edelsbrunner et al. <ref> [7] </ref> to traverse subdivisions without using mark bits. Our ideas are similar to those of Avis and Fukuda [2] and of Edelsbrunner et al. [7]. Unlike their methods, our algorithm applies to any subdivision of which the vertices and edges form a connected graph. <p> In this paper we extend the result of Gold et al. [11] and Edelsbrunner et al. <ref> [7] </ref> to traverse subdivisions without using mark bits. Our ideas are similar to those of Avis and Fukuda [2] and of Edelsbrunner et al. [7]. Unlike their methods, our algorithm applies to any subdivision of which the vertices and edges form a connected graph. Furthermore, we provide various practical extensions for windowing and reporting parts of subdivisions. We prove the correctness of our algorithms for both convex and non-convex subdivisions.
Reference: [8] <author> L. De Floriani, B. Faldicieno, G. Nagy, and C. Pienovi. </author> <title> On sorting triangles in a delaunay tessalation. </title> <journal> Algorithmica, </journal> <volume> 6 </volume> <pages> 522-532, </pages> <year> 1991. </year>
Reference-contexts: In fact, an order is defined on the triangles and the triangles are reported according to this order. Other work on ordering of triangles was done by De Floriani et al. <ref> [8] </ref>, who used the order for visibility purposes. In the field of computational geometry, efficient traversal algorithms have also been studied.
Reference: [9] <author> Komei Fukuda and Vera Rosta. </author> <title> Combinatorial face enumeration in convex polytopes. Computational Geometry, </title> <journal> Theory and Applications, </journal> <volume> 6 </volume> <pages> 191-198, </pages> <year> 1994. </year>
Reference-contexts: Their description is a rather abstract one and does not address non-convex subdivisions; see also Fukuda and Rosta <ref> [9] </ref>. A generic algorithm for traversing graph-like data structures without storing any information about the visited parts of the data structure was developed by Avis and Fukuda [2].
Reference: [10] <author> C. Gold and S. Cormack. </author> <title> Spatially ordered networks and topographic reconstructions. </title> <booktitle> In Proc. 2nd Int. Sympos. Spatial Data Handling, </booktitle> <pages> pages 74-85, </pages> <year> 1986. </year>
Reference-contexts: An algorithm for the traversal of triangulated subdivisions, or triangulated irregular networks, that did not require mark bits to record what triangles had been visited and which had not was developed by Gold et al. [11] (see also Gold and Maydell [12] and Gold and Cormack <ref> [10] </ref>). Their method involved choosing one starting point, and defining for each triangle exactly one incident edge through which the triangle could be entered. With the correct definitions and choices one can make sure that every triangle in the subdivision is reported exactly once. <p> Since every projection takes O (1) time, the asymptotic running time of the algorithm is not affected by the projections. For TINs our algorithm is similar to the algorithm of Gold and Cormack <ref> [10] </ref>. 10 Surfaces of 3-dimensional convex polyhedra can be dealt with in the same way, although mapping the vertices and edges to E 2 requires a little more effort for a convex polyhedron than for a polyhedral terrain (see Figure 8).
Reference: [11] <author> C. M. Gold, T. D. Charters, and J. Ramsden. </author> <title> Automated contour mapping using triangular element data structures and an interpolant over each irregular triangular domain. </title> <journal> Computer Graphics, </journal> <volume> 11(2) </volume> <pages> 170-175, </pages> <year> 1977. </year>
Reference-contexts: An algorithm for the traversal of triangulated subdivisions, or triangulated irregular networks, that did not require mark bits to record what triangles had been visited and which had not was developed by Gold et al. <ref> [11] </ref> (see also Gold and Maydell [12] and Gold and Cormack [10]). Their method involved choosing one starting point, and defining for each triangle exactly one incident edge through which the triangle could be entered. <p> A generic algorithm for traversing graph-like data structures without storing any information about the visited parts of the data structure was developed by Avis and Fukuda [2]. In this paper we extend the result of Gold et al. <ref> [11] </ref> and Edelsbrunner et al. [7] to traverse subdivisions without using mark bits. Our ideas are similar to those of Avis and Fukuda [2] and of Edelsbrunner et al. [7]. Unlike their methods, our algorithm applies to any subdivision of which the vertices and edges form a connected graph.
Reference: [12] <author> C.M. Gold and U. Maydell. </author> <title> Triangulation and spatial ordering in computer cartography. </title> <booktitle> In Proc. Canad. Cartographic Association Annual Meeting, </booktitle> <pages> pages 69-81, </pages> <year> 1978. </year>
Reference-contexts: An algorithm for the traversal of triangulated subdivisions, or triangulated irregular networks, that did not require mark bits to record what triangles had been visited and which had not was developed by Gold et al. [11] (see also Gold and Maydell <ref> [12] </ref> and Gold and Cormack [10]). Their method involved choosing one starting point, and defining for each triangle exactly one incident edge through which the triangle could be entered. With the correct definitions and choices one can make sure that every triangle in the subdivision is reported exactly once.
Reference: [13] <author> L. J. Guibas and J. Stolfi. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> ACM Trans. Graph., </journal> <volume> 4 </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference-contexts: We present our algorithms using the doubly-connected edge list structure [4, 14, 17], a 2 standard data structure used in computational geometry that stores topology explicitly. This is not a restriction; simple adaptations to the algorithms can be done so that they apply to the quad edge structure <ref> [13] </ref>, the fully topological network structure [3], the ARC/INFO structure [15], the DIME file [16], or any other vector data structure that stores the topology explicitly. In the next section we give a brief description of the doubly-connected edge list structure.
Reference: [14] <author> D. E. Muller and F. P. Preparata. </author> <title> Finding the intersection of two convex polyhedra. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 7 </volume> <pages> 217-236, </pages> <year> 1978. </year>
Reference-contexts: In all cases, no mark bits are required in the data structure. Some of our results have been obtained by Snoeyink [18] simultaneously. We present our algorithms using the doubly-connected edge list structure <ref> [4, 14, 17] </ref>, a 2 standard data structure used in computational geometry that stores topology explicitly.
Reference: [15] <editor> D.J. Peuquet and D.F. Marble (Eds.). ARC/INFO: </editor> <title> an example of a contemporary geographic information system. </title> <booktitle> In Introductory Readings in Geographic Information Systems, </booktitle> <pages> pages 90-99. </pages> <publisher> Taylor & Francis, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The basic spatial vector data structure in any geographic information system is the one that stores the zero-, one- and two-dimensional features of planar subdivisions. Contemporary GISs like ARC/INFO <ref> [15] </ref> and the DIME file [16] use polygon structures that store the explicit topology as well. This means that from any feature, it is possible to access adjacent features efficiently. <p> This is not a restriction; simple adaptations to the algorithms can be done so that they apply to the quad edge structure [13], the fully topological network structure [3], the ARC/INFO structure <ref> [15] </ref>, the DIME file [16], or any other vector data structure that stores the topology explicitly. In the next section we give a brief description of the doubly-connected edge list structure.
Reference: [16] <editor> D.J. Peuquet and D.F. Marble (Eds.). </editor> <booktitle> Technical description of the DIME system. In Introductory Readings in Geographic Information Systems, </booktitle> <pages> pages 100-111. </pages> <publisher> Taylor & Francis, </publisher> <year> 1990. </year>
Reference-contexts: 1 Introduction The basic spatial vector data structure in any geographic information system is the one that stores the zero-, one- and two-dimensional features of planar subdivisions. Contemporary GISs like ARC/INFO [15] and the DIME file <ref> [16] </ref> use polygon structures that store the explicit topology as well. This means that from any feature, it is possible to access adjacent features efficiently. <p> This is not a restriction; simple adaptations to the algorithms can be done so that they apply to the quad edge structure [13], the fully topological network structure [3], the ARC/INFO structure [15], the DIME file <ref> [16] </ref>, or any other vector data structure that stores the topology explicitly. In the next section we give a brief description of the doubly-connected edge list structure. Then we proceed with the simple traversal algorithm for subdivisions embedded in the Euclidean plane E 2 and prove its correctness.
Reference: [17] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: an Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: In all cases, no mark bits are required in the data structure. Some of our results have been obtained by Snoeyink [18] simultaneously. We present our algorithms using the doubly-connected edge list structure <ref> [4, 14, 17] </ref>, a 2 standard data structure used in computational geometry that stores topology explicitly.
Reference: [18] <author> J. Snoeyink, </author> <year> 1995. </year> <type> Personal Communication. 17 </type>
Reference-contexts: We also address the traversal of the surface of a convex polyhedron in 3-dimensional space, and the traversal of a convex subdivision in 3-dimensional space. In all cases, no mark bits are required in the data structure. Some of our results have been obtained by Snoeyink <ref> [18] </ref> simultaneously. We present our algorithms using the doubly-connected edge list structure [4, 14, 17], a 2 standard data structure used in computational geometry that stores topology explicitly.
References-found: 18

