URL: ftp://ic.eecs.berkeley.edu/pub/Memos_Conference/dac97_erl_tr.KB.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/kukimoto/
Root-URL: 
Email: fkukimoto,braytong@eecs.berkeley.edu  
Title: Exact Required Time Analysis via False Path Detection  
Author: Yuji Kukimoto Robert K. Brayton 
Date: June 16, 1997  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: This paper addresses how to compute required times at intermediate nodes in a combinational network given required times at primary outputs. The simplest approach is to compute them based on topological delay analysis without any consideration of false paths. In this paper, however, we take into account false paths between the intermediate nodes and the primary outputs explicitly to characterize the timing constraints at the nodes more accurately. We show that this approach leads to a technique for computing a more refined and relaxed timing constraint than that obtained by topological analysis. We generalize the notion of required times from a single constant to a relation where a signal is required at different times depending on the values of the other signals. Experimental results show that the technique can extract timing constraints looser than those based on topological analysis for all but three in the ISCAS combinational circuit suite. fl The first author is supported by SRC-97-DC-324.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aziz, R. K. Brayton, F. Balarin, and V. Singhal. </author> <title> Timing-safe replaceability for combinational designs. </title> <booktitle> In Proceedings of TAU 95: ACM/SIGDA International Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </booktitle> <pages> pages 121-128, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: The main objective of this paper is to leverage the theory of temporal flexibility up to the same level as functional flexibility. One related work published recently is the notion of timing-safe replaceability proposed by Aziz et al. <ref> [1] </ref>, which is an extension of safe replaceabiliy addressed by 2 Singhal et al. [13] in the context of sequential synthesis. The core idea of [1] is to characterize the set of all temporal behaviors exhibited by a combinational circuit using the linear logic of &lt;. <p> One related work published recently is the notion of timing-safe replaceability proposed by Aziz et al. <ref> [1] </ref>, which is an extension of safe replaceabiliy addressed by 2 Singhal et al. [13] in the context of sequential synthesis. The core idea of [1] is to characterize the set of all temporal behaviors exhibited by a combinational circuit using the linear logic of &lt;. If the set of all behaviors exhibited by another combinational circuit is a subset of the original set, no surrounding environment can detect a difference between the two circuits.
Reference: [2] <author> R. I. Bahar, H. Cho, G. D. Hachtel, E. Macii, and F. Somenzi. </author> <title> Timing analysis of combinational circuits using ADD's. </title> <booktitle> In Proceedings of the European Design and Test Conference, </booktitle> <pages> pages 625-629, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: In this paper we do not take this load effect into consideration to simplify the explanation. 10 <ref> [2] </ref> proposed a technique to compute input-value dependent delay using ADD's. This can be used as an alternative to the analysis below. 17 that make a signal at u i stable by time t.
Reference: [3] <author> F. M. Brown. </author> <title> Boolean Reasoning. </title> <publisher> Kluwer Academic Pubilshers, </publisher> <year> 1990. </year>
Reference-contexts: x 2 X : ; t 1 t p x for each x 2 X : ; t 0 x;0 : : : q x It is easy to transform the above set of Boolean equations to an equivalent single Boolean equation of form F (X; X ) = 1 <ref> [3] </ref> by AND'ing all these constraints together. In this equation, X are variables to be solved while X are Boolean constants. One can think of F (X; X ) as the characteristic function of a Boolean relation where X is the inputs and X is the outputs. <p> Any function in terms of X compatible with F satisfies the timing requirement at z. One method for extracting such a function is Boolean unification <ref> [3] </ref>. Notice that the notion of required times at primary inputs is significantly generalized here. For each primary input, its required time is not simply a single constant, but the input signal can arrive at different times depending on signal values of the other inputs.
Reference: [4] <author> E. Cerny and M. A. Marin. </author> <title> An approach to unified methodology of combinational switching circuits. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-26(8):745-756, </volume> <month> August </month> <year> 1977. </year>
Reference-contexts: For the case where the subcircuit is a combinational circuit, the full flexibility can be captured by a Boolean relation of the inputs and the outputs of the subcircuit <ref> [4] </ref>. Exact computation of the full flexibility is expensive for large networks, so a subset of the flexibility computable efficiently is of great interest, for which various don't care computation techniques [11, 10] have been developed.
Reference: [5] <author> H.-C. Chen and D. H.-C. Du. </author> <title> Path sensitization in critical path problem. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(2) </volume> <pages> 196-207, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Section 5 shows how to tackle the main problem using the technique of Section 4. Experimental results are given in Section 6. Section 7 concludes the paper. 2 Preliminaries In this section, we review sensitization theory for the false path problem <ref> [5, 6, 9] </ref>. <p> Those paths along which signals never propagate are called false paths. 2.2 The Extended Bounded Delay-0 (XBD0) Delay Model The extended bounded delay-0 model [9], XBD0 model, is the delay model most commonly used in false path analysis. It is the underlying model for the floating mode analysis <ref> [5] </ref> and viability analysis [8]. Under the XBD0 model, each gate in a network has a maximum positive delay and a minimum delay which is zero. Sensitization analysis is done under the assumption that each gate can take any delay between its maximum value and zero.
Reference: [6] <author> S. Devadas, K. Keutzer, and S. Malik. </author> <title> Computation of floating mode delay in combinational circuits: Theory and algorithms. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 12(12) </volume> <pages> 1913-1923, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Section 5 shows how to tackle the main problem using the technique of Section 4. Experimental results are given in Section 6. Section 7 concludes the paper. 2 Preliminaries In this section, we review sensitization theory for the false path problem <ref> [5, 6, 9] </ref>.
Reference: [7] <author> Y. Kukimoto and R. K. Brayton. </author> <title> Hierarchical timing analysis under the XBD0 model. </title> <booktitle> In International Workshop on Logic Synthesis, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: One possible approximation is to group them into clusters of neighboring required times conservatively. Controlling the number of clusters gives a trade-off between accuracy and CPU time for a more realistic delay model. We have recently shown <ref> [7] </ref> how this analysis leads to an abstract delay model for 21 circuit #PI #PO CPU time CPU time CPU time (exact) (approximate 1) (approximate 2) i1 25 16 93.0fl 0.1fl 0.5 i2 201 1 memory out 8.3fl 15.3 i3 132 6 3277.9fl 0.1 0.0 i5 133 66 - 1.9 10.7
Reference: [8] <author> P. C. McGeer and R. K. Brayton. </author> <title> Integrating Functional and Temporal Domains in Logic Design. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: It is the underlying model for the floating mode analysis [5] and viability analysis <ref> [8] </ref>. Under the XBD0 model, each gate in a network has a maximum positive delay and a minimum delay which is zero. Sensitization analysis is done under the assumption that each gate can take any delay between its maximum value and zero. Note that the monotone speedup property introduced in [8] <p> <ref> [8] </ref>. Under the XBD0 model, each gate in a network has a maximum positive delay and a minimum delay which is zero. Sensitization analysis is done under the assumption that each gate can take any delay between its maximum value and zero. Note that the monotone speedup property introduced in [8] exactly corresponds to the condition that minimum delays of all the gates are zero. 3 2.3 Sensitization under the XBD0 Model The core idea of [9] is to characterize recursively the set of all input vectors that make the signal value of a primary output stable to a constant by
Reference: [9] <author> P. C. McGeer, A. Saldanha, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Delay models and exact timing analysis. </title> <editor> In T. Sasao, editor, </editor> <booktitle> Logic Synthesis and Optimization, </booktitle> <pages> pages 167-189. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1993. </year>
Reference-contexts: Section 5 shows how to tackle the main problem using the technique of Section 4. Experimental results are given in Section 6. Section 7 concludes the paper. 2 Preliminaries In this section, we review sensitization theory for the false path problem <ref> [5, 6, 9] </ref>. <p> Section 5 shows how to tackle the main problem using the technique of Section 4. Experimental results are given in Section 6. Section 7 concludes the paper. 2 Preliminaries In this section, we review sensitization theory for the false path problem [5, 6, 9]. Specifically, the theory developed in <ref> [9] </ref> is detailed below since the analysis following this section is heavily based on this particular theory. 2.1 Functional Delay Analysis Functional delay analysis, or false path analysis, seeks to determine when all the primary output signals of a Boolean network become stable at their final values given maximum delays of <p> Those paths along which signals never propagate are called false paths. 2.2 The Extended Bounded Delay-0 (XBD0) Delay Model The extended bounded delay-0 model <ref> [9] </ref>, XBD0 model, is the delay model most commonly used in false path analysis. It is the underlying model for the floating mode analysis [5] and viability analysis [8]. Under the XBD0 model, each gate in a network has a maximum positive delay and a minimum delay which is zero. <p> Note that the monotone speedup property introduced in [8] exactly corresponds to the condition that minimum delays of all the gates are zero. 3 2.3 Sensitization under the XBD0 Model The core idea of <ref> [9] </ref> is to characterize recursively the set of all input vectors that make the signal value of a primary output stable to a constant by a given required time. <p> Each comparison is done by creating a Boolean network which computes the difference between two functions and using a SAT solver to check whether the output of the network is satisfiable. Experimental results in <ref> [9] </ref> showed that this approach can analyze large networks in reasonable computation time. 3 Overview In this paper we restrict our attention to combinational circuits. <p> All the Boolean operations in the exact and the first approximate methods are done using BDD's while in the second approximate method a SAT-based timing analysis tool <ref> [9] </ref> is used. The efficiency of the algorithms is dependent on how much reconvergence a given circuit has. In the exact algorithm, we introduce one Boolean variable for each pair of a primary input and a potential required time.
Reference: [10] <author> S. Muroga, Y. Kambayashi, H. C. Lai, and J. N. Culliney. </author> <title> The Transduction method design of logic network based on permissible functions. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38(10) </volume> <pages> 1404-1424, </pages> <month> October </month> <year> 1989. </year> <month> 23 </month>
Reference-contexts: Exact computation of the full flexibility is expensive for large networks, so a subset of the flexibility computable efficiently is of great interest, for which various don't care computation techniques <ref> [11, 10] </ref> have been developed. Recently, Watanabe and Brayton [14] resolved the case where the subcircuit is a sequential circuit by showing that the complete functional flexibility of the subcircuit is expressible by a single non-deterministic FSM, called the E-machine.
Reference: [11] <author> H. Savoj, R. K. Brayton, and H. J. Touati. </author> <title> Extracting local don't cares for network optimization. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 514-517, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Exact computation of the full flexibility is expensive for large networks, so a subset of the flexibility computable efficiently is of great interest, for which various don't care computation techniques <ref> [11, 10] </ref> have been developed. Recently, Watanabe and Brayton [14] resolved the case where the subcircuit is a sequential circuit by showing that the complete functional flexibility of the subcircuit is expressible by a single non-deterministic FSM, called the E-machine.
Reference: [12] <author> K. J. Singh, A. R. Wang, R. K. Brayton, and A. L. Sangiovanni-Vincentelli. </author> <title> Timing optimization of combinational logic. </title> <booktitle> In Proceedings of IEEE International Conference on Computer-Aided Design, </booktitle> <pages> pages 282-285, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: This scheme is more likely to give a faster circuit because the circuit fed to synthesis is smaller. A similar approach is in fact taken in timing optimization techniques <ref> [12] </ref> published in the literature, but their delay computation is based on topological longest paths thereby failing to capture some of existing timing flexibility.
Reference: [13] <author> V. Singhal and C. Pixley. </author> <title> The verification problem for safe replaceability. </title> <booktitle> In Proceedings of 6th International Conference on Computer-Aided Verification, CAV'94, </booktitle> <pages> pages 311-323, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: One related work published recently is the notion of timing-safe replaceability proposed by Aziz et al. [1], which is an extension of safe replaceabiliy addressed by 2 Singhal et al. <ref> [13] </ref> in the context of sequential synthesis. The core idea of [1] is to characterize the set of all temporal behaviors exhibited by a combinational circuit using the linear logic of &lt;.
Reference: [14] <author> Y. Watanabe and R. K. Brayton. </author> <title> The maximum set of permissible behaviors for FSM networks. </title> <booktitle> In Proceedings of IEEE/ACM International Conference on Computer-Aided Design, </booktitle> <pages> pages 316-320, </pages> <month> November </month> <year> 1993. </year> <month> 24 </month>
Reference-contexts: Exact computation of the full flexibility is expensive for large networks, so a subset of the flexibility computable efficiently is of great interest, for which various don't care computation techniques [11, 10] have been developed. Recently, Watanabe and Brayton <ref> [14] </ref> resolved the case where the subcircuit is a sequential circuit by showing that the complete functional flexibility of the subcircuit is expressible by a single non-deterministic FSM, called the E-machine. Although a significant effort has been made towards computing functional flexibility, little has been done for timing flexibility.
References-found: 14

