URL: http://theory.lcs.mit.edu/~stasio/Papers/prosig.ps.gz
Refering-URL: http://theory.lcs.mit.edu/~stasio/
Root-URL: 
Title: Proactive Public Key and Signature Systems  
Author: Amir Herzberg Markus Jakobsson Stanisaw Jarecki Hugo Krawczyk Moti Yung 
Date: December 9, 1996  
Abstract: Emerging applications like electronic commerce and secure communications over open networks have made clear the fundamental role of public key cryptography as a unique enabler for world-wide scale security solutions. On the other hand, these solutions clearly expose the fact that the protection of private keys is a security bottleneck in these sensitive applications. This problem is further worsened in the cases where a single and unchanged private key must be kept secret for very long time (such is the case of certification authority keys, bank and e-cash keys, etc.). One crucial defense against exposure of private keys is offered by threshold cryptography where the private key functions (like signatures or decryption) are distributed among several parties such that a predetermined number of parties must cooperate in order to correctly perform these operations. This protects keys from any single point of failure. An attacker needs to break into a multiplicity of locations before it can compromise the system. However, in the case of long-lived keys the attacker still has a considerable period of time (like a few years) to gradually break the system. Here we present proactive public key systems where the threshold solutions are further enhanced by periodic fl IBM Research, Haifa, amir@haifa.vnet.ibm.com y University of California, San Diego, markus@cs.ucsd.edu z Massachusetts Institute of Technology, stasio@mit.edu x IBM T.J. Watson Research Center, hugo@watson.ibm.com -CertCo, New York, moti@certco.com, moti@cs.columbia.edu refreshment of the shared function in such a way that the private key (and its corresponding public key) is kept unchanged for as long as required, yet the breaking of the system requires the attacker to break into several locations in a short period of time, e.g during one day or one week. We present such solutions for a variety of discrete log based cryptosystems including DSS and Schnorr signatures, ElGamal-like signatures and encryption, undeniable signatures, and more. We build on previous work on proactive secret sharing and threshold schemes, and develop a general methodology for the combination of many of these systems into secure proactive public key solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [AMV] <author> G. Agnew, R.C. Mullin, S. Vanstone, </author> <title> Improved digital signature scheme based on discrete exponentiation. </title> <journal> Electronics Letters, v. </journal> <volume> 26, </volume> <year> 1990, </year> <pages> pp. 1024-1025. 13 </pages>
Reference-contexts: These examples cover a wide range of applications from general signature schemes to particular methods used in e-cash and other electronic payment solutions. In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone <ref> [AMV, H] </ref>, undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to <p> is not applicable, because the change of public keys in these systems would involve very costly actions of infrastructural nature. * In electronic commerce schemes, a compromised signature key of a bank could produce huge eco nomic gains to the attacker (i.e., huge losses for 4 Scheme DSS [NIST] AMV <ref> [AMV] </ref> Schnorr [Sch] Undeniable [CvA] Chaum/Pederson [CP] Generation s = k 1 (m + xr) s = xm kr e = h (m; r) s = m x s = m x s = k + xe = m k d = k + cx Signature (s; r) (s; r) (s; <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn <ref> [AMV, H] </ref> 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. <p> In particular, [GJKR1] present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures <ref> [AMV, H] </ref>, undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen [CP]. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems.
Reference: [AGY] <author> N. Alon, Z. Galil and M. Yung, </author> <title> Dynamic-Resharing Verifiable Secret Sharing against Mobile Adversary. </title> <publisher> ESA'95. </publisher>
Reference-contexts: Later, [HJKY] introduced the notion of proactive secret sharing and presented a protocol which achieves it (see also <ref> [AGY] </ref>). The work we present here has stirred further interest and produced new encouraging applications of the notion of proactive public key systems. In fact, two recent manuscripts have presented novel developments building on the work of this paper.
Reference: [Bl] <author> R. Blakley, </author> <title> Safeguarding Cryptographic Keys, FIPS Con. </title> <booktitle> Proc (v. </booktitle> <volume> 48), </volume> <year> 1979, </year> <pages> pp. 313-317. </pages>
Reference-contexts: strong adversaries, especially when the breaking of such a system represents a significant economic gain for the attacker. 1 The need to protect against such memory access attacks has been recognized in the cryptographic literature long ago, particularly with the introduction of the notion of secret sharing (or threshold) schemes <ref> [Sh, Bl] </ref>. Secret sharing can be used for the distribution of a sensitive private key among different servers. To perform the private operation, e.g., a signature, the key is temporarily reconstructed from a subset of shares.
Reference: [BCDP] <author> J. Boyar, D. Chaum, I. Damgard and T. Pedersen, </author> <title> Convertible Undeniable Signatures, </title> <booktitle> Advances in Cryptology - Crypto 90 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 537, </volume> <editor> A. J. Menezes and S. Vanstone ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 189-205. </pages>
Reference: [Br] <author> S. Brands, </author> <title> Untraceable Off-line Cash in Wallet with Observers, </title> <booktitle> Advances in Cryptology - Crypto 93 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 773, </volume> <editor> D. Stinson ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1993, </year> <pages> pp. 302-318. </pages>
Reference-contexts: In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in <ref> [Br] </ref>), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to other public-key systems. <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant <ref> [Br] </ref>) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. Some of these versions exist in the literature.
Reference: [CH] <author> R. Canetti and A. Herzberg, </author> <title> Maintaining Security in the Presence of Transient Faults, </title> <booktitle> Advances in Cryptology - Crypto 94 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 839, </volume> <editor> Y. Desmedt ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1994, </year> <pages> pp. 425-438. </pages>
Reference-contexts: keys will have high economic value, the efforts and money invested by the adversary may be worthwhile. 1.1 The proactive approach The proactive approach, intended to defend against repeated attacks by strong and determined adversaries, was first introduced by Ostrovsky and Yung [OY], and further developed by Canetti and Herzberg <ref> [CH] </ref>. Herzberg, Jarecki, Krawczyk, and Yung [HJKY] specialized this notion to robust secret sharing schemes. <p> That work deals with the general theory of proactive memory maintenance and computation in the presence of mobile faults. This first work also asked for practical application of the notion, and this was first done by Canetti and Herzberg <ref> [CH] </ref> who designed a practical solution for pseudo-random generators, which can be used for symmetric key cryp-tosystems (see also [CSH]). Later, [HJKY] introduced the notion of proactive secret sharing and presented a protocol which achieves it (see also [AGY]).
Reference: [CHH] <author> R. Canetti, S. Halevi and A. Herzberg, </author> <title> Maintaining Authentication in Secure Communication, </title> <note> in preparation. </note>
Reference-contexts: The second manuscript <ref> [CHH] </ref> employs proactive signature of the type introduced here, and combines it with other tools to produce proactive protocols in the model of point to point network with unauthenticated channels and no broadcast. (Note that here we assume broadcast and ignore the lower layer of communication needed to support it; this
Reference: [CSH] <author> C. S. Chow and A. Herzberg, </author> <title> Network Randomization Protocol: A Proactive Pseudo-Random Generator, </title> <booktitle> the Fifth Usenix Security Symposium, </booktitle> <month> June </month> <year> 1995, </year> <pages> pp. 55-64 </pages>
Reference-contexts: This first work also asked for practical application of the notion, and this was first done by Canetti and Herzberg [CH] who designed a practical solution for pseudo-random generators, which can be used for symmetric key cryp-tosystems (see also <ref> [CSH] </ref>). Later, [HJKY] introduced the notion of proactive secret sharing and presented a protocol which achieves it (see also [AGY]). The work we present here has stirred further interest and produced new encouraging applications of the notion of proactive public key systems.
Reference: [C] <author> D. Chaum, </author> <title> Zero-knowledge undeniable signatures, </title> <booktitle> Advances in Cryptology - Eurocrypt 90 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 473, </volume> <editor> I. Damgard ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 458-464 </pages>
Reference-contexts: In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures <ref> [CvA, C] </ref>, Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to other public-key systems. <p> For example, we can proactivize the decryption operation in ElGamal cryptosystem [E, DF], and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes <ref> [CvA, C, P1, JY] </ref>. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. RSA and factoring based systems are not covered by this work). EXAMPLES. <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures <ref> [CvA, C] </ref> 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. Some of these versions exist in the literature. <p> In particular, [GJKR1] present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures [AMV, H], undeniable signatures <ref> [CvA, C] </ref>, and the signatures by Chaum/Pedersen [CP]. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems. <p> This is different than the unforgeability requirement in the case of a signature scheme. Naturally, we require simulatability of the threshold encryption scheme given such ciphertext, cleartext pairs. Similarly, P SS can be employed to proactivize the threshold signature verification protocols [P1, JY] for undeniable signatures <ref> [CvA, C] </ref>.
Reference: [CvA] <author> D. Chaum, H. van Antwerpen, </author> <title> Undeniable Signatures, </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <editor> G. Brassard ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1989, </year> <pages> pp. 212-216 </pages>
Reference-contexts: In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures <ref> [CvA, C] </ref>, Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to other public-key systems. <p> For example, we can proactivize the decryption operation in ElGamal cryptosystem [E, DF], and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes <ref> [CvA, C, P1, JY] </ref>. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. RSA and factoring based systems are not covered by this work). EXAMPLES. <p> the change of public keys in these systems would involve very costly actions of infrastructural nature. * In electronic commerce schemes, a compromised signature key of a bank could produce huge eco nomic gains to the attacker (i.e., huge losses for 4 Scheme DSS [NIST] AMV [AMV] Schnorr [Sch] Undeniable <ref> [CvA] </ref> Chaum/Pederson [CP] Generation s = k 1 (m + xr) s = xm kr e = h (m; r) s = m x s = m x s = k + xe = m k d = k + cx Signature (s; r) (s; r) (s; r) s (s; r; <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures <ref> [CvA, C] </ref> 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. Some of these versions exist in the literature. <p> In particular, [GJKR1] present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures [AMV, H], undeniable signatures <ref> [CvA, C] </ref>, and the signatures by Chaum/Pedersen [CP]. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems. <p> This is different than the unforgeability requirement in the case of a signature scheme. Naturally, we require simulatability of the threshold encryption scheme given such ciphertext, cleartext pairs. Similarly, P SS can be employed to proactivize the threshold signature verification protocols [P1, JY] for undeniable signatures <ref> [CvA, C] </ref>.
Reference: [CP] <author> D. Chaum, T. P. Pedersen, </author> <title> Wallet Databases with Observers, </title> <booktitle> Advances in Cryptology - Crypto 92 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 740, </volume> <editor> E. Brickell ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1992, </year> <pages> pp. 89-105 </pages>
Reference-contexts: DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases <ref> [CP] </ref>. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to other public-key systems. <p> of public keys in these systems would involve very costly actions of infrastructural nature. * In electronic commerce schemes, a compromised signature key of a bank could produce huge eco nomic gains to the attacker (i.e., huge losses for 4 Scheme DSS [NIST] AMV [AMV] Schnorr [Sch] Undeniable [CvA] Chaum/Pederson <ref> [CP] </ref> Generation s = k 1 (m + xr) s = xm kr e = h (m; r) s = m x s = m x s = k + xe = m k d = k + cx Signature (s; r) (s; r) (s; r) s (s; r; ; d) <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen <ref> [CP] </ref> The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. Some of these versions exist in the literature. <p> Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures [AMV, H], undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen <ref> [CP] </ref>. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems.
Reference: [CGMA] <author> B. Chor, S. Goldwasser, S. Micali and B. Awerbuch, </author> <title> Verifiable Secret Sharing and Achieving Simultaneous Broadcast, </title> <booktitle> Proceedings of the 26th Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1985, </year> <pages> pp. 335-344. </pages>
Reference: [DDFY] <author> A. De Santis, Y. Desmedt, Y. Frankel, and M. Yung, </author> <title> How to Share a Function Securely, </title> <booktitle> ACM Proceedings of the 26th Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1994, </year> <pages> pp. 522-533. </pages>
Reference-contexts: Thus, in order to compromise the system an attacker needs to penetrate more than a threshold of locations (in particular, this avoids any single point of failure). This methodology has been formalized in <ref> [DDFY] </ref> through the notion of function sharing. To be more useful, threshold cryptosystems need also be robust in the sense of being able to compute the intended function even in the presence of wrong partial results contributed by corrupted parties (cf. [FGY, GJKR2]).
Reference: [DF] <author> Y. Desmedt and Y. Frankel, </author> <title> Threshold cryptosystems, </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <editor> G. Brassard ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1989, </year> <pages> pp. 307-315. </pages>
Reference-contexts: To solve this problem the notion of threshold cryptosystems was suggested, most notably by Desmedt and Frankel (see e.g., <ref> [DF] </ref>). In these systems, each server holds a share of the system's private key, and in order for the intended function, e.g., a signature, to be calculated, a large enough subset (a threshold) of the servers sharing the secret must collaborate and each produces a partial result. <p> For example, we can proactivize the decryption operation in ElGamal cryptosystem <ref> [E, DF] </ref>, and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes [CvA, C, P1, JY]. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. <p> Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems. The proactive secret sharing protocol P SS could be used to proactivize the threshold sharing of El Gamal encryption function [E] proposed by Desmedt and Frankel <ref> [DF] </ref>, where message m is encrypted using the recipient's public key y = g x , by selecting a random number 2 Z q and calculating (b; c) = (g ; y m). The receiver decrypts by calculating m = c=b x .
Reference: [ER] <author> M. Eichin and J. Rochlis, </author> <title> With Microscope and Tweezers: An Analysis of the Internet Virus of November 1988, </title> <booktitle> IEEE Sym. on Security and Privacy, </booktitle> <year> 1989, </year> <pages> pp. 326-343. </pages>
Reference-contexts: However, in real systems, adversaries - such as corrupted system administrators, accidents and misconfigurations, hackers, trojans and viruses may eventually gain access to these memories, particularly in the case of software based systems (cf. <ref> [ER] </ref>).
Reference: [E] <author> T. El Gamal, </author> <title> A Public key cryptosystem and a signature scheme based on discrete logarithm, </title> <journal> IEEE Trans. on Information Theory 31, </journal> <pages> 465-472, </pages> <year> 1985. </year>
Reference-contexts: These examples cover a wide range of applications from general signature schemes to particular methods used in e-cash and other electronic payment solutions. In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures <ref> [E] </ref>, like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined <p> For example, we can proactivize the decryption operation in ElGamal cryptosystem <ref> [E, DF] </ref>, and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes [CvA, C, P1, JY]. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. <p> Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems. The proactive secret sharing protocol P SS could be used to proactivize the threshold sharing of El Gamal encryption function <ref> [E] </ref> proposed by Desmedt and Frankel [DF], where message m is encrypted using the recipient's public key y = g x , by selecting a random number 2 Z q and calculating (b; c) = (g ; y m). The receiver decrypts by calculating m = c=b x .
Reference: [F] <author> P. Feldman, </author> <title> A Practical Scheme for Non-Interactive Verifiable Secret Sharing, </title> <booktitle> Proceedings of the 28th Symposium on Foundations of Computer Science, IEEE, </booktitle> <year> 1987, </year> <month> pp.427-437 </month>
Reference-contexts: section 2, the lifetime of a proactive secret sharing scheme is slotted into time periods, which are separated by relatively short update phases during which protocol Update re-randomizes the the secret sharing and recovers any corrupted information. * Init: Protocol Init is the distributed verifiable secret sharing protocol of Feldman <ref> [F] </ref> (see also [P2] for a simple presentation of that protocol), where each active party serves as a distributor and each share x i (of party i) results from adding up all the sub-shares given to party i by each of the distributors (including i itself). <p> : : ; x n g; fy 1 ; : : : ; y n ; yg) from the probability distribution S x and outputting it as a private and public output respectively. * Reconstruct: Protocol Reconstruct is the same verifiable (i.e., robust) secret reconstruction protocol as in Feldman's VSS <ref> [F] </ref>. <p> We also notice that because of the use of Feldman's Verifiable Secret Sharing mechanism <ref> [F] </ref>, the robustness of the P SS protocol is not subject to computational bounds on the adversary. The t-threshold mobile adversary could not disrupt the P SS protocol even if he knew all the private information of every server, and in particular the secret x itself.
Reference: [FGY] <author> Y. Frankel, P. Gemmel and M. Yung, </author> <title> Witness Based Cryptographic Program Checking and Robust Function Sharing. </title> <booktitle> Proceedings of the 28th Annual Symposium on Theory of Computing, ACM, </booktitle> <year> 1996, </year> <pages> pp. 499-508. </pages>
Reference-contexts: This methodology has been formalized in [DDFY] through the notion of function sharing. To be more useful, threshold cryptosystems need also be robust in the sense of being able to compute the intended function even in the presence of wrong partial results contributed by corrupted parties (cf. <ref> [FGY, GJKR2] </ref>). The threshold cryptosystem approach indeed significantly enhances the security of public key cryptosys-tems. However, in the cases of sensitive and long-lived private keys (e.g., a certification authority key, a bank signature key for e-cash, etc.) the attacker still has a long time to gradually compromise the system. <p> The receiver decrypts by calculating m = c=b x . In fact, their scheme can be made robust <ref> [FGY] </ref>. We note that the properties that our concrete methodology requires from El Gamal is the security of the underlying encryption, i.e., El Gamal ciphertext security given known/chosen plaintexts (and their ciphertexts). This is different than the unforgeability requirement in the case of a signature scheme.
Reference: [FGMY] <author> Y. Frankel, P. Gemmel, P. MacKenzie and M. Yung. </author> <title> Proactive RSA, </title> <type> manuscript. </type>
Reference-contexts: Using the above proactive approach we can cause certain shareholder to become invalid (by not refreshing their share by the majority) and make new shareholders join (by treating them as existing shareholder who have lost their past shares). This application was first noticed in <ref> [FGMY] </ref>. 1.4 Related work The adversarial model requiring proactive solutions, where an adversary can repeatedly attack each party, but no more than a threshold of parties can be compromised in a single time period, was first introduced by Ostrovsky and Yung in [OY], and called the mobile adversary model. <p> In fact, two recent manuscripts have presented novel developments building on the work of this paper. First, the notion of proactive cryptosystems as defined here has been applied to RSA <ref> [FGMY] </ref>, thus producing a proactive cryptosys-tem based on the hardness of factoring.
Reference: [GJKR1] <author> R. Gennaro, S. Jarecki, H. Krawczyk, T. Rabin, </author> <title> Robust Threshold DSS Signatures, </title> <booktitle> Advances in Cryptology - Eurocrypt 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1070, </volume> <editor> U. Maurer ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 354-371. </pages>
Reference-contexts: These examples cover a wide range of applications from general signature schemes to particular methods used in e-cash and other electronic payment solutions. In particular, we show proactive threshold solutions to DSS signatures <ref> [NIST, GJKR1] </ref>, other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS <ref> [NIST, GJKR1] </ref> 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in <p> Some of these versions exist in the literature. In particular, <ref> [GJKR1] </ref> present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. <p> Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures [AMV, H], undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen [CP]. We refer to <ref> [GJKR1] </ref> for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems.
Reference: [GJKR2] <author> R. Gennaro, S. Jarecki, H. Krawczyk, T. Rabin, </author> <title> Robust Threshold RSA, </title> <booktitle> Advances in Cryptology - Crypto 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1109, </volume> <editor> N. Koblitz ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 157-172. </pages>
Reference-contexts: This methodology has been formalized in [DDFY] through the notion of function sharing. To be more useful, threshold cryptosystems need also be robust in the sense of being able to compute the intended function even in the presence of wrong partial results contributed by corrupted parties (cf. <ref> [FGY, GJKR2] </ref>). The threshold cryptosystem approach indeed significantly enhances the security of public key cryptosys-tems. However, in the cases of sensitive and long-lived private keys (e.g., a certification authority key, a bank signature key for e-cash, etc.) the attacker still has a long time to gradually compromise the system.
Reference: [GMR1] <author> S. Goldwasser, S. Micali and C. Rackoff, </author> <title> The Knowledge Complexity of Interactive Proof-Systems, </title> <journal> Siam J. on Computing, </journal> <volume> 18(1) (1989), </volume> <pages> pp. 186-208. </pages>
Reference-contexts: Intuitively, the threshold signature scheme cannot require any more private or public data (produced by Thresh-Key-Gen and used by Thresh-Sig) than can be proactively maintained by P SS. The simulatability property (requirement four) <ref> [GMR1] </ref> will allow us to claim that the adversary does not gain any knowledge by repeated executions of Thresh-Sig even when the underlying secret sharing of the signature key x is being re-randomized by the proactive secret sharing mechanisms: Definition 4.2 We call a threshold signature protocol Thresh-Sig simulatable if there
Reference: [GMR2] <author> S. Goldwasser, S. Micali and R. Rivest, </author> <title> A Digital Signature Scheme Secure against the Chosen-Message Attack, </title> <journal> Siam Journal on Computing, </journal> <volume> Vol. 17, 2 (1988), </volume> <pages> pp. 281-308. </pages>
Reference-contexts: We stress that an equivalent formalization can be made for other public-key functions, like a decryption function in public-key cryptosystems. We skip the definitions of unforgeable signature schemes as achieved by the basic signature schemes we employ, (a strong notion of unforgeability is given in <ref> [GMR2] </ref>). We also skip the definition of secret sharing [Sh]. We do, however, recollect the definitions of robust threshold signature schemes and of proactive secret sharing, and then we define proactively secure signature schemes. ROBUST THRESHOLD SIGNATURE SCHEME. <p> Similar definitions and the same proof could be made for other notions of security of signature schemes (for examples we refer the reader to <ref> [GMR2] </ref>). 4.4 Examples of Proactivizable Threshold Signature Schemes The following corollary lists the signature schemes which can be transformed into proactive cryptosystems using the methodology presented above.
Reference: [H] <author> L. Harn, </author> <title> Group oriented (t,n) digital signature scheme, </title> <journal> IEEE Proc.-Comput.Digit.Tech. </journal> <volume> Vol. </volume> <month> 141 No.5 September </month> <year> 1994, </year> <pages> pp. 307-313. </pages>
Reference-contexts: These examples cover a wide range of applications from general signature schemes to particular methods used in e-cash and other electronic payment solutions. In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone <ref> [AMV, H] </ref>, undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn <ref> [AMV, H] </ref> 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. <p> In particular, [GJKR1] present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures <ref> [AMV, H] </ref>, undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen [CP]. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems. As mentioned before, we used signature schemes only as an example of discrete-log based public key systems.
Reference: [JY] <author> M. Jakobsson, M. Yung, </author> <title> Proving Without Knowing: On Oblivious, Agnostic and Blindfolded Provers, </title> <booktitle> Advances in Cryptology - Crypto 96 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 1109, </volume> <editor> N. Koblitz ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1996, </year> <pages> pp. 186-200. </pages>
Reference-contexts: For example, we can proactivize the decryption operation in ElGamal cryptosystem [E, DF], and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes <ref> [CvA, C, P1, JY] </ref>. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. RSA and factoring based systems are not covered by this work). EXAMPLES. <p> This is different than the unforgeability requirement in the case of a signature scheme. Naturally, we require simulatability of the threshold encryption scheme given such ciphertext, cleartext pairs. Similarly, P SS can be employed to proactivize the threshold signature verification protocols <ref> [P1, JY] </ref> for undeniable signatures [CvA, C].
Reference: [J] <author> S. Jarecki, </author> <title> Proactive Secret Sharing and Public Key Cryptosystems, </title> <type> Master thesis, </type> <institution> MIT, </institution> <year> 1996. </year>
Reference-contexts: The t-threshold mobile adversary could not disrupt the P SS protocol even if he knew all the private information of every server, and in particular the secret x itself. For more detailed formalization and proofs of the above properties of this protocol, we refer the reader to <ref> [J] </ref>. 4.2 Our Requirements for Proactivization of Threshold Signature Schemes We identify the following properties of a robust (t; n) threshold signature scheme (Thresh-Key-Gen,Thresh-Sig,Ver) as sufficient conditions (when satisfied simultaneously) for proactivization with the help of the P SS protocol described above. 1. DISCRETE-LOG BASED SIGNATURE SCHEME.
Reference: [HJKY] <author> A. Herzberg, S. Jarecki, H. Krawczyk, M. Yung, </author> <title> Proactive Secret Sharing, or: how to cope with perpetual leakage, </title> <booktitle> Advances in Cryptology - Crypto 95 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 963, </volume> <editor> D. Coppersmith ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1995, </year> <pages> pp. 339-352. </pages>
Reference-contexts: Herzberg, Jarecki, Krawczyk, and Yung <ref> [HJKY] </ref> specialized this notion to robust secret sharing schemes. <p> the (single) public key of the system, and independently of the signature generation process. 1.2 Our results * We define the notion and model of proactive public key systems, with the emphasis on proactive signature systems (sections 2 and 3). * We describe how the proactive secret sharing mechanism of <ref> [HJKY] </ref> can be used to transform a broad class of threshold public-key signature schemes based on the hardness of computing discrete logarithms, into proactive signature schemes (section 4): We identify the properties of the proactive secret sharing mechanism of [HJKY] which render the resulting proactive signa ture scheme provably secure (section <p> 3). * We describe how the proactive secret sharing mechanism of <ref> [HJKY] </ref> can be used to transform a broad class of threshold public-key signature schemes based on the hardness of computing discrete logarithms, into proactive signature schemes (section 4): We identify the properties of the proactive secret sharing mechanism of [HJKY] which render the resulting proactive signa ture scheme provably secure (section 4.1). We specify the conditions which the threshold signature schemes have to meet in order to be proactivized with our method (sec tion 4.2). <p> This first work also asked for practical application of the notion, and this was first done by Canetti and Herzberg [CH] who designed a practical solution for pseudo-random generators, which can be used for symmetric key cryp-tosystems (see also [CSH]). Later, <ref> [HJKY] </ref> introduced the notion of proactive secret sharing and presented a protocol which achieves it (see also [AGY]). The work we present here has stirred further interest and produced new encouraging applications of the notion of proactive public key systems. <p> of point to point network with unauthenticated channels and no broadcast. (Note that here we assume broadcast and ignore the lower layer of communication needed to support it; this enables us to concentrate on the cryptographic constructions level of the protocols.) 2 The Proactive Model We use the model of <ref> [HJKY] </ref>, where proactive secret sharing was introduced and we adopt it to proactive public key systems. In short, the model is as follows: SERVERS AND COMMUNICATION MODEL. We employ a group of servers to secret-share a private secret key x. <p> How to implement the underlying communication model proactively (based on broadcast and cryptographic tools) is discussed in <ref> [HJKY] </ref>. TIME. Time is divided into time periods which are determined by the common global clock (e.g., a day, a week, etc.). <p> Ver (sig; m; y) =correct. PROACTIVE SECRET SHARING. We adapt the definition of proactive secret sharing from <ref> [HJKY] </ref> to the case of distributed generation and sharing of a random value without a trusted server, as opposed to sharing a number provided by some trusted center. <p> method, and we remark on public-key functions other then signatures which can be proactivized in the same way. 4.1 Properties of the Proactive Secret Sharing Protocol (P SS) Below we outline the (Init,Update,Reconstruct) (t = b n 2 c; n)-threshold proactive sharing protocol (let's call it P SS) presented in <ref> [HJKY] </ref>. Note that this scheme can be adapted to any t smaller than b n 2 c. We also state the properties of that protocol which allow us to use it as a building block in proactive function sharing schemes.
Reference: [K] <author> P.A. Karger, </author> <title> Limiting the Damage Potential of Discretionary Trojan Horses, </title> <booktitle> IEEE Sym. on Security and Privacy, </booktitle> <year> 1987, </year> <pages> pp. 32-37. </pages>
Reference-contexts: is maintained in a distributed and proactive 1 We note that the notion of servers recovering after being controlled by an adversary is justified by many mechanisms virus detection, intrusion detection, connectivity tools, etc.- that are being developed to rid systems of intrusions and attackers and reboot them afresh, cf. <ref> [K] </ref> fashion.
Reference: [NIST] <author> National Institute for Standards and Technology, </author> <title> Digital Signature Standard (DSS), </title> <journal> Federal Register, </journal> <volume> vol 56, no 169, </volume> <month> 20 Aug. </month> <year> 1991. </year>
Reference-contexts: These examples cover a wide range of applications from general signature schemes to particular methods used in e-cash and other electronic payment solutions. In particular, we show proactive threshold solutions to DSS signatures <ref> [NIST, GJKR1] </ref>, other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures [Sch] (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We <p> key exposures) is not applicable, because the change of public keys in these systems would involve very costly actions of infrastructural nature. * In electronic commerce schemes, a compromised signature key of a bank could produce huge eco nomic gains to the attacker (i.e., huge losses for 4 Scheme DSS <ref> [NIST] </ref> AMV [AMV] Schnorr [Sch] Undeniable [CvA] Chaum/Pederson [CP] Generation s = k 1 (m + xr) s = xm kr e = h (m; r) s = m x s = m x s = k + xe = m k d = k + cx Signature (s; r) (s; <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS <ref> [NIST, GJKR1] </ref> 2) AMV-Harn [AMV, H] 3) Schnorr [Sch] (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in <p> Some of these versions exist in the literature. In particular, [GJKR1] present a detailed scheme for threshold DSS <ref> [NIST] </ref>, and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature [Sch], AMV-signatures [AMV, H], undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen [CP].
Reference: [OY] <author> R. Ostrovsky and M. Yung, </author> <title> How to withstand mobile virus attacks, </title> <booktitle> Proc. of the 10th ACM Symposium on the Principles of Distributed Computing, </booktitle> <year> 1991, </year> <pages> pp. 51-61. </pages>
Reference-contexts: Since long-lived public keys will have high economic value, the efforts and money invested by the adversary may be worthwhile. 1.1 The proactive approach The proactive approach, intended to defend against repeated attacks by strong and determined adversaries, was first introduced by Ostrovsky and Yung <ref> [OY] </ref>, and further developed by Canetti and Herzberg [CH]. Herzberg, Jarecki, Krawczyk, and Yung [HJKY] specialized this notion to robust secret sharing schemes. <p> This application was first noticed in [FGMY]. 1.4 Related work The adversarial model requiring proactive solutions, where an adversary can repeatedly attack each party, but no more than a threshold of parties can be compromised in a single time period, was first introduced by Ostrovsky and Yung in <ref> [OY] </ref>, and called the mobile adversary model. That work deals with the general theory of proactive memory maintenance and computation in the presence of mobile faults.
Reference: [P1] <author> T.P. Pedersen, </author> <title> Distributed Provers with Applications to Undeniable Signatures, </title> <booktitle> Advances in Cryptology - Eurocrypt 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 547, </volume> <editor> D. Davies ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 221-242. </pages>
Reference-contexts: For example, we can proactivize the decryption operation in ElGamal cryptosystem [E, DF], and the signature verification and disavowal protocols in undeniable and designated-verifier signature schemes <ref> [CvA, C, P1, JY] </ref>. This enables proactive version for many systems based on exponentiation with secret keys in known domains. (We stress, however, that this methodology is not universal, e.g. RSA and factoring based systems are not covered by this work). EXAMPLES. <p> This is different than the unforgeability requirement in the case of a signature scheme. Naturally, we require simulatability of the threshold encryption scheme given such ciphertext, cleartext pairs. Similarly, P SS can be employed to proactivize the threshold signature verification protocols <ref> [P1, JY] </ref> for undeniable signatures [CvA, C].
Reference: [P2] <author> T.P. Pedersen, </author> <title> A threshold cryptosystem without a trusted party, </title> <booktitle> Advances in Cryptology - Eurocrypt 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 547, </volume> <editor> D. Davies ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 129-140. </pages>
Reference-contexts: lifetime of a proactive secret sharing scheme is slotted into time periods, which are separated by relatively short update phases during which protocol Update re-randomizes the the secret sharing and recovers any corrupted information. * Init: Protocol Init is the distributed verifiable secret sharing protocol of Feldman [F] (see also <ref> [P2] </ref> for a simple presentation of that protocol), where each active party serves as a distributor and each share x i (of party i) results from adding up all the sub-shares given to party i by each of the distributors (including i itself).
Reference: [P3] <author> T.P. Pedersen, </author> <title> Non-interactive and information theoretic secure verifiable secret sharing, </title> <booktitle> Advances in Cryptology - Crypto 91 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 576, </volume> <editor> J. Feigenbaum ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> pp. 129-140. </pages>
Reference: [RSA] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> A Method for Obtaining Digital Signature and Public Key Cryp-tosystems, </title> <journal> Comm. of ACM, </journal> <volume> 21 (1978), </volume> <pages> pp. 120-126. </pages>
Reference: [Sch] <author> C. P. Schnorr, </author> <title> Efficient Signature Generation for Smart Cards, </title> <booktitle> Advances in Cryptology - Crypto 89 Proceedings, Lecture Notes in Computer Science Vol. </booktitle> <volume> 435, </volume> <editor> G. Brassard ed., </editor> <publisher> Springer-Verlag, </publisher> <year> 1989, </year> <pages> pp. 239-252 </pages>
Reference-contexts: In particular, we show proactive threshold solutions to DSS signatures [NIST, GJKR1], other ElGamal-type signatures [E], like the one proposed in Ag-new, Mullin, and Vanstone [AMV, H], undeniable 3 signatures [CvA, C], Schnorr's signatures <ref> [Sch] </ref> (as well as its variant for e-cash used in [Br]), and the signature scheme by Chaum and Peder sen used in wallet databases [CP]. * We claim that the above outlined methodology of proactivizing public-key signature schemes can be applied to other public-key systems. <p> applicable, because the change of public keys in these systems would involve very costly actions of infrastructural nature. * In electronic commerce schemes, a compromised signature key of a bank could produce huge eco nomic gains to the attacker (i.e., huge losses for 4 Scheme DSS [NIST] AMV [AMV] Schnorr <ref> [Sch] </ref> Undeniable [CvA] Chaum/Pederson [CP] Generation s = k 1 (m + xr) s = xm kr e = h (m; r) s = m x s = m x s = k + xe = m k d = k + cx Signature (s; r) (s; r) (s; r) s <p> Corollary 4.2 The following signature schemes are proactivizable: 1) DSS [NIST, GJKR1] 2) AMV-Harn [AMV, H] 3) Schnorr <ref> [Sch] </ref> (and its blind variant [Br]) 4) undeniable signatures [CvA, C] 5) Chaum/Pedersen [CP] The proof of this Corollary will rely on exhibiting for each of the above signature schemes, a threshold version which meets the robustness and simulatabil-ity requirements as specified in section 4.2. <p> In particular, [GJKR1] present a detailed scheme for threshold DSS [NIST], and show the unforgeability, robustness and simulatability conditions required for our results to hold. Similar mechanisms and arguments can be applied to show the security of the threshold version of Schnorr's signature <ref> [Sch] </ref>, AMV-signatures [AMV, H], undeniable signatures [CvA, C], and the signatures by Chaum/Pedersen [CP]. We refer to [GJKR1] for the methodology of proving the simulatability requirement for these schemes. Proactivization of Other Public-Key Systems.
Reference: [Sh] <author> A. Shamir, </author> <title> How to share a secret, </title> <journal> Comm. of ACM, </journal> <volume> 22 (1979), </volume> <pages> pp. 612-613. </pages>
Reference-contexts: strong adversaries, especially when the breaking of such a system represents a significant economic gain for the attacker. 1 The need to protect against such memory access attacks has been recognized in the cryptographic literature long ago, particularly with the introduction of the notion of secret sharing (or threshold) schemes <ref> [Sh, Bl] </ref>. Secret sharing can be used for the distribution of a sensitive private key among different servers. To perform the private operation, e.g., a signature, the key is temporarily reconstructed from a subset of shares. <p> We skip the definitions of unforgeable signature schemes as achieved by the basic signature schemes we employ, (a strong notion of unforgeability is given in [GMR2]). We also skip the definition of secret sharing <ref> [Sh] </ref>. We do, however, recollect the definitions of robust threshold signature schemes and of proactive secret sharing, and then we define proactively secure signature schemes. ROBUST THRESHOLD SIGNATURE SCHEME. <p> in S of elements I = (fx 1 ; : : : ; x n g; fy 1 ; : : : ; y n ; yg) s.t. fx 1 ; : : : ; x n g form a random (b n 2 c; n)-threshold polynomial secret sharing (see <ref> [Sh] </ref>) of a number x s.t. y = g x , and y i = g x i for every i 2 f1 : : : ng. 4 All exponentiations are performed in Z fl p .
References-found: 36

