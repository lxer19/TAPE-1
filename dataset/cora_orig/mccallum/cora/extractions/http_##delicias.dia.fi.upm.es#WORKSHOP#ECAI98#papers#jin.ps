URL: http://delicias.dia.fi.upm.es/WORKSHOP/ECAI98/papers/jin.ps
Refering-URL: http://delicias.dia.fi.upm.es/WORKSHOP/ECAI98/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: email: fZ.Jin@ulst.ac.ukg  
Title: Automatically Acquiring the Requirements of Business Information Systems by using Business Ontology  
Author: Z.Jin, D.Bell and F.G.Wilkie 
Keyword: Requirement Elicitation, Business Information Systems, Knowledge-based Approach, Ontology, Generic Domain Model, Conceptual Graphs, Knowledge Representation, Reuse  
Address: United Kingdom  
Affiliation: School of Information and Software Engineering, University of Ulster, the  
Abstract: Requirement elicitation is the most important parts in the development process of the Business Information Systems(BIS). Errors made at this stage are extremely expensive to correct when they are discovered during testing or during actual working. No ideal methods have been presented up to now. This paper proposes an approach for automatically acquiring the customers' requirement by reusing the domain knowledge. Our knowledge base contains a business ontology and a set of generic domain models. By using this approach, the customers can describe their business information in a restricted natural language which do not contain any software terminology. And then, the construction of the application requirement specification can be divided into: selection of the domain, creation of the instance concepts, inheritance of the attributes and production of the specification. The construction algorithm has been given in this paper. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A.Finkelstein, J.Kramer, B.Nuseibeh, L.Finkelstein, and M.Goedicke. </author> <title> Viewpoints: a framework for integrating multiple perspectives in system development. </title> <journal> International Journal of Software Engineering and Knowledge Engineering, </journal> <volume> 2(1) </volume> <pages> 31-57, </pages> <year> 1992. </year>
Reference: [2] <author> B.Nuseibeh, J.Kramer, and A.Finkelstein. </author> <title> A framework for expressing the relationships between multiple views in requirements specification. </title> <journal> IEEE Transactions on Software Engineering, </journal> 20(10) 760-773, 1994. 
Reference: [3] <author> Grady Booch. </author> <title> Object-Oriented Analysis and Design. </title> <address> Redwood City, California: Benjamin/Cummings, </address> <year> 1994. </year>
Reference-contexts: But we can make the requirement specification as close as possible with the needs of the customers and let the unmatched parts be smaller and smaller. A variety of techniques to enhance requirements have been developed during the past years: SADT [7, 6], object-oriented analysis <ref> [3, 13] </ref>, and rapid prototyping [14, 23] ect.
Reference: [4] <author> Kyo C.Kang, Sholom G.Cohen, James A.Hess, William E.Novak, and A.Spencer Peterson. </author> <title> Feature-oriented domain analysis (FODA) feasibility study. </title> <type> Technical Report CMU/SEI-90-TR-21, </type> <institution> Pittsburgh, PA: Software Engineering Institute, Carnegie Mellon University, </institution> <year> 1990. </year>
Reference: [5] <author> Don D.Roberts. </author> <title> The Existential Graphs of Charles S.Peirce. </title> <publisher> Mouton, </publisher> <address> The Hague, </address> <year> 1973. </year>
Reference-contexts: Their power for representing meaning rests in their kinship with semantic networks, which their power for reasoning is derived from their origins in the formal logic (exstential graphs) of C.S.Peirce <ref> [5] </ref> and by formal mappings from conceptual graphs to logic formulas. This subsection main summarizes some notations used in this paper.
Reference: [6] <author> D.T.Ross. </author> <title> Applications and extensions of SADT. </title> <journal> IEEE Computer, </journal> <volume> 18(4) </volume> <pages> 25-35, </pages> <year> 1985. </year>
Reference-contexts: But we can make the requirement specification as close as possible with the needs of the customers and let the unmatched parts be smaller and smaller. A variety of techniques to enhance requirements have been developed during the past years: SADT <ref> [7, 6] </ref>, object-oriented analysis [3, 13], and rapid prototyping [14, 23] ect.
Reference: [7] <author> D.T.Ross and J.Kenneth E.Schoman. </author> <title> Structured analysis for requirements definition. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 3(1) </volume> <pages> 6-15, </pages> <year> 1977. </year>
Reference-contexts: But we can make the requirement specification as close as possible with the needs of the customers and let the unmatched parts be smaller and smaller. A variety of techniques to enhance requirements have been developed during the past years: SADT <ref> [7, 6] </ref>, object-oriented analysis [3, 13], and rapid prototyping [14, 23] ect.
Reference: [8] <author> H.B. Woolf ed. </author> <title> Webster's new collegiate dictionary. MA: </title> <editor> G. & C. </editor> <publisher> Merriam Company, </publisher> <year> 1981. </year>
Reference-contexts: Some conclusions will be presented in Section 6. 2 Architecture of the Requirement Elicitation based on Business On tology Recently, ontology becomes a very hot topic in almost every fields of computer science. According to the Web-ster's dictionary <ref> [8] </ref>, ontology is a particular theory about the nature of being or the kinds of existents. This definition is in a very general level. We prefer a more special one. In [21], the authors report the defintion:"Knowledge engineering aims to represent formally the above existents.
Reference: [9] <editor> J.Rumbaugh et al. </editor> <booktitle> Object-Oriented Modelling and Design. </booktitle> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: There are several approaches to build the representation of the domain entities and their relationships by the domain information analysis. The information model may take the form of an entity-relationship (ER) model [16], an object-oriented model <ref> [9] </ref> or other representations. All of these forms are to ensure the proper data abstractions and decompositions.
Reference: [10] <author> G.A.Miller. </author> <title> WordNet: A lexical database for english. </title> <journal> Communications of ACM, </journal> <pages> pages 39-41, </pages> <year> 1995. </year>
Reference-contexts: Those newly introduced nodes will be treated as the concept nodes in application description. Some graphs inheritance operations are shown in Table 5. There may be the case that the two concepts can not be exactly matched. We can use some other tools on words meaning, e.g. Wordnet <ref> [10] </ref>, to handle the synonym problem, the homonym problem, the subclass problem and the generality problem. 5.2.4 Creating objects 10 Table 5: Some Graphs Inheritance Operations canonical graphs application description graphs application requirement graphs [type1:A](nondefined node) [type1:A] [type1:A] [type1:A] ) No=Yes nonsense [N](arc)![type2:*] [type1:A] ) [type1:A]) [type1:A]) [N](arc)![type:X] (arc)![type2:B] (arc)![type:B] [type1:A]
Reference: [11] <author> J.F.Sowa. </author> <title> Conceptual Structure: Information Processing in Mind and Machine. </title> <publisher> Addison-Wesley Publisher, </publisher> <address> Reading, Mass, USA, </address> <year> 1984. </year>
Reference-contexts: We propose using the representation of conceptual graphs <ref> [11] </ref> as a formal basis of our approach. Conceptual graphs, an extension of semantic networks, provide a very useful tool for representing meaning and combining knowledge or meaning.
Reference: [12] <author> J.C.S.P. Leite and P.A.Freeman. </author> <title> Requirements validation through viewpoint resolution. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 17(12) </volume> <pages> 1253-1269, </pages> <year> 1991. </year>
Reference: [13] <author> Alan M.Davis. </author> <title> Software Requirements: Object, Functions and States. </title> <publisher> Prentice-Hall, </publisher> <year> 1993. </year>
Reference-contexts: But we can make the requirement specification as close as possible with the needs of the customers and let the unmatched parts be smaller and smaller. A variety of techniques to enhance requirements have been developed during the past years: SADT [7, 6], object-oriented analysis <ref> [3, 13] </ref>, and rapid prototyping [14, 23] ect.
Reference: [14] <author> M.Smith. </author> <title> Software Prototyping. </title> <address> New York: McGraw Hill, </address> <year> 1991. </year>
Reference-contexts: A variety of techniques to enhance requirements have been developed during the past years: SADT [7, 6], object-oriented analysis [3, 13], and rapid prototyping <ref> [14, 23] </ref> ect.
Reference: [15] <author> Hans Nissen, Manfred Jeusfeld, Matthias Jarke, Georg Zemanek, and Harald Huber. </author> <title> Managing multiple requirements perspectives with metamodels. </title> <journal> IEEE Software, </journal> <volume> 12(6) </volume> <pages> 37-48, </pages> <year> 1996. </year> <month> 12 </month>
Reference: [16] <author> P.Chen. </author> <title> The entity-relationship model towards a unified view of data. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 1(1) </volume> <pages> 9-36, </pages> <year> 1976. </year>
Reference-contexts: There are several approaches to build the representation of the domain entities and their relationships by the domain information analysis. The information model may take the form of an entity-relationship (ER) model <ref> [16] </ref>, an object-oriented model [9] or other representations. All of these forms are to ensure the proper data abstractions and decompositions.
Reference: [17] <author> R.Lu and Z.Jin. </author> <title> An multi-agent and pseudo-natural language approach for intelligent information service. </title> <booktitle> In Proceedings of the International Conference on the Software Engineering and the Knowledge Engineering (SEKE'97), </booktitle> <address> Madrid Spain, </address> <year> 1997. </year>
Reference-contexts: is assumed to come from external sources. 4.5 Other Domain Knowledge Other domain knowledge includes the synonymous relationships, subsumptive relationships, aggregation relationships and specification/generalization relationships between concepts in this domain. 5 Construction of Application Requirement 5.1 Customers' Needs We allow the customers writing their needs in a restricted natural language <ref> [18, 17] </ref>. Our sublanguage has limited vocabulary and only contains the context-free sentences. Some troublesome constructions have been restricted. For example, the interrogatiove and imperative sentences are not allowed to occur in customers' documennt. A simple example in the retail domain could be: Mini-Tesco is a retail company.
Reference: [18] <author> R.Lu, Z.Jin, and R.Wan. </author> <title> Requirement specification in pseudo-natural language in PROMIS. </title> <booktitle> In Proceedings of COMPSAC'95, </booktitle> <address> USA, </address> <year> 1995. </year>
Reference-contexts: is assumed to come from external sources. 4.5 Other Domain Knowledge Other domain knowledge includes the synonymous relationships, subsumptive relationships, aggregation relationships and specification/generalization relationships between concepts in this domain. 5 Construction of Application Requirement 5.1 Customers' Needs We allow the customers writing their needs in a restricted natural language <ref> [18, 17] </ref>. Our sublanguage has limited vocabulary and only contains the context-free sentences. Some troublesome constructions have been restricted. For example, the interrogatiove and imperative sentences are not allowed to occur in customers' documennt. A simple example in the retail domain could be: Mini-Tesco is a retail company.
Reference: [19] <author> Harry S.Delugach. </author> <title> Specifying multiple-viewed software requirements with conceptual graphs. </title> <journal> Journal of Systems and Software, </journal> <volume> 19 </volume> <pages> 207-224, </pages> <year> 1992. </year>
Reference-contexts: And some integrated multiple-viewed methods <ref> [19, 20, 24] </ref> for the software requirements development has also been proposed. It aims to combine multiple views of participants with the ability for the participants to gain feedback from other views.
Reference: [20] <author> Harry S.Delugach. </author> <title> Conceptual integration in multiple viewed requirement development. </title> <type> Technical Report TR-UAH-CS-1997-03, </type> <institution> Computer Science Department, University of Alabama in Huntsville, </institution> <year> 1997. </year>
Reference-contexts: And some integrated multiple-viewed methods <ref> [19, 20, 24] </ref> for the software requirements development has also been proposed. It aims to combine multiple views of participants with the ability for the participants to gain feedback from other views.
Reference: [21] <author> Mike Uschold and Michael Gruninger. ONTOLOGIES: </author> <title> Principles, methods and applications. </title> <type> Technical Report AIAI-TR-191, </type> <institution> Artificial Intelligence Application Institute, University of Edinburgh, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: According to the Web-ster's dictionary [8], ontology is a particular theory about the nature of being or the kinds of existents. This definition is in a very general level. We prefer a more special one. In <ref> [21] </ref>, the authors report the defintion:"Knowledge engineering aims to represent formally the above existents. Conceptualization is the key issue in knowledge representation which consists of a set of objects, concepts and other entities about which knowledge is being expressed and of relationships that hold among them.
Reference: [22] <author> Axel van Lamsweerde, R.Darimont, and P.Massonet. </author> <title> Goal-directed elaboration of requirements for a meeting scheduler: Problems and lessons learned. </title> <booktitle> In Proceedings of RE'95, 2nd International Symposium on Requirements Engineering, </booktitle> <address> York, 1995. </address> <publisher> IEEE. </publisher>
Reference: [23] <editor> W.Bischofberger and G.Pomberger eds. </editor> <booktitle> Prototype-Oriented Software Development. </booktitle> <address> Berlin, Germany, </address> <publisher> Springer Verlag, </publisher> <year> 1992. </year>
Reference-contexts: A variety of techniques to enhance requirements have been developed during the past years: SADT [7, 6], object-oriented analysis [3, 13], and rapid prototyping <ref> [14, 23] </ref> ect.
Reference: [24] <author> W.R.Cyre. </author> <title> Capture, integration, and analysis of digital system requirement with conceptual graphs. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 9(1) </volume> <pages> 8-23, </pages> <year> 1997. </year>
Reference-contexts: And some integrated multiple-viewed methods <ref> [19, 20, 24] </ref> for the software requirements development has also been proposed. It aims to combine multiple views of participants with the ability for the participants to gain feedback from other views.
Reference: [25] <author> Z.Jin P.Sebillot and F.Danna. </author> <title> A knowledge-based approach for analyzing and understanding the students' sentences. </title> <booktitle> In Proceedings of the Natural Language Processing Pacific Rim Symposium 1997 (NLPRS'97), </booktitle> <address> Thailand, </address> <year> 1997. </year>
Reference-contexts: The third sentence defines the tasks of its sales clerk. And the fourth sentence states the tasks of its manager. 5.2 Algorithm skeleton for generating an application requirement graph 5.2.1 Recognizing concepts An extension of concetual dependency theory <ref> [25, 26] </ref> has been used to build the conceptual dependency structure for each sentence in the customers' document. Table 4 shows the concept entities in the above example.

References-found: 25

