URL: http://www.cs.columbia.edu/~jdrosen/orals/oral.ps
Refering-URL: http://www.cs.columbia.edu/~jdrosen/
Root-URL: http://www.cs.columbia.edu
Email: jdrosen@bell-labs.com  
Phone: TEL: +1 908 949-6418  
Title: Internet Telephony: A (Partial) Research Agenda  
Author: Jonathan Rosenberg 
Date: October 17, 1997  
Address: Rm. 4C-526 101 Crawfords Corner Rd. Holmdel, NJ 07733  
Affiliation: Bell Laboratories and Columbia U.  
Abstract-found: 0
Intro-found: 1
Reference: <institution> References </institution>
Reference: [1] <author> H. Schulzrinne, </author> <title> "Re-engineering the telephone system," </title> <booktitle> in Proc. of IEEE Singapore International Conference on Networks (SICON), </booktitle> <address> (Singapore), </address> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: Such cost structures are likely to change, possibly making the costs identical. Despite this, there remain many reasons why Internet telephony is desirable for both clients and service providers alike. For clients, Internet telephony can provide better service than traditional telephony <ref> [1] </ref>. Wideband speech coders, such as G.722 [2], can offer higher quality voice. The powerful user interfaces that a PC can provide can enable many complex functions, such as multi-party calls, stereophonic voice reproduction, integration with calendar and appointment book tools, email integration, complex call management, and personal mobility. <p> While some of these features can be obtained with traditional CTI systems (like integration with calendar tools), not all of them can (like multi-party calls). CTI is also extremely complex, and supporting applications which use both the telephony network and the Internet is likely to introduce numerous complications <ref> [1] </ref>. From a service provider standpoint, there is the "holy grail" of networking a single network architecture which can support a wide range of services, including both telephony and data.
Reference: [2] <author> ITU-T, </author> <title> Recommendation G.722: </title> <type> 7 kHz audio-coding within 64 kbit/s, </type> <year> 1988. </year>
Reference-contexts: Such cost structures are likely to change, possibly making the costs identical. Despite this, there remain many reasons why Internet telephony is desirable for both clients and service providers alike. For clients, Internet telephony can provide better service than traditional telephony [1]. Wideband speech coders, such as G.722 <ref> [2] </ref>, can offer higher quality voice. The powerful user interfaces that a PC can provide can enable many complex functions, such as multi-party calls, stereophonic voice reproduction, integration with calendar and appointment book tools, email integration, complex call management, and personal mobility.
Reference: [3] <author> K. Sriram and W. Whitt, </author> <title> "Characterizing superposition arrival processes in packet multiplexers for voice and data," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 833-846, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical <ref> [3] </ref> [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [4] <author> K. Sriram and D. M. Lucantoni, </author> <title> "Traffic smoothing effects of bit dropping in a packet voice multiplexer," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (New Or-leans), </address> <pages> pp. 759-769, </pages> <publisher> IEEE, </publisher> <month> Mar. </month> <year> 1988. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] <ref> [4] </ref> [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [5] <author> K. Sriram, R. S. McKinney, and M. H. Sherif, </author> <title> "Voice packetization and compression in broadband ATM networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 294-304, </pages> <month> Apr. </month> <year> 1991. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] <ref> [5] </ref> [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [6] <author> N. Yin, T. E. Stern, and S. Li, </author> <title> "Performance analysis of a priority-oriented packet voice system," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Francisco, California), </address> <pages> pp. 856-863, </pages> <publisher> IEEE, </publisher> <month> Apr. </month> <year> 1987. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] <ref> [6] </ref> [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [7] <author> K. Sriram and D. M. Lucantoni, </author> <title> "Traffic smoothing effects of bit dropping in a packet voice multiplexer," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 37, </volume> <pages> pp. 703-712, </pages> <month> July </month> <year> 1989. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] <ref> [7] </ref> [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [8] <author> J. N. Daigle and J. D. Langford, </author> <title> "Models for analysis of packet voice communications systems," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 847-855, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] <ref> [8] </ref> [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [9] <author> C. J. Weinstein and J. W. Forgie, </author> <title> "Experience with speech communication in packet networks," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 963-980, </pages> <month> Dec. </month> <year> 1983. </year> <note> also DTIC ESD-TR-84-234. </note>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] <ref> [9] </ref> [10] (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [10] <author> H. Heffes and D. M. Lucantoni, </author> <title> "A Markov modulated characterization of packetized voice and data traffic and related statistical multiplexer performance," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-4, </volume> <pages> pp. 856-867, </pages> <month> Sept. </month> <year> 1986. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] <ref> [10] </ref> (too name just a few) and practical [11] [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment.
Reference: [11] <author> D. Cohen, </author> <title> "Issues in transnet packetized voice communications," </title> <booktitle> in Proceedings of the Fifth Data Communications Symposium, (Snowbird, Utah), </booktitle> <pages> pp. 6-10 - 6-13, </pages> <publisher> ACM, IEEE, </publisher> <month> Sept. </month> <year> 1977. </year> <month> 13 </month>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical <ref> [11] </ref> [12] [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection. <p> Unfortunately, since network delays can vary quite significantly, these playout buffers need to be adaptive. At select points in time, the delay inside the buffer is either increased, or decreased. Several algorithms for such adaptation have been proposed <ref> [11] </ref> [54] [55]. All so far have inserted or removed delay at the beginning of talkspurts. This decision is based on the observation that silence periods in speech can be extended or contracted without significant impact on perceived speech quality. To date, these algorithms have all been ad-hoc.
Reference: [12] <author> D. Cohen, </author> <title> "A protocol for packet-switching voice communication," </title> <journal> Computer Networks, </journal> <volume> vol. 2, </volume> <pages> pp. </pages> <address> 320--331, </address> <month> September/October </month> <year> 1978. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] <ref> [12] </ref> [13] [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection.
Reference: [13] <author> D. Cohen, </author> <title> "A network voice protocol: NVP-II," </title> <type> technical report, </type> <institution> University of Southern California/ISI, Marina del Ray, California, </institution> <month> Apr. </month> <year> 1981. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] <ref> [13] </ref> [14] [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection. <p> More recently, the G.764 [15] specification was developed. These, and other related protocols <ref> [13] </ref> [17], generally provide services such as sequence numbering, timestamps, and priority bits for selectively dropping portions of the voice packets. More recently, the RTP (Real Time Transport Protocol) [18] has been developed for transport of real time traffic (voice included), over the Internet.
Reference: [14] <author> D. Cohen, </author> <title> "Specifications for the network voice protocol (NVP)," </title> <type> Tech. Rep. RFC 741, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1977. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] <ref> [14] </ref> [15] [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection. <p> As is clear from the discussion so far, there are many challenges towards providing wide scale Internet telephony, so this listing here can at best be considered partial. 2 Transport Protocol Issues The development of transport protocols for packet voice dates back to the Network Voice Protocol (NVP) <ref> [14] </ref>. More recently, the G.764 [15] specification was developed. These, and other related protocols [13] [17], generally provide services such as sequence numbering, timestamps, and priority bits for selectively dropping portions of the voice packets.
Reference: [15] <author> ITU-T, </author> <title> Recommendation G.764: Voice packetization - packetized voice protocols, </title> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] <ref> [15] </ref> [16] have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection. <p> More recently, the G.764 <ref> [15] </ref> specification was developed. These, and other related protocols [13] [17], generally provide services such as sequence numbering, timestamps, and priority bits for selectively dropping portions of the voice packets.
Reference: [16] <author> S. Casner and S. Deering, </author> <title> "First IETF Internet audiocast," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 92-97, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: Packet telephony itself is not new; many theoretical [3] [4] [5] [6] [7] [8] [9] [10] (too name just a few) and practical [11] [12] [13] [14] [15] <ref> [16] </ref> have taken place over nearly thirty years . However, there are several aspects of Internet telephony which make the problem different: 1. Wide-scale deployment. Deploying Internet telephony is not just a matter of solving the problems of a single point to point voice connection.
Reference: [17] <author> R. Cole, </author> <title> "PVP a packet video protocol," </title> <type> W-Note 28, </type> <institution> Information Sciences Institute, University of Southern California, </institution> <address> Los Angeles, California, </address> <month> Aug. </month> <year> 1981. </year>
Reference-contexts: More recently, the G.764 [15] specification was developed. These, and other related protocols [13] <ref> [17] </ref>, generally provide services such as sequence numbering, timestamps, and priority bits for selectively dropping portions of the voice packets. More recently, the RTP (Real Time Transport Protocol) [18] has been developed for transport of real time traffic (voice included), over the Internet.
Reference: [18] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, "RTP: </author> <title> a transport protocol for real-time applications," </title> <type> Tech. Rep. RFC 1889, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: More recently, the G.764 [15] specification was developed. These, and other related protocols [13] [17], generally provide services such as sequence numbering, timestamps, and priority bits for selectively dropping portions of the voice packets. More recently, the RTP (Real Time Transport Protocol) <ref> [18] </ref> has been developed for transport of real time traffic (voice included), over the Internet. Like G.764, it provides services like timestamps and sequence numbers. It is also "multicast-friendly".
Reference: [19] <author> S. Casner and V. Jacobson, </author> <title> "Compressing IP/UDP/RTP headers for low-speed serial links," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: In particular, the following difficulties have been observed: 1. Congestion: In many cases, the access bandwidths for users will be small compared to network bandwidths (28.8 kb/s modems, for example, can now handle multimedia RTP sessions when RTP header compression <ref> [19] </ref> is used). We also anticipate that many multicast RTP sessions will exhibit rapid increases in group membership at certain points in time. This can happen for a number of reasons. Many sessions have precise start times.
Reference: [20] <author> K. Almeroth and M. Ammar, </author> <title> "Collecting and modeling the join/leave behavior of multicast group members in the mbone," </title> <booktitle> in Proceedings of the Symposium on High Performance Distributed Computing, </booktitle> <address> (Syracuse, NY), </address> <pages> pp. 209-16, </pages> <publisher> IEEE, </publisher> <month> Aug. </month> <year> 1996. </year>
Reference: [21] <author> K. Almeroth and M. Ammar, </author> <title> "Multicast group behavior in the internet's multicast backbone (mbone)," </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 35, </volume> <month> June </month> <year> 1997. </year>
Reference: [22] <author> P. Sharma, D. Estrin, S. Floyd, and V. Jacobson, </author> <title> "Scalable timers for soft state protocols," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Kobe, Japan), </address> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: These problems are generally related to the fact that the protocol is using timers which are (1) soft state, (2) dynamic and scalable, and (3) based on distributed state. Problems related to dynamic soft state timers have recently been examined <ref> [22] </ref> [23], but ours is the first to study phenomena related to dynamic soft state timers based on distributed state [24] [25]. Most of our efforts have focused on the problem of congestion. Our solution is a class of distributed adaptive timer algorithms called reconsideration.
Reference: [23] <author> P. Sharma, D. Estrin, S. Floyd, and V. Jacobson, </author> <title> "Scalable timers for soft state protocols," </title> <type> technical report, </type> <institution> University of Southern California, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: These problems are generally related to the fact that the protocol is using timers which are (1) soft state, (2) dynamic and scalable, and (3) based on distributed state. Problems related to dynamic soft state timers have recently been examined [22] <ref> [23] </ref>, but ours is the first to study phenomena related to dynamic soft state timers based on distributed state [24] [25]. Most of our efforts have focused on the problem of congestion. Our solution is a class of distributed adaptive timer algorithms called reconsideration.
Reference: [24] <author> J. Rosenberg and H. Schulzrinne, </author> <title> "Timer reconsideration for enhanced RTP scalability," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Problems related to dynamic soft state timers have recently been examined [22] [23], but ours is the first to study phenomena related to dynamic soft state timers based on distributed state <ref> [24] </ref> [25]. Most of our efforts have focused on the problem of congestion. Our solution is a class of distributed adaptive timer algorithms called reconsideration. The basic mechanism is to "reconsider" transmission of a packet right before it is sent. <p> We are applying statistical sampling to resolve the state storage problem, statistical polling to solve the delay problem, a variant on reconsideration to solve the BYE storm problem, and a combination of filtering and reverse reconsideration to solve the premature timeout problem. For more information on these algorithms, see <ref> [24] </ref> [25]. A brief summary can be found in Appendix A. 2.2 RTP Multiplexing The previous section discussed some of the scalability problems with RTP. However, there are additional issues surrounding RTP which remain to be addressed.
Reference: [25] <author> J. Rosenberg and H. Schulzrinne, </author> <title> "Timer reconsideration for enhanced rtp scalability," </title> <note> in Submitted for publication in IEEE Infocom '98, 1998. submitted. </note>
Reference-contexts: Problems related to dynamic soft state timers have recently been examined [22] [23], but ours is the first to study phenomena related to dynamic soft state timers based on distributed state [24] <ref> [25] </ref>. Most of our efforts have focused on the problem of congestion. Our solution is a class of distributed adaptive timer algorithms called reconsideration. The basic mechanism is to "reconsider" transmission of a packet right before it is sent. <p> For more information on these algorithms, see [24] <ref> [25] </ref>. A brief summary can be found in Appendix A. 2.2 RTP Multiplexing The previous section discussed some of the scalability problems with RTP. However, there are additional issues surrounding RTP which remain to be addressed.
Reference: [26] <author> D. Hoffman, G. Fernando, and V. Goyal, </author> <title> "RTP payload format for MPEG1/MPEG2 video," </title> <type> Tech. Rep. </type> <institution> RFC 2038, Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Payload formats specify an application specific sub-layer just above RTP; these formats provide additional functions needed for just that application. For example, payload formats have been defined to carry various speech and video coder formats <ref> [26] </ref> [27] [28] [29] . All of these formats describe how RTP is to be used for carrying a single media session between two endpoints. There are scenarios, however, where it is more desirable to multiplex many voice connections into the same transport level connection, and into the same packet.
Reference: [27] <author> L. Berc, W. Fenner, R. Frederick, and S. McCanne, </author> <title> "RTP payload format for JPEG-compressed video," </title> <type> Tech. Rep. </type> <institution> RFC 2035, Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Payload formats specify an application specific sub-layer just above RTP; these formats provide additional functions needed for just that application. For example, payload formats have been defined to carry various speech and video coder formats [26] <ref> [27] </ref> [28] [29] . All of these formats describe how RTP is to be used for carrying a single media session between two endpoints. There are scenarios, however, where it is more desirable to multiplex many voice connections into the same transport level connection, and into the same packet.
Reference: [28] <author> T. Turletti and C. Huitema, </author> <title> "RTP payload format for H.261 video streams," </title> <type> Tech. Rep. </type> <institution> RFC 2032, Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: Payload formats specify an application specific sub-layer just above RTP; these formats provide additional functions needed for just that application. For example, payload formats have been defined to carry various speech and video coder formats [26] [27] <ref> [28] </ref> [29] . All of these formats describe how RTP is to be used for carrying a single media session between two endpoints. There are scenarios, however, where it is more desirable to multiplex many voice connections into the same transport level connection, and into the same packet.
Reference: [29] <author> C. Zhu, </author> <title> "RTP payload format for H.263 video streams," </title> <type> Tech. Rep. RFC 2190, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: Payload formats specify an application specific sub-layer just above RTP; these formats provide additional functions needed for just that application. For example, payload formats have been defined to carry various speech and video coder formats [26] [27] [28] <ref> [29] </ref> . All of these formats describe how RTP is to be used for carrying a single media session between two endpoints. There are scenarios, however, where it is more desirable to multiplex many voice connections into the same transport level connection, and into the same packet.
Reference: [30] <author> ITU-T, </author> <title> Recommendation G.723.1: Dual Rate Speech Coder for Multimedia Communications Transmitting at 5.3 and 6.3 kbits/s, </title> <month> Mar. </month> <year> 1996. </year>
Reference-contexts: Currently, gateways place each voice call in a separate transport connection, and thus the data from each user goes in separate packets. Speech compression is often employed between gateways to improve network utilization, with rates between 6.3 kbps <ref> [30] </ref> and 8 kbps [31]. At such 4 low rates, the payload sizes are quite small, and IP-related overhead is substantial - 40 bytes for IP/UDP/RTP.
Reference: [31] <author> ITU-T, </author> <title> Recommendation G.729: Coding of Speech at 8 kbit/s using Conjugate Structure Algebraic Code Excited Linear Prediction (CS-ACELP), </title> <month> Mar. </month> <year> 1996. </year>
Reference-contexts: Currently, gateways place each voice call in a separate transport connection, and thus the data from each user goes in separate packets. Speech compression is often employed between gateways to improve network utilization, with rates between 6.3 kbps [30] and 8 kbps <ref> [31] </ref>. At such 4 low rates, the payload sizes are quite small, and IP-related overhead is substantial - 40 bytes for IP/UDP/RTP.
Reference: [32] <author> T1S1, </author> <title> TIS1.5 Proposed ITU-T Contribution Concerning AAL-CU, </title> <month> December </month> <year> 1996. </year> <month> 14 </month>
Reference-contexts: This drastically reduces overhead. Such packet voice multiplexing techniques have been used in both ATM <ref> [32] </ref> and Frame Relay, but have not yet been used in IP networks. What are the required protocol structures for carrying multiple voice payloads in an RTP packet? Such a protocol will surely require a certain amount of overhead per user.
Reference: [33] <author> J. Rosenberg and H. Schulzrinne, </author> <title> "Issues and options for an aggregation service within RTP," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: What is the smallest amount of overhead possible? What is the reduction in capabilities of the protocol as the overhead is reduced? We have studied this problem, and developed several different multiplexing protocols, which vary from 8 bits of overhead per user to 12 bytes per user <ref> [33] </ref>. The services provided by all of them include: (1) channel identifiers, (2) payload type identifiers, (3) length indicators, (4) timestamps, and (5) marker bits. The protocols vary in the relative values of timestamps allowed among users, the allowable lengths, and the number of channel identifiers.
Reference: [34] <author> D. Clark and J. Wroclawski, </author> <title> "An approach to service allocation in the internet," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: It is likely that a long term solution to improving Internet quality will require all of these. Coming up with an architecture for supporting wide-spread QoS in a scalable fashion is a very active area of research, with many proposals on the table <ref> [34] </ref> [35] [36]. Such solutions will take time to develop and deploy. In the interim (which may even be forever), Internet service will continue to exhibit loss, delay, and jitter. It is for this reason that a second approach exists to the problem: application adaptation.
Reference: [35] <author> S. Shenker, C. Partridge, and R. Guerin, </author> <title> "Specification of guaranteed quality of service," </title> <type> Tech. Rep. RFC 2212, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: It is likely that a long term solution to improving Internet quality will require all of these. Coming up with an architecture for supporting wide-spread QoS in a scalable fashion is a very active area of research, with many proposals on the table [34] <ref> [35] </ref> [36]. Such solutions will take time to develop and deploy. In the interim (which may even be forever), Internet service will continue to exhibit loss, delay, and jitter. It is for this reason that a second approach exists to the problem: application adaptation.
Reference: [36] <author> J. Wroclawski, </author> <title> "Specification of the controlled-load network element service," </title> <type> Tech. Rep. RFC 2211, </type> <institution> Internet Engineering Task Force, </institution> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: It is likely that a long term solution to improving Internet quality will require all of these. Coming up with an architecture for supporting wide-spread QoS in a scalable fashion is a very active area of research, with many proposals on the table [34] [35] <ref> [36] </ref>. Such solutions will take time to develop and deploy. In the interim (which may even be forever), Internet service will continue to exhibit loss, delay, and jitter. It is for this reason that a second approach exists to the problem: application adaptation.
Reference: [37] <author> V. Paxson and S. Floyd, </author> <title> "Wide-area traffic: the failure of Poisson modeling," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (London, United Kingdom), </address> <pages> pp. 257-268, </pages> <publisher> ACM, </publisher> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: However, the applicability of such models to the Internet is questionable. The wide range of protocol and user behaviors (such as TCP) on the same network make common theoretical assumptions (like Poission arrivals) invalid <ref> [37] </ref>. There has been some more recent work on modeling the loss behavior seen by TCP traffic in a buffer [38] .
Reference: [38] <author> T. V. Lakshman and U. Madhow, </author> <title> "The performance of TCP/IP for networks with high bandwidth-delay products and random loss," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. </volume> ?, <pages> pp. </pages> -, ? <year> 1996. </year>
Reference-contexts: The wide range of protocol and user behaviors (such as TCP) on the same network make common theoretical assumptions (like Poission arrivals) invalid [37]. There has been some more recent work on modeling the loss behavior seen by TCP traffic in a buffer <ref> [38] </ref> . However, this body of work considers only a single hop, assumes TCP transfers are files of infinite size, and ignores the impact of multiple TCP sessions and other non-TCP traffic.
Reference: [39] <author> V. Paxson, </author> <title> Measurements and Analysis of End-to-End Internet Dynamics. </title> <type> PhD thesis, </type> <institution> University of California at Berkeley, Berkeley, California, </institution> <month> May </month> <year> 1997. </year>
Reference-contexts: For this reason, there has also been a number of experimental measurements to examine the service seen on the Internet, the largest being the mammoth study conducted by Vern Paxson <ref> [39] </ref>. A few studies have been taken to examine the dynamics of voice traffic [40] [41] [42].
Reference: [40] <author> J.-C. Bolot, </author> <title> "End-to-end packet delay and loss behavior in the Internet," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols (D. </booktitle> <editor> P. Sidhu, ed.), </editor> <address> (San Francisco, California), </address> <pages> pp. 289-298, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1993. </year> <note> also in Computer Communication Review 23 (4), </note> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: For this reason, there has also been a number of experimental measurements to examine the service seen on the Internet, the largest being the mammoth study conducted by Vern Paxson [39]. A few studies have been taken to examine the dynamics of voice traffic <ref> [40] </ref> [41] [42]. The key difficulty is not designing the tools and collecting the statistics (though we have developed a tool to do this for voice and video traffic), but in determining the metric to use to characterize the service. For voice traffic this is particularly problematic.
Reference: [41] <author> M. Handley, </author> <title> "An examination of mbone performance," </title> <type> tech. rep., </type> <institution> USC/ISI, </institution> <year> 1997. </year> <note> Research Report RR-97-450. </note>
Reference-contexts: For this reason, there has also been a number of experimental measurements to examine the service seen on the Internet, the largest being the mammoth study conducted by Vern Paxson [39]. A few studies have been taken to examine the dynamics of voice traffic [40] <ref> [41] </ref> [42]. The key difficulty is not designing the tools and collecting the statistics (though we have developed a tool to do this for voice and video traffic), but in determining the metric to use to characterize the service. For voice traffic this is particularly problematic.
Reference: [42] <author> M. Yajnik, J. Kurose, and D. Towsley, </author> <title> "Packet loss correlation in the MBone multicast network," </title> <booktitle> in Proceedings of Global Internet, </booktitle> <address> (London, England), </address> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: For this reason, there has also been a number of experimental measurements to examine the service seen on the Internet, the largest being the mammoth study conducted by Vern Paxson [39]. A few studies have been taken to examine the dynamics of voice traffic [40] [41] <ref> [42] </ref>. The key difficulty is not designing the tools and collecting the statistics (though we have developed a tool to do this for voice and video traffic), but in determining the metric to use to characterize the service. For voice traffic this is particularly problematic.
Reference: [43] <author> J. Rosenberg, </author> <title> "G.729 error recovery for internet telephony," </title> <type> tech. rep., </type> <institution> Columbia University, </institution> <month> May </month> <year> 1997. </year> <note> EE6880 Technical Report. </note>
Reference-contexts: metric might be, we have done some simplistic studies with the G.729 speech coder to look at two effects: (1) what is the impact of consecutive losses on decoded speech, and (2) how long after a loss does the divergence of state between encoder and decoder persist? Our preliminary results <ref> [43] </ref> suggest that isolated packet losses are not that significant (which is consistent with the goals of the recovery mechanisms engineered into the coder), but that performance degrades sharply as the number of consecutive losses jumps to two. From there on, speech quality decreases sublinearly with increasing burst length.
Reference: [44] <author> X. R. Xu, A. C. Myers, H. Zhang, and R. Yavatkar, </author> <title> "Resilient multicast support for continuous-media applications," </title> <booktitle> in Proc. International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), </booktitle> <address> (St. Louis, Missouri), </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The most common approach is with retransmission (TCP), which guarantees eventual delivery. For real-time services with tight delay constraints, retransmission introduces unacceptable delays (although this may not always be the case <ref> [44] </ref>). Forward error correction presents a more viable alternative. We refer to FEC in the most broad sense: any algorithm which transmits redundant information continuously to aid in reconstruction at the receiver. There are many techniques which have been applied for recovery of packet audio on the Internet [45].
Reference: [45] <author> C. Perkins, </author> <title> "Options for repair of streaming media," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Aug. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Forward error correction presents a more viable alternative. We refer to FEC in the most broad sense: any algorithm which transmits redundant information continuously to aid in reconstruction at the receiver. There are many techniques which have been applied for recovery of packet audio on the Internet <ref> [45] </ref>. There has recently been a flurry of interest in using traditional error correcting codes, like Reed Solomon and parity, to packets instead of bits [46] [47].
Reference: [46] <author> L. </author> <title> Rizzo, "Effective erasure codes for reliable computer communication protocols," </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 27, </volume> <pages> pp. 24-36, </pages> <month> Apr. </month> <year> 1997. </year>
Reference-contexts: There are many techniques which have been applied for recovery of packet audio on the Internet [45]. There has recently been a flurry of interest in using traditional error correcting codes, like Reed Solomon and parity, to packets instead of bits <ref> [46] </ref> [47]. For example, 5 data packets, each of length 10 bytes, can be protected by a parity packet which is the bitwise XOR of the five packets.
Reference: [47] <author> J. Nonnenmacher, E. Biersack, and D. Towsley, </author> <title> "Parity-based loss recovery for reliable multicast transmission," </title> <type> tech. rep., </type> <institution> University of Massachusetts, </institution> <year> 1997. </year> <type> Technical Report 97-17. </type>
Reference-contexts: There are many techniques which have been applied for recovery of packet audio on the Internet [45]. There has recently been a flurry of interest in using traditional error correcting codes, like Reed Solomon and parity, to packets instead of bits [46] <ref> [47] </ref>. For example, 5 data packets, each of length 10 bytes, can be protected by a parity packet which is the bitwise XOR of the five packets.
Reference: [48] <author> J.-C. Bolot and A. Vega-Garcia, </author> <title> "The case for fec-based error control for packet audio in the internet," </title> <booktitle> ACM Multimedia Systems, </booktitle> <pages> pp. </pages> -, <year> 1997. </year>
Reference-contexts: In the case of Internet telephony, 7 we know that the data represents voice. To take advantage of this for FEC, several people have proposed using redundant coders <ref> [48] </ref> [49] [50]. The idea is to run several parallel speech coders. One is the main coder, and the others are typically low bitrate, lower quality coders. Each packet not only contains samples from the main coder, but delayed samples from the redundant coders.
Reference: [49] <author> J.-C. Bolot and A. V. Garcia, </author> <title> "Control mechanisms for packet audio in the internet," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (San Fransisco, California), </address> <month> Mar. </month> <year> 1996. </year>
Reference-contexts: In the case of Internet telephony, 7 we know that the data represents voice. To take advantage of this for FEC, several people have proposed using redundant coders [48] <ref> [49] </ref> [50]. The idea is to run several parallel speech coders. One is the main coder, and the others are typically low bitrate, lower quality coders. Each packet not only contains samples from the main coder, but delayed samples from the redundant coders. <p> It is not clear how to apply traditional quantization-based rate control algorithms to voice in this context. To combat this problem, some have proposed the use of banks of speech coders, each with varying rates, and then switching between them to perform rate control <ref> [49] </ref>. This approach has some serious drawbacks, the most serious of which is the practical problem of implementing so many codecs in the same platform. It is not clear that transitioning from one coder to another will be transparent to the user.
Reference: [50] <author> V. Hardman, M. Sasse, M. Handley, and A. Watson, </author> <title> "Reliable audio for use over the internet," </title> <booktitle> in Proceedings of INET '95, </booktitle> <month> June </month> <year> 1995. </year>
Reference-contexts: In the case of Internet telephony, 7 we know that the data represents voice. To take advantage of this for FEC, several people have proposed using redundant coders [48] [49] <ref> [50] </ref>. The idea is to run several parallel speech coders. One is the main coder, and the others are typically low bitrate, lower quality coders. Each packet not only contains samples from the main coder, but delayed samples from the redundant coders.
Reference: [51] <author> C. Perkins, I. Kouvelas, V. Hardman, M. Handley, J.-C. Bolot, A. Vega-Garcia, and S. Fosse-Parisis, </author> <title> "RTP payload for redundant audio data," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year> <title> Work in progress. </title> <type> 15 </type>
Reference-contexts: This can be used to reconstruct the missing speech. This approach has been used on the mbone, and an RTP payload format for supporting it has been proposed <ref> [51] </ref>.. A third approach is interleaving. The idea is an old one; take a block of data, and spread its contents out over multiple packets. In this fashion, a loss will be spread out over multiple blocks of data, resulting in just isolated bit errors over several blocks.
Reference: [52] <author> M. W. Garrett and M. Vetterli, </author> <title> "Joint Source/Channel coding of statistically multiplexed real-time services on packet networks," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: A fourth approach is to build redundancy into the speech coder itself. In this way, algorithms can be designed for each specific coder to recover from a loss. In theory, this is probably the best way to achieve redundancy <ref> [52] </ref>. However, it is highly impractical. Speech coders are applied to many different environments Internet, ATM, the telephone network, wireless, satellite links, etc. The codecs are therefore designed to meet general requirements for loss recovery which are good for several mediums, but not optimal for any single one.
Reference: [53] <author> J. Rosenberg, </author> <title> "Reliability enhancements to nevot," </title> <type> tech. rep., </type> <institution> Columbia University, </institution> <month> Dec. </month> <year> 1996. </year> <type> CS 6998 AIS Technical Report. </type>
Reference-contexts: Therefore, it is paramount to consider how the receivers can trade off delay vs.loss. We have 8 therefore begun to examine this issue, and have developed some simple approaches for this kind of adaptation <ref> [53] </ref>. 3.3 Playout Buffer Adaptation The previous section mainly dealt with how applications adapt to deal with varying loss conditions in the Internet. Loss is not the only difficulty jitter is just as bad.
Reference: [54] <author> W. A. Montgomery, </author> <title> "Techniques for packet voice synchronization," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <pages> pp. 1022-1028, </pages> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Unfortunately, since network delays can vary quite significantly, these playout buffers need to be adaptive. At select points in time, the delay inside the buffer is either increased, or decreased. Several algorithms for such adaptation have been proposed [11] <ref> [54] </ref> [55]. All so far have inserted or removed delay at the beginning of talkspurts. This decision is based on the observation that silence periods in speech can be extended or contracted without significant impact on perceived speech quality. To date, these algorithms have all been ad-hoc.
Reference: [55] <author> R. Ramjee, J. Kurose, D. Towsley, and H. Schulzrinne, </author> <title> "Adaptive playout mechanisms for packetized audio applications in wide-area networks," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Toronto, Canada), </address> <pages> pp. 680-688, </pages> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> California, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Unfortunately, since network delays can vary quite significantly, these playout buffers need to be adaptive. At select points in time, the delay inside the buffer is either increased, or decreased. Several algorithms for such adaptation have been proposed [11] [54] <ref> [55] </ref>. All so far have inserted or removed delay at the beginning of talkspurts. This decision is based on the observation that silence periods in speech can be extended or contracted without significant impact on perceived speech quality. To date, these algorithms have all been ad-hoc.
Reference: [56] <author> S. B. Moon, J. Kurose, and D. Towsley, </author> <title> "Packet audio playout delay adjustment algorithms: performance bounds and algorithms," </title> <type> research report, </type> <institution> Department of Computer Science, University of Massachusetts at Amherst, Amherst, Massachusetts, </institution> <month> Aug. </month> <year> 1995. </year>
Reference-contexts: All so far have inserted or removed delay at the beginning of talkspurts. This decision is based on the observation that silence periods in speech can be extended or contracted without significant impact on perceived speech quality. To date, these algorithms have all been ad-hoc. Attempts have been made <ref> [56] </ref> to develop some kind of theory or bounds on the performance of such algorithms, but with limited success. We believe that there is room for additional theoretical and practical work in this area.
Reference: [57] <author> A. Demers, S. Keshav, and S. Shenker, </author> <title> "Analysis and simulation of a fair queueing algorithm," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Austin, Texas), </address> <pages> pp. 1-12, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1989. </year> <note> also in Computer Communications Review, 19 (4), </note> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: Connections which send at more than there fair share will see losses; those that do not will not see losses. An application that does not respond to loss will simply suffer. These techniques are based on approaches like fair-queueing <ref> [57] </ref> [58] [59] which is generally used with per-flow queueing, whereby each "connection" is placed in its own queue, so as to not interfere with other connections. Variations on RED [60] [61], which uses FIFO queuing with intelligent drop policies, are also being explored for this purpose.
Reference: [58] <author> H. Zhang and S. Keshav, </author> <title> "Comparison of rate-based service disciplines," </title> <booktitle> in Sigcomm '91 Symposium - Communications Architectures and Protocols, (Zrich, Switzerland), </booktitle> <pages> pp. 113-121, </pages> <publisher> ACM, </publisher> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Connections which send at more than there fair share will see losses; those that do not will not see losses. An application that does not respond to loss will simply suffer. These techniques are based on approaches like fair-queueing [57] <ref> [58] </ref> [59] which is generally used with per-flow queueing, whereby each "connection" is placed in its own queue, so as to not interfere with other connections. Variations on RED [60] [61], which uses FIFO queuing with intelligent drop policies, are also being explored for this purpose.
Reference: [59] <author> A. K. Parekh and R. G. Gallager, </author> <title> "A generalized processor sharing approach to flow control in integrated services networks | the single node case," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <volume> vol. </volume> <pages> 2, </pages> <address> (Florence, Italy), </address> <pages> pp. </pages> <address> 915-924 (7A.3), </address> <publisher> IEEE, </publisher> <month> May </month> <year> 1992. </year>
Reference-contexts: Connections which send at more than there fair share will see losses; those that do not will not see losses. An application that does not respond to loss will simply suffer. These techniques are based on approaches like fair-queueing [57] [58] <ref> [59] </ref> which is generally used with per-flow queueing, whereby each "connection" is placed in its own queue, so as to not interfere with other connections. Variations on RED [60] [61], which uses FIFO queuing with intelligent drop policies, are also being explored for this purpose.
Reference: [60] <author> S. Floyd and V. Jacobson, </author> <title> "Random early detection gateways for congestion avoidance," </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 1, </volume> <pages> pp. 397-413, </pages> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: An application that does not respond to loss will simply suffer. These techniques are based on approaches like fair-queueing [57] [58] [59] which is generally used with per-flow queueing, whereby each "connection" is placed in its own queue, so as to not interfere with other connections. Variations on RED <ref> [60] </ref> [61], which uses FIFO queuing with intelligent drop policies, are also being explored for this purpose. Given widespread deployment of these algorithms, does it become necessary for real-time applications to reduce their bandwidth usage in response to loss.
Reference: [61] <author> D. Lin and R. Morris, </author> <title> "Dynamics of random early detection," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Cannes, France), </address> <month> Sept. </month> <year> 1997. </year>
Reference-contexts: These techniques are based on approaches like fair-queueing [57] [58] [59] which is generally used with per-flow queueing, whereby each "connection" is placed in its own queue, so as to not interfere with other connections. Variations on RED [60] <ref> [61] </ref>, which uses FIFO queuing with intelligent drop policies, are also being explored for this purpose. Given widespread deployment of these algorithms, does it become necessary for real-time applications to reduce their bandwidth usage in response to loss.
Reference: [62] <author> J.-C. Bolot and T. Turletti, </author> <title> "A rate control mechanism for packet video in the internet," </title> <booktitle> in Proceedings of the Conference on Computer Communications (IEEE Infocom), </booktitle> <address> (Toronto, Canada), </address> <month> June </month> <year> 1994. </year>
Reference-contexts: This is because there is more room to "play" with video. Rate control algorithms for video are well-known, and the wide range of bitrates over which good quality video can be supported facilitate development of network adaptive rate control algorithms, such as <ref> [62] </ref>. Rate control for speech coders is virtually non-existent. This is because speech coders are generally model-based, sending parameters which represent the model. It is not clear how to apply traditional quantization-based rate control algorithms to voice in this context.
Reference: [63] <author> S. McCanne, V. Jacobson, and M. Vetterli, </author> <title> "Receiver-driven layered multicast," </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (Palo Alto, California), </address> <pages> pp. 117-130, </pages> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: More gradual, smooth transitions would perform much better. Rate adaptation in the context of multicast is an even tougher problem, since the congestion seen be various receivers may be different. Hierarchical coding, combined with layered multicast, is generally acknowledged to be the most promising approach for multicast rate adaptation <ref> [63] </ref>. The idea is to have many layers of video, each of which contributes additional information to the picture. Each layer of video is multicast to a separate multicast group. Receivers join different layers (and thus receive different rates), depending on the loss process seen along their network path.
Reference: [64] <editor> ITU-T, Recommendation G.727: </editor> <volume> 5, 4, </volume> <month> 3, </month> <title> and 2 bits sample embedded adaptive differential pulse code modulation, </title> <year> 1990. </year>
Reference-contexts: The first is how to design layered video coders; the second is how to decide which layers to join, and when. With multicast as well, the adaptation algorithms have not been applied to telephony. The only hierarchical speech coder generally available is G.727 <ref> [64] </ref>, which is old and not well suited to the Internet. The overhead of IP/UDP/RTP also makes sending layers of an already low rate coder very inefficient. The rate adaptation problem for telephony is therefore an open one.
Reference: [65] <author> J. Rosenberg, B. Suter, and H. Schulzrinne, </author> <title> "Wide area network service location," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: bandwidth usage, complexity, storage requirements, computational requirements), fast (in terms of the amount of time required to locate a gateway), and simple? We believe a very sensible approach is to use replicated databases at each ISP, and to use a multicast-based protocol for advertising attributes about gateways across the Internet <ref> [65] </ref>. ISP's can then add policy filters to populate the database with a subset of the received advertisements. <p> It should be noted that our approach is applicable to dissemination of information about any service available across the wide area network, not just telephony gateways. We are exploring the more broad usage of our approach <ref> [65] </ref>. 4.2 Server to Server Signaling In the IP-PSTN-IP scenario in Figure 1, the two gateways must pass signaling information back and forth in order to initiate calls.
Reference: [66] <author> M. Handley, </author> <title> "Sap session announcement protocol," </title> <type> (internet draft), </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in Progress. </title>
Reference-contexts: ISP's can then add policy filters to populate the database with a subset of the received advertisements. In order to make network bandwidth usage scalable, we adapt the mechanisms used in both RTCP and SAP <ref> [66] </ref> to scale the period of advertisements with the number of gateways which are sending advertisements. We have also added exponential back-off mechanisms so that the period is also a function of the age of an advertisement.
Reference: [67] <author> J. Oikarinen and D. Reed, </author> <title> "Internet relay chat protocol," </title> <type> Tech. Rep. RFC 1459, </type> <institution> Internet Engineering Task Force, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: There are a few drawbacks to this approach. First is its heavy reliance on wide area multicast, which is not yet generally available on the Internet. We are currently exploring ways to use a combination of both application level multicast (as is used in irc <ref> [67] </ref>) and network multicast. Another drawback is common to all push schemes advertisements will be multicast to all remote databases, many of which will either drop the advertisement because of policy, or never use the advertisement, thus wasting network resources.
Reference: [68] <author> ITU-T, </author> <title> Recommendation H.323 Visual Telephone Systems and Equipment for Local Area Networks which Provide Non-Guaranteed Quality of Service, </title> <month> February </month> <year> 1996. </year>
Reference-contexts: This makes it important to minimize the gateway to gateway call setup delays. The main mechanisms for multimedia call setup on the Internet are H.323 <ref> [68] </ref> and SIP [69]. Neither are designed for gateway to gateway signaling. We are currently exploring how SIP might be extended to handle this kind of signaling scenario.
Reference: [69] <author> M. Handley, H. Schulzrinne, and E. Schooler, "SIP: </author> <title> Session initiation protocol," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> July </month> <year> 1997. </year> <title> Work in progress. </title> <type> 16 </type>
Reference-contexts: This makes it important to minimize the gateway to gateway call setup delays. The main mechanisms for multimedia call setup on the Internet are H.323 [68] and SIP <ref> [69] </ref>. Neither are designed for gateway to gateway signaling. We are currently exploring how SIP might be extended to handle this kind of signaling scenario.
Reference: [70] <author> B. Aboba, </author> <title> "Alternatives for enhancing RTCP scalability," </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year> <title> Work in progress. </title>

References-found: 71

