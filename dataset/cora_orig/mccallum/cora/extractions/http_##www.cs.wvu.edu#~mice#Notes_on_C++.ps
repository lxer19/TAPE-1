URL: http://www.cs.wvu.edu/~mice/Notes_on_C++.ps
Refering-URL: http://www.cs.wvu.edu/~mice/
Root-URL: http://www.cs.wvu.edu
Date: 15 December 1994  
Note: ii Notes on C++  Acknowledgments  
Abstract: The critical comments of Mike Barnett, Eric Blough, and Ken Seah have contributed greatly to these notes. All the shortcomings that remain are the responsibility of the author, who hopes that the list of helpful readers will continue to grow in future editions. 
Abstract-found: 1
Intro-found: 1
Reference: [ARM] <author> Ellis, M. A. and Stroustrup, B. </author> <title> The Annotated C++ Reference Manual. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1990. </year>
Reference-contexts: Our excuse is that all of C++ is well described in <ref> [ARM] </ref>; our purpose here is not to duplicate that work, but to help our reader acquire a useful subset with minimal effort. hello, world To get the ball rolling, here is a small but complete C++ program 1 that illustrates several of the notations features: #include &lt;iostream.h&gt; int main () - <p> The unsigned integer types obey the laws of arithmetic modulo 2 n , where n is the number of bits in the representation <ref> [ARM] </ref>. The sizes of the fundamental types are not specified in C++, and hence may vary from one compiler or processor type to another. <p> Programmers who wish to explore the subjects considerable subtleties should consult Section 13.2 of <ref> [ARM] </ref>. automatic, static, and global variables Variables declared within a procedure are local to the procedure; that is, they are invisible everywhere except in the body of the procedure. <p> As Ellis and Stroustrup put it, The intent is to make C++ extensible, but not mutable. This protects the C++ programmer from the most obvious abuses of operator overloading, such as redefining + on integers to mean subtraction. <ref> [ARM] </ref> Nor can we invent new symbols. Tempting though it may be to define (say) ** to mean exponentiation, its not possible because ** is not one of C++s operators. <p> Our purpose, however, has been not to produce an industrial-strength ADT but to illustrate the ADT-definition facilities of C++, and BigNum has fulfilled that purpose. Templates The last feature of C++ well describe is the template. Described in <ref> [ARM] </ref> as experimental, it is finally beginning to appear in commercial C++ compilers. Templates are a device for specifying not just individual classes or procedures but whole families of classes or procedures.
Reference: [Gor] <author> Gorlen, K. E., Orlow, S. M., and Plexico, P. S. </author> <title> Data Abstraction and Object-Oriented Programming in C++. </title> <publisher> Wiley, </publisher> <address> Chichester, UK, </address> <year> 1990. </year>
Reference-contexts: types (int, double, etc.), they should be able to write procedures that take BigNum arguments and functions that return BigNum results, and they should not have to concern themselves with storage management for BigNums any more than they do for ints and doubles. 19 Adapted from the class BigInt in <ref> [Gor] </ref>. 40 Notes on C++ 15 December 1994 Here is a sample program using BigNum: #include &lt;iostream.h&gt; // <>: looks in standard directory #include "BigNum.h" // "": looks in home directory, then // in standard directory int main () - BigNum m = "98757546547654"; BigNum n = 8765; BigNum x =
Reference: [Hor] <author> Horstmann, C. S. </author> <title> Mastering C++: An Introduction to C++ and Object-oriented Programming for C and Pascal Programmers. </title> <publisher> Wiley, </publisher> <address> New York, </address> <year> 1991. </year>
Reference: [Str] <author> Stroustrup, B. </author> <title> The C++ Programming Language. Second Edition. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <note> 1991. </note> <author> 19921994 Hamilton Richards Jr. </author> <title> Notes on for Computer Sciences 328 Abstract Data Types Hamilton Richards Jr. </title> <institution> ham@cs.utexas.edu Department of Computer Sciences The University of Texas at Austin 15 December 1994 </institution>
References-found: 4

