URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/papers/ps/ICMCS95.ps
Refering-URL: http://www.cs.utexas.edu/users/dmcl/projects/symphony/papers.html
Root-URL: http://www.cs.utexas.edu
Email: E-mail: fvin,sriram,pawangg@cs.utexas.edu,  
Phone: Telephone: (512) 471-9732, Fax: (512) 471-8885  
Title: Optimizing the Placement of Multimedia Objects on Disk Arrays  
Author: Harrick M. Vin, Sriram S. Rao and Pawan Goyal 
Address: Austin, Austin, Texas 78712-1188  
Affiliation: Distributed Multimedia Computing Laboratory, Department of Computer Sciences University of Texas at  
Abstract: The immensity of the data transfer requirements of multimedia objects will require multimedia servers to be founded on disk arrays. To effectively utilize a disk array, and hence to maximize the number of clients that can be serviced simultaneously, a multimedia server must interleave the storage of each media stream among the disks in the array. In this paper we identify two placement policies for organizing storage of multimedia objects on disk arrays. We present methods for optimizing the performance of server for both the placement policies, and empirically validate and evaluate the methods through extensive trace driven simulation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. Chang and A. Zakhor. </author> <title> Scalable Video Placement on Parallel Disk Arrays. </title> <booktitle> In Proceedings of IS&T/SPIE International Symposium on Electronic Imaging: Science and Technology, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: Successive media blocks of a stream are placed on consecutive disks using a round-robin allocation algorithm. Each media block may contain either a fixed number of media units or a fixed number of storage units (e.g., bytes) <ref> [1, 5] </ref>. If each media stream stored on the array is encoded using a variable bit rate (VBR) compression technique, the storage space requirement may vary from one media unit to another. <p> That is, for each media block size M k , we measured the service times (denoted by d t i max (M k ); i 2 <ref> [1; R] </ref>) of the most heavily loaded disk for R rounds, and computed: d t max (M k ) = i=1 max (M k ) The above procedure was repeated for various media block sizes including M low , M opt and M high , which denote the analytically derived lower
Reference: [2] <author> P. Chen and D. Patterson. </author> <title> Maximizing Performance in a Striped Disk Array. </title> <booktitle> Proceedings of ACM SIGARCH Conference on Computer Architecture, </booktitle> <address> Seattle, WA, </address> <pages> pages 322-331, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The higher the imbalance in the workload distribution, the lower is the throughput of the disk array. In the recent past, several research projects have developed techniques for optimizing the throughput of disk arrays <ref> [2, 4, 6, 7, 8] </ref>. However, most of the analytical as well as simulation models developed for this purpose have presumed conventional workload. That is, retrieval requests do not have any real-time constraints, are aperiodic as well as independent of each other.
Reference: [3] <author> H. Garcia-Molina and K. Salem. </author> <title> Disk Stripping. </title> <booktitle> International Conference on Data Engineering, </booktitle> <pages> pages 336-342, </pages> <month> February </month> <year> 1986. </year>
Reference-contexts: The unit of data interleaving, referred to as a media bock, denotes the maximum amount of logically contiguous data that is stored on a single disk (this has also been referred to as the striping unit in the literature <ref> [3] </ref>). Successive media blocks of a stream are placed on consecutive disks using a round-robin allocation algorithm. Each media block may contain either a fixed number of media units or a fixed number of storage units (e.g., bytes) [1, 5].
Reference: [4] <author> R.H. Katz, G. Gibson, and D. Patterson. </author> <title> Disk System Architectures for High Performance Computing. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 77(12) </volume> <pages> 1842-1858, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: The higher the imbalance in the workload distribution, the lower is the throughput of the disk array. In the recent past, several research projects have developed techniques for optimizing the throughput of disk arrays <ref> [2, 4, 6, 7, 8] </ref>. However, most of the analytical as well as simulation models developed for this purpose have presumed conventional workload. That is, retrieval requests do not have any real-time constraints, are aperiodic as well as independent of each other.
Reference: [5] <author> K. Keeton and R. Katz. </author> <title> The Evaluation of Video Layout Strategies on a High-Bandwidth File Server. </title> <booktitle> In Proceedings of International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV'93), </booktitle> <address> Lancaster, UK, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Successive media blocks of a stream are placed on consecutive disks using a round-robin allocation algorithm. Each media block may contain either a fixed number of media units or a fixed number of storage units (e.g., bytes) <ref> [1, 5] </ref>. If each media stream stored on the array is encoded using a variable bit rate (VBR) compression technique, the storage space requirement may vary from one media unit to another.
Reference: [6] <author> M. Kim. </author> <title> Synchronized Disk Interleaving. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(11):978-988, </volume> <month> November </month> <year> 1986. </year>
Reference-contexts: The higher the imbalance in the workload distribution, the lower is the throughput of the disk array. In the recent past, several research projects have developed techniques for optimizing the throughput of disk arrays <ref> [2, 4, 6, 7, 8] </ref>. However, most of the analytical as well as simulation models developed for this purpose have presumed conventional workload. That is, retrieval requests do not have any real-time constraints, are aperiodic as well as independent of each other.
Reference: [7] <author> E.K. Lee and R.H. Katz. </author> <title> An Analytic Performance Model for Disk Arrays. </title> <booktitle> In Proceedings of the 1993 ACM SIGMETRICS, </booktitle> <pages> pages 98-109, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The higher the imbalance in the workload distribution, the lower is the throughput of the disk array. In the recent past, several research projects have developed techniques for optimizing the throughput of disk arrays <ref> [2, 4, 6, 7, 8] </ref>. However, most of the analytical as well as simulation models developed for this purpose have presumed conventional workload. That is, retrieval requests do not have any real-time constraints, are aperiodic as well as independent of each other. <p> are equally spaced across the C cylinders of a disk, we define t seek = t seek B max c , where: t seek (x) = a x 1 + b (x 1) + c otherwise and a, b, and c are constants (determined using physical characteristics of a disk) <ref> [7] </ref>. The rotational latency t exp defined to be half of the maximum rotational latency.
Reference: [8] <author> M. Linvy, S. Khoshafian, and H. Boral. </author> <title> Multi-Disk Management Algorithms. </title> <booktitle> Proceedings of Eleventh Symposium on Operating Systems Principles, </booktitle> <pages> pages 69-76, </pages> <month> November </month> <year> 1987. </year>
Reference-contexts: The higher the imbalance in the workload distribution, the lower is the throughput of the disk array. In the recent past, several research projects have developed techniques for optimizing the throughput of disk arrays <ref> [2, 4, 6, 7, 8] </ref>. However, most of the analytical as well as simulation models developed for this purpose have presumed conventional workload. That is, retrieval requests do not have any real-time constraints, are aperiodic as well as independent of each other.
Reference: [9] <author> M. Rabbani and P. Jones. </author> <title> Digital Image Compression Techniques. </title> <publisher> SPIE Optical Engineering Press, </publisher> <year> 1991. </year>
Reference-contexts: Although several VBR compression algorithms have been proposed in the recent past <ref> [9] </ref>, very little work has been done in developing techniques for efficient placement and retrieval of compressed multimedia objects from disk arrays. 1.3 Research Contributions of This Paper In this paper, we analyze and evaluate fixed-size and variable-size block placement policies.
Reference: [10] <author> F.A. Tobagi, J. Pang, R. Baird, and M. Gang. </author> <title> Streaming RAID: A Disk Storage System for Video and Audio Files. </title> <booktitle> In Proceedings of ACM Multimedia'93, </booktitle> <address> Anaheim, CA, </address> <pages> pages 393-400, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Furthermore, the service time (i.e., the total time spent in retrieving media units during a round) should not exceed the duration of the round <ref> [10, 11] </ref>. To effectively utilize a disk array, and hence to maximize the number of clients that can be serviced simultaneously, a multimedia server must interleave the storage of each media stream among the disks in the array.
Reference: [11] <author> H. M. Vin, A. Goyal, and P. Goyal. </author> <title> Algorithms for Designing Large-Scale Multimedia Servers. </title> <note> To appear in Computer Communications, </note> <month> March </month> <year> 1995. </year>
Reference-contexts: Furthermore, the service time (i.e., the total time spent in retrieving media units during a round) should not exceed the duration of the round <ref> [10, 11] </ref>. To effectively utilize a disk array, and hence to maximize the number of clients that can be serviced simultaneously, a multimedia server must interleave the storage of each media stream among the disks in the array. <p> However, by judiciously choosing the set of blocks to be read-ahead in underflow rounds, the increase in the buffer space requirement can be minimized <ref> [11] </ref>. 3 Variable-Size Block Placement Policy Consider a multimedia server that interleaves the storage of video streams on a disk array in terms of variable-size blocks, each containing fixed number of frames.
Reference: [12] <author> H. M. Vin, P. Goyal, A. Goyal, and A. Goyal. </author> <title> A Statistical Admission Control Algorithm for Multimedia Servers. </title> <booktitle> In Proceedings of the ACM Multimedia'94, </booktitle> <address> San Francisco, </address> <pages> pages 33-40, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Selection of the set of blocks to be read-ahead during round r may be governed by the increase in service time resulting from their retrieval, and the service requirements of the clients <ref> [12] </ref>. The reduction in the transient playback discontinuities (and the corresponding improvement in the quality of service being provided to clients) yielded by such read-ahead policies are at the expense of increase in buffer space requirement. <p> Once assigned, the client remains a member of group g new until it departs. To avoid the occurrence of transient overload on any disk in the array, the server must employ admission control algorithm on a group basis <ref> [12] </ref>. That is, if the addition of the client to group g new would lead to the continuity violations of the clients, then group g new is said to be full and the server must delay admitting the client until a suitable group is found.
References-found: 12

