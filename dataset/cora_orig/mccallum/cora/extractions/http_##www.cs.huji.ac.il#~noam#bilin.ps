URL: http://www.cs.huji.ac.il/~noam/bilin.ps
Refering-URL: http://www.cs.huji.ac.il/~noam/papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: On the Complexity of Bilinear Forms (Extended Abstract)  
Author: Noam Nisan Avi Wigderson 
Date: November 29, 1994  
Address: Jerusalem, Israel.  Jerusalem, Israel.  
Affiliation: Institute of Computer Science, Hebrew University of  Institute of Computer Science, Hebrew University of  
Abstract: This paper provides some new lower and upper bounds on computing bilinear forms by arithmetic circuits. The complexity measures considered are circuit size, formula size and time space trade-offs.
Abstract-found: 1
Intro-found: 1
Reference: [AM88] <author> N. Alon and W. Maass, </author> <title> "Meanders and their applications in lower bounds arguments", </title> <journal> JCSS, </journal> <volume> 37, </volume> <pages> pp. 118-129, </pages> <year> 1988. </year>
Reference-contexts: The straight line program A defines a sequence of variables from fx 1 ; ; x n ; y 1 ; ; y n g of length at most nk=4, in the order they appear in A. By the main lemma in <ref> [AM88] </ref>, there are subsets X 0 ; Y 0 of the x and y variables, respectively, such that jX 0 j = jY 0 j = n=(2 k ) satisfying the following property: if we remove all other variables from , the resulting subsequence has at most k alternations between x
Reference: [Bo94] <author> A. Borodin, </author> <title> Private communication, </title> <year> 1994. </year>
Reference-contexts: The proof uses small, depth 2 superconcentrators to construct matrices M in which all minors have high rank. The motivation for this result comes for a question of Borodin <ref> [Bo94] </ref>, who asked if there is an space-efficient implementation of the Baur-Strassen theorem [BS82].
Reference: [BS82] <author> W. Baur, V. Strassen, </author> <title> "The complexity of partial derivatives", </title> <journal> Theoretical Computer science, </journal> <volume> 22, </volume> <pages> pp. 317-330, </pages> <year> 1982. </year>
Reference-contexts: The proof uses small, depth 2 superconcentrators to construct matrices M in which all minors have high rank. The motivation for this result comes for a question of Borodin [Bo94], who asked if there is an space-efficient implementation of the Baur-Strassen theorem <ref> [BS82] </ref>. This remarkable theorem asserts that the time (or size) it takes to compute all n partial derivatives (one for each variable) of a polynomial f is only larger by a constant factor then the time to compute f itself. <p> It is not hard to see that each derivative can be computed with size C (f ), so for every f , C (f ) nC (f ). A remarkable theorem of Baur and Strassen <ref> [BS82] </ref> (see a simple proof by Morgenstern [Mo85]) says that there is no need to lose the factor of n. Theorem 1 [BS82] For every f , C (f ) 3C (f ). This theorem was used in [BS82] to convert lower bounds for computing a set of polynomials into a <p> A remarkable theorem of Baur and Strassen <ref> [BS82] </ref> (see a simple proof by Morgenstern [Mo85]) says that there is no need to lose the factor of n. Theorem 1 [BS82] For every f , C (f ) 3C (f ). This theorem was used in [BS82] to convert lower bounds for computing a set of polynomials into a lower bound for a single function. <p> A remarkable theorem of Baur and Strassen <ref> [BS82] </ref> (see a simple proof by Morgenstern [Mo85]) says that there is no need to lose the factor of n. Theorem 1 [BS82] For every f , C (f ) 3C (f ). This theorem was used in [BS82] to convert lower bounds for computing a set of polynomials into a lower bound for a single function.
Reference: [Ch94] <author> B. Chazelle, </author> <title> "A Spectral Approach to Lower Bounds", </title> <booktitle> Proc. of the 35th FOCS, </booktitle> <year> 1994, </year> <note> to appear. </note>
Reference-contexts: First and foremost, we have no superlinear lower bounds even on formula size of bilinear forms in the general model, so we might as well start with this restricted one. Second, it was suggested as a natural model (for computing linear functions) by Morgenstern [Mo73] and Chazelle <ref> [Ch94] </ref>. Morgenstern observes that natural algorithms like FFT use only small constants, and actually proves that under this restriction the n log n time bound it is optimal. <p> For the DF T and Hadamard mtrices all eigenvalues are p n in absolute value. Very recently Chazelle <ref> [Ch94] </ref> used more refined entropy argumnets to derive similar bounds in a slightly stronger model, for problems arising from 2-dimentional range-query computations. An immediate question, is whether such lower bounds can be proved for one function (rather then a set of functions).
Reference: [DDPW] <author> D. Dolev, C. Dwork, N. Pippenger, and A. Wigderson, "Superconcentrators, Generalizers, </author> <title> and Generalized Connectors with Limited Depth," </title> <booktitle> Proc. of the 15th STOC, </booktitle> <pages> pp. 42-51, </pages> <year> 1983. </year> <month> 11 </month>
Reference-contexts: Let c d (n) denote the size of the of the smallest n-superconcentrator of depth d. Determining the functions c d for various values of d, as well as finding explicit small and shallow superconcentrators has been a major object of study <ref> [Pi78, Pi82, DDPW] </ref>. We shall need the following two upper bounds on the size of superconcentrators of depth 2, the first being nonconstructive and the second explicit. Theorem 3 [Pi82] c 2 (n) = O (n (log n) 2 ).
Reference: [Ha86] <author> M. Hall, </author> <title> Combinatorial Theory, </title> <publisher> John Wiley, </publisher> <year> 1986. </year>
Reference-contexts: Here ! is an nth primitive root of unity, and DFT ij = ! ij . For all i 2 [n], j i (DF T )j = n * PP | the Projective Plane (see <ref> [Ha86] </ref>). Here n = p 2 +p+1 for some prime p. PP is a Boolean matrix, with exactly p + 1 1's in every row and column. <p> These include, for example, all incidence matrices of points vs. subspaces in projective geometries, and more generally block designs <ref> [Ha86] </ref>. * This form of a formula lower bound is tight in general. For any diagonal matrix A it can be easily seen that L b 1 (b A ) = O ( i j i (A)j). Now we return to the proof of Theorem 12.
Reference: [Mo73] <author> J. Morgenstern, </author> <title> "Note on a lower bound of the linear complexity of the fast Fourier transform", </title> <type> JACM 20 (2), </type> <pages> pp. 305-306, </pages> <year> 1973. </year>
Reference-contexts: First and foremost, we have no superlinear lower bounds even on formula size of bilinear forms in the general model, so we might as well start with this restricted one. Second, it was suggested as a natural model (for computing linear functions) by Morgenstern <ref> [Mo73] </ref> and Chazelle [Ch94]. Morgenstern observes that natural algorithms like FFT use only small constants, and actually proves that under this restriction the n log n time bound it is optimal. <p> We first obtain an (n log n) circuit lower bound. It follows a simple observation that the afore mentioned Baur-Strassen construction can be carried over in the restricted model, and thus the above results of, e.g., Morgenstern <ref> [Mo73] </ref> imply it directly. We then obtain an n 5=4 lower bound on the formula size for these bilinear forms, as well as n 1+* lower bounds for other explicit matrices, arising from projective geometries and other block designs. <p> There are no examples of such polynomials for which the restricted model is significantly weaker than the general one. This question becomes especially interesting, since nontrivial lower bounds can be proved in the restricted model. The first to prove such lower bounds was Morgenstern <ref> [Mo73] </ref>. He observed that the standard FFT algorithm for the Discrete Fourier Transform works in the restricted model. If DF T denotes the n fi n DFT matrix, then C 1 (l DF T ) 1 2 n log n. Morgenstern showed that this is best possible. Theorem 10 [Mo73] C <p> Morgenstern <ref> [Mo73] </ref>. He observed that the standard FFT algorithm for the Discrete Fourier Transform works in the restricted model. If DF T denotes the n fi n DFT matrix, then C 1 (l DF T ) 1 2 n log n. Morgenstern showed that this is best possible. Theorem 10 [Mo73] C 1 (l DF T ) 1 2 n log n The proof uses a very elegant volume argument.
Reference: [Mo85] <author> J. Morgenstern, </author> <title> "How To Compute Fast A Function And All Its Derivatives", </title> <journal> SIGACT News, </journal> <volume> 16 (4), </volume> <pages> pp. 60-62, </pages> <month> Spring </month> <year> 1985, </year>
Reference-contexts: It is not hard to see that each derivative can be computed with size C (f ), so for every f , C (f ) nC (f ). A remarkable theorem of Baur and Strassen [BS82] (see a simple proof by Morgenstern <ref> [Mo85] </ref>) says that there is no need to lose the factor of n. Theorem 1 [BS82] For every f , C (f ) 3C (f ). This theorem was used in [BS82] to convert lower bounds for computing a set of polynomials into a lower bound for a single function.
Reference: [Pi78] <author> N. </author> <title> Pippenger, </title> <journal> "Superconcentrators", SIAM J. Comput. </journal> <volume> 6, </volume> <pages> pp. 298-304, </pages> <year> 1978. </year>
Reference-contexts: Let c d (n) denote the size of the of the smallest n-superconcentrator of depth d. Determining the functions c d for various values of d, as well as finding explicit small and shallow superconcentrators has been a major object of study <ref> [Pi78, Pi82, DDPW] </ref>. We shall need the following two upper bounds on the size of superconcentrators of depth 2, the first being nonconstructive and the second explicit. Theorem 3 [Pi82] c 2 (n) = O (n (log n) 2 ).
Reference: [Pi82] <author> N. Pippenger, </author> <title> "Superconcentrators of Depth 2," </title> <journal> J. Comp. and Sys. Sci. </journal> <volume> 24, </volume> <pages> pp. 82-90, </pages> <year> 1982. </year>
Reference-contexts: Let c d (n) denote the size of the of the smallest n-superconcentrator of depth d. Determining the functions c d for various values of d, as well as finding explicit small and shallow superconcentrators has been a major object of study <ref> [Pi78, Pi82, DDPW] </ref>. We shall need the following two upper bounds on the size of superconcentrators of depth 2, the first being nonconstructive and the second explicit. Theorem 3 [Pi82] c 2 (n) = O (n (log n) 2 ). <p> We shall need the following two upper bounds on the size of superconcentrators of depth 2, the first being nonconstructive and the second explicit. Theorem 3 <ref> [Pi82] </ref> c 2 (n) = O (n (log n) 2 ).
Reference: [Sc80] <author> J. T. Schwartz, </author> <title> "Fast Probabilistic Algorithms for Verification of Polynomial Identities", </title> <type> JACM 27 (4), </type> <pages> pp. 701-717, </pages> <year> 1980. </year>
Reference-contexts: This gives a decomposition as in Equation 1, and thus the fomula size upper bound: Lemma 1 For every depth 2 graph G and weights w, L b (b M (G;w) ) jEj. 2.6 Schwartz's Lemma An extremely useful lemma regarding the zeros of multivariate polynomials was proved by Schwartz <ref> [Sc80] </ref>. Theorem 5 [Sc80] Let f 2 F [X] be a polynomial of total degree d, which is not identically zero. Let H be any finite subset of F . <p> decomposition as in Equation 1, and thus the fomula size upper bound: Lemma 1 For every depth 2 graph G and weights w, L b (b M (G;w) ) jEj. 2.6 Schwartz's Lemma An extremely useful lemma regarding the zeros of multivariate polynomials was proved by Schwartz <ref> [Sc80] </ref>. Theorem 5 [Sc80] Let f 2 F [X] be a polynomial of total degree d, which is not identically zero. Let H be any finite subset of F . Let w : X ! H be a random function, assigning to each variable an independent random, uniformly distributed element of F .
Reference: [St73] <author> V. Strassen, </author> <title> "Die Berechnungskomplexitat vo elementarsymmetrischen Funktionen und von Interpolationskoefizienten", </title> <journal> Numer. Math. </journal> <volume> 20, </volume> <pages> pp. 238-251, </pages> <year> 1973. </year>
Reference-contexts: Theorem 1 [BS82] For every f , C (f ) 3C (f ). This theorem was used in [BS82] to convert lower bounds for computing a set of polynomials into a lower bound for a single function. For example, Strassen's lower bound <ref> [St73] </ref> C (x n 1 ; x n n ) = (n log n) immediately implies that C (x n 1 + x n n ) = (n log n). 2.3 Linear functions Let M be an n fi n matrix with entries in F .
Reference: [SZ94] <author> A. Srinivasan and D. Zuckerman, </author> <title> "Computing with Very Weak Random Sources," </title> <booktitle> Proc. of the 35th FOCS, </booktitle> <year> 1994, </year> <note> to appear. </note>
Reference-contexts: Theorem 4 [WZ93] There is a polynomial time algorithm which for every n outputs an n-superconcentrator of depth 2 and size n 1+o (1) . (The best bound on the o (1) term is actually (log n) 1=2 <ref> [SZ94] </ref>.) In any depth 2 graph G, the vertices decompose to three sets, V = I [ R [ O, which are resp. the inputs, middle vertices, and outputs (for any direct edge between I and O we can insert a new vertex to split it in two, without effecting the
Reference: [To80] <author> M. Tompa, </author> <title> "Time Space Tradeoffs for Computing Functions, Using Connectivity Properties of Their Circuits," </title> <journal> J. Comp. and Sys. Sci, </journal> <volume> 20, </volume> <pages> pp. 118-132, </pages> <year> 1980. </year>
Reference-contexts: However, for the T S measure such bounds can be obtained, via the elegant sufficient condition of Valiant [Va76], (see also Tompa <ref> [To80] </ref>). Theorem 2 [Va76] * Let M be an n fi n matrix in which every square submatrix is nonsingular. Then T S (l M ) = (n 2 ). * Let M be an m fi n matrix with m n.
Reference: [Va76] <author> L.G. Valiant, </author> <title> "Graph Theoretic Properties in Computational Complexity," </title> <journal> J. Comp. and Sys. Sci. </journal> <volume> 13, </volume> <pages> pp. 278-285, </pages> <year> 1976. </year>
Reference-contexts: However, for the T S measure such bounds can be obtained, via the elegant sufficient condition of Valiant <ref> [Va76] </ref>, (see also Tompa [To80]). Theorem 2 [Va76] * Let M be an n fi n matrix in which every square submatrix is nonsingular. Then T S (l M ) = (n 2 ). * Let M be an m fi n matrix with m n. <p> However, for the T S measure such bounds can be obtained, via the elegant sufficient condition of Valiant <ref> [Va76] </ref>, (see also Tompa [To80]). Theorem 2 [Va76] * Let M be an n fi n matrix in which every square submatrix is nonsingular. Then T S (l M ) = (n 2 ). * Let M be an m fi n matrix with m n.
Reference: [Wi65] <author> J. H. Wilkinson, </author> <title> The Algebraic Eigenvalue Problem, </title> <publisher> Oxford University Press, </publisher> <pages> pp. 104-109, </pages> <year> 1965. </year>
Reference-contexts: An important relation between the effect of perturbing a matrix on its eigenvalues is the Hoffman-Wielandt inequality (see e.g. <ref> [Wi65] </ref>). Theorem 6 (Hoffman-Weilandt Inequality) Let A; B be matrices with A B symmetric. Then jj (A) (B)jj jjA Bjj Some n fi n matrices we shall see later are: * H | the Sylvester matrix.
Reference: [WZ93] <author> A. Wigderson, D. Zuckerman, </author> <title> "Expanders that Beat the Eigenvalue Bound, Explicit Construction and Applications", </title> <booktitle> Proc. of the 25th STOC, </booktitle> <pages> pp. 245-251, </pages> <year> 1993. </year> <month> 12 </month>
Reference-contexts: We shall need the following two upper bounds on the size of superconcentrators of depth 2, the first being nonconstructive and the second explicit. Theorem 3 [Pi82] c 2 (n) = O (n (log n) 2 ). Theorem 4 <ref> [WZ93] </ref> There is a polynomial time algorithm which for every n outputs an n-superconcentrator of depth 2 and size n 1+o (1) . (The best bound on the o (1) term is actually (log n) 1=2 [SZ94].) In any depth 2 graph G, the vertices decompose to three sets, V =
References-found: 17

