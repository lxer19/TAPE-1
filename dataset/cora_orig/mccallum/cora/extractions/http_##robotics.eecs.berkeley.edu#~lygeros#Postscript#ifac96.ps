URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/ifac96.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/ifac96.html
Root-URL: 
Email: lygeros, godbole, sastry@eecs.berkeley.edu  
Title: OPTIMAL CONTROL APPROACH TO MULTIAGENT, HIERARCHICAL SYSTEM VERIFICATION  
Author: John Lygeros, Datta N. Godbole and S. Shankar Sastry 
Keyword: Hierarchical Control, Intelligent Control, Hybrid Control Systems, Verification, Optimal Control  
Address: Berkeley, CA 94720  
Affiliation: Intelligent Machines and Robotics Laboratory University of California, Berkeley  
Abstract: An approach to the verification of hybrid systems using optimal control principles is introduced. Its advantages and disadvantages when compared with conventional, automatic verification techniques are highlighted. The application of the new approach is illustrated by means of two motivating examples, one from the area of automated highway systems and the other from the timed automata verification literature. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Alur, R., C. Courcoubetis and D. </author> <title> Dill (1990). Model checking for real-time systems. </title> <booktitle> Logic in Computer Science pp. </booktitle> <pages> 414-425. </pages>
Reference-contexts: Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them. They have proved very successful in discrete problems such as communication protocols (Hsu et al., 1994) and software algorithms. More recently, these techniques have been extended to systems with clocks <ref> (Alur et al., 1990) </ref> and multi-rate clocks (Alur et al., 1993). Conditions under which problems like these can be solved computationally have been established and algorithms have been developed to implement the verification process.
Reference: <author> Alur, R., C. Courcoubetis, T. A. Henzinger and P. </author> <title> H. </title>
Reference: <author> Ho (1993). </author> <title> Hybrid automaton: An algorithmic approach to the specification and verification of hybrid systems. In: Hybrid System (Robert L. </title> <editor> Grossman, Anil Nerode, Anders P. Ravn and Hans Rischel, </editor> <booktitle> Eds.). </booktitle> <pages> pp. 209-229. </pages> <publisher> Springer Verlag. </publisher> <address> New York. </address>
Reference: <author> Balarin, Felice, Karl Petty and Alberto L. </author> <title> Sangiovanni-Vincentelli (1994). Formal verification of the PATHO real-time operating system. </title> <booktitle> In: IEEE Control and Decision Conference. </booktitle> <pages> pp. 2459-2465. </pages>
Reference-contexts: Efficient algorithms (that make use of heuristics and user input to facilitate the search) do exist, however the problem may still be prohibitively large for current computers <ref> (Balarin et al., 1994) </ref>. The approach presented here attempts to bypass these problems by using optimal control techniques. Standard automatic verification involves checking that all possible trajectories of the system satisfy the required properties.
Reference: <author> Godbole, Datta N. and John Lygeros (1994). </author> <title> Longitudinal control of the lead car of a platoon. </title> <journal> IEEE Transactions on Vehicular Technology 43(4), </journal> <pages> 1125-1135. </pages>
Reference-contexts: Fig. 4. Vehicle Trajectories in Discrete Space It is assumed that, after feedback linearization, the ve-hicle dynamics are described by a series of 3 integrators <ref> (Godbole and Lygeros, 1994) </ref>. The leader is also assumed to have sensors that provide information about its velocity and acceleration as well as the relative velocity and spacing to the platoon in front. The acceleration of the preceding platoon is unknown and is treated as a disturbance, d. <p> The range of the initial condition disturbance depends on the switching rules used by the discrete layer and implemented in the interface between the discrete and continuous dynamics <ref> (Lygeros and Godbole, 1994) </ref>. The outputs of interest for the leader are the relative velocity and relative spacing to the preceding platoon. The hybrid controller should be designed to regulate these outputs to some desired fixed point. <p> The outputs of interest for the leader are the relative velocity and relative spacing to the preceding platoon. The hybrid controller should be designed to regulate these outputs to some desired fixed point. In <ref> (Godbole and Lygeros, 1994) </ref>, the fixed point is chosen to be zero for the relative velocity and v _x 1 + p for the spacing.
Reference: <author> Godbole, Datta N., John Lygeros and Shankar Sas-try (1995). </author> <title> Hierarchical hybrid control: an IVHS case study. In: Hybrid Systems II (P. </title> <editor> Antsaklis, Wolf Kohn, Anil Nerode and Shankar Sastry, Eds.). </editor> <publisher> Springer Verlag, LNCS Volume 999. </publisher>
Reference-contexts: The design and analysis of hybrid controllers for large scale systems can be very complicated. The reason is that the interaction between the continuous and discrete domains can give rise to patterns of behavior that are hard to predict using conventional tools. Instances of such behavior were documented in <ref> (Godbole et al., 1995) </ref> using an automated highway system as an example. In (Lygeros et al., 1995) a design procedure for multi-agent systems, that produces hybrid controllers with guaran-teed performance was proposed. Each agent is modeled in the continuous domain by a state space model.
Reference: <author> Hedrick, J. K., D.McMahon, V. Narendran and D. </author> <month> Swa-roop </month> <year> (1991). </year> <title> Longitudinal vehicle controller design for IVHS system. </title> <booktitle> In: American Control Conference. </booktitle> <pages> pp. 3107-3112. </pages>
Reference: <author> Henzinger, T., P. Kopke, A. Puri and P. </author> <month> Varaiya </month> <year> (1995). </year> <title> What's decidable about hybrid automata. In: </title> <publisher> STOCS. </publisher>
Reference-contexts: Progress in the direction of automatic verification has been impeded for two fundamental reasons. The first is undecidability. To guarantee that an automatic verification algorithm will terminate in a finite number of steps, the system needs to satisfy very stringent technical requirements. It can be shown <ref> (Henzinger et al., 1995) </ref> that relaxing any of these requirements makes the problem undecidable. The second problem is computational complexity. Even relatively simple hybrid systems lead to very large numbers of discrete states when looked at from the point of view of automatic verification.
Reference: <author> Hsu, Ann, Farokh Eskafi, Sonia Sachs and Pravin Varaiya (1994). </author> <title> Protocol design for an automated highway system. Discrete Event Dynamic Systems 2(1), </title> <type> 183-206. </type>
Reference-contexts: This approach has been motivated by the success of verification techniques for finite state machines. Verification algorithms for finite state machines have been in use for years and efficient programs exist to implement them. They have proved very successful in discrete problems such as communication protocols <ref> (Hsu et al., 1994) </ref> and software algorithms. More recently, these techniques have been extended to systems with clocks (Alur et al., 1990) and multi-rate clocks (Alur et al., 1993). <p> The discrete path followed by each vehicle can be represented by the runs of the finite state machine (FSM) of Figure 4. Each of the maneuvers involves coordination with the neighboring vehicles which is specified in terms of communication protocols described in <ref> (Hsu et al., 1994) </ref>. The vehicles engaged in a maneuver protocol jointly decide which transition of this FSM is to be executed based on the continuous states of all vehicles involved in the maneuver. Fig. 4.
Reference: <author> Lygeros, John and Datta Godbole (1994). </author> <title> An interface between continuous and discrete event controllers for vehicle automation. </title> <booktitle> In: American Control Conference. </booktitle> <pages> pp. 801-805. </pages>
Reference-contexts: Fig. 4. Vehicle Trajectories in Discrete Space It is assumed that, after feedback linearization, the ve-hicle dynamics are described by a series of 3 integrators <ref> (Godbole and Lygeros, 1994) </ref>. The leader is also assumed to have sensors that provide information about its velocity and acceleration as well as the relative velocity and spacing to the platoon in front. The acceleration of the preceding platoon is unknown and is treated as a disturbance, d. <p> The range of the initial condition disturbance depends on the switching rules used by the discrete layer and implemented in the interface between the discrete and continuous dynamics <ref> (Lygeros and Godbole, 1994) </ref>. The outputs of interest for the leader are the relative velocity and relative spacing to the preceding platoon. The hybrid controller should be designed to regulate these outputs to some desired fixed point. <p> The outputs of interest for the leader are the relative velocity and relative spacing to the preceding platoon. The hybrid controller should be designed to regulate these outputs to some desired fixed point. In <ref> (Godbole and Lygeros, 1994) </ref>, the fixed point is chosen to be zero for the relative velocity and v _x 1 + p for the spacing.
Reference: <author> Lygeros, John, Datta N. Godbole and Shankar Sastry (1995). </author> <title> A game theoretic approach to hybrid system design. </title> <type> Technical Report UCB/ERL-M95/77. </type> <institution> Electronic Research Laboratory, University of Cal-ifornia Berkeley. </institution>
Reference-contexts: The reason is that the interaction between the continuous and discrete domains can give rise to patterns of behavior that are hard to predict using conventional tools. Instances of such behavior were documented in (Godbole et al., 1995) using an automated highway system as an example. In <ref> (Lygeros et al., 1995) </ref> a design procedure for multi-agent systems, that produces hybrid controllers with guaran-teed performance was proposed. Each agent is modeled in the continuous domain by a state space model. <p> More formally the control design needs to regulate the following outputs to zero: y = v 0 1 0 0 (3) 4.3 Verification of Safety A general framework for designing hierarchical hybrid control systems using game theory and optimal control principles was presented in <ref> (Lygeros et al., 1995) </ref>. In this section, the problem of verification of the properties of hybrid control systems will be considered. Let u i denote the continuous control law for maneuver i 2 flead, follow, etc.g.
Reference: <author> Puri, Anuj and Pravin Varaiya (1994). </author> <title> Decidebility of hybrid systems with rectangular differential inclusions. </title> <booktitle> In: Computer Aided Verification. </booktitle> <pages> pp. 95-104. </pages>
Reference: <author> Puri, Anuj and Pravin Varaiya (1995). </author> <title> Driving safely in smart cars. </title> <booktitle> In: American Control Conference. </booktitle> <pages> pp. 3597-3599. </pages>
Reference-contexts: The first is the "leaking gas burner" problem introduced in (Alur et al., 1993). Optimal control will be used to fully specify the conditions under which the system satisfies certain performance requirements. The second example comes from the automated highway problem. It will be shown how (following <ref> (Puri and Varaiya, 1995) </ref>) safety verification for a given design can be cast in terms of optimal control. The detailed solution of this example is the topic of current research. 3. LEAKING GAS BURNER The gas burner has two states, "normal" and "leaking".
Reference: <author> Varaiya, </author> <month> Pravin </month> <year> (1993). </year> <title> Smart cars on smart roads: problems of control. </title> <journal> IEEE Transactions on Automatic Control AC-38(2), </journal> <pages> 195-207. </pages>
Reference-contexts: Fig. 3. Worst case leaking percentage for D 1 ; D 2 4. AUTOMATED HIGHWAY SYSTEM (AHS) The problem of safely organizing highway traffic in platoons is considered in this section. According to the AHS architecture proposed in <ref> (Varaiya, 1993) </ref>, automated vehicles in each lane travel in closely spaced platoons (1-2m inter vehicle spacing) of up to 20 vehicles. Different platoons are isolated by large gaps (30-60m inter-platoon separation). Safety of the lead 1 vehicle in each platoon, is considered here. <p> Longitudinal motion, that is motion within a given lane, is considered for each vehicle. Lateral motion (i.e. motion between lanes) can also be treated in a similar way. 4.1 Problem Formulation In the platooning architecture of <ref> (Varaiya, 1993) </ref> the trajectories of the automated vehicles are constructed by concatenating the following maneuvers: * Entry: a vehicle (platoon) accelerates to match the AHS speed and then executes lane change to enter the automated highway. * Join: two platoons in the same lane join to form a larger platoon.
References-found: 14

