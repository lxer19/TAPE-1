URL: http://www.cs.washington.edu/research/projects/lis/www/papers/postscript/hassoun-IWLS.ps
Refering-URL: http://www.cs.washington.edu/homes/soha/previous_research.html
Root-URL: 
Title: Improving Finite State Assignment for Two-Level Programmable Logic Devices  
Author: Soha Hassoun Gaetano Borriello 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering University of Washington,  
Abstract: This paper explores improving finite state assignments for two-level Programmable Logic Devices (PLDs) using two approaches. The first approach uses an iterative technique that aims at reducing the number of product terms per each state and output bit in a Finite State Machine (FSM). It employs a slightly modified version of NOVA, an existing state assignment tool that targets two-level logic implementations. The second approach exploits output functions of a FSM as pre-encoded state bits, potentially reducing the total number of state bits needed to implement the FSM. We report the results of using these approaches on a subset of MCNC FSM examples. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Ashar, S. Devadas, and A. R. </author> <title> Newton. Sequential Logic Synthesis. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1992. </year>
Reference: [2] <author> S. Devadas, H.K. MA, A. R. Newton, and A. Sangiovanni-Vincentelli. Mustang: </author> <title> State assignment of finite state machines targeting multilevel logic implementations. </title> <journal> In IEEE Transactions on Computer-Aided Design, </journal> <volume> volume 7, </volume> <pages> pages 1290-1300, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: For custom-design implementations, an optimal encoding results in a minimum area used by a two-level Programmable Logic Array (PLA) or by multi-level combinational logic. A few automated finite state assignment tools <ref> [2] </ref>, [4], and [8] have been developed to target custom-design implementations. Programmable Logic Devices (PLDs) offer a higher degree of integration over conventional discrete components. PLDs have many advantages over custom-design logic implementations: faster prototyping, rapid bug fixes, and more flexibility in design. <p> The state assignment problem is a complicated encoding problem, since it is an input and output encoding problem that needs to be satisfied by the same solution [5]. State assignment tools have been developed to target custom-design implementations. The state assignment tools Mustang <ref> [2] </ref> and JEDI [4] target minimizing the number of variables (in true or complemented form) when impelmenting a FSM using multi-level logic. The state assignment tool NOVA [8] aims to minimize the number of product terms needed to implement a FSM using a two-level PLA.
Reference: [3] <author> R. Katz. </author> <title> Contemporary Logic Design. </title> <publisher> Benjamin/Cummings Publishing Co., </publisher> <address> Redwood City, CA, </address> <year> 1992. </year>
Reference: [4] <author> B. Lin and A. R. </author> <title> Newton. Synthesis of multiple level logic from symbolic high-level description languages. </title> <booktitle> In Proceedings of the VLSI 1989 Conference, </booktitle> <address> Munich, West Germany, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: For custom-design implementations, an optimal encoding results in a minimum area used by a two-level Programmable Logic Array (PLA) or by multi-level combinational logic. A few automated finite state assignment tools [2], <ref> [4] </ref>, and [8] have been developed to target custom-design implementations. Programmable Logic Devices (PLDs) offer a higher degree of integration over conventional discrete components. PLDs have many advantages over custom-design logic implementations: faster prototyping, rapid bug fixes, and more flexibility in design. <p> The state assignment problem is a complicated encoding problem, since it is an input and output encoding problem that needs to be satisfied by the same solution [5]. State assignment tools have been developed to target custom-design implementations. The state assignment tools Mustang [2] and JEDI <ref> [4] </ref> target minimizing the number of variables (in true or complemented form) when impelmenting a FSM using multi-level logic. The state assignment tool NOVA [8] aims to minimize the number of product terms needed to implement a FSM using a two-level PLA.
Reference: [5] <author> G. De Micheli. </author> <title> Symbolic design of combinational and sequential logic circuits implemented by two-level logic macros. </title> <journal> In IEEE Transactions on Computer-Aided Design, </journal> <volume> volume CAD-5, </volume> <pages> pages 597-616, </pages> <month> October </month> <year> 1986. </year>
Reference-contexts: Different strategies have been developed for encoding symbolic variables based on whether a variable is an input or an output variable. The state assignment problem is a complicated encoding problem, since it is an input and output encoding problem that needs to be satisfied by the same solution <ref> [5] </ref>. State assignment tools have been developed to target custom-design implementations. The state assignment tools Mustang [2] and JEDI [4] target minimizing the number of variables (in true or complemented form) when impelmenting a FSM using multi-level logic.
Reference: [6] <author> G. De Micheli, R. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Optimal state assignment for finite state machines. </title> <journal> In IEEE Transactions on Computer-Aided Design, </journal> <volume> volume CAD-4, </volume> <pages> pages 269-285, </pages> <month> July </month> <year> 1985. </year>
Reference-contexts: NOVA's algorithm i hybrid approximates the finite state assignment as an input encoding problem. i hybrid is based on the input encoding paradigm proposed in <ref> [6] </ref>, in which logic minimization of the FSM logic is applied before state encoding. i hybrid approaches input encoding as a two-step process: 1. Using multi-valued logic minimization, i hybrid obtains a minimized cover of each next state and primary output function of the FSM.
Reference: [7] <author> I. Pomeranz and K.T. Cheng. </author> <title> State assignment using input/output functions. </title> <booktitle> In 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 573-577, </pages> <year> 1992. </year>
Reference-contexts: This paper is organized as follows. Section 2 defines the PLD model used in this work. Section 3 provides background information on NOVA, a state assignment tool for two-level PLAs, and on the work of Pomeranz and Cheng <ref> [7] </ref> that exploits output functions as state bits. Section 4 implements two changes to NOVA and an iterative technique to improve the state assignments generated by NOVA. It also presents the adaptation of Pomeranz and Cheng's technique to PLDs. <p> Pomeranz and Cheng developed a technique for decreasing the number of next state functions that must be implemented in a PLA by employing primary input and output functions as pre-encoded state bits <ref> [7] </ref>. We found their technique useful in meeting the physical constraints imposed by PLDs and satisfying more encoding constraints. The first part of this section reviews some basic definitions and concepts associated with logic functions and encoding. <p> The matching is a complex task and it involves a limited amount of backtracking to explore the solution space before finding the best assignment. 3.3 State Assignment Using Input/Output Functions This section summarizes the work of Pomeranz and Cheng described in <ref> [7] </ref>. Pomeranz and Cheng introduce a technique to reduce the number of state bits necessary to encode the states by utilizing delayed versions of the primary inputs and outputs in a FSM to provide a predetermined partial encoding. <p> A transition table with a reduced number of states is then constructed and passed to NOVA to assign values to the required state bits. This last step is omitted if no state bits are needed. Pomeranz and Cheng also discuss incompletely specified machines. More details can be found in <ref> [7] </ref>. Logic Primary Inputs Primary Outputs State Bits Latches Latches outputs are used to provide state information. <p> Two sections lie ahead. The first section describes our attempts to tailor NOVA's assignment for PLDs, and an iterative method for improving NOVA-assigned codes. The second section describes the adaptation of the work in <ref> [7] </ref> to meet the second PLD-specific constraint. 4.1 Improving NOVA's effectiveness for PLDs Two changes are necessary to improve NOVA's assignment for PLDs: * NOVA strives to minimize the total number of product terms and it advocates sharing product terms among state and output functions.
Reference: [8] <author> T. Villa and A. Sangiovanni-Vincentelli. </author> <title> Nova: State assignment of finite state machines for optimal two-level logic implementations. </title> <booktitle> In 26th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 327-332, </pages> <year> 1989. </year>
Reference-contexts: For custom-design implementations, an optimal encoding results in a minimum area used by a two-level Programmable Logic Array (PLA) or by multi-level combinational logic. A few automated finite state assignment tools [2], [4], and <ref> [8] </ref> have been developed to target custom-design implementations. Programmable Logic Devices (PLDs) offer a higher degree of integration over conventional discrete components. PLDs have many advantages over custom-design logic implementations: faster prototyping, rapid bug fixes, and more flexibility in design. <p> State assignment tools have been developed to target custom-design implementations. The state assignment tools Mustang [2] and JEDI [4] target minimizing the number of variables (in true or complemented form) when impelmenting a FSM using multi-level logic. The state assignment tool NOVA <ref> [8] </ref> aims to minimize the number of product terms needed to implement a FSM using a two-level PLA. A PLD block implements a logic function as a sum-of-products. Consequently, we chose to modify and use NOVA to improve state assignment for PLDs.
References-found: 8

