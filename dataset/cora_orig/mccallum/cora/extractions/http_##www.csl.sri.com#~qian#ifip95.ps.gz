URL: http://www.csl.sri.com/~qian/ifip95.ps.gz
Refering-URL: http://www.csl.sri.com/~qian/early-pubs.html
Root-URL: 
Email: qian@csl.sri.com tlunt@arpa.mil  
Title: Toward a MAC policy framework  
Author: Xiaolei Qian Teresa F. Lunt 
Keyword: Heterogeneity, interoperation, mandatory access control, multilevel security, relational database, security policy  
Address: 333 Ravenswood Avenue 3701 North Fairfax Drive Menlo Park, CA 94025 Arlington, VA 22203  
Affiliation: SRI International ARPA/ITO  
Abstract: We propose a formal policy framework of MAC policies in multilevel relational databases. We identify the important components of such policies and their desirable properties. The framework provides a basis for systematically specifying such policies and characterizing their potential mismatches. Based on the framework, we compare and unify the MAC policies and policy components that are proposed in the literature or imposed in existing systems. Our framework could be used to capture and resolve MAC policy mismatches in the trusted interoperation of heterogeneous multilevel relational databases. 
Abstract-found: 1
Intro-found: 1
Reference: <author> R. K. Burns. </author> <title> Integrity and secrecy: Fundamental conflicts in the database environment. </title> <booktitle> In Proceedings of the Third RADC Database Security Workshop, </booktitle> <pages> pages 37-40. </pages> <institution> The MITRE Corporation, </institution> <year> 1990. </year>
Reference-contexts: Constraints are the most important means of specifying data semantics. However, the MAC policies in existing multilevel databases provide neither a precise definition of constraint validity nor an efficient mechanism of constraint enforcement. In fact, it has been argued <ref> (Burns, 1990) </ref>, (Meadows, 1988) that integrity enforcement is in fundamental conflict with secrecy enforcement: no multilevel databases could simultaneously satisfy both integrity and secrecy requirements. An important characteristic of MAC policies is the upward information flow in the lattice, which indicates the believability of low data at high levels.
Reference: <author> F. Chen and R. S. Sandhu. </author> <title> The semantics and expressive power of the MLR data model. </title> <booktitle> In Proceedings of the 1995 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 128-42, </pages> <year> 1995. </year>
Reference-contexts: The maintenance level of LDV (Haigh, 1991) and the data-based semantics of MLR <ref> (Chen, 1995) </ref> generalize the belief-based semantics, by allowing users to specify, for every tuple at a level, at which higher levels it is believed. When the view policy for a tuple is missing, the default coincides with the belief-based semantics.
Reference: <author> C. Garvey and A. Wu. </author> <title> ASD views. </title> <booktitle> In Proceedings of the 1988 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 85-95, </pages> <year> 1988. </year>
Reference-contexts: For example, the domain of primary key attributes can be partitioned such that primary keys for tuples labeled at different levels are disjoint <ref> (Garvey, 1988) </ref>. MissionId Type 101 explore ? Suppose that a &gt;-subject wants to change explore to spy. The restricted-value policy extends the update to: 1. Change explore to p 2. Insert (101, spy) at &gt;. The extended update ensures no-polyinstantiation at the price of causing denial of service to ?-subjects.
Reference: <author> J. Glasgow, G. MacEwen, and P. Panangaden. </author> <title> A logic for reasoning about security. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 10(3) </volume> <pages> 226-64, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: According to the Bell-LaPadula model, low data can be visible at high. However, since low data could contradict high data in terms of the high view constraints, visibility should be distinguished from believability. The filter function (Jajodia, 1990), (Lunt, 1990) and the security logic <ref> (Glasgow, 1992) </ref> proposed in the literature take one extreme position by equating believability to visibility, thus maximizing believability. However, integrity is compromised if a low tuple contradicts some high tuples with respect to the high view constraints, which leads to an invalid high database.
Reference: <author> L. Gong and X. Qian. </author> <title> The complexity and composability of secure interoperation. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 190-200, </pages> <year> 1994. </year>
Reference-contexts: Our framework could be used to capture and resolve the MAC policy mismatches in the trusted interoperation of heterogeneous multilevel databases. As a first step in this direction, we have investigated the trusted interoperation of multilevel databases whose MAC policies mismatch in the lattice component <ref> (Gong, 1994) </ref>. ACKNOWLEDGMENT This work was supported by U.S. Department of Defense Advanced Research Projects Agency and U.S. Air Force Rome Laboratory under contracts F30602-91-C-0092 and F30602-92-C-0140.
Reference: <author> J. T. Haigh, R. C. O'Brien, and D. J. Thomsen. </author> <title> The LDV secure relational DBMS model. </title>
Reference: <editor> In S. Jajodia and C. E. Landwehr, editors, </editor> <booktitle> Database Security, IV: Status and Prospects, </booktitle> <pages> pages 265-79. </pages> <publisher> North-Holland, </publisher> <year> 1991. </year>
Reference-contexts: However, when querying the mission of Enterprise at m 1 or m 2 , subjects still get back an empty answer. In NTML <ref> (Thuraisingham, 1991) </ref>, Thuraisingham first formalized the distinction between visibility and believability by a proof-theoretic semantics of the multilevel relational model, which consists of a nonmonotonic inference rule stating that low data are believable at high as long as they do not contradict high data. <p> The components of a MAC policy could interact in complex ways. For example, the view policy of Trusted ONTOS (Schaefer, 1995) is equivalent to a totally ordered lattice plus NTML <ref> (Thuraisingham, 1991) </ref>. We have also shown in (Qian, 1996) that, for multilevel relational databases with tuple-level labeling, the view policy of (Qian, 1996) applied to the referential integrity property is equivalent to the belief-based semantics (Smith, 1992) applied to the referential security property.
Reference: <author> H. H. Hosmer. </author> <title> Integrating security policies. </title> <booktitle> In Proceedings of the Third RADC Database Security Workshop, </booktitle> <pages> pages 169-73. </pages> <institution> The MITRE Corporation, </institution> <year> 1990. </year>
Reference-contexts: A formal policy framework is needed within which security policies could be characterized and compared <ref> (Hosmer, 1990) </ref>. As a first step in this direction, we propose a formal policy framework for an important component of security policies: the mandatory access control (MAC) policy.
Reference: <author> S. Jajodia and R. Sandhu. </author> <title> Polyinstantiation integrity in multilevel relations. </title> <booktitle> In Proceedings of the 1990 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 104-15, </pages> <year> 1990. </year>
Reference-contexts: According to the Bell-LaPadula model, low data can be visible at high. However, since low data could contradict high data in terms of the high view constraints, visibility should be distinguished from believability. The filter function <ref> (Jajodia, 1990) </ref>, (Lunt, 1990) and the security logic (Glasgow, 1992) proposed in the literature take one extreme position by equating believability to visibility, thus maximizing believability.
Reference: <author> C. E. Landwehr. </author> <title> Formal models for computer security. </title> <journal> ACM Computing Surveys, </journal> <volume> 13(3) </volume> <pages> 247-78, </pages> <month> September </month> <year> 1981. </year>
Reference-contexts: It has been widely accepted that a MAC policy consists of four components: a set of subjects, a set of objects, a lattice, and a mapping that associates levels in the lattice to subjects and objects <ref> (Landwehr, 1981) </ref>. This works fine with multilevel operating systems, because objects such as files do not carry semantics. For multilevel databases where data carry semantics, the same mapping of levels to objects such as elements in tuples could have completely different meanings. <p> (x; y 1 ; z 1 ) ^ SMD l 2 (x; y 2 ; z 2 ) ! y 1 = y 2 ) 2.2 MAC Policy We restrict ourselves to multilevel relational databases whose MAC policies have the simple security property and the fl-property of the Bell-LaPadula model <ref> (Landwehr, 1981) </ref>, which ensure that information does not flow downward in the lattice. * The Simple Security Property. A subject is allowed a read access to an object only if the former's clearance level is identical to or higher than the latter's classification level in the lattice. * The fl-Property.
Reference: <author> T. F. Lunt, D. E. Denning, R. R. Schell, M. Heckman, and W. R. Shockley. </author> <title> The Seaview security model. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 16(6) </volume> <pages> 593-607, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: According to the Bell-LaPadula model, low data can be visible at high. However, since low data could contradict high data in terms of the high view constraints, visibility should be distinguished from believability. The filter function (Jajodia, 1990), <ref> (Lunt, 1990) </ref> and the security logic (Glasgow, 1992) proposed in the literature take one extreme position by equating believability to visibility, thus maximizing believability. However, integrity is compromised if a low tuple contradicts some high tuples with respect to the high view constraints, which leads to an invalid high database.
Reference: <author> T. F. Lunt, P. G. Neumann, D. E. Denning, R. R. Schell, M. Heckman, and W. R. Shockley. </author> <title> Secure distributed data views: Security policy and interpretation for DBMS for a class A1 DBMS. </title> <type> Technical Report RADC-TR-89-313, volume 1, </type> <institution> Rome Air Development Center, Air Force Systems Command, </institution> <month> December </month> <year> 1989. </year>
Reference-contexts: The canonical MAC policy for federated databases proposed in (Pernul, 1992) does not solve this problem. The formulation of a MAC policy in a multilevel database often includes some constraint policies, such as the labeling policy of Seaview <ref> (Lunt, 1989) </ref> and the classification constraints of LDV (Haigh, 1991). Constraints are the most important means of specifying data semantics. However, the MAC policies in existing multilevel databases provide neither a precise definition of constraint validity nor an efficient mechanism of constraint enforcement.
Reference: <author> C. Meadows and S. Jajodia. </author> <title> Integrity versus security in multilevel secure databases. </title> <editor> In C. E. Landwehr, editor, </editor> <booktitle> Database Security: Status and Prospects, </booktitle> <pages> pages 89-101. </pages> <publisher> North-Holland, </publisher> <year> 1988. </year>
Reference-contexts: Constraints are the most important means of specifying data semantics. However, the MAC policies in existing multilevel databases provide neither a precise definition of constraint validity nor an efficient mechanism of constraint enforcement. In fact, it has been argued (Burns, 1990), <ref> (Meadows, 1988) </ref> that integrity enforcement is in fundamental conflict with secrecy enforcement: no multilevel databases could simultaneously satisfy both integrity and secrecy requirements. An important characteristic of MAC policies is the upward information flow in the lattice, which indicates the believability of low data at high levels.
Reference: <author> J. B. Michael, E. H. Sibley, R. F. Baum, and F. Li. </author> <title> On the axiomatization of security policy: Some tentative observations about logic representation. </title> <editor> In B. M. Thuraisingham and C. E. Landwehr, editors, </editor> <booktitle> Database Security, VI: Status and Prospects, </booktitle> <pages> pages 367-86. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: Thus the formulation of MAC policies in multilevel databases should provide means to detect and remove such inference channels. Existing research on security policies has focused on using first-order logic to specify, analyze, and enforce the security requirements of an application (see for example <ref> (Michael, 1993) </ref>, (Morris, 1992), (Sibley, 1992), (Steinke, 1993)). Security policies are formulated in terms of a set of subjects, a set of objects, and a set of rules governing the various modes of access of subjects to objects. There are several problems associated with applying this approach to MAC policies. <p> There are several problems associated with applying this approach to MAC policies. The objects are usually the physical containers of data rather than the semantics of data, and are often too coarse in granularity (e.g., buildings in <ref> (Michael, 1993) </ref> and files in (Morris, 1992)). Moreover, first-order logic is not expressive enough to capture the upward information flow in the lattice, or the dynamic behavior of a database in constraint enforcement.
Reference: <author> P. Morris and J. McDermid. </author> <title> The structure of permissions: A normative framework for access rights. </title> <editor> In C. E. Landwehr and S. Jajodia, editors, </editor> <title> Database Security, V: </title> <booktitle> Status and Prospects, </booktitle> <pages> pages 77-97. </pages> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: Thus the formulation of MAC policies in multilevel databases should provide means to detect and remove such inference channels. Existing research on security policies has focused on using first-order logic to specify, analyze, and enforce the security requirements of an application (see for example (Michael, 1993), <ref> (Morris, 1992) </ref>, (Sibley, 1992), (Steinke, 1993)). Security policies are formulated in terms of a set of subjects, a set of objects, and a set of rules governing the various modes of access of subjects to objects. There are several problems associated with applying this approach to MAC policies. <p> There are several problems associated with applying this approach to MAC policies. The objects are usually the physical containers of data rather than the semantics of data, and are often too coarse in granularity (e.g., buildings in (Michael, 1993) and files in <ref> (Morris, 1992) </ref>). Moreover, first-order logic is not expressive enough to capture the upward information flow in the lattice, or the dynamic behavior of a database in constraint enforcement.
Reference: <author> J.-M. Nicolas and H. Gallaire. </author> <title> Data base: Theory vs. interpretation. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and Databases, </booktitle> <pages> pages 33-54. </pages> <publisher> Plenum Press, </publisher> <year> 1978. </year>
Reference-contexts: A perceived world is a view of the actual world as perceived by a group of users. Information in a perceived world is the knowledge (of a group of users) of the truth value of a statement about the actual world <ref> (Nicolas, 1978) </ref>, which could be either an elementary fact such as "Enterprise is on mission #101 to Rigel" or a general law such as "starships have unique missions". A (single-level) relational database captures information in a perceived world|the view of the actual world as perceived by users of the database. <p> A standard model-theoretic formulation of a relational database is to interpret relation names as predicates, integrity constraints as axioms in a first-order theory, and relations as forming a first-order structure of the theory <ref> (Nicolas, 1978) </ref>. A database is valid if the structure is a model of the theory.
Reference: <author> G. </author> <title> Pernul. Canonical security modeling for federated databases. </title> <booktitle> In Proceedings of the IFIP WG 2.6 Conference on Semantics of Interoperable Database Systems, </booktitle> <year> 1992. </year>
Reference-contexts: The canonical MAC policy for federated databases proposed in <ref> (Pernul, 1992) </ref> does not solve this problem. The formulation of a MAC policy in a multilevel database often includes some constraint policies, such as the labeling policy of Seaview (Lunt, 1989) and the classification constraints of LDV (Haigh, 1991). Constraints are the most important means of specifying data semantics.
Reference: <author> X. Qian. </author> <title> Inference channel-free integrity constraints in multilevel relational databases. </title> <booktitle> In Proceedings of the 1994 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 158-67, </pages> <year> 1994. </year>
Reference-contexts: The extended update ensures no-polyinstantiation at the price of causing denial of service to ?-subjects. The inference channels at update time remain, because an insertion of mission 101 by ?-subjects will be rejected, leading ?-subjects to infer that mission 101 has a high type. - In <ref> (Qian, 1994) </ref>, we showed that no update policies exist for the no-polyinstantiation security property that have all the desirable properties identified earlier, which indicates the inherent difficulty of enforcing unconditional no-polyinstantiation.
Reference: <author> X. Qian and T. F. Lunt. </author> <title> Tuple-level vs. element-level classification. </title> <editor> In B. M. Thuraising-ham and C. E. Landwehr, editors, </editor> <booktitle> Database Security, VI: Status and Prospects, </booktitle> <pages> pages 301-15. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: As a consequence, the interpretation policy makes it possible to compare the semantics of multiple MAC policies. Here, we investigate the interpretation policy for the most common multilevel databases, namely multilevel databases with tuple-level labeling, where objects are tuples. In <ref> (Qian, 1993) </ref>, we developed an interpretation policy for multilevel databases with element-level labeling. 3.1 Multilevel Relational Model Let U be a finite set of attributes. If X; Y are subsets of U , then XY denotes the union of X; Y .
Reference: <author> X. Qian and T. F. Lunt. </author> <title> A semantic framework of the multilevel secure relational model. </title> <journal> To appear in IEEE Transactions on Knowledge and Data Engineering, </journal> <year> 1996. </year>
Reference-contexts: the following multilevel relation over the schema of Figure 2 and the lattice of Figure 1: Starship Mission Destination Enterprise 102 Rigel m 1 Enterprise 103 Talos m 2 When querying the mission of Enterprise at &gt;, subjects will get back either 102 or 103 but not both. z In <ref> (Qian, 1996) </ref>, we developed a view policy for multilevel databases with tuple-level labeling, where the view constraints consists of key and referential integrity properties. Informally our view policy states what tuples are believable at a level. First, all tuples labeled at a level should be believable. <p> In <ref> (Qian, 1996) </ref>, we developed an update policy for multilevel databases with tuple-level labeling, where the labeling constraints consist of polyinstantiation and referential security properties. <p> The components of a MAC policy could interact in complex ways. For example, the view policy of Trusted ONTOS (Schaefer, 1995) is equivalent to a totally ordered lattice plus NTML (Thuraisingham, 1991). We have also shown in <ref> (Qian, 1996) </ref> that, for multilevel relational databases with tuple-level labeling, the view policy of (Qian, 1996) applied to the referential integrity property is equivalent to the belief-based semantics (Smith, 1992) applied to the referential security property. <p> For example, the view policy of Trusted ONTOS (Schaefer, 1995) is equivalent to a totally ordered lattice plus NTML (Thuraisingham, 1991). We have also shown in <ref> (Qian, 1996) </ref> that, for multilevel relational databases with tuple-level labeling, the view policy of (Qian, 1996) applied to the referential integrity property is equivalent to the belief-based semantics (Smith, 1992) applied to the referential security property. The framework provides a basis for systematically specifying MAC policies and characterizing their potential mismatches.
Reference: <author> R. Sandhu and S. Jajodia. </author> <title> Eliminating polyinstantiation securely. </title> <journal> Computers & Security, </journal> <volume> 11(6) </volume> <pages> 547-62, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Lets consider the restricted-value policy of <ref> (Sandhu, 1992) </ref> and the insert-low policy of (Wiseman, 1990), both of which are designed to enforce no-polyinstantiation. x For easy presentation, we adapt these policies to the context of multilevel databases with tuple-level labeling.
Reference: <author> M. Schaefer, P. Martel, T. Kanawati, and V. Lyons. </author> <title> Multilevel data model for the trusted ONTOS prototype. </title> <booktitle> In Proceedings of the Ninth IFIP WG 11.3 Working Conference on Database Security, </booktitle> <pages> pages 121-41, </pages> <year> 1995. </year>
Reference-contexts: The components of a MAC policy could interact in complex ways. For example, the view policy of Trusted ONTOS <ref> (Schaefer, 1995) </ref> is equivalent to a totally ordered lattice plus NTML (Thuraisingham, 1991).
Reference: <author> E. H. Sibley, J. B. Michael, and R. L. Wexelblat. </author> <title> Use of an experimental policy workbench: Description and preliminary results. </title> <editor> In C. E. Landwehr and S. Jajodia, editors, </editor> <title> Database Security, V: </title> <booktitle> Status and Prospects, </booktitle> <pages> pages 47-76. </pages> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: Thus the formulation of MAC policies in multilevel databases should provide means to detect and remove such inference channels. Existing research on security policies has focused on using first-order logic to specify, analyze, and enforce the security requirements of an application (see for example (Michael, 1993), (Morris, 1992), <ref> (Sibley, 1992) </ref>, (Steinke, 1993)). Security policies are formulated in terms of a set of subjects, a set of objects, and a set of rules governing the various modes of access of subjects to objects. There are several problems associated with applying this approach to MAC policies.
Reference: <author> K. Smith and M. Winslett. </author> <title> Entity modeling in the MLS relational model. </title> <booktitle> In Proceedings of the Eighteenth International Conference on Very Large Data Bases, </booktitle> <pages> pages 199-210, </pages> <year> 1992. </year>
Reference-contexts: Smith and Winslett proposed a belief-based semantics of the multilevel relational model <ref> (Smith, 1992) </ref>, which defines a multilevel relational database as a set of unrelated single-level relational databases, one for every level. They made a clear distinction between visibility and believability, and took the other extreme position by allowing no low tuples to be believable at high, thus minimizing believability. <p> We have also shown in (Qian, 1996) that, for multilevel relational databases with tuple-level labeling, the view policy of (Qian, 1996) applied to the referential integrity property is equivalent to the belief-based semantics <ref> (Smith, 1992) </ref> applied to the referential security property. The framework provides a basis for systematically specifying MAC policies and characterizing their potential mismatches. Based on the framework, we have compared and unified the MAC policies and policy components that are proposed in the literature or imposed in existing systems.
Reference: <author> G. Steinke and M. Jarke. </author> <title> Support for security modeling in information systems design. </title>
Reference: <editor> In B. M. Thuraisingham and C. E. Landwehr, editors, </editor> <booktitle> Database Security, VI: Status and Prospects, </booktitle> <pages> pages 125-41. </pages> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: Existing research on security policies has focused on using first-order logic to specify, analyze, and enforce the security requirements of an application (see for example (Michael, 1993), (Morris, 1992), (Sibley, 1992), <ref> (Steinke, 1993) </ref>). Security policies are formulated in terms of a set of subjects, a set of objects, and a set of rules governing the various modes of access of subjects to objects. There are several problems associated with applying this approach to MAC policies.
Reference: <author> B. M. Thuraisingham. </author> <title> A nonmonotonic typed multilevel logic for multilevel secure database/knowledge-base management systems. </title> <booktitle> In Proceedings of the Fourth IEEE Workshop on Computer Security Foundations, </booktitle> <pages> pages 127-38, </pages> <year> 1991. </year>
Reference-contexts: However, when querying the mission of Enterprise at m 1 or m 2 , subjects still get back an empty answer. In NTML <ref> (Thuraisingham, 1991) </ref>, Thuraisingham first formalized the distinction between visibility and believability by a proof-theoretic semantics of the multilevel relational model, which consists of a nonmonotonic inference rule stating that low data are believable at high as long as they do not contradict high data. <p> The components of a MAC policy could interact in complex ways. For example, the view policy of Trusted ONTOS (Schaefer, 1995) is equivalent to a totally ordered lattice plus NTML <ref> (Thuraisingham, 1991) </ref>. We have also shown in (Qian, 1996) that, for multilevel relational databases with tuple-level labeling, the view policy of (Qian, 1996) applied to the referential integrity property is equivalent to the belief-based semantics (Smith, 1992) applied to the referential security property.
Reference: <author> S. R. Wiseman. </author> <title> Control of confidentiality in databases. </title> <journal> Computers & Security, </journal> <volume> 9(6) </volume> <pages> 529-37, </pages> <month> October </month> <year> 1990. </year>
Reference-contexts: Lets consider the restricted-value policy of (Sandhu, 1992) and the insert-low policy of <ref> (Wiseman, 1990) </ref>, both of which are designed to enforce no-polyinstantiation. x For easy presentation, we adapt these policies to the context of multilevel databases with tuple-level labeling.
References-found: 28

