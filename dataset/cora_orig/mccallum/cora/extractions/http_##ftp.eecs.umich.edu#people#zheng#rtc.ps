URL: http://ftp.eecs.umich.edu/people/zheng/rtc.ps
Refering-URL: http://ftp.eecs.umich.edu/people/zheng/
Root-URL: http://www.eecs.umich.edu
Title: test  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. McFarland, </author> <title> "Protocols in a computer internetworking environment," </title> <booktitle> Proceedings of EASCON 79, </booktitle> <year> 1979. </year>
Reference-contexts: For these applications, there is a need for a third type of service | called real-time channels | which guarantees the timely, sequenced delivery of packets from a source host/node to a destination host/node. The need for real-time channels was first noted in <ref> [1] </ref>, stating that in addition to TCP, at least two other types of transport layer protocols are desirable: (i) a speech protocol guaranteeing sequenced, timely delivery of messages without considering the reliability associated with message delivery, and (ii) a real-time protocol guaranteeing both timeliness and high reliability.
Reference: [2] <author> D. Ferrari and D. C. Verma, </author> <title> "A scheme for real-time channel establishment in wide-area networks," </title> <journal> IEEE J. Selected Areas Communication, </journal> <pages> pp. 368-379, </pages> <year> 1990. </year>
Reference-contexts: These are not suitable for real-time applications since urgent packets should be given priority over non-urgent ones. The increase of the switching node's processing power with advanced processor technology has enabled more sophisticated switching techniques to be used. Ferrari and Verma <ref> [2] </ref> proposed to use a deadline-driven scheduling policy instead of the FCFS or RR policy. Each arriving packet is assigned a deadline according to its requested delivery delay bound. The packet with the earliest deadline is transmitted first. <p> Especially, there are no known efficient solutions to the schedulability problem: given a set of real-time channels, can all packets in these channels be delivered before their requested delay bounds ? It is essential to solve the schedulability problem when real-time channels are to be established. Ferrari and Verma <ref> [2] </ref> obtained a solution to the schedulability problem under the assumption that the summation of the maximum packet transmission times over all real-time channels passing through a link is not larger than the minimum packet interarrival times of these channels. <p> Since any set of channels which are schedulable under the priority-driven policy are also schedulable under the deadline-driven policy, this condition is a sufficient schedulability condition for the deadline-driven policy. It can be proved that under the assumption of <ref> [2] </ref>, the sufficient condition in [5] is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. <p> It can be proved that under the assumption of <ref> [2] </ref>, the sufficient condition in [5] is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. <p> It can be proved that under the assumption of <ref> [2] </ref>, the sufficient condition in [5] is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. However, using sufficient schedulability conditions for establishing real-time channels may still under-utilize the network's transmission capacity since a violation of the sufficient conditions does not necessarily mean that the channels cannot be established. <p> It can be proved that under the assumption of <ref> [2] </ref>, the sufficient condition in [5] is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. However, using sufficient schedulability conditions for establishing real-time channels may still under-utilize the network's transmission capacity since a violation of the sufficient conditions does not necessarily mean that the channels cannot be established. <p> Otherwise, the connection request is denied. The user requesting a channel to be established should either change the delay re quirements or request the channel to be established later. The above procedure can be performed in a decentralized <ref> [2] </ref> or centralized [6] manner. The reader is referred to [6] for implementation details of the channel establishment procedure. We will in this paper focus on the performance verification, i.e., checking whether the requested end-to-end delivery delay bound along a given route can be guaranteed or not. <p> Because of the limited transmission capacity of each link, no bounded queueing delay can be guaranteed unless the source node specifies its pattern of traffic generation. In other words, as was assumed in <ref> [2, 5] </ref>, a user requesting a real-time channel to be established must specify two parameters, T and C, describing his traffic characteristics, where T is the minimum packet inter-arrival time and C is the maximum packet-transmission time over a link. 2 C=T determines the maximum traffic load generated by the channel. <p> The packet inter-arrival times at intermediate links, however, may be smaller than T because of the different delays experienced by the packets at the previous links. In this case, as discussed in <ref> [2, 5] </ref>, a logical packet arrival time t 0 | which is defined as the time the packet would have arrived at the link if it had experienced the largest delays (i.e., the requested delay bounds) at all previous links | should be used to compute the packet's deadline, t 0 <p> These early packets may suffer larger delays or may even get lost, but they will not affect other packets. Thus, establishing real-time channels is also an efficient means of flow control <ref> [2] </ref>. 3. Application of the solutions to Problems A and B is not limited to real-time channel establishment. A link can represent any time-critical resource like a processor, and 8 channels can represent any semi-periodic 3 time-critical tasks. <p> Using the formulae in Theorem 3, d 8 = 9 and d 16 = 6. Thus, we get the solution d 3 = maxfd t : t 2 Gg = 9. The correctness of the solution was verified in Example 1. Notice that the result of <ref> [2] </ref> can not be used for this example since C 1 + C 2 + C 3 = 9 &gt; minfT 1 ; T 2 ; T 3 g = 8.
Reference: [3] <author> C. L. Liu and J. W. Layland, </author> <title> "Scheduling algorithms for multiprogramming in a hard-real-time environment," </title> <journal> Journal of the ACM, </journal> <volume> vol. 20, no. 1, </volume> <pages> pp. 46-61, </pages> <year> 1973. </year>
Reference-contexts: Each arriving packet is assigned a deadline according to its requested delivery delay bound. The packet with the earliest deadline is transmitted first. The deadline-driven scheduling policy was proved to be optimal <ref> [3] </ref> in the sense that if packets can be transmitted before their deadlines using any scheduling policy, so can they using the deadline-driven scheduling policy. Thus, using the deadline-driven scheduling policy can enhance a link's ability to accommodate real-time channels. <p> A link can represent any time-critical resource like a processor, and 8 channels can represent any semi-periodic 3 time-critical tasks. So, our solutions can also be used for (semi-)periodic task scheduling problems as those discussed in <ref> [3] </ref>. Actually, the problems addressed in this paper are more general than the ones in [3] since we do not require the deadline d to be equal to the task period T . 3 Preemptive Deadline-Driven Scheduling Policy We derive solutions to Problems A and B for the preemptive deadline-driven scheduling <p> So, our solutions can also be used for (semi-)periodic task scheduling problems as those discussed in <ref> [3] </ref>. Actually, the problems addressed in this paper are more general than the ones in [3] since we do not require the deadline d to be equal to the task period T . 3 Preemptive Deadline-Driven Scheduling Policy We derive solutions to Problems A and B for the preemptive deadline-driven scheduling policy in this section. <p> Thus, we conclude that when the requested delay bounds are equal to the minimum packet inter-arrival times, the channels are schedulable over the link if and only if the maximum link utilization does not exceed 1. This is the well-known result obtained in <ref> [3] </ref> for the periodic task scheduling problem. Two additional properties about the schedulability of channels over a link follow immediately from Theorem 1. 1. Increasing the requested delay bounds d i 's will not affect the schedulability of channels. 2.
Reference: [4] <author> H. Saito, </author> <title> "Optimal queueing discipline for real-time traffic at ATM switching nodes," </title> <journal> IEEE Transactions on Communications, </journal> <volume> vol. 38, no. 12, </volume> <pages> pp. 2131-2136, </pages> <year> 1990. </year> <month> 24 </month>
Reference-contexts: Thus, using the deadline-driven scheduling policy can enhance a link's ability to accommodate real-time channels. Several ways of implementing the deadline-driven scheduling policy at a switching node were discussed in <ref> [4] </ref>. However, as pointed out in [5], the main drawback of deadline-driven scheduling is the difficulty in computing guarantees.
Reference: [5] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communicaiton in multi-hop networks," </title> <booktitle> in Proc. 11-th Int'l Conf. on Dist. Comput. Syst., </booktitle> <pages> pp. 300-307, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Thus, using the deadline-driven scheduling policy can enhance a link's ability to accommodate real-time channels. Several ways of implementing the deadline-driven scheduling policy at a switching node were discussed in [4]. However, as pointed out in <ref> [5] </ref>, the main drawback of deadline-driven scheduling is the difficulty in computing guarantees. <p> This assumption is quite restrictive in practice since it limits the traf 3 fic types to be serviced. Without using this assumption, Kandlur et al. <ref> [5] </ref> established a sufficient condition to check the schedulability of channels. They first derived the schedula-bility conditions from the priority-driven scheduling policy. <p> Since any set of channels which are schedulable under the priority-driven policy are also schedulable under the deadline-driven policy, this condition is a sufficient schedulability condition for the deadline-driven policy. It can be proved that under the assumption of [2], the sufficient condition in <ref> [5] </ref> is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. <p> It can be proved that under the assumption of [2], the sufficient condition in <ref> [5] </ref> is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. <p> It can be proved that under the assumption of [2], the sufficient condition in <ref> [5] </ref> is equivalent to the sufficient condition in [2]. So, the result in [5] subsumes that in [2]; that is, [5] can deal with situations where the assumption of [2] fails to hold. However, using sufficient schedulability conditions for establishing real-time channels may still under-utilize the network's transmission capacity since a violation of the sufficient conditions does not necessarily mean that the channels cannot be established. <p> Because of the limited transmission capacity of each link, no bounded queueing delay can be guaranteed unless the source node specifies its pattern of traffic generation. In other words, as was assumed in <ref> [2, 5] </ref>, a user requesting a real-time channel to be established must specify two parameters, T and C, describing his traffic characteristics, where T is the minimum packet inter-arrival time and C is the maximum packet-transmission time over a link. 2 C=T determines the maximum traffic load generated by the channel. <p> The packet inter-arrival times at intermediate links, however, may be smaller than T because of the different delays experienced by the packets at the previous links. In this case, as discussed in <ref> [2, 5] </ref>, a logical packet arrival time t 0 | which is defined as the time the packet would have arrived at the link if it had experienced the largest delays (i.e., the requested delay bounds) at all previous links | should be used to compute the packet's deadline, t 0 <p> Notice that the result of [2] can not be used for this example since C 1 + C 2 + C 3 = 9 &gt; minfT 1 ; T 2 ; T 3 g = 8. To compare the proposed scheme with that of <ref> [5] </ref>, let us compute the worst-case delay for o 3 's packets from the priority-driven scheduling policy. <p> Thus, the solution in <ref> [5] </ref> to Example 2 would be at least 15. 5 One can see that the gap between the sufficient condition of [5] and our sufficient and necessary condition for the schedulability of real-time channels is quite large, indicating the superiority of the latter. 2 It is worth mentioning that our results <p> Thus, the solution in <ref> [5] </ref> to Example 2 would be at least 15. 5 One can see that the gap between the sufficient condition of [5] and our sufficient and necessary condition for the schedulability of real-time channels is quite large, indicating the superiority of the latter. 2 It is worth mentioning that our results remain true even if the requested delay bound d i is larger than the minimum packet inter-arrival time T i . <p> The main 4 Assigning o 3 's priority higher than o 1 or o 2 will cause one of o 1 or o 2 's packet to miss its deadline when two packets, one for each channel, arrive simultaneously. 5 Actually, since 15 is larger than T 3 , <ref> [5] </ref> cannot give a solution for Example 2. 16 objective of RDAP is to free over-reserved link resources (i.e., increase d fl i to d i ) in order to accommodate more channels in future. RDAP should depend on the topology of the network and traffic patterns. <p> However, since the computational complexity of Theorem 5 is in the order of the number of channels to be scheduled, Theorem 5 is useful when a smaller channel establishment time is required. In this example, the solution obtained from Theorem 5 is shown to be better than Kandlur's <ref> [5] </ref> (see Example 2). Although this cannot be said in general, our solution always 19 requires less computation than Kandlur's. 4 Non-preemptive Deadline-Driven Scheduling Policy All the results obtained in the last section are based on the assumption that a preemptive deadline-driven scheduling policy is used.
Reference: [6] <author> D. D. Kandlur and K. G. Shin, </author> <title> "Design of a communication subsystem for HARTS," </title> <type> Technical Report CSE-TR-109-91, </type> <institution> CSE Division, EECS Department, The University of Michigan, </institution> <year> 1991. </year>
Reference-contexts: Otherwise, the connection request is denied. The user requesting a channel to be established should either change the delay re quirements or request the channel to be established later. The above procedure can be performed in a decentralized [2] or centralized <ref> [6] </ref> manner. The reader is referred to [6] for implementation details of the channel establishment procedure. We will in this paper focus on the performance verification, i.e., checking whether the requested end-to-end delivery delay bound along a given route can be guaranteed or not. <p> Otherwise, the connection request is denied. The user requesting a channel to be established should either change the delay re quirements or request the channel to be established later. The above procedure can be performed in a decentralized [2] or centralized <ref> [6] </ref> manner. The reader is referred to [6] for implementation details of the channel establishment procedure. We will in this paper focus on the performance verification, i.e., checking whether the requested end-to-end delivery delay bound along a given route can be guaranteed or not.
Reference: [7] <author> I. Cidon, I. Gopal, G. Grover, and M. Sidi, </author> <title> "Real-time packet switching: A performance analysis," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, no. 9, </volume> <pages> pp. 1576-1586, </pages> <year> 1988. </year>
Reference-contexts: The switching delay depends on the switching architecture and technique used by the node. According to the discussion in <ref> [7] </ref>, the data transfer speed inside a switching node is 5 usually much faster than that of an output link, and thus, the switching delays are negligible as compared to the other two elements. In other words, we assume an output-queueing model of the switching node.
Reference: [8] <author> D. Peng, </author> <title> Modeling, assignment and scheduling of tasks in distributed real-time systems, </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering and Computer Science, The University of Michigan, </institution> <address> Ann Arbor, MI, </address> <year> 1989. </year>
Reference-contexts: + i=1 = i=1 0: Since the above inequality holds for j = 0; 1; :::; m, the theorem follows. 2 An interesting by-product of Theorem 4 is a sufficient condition for the schedulability of channels when d i =T i equals a constant , called the the system hazard <ref> [8] </ref>, for all 1 i n. Peng [8] proved that the schedulability condition is P n i=1 C i =T i . <p> above inequality holds for j = 0; 1; :::; m, the theorem follows. 2 An interesting by-product of Theorem 4 is a sufficient condition for the schedulability of channels when d i =T i equals a constant , called the the system hazard <ref> [8] </ref>, for all 1 i n. Peng [8] proved that the schedulability condition is P n i=1 C i =T i . <p> Using Theorem 4, we have another sufficient condition using the system hazard: max f (1 + (1 i=1 k X C i =T k ) 1 g: Since C i =T k C i =T i , Peng's condition in <ref> [8] </ref> implies ours, so it is not as tight as ours.
Reference: [9] <author> M.-S. Chen, K. G. Shin, and D. D. Kandlur, </author> <title> "Addressing, routing and broadcasting in hexagonal mesh multiprocessors," </title> <journal> IEEE Trans. Comput., </journal> <volume> vol. C-39, no. 1, </volume> <pages> pp. 10-18, </pages> <month> January </month> <year> 1991. </year> <month> 25 </month>
Reference-contexts: An even more difficult situation is when a link/node failure occurs, which means the source-to-destination route must be altered. Solutions to these problems are currently under development and will be reported in forthcoming papers. We are also implementing our algorithms on HARTS <ref> [9] </ref>, an experimental distributed real-time system currently being developed at the Real-time Computing Laboratory, The University of Michigan.
References-found: 9

