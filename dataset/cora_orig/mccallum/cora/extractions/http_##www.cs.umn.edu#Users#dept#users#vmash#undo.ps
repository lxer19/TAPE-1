URL: http://www.cs.umn.edu/Users/dept/users/vmash/undo.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/vmash/
Root-URL: http://www.cs.umn.edu
Email: fvmash,maley,riedlg@cs.umn.edu  
Title: User Recovery of Audio Operations  
Author: Vahid Mashayekhi Mike Maley John Riedl 
Keyword: Digital Audio, User Recovery, Human Computer Interfaces, Undo/Skip/Redo.  
Address: Minneapolis, MN  
Affiliation: Department of Computer Science University of Minnesota  
Abstract: Support for and understanding of recovery in applications that use audio is not as widespread. Audio is characterized by its large volume, lack of easy indexing, and difficulty in defining inverse operations. We present a theoretical model of recovery for audio operations that will help user interface designers and implementors. Our model maps an audio operation to a recovery policy and then the recovery policy to a recovery mechanism. The model uses a classification of audio operations that aids in choosing applicable recovery policies 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ben Schneiderman. </author> <title> Designing the User Interface: Strategies for Effective Human-Computer Interaction. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1987. </year>
Reference-contexts: For instance, users of text editors like vi and EMACS are given various steps of recovery in order to restore the state of the editing session to a correct previous state. For any interactive application, recovery should be an important design issue <ref> [1] </ref>. The benefits of a user recovery mechanism include improved usability and learn-ability of the system, support for user's explorations of alternatives, and graceful degradation in case of user mistakes.
Reference: [2] <author> Shiro Sakata. </author> <title> Development and evaluation of an In-house multimedia desktop coneference. </title> <journal> IEEE journal on selected areas in communcations, </journal> <month> April </month> <year> 1990. </year>
Reference-contexts: Today, a host of systems, such as text editors, spreadsheets, database applications, drawing tools, news readers, calendar programs, and mail systems provide user recovery. Computer applications that use audio are becoming important tools in industry and research: Audio con-ferencers saves time and money <ref> [2] </ref> and multimedia documents enhance information transfer [3]. Audio data has unique characteristics that makes its manipulation more challenging than textual data: Size: The size of audio data is significantly larger than text, i.e., it has a larger storage size versus content ratio.
Reference: [3] <author> Harry Forsdick. </author> <title> Explorations into real time multimedia conferencing. </title> <booktitle> In Proceedings of the International Conference on Computer Message Systems, </booktitle> <year> 1985. </year>
Reference-contexts: Computer applications that use audio are becoming important tools in industry and research: Audio con-ferencers saves time and money [2] and multimedia documents enhance information transfer <ref> [3] </ref>. Audio data has unique characteristics that makes its manipulation more challenging than textual data: Size: The size of audio data is significantly larger than text, i.e., it has a larger storage size versus content ratio.
Reference: [4] <author> Douglas Terry and Daniel Swinehart. </author> <title> Managing stored voice in the Etherphone system. </title> <journal> ACM Transactions on Computer Systems, </journal> <month> Febru-ary </month> <year> 1988. </year>
Reference-contexts: This large size leads to a storage problem when the system has to support the recovery of commands that destructively modify the data, like cutting and pasting <ref> [4] </ref>. Continuity: Due to the continuous nature of audio, indexing or selecting is nonintuitive. The notion of a "chunk" is not well-defined the way it is for textual data. For instance, consider the difficulty of deleting one second of sound from the middle of an audio annotation. <p> file Stop, Playing Stop Weak Resume playing Concatenate, Editing Complete Undo Weak Decrement reference count of new voice rope Substring, Editing Complete Undo Weak Decrement reference count of new voice rope Replace, Editing Complete Undo Weak Decrement reference count of new voice rope Table 2: Etherphone 3.1 Etherphone The Etherphone <ref> [4] </ref> system provides support for the recording, playing and editing of recorded voice in client applications. The recorded voice is stored in voice files on a special voice file server. Operations on the audio data are performed on an abstraction called a voice rope.
Reference: [5] <author> R. Steinmetz and T. Meyer. </author> <title> Modelling distributed multimedia applications. </title> <booktitle> In Int. Workshop on Adv. Comm. and Appl. for High Speed Networks, </booktitle> <month> March </month> <year> 1992. </year>
Reference-contexts: We address the problem of defining a chunk of audio data by defining granularities at which the recovery policies operate. Finally, we taxonomize audio operations using the classification scheme of Steinmetz and Meyer to ease defining inverses for them <ref> [5] </ref>. Previous research in this area has concentrated on invertible operations for text and can be divided into two general categories [6, 7]: history undo/undo and linear undo/redo. In history undo/undo model, the recovery command undo operates on both itself and primitive commands causing the last command to be reversed. <p> These four contexts are analogous to the four functional units with single input and single output of Steinmetz and Meyer <ref> [5] </ref>. Audioconferenc-ing represents the generation and presentation of nondeterministic audio data. Intermediate devices and buffering are not important. The intent is to tightly couple the speakers and listeners. Recording represents the conversion of audio data into persistent, deterministic data. There is an explicit motivation to store the audio data semi-permanently.
Reference: [6] <author> Jeffery Scott Vitter. US&R: </author> <title> A new framework for redoing. </title> <journal> IEEE Software, </journal> <volume> 1(4) </volume> <pages> 39-52, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: Finally, we taxonomize audio operations using the classification scheme of Steinmetz and Meyer to ease defining inverses for them [5]. Previous research in this area has concentrated on invertible operations for text and can be divided into two general categories <ref> [6, 7] </ref>: history undo/undo and linear undo/redo. In history undo/undo model, the recovery command undo operates on both itself and primitive commands causing the last command to be reversed. The command history records both primitive and recovery commands.
Reference: [7] <author> Yiya Yang. </author> <title> Undo support models. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> 28 </volume> <pages> 457-481, </pages> <year> 1988. </year>
Reference-contexts: Finally, we taxonomize audio operations using the classification scheme of Steinmetz and Meyer to ease defining inverses for them [5]. Previous research in this area has concentrated on invertible operations for text and can be divided into two general categories <ref> [6, 7] </ref>: history undo/undo and linear undo/redo. In history undo/undo model, the recovery command undo operates on both itself and primitive commands causing the last command to be reversed. The command history records both primitive and recovery commands.
Reference: [8] <author> John Riedl, Vahid Mashayekhi, Jim Schnepf, Mark Claypool, and Dan Frankowski. Suitesound: </author> <title> A system for distributed collaborative multimedia. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <pages> pages 600-610, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Silence Deletion: Silence Deletion is an operation that removes chunks of silence from an audio sample based on a silence detection algorithm such as HAM or Diff <ref> [8] </ref>. It can be used in the Audioconferencing context to reduce network traffic. In the Playing context it can save time, since the listener would not have to listen to silence. In the Recording context silence deletion can be used to save disk space.
Reference: [9] <author> Chris Neuwirth, David Kaufer, Ravinder Chand-hok, and James Morris. </author> <booktitle> Issues in the design of computer support for co-authoring and commenting. In Proceedings of the ACM Computer Supported Cooperative Work Conference, </booktitle> <pages> pages 183-195. </pages> <institution> Association for Computing Machinery, </institution> <year> 1990. </year>
Reference-contexts: To completely undo any of these operations involves switching a pointer back to the original rope, which is kept on the undo list, and decre-menting the reference count of the voice rope that was created. Table 2 summarizes our discussion. 3.2 PREP The PREP Editor <ref> [9] </ref> is an environment for collaborative editing and annotating. Annotations can be either text, audio, or drawing. The audio annotations are represented as little speaker icons in the document. Besides the recording and playing of the annotations, PREP supports some basic operations: Selection, Cut, Copy and Paste.
References-found: 9

