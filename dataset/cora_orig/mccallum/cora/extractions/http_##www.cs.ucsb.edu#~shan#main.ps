URL: http://www.cs.ucsb.edu/~shan/main.ps
Refering-URL: http://www.cs.ucsb.edu/~shan/thesis.html
Root-URL: http://www.cs.ucsb.edu
Title: Scheduling in Synchronous Networks and the Greedy Algorithm 1 (Extended Abstract)  
Author: King-Shan Lui Shmuel Zaks 
Abstract: We study the greedy algorithm for message delivery in synchronous networks. In the initial configuration processors are holding messages, each having a destination and a deadline. The processors have to determine a feasible schedule, by which all messages will arrive at their destinations and meet their deadlines, and such that at each step a processor will not send on any of its outgoing links more messages than the capacity of that link. This problem can also be viewed as a scheduling problem in various applications. We study bottleneck-free networks, in which the capacity of each edge outgoing any processor is at least the sum of the capacities of the edges incoming it. For such networks where there is at most one simple path connecting any pair of vertices, we determine a necessary and sufficient condition for the initial configuration to have a feasible schedule, and prove that if this condition holds then the greedy algorithm, that chooses at each step the most urgent messages (those with closest deadlines), determines such a feasible schedule. We start with directed chain networks with unit capacities, and modify the results to general chains, directed rings, trees, and then for the general above-mentioned class of networks. For networks with a bottleneck we show that no algorithm, that makes decisions based only on local information, can solve the problem. For bottleneck-free networks, in which the messages between two processors have to follow only one of the paths connecting them, the problem of deciding whether there exists a valid schedule is NP-complete.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Blazewicz, K. Ecker, G. Schmidt and J. W~eglarz, </author> <title> Scheduling in Computer and Manufacturing Systems, </title> <publisher> Springer-Verlag, </publisher> <address> Germany, </address> <year> 1993. </year>
Reference-contexts: Message delivery problems in networks, in various layers of communication, are often involving queuing theory problems (see [2]). Other scheduling problems in computer networks usually involve scheduling tasks on various machines or a variety of load balancing problems (for a comprehensive discussion, see, e.g., <ref> [1, 3] </ref>); in all of these applications, the algorithms are sequential (even if eventually they are performed in parallel on various machines), or are done asynchronously (like some of the load balancing problems).
Reference: [2] <author> D. Bertsekas and R.G. Gallager, </author> <title> Data Networks, </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1992. </year>
Reference-contexts: In studies of networks, usually either link capacities are ignored, or synchrony is not assumed; ATM networks suggest a model in which both assumptions hold. Message delivery problems in networks, in various layers of communication, are often involving queuing theory problems (see <ref> [2] </ref>).
Reference: [3] <author> T.L. Casavant and J.G. Kuhl, </author> <title> A taxonomy of scheduling in general-purpose distributed computer systems, </title> <booktitle> in Readings in Distributed Systems, </booktitle> <editor> T. Casavant and M. Singhal (eds.), </editor> <publisher> IEEE Computer Society Press, </publisher> <year> 1994, </year> <pages> pp. 31-51. </pages>
Reference-contexts: Message delivery problems in networks, in various layers of communication, are often involving queuing theory problems (see [2]). Other scheduling problems in computer networks usually involve scheduling tasks on various machines or a variety of load balancing problems (for a comprehensive discussion, see, e.g., <ref> [1, 3] </ref>); in all of these applications, the algorithms are sequential (even if eventually they are performed in parallel on various machines), or are done asynchronously (like some of the load balancing problems).
Reference: [4] <author> R. G. Gallager, P. A. Humblet and P. M. Spira, </author> <title> A distributed algorithm for minimum spanning tree, </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 5, 1, </volume> <year> 1983, </year> <pages> pp. 66-77. </pages>
Reference-contexts: Though in general asynchronous networks, where messages can suffer finite but arbitrary delay (like the commonly-used message-passing model described in <ref> [4] </ref>) no such deadlines exist, in most networks deadlines do exist, usually employing certain timeout mechanisms (see, e.g., [7]); Our study of the problem was motivated by a similar scenario, of having a datagram service over ATM (see, e.g., [6]).
Reference: [5] <author> M.R. Garey and D.S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, W.H. </title> <publisher> Freeman and Co., </publisher> <year> 1979. </year>
Reference-contexts: The messages has to travel from a to all processors other than b, and they all have the same deadline. We use a reduction from a variant of the Partition problem (see <ref> [5] </ref>). 2 Acknowledgment: We thank Ornan Gerstel for suggesting the problem and for helpful comments.
Reference: [6] <author> O. Gerstel and S. Zaks, </author> <title> The Virtual Path Layout Problem in Fast Networks, </title> <booktitle> Proceedings of the 13th ACM Symposium on Principles of Distributed Computing (PODC), </booktitle> <address> Los Angeles, CA, U.S.A., </address> <month> August </month> <year> 1994, </year> <pages> pp. 235-243. </pages>
Reference-contexts: finite but arbitrary delay (like the commonly-used message-passing model described in [4]) no such deadlines exist, in most networks deadlines do exist, usually employing certain timeout mechanisms (see, e.g., [7]); Our study of the problem was motivated by a similar scenario, of having a datagram service over ATM (see, e.g., <ref> [6] </ref>). In studies of networks, usually either link capacities are ignored, or synchrony is not assumed; ATM networks suggest a model in which both assumptions hold. Message delivery problems in networks, in various layers of communication, are often involving queuing theory problems (see [2]).
Reference: [7] <author> F. Wilder, </author> <title> A guide to the TCP/IP protocol suite , Artech House telecommunications library, </title> <publisher> Artech House, </publisher> <address> Boston, </address> <year> 1993. </year> <month> 11 </month>
Reference-contexts: Though in general asynchronous networks, where messages can suffer finite but arbitrary delay (like the commonly-used message-passing model described in [4]) no such deadlines exist, in most networks deadlines do exist, usually employing certain timeout mechanisms (see, e.g., <ref> [7] </ref>); Our study of the problem was motivated by a similar scenario, of having a datagram service over ATM (see, e.g., [6]). In studies of networks, usually either link capacities are ignored, or synchrony is not assumed; ATM networks suggest a model in which both assumptions hold.
References-found: 7

