URL: http://www.cs.wisc.edu/~cs640-1/papers/m-tcp.ps
Refering-URL: http://www.cs.wisc.edu/~cs640-1/740.syllabus.html
Root-URL: http://www.cs.wisc.edu
Email: fkbrown,singhg@cs.sc.edu  
Phone: Tel: 803-777-2596  
Title: M-TCP: TCP for Mobile Cellular Networks  
Author: Kevin Brown and Suresh Singh 
Date: July 29, 1997  
Address: SC 29205  
Affiliation: Department of Computer Science University of South Carolina Columbia,  
Abstract: Transport connections set up over wireless links are frequently plagued by problems such as high bit error rate (BER), frequent disconnections of the mobile user, and low wireless bandwidth that may change dynamically. In this paper, we study the effects of frequent disconnections and low variable bandwidth on TCP throughput and propose a protocol that addresses this problem. We discuss the implementation (in NetBSD) of our protocol called M-TCP and compare its performance against other mobile TCP implementations. We show that M-TCP has two significant advantages over other solutions: (1) it maintains end-to-end TCP semantics and, (2) it delivers excellent performance for environments where the mobile encounters periods of disconnection.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Personal communication with Mike Cunningham. </author> <note> See also www.metricom.com. </note>
Reference-contexts: Disconnection periods can be of the order of several seconds causing packet loss or delay in the transmission of acknowledgements of received packets. In the case of Metricom's Ricochet network <ref> [1] </ref>, for instance, a disconnection may last as long as 1 minute! These disconnections result in lost data segments and lost ACKs which, in turn, result in the TCP sender timing out and closing its congestion window, thus greatly reducing the efficiency of the connection.
Reference: [2] <author> E. Ayanoglu, S. Paul, T.F. LaPorta, K.K. Sabnani and R.D. Gitlin, "AIRMAIL: </author> <title> A link-layer protocol for wireless networks", </title> <journal> J. Wireless Networks, </journal> <volume> Vol. 1, </volume> <year> (1995), </year> <pages> pp. 47-60. </pages>
Reference-contexts: may be true in some cases, recent studies [14] indicate that the bit error may be no worse then 10 5 which can be reduced by one or two orders of magnitude by the use of appropriate FEC (Forward Error Correcting) codes and retransmission schemes at the link layer, see <ref> [2] </ref>. However, let us assume for the sake of this discussion that the wireless link is susceptible to inordinately high bit error rates. Bit errors cause packets to get corrupted which result in lost TCP data segments or acknowledgements. <p> Some schemes attempt to allievate the problem of losses over the wireless link by using FEC codes or by employing ARQ (automatic repeat request) messages [17] the MH requests retransmissions of specific messages that were corrupted. The AIRMAIL <ref> [2] </ref> protocol is one good example of an approach that uses both of these techniques. The drawback to using link layer solutions is that they cannot account for disconnections.
Reference: [3] <author> A. Bakre and B. R. Badrinath,"I-TCP: </author> <title> Indirect TCP for Mobile Hosts", </title> <booktitle> Proceedings of the 15th International Conference on Distributed Computing Systems, </booktitle> <address> Vancouver, Canada, </address> <month> June </month> <year> 1995, </year> <pages> pp. 136-143. </pages>
Reference-contexts: Many papers have been written proposing methods for improving TCP performance over a wireless link, <ref> [3, 21, 6, 7, 12] </ref>. All these papers have, however, concentrated on only one problem associated with wireless links a perceived high bit-error rate (BER) over the wireless link. <p> An improved version of the snoop module [7] adds selective retransmissions from the intermediate node to the mobile. Another solution to the problem caused by high BER is the I-TCP <ref> [3] </ref> protocol (Indirect-TCP). In the I-TCP protocol a TCP connection between a fixed host and a Mobile Host (MH) is split in two at the Mobile Support Station (MSS) or base station. Data sent to the MH is received and ACK'ed by the MSS before being delivered to the MH. <p> Thus, only a small amount of state is transferred from the old SH to the new SH (2 tcpcbs and inpcbs and 1 mtb) no more than 500 bytes in all. It is noteworthy that, in contrast to our protocol, transfer of large socket buffers in I-TCP <ref> [3] </ref> may take as long as 1.5 seconds (see [4]). * Serial timeouts and the accompanying periods of inactivity are avoided by disabling exponential backoff in M-TCP. <p> If we transfer a 500KByte file over the 32kbps link, it takes 62.5 seconds. With a 5 second mean cell latency, the mobile will encounter approximately 12 disconnection events. Note that <ref> [3, 12] </ref> also use cell latencies and disconnection periods in the same range. For different experiments, the cell latency and disconnection lengths were chosen either from a standard normal distribution or from an exponential distribution.
Reference: [4] <author> A. Bakre and B. R. </author> <title> Badrinath,"Handoff and Systems Support for Indirect TCP/IP", </title> <booktitle> 2nd Usenix Symposium on Mobile and Location-Independent Computing, </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: It is noteworthy that, in contrast to our protocol, transfer of large socket buffers in I-TCP [3] may take as long as 1.5 seconds (see <ref> [4] </ref>). * Serial timeouts and the accompanying periods of inactivity are avoided by disabling exponential backoff in M-TCP. Observe that M-TCP is more efficient than TCP because the sender is spoofed into transmitting data to the SH at the rate at which data can be delivered to the MH.
Reference: [5] <author> A. Bakre and B. R. </author> <title> Badrinath,"Indirect Transport Layer Protocols for Mobile Wireless Environment", in Mobile Computing, </title> <editor> eds. T. Imielinski and H.F. Korth, </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> (1996), </year> <pages> pp. 229-252. </pages>
Reference-contexts: Repeated errors will ensure that the congestion window at the sender remains small resulting in low throughput (see <ref> [5] </ref>). It is important to note that FEC may be used to combat high BER, but it will waste valuable wireless bandwidth when correction is not necessary.
Reference: [6] <author> H. Balakrishnan, S. Seshan, and Randy Katz, </author> <title> "Improving Reliable Transport and Handoff Performance in Cellular Wireless Networks", </title> <journal> Wireless Networks, </journal> <volume> Vol. 1, No. 4, </volume> <month> December </month> <year> (1995). </year>
Reference-contexts: Many papers have been written proposing methods for improving TCP performance over a wireless link, <ref> [3, 21, 6, 7, 12] </ref>. All these papers have, however, concentrated on only one problem associated with wireless links a perceived high bit-error rate (BER) over the wireless link. <p> In section 2.2 we discuss the relative performance of these solutions and outline their drawbacks. Finally, other related work is presented in section 2.3. 2.1 Existing Solutions One proposed solution for losses caused by high BER is the Berkeley Snoop Module <ref> [6] </ref>. The snoop module resides at an intermediate host near the mobile user (typically the base station). It inspects the TCP header of TCP data packets and acknowledgements which pass through and buffers copies of the data packets. <p> The sender may believe a segment is delivered correctly to the MH since the MSS ACK'ed it even if the MH disconnected before receiving this segment. This is clearly a serious problem for many applications. The snoop module <ref> [6, 7] </ref> was designed to combat high BER environments by providing local retransmissions of data and local filtering of ACKs to prevent the sender from invoking congestion control. The snoop module implements a round-trip timer, much like TCP and does retransmissions of unacknowledged segments based on this timer.
Reference: [7] <author> H. Balakrishnan, V.N. Padmanabhan, S. Seshan, and Randy Katz, </author> <title> "A Comparison of Mechanisms for Improving TCP Performance over Wireless Links", </title> <booktitle> ACM SIGCOMM'96, </booktitle> <pages> pp. 256-269, </pages> <address> Palo Alto, CA, </address> <month> August </month> <year> (1996). </year>
Reference-contexts: Many papers have been written proposing methods for improving TCP performance over a wireless link, <ref> [3, 21, 6, 7, 12] </ref>. All these papers have, however, concentrated on only one problem associated with wireless links a perceived high bit-error rate (BER) over the wireless link. <p> The module also implements its own retransmission timer, similar to the TCP retransmission timeout, and performs retransmissions when an acknowledgement is not received within this interval. An improved version of the snoop module <ref> [7] </ref> adds selective retransmissions from the intermediate node to the mobile. Another solution to the problem caused by high BER is the I-TCP [3] protocol (Indirect-TCP). <p> Let us first consider the two split connection protocols, I-TCP and MTCP (note that <ref> [7] </ref> discusses these and other minor variants of the split connection idea as well). It is easy to see that the sender is shielded from any knowledge of the wireless link including disconnections and high BER because the MSS ACKs all data even before it is ACK'ed by the MH. <p> It is easy to see that the sender is shielded from any knowledge of the wireless link including disconnections and high BER because the MSS ACKs all data even before it is ACK'ed by the MH. However, as <ref> [7] </ref> showed, it is necessary to implement SACK (Selective ACK) over the MSS-MH part of the connection in order to recover quickly in high bit-error environments. <p> The sender may believe a segment is delivered correctly to the MH since the MSS ACK'ed it even if the MH disconnected before receiving this segment. This is clearly a serious problem for many applications. The snoop module <ref> [6, 7] </ref> was designed to combat high BER environments by providing local retransmissions of data and local filtering of ACKs to prevent the sender from invoking congestion control. The snoop module implements a round-trip timer, much like TCP and does retransmissions of unacknowledged segments based on this timer. <p> It is easy to see that the snoop module (in particular the version that incorporates SACK <ref> [7] </ref>) performs extremely well in high BER environments because the RTO estimate between the MSS and MH is small resulting in quick retransmissions of lost data. In addition, the persist timer ensures that if there has been a bursty loss (2-6 packets, see [7]), the snoop module will retransmit some data <p> (in particular the version that incorporates SACK <ref> [7] </ref>) performs extremely well in high BER environments because the RTO estimate between the MSS and MH is small resulting in quick retransmissions of lost data. In addition, the persist timer ensures that if there has been a bursty loss (2-6 packets, see [7]), the snoop module will retransmit some data within 200 msec (this interval is smaller than the minimum granularity of TCP timers which is 500 msec) thus ensuring that the sender does not invoke congestion control due Fast Retransmit Snoop I-TCP & MTCP Our M-TCP End-to-end TCP semantics p p p
Reference: [8] <author> B.R. Badrinath and T. </author> <title> Imielinski,"Location Management for Networks with Mobile Users", in Mobile Computing, </title> <editor> eds. T. Imielinski and H.F. Korth, </editor> <publisher> Kluwer Academic Publishers, </publisher> <year> (1996), </year> <pages> pp. 129-152. </pages>
Reference-contexts: Many solutions have been proposed for all of these problems. For instance, [13, 9, 20] discuss several aspects of routing in a mobile environment and compare different solutions including Mobile-IP. Other authors have addressed the problem of location management, see for instance <ref> [8] </ref>. A solution for improving the performance of UDP over wireless links was proposed by us, [11].
Reference: [9] <author> P. Bhagwat, S. Tripathi and C. </author> <title> Perkins,"Network Layer Mobility: an Architecture and Survey", </title> <type> Technical Report, </type> <institution> CS-TR-3570, University of Maryland (September 13, </institution> <year> 1995). </year>
Reference-contexts: Many solutions have been proposed for all of these problems. For instance, <ref> [13, 9, 20] </ref> discuss several aspects of routing in a mobile environment and compare different solutions including Mobile-IP. Other authors have addressed the problem of location management, see for instance [8]. A solution for improving the performance of UDP over wireless links was proposed by us, [11].
Reference: [10] <author> K. Brown and S. Singh, </author> <title> "A Network Architecture for Mobile Computing", </title> <booktitle> Proc. IEEE INFOCOMM'96, </booktitle> <address> S.F. CA, </address> <month> March </month> <year> 1996, </year> <pages> pp. 1388-1396. </pages>
Reference-contexts: The detailed architecture is presented in <ref> [10] </ref> and in this section we briefly summarize the main points. Our architecture may be viewed as a three-level hierarchy (see Figure 2). At the lowest level are the mobile hosts (MH) who communicate with MSS nodes in each cell. <p> Thus, the service-provider sets up a connection with the SH assuming the SH is the other end-point of the connection. The SH sets up another connection to the MH. This allows us to address the problems listed above as follows: * A bandwidth management module at the SH (see <ref> [10] </ref>) assigns a fixed amount of bandwidth to each connection (this is recomputed periodically based on the changing needs of other MHs) and ensures that data is transmitted to all MHs at their assigned rate. <p> Before doing so, however, we briefly discuss our assumptions regarding the mobile networking environment. Wireless bandwidth will always be a precious resource and we therefore believe that it ought to be allocated to users based on their need. In our architecture, we use a bandwidth management module (see <ref> [10] </ref>), that resides at the SH, to perform this task. This module determines the amount of bandwidth to be allocated to each connection within each cell (unfortunately, a discussion of the implementation of this module is beyond the scope of this paper). <p> Hence, in comparison to a router which would just pass the packet through, SH-TCP/M-TCP does one additional copy. Handoff Transfer of state is actually handled by the handoff module that is incorporated within out transport layer design (see <ref> [10] </ref>). When handoff begins, M-TCP is notified and the send window is shrunk on the TCP side. Next, some of the state regarding the connection is serialized at the old SH and passed to the new SH.
Reference: [11] <author> K. Brown and S. Singh, "M-UDP: </author> <title> UDP for Mobile Networks", </title> <journal> ACM Computer Communication Review, </journal> <volume> Vol. 26(5), Pct. </volume> <year> 1996, </year> <pages> pp. 60-78. </pages>
Reference-contexts: For instance, [13, 9, 20] discuss several aspects of routing in a mobile environment and compare different solutions including Mobile-IP. Other authors have addressed the problem of location management, see for instance [8]. A solution for improving the performance of UDP over wireless links was proposed by us, <ref> [11] </ref>. In this paper, however, we are only interested in studying the behavior of the TCP protocol over wireless links and we will therefore only provide a comprehensive literature review of research relevant to this problem.
Reference: [12] <author> R. Caceres and L. Iftode, </author> <title> "Improving the Performance of Reliable Transport Protocols in Mobile Computing Environments", </title> <journal> IEEE Selected Areas in Communications, </journal> <volume> Vol. 13(5), </volume> <month> (June </month> <year> 1994), </year> <pages> pp. 850-857. </pages>
Reference-contexts: Many papers have been written proposing methods for improving TCP performance over a wireless link, <ref> [3, 21, 6, 7, 12] </ref>. All these papers have, however, concentrated on only one problem associated with wireless links a perceived high bit-error rate (BER) over the wireless link. <p> MTCP/SRP also increases throughput by using selective repeat which reduces duplicate sends. <ref> [12] </ref> presents a solution that addresses the problem caused by short disconnections (where one or two segments only are lost). It, however, does not split the TCP connection. <p> The timeout period is long and even though the MH may have completed the handoff it will have to wait for the full timeout period before it begins receiving packets from the sender. The fast retransmit idea presented in <ref> [12] </ref> forces the MH to retransmit, in triplicate, the last old ACK as soon as it finishes a handoff. <p> In effect, each MSS runs a snoop module for MHs located in its own cell as well as in all adjacent cells! The processing and buffering overhead is clearly too high for this solution to be practical. The fast retransmit solution <ref> [12] </ref> was designed specifically to combat the effects of short disconnections on TCP throughput. <p> If we transfer a 500KByte file over the 32kbps link, it takes 62.5 seconds. With a 5 second mean cell latency, the mobile will encounter approximately 12 disconnection events. Note that <ref> [3, 12] </ref> also use cell latencies and disconnection periods in the same range. For different experiments, the cell latency and disconnection lengths were chosen either from a standard normal distribution or from an exponential distribution.
Reference: [13] <author> S. Cheshire and M. </author> <booktitle> Baker,"Internet Mobility 4 fi 4", Proceedings ACM SIGCOMM'96, </booktitle> <month> (Oct. </month> <year> 1996), </year> <pages> pp. 318-329. </pages>
Reference-contexts: Many solutions have been proposed for all of these problems. For instance, <ref> [13, 9, 20] </ref> discuss several aspects of routing in a mobile environment and compare different solutions including Mobile-IP. Other authors have addressed the problem of location management, see for instance [8]. A solution for improving the performance of UDP over wireless links was proposed by us, [11].
Reference: [14] <author> D. Eckhardt and P. </author> <title> Steenkiste,"Measurement and Analysis of the Error Characteristics of an In-Building Wireless Network", </title> <booktitle> Proceedings ACM SIGCOMM'96, </booktitle> <month> (Oct. </month> <year> 1996), </year> <pages> pp. 243-254. </pages>
Reference-contexts: The Effect of a High Bit Error Rate (BER) It has been suggested that the wireless link suffers from a high bit error rate. While this may be true in some cases, recent studies <ref> [14] </ref> indicate that the bit error may be no worse then 10 5 which can be reduced by one or two orders of magnitude by the use of appropriate FEC (Forward Error Correcting) codes and retransmission schemes at the link layer, see [2]. <p> A second assumption we make in our development is that the bit error rate visible at the transport layer will be small. This assumption is based on two observations: first, <ref> [14] </ref> notes that the BER over wireless channels is, in actuality, quite small (of the order of 10 5 ) and, second, FEC and link-layer mechanisms can further reduce the observed bit error rate.
Reference: [15] <author> R. Ghai and S. Singh, </author> <title> "An Architecture and Communication Protocol for Picocellular Networks", </title> <journal> IEEE Personal Communications Magazine, Third Quarter 1994, </journal> <pages> pp. 36-46. </pages>
Reference-contexts: The base stations are connected to the wired infrastructure to provide access to the Internet. A cell may be as small as tens of meters in diameter (in the case of in-building picocellular networks <ref> [15] </ref>) or as large as a mile in diameter (macrocellular network).
Reference: [16] <author> R. Gopalakrishnan, K. Brown and S. Singh, </author> <title> "Transport State Handoff in Mobile Networks", </title> <type> Manuscript. </type>
Reference-contexts: this information to preemptively shrink the sender's window before the sender goes into exponential backoff (to implement this scheme, we maintain a timer at the SH that is initialized to this estimated RTO value). * When a MH regains its connection, it sends a greeting packet to the SH (see <ref> [16] </ref>). M-TCP is notified of this event and it passes on this information to SH-TCP which, in turn, sends an ACK to the sender and reopens its receive window (and hence the sender's transmit window).
Reference: [17] <author> S. Nanda, </author> <title> R.P. Ejzak and B.T. Doshi,"A retransmission scheme for circuit-mode data on wireless links", </title> <journal> IEEE JSAC, </journal> <year> 1994. </year>
Reference-contexts: Some schemes attempt to allievate the problem of losses over the wireless link by using FEC codes or by employing ARQ (automatic repeat request) messages <ref> [17] </ref> the MH requests retransmissions of specific messages that were corrupted. The AIRMAIL [2] protocol is one good example of an approach that uses both of these techniques. The drawback to using link layer solutions is that they cannot account for disconnections.
Reference: [18] <author> K. Seal and S. </author> <title> Singh,"Loss Profiles: A quality of service measure in mobile computing", </title> <journal> J. Wireless Networks, </journal> <volume> Vol. 2 (1996), </volume> <pages> pp. 45-61. </pages>
Reference-contexts: Contrast this with the case where the MSSs manage all transport connections here there will be O (n) state handoffs per unit time (see <ref> [18] </ref>). 3. Since several MSSs are controlled by a single SH, the roaming MH remains within the domain of the same SH for long time periods 1 .
Reference: [19] <author> S. </author> <title> Singh,"Quality of Service Guarantees in Mobile Computing", </title> <journal> Journal Computer Communications, </journal> <volume> Vol 19(4), </volume> <pages> pp. </pages> <month> 359-371 (April </month> <year> 1996). </year>
Reference: [20] <author> F. Teraoka and M. Tokoro, </author> <title> "Host Migration Transparency in IP Networks: The VIP Approach", </title> <journal> SIGCOMM CCR, </journal> <volume> Vol. 23, No. 1, </volume> <month> Jan </month> <year> 1993, </year> <pages> pp. 45-65. </pages>
Reference-contexts: Many solutions have been proposed for all of these problems. For instance, <ref> [13, 9, 20] </ref> discuss several aspects of routing in a mobile environment and compare different solutions including Mobile-IP. Other authors have addressed the problem of location management, see for instance [8]. A solution for improving the performance of UDP over wireless links was proposed by us, [11].
Reference: [21] <author> R. Yavatkar and N. </author> <title> Bhagawat,"Improving End-to-End Performance of TCP over Mobile Internetworks", </title> <booktitle> IEEE 1994 Workshop on Mobile Computing Systems and Applications, </booktitle> <address> Santa Cruz, CA, </address> <year> (1994). </year>
Reference-contexts: Many papers have been written proposing methods for improving TCP performance over a wireless link, <ref> [3, 21, 6, 7, 12] </ref>. All these papers have, however, concentrated on only one problem associated with wireless links a perceived high bit-error rate (BER) over the wireless link. <p> Note that on the connection between the MSS and MH it is not necessary to use TCP, rather some protocol optimized for the wireless link could be used. The MTCP protocol of <ref> [21] </ref> is very similar to I-TCP. It also splits a TCP connection in two one from the MH to MSS and another from the MSS to the FH (i.e., the Fixed Host or sender). The MH to MSS connection passes through MHP, a session layer protocol.
References-found: 21

