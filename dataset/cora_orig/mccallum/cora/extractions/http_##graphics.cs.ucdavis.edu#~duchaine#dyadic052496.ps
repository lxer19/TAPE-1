URL: http://graphics.cs.ucdavis.edu/~duchaine/dyadic052496.ps
Refering-URL: http://graphics.cs.ucdavis.edu/~duchaine/dyadic.html
Root-URL: http://www.cs.ucdavis.edu
Title: Dyadic Splines  
Author: By Mark Alan Duchaineau 
Date: May, 1996  
Affiliation: Department of Computer Science University of California, Davis  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Barghiel, Cristin, </author> <title> "Feature Oriented Composition of B-Spline Surfaces," </title> <type> Master's Thesis, </type> <institution> U. of Waterloo, </institution> <month> March, </month> <year> 1994. </year>
Reference-contexts: This has the desirable effect that the offset shape tracks any changes in the base surface in an intuitive way. A further enhancement along these lines was introduced in Barghiel's thesis <ref> [1] </ref>, where more general offset placement and overlaps are considered. 2.3.1 Forsey-Bartels Offsets Forsey and Bartels utilize B-spline refinement to convert coarse control points to a finer set. Detail is then introduced by specifying offsets to the finer set of control points. <p> Initially, two endpoints are given at level ` = 0 that define a line segment over an interval. This segment is split at its midpoint, which is then perturbed by an amount chosen at random from a given distribution (such as a uniform distribution over <ref> [1; 1] </ref>). This yields the two-segment function at level ` = 1. This process is repeated to produce subsequent levels, but with the expected size of the perturbation halved at each level. <p> For simplicity, assume that initial positions are given at level ` = 0. The index relationships and domain intervals for a generic parent and its children are shown in Figure 3.1.1a. A tree of indices is shown in 3.1.1b for t 2 <ref> [0; 1] </ref>. <p> child t = i 2 ` t Level Index Tree t = 0 t = 1 t 0 0 2 0 1 2 3 4 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 (a) parent and children (b) indices for t 2 <ref> [0; 1] </ref> P i1 P i P i+1 1 6 1 P i1 P i P i+1 4 4 (a) left child (b) right child 0 1=8 4=8 6=8 4=8 1=8 0 Degree Footprint Scale n = 0 1 1 1 n = 2 1 3 3 1 1=4 n = <p> The displacements that must be zero are depicted for the cubic case in With the observations so far, a dyadic-spline function f : <ref> [0; 1] </ref> ! &lt; with a finite number of nonzero displacements can be converted to a finite collection of local B-splines. The conversion algorithm recursively descends the domain interval tree whenever f (t) is not guaranteed to be a B-spline locally for t 2 I `;i . <p> A second method to evaluate a function, called table-lookup, is to produce a table of range values, and use this table repeatedly when function values are needed. For example, if the domain of interest is <ref> [0; 1] </ref>, then a table with one hundred evenly spaced entries would be F i = f ((i 1=2)=100) with i = 1; : : : ; 100. This is especially useful when function computations are expensive and are used many times. <p> A simplistic lossy bit compression method can also be derived from these approximation techniques. 5.1 Bottom-Up Approximation For bottom-up approximation, it is assumed that positions P ` max have been obtained as samples or by fitting to a continuous target function g (t) over domain t 2 <ref> [0; 1] </ref> as described earlier in section 2.2.5. Let the dyadic-spline displacements D `;i be in canonical form for some degree n and filter width parameter k, and let Q `;i be the compacted form of these displacements. <p> Let the dyadic-spline displacements D `;i be in canonical form for some degree n and filter width parameter k, and let Q `;i be the compacted form of these displacements. For simplicity, assume that the dyadic spline f (t) obtained from these displacements is periodic over <ref> [0; 1] </ref>, and therefore for each level ` only a finite number of indices, i = 0; : : : ; 2 ` 1, need be considered. The approximation algorithm will set some of the compacted displacements to zero until a desired complexity or error threshold is crossed. <p> There is no concern about maintaining continuity between domain intervals, since the estimate will be used over each domain interval independently and the output approximation will be smooth regardless of the estimate continuity. For degree n, the Bernstein/Bezier basis functions on I = <ref> [0; 1] </ref> are s (t) = n ! for s = 0; 1; : : : ; n. <p> Precomputing the Estimate-Fit Kernel Since the local estimate bases are translated and dilated copies of the basis for domain I = <ref> [0; 1] </ref>, the constants F `;1 `;j do not vary based on level or position, but rather on the estimate basis index s and on the relative neighborhood index j i. Let the constants be called fi s ji where fi s `;1 `;j for any `, i and j. <p> This generalizes the notion of a displacement edit to allow templates to be superimposed at arbitrary positions and scales on the underlying curve. One form of template is related to the pasting method introduced by Barghiel in her Master's thesis <ref> [1] </ref>. The final mechanism shown in part (f) is sculpting, wherein a tool modifies a curve continuously as it moves along a user-specified path. Interactive sculpting (of surfaces) was introduced by Stoneking in his Master's thesis [36]. Each of these editing mechanisms fits nicely into the framework of dyadic splines. <p> In general, only a finite interval of parameters are of interest. To simplify the discussion, assume this interval is t 2 <ref> [0; 1] </ref>. 74 (d) (e) (f) 6.1 Displacement Edits Since dyadic splines are defined in terms of the displacements D `;i , the most direct means of manipulating a dyadic-spline curve is to interactively "drag" one displacement at a time. <p> Fractal detail is generated by first producing random compacted displacements for levels ` = b` r0 c; : : : ; d` r1 e as ~ Q `;i = b ` h2 l R `;i 79 where R `;i is chosen uniformly from <ref> [1; 1] </ref> and h is a scaling factor. <p> An example of local roughening is shown in Figure 6.4.2. 80 6.5 Template Edits As pointed out in Barghiel's thesis <ref> [1] </ref>, the use of offset frames for displacements is just an approximation of the more general notion of continuously varying offsets with general positions, scales and shapes. Generalizing further, the fundamental capability is to allow arbitrary template shapes to be superimposed on an original curve. <p> For this, a smoothing area is defined using the concept of a trim curve [4], previously used in the methods for trimmed surface patches. A trim curve c (t) is a continuous, periodic mapping from t 2 <ref> [0; 1] </ref> to the surface domain (u; v) 2 &lt; 2 . This curve encloses a domain area that will serve as the locality to be smoothed. 97 The smoothing operation blends between the original displacements D L;i and the smoothed ones D L;i .
Reference: [2] <author> Bartels, Richard H., John C. Beatty and Brian A. Barsky, </author> <title> An Introduction to Splines for use in Computer Graphics and Geometric Modeling, </title> <publisher> Morgan Kauf-mann, </publisher> <address> Los Altos, CA, </address> <year> 1987. </year>
Reference-contexts: B-splines have been found to be useful in a wide variety of modeling and rendering problems <ref> [2, 15] </ref>. The most elegant rigorous treatment of B-splines and refinement is through the use of symmetric n-affine functions called blossoms [32].
Reference: [3] <author> Berman, Deborah F., Jason T. Bartell and David H. Salesin, </author> <title> "Multiresolution Painting and Compositing," </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <month> July, </month> <year> 1994, </year> <pages> pp 85-90. </pages>
Reference-contexts: The case n = 3 with t i = i is shown for domain piece <ref> [3; 4] </ref>. One combination step diagram in the general case is f (x 1 ; : : : ; x k ; t j ; : : : ; t j+nk1 ) for k = 0; : : : ; n 1. <p> Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding [26], multiresolution editing <ref> [3, 16] </ref>, and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22]. Compression is a natural byproduct of the wavelet transform since coefficients of transformed functions tend to have large magnitudes concentrated at coarse resolutions or along edges.
Reference: [4] <author> Casale, Malcolm S., </author> <title> "Free-Form Solid Modeling with Trimmed Surface Patches," </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> Vol. 7, No. 1, </volume> <month> January, </month> <year> 1987, </year> <pages> pp 33-43. </pages>
Reference-contexts: The case n = 3 with t i = i is shown for domain piece <ref> [3; 4] </ref>. One combination step diagram in the general case is f (x 1 ; : : : ; x k ; t j ; : : : ; t j+nk1 ) for k = 0; : : : ; n 1. <p> For this, a smoothing area is defined using the concept of a trim curve <ref> [4] </ref>, previously used in the methods for trimmed surface patches. A trim curve c (t) is a continuous, periodic mapping from t 2 [0; 1] to the surface domain (u; v) 2 &lt; 2 .
Reference: [5] <author> Catmull, Edwin E. and James H. Clark, </author> <title> "Recursively Generated B-spline Surfaces on Arbitrary Topological Meshes," </title> <booktitle> Computer Aided Design, </booktitle> <volume> Vol. 10, No. 6, </volume> <month> November, </month> <year> 1978, </year> <pages> pp 350-355. </pages>
Reference-contexts: The primary generalization envisioned is to extend the dyadic-spline formulation and algorithms to subdivision surfaces, such as those introduced by Catmull and Clark <ref> [5] </ref>. If an additional generalization were included, allowing sharp features such as the vertex of a cone or the edge of a cylinder, then a single generalized dyadic spline could elegantly capture most of the geometric shapes found in solid modeling and computer graphics.
Reference: [6] <author> Chui, Charles K., </author> <title> An Introduction to Wavelets, </title> <publisher> Academic Press, </publisher> <address> San Diego, </address> <year> 1992. </year>
Reference-contexts: F M C F M C F M C 26 Mallat's original paper uses orthonormal scaling function bases `;i , but the technique also works for nonorthogonal scaling function bases such as those associated with uniform B-splines 1 under dyadic refinement <ref> [6, 35] </ref>. The multiresolution basis functions for cubic uniform B-splines are shown in Figure 2.4.2. 0;i . . . . . . 2;i . . . Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . . <p> The multiresolution basis functions for cubic uniform B-splines are shown in Figure 2.4.2. 0;i . . . . . . 2;i . . . Many different wavelets may be chosen to compliment the scaling functions . <ref> [6] </ref>. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding [26], multiresolution editing [3, 16], and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22]. <p> Many different wavelets may be chosen to compliment the scaling functions . <ref> [6] </ref>. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding [26], multiresolution editing [3, 16], and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22]. Compression is a natural byproduct of the wavelet transform since coefficients of transformed functions tend to have large magnitudes concentrated at coarse resolutions or along edges.
Reference: [7] <author> Cohen, Elain, Tom Lyche and Richard Riesenfeld, </author> <title> "Discrete B-Splines and Subdivision Techniques in Computer-Aided Geometric Design and Computer Graphics," </title> <journal> Computer Graphics and Image Processing, </journal> <volume> Vol. 14, No. 2, </volume> <month> October, </month> <year> 1980, </year> <pages> pp 87-111. </pages>
Reference-contexts: The new control points are simply blossom evaluations at the new control point suites. This viewpoint is simpler that the original development of general B-spline refinement <ref> [7] </ref>. 2.2.3 Dyadic Refinement In the development of the dyadic splines, the cases of interest are when partitions are made up of successive levels of dyadic rationals, that is, going from a partition t `;i = i=2 ` to t `+1;i = i=2 `+1 .
Reference: [8] <author> Daubechies, Ingrid, </author> <title> Ten Lectures on Wavelets, </title> <institution> Society for Industrial and Applied Mathematics, </institution> <address> Philadelphia, </address> <year> 1992. </year> <title> [9] de Boor, Carl, "On Calculating with B-splines," </title> <journal> Journal of Approximation Theory, </journal> <volume> Vol. 6, No. 1, </volume> <month> July, </month> <year> 1972, </year> <pages> pp 50-62. </pages> <institution> [10] de Casteljau, Paul de Faget, Shape Mathematics and CAD, Kogan Page, </institution> <address> London, </address> <year> 1986. </year>
Reference: [11] <author> DeRose, Tony D., Ronald N. Goldman and J. Michael Lounsbery, </author> <title> "A Tutorial Introduction to Blossoming," </title> <editor> in: H. Hagen and D. Roller, eds., </editor> <title> Geometric Modeling, Methods and Applications, </title> <publisher> Springer-Verlag, </publisher> <year> 1991, </year> <pages> 267-286. </pages>
Reference-contexts: This section has given a very short review of a rich subject. See Lyle Ramshaw's extensive technical report [32], in which the term blossoming is introduced. Independent work was introduced by de Casteljau [10]. An excellent introduction to this material is found in <ref> [11] </ref>. 12 2.2.2 Pyramid Diagram All properties and algorithms for B-splines pivot around the pyramid diagram for a given blossom f : f (1; 2; 3) f (3; 4; 5) &gt; f (x 1 ; 2; 3) &gt; f (x 1 ; 4; 5) &gt; f (x 1 ; x 2
Reference: [12] <author> Duchaineau, Mark A., </author> <title> "World," Independent Study Project, C.L. </title> <publisher> Morgan Supervising, </publisher> <address> California State University, Hayward, </address> <year> 1986. </year>
Reference-contexts: = 3 ff 1=8 6=8 1=8 n = 4 ff 5=16 10=16 1=16 P `1;i1 P `1;i P `1;i+1 (a) weights (b) intervals 2.2.4 Alternative Derivation of Dyadic Refinement A simple view of dyadic B-spline refinement is obtained through the application of linear operators on sequences of control points (see <ref> [12] </ref>). The subdivision operators obtained in this section play a central role in the definition of dyadic splines in Chapter 3. Similar operators are used throughout this dissertation.
Reference: [13] <author> Duchaineau, Mark A., </author> <title> "Construction of Crease-Free Fractals Using Dyadic Splines," </title> <booktitle> Proceedings of COMPUGRAPHICS92, </booktitle> <month> December, </month> <year> 1992, </year> <pages> pp 222-229. 113 </pages>
Reference-contexts: The result of two simultaneous scrapes is shown in Figure 7.4.9. 105 7.5 Applications of Dyadic-Spline Fractals Dyadic splines may be used to produce fractals by incorporating automatically-generated random displacements (see <ref> [13] </ref>). The idea is to choose each random displacement D `;i from a uniform distribution over an interval [U ` ; U ` ] that shrinks by half for each successive level of resolution (U ` = 2 ` for a chosen &gt; 0).
Reference: [14] <author> Eck, Matthias, Tony DeRose, Tom Duchamp, Hugues Hoppe, Michael Lounsbery and Werner Stuetzle, </author> <title> "Multiresolution Analysis of Arbitrary Meshes," </title> <booktitle> Computer Graphics (SIGGRAPH '95 Proceedings), </booktitle> <month> August, </month> <year> 1995, </year> <pages> pp 173-182. </pages>
Reference-contexts: Some initial work along these lines has been performed by researchers at the University of Washington <ref> [25, 23, 14] </ref>. Four areas of research are clear for the top-down approximation algorithm: * usefulness for other wavelets The top-down approximation algorithm should be applicable to wavelet representations other than the dyadic splines.
Reference: [15] <author> Farin, Gerald, </author> <title> Curves and Surfaces for Computer Aided Geometric Design: A Practical Guide, Second Edition, </title> <publisher> Academic Press, </publisher> <address> Boston, </address> <year> 1990. </year>
Reference-contexts: B-splines have been found to be useful in a wide variety of modeling and rendering problems <ref> [2, 15] </ref>. The most elegant rigorous treatment of B-splines and refinement is through the use of symmetric n-affine functions called blossoms [32]. <p> In this case, the blossoming formulation remains largely intact and the pyramid diagram becomes a sequence of nested triangular arrays of points. In the second method, the univariate basis functions are multiplied together to form m-variate basis functions|the tensor product B-splines <ref> [15] </ref>. <p> Therefore, this dyadic-spline function is a uniform B-spline with control points P 0;i = D 0;i . For uniform B-splines it is a simple matter to evaluate the function and its derivatives for arbitrary points t and for any interval I `;i <ref> [15] </ref>. . . . = arbitrary displacement = zero displacement f (t) I bound on f (I) For an interval I `;i , upper and lower bounds on f (t) for t 2 I `;i can be quickly determined by taking the minimum and maximum P `;i+j for a small neighborhood <p> For efficiency of the preprocessing in the next section, the basis functions should be translated and dilated copies of a small set of canonical basis functions. A good choice for the canonical basis functions are the Bernstein/Bezier basis functions for small degrees <ref> [15] </ref>. There is no concern about maintaining continuity between domain intervals, since the estimate will be used over each domain interval independently and the output approximation will be smooth regardless of the estimate continuity. <p> Some target functions g (t) can provide this information easily: examples are B-splines with general knot sequences (see section 2.2.1 or <ref> [15] </ref>), and functions that are computed using interval arithmetic [31]. If a function can be sampled for both positions and derivatives, and its derivative bounds are known (either locally or globally), a local estimate and bound can be formed. <p> basis , the left and right halves of each basis function are weighted sums of the same basis functions dilated and translated as s 0 (2t) + X b s;s 0 s 0 ! where a s;s 0 and b s;s 0 can be computed using the de Casteljau algorithm <ref> [15] </ref>. <p> This is important because the unified view provides a language in which new design possibilities, beyond those mentioned in this chapter, can be expressed in simple and effective terms. 89 Chapter 7 Multivariate Functions This chapter describes the extension of dyadic splines to multiple variables. A tensor-product construction <ref> [15] </ref> is used to provide dyadic splines with m-dimensional domains &lt; m . The synthesis, analysis and approximation techniques developed for the univariate dyadic splines are straightforward to extend to the tensor-product case. <p> The top-down algorithm requires that local estimates be available for the target function as before, but now in tensor-product Bernstein/Bezier form <ref> [15] </ref>. The process of limit fitting on these estimates is extended to the tensor-product setting by obtaining fi fit weights for each axial direction and applying these along each set of axis slices in turn. <p> For the purposes of interactive editing, it is sufficient to ensure that the approximation error is within a small fraction of the width of the interval I. If c (t) is a dyadic spline, or is in B-spline form, standard subdivision techniques can be applied to accomplish this <ref> [15] </ref>. In the implementation used here, "simple" crossings consist of two or fewer polygon edges, and a bintree decomposition of I is used.
Reference: [16] <author> Finkelstein, Adam and David H. Salesin, </author> <title> "Multiresolution Curves," </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <month> July, </month> <year> 1994, </year> <pages> pp 261-268. </pages>
Reference-contexts: Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding [26], multiresolution editing <ref> [3, 16] </ref>, and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22]. Compression is a natural byproduct of the wavelet transform since coefficients of transformed functions tend to have large magnitudes concentrated at coarse resolutions or along edges. <p> Two complimentary types of modifications are shown in parts (b) and (c). Part (b) shows the effect of smoothing the displacements in a neighborhood, while (c) shows the effect of roughening. Global smoothing for curves was introduced by Finkelstein and Salesin in <ref> [16] </ref>. Roughening is an application of fractals [27]. Part (d) shows offset-frame displacements of the type introduced by Forsey and Bartels [18]. This gives displacements a local coordinate frame derived from the underlying curve, so that the displacement tracks local and global changes in shape.
Reference: [17] <author> Forsey, David R., </author> <title> "Motion Control and Surface Modeling of Articulated Figures in Computer Animation," </title> <type> PhD Thesis, </type> <institution> U. of Waterloo, </institution> <month> September, </month> <year> 1990. </year>
Reference-contexts: The reason for using hierarchical B-splines over traditional B-splines is that the resulting representation can be much more compact (although the problems identified earlier with the Forsey-Bartels formulation will defeat this in significant cases). The fitting algorithm described in Forsey's PhD thesis <ref> [17] </ref>, and in a subsequent paper [19], is organized as follows. The algorithm proceeds top-down, using a stack of rectangular offset domains. For each offset domain, an error metric is stored, and only those rectangles whose error is above a certain tolerance are kept.
Reference: [18] <author> Forsey, David R. and Richard H. Bartels, </author> <title> "Hierarchical B-Spline Refinement," </title> <booktitle> Computer Graphics (SIGGRAPH '88 Proceedings), </booktitle> <volume> Vol. 22, No. 4, </volume> <month> August, </month> <year> 1988, </year> <pages> pp 205-212. </pages>
Reference-contexts: In the early schemes, detail was added by first applying a uniform refinement to the entire domain, and then modifying the control points. Forsey and Bartels <ref> [18] </ref> developed the concept of hierarchical B-splines, where offset detail could be added to a B-spline function as it is refined. This gave the designer the ability to retain coarse control of the function while adding detail through refinement. <p> Global smoothing for curves was introduced by Finkelstein and Salesin in [16]. Roughening is an application of fractals [27]. Part (d) shows offset-frame displacements of the type introduced by Forsey and Bartels <ref> [18] </ref>. This gives displacements a local coordinate frame derived from the underlying curve, so that the displacement tracks local and global changes in shape. The next mechanism is template control, shown in part (e).
Reference: [19] <author> Forsey, David R. and Richard H. Bartels, </author> <title> "Surface Fitting with Hierarchical Splines," </title> <journal> ACM Transactions on Graphics, </journal> <volume> Vol. 14, No. 2, </volume> <month> April, </month> <year> 1995, </year> <pages> pp 134-161. </pages>
Reference-contexts: The reason for using hierarchical B-splines over traditional B-splines is that the resulting representation can be much more compact (although the problems identified earlier with the Forsey-Bartels formulation will defeat this in significant cases). The fitting algorithm described in Forsey's PhD thesis [17], and in a subsequent paper <ref> [19] </ref>, is organized as follows. The algorithm proceeds top-down, using a stack of rectangular offset domains. For each offset domain, an error metric is stored, and only those rectangles whose error is above a certain tolerance are kept. Initially, the stack contains a single, coarse offset rectangle.
Reference: [20] <author> Fournier, Alain, D. Fussell and Loren C. Carpenter, </author> <title> "Computer Rendering of Stochastic Models," </title> <journal> Communications of the A.C.M., </journal> <volume> Vol. 25, </volume> <year> 1982, </year> <pages> 371-384. </pages>
Reference-contexts: A survey of these construction methods may be found in [34], while a more general treatment of fractals is given in [27]. The simplest time- and space-efficient technique is that of midpoint displacement <ref> [20] </ref>. Unfortunately the functions produced in this way have creases where first-derivative discontinuities are introduced along grid lines. To solve this problem, slower, more complicated variants on midpoint displacement were later introduced [29, 28]. The univariate midpoint displacement construction is depicted in Figure 2.5.1. <p> The midpoint displacement construction carries with it many of the desirable qualities of B-spline recursive subdivision. First, the output may be produced to any level of detail just where it is needed, without preprocessing. In contrast, the methods for computing random fractals before <ref> [20] </ref> emphasized preprocessing at fixed, uniform resolutions. Second, midpoint displacement fractals can be recursively subdivided in the same manner as B-splines.
Reference: [21] <author> Golub, Gene H. and Charles F. Van Loan, </author> <title> Matrix Computations (second ed.), </title> <publisher> The Johns Hopkins University Press, </publisher> <address> Baltimore, </address> <year> 1989. </year>
Reference-contexts: found by computing the zero of its derivative with respect to P , that is, find P such that 2HP 2Q = 0 which is equivalent to solving the matrix equation HP = Q This matrix equation can be solved by well-known sparse matrix factorization algorithms, such as band Cholesky <ref> [21, p. 154] </ref>. 2.2.6 Multivariate B-splines There are two predominant means of admitting more than one variable to a B-spline function. The one pioneered by de Casteljau forms an m-variate function for simplicial (e.g. triangular) domain pieces [10].
Reference: [22] <author> Gortler, Steven J., Peter Schroder, Michael F. Cohen and Pat Hanrahan, </author> <title> "Wavelet Radiosity," </title> <booktitle> Computer Graphics (SIGGRAPH '93 Proceedings), </booktitle> <month> August, </month> <year> 1993, </year> <pages> pp 221-230. </pages>
Reference-contexts: Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding [26], multiresolution editing [3, 16], and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination <ref> [22] </ref>. Compression is a natural byproduct of the wavelet transform since coefficients of transformed functions tend to have large magnitudes concentrated at coarse resolutions or along edges. The bulk of the coefficients are small and can be eliminated or stored with a small number of bits.
Reference: [23] <author> Hoppe, Hugues, Tony DeRose, Tom Duchamp, Mark Halstead, Hubert Jin, John McDonald, Jean Schweitzer and Werner Stuetzle, </author> <title> "Piecewise Smooth Surface Reconstruction," </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <month> July, </month> <year> 1994, </year> <pages> pp 295-302. </pages>
Reference-contexts: Some initial work along these lines has been performed by researchers at the University of Washington <ref> [25, 23, 14] </ref>. Four areas of research are clear for the top-down approximation algorithm: * usefulness for other wavelets The top-down approximation algorithm should be applicable to wavelet representations other than the dyadic splines.
Reference: [24] <author> Jawerth, B., </author> <title> M.L. Hilton and T.L. Hunstberger, "Local Enhancement of Compressed Images," </title> <journal> J. of Math. Imag. Vision, </journal> <volume> Vol. 3, </volume> <year> 1993, </year> <pages> pp 39-49. </pages>
Reference-contexts: Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression <ref> [24] </ref>, image understanding [26], multiresolution editing [3, 16], and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22].
Reference: [25] <author> Lounsbery, John Michael, </author> <title> "Multiresolution Analysis for Surfaces of Arbitrary Topological Type," </title> <type> PhD Thesis, </type> <institution> U. of Washington, </institution> <year> 1994. </year>
Reference-contexts: Some initial work along these lines has been performed by researchers at the University of Washington <ref> [25, 23, 14] </ref>. Four areas of research are clear for the top-down approximation algorithm: * usefulness for other wavelets The top-down approximation algorithm should be applicable to wavelet representations other than the dyadic splines.
Reference: [26] <author> Mallat, Stephane G., </author> <title> "A Theory for Multiresolution Signal Decomposition: The Wavelet Representation," </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> Vol. 11, No. 7, </volume> <month> July, </month> <year> 1989, </year> <pages> pp 674-693. 114 </pages>
Reference-contexts: Dyadic splines will overcome these difficulties while retaining the desirable behavior. 2.4 Wavelet Multiresolution Analysis The most useful wavelets in practice are defined through multiresolution analysis, as pioneered by Mallat <ref> [26] </ref>. In multiresolution analysis, a scaling function (t) is 24 dilated and translated to form basis functions for a nested sequence of function spaces V 2 V 1 V 0 V 1 V 2 Typically, V `+1 is made twice the resolution of V ` . <p> Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . . Researchers in many fields are using wavelets to good effect. Examples include image compression [24], image understanding <ref> [26] </ref>, multiresolution editing [3, 16], and 1 Chui [6] refers to uniform B-splines as cardinal splines. 27 solution of diffuse global illumination [22]. Compression is a natural byproduct of the wavelet transform since coefficients of transformed functions tend to have large magnitudes concentrated at coarse resolutions or along edges.
Reference: [27] <author> Mandelbrot, Benoit B., </author> <title> The Fractal Geometry of Nature, </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, NY, </address> <year> 1983. </year>
Reference-contexts: Numerous algorithmic constructions have been proposed for such functions which vary widely in their simplicity, speed, data space, function quality, and flexibility of use. A survey of these construction methods may be found in [34], while a more general treatment of fractals is given in <ref> [27] </ref>. The simplest time- and space-efficient technique is that of midpoint displacement [20]. Unfortunately the functions produced in this way have creases where first-derivative discontinuities are introduced along grid lines. To solve this problem, slower, more complicated variants on midpoint displacement were later introduced [29, 28]. <p> The traditional fractal formulations do not facilitate editing of either the positions or the random-number processes. Another disadvantage of traditional fractal constructions is that they are either strictly preprocessed (e.g. <ref> [27] </ref>) or strictly online (e.g. midpoint-displacement recursive subdivision). If the construction is preprocessed, the expensive function evaluations can be reused, but the function must then be computed where it is not needed or to insufficient accuracy. <p> Two complimentary types of modifications are shown in parts (b) and (c). Part (b) shows the effect of smoothing the displacements in a neighborhood, while (c) shows the effect of roughening. Global smoothing for curves was introduced by Finkelstein and Salesin in [16]. Roughening is an application of fractals <ref> [27] </ref>. Part (d) shows offset-frame displacements of the type introduced by Forsey and Bartels [18]. This gives displacements a local coordinate frame derived from the underlying curve, so that the displacement tracks local and global changes in shape. The next mechanism is template control, shown in part (e).
Reference: [28] <author> Mandelbrot, Benoit B., </author> <title> "Fractal Landscapes Without Creases and With Rivers," in The Science of Fractal Images, </title> <editor> H.-O. Peitgen and D. Saupe Eds., </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp 243-260. </pages>
Reference-contexts: The simplest time- and space-efficient technique is that of midpoint displacement [20]. Unfortunately the functions produced in this way have creases where first-derivative discontinuities are introduced along grid lines. To solve this problem, slower, more complicated variants on midpoint displacement were later introduced <ref> [29, 28] </ref>. The univariate midpoint displacement construction is depicted in Figure 2.5.1. Initially, two endpoints are given at level ` = 0 that define a line segment over an interval.
Reference: [29] <author> Miller, Gavin S. P., </author> <title> "The Definition and Rendering of Terrain Maps," </title> <booktitle> Computer Graphics (SIGGRAPH '86 Proceedings), </booktitle> <volume> Vol. 20, No. 4, </volume> <month> August, </month> <year> 1986, </year> <pages> pp 39-48. </pages>
Reference-contexts: The simplest time- and space-efficient technique is that of midpoint displacement [20]. Unfortunately the functions produced in this way have creases where first-derivative discontinuities are introduced along grid lines. To solve this problem, slower, more complicated variants on midpoint displacement were later introduced <ref> [29, 28] </ref>. The univariate midpoint displacement construction is depicted in Figure 2.5.1. Initially, two endpoints are given at level ` = 0 that define a line segment over an interval.
Reference: [30] <author> Miller, Mark C., </author> <title> "Terrain Representation and Compression," </title> <type> Pax River Quarterly Report (3Q92), </type> <institution> Advanced Graphics and Parallel Systems, Los Alamos National Laboratory, </institution> <address> New Mexico, </address> <year> 1992. </year>
Reference: [31] <author> Moore, Ramon E., </author> <title> Methods and Applications of Interval Analysis, </title> <publisher> SIAM, </publisher> <address> Philadelphia, </address> <year> 1979. </year>
Reference-contexts: Some target functions g (t) can provide this information easily: examples are B-splines with general knot sequences (see section 2.2.1 or [15]), and functions that are computed using interval arithmetic <ref> [31] </ref>. If a function can be sampled for both positions and derivatives, and its derivative bounds are known (either locally or globally), a local estimate and bound can be formed. In the worst case, if only samples can be taken, then a statistical estimate and bound can be obtained. <p> It is straightforward to evaluate local estimates and bounds using interval arithmetic <ref> [31] </ref>. The initial interval list has one entry, as shown in part (b) of the figure. The dyadic-spline representation at this point has one displacement D 0;0 at level zero, and one compacted displacement Q 0;0 .
Reference: [32] <author> Ramshaw, Lyle, </author> <title> "Blossoming: A Connect-the-Dots Approach to Splines," </title> <type> Research Report 19, </type> <institution> Digital Equipment Corp. Systems Research Center, </institution> <address> Palo Alto, CA, </address> <month> June, </month> <year> 1987. </year>
Reference-contexts: B-splines have been found to be useful in a wide variety of modeling and rendering problems [2, 15]. The most elegant rigorous treatment of B-splines and refinement is through the use of symmetric n-affine functions called blossoms <ref> [32] </ref>. Using this general theory, along with a special theory introduced for dyadic refinement, several results are described in this section that are essential to the definition and application of dyadic splines in subsequent chapters. <p> This section has given a very short review of a rich subject. See Lyle Ramshaw's extensive technical report <ref> [32] </ref>, in which the term blossoming is introduced. Independent work was introduced by de Casteljau [10]. <p> The local approximation may be obtained as a B-spline 70 approximation as described earlier in section 3.2. These B-spline approximations may be converted to Bernstein/Bezier form by blossom evaluations on the Bernstein/Bezier knots. Degree-raising is also straightforward using blossoming <ref> [32] </ref>. 5.2.4 Top-Down Approximation Results For an illustrative example, the top-down fit is applied to a target function that is again a sum of transcendental bumps. The target function is shown in Figure 5.2.6, along with several approximations of increasing accuracy.
Reference: [33] <author> Samet, Hanan, </author> <title> Applications of Spatial Data Structures, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: The dyadic splines will make use of the features of these representations. 2.1 Space Trees In modeling and rendering, numerous schemes are used for decomposing space into disjoint pieces. These include quadtrees, octrees, bintrees, k-d trees and BSP trees <ref> [33] </ref>. Collectively, such methods are herein referred to as space trees. Space trees do not by themselves represent continuous-valued functions, but instead represent sets or partitions of space. The space-tree methods form excellent spatial organizations within which functions can be represented. All space-tree representations have several properties in common.
Reference: [34] <author> Saupe, D., </author> <title> Algorithms for Random Fractals, in The Science of Fractal Images, </title> <editor> H.-O. Peitgen and D. Saupe Eds., </editor> <publisher> Springer Verlag, </publisher> <address> New York, </address> <year> 1988, </year> <pages> pp 71-112. </pages>
Reference-contexts: Numerous algorithmic constructions have been proposed for such functions which vary widely in their simplicity, speed, data space, function quality, and flexibility of use. A survey of these construction methods may be found in <ref> [34] </ref>, while a more general treatment of fractals is given in [27]. The simplest time- and space-efficient technique is that of midpoint displacement [20]. Unfortunately the functions produced in this way have creases where first-derivative discontinuities are introduced along grid lines.
Reference: [35] <author> Stollnitz, Eric J., Tony D. DeRose and David H. Salesin, </author> <title> "Wavelets for Computer Graphics: A Primer, Part 2," </title> <journal> IEEE Computer Graphics & Applications, </journal> <volume> Vol. 15, No. 4, </volume> <month> July, </month> <year> 1995, </year> <pages> pp 75-85. </pages>
Reference-contexts: F M C F M C F M C 26 Mallat's original paper uses orthonormal scaling function bases `;i , but the technique also works for nonorthogonal scaling function bases such as those associated with uniform B-splines 1 under dyadic refinement <ref> [6, 35] </ref>. The multiresolution basis functions for cubic uniform B-splines are shown in Figure 2.4.2. 0;i . . . . . . 2;i . . . Many different wavelets may be chosen to compliment the scaling functions . [6]. . . . 1;i . . . . . .
Reference: [36] <author> Stoneking, Stan, </author> <title> "Screen-Oriented Surface Sculpting Tools," </title> <type> Master's Thesis, Advisor: Kenneth I. Joy, </type> <institution> University of California, Davis, </institution> <month> June, </month> <year> 1993. </year>
Reference-contexts: The final mechanism shown in part (f) is sculpting, wherein a tool modifies a curve continuously as it moves along a user-specified path. Interactive sculpting (of surfaces) was introduced by Stoneking in his Master's thesis <ref> [36] </ref>. Each of these editing mechanisms fits nicely into the framework of dyadic splines. The remainder of this chapter discusses each in turn. So far, the functions under discussion have had a single real parameter t 2 &lt;, and have evaluated to a single real value f (t) 2 &lt;.
Reference: [37] <author> Warnock, John E., </author> <title> "A Hidden-Surface Algorithm for Computer Generated HalfTone Pictures," </title> <type> TR 4-15, </type> <institution> NTIS AS-733 671, Computer Science Department, University of Utah, </institution> <year> 1969. </year>
Reference-contexts: Computing the Blend Factor It is nontrivial to compute the area of overlap of an interval I and the area enclosed by a trim curve c (t). However, the well-known Warnock algorithm for polygon visibility <ref> [37] </ref> can be adapted to this problem.
References-found: 35

