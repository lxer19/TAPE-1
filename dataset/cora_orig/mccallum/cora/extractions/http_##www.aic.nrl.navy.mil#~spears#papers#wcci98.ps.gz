URL: http://www.aic.nrl.navy.mil/~spears/papers/wcci98.ps.gz
Refering-URL: http://www.cs.gmu.edu:80/research/gag/pubs.html
Root-URL: 
Email: kennedy_jim@bls.gov  spears@aic.nrl.navy.mil  
Title: Matching Algorithms to Problems: An Experimental Test of the Particle Swarm and Some Genetic Algorithms
Author: James Kennedy William M. Spears 
Address: 2 Massachusetts Ave., NE Washington, DC 20212  Washington, DC 20375-5337  
Affiliation: Bureau of Labor Statistics  Code 5510 AI Center Naval Research Laboratory  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> De Jong, K. A. and Spears, W. M. </author> <year> (1990). </year> <title> An analysis of of the interacting roles of population size and crossover in g enetic algorithms. </title> <editor> In H.-P. Schwefel and R. Mnner , (Eds.), </editor> <booktitle> Proceedings of the First International Conference on Parallel Problem Solving from Nature, </booktitle> <pages> 38-47. </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: The optimum fitness for an individual is 1.0. f c P = 1 -L - Hamming (c, Peak i )- This particular problem generator is a generalization of the P-peak problems introduced in <ref> [1] </ref>. De Jong et al. [2] compared the performance of various GAs on problems with 1 peak and problems with 500 peaks.
Reference: [2] <author> De Jong, K., Potter, M., and Spears, W. </author> <year> (1997). </year> <title> Using problem generators to explore the effects of epistasis. </title> <editor> In T. Bck, (Ed.), </editor> <booktitle> Proceedings of the Seventh International Confe rence on Genetic Algorithms, </booktitle> <pages> 338-345. </pages> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: The optimum fitness for an individual is 1.0. f c P = 1 -L - Hamming (c, Peak i )- This particular problem generator is a generalization of the P-peak problems introduced in [1]. De Jong et al. <ref> [2] </ref> compared the performance of various GAs on problems with 1 peak and problems with 500 peaks. <p> The poor performance of GA_m when L is high appa r- ently arises from our use of a constant mutation rate of 0.001. As L increases the proportion of individuals that are mutated also increases, creating too much disruption. De Jong et al. <ref> [2] </ref> had noted that crossover might not perform especially well on functions featuring high m o- dality.
Reference: [3] <author> Kennedy, J. </author> <year> (1997). </year> <title> The particle swarm: </title> <booktitle> Social adaptation of knowledge . Proceedings of the 1997 International Confe rence on Evolutionary Computation (Indianapolis, </booktitle> <institution> Indiana), IEEE Service Center, </institution> <address> Piscataway, NJ, </address> <pages> 303-308. </pages>
Reference-contexts: In particle swarm, individuals (particles) are represented as vectors i x t & vector for particle i at time t). Particle swarm adaptation, originally presented as a method for searching continuous spaces <ref> [3, 4] </ref>, has recently been adapted to binary spaces through a simple modification [5].
Reference: [4] <author> Kennedy, J., and Eberhart, R. C. </author> <year> (1995). </year> <booktitle> Particle swarm optimization . Proceedings of the IEEE International Confe rence on Neural Networks (Perth, </booktitle> <address> Australia), </address> <publisher> IEEE Service Center, </publisher> <address> Piscataway, NJ, </address> <booktitle> IV: </booktitle> <pages> 1942-1948. </pages>
Reference-contexts: In particle swarm, individuals (particles) are represented as vectors i x t & vector for particle i at time t). Particle swarm adaptation, originally presented as a method for searching continuous spaces <ref> [3, 4] </ref>, has recently been adapted to binary spaces through a simple modification [5].
Reference: [5] <author> Kennedy and Eberhart, R. C. </author> <year> (1997, </year> <title> in press). A discrete binary version of the particle swarm algorithm. </title> <booktitle> Proceedings of the 1997 International Conference on Systems, Man, and Cybernetics </booktitle> . 
Reference-contexts: In particle swarm, individuals (particles) are represented as vectors i x t & vector for particle i at time t). Particle swarm adaptation, originally presented as a method for searching continuous spaces [3, 4], has recently been adapted to binary spaces through a simple modification <ref> [5] </ref>. Instead of moving particles as i x t & & & ( ) ( ) - + 1 D , particles exist as vectors of probabilities, defined as a logistic function s x t i ( ( )) D & . <p> Preliminary tests have found this algorithm to perform satisfactorily on standard test functions <ref> [5] </ref>; the present experiment was designed in part as a rigorous investigation of the properties of the discrete particle swarm algorithm. 3. The Multimodal Problem Generator The multimodality of (i.e., number of peaks in) a search space is an important characteristic of that search space.
References-found: 5

