URL: http://www.cis.udel.edu/~decker/pubs/collaboration.ps
Refering-URL: http://www.cis.udel.edu/~decker/cv.html
Root-URL: http://www.cis.udel.edu
Title: Coordinating Human and Computer Agents  
Author: Keith S. Decker 
Abstract: Department of Computer and Information Sciences University of Delaware, Newark, DE 19716 decker@cis.udel.edu [This paper originally appeared in Wolfram Conen, Gustaf Neumann, editors, Coordination Technology for Collaborative Applications Organizations, Processes, and Agents. LNCS #1364, pp. 77-98, Springer-Verlag, 1998.] Abstract. In many application areas individuals are responsible for an agenda of tasks and face choices about the best way to locally handle each task, in what order to do tasks, and when to do them. Such decisions are often hard to make because of coordination problems: individual tasks are related to the tasks of others in complex ways, and there are many sources of uncertainty (no one has a complete view of the task structure at arbitrary levels of detail, the situation may be changing dynamically, and no one is entirely sure of the outcomes of all of their actions). The focus of this paper is the development of support tools for distributed, cooperative work by groups (collaborative teams) of human and computational agents. We will discuss the design of a set of distributed autonomous computer programs ("agents") that assist people in coordinating their activities by helping them to manage their agendas. We describe several ongoing implementations of these ideas including 1) simulated agents and tasks, 2) a real multi-agent system for financial portfolio management, and 3) a real mixed human and computational agent system for concurrent engineering design.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> C. Castelfranchi. </author> <title> Commitments:from individual intentions to groups and organizations. </title> <editor> In Michael Prietula, editor, </editor> <title> AI and theories of groups & organizations: Conceptual and Empirical Research. </title> <booktitle> AAAI Workshop, </booktitle> <year> 1993. </year> <note> Working Notes. </note>
Reference: 2. <author> CHECKMATE. </author> <title> Air campaign planning|an approach for the future. </title> <type> White Paper. </type>
Reference-contexts: We'll begin with the JFACC, who is using air campaign planning tools to refine general objectives into the selection of specific objectives, and a course-of-action for achieving the objective (such as disrupting aircraft manufacture). Inherent in this process is the analysis of enemy strengths and vulnerabilities <ref> [2] </ref>; such analysis is tied to ongoing situation analysis and assessment done remotely and by the JFACC intelligence staff (at remote workstations). Along with the air campaign planning tools, the JFACC has a window on his workstation that displays his current agenda of tasks.
Reference: 3. <author> Philip R. Cohen and Hector J. Levesque. </author> <title> Intention is choice with commitment. </title> <journal> Artificial Intelligence, </journal> <volume> 42(3) </volume> <pages> 213-261, </pages> <year> 1990. </year>
Reference: 4. <author> C. Collet, M.N. Huhns, and W. Shen. </author> <title> Resource integration using a large knowledge base in Carnot. </title> <booktitle> Computer, </booktitle> <pages> pages 55-62, </pages> <month> December </month> <year> 1991. </year>
Reference: 5. <author> ISX Corporation. </author> <title> ACPT|the air campaign planning tool. </title> <type> White Paper. </type>
Reference: 6. <author> K. Decker, A. Pannu, K. Sycara, and M. Williamson. </author> <title> Designing behaviors for information agents. </title> <booktitle> In Proceedings of the 1st Intl. Conf. on Autonomous Agents, </booktitle> <pages> pages 404-413, </pages> <address> Marina del Rey, </address> <month> February </month> <year> 1997. </year>
Reference-contexts: We have conducted an analysis of various features (privacy, efficiency, robustness, etc.) for both matchmade and brokered open agent organizations [7]. In particular, "information agents" that are one step above raw data sources have a stylized set of reusable behaviors that make them easy to create <ref> [6] </ref> 6 .
Reference: 7. <author> K. Decker, K. Sycara, and M. Williamson. </author> <title> Middle-agents for the internet. </title> <booktitle> In Pro--ceedings of the Fifteenth International Joint Conference on Artificial Intelligence, </booktitle> <address> Nagoya, Japan, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: WARREN agent leaves the system (or crashes) the remaining agents reorganize so as to carry on as effectively as possible. We have conducted an analysis of various features (privacy, efficiency, robustness, etc.) for both matchmade and brokered open agent organizations <ref> [7] </ref>. In particular, "information agents" that are one step above raw data sources have a stylized set of reusable behaviors that make them easy to create [6] 6 .
Reference: 8. <author> K. Decker, M. Williamson, and K. Sycara. </author> <title> Intelligent adaptive information agents. </title> <booktitle> In Proceedings of the AAAI-96 Workshop on Intelligent Adaptive Agents, </booktitle> <year> 1996. </year> <note> AAAI Press Tech Report WS-96-04. </note>
Reference-contexts: In this way, the information agent can make a rational meta-control decision about whether or not it should undertake a cloning behavior. A formal presentation of the cloning criteria and the results of empirical evaluation can be found in <ref> [8] </ref>. 4 MADEsmart: Coordination Support for Manufacturing and Design Engineering We are currently working with a group implementing the UCAA/ACM vision of coordination support as a part of the MADEsmart project at Boeing Helicopters [28].
Reference: 9. <author> Keith S. Decker. </author> <title> Environment Centered Analysis and Design of Coordination Mechanisms. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <year> 1995. </year>
Reference-contexts: The tms framework (Task Analysis, Environment Modeling, and Simulation) [11] represents coordination problems in a formal, domain-independent way. We have used it to represent coordination problems in distributed sensor networks, hospital patient scheduling, airport resource management, distributed information retrieval, pilot's associate, local area network diagnosis, etc. <ref> [9] </ref>. For the subject of this paper, there are two unique features of tms. The first is the explicit, quantitative representation of task interrelationships that describe the effect on performance of activity choices and temporal orderings. The second is the representation of task structures at multiple levels of abstraction. <p> Note that quite a bit of detail can be captured in just the `computational' aspects of the environment|in this case, the tasks use peoples' time, not a computer's. However, tms can model in more detail the physical resources and job shop characteristics of the ancillaries if necessary <ref> [9] </ref>. Such detail is not necessary for us to analyze the protocols developed by [29], who propose a primary unit-ancillary protocol and a secondary ancillary-ancillary protocol.
Reference: 10. <author> Keith S. Decker and Victor R. Lesser. </author> <title> An approach to analyzing the need for meta-level communication. </title> <booktitle> In Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 360-366, </pages> <address> Chambery, France, </address> <month> August </month> <year> 1993. </year>
Reference: 11. <author> Keith S. Decker and Victor R. Lesser. </author> <title> Quantitative modeling of complex computational task environments. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 217-224, </pages> <address> Washington, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: The tms framework (Task Analysis, Environment Modeling, and Simulation) <ref> [11] </ref> represents coordination problems in a formal, domain-independent way. We have used it to represent coordination problems in distributed sensor networks, hospital patient scheduling, airport resource management, distributed information retrieval, pilot's associate, local area network diagnosis, etc. [9].
Reference: 12. <author> Keith S. Decker and Victor R. Lesser. </author> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the First International Conference on Multi-Agent Systems, </booktitle> <pages> pages 73-80, </pages> <address> San Francisco, </address> <month> June </month> <year> 1995. </year> <note> AAAI Press. Longer version available as UMass CS-TR 94-14. </note>
Reference-contexts: Each component or mechanism can be added as required in reaction to the environment in which the agents find themselves. An individual algorithm in the family is defined by a particular set of active mechanisms and their associated parameters. In <ref> [12] </ref> we discuss the interactions between these mechanisms and how to decide when each mechanism should be used, drawing data from simulation experiments of multiple agent teams working in abstract task environments. <p> respond to coordination relationships between portions of the task structure controllable by different agents (as in the JFACC assigning tasks to his staff example) or within portions controllable by multiple agents (as in the case of the overlapping tasks in the JFACC example). 5 The five mechanisms we described in <ref> [12] </ref> form a basic set that provides similar functionality to Durfee's original partial global planning algorithm [15]. Mechanism 1 exchanges useful private views of task structures; Mechanism 2 communicates results; Mechanism 3 handles redundant methods; Mechanisms 4 and 5 handle hard and soft coordination relationships. <p> The mechanisms are independent in the sense that they can be used in any combination. If inconsistent constraints are introduced, the local scheduler would return at least one violated constraint in all its schedules, which would be dealt with so as to maximize subjective utility <ref> [12] </ref>.
Reference: 13. <author> E. H. Durfee and T. A. Montgomery. </author> <title> Coordination as distributed search in a hierarchical behavior space. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1363-1378, </pages> <month> November </month> <year> 1991. </year>
Reference: 14. <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Coherent cooperation among communicating problem solvers. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 36(11) </volume> <pages> 1275-1291, </pages> <month> November </month> <year> 1987. </year>
Reference: 15. <author> E.H. Durfee and V.R. Lesser. </author> <title> Partial global planning: A coordination framework for distributed hypothesis formation. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(5) </volume> <pages> 1167-1183, </pages> <month> September </month> <year> 1991. </year>
Reference-contexts: the JFACC assigning tasks to his staff example) or within portions controllable by multiple agents (as in the case of the overlapping tasks in the JFACC example). 5 The five mechanisms we described in [12] form a basic set that provides similar functionality to Durfee's original partial global planning algorithm <ref> [15] </ref>. Mechanism 1 exchanges useful private views of task structures; Mechanism 2 communicates results; Mechanism 3 handles redundant methods; Mechanisms 4 and 5 handle hard and soft coordination relationships. More mechanisms can be added, such as a load balancing mechanism.
Reference: 16. <author> Mark S. Fox. </author> <title> An organizational view of distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 11(1) </volume> <pages> 70-80, </pages> <month> January </month> <year> 1981. </year>
Reference: 17. <author> J. </author> <title> Galbraith. Organizational Design. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1977. </year>
Reference: 18. <author> Alan Garvey, Marty Humphrey, and Victor Lesser. </author> <title> Task interdependencies in design-to-time real-time scheduling. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 580-585, </pages> <address> Washington, </address> <month> July </month> <year> 1993. </year>
Reference: 19. <author> Alan Garvey and Victor Lesser. </author> <title> Design-to-time real-time scheduling. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1491-1502, </pages> <year> 1993. </year>
Reference: 20. <author> T.R. Gruber. </author> <title> Toward principles for the design of ontologies used for knowledge sharing. </title> <type> Technical Report KSL-93-4, </type> <institution> Knowledge Systems Laboratory, Stanford University, </institution> <year> 1993. </year>
Reference: 21. <author> Carl Hewitt. </author> <title> Offices are open systems. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 4(3) </volume> <pages> 271-287, </pages> <month> July </month> <year> 1986. </year>
Reference: 22. <author> N. R. Jennings. </author> <title> Commitments and conventions: The foundation of coordination in multi-agent systems. </title> <journal> The Knowledge Engineering Review, </journal> <volume> 8(3) </volume> <pages> 223-250, </pages> <year> 1993. </year>
Reference: 23. <author> W. Kim and J. Seo. </author> <title> Classifying schematic and data heterogeneity in multidatabase systems. </title> <booktitle> Computer, </booktitle> <pages> pages 12-18, </pages> <month> December </month> <year> 1991. </year>
Reference: 24. <author> Paul Lawrence and Jay Lorsch. </author> <title> Organization and Environment. </title> <publisher> Harvard University Press, </publisher> <address> Cambridge, MA, </address> <year> 1967. </year>
Reference: 25. <author> Thomas W. Malone. </author> <booktitle> What is coordination theory? In Proceedings of the National Science Foundation Coordination Theory Workshop, </booktitle> <month> February </month> <year> 1988. </year>
Reference-contexts: Coordination assistance technology has applications in many areas besides military command and control of course. For example, in an office or concurrent engineering environment, both independent computerized agents (usually controlling access to resources) and intelligent assistants to office workers can exist <ref> [25] </ref>. In real offices, activity 1 For example, imagine that your task is to find a new book in a library, and you can do this either before or after the new books are unpacked, sorted, and correctly shelved. 2 This example was originally presented at Concurrent Engineering '95.
Reference: 26. <author> Sergei Nirenburg and Victor Lesser. </author> <title> Providing intelligent assistance in distribu-ted office environments. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 590-598. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference: 27. <author> Tim Oates, M. V. Nagendra Prasad, Victor R. Lesser, and Keith S. Decker. </author> <title> A distributed problem solving approach to cooperative information gathering. </title> <booktitle> In AAAI Spring Symposium on Information Gathering in Distributed Environments, </booktitle> <institution> Stanford University, </institution> <month> March </month> <year> 1995. </year>
Reference: 28. <author> L. Obrst, M. Woytowitz, D. Rock, S. Lander, K. Gallagher, and K. Decker. </author> <title> Agent-based integrated project teams. </title> <booktitle> Submitted, 1997 ASME Design Engineering and Computers in Engineering Conference; Engineering Information Management Symposium, </booktitle> <year> 1997. </year>
Reference-contexts: formal presentation of the cloning criteria and the results of empirical evaluation can be found in [8]. 4 MADEsmart: Coordination Support for Manufacturing and Design Engineering We are currently working with a group implementing the UCAA/ACM vision of coordination support as a part of the MADEsmart project at Boeing Helicopters <ref> [28] </ref>. MADEsmart seeks to partially automate the integrated product teams used to organize design engineers through the use of multi-agent approaches. For example, associated with each human engineer in an integrated product team is a UCAA agent that can interact with that engineer.
Reference: 29. <author> P. S. Ow, M. J. Prietula, and W. Hsu. </author> <title> Configuring knowledge-based systems to organizational structures: Issues and examples in multiple agent support. </title> <editor> In L. F. Pau, J. Motiwalla, Y. H. Pao, and H. H. Teh, editors, </editor> <booktitle> Expert Systems in Economics, Banking, and Management, </booktitle> <pages> pages 309-318. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: the same objective entity as the unit task it is linked to in the diagram. at a brief example of a task structure model of this environment expressed with tms, our framework for reasoning about multi-agent task environments (see Section 2.1) The following description is from an actual case study <ref> [29] </ref>: Patients in General Hospital reside in units that are organized by branches of medicine, such as orthopedics or neurosurgery. <p> However, tms can model in more detail the physical resources and job shop characteristics of the ancillaries if necessary [9]. Such detail is not necessary for us to analyze the protocols developed by <ref> [29] </ref>, who propose a primary unit-ancillary protocol and a secondary ancillary-ancillary protocol. In this type of environment, scheduling agents would interact with nurses and each other, using the mechanisms, facilities, and tools suggested here, to assist in the efficient and effective scheduling of patient tests and treatments.
Reference: 30. <author> M.V. Nagendra Prasad and V.R. Lesser. </author> <title> Learning situation-specific coordination in generalized partial global planning. </title> <booktitle> In AAAI Spring Symposium on Adaptation, Co-evolution and Learning in Multiagent Systems, </booktitle> <address> Stanford, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: Some important research questions to be answered in this work include the question of how accurate task duration estimates have to be, and how important task monitoring is. We are also looking into automatically learning task duration models, and proper sets of coordination mechanisms <ref> [30] </ref>. Other important questions include the representation and impact of formal and informal organizational roles when assessing the value of potential schedules.
Reference: 31. <author> Arthur L. Stinchcombe. </author> <title> Information and Organizations. </title> <publisher> University of California Press, </publisher> <address> Berkeley, CA, </address> <year> 1990. </year>
Reference: 32. <author> K. Sycara, K. Decker, A. Pannu, M. Williamson, and D. Zeng. </author> <title> Distributed intelligent agents. </title> <journal> IEEE Expert, </journal> <volume> 11(6) </volume> <pages> 36-46, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: Since the local scheduler is boundedly rational and satisfices instead of optimizing, it may do this even if constraints are not inconsistent (i.e. it does not search exhaustively). 3 Multi-agent Financial Portfolio Management One implementation of these ideas has been in a system named WARREN for financial portfolio mangement <ref> [32] </ref>. WARREN gives a concrete, working implementation of some of the ACM ideas discussed earlier in this paper.
Reference: 33. <author> Frank v. Martial. </author> <title> Coordinating Plans of Autonomous Agents. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1992. </year> <booktitle> Lecture Notes in Artificial Intelligence no. </booktitle> <pages> 610. </pages>
Reference-contexts: The GPGP approach of recognizing and reacting to the characteristics of certain coordination relationships is shared with Von Martial's work on the favor relationship <ref> [33] </ref>. The use of commitments in the GPGP family of algorithms is based on the ideas of many other researchers [3,1,22].
Reference: 34. <author> T. Wagner, A. Garvey, and V. Lesser. </author> <title> Complex goal criteria and its application in design-to-criteria scheduling. </title> <booktitle> In Proceedings of the Fourteenth National Conference on Artificial Intelligence, </booktitle> <address> Providence, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: initiative human and computer agent coordination involves developing a language to express agent task structures and potential coordination points (TMS); a modular, parameterized, and adaptable approach to the coordination activities themselves (GPGP); and a sophisticated local scheduling mechanism capable of dealing with multiple, dynamically changing evaluation criteria ("design-to-time"[19,18] or "design-to-criteria" <ref> [34] </ref> scheduling). This section will discuss TMS and GPGP. A secondary issue that is also important to keep in mind is the "open systems" nature of our underlying approach.
Reference: 35. <author> D.L. Westbrook, S.D. Anderson, D.M. Hart, and P.R. Cohen. </author> <title> Common lisp instrumentation package: User manual. </title> <type> Technical Report 94-26, </type> <institution> Department of Computer Science, University of Massachusetts, </institution> <year> 1994. </year>
Reference-contexts: We use objective-level models in simulation to study the effects on algorithm performance of the presence, absence, or uncertainty associated with certain types of task information. The simulator supports the graphical display of generated task structures, agent actions, and statistical data collection via CLIP <ref> [35] </ref> in CLOS (the Common Lisp Object System) on various Unix workstations. In real agent systems (Section 3 and 4), of course, only subjective information exists. The goal of the agent or agents is to maximize the sum of the quality achieved for each task group before its deadline.
Reference: 36. <author> M. Williamson, K. Decker, and K. Sycara. </author> <title> Unified information and control flow in hierarchical task networks. </title> <booktitle> In Proceedings of the AAAI-96 workshop on Theories of Planning, Action, and Control, </booktitle> <year> 1996. </year>
Reference-contexts: Fig. 7. Overall view of data and control flow in an information agent. of task structures, and a library of task reduction schemas. A task structure is a partially instantiated task network, including inter-task information flow and other coordination relationships and descriptions of potential task outcomes (See <ref> [36] </ref> for a complete description of the WARREN task structure representation). Since arrival of goals, planning and execution are on-going and interleaved, the planning process modifies the current set of task structures|by removing tasks, further reducing existing tasks, or instantiating new tasks|to account for any changes to the agent's goals.
References-found: 36

