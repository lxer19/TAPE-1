URL: http://ic.arc.nasa.gov/ic/projects/bayes-group/NP/ijcai91/phases-for-web.ps
Refering-URL: http://ic.arc.nasa.gov/ic/projects/bayes-group/NP/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: Email: &lt;last-name&gt;@ptolemy.arc.nasa.gov  
Title: Where the Really Hard Problems Are  Where the really hard problems  
Author: Peter Cheeseman RIACS Bob Kanefsky William M. Taylor Sterling Software Peter Cheeseman, Bob Kanefsky, and William M. Taylor. 
Note: are. In J. Mylopoulos and R. Re-iter, editors, Proceedings of IJCAI-91, pages  
Address: Moffett Field, CA 94035, USA  331-337, San Mateo, CA, 1991. Morgan Kauf-mann.  
Affiliation: Sterling Software Artificial Intelligence Research Branch NASA Ames Research Center, Mail Stop 244-17  
Abstract: It is well known that for many NP-complete problems, such as K-Sat, etc., typical cases are easy to solve; so that computationally hard cases must be rare (assuming P 6= N P ). This paper shows that NP-complete problems can be summarized by at least one "order parameter", and that the hard problems occur at a critical value of such a parameter. This critical value separates two regions of characteristically different properties. For example, for K-colorability, the critical value separates overconstrained from underconstrained random graphs, and it marks the value at which the probability of a solution changes abruptly from near 0 to near 1. It is the high density of well-separated almost solutions (local minima) at this boundary that cause search algorithms to "thrash". This boundary is a type of phase transition and we show that it is preserved under mappings between problems. We show that for some P problems either there is no phase transition or it occurs for bounded N (and so bounds the cost). These results suggest a way of deciding if a problem is in P or NP and why they are different.
Abstract-found: 1
Intro-found: 1
Reference: [ 1 ] <author> Bollobas, B. </author> <title> "Random Graphs", </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1985. </year>
Reference-contexts: For some critical value of the average connectivity between these two extremes, the probability of a HC changes steeply from almost 0 to almost 1. Theory predicts that the transition will occur at an average connectivity of ln N +ln ln N [Bollobas85] <ref> [ 1 ] </ref> , and this prediction is supported by our results in Fig. 1a. where the theoretical value is shown by the dashed vertical line. This transition shows the characteristic properties of a phase transition.
Reference: [ 2 ] <author> Fu, Y. </author> <title> "The Uses and Abuses of Statistical Mechanics in Computational Complexity", in " Lectures in the Sciences of Complexity", </title> <editor> Ed. D. L. </editor> <booktitle> Stein, </booktitle> <pages> pp 815-826, </pages> <publisher> Addison Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Summarizing the properties of complex systems through a small set of parameters is routine in statistical mechanics [Fu89] <ref> [ 2 ] </ref> ,[Kirkpatrick85] [ 7 ] . This is possible because a large number of local interactions can produce dramatic coordinated macroscopic behavior, such as phase transitions, that do not depend on the detailed interactions within the system. <p> However, constrained minimization problems such as graph partition, integer partition, maximal clique, Ramsey numbers etc., may have a different order parameters. Some of these problems show a "spin-glass like" transition [Fu89] <ref> [ 2 ] </ref> . An objection to the above results may be that they are all based on heuristic backtrack search, so that they may be a result of this choice rather than intrinsic to the problem.
Reference: [ 3 ] <author> Garey M. R. and Johnson D. S., </author> <title> "Computers and Intractability': A Guide to the Theory of NP-Completeness", </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: We found that these operators reduced all our carefully hand-constructed "hard" graphs to trivial cases! In particular, all graphs reduced using K = 2 reduced to the null graph, showing that 2-colorability is a trivial P problem [Garey79] <ref> [ 3 ] </ref> . Although these are all the reduction operators we could find, they are all that is possible. In particular, we have found reduction operators that eliminate more than one node at a time, but these operators are so rarely applicable we did not use them. <p> An apparent exception to the conjecture that all the NP problems overlap the critical boundary, is to discover if planar graphs with node connectivity 4) are 3-Col. This is an NP-complete problem [Garey79] <ref> [ 3 ] </ref> , yet our 3-Col transition for random reduced graphs occurs at a connectivity 5:4 (see Fig. 3b). To compare planar graphs with our results we must first reduce them. <p> However, if the proportion of 4-connected nodes in 3,4 planar graphs are sufficiently restricted, the result is a new P class of problems, assuming the conjecture is true. 5 An Example: K-Satisfyability Since it is possible to map K-colorability problems into K-sat problems and vice versa [Garey79] <ref> [ 3 ] </ref> , we next investigate K-sat problems. We used a form of resolution to reduce random K-sat problems before applying a simple backtrack search procedure with a most-constrained-first heuristic. The results are shown in Fig. 4. <p> Note that TSP contains HC as a special case where all the costs are either 1 or 2,(see [Garey79] <ref> [ 3 ] </ref> ), where a cost of 1 corresponds to the nodes being connected. Because TSP "contains" HC as a special case, the phase transition in HC would be expected to occur at the same variance value as TSP (when the 1,2 costs are suitably mapped). <p> Such a mapping is given in [Garey79] <ref> [ 3 ] </ref> , where a 2-sat clause, such as (a _ b) goes into two clauses (a _ b _ x) and (a _ b _ x).
Reference: [ 4 ] <author> Huberman, B. A. and Hogg, T., </author> <title> "Phase Transitions in Artificial Intelligence Systems", </title> <journal> Artificial Intelligence, </journal> <volume> 33, </volume> <pages> 155-171, </pages> <year> 1987. </year>
Reference-contexts: Our interest in phase transitions arises from the discovery that hard to solve problems occur at such boundaries for many types of problems. The importance of phase transitions for AI is discussed in [Huberman87] <ref> [ 4 ] </ref> where it is argued that complex systems composed of many interacting values can often be understood at the macroscopic level in terms of a few order parameters that are characteristic of the system as a whole.
Reference: [ 5 ] <author> Karp, R. M. and Pearl, J., </author> <title> "Searching for an Optimal Path in a Tree with Random Costs", </title> <journal> Artificial Intelligence,21, </journal> <volume> (1,2), </volume> <pages> 99-116, </pages> <year> 1983. </year>
Reference-contexts: This is possible because a large number of local interactions can produce dramatic coordinated macroscopic behavior, such as phase transitions, that do not depend on the detailed interactions within the system. Examples of phase transitions in AI are given in [Karp83] <ref> [ 5 ] </ref> ,[Purdom83] [ 6 ] . 3 An Example: Hamilton Circuits A Hamilton Circuit (HC) is a cyclic ordering of a set of nodes such that there is an edge connecting every pair of nodes in the graph in order.
Reference: [ 6 ] <author> Purdom, P. W., </author> <title> "Search Rearrangement Backtracking and Polynomial Average Time", </title> <journal> Artificial Intelligence,21, </journal> <volume> (1,2), </volume> <pages> 117-134, </pages> <year> 1983. </year>
Reference-contexts: We expect that in future computer scientists will produce "phase diagrams" for particular problem domains to aid in hard problem identification and for prediction of solution existence probability, such as shown in [Purdom83] <ref> [ 6 ] </ref> . We present these ideas by first showing how phase transitions arise in problem solving, and then illustrating particular transitions through several examples with different properties. We then show how some of these examples interrelate when they are mapped onto each other. <p> This is possible because a large number of local interactions can produce dramatic coordinated macroscopic behavior, such as phase transitions, that do not depend on the detailed interactions within the system. Examples of phase transitions in AI are given in [Karp83] [ 5 ] ,[Purdom83] <ref> [ 6 ] </ref> . 3 An Example: Hamilton Circuits A Hamilton Circuit (HC) is a cyclic ordering of a set of nodes such that there is an edge connecting every pair of nodes in the graph in order.
Reference: [ 7 ] <author> Kirkpatrick, S. and Swendsen, R. H., </author> <title> "Statistical Mechanics and Disordered Systems", </title> <journal> Comm. ACM, </journal> <volume> 28, 4, </volume> <pages> 363-373, </pages> <month> April </month> <year> 1985 </year>
Reference-contexts: In particular, the size of the largest connected sub-graph grows very rapidly as a function of the average connectivity as the critical connectivity is approached from below. Also, the sizes of the subgraphs below the threshold show a fractal distribution|these properties are related to analogous physical systems, e.g. [Kirkpatrick85] <ref> [ 7 ] </ref> . Our interest in phase transitions arises from the discovery that hard to solve problems occur at such boundaries for many types of problems. <p> Summarizing the properties of complex systems through a small set of parameters is routine in statistical mechanics [Fu89] [ 2 ] ,[Kirkpatrick85] <ref> [ 7 ] </ref> . This is possible because a large number of local interactions can produce dramatic coordinated macroscopic behavior, such as phase transitions, that do not depend on the detailed interactions within the system.
Reference: [ 8 ] <author> Little, J. D. C., et al., </author> <title> "An Algorithm for the Traveling Salesman Problem", </title> <journal> O.R.S.A., </journal> <volume> 11, </volume> <pages> 972-989, </pages> <year> 1963. </year>
Reference-contexts: For convenience we choose cost matrices with a mean edge cost of 10, but with varying standard deviations of these costs. To estimate the computational cost of solving TSP problems we used Little's algorithm; the best exact algorithm we could find [Little63] <ref> [ 8 ] </ref> . It is a kind of backtrack algorithm that efficiently exploits properties of the cost matrix and guarantees to find a minimum cost solution.
Reference: [ 9 ] <author> Minton, S. et al, </author> <title> "Solving Large-Scale Constraint Satisfaction and Scheduling Problems Using a Heuristic Repair Method'", </title> <booktitle> Proc. 8th. Nat. Conf. on A.I. (AAAI-90), </booktitle> <pages> 17-24, </pages> <year> 1990. </year>
Reference-contexts: Many practical constraint satisfaction problems, such as timetable construction, can be mapped into a graph coloring problem. Graph coloring has been extensively investigated, both theoretically and empirically, e.g., [Minton90] <ref> [ 9 ] </ref> ,[Turner88] [ 10 ] . Even though graph coloring is an NP-complete problem, these authors report that graph coloring is "almost always easy". <p> These results show that there is a phase transition for the cost of solving K-colorability problems, and it occurs at the critical average connectivity where the probability of a solution has dropped to almost zero. This explains why previous authors [Minton90] <ref> [ 9 ] </ref> ,[Turner88] [ 10 ] found K-colorability an easy problem|they were using nonreduced graphs whose effective connectivities did not typically fall near the phase boundary. Examination of Brelaz's algorithm on the hard instances shows that it often backtracks, and sometimes backtracks all the way to the beginning. <p> Unfortunately, this is not true|what matters is whether the phase boundary (if there is one) occurs at a fixed N or not. To explain this distinction, we compare the above results with the N-Queens problem [Minton90] <ref> [ 9 ] </ref> , which is a known to be P. <p> An objection to the above results may be that they are all based on heuristic backtrack search, so that they may be a result of this choice rather than intrinsic to the problem. For graph coloring, a "local repair" algorithm [Minton90] <ref> [ 9 ] </ref> and a probablistic search procedure also had difficulties with reduced graphs in the critical connectivity range, adding confirmation that the phase phenomenon is intrinsic.
Reference: [ 10 ] <author> Turner, J. S., </author> <title> "Almost All k-Colorable Graphs are Easy to Color", </title> <journal> Journal of Algorithms, </journal> <volume> 9, </volume> <pages> 63-82, </pages> <year> 1988. </year>
Reference-contexts: On the other hand it is well known that for many of these NP problems, typical instances are easy to solve (e.g. [Turner88] <ref> [ 10 ] </ref> ). There is no contradiction here, since NP complexity is usually a worst case analysis for a whole class of problems, and fl Research Institute for Advanced Computer Science so says nothing about the difficulty of typical instances. <p> Many practical constraint satisfaction problems, such as timetable construction, can be mapped into a graph coloring problem. Graph coloring has been extensively investigated, both theoretically and empirically, e.g., [Minton90] [ 9 ] ,[Turner88] <ref> [ 10 ] </ref> . Even though graph coloring is an NP-complete problem, these authors report that graph coloring is "almost always easy". In particular, a simple backtrack algorithm by Brelaz was found to solve all randomly generated graphs it was tried on with little backtrack [Turner88] [ 10 ] . <p> [ 9 ] ,[Turner88] <ref> [ 10 ] </ref> . Even though graph coloring is an NP-complete problem, these authors report that graph coloring is "almost always easy". In particular, a simple backtrack algorithm by Brelaz was found to solve all randomly generated graphs it was tried on with little backtrack [Turner88] [ 10 ] . We continue these investigations but restrict our attention to random graphs that have been "reduced". The "reduction operators" decribed below guarantee that if the reduced graph is K-colorable (or not) then the original graph is K-colorable (or not). <p> The transition for 4-Col is much sharper than for 3-Col. Similar results are obtained for random reduced graphs that are not guaranteed to have a K-col solution, and for random graphs restricted to 2-D neighbor connections. Brelaz's algorithm [Turner88] <ref> [ 10 ] </ref> uses heuristics: Select an uncolored node with the fewest remaining colors; ties are broken by selecting the node connected to the most uncolored nodes; remaining choices are made ran domly. <p> These results show that there is a phase transition for the cost of solving K-colorability problems, and it occurs at the critical average connectivity where the probability of a solution has dropped to almost zero. This explains why previous authors [Minton90] [ 9 ] ,[Turner88] <ref> [ 10 ] </ref> found K-colorability an easy problem|they were using nonreduced graphs whose effective connectivities did not typically fall near the phase boundary. Examination of Brelaz's algorithm on the hard instances shows that it often backtracks, and sometimes backtracks all the way to the beginning.
References-found: 10

