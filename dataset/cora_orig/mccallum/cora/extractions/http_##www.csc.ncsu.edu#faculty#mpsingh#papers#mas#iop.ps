URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/iop.ps
Refering-URL: http://www.csc.ncsu.edu/faculty/mpsingh/papers/mas/
Root-URL: http://www.csc.ncsu.edu
Email: singh@ncsu.edu  
Phone: +1.919.515.5677 (voice) +1.919.515.7896 (fax)  
Title: Toward Interaction-Oriented Programming  
Author: Munindar P. Singh 
Address: Raleigh, NC 27695-8206, USA  
Affiliation: Department of Computer Science North Carolina State University  
Abstract: Although much progress has been made in agent theory and practice, bottlenecks remain in the construction of complex multiagent systems. We introduce interaction-oriented programming (IOP) as an approach to orchestrate the interactions among agents. IOP is more tractable and practical than general agent programming, especially in settings such as open information environments, where the internal details of autonomously developed agents are not available. IOP facilitates multiagent system design by enabling declarative specification and enactment of agent interactions, thereby channeling the intellectual energies of designers into the most amenable and effective design tasks. We develop an event algebra to specify interactions among agents. We automatically compile these declarative specifications into executable temporal logic constraints. These are efficiently processed at run-time to produce the desired behavior in a distributed manner. We have implemented the above modules in a (concurrent) actor language. 
Abstract-found: 1
Intro-found: 1
Reference: [ Arens et al., 1993 ] <author> Arens, Yigal; Chee, Chin Y.; Hsu, Chun-Nan; and Knoblock, Craig A.; </author> <year> 1993. </year> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal on Intelligent and Cooperative Information Systems 2(3) </journal> <pages> 127-158. </pages>
Reference-contexts: However, their approach does not have an explicit representation of search paradigms, and does not apply generically. The search techniques are captured as different search paradigms in our approach. Some of the other agent techniques have focused on ontologies <ref> [ Arens et al., 1993; Huhns et al., 1994 ] </ref> and knowledge communication [ Labrou & Finin, 1994 ] . Our present contribution is orthogonal to, and compatible with, them.
Reference: [ Borenstein, 1994 ] <author> Borenstein, Nathaniel S.; </author> <year> 1994. </year> <title> Email with a mind of its own: The Safe-Tcl language for enabled email. </title> <booktitle> In Proceedings of the Workshop on Upper Layer Protocols and Architectures (ULPAA). </booktitle>
Reference-contexts: Many "agent" approaches, e.g., <ref> [ White, 1994; Borenstein, 1994 ] </ref> , provide scripting languages through which agents can be transported, but provide no significant abstractions to program agents or structure their computations. The distributed AI approaches are the most promising. [ Oates et al., 1994 ] propose an approach for planning searches.
Reference: [ Bowman et al., 1994 ] <author> Bowman, C. Mic; Danzig, Peter B.; Manber, Udi; and Schwartz, Michael F.; </author> <year> 1994. </year> <title> Scalable internet resource discovery: Research problems and approaches. </title> <journal> Communications of the ACM 37(8) </journal> <pages> 98-114. </pages>
Reference-contexts: Our approach can detect and preprocess such protocols, so that additional "promissory" or "prohibitory" messages can be generated at run-time to obtain the desired behavior. 4 Discussion Much present work on information search concentrates on techniques for creating, maintaining, and using indexes, but in a hardwired manner, e.g., <ref> [ Bowman et al., 1994 ] </ref> . Many "agent" approaches, e.g., [ White, 1994; Borenstein, 1994 ] , provide scripting languages through which agents can be transported, but provide no significant abstractions to program agents or structure their computations.
Reference: [ Breitbart et al., 1993 ] <author> Breitbart, Y.; Deacon, A.; Schek, H.-J.; Sheth, A.; and Weikum, G.; </author> <year> 1993. </year> <title> Merging application-centric and data-centric approaches to support transaction-oriented multi-system workflows. </title> <booktitle> SIGMOD Record 22(3). </booktitle>
Reference-contexts: Our approach makes no assumptions about the possible skeletons. In this way, it is more general than previous approaches <ref> [ Breitbart et al., 1993; Chrysanthis & Ra-mamritham, 1994 ] </ref> , which are limited to single-shot transactions. guard guard guard guard Importantly, the manager is not a separate entity, but is distributed across the guards on the significant events of each agent.
Reference: [ Castelfranchi, 1993 ] <author> Castelfranchi, </author> <title> Cristiano; 1993. Commitments: From individual intentions to groups and organizations. </title> <booktitle> In Proceedings of the AAAI-93 Workshop on AI and Theories of Groups and Organizations: Conceptual and Empirical Research. </booktitle>
Reference-contexts: These approaches have developed powerful semantic representations of domains, plans, and interactions, which can capture many of the intricacies of complex applications. Our activity management infrastructure can facilitate the above approaches and use them to provide the higher-level meanings. There has been much work on social abstractions for agents <ref> [ Castelfranchi, 1993; Gasser, 1991; Singh, 1996a ] </ref> , but a careful computational analysis of it is still awaited. We believe that the present infrastructure will facilitate the development of a computational treatment of the social constructs by capturing the mechanics of possible interactions in a succinct manner.
Reference: [ Chrysanthis & Ramamritham, 1994 ] <author> Chrysanthis, Panos K. and Ramamritham, </author> <title> Krithi; 1994. Synthesis of extended transaction models using ACTA. </title> <journal> ACM Transactions on Database Systems 19(3) </journal> <pages> 450-491. </pages>
Reference: [ Cohen & Levesque, 1990 ] <author> Cohen, Philip R. and Levesque, Hector J.; </author> <year> 1990. </year> <title> Intention is choice with commitment. </title> <booktitle> Artificial Intelligence 42 </booktitle> <pages> 213-261. </pages>
Reference: [ Davis & Smith, 1983 ] <author> Davis, Randall and Smith, Reid G.; </author> <year> 1983. </year> <title> Negotiation as a metaphor for distributed problem solving. </title> <booktitle> Artificial Intelligence 20 </booktitle> <pages> 63-109. </pages> <note> Reprinted in Readings in Distributed Artificial Intelligence, </note> <editor> A. H. Bond and L. Gasser, eds., </editor> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference-contexts: This highlights the optimizations that can be effected through choosing a paradigm carefully to suit one's application needs and infrastructure availability. 3.4 Coordination and Negotiation We saw how IOP applies to information applications. IOP also applies well to higher-level coordination protocols, such as the contract net <ref> [ Davis & Smith, 1983 ] </ref> . Briefly, the contract net begins when the manager sends out a request for proposals (RFP); some potential contractors respond with bids; the manager accepts one of the bids and awards the task.
Reference: [ Decker & Lesser, 1995 ] <author> Decker, Keith S. and Lesser, Victor R.; </author> <year> 1995. </year> <title> Designing a family of coordination algorithms. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle>
Reference-contexts: Formal research on interactions among agents includes [ Singh, 1991; Haddadi, 1995 ] . Other highly valuable work on coordination includes <ref> [ Decker & Lesser, 1995; von Martial, 1992 ] </ref> , which however is not formal. 9 [ Rosenschein & Zlotkin, 1994 ] develop powerful game-theoretic approaches for nego-tiations among agents. We see the above research as complementary to the present paper for the following reason.
Reference: [ Gasser, 1991 ] <author> Gasser, </author> <title> Les; 1991. Social conceptions of knowledge and action: DAI foundations and open systems semantics. </title> <booktitle> Artificial Intelligence 47 </booktitle> <pages> 107-138. </pages>
Reference-contexts: These include abstractions for (a) a rigorous understanding of events in a multiagent system, (b) message passing to implement control and data flow [ Hewitt, 1991 ] , (c) patterns of interactions, (d) knowledge-level communication constraints [ Singh, 1994 ] , and (e) social constructs <ref> [ Gasser, 1991 ] </ref> . Much research has been conducted into these abstractions. What is new here is the focus on programmability and common structure or "design-patterns" without, however, any loss of rigor. This is a significant challenge. <p> These approaches have developed powerful semantic representations of domains, plans, and interactions, which can capture many of the intricacies of complex applications. Our activity management infrastructure can facilitate the above approaches and use them to provide the higher-level meanings. There has been much work on social abstractions for agents <ref> [ Castelfranchi, 1993; Gasser, 1991; Singh, 1996a ] </ref> , but a careful computational analysis of it is still awaited. We believe that the present infrastructure will facilitate the development of a computational treatment of the social constructs by capturing the mechanics of possible interactions in a succinct manner.
Reference: [ Haddadi, 1995 ] <author> Haddadi, </author> <month> Afsaneh; </month> <year> 1995. </year> <title> Towards a pragmatic theory of interactions. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle>
Reference-contexts: Some previous research has related communications to the agents' internal specifications [ McCarthy, 1991; Singh, 1994 ] , but not to the extent necessary to define and enact reusable patterns of interactions. Formal research on interactions among agents includes <ref> [ Singh, 1991; Haddadi, 1995 ] </ref> . Other highly valuable work on coordination includes [ Decker & Lesser, 1995; von Martial, 1992 ] , which however is not formal. 9 [ Rosenschein & Zlotkin, 1994 ] develop powerful game-theoretic approaches for nego-tiations among agents.
Reference: [ Hewitt & Inman, 1991 ] <author> Hewitt, Carl and Inman, </author> <title> Jeff; 1991. DAI betwixt and between: From "intelligent agents" to open systems science. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics 21(6) </journal> <pages> 1409-1419. 11 </pages>
Reference-contexts: IOP shamelessly borrows from previous work in concurrent programming, distributed computing, heterogeneous databases, and distributed artificial intelligence. Thus, IOP naturally bridges the gap between the open systems and intelligent agent heritage of multiagent systems <ref> [ Hewitt, 1991; Hewitt & Inman, 1991 ] </ref> . The most relevant previous techniques for developing and verifying multiagent systems are either not formal, or are designed for traditional distributed systems, or do not fully exploit the modularity inherent in multiagent systems.
Reference: [ Hewitt, 1991 ] <editor> Hewitt, Carl; 1991. </editor> <booktitle> Open information systems semantics for dis-tributed artificial intelligence. Artificial Intelligence 47 </booktitle> <pages> 79-106. </pages>
Reference-contexts: IOP is a family of formalisms and techniques, with a wide range of abstractions. These include abstractions for (a) a rigorous understanding of events in a multiagent system, (b) message passing to implement control and data flow <ref> [ Hewitt, 1991 ] </ref> , (c) patterns of interactions, (d) knowledge-level communication constraints [ Singh, 1994 ] , and (e) social constructs [ Gasser, 1991 ] . Much research has been conducted into these abstractions. <p> IOP shamelessly borrows from previous work in concurrent programming, distributed computing, heterogeneous databases, and distributed artificial intelligence. Thus, IOP naturally bridges the gap between the open systems and intelligent agent heritage of multiagent systems <ref> [ Hewitt, 1991; Hewitt & Inman, 1991 ] </ref> . The most relevant previous techniques for developing and verifying multiagent systems are either not formal, or are designed for traditional distributed systems, or do not fully exploit the modularity inherent in multiagent systems.
Reference: [ Huhns et al., 1994 ] <author> Huhns, Michael N.; Singh, Munindar P.; Ksiezyk, Tomasz; and Jacobs, </author> <title> Nigel; 1994. Global information management via local autonomous agents. </title> <booktitle> In Proceedings of the 13th International Workshop on Distributed Artificial Intelligence. </booktitle>
Reference-contexts: However, their approach does not have an explicit representation of search paradigms, and does not apply generically. The search techniques are captured as different search paradigms in our approach. Some of the other agent techniques have focused on ontologies <ref> [ Arens et al., 1993; Huhns et al., 1994 ] </ref> and knowledge communication [ Labrou & Finin, 1994 ] . Our present contribution is orthogonal to, and compatible with, them.
Reference: [ Kick, 1995 ] <author> Kick, </author> <title> Alexander; 1995. An agent algebra for the formal description and verification of multi agent systems. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle>
Reference-contexts: For example, AgenTalk [ Kuwabara et al., 1995 ] gives a powerful programming environment, but no formal semantics. By contrast, <ref> [ Kick, 1995 ] </ref> has a theory, but no associated implementation. Further, Kick's theory is a variation on traditional process algebras and violates autonomy by requiring full details of the internal structure of agents.
Reference: [ Kuwabara et al., 1995 ] <author> Kuwabara, Kazuhiro; Ishida, Toru; and Osato, </author> <title> Nobuyasu; 1995. AgenTalk: Coordination protocol description for multiagent systems. </title> <booktitle> In Proceedings of the International Conference on Multiagent Systems. </booktitle>
Reference-contexts: The most relevant previous techniques for developing and verifying multiagent systems are either not formal, or are designed for traditional distributed systems, or do not fully exploit the modularity inherent in multiagent systems. For example, AgenTalk <ref> [ Kuwabara et al., 1995 ] </ref> gives a powerful programming environment, but no formal semantics. By contrast, [ Kick, 1995 ] has a theory, but no associated implementation.
Reference: [ Labrou & Finin, 1994 ] <author> Labrou, Yannis and Finin, </author> <title> Tim; 1994. A semantics approach for KQML|a general purpose communication language for software agents. </title> <booktitle> In Proceedings of the International Conference on Information and Knowledge Management. </booktitle>
Reference-contexts: The search techniques are captured as different search paradigms in our approach. Some of the other agent techniques have focused on ontologies [ Arens et al., 1993; Huhns et al., 1994 ] and knowledge communication <ref> [ Labrou & Finin, 1994 ] </ref> . Our present contribution is orthogonal to, and compatible with, them. High-level abstractions for agents have been intensively studied [ Shoham, 1993; Rao & Georgeff, 1991; Cohen & Levesque, 1990; Singh, 1994 ] .
Reference: [ Liu & Sycara, 1994 ] <author> Liu, JyiShane and Sycara, </author> <title> Katia; 1994. Distributed problem solving through coordination in a society of agents. </title> <booktitle> In Proceedings of the 13th International Workshop on Distributed Artificial Intelligence. </booktitle>
Reference: [ McCarthy, 1991 ] <author> McCarthy, John; 1991. </author> <month> Elephant </month> <year> 2000: </year> <title> A programming language based on speech acts. </title> <institution> Computer Science Department, Stanford University. </institution>
Reference-contexts: The present work has a formal semantics along with an operational interpretation, but needs to be enhanced with some of the abstractions from the above works. Some previous research has related communications to the agents' internal specifications <ref> [ McCarthy, 1991; Singh, 1994 ] </ref> , but not to the extent necessary to define and enact reusable patterns of interactions. Formal research on interactions among agents includes [ Singh, 1991; Haddadi, 1995 ] .
Reference: [ Oates et al., 1994 ] <author> Oates, Tim; Prasad, M. V. Nagendra; and Lesser, Victor R.; </author> <year> 1994. </year> <title> Cooperative information gathering: A distributed problem solving approach. </title> <type> Technical Report 94-66, </type> <institution> University of Massachusetts, </institution> <address> Amherst, MA. </address>
Reference-contexts: Many "agent" approaches, e.g., [ White, 1994; Borenstein, 1994 ] , provide scripting languages through which agents can be transported, but provide no significant abstractions to program agents or structure their computations. The distributed AI approaches are the most promising. <ref> [ Oates et al., 1994 ] </ref> propose an approach for planning searches. However, their approach does not have an explicit representation of search paradigms, and does not apply generically. The search techniques are captured as different search paradigms in our approach.
Reference: [ Pree, 1995 ] <author> Pree, </author> <title> Wolfgang; 1995. Design Patters for Object-Oriented Software Development. </title> <publisher> ACM Press and Addison-Wesley, </publisher> <address> Reading, MA. </address>
Reference-contexts: Design patterns are drawing much attention in object-oriented programming, but they are not formalized and focus on program structure rather than interactions <ref> [ Pree, 1995 ] </ref> . Closer connections remain to be investigated. Although IOP is a generic approach, the applications are of course highly important.
Reference: [ Rao & Georgeff, 1991 ] <author> Rao, Anand S. and Georgeff, Michael P.; </author> <year> 1991. </year> <title> Modeling rational agents within a BDI-architecture. </title> <booktitle> In Principles of Knowledge Representation and Reasoning. </booktitle>
Reference: [ Rosenschein & Zlotkin, 1994 ] <author> Rosenschein, Jeffrey S. and Zlotkin, </author> <month> Gilad; </month> <year> 1994. </year> <title> Rules of Encounter. </title> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: Formal research on interactions among agents includes [ Singh, 1991; Haddadi, 1995 ] . Other highly valuable work on coordination includes [ Decker & Lesser, 1995; von Martial, 1992 ] , which however is not formal. 9 <ref> [ Rosenschein & Zlotkin, 1994 ] </ref> develop powerful game-theoretic approaches for nego-tiations among agents. We see the above research as complementary to the present paper for the following reason.
Reference: [ Shoham, 1993 ] <author> Shoham, </author> <title> Yoav; 1993. Agent-oriented programming. </title> <booktitle> Artificial Intelligence 60 </booktitle> <pages> 51-92. </pages>
Reference: [ Singh, 1991 ] <author> Singh, Munindar P.; </author> <year> 1991. </year> <title> Group ability and structure. </title> <editor> In Demazeau, Y. and Muller, J.-P., editors, </editor> <booktitle> Decentralized Artificial Intelligence, </booktitle> <volume> Volume 2. </volume> <publisher> Else-vier Science Publishers B.V. / North-Holland, Amsterdam, Holland. </publisher> <pages> 127-145. 12 </pages>
Reference-contexts: Some previous research has related communications to the agents' internal specifications [ McCarthy, 1991; Singh, 1994 ] , but not to the extent necessary to define and enact reusable patterns of interactions. Formal research on interactions among agents includes <ref> [ Singh, 1991; Haddadi, 1995 ] </ref> . Other highly valuable work on coordination includes [ Decker & Lesser, 1995; von Martial, 1992 ] , which however is not formal. 9 [ Rosenschein & Zlotkin, 1994 ] develop powerful game-theoretic approaches for nego-tiations among agents.
Reference: [ Singh, 1994 ] <author> Singh, Munindar P.; </author> <year> 1994. </year> <title> Multiagent Systems: A Theoretical Frame--work for Intentions, Know-How, and Communications. </title> <publisher> Springer Verlag, </publisher> <address> Heidel-berg, Germany. </address>
Reference-contexts: These include abstractions for (a) a rigorous understanding of events in a multiagent system, (b) message passing to implement control and data flow [ Hewitt, 1991 ] , (c) patterns of interactions, (d) knowledge-level communication constraints <ref> [ Singh, 1994 ] </ref> , and (e) social constructs [ Gasser, 1991 ] . Much research has been conducted into these abstractions. What is new here is the focus on programmability and common structure or "design-patterns" without, however, any loss of rigor. This is a significant challenge. <p> The present work has a formal semantics along with an operational interpretation, but needs to be enhanced with some of the abstractions from the above works. Some previous research has related communications to the agents' internal specifications <ref> [ McCarthy, 1991; Singh, 1994 ] </ref> , but not to the extent necessary to define and enact reusable patterns of interactions. Formal research on interactions among agents includes [ Singh, 1991; Haddadi, 1995 ] .
Reference: [ Singh, 1995 ] <author> Singh, Munindar P.; </author> <year> 1995. </year> <title> Semantical considerations on workflows: Algebraically specifying and scheduling intertask dependencies. </title> <booktitle> In Proceedings of the 5th International Workshop on Database Programming Languages (DBPL). </booktitle>
Reference: [ Singh, 1996a ] <author> Singh, Munindar P.; </author> <year> 1996a. </year> <title> A conceptual analysis of commitments in multiagent systems. </title> <type> Technical Report TR-96-09, </type> <institution> Department of Computer Science, North Carolina State University, </institution> <address> Raleigh, NC. </address> <note> Available at http://www4.ncsu.edu/eos/info/ dblab/www/mpsingh/ papers/agents+multiagents/ commit.ps. </note>
Reference-contexts: These approaches have developed powerful semantic representations of domains, plans, and interactions, which can capture many of the intricacies of complex applications. Our activity management infrastructure can facilitate the above approaches and use them to provide the higher-level meanings. There has been much work on social abstractions for agents <ref> [ Castelfranchi, 1993; Gasser, 1991; Singh, 1996a ] </ref> , but a careful computational analysis of it is still awaited. We believe that the present infrastructure will facilitate the development of a computational treatment of the social constructs by capturing the mechanics of possible interactions in a succinct manner.
Reference: [ Singh, 1996b ] <author> Singh, Munindar P.; </author> <year> 1996b. </year> <title> Formal semantics for workflow computations. </title> <type> Technical Report TR-96-08, </type> <institution> Department of Computer Science, North Carolina State University, </institution> <address> Raleigh, NC. </address> <note> Extended version of [ Singh, 1995 ] . Also available at http://www4.ncsu.edu/eos/info/ dblab/www/mpsingh/ papers/databases/ semantics-jan96.ps. </note>
Reference-contexts: The mathematical results are simply inherited. Our theory and implementation are based on an abstract event-based trace semantics. Our algebraic notation, its semantics, and its processing are described in <ref> [ Singh, 1996b; Singh, 1996c ] </ref> ; we include only a summary here. Our notation involves event types, which are explicitly represented in our implementation. Specific event tokens, however, are attempted or triggered. <p> Admissibility encodes the knowledge of the system about specific events. We give a set of equations, which enable efficient symbolic reasoning to determine when a certain event may be permitted, prevented, or triggered. These equations are proved sound and complete in <ref> [ Singh, 1996b ] </ref> . Certain compile-time preprocessing is required to prevent deadlocks and race conditions. This too is carried out symbolically. We lack the space to include details. 3.3 Specification and Scheduling of Interactions Our language allows a wide variety of dependencies to be stated.
Reference: [ Singh, 1996c ] <author> Singh, Munindar P.; </author> <year> 1996c. </year> <title> Synthesizing distributed constrained events from transactional workflow specifications. </title> <booktitle> In Proceedings of the 12th International Conference on Data Engineering (ICDE). [ von Martial, 1992 ] von Martial, Frank; 1992. Coordinating Plans of Autonomous Agents. </booktitle> <publisher> Springer Verlag, </publisher> <address> Berlin, Germany. </address>
Reference-contexts: The mathematical results are simply inherited. Our theory and implementation are based on an abstract event-based trace semantics. Our algebraic notation, its semantics, and its processing are described in <ref> [ Singh, 1996b; Singh, 1996c ] </ref> ; we include only a summary here. Our notation involves event types, which are explicitly represented in our implementation. Specific event tokens, however, are attempted or triggered.
Reference: [ White, 1994 ] <author> White, </author> <title> James; 1994. TeleScript technology: The foundation for the electronic marketplace. </title> <type> White paper. </type>
Reference-contexts: Many "agent" approaches, e.g., <ref> [ White, 1994; Borenstein, 1994 ] </ref> , provide scripting languages through which agents can be transported, but provide no significant abstractions to program agents or structure their computations. The distributed AI approaches are the most promising. [ Oates et al., 1994 ] propose an approach for planning searches.
Reference: [ Wittig, 1992 ] <editor> Wittig, Thies, editor. ARCHON: </editor> <title> An Architecture for Multi-agent Systems. </title> <publisher> Ellis Horwood Limited, </publisher> <address> West Sussex, UK. </address> <month> 13 </month>
References-found: 32

