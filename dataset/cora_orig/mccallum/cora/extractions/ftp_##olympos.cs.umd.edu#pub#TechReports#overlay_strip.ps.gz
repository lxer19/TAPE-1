URL: ftp://olympos.cs.umd.edu/pub/TechReports/overlay_strip.ps.gz
Refering-URL: http://www.cs.umd.edu/~christos/jpub.html
Root-URL: 
Email: peter@ced.tuc.gr  christos@cs.umd.edu  
Title: Overlay Striping and Optimal Parallel I/O for Modern Applications  
Author: Peter Triantafillou Christos Faloutsos 
Address: Crete, Greece  U.S.A  
Affiliation: Multimedia Systems Institute of Crete and Dept. of Computer Engineering Technical University of  Dept. of Computer Science and Institute for Systems Research (ISR), University of Maryland,  
Abstract: Disk array systems are rapidly becoming the secondary-storage media of choice for many emerging applications with large storage and high bandwidth requirements. Striping data across the disks of a disk array introduces significant performance benefits mainly because the effective transfer rate of the secondary storage is increased by a factor equal to the stripe width. However, the choice of the optimal stripe width is an open problem: no general formal analysis has been reported and intuition alone fails to provide good guidelines. As a result one may find occasionally contradictory recommendations in the literature. With this work we first contribute an analytical calculation of the optimal stripe width. Second, we recognize that the optimal stripe width is sensitive to the multiprogramming level, which is not known a priori and fluctuates with time. Thus, calculations of the optimal stripe width are, by themselves only, of little practical use. For this reason we propose a novel striping technique, called overlay striping, which allows objects to be retrieved using a number of alternative stripe widths. We provide the detailed algorithms for our overlay striping method and we study the associated storage overhead and performance improvements, and we show that we can achieve near optimal performance for very wide ranges of the possible multiprogramming levels, while incurring small storage overheads.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Berson, R. Muntz, S. Ghandeharizadeh, and X. Ju, </author> <title> "Staggered Striping in Multimedia Information Systems", </title> <booktitle> Proceedings of ACM SIGMOD Conference, </booktitle> <month> May </month> <year> 1994, </year> <pages> pp. 79-90. </pages>
Reference-contexts: The various data striping techniques developed for these applications were also primarily concerned with the reliability of accesses to the stored data. Recently, researchers in multimedia systems have also paid attention to disk arrays for placing their data <ref> [25, 1, 14, 19] </ref>. Multimedia data, such as 2 video and audio, require very large storage capacities and very large I/O bandwidths, making disk arrays the natural choice for the storage medium. <p> Thus, one may find conflicting stripe width choices in the related literature for several emerging applications. For instance, the staggered striping method <ref> [1] </ref> uses the minimum width that can guarantee the continuity of the delay-sensitive data, employing essentially an "altruistic" approach for each request.
Reference: [2] <author> C. Bisdikian, and B. Patel, </author> <title> "Issues on Movie Allocation in Distributed Video-on-Demand Systems", </title> <booktitle> IEEE International Communications Conference 1995, </booktitle> <pages> pp. 250-255. </pages>
Reference-contexts: Furthermore, note that the distribution networks for Cable TV which are currently considered for such applications, such as the HFC 802.14 network, connect the storage servers in a hierarchical network with the user communities connected to the servers at the leafs of the hierarchy (called head-end servers), <ref> [2, 3, 18] </ref>. In such distribution networks, the servers above the leaf level receive requests for their data objects which they ship to the servers below them en route to the head-end servers.
Reference: [3] <editor> C. Bisdikian, et al, "MLAP: </editor> <title> A MAC Level Access Protocol for the HFC 802.14 Network", </title> <institution> IBM Research Report RC20284, </institution> <month> December </month> <year> 1995. </year>
Reference-contexts: Furthermore, note that the distribution networks for Cable TV which are currently considered for such applications, such as the HFC 802.14 network, connect the storage servers in a hierarchical network with the user communities connected to the servers at the leafs of the hierarchy (called head-end servers), <ref> [2, 3, 18] </ref>. In such distribution networks, the servers above the leaf level receive requests for their data objects which they ship to the servers below them en route to the head-end servers.
Reference: [4] <author> A.F. Cardenas, </author> <title> "Analysis and Performance of Inverted Data Base Structures", </title> <journal> CACM, </journal> <volume> 18,5, </volume> <month> May </month> <year> 1975, </year> <pages> pp. 253-263. </pages>
Reference-contexts: in perfect agreement with the experimental results of [5, 14] and the intuition behind [25]. 3.3.2 Analysis for `Random' Placement For the random placement, A g () is given by: A g (N; n g ) = n g fi 1 (1 n g ! The derivation resembles Cardenas' formula <ref> [4] </ref> and can be explained as follows. Focusing on one disk-group, we compute the probability that a request for an object will miss it. This probability is given by 1 1 n g . Then we compute the probability that N requests for objects will miss it.
Reference: [5] <author> P. Chen and D.A. Patterson, </author> <title> "Maximizing Performance in a Striped Disk Array", </title> <booktitle> Proceedings of the 17th Annual IEEE Symposium on Computer Architecture, </booktitle> <year> 1990, </year> <pages> pp. 322-331. </pages>
Reference-contexts: Section 4 presents the algorithms for the proposed `overlay' striping. Section 5 gives the conclusions and future research directions. 2 Related Work, Motivations, and Overview of Contributions There is great consensus that the I/O subsystem of a computer system has become the performance bottleneck <ref> [5, 21] </ref>. This observation is the motivation for a large body of research in the area of storage servers. <p> With the work reported in this paper we address the issue of ensuring maximum disk array performance, as that is affected by the stripe width. Experimental proof of the sensitivity of the storage system's performance on the stripe width has been provided in <ref> [5, 14] </ref>. In [5] the authors performed extensive simulation studies to determine the optimum stripe unit size for a single data placement model in which the data are placed randomly on the array disks. <p> With the work reported in this paper we address the issue of ensuring maximum disk array performance, as that is affected by the stripe width. Experimental proof of the sensitivity of the storage system's performance on the stripe width has been provided in [5, 14]. In <ref> [5] </ref> the authors performed extensive simulation studies to determine the optimum stripe unit size for a single data placement model in which the data are placed randomly on the array disks. <p> Also, in [20] the dependence of the stripe width on the workload was not taken into account. Despite the general recognition that the stripe width plays a key role in determining the performance of the system <ref> [5, 8, 14, 6] </ref> no formal attempt has been made, to our knowledge, to determine in general the stripe width which ensures the optimal performance of the disk array. Thus, one may find conflicting stripe width choices in the related literature for several emerging applications. <p> The 3 streaming RAID method [25], when placing delay-sensitive data, uses the maximum width (i.e., equal to the number of disks in the array) to achieve good performance through load balancing and high disk utilization. Even the results in <ref> [5, 14, 20] </ref> which have studied similar problems, provide information for only the two extreme cases: all-disk striping versus one-disk striping. Also they study the problem under only one data placement method (which determines which objects are assigned to which disks). <p> The formulas for the stripe width also define the relationship of the optimal W opt and the current workload N and agrees with the intuition suggested by the simulation results in <ref> [5, 14] </ref>. Our model is general enough and can be used for several emerging applications, such as video-on-demand systems, medical information systems, etc. <p> We assume that the most critical system resource is the bandwidth of secondary storage which consists of a disk array. This is a typical assumption made by all related work <ref> [5, 14] </ref>. Depending on the application, there may also be a tertiary storage device, such as a tape library, where all data objects reside permanently. A typical application for this scenario is movie-on-demand. <p> Note that the W disks of a group work in synchrony: It is well known that it is feasible to have the disks of an array rotationally synchronized <ref> [5, 8] </ref>. This implies that there are no deviations in the rotational delays observed from the disks in the group when retrieving a block. Furthermore, there are no deviations in the seek times of the disks in the group since these disks operate in unison, serving exactly the same requests. <p> above retrieve cost formula is also the time for the W disks to retrieve S bits of the object. (This was also the main reason for considering only data placement strategies on groups of disks, instead of, for example, on random disks as was done in the simulation model in <ref> [5] </ref>. In such placement strategies the service times would suffer from the worst rotational and seek times and from additional queuing delays). Thus: t service = t seek + t rot + S (3) The next step is to estimate A g (), the average number of active disk groups. <p> The above is in perfect agreement with the experimental results of <ref> [5, 14] </ref> and the intuition behind [25]. 3.3.2 Analysis for `Random' Placement For the random placement, A g () is given by: A g (N; n g ) = n g fi 1 (1 n g ! The derivation resembles Cardenas' formula [4] and can be explained as follows. <p> We first contributed an analytical calculation of the optimal stripe width. Reviewing the literature one may find conflicting suggestions for choosing profitable widths. Our result agrees with the intuition, as well as with the simulation results obtained by other researchers <ref> [14, 5] </ref>. The optimal stripe width depends on the multiprogramming level, N . Thus, in order to achieve optimal performance, N must be accurately estimated, since otherwise considerable deviation from the optimal performance will be observed. 2. Subsequently, we contributed a novel striping algorithm which we call overlay striping.
Reference: [6] <author> S. Christodoulakis and P. Triantafillou, </author> <title> "Research and Development Issues in Large-Scale Multimedia Systems", </title> <journal> ACM Computing Surveys, </journal> <month> December </month> <year> 1995. </year>
Reference-contexts: Also, in [20] the dependence of the stripe width on the workload was not taken into account. Despite the general recognition that the stripe width plays a key role in determining the performance of the system <ref> [5, 8, 14, 6] </ref> no formal attempt has been made, to our knowledge, to determine in general the stripe width which ensures the optimal performance of the disk array. Thus, one may find conflicting stripe width choices in the related literature for several emerging applications.
Reference: [7] <author> A. Dan, D. Sitaram, and P. Shahabuddin, </author> <title> "Dynamic Batching Policies for an On-Demand Video Server", </title> <journal> ACM/Springer Multimedia Systems, </journal> <volume> no. 4, </volume> <month> June </month> <year> 1996, </year> <pages> pp. 112-121. </pages>
Reference-contexts: One thread of this research concentrates on developing techniques to reduce the number of secondary-storage I/Os by exploiting the characteristics of several emerging applications (such as video on demand servers) and main-memory buffer caches <ref> [13, 23, 11, 7] </ref>. Another thread focuses on the secondary storage medium.
Reference: [8] <author> G.R. Ganger, et al. </author> <title> "Disk Arrays: High-Performance, High-Reliability Storage Subsystems", </title> <journal> IEEE Computer, </journal> <volume> Vol. 27, No. 3, </volume> <month> March </month> <year> 1994, </year> <pages> pp. 30-36. </pages>
Reference-contexts: Another thread focuses on the secondary storage medium. This research led to the construction of disk arrays [22] and to the development of new methods for placing data objects on disk arrays, which attempt to exploit their potential for high performance and reliability <ref> [24, 22, 12, 8] </ref>. A key technique for exploiting the potential for parallel access of the disk arrays is striping. The above research on striping techniques had concentrated on traditional applications, such as transaction processing applications and very large simulation programs running on supercomputers. <p> Also, in [20] the dependence of the stripe width on the workload was not taken into account. Despite the general recognition that the stripe width plays a key role in determining the performance of the system <ref> [5, 8, 14, 6] </ref> no formal attempt has been made, to our knowledge, to determine in general the stripe width which ensures the optimal performance of the disk array. Thus, one may find conflicting stripe width choices in the related literature for several emerging applications. <p> Note that the W disks of a group work in synchrony: It is well known that it is feasible to have the disks of an array rotationally synchronized <ref> [5, 8] </ref>. This implies that there are no deviations in the rotational delays observed from the disks in the group when retrieving a block. Furthermore, there are no deviations in the seek times of the disks in the group since these disks operate in unison, serving exactly the same requests.
Reference: [9] <editor> D.J. Gemmell, et al. </editor> <title> "Multimedia Storage Servers: A Tutorial", </title> <journal> IEEE Computer, </journal> <volume> Vol. 28, no. 5, </volume> <month> May </month> <year> 1995, </year> <pages> pp. 40-51. </pages>
Reference-contexts: Naturally, large-scale medical servers may be accepting requests at very high rates and thus maximizing the throughput of the secondary storage (through techniques such as striping) is crucial. As another example, consider large-scale multimedia systems supporting delay-sensitive applications, such as video-on-demand. It is generally agreed <ref> [16, 14, 9] </ref> that a good block size for such applications is one that represents a certain playback duration (e.g., one second). This choice, for instance, in MPEG video translates into a block size of about one MByte.
Reference: [10] <author> S. Ghandeharizadeh and C. Shahabi, </author> <title> "On Multimedia Repositories, Personal Computers, and Hierarchical Storage Systems", </title> <booktitle> Proceedings of ACM Multimedia Conference, </booktitle> <year> 1994. </year>
Reference-contexts: This follows immediately considering that typical annual requirements for hospital information systems have been found to approximate one half of a Terabyte; while the required storage for a single 100 minute MPEG-encoded video is in the range of a few Gigabytes. 5 <ref> [15, 10, 27] </ref>. 5 Thus, even in this case, the available bandwidth of the disk array becomes the key to overall system performance, justifying our focus on optimizing the disk array performance. In our system model each object is divided into blocks of S bits.
Reference: [11] <author> L. Golubchik, J.C.S. Lui, and R.R. Muntz, </author> <title> "Adaptive Piggybacking: A Novel Technique for Data Sharing in Video-on-Demand Storage Servers", </title> <journal> ACM/Springer Multimedia Systems, </journal> <volume> no. 4, </volume> <month> June </month> <year> 1996, </year> <pages> pp. 140-155. </pages>
Reference-contexts: One thread of this research concentrates on developing techniques to reduce the number of secondary-storage I/Os by exploiting the characteristics of several emerging applications (such as video on demand servers) and main-memory buffer caches <ref> [13, 23, 11, 7] </ref>. Another thread focuses on the secondary storage medium.
Reference: [12] <author> H. Hsiao and D. DeWitt, </author> <title> "A Performance Study of Three High Availability Data Replication Strategies", </title> <booktitle> 1st IEEE International Conference on Parallel and Distributed Information Systems, </booktitle> <year> 1991, </year> <pages> pp 18-28. </pages>
Reference-contexts: Another thread focuses on the secondary storage medium. This research led to the construction of disk arrays [22] and to the development of new methods for placing data objects on disk arrays, which attempt to exploit their potential for high performance and reliability <ref> [24, 22, 12, 8] </ref>. A key technique for exploiting the potential for parallel access of the disk arrays is striping. The above research on striping techniques had concentrated on traditional applications, such as transaction processing applications and very large simulation programs running on supercomputers.
Reference: [13] <author> M. Kamath, K. Ramamritham, and D. Towsley, </author> <title> "Buffer Management for Continuous Media Sharing in Multimedia Database Systems", </title> <type> Technical Report 94-11, </type> <institution> University of Mas-sachusetts, Amherst, </institution> <year> 1994. </year>
Reference-contexts: One thread of this research concentrates on developing techniques to reduce the number of secondary-storage I/Os by exploiting the characteristics of several emerging applications (such as video on demand servers) and main-memory buffer caches <ref> [13, 23, 11, 7] </ref>. Another thread focuses on the secondary storage medium.
Reference: [14] <author> K. Keeton and R. Katz, </author> <title> "Evaluating Video Layout Strategies for a High Performance Storage Server", </title> <booktitle> ACM/Verlag Multimedia Systems, (1995) 3, </booktitle> <pages> pp. 43-52. 19 </pages>
Reference-contexts: The various data striping techniques developed for these applications were also primarily concerned with the reliability of accesses to the stored data. Recently, researchers in multimedia systems have also paid attention to disk arrays for placing their data <ref> [25, 1, 14, 19] </ref>. Multimedia data, such as 2 video and audio, require very large storage capacities and very large I/O bandwidths, making disk arrays the natural choice for the storage medium. <p> With the work reported in this paper we address the issue of ensuring maximum disk array performance, as that is affected by the stripe width. Experimental proof of the sensitivity of the storage system's performance on the stripe width has been provided in <ref> [5, 14] </ref>. In [5] the authors performed extensive simulation studies to determine the optimum stripe unit size for a single data placement model in which the data are placed randomly on the array disks. <p> Their results showed that under light loads the performance was better when striping objects across many disks. Conversely, under heavy loads, performance is better when very small stripe widths are used. Similar conclusions were reached with the (also simulation-based) results in <ref> [14] </ref>. In [14], the authors considered the two extreme alternative placement strategies: one which used only one disk and one which used all the disks of the array which can be accessed in parallel. Their results showed that under light loads the performance was better when using the all-disk placement. <p> Their results showed that under light loads the performance was better when striping objects across many disks. Conversely, under heavy loads, performance is better when very small stripe widths are used. Similar conclusions were reached with the (also simulation-based) results in <ref> [14] </ref>. In [14], the authors considered the two extreme alternative placement strategies: one which used only one disk and one which used all the disks of the array which can be accessed in parallel. Their results showed that under light loads the performance was better when using the all-disk placement. <p> Also, in [20] the dependence of the stripe width on the workload was not taken into account. Despite the general recognition that the stripe width plays a key role in determining the performance of the system <ref> [5, 8, 14, 6] </ref> no formal attempt has been made, to our knowledge, to determine in general the stripe width which ensures the optimal performance of the disk array. Thus, one may find conflicting stripe width choices in the related literature for several emerging applications. <p> The 3 streaming RAID method [25], when placing delay-sensitive data, uses the maximum width (i.e., equal to the number of disks in the array) to achieve good performance through load balancing and high disk utilization. Even the results in <ref> [5, 14, 20] </ref> which have studied similar problems, provide information for only the two extreme cases: all-disk striping versus one-disk striping. Also they study the problem under only one data placement method (which determines which objects are assigned to which disks). <p> The formulas for the stripe width also define the relationship of the optimal W opt and the current workload N and agrees with the intuition suggested by the simulation results in <ref> [5, 14] </ref>. Our model is general enough and can be used for several emerging applications, such as video-on-demand systems, medical information systems, etc. <p> Naturally, large-scale medical servers may be accepting requests at very high rates and thus maximizing the throughput of the secondary storage (through techniques such as striping) is crucial. As another example, consider large-scale multimedia systems supporting delay-sensitive applications, such as video-on-demand. It is generally agreed <ref> [16, 14, 9] </ref> that a good block size for such applications is one that represents a certain playback duration (e.g., one second). This choice, for instance, in MPEG video translates into a block size of about one MByte. <p> We assume that the most critical system resource is the bandwidth of secondary storage which consists of a disk array. This is a typical assumption made by all related work <ref> [5, 14] </ref>. Depending on the application, there may also be a tertiary storage device, such as a tape library, where all data objects reside permanently. A typical application for this scenario is movie-on-demand. <p> The above is in perfect agreement with the experimental results of <ref> [5, 14] </ref> and the intuition behind [25]. 3.3.2 Analysis for `Random' Placement For the random placement, A g () is given by: A g (N; n g ) = n g fi 1 (1 n g ! The derivation resembles Cardenas' formula [4] and can be explained as follows. <p> We first contributed an analytical calculation of the optimal stripe width. Reviewing the literature one may find conflicting suggestions for choosing profitable widths. Our result agrees with the intuition, as well as with the simulation results obtained by other researchers <ref> [14, 5] </ref>. The optimal stripe width depends on the multiprogramming level, N . Thus, in order to achieve optimal performance, N must be accurately estimated, since otherwise considerable deviation from the optimal performance will be observed. 2. Subsequently, we contributed a novel striping algorithm which we call overlay striping.
Reference: [15] <editor> M.G. Kienzle, et al, </editor> <title> "Using Tertiary Storage in Video on Demand Servers", </title> <booktitle> IEEE International Computer Conference, COMPCON 1995, </booktitle> <pages> pp. 225-233. </pages>
Reference-contexts: This follows immediately considering that typical annual requirements for hospital information systems have been found to approximate one half of a Terabyte; while the required storage for a single 100 minute MPEG-encoded video is in the range of a few Gigabytes. 5 <ref> [15, 10, 27] </ref>. 5 Thus, even in this case, the available bandwidth of the disk array becomes the key to overall system performance, justifying our focus on optimizing the disk array performance. In our system model each object is divided into blocks of S bits.
Reference: [16] <author> P. Lougher and D. Shepherd, </author> <title> "The Design of a Storage Server for Continuous Media", </title> <journal> Computer Journal, </journal> <volume> Vol. 36, No. 1, </volume> <year> 1993. </year>
Reference-contexts: Naturally, large-scale medical servers may be accepting requests at very high rates and thus maximizing the throughput of the secondary storage (through techniques such as striping) is crucial. As another example, consider large-scale multimedia systems supporting delay-sensitive applications, such as video-on-demand. It is generally agreed <ref> [16, 14, 9] </ref> that a good block size for such applications is one that represents a certain playback duration (e.g., one second). This choice, for instance, in MPEG video translates into a block size of about one MByte.
Reference: [17] <author> A. Merchant and P.S. Yu, </author> <title> "Analytic Modeling and Comparisons of Striping Strategies for Replicated Disk Arrays", </title> <journal> IEEE Transactions on Computers, </journal> <volume> vol. 44, no. 3, </volume> <month> March </month> <year> 1995, </year> <pages> pp. 419-433. </pages>
Reference-contexts: Thus, at retrieval time, the replica with the most beneficial width will be retrieved. A variation of this technique with only two copies, is called dual striping and has been proposed in <ref> [17] </ref> This solution however has two significant drawbacks. Obviously, it requires a great deal of additional secondary storage space (i.e., larger disk arrays). And, a second-order drawback, is that fewer objects will be able to reside in secondary storage.
Reference: [18] <author> J-P. Nussbaumer, B. Patel, F. Schaffa, and J. Sternbenz, </author> <title> "Networking Requirements for Interactive Video on Demand", </title> <journal> IEEE Transactions on Selected Areas of Communication, </journal> <volume> vol. 13, no. 5, </volume> <month> June </month> <year> 1995, </year> <pages> pp. 779-787. </pages>
Reference-contexts: Furthermore, note that the distribution networks for Cable TV which are currently considered for such applications, such as the HFC 802.14 network, connect the storage servers in a hierarchical network with the user communities connected to the servers at the leafs of the hierarchy (called head-end servers), <ref> [2, 3, 18] </ref>. In such distribution networks, the servers above the leaf level receive requests for their data objects which they ship to the servers below them en route to the head-end servers.
Reference: [19] <author> B. Ozden, R. Rastogi, and A. Silberschatz, </author> <title> "On the Design of a Low-Cost Video-On-Demand Storage System", </title> <journal> ACM/Springer Multimedia Systems, </journal> <volume> 4, </volume> <pages> pp. 40-54, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: The various data striping techniques developed for these applications were also primarily concerned with the reliability of accesses to the stored data. Recently, researchers in multimedia systems have also paid attention to disk arrays for placing their data <ref> [25, 1, 14, 19] </ref>. Multimedia data, such as 2 video and audio, require very large storage capacities and very large I/O bandwidths, making disk arrays the natural choice for the storage medium.
Reference: [20] <author> B. Ozden, R. Rastogi, and A. Silberschatz, </author> <title> "Disk Striping in Video Server Environments", </title> <booktitle> IEEE International Conference on Multimedia Computing and Systems, </booktitle> <month> June </month> <year> 1996. </year>
Reference-contexts: Their results showed that under light loads the performance was better when using the all-disk placement. On the other hand, under heavy loads, the performance was better when using the one-disk placement. In <ref> [20] </ref> the authors studied fine-grained and coarse-grained striping in which the stripe width is only one and all disks, respectively. They analytically and experimentally computed the optimal block size, given the number of disks and the available RAM space. <p> The optimal block size differs for each scheme, and they found that coarse-grained striping with its optimal block size, significantly outperforms fine-grained striping with its optimal block size. Fine-grained and coarse-grained striping, as studied in <ref> [20] </ref> do not exactly correspond to a stripe width of all disks and one disk, respectively, as studied in the works mentioned above and the work in this paper. This holds because in their study the block sizes in the two schemes were different. Also, in [20] the dependence of the <p> striping, as studied in <ref> [20] </ref> do not exactly correspond to a stripe width of all disks and one disk, respectively, as studied in the works mentioned above and the work in this paper. This holds because in their study the block sizes in the two schemes were different. Also, in [20] the dependence of the stripe width on the workload was not taken into account. <p> The 3 streaming RAID method [25], when placing delay-sensitive data, uses the maximum width (i.e., equal to the number of disks in the array) to achieve good performance through load balancing and high disk utilization. Even the results in <ref> [5, 14, 20] </ref> which have studied similar problems, provide information for only the two extreme cases: all-disk striping versus one-disk striping. Also they study the problem under only one data placement method (which determines which objects are assigned to which disks).
Reference: [21] <author> D.A. Patterson, </author> " ", <title> Keynote Speech, </title> <booktitle> 2nd IEEE International Conference on Parallel and Distributed Information Systems, </booktitle> <month> January </month> <year> 1993. </year>
Reference-contexts: Section 4 presents the algorithms for the proposed `overlay' striping. Section 5 gives the conclusions and future research directions. 2 Related Work, Motivations, and Overview of Contributions There is great consensus that the I/O subsystem of a computer system has become the performance bottleneck <ref> [5, 21] </ref>. This observation is the motivation for a large body of research in the area of storage servers.
Reference: [22] <author> D.A. Patterson, G. Gibson, and R.H. Katz, </author> <title> "A Case for Redundant Arrays of Inexpensive Disks (RAID)", </title> <booktitle> Proceedings of ACM SIGMOD Conference, </booktitle> <year> 1988, </year> <pages> pp. 109-116. </pages>
Reference-contexts: Another thread focuses on the secondary storage medium. This research led to the construction of disk arrays <ref> [22] </ref> and to the development of new methods for placing data objects on disk arrays, which attempt to exploit their potential for high performance and reliability [24, 22, 12, 8]. A key technique for exploiting the potential for parallel access of the disk arrays is striping. <p> Another thread focuses on the secondary storage medium. This research led to the construction of disk arrays [22] and to the development of new methods for placing data objects on disk arrays, which attempt to exploit their potential for high performance and reliability <ref> [24, 22, 12, 8] </ref>. A key technique for exploiting the potential for parallel access of the disk arrays is striping. The above research on striping techniques had concentrated on traditional applications, such as transaction processing applications and very large simulation programs running on supercomputers.
Reference: [23] <author> D. Rotem and J.L. Zhao, </author> <title> "Buffer Management for Video Database Systems", </title> <booktitle> Proceedings of IEEE International Conference on Data Engineering, </booktitle> <year> 1995, </year> <pages> pp. 439-447. </pages>
Reference-contexts: One thread of this research concentrates on developing techniques to reduce the number of secondary-storage I/Os by exploiting the characteristics of several emerging applications (such as video on demand servers) and main-memory buffer caches <ref> [13, 23, 11, 7] </ref>. Another thread focuses on the secondary storage medium.
Reference: [24] <author> K. Salem and H. Garcia-Molina, </author> <title> "Disk Striping", </title> <booktitle> Proceedings of 4th IEEE International Conference on Data Engineering, </booktitle> <year> 1986, </year> <pages> pp. 336-342. </pages>
Reference-contexts: Another thread focuses on the secondary storage medium. This research led to the construction of disk arrays [22] and to the development of new methods for placing data objects on disk arrays, which attempt to exploit their potential for high performance and reliability <ref> [24, 22, 12, 8] </ref>. A key technique for exploiting the potential for parallel access of the disk arrays is striping. The above research on striping techniques had concentrated on traditional applications, such as transaction processing applications and very large simulation programs running on supercomputers.
Reference: [25] <author> F.A. Tobagi, et al., </author> <title> "Streaming RAID A Disk Array Management System for Video Files", </title> <booktitle> Proceedings of ACM Multimedia 1993, </booktitle> <pages> pp. 393-400. </pages>
Reference-contexts: The various data striping techniques developed for these applications were also primarily concerned with the reliability of accesses to the stored data. Recently, researchers in multimedia systems have also paid attention to disk arrays for placing their data <ref> [25, 1, 14, 19] </ref>. Multimedia data, such as 2 video and audio, require very large storage capacities and very large I/O bandwidths, making disk arrays the natural choice for the storage medium. <p> Thus, one may find conflicting stripe width choices in the related literature for several emerging applications. For instance, the staggered striping method [1] uses the minimum width that can guarantee the continuity of the delay-sensitive data, employing essentially an "altruistic" approach for each request. The 3 streaming RAID method <ref> [25] </ref>, when placing delay-sensitive data, uses the maximum width (i.e., equal to the number of disks in the array) to achieve good performance through load balancing and high disk utilization. <p> The above is in perfect agreement with the experimental results of [5, 14] and the intuition behind <ref> [25] </ref>. 3.3.2 Analysis for `Random' Placement For the random placement, A g () is given by: A g (N; n g ) = n g fi 1 (1 n g ! The derivation resembles Cardenas' formula [4] and can be explained as follows.
Reference: [26] <institution> George Thoma, National Library of Medicine, Bethesda MD, U.S.A.; </institution> <type> personal communication, </type> <month> June </month> <year> 1996. </year>
Reference-contexts: Other emerging applications, such as hospital information systems, also require storage servers with very large storage capacities and throughput. For example, the `Visible Human' project at the National Library of Medicine in the U.S.A. will require 235Gbytes of storage (before compression), to store 3-d information about a human body <ref> [26] </ref>. The storage servers for such emerging applications will typically also employ tertiary storage devices, since disk arrays typically do not have the required storage capacity on their own. At the same time, data accesses in the above applications are primarily read accesses.
Reference: [27] <author> P. Triantafillou and T. </author> <title> Papadakis "On-Demand Data Elevation in a Hierarchical Multimedia Storage Server", </title> <type> HERMES Technical Report #9, </type> <institution> Dept. of Computer Engineering, Technical University of Crete, </institution> <month> May </month> <year> 1996. </year> <month> 20 </month>
Reference-contexts: This follows immediately considering that typical annual requirements for hospital information systems have been found to approximate one half of a Terabyte; while the required storage for a single 100 minute MPEG-encoded video is in the range of a few Gigabytes. 5 <ref> [15, 10, 27] </ref>. 5 Thus, even in this case, the available bandwidth of the disk array becomes the key to overall system performance, justifying our focus on optimizing the disk array performance. In our system model each object is divided into blocks of S bits.
References-found: 27

