URL: http://www.cs.utexas.edu/users/zliu/pfq_alg.ps
Refering-URL: http://www.cs.utexas.edu/users/zliu/
Root-URL: 
Abstract: DRAFT Packet Fair Queueing Algorithms For Wireless Networks with Location-Dependent Errors T. S. Eugene Ng, Ion Stoica, Hui Zhang School of Computer Science Carnegie Mellon University, PA 15213 Abstract While Packet Fair Queueing algorithms provide both delay guarantees and fairness among competing sessions in wired networks, they cannot be applied directly to wireless networks. One of the main reasons is that in wireless networks sessions can experience location-dependent channel errors. This may lead to situations in which a session receives significantly less service than it is supposed to, while another receives more. Ultimately this results in large discrepancies between the sessions' virtual times, which makes it difficult to provide both delay-guarantees and fairness simultaneously. Our contribution is twofold. First, we propose a new service model, called Channel-condition Independent Fair (CIF), that subsumes all the desirable properties that a Packet Fair Queueing algorithm should have in a wireless environment. This model is characterized by four properties: (1) delay and throughput guarantees for error-free sessions, (2) short-term fairness for error-free sessions, (3) long-term fairness for error-prone sessions, and (4) graceful degradation for sessions that have received excess service. Second, we present a novel algorithm, called Channel-condition Independent packet Fair Queueing (CIF-Q), that achieves all the above properties. To evaluate the algorithm we provide both theoretical analysis and simulation results. 1 Introduction As Internet becomes a global communication infrastructure, we see two important trends. First, new Quality of Service (QoS) service models and algorithms have been developed to evolve Internet into a true integrated services network. Second, wireless data networks are becoming more and more common, especially as an access networking technology. An important research issue is then to extend the QoS service models and algorithms developed for wired networks to wireless networks. In this paper, we study how to implement Packet Fair Queueing (PFQ) algorithms in wireless networks. PFQ algorithms are first proposed in the context of wired networks to approximate the idealized Generalized Processor Sharing (GPS) [7] policy. GPS has been proven to have two properties that are important for integrated services networks: (a) it can provide an end-to-end bounded-delay service to a session whose traffic is constrained by a leaky-bucket; (b) it can ensure fair allocation of bandwidth among all backlogged sessions regardless of whether or not their traffic is constrained. The former property is the basis for supporting guaranteed services while the later property is important for supporting best-effort and link-sharing services. While GPS is defined as an idealized fluid model that cannot be implemented, various PFQ algorithms have been proposed to provide services that are almost identical to that of GPS, and they have been used as the basic building blocks for implementing integrated services networks. Unfortunately, the GPS model and existing PFQ algorithms are not directly applicable to a wireless network environment. The key difficulty is that there are location-dependent channel errors in a wireless environment. That is, some mobile hosts may not be able to transmit data due to channel errors even when there are backlogged sessions on those hosts, while other hosts may have error-free channels and are able to transmit data in the mean 1 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.C.R. Bennett and H. Zhang. </author> <title> Hierarchical packet fair queueing algorithms. </title> <booktitle> In Proceedings of the ACM-SIGCOMM 96, </booktitle> <pages> pages 143-156, </pages> <address> Palo Alto, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: To do this, first we need to pick a Packet Fair Queueing algorithm that approximates the fluid-flow GPS. Although theoretically we can choose any of the well-known algorithms, such as WFQ [2, 7], SCFQ [3], WF 2 Q+ <ref> [1] </ref>, EEVDF [8] for simplicity, in this paper we will use Starting Fair Queueing (SFQ) [4]. The reason for this choice is that in a system with location-dependent channel errors, it is harder to do scheduling based on the finishing time, than based on the starting times.
Reference: [2] <author> A. Demers, S. Keshav, and S. Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <journal> In Journal of Internetworking Research and Experience, </journal> <pages> pages 3-26, </pages> <month> October </month> <year> 1990. </year> <booktitle> Also in Proceedings of ACM SIGCOMM'89, </booktitle> <pages> pp 3-12. </pages>
Reference-contexts: To do this, first we need to pick a Packet Fair Queueing algorithm that approximates the fluid-flow GPS. Although theoretically we can choose any of the well-known algorithms, such as WFQ <ref> [2, 7] </ref>, SCFQ [3], WF 2 Q+ [1], EEVDF [8] for simplicity, in this paper we will use Starting Fair Queueing (SFQ) [4].
Reference: [3] <author> S. Golestani. </author> <title> A self-clocked fair queueing scheme for broadband applications. </title> <booktitle> In Proceedings of IEEE INFO-COM'94, </booktitle> <pages> pages 636-646, </pages> <address> Toronto, CA, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: To do this, first we need to pick a Packet Fair Queueing algorithm that approximates the fluid-flow GPS. Although theoretically we can choose any of the well-known algorithms, such as WFQ [2, 7], SCFQ <ref> [3] </ref>, WF 2 Q+ [1], EEVDF [8] for simplicity, in this paper we will use Starting Fair Queueing (SFQ) [4].
Reference: [4] <author> P. Goyal, H.M. Vin, and H. Chen. </author> <title> Start-time Fair Queuing: A scheduling algorithm for integrated services. </title> <booktitle> In Proceedings of the ACM-SIGCOMM 96, </booktitle> <pages> pages 157-168, </pages> <address> Palo Alto, CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: Although theoretically we can choose any of the well-known algorithms, such as WFQ [2, 7], SCFQ [3], WF 2 Q+ [1], EEVDF [8] for simplicity, in this paper we will use Starting Fair Queueing (SFQ) <ref> [4] </ref>. The reason for this choice is that in a system with location-dependent channel errors, it is harder to do scheduling based on the finishing time, than based on the starting times. <p> Since in our case S r SF Q represents an error-free system where sessions are served by the SFQ policy, the above result suggests that we can use SFQ delay guarantees to bound the packet delay in S. In particular, it was proved in <ref> [4] </ref> that the delay of any packet k of a session i is bounded by d k i + (n 1) R l k R where n represents the total number of active sessions, d k i represents the packet's departure time, and e k i represents the expected arrival time
Reference: [5] <author> S. Lu, V. Bharghavan, and R. Srikant. </author> <title> Fair scheduling in wireless packet networks. </title> <booktitle> In To appear in Proceedings of ACM SIGCOMM'97, </booktitle> <address> Cannes, France, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: However, session i's history of lost service is now completely erased and session i will never be able to regain the service. This results in unfair behaviors. To address these problems, in <ref> [5] </ref>, Lu et al augmented the GPS model and proposed the Wireless Fluid Fair Queueing (WFFQ) service model and the Idealized Wireless Fair Queueing (IWFQ) algorithm for packet systems. <p> Finally, we note that our algorithm is self-clocking in the sense that there is no need for emulating a fluid flow system for scheduling or keeping track of lead and lag. As a result, our algorithm has lower implementation complexity than IWFQ <ref> [5] </ref> which requires the emulation of a fluid system. <p> This means that a leading session, session i, will receive no service as long as there exists a lagging error-free session in the system. This absolute priority compensation behavior is similar to the behavior of the algorithm proposed in <ref> [5] </ref>, except that we have not put an artificial upper bound on this zero service period and real-time requirements are still guaranteed. Although we believe such aggressive compensation is not desirable, it is worthwhile to demonstrate the behavior of our algorithm under this policy.
Reference: [6] <author> G. Nguyen, R. Katz, B. Noble, and M. Satyanarayanan. </author> <title> A trace-based approach for modeling wireless channel behavior. </title> <booktitle> In Proceedings of the Winter Simulation Conference, 1996, </booktitle> <address> Coronado, CA, </address> <month> December </month> <year> 1996. </year>
Reference-contexts: For clarity in showing the effects of channel errors and for ease of interpretation, we choose to model errors as simple periodic error bursts rather than using a more realistic model such as the one suggested in <ref> [6] </ref>. During the 200 second periods of our simulation experiments, channel errors can occur only during the first 45 seconds, leaving enough error-free time to demonstrate the long term fairness properties of our algorithm.
Reference: [7] <author> A. Parekh and R. Gallager. </author> <title> A generalized processor sharing approach to flow control the single node case. </title> <journal> ACM/IEEE Transactions on Networking, </journal> <volume> 1(3) </volume> <pages> 344-357, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: To do this, first we need to pick a Packet Fair Queueing algorithm that approximates the fluid-flow GPS. Although theoretically we can choose any of the well-known algorithms, such as WFQ <ref> [2, 7] </ref>, SCFQ [3], WF 2 Q+ [1], EEVDF [8] for simplicity, in this paper we will use Starting Fair Queueing (SFQ) [4].
Reference: [8] <author> I. Stoica, H. Abdel-Wahab, K. Jeffay, S. Baruah, J. Gehrke, and G. Plaxton. </author> <title> A proportional share resource allocation for real-time, time-shared systems. </title> <booktitle> In Proceedings of the IEEE RTSS 96, </booktitle> <pages> pages 288 - 289, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: To do this, first we need to pick a Packet Fair Queueing algorithm that approximates the fluid-flow GPS. Although theoretically we can choose any of the well-known algorithms, such as WFQ [2, 7], SCFQ [3], WF 2 Q+ [1], EEVDF <ref> [8] </ref> for simplicity, in this paper we will use Starting Fair Queueing (SFQ) [4]. The reason for this choice is that in a system with location-dependent channel errors, it is harder to do scheduling based on the finishing time, than based on the starting times.
Reference: [9] <author> B. Tuch. </author> <title> Development of WaveLAN, an ISM band wireless LAN. </title> <journal> AT&T Technical Journal, </journal> <volume> 72(4) </volume> <pages> 27-37, </pages> <month> July </month> <year> 1993. </year>
Reference-contexts: As an example, the current WaveLAN technology provides 2 Mbps theoretical throughput and supports on the order of 100 hosts <ref> [9] </ref>. These figures are several orders of magnitude smaller than the ones for a high speed communication switch. 5 Fairness and Delay Results In this section we prove the main fairness and delay properties of our algorithm.
References-found: 9

