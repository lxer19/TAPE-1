URL: http://www.robotics.stanford.edu/groups/manips/publications/iros97b.ps
Refering-URL: http://www.robotics.stanford.edu/groups/manips/projects/simpact.html
Root-URL: http://www.robotics.stanford.edu
Title: Collision/Contact Models for the Dynamic Simulation of Complex Environments  
Author: Diego C. Ruspini and Oussama Khatib 
Address: Stanford, CA 94305  
Affiliation: Robotics Laboratory Computer Science Department Stanford University,  
Abstract: In this paper we examine the constraint equations developed for two general dynamic simulation systems from a new perspective. A contact space framework, similar to the operational space framework used for robotic control, is developed which allows the constraint equations for contact and collision to be easily specified. This framework also allows us to scrutinize the multiple relations that exist between the dynamic models used in simulation and the models originally developed for robotic control and analysis. This framework has been used to develop a simulator that can model complex interaction between generalized articulated mechanical systems at interactive rates. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. Baraff, </author> <title> "Analytical methods for dynamic simulation of non-penetrating rigid bodies," </title> <booktitle> Computer Graphics 23, </booktitle> <month> (August </month> <year> 1989), </year> <pages> pp. 223-232. </pages>
Reference-contexts: These methods differ from "penalty" methods that introduce restoring forces, typically proportional to the amount of penetration, only after the objects have penetrated. The simulator Coriolis <ref> [1] </ref> [2] [3], developed by David Baraff constructs a system of simultaneous constraints, which is solved to find the exact contact forces and impulses required to prevent inter-penetration. The simulator Impulse developed by Brian Mirtich and John Canny [8] models all inter-object interaction as a series of tiny micro-collisions. <p> Despite this modeling simplification, in tests comparing simulated and real systems, Impulse has demon strated that it can accurately model the macroscopic behavior of the physical system. In addition Impulse takes into account the effect of friction during impact which is not considered in <ref> [1] </ref>. Both of these systems were originally developed for simulating the motion of simple rigid bodies. While Impulse has been extended to support generalized articulated bodies [9] the constraint equations are still fundamentally based on the equations of motion for simple (un-articulated) rigid body systems. <p> In Section 3 we introduce the contact space dynamic equations. This space is very similar to the operational space formulation common in robotic control [14]. In Section 4 we describe how the collision penetration constraints introduced by Baraff <ref> [1] </ref> can be defined for generalized articulated systems. We also show the strong connection these constraint equations share with the formulation for control of redundant systems. <p> Simpact makes use of the contact space formulation to simulate interaction between generalized objects. Note that a complete description of the collision/contact equations is beyond the scope of this paper and a basic familiarity with Baraff's <ref> [1] </ref> and Mir-tich's [8] simulation systems is assumed. 2 Free Space Motion The configuration of an n-DOF (degree-of-freedom) object can be described by q, a set of n independent generalized coordinates. <p> a linear function of the contact forces f . a = fl 1 f + a free (36) Given a contact space acceleration a that is a linear function of the contact spaces forces f it is possible to write the contact constraint equations in the same form as Baraff <ref> [1] </ref>: fl 1 f a free ; (37) f 0; (38) f T (fl 1 f + a free ) = 0: (39) This LCP constraint system can be used to solve for the unknown contact space forces f as in [3].
Reference: [2] <author> D. Baraff, </author> <title> "Rigid Body Simulation", </title> <booktitle> Lecture Notes for SIGGRAPH '92 Course, </booktitle> <year> (1992). </year>
Reference-contexts: These methods differ from "penalty" methods that introduce restoring forces, typically proportional to the amount of penetration, only after the objects have penetrated. The simulator Coriolis [1] <ref> [2] </ref> [3], developed by David Baraff constructs a system of simultaneous constraints, which is solved to find the exact contact forces and impulses required to prevent inter-penetration. The simulator Impulse developed by Brian Mirtich and John Canny [8] models all inter-object interaction as a series of tiny micro-collisions.
Reference: [3] <author> D. Baraff, </author> <title> "Fast Contact Force Computation for Non-penetrating Rigid Bodies," </title> <booktitle> SIGGRAPH 94 Proceedings, </booktitle> <month> (August </month> <year> 1994), </year> <pages> pp. 23-34. </pages>
Reference-contexts: These methods differ from "penalty" methods that introduce restoring forces, typically proportional to the amount of penetration, only after the objects have penetrated. The simulator Coriolis [1] [2] <ref> [3] </ref>, developed by David Baraff constructs a system of simultaneous constraints, which is solved to find the exact contact forces and impulses required to prevent inter-penetration. The simulator Impulse developed by Brian Mirtich and John Canny [8] models all inter-object interaction as a series of tiny micro-collisions. <p> These constraints can be used, as in <ref> [3] </ref> to solve for the unknown impulse vector p. Once the values for the impulse forces are known they can be applied to the system. <p> contact constraint equations in the same form as Baraff [1]: fl 1 f a free ; (37) f 0; (38) f T (fl 1 f + a free ) = 0: (39) This LCP constraint system can be used to solve for the unknown contact space forces f as in <ref> [3] </ref>. Once these forces are known the configuration space acceleration q is given by q = A 1 (q)[ j oint + J T c f b (q; _q) g (q)] (40) and we can continue the simulation.
Reference: [4] <author> R. Barzel and A. H. Barr, </author> <title> "A modeling system based on dynamic constraints," </title> <booktitle> Computer Graphics 22, </booktitle> <month> 4 (August </month> <year> 1988), </year> <pages> 179-188. </pages>
Reference: [5] <author> J. Craig, </author> <title> "Introduction to Robotics Mechanics and Control," </title> <publisher> Addison-Wesley Pub. Co., </publisher> <year> 1989. </year>
Reference-contexts: There currently exist many methods for computing these equations [13] [11] [6] <ref> [5] </ref>. To dynamically simulate an object using its equations of motion, Eq. 1 is solved for q. q = A 1 (q)[ b (q; _q) g (q)] (2) Methods exist for computing A 1 directly without computing A and then inverting [6]. <p> The contact space forces and configura tion space torque vector is related by <ref> [5] </ref> ext = J T Substituting J T c f + joint for in equation 33 we can write the contact space acceleration as a = J c A 1 J T c f + J c A 1 [ joint b g] + _ J c _q (35) The left
Reference: [6] <author> R. Featherstone. </author> <title> Robot Dynamics Algorithms. </title> <publisher> Kluwer, </publisher> <year> 1987. </year>
Reference-contexts: There currently exist many methods for computing these equations [13] [11] <ref> [6] </ref> [5]. To dynamically simulate an object using its equations of motion, Eq. 1 is solved for q. q = A 1 (q)[ b (q; _q) g (q)] (2) Methods exist for computing A 1 directly without computing A and then inverting [6]. <p> many methods for computing these equations [13] [11] <ref> [6] </ref> [5]. To dynamically simulate an object using its equations of motion, Eq. 1 is solved for q. q = A 1 (q)[ b (q; _q) g (q)] (2) Methods exist for computing A 1 directly without computing A and then inverting [6]. These methods are in general more computationally expensive for systems with a small number of degrees of freedom, but have better asymptotic performance and are therefore more appropriate when the DOF of the system becomes large.
Reference: [7] <author> E. G. Gilbert, et. al., </author> <title> "A Fast Procedure for Computing the Distance between Complex Objects in Three-Dimensional Space," </title> <journal> IEEE J. of Robotics and Automation, Vol.4, </journal> <volume> No. 2, </volume> <month> April </month> <year> 1988. </year>
Reference: [8] <author> B. Mirtich, J. Canny, </author> <title> "Impulse-based Dynamic Simulation," </title> <booktitle> Proceedings of Workshop on Algorithmic Foundations of Robotics, </booktitle> <month> February </month> <year> 1994. </year>
Reference-contexts: The simulator Coriolis [1] [2] [3], developed by David Baraff constructs a system of simultaneous constraints, which is solved to find the exact contact forces and impulses required to prevent inter-penetration. The simulator Impulse developed by Brian Mirtich and John Canny <ref> [8] </ref> models all inter-object interaction as a series of tiny micro-collisions. Only impulses (not contact forces) are applied to the objects to model contact. <p> Simpact makes use of the contact space formulation to simulate interaction between generalized objects. Note that a complete description of the collision/contact equations is beyond the scope of this paper and a basic familiarity with Baraff's [1] and Mir-tich's <ref> [8] </ref> simulation systems is assumed. 2 Free Space Motion The configuration of an n-DOF (degree-of-freedom) object can be described by q, a set of n independent generalized coordinates. <p> 1 J c 0 T : (30) As in equation 15 we can now write the relationship between the change in contact space velocities and con tact space impulses as v c 0 c 0 p c 0 This relation is identical in form to that presented by Mirtich in <ref> [8] </ref> where this relation was written as u (fl) = M p (fl). In this equation it can be easily seen that u = v is the relative contact space velocity and M = fl 1 c 0 is the inverse operational space mass matrix for the contact point. <p> Equation 31 can be differentiated with respect to the collision parame ter fl = p c 0 and integrated over this parameter (taking into account the effects of friction) to obtain the change in relative velocity caused by this collision. The details of this approach are discussed in <ref> [8] </ref>. Once the required impulse forces have been found they can be applied to the system using equation 21. While Mirtich [8] treats multi-contact collision as a series of single point collisions (propagation model) it is easy to see that by stacking the contact space Ja-cobians as in equation 9 the <p> The details of this approach are discussed in <ref> [8] </ref>. Once the required impulse forces have been found they can be applied to the system using equation 21. While Mirtich [8] treats multi-contact collision as a series of single point collisions (propagation model) it is easy to see that by stacking the contact space Ja-cobians as in equation 9 the impact equations can be expanded to handle multiple simultaneous collisions.
Reference: [9] <author> B. Mirtich, </author> <title> "Hybrid Simulation: Combining Constraints and Impulses," </title> <booktitle> in Proceedings of First Workshop on Simulation and Interaction in Virtual Environments, </booktitle> <month> July </month> <year> 1995. </year>
Reference-contexts: In addition Impulse takes into account the effect of friction during impact which is not considered in [1]. Both of these systems were originally developed for simulating the motion of simple rigid bodies. While Impulse has been extended to support generalized articulated bodies <ref> [9] </ref> the constraint equations are still fundamentally based on the equations of motion for simple (un-articulated) rigid body systems. In the resulting equations most the underlying meaning of the constraints is no longer discernible.
Reference: [10] <author> P. Gill, S. Hammarling, W. Murray, M. Saunders and M. Wright, </author> <title> "User's guide to LLSOL," </title> <type> Stanford University Technical Report SOL 86-1, </type> <month> (January </month> <year> 1996). </year> <title> [11] , H. Goldstein, "Classical Mechanics," </title> <publisher> Addison-Wesley Publishing Company Inc., </publisher> <year> 1980. </year>
Reference: [12] <author> D. Kahaner, et. al., </author> <title> "Numerical Methods and Software," </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1989. </year>
Reference: [13] <author> T. Kane, </author> <title> Dynamics: Theory and Applications, </title> <publisher> McGraw-Hill, </publisher> <year> 1985. </year>
Reference-contexts: There currently exist many methods for computing these equations <ref> [13] </ref> [11] [6] [5]. To dynamically simulate an object using its equations of motion, Eq. 1 is solved for q. q = A 1 (q)[ b (q; _q) g (q)] (2) Methods exist for computing A 1 directly without computing A and then inverting [6].
Reference: [14] <author> Khatib, O., </author> <title> "A Unified Approach to Motion and Force Control of Robot Manipulators: The Operational Space Formulation," </title> <journal> IEEE J. on Robotics and Automation, </journal> <volume> Vol. 3, No. 1, </volume> <year> 1987. </year>
Reference-contexts: The rest of the paper is organized as follows. In Section 2 we introduce some notation and describe the motion of unconstrained generalized articulated systems. In Section 3 we introduce the contact space dynamic equations. This space is very similar to the operational space formulation common in robotic control <ref> [14] </ref>. In Section 4 we describe how the collision penetration constraints introduced by Baraff [1] can be defined for generalized articulated systems. We also show the strong connection these constraint equations share with the formulation for control of redundant systems. <p> With this definition it is now possible to express the operational (contact) inertia matrix for this space fl 1 = J c A 1 J c This matrix is very similar to the operational space inertia matrix used in robotic control <ref> [14] </ref>. The matrix fl represents the effective mass seen at the contact points.
Reference: [15] <author> O. Khatib, </author> <title> "Object manipulation in a multi-effector robot system." </title> <editor> In Bolles, R., and Roth B. (eds.): </editor> <booktitle> Robotics Research 4. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <pages> pp. 137-144. </pages>
Reference: [16] <author> O. Khatib, </author> <title> "Reduced effective inertia in macro/mini-manipulator systems." </title> <editor> In Miura H., and Arimoto, S. (eds.): </editor> <booktitle> Robotics Research 5. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press, </publisher> <pages> pp. 279-284. </pages>
Reference-contexts: This is the unique generalized inverse of J that is consistent with the natural dynamics of the system <ref> [16] </ref>. Separating the * term we obtain _q + = J *J _q fi fl The matrix fi fl is the basis of the null space of the contact space. Velocity vectors mapped through this space do not effect the contact space velocities. <p> Expression 27 is very similar to the expression for the cartesian space control of redundant mechanisms <ref> [16] </ref>. Such a connection with control is natural since the constraint equations are in effect commanding an op erational space velocity in the contact space while al lowing motions in the redundant degrees of freedom to continue unmodified.
Reference: [17] <author> P.U. Lee, D.C. Ruspini and O. Khatib, </author> <title> "Dynamic Simulation of Interactive Robotic Environment," </title> <booktitle> International Conference on Robotics and Automation, </booktitle> <address> San Diego, </address> <month> CA,(May </month> <year> 1994), </year> <pages> pp. 1147-1152. </pages>
Reference-contexts: Using this simulator <ref> [17] </ref>, a wide-range of robotic environments can be represented and simulated. Figure 1 shows as example of a simulated interactive environment, an operational space controller is used to control a robot to topple a set of dominos. In Figure 4 a simple construction environment is depicted.
Reference: [18] <author> R. S. Palmer, </author> <title> "Computational Complexity of Motion and Stability of Polygons, </title> <type> PhD Diss., </type> <institution> Cornell University, </institution> <month> Jan. </month> <year> 1987. </year>
Reference-contexts: In this situation it is sufficient to consider contact only at the extremal-points of the contact region created by the intersection of the contact surfaces <ref> [18] </ref>. Given this polygonal contact region assumption, only a finite number of contact points need to be considered. Let m be the number of contact points; for 1 i m we shall define c a i as the i th contact point attached to body A.
Reference: [19] <author> M. Moore and J. Wilhelms, </author> <title> "Collision detection and response for computer animation," </title> <booktitle> Computer Graphics 22, </booktitle> <year> (1988), </year> <pages> 289-298. </pages>
Reference: [20] <author> M. Orlowski, </author> <title> "The computation of the distance between polyhedra in 3-space," </title> <booktitle> SIAM Conf. on Geometric Modeling and Robotics, Albany, </booktitle> <address> NY, </address> <month> July </month> <year> 1985. </year>
Reference: [21] <author> J. Russakow, and O. Khatib, </author> <title> "A new control structure for free-flying space robots," </title> <booktitle> International Symposium on Artificial Intelligence, Robotics and Automation in Space, Toulouse, France, </booktitle> <pages> pp. 395-403. 8 </pages>
References-found: 20

