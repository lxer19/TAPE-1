URL: http://www.cs.unc.edu/~walk/papers/luebke/postscript/sig97_paper.ps.gz
Refering-URL: http://www.cs.unc.edu/~walk/papers/
Root-URL: http://www.cs.unc.edu
Title: View-Dependent Simplification Of Arbitrary Polygonal Environments  
Author: David Luebke, Carl Erikson 
Address: Chapel Hill  
Affiliation: Department of Computer Science University of North Carolina at  
Abstract: 1. ABSTRACT 
Abstract-found: 1
Intro-found: 1
Reference: [Aliaga 97] <author> Aliaga, Daniel. </author> <title> SGI Performance Tips (Talk). </title> <note> For more information see: http://www.cs.unc.edu/~aliaga/IR-perf.html </note> . 
Reference-contexts: Experiments on an SGI Onyx with InfiniteReality graphics, for example, indicate that Gouraud-shaded depth-buffered unlit triangles render two to three times faster in a display list than in a tightly optimized immediate mode display loop <ref> [ Aliaga 97] </ref>. Relatively small models will prove more efficient to render using existing static multiresolution techniques, since the levels of detail for each object can be precompiled into a display list.
Reference: [Cho 96] <author> Cho, Y., U. Neumann, J. Woo. </author> <title> Improved Specular Highlights with Adaptive Shading, </title> <booktitle> Computer Graphics International 96 , June, </booktitle> <year> 1996. </year>
Reference-contexts: More s ophisticated bounding volumes such as ellipsoids or oriented bounding boxes would complicate the nodeSize () operation, but could provide a much better fit. Nodes might also be unfolded to devote more detail to regions containing specular highlights in the manner of <ref> [ Cho 96] </ref> and [ Xia 96], or to perceptually important regions using the gazedirected heuristics described in [Oshima 96]. 10. ACKNOWLEDGMENTS Special thanks to Fred Brooks, Greg Turk, and Dinesh Manocha for their invaluable guidance and support throughout this project.
Reference: [Clark 76] <author> Clark, James H. </author> <title> Hierarchical Geometric Models for Visible Surface Algorithms, </title> <journal> Communications of the ACM , Vol 19, </journal> <volume> No 10, </volume> <pages> pp 547-554. </pages>
Reference-contexts: As early as 1976, James Clark described the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a constant frame rate <ref> [Clark 76, Cosman 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution representations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Cohen 96] <author> Cohen, J., A. Varshney, D. Manocha, G. Turk, H. Weber, P. Agarwal, F. Brooks, W. Wright. </author> <title> Simplification Envelopes, </title> <booktitle> Computer Graphics , Vol 30 (SIGGRAPH 96). </booktitle>
Reference-contexts: First, the algorithm should be very general, making as few assumptions as possible about the input model. The algorithm must therefore deal robustly with degenerate and 1 Notable exceptions include work by Cohen et al, and by Shirley and Maciel <ref> [Cohen 96, Maciel 95] </ref>. non-manifold models. Second, the algorithm should be completely automatic, able to simplify even a polygonsoup model without human intervention. This implies that the algorithm must simplify the entire scene adaptively rather than relying on simplifying o bjects within the scene. <p> PREVIOUS WORK 6.1 Constructing the Vertex Tree Many excellent polygonal simplification algorithms have been described in the recent literature <ref> [ Cohen 96, Hoppe 96, Eck 95] </ref>. HDS is not a competing algorithm, but a framework into which many existing algorithms can be incorporated. Any algorithm which can be expressed in terms of vertex collapse operations can be used to create the vertex tree. <p> By generating a simpler triangulation of the surface without intersecting the simplification envelopes, the authors guarantee a simplification which preserves global topology and varies from the original surface by no more than e <ref> [Cohen 96] </ref>. Simplification envelopes could be used to construct the vertex tree in HDS by applying successively larger values of e , at each stage only clustering those vertices which do not cause the mesh to intersect the envelopes.
Reference: [Cosman 81] <author> Cosman, M., and R. Schumacker. </author> <title> System Strategies to Optimize CIG Image Content. </title> <booktitle> Proceedings Image II Conference (Scotsdale, </booktitle> <address> Arizona), </address> <year> 1981. </year>
Reference-contexts: As early as 1976, James Clark described the benefits of representing objects within a scene at several resolutions, and flight simulators have long used hand-crafted multi-resolution models of airplanes to guarantee a constant frame rate <ref> [Clark 76, Cosman 81] </ref>. Recent years have seen a flurry of research into generating such multi-resolution representations of objects automatically by simplifying the polygonal geometry of the object.
Reference: [Eck 95] <author> Eck, M., T. DeRose, T. Duchamp, H. Hoppe, M. Lounsbery, W. Stuetzle. </author> <title> Multiresolution Analysis of Arbitrary Meshes, </title> <booktitle> Computer Graphics , Vol 29 (SIGGRAPH 95). </booktitle>
Reference-contexts: PREVIOUS WORK 6.1 Constructing the Vertex Tree Many excellent polygonal simplification algorithms have been described in the recent literature <ref> [ Cohen 96, Hoppe 96, Eck 95] </ref>. HDS is not a competing algorithm, but a framework into which many existing algorithms can be incorporated. Any algorithm which can be expressed in terms of vertex collapse operations can be used to create the vertex tree.
Reference: [Funkhouser 93] <author> Funkhouser, Thomas, and Carlo Sequin. </author> <title> Adaptive Display Algorithm for Interactive Frame Rates During Visualization of Complex Virtual Environments. </title> <booktitle> Computer Graphics , Vol 27 (SIGGRAPH 93). </booktitle>
Reference-contexts: A traditional level-of-detail system might be divided into SELECT and RENDER stages: the SELECT stage decides which resolution of which objects to render and compiles them into a display list, which the RENDER process then renders. Mea nwhile, the SELECT process prepares the display list for the next frame <ref> [ Funkhouser 93, Rohlf 94] </ref>. If S is the time taken to select levels of detail and R is the time taken to render a frame, parallelizing the two processes as a pipeline reduces the total time per frame from R+S to max (R,S).
Reference: [Hoppe 96] <author> Hoppe, Hugues. </author> <title> Progressive Meshes, </title> <booktitle> Computer Graphics , Vol 30 (SIGGRAPH 96). </booktitle>
Reference-contexts: PREVIOUS WORK 6.1 Constructing the Vertex Tree Many excellent polygonal simplification algorithms have been described in the recent literature <ref> [ Cohen 96, Hoppe 96, Eck 95] </ref>. HDS is not a competing algorithm, but a framework into which many existing algorithms can be incorporated. Any algorithm which can be expressed in terms of vertex collapse operations can be used to create the vertex tree. <p> Unfortunately, it is not clear how to extend simplification envelopes to allow merging between different objects, or to allow drastic topology-discarding collapse operations at high levels of the tree. Hoppe describes an optimization approach which creates a series of edge collapses for the Progressive Meshes representation <ref> [Hoppe 96] </ref>. Each edge collapse corresponds to a node in HDS with two children and one or two subtris. The stream of edge collapse records in a progressive mesh contains an implicit hiera rchy that maps directly to the HDS vertex tree.
Reference: [Kaufman 95] <author> Taosong He, L. Hong, A. Kaufman, A. Varshney, and S. Wang. </author> <title> Voxel-Based Object Simplification. </title> <booktitle> Proceedings Visualization 95 , IEEE Computer Society Press (Atlanta, </booktitle> <address> GA), </address> <year> 1995, </year> <pages> pp. 296-303. </pages>
Reference: [Kumar 96] <author> Kumar, Subodh, D. Manocha, W. Garrett, M. Lin. </author> <title> Hierarchical Backface Computation. </title> <booktitle> Proc. Of 7 th Eurographics Workshop on Rendering , 1996. </booktitle>
Reference-contexts: testThreshold) if (N-&gt;label == active) foreach child C of N adjustTree (C); else // N-&gt;label == Boundary expandNode (N); else // size &lt; testThreshold if (N-&gt;label == active) collapseNode (N); Note that hierarchical backface culling falls out of the silhouette preservation test if polygons of backfacing nodes are not rendered <ref> [Kumar 96] </ref>. 4.3 Triangle-Budget Simplification The screenspace error threshold and silhouette test allow the user to set a bound on the quality of the simplified scene, but often a bound on the complexity (and rendering time) is desired instead.
Reference: [Maciel 95] <author> Maciel, Paulo, and Shirley, Peter. </author> <title> Visual Navigation of Large Environments Using Textured Clusters, </title> <booktitle> Proceedings 1995 SIGGRAPH Symposium on Interactive 3D Graphics (Monterey, </booktitle> <address> CA), </address> <year> 1995, </year> <pages> pp. 95-102. </pages>
Reference-contexts: First, the algorithm should be very general, making as few assumptions as possible about the input model. The algorithm must therefore deal robustly with degenerate and 1 Notable exceptions include work by Cohen et al, and by Shirley and Maciel <ref> [Cohen 96, Maciel 95] </ref>. non-manifold models. Second, the algorithm should be completely automatic, able to simplify even a polygonsoup model without human intervention. This implies that the algorithm must simplify the entire scene adaptively rather than relying on simplifying o bjects within the scene.
Reference: [Luebke 96] <author> Luebke, David. </author> <title> Hierarchical Structures for Dynamic Polygonal Simplification. </title> <institution> University of North Carolina Department of Computer Science Tech Report #TR96-006, </institution> <month> January, </month> <year> 1996. </year>
Reference-contexts: An adaptive version of the spatial binning approach introduced by [Rossignac 92], the spatial subdivision method was first introduced for view-dependent simplification by <ref> [ Luebke 96] </ref>. Vertices are ranked by importance using local criteria such as edge length and curvature. Beginning at the root of the octree, the most i mportant vertex within each node is chosen as that nodes represe ntative vertex.
Reference: [Oshima 96] <author> Ohshima, Toshikazu, H. Yamamoto, H. Tamura. </author> <title> Gaze-Directed Adaptive Rendering for Interacting with Virtual Space. </title> <booktitle> Proc. of IEEE 1996 Virtual Reality Annual Intnl. Symposium . (1996), </booktitle> <pages> pp 103-110. </pages>
Reference-contexts: Nodes might also be unfolded to devote more detail to regions containing specular highlights in the manner of [ Cho 96] and [ Xia 96], or to perceptually important regions using the gazedirected heuristics described in <ref> [Oshima 96] </ref>. 10. ACKNOWLEDGMENTS Special thanks to Fred Brooks, Greg Turk, and Dinesh Manocha for their invaluable guidance and support throughout this project. Funding for this work was provided by DARPA Contract DABT63-93-C-0048, and Lockheed Missile and Space Co., Inc.
Reference: [Rohlf 94] <author> Rohlf, John and James Helman. IRIS Performer: </author> <title> A High Performance Multiprocessing Toolkit for Real-Time 3D Graphics, </title> <booktitle> Computer Graphics , Vol 28 (SIGGRAPH 94). </booktitle>
Reference-contexts: A traditional level-of-detail system might be divided into SELECT and RENDER stages: the SELECT stage decides which resolution of which objects to render and compiles them into a display list, which the RENDER process then renders. Mea nwhile, the SELECT process prepares the display list for the next frame <ref> [ Funkhouser 93, Rohlf 94] </ref>. If S is the time taken to select levels of detail and R is the time taken to render a frame, parallelizing the two processes as a pipeline reduces the total time per frame from R+S to max (R,S).
Reference: [Rossignac 92] <author> Rossignac, Jarek, and Paul Borrel. </author> <title> Multi-Resolution 3D Approximations for Rendering Complex Scenes, pp. 455-465 in Geometric Modeling in Computer Graphics, </title> <publisher> Springer-Verlag, </publisher> <editor> Eds. B. Falcidieno and T.L. Kunii, </editor> <address> Genova, Italy, 6/28/93-7/2/93. </address> <note> Also published as IBM Research Report RC17697 (77951) 2/19/92. </note>
Reference-contexts: An adaptive version of the spatial binning approach introduced by <ref> [Rossignac 92] </ref>, the spatial subdivision method was first introduced for view-dependent simplification by [ Luebke 96]. Vertices are ranked by importance using local criteria such as edge length and curvature.
Reference: [Schroeder 92] <author> Schroeder, William, Jonathan Zarge and William Lorenson, </author> <title> Decimation of Triangle Meshes, </title> <booktitle> Computer Graphics , Vol 26 (SIGGRAPH 92) </booktitle>
Reference: [Shirman 93] <author> Shirman, L., and Abi-Ezzi, S. </author> <title> The Cone of Normals Technique for Fast Processing of Curved Patches, </title> <journal> Computer Graphics Forum ( Proc. </journal> <volume> Eurographics 93 ) Vol 12, No 3, </volume> <year> (1993), </year> <pages> pp 261-272. </pages>
Reference-contexts: A conservative but efficient silhouette test can be plugged into the HDS framework by adding two fields to the Node stru cture: coneNormal is a vector and coneAngle is a floating-point scalar. These fields together specify a cone of normals <ref> [Shirman 93] </ref> for the node which conservatively bounds all the normals of all the triangles in the subtree rooted at the node [Figure 5]. At run time a viewing cone is created that originates from the viewer position and tightly encloses the bounding sphere of the node [Figure 6].
Reference: [Teller 91] <author> Teller, Seth, and Carlo Sequin. </author> <title> Visibility Preprocessing for Interactive Walkthroughs, </title> <booktitle> Computer Graphics , Vol 25 (SIGGRAPH 91). </booktitle>
Reference-contexts: Gouraud shading and texture mapping fall into this category. Using information about the model to cull away large portions which are occluded from the current viewpoint. The visibility processing approach of Teller and Sequin is an excellent example <ref> [Teller 91] </ref>. Polygonal simplification methods simplify the polygonal geometry of small or distant objects to reduce the rendering cost without a significant loss in the visual content of the scene.
Reference: [Turk 92] <author> Turk, Greg. </author> <title> Retiling Polygonal Surfaces, </title> <journal> Computer Graphics, </journal> <volume> Vol 26 (SIGGRAPH 92). </volume>
Reference: [Varshney 94] <author> Varshney, Amitabh. </author> <title> Hierarchical Geometry Approximations, </title> <type> Ph.D. Thesis, </type> <institution> University of North Carolina Department of Computer Science Tech Report TR-050 </institution>
Reference: [Xia 96] <author> Xia, Julie and Amitabh Varshney. </author> <title> Dynamic View-Dependent Simplification for Polygonal Models, Visualization 96 </title> . 
Reference-contexts: Detecting nodes along object silhouettes and allocating more detail to those regions can therefore disproportionately increase the perceived quality of a simplification <ref> [Xia 96] </ref>. A conservative but efficient silhouette test can be plugged into the HDS framework by adding two fields to the Node stru cture: coneNormal is a vector and coneAngle is a floating-point scalar. <p> When the model could be simplified no further with these restrictions, a tight octree was applied to the remaining vertex clusters to produce a single HDS vertex tree. 6.2 Other Related Work Xia and Varshney use merge trees to perform view-dependent simplifications of triangular models in real-time <ref> [ Xia 96] </ref>. A merge tree is similar to a progressive mesh, created offline and consisting of a hierarchy of edge collapses. Selective refinement is applied based on viewing direction, lighting, and visibility. <p> More s ophisticated bounding volumes such as ellipsoids or oriented bounding boxes would complicate the nodeSize () operation, but could provide a much better fit. Nodes might also be unfolded to devote more detail to regions containing specular highlights in the manner of [ Cho 96] and <ref> [ Xia 96] </ref>, or to perceptually important regions using the gazedirected heuristics described in [Oshima 96]. 10. ACKNOWLEDGMENTS Special thanks to Fred Brooks, Greg Turk, and Dinesh Manocha for their invaluable guidance and support throughout this project.
References-found: 21

