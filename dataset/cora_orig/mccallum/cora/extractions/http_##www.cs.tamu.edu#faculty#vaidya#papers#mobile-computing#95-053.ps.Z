URL: http://www.cs.tamu.edu/faculty/vaidya/papers/mobile-computing/95-053.ps.Z
Refering-URL: http://www.cs.tamu.edu/faculty/vaidya/mobile.html
Root-URL: http://www.cs.tamu.edu
Email: E-mail: fpradhan,pkrishna,vaidyag@cs.tamu.edu  
Phone: Phone: (409) 862-2438 Fax: (409) 862-2758  
Title: Recoverable Mobile Environments: Design and Trade-off Analysis  
Author: Dhiraj K. Pradhan P. Krishna Nitin H. Vaidya 
Note: This research is supported in part by National Science Foundation grant MIP-9502563.  
Date: 95-053  
Address: College Station, TX 77843-3112  
Affiliation: Department of Computer Science Texas A&M University  
Pubnum: Technical Report  
Abstract: The mobile wireless environment poses challenging fault-tolerant data management problems due to mobility of users, and limited bandwidth on the wireless link. Traditional fault-tolerance schemes, therefore, cannot be directly applied to these systems. Mobile systems are often subject to environmental conditions which can cause loss of communications or data. Because of the consumer orientation of most mobile systems, run-time faults must be corrected with minimal (if any) intervention from the user. The fault-tolerance capability must therefore be self-contained. Schemes for recovery upon a failure of a mobile host are presented here. This report portrays the limitations of the mobile wireless environment, and its impact on recovery protocols. To this effect, extensions to existing traditional recovery schemes are presented which suit the mobile environment. The performance of these schemes has been analyzed to determine those environments where a particular recovery scheme is best suited. The performance of the recovery schemes mainly depends on (i) the cost of wireless transmission, (ii) the communication-mobility ratio of the user, and (iii) the failure rate of the mobile host. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Alagar and S. Venkatesan, </author> <title> "Tolerating Mobile Support Station Failures," </title> <institution> Computer Science Technical Report, Univ. of Texas at Dallas, </institution> <month> November, </month> <year> 1993. </year>
Reference-contexts: But, there is not much work on recovery protocols in a mobile environment. Alagar et. al. <ref> [1] </ref>, present schemes to tolerate base station failures. The main idea was to replicate the information stored at a base station at several "secondary" base stations. Strategies for selecting the secondary base stations were presented.
Reference: [2] <author> A. Acharya and B. R. Badrinath, </author> <title> "Checkpointing Distributed Applications on Mobile Computers," </title> <booktitle> Proc. of the 3rd Intl. Conf. on Par. and Dist. Info. Sys., </booktitle> <pages> pp. 73-80, </pages> <month> Sep. </month> <year> 1994. </year>
Reference-contexts: The protocol tolerates base station failures and host disconnections. Logical timestamps are used to distinguish between an old location information and a new location information. The protocol also tolerates the corruption of these logical timestamps. Acharya et. al. <ref> [2] </ref>, identify the problems with checkpointing mobile distributed applications. They present an algorithm for recording global checkpoints for distributed applications running on mobile hosts.
Reference: [3] <author> A. Borg et. al., </author> <title> "A Message System Supporting Fault Tolerance," </title> <booktitle> 9th ACM Symposium on Operating System Principles, </booktitle> <pages> pp. 90-99, </pages> <month> Oct., </month> <year> 1983. </year>
Reference-contexts: The cost of frequently sending state on the wireless link is a limiting factor for this scheme. * Logging Approach (denoted as L) : This approach is similar to "pessimistic" logging <ref> [3] </ref>. In this scheme a mobile host checkpoints its state periodically. To facilitate recovery, the write events that take place in the interval between checkpoints are also logged. As defined earlier, the messages or inputs that modify the state of the mobile host are called write events.
Reference: [4] <author> G.H.Forman, </author> <title> et.al., </title> <booktitle> "The Challenges of Mobile Computing," IEEE Computer, </booktitle> <pages> 38-47, </pages> <year> Apr.1994. </year>
Reference-contexts: 1 Introduction A distributed system with mobile hosts is composed of a static backbone network and a wireless network <ref> [4] </ref>. A host that can move while retaining its network connection is a mobile host. The static network is comprised of the fixed hosts and communication links between them. <p> This process, known as handoff, is transparent to the mobile user, thus maintaining end-to-end connectivity in the dynamically reconfigured network topology. A mobile host may become unavailable due to (i) failure of the mobile host, (ii) disconnection of the mobile host, and (iii) wireless link failure. Disconnections <ref> [4] </ref> and the weak wireless links [4] primarily delay the system response, whereas a host failure affects the system state. Strategies are developed in this report which tolerate failure of the mobile host. When a mobile host fails, it results in a loss of its volatile state. <p> A mobile host may become unavailable due to (i) failure of the mobile host, (ii) disconnection of the mobile host, and (iii) wireless link failure. Disconnections <ref> [4] </ref> and the weak wireless links [4] primarily delay the system response, whereas a host failure affects the system state. Strategies are developed in this report which tolerate failure of the mobile host. When a mobile host fails, it results in a loss of its volatile state. <p> For sake of better understanding we also give a brief overview of the strategies presented in [7]. Section 4 presents the performance analysis of the recovery strategies, and conclusions are presented in Section 5. 2 Related Work In the recent years, there has been a lot of work <ref> [4] </ref> dealing with mobility management, database system issues, network protocols, disconnected operation and distributed algorithms for mobile hosts. But, there is not much work on recovery protocols in a mobile environment. Alagar et. al. [1], present schemes to tolerate base station failures. <p> During the handoff period , there are no packets sent or received by the mobile host. Thus, if the handoff times are very high, the communication protocols used for these connection oriented services might timeout during handoff <ref> [4] </ref>. Some applications might require a very quick recovery, and some other application might require a very low total cost to be incurred by the recovery schemes.
Reference: [5] <author> J. Long, W. K. Fuchs and J. A. Abraham, </author> <title> "Implementing Forward Recovery using Checkpoints in Distributed Systems," </title> <booktitle> Proc. of Dependable Computing for Critical Applications, </booktitle> <month> Feb., </month> <year> 1991. </year>
Reference-contexts: Secondly, and importantly, the traditional schemes do not consider the disparity in the bandwidths of the static network and the wireless network. The performance of the traditional recovery schemes primarily depended on the failure rate of the host <ref> [5, 11, 12] </ref>. However, in a mobile environment, due to mobility of the hosts and the limited bandwidth on the wireless links, parameters apart from the failure rate of the mobile host also play a key role in determining the effectiveness of a recovery scheme.
Reference: [6] <author> Pankaj Jalote, </author> <title> "Fault Tolerance in Distributed Systems," </title> <publisher> Prentice Hall, </publisher> <year> 1994. </year>
Reference-contexts: One way to detect the failure is to require that an active mobile host send an "I am alive" message at regular intervals of time to the base station. Traditional fault-tolerance schemes like checkpointing and message logging <ref> [6] </ref> would have served the purpose, without any modification, if the mobile hosts restricted their movements within one cell. But the mobile computing environment does not require a user to maintain a fixed position in the network and it allows almost unrestricted user mobility. <p> Likewise, all the messages sent by a mobile host, will be first sent to its base station, which will forward it to the destination host (static or mobile host). Two strategies to save the process state will be discussed here <ref> [6] </ref>: (i) No Logging and (ii) Logging. During the discussion of the state saving strategies, it is assumed that the host does not move.
Reference: [7] <author> P. Krishna, Nitin H. Vaidya and D. K. Pradhan, </author> <title> "Recovery in Distributed Mobile Environments," </title> <booktitle> IEEE Wkshp on Advances in Parallel and Distributed Sys., </booktitle> <pages> pp. 83-88, </pages> <month> Oct. </month> <year> 1993. </year>
Reference-contexts: We identify the tradeoff parameters for a recovery scheme in a mobile environment. We analyze the performance of the 1 recovery schemes proposed in this report and <ref> [7] </ref>. We also determine those mobile environments where a particular recovery scheme is best suited. Other variations of the recovery schemes presented here are also plausible. Our main aim is to present the limitations of the new mobile computing environment, and its effects on recovery protocols. <p> For a given environment, which recovery scheme is preferable ? This report is organized as follows. Section 2 presents a review of related work. Section 3 presents the recovery strategies. For sake of better understanding we also give a brief overview of the strategies presented in <ref> [7] </ref>. Section 4 presents the performance analysis of the recovery strategies, and conclusions are presented in Section 5. 2 Related Work In the recent years, there has been a lot of work [4] dealing with mobility management, database system issues, network protocols, disconnected operation and distributed algorithms for mobile hosts. <p> They present an algorithm for recording global checkpoints for distributed applications running on mobile hosts. In this report, however, we consider protocols to recover a mobile host independent of other hosts in the system (even if the computation is distributed). 2 In <ref> [7] </ref>, we present preliminary discussion of recovery schemes for mobile systems. This report builds on the work in [7] by presenting additional schemes, and analyzing all schemes to determine their performance. 3 Base Station-Driven Recovery Strategies This section presents two strategies for saving the state and three strategies for handoff to <p> In this report, however, we consider protocols to recover a mobile host independent of other hosts in the system (even if the computation is distributed). 2 In <ref> [7] </ref>, we present preliminary discussion of recovery schemes for mobile systems. This report builds on the work in [7] by presenting additional schemes, and analyzing all schemes to determine their performance. 3 Base Station-Driven Recovery Strategies This section presents two strategies for saving the state and three strategies for handoff to achieve fault-tolerance. The strategies for saving the state are similar to the traditional fault-tolerance strategies.
Reference: [8] <author> S. Rangarajan, K. Ratnam, </author> <title> and A.T. Dahbura, "A Fault-Tolerant Protocol for Location Directory Maintenance in Mobile Networks," </title> <booktitle> FTCS, </booktitle> <pages> pp. 164-173, </pages> <month> June, </month> <year> 1995. </year>
Reference-contexts: Strategies for selecting the secondary base stations were presented. These schemes can be easily integrated with the recovery schemes presented in this report to provide a system that tolerates both base station and mobile host failures. Rangarajan et. al. <ref> [8] </ref>, present a fault-tolerant protocol for location directory maintenance in mobile networks. The protocol tolerates base station failures and host disconnections. Logical timestamps are used to distinguish between an old location information and a new location information. The protocol also tolerates the corruption of these logical timestamps.
Reference: [9] <author> R. D. Schlichting, F. B. Schneider, </author> <title> "Fail-stop processors : An approach to designing fault-tolerant distributed computing systems," </title> <journal> ACM TOCS, </journal> <pages> pp. 222-238, </pages> <month> Aug. </month> <year> 1983. </year>
Reference-contexts: Strategies are developed in this report which tolerate failure of the mobile host. When a mobile host fails, it results in a loss of its volatile state. The mobile host is assumed to be fail-stop <ref> [9] </ref>, i.e., the base station is able to detect the failure of the mobile host. One way to detect the failure is to require that an active mobile host send an "I am alive" message at regular intervals of time to the base station.
Reference: [10] <author> K.S. Trivedi, </author> <title> "Probability and Statistics with Reliability Queueing and Computer Science Applications," </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: It will be explained. 4.2 Modeling and Metrics For convenience we name the interval between two handoffs as handoff interval. A handoff interval can be represented using a 3-state discrete Markov chain <ref> [10, 11] </ref> as presented in Figure 3. State 0 is the initial state when the handoff interval starts. During the handoff interval, the host receives messages and/or user inputs (write events). Depending on the state saving scheme the host either takes a checkpoint or logs the write events.
Reference: [11] <author> N. H. Vaidya, </author> <title> "On Checkpoint Latency," Pacific Rim Fault Tolerant Sys., </title> <month> December, </month> <year> 1995. </year>
Reference-contexts: Secondly, and importantly, the traditional schemes do not consider the disparity in the bandwidths of the static network and the wireless network. The performance of the traditional recovery schemes primarily depended on the failure rate of the host <ref> [5, 11, 12] </ref>. However, in a mobile environment, due to mobility of the hosts and the limited bandwidth on the wireless links, parameters apart from the failure rate of the mobile host also play a key role in determining the effectiveness of a recovery scheme. <p> It will be explained. 4.2 Modeling and Metrics For convenience we name the interval between two handoffs as handoff interval. A handoff interval can be represented using a 3-state discrete Markov chain <ref> [10, 11] </ref> as presented in Figure 3. State 0 is the initial state when the handoff interval starts. During the handoff interval, the host receives messages and/or user inputs (write events). Depending on the state saving scheme the host either takes a checkpoint or logs the write events.
Reference: [12] <author> J. W. Young, </author> <title> "A First Order Approximation to the Optimum Checkpoint Interval," </title> <journal> Communications of the ACM, </journal> <volume> Vol. 17, </volume> <pages> pp. 530-531, </pages> <month> Sep., </month> <year> 1974. </year> <month> 21 </month>
Reference-contexts: Secondly, and importantly, the traditional schemes do not consider the disparity in the bandwidths of the static network and the wireless network. The performance of the traditional recovery schemes primarily depended on the failure rate of the host <ref> [5, 11, 12] </ref>. However, in a mobile environment, due to mobility of the hosts and the limited bandwidth on the wireless links, parameters apart from the failure rate of the mobile host also play a key role in determining the effectiveness of a recovery scheme. <p> To simplify the analysis, we have assumed that at most one failure occurs during a handoff interval. This assumption does not affect the results significantly when the average handoff interval is small compared to the mean time to failure. Our assumption is analogous to that made in <ref> [12] </ref> for evaluating rollback recovery. a case when the handoff interval is greater than a checkpoint interval. Thus, multiple checkpoint operations take place within a handoff interval. As seen in Figure 4 (a), the initial state is state 0. A transition to state 2 takes place after a failure.
References-found: 12

