URL: ftp://ftp.cs.virginia.edu/pub/techreports/CS-93-31.ps.Z
Refering-URL: ftp://ftp.cs.virginia.edu/pub/techreports/README.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Closing the Gap: Near-Optimal Steiner Trees in Polynomial Time  
Author: Tim Barrera, Jeff Griffith, Gabriel Robins, and Tongtong Zhang 
Abstract: Technical Report No. CS-93-31 June 1, 1993 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Barrera, J. Griffith, S. A. McKee, G. Robins, and T. Zhang, </author> <title> Toward a Steiner Engine: Enhanced Serial and Parallel Implementations of the Iterated 1-Steiner Algorithm, </title> <booktitle> in Proc. Great Lakes Symposium on VLSI, </booktitle> <address> Kalamazoo, MI, </address> <month> March </month> <year> 1993, </year> <pages> pp. 90-94. </pages>
Reference-contexts: I1S always performs strictly better than 3 2 times optimal [27], and achieves almost 11% average improvement over MST cost. Efficient serial and parallel implementa tions of I1S were given in <ref> [1] </ref>, enabling the benchmarking of the behavior of I1S on nets containing up to several hundred pins. In this paper we propose several performance-improving enhancements to the I1S method. <p> Our methods extend to arbitrarily weighted graphs, and are thus suitable as the basis of a practical multi-layer global router, where obstruction and congestion considerations affect routing [19]. In order to reduce the running time of our algorithms through a dynamic MST-maintenance scheme <ref> [1] </ref>, we prove the following results under the Manhattan metric: 1) in two dimensions the maximum MST degree of a newly added point can be made to be at most 4; and 2) in three dimensions the maximum MST degree of a newly added point can be made to be at <p> Thus, a batched variant of I1S is usually favored, which efficiently adds an entire set of "independent" Steiner points in a single iteration, thereby affording both practicality and reduced time complexity <ref> [1] </ref> [17]. <p> Our PIkS scheme can also be extended using a "non-interfering" criterion as in <ref> [1] </ref> [17], to yield a Perturbated Batched k-Steiner algorithm (PBkS), where a maximal number of Steiner points are added during each round. <p> This implies that linear time suffices to compute the MST savings of a 1-Steiner candidate <ref> [1] </ref>. <p> Table 5 gives statistics for three dimensions on the number of Steiner points induced by B1S, as well as on the number of rounds that occur in B1S before termination. As is the case in two dimensions <ref> [1] </ref>, the number of rounds for B1S in three dimensions is on average very small. 19 number of parallel planes. in three dimensions 6 Conclusion We proposed several enhancements to the Iterated (Batched) 1-Steiner heuristic [17], based on a perturbative approach. <p> The perturba-tive methods are highly parallelizable and generalize to arbitrary weighted graphs; thus, they are suitable to support a multi-layer global router, where obstruction and congestion considerations affect routing [19]. We reduced the running time of our algorithms through a dynamic MST-maintenance scheme <ref> [1] </ref>, and we proved that under the Manhattan metric: 1) in two dimensions the maximum MST degree of a newly added point can be made to be at most 4; and 2) in three dimensions the maximum MST degree of a newly added point can be made to be at most
Reference: [2] <author> D. Braun, J. Burns, S. Devadas, H. K. Ma, K. M. F. Romeo, and A. Sangiovanni-Vincentelli, Chameleon: </author> <title> A New Multi-Layer Channel Router, </title> <booktitle> in Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1986, </year> <pages> pp. 495-502. </pages>
Reference-contexts: We generalize I1S and its variants to three dimensions, as well as to the intermediate case where all the pins lie on k parallel planes. This formulation has several applications, including multi-layer routing <ref> [2] </ref> [9] [11], and building design [30]. Empirical testing suggests that this approach is very effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST costs. <p> This strategy would therefore significantly reduces the time spent during each round, without substantially affecting the performance. We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 4 Steiner Routing in Three Dimensions Three-dimensional packaging is beginning to emerge as a viable VLSI design technology <ref> [2] </ref> [9] [11]; unfortunately, most existing CAD tools and techniques implicitly address two dimensions only. In contrast, the PIkS method readily generalizes to arbitrary dimensions. <p> We then generalized I1S and its variants to three dimensions, as well as to the case where all the pins lie on L parallel planes, which arises in, e.g., three-dimensional VLSI [11] and multi-layer routing <ref> [2] </ref> [9]. The perturba-tive methods are highly parallelizable and generalize to arbitrary weighted graphs; thus, they are suitable to support a multi-layer global router, where obstruction and congestion considerations affect routing [19].
Reference: [3] <author> L. R. Foulds, </author> <title> Maximum Savings in the Steiner Problem in Phylogeny, </title> <journal> J. Theoretical Biology, </journal> <volume> 107 (1984), </volume> <pages> pp. 471-474. </pages>
Reference-contexts: 1 Introduction Optimal interconnections are a common theme in a number of areas, including VLSI layout [24], the design of buildings [30], and biology <ref> [3] </ref>, where we typically seek a low-cost topology to interconnect a set of sites.
Reference: [4] <author> G. N. Fredrickson, </author> <title> Data Structures for On-Line Updating of Minimum Spanning Trees, </title> <journal> SIAM J. Comput., </journal> <volume> 14 (1985), </volume> <pages> pp. 781-798. </pages>
Reference-contexts: A two-dimensional example of this method is given in Figure 10, while Figure 11 gives a formal description of this algorithm. Note that dynamic MST maintenance may also be achieved in sub-linear time <ref> [4] </ref>, but such methods appear impractical due to their complexity and large hidden constants. A similar method was used in [33] to obtain a sub-quadratic MST algorithm in higher dimensions, but no attempt was made to optimize the number of necessary regions.
Reference: [5] <author> M. Garey and D. S. Johnson, </author> <title> The Rectilinear Steiner Problem is NP-Complete, </title> <journal> SIAM J. Applied Math., </journal> <volume> 32 (1977), </volume> <pages> pp. 826-834. </pages>
Reference-contexts: However, a second major result establishes that despite this restriction on the solution space, the MRST problem remains NP-complete <ref> [5] </ref>, prompting a large number of heuristics, as surveyed in [16]. from the intersection of all the horizontal and vertical lines passing through all the points. In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal.
Reference: [6] <author> G. Georgakopoulos and C. H. Papadimitriou, </author> <title> The 1-Steiner Tree Problem, </title> <journal> J. Algorithms, </journal> <volume> 8 (1987), </volume> <pages> pp. 122-130. </pages>
Reference-contexts: H (P )jM ST (P [ S; fxg) &gt; 0g 6= ; Do Find x 2 T with maximum M ST (P [ S; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) computational geometry <ref> [6] </ref> [17] [25], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement.
Reference: [7] <author> E. N. Gilbert and H. O. Pollak, </author> <title> Steiner Minimal Trees, </title> <journal> SIAM J. Applied Math., </journal> <volume> 16 (1968), </volume> <pages> pp. 1-29. </pages>
Reference-contexts: The cost of the MST over P [ S will decrease with each added point, and the construction terminates when there is no x with M ST (P [ S; fxg) &gt; 0. Although a Steiner tree may contain at most n 2 Steiner points <ref> [7] </ref>, I1S may add more than n 2 Steiner points; therefore, at each step we eliminate any extraneous Steiner points having degree 2 or less in the MST.
Reference: [8] <author> L. J. Guibas and J. Stolfi, </author> <title> On Computing all North-East Nearest Neighbors in the L1 Metric, </title> <journal> Information Processing Letters, </journal> <volume> 17 (1983), </volume> <pages> pp. 219-223. </pages>
Reference-contexts: This follows from the fact that in a fixed dimension, each point can have at most O (1) neighbors in a rectilinear MST <ref> [8] </ref>.
Reference: [9] <author> A. Hanafusa, Y. Yamashita, and M. Yasuda, </author> <title> Three-Dimensional Routing for Multilayer Ceramic Printed Circuit Boards, </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 386-389. </pages>
Reference-contexts: We generalize I1S and its variants to three dimensions, as well as to the intermediate case where all the pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [2] <ref> [9] </ref> [11], and building design [30]. Empirical testing suggests that this approach is very effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST costs. <p> This strategy would therefore significantly reduces the time spent during each round, without substantially affecting the performance. We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 4 Steiner Routing in Three Dimensions Three-dimensional packaging is beginning to emerge as a viable VLSI design technology [2] <ref> [9] </ref> [11]; unfortunately, most existing CAD tools and techniques implicitly address two dimensions only. In contrast, the PIkS method readily generalizes to arbitrary dimensions. <p> We then generalized I1S and its variants to three dimensions, as well as to the case where all the pins lie on L parallel planes, which arises in, e.g., three-dimensional VLSI [11] and multi-layer routing [2] <ref> [9] </ref>. The perturba-tive methods are highly parallelizable and generalize to arbitrary weighted graphs; thus, they are suitable to support a multi-layer global router, where obstruction and congestion considerations affect routing [19].
Reference: [10] <author> M. Hanan, </author> <title> On Steiner's Problem With Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 14 (1966), </volume> <pages> pp. 255-265. </pages>
Reference-contexts: Figure 1 shows an MST and an MRST for a fixed pointset. Research on the MRST problem has been guided by several fundamental results. First, Hanan <ref> [10] </ref> has shown that there always exists an MRST with Steiner points chosen from the intersection of all the horizontal and vertical lines passing through all the points in P (see Figure 2), and this result indeed generalizes to all higher dimensions [31].
Reference: [11] <author> A. C. Harter, </author> <title> Three-Dimensional Integrated Circuit Layout, </title> <publisher> Cambridge University Press, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: We generalize I1S and its variants to three dimensions, as well as to the intermediate case where all the pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [2] [9] <ref> [11] </ref>, and building design [30]. Empirical testing suggests that this approach is very effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST costs. <p> We call this streamlined version of B1S the modified batched 1-Steiner (MB1S) algorithm. 4 Steiner Routing in Three Dimensions Three-dimensional packaging is beginning to emerge as a viable VLSI design technology [2] [9] <ref> [11] </ref>; unfortunately, most existing CAD tools and techniques implicitly address two dimensions only. In contrast, the PIkS method readily generalizes to arbitrary dimensions. <p> We then generalized I1S and its variants to three dimensions, as well as to the case where all the pins lie on L parallel planes, which arises in, e.g., three-dimensional VLSI <ref> [11] </ref> and multi-layer routing [2] [9]. The perturba-tive methods are highly parallelizable and generalize to arbitrary weighted graphs; thus, they are suitable to support a multi-layer global router, where obstruction and congestion considerations affect routing [19].
Reference: [12] <author> N. Hasan, G. Vijayan, and C. K. Wong, </author> <title> A Neighborhood Improvement Algorithm for Rectilinear Steiner Trees, </title> <booktitle> in Proc. IEEE Intl. Symp. on Circuits and Systems, </booktitle> <address> New Orleans, LA, </address> <year> 1990. </year>
Reference-contexts: This implies that any MST-based strategy which improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods <ref> [12] </ref> [13] [15] [20] [21], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [26] [32]. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18].
Reference: [13] <author> J.-M. Ho, G. Vijayan, and C. K. Wong, </author> <title> New Algorithms for the Rectilinear Steiner Tree Problem, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 9 (1990), </volume> <pages> pp. 185-193. </pages>
Reference-contexts: This implies that any MST-based strategy which improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [12] <ref> [13] </ref> [15] [20] [21], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [26] [32]. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18]. <p> example, in the Manhattan plane, it is known that to update an MST with a newly added point p, it suffices to search only for the closest point to p in each of the four regions defined by the two lines passing through p at 45 and -45 degrees, respectively <ref> [13] </ref> (Figure 8 (a)).
Reference: [14] <author> F. K. Hwang, </author> <title> On Steiner Minimal Trees with Rectilinear Distance, </title> <journal> SIAM J. Applied Math., </journal> <volume> 30 (1976), </volume> <pages> pp. </pages> <month> 104-114. </month> <title> [15] , An O(n log n) Algorithm for Rectilinear Minimal Spanning Trees, </title> <journal> J. ACM, </journal> <volume> 26 (1979), </volume> <pages> pp. 177-182. </pages>
Reference-contexts: In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal. Thus, a third important result establishes that the rectilinear MST is a fairly good approximation to the MRST, with a worst-case performance ratio of cost (MST) cost (MRST) 3 2 <ref> [14] </ref>.
Reference: [16] <author> F. K. Hwang, D. S. Richards, and P. Winter, </author> <title> The Steiner Tree Problem, </title> <publisher> North-Holland, </publisher> <year> 1992. </year>
Reference-contexts: However, a second major result establishes that despite this restriction on the solution space, the MRST problem remains NP-complete [5], prompting a large number of heuristics, as surveyed in <ref> [16] </ref>. from the intersection of all the horizontal and vertical lines passing through all the points. In solving intractable problems, we often seek provably good heuristics having bounded worst-case error from optimal. <p> The instances were generated randomly by choosing the coordinates of each point from a uniform distribution in a 10000 fi 10000 grid; such instances are statistically similar to the pin locations of actual VLSI nets and are the standard testbed for Steiner tree heuristics <ref> [16] </ref> [17]. in the Appendix gives more detailed performance data. We observe that the average performance of our method is extremely close to optimal: for n = 8, PI2S is on average only about 0.25% away from optimal.
Reference: [17] <author> A. B. Kahng and G. Robins, </author> <title> A New Class of Iterative Steiner Tree Heuristics With Good Performance, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. </pages> <month> 893-902. </month> <title> [18] , On Performance Bounds for a Class of Rectilinear Steiner Tree Heuristics in Arbitrary Dimension, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 11 (1992), </volume> <pages> pp. 1462-1465. </pages>
Reference-contexts: Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18]. This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm <ref> [17] </ref>. I1S always performs strictly better than 3 2 times optimal [27], and achieves almost 11% average improvement over MST cost. Efficient serial and parallel implementa tions of I1S were given in [1], enabling the benchmarking of the behavior of I1S on nets containing up to several hundred pins. <p> Section 5 presents extensive simulation results, both for two and for three dimensions, and we conclude in Section 6 with some open problems. 2 Overview of the 1-Steiner Method We begin with a review of the 1-Steiner method <ref> [17] </ref>. For two pointsets P and S we define the MST savings of S with respect to P as M ST (P; S) = cost (M ST (P )) cost (M ST (P [ S)). <p> (P )jM ST (P [ S; fxg) &gt; 0g 6= ; Do Find x 2 T with maximum M ST (P [ S; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) computational geometry [6] <ref> [17] </ref> [25], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. Thus, a batched variant of I1S is usually favored, which efficiently adds an entire set of "independent" Steiner points in a single iteration, thereby affording both practicality and reduced time complexity [1] [17]. <p> <ref> [17] </ref> [25], such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. Thus, a batched variant of I1S is usually favored, which efficiently adds an entire set of "independent" Steiner points in a single iteration, thereby affording both practicality and reduced time complexity [1] [17]. <p> Our PIkS scheme can also be extended using a "non-interfering" criterion as in [1] <ref> [17] </ref>, to yield a Perturbated Batched k-Steiner algorithm (PBkS), where a maximal number of Steiner points are added during each round. <p> Our code is available from the authors upon request. The following algorithm variants were tested: * B1S The batched variant of iterated 1-Steiner <ref> [17] </ref>; * MB1S The B1S variant modified for faster execution; * PB1S The perturbated version of B1S; * I2S The iterated 2-Steiner algorithm; * PI2S The perturbated version of I2S; * META (B1S,MB1S) The metaheuristic over heuristics B1S and MB1S, i.e., the best solution found by either of these heuristics; * <p> The instances were generated randomly by choosing the coordinates of each point from a uniform distribution in a 10000 fi 10000 grid; such instances are statistically similar to the pin locations of actual VLSI nets and are the standard testbed for Steiner tree heuristics [16] <ref> [17] </ref>. in the Appendix gives more detailed performance data. We observe that the average performance of our method is extremely close to optimal: for n = 8, PI2S is on average only about 0.25% away from optimal. <p> As is the case in two dimensions [1], the number of rounds for B1S in three dimensions is on average very small. 19 number of parallel planes. in three dimensions 6 Conclusion We proposed several enhancements to the Iterated (Batched) 1-Steiner heuristic <ref> [17] </ref>, based on a perturbative approach. Our methods enjoy the same asymptotic time complexity as Iterated 20 (Batched) 1-Steiner, yet offer improved average performance. We also proposed a method of in-creasing performance at the expense of running time, allowing a smooth tradeoff between performance and efficiency.
Reference: [19] <author> J. W. Lavinus and J. P. Cohoon, </author> <title> Routing a Multi-Terminal Critical Net: Steiner Tree Construction in the Presence of Obstacles, </title> <type> Tech. Rep. </type> <institution> CS-93-19, Computer Science Department, University of Virginia, </institution> <month> April </month> <year> 1993. </year>
Reference-contexts: Empirical testing suggests that this approach is very effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST costs. Our methods extend to arbitrarily weighted graphs, and are thus suitable as the basis of a practical multi-layer global router, where obstruction and congestion considerations affect routing <ref> [19] </ref>. <p> The perturba-tive methods are highly parallelizable and generalize to arbitrary weighted graphs; thus, they are suitable to support a multi-layer global router, where obstruction and congestion considerations affect routing <ref> [19] </ref>.
Reference: [20] <author> J. H. Lee, N. K. Bose, and F. K. Hwang, </author> <title> Use of Steiner's Problem in Sub-Optimal Routing in Rectilinear Metric, </title> <journal> IEEE Trans. on Circuits and Systems, </journal> <volume> 23 (1976), </volume> <pages> pp. 470-476. </pages>
Reference-contexts: This implies that any MST-based strategy which improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [12] [13] [15] <ref> [20] </ref> [21], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [26] [32]. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18].
Reference: [21] <author> K. W. Lee and C. Sechen, </author> <title> A New Global Router for Row-Based Layout, </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer-Aided Design, </booktitle> <address> Santa Clara, CA, </address> <month> November </month> <year> 1990, </year> <pages> pp. 180-183. </pages>
Reference-contexts: This implies that any MST-based strategy which improves upon an initial MST topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [12] [13] [15] [20] <ref> [21] </ref>, all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [26] [32]. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18].
Reference: [22] <author> F. D. Lewis, W. C. Pong, and N. VanCleave, </author> <title> Local Improvement in Steiner Trees, </title> <booktitle> in Proc. Great Lakes Symposium on VLSI, </booktitle> <address> Kalamazoo, MI, </address> <month> March </month> <year> 1993, </year> <pages> pp. 105-106. </pages>
Reference-contexts: For comparison, we have also tested: * UKy The Steiner heuristic of Lewis et al. <ref> [22] </ref>; and * OPT The optimal Steiner tree algorithm of Salowe and Warme [29]. <p> UKy has average performance on par with the best existing methods <ref> [22] </ref>, while OPT is the fastest known optimal rectilinear Steiner tree algorithm [29]. All algorithms have been extensively benchmarked using various net cardinalities. Up to 10000 instances of each 16 cardinality were solved using each algorithm. <p> Generalizing [29] to higher dimensions, or significantly improving its efficiency in two dimensions remains a major challenge. 7 Acknowledgments We thank Professor Forbes Lewis, Chia-Chi Pong, and Nancy VanCleave <ref> [22] </ref> for making their local-improvement Steiner heuristic (UKy) code available to us. Many thanks go Professor Jeff Salowe and David Warme [29] for providing an efficient implementation of an exact Steiner tree algorithm (OPT).
Reference: [23] <author> A. L. Loeb, </author> <title> Space Structures: Their Harmony and Counterpoint, </title> <publisher> Birkhauser, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: dimensions, where we partition space into 14 regions corresponding to the faces of a truncated cube (Figure 9 (a)), i.e., a solid obtained by chopping off the corners of a cube, yielding 6 square faces and 8 equilateral triangle faces (Figure 9 (b)); this solid is known as a "cuboctahedron" <ref> [23] </ref>. The 14 regions of this partition correspond to the faces of the cuboctahedron, namely 6 pyramids with square cross-section (Figure 9 (c)) and 8 pyramids with triangular cross-section (Figure 9 (d)). Again, region boundaries may be arbitrarily assigned to either adjacent region.
Reference: [24] <author> B. T. Preas and M. J. Lorenzetti, </author> <title> Physical Design Automation of VLSI Systems, </title> <address> Ben-jamin/Cummings, Menlo Park, CA, </address> <year> 1988. </year>
Reference-contexts: 1 Introduction Optimal interconnections are a common theme in a number of areas, including VLSI layout <ref> [24] </ref>, the design of buildings [30], and biology [3], where we typically seek a low-cost topology to interconnect a set of sites.
Reference: [25] <author> F. P. Preparata and M. I. Shamos, </author> <title> Computational Geometry: An Introduction, </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: )jM ST (P [ S; fxg) &gt; 0g 6= ; Do Find x 2 T with maximum M ST (P [ S; fxg) S = S [ fxg Remove from S points with degree 2 in M ST (P [ S) Output MST (P [ S) computational geometry [6] [17] <ref> [25] </ref>, such methods suffer from large constants in their time complexities, and are notoriously difficult to implement. Thus, a batched variant of I1S is usually favored, which efficiently adds an entire set of "independent" Steiner points in a single iteration, thereby affording both practicality and reduced time complexity [1] [17].
Reference: [26] <author> D. Richards, </author> <title> Fast Heuristic Algorithms for Rectilinear Steiner Trees, </title> <journal> Algorithmica, </journal> <volume> 4 (1989), </volume> <pages> pp. 191-207. </pages>
Reference-contexts: MST topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [12] [13] [15] [20] [21], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost <ref> [26] </ref> [32]. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18]. This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm [17].
Reference: [27] <author> G. Robins, </author> <title> On Optimal Interconnections, </title> <type> Ph.D. Dissertation, </type> <institution> CSD-TR-920024, Department of Computer Science, UCLA, </institution> <year> 1992. </year> <month> 23 </month>
Reference-contexts: This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm [17]. I1S always performs strictly better than 3 2 times optimal <ref> [27] </ref>, and achieves almost 11% average improvement over MST cost. Efficient serial and parallel implementa tions of I1S were given in [1], enabling the benchmarking of the behavior of I1S on nets containing up to several hundred pins. In this paper we propose several performance-improving enhancements to the I1S method.
Reference: [28] <author> G. Robins and J. S. Salowe, </author> <title> On the Maximum Degree of Minimum Spanning Trees, </title> <type> Tech. Rep. </type> <institution> CS-93-22, Computer Science Department, University of Virginia, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: Using a perturbative argument, these results have been recently extended to show that for every 3 pointset in the Manhattan plane there exists an MST with maximum degree 4, and for three--dimensional Manhattan space the maximum MST degree is 14 <ref> [28] </ref> (the best previously known bounds for two and three dimensions were 6 and 26, respectively). Aside from having independent theoretical interest, these results help reduce the running times of our algorithms. The work in [28] also investigates the maximum MST degree for higher dimensions and other L p norms, and <p> with maximum degree 4, and for three--dimensional Manhattan space the maximum MST degree is 14 <ref> [28] </ref> (the best previously known bounds for two and three dimensions were 6 and 26, respectively). Aside from having independent theoretical interest, these results help reduce the running times of our algorithms. The work in [28] also investigates the maximum MST degree for higher dimensions and other L p norms, and relates the maximum MST degree to the so-called "Hadwiger" numbers. In Section 2 we review the I1S method. Section 3 describes our enhanced perturbative approach, and Section 4 generalizes I1S to three dimensions. <p> Therefore, the MST over P is unique (i.e., all points must connect to the origin) and thus the origin point has degree 13 in the MST. It is still open whether there exists a three-dimensional pointset where the maximum MST degree is forced to be as high as 14 <ref> [28] </ref>. <p> Clearly each d-dimensional region satisfying the strict uniqueness property may con tribute at most 1 to the maximum MST degree. Using a perturbative argument, Robins and 14 Salowe <ref> [28] </ref> prove that by breaking ties judiciously, lower-dimensional regions do not increase the maximum MST degree: Theorem 4.5 Given a partition of d-dimensional Manhattan space into r regions, and given that only r 0 r of these regions are d-dimensional and have the strict uniqueness property (the rest being lower-dimensional, and <p> Finally, use the topology of the MST for P 0 to connect the points of P ; this would correspond to an MST over P . For more details, the reader is referred to <ref> [28] </ref>. Corollary 4.6 Every pointset in the Manhattan plane has an MST with maximum degree 4. Corollary 4.7 Every pointset in three-dimensional Manhattan space has an MST with maximum degree 14. <p> These results have been recently extended <ref> [28] </ref> to show that for every pointset in the Manhattan plane there exists an MST with maximum degree 4, and for three-dimensional Manhattan space there exists an MST with maximum degree 14 (the best previously known bounds for two and three dimensions were 6 and 26, respectively). <p> Determining if the maximum MST degree in three dimensional Manhattan space is 13 or 14; 3. Further tightening the bounds of <ref> [28] </ref> on the maximum MST degree in higher dimensions and under various L p norms; 4.
Reference: [29] <author> J. S. Salowe and D. M. Warme, </author> <title> An Exact Rectilinear Steiner Tree Algorithm, </title> <booktitle> in Proc. IEEE Intl. Conf. on Computer Design (to appear), </booktitle> <address> Cambridge, MA, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: methods are highly parallelizable and are asymptotically no slower than the original I1S variants, yet afford improved average performance; indeed, extensive simulations indicate that for uniformly distributed nets of up to 8 pins, the average performance of our algorithms is only 0:25% away from optimal, refining the observation noted in <ref> [29] </ref>. Moreover, for 8-pin nets, our method produces the optimal Steiner tree in 90% of all instances. We also propose a method of improving performance at the expense of running time, allowing a smooth tradeoff between performance and efficiency. <p> For comparison, we have also tested: * UKy The Steiner heuristic of Lewis et al. [22]; and * OPT The optimal Steiner tree algorithm of Salowe and Warme <ref> [29] </ref>. Recall from the end of Section 3 that MB1S is a more efficient version of B1S, since it only examines a fraction of the Hanan candidates in each round (i.e., only the ones with positive MST savings in the previous round). <p> UKy has average performance on par with the best existing methods [22], while OPT is the fastest known optimal rectilinear Steiner tree algorithm <ref> [29] </ref>. All algorithms have been extensively benchmarked using various net cardinalities. Up to 10000 instances of each 16 cardinality were solved using each algorithm. <p> In all cases, the L parallel planes were uniformly spaced in the unit cube (i.e., there were separated by G L units apart, where G = 10000 is the gridsize. Unfortunately, the OPT algorithm of Salowe and Warme <ref> [29] </ref> does not easily generalize to higher dimensions; thus, 18 we did not compare our three-dimensional version of PB1S to optimal. <p> Determining if the maximum MST degree in three dimensional Manhattan space is 13 or 14; 3. Further tightening the bounds of [28] on the maximum MST degree in higher dimensions and under various L p norms; 4. The exact planar MRST algorithm of Salowe and Warme <ref> [29] </ref> is by far the fastest currently 21 known; unfortunately, it relies heavily on the structure of planar MRSTs, and thus does not easily generalize to higher dimensions. Generalizing [29] to higher dimensions, or significantly improving its efficiency in two dimensions remains a major challenge. 7 Acknowledgments We thank Professor Forbes <p> The exact planar MRST algorithm of Salowe and Warme <ref> [29] </ref> is by far the fastest currently 21 known; unfortunately, it relies heavily on the structure of planar MRSTs, and thus does not easily generalize to higher dimensions. Generalizing [29] to higher dimensions, or significantly improving its efficiency in two dimensions remains a major challenge. 7 Acknowledgments We thank Professor Forbes Lewis, Chia-Chi Pong, and Nancy VanCleave [22] for making their local-improvement Steiner heuristic (UKy) code available to us. Many thanks go Professor Jeff Salowe and David Warme [29] for <p> Generalizing <ref> [29] </ref> to higher dimensions, or significantly improving its efficiency in two dimensions remains a major challenge. 7 Acknowledgments We thank Professor Forbes Lewis, Chia-Chi Pong, and Nancy VanCleave [22] for making their local-improvement Steiner heuristic (UKy) code available to us. Many thanks go Professor Jeff Salowe and David Warme [29] for providing an efficient implementation of an exact Steiner tree algorithm (OPT).
Reference: [30] <author> J. M. Smith and J. S. Liebman, </author> <title> Steiner Trees, Steiner Circuits and the Interference Problem in Building Design, </title> <journal> Engineering Optimization, </journal> <volume> 4 (1979), </volume> <pages> pp. 15-36. </pages>
Reference-contexts: 1 Introduction Optimal interconnections are a common theme in a number of areas, including VLSI layout [24], the design of buildings <ref> [30] </ref>, and biology [3], where we typically seek a low-cost topology to interconnect a set of sites. <p> We generalize I1S and its variants to three dimensions, as well as to the intermediate case where all the pins lie on k parallel planes. This formulation has several applications, including multi-layer routing [2] [9] [11], and building design <ref> [30] </ref>. Empirical testing suggests that this approach is very effective for three-dimensional Steiner routing, yielding up to 15% average improvement over MST costs.
Reference: [31] <author> T. L. Snyder, </author> <title> On the Exact Location of Steiner Points in General Dimension, </title> <journal> SIAM J. Comput., </journal> <volume> 21 (1992), </volume> <pages> pp. 163-180. </pages>
Reference-contexts: First, Hanan [10] has shown that there always exists an MRST with Steiner points chosen from the intersection of all the horizontal and vertical lines passing through all the points in P (see Figure 2), and this result indeed generalizes to all higher dimensions <ref> [31] </ref>. However, a second major result establishes that despite this restriction on the solution space, the MRST problem remains NP-complete [5], prompting a large number of heuristics, as surveyed in [16]. from the intersection of all the horizontal and vertical lines passing through all the points. <p> Note that the unrestricted three-dimensional version of the Steiner problem occurs in the limit when L = 1, and the standard two-dimensional formulation is the case L = 1. Our three-dimensional PIkS method may be implemented efficiently by using a generalization of Hanan's theorem to higher dimensions <ref> [31] </ref>. In particular, there always exists an optimal Steiner tree whose Steiner points are chosen from the O (n 3 ) intersections of all orthogonal planes (i.e., planes parallel to the axis) passing through all points in P .
Reference: [32] <author> P. Winter, </author> <title> Steiner Problem in Networks: A Survey, Networks, </title> <booktitle> 17 (1987), </booktitle> <pages> pp. 129-167. </pages>
Reference-contexts: topology will also enjoy a performance ratio of at most 3 2 , which has prompted a large number of Steiner tree heuristics that resemble classic MST construction methods [12] [13] [15] [20] [21], all producing 2 Steiner trees with average cost 7% to 9% smaller than MST cost [26] <ref> [32] </ref>. Unfortunately, all MST-based MRST constructions were recently shown to have a worst-case performance ratio of exactly 3 2 [18]. This negative result has motivated research into alternate schemes for MRST approximation, with the best performing among these being the Iterated 1-Steiner (I1S) algorithm [17].

References-found: 30

