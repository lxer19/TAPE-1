URL: http://www.cs.uoregon.edu/~sameer/courses/cis631/docs/proj.ps
Refering-URL: http://www.cs.uoregon.edu/~sameer/courses/cis631/docs/
Root-URL: http://www.cs.uoregon.edu
Title: Implementation of Farming Under PVM  
Author: Sameer S. Shende 
Keyword: dynamic load balancing, PVM, farming, heterogeneous computing, parallel and distributed processing.  
Date: January 23, 1996  
Affiliation: Department of Computer and Information Science University of Oregon  
Abstract: Dynamic load balancing can improve the performance of a parallel application significantly. This is needed in the PVM environment because different nodes in the network have different processing capacities, networks have different data carrying capacities, in a timesharing environment, other users' processes can slow down a particular task in a parallel application. Also a large number of data parallel algorithms require unequal processing times for each quantum of data given to the processor. This paper explains the design and implementation of one such load balancing scheme under PVM. PVM is fast becoming a popular parallel programming environment both on a network of workstations, multiprocessors and other parallel and vector platforms. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Anderson T. E., Lazowska E. D., and Levy H. M., </author> <title> "The Performance Implications of Thread Management Alternatives for Shared Memory Multiprocessors ", Department of Computer Science, </title> <institution> University of Washington, </institution> <type> Technical Report 88-09-04, </type> <month> Sep. </month> <year> 1988. </year> <title> [2] "PUL-TF Prototype User Guide", EPCC User Guide, </title> <year> 1992. </year>
Reference-contexts: Different distributed data management schemes with respect to locks are discussed in <ref> [1] </ref> .
Reference: [3] <author> Shende, S., and B. </author> <title> Ananda Krishna , "Simulation of Concurrent Runtime Environment of PARAM on UNIX", High Performance Computing, </title> <booktitle> Proceedings of the Southern Regional Convention, Computer Society of India, </booktitle> <month> July </month> <year> 1994. </year> <title> [4] "CORE Concurrent Runtime Environment for C Users Manual", </title> <address> C-DAC , India, </address> <year> 1991. </year> <title> 14 [5] "PARAS Overview Manual", </title> <address> C-DAC, India, </address> <year> 1991. </year> <note> [6] "3LC Users Guide", Inmos U.K., </note> <year> 1990. </year>
Reference-contexts: Implementations of static farms with queue lengths (of the local worker task's queue of work packets) specified by worker tasks have been done at C-DAC, India [4] and TUL, India <ref> [3] </ref> but have concentrated on a homogeneous environment. The advantage of 5 [3] over this paper's implementation is that the farm related information is maintained in a distributed manner, so when multiple farms are implemented it would have no bottlenecks at the central server site. <p> Implementations of static farms with queue lengths (of the local worker task's queue of work packets) specified by worker tasks have been done at C-DAC, India [4] and TUL, India <ref> [3] </ref> but have concentrated on a homogeneous environment. The advantage of 5 [3] over this paper's implementation is that the farm related information is maintained in a distributed manner, so when multiple farms are implemented it would have no bottlenecks at the central server site. This may happen in our case if all farms simultaneously dispatch work packets to the workers.
Reference: [7] <author> Beguelin A., Dongarra J. J., Geist G. A., Manchek R., Sundaram V. S., </author> <title> "A users' guide to PVM parallel virtual machine", </title> <type> Technical Report ORNL/TM-11826, </type> <institution> Oak Ridge National Laboratory, </institution> <month> July </month> <year> 1991. </year> <month> 15 </month>
Reference-contexts: This can be used when a node having a worker task goes down. PVM provides constructs to notify a task (if it has so indicated) when a task exits PVM or the node on which it is running halts due to some error <ref> [7] </ref> . This feature could be useful in the case where the farmer task needs "at least one" reply to come from the worker task for every work packet that is sent out.
References-found: 3

