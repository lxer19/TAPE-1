URL: http://www.cs.berkeley.edu/~eylon/cs282/report.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~eylon/cs282/index.html
Root-URL: 
Title: Parsing Mathematics Typeset in T E X CS-282 Course Project  
Author: Prof. Richard Fateman 
Date: December 18, 1997  
Address: Eylon Caspi  
Affiliation: University of California, Berkeley  
Abstract: The recognition of mathematics notation by a computer is made difficult by the two-dimensional nature of the parsing problem as well as by the richness and ambiguity of the notation. Parsing mathematics typeset in T E X constitutes a simplified, idealized 2D recognition problem, allowing the recognition engine to concentrate more on semantic understanding. Choosing T E X as an input form for mathematics is immediately desirable for document recognition because of the availability of many published works in T E X form. It is also desirable as a linearized, intermediate form emitted by a mathematically-oriented graphical user interface, as in Tech-Explorer [6]. A multi-pass mathematics recognition engine is described, designed with the intent of transcribing formulas from the electronic reference A Table of Integrals, Series, and Products [4] into LISP statements suitable for a computer algebra system. The engine is currently capable of transcribing 154 of 210 integral and summation formulas in the domain of real, scalar calculus.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A, Aho, Sethi, Ullman. </author> <booktitle> Compilers: Principles, Techniques, Tools. </booktitle> <publisher> Addison Wesley. </publisher>
Reference: [2] <institution> Aster thesis </institution>
Reference: [3] <author> Richard J. Fateman and Taku Tokuyasu. </author> <title> Progress in recognizing typeset mathematics, </title> <booktitle> Proceedings SPIE Document Recognition III Vol. </booktitle> <volume> 2660, </volume> <month> Jan. </month> <year> 1996. </year> <month> 37|50. </month>
Reference-contexts: Previous efforts at U.C.Berkeley to convert this electronic Table of Integrals : : : were based on a recursive-descent parser in LISP and enjoyed limited success <ref> [3] </ref>. The parser was able to convert selections of the source into an intermediate form based on rectilinear grouping (h-boxes, v-boxes). Work remained to be done, however, in the semantic understanding of the grouped expressions.
Reference: [4] <author> Gradshteyn and Rhyzik. </author> <title> Table of Integrals, Series, and Products. </title> <note> Academic Press (5th edition), (also CDROM) 1996. </note>
Reference-contexts: Specifically, we set out to tran 3 scribe formulae from Gradshtein and Rhyzik's Table of Integrals, Series, and Products <ref> [4] </ref>, an electronic mathematical reference on CD-ROM capable of displaying, navigating, and exporting its content of SGML, T E X, and bitmapped illustrations. While this export format is suitable for copying and pasting into publications, it not readily usable in a computer algebra system. <p> For instance, b being a variable necessitates the transformation: sin ab (c)de ! sin (ab)(cde) 3 The Recognition Engine A prototype mathematics notation recognition system has been constructed with the intent of extracting formulas from the electronic reference, A Table of Integrals, Series, and Products <ref> [4] </ref>, a commercial publication of Academic Press. The reference is essentially an electronically-typeset, computer-navigable book on CD-ROM, with no inherent interface to any computer algebra system. <p> The engine has proven to be effective in recognizing a subset of the electronic reference A Table of Integrals, Series, and Products <ref> [4] </ref> consisting of integral and series formulas in the domain of real, scalar calculus. The engine demonstrates that recognition of T E X code is feasible and fast using multiple-pass parsing and semantic analysis techniques.
Reference: [5] <author> W. F. Hammond. </author> <title> Setting Mathematics with SGML. </title> <publisher> &lt;http://math.albany.edu:8800/hm/sgml/about.html&gt; </publisher>
Reference-contexts: Unfortunately, most computer algebra systems have their own unique syntaxes and cannot directly communicate with each other. Standardization efforts for a universal mathematics specification language, such as OpenMath [9] and mathematical SGML <ref> [5] </ref> are slow to mature, due in part to the richness and extensibility of the language of mathematics. Natural mathematics notation is also the only form to consider in automated document recognition.
Reference: [6] <institution> IBM. Techexplorer hypermedia browser. &lt;http://www.ics.raleigh.ibm.com/ics/techexp.htm&gt; </institution>
Reference-contexts: T E X also has merit as an intermediate language associated with a mathematical graphical user interface. Commercial tools such as IBM TechExplorer <ref> [6] </ref>, TCI Scientific Workplace [10] and Design Science MathType [8] exist today which allow the user to build mathematical formulae on a computer screen using positioning templates (superscript box over base-text box, integral sign with boxes for integration-limits and integrand, etc.).
Reference: [7] <author> Donald E. Knuth. </author> <title> The T E X book. </title> <publisher> Addison Wesley, </publisher> <year> 1970. </year>
Reference: [8] <institution> Design Science. MathType. &lt;http://www.mathtype.com/&gt; </institution>
Reference-contexts: T E X also has merit as an intermediate language associated with a mathematical graphical user interface. Commercial tools such as IBM TechExplorer [6], TCI Scientific Workplace [10] and Design Science MathType <ref> [8] </ref> exist today which allow the user to build mathematical formulae on a computer screen using positioning templates (superscript box over base-text box, integral sign with boxes for integration-limits and integrand, etc.). The tools then emit a T E X or other visual encoding of the formula (ex.
Reference: [9] <author> OpenMath. </author> <month> &lt;http://www.openmath.org&gt; </month>
Reference-contexts: The concern over user interfaces might be aleviated if a user were only ever required to learn one linearized syntax. Unfortunately, most computer algebra systems have their own unique syntaxes and cannot directly communicate with each other. Standardization efforts for a universal mathematics specification language, such as OpenMath <ref> [9] </ref> and mathematical SGML [5] are slow to mature, due in part to the richness and extensibility of the language of mathematics. Natural mathematics notation is also the only form to consider in automated document recognition.
Reference: [10] <author> TCI. </author> <title> Scientific Workplace. </title> <address> &lt;http://www.tcisoft.com/products/swp2v25.html&gt; 13 </address>
Reference-contexts: T E X also has merit as an intermediate language associated with a mathematical graphical user interface. Commercial tools such as IBM TechExplorer [6], TCI Scientific Workplace <ref> [10] </ref> and Design Science MathType [8] exist today which allow the user to build mathematical formulae on a computer screen using positioning templates (superscript box over base-text box, integral sign with boxes for integration-limits and integrand, etc.).
References-found: 10

