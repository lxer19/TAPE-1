URL: http://www.cs.helsinki.fi/~bheikkin/C-1996-40.ps
Refering-URL: http://www.cs.helsinki.fi/~bheikkin/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Intelligent Assembly of Structured Documents  
Author: Helena Ahonen, Barbara Heikkinen, Oskari Heinonen, Jani Jaakkola, Pekka Kilpelinen, Greger Lindn, and Heikki Mannila 
Address: P.O.Box 26 (Teollisuuskatu 23) FIN-00014 University of Helsinki, Finland  
Date: Helsinki, June 1996  
Note: Series of Publications C, No. C-1996-40  
Affiliation: University of Helsinki Department of Computer Science  University of Helsinki Department of Computer Science  
Pubnum: Report C199640  
Abstract-found: 0
Intro-found: 1
Reference: [Ang93] <author> Paula Angerstein. </author> <title> User requirements for SGML data management. </title> <editor> In Michael Popham, editor, </editor> <booktitle> The SGML '93 Conference Report, </booktitle> <year> 1993. </year>
Reference-contexts: Common problems are tnding the right version of the right document, and keeping related documents compatible with each other, or synchronizing documents with the latest data. Other problems include reusing appropriate existing document fragments, and coordinating multiple access and update of documents <ref> [Ang93] </ref>. One of the basic problems is to provide on-demand generation of individualised documents through dynamic document assembly. A document assembly composes new documents from a collection of documents. Such reuse includes tnding the relevant document fragments, modifying them as needed, and stitching the fragments together to a new document.
Reference: [Bec94] <author> Dave Becker. </author> <title> UTF [Universal Text Format] An SGML standard for the news distribution industry. </title> <type> Technical report, </type> <institution> Mead Data Central, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: The article structure is based on the Universal Text Format, which is an SGML DTD developed for the interchange of news <ref> [Bec94] </ref>. The assembly environment consists of the structured articles with their supplementary information, of scripts which perform the actual assembly, and of a user interface for expressing the assembly conditions and viewing the results.
Reference: [BG90] <author> Eric A. Bier and Aaron Goodisman. </author> <title> Documents as user interfaces. </title> <booktitle> In Proceedings of the International Conference on Electronic Publishing, Document Manipulation & Typography, </booktitle> <pages> pages 249262, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Even if the activities are triggered by the document editor, they are associated with the document and preserved when the documents are tled, copied, or even electronically mailed. Documents can be considered as user interfaces <ref> [BG90] </ref> 1 . World Wide Web (WWW) servers with associated Common Gateway Interface (CGI) programs oer very popular active-document interfaces. However, CGI programs tend to form incomplete, untnished, list-like documents as a result of their activities.
Reference: [CAC94] <editor> Special issue on intelligent agents. </editor> <booktitle> Communications of the ACM, </booktitle> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: If the assembled document is to be used as an SGML document, a new DTD may need to be constructed. The assembled document may then further need to be transformed to conform to this new DTD. The assembly is performed by dierent software agents <ref> [CAC94] </ref> working on the document and its supplementary information. A general agent will assist in searching and reading documents. A specialized agent handles application-specitc information. Agents are implemented in such a general and open way that they easily can be used on dierent platforms and systems.
Reference: [CKP93] <author> Douglas R. Cutting, David R. Karger, and Jan O. Pedersen. </author> <title> Constant interaction-time Scatter/Gather browsing of very large document collections. </title> <booktitle> In Proceedings of the 16th ACM SIGIR Conference, </booktitle> <pages> pages 126134, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The browsing tool employs the Scatter/Gather clustering techniques developed by Cutting et al. <ref> [CPKT92, CKP93] </ref>. The documents are broken o into proper subdocuments in the preprocessing phase. This is done according to the structure of the documents; for example, parts and chapters of the statutes are eligible retrieval units 5 .
Reference: [CPKT92] <author> Douglas R. Cutting, Jan O. Pedersen, David Karger, and John W. Tukey. Scatter/Gather: </author> <title> A cluster-based approach to browsing large document collections. </title> <booktitle> In Proceedings of the 15th ACM SIGIR Conference, </booktitle> <pages> pages 318329, </pages> <month> June </month> <year> 1992. </year> <month> 10 </month>
Reference-contexts: The browsing tool employs the Scatter/Gather clustering techniques developed by Cutting et al. <ref> [CPKT92, CKP93] </ref>. The documents are broken o into proper subdocuments in the preprocessing phase. This is done according to the structure of the documents; for example, parts and chapters of the statutes are eligible retrieval units 5 .
Reference: [ET94] <author> Paul M. English and Raman Tenneti. </author> <title> Interleaf active documents. Electronic Pub--lishing Origination, Dissemination and Design, </title> <address> 7(2):7587, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: It is no longer a passive linear version of a text, but may contain references to other documents and information sources. The document knows how to assemble subparts of itself and of other documents to form a tailored new document. Active documents <ref> [Spi88, TB90, ET94, QV94, HHR94] </ref> are one form of intelligent documents. An active document includes activities that are performed as a result of the user opening, scrolling, editing, or closing a document. <p> Finally, we give a short conclusion of our work. 2 Adding intelligence to documents An intelligent document needs to use both information based on the contents, and information about the application and the world. Adding intelligence is called seeding <ref> [ET94] </ref>. Seeding can be performed both automatically or manually. Manual seeding gives the author better possibilities to tne-tune the supplementary information. However, for a large documentation we also need automatic seeding methods.
Reference: [Fuc96] <author> Matthew Fuchs. </author> <title> The user interface as document: SGML and distributed applications. Computer Standards & Interfaces, </title> <address> 18(1):7992, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: In an on-going research and development project called `Structured and Intelligent Documents 1 Complementarily, Fuchs has suggested implementing portable user interfaces as SGML documents <ref> [Fuc96] </ref>. 2 Java is a trademark of Sun Microsystems, Inc. 1 (SID)' 3 we study intelligent document assembly in its dierent aspects.
Reference: [GL94] <author> R. V. Guha and Douglas B. Lenat. </author> <title> Enabling agents to work together. </title> <journal> Communications of the ACM, </journal> <volume> 37(7):127142, </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: An example is the inclusion of addresses in marketing letters from an address database. Other supplementary information is based on common sense knowledge, e.g., in a separate knowledge base <ref> [GL94, Len95] </ref>. Common sense tells about the world and the application area. It could include information about geography saying that Finland is one of the Nordic countries, which are a part of Europe.
Reference: [GM95] <author> James Gosling and Henry McGilton. </author> <title> The Java Language Environment: A White Paper. </title> <publisher> Sun Microsystems Computer Company, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: Just as in the case of the supplementary information, agents can be modited or combined. Implementations can be made using script languages, or, e.g., in the new Java language <ref> [GM95] </ref> which provides a safe device-independent way to express portable actions.
Reference: [HHR94] <author> Anja Haake, Christoph Hser, and Klaus Reichenberger. </author> <title> The individualized electronic newspaper: an example of an active publication. Electronic Publishing Origination, Dissemination and Design, </title> <address> 7(2):89111, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: It is no longer a passive linear version of a text, but may contain references to other documents and information sources. The document knows how to assemble subparts of itself and of other documents to form a tailored new document. Active documents <ref> [Spi88, TB90, ET94, QV94, HHR94] </ref> are one form of intelligent documents. An active document includes activities that are performed as a result of the user opening, scrolling, editing, or closing a document.
Reference: [ISO86] <author> ISO. </author> <title> Information Processing Text and Oce Systems Standard Generalized Markup Language (SGML), </title> <type> ISO 8879, </type> <year> 1986. </year>
Reference-contexts: 1 Introduction The role and even the concept of documents is undergoing a tremendous change. A document is not only created by a user but also collected, combined and customized from reusable documents [Lev93]. The multi-purpose reuse of documents is facilitated by SGML <ref> [ISO86] </ref>, which has, over a ten-year period, slowly become the predominant document markup standard in the electronic publishing area. The standard does not, however, provide a solution for managing or processing of large document collections. <p> Especially, we want the assembled document to be a tnished product to be delivered either electronically or on paper. As a basis for the project we consider structured documents marked up with SGML <ref> [ISO86] </ref>. The rest of this paper is organized as follows. In the next section we detne the inherent and supplementary information needed to make a document intelligent. We also discuss the representation and the placement of the information.
Reference: [ISO92] <author> ISO and IEC. </author> <title> Information technology Hypermedia Time-based Structuring Language (HyTime), </title> <booktitle> ISO/IEC DIS 10744, </booktitle> <year> 1992. </year>
Reference-contexts: It can also be placed in the query which will assemble the document. We note that references to documents and other data sources do not have to be placed within the intelligent document. The HyTime standard <ref> [ISO92] </ref> presents a way to store references outside the document as `ilinks'. 3 Automated document assembly Document assembly consists of three phases. First, the user must express the requirements: what kind of a document s/he wants, what the result should contain, how large it should be, etc.
Reference: [ISO94] <author> ISO. </author> <title> Information and documentation Electronic manuscript preparation and markup, </title> <type> ISO 12083, </type> <year> 1994. </year>
Reference-contexts: Creating a structured SGML version required laborious conversion steps using tools such as MathType 8 , DynaTag 9 OmniMark 10 , and some graphics programs. The basic structure for the book is the BOOK DTD of the ISO 12083 standard <ref> [ISO94] </ref> extended with element types for exercises, answers, examples, formulas, detnitions and clauses. The book is enriched with internal supplementary information.
Reference: [ISO96] <author> ISO and IEC. </author> <title> Information technology Processing Languages Document Style Semantics and Specitcation Language (DSSSL) ISO/IEC DIS 10179, </title> <year> 1996. </year>
Reference-contexts: The use of the language is based on describing the substructures of the SGML instance that are to be replaced by other substructures. The transformation process corresponds to the tree transformation process of the forthcoming DSSSL <ref> [ISO96] </ref> standard, but the transformation description is given on a higher level of abstraction. 5 Conclusion We have described several ways of seeding documents with intelligence. Using either inherent or supplementary information associated with the document, allows us to perform intelligent document assembly to produce individualised documents on demand.
Reference: [JK96] <author> Jani Jaakkola and Pekka Kilpelinen. </author> <title> Sgrep a tool to search structured text. </title> <note> In preparation, </note> <year> 1996. </year>
Reference-contexts: In fact, this assembly produces two separate tables, since the summary data of insurance companies, like A-Vakuutus, diers from that of the ordinary enterprises. 13 QuarkXPress is a trademark of Quark, Inc. 8 The selection of articles is implemented using a structured text search tool developed by the authors <ref> [JK96] </ref>. Element selection, conversion and gathering is implemented using MetaMorphosis 14 scripts, which take the assembly parameters from the graphical user interface.
Reference: [Kar83] <author> Fred Karlsson. </author> <title> Finnish grammar. </title> <address> WSOY, Helsinki, </address> <year> 1983. </year>
Reference-contexts: morphologically rich languages, like in Finnish, a word can take many, even thousands of 3 The project is funded by the Finnish Technology Development Center and seven Finnish enterprises (The Aamulehti Group, Oy Edita Ab, the National Board of Education, WSOY, Helsinki Media, Lingsoft, Inc., and MTV3). dierent inected forms <ref> [Kar83] </ref>. The base forms are often not recognizable from the inected form. For example, we have the word poika (`boy', `son') which takes for example the inected forms pojan, poikaa and pojille. In such cases a morphological analysis is needed to collate the indexing terms.
Reference: [Kr94] <author> Eeva Krki, </author> <title> editor. Yleinen suomalainen asiasanasto (General Finnish Thesaurus). </title> <publisher> Kirjastopalvelu Oy, Helsinki, </publisher> <year> 1994. </year>
Reference-contexts: The set of documents intended for the clustering process need not be the entire document collection. The documents can be selected by a query for which the matching elements of the collection are returned. Here a Finnish dictionary of general indexing terms <ref> [Kr94] </ref> is used as a search-aid thesaurus. That is, the terms given by the user are expanded by related terms listed in the thesaurus. This, naturally, broadens the selection of initial documents. 4.2 Intelligent textbooks The second case study develops intelligent educational material for use at technical schools.
Reference: [KHLK96] <author> Samuel Kaski, Timo Honkela, Krista Lagus, and Teuvo Kohonen. </author> <title> Creating an order in digital libraries with self-organizing maps. Submitted to WCNN'96, </title> <booktitle> the World Congress on Neural Networks, </booktitle> <address> September 15-18, 1996, San Diego., </address> <year> 1996. </year>
Reference-contexts: Thus, the user can choose the appropriate clusters for reclustering, and in this way narrow down the retrieval. Similar methods for browsing large collections of text documents based on their contents have been recently developed also in the websom interface <ref> [KHLK96] </ref>. The Scatter/Gather approach is dierent, however, since it allows the user to recluster and browse large scattered portions of the material at once, instead of choosing a single branch in a precomputed classitcation.
Reference: [Len95] <author> Douglas B. Lenat. </author> <title> CYC: A large-scale investment in knowledge infrastructure. </title> <journal> Communications of the ACM, </journal> <volume> 38(11):3338, </volume> <month> November </month> <year> 1995. </year>
Reference-contexts: For example, the assembly mechanism should know when the document talks about movie stars and not about stars in the sky. It should be able to understand phrases like `The pen is in the box' versus `The box is in the pen' as has been suggested by Lenat <ref> [Len95] </ref>. However, it still remains an open question of how much semantic understanding we are able to include in the assembly. 2.2 Supplementary information In addition to the inherent information of a document, we may add supplementary information associated with the document. <p> An example is the inclusion of addresses in marketing letters from an address database. Other supplementary information is based on common sense knowledge, e.g., in a separate knowledge base <ref> [GL94, Len95] </ref>. Common sense tells about the world and the application area. It could include information about geography saying that Finland is one of the Nordic countries, which are a part of Europe.
Reference: [Lev93] <author> David M. Levy. </author> <title> Document reuse and document systems. Electronic Publishing Origination, Dissemination and Design, </title> <address> 6(4):339348, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The role and even the concept of documents is undergoing a tremendous change. A document is not only created by a user but also collected, combined and customized from reusable documents <ref> [Lev93] </ref>. The multi-purpose reuse of documents is facilitated by SGML [ISO86], which has, over a ten-year period, slowly become the predominant document markup standard in the electronic publishing area. The standard does not, however, provide a solution for managing or processing of large document collections.
Reference: [Mil95] <author> George A. Miller. </author> <title> WordNet: A lexical database for English. </title> <journal> Communications of the ACM, </journal> <volume> 38(11):3941, </volume> <month> November </month> <year> 1995. </year>
Reference-contexts: Supplementary information can be described in dependencies, conceptual hierarchies, or other descriptions of the application area. We could describe how dierent statutes depend on each 4 : : : and meronyms (part-name) and holonyms (whole-name) and troponyms (manner-name) and entailments : : : <ref> [Mil95] </ref>. other in a collection of laws, or the structure of a product described by its documentation. There are several other sorts of supplementary information that could be added. Problem descriptions and solution models automatically control the execution of a process.
Reference: [QV94] <author> Vincent Quint and Irne Vatton. </author> <title> Making structured documents active. Electronic Publishing Origination, Dissemination and Design, </title> <address> 7(2):5574, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: It is no longer a passive linear version of a text, but may contain references to other documents and information sources. The document knows how to assemble subparts of itself and of other documents to form a tailored new document. Active documents <ref> [Spi88, TB90, ET94, QV94, HHR94] </ref> are one form of intelligent documents. An active document includes activities that are performed as a result of the user opening, scrolling, editing, or closing a document.
Reference: [Spi88] <author> Robert Spinrad. </author> <title> Dynamic documents. </title> <institution> Harvard University Information Technology Quarterly, VII(1):1518, </institution> <month> Spring </month> <year> 1988. </year> <month> 11 </month>
Reference-contexts: It is no longer a passive linear version of a text, but may contain references to other documents and information sources. The document knows how to assemble subparts of itself and of other documents to form a tailored new document. Active documents <ref> [Spi88, TB90, ET94, QV94, HHR94] </ref> are one form of intelligent documents. An active document includes activities that are performed as a result of the user opening, scrolling, editing, or closing a document.
Reference: [TB90] <author> Douglas B. Terry and Donald G. Baker. </author> <title> Active Tioga documents: an exploration of two paradigms. Electronic Publishing Origination, Dissemination and Design, </title> <address> 3(2):105122, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: It is no longer a passive linear version of a text, but may contain references to other documents and information sources. The document knows how to assemble subparts of itself and of other documents to form a tailored new document. Active documents <ref> [Spi88, TB90, ET94, QV94, HHR94] </ref> are one form of intelligent documents. An active document includes activities that are performed as a result of the user opening, scrolling, editing, or closing a document.
Reference: [VAB95] <author> Marc Volz, Karl Aberer, and Klemens Bhm. </author> <title> A exible approach to combine IR semantics and database technology and its application to structured document handling. </title> <type> GMD Technical Report No. 891, </type> <institution> German National Research Center for Computer Science, </institution> <month> January </month> <year> 1995. </year> <month> 12 </month>
Reference-contexts: We add inherent information to the documents by computing keyword lists for the subdocuments. The keyword lists are computed with the assistance of 5 For a discussion on subdocument granularity in information retrieval, see <ref> [VAB95] </ref>. 5 the fintwol 6 parser, recording only base forms of nouns and their frequencies and removing stop words (frequent unimportant words). The keyword lists are then used as a basis for the clustering process.
References-found: 26

