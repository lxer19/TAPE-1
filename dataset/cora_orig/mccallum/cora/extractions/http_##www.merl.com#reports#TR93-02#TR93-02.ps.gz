URL: http://www.merl.com/reports/TR93-02/TR93-02.ps.gz
Refering-URL: http://www.merl.com/reports/TR93-02/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Challenges to the Field of Reverse Engineering  
Author: by Peter G. Selfridge Richard C. Waters Elliot J. Chikofsky 
Address: Baltimore MD  Cambridge Massachusetts 02139  
Note: This is a deliberately controversial paper presented in a confrontational manner in the hope that it will trigger lively discussion. The views expressed are those of the authors and not necessarily those of their employers or funders. Submitted to Working Conference on Reverse  
Date: 93-02 February 10, 1993  May 1993.  
Affiliation: Mitsubishi Electric Research Laboratories Cambridge Research Center  Engineering,  201 Broadway  
Pubnum: Technical Report  
Abstract: Driven by the economic importance of maintaining and improving the enormous base of existing software systems, the reverse engineering of software has been of rapidly growing interest over the past decade. More and more commercial software tools support aspects of reverse engineering, and more and more researchers in academic and industrial organizations are addressing themselves to the fundamental problems of reverse engineering. In the best of all worlds, we researchers on reverse engineering would be working together toward clear goals of great economic importance. Unfortunately, it appears that we are mostly just groping around in a swamp, each looking for a bit of dry ground (whether or not it actually leads out of the swamp), and running into each other only occasionally. If we are to make rapid and effective joint progress, a number of improvements need to be made in the way we are pursuing research. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Babb, et al., </author> <title> "Workshop on Models and Languages for Software Specification and Design", </title> <journal> IEEE Computer, </journal> <volume> 18(3) </volume> <pages> 103-108, </pages> <month> March </month> <year> 1985. </year>
Reference-contexts: The importance of this can be seen in other fields. For example, the ongoing series of International Workshops on Software Specification and Design (proceedings available form IEEE Press) has made very good use of standard specification problems (the university library database problem and the elevator control problem) <ref> [1] </ref> as a means of comparing different specification languages and specification tools.
Reference: [2] <author> E.J. Chikofsky & J.H. </author> <title> Cross, "Reverse Engineering and Design Recovery: a Taxonomy", </title> <journal> IEEE Software, </journal> <pages> 13-17, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: We would all be better off with a standard set of terminology, almost no matter what the definitions are. We should all be willing to give up some of our favorite definitions for the greater goal of easy common understanding. A start toward standardization was made by <ref> [2] </ref>, which proposes standard definitions for six key terms (forward engineering, reverse engineering, redocumentation, design recovery, restructuring, and reengineering). However, much more needs to be done, both in encouraging adoption of standard definitions by the research community and in defining more terms.
Reference: [3] <author> J.H. </author> <title> Cross II, "Message from the Chair", Reverse Engineering Newsletter, </title> <address> (4):1, </address> <month> January </month> <year> 1993. </year>
Reference-contexts: Further work on standardized terminology is being carried out by the IEEE Computer Society, Technical Committee on Software Engineering, Subcommittee on Reverse Engineering. They are working toward publishing an enlarged set of definitions, however, this is not yet complete <ref> [3] </ref>. Reverse Engineering Challenges 5 As a specific example of the terminological problems we face, consider the Workshop on Artificial Intelligence and Automated Program Understanding that was held in conjunction with AAAI-92 in July of 1992.
Reference: [4] <author> C.T. Hemphill, J.J. Godfrey, & G.R. Doddington, </author> <title> "The ATIS Spoken Language Systems Pilot Corpus", </title> <booktitle> DARPA Speech and Natural Language Workshop, </booktitle> <address> Hidden Valley PA, </address> <month> June </month> <year> 1990. </year>
Reference-contexts: A more relevant example of the power of standard problems comes from the DARPA spoken language research community. Over the past several years they have compiled a huge store of data about the task of providing an airline travel information system <ref> [4] </ref> and are using this as the basis for comparing research systems that understand spoken utterances. The data includes spoken utterances, the sentences they correspond to, and what the sentences mean.
References-found: 4

