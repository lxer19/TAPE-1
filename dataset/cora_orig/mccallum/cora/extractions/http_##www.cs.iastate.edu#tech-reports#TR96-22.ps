URL: http://www.cs.iastate.edu/tech-reports/TR96-22.ps
Refering-URL: http://www.cs.iastate.edu/tech-reports/catalog.html
Root-URL: http://www.cs.iastate.edu
Title: Subclasses of Formalized Data Flow Diagrams: Monogeneous, Linear, and Topologically Free Choice RDFD's Keywords: Decidability
Author: Jurgen Symanzik and Albert L. Baker Jurgen Symanzik and Albert L. Baker. 
Degree: All rights reserved.  
Address: 226 Atanasoff Hall  Ames, Iowa 50011-1040, USA  
Affiliation: Department of Computer Science  Iowa State University  
Note: c Copyright 1996 by  
Date: December 1996  
Pubnum: TR #96-22  
Abstract-found: 0
Intro-found: 0
Reference: [BR76] <author> G. Berthelot and G. Roucairol. </author> <title> Reduction of Petri-Nets. </title> <editor> In A. Mazurkiewicz, editor, </editor> <booktitle> Lecture Notes in Computer Science Vol. 45: Mathematical Foundations of Computer Science 1976: Proceedings, 5th Symposium, </booktitle> <address> Gdansk, </address> <month> September </month> <year> 1976, </year> <pages> pages 202-207, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1976. </year>
Reference-contexts: Another interesting approach would be the extension of a method well-known for Petri Nets | the reduction of the number of places of the Petri Net (e. g., <ref> [BR76] </ref>) | towards subclasses of RDFD's/FIFO Petri Nets with the intent to solve decidability questions more efficiently. Finally, we must admit that there was no effort made so far that deals with the complexity and efficiency of the decidability algorithms.
Reference: [CF87] <author> A. Choquet and A. Finkel. </author> <title> Simulation of Linear FIFO Nets by a new Class of Petri Nets. </title> <institution> Universite de Paris-Sud, Centre d'Orsay, Laboratoire de Recherche en Informatique, Bat. 490, 91405 Orsay (France), Rapport de Recherche No. </institution> <month> 324, Jan </month> <year> 1987. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], <ref> [CF87] </ref>, [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., <ref> [CF87] </ref>, [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A.
Reference: [Fan92] <author> J. Fanchon. </author> <title> A FIFO-Net Model for Processes with Asynchronous Communication. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Lecture Notes in Computer Science Vol. 609: Advances in Petri Nets 1992, </booktitle> <pages> pages 152-178, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1992. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and <ref> [Fan92] </ref>. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88].
Reference: [FC88] <author> A. Finkel and A. Choquet. </author> <title> FIFO Nets Without Order Deadlock. </title> <journal> Acta Informatica, </journal> <volume> 25(1) </volume> <pages> 15-36, </pages> <year> 1988. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], <ref> [FC88] </ref>, [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], <ref> [FC88] </ref>, [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. <p> Therefore, the following holds for the reachability set of (F P N; M 0 ; SM ): Topologically Free Choice FIFO Petri Nets In this part, we follow the notation in <ref> [FC88] </ref>. Definition (1.2.5.8): Let (F P N; M 0 ) be a marked FIFO Petri Net. <p> M 0 (~xt &gt; holds, where M 0 = (fl initial ), t = t ((b; a; j)), and ~x = t (s). 1.3.3 Topologically Free Choice RDFD's Our definitions of Topologically Free Choice RDFD's are related to the definitions of Topologically Free Choice FIFO Petri Nets as given in <ref> [FC88] </ref>, summarized in Subsection 1.2.5. Definition (1.3.3.1): Let f 2 F be a flow of an FDFD.
Reference: [Fin84] <author> A. Finkel. </author> <title> Petri Nets and Monogeneous FIFO Nets. </title> <journal> Bulletin of the European Association of Theoretical Computer Science, </journal> <volume> 23 </volume> <pages> 28-31, </pages> <year> 1984. </year>
Reference-contexts: However, there exist subclasses of another computational model with the computational power of Turing Machines, FIFO Petri Nets (introduced in [MM81]), for which decidability problems can be solved. Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], <ref> [Fin84] </ref>, [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> following names for decidabilty problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], <ref> [Fin84] </ref>, [MF85], [Fin86], [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. <p> Unfortunately, there exists no common understanding of these terms in the literature. In [Rou87] for example, the term monogeneous is used instead of strictly monogeneous and semi-monogeneous is used instead of monogeneous. Even more confusing, in [Sta83] and <ref> [Fin84] </ref> the term monogeneous is used for the weaker structurally monogeneous. While undecidable in the general case, [Fin86] provides many sufficient and necessary conditions for a FIFO Petri Net to be monogeneous. Linear FIFO Petri Nets In this part, we follow the notation in [FR88]. <p> Without giving a definition of a Petri Net (see [Pet81], for example), we state the next corollary: Corollary (1.3.1.8): Every Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) PFF-RDFD can be simulated by a deterministic Petri Net. Proof: In [Sta83] and <ref> [Fin84] </ref> it is shown that every Structurally Monogeneous FIFO Petri Net can be simulated by a labelled Petri Net. 2 In [FR88] it is shown that every Monogeneous FIFO Petri Net can be simulated by a deterministic Petri Net.
Reference: [Fin86] <author> A. Finkel. </author> <title> Structuration des Systemes de Transitions | Applications au Controle du Par-allelisme par Files FIFO. </title> <institution> These Science, Universite de Paris-Sud, Centre d'Orsay, </institution> <year> 1986. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], <ref> [Fin86] </ref>, [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> for decidabilty problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], <ref> [Fin86] </ref>, [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. <p> Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], <ref> [Fin86] </ref>, [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. <p> theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], <ref> [Fin86] </ref>, [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. Let x and y be words in L. x is called a left factor of y, x y in symbols, if 9 word z 2 A fl : xz = y. <p> In [Rou87] for example, the term monogeneous is used instead of strictly monogeneous and semi-monogeneous is used instead of monogeneous. Even more confusing, in [Sta83] and [Fin84] the term monogeneous is used for the weaker structurally monogeneous. While undecidable in the general case, <ref> [Fin86] </ref> provides many sufficient and necessary conditions for a FIFO Petri Net to be monogeneous. Linear FIFO Petri Nets In this part, we follow the notation in [FR88]. Definition (1.2.5.4): Let A be a finite alphabet. <p> that will generate a recursive representation of C (F DF D; fl initial )? Regularity Problem (RegP): Is FS (F DF D; fl initial ) regular? 1.3.1 Monogeneous (PFF-)RDFD's Our definitions of Monogeneous (PFF-)RDFD's are related to the definitions of monogeneous languages and Monogeneous FIFO Petri Nets as given in <ref> [Fin86] </ref> and [FR88], summarized in Subsection 1.2.5. 13 Definition (1.3.1.1): For each flow f 2 F of an FDFD, we define I f : (B fi fC; P g fi IN ) fi (BubbleMode fi Read fi FlowState) ! OBJECTS [ f&lt;&gt;g such that I f ((b; a; j); (bm; r;
Reference: [FM82] <author> A. Finkel and G. Memmi. </author> <title> FIFO Nets: A New Model of Parallel Computation. In A.B. Cremers and H.P. Kriegel, </title> <editor> editors, </editor> <booktitle> Lecture Notes in Computer Science Vol. 145: Theoretical Computer Science: 6th GI-Conference, </booktitle> <address> Dortmund, </address> <month> January </month> <year> 1983, </year> <pages> pages 111-121, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1982. </year>
Reference-contexts: However, there exist subclasses of another computational model with the computational power of Turing Machines, FIFO Petri Nets (introduced in [MM81]), for which decidability problems can be solved. Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in <ref> [FM82] </ref>, [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88].
Reference: [FR85] <author> M.P. Fle and G. Roucairol. </author> <title> Fair Serializability of Iterated Transactions Using FIFO-Nets. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Lecture Notes in Computer Science Vol. 188: Advances in Petri Nets 1984, </booktitle> <pages> pages 154-168, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1985. </year> <month> 32 </month>
Reference-contexts: However, there exist subclasses of another computational model with the computational power of Turing Machines, FIFO Petri Nets (introduced in [MM81]), for which decidability problems can be solved. Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], <ref> [FR85] </ref>, [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88].
Reference: [FR88] <author> A. Finkel and L. Rosier. </author> <title> A Survey on the Decidability Questions for Classes of FIFO Nets. </title> <editor> In G. Rozenberg, editor, </editor> <booktitle> Lecture Notes in Computer Science Vol. 340: Advances in Petri Nets 1988, </booktitle> <pages> pages 106-132, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1988. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], <ref> [FR88] </ref>, and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], <ref> [FR88] </ref>, and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. There, it was established which decidability problems can be solved for which subclasses of FIFO Petri Nets typically considered in the literature, that is, Monogeneous FIFO Petri Nets, Linear FIFO Petri Nets, and Topologically Free Choice FIFO Petri Nets. <p> The set of markings that are reachable from M 0 is called reachability set and it is denoted by Acc (F P N; M 0 ). In addition, the following two definitions from <ref> [FR88] </ref> are used within this paper: Definition (1.2.3.4): Let R (F P N; M 0 ) denote the set of all markings that are reachable from M 0 , i. e., R (F P N; M 0 ) = fM j 9x 2 T fl : M 0 (x &gt; M <p> Therefore, we denote by F S (F P N; M 0 ) what is denoted by L (F P N; M 0 ) in <ref> [FR88] </ref> and we denote by RS (F P N; M 0 ) what is denoted by R (F P N; M 0 ) in [FR88] and by Acc (F P N; M 0 ) in [Rou87]. <p> Therefore, we denote by F S (F P N; M 0 ) what is denoted by L (F P N; M 0 ) in <ref> [FR88] </ref> and we denote by RS (F P N; M 0 ) what is denoted by R (F P N; M 0 ) in [FR88] and by Acc (F P N; M 0 ) in [Rou87]. <p> (F P N; M 0 ) is defined as L I (F P N; M 0 ; p) = h p (F S (F P N; M 0 )) with h p (t) = F (t; p). 1.2.4 Decidability Problems for FIFO Petri Nets The following definition is due to <ref> [FR88] </ref>. <p> ? Center Problem (CP): Is there an algorithm that will generate a recursive representation of C (F P N; M 0 )? Regularity Problem (RegP): Is F S (F P N; M 0 ) regular? Unfortunately, names for decidability problems for computation systems in [KM82] and FIFO Petri Nets in <ref> [FR88] </ref> differ. Other terms can be found within the literature. <p> problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], <ref> [FR88] </ref>), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. <p> Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], <ref> [FR88] </ref>), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. <p> 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], <ref> [FR88] </ref>), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. <p> to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], [Rou87], <ref> [FR88] </ref>), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. Let x and y be words in L. x is called a left factor of y, x y in symbols, if 9 word z 2 A fl : xz = y. <p> While undecidable in the general case, [Fin86] provides many sufficient and necessary conditions for a FIFO Petri Net to be monogeneous. Linear FIFO Petri Nets In this part, we follow the notation in <ref> [FR88] </ref>. Definition (1.2.5.4): Let A be a finite alphabet. <p> generate a recursive representation of C (F DF D; fl initial )? Regularity Problem (RegP): Is FS (F DF D; fl initial ) regular? 1.3.1 Monogeneous (PFF-)RDFD's Our definitions of Monogeneous (PFF-)RDFD's are related to the definitions of monogeneous languages and Monogeneous FIFO Petri Nets as given in [Fin86] and <ref> [FR88] </ref>, summarized in Subsection 1.2.5. 13 Definition (1.3.1.1): For each flow f 2 F of an FDFD, we define I f : (B fi fC; P g fi IN ) fi (BubbleMode fi Read fi FlowState) ! OBJECTS [ f&lt;&gt;g such that I f ((b; a; j); (bm; r; fs)) = <p> The center of a Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) PFF-RDFD is effectively realizable, i. e., the CP is decidable. Proof: All problems are decidable with respect to Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) FIFO Petri Nets ([Fin86], <ref> [FR88] </ref>). <p> Proof: In [Sta83] and [Fin84] it is shown that every Structurally Monogeneous FIFO Petri Net can be simulated by a labelled Petri Net. 2 In <ref> [FR88] </ref> it is shown that every Monogeneous FIFO Petri Net can be simulated by a deterministic Petri Net. Therefore, we can simulate any given Monongeneous PFF-RDFD by a Monogeneous FIFO Petri Net which is then simulated by a Petri Net. <p> Therefore, we immediately have solution techniques to answer related questions for Mono-geneous PFF-RDFD's. 1.3.2 Linear RDFD's Our definitions of Linear RDFD's are related to the definitions of Linear FIFO Petri Nets as given in <ref> [FR88] </ref>, summarized in Subsection 1.2.5. Definition (1.3.2.1): Let f 2 F be a flow of an FDFD. f is called linear if its input language is bounded.
Reference: [KM82] <author> T. Kasai and R.E. Miller. </author> <title> Homomorphisms between Models of Parallel Computation. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 25 </volume> <pages> 285-331, </pages> <year> 1982. </year>
Reference-contexts: From [SB96a] we know that every RDFD can be simulated by a FIFO Petri Net with respect to an isomorphism h. We will show that this isomorphism h actually maps Monogeneous persistent flow-free RDFD's and Linear RDFD's onto subclasses of FIFO Petri Nets of the same names. Moreover, from <ref> [KM82] </ref> we know that isomorphisms preserve many decidability problems. Therefore, we can conclude that a problem that is decidable for a subclass of FIFO Petri Nets is also decidable for the related subclass of FDFD's. <p> Unfortunately, our isomorphism h does not map (Extended) Topologically Free Choice RDFD's to (Extended) Topologically Free Choice FIFO Petri Nets. We finish this paper with a summary on possible future research in Section 1.4. 3 1.2 Definitions In the next two subsections, we summarize definitions and results from <ref> [KM82] </ref>. Please refer to this work for a more detailed explanation of symbols and for additional definitions. A short summary of [KM82] is given in [SB96a]. We assume that the reader is familiar with [SB96a] since our notations, definitions, and proofs of theorems are closely related to this reference. <p> We finish this paper with a summary on possible future research in Section 1.4. 3 1.2 Definitions In the next two subsections, we summarize definitions and results from <ref> [KM82] </ref>. Please refer to this work for a more detailed explanation of symbols and for additional definitions. A short summary of [KM82] is given in [SB96a]. We assume that the reader is familiar with [SB96a] since our notations, definitions, and proofs of theorems are closely related to this reference. In Subsections 1.2.3 and 1.2.4, we summarize definitions for FIFO Petri Nets and related decidability problems. <p> Proof: Proofs are given in <ref> [KM82] </ref>, Section 4. It should be noted that an isomorphism h is also a bijective (hence injective, surjective, hence spanning), length preserving, and principal homomorphism. <p> fl such that M (xt &gt; ? Center Problem (CP): Is there an algorithm that will generate a recursive representation of C (F P N; M 0 )? Regularity Problem (RegP): Is F S (F P N; M 0 ) regular? Unfortunately, names for decidability problems for computation systems in <ref> [KM82] </ref> and FIFO Petri Nets in [FR88] differ. Other terms can be found within the literature.
Reference: [LWBL96] <author> G.T. Leavens, T. Wahls, A.L. Baker, and K. Lyle. </author> <title> An Operational Semantics of Firing Rules for Structured Analysis Style Data Flow Diagrams. </title> <type> Technical Report 93-28d, </type> <institution> Iowa State University, Department of Computer Science, 226 Atanasoff Hall, Ames, Iowa 50011, </institution> <month> December </month> <year> 1993, </year> <note> revised, July 1996. Available by anonymous ftp from ftp.cs.iastate.edu or by e-mail from almanac@cs.iastate.edu. </note>
Reference-contexts: This means that problems where it is known that they can (not) be solved for a subclass of FIFO Petri Nets it follows immediately that the same problems can (not) be solved for the correspondingly named subclass of FDFD's. 2 1.1 Introduction Formalized Data Flow Diagrams (FDFD's) as given in <ref> [LWBL96] </ref> are a relatively new approach to the formalization of traditional Data Flow Diagrams (DFD's). Recently it has been formally established that FDFD's are Turing equivalent ([SB96a]) and their non-atomic components, e. g., stores and persistent flows, are not essential to the expressive power of FDFD's ([SB96b]). <p> two conditions are satisfied: * (F P N; M 0 ) is normalized. * 8p 2 P : j A p j&gt; 1 ) p satisfies the Hack's condition. 1.3 Subclasses of Formalized Data Flow Diagrams We assume that the reader is familiar with the concept of FDFD's given in <ref> [LWBL96] </ref> and [SB96a]. A short summary of [LWBL96] and definitions of Reduced Data Flow Diagrams (RDFD's) and persistent flow-free Reduced Data Flow Diagrams (PFF-RDFD's) is given in [SB96a] as well. <p> N; M 0 ) is normalized. * 8p 2 P : j A p j&gt; 1 ) p satisfies the Hack's condition. 1.3 Subclasses of Formalized Data Flow Diagrams We assume that the reader is familiar with the concept of FDFD's given in <ref> [LWBL96] </ref> and [SB96a]. A short summary of [LWBL96] and definitions of Reduced Data Flow Diagrams (RDFD's) and persistent flow-free Reduced Data Flow Diagrams (PFF-RDFD's) is given in [SB96a] as well. <p> This 14 limited behavior of the FDFD is caused by the built-in restrictions on Produce (see <ref> [LWBL96] </ref>) that do not allow expressions such as Out (u f ; f; X)(Out (u f ; f; X)(fs; r)), i. e., each outflow f can be addressed at most once in a single Produce case of bubble X. <p> Therefore, (S) is a SSTM of the FIFO Petri Net since S is a SSTS of the L-RDFD. 24 Formally, we can incorporate the notation of a Structured Set of Terminal States S into the transitions rules (see <ref> [LWBL96] </ref>, [SB96a]) that are allowed between configurations of FDFD's.
Reference: [MF85] <author> G. Memmi and A. Finkel. </author> <title> An Introduction to FIFO Nets | Monogeneous Nets: A Subclass of FIFO Nets. </title> <booktitle> Theoretical Computer Science, </booktitle> <address> 35(2-3):191-214, </address> <year> 1985. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], <ref> [MF85] </ref>, [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> names for decidabilty problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], <ref> [MF85] </ref>, [Fin86], [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet.
Reference: [MM81] <author> R. Martin and G. Memmi. </author> <title> Specification and Validation of Sequential Processes Communicating by FIFO Channels. </title> <booktitle> I.E.E. Conference Publication No. 198: Fourth International Conference on Software Engineering for Telecommunication Switching Systems, Warwick, </booktitle> <month> July </month> <year> 1981, </year> <pages> pages 54-57, </pages> <year> 1981. </year>
Reference-contexts: Unfortunately, this equivalence to Turing Machines prevents the analytical solution of decidability problems (e. g., reachability, deadlock, liveness) for FDFD's. However, there exist subclasses of another computational model with the computational power of Turing Machines, FIFO Petri Nets (introduced in <ref> [MM81] </ref>), for which decidability problems can be solved. Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. <p> It should be noted that an isomorphism h is also a bijective (hence injective, surjective, hence spanning), length preserving, and principal homomorphism. Thus, an isomorphism h preserves decidability problems (i) to (vi). 5 1.2.3 FIFO Petri Nets In some sense, FIFO Petri Nets (introduced in <ref> [MM81] </ref>) are Petri Nets (see [Pet81], for example) where places contain words instead of tokens and arcs are labelled by words. More formally, we make use of the definition of FIFO Petri Nets as given in [Rou87].
Reference: [Pet81] <author> J.L. Peterson. </author> <title> Petri Net Theory and the Modeling of Systems. </title> <publisher> Prentice-Hall, Inc., </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1981. </year>
Reference-contexts: Thus, an isomorphism h preserves decidability problems (i) to (vi). 5 1.2.3 FIFO Petri Nets In some sense, FIFO Petri Nets (introduced in [MM81]) are Petri Nets (see <ref> [Pet81] </ref>, for example) where places contain words instead of tokens and arcs are labelled by words. More formally, we make use of the definition of FIFO Petri Nets as given in [Rou87]. <p> Since t is bijective, F S (PFF-RDFD; fl initial ) is regular , t (F S (F P N; M 0 )) is regular where M 0 = (fl initial ). Without giving a definition of a Petri Net (see <ref> [Pet81] </ref>, for example), we state the next corollary: Corollary (1.3.1.8): Every Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) PFF-RDFD can be simulated by a deterministic Petri Net.
Reference: [Rou87] <editor> G. Roucairol. FIFO-Nets. In W. Brauer, W. Reisig, and G. Rozenberg, editors, </editor> <booktitle> Lecture Notes in Computer Science Vol. </booktitle> <month> 254: </month> <title> Petri Nets: Central Models and Their Properties, </title> <booktitle> Advances in Petri Nets 1986, Part I, Proceedings of an Advanced Course, </booktitle> <address> Bad Honnef, </address> <month> September </month> <year> 1986, </year> <pages> pages 436-459, </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, </address> <year> 1987. </year>
Reference-contexts: Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], [Sta83], [Fin84], [FR85], [MF85], [Fin86], <ref> [Rou87] </ref>, [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> More formally, we make use of the definition of FIFO Petri Nets as given in <ref> [Rou87] </ref>. <p> M 0 ) what is denoted by L (F P N; M 0 ) in [FR88] and we denote by RS (F P N; M 0 ) what is denoted by R (F P N; M 0 ) in [FR88] and by Acc (F P N; M 0 ) in <ref> [Rou87] </ref>. <p> decidabilty problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], <ref> [Rou87] </ref>, [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. <p> QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., [Sta83], [Fin84], [MF85], [Fin86], <ref> [Rou87] </ref>, [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. Definition (1.2.5.1): Let A be a finite alphabet. Let L be a language on A. <p> Unfortunately, there exists no common understanding of these terms in the literature. In <ref> [Rou87] </ref> for example, the term monogeneous is used instead of strictly monogeneous and semi-monogeneous is used instead of monogeneous. Even more confusing, in [Sta83] and [Fin84] the term monogeneous is used for the weaker structurally monogeneous.
Reference: [SB96a] <author> J. Symanzik and A.L. Baker. </author> <title> Formalized Data Flow Diagrams and Their Relation to Other Computational Models. </title> <type> Technical Report 96-20, </type> <institution> Iowa State University, Department of Computer Science, 226 Atanasoff Hall, Ames, Iowa 50011, </institution> <month> December </month> <year> 1996. </year> <note> Available by anonymous ftp from ftp.cs.iastate.edu or by e-mail from almanac@cs.iastate.edu. </note>
Reference-contexts: In this paper, we first summarize required definitions and main results for computation systems, FIFO Petri Nets, and decidability problems in Section 1.2. In Section 1.3, we define subclasses of Reduced Data Flow Diagrams (RDFD's), i. e., Monogeneous RDFD's, Linear RDFD's, and Topologically Free Choice RDFD's. From <ref> [SB96a] </ref> we know that every RDFD can be simulated by a FIFO Petri Net with respect to an isomorphism h. We will show that this isomorphism h actually maps Monogeneous persistent flow-free RDFD's and Linear RDFD's onto subclasses of FIFO Petri Nets of the same names. <p> Please refer to this work for a more detailed explanation of symbols and for additional definitions. A short summary of [KM82] is given in <ref> [SB96a] </ref>. We assume that the reader is familiar with [SB96a] since our notations, definitions, and proofs of theorems are closely related to this reference. In Subsections 1.2.3 and 1.2.4, we summarize definitions for FIFO Petri Nets and related decidability problems. <p> Please refer to this work for a more detailed explanation of symbols and for additional definitions. A short summary of [KM82] is given in <ref> [SB96a] </ref>. We assume that the reader is familiar with [SB96a] since our notations, definitions, and proofs of theorems are closely related to this reference. In Subsections 1.2.3 and 1.2.4, we summarize definitions for FIFO Petri Nets and related decidability problems. <p> are satisfied: * (F P N; M 0 ) is normalized. * 8p 2 P : j A p j&gt; 1 ) p satisfies the Hack's condition. 1.3 Subclasses of Formalized Data Flow Diagrams We assume that the reader is familiar with the concept of FDFD's given in [LWBL96] and <ref> [SB96a] </ref>. A short summary of [LWBL96] and definitions of Reduced Data Flow Diagrams (RDFD's) and persistent flow-free Reduced Data Flow Diagrams (PFF-RDFD's) is given in [SB96a] as well. <p> Hack's condition. 1.3 Subclasses of Formalized Data Flow Diagrams We assume that the reader is familiar with the concept of FDFD's given in [LWBL96] and <ref> [SB96a] </ref>. A short summary of [LWBL96] and definitions of Reduced Data Flow Diagrams (RDFD's) and persistent flow-free Reduced Data Flow Diagrams (PFF-RDFD's) is given in [SB96a] as well. <p> Overall, the PFF-RDFD is strictly monogeneous. Theorem (1.3.1.5): Every Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) PFF-RDFD can be simulated by a Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) FIFO Petri Net with respect to an isomorphism h. Proof: In <ref> [SB96a] </ref> it has been shown that every PFF-RDFD can be simulated by a FIFO Petri Net with respect to an isomorphism h. <p> Therefore, we only have to show that this isomorphism h maps every monogeneous (structurally monogeneous, strictly monogeneous, respectively) flow f 2 F of the PFF-RDFD to a monogeneous (structurally monogeneous, strictly monogeneous, respectively) place of the FIFO Petri Net. First, we want to recall from <ref> [SB96a] </ref> that the set of places P F P N of the related FIFO Petri Net can be split into three disjoint subsets, (i) representing the flows of the PFF-RDFD, (ii) the idle working mode of the bubble, and (iii) the working working mode (including the values that have been read) <p> : ; b i;working:m i j Consume (b i ) is of type C 2 , m i = (# of cases in Consume (b i ))g Now, we consider each of the subsets of places in P F P N , with h given as in Theorem (3.1.1) in <ref> [SB96a] </ref>: (i) p 2 ff 1 ; : : : ; f f g: Since M F P N (p) = fs (p) by definition, the contents of each place of the FIFO Petri Net is identical to the contents of the corresponding flow of the PFF-RDFD. <p> Obviously, ~ I last = ~ I f = Lef tF actor ((01) fl ), i. e., flows last and f are strictly monogeneous. Overall, the RDFD is strictly monogeneous. The equivalent FIFO Petri Net constructed according to <ref> [SB96a] </ref> is given in Figure 1.3. <p> Therefore, (S) is a SSTM of the FIFO Petri Net since S is a SSTS of the L-RDFD. 24 Formally, we can incorporate the notation of a Structured Set of Terminal States S into the transitions rules (see [LWBL96], <ref> [SB96a] </ref>) that are allowed between configurations of FDFD's. <p> According to <ref> [SB96a] </ref>, the given RDFD transforms into the following marked FIFO Petri Net F P N = ((P F P N ; T F P N ; B F P N ; F F P N ; Q F P N ); M 0;F P N ): P F P N =
Reference: [SB96b] <author> J. Symanzik and A.L. Baker. </author> <title> Non-Atomic Components of Data Flow Diagrams: Stores, Persistent Flows, and Tests for Empty Flows. </title> <type> Technical Report 96-21, </type> <institution> Iowa State University, Department of Computer Science, 226 Atanasoff Hall, Ames, </institution> <address> Iowa 50011, De 33 cember 1996. </address> <note> Available by anonymous ftp from ftp.cs.iastate.edu or by e-mail from almanac@cs.iastate.edu. </note>
Reference: [Sta83] <author> P.H. Starke. </author> <title> Monogenous FIFO-Nets and Petri-Nets are Equivalent. </title> <journal> Bulletin of the Euro-pean Association of Theoretical Computer Science, </journal> <volume> 21 </volume> <pages> 68-77, </pages> <year> 1983. </year>
Reference-contexts: However, there exist subclasses of another computational model with the computational power of Turing Machines, FIFO Petri Nets (introduced in [MM81]), for which decidability problems can be solved. Many variations and restrictions of the basic model of FIFO Petri Nets have been considered, e. g., in [FM82], <ref> [Sta83] </ref>, [Fin84], [FR85], [MF85], [Fin86], [Rou87], [CF87], [FC88], [FR88], and [Fan92]. Probably the most important work done with respect to this current paper was the survey on decidability questions for subclasses of FIFO Petri Nets in [FR88]. <p> the following names for decidabilty problems are identical: 7 Computation Sytsem FIFO Petri Net Reachability RP Deadlock PDP Termination TDP Finiteness BP Equivalence Liveness LP Exceedability QLP RegP 1.2.5 Subclasses of FIFO Petri Nets In this subsection, we summarize definitions and theorems related to Monogeneous FIFO Petri Nets (e. g., <ref> [Sta83] </ref>, [Fin84], [MF85], [Fin86], [Rou87], [FR88]), Linear FIFO Petri Nets (e. g., [CF87], [FR88]), and and (Extended) Topologically Free Choice FIFO Petri Nets (e. g., [Fin86], [Rou87], [FC88], [FR88]). Monogeneous FIFO Petri Nets In this part, we follow the notation in [Fin86] and [FR88]. <p> Unfortunately, there exists no common understanding of these terms in the literature. In [Rou87] for example, the term monogeneous is used instead of strictly monogeneous and semi-monogeneous is used instead of monogeneous. Even more confusing, in <ref> [Sta83] </ref> and [Fin84] the term monogeneous is used for the weaker structurally monogeneous. While undecidable in the general case, [Fin86] provides many sufficient and necessary conditions for a FIFO Petri Net to be monogeneous. Linear FIFO Petri Nets In this part, we follow the notation in [FR88]. <p> Without giving a definition of a Petri Net (see [Pet81], for example), we state the next corollary: Corollary (1.3.1.8): Every Monogeneous (Structurally Monogeneous, Strictly Monogeneous, respectively) PFF-RDFD can be simulated by a deterministic Petri Net. Proof: In <ref> [Sta83] </ref> and [Fin84] it is shown that every Structurally Monogeneous FIFO Petri Net can be simulated by a labelled Petri Net. 2 In [FR88] it is shown that every Monogeneous FIFO Petri Net can be simulated by a deterministic Petri Net.
Reference: [Wah95] <author> T. Wahls. </author> <title> On the Execution of High Level Formal Specifications. </title> <type> PhD Thesis, </type> <institution> Iowa State University, Ames, Iowa, </institution> <month> 50011, </month> <year> 1995. </year>
Reference-contexts: There are two obvious advantages of having a SSTS for FDFD's (and not only for L-RDFD's): * A computerized evaluation of a given FDFD, for example by using the software described in <ref> [Wah95] </ref>, may be restricted to those states that are of particular interest to the system analyst. * The introduction of an SSTS is an additional approach to modify the qualitative behavior of an FDFD. For example, consider an FDFD where a communication protocol with erraneous channels has been modeled.
References-found: 19

