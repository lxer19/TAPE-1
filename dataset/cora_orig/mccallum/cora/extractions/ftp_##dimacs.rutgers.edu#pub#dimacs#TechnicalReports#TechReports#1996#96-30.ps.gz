URL: ftp://dimacs.rutgers.edu/pub/dimacs/TechnicalReports/TechReports/1996/96-30.ps.gz
Refering-URL: http://dimacs.rutgers.edu/TechnicalReports/1996.html
Root-URL: http://www.cs.rutgers.edu
Email: bafna@dimacs.rutgers.edu  muthu@dcs.warwick.ac.uk  ravi+@andrew.cmu.edu  
Title: similarity between RNA strings 1  
Author: by V. Bafna ; S. Muthukrishnan R. Ravi 
Address: P.O. Box 1179 Piscataway, NJ 08855  Coventry, CV47AL, UK  Pittsburgh, PA 15217  
Affiliation: DIMACS Center  Dept. of Computer Science Univ. of Warwick  Graduate School of Industrial Administration Carnegie Mellon University  
Note: Computing  contract STC-8809648. The second author's research was partly supported by ALCOM IT. 2 Postdoctoral fellow DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore. DIMACS is an NSF Science and Technology Center, funded under contract STC-91-19999; and also receives support from the New Jersey Commission on Science and Technology.  
Abstract: DIMACS Technical Report 96-30 July 1996 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Abrahamson. </author> <title> Generalized string matching. </title> <journal> SIAM J. Comp., </journal> <year> 1987, </year> <pages> 1039-1051. </pages>
Reference-contexts: Given a text RNA string t and a pattern RNA string p of length n and m respectively, determine all those positions where p occurs in t, that is, all locations i in t where, 1. Strings match, that is, t [i] t [i + m 1] = p <ref> [1] </ref> p [m], and 2. Secondary structures are identical, that is, for any bonding pair (i + j 1; i + k 1) in t, 0 j &lt; k m 1, (j; k) is a bonding pair in p as well and vice-versa. <p> There are K 1 string mismatches. That is, t [i] t [i + m 1] and p <ref> [1] </ref> p [m] differ in K 1 positions. 2. There are K 2 secondary structures mismatches. <p> Let the match operation between two strings as defined for the SEM problem be denoted by ~ = . Lemma 2.3 The ~ = relation is transitive, that is, if t [i] t [i + k 1] matches p <ref> [1] </ref> p [k], and some prefix p [1] p [j], j &lt; k, matches the suffix of t [i] t [i + k 1], then the string p [1] p [j], matches the suffix of p [1] p [k]. <p> Let the match operation between two strings as defined for the SEM problem be denoted by ~ = . Lemma 2.3 The ~ = relation is transitive, that is, if t [i] t [i + k 1] matches p <ref> [1] </ref> p [k], and some prefix p [1] p [j], j &lt; k, matches the suffix of t [i] t [i + k 1], then the string p [1] p [j], matches the suffix of p [1] p [k]. <p> Lemma 2.3 The ~ = relation is transitive, that is, if t [i] t [i + k 1] matches p <ref> [1] </ref> p [k], and some prefix p [1] p [j], j &lt; k, matches the suffix of t [i] t [i + k 1], then the string p [1] p [j], matches the suffix of p [1] p [k]. Proof: Follows from the definition of the ~ = relation. 2 Now we modify the comparisons in the KMP algorithm to perform SEM. Note that in standard KMP, comparing two locations is merely testing for character equality. <p> is transitive, that is, if t [i] t [i + k 1] matches p <ref> [1] </ref> p [k], and some prefix p [1] p [j], j &lt; k, matches the suffix of t [i] t [i + k 1], then the string p [1] p [j], matches the suffix of p [1] p [k]. Proof: Follows from the definition of the ~ = relation. 2 Now we modify the comparisons in the KMP algorithm to perform SEM. Note that in standard KMP, comparing two locations is merely testing for character equality. <p> However, this is straightforward to verify, given Lemma 2.3 and that in the preprocessing of the pattern in the algorithm using the ~ = operation, the following is maintained: The largest prefix of p <ref> [1] </ref> p [i + 1] that matches its suffix under ~ = is the largest prefix p [1] p [k] of p [1] p [i] that matches p [i k + 1] p [i] and also answers Compare (p [i + 1],p [k + 1]) equal. <p> this is straightforward to verify, given Lemma 2.3 and that in the preprocessing of the pattern in the algorithm using the ~ = operation, the following is maintained: The largest prefix of p <ref> [1] </ref> p [i + 1] that matches its suffix under ~ = is the largest prefix p [1] p [k] of p [1] p [i] that matches p [i k + 1] p [i] and also answers Compare (p [i + 1],p [k + 1]) equal. <p> given Lemma 2.3 and that in the preprocessing of the pattern in the algorithm using the ~ = operation, the following is maintained: The largest prefix of p <ref> [1] </ref> p [i + 1] that matches its suffix under ~ = is the largest prefix p [1] p [k] of p [1] p [i] that matches p [i k + 1] p [i] and also answers Compare (p [i + 1],p [k + 1]) equal. <p> Theorem 2.4 <ref> [1] </ref> The string matching problem with mismatches can be solved in O (n p mpolylogm) time. <p> An alignment of s and t is defined by a 2 fi m 0 matrix A, in which the first row contains s and the second contains t, possibly interspersed with spaces, and for all columns j, either A <ref> [1; j] </ref> 6= ` 0 or A [2; j] 6= ` 0 . For i 2 f1; 2g, define gap [i; j] = j if A [i; j] = ` 0 jfl &lt; j s.t. <p> Following standard terminology, position i in A has a match if A <ref> [1; i] </ref> = A [2; i] 6= ` 0 , an insertion if A [1; i] = ` 0 , a deletion if A [2; i] = ` 0 and a mismatch otherwise. Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j <p> Following standard terminology, position i in A has a match if A <ref> [1; i] </ref> = A [2; i] 6= ` 0 , an insertion if A [1; i] = ` 0 , a deletion if A [2; i] = ` 0 and a mismatch otherwise. Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap [1; j]) 2 S 1 and (i gap [2; i]; j gap [2; <p> if A <ref> [1; i] </ref> = A [2; i] 6= ` 0 , an insertion if A [1; i] = ` 0 , a deletion if A [2; i] = ` 0 and a mismatch otherwise. Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap [1; j]) 2 S 1 and (i gap [2; i]; j gap [2; j]) 2 S 2 . Intuitively, we would like to compute an alignment which maximizes both symbol and base-pair matches. <p> Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap <ref> [1; j] </ref>) 2 S 1 and (i gap [2; i]; j gap [2; j]) 2 S 2 . Intuitively, we would like to compute an alignment which maximizes both symbol and base-pair matches. <p> associated with aligning base-pairs (i; j) with (k; l). - 10 - Definition 3.1 The Global Alignment problem for RNA strings is defined as follows: Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap <ref> [1; i] </ref>]; t [i gap [2; i]]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap [1; j]; i gap [2; i]; j gap [2; j]) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 <p> 3.1 The Global Alignment problem for RNA strings is defined as follows: Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap <ref> [1; i] </ref>]; t [i gap [2; i]]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap [1; j]; i gap [2; i]; j gap [2; j]) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 ) time. <p> problem for RNA strings is defined as follows: Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap [1; i]]; t [i gap [2; i]]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap <ref> [1; j] </ref>; i gap [2; i]; j gap [2; j]) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 ) time. <p> can be extended naturally to RNA strings as follows: Definition 3.3 Let s and t be two RNA strings with structure S 1 and S 2 respectively. s is an RNA-supersequence of t if there exists an alignment A of s and t, such that * for all i, A <ref> [1; i] </ref> = s [i], * for all j, either A [2; j] = ` ` or A [1; j] = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap [2; i]; j gap [2; j]) 2 S 2 implies (i; j) <p> strings with structure S 1 and S 2 respectively. s is an RNA-supersequence of t if there exists an alignment A of s and t, such that * for all i, A [1; i] = s [i], * for all j, either A [2; j] = ` ` or A <ref> [1; j] </ref> = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap [2; i]; j gap [2; j]) 2 S 2 implies (i; j) 2 S 1 . s is an RNA-subsequence of t if t is an RNA-supersequence of s. <p> In fact, it is possible that for the alignment obtained, there exist indices 1 i &lt; j &lt; k &lt; l m + n such that (i gap <ref> [1; i] </ref>; k gap [1; k]) 2 S 1 - 12 - and (j gap [2; j]; l gap [2; l]) 2 S 2 . Clearly a common RNA supersequence must have both base-pairs but they cannot be interleaved because of our assumption of an unknotted structure. <p> In fact, it is possible that for the alignment obtained, there exist indices 1 i &lt; j &lt; k &lt; l m + n such that (i gap [1; i]; k gap <ref> [1; k] </ref>) 2 S 1 - 12 - and (j gap [2; j]; l gap [2; l]) 2 S 2 . Clearly a common RNA supersequence must have both base-pairs but they cannot be interleaved because of our assumption of an unknotted structure. <p> For all 1 i &lt; j m + n, base-pairs i gap [2; i] and j gap [2; j] form a bond in t only if they are complementary and (i gap <ref> [1; i] </ref>; j gap [1; j]) 2 S. We would like to find an alignment that maximizes the sequence similarity score as well as the number of bonds formed in t. The algorithm for computing RNA alignment can be easily modified to accomplish this. Consider the algorithm AlignRNA (fig. 2). <p> For all 1 i &lt; j m + n, base-pairs i gap [2; i] and j gap [2; j] form a bond in t only if they are complementary and (i gap [1; i]; j gap <ref> [1; j] </ref>) 2 S. We would like to find an alignment that maximizes the sequence similarity score as well as the number of bonds formed in t. The algorithm for computing RNA alignment can be easily modified to accomplish this. Consider the algorithm AlignRNA (fig. 2).
Reference: [2] <author> A. Amir and M. Farach. </author> <title> Efficient 2-dimensional Approximate Matching of Non-rectangular Figures. </title> <booktitle> Proc of 2nd Ann ACM Symp on Discrete Algorithms, </booktitle> <year> 1991, </year> <pages> 212-222. </pages>
Reference-contexts: An alignment of s and t is defined by a 2 fi m 0 matrix A, in which the first row contains s and the second contains t, possibly interspersed with spaces, and for all columns j, either A [1; j] 6= ` 0 or A <ref> [2; j] </ref> 6= ` 0 . For i 2 f1; 2g, define gap [i; j] = j if A [i; j] = ` 0 jfl &lt; j s.t. <p> Following standard terminology, position i in A has a match if A [1; i] = A <ref> [2; i] </ref> 6= ` 0 , an insertion if A [1; i] = ` 0 , a deletion if A [2; i] = ` 0 and a mismatch otherwise. <p> Following standard terminology, position i in A has a match if A [1; i] = A <ref> [2; i] </ref> 6= ` 0 , an insertion if A [1; i] = ` 0 , a deletion if A [2; i] = ` 0 and a mismatch otherwise. Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap [1; j]) 2 S 1 and (i gap [2; i]; j gap [2; j]) 2 S 2 . <p> an insertion if A [1; i] = ` 0 , a deletion if A <ref> [2; i] </ref> = ` 0 and a mismatch otherwise. Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap [1; j]) 2 S 1 and (i gap [2; i]; j gap [2; j]) 2 S 2 . Intuitively, we would like to compute an alignment which maximizes both symbol and base-pair matches. Formally, for elements u; v 2 P [f` 0 g, define fl (u; v) to be the similarity score associated with aligning u against v. <p> Additionally, for RNA strings a bonding pair occurs at positions i; j if (i gap [1; i]; j gap [1; j]) 2 S 1 and (i gap [2; i]; j gap <ref> [2; j] </ref>) 2 S 2 . Intuitively, we would like to compute an alignment which maximizes both symbol and base-pair matches. Formally, for elements u; v 2 P [f` 0 g, define fl (u; v) to be the similarity score associated with aligning u against v. <p> j) with (k; l). - 10 - Definition 3.1 The Global Alignment problem for RNA strings is defined as follows: Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap [1; i]]; t [i gap <ref> [2; i] </ref>]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap [1; j]; i gap [2; i]; j gap [2; j]) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 ) time. <p> is defined as follows: Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap [1; i]]; t [i gap <ref> [2; i] </ref>]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap [1; j]; i gap [2; i]; j gap [2; j]) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 ) time. <p> Given RNA strings s and t, compute an alignment A (and the associated function gap) that maxi mizes P 1im 0 fl (s [i gap [1; i]]; t [i gap [2; i]]) + 1i&lt;jm 0 ffi (i gap [1; i]; j gap [1; j]; i gap [2; i]; j gap <ref> [2; j] </ref>) Theorem 3.2 Algorithm AlignRNA (fig. 2) computes the score of an optimum global alignment for Two RNA strings in O (n 2 m 2 ) time. <p> Let s and t be two RNA strings with structure S 1 and S 2 respectively. s is an RNA-supersequence of t if there exists an alignment A of s and t, such that * for all i, A [1; i] = s [i], * for all j, either A <ref> [2; j] </ref> = ` ` or A [1; j] = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap [2; i]; j gap [2; j]) 2 S 2 implies (i; j) 2 S 1 . s is an RNA-subsequence of t if <p> 1 and S 2 respectively. s is an RNA-supersequence of t if there exists an alignment A of s and t, such that * for all i, A [1; i] = s [i], * for all j, either A <ref> [2; j] </ref> = ` ` or A [1; j] = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap [2; i]; j gap [2; j]) 2 S 2 implies (i; j) 2 S 1 . s is an RNA-subsequence of t if t is an RNA-supersequence of s. <p> of s and t, such that * for all i, A [1; i] = s [i], * for all j, either A [2; j] = ` ` or A [1; j] = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap <ref> [2; i] </ref>; j gap [2; j]) 2 S 2 implies (i; j) 2 S 1 . s is an RNA-subsequence of t if t is an RNA-supersequence of s. Definition 3.4 Let s be an RNA string with structure S. <p> such that * for all i, A [1; i] = s [i], * for all j, either A <ref> [2; j] </ref> = ` ` or A [1; j] = A [2; j] (i.e., s is a supersequence of t), and * for all i; j (i gap [2; i]; j gap [2; j]) 2 S 2 implies (i; j) 2 S 1 . s is an RNA-subsequence of t if t is an RNA-supersequence of s. Definition 3.4 Let s be an RNA string with structure S. Define the 'length' of s, denoted by len (s), to be jsj + jSj. <p> In fact, it is possible that for the alignment obtained, there exist indices 1 i &lt; j &lt; k &lt; l m + n such that (i gap [1; i]; k gap [1; k]) 2 S 1 - 12 - and (j gap <ref> [2; j] </ref>; l gap [2; l]) 2 S 2 . Clearly a common RNA supersequence must have both base-pairs but they cannot be interleaved because of our assumption of an unknotted structure. Our algorithm for computing RSCS must therefore enforce this condition. <p> In fact, it is possible that for the alignment obtained, there exist indices 1 i &lt; j &lt; k &lt; l m + n such that (i gap [1; i]; k gap [1; k]) 2 S 1 - 12 - and (j gap [2; j]; l gap <ref> [2; l] </ref>) 2 S 2 . Clearly a common RNA supersequence must have both base-pairs but they cannot be interleaved because of our assumption of an unknotted structure. Our algorithm for computing RSCS must therefore enforce this condition. <p> This approach is useful if we know that the two - 13 - sequences are functionally related and have similar structure. For all 1 i &lt; j m + n, base-pairs i gap <ref> [2; i] </ref> and j gap [2; j] form a bond in t only if they are complementary and (i gap [1; i]; j gap [1; j]) 2 S. <p> This approach is useful if we know that the two - 13 - sequences are functionally related and have similar structure. For all 1 i &lt; j m + n, base-pairs i gap [2; i] and j gap <ref> [2; j] </ref> form a bond in t only if they are complementary and (i gap [1; i]; j gap [1; j]) 2 S. We would like to find an alignment that maximizes the sequence similarity score as well as the number of bonds formed in t.
Reference: [3] <author> D. Eppstein, Z. Galil, R. Giancarlo, </author> <title> and G.F. Italiano, "Sparse dynamic programming I: Linear cost functions," </title> <journal> JACM, </journal> <volume> Vol. 39, No. 3, </volume> <year> 1992, </year> <pages> 519-545. </pages>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [4] <author> D. Eppstein, Z. Galil, R. Giancarlo, </author> <title> and G.F. Italiano, "Sparse dynamic programming II: Convex and concave cost functions," </title> <journal> JACM, </journal> <volume> Vol. 39, No. 3, </volume> <month> 546-567 </month> <year> (1992). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [5] <author> M. Fischer and M. Paterson. </author> <title> String Matching and other Products. </title> <booktitle> SIAM-AMS Proceedings, </booktitle> <volume> Vol. 7, </volume> <pages> 113-125, </pages> <year> 1974. </year>
Reference-contexts: Every position i such that p occurs at i in t and p 0 occurs at i in t 0 corresponds to a position where the RNA-string p is contained in the RNA-string t. The algorithm takes time O (n polylog m) using the bound in <ref> [5] </ref> for exact string matching with wildcards. 2 Theorem 2.2 The SEM problem can be solved in O (n + m) time. Proof: We prove that a simple modification of the Knuth-Morris-Pratt algorithm [9] suffices to solve the SEM problem.
Reference: [6] <author> L. Grate, M. Hebster. R. Hughey, D, Haussler, I. S. Mian and H. Noller, </author> <title> "RNA modeling using Gibbs sampling and stochastic context free grammars," </title> <booktitle> Second Intl. Conf. on Intelligent Systems for Molecular Biology (1994). </booktitle>
Reference-contexts: In particular, we assume that we are given both the sequence and the secondary structure of an RNA string that is closely related to one whose structure is to be predicted. Another related line of work is <ref> [6, 15, 16] </ref> that uses stochastic context-free grammars (with probabilities attached to production rules) to model a family of related RNA strings. These papers also describe procedures for building such grammars given a set of unaligned RNA sequences with no secondary structure known for any member in the set.
Reference: [7] <author> T. Jiang, L. Wang and K. Zhang, </author> <title> "Alignment of trees an alternative to tree edit," </title> <booktitle> Proc. Combinatorial Pattern Matching Conf. </booktitle> <volume> 94, LNCS 807, </volume> <month> 75-86 </month> <year> (1994). </year>
Reference-contexts: Consequently, much of the work on comparing the secondary structures of two RNA strings have been modeled as problems of comparing two trees <ref> [7, 22, 25, 26] </ref>. In this paper, we study several problems in computing the similarity between two RNA strings that take into consideration both the primary sequence and secondary base-pairing information provided with the strings. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers <ref> [7, 22, 25, 26] </ref> addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in [22, 25, 26] while a new notion of tree alignment is proposed and algorithms developed in [7]. <p> Since secondary structures can be represented as trees, there are several papers [7, 22, 25, 26] addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in [22, 25, 26] while a new notion of tree alignment is proposed and algorithms developed in <ref> [7] </ref>. Even though these comparison methods compute distances only between secondary structures, the worst-case running time of estimating this distance (tree edits or alignments) is quadric; the running time of our alignment algorithm that takes in to account both sequence and structure compares favorably with this estimate.
Reference: [8] <author> P. Kilpelainen and H. Mannila, </author> <title> "Query primitives for tree-structured data," </title> <booktitle> Proc. Combinatorial Pattern Matching Conf. </booktitle> <volume> 94, LNCS 807, </volume> <month> 213-225 </month> <year> (1994). </year>
Reference-contexts: In this way, this problem is more closely related to that considered by Sankoff in [17] and described in the previous paragraph. Other related work appears in <ref> [11, 18, 19, 8] </ref>. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure. <p> The third article [19] uses edit distance data between several trees representing RNA secondary structures to build a phylogenetic tree illustrating the relationship between these structures. Finally, <ref> [8] </ref> considers query primitives for data that is tree-structured that are less restricted than exact tree-pattern matching and analyzes the complexity of implementing such primitives. Thus, this work is more closely related to work on distances between trees.
Reference: [9] <author> D. E. Knuth, J. H. Morris, and V. R. Pratt. </author> <title> Fast pattern matching in strings. </title> <journal> SIAM J. Computing, </journal> <volume> 6 </volume> <pages> 323-350, </pages> <year> 1977. </year> <month> - 16 </month> - 
Reference-contexts: Theorem 2.1 The CEM problem can be solved in O (n polylog m) time. Proof: Our algorithm works as follows. First we perform standard string matching (using, say <ref> [9] </ref>) to find all locations where p does not occur in t since the strings mismatch. This takes O (n + m) time. Next we look for mismatches in the secondary structure. We construct an instance of string matching with wild cards to solve this problem. <p> The algorithm takes time O (n polylog m) using the bound in [5] for exact string matching with wildcards. 2 Theorem 2.2 The SEM problem can be solved in O (n + m) time. Proof: We prove that a simple modification of the Knuth-Morris-Pratt algorithm <ref> [9] </ref> suffices to solve the SEM problem. Let the match operation between two strings as defined for the SEM problem be denoted by ~ = .
Reference: [10] <author> L. L. Larmore and B. Schieber, </author> <title> "On-line dynamic programming with applications to the prediction of RNA secondary structure," </title> <booktitle> Prof. First ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <month> 503-512 </month> <year> (1990). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [11] <author> S-Y Le, J. Owens, R. Nussinov, J-H. Chen, B. Shapiro and J. V. Maizel, </author> <title> "RNA secondary structures: comparison and determination of frequently recurring substructures by consensus," </title> <journal> CABIOS Vol. </journal> <volume> 5, No. 3, </volume> <month> 205-210 </month> <year> (1989). </year>
Reference-contexts: In this way, this problem is more closely related to that considered by Sankoff in [17] and described in the previous paragraph. Other related work appears in <ref> [11, 18, 19, 8] </ref>. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure. <p> In this way, this problem is more closely related to that considered by Sankoff in [17] and described in the previous paragraph. Other related work appears in [11, 18, 19, 8]. The approach in the first paper <ref> [11] </ref> addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure.
Reference: [12] <author> S. Muthukrishnan. </author> <title> New results and open problems related to non-standard stringology. </title> <booktitle> Proc. 6th Combinatorial Pattern Matching Conference, </booktitle> <year> 1995, </year> <pages> 298-317. </pages>
Reference-contexts: The second position in p from the left matches symbols a; b; c; f; g; z. Therefore, the number of mismatches between p and t at the leftmost position is 1 and that at the 5th position from the left is 3. Theorem 2.5 <ref> [12] </ref> The string matching problem with sets of ranges can be solved in O (nm 2 3 polylogm) time. Theorem 2.6 The CKM problem can be solved in O (n p m polylog m) time.
Reference: [13] <author> S. E. Needleman and C. D. Wunsch, </author> <title> "A general method applicable to the search for similarities in the amino-acid sequences of two proteins," </title> <journal> J. Mol. Bio., </journal> <volume> 48, </volume> <month> 443-453 </month> <year> (1970). </year>
Reference-contexts: 1 Introduction A variety of string matching problems are motivated by the analysis of DNA or protein sequences. An example is the problem of computing the similarity between two sequences such as the edit distance to transform one into another using insertions, deletions and sub stitutions of characters <ref> [13, 20, 21] </ref>. When comparing RNA sequences, usually much more is known about the secondary structure of base-pairing between nucleotides in the sequence. A bonded pair of bases is usually represented as an edge between the two complementary bases involved in the bond.
Reference: [14] <author> R. Nussinov, G. Pieczenik, J. R. Griggs and D. J. Kleitman, </author> <title> "Algorithms for loop matchings," </title> <journal> SIAM J. Appl. Math., </journal> <volume> 35, </volume> <month> 68-82 </month> <year> (1978). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [15] <author> Y. Sakakibara, M. Brown, I. S. Mian, R. Underwood, and D. Haussler, </author> <title> "Stochastic context free grammars for modeling RNA," </title> <booktitle> Proc. the Hawaii Intl. Conf. on System Sciences, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> (1994). </year>
Reference-contexts: In particular, we assume that we are given both the sequence and the secondary structure of an RNA string that is closely related to one whose structure is to be predicted. Another related line of work is <ref> [6, 15, 16] </ref> that uses stochastic context-free grammars (with probabilities attached to production rules) to model a family of related RNA strings. These papers also describe procedures for building such grammars given a set of unaligned RNA sequences with no secondary structure known for any member in the set.
Reference: [16] <author> Y. Sakakibara, M. Brown, R. Hughey, I. S. Mian, K. Sjolander, R. C. Underwood and D. Haussler, </author> <title> "Recent methods for RNA modeling using stochastic context-free grammars," </title> <booktitle> Proc. Combinatorial Pattern Matching Conf., LNCS 807, </booktitle> <month> 289-306 </month> <year> (1994). </year>
Reference-contexts: In particular, we assume that we are given both the sequence and the secondary structure of an RNA string that is closely related to one whose structure is to be predicted. Another related line of work is <ref> [6, 15, 16] </ref> that uses stochastic context-free grammars (with probabilities attached to production rules) to model a family of related RNA strings. These papers also describe procedures for building such grammars given a set of unaligned RNA sequences with no secondary structure known for any member in the set.
Reference: [17] <author> D. Sankoff, </author> <title> "Simultaneous solution of the RNA folding, alignment and protose-quence problems," </title> <journal> SIAM J. Appl. Math. </journal> <volume> Vol. 45, No. 5, </volume> <month> 810-825 </month> <year> (1985). </year>
Reference-contexts: Sankoff <ref> [17] </ref> considers prediction of secondary structure common to two RNA strings also taking into account alignment of the sequences. <p> These papers also describe procedures for building such grammars given a set of unaligned RNA sequences with no secondary structure known for any member in the set. In this way, this problem is more closely related to that considered by Sankoff in <ref> [17] </ref> and described in the previous paragraph. Other related work appears in [11, 18, 19, 8]. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output.
Reference: [18] <author> B. A. Shapiro, </author> <title> "An algorithm for comparing multiple RNA secondary structures," </title> <journal> CABIOS, </journal> <volume> Vol. 4, No. 3, </volume> <month> 387-393 </month> <year> (1988). </year>
Reference-contexts: In this way, this problem is more closely related to that considered by Sankoff in [17] and described in the previous paragraph. Other related work appears in <ref> [11, 18, 19, 8] </ref>. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure. <p> Other related work appears in [11, 18, 19, 8]. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article <ref> [18] </ref> considers the problem of aligning several RNA strings, each with a given secondary structure. The paper proposes 1 For a formal definition of these terms, refer to [29]. - 5 - a syntactic parenthetical representation of the RNA secondary structure that is interleaved with the primary RNA sequence. <p> is being optimized to derive the final alignment and common substring; Our algorithms for exact and approximate matching of two RNA strings superficially resembles this method in that an edge between two positions in a string is encoded by the offset to the other endpoint (rather than parentheses as in <ref> [18] </ref>), and traditional string matching techniques are then employed. The third article [19] uses edit distance data between several trees representing RNA secondary structures to build a phylogenetic tree illustrating the relationship between these structures.
Reference: [19] <author> B. A. Shapiro and K. Zhang, </author> <title> "Comparing multiple RNA secondary structures using tree comparisons," </title> <journal> CABIOS Vol. </journal> <volume> 6, No. 4, </volume> <month> 309-318 </month> <year> (1990). </year>
Reference-contexts: In this way, this problem is more closely related to that considered by Sankoff in [17] and described in the previous paragraph. Other related work appears in <ref> [11, 18, 19, 8] </ref>. The approach in the first paper [11] addresses a single RNA sequence. Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure. <p> The third article <ref> [19] </ref> uses edit distance data between several trees representing RNA secondary structures to build a phylogenetic tree illustrating the relationship between these structures. Finally, [8] considers query primitives for data that is tree-structured that are less restricted than exact tree-pattern matching and analyzes the complexity of implementing such primitives.
Reference: [20] <author> T. F. Smith and M. S. Waterman, </author> <title> "The identification of common molecular subsequences," </title> <journal> J. Mol. Biol. </journal> <volume> 147, </volume> <month> 195-197 </month> <year> (1981). </year>
Reference-contexts: 1 Introduction A variety of string matching problems are motivated by the analysis of DNA or protein sequences. An example is the problem of computing the similarity between two sequences such as the edit distance to transform one into another using insertions, deletions and sub stitutions of characters <ref> [13, 20, 21] </ref>. When comparing RNA sequences, usually much more is known about the secondary structure of base-pairing between nucleotides in the sequence. A bonded pair of bases is usually represented as an edge between the two complementary bases involved in the bond.
Reference: [21] <author> T. F. Smith and M. S. Waterman, </author> <title> "Comparison of biosequences," Adv. in App. </title> <journal> Math. </journal> <volume> 2, </volume> <month> 482-489 </month> <year> (1981). </year>
Reference-contexts: 1 Introduction A variety of string matching problems are motivated by the analysis of DNA or protein sequences. An example is the problem of computing the similarity between two sequences such as the edit distance to transform one into another using insertions, deletions and sub stitutions of characters <ref> [13, 20, 21] </ref>. When comparing RNA sequences, usually much more is known about the secondary structure of base-pairing between nucleotides in the sequence. A bonded pair of bases is usually represented as an edge between the two complementary bases involved in the bond.
Reference: [22] <author> K-C Tai, </author> <title> "The tree to tree correction problem," </title> <journal> JACM, </journal> <volume> Vol. 26, No. 3, </volume> <month> 422-433 </month> <year> (1979). </year> <month> - 17 </month> - 
Reference-contexts: Consequently, much of the work on comparing the secondary structures of two RNA strings have been modeled as problems of comparing two trees <ref> [7, 22, 25, 26] </ref>. In this paper, we study several problems in computing the similarity between two RNA strings that take into consideration both the primary sequence and secondary base-pairing information provided with the strings. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers <ref> [7, 22, 25, 26] </ref> addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in [22, 25, 26] while a new notion of tree alignment is proposed and algorithms developed in [7]. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers [7, 22, 25, 26] addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in <ref> [22, 25, 26] </ref> while a new notion of tree alignment is proposed and algorithms developed in [7].
Reference: [23] <author> M. S. Waterman, </author> <title> "Secondary structure of single-stranded nucleic acids," </title> <booktitle> Studies in Foundations and Combinatorics, Advances in Mathematics supplementary studies VOl. </booktitle> <volume> 1, </volume> <publisher> Academic press, </publisher> <address> New York, </address> <month> 167-212 </month> <year> (1978). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [24] <author> M. S. Waterman and T. F. Smith, </author> <title> "RNA secondary structure: a complete mathematical analysis," </title> <journal> Math. Biosci. </journal> <volume> 42, </volume> <month> 257-266 </month> <year> (1978). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>.
Reference: [25] <author> K. Zhang and D. Shasha, </author> <title> "Simple fast algorithms for the editing distance between trees and related problems, </title> <journal> SIAM J. Comput. </journal> <volume> 18, </volume> <month> 1245-1262 </month> <year> (1989). </year>
Reference-contexts: Consequently, much of the work on comparing the secondary structures of two RNA strings have been modeled as problems of comparing two trees <ref> [7, 22, 25, 26] </ref>. In this paper, we study several problems in computing the similarity between two RNA strings that take into consideration both the primary sequence and secondary base-pairing information provided with the strings. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers <ref> [7, 22, 25, 26] </ref> addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in [22, 25, 26] while a new notion of tree alignment is proposed and algorithms developed in [7]. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers [7, 22, 25, 26] addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in <ref> [22, 25, 26] </ref> while a new notion of tree alignment is proposed and algorithms developed in [7].
Reference: [26] <author> K. Zhang, R. Statman, and D. Shasha, </author> <title> "On the editing distance between unordered labeled trees," </title> <journal> Inform. Proc. Lett. </journal> <volume> 42, </volume> <month> 133-139 </month> <year> (1992). </year>
Reference-contexts: Consequently, much of the work on comparing the secondary structures of two RNA strings have been modeled as problems of comparing two trees <ref> [7, 22, 25, 26] </ref>. In this paper, we study several problems in computing the similarity between two RNA strings that take into consideration both the primary sequence and secondary base-pairing information provided with the strings. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers <ref> [7, 22, 25, 26] </ref> addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in [22, 25, 26] while a new notion of tree alignment is proposed and algorithms developed in [7]. <p> First we review work on comparison methods developed to estimate distances between RNA secondary structures. Since secondary structures can be represented as trees, there are several papers [7, 22, 25, 26] addressing comparisons of trees. Tree edits are discussed and efficient algorithms are derived in <ref> [22, 25, 26] </ref> while a new notion of tree alignment is proposed and algorithms developed in [7].
Reference: [27] <author> M. Zuker, </author> <title> "On finding all suboptimal foldings of an RNA molecule," </title> <journal> Science, </journal> <volume> 244 7, </volume> <month> 48-52 </month> <year> (1989). </year>
Reference-contexts: When comparing RNA sequences, usually much more is known about the secondary structure of base-pairing between nucleotides in the sequence. A bonded pair of bases is usually represented as an edge between the two complementary bases involved in the bond. Traditional models of RNA secondary structure <ref> [27] </ref> assume that every base participates in at most one such pair, and that the edges representing the paired bases are noncrossing along the length of the string. <p> By Theorem 2.5, the running time is O (nm 3 polylog m). 2 3 Computing Alignment for RNA strings In this section, we look at sequence-alignment problems in the context of RNA strings. Specifically, we will consider variants of the edit-distance, longest-common-subsequence and shortest-common-supersequence problems. Following Zuker <ref> [27, 28, 29] </ref>, assume a model in which there are no knots in the secondary structure. In other words, the edges representing base-pairs in the secondary structure must be noncrossing along the length of the string.
Reference: [28] <author> M. Zuker and D. Sankoff, </author> <title> "RNA secondary structures and their prediction," </title> <journal> Bull. Math. Biol. </journal> <volume> 46, </volume> <month> 591-621 </month> <year> (1984). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>. <p> By Theorem 2.5, the running time is O (nm 3 polylog m). 2 3 Computing Alignment for RNA strings In this section, we look at sequence-alignment problems in the context of RNA strings. Specifically, we will consider variants of the edit-distance, longest-common-subsequence and shortest-common-supersequence problems. Following Zuker <ref> [27, 28, 29] </ref>, assume a model in which there are no knots in the secondary structure. In other words, the edges representing base-pairs in the secondary structure must be noncrossing along the length of the string.
Reference: [29] <author> M. Zuker and P. Stiegler, </author> <title> "Optimal computer folding of large RNA sequences using thermodynamics and auxiliary information," </title> <journal> Nucleic Acid Res. </journal> <volume> 9, </volume> <month> 133-148 </month> <year> (1981). </year>
Reference-contexts: However, our algorithms use a combination of sequence edit computation and a tree-based computation. Prediction methods. Prediction of RNA secondary structure of a single RNA molecule from its sequence has been widely studied in the past <ref> [3, 4, 10, 14, 23, 24, 28, 29] </ref>. <p> Multiple secondary structures are computed from the given sequence and a consensus structure is output. The second article [18] considers the problem of aligning several RNA strings, each with a given secondary structure. The paper proposes 1 For a formal definition of these terms, refer to <ref> [29] </ref>. - 5 - a syntactic parenthetical representation of the RNA secondary structure that is interleaved with the primary RNA sequence. The paper then uses conventional multiple-sequence alignment methods on these modified sequences to infer a similar substring. <p> By Theorem 2.5, the running time is O (nm 3 polylog m). 2 3 Computing Alignment for RNA strings In this section, we look at sequence-alignment problems in the context of RNA strings. Specifically, we will consider variants of the edit-distance, longest-common-subsequence and shortest-common-supersequence problems. Following Zuker <ref> [27, 28, 29] </ref>, assume a model in which there are no knots in the secondary structure. In other words, the edges representing base-pairs in the secondary structure must be noncrossing along the length of the string.
References-found: 29

