URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/interface_TVT.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/interface.html
Root-URL: 
Email: lygeros@eecs.berkeley.edu godbole@eecs.berkeley.edu  
Title: An Interface between Continuous Discrete-Event Controllers for Vehicle Automation  
Author: John Lygeros and Datta N. Godbole 
Address: Berkeley, CA 94720-1772  
Affiliation: Intelligent Machines and Robotics Laboratory Department of Electrical Engineering and Computer Sciences University of California, Berkeley  
Abstract: The work presented here is part of a bigger effort to design an automated highway system to improve the capacity and safety of the current highways. Automation of highways and in particular platooning of vehicles raises a number of control issues. In the design proposed in [1] these issues are addressed by a hierarchical structure consisting of both discrete event and continuous controllers. Our work is an attempt to construct a consistent interface between these two types of controllers. The proposed design is in the form of a set of finite state machines that interact with the discrete controllers through discrete commands and with the continuous controllers by issuing commands that get translated to inputs for the vehicle actuators. The operation of the proposed design is verified using COSPAN and tested in simulation. The interface design provides insight into interesting problems related to the hybrid nature of the automated highway system, as it touches on both the discrete and continuous worlds. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Pravin Varaiya, </author> <title> "Smart cars on smart roads: problems of control", </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-38, no. 2, </volume> <pages> pp. 195-207, </pages> <year> 1993. </year>
Reference: [2] <author> B. S. Y. Rao and Pravin Varaiya, </author> <title> "Roadside intelligence for flow control in an IVHS", </title> <journal> Transportation Research - C, </journal> <volume> vol. 2, no. 1, </volume> <pages> pp. 49-72, </pages> <year> 1994. </year>
Reference: [3] <author> Ann Hsu, Farokh Eskafi, Sonia Sachs, and Pravin Varaiya, </author> <title> "Protocol design for an automated highway system", Discrete Event Dynamic Systems, </title> <journal> vol. </journal> <volume> 2, no. 1, </volume> <pages> pp. 183-206, </pages> <year> 1994. </year>
Reference-contexts: In the second step, called Move, the lateral action of the lane change is carried out. The coordination required in order to carry out these maneuvers in safety was specified in <ref> [3] </ref> by a structured set of communication messages, in the form of protocols. After modeling these protocols by interacting finite state machines the logical correctness of the design was verified using COSPAN. B. <p> They can be grouped into two categories: longitudinal laws (for movement along a single lane) and lateral laws (for lane tracking and movement across lanes). At any time the vehicle executes one longitudinal and one lateral law. Normal operation under the protocol design of <ref> [3] </ref> requires five longitudinal (Leader, Follower, Merge, Split, Decel to Change) and two lateral (Lane Follow and Move) laws. Their operation is summarized be low: Lead Control: The primary goal of the lead control law is to maintain safe spacing between platoons. <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range <ref> [5; 3] </ref>ms 2 while the jerk in the range [5; 5]ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). <p> Work in both these directions is currently underway for the coordination layer design proposed in <ref> [3] </ref>. The interaction with the continuous control laws is more challenging. Unlike the interaction with the coordination layer, which can be easily investigated using standard FSM tools, the interaction of the interface state machine with the continuous domain is much more complicated.
Reference: [4] <author> J. K. Hedrick, D.McMahon, V. Narendran, and D. Swa-roop, </author> <title> "Longitudinal vehicle controller design for IVHS system", </title> <booktitle> in American Control Conference, </booktitle> <year> 1991, </year> <pages> pp. 3107-3112. </pages>
Reference-contexts: It has the advantage that the vehicles within a platoon are connected via an infrared communication link, so they have access to information about their neighbors (such as their acceleration) not available through sensors. <ref> [4] </ref>, [7] provide details of possible designs of the follower control law.
Reference: [5] <author> H. Peng and M. Tomizuka, </author> <title> "Vehicle lateral control for highway automation", </title> <booktitle> in American Control Conference, </booktitle> <year> 1990, </year> <pages> pp. 788-794. </pages>
Reference-contexts: A possible design assumes that magnets are placed at regular intervals along the center of the lane and magnetometers are mounted on the vehicle to obtain deviations from the center of the lane. Under these assumptions, a frequency shaped LQ optimal controller is designed in <ref> [5] </ref> to achieve the lane keeping objective. III. Interface Design Assumptions & Requirements The interface structure and its interactions with the surrounding controllers are outlined in more detail in Layer" in Figure 1 is expanded (between the dotted lines) to reveal the details of the internal structure. <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range <ref> [5; 3] </ref>ms 2 while the jerk in the range [5; 5]ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). <p> These factors impose bounds on the acceleration and the jerk produced by the engine and the brakes; typically the acceleration has to lie in the range [5; 3]ms 2 while the jerk in the range <ref> [5; 5] </ref>ms 3 , but the bounds may be even tighter in adverse conditions (e.g., rain). We would like the state trajectories not to get close to the boundaries, to avoid saturation and other nonlinear effects, that might affect trajectory tracking and leave the vehicle in an unsafe situation. <p> Finally the engine and brake inputs act on the third derivative of position ("jerk") [8] and are applied to the engine directly from the controllers (without the intervention of the interface). The steering input affects the second derivative of the lateral position and orientation of the vehicle <ref> [5] </ref>. It is also applied directly to the actuators by the relevant control laws. For the purpose of simulations, the vehicle dynamics were approximated by a 7 th order continuous time model.
Reference: [6] <author> W. Chee and M. Tomizuka, </author> <title> "Lane change maneuver of automobiles for the intelligent vehicle and highway systems (IVHS)", </title> <booktitle> in American Control Conference, </booktitle> <year> 1994, </year> <pages> pp. 3586-3587. </pages>
Reference-contexts: Move: The move control law guides the vehicle from one lane to the next. Again the design should be such that the required input does not force the actuators close to their limits or makes the passengers uncomfortable. A design satisfying these requirements is presented in <ref> [6] </ref>. Lane Follow: Finally a lateral control law is also needed to maintain lane position. A possible design assumes that magnets are placed at regular intervals along the center of the lane and magnetometers are mounted on the vehicle to obtain deviations from the center of the lane.
Reference: [7] <author> Shahab Sheikholeslam and Charles A. Desoer, </author> <title> "Longitudinal control of a platoon of vehicles", </title> <booktitle> in American Control Conference, </booktitle> <year> 1990, </year> <pages> pp. 291-297. </pages>
Reference-contexts: It has the advantage that the vehicles within a platoon are connected via an infrared communication link, so they have access to information about their neighbors (such as their acceleration) not available through sensors. [4], <ref> [7] </ref> provide details of possible designs of the follower control law.
Reference: [8] <author> Datta N. Godbole and John Lygeros, </author> <title> "Longitudinal control of the lead car of a platoon", </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> vol. 43, no. 4, </volume> <pages> pp. 1125-1135, </pages> <year> 1994. </year>
Reference-contexts: Their operation is summarized be low: Lead Control: The primary goal of the lead control law is to maintain safe spacing between platoons. In the design of <ref> [8] </ref> the safe spacing is calculated according to the formula: D = a x + v _x + p where _x and x denote the velocity and acceleration of the platoon. For normal operation, the values a = 0; v = 1 seconds; p = 10 meters are currently used. <p> The whole maneuver should be carried out as fast as possible but without pushing the engine or the brakes to their limits (thus compromising safety) and without affecting passenger comfort. Various continuous feedback controllers that fulfill the above requirements have been designed <ref> [8] </ref>, [9]. The design of [8] is based on the calculation of a desired trajectory at the beginning of the maneuver. Feedback from the sensors is then used to keep the actual vehicle trajectory as close as possible to the desired one. <p> The whole maneuver should be carried out as fast as possible but without pushing the engine or the brakes to their limits (thus compromising safety) and without affecting passenger comfort. Various continuous feedback controllers that fulfill the above requirements have been designed <ref> [8] </ref>, [9]. The design of [8] is based on the calculation of a desired trajectory at the beginning of the maneuver. Feedback from the sensors is then used to keep the actual vehicle trajectory as close as possible to the desired one. <p> The design can be very similar to the one for the merge maneuver: a trajectory that carries out the desired task and does not violate any limits is calculated and then feedback is added to guarantee tracking <ref> [8] </ref>. Decel to Change: A controller capable of carry ing out the longitudinal actions expected by De-cel to Change (refer to Figure 3) is presented in [8]. The general principle is again very similar to that of the merge maneuver. <p> a trajectory that carries out the desired task and does not violate any limits is calculated and then feedback is added to guarantee tracking <ref> [8] </ref>. Decel to Change: A controller capable of carry ing out the longitudinal actions expected by De-cel to Change (refer to Figure 3) is presented in [8]. The general principle is again very similar to that of the merge maneuver. Move: The move control law guides the vehicle from one lane to the next. <p> B.1 Initialization Every time a maneuver is requested by the coordination layer, the interface must make sure that the appropriate control law is ready to respond before invoking it. For this reason, the interface should first carry out some form of initialization. For the control algorithms presented in <ref> [8] </ref>, the initialization involves: 1. Resetting the state of the controller to the right initial condition (for dynamic controllers such as the lead). 2. Updating parameters whose values might have changed since the controller was last invoked (e.g., the optimum velocity). 3. <p> The sensors are assumed to operate perfectly (there is no fault detection in our design so far) and provide samples of the states at fixed intervals. Finally the engine and brake inputs act on the third derivative of position ("jerk") <ref> [8] </ref> and are applied to the engine directly from the controllers (without the intervention of the interface). The steering input affects the second derivative of the lateral position and orientation of the vehicle [5]. It is also applied directly to the actuators by the relevant control laws.
Reference: [9] <author> J. Frankel, L. Alvarez, R. Horowitz, and P. Li, </author> <title> "Safety oriented maneuvers for IVHS", </title> <booktitle> in American Control Conference, </booktitle> <year> 1995, </year> <pages> pp. 668-672. </pages>
Reference-contexts: The whole maneuver should be carried out as fast as possible but without pushing the engine or the brakes to their limits (thus compromising safety) and without affecting passenger comfort. Various continuous feedback controllers that fulfill the above requirements have been designed [8], <ref> [9] </ref>. The design of [8] is based on the calculation of a desired trajectory at the beginning of the maneuver. Feedback from the sensors is then used to keep the actual vehicle trajectory as close as possible to the desired one.
Reference: [10] <author> Farokh Eskafi, Delnaz Khorramabadi, and Pravin Varaiya, "SmartPath: </author> <title> An automated highway system simulator", </title> <type> PATH Technical Report UCB-ITS-94-4. </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: It is assumed that in an actual implementation of the control scheme, reg request and reg response will use interrupt lines. In the current implementation within the framework of the SmartPath simulator <ref> [10] </ref>, the communication channels are modeled by "events" in the C-Sim programming language, which can be thought of as a form of software interrupts. <p> Concluding Remarks The automatic verification described above suggests that the design proposed here will perform well under the assumed conditions. As a further test the interface was implemented in C together with the continuous control laws described in the references. It was then introduced in the SmartPath simulation platform <ref> [10] </ref>. For the purpose of SmartPath, the reg request and reg response interrupts were modeled by software "events" (in the C-Sim programming language) and parameters (commands and flags) were passed via global variables.
Reference: [11] <author> John Lygeros, Datta N. Godbole, and Mireille E. Broucke, </author> <title> "Towards a fault tolerant AHS design", </title> <type> SAE Paper # 951894, </type> <note> Presented at SAE Future Transportation Technology Conference, Costa Mesa, </note> <year> 1995. </year>
Reference-contexts: General safety checks that will alert the system if a malfunction occurs (e.g., communication device failure, engine breakdown or tire burst). Formalizing such safety checks can be difficult, as the number of possible malfunctions is large and the way they affect the system is diverse. In <ref> [11] </ref> an extensive list of malfunctions is presented. A predicate hierarchy is introduced to model the system capability 4 . The levels of the predicate hierarchy reflect the levels of the control hierarchy and the values of the higher level predicates depend on those of the lower level ones. <p> If the predicate returns zero the control law is incapacitated because of some malfunction and the interface has to abort the maneuver and select a different law. In <ref> [11] </ref> an extension of the control architecture is proposed to guarantee that at least one control law is operational in any situation. 2. Safety checks that deal with the constraints imposed upon the state of the vehicles by road conditions, engine capabilities and the need for passenger comfort.
Reference: [12] <author> Z. Har'El and R.P. Kurshan, </author> <title> Cospan User's Guide, </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year>
Reference-contexts: It transitions from NR to R whenever there is a need to notify the coordination layer and back when the coordination layer has taken note of the message (COORD: read). C. Automatic Verification The design described above was verified automatically using COSPAN <ref> [12] </ref>. COSPAN is a verification tool that works by symbolically analyzing a given set of FSM to make sure that their performance satisfies certain requirements specified by the user.
Reference: [13] <author> Datta N. Godbole, John Lygeros, and Shankar Sastry, </author> <title> "Hierarchical hybrid control: an IVHS case study", </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <year> 1994, </year> <pages> pp. 1592-1597. </pages>
Reference-contexts: The results indicate good performance in most traffic situations. Moreover, they highlight the problems that may be encountered when dealing with multilayered, hybrid control systems like this. These issues are discussed further in <ref> [13] </ref>. It should be noted that the automatic verification described above depends on the underlying assumption that the coordination layer behaves like the abstraction of Figure 12, at least as far as the regulation layer is concerned.
Reference: [14] <author> R. Alur, C. Courcoubetis, and D. Dill, </author> <title> "Model checking for real-time systems", </title> <booktitle> Logic in Computer Science, </booktitle> <pages> pp. 414-425, </pages> <year> 1990. </year>
Reference-contexts: There are no tools yet to perform automatic verification on hybrid systems like this. Some tools exist for verification of timed automata and linear hybrid systems, based on the work of Alur et al. <ref> [14] </ref> and Henzinger et al. [15]. However, the dynamics of our system are a lot more complicated than the simple _x = 1 dynamics of timed automata and the _x = c dynamics of linear hybrid systems.
Reference: [15] <author> T. Henzinger, P. Kopke, A. Puri, and P. Varaiya, </author> <title> "What's decidable about hybrid automata", </title> <booktitle> in STOCS, </booktitle> <year> 1995. </year>
Reference-contexts: There are no tools yet to perform automatic verification on hybrid systems like this. Some tools exist for verification of timed automata and linear hybrid systems, based on the work of Alur et al. [14] and Henzinger et al. <ref> [15] </ref>. However, the dynamics of our system are a lot more complicated than the simple _x = 1 dynamics of timed automata and the _x = c dynamics of linear hybrid systems. Therefore attempts to directly use such verification techniques on our system soon run into trouble.
Reference: [16] <author> Anuj Puri and Pravin Varaiya, </author> <title> "Verification of hybrid systems using abstractions", in Hybrid Systems II, </title> <publisher> LNCS 999. Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Then we could verify our system by verifying the conservative abstraction <ref> [16] </ref>. A more promising approach involves the use of optimal control to verify the closed loop hybrid system and game theory to systematically modify the design, if the verification fails [17], [18]. The interface presented here was introduced as a way of coupling discrete event and continuous systems.
Reference: [17] <author> Anuj Puri and Pravin Varaiya, </author> <title> "Driving safely in smart cars", </title> <booktitle> in American Control Conference, </booktitle> <year> 1995, </year> <pages> pp. 3597-3599. </pages>
Reference-contexts: Then we could verify our system by verifying the conservative abstraction [16]. A more promising approach involves the use of optimal control to verify the closed loop hybrid system and game theory to systematically modify the design, if the verification fails <ref> [17] </ref>, [18]. The interface presented here was introduced as a way of coupling discrete event and continuous systems. Even though the details are specific to the problem at hand we believe that our work illustrates a more general approach to obtaining such a coupling.
Reference: [18] <author> John Lygeros, Datta N. Godbole, and Shankar Sastry, </author> <title> "A game theoretic approach to hybrid system design", </title> <type> Tech. Rep. </type> <institution> UCB/ERL-M95/77, Electronic Research Laboratory, University of California Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Then we could verify our system by verifying the conservative abstraction [16]. A more promising approach involves the use of optimal control to verify the closed loop hybrid system and game theory to systematically modify the design, if the verification fails [17], <ref> [18] </ref>. The interface presented here was introduced as a way of coupling discrete event and continuous systems. Even though the details are specific to the problem at hand we believe that our work illustrates a more general approach to obtaining such a coupling.
References-found: 18

