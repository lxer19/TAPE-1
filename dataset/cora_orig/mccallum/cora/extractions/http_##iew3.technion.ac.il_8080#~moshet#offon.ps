URL: http://iew3.technion.ac.il:8080/~moshet/offon.ps
Refering-URL: http://iew3.technion.ac.il:8080/~moshet/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Off-line Reasoning for On-line Efficiency: Knowledge Bases  
Author: Yoram Moses Moshe Tennenholtz 
Address: Rehovot, 76100 Israel Haifa, 32000 Israel  
Affiliation: Faculty of Industrial Engineering Department of Applied Math and CS and Management The Weizmann Institute of Science Technion Israel Institute of Technology  
Abstract: The complexity of reasoning is a fundamental issue in AI. In many cases, the fact that an intelligent system needs to perform reasoning on-line contributes to the difficulty of this reasoning. This paper considers the case in which an intelligent system computes whether a query is entailed by the system's knowledge base. It investigates how an initial phase of off-line preprocessing and design can improve the on-line complexity considerably. The notion of an efficient basis for a query language is presented, and it is shown that off-line preprocessing can be very effective for query languages that have an efficient basis. The usefulness of this notion is illustrated by showing that a fairly expressive language has an efficient basis. A dual notion of an efficient disjunctive basis for a knowledge base is introduced, and it is shown that off-line preprocessing is worthwhile for knowledge bases that have an efficient disjunctive basis. fl Part of the material presented in this paper appears in the Proceedings of IJCAI-93 [9]. y This work was supported in part by a grant from the US-Israel Binational Science Foundation. The first author was supported by a Helen and Milton A. Kimmelman Career Development Chair. The second author was supported in part by an Eshkol fellowship of the Israeli Ministry of Science and Technology, and later by the Air Force Office of Scientific Research. Part of the research was carried out while the second author was in the Department of Applied Mathematics and Computer Science in the Weizmann Institute of Science, and part while he was in the Computer Science Department at Stanford University. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Agre. </author> <title> The Dynamic Structure of Everyday Life. </title> <publisher> Cambridge University Press, </publisher> <address> Cambridge,UK, </address> <year> 1991. </year>
Reference: [2] <author> P. Agre and D. Chapman. Pengi: </author> <title> An Implementation of a Theory of Activity. </title> <booktitle> In Proc. of AAAI-87, </booktitle> <pages> pages 268-272, </pages> <year> 1987. </year>
Reference: [3] <author> J. Y. Halpern and M. Y. Vardi. </author> <title> Model checking vs. theorem proving: a manifesto. </title> <booktitle> In Principles of Knowledge Representation and Reasoning: Proceedings of the Second International Conference, </booktitle> <pages> pages 325-334, </pages> <year> 1991. </year>
Reference-contexts: This problem is intractable in the general case. Moreover, even for tractable queries, the verification process 3 might be very inefficient. There are two main approaches that are discussed in the AI literature for overcoming this difficulty: 1. Replacing problem-solving by model checking <ref> [3] </ref>: discuss knowledge bases that represent specific models, so that a query needs only to be checked against a model, rather than computing whether it is logically entailed by a knowledge base. 2.
Reference: [4] <author> R. Kowalski. </author> <title> Predicate logic as a programming language. </title> <booktitle> In IFIP Conference, Stockholm, </booktitle> <pages> pages 569-574, </pages> <year> 1974. </year>
Reference-contexts: In order to handle such problems, researchers often use general schemes of knowledge representation such as First Order Logic [6], logic programs <ref> [4] </ref>, semantic networks [10], etc. Moreover, the reasoning is then often carried out using general schemes of reasoning such as resolution for theorem proving, Prolog for logic programs, etc.
Reference: [5] <author> H. J. Levesque. </author> <title> Logic and the Complexity of Reasoning. </title> <type> Technical Report KRR-TR-89-2, </type> <institution> University of Toronto, </institution> <year> 1989. </year>
Reference-contexts: Finally, Section 6 considers other possibilities for useful off-line processing, and provides some concluding remarks. 2 Off-line versus on-line reasoning Consider the well-known problem of determining whether queries are entailed by a knowledge base, as discussed for example in <ref> [5] </ref>. We assume that we have a knowledge base KB expressed in some logical language, and a query language QL in which queries concerning KB are formulated. Given a query ff, we are interested in whether KB j= ff. This problem is intractable in the general case. <p> The first approach is in fact the way in which relational databases are treated in theoretical computer science. The second is concerned with finding good tradeoffs between expressiveness and complexity (as is done in the knowledge base case by <ref> [5] </ref>, or in the case of multi-agent activity by [17]). Another potential way for decreasing complexity is the following. Assume that any specific query can be verified in time t where t might be large but still feasible (e.g., super-linear but polynomial in the size of the knowledge base KB). <p> In the next section we will discuss the case in which the query is fixed and the knowledge base may varies. One motivation for discussing knowledge bases that consist of propositions and not of specific models is the need to represent uncertainty (this issue is thoroughly discussed in <ref> [5] </ref>). Therefore, it is often reasonable to consider knowledge bases in contexts where updates increase the degree of uncertainty in the knowledge base.
Reference: [6] <author> J. McCarthy and P. Hayes. </author> <title> Some Philosophical Problems from the Standpoint of Artificial Intelligence. </title> <journal> Machine Intelligence, </journal> <volume> 4 </volume> <pages> 463-502, </pages> <year> 1969. </year>
Reference-contexts: In order to handle such problems, researchers often use general schemes of knowledge representation such as First Order Logic <ref> [6] </ref>, logic programs [4], semantic networks [10], etc. Moreover, the reasoning is then often carried out using general schemes of reasoning such as resolution for theorem proving, Prolog for logic programs, etc.
Reference: [7] <author> Y. Moses and M. Tennenholtz. </author> <title> Artificial Social Systems Part I: Basic Principles. </title> <type> Technical Report CS90-12, </type> <institution> Weizmann Institute, </institution> <year> 1990. </year>
Reference-contexts: The general idea of using off-line processing for on-line efficiency can find uses in many other problems in the context of AI. One such context is the framework of artificial social systems, which have been suggested as a paradigm for the design of shared multi-agent environments <ref> [7, 8] </ref>. An artificial social system can be thought of as a legal system for artificial agents. The purpose of this legal system is to provide an environment in which the agents are able to pursue their individual goals in a fairly compatible fashion.
Reference: [8] <author> Y. Moses and M. Tennenholtz. </author> <title> On Formal Aspects of Artificial Social Systems. </title> <type> Technical Report CS91-01, </type> <institution> Weizmann Institute, </institution> <year> 1991. </year>
Reference-contexts: The general idea of using off-line processing for on-line efficiency can find uses in many other problems in the context of AI. One such context is the framework of artificial social systems, which have been suggested as a paradigm for the design of shared multi-agent environments <ref> [7, 8] </ref>. An artificial social system can be thought of as a legal system for artificial agents. The purpose of this legal system is to provide an environment in which the agents are able to pursue their individual goals in a fairly compatible fashion.
Reference: [9] <author> Y. Moses and M. Tennenholtz. </author> <title> Off-Line Reasoning for On-Line Efficiency. </title> <booktitle> In Proc. 13th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1993. </year>
Reference: [10] <author> M. Quillian. </author> <title> Word concepts: a theory and simulation of some basic semantic capabilities. </title> <journal> Behav. Sci., </journal> <volume> 12 </volume> <pages> 410-430, </pages> <year> 1967. </year>
Reference-contexts: In order to handle such problems, researchers often use general schemes of knowledge representation such as First Order Logic [6], logic programs [4], semantic networks <ref> [10] </ref>, etc. Moreover, the reasoning is then often carried out using general schemes of reasoning such as resolution for theorem proving, Prolog for logic programs, etc.
Reference: [11] <author> M.J. Schoppers. </author> <title> Universal Plans for Reactive Robots in Unpredictable Environments. </title> <booktitle> In Proc. of AAAI-87, </booktitle> <pages> pages 1039-1046, </pages> <year> 1987. </year> <month> 15 </month>
Reference-contexts: Reactive approaches to problems in AI, related especially to planning, have been suggested in a number of works (see [1],[2]). Some other works suggested to compile reactive behaviors in advance (see <ref> [11] </ref>). However, the task of improving on-line behavior does not need to concentrate only on "real" reactive behavior. On-line behavior might refer more generally to the behavior of an agent that faces various problems after the initialization of the system.
Reference: [12] <author> T.K Sellis. </author> <title> Multiple-query optimization. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 13(1) </volume> <pages> 23-52, </pages> <year> 1988. </year>
Reference-contexts: However, the context of our query optimization (entailment by knowledge bases instead of retrieval from relational databases), and the actual way in which it is performed (off-line preprocessing instead of clever retrieval of a set of queries after their arrival) will be different from classical multiple query optimization (cf. <ref> [12] </ref>). The program described above allows efficient processing of many queries made to a fixed knowledge base. A similar approach can be used for treating a dual problem: Processing a fixed query made with respect to different knowledge bases.
Reference: [13] <author> B. Selman and H. Kautz. </author> <title> Knowledge Complilation Using Horn Approximations. </title> <booktitle> In Proc. of AAAI-91, </booktitle> <pages> pages 904-909, </pages> <year> 1991. </year>
Reference-contexts: The language k-CNF is thus a fairly expressive query language in general, for which off-line preprocessing is a useful procedure. In addition, any propositional query can be approximated by k-CNF in a natural way. Hence, our approach is complementary to approaches for approximations recently discussed in the AI literature <ref> [13] </ref>). In existing work in AI the element for which preprocessing is performed is a static element, namely a fixed knowledge base. Our work is complementary in the sense that we process the more dynamic element of the system|the query language as a whole.
Reference: [14] <author> Y. Shoham and M. Tennenholtz. </author> <title> On the Synthesis of Useful Social Laws for Artificial Agent Societies. </title> <booktitle> In Proc. of AAAI-92, </booktitle> <pages> pages 276-281, </pages> <year> 1992. </year>
Reference: [15] <author> Y. Shoham and M. Tennenholtz. </author> <title> Social Laws for Artificial Agent Societies: Off-line Design. </title> <note> To appear in AI journal, </note> <year> 1994. </year>
Reference: [16] <author> M. Tennenholtz. </author> <title> On Computational Social Laws for Dynamic NonHomogeneous Social Structurs. </title> <note> To appear in JETAI, </note> <year> 1994. </year>
Reference: [17] <author> M. Tennenholtz and Yoram Moses. </author> <title> On Cooperation in a Multi-Entity Model. </title> <booktitle> In Proc. 11th International Joint Conference on Artificial Intelligence, </booktitle> <year> 1989. </year>
Reference-contexts: The first approach is in fact the way in which relational databases are treated in theoretical computer science. The second is concerned with finding good tradeoffs between expressiveness and complexity (as is done in the knowledge base case by [5], or in the case of multi-agent activity by <ref> [17] </ref>). Another potential way for decreasing complexity is the following. Assume that any specific query can be verified in time t where t might be large but still feasible (e.g., super-linear but polynomial in the size of the knowledge base KB).
Reference: [18] <author> L. G. Valiant. </author> <title> A theory of the learnable. </title> <journal> Comm. ACM, </journal> <volume> 27(11) </volume> <pages> 1134-1142, </pages> <year> 1984. </year>
Reference-contexts: Consider a knowledge base that is built from a set of examples of an a priori unknown concept C, for which we are interested in verifying whether a property ff holds. This is a frequent scenario in the context of computational learning theory <ref> [18] </ref>. In order to check whether C entails ff, we need to check whether ff is entailed by each known example of C. Formally, this test is equivalent to the test of whether the disjunction of the examples entails ff. <p> In many cases the examples contain some unprescribed entries (see <ref> [18] </ref>) which makes k-DNF an appealing type of representation for our purposes. The language k-DNF is thus a fairly expressive language for expressing the contents of a knowledge base, for which off-line preprocessing is a useful procedure.
References-found: 18

