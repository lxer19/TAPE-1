URL: http://http.cs.berkeley.edu/~schenney/dynamics/masters/masters-nopics.ps.gz
Refering-URL: http://http.cs.berkeley.edu/~schenney/dynamics/masters/masters.html
Root-URL: 
Title: Culling Dynamical Systems in Virtual Environments  
Author: Stephen Chenney 
Date: May 22, 1997  
Abstract: Culling dynamical systems which are not in view can offer significant speedups when rendering virtual environments. However, three problems arise, which we term consistency, completeness and causality. The consistency problem is concerned with ensuring that any predictions a viewer may make about the state of an object are satisfied, even if the object is culled for some period of time. Completeness is ensuring that everything that would happen within view when not culling still happens when culling is enabled. Modeling causality means maintaining causal relationships and constraints between events and objects. We concentrate on the consistency problem. Our solutions distinguish three regimes, based on how well a viewer can predict and the various tools that can be applied to generate new state consistent with such predictions. We present examples explaining the tools, and a user experiment demonstrating that viewers cannot detect inconsistencies if the tools are applied correctly. The speedups obtained when culling range from 0.5 to 10, and scale ap proximately to the number of systems in view.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Christopher M. Bishop. </author> <title> Neural Networks for Pattern Recognition. </title> <publisher> Oxford University Press, </publisher> <year> 1995. </year>
Reference-contexts: The process can be adapted to take into account conditioning if one or more variables are known a-priori. * Attacking the problem of medium term prediction requires tools for approximating functions, possibly with some random component added. Neural networks <ref> [1] </ref> are well suited to this task. They work in high dimension spaces, have universal approximation properties, have an iterative training method and generalize to many problems. We have used neural networks to learn the medium term (0-10 seconds) behaviour of a ride similar to the Tilt-A-Whirl.
Reference: [2] <author> Bruce M. Blumberg and Tinsley A. Galyean. </author> <title> Multi-level direction of autonomous creatures for real-time virtual environments. </title> <booktitle> In Computer Graphics: Proceedings of SIGGRAPH 95, </booktitle> <month> August </month> <year> 1995. </year> <institution> Los Angeles, </institution> <address> CA. </address>
Reference-contexts: The limit as the number of transitions approaches infinity can also be computed if the transition probabilities satisfy weak conditions. This will give the long term, limit distribution on states. Efficient handling of state machines is important because many of the proposals for autonomous agents <ref> [2, 17] </ref> use state machines as the means for determining which actions the agent will perform. Agents are highly desirable in virtual environments, and represent a significant computational burden the ideal scenario for culling. * The task of determining what a viewer can predict is a difficult one to automate.
Reference: [3] <author> D. S. Broomhead and David Lowe. </author> <title> Multivariate functional interpolation and adaptive networks. </title> <journal> Complex Systems, </journal> <volume> 2(3) </volume> <pages> 321-355, </pages> <year> 1988. </year>
Reference-contexts: The elements of the mixture align themselves along the dominant trajectory, and the covariance captures deviations from this. One such approximation is shown in figure 15, which models the startup phase for a centrifuge (figure 20). Radial basis functions, and networks thereof, <ref> [3] </ref> are another tool that is promising for short to medium term approximation. They have the desirable property of progressive refinement, allowing more effort to be used where necessary.
Reference: [4] <author> Deborah A. Carlson and Jessica K. Hodgins. </author> <title> Simulation levels of detail for real-time animation. </title> <booktitle> In Graphics Interface '97, </booktitle> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: But the paper does not provide any description of how they address the problems outlined above. In particular, they do not address techniques for generating new state when a tree re-enters the view. Carlson and Hodgins <ref> [4] </ref> present experiments in level of detail for dynamical simulation in the context of a game. They discuss the issue of ensuring that the outcome of the game is correct even when 2 using approximations to the best dynamic model.
Reference: [5] <author> Jonathan Cohen et al. </author> <title> Simplification envelopes. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 119-127. </pages> <publisher> ACM SIGGRAPH, </publisher> <address> 1996. New Orleans, LA. </address> <month> 23 </month>
Reference: [6] <author> A. P. Dempster, N.M Laird, and D. B. Rubin. </author> <title> Maximum likelihood from incomplete data via the em algorithm. </title> <journal> Journal of the Royal Statistical Society, </journal> <volume> 39(1) </volume> <pages> 1-38, </pages> <year> 1977. </year>
Reference-contexts: This assumed that the parameters were independent, which is not generally the case. Nor will the technique work for data that shows more than one region of high probability. The best method tried so far uses a mixture of gaussians model [11], learned using an expectation maximization (EM) algorithm <ref> [6] </ref>. A mixture model is a weighted sum of gaussians, where each weight expresses the probability that a sample came from that element of the mixture. The EM algorithm used is an iterative procedure for finding the means, covariances and weights of each gaussian in the mixture.
Reference: [7] <author> Thomas A. Funkhouser and Carlo H. Sequin. </author> <title> Adaptive display algorithm for interactive frame rates during visualization of complex virtual environments. </title> <booktitle> In Computer Graphics, </booktitle> <pages> pages 247-254. </pages> <publisher> ACM SIGGRAPH, </publisher> <year> 1993. </year>
Reference: [8] <author> Thomas A. Funkhouser, Carlo H. Sequin, and Seth J. Teller. </author> <title> Management of large amounts of data in interactive building walkthroughs. </title> <booktitle> In Proceedings 1992 Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 11-20, </pages> <address> 29 March - 1 April 1992. Cambridge, Massachusetts. </address>
Reference-contexts: Furthermore, the ability to cull dynamics allows treatment similar to static geometry, where objects not in view need never even be loaded into memory <ref> [8] </ref>. Culling is possible because we have techniques for generating new state quickly while not conflicting with viewer expectations. The key observation is that the applicability of a state generation scheme is dictated primarily by its satisfaction of what a viewer predicts.
Reference: [9] <author> James K. Hahn. </author> <title> Realistic animation of rigid bodies. </title> <journal> In Computer Graphics, </journal> <volume> volume 22(4), </volume> <pages> pages 299-308. </pages> <publisher> ACM SIGGRAPH, </publisher> <month> August </month> <year> 1988. </year> <institution> Atlanta, Georgia. </institution>
Reference-contexts: This is desirable for a bumper car model, where collisions are an important part of the global behaviour of the system. We treat collisions as impulses on cars, as described by Hahn <ref> [9] </ref> and further developed by Mirtich [12]. At discrete intervals we check for collisions between each pair of cars and between each car and the walls. If a collision is detected it is resolved by applying impulses to the cars. Walls behave 13 as if they have infinite mass.
Reference: [10] <author> R. L. Kautz and Bret M. Huggard. </author> <title> Chaos at the amusement park: Dynamics of a tilt-a-whirl. </title> <journal> American Journal of Physics, </journal> <volume> 62(1) </volume> <pages> 59-66, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: The governing equation of motion for the car, derived from Lagrange's equation and making use of small angle approximations (following <ref> [10] </ref>) is: r 2 + _ gr 2 (ff sin fi cos ) + r 1 r 2 _ 2 sin + r 1 r 2 cos = 0 2 _ = _ 0 + t fi = 3ff 1 sin 3 To simulate the the stopping and starting of an <p> If the trajectories converge or stay the same distance apart, and individual paths to not oscillate wildly, we expect a viewer to be able to predict well. In the case of the Tilt-A-Whirl, we were able to make use of the analysis by Kautz and Huggard <ref> [10] </ref>. They show that the dynamics of a Tilt-A-Whirl car are chaotic in the run state, which means that nearby initial conditions result in vastly different trajectories. Following their analysis, figures 2 and 3 show different aspects of the dynamics of the Tilt-A-Whirl.
Reference: [11] <author> Geoffrey J. McLachlan and Kaye E. Basford. </author> <title> Mixture Models: Inference and Applications to Clustering. </title> <editor> M. Dekker, </editor> <year> 1988. </year>
Reference-contexts: This assumed that the parameters were independent, which is not generally the case. Nor will the technique work for data that shows more than one region of high probability. The best method tried so far uses a mixture of gaussians model <ref> [11] </ref>, learned using an expectation maximization (EM) algorithm [6]. A mixture model is a weighted sum of gaussians, where each weight expresses the probability that a sample came from that element of the mixture.
Reference: [12] <author> Brian Mirtich. </author> <title> Impulse-based Dynamics for Rigid-Body Simulation. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: This is desirable for a bumper car model, where collisions are an important part of the global behaviour of the system. We treat collisions as impulses on cars, as described by Hahn [9] and further developed by Mirtich <ref> [12] </ref>. At discrete intervals we check for collisions between each pair of cars and between each car and the walls. If a collision is detected it is resolved by applying impulses to the cars. Walls behave 13 as if they have infinite mass.
Reference: [13] <author> Ketan Mulmuley. </author> <title> Computational Geometry : an Introduction Through Randomized Algorithms. </title> <publisher> Prentice-Hall, </publisher> <year> 1994. </year>
Reference: [14] <editor> J.L. Pajon et al. </editor> <title> Building and exploiting levels of detail: An overview and some vrml experiments. </title> <booktitle> In VRML '95 First Annual Symposium on the Virtual Reality Modeling Language, </booktitle> <pages> pages 117-122, </pages> <address> Dec 14-15 1995. San Diego, California. </address>
Reference: [15] <author> M. N. Setas, M. R. Gomes, and J. M. Rebord~ao. </author> <title> Dynamic simulation of natural environments in virtual reality. </title> <booktitle> In SIVE95: The First Workshop on Simulation and Interaction in Virtual Environments, </booktitle> <month> July </month> <year> 1995. </year> <institution> University of Iowa, </institution> <address> Iowa City, IA. </address>
Reference-contexts: In order to avoid inconsistencies in the new state, we rely on knowledge of what a viewer can predict about the system, and ensure that these predictions are met. 2 Previous Work Culling dynamical systems has not been extensively addressed in the literature to date. Setas et. al. <ref> [15] </ref> discuss techniques for modeling large numbers of trees, in which they mention that trees out of view may be culled. But the paper does not provide any description of how they address the problems outlined above.
Reference: [16] <author> Seth J. Teller and Carlo H. Sequin. </author> <title> Visibility preprocessing for interactive walkthroughs. </title> <journal> In Computer Graphics, </journal> <volume> volume 24(4), </volume> <pages> pages 61-70. </pages> <publisher> ACM SIGGRAPH, </publisher> <address> July 1991. Las Vegas, Nevada. </address>
Reference: [17] <author> Xiaoyuan Tu and Demetri Terzopoulos. </author> <title> Artificial fishes: Physics, locomotion, perception, behavior. </title> <booktitle> In Computer Graphics: Proceedings of SIG-GRAPH 94, </booktitle> <pages> pages 43-50, </pages> <year> 1994. </year>
Reference-contexts: The limit as the number of transitions approaches infinity can also be computed if the transition probabilities satisfy weak conditions. This will give the long term, limit distribution on states. Efficient handling of state machines is important because many of the proposals for autonomous agents <ref> [2, 17] </ref> use state machines as the means for determining which actions the agent will perform. Agents are highly desirable in virtual environments, and represent a significant computational burden the ideal scenario for culling. * The task of determining what a viewer can predict is a difficult one to automate.
Reference: [18] <author> Eric Veach and Leonidas J. Guibas. </author> <title> Metropolis light transport. </title> <booktitle> In Computer Graphics: Proceedings of SIGGRAPH 97, </booktitle> <month> August </month> <year> 1997. </year> <note> To appear. 24 </note>
Reference-contexts: The space of all paths is large and the 22 collisions lead to regions where nearby paths may diverge rapidly (which is why a viewer cannot predict well). Veach's <ref> [18] </ref> work in bi-directional ray casting may provide some insight. In game environments, such as Doom, virtual characters are traditionally started in fixed states. Entities are activated when a player first approaches, and then are constantly computed until they are killed (or otherwise become static).

References-found: 18

