URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Molekularbiologische-Datenbanken/SS96/mimbd95/aberer.ps.gz
Refering-URL: http://www.cs.uni-bonn.de/III/lehre/seminare/Molekularbiologische-Datenbanken/SS96/mimbd95/
Root-URL: http://cs.uni-bonn.de
Email: email: -aberer,hemm-@darmstadt.gmd.de  
Title: Semantic optimization of biomolecular queries in object-oriented database systems  
Author: Karl Aberer Klemens Hemm 
Address: Dolivostr. 15, D-64293 Darmstadt, GERMANY  
Affiliation: GMD-IPSI,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Aberer, K.: </author> <title> Demand-Driven Database Integration for Biomolecular Applications, in [2] Aberer, K.: The Use of Object-oriented Data Models in Biomolecular Databases, </title> <booktitle> Proc. of the Conf. on Object-Oriented Computing in the Natural Sciences OOCNS, </booktitle> <year> 1994. </year>
Reference-contexts: Merck, Darmstadt participate as industrial partners; the project is funded by the German "Bundesministerium fuer Bildung und Wissenschaft" BMBW, grant number 01IB302E.). In RELIWE's subproject Docking-D an integrated protein/ligand database covering many datasets, that are relevant for drug design <ref> [1] </ref>, including PDB , Swissprot, PIR , DSSP, HSSP and PMD, has been developed on top of GMD-IPSI's object-oriented database system VODAK [16]. Dedicated indexing mechanisms and algorithms are integrated with the database system in order to provide the user with powerful and efficient access mechanisms.
Reference: [3] <author> Aberer, K., Fischer, G.: </author> <title> Semantic Query Optimization for Methods in Object-Oriented Database Systems. </title> <booktitle> International Conference on Data Engineering, </booktitle> <address> March 1995, Taipei, Taiwan. </address>
Reference-contexts: Another reason is that the semantics of methods is far more difficult to access and exploit for query processing. On the other hand considering method semantics for query optimization is an equally important and interesting issue for declarative object-oriented query languages <ref> [3] </ref>. This fact was already recognized in the area of biomolecular databases [9]. Only when methods' semantic is considered in query processing the full power of methods can be exploited by queries. Within VODAK we have implemented an extensible query processing component [3]. <p> and interesting issue for declarative object-oriented query languages <ref> [3] </ref>. This fact was already recognized in the area of biomolecular databases [9]. Only when methods' semantic is considered in query processing the full power of methods can be exploited by queries. Within VODAK we have implemented an extensible query processing component [3]. We are using an algebraic and rule-based approach to query optimization. The query optimizer is generated by using the Volcano optimizer generator [7] and we can generate application-specific query optimization modules.
Reference: [4] <author> Aberer, K., Klas, W., Furtado, A.L.: </author> <title> Designing a User-Oriented Query Modification Facility in Object-Oriented Database Systems, </title> <booktitle> Proceedings of CAiSE*94, </booktitle> <address> Utrecht, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: Another interesting research issue is the design of user-assisting facilities in query processing to correct and complement user queries. First considerations on how such facilities can be integrated with our query processing approach were given in <ref> [4] </ref>.
Reference: [5] <author> Altschul, S.F., Gish, W.Miller, W., Myers, </author> <title> E.W., Lipman, D.J.: Basic local alignment search tool, </title> <journal> J. Mol. Biol., </journal> <volume> 215, </volume> <pages> pp. 403-410, </pages> <year> 1990. </year>
Reference-contexts: The search is often supported by application-specific index structures. Examples for this approach are some of the search algorithms incorporated in WHATIF [15] or the BLAST <ref> [5] </ref> tool. The search interfaces of these tools are either provided within the interfaces of whole systems or as stand-alone scripts. Declarative Querying The notion of declarative query language stems from the area of database management systems, in particular relational database systems [12], where SQL is the most prominent example.
Reference: [6] <author> Durbin, R., Thierry-Mieg, J.: </author> <title> The ACEDB Genome Database, </title> <note> WWW page. </note>
Reference-contexts: Browsing and navigation The user can inspect the database content by browsing through the content of classes, applying simple keyword-driven search and navigating along predefined links. Such functionality is typically offered through hypertext-like interfaces, like WWW. Systems like Entrez [14] or AceDB <ref> [6] </ref> combine these retrieval facilities typically with comfortable user interfaces. This approach is also used for integrating heterogeneous information resources, like with SRSWWW .
Reference: [7] <author> Graefe, G. </author> : <title> Volcano - An Extensible and Parallel Query Evaluation System, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> Vol. 6, No. 1, </volume> <month> Feb. </month> <year> 1994, </year> <pages> pp. 120-135. </pages>
Reference-contexts: Within VODAK we have implemented an extensible query processing component [3]. We are using an algebraic and rule-based approach to query optimization. The query optimizer is generated by using the Volcano optimizer generator <ref> [7] </ref> and we can generate application-specific query optimization modules. We are currently experimenting with application-specific optimization rules that exploit the particular semantics of database methods of the integrated RELIWE protein-ligand database.
Reference: [10] <author> Kim, W.: </author> <title> Object-Oriented Database Systems: Promises, Reality and Future. </title> <editor> In W. Kim (Ed.), </editor> <title> Modern Database Systems, </title> <publisher> ACM Press, </publisher> <year> 1995. </year>
Reference: [11] <author> Lamb, C., Landis, G., et al.: </author> <title> The ObjectStore Database System, </title> <journal> Comm. of the ACM, </journal> <volume> Vol. 34, No. 11, </volume> <pages> p 32-39, </pages> <year> 1991. </year>
Reference: [12] <author> Maier, D.: </author> <title> The Theory of Relational Databases, </title> <publisher> Computer Science Press, </publisher> <year> 1983. </year>
Reference-contexts: The search interfaces of these tools are either provided within the interfaces of whole systems or as stand-alone scripts. Declarative Querying The notion of declarative query language stems from the area of database management systems, in particular relational database systems <ref> [12] </ref>, where SQL is the most prominent example. Query languages are designed to access databases in a completely application-independent way. They allow a declarative specification of the information need, and are backed by powerful query optimization and evaluation components.
Reference: [13] <author> Needleman, S.B., Wunsch, C. A.: </author> <title> General Method Applicable to the Search for Similarities in the Amino Acid Sequences of Two Proteins, Porc. </title> <booktitle> of the National Academy of Science, </booktitle> <volume> Vol. 48, </volume> <pages> p 444-453, </pages> <year> 1970. </year>
Reference-contexts: Navigation is necessary (e.g. chain2.protein.models), because sequence and structure information is encapsulated in different classes (i.e. Chain, Model) related to the protein class. An externally implemented alignment algorithm (Needleman/Wunsch <ref> [13] </ref>) has been incorporated as a database method NWalignment. The query is declarative as it leaves for example open, in which order the classes are traversed, the objects within classes are visited, or the conditions are evaluated.
Reference: [14] <author> NCBI Entrez, </author> <note> WWW page. </note>
Reference-contexts: Browsing and navigation The user can inspect the database content by browsing through the content of classes, applying simple keyword-driven search and navigating along predefined links. Such functionality is typically offered through hypertext-like interfaces, like WWW. Systems like Entrez <ref> [14] </ref> or AceDB [6] combine these retrieval facilities typically with comfortable user interfaces. This approach is also used for integrating heterogeneous information resources, like with SRSWWW .
Reference: [15] <author> Vriend, G., Sander, C., Stouten, P.F.W.: </author> <title> A novel search method for protein sequence-structure relations using property profiles, </title> <journal> Protein Engineering, </journal> <volume> vol. 7, no.1, </volume> <pages> pp. 23-29, </pages> <year> 1994. </year>
Reference-contexts: Search algorithms Many systems offer highly efficient algorithms to search in extreme large and uniform databases or over many different databases for answering fixed or parameterized queries. The search is often supported by application-specific index structures. Examples for this approach are some of the search algorithms incorporated in WHATIF <ref> [15] </ref> or the BLAST [5] tool. The search interfaces of these tools are either provided within the interfaces of whole systems or as stand-alone scripts.
Reference: [16] <author> VODAK release 4.0, </author> <note> obtainable via anonymous ftp from ftp.darmstadt.gmd.de, directory /pub/dimsys/vodak/vodakV4R0.tar.Z. </note>
Reference-contexts: In RELIWE's subproject Docking-D an integrated protein/ligand database covering many datasets, that are relevant for drug design [1], including PDB , Swissprot, PIR , DSSP, HSSP and PMD, has been developed on top of GMD-IPSI's object-oriented database system VODAK <ref> [16] </ref>. Dedicated indexing mechanisms and algorithms are integrated with the database system in order to provide the user with powerful and efficient access mechanisms.
Reference: [17] <author> R. Wolniewciz, G. Graefe: </author> <title> Algebraic Optimization of Computations over Scientific Databases, </title> <booktitle> Proc. of the 19th VLDB Conf., </booktitle> <address> Dublin, Ireland, </address> <year> 1993, </year> <pages> pp. 13-24. </pages>
Reference-contexts: In the context of declarative access however the logical access of a user and the optimal physical access to the scientific data may substantially differ. This is one typical example where semantic query optimization in form of data type specific optimization is needed, as, e.g., also recognized in <ref> [17] </ref>. Another important aspect is the use of methods within declarative queries, which themselves can be complex calculations, like for the example the Needleman/Wunsch algorithm in the previous example query, but also methods containing accesses to virtually integrated databases, that might be rather expensive.
References-found: 14

