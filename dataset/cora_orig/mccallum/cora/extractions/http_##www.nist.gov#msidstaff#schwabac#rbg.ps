URL: http://www.nist.gov/msidstaff/schwabac/rbg.ps
Refering-URL: http://www.nist.gov/msidstaff/schwabac/papers.html
Root-URL: 
Title: Intelligent Gradient-Based Search of Incompletely Defined Design Spaces  
Author: Mark Schwabacher Andrew Gelsey 
Keyword: Optimization, gradients, sequential quadratic programming, rule-based systems.  
Address: Gaithersburg, MD 20899  Piscataway, NJ 08855  
Affiliation: National Institute of Standards and Technology,  Department of Computer Science, Rutgers University,  
Date: 11(3), 1997  
Note: Appears in AIEDAM  
Abstract: Gradient-based numerical optimization of complex engineering designs offers the promise of rapidly producing better designs. However, such methods generally assume that the objective function and constraint functions are continuous, smooth, and defined everywhere. Unfortunately, realistic simulators tend to violate these assumptions. We present a rule-based technique for intelligently computing gradients in the presence of such pathologies in the simulators, and show how this gradient computation method can be used as part of a gradient-based numerical optimization system. We tested the resulting system in the domain of conceptual design of supersonic transport aircraft, and found that using rule-based gradients can decrease the cost of design space search by one or more orders of magnitude.
Abstract-found: 1
Intro-found: 1
Reference: [ Bouchard et al. 1988 ] <author> E. E. Bouchard, G. H. Kidwell, and J. E. Rogan. </author> <title> The application of artificial intelligence technology to aeronautical system design. </title> <booktitle> In AIAA/AHS/ASEE Aircraft Design Systems and Operations Meeting, </booktitle> <address> Atlanta, Georgia, </address> <month> September </month> <year> 1988. </year> <note> AIAA Paper 88-4426. </note>
Reference-contexts: A number of research efforts have combined AI techniques with numerical optimization. [ Ellman et al. 1993 ] describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. <ref> [ Bouchard et al. 1988 ] </ref> describes ways in which expert systems could be applied to the parametric design of aeronautical systems. [ Hoeltzel and Chieng 1987 ] describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance
Reference: [ Bramlette et al. 1990 ] <author> M. Bramlette, E. Bouchard, E. Buckman, and L. Takacs. </author> <title> Current applications of genetic algorithms to aeronautical systems. </title> <booktitle> In Proceedings of the Sixth Annual Aerospace Applications of Artifical Intelligence Conference, </booktitle> <month> October </month> <year> 1990. </year>
Reference-contexts: Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] . <ref> [ Bramlette et al. 1990 ] </ref> surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Ellman et al. 1993 ] <author> T. Ellman, J. Keane, and M. Schwabacher. </author> <title> Intelligent model selection for hillclimbing search in computer-aided design. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 594-599, </pages> <address> Washington, DC, 1993. </address> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: A number of research efforts have combined AI techniques with numerical optimization. <ref> [ Ellman et al. 1993 ] </ref> describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. [ Bouchard et al. 1988 ] describes ways in which expert systems could be applied to the
Reference: [ Forbus and Falkenhainer 1990 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: An integration of qualitative and quantitative knowledge. </title> <booktitle> In Proceedings, Eighth National Conference on Artificial Intelligence, </booktitle> <pages> pages 380-387, </pages> <address> Boston, MA, </address> <year> 1990. </year>
Reference: [ Forbus and Falkenhainer 1992 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Self-explanatory simulations: Scaling up to large models. </title> <booktitle> In Proceedings, Tenth National Conference on Artificial Intelligence, </booktitle> <address> San Jose, CA, </address> <year> 1992. </year>
Reference: [ Forbus and Falkenhainer 1995 ] <author> Kenneth D. Forbus and Brian Falkenhainer. </author> <title> Scaling up self-explanatory simulations: Polynomial-time compilation. </title> <booktitle> In Proceedings, Fourteenth Internationnal Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1798-1805, </pages> <address> Montreal, Quebec, Canada, 1995. </address> <publisher> MIT Press. </publisher>
Reference: [ Gage et al. 1995 ] <author> P. Gage, I. Kroo, and I. Sobieski. </author> <title> Variable-complexity genetic algorithm for topological design. </title> <journal> AIAA Journal, </journal> <volume> 33(11) </volume> <pages> 2212-2217, </pages> <year> 1995. </year>
Reference-contexts: It contains a genetic algorithm, and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two. Powell has tested his system on a realistic jet engine design problem. He does not, however, address the issue of unevaluable points. Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP in two ways.
Reference: [ Gage 1994 ] <author> P. </author> <title> Gage. New Approaches to Optimization in Aerospace Conceptual Design. </title> <type> PhD thesis, </type> <institution> Stanford University, Stanford, </institution> <address> CA, </address> <year> 1994. </year>
Reference-contexts: It contains a genetic algorithm, and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two. Powell has tested his system on a realistic jet engine design problem. He does not, however, address the issue of unevaluable points. Gage <ref> [ Gage 1994, Gage et al. 1995 ] </ref> has also combined genetic algorithms with gradient-based optimization. He combined GA's with SQP in two ways.
Reference: [ Gelsey and Smith 1996 ] <author> Andrew Gelsey and Don Smith. </author> <title> Computational environment for exhaust nozzle design. </title> <journal> Journal of Aircraft, </journal> <volume> 33(3) </volume> <pages> 470-476, </pages> <year> 1996. </year>
Reference-contexts: evaluable point as the "best point found so far," and there is no risk that the optimizer will return as the "optimum" a point which the simulator could not evaluate. 7 5 Aircraft Design We have pursued our investigation in the domain of the conceptual design of supersonic transport aircraft <ref> [ Gelsey and Smith 1996 ] </ref> . Figure 2 shows a diagram of a typical airplane automatically designed by our software system to fly the mission shown in Table 1. Figure 3 shows a block diagram of our automated conceptual design system.
Reference: [ Gelsey et al. 1995 ] <author> Andrew Gelsey, Doyle D. Knight, Song Gao, and Mark Schwabacher. </author> <title> NPARC simulation and redesign of the NASA P2 hypersonic inlet. </title> <booktitle> In 31st Joint Propulsion Conference, </booktitle> <address> San Diego, CA, </address> <month> July </month> <year> 1995. </year> <month> AIAA-95-2760. </month>
Reference: [ Gelsey et al. 1996a ] <author> A. Gelsey, D. Smith, M. Schwabacher, K. Rasheed, and K. Miyake. </author> <title> A search space toolkit: SST. </title> <booktitle> Decision Support Systems, </booktitle> <volume> 18 </volume> <pages> 341-356, </pages> <year> 1996. </year>
Reference-contexts: At first we knew very little about the distribution of unevaluable points in the aircraft design search space. We used our Search Space Toolkit (SST) <ref> [ Gelsey et al. 1996a ] </ref> to help us determine the distribution of unevaluable points in this search space. Because our aircraft design search space is eight-dimensional, it is extremely difficult to visualize the shape of the entire eight-dimensional valid region, so we instead visualized various cross-sections of the space. <p> These domains include the design of racing yachts [ Ellman et al. 1993, Schwabacher et al. 1994, Schwabacher et al. 1996 ] , the design of exhaust nozzles for supersonic jets <ref> [ Gelsey et al. 1996a ] </ref> , the design of inlets for hypersonic jets [ Gelsey et al. 1995, Shukla et al. 1996, Shukla et al. 1997 ] , and the design of inlets for supersonic missiles [ Zha et al. 1996, Zha et al. 1997 ] .
Reference: [ Gelsey et al. 1996b ] <author> Andrew Gelsey, Mark Schwabacher, and Don Smith. </author> <title> Using modeling knowledge to guide design space search. </title> <editor> In J.S. Gero and F. Sudweeks, editors, </editor> <booktitle> Artificial 23 Intelligence in Design '96, </booktitle> <pages> pages 367-385. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, The Netherlands, </address> <year> 1996. </year>
Reference-contexts: These methods are surveyed in [ Sobieszczanski-Sobieski and Haftka 1996 ] . As far as we know, nobody has addressed the issue of computing gradients in the presence of pathologies such as unevaluable points. <ref> [ Gelsey et al. 1996b ] </ref> presents the model constraints method, a method that replaces unevaluable points with infeasible points, and that is described in Section 7. [ Gelsey 1995 ] examines the types of modeling knowledge that are needed so that a simulator can be reliably invoked by another program <p> The best design found in these n optimizations is taken to be the global optimum. 7 Model Constraints Previously, we presented a technique called model constraints for dealing with certain un-evaluable points <ref> [ Gelsey et al. 1996b ] </ref> . Some unevaluable points are caused by designs that violate the modeling assumptions made by the designers of the simulator. <p> which computes gradients using the standard central-difference formula. * Rule-based gradients: This strategy handles the unevaluable points using the rule based gradient computation method described in this article. * Model Constraints: This strategy replaces some of the unevaluable points with in feasible points, using the model constraints strategy described in <ref> [ Gelsey et al. 1996b ] </ref> . * Rule-based gradients and model constraints: This strategy replaces some of the unevaluable points with infeasible points, and uses rule-based gradients to handle the remaining unevaluable points.
Reference: [ Gelsey 1995 ] <author> Andrew Gelsey. </author> <title> Intelligent automated quality control for computational simulation. </title> <journal> Artificial Intelligence for Engineering Design, Analysis and Manufacturing (AI EDAM), </journal> <volume> 9(5) </volume> <pages> 387-400, </pages> <month> November </month> <year> 1995. </year>
Reference-contexts: As far as we know, nobody has addressed the issue of computing gradients in the presence of pathologies such as unevaluable points. [ Gelsey et al. 1996b ] presents the model constraints method, a method that replaces unevaluable points with infeasible points, and that is described in Section 7. <ref> [ Gelsey 1995 ] </ref> examines the types of modeling knowledge that are needed so that a simulator can be reliably invoked by another program and describes algorithms for detecting assumption violations and other problems that might lead to low-quality or unreliable simulation results, but does not discuss what an automated design
Reference: [ Goldberg 1989 ] <author> David E. Goldberg. </author> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: None of these efforts is focused directly on the problem of unevaluable points addressed in this article. Simulated annealing (SA) [ Press et al. 1986 ] and genetic algorithms (GA) <ref> [ Goldberg 1989 ] </ref> are able to deal with certain pathologies, such as nonsmoothness, but they tend to be much slower than gradient-based optimization. They tend to require thousands, or even tens of thousands, of simulations, and are thus not practical when each simulation is expensive.
Reference: [ Hoeltzel and Chieng 1987 ] <author> D. Hoeltzel and W. Chieng. </author> <title> Statistical machine learning for the cognitive selection of nonlinear programming algorithms in engineering design optimization. </title> <booktitle> In Advances in Design Automation, </booktitle> <address> Boston, MA, </address> <year> 1987. </year>
Reference-contexts: describes a method for switching between a less expensive, less accurate simulator, and a more expensive, more accurate simulator during optimization, based on the magnitude of the gradient. [ Bouchard et al. 1988 ] describes ways in which expert systems could be applied to the parametric design of aeronautical systems. <ref> [ Hoeltzel and Chieng 1987 ] </ref> describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance that would be obtained if the design were carried out at a more detailed level. [ Orelup et al. 1988 ] describes
Reference: [ Kroo et al. 1994 ] <author> Ilan Kroo, Steve Altus, Robert Braun, Peter Gage, and Ian So-bieski. </author> <title> Multidisciplinary optimization methods for aircraft preliminary design. </title> <booktitle> In Fifth AIAA/USAF/NASA/ISSMO Symposium on Multidisciplinary Analysis and Optimization, </booktitle> <address> Panama City, Florida, </address> <month> September </month> <year> 1994. </year> <note> AIAA Paper 94-4325. </note>
Reference-contexts: Further, the GA has the potential to find a smooth subspace of the overall search space before starting SQP. Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes <ref> [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] </ref> . [ Bramlette et al. 1990 ] surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Lawrence et al. 1995 ] <author> C. Lawrence, J. Zhou, and A. </author> <title> Tits. User's guide for CFSQP version 2.3: A C code for solving (large scale) constrained nonlinear (minimax) optimization problems, generating iterates satisfying all inequality constraints. </title> <type> Technical Report TR-94-16r1, </type> <institution> Institute for Systems Research, University of Maryland, College Park, MD, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: The numerical optimizer used in the experiments described in this article is CFSQP <ref> [ Lawrence et al. 1995 ] </ref> , a state-of-the-art implementation of the Sequential Quadratic Programming method. 4 Sequential Quadratic Programming is a quasi-Newton method that solves a nonlinear constrained optimization problem by fitting a sequence of quadratic programming problems 5 to it, and then solving each of these problems using a
Reference: [ Orelup et al. 1988 ] <author> M. F. Orelup, J. R. Dixon, P. R. Cohen, and M. K. Simmons. Dominic II: </author> <title> Meta-level control in iterative redesign. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> pages 25-30, </pages> <address> St. Paul, MN, 1988. </address> <publisher> MIT Press, </publisher> <address> Cambridge, MA. </address>
Reference-contexts: the parametric design of aeronautical systems. [ Hoeltzel and Chieng 1987 ] describe a system for digital chip design in which design is done at an abstract level, using machine learning to estimate the performance that would be obtained if the design were carried out at a more detailed level. <ref> [ Orelup et al. 1988 ] </ref> describes a system called 2 Dominic II that uses an expert system to switch among various strategies during numerical optimization. None of these efforts is focused directly on the problem of unevaluable points addressed in this article.
Reference: [ Powell and Skolnick 1993 ] <author> D. Powell and M. Skolnick. </author> <title> Using genetic algorithms in engineering design optimization with non-linear constraints. </title> <booktitle> In Proceedings of the Fifth International Conference on Genetic Algorithms, </booktitle> <pages> pages 424-431, </pages> <institution> Univeristy of Illinois at Urbana-Champaign, </institution> <address> July 1993. </address> <publisher> Morgan Kaufmann, </publisher> <address> Los Altos, CA. </address>
Reference: [ Powell 1990 ] <author> D. Powell. Inter-GEN: </author> <title> A Hybrid Approach to Engineering Design Optimization. </title> <type> PhD thesis, </type> <institution> Rensselaer Polytechnic Institute Department of Computer Science, </institution> <address> Troy, NY, </address> <month> December </month> <year> 1990. </year>
Reference: [ Press et al. 1986 ] <author> W. Press, B. Flannery, S. Teukolsky, and W. Vetterling. </author> <title> Numerical Recipes. </title> <publisher> Cambridge University Press, </publisher> <address> New York, NY, </address> <year> 1986. </year>
Reference-contexts: None of these efforts is focused directly on the problem of unevaluable points addressed in this article. Simulated annealing (SA) <ref> [ Press et al. 1986 ] </ref> and genetic algorithms (GA) [ Goldberg 1989 ] are able to deal with certain pathologies, such as nonsmoothness, but they tend to be much slower than gradient-based optimization. <p> This rule produces a reasonably accurate derivative in the presence of an unevaluable point. Further, it always produces a gradient that points away from the unevaluable region. 1 Choosing an appropriate value of ffi is very important (as it is whenever derivatives are computed using finite differences <ref> [ Press et al. 1986 ] </ref> ).
Reference: [ Schwabacher et al. 1994 ] <author> M. Schwabacher, H. Hirsh, and T. </author> <title> Ellman. Learning prototype-selection rules for case-based iterative design. </title> <booktitle> In Proceedings of the Tenth IEEE Conference on Artificial Intelligence for Applications, </booktitle> <pages> pages 56-62, </pages> <address> San Antonio, Texas, </address> <year> 1994. </year>
Reference: [ Schwabacher et al. 1996 ] <author> M. Schwabacher, T. Ellman, H. Hirsh, and G. Richter. </author> <title> Learning to choose a reformulation for numerical optimization of engineering designs. </title> <editor> In J.S. Gero and F. Sudweeks, editors, </editor> <booktitle> Artificial Intelligence in Design '96, </booktitle> <pages> pages 447-462. </pages> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, The Netherlands, </address> <year> 1996. </year> <month> 24 </month>
Reference: [ Schwabacher 1996 ] <author> Mark Schwabacher. </author> <title> The use of artificial intelligence to improve the numerical optimization of complex engineering designs. </title> <type> Technical Report HPCD-TR-45, </type> <institution> Department of Computer Science, Rutgers University, </institution> <address> New Brunswick, NJ, </address> <month> October </month> <year> 1996. </year> <type> Ph.D. Thesis. </type> <note> http://www.cs.rutgers.edu/~schwabac/thesis.html. </note>
Reference-contexts: The other strategies were orders of magnitude worse, consistent with our hypothesis. 11 We do not know with certainty what the global optimum is. Finding the global optimum of an arbitrary nonlinear function is undecidable <ref> [ Schwabacher 1996 ] </ref> . However, we have performed many optimizations from different random starting points, and a large number of them have converged to the same point.
Reference: [ Shukla et al. 1996 ] <author> Vijay Shukla, Andrew Gelsey, Mark Schwabacher, Donald Smith, and Doyle D. Knight. </author> <title> Automated redesign of the NASA P8 hypersonic inlet using numerical optimization. </title> <booktitle> In AIAA Joint Propulsion Conference, </booktitle> <year> 1996. </year>
Reference: [ Shukla et al. 1997 ] <author> Vijay Shukla, Andrew Gelsey, Mark Schwabacher, Donald Smith, and Doyle D. Knight. </author> <title> Automated design optimization for the P2 and P8 hypersonic inlets. </title> <journal> AIAA Journal of Aircraft, </journal> <volume> 34(2) </volume> <pages> 228-235, </pages> <month> March </month> <year> 1997. </year>
Reference-contexts: Our confidence in rule-based gradients was high enough that we decided to run the optimizations with rule-based gradients. We obtained good optimization results in these domains (results which in the case of hypersonic inlets have been published in the aerodynamics engineering literature <ref> [ Shukla et al. 1997 ] </ref> ), and we believe that the results would have been less good if we had not used rule-based gradients, although we have not been able to experimentally test this belief. 10 Limitations, Future Work, and Conclusions Most of our experiments have been performed in the
Reference: [ Sobieszczanski-Sobieski and Haftka 1996 ] <author> Jaroslaw Sobieszczanski-Sobieski and Raphael T. Haftka. </author> <title> Multidisciplinary aerospace design optimization: Survey of recent developments. </title> <booktitle> In 34th AIAA Aerospace Sciences Meeting and Exhibit, </booktitle> <address> Reno, Nevada, </address> <month> January </month> <year> 1996. </year> <note> AIAA Paper 96-0711. </note>
Reference-contexts: The second approach takes the derivatives of each subcomponent of the simulator, and then solves a system of linear equations to obtain the derivatives of the entire system with respect to the design parameters. These methods are surveyed in <ref> [ Sobieszczanski-Sobieski and Haftka 1996 ] </ref> . <p> A survey of multidisciplinary aerospace design optimization can be found in <ref> [ Sobieszczanski-Sobieski and Haftka 1996 ] </ref> . 3 Unevaluable Points In realistic engineering domains such as aircraft design, engineers often rely on legacy codes to simulate proposed designs. These codes are software programs that have generally been developed over many years, by many people.
Reference: [ Sobieszczanski-Sobieski et al. 1985 ] <author> J. Sobieszczanski-Sobieski, B. B. James, and A. R. Dovi. </author> <title> Structural optimization by multilevel decomposition. </title> <journal> AIAA Journal, </journal> <volume> 23(11) </volume> <pages> 1775-1782, </pages> <month> November </month> <year> 1985. </year>
Reference-contexts: Further, the GA has the potential to find a smooth subspace of the overall search space before starting SQP. Gage does not, however, directly address the issue of unevaluable points. Work on the use of numerical optimization in aircraft design includes <ref> [ Sobieszczanski-Sobieski et al. 1985, Kroo et al. 1994 ] </ref> . [ Bramlette et al. 1990 ] surveys the application of genetic algorithms to the design and manufacture of aeronautical systems.
Reference: [ Tong et al. 1992 ] <author> Siu Shing Tong, David Powell, and Sanjay Goel. </author> <title> Integration of artificial intelligence and numerical optimization techniques for the design of complex aerospace systems. </title> <booktitle> In 1992 Aerospace Design Conference, </booktitle> <address> Irvine, CA, </address> <month> February </month> <year> 1992. </year> <note> AIAA Paper 92-1189. </note>
Reference: [ Tong 1988 ] <author> S. S. Tong. </author> <title> Coupling symbolic manipulation and numerical simulation for complex engineering designs. </title> <booktitle> In International Association of Mathematics and Computers in Simulation Conference on Expert Systems for Numerical Computing, </booktitle> <institution> Purdue University, West Lafayette, IN, </institution> <year> 1988. </year>
Reference-contexts: Powell [ Powell 1990, Tong et al. 1992, Powell and Skolnick 1993 ] has built a module called Inter-GEN, part of the ENGINEOUS system <ref> [ Tong 1988 ] </ref> , that seeks to combine the ability of genetic algorithms to handle multiple local optima with the speed of numerical optimization algorithms. It contains a genetic algorithm, and a numerical optimizer, and uses a rule-based expert system to decide when to switch between the two.
Reference: [ Zha et al. 1996 ] <author> G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, D. Knight, and M. Haas. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <booktitle> In 6th AIAA/NASA/USAF Multidisciplinary Analysis & Optimization Symposium, </booktitle> <address> Bellevue, WA, </address> <month> September </month> <year> 1996. </year> <note> AIAA Paper 96-4142. </note>
Reference-contexts: et al. 1996 ] , the design of exhaust nozzles for supersonic jets [ Gelsey et al. 1996a ] , the design of inlets for hypersonic jets [ Gelsey et al. 1995, Shukla et al. 1996, Shukla et al. 1997 ] , and the design of inlets for supersonic missiles <ref> [ Zha et al. 1996, Zha et al. 1997 ] </ref> . All of these domains use simulators that are more expensive than our airframe simulator.
Reference: [ Zha et al. 1997 ] <author> G.-C. Zha, D. Smith, M. Schwabacher, K. Rasheed, A. Gelsey, D. Knight, and M. Haas. </author> <title> High performance supersonic missile inlet design using automated optimization. </title> <journal> AIAA Journal of Aircraft, </journal> <volume> 34(6) </volume> <pages> 697-705, </pages> <month> November </month> <year> 1997. </year> <month> 25 </month>
Reference-contexts: et al. 1996 ] , the design of exhaust nozzles for supersonic jets [ Gelsey et al. 1996a ] , the design of inlets for hypersonic jets [ Gelsey et al. 1995, Shukla et al. 1996, Shukla et al. 1997 ] , and the design of inlets for supersonic missiles <ref> [ Zha et al. 1996, Zha et al. 1997 ] </ref> . All of these domains use simulators that are more expensive than our airframe simulator.
References-found: 32

