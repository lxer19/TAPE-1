URL: http://www.ai.mit.edu/~mpf/desktop/RevComp/import/papers/unprinted/montecarlo.ps
Refering-URL: 
Root-URL: 
Title: Monte Carlo simulation of quantum computation  
Author: N. J. Cerf and S. E. Koonin W. K. Kellogg 
Address: Pasadena, California 91125  
Affiliation: Radiation Laboratory, 106-38 California Institute of Technology,  
Date: 26 Mar 1997  January 1997  
Note: quant-ph/9703050  Transform is discussed.  
Abstract: The many-body dynamics of a quantum computer can be reduced to the time evolution of non-interacting quantum bits in auxiliary fields by use of the Hubbard-Stratonovich representation of two-bit quantum gates in terms of one-bit gates. This makes it possible to perform the stochastic simulation of a quantum algorithm, based on the Monte Carlo evaluation of an integral of dimension polynomial in the number of quantum bits. As an example, the simulation of the quantum circuit for the Fast Fourier 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Lloyd, </author> <note> Science 261, 1569 (1993); ibid. 273, 1073 (1996). </note>
Reference-contexts: 1 Introduction The potential use of quantum computers for solving certain classes of problems has recently received a considerable amount of attention (see, e.g., <ref> [1, 2, 3] </ref> for a comprehensive review). Several quantum algorithms have been developed, such as quantum factoring [4], having the potential for revolutionizing computer science.
Reference: [2] <author> D. P. DiVincenzo, </author> <note> Science 270, 255 (1995). </note>
Reference-contexts: 1 Introduction The potential use of quantum computers for solving certain classes of problems has recently received a considerable amount of attention (see, e.g., <ref> [1, 2, 3] </ref> for a comprehensive review). Several quantum algorithms have been developed, such as quantum factoring [4], having the potential for revolutionizing computer science.
Reference: [3] <author> A. Ekert and R. Jozsa, </author> <title> Rev. Mod. </title> <journal> Phys. </journal> <volume> 68, </volume> <month> 733 </month> <year> (1996). </year>
Reference-contexts: 1 Introduction The potential use of quantum computers for solving certain classes of problems has recently received a considerable amount of attention (see, e.g., <ref> [1, 2, 3] </ref> for a comprehensive review). Several quantum algorithms have been developed, such as quantum factoring [4], having the potential for revolutionizing computer science. <p> Example: the quantum FFT circuit Let us now discuss the scaling of the computational effort required to simulate a quantum algorithm, focusing on the quantum FFT algorithm [14] used in Shor's factoring algorithm as an illustration. 4 Since Shor's algorithm has been described in details in the literature (see, e.g., <ref> [3] </ref> for a review), it will be suffi cient to note that, after a certain number of computational steps, the quantum register is in a periodic superposition of states jai labeled by an integer between 4 Note that the FFT is not the most computationally demanding task in Shor's algorithm, but
Reference: [4] <author> P. W. Shor, </author> <booktitle> Proc. 35th Annual Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Press (1994). </publisher>
Reference-contexts: 1 Introduction The potential use of quantum computers for solving certain classes of problems has recently received a considerable amount of attention (see, e.g., [1, 2, 3] for a comprehensive review). Several quantum algorithms have been developed, such as quantum factoring <ref> [4] </ref>, having the potential for revolutionizing computer science. The purpose of this paper is to explore the application of a Monte Carlo method that has been developed in the context of quantum many-body systems to the simulation of quantum computers [5]. <p> For example, the quantum Fast Fourier Transform (FFT) circuit [14] used in quantum factoring <ref> [4] </ref> requires G = L (L 1)=2 two-bit gates.
Reference: [5] <author> S. E. Koonin, </author> <note> JASON report (JSR-95-115). </note>
Reference-contexts: The purpose of this paper is to explore the application of a Monte Carlo method that has been developed in the context of quantum many-body systems to the simulation of quantum computers <ref> [5] </ref>. Quantum computers can be seen as peculiar quantum many-body systems that evolve according to a non-local time-dependent interaction so as to carry out a "computation".
Reference: [6] <author> A. Barenco, C.H. Bennett, R. Cleve, D.P. DiVincenzo, N. Margolus, P. Shor, T. Sleator, J.A. Smolin, and H. Weinfurter, </author> <note> Phys. Rev. A 52, 3457 (1995). </note>
Reference-contexts: The component quantum bits (qubits) interact via a sequence of quantum gates, performing each a prescribed unitary transformation (rotation, Hadamard transformation, controlled not, controlled phase, etc.) <ref> [6] </ref>. Two-bit (or n-bit) gates therefore effect non-local interactions between qubits, and the "quantum algorithm" (characterized by a network of quantum gates) corresponds to a specific sequence of fl Submitted to the IMACS Seminar on Monte Carlo Methods, Brussels, April 1-3, 1997. 1 unitary transformations, i.e., a time-dependent interaction. <p> It has been shown that two-bit gates are universal, that is quantum gates operating on one and two qubits are sufficient to construct a general quantum circuit <ref> [6, 11, 12, 13] </ref>. <p> For example, the controlled-not gate <ref> [6] </ref> acting on qubit a (as a control) and qubit b (as a target) has ff = =4, A = 1 z , 2 terms of two one-bit gates in fluctuating auxiliary fields , t . and B = 1 x , with x , z being Pauli matrices.
Reference: [7] <author> J. W. Negele and H. Orland, </author> <title> Quantum Many-Particle Systems, </title> <publisher> (Addison-Wesley, </publisher> <address> Reading, </address> <year> 1988). </year>
Reference-contexts: Numerous methods have been developed for years in order to treat general quantum many-particle systems (see, e.g., <ref> [7] </ref>). It is therefore intriguing to examine whether the application of the same methods to quantum computers might be similarly successful.
Reference: [8] <author> J. </author> <title> Hubbard, </title> <journal> Phys. Lett. </journal> <volume> 3, </volume> <booktitle> 77 (1959); R. </booktitle> <address> D. Stratonovich, </address> <publisher> Dokl. Akad. Nauk. SSSR 115, </publisher> <year> 1907 (1957) </year> <month> [Sov. </month> <journal> Phys. Dokl. </journal> <volume> 2, </volume> <month> 416 </month> <year> (1958)]. </year>
Reference-contexts: It is therefore intriguing to examine whether the application of the same methods to quantum computers might be similarly successful. We focus here on a stochastic approach based on the Hubbard-Stratonovich transformation <ref> [8] </ref> which has been shown to be suitable for the description of quantum many-body systems (see, e.g., [9, 10]).
Reference: [9] <author> Y. Alhassid and S. E. Koonin, </author> <note> Phys. Rev. C 23, 1590 (1981); Y. </note> <author> Alhassid, B. Muller, and S. E. </author> <title> Koonin, </title> <journal> Phys. Rev. </journal> <volume> C 23, </volume> <month> 487 </month> <year> (1981). </year>
Reference-contexts: It is therefore intriguing to examine whether the application of the same methods to quantum computers might be similarly successful. We focus here on a stochastic approach based on the Hubbard-Stratonovich transformation [8] which has been shown to be suitable for the description of quantum many-body systems (see, e.g., <ref> [9, 10] </ref>). The central idea of this approach is to replace the many-body propagator for the entire quantum computer (of say L "interacting" qubits) with L one-bit propagators in fluctuating auxiliary fields, thereby "decoupling" the qubits.
Reference: [10] <author> C. W. Johnson, S. E. Koonin, G. H. Lang, and W. E. </author> <title> Ormand, </title> <journal> Phys. Rev. Lett. </journal> <volume> 69, 3157 (1992); S.E. </volume> <editor> Koonin, D.J. Dean, and K. Langanke, </editor> <title> Phys. </title> <type> Rep. 278, </type> <month> 2 </month> <year> (1997). </year>
Reference-contexts: It is therefore intriguing to examine whether the application of the same methods to quantum computers might be similarly successful. We focus here on a stochastic approach based on the Hubbard-Stratonovich transformation [8] which has been shown to be suitable for the description of quantum many-body systems (see, e.g., <ref> [9, 10] </ref>). The central idea of this approach is to replace the many-body propagator for the entire quantum computer (of say L "interacting" qubits) with L one-bit propagators in fluctuating auxiliary fields, thereby "decoupling" the qubits.
Reference: [11] <author> D. P. DiVincenzo, </author> <note> Phys. Rev. A 51, 1015 (1995). </note>
Reference-contexts: It has been shown that two-bit gates are universal, that is quantum gates operating on one and two qubits are sufficient to construct a general quantum circuit <ref> [6, 11, 12, 13] </ref>.
Reference: [12] <author> D. Deutsch, A. Barenco, and A. Ekert, </author> <booktitle> Proc. R. </booktitle> <publisher> Soc. </publisher> <address> London A 449, </address> <month> 669 </month> <year> (1995). </year>
Reference-contexts: It has been shown that two-bit gates are universal, that is quantum gates operating on one and two qubits are sufficient to construct a general quantum circuit <ref> [6, 11, 12, 13] </ref>.
Reference: [13] <author> S. </author> <title> Lloyd, </title> <journal> Phys. Rev. Lett. </journal> <volume> 75, </volume> <month> 346 </month> <year> (1995). </year>
Reference-contexts: It has been shown that two-bit gates are universal, that is quantum gates operating on one and two qubits are sufficient to construct a general quantum circuit <ref> [6, 11, 12, 13] </ref>.
Reference: [14] <author> D. Coppersmith, </author> <title> IBM Res. </title> <type> Rep. </type> <address> RC19642 (1994); D. </address> <note> Deutsch, unpublished. </note>
Reference-contexts: For example, the quantum Fast Fourier Transform (FFT) circuit <ref> [14] </ref> used in quantum factoring [4] requires G = L (L 1)=2 two-bit gates. <p> of O then yields the output of the quantum computation, the statistics being controlled by adjusting the length of the random walk. 5 Example: the quantum FFT circuit Let us now discuss the scaling of the computational effort required to simulate a quantum algorithm, focusing on the quantum FFT algorithm <ref> [14] </ref> used in Shor's factoring algorithm as an illustration. 4 Since Shor's algorithm has been described in details in the literature (see, e.g., [3] for a review), it will be suffi cient to note that, after a certain number of computational steps, the quantum register is in a periodic superposition of <p> The input qubits of the quantum register (L = 2) are labeled 0 (and 1) for the least (and most) significant qubit. The two-bit quantum FFT circuit <ref> [14] </ref> requires a single two-bit gate, a controlled-phase operator C 01 = e i!AB acting on qubits a and b, with ! = =2 and A = B = (1 z )=2, and two additional one-bit gates H 0 and H 1 , with H being the Hadamard transformation, Hj0i !
Reference: [15] <author> L. K. Grover, </author> <booktitle> Proc. 28th Annual ACM Symposium on Theory of Computing (1996). </booktitle>
Reference-contexts: At least, some quantum algorithms are known to provide a deterministic result, such as Grover's algorithm <ref> [15] </ref>, so that the output bits are then in a product state.
Reference: [16] <author> N. A. Gershenfeld and I. L. Chuang, </author> <note> Science 275, 350 (1997). </note>
Reference-contexts: At least, some quantum algorithms are known to provide a deterministic result, such as Grover's algorithm [15], so that the output bits are then in a product state. Note that the same requirement must be met for the recently suggested realization of quantum computers using NMR experiments <ref> [16] </ref>. 5 The central point now is that, using Eqs. (5) and (6), the numerator and denominator in Eq. (10) can be expressed in terms of an infinite sum of products of L one-bit matrix elements for each qubit, hOi = D D 0 e P g t 0 l=1 h0
Reference: [17] <author> N. Metropolis, A. W. Rosenbluth, M. N. Rosenbluth, A. H. Teller and E. Teller, J. </author> <title> Chem. </title> <journal> Phys. </journal> <volume> 21, </volume> <month> 1087 </month> <year> (1953). </year>
Reference-contexts: The simplest possibility is to perform an importance sampling of the paths according to the weight je iS j. (Note that this weight is not equal to 1 since S is generally complex.) This can be done for example using the Metropolis method <ref> [17] </ref>. A random walk in the auxiliary-field space is simulated, such that the limit 6 distribution of sampled paths is proportional to je iS j.
Reference: [18] <author> G. Parisi and Y. S. Wu, </author> <note> Sci. Sin. 24, 483 (1981); G. Parisi, </note> <institution> Phys. Lett. B131, </institution> <month> 393 </month> <year> (1983). </year>
Reference-contexts: overcome, the standard Metropolis method seems therefore to be inefficient in this context. 3 Since the weight of the paths in Eq. (13) is complex (this is at the heart of the sign problem) a more promising possibility is the recourse to a simulation based on the complex Langevin equation <ref> [18, 19] </ref>. In the Langevin algorithm (see, e.g., [20, 21]), paths distributed according to the "complex probability distribution" ~ e iS can be generated, allowing the computation of Eq. (13) as a time average over a guided random walk for the fields in complex plane.
Reference: [19] <author> J. R. </author> <title> Klauder, </title> <journal> Phys. Rev. </journal> <volume> A 29, </volume> <year> 2036 (1984). </year>
Reference-contexts: overcome, the standard Metropolis method seems therefore to be inefficient in this context. 3 Since the weight of the paths in Eq. (13) is complex (this is at the heart of the sign problem) a more promising possibility is the recourse to a simulation based on the complex Langevin equation <ref> [18, 19] </ref>. In the Langevin algorithm (see, e.g., [20, 21]), paths distributed according to the "complex probability distribution" ~ e iS can be generated, allowing the computation of Eq. (13) as a time average over a guided random walk for the fields in complex plane.
Reference: [20] <author> K. Okano, L. Schulke, and B. Zheng, </author> <title> Prog. </title> <journal> Theor. Phys. </journal> <volume> Suppl. 111, </volume> <month> 313 </month> <year> (1993). </year>
Reference-contexts: In the Langevin algorithm (see, e.g., <ref> [20, 21] </ref>), paths distributed according to the "complex probability distribution" ~ e iS can be generated, allowing the computation of Eq. (13) as a time average over a guided random walk for the fields in complex plane. <p> Although a general proof of the convergence of the complex Langevin simulation does not exist <ref> [20] </ref>, it turns out to work very nicely for a number of systems (the convergence is related to the location of the repulsive points of the Langevin dynamics).
Reference: [21] <author> C. Adami and S. E. Koonin, </author> <note> unpublished. 12 </note>
Reference-contexts: In the Langevin algorithm (see, e.g., <ref> [20, 21] </ref>), paths distributed according to the "complex probability distribution" ~ e iS can be generated, allowing the computation of Eq. (13) as a time average over a guided random walk for the fields in complex plane.
References-found: 21

