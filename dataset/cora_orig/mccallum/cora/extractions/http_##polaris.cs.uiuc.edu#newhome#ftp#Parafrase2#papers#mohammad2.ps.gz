URL: http://polaris.cs.uiuc.edu/newhome/ftp/Parafrase2/papers/mohammad2.ps.gz
Refering-URL: http://polaris.cs.uiuc.edu/newhome/ftp/Parafrase2/papers/
Root-URL: http://www.cs.uiuc.edu
Title: SYMBOLIC ANALYSIS IN AID OF LOOP SCHEDULING  
Author: MOHAMMAD R. HAGHIGHAT and CONSTANTINE D. POLYCHRONOPOULOS 
Address: Urbana, Illinois 61801, U.S.A.  Urbana, Illinois 61801, U.S.A.  
Affiliation: Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  Center for Supercomputing Research and Development University of Illinois at Urbana-Champaign  
Abstract: One of the most thoroughly investigated problems in parallel processing has been that of extracting and utilizing loop-level parallelism. The fact that it remains one of the most active problems is a testament to its importance, as well as to the adequacy (or lack thereof) of existing solutions. In general, static approaches to scheduling of parallel loops suffer from poor load balancing, while dynamic schemes may incur significant run-time overhead. In this paper we outline a novel and radically different approach to the problem of loop scheduling which is based on symbolic program analysis. The net result is the ability to statically partition irregular loops with variable size body into a set of unequal partitions; thus achieving load balancing that only the most flexible dynamic heuristics can achieve, but without incurring the run-time overhead. The same principles are used to partition a loop into equal workload (as opposed to equal size) activities at run-time. The fundamental properties of this approach establish it as the most robust and generally efficient solution to loop-level scheduling. Some experimental evidence supports this anticipation. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> I. Barani and Z. Furedi. </author> <title> Computing the volume is difficult. </title> <booktitle> In 18th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 442-447, </pages> <address> Berkeley, Califor-nia, </address> <year> 1986. </year>
Reference: 2. <author> S. K. Debray and N. W. Lin. </author> <title> Cost analysis of logic programs. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 15(5) </volume> <pages> 826-875, </pages> <month> November </month> <year> 1993. </year>
Reference: 3. <author> M. Dyer, A. Frieze, and R. Kannan. </author> <title> A random polynomial time algorithm for approximating the volume of convex bodies. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 38(1) </volume> <pages> 1-17, </pages> <month> January </month> <year> 1991. </year>
Reference: 4. <author> L. E. Flynn and S. Flynn Hummel. </author> <title> Scheduling variable-length parallel subtasks. </title> <type> Technical Report RC15492, </type> <institution> IBM T.J. Watson Research Center, </institution> <month> Febru-ary </month> <year> 1990. </year>
Reference: 5. <author> S. Flynn Hummel, E. Schonberg, and L. E. Flynn. </author> <title> Factoring: A method for scheduling parallel loops. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 35(8) </volume> <pages> 90-101, </pages> <month> August </month> <year> 1992. </year>
Reference: 6. <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability, A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco, California, </address> <year> 1979. </year>
Reference: 7. <author> M. B. Girkar. </author> <title> Functional Parallelism : Theoretical Foundations and Imple--mentation. </title> <type> PhD dissertation, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> December </month> <year> 1991. </year>
Reference: 8. <author> M. R. Haghighat. </author> <title> Symbolic Analysis for High Performance Parallelizing Compilers. </title> <type> PhD dissertation, </type> <institution> University of Illinois at Urbana-Champaign, </institution> <month> August </month> <year> 1994. </year> <note> In preparation. </note>
Reference: 9. <author> M. R. Haghighat and C. D. Polychronopoulos. </author> <title> Symbolic program analysis and optimization for parallelizing compilers. </title> <booktitle> 5th Annual Workshop on Languages and Compilers for Parallel Computing, </booktitle> <address> New Haven, CT, </address> <month> August 3-5 </month> <year> 1992. </year>
Reference: 10. <author> T. Hickey and J. Cohen. </author> <title> Automating program analysis. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 35(1) </volume> <pages> 185-220, </pages> <month> January </month> <year> 1988. </year>
Reference: 11. <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, Vol. 1 / Fundamental Algorithms. </booktitle> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <note> second edition, </note> <year> 1973. </year>
Reference: 12. <author> D. Kozen. </author> <title> Semantics of probabilistic programs. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 22(3) </volume> <pages> 328-350, </pages> <month> June </month> <year> 1981. </year>
Reference: 13. <author> C. Kruskal and A. Weiss. </author> <title> Allocating independent subtasks on parallel processors. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-11(10), </volume> <month> October </month> <year> 1985. </year>
Reference: 14. <author> J. E. Moreira. </author> <title> Auto-scheduling Compilers. </title> <type> PhD dissertation, </type> <institution> University of Illinois at Urbana-Champaign, Urbana, Illinois, </institution> <month> May </month> <year> 1994. </year> <note> In preparation. </note>
Reference: 15. <author> C. D. Polychronopoulos and D. J. Kuck. </author> <title> Guided self-scheduling: A practical scheduling scheme for parallel computers. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(12):1425-1439, </volume> <month> December </month> <year> 1987. </year>
Reference: 16. <author> W. H. Press, S. A. Teukolsky, Vetterling W. T., and B. P. Flannery. </author> <title> Numerical Recipes in FORTRAN: </title> <booktitle> The Art of Scientific Computing. </booktitle> <publisher> Cambridge University Press, </publisher> <address> second edition, </address> <year> 1992. </year>
Reference: 17. <author> L. H. Ramshaw. </author> <title> Formalizing the analysis of algorithms. </title> <type> Technical Report SL-79-5, </type> <institution> Xerox Palo Alto Research Center, Palo Alto, California, </institution> <year> 1979. </year>
Reference: 18. <author> V. Sarkar. </author> <title> Determining average program execution times and their variance. </title> <booktitle> In Proceedings of the ACM SIGPLAN '89 Conference on Programming Language Design and Implementation, </booktitle> <pages> pages 298-312, </pages> <address> Portland, Oregon, </address> <month> June 21-23 </month> <year> 1989. </year>
Reference: 19. <author> V. Sarkar. </author> <title> Partitioning and Scheduling Parallel Programs for Multiprocessors. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Massachusetts, </address> <year> 1989. </year>
Reference: 20. <author> P. Tang and P.-C. Yew. </author> <title> Processor self-scheduling for multiple-nested parallel loops. </title> <booktitle> In Proceedings of the 1986 ICPP, </booktitle> <address> St. Charles, Illinois, </address> <month> August </month> <year> 1986. </year>
Reference: 21. <author> T. H. Tzen and L. M. Ni. </author> <title> Dynamic loop scheduling for shared memory multiprocessors. </title> <booktitle> In Proceedings of the 1991 ICPP, volume 2, </booktitle> <address> St. Charles, Illinois, </address> <month> August </month> <year> 1991. </year>
Reference: 22. <author> B. Wegbreit. </author> <title> Mechanical program analysis. </title> <journal> Communications of the Association for Computing Machinery, </journal> <volume> 18(9) </volume> <pages> 528-539, </pages> <month> September </month> <year> 1975. </year>
Reference: 23. <author> B. Wegbreit. </author> <title> Verifying program performance. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 23(4) </volume> <pages> 691-699, </pages> <month> October </month> <year> 1976. </year>
References-found: 23

