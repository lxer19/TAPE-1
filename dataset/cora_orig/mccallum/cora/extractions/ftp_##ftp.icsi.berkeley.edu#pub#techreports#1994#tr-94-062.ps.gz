URL: ftp://ftp.icsi.berkeley.edu/pub/techreports/1994/tr-94-062.ps.gz
Refering-URL: http://www.icsi.berkeley.edu/techreports/1994.html
Root-URL: http://www.icsi.berkeley.edu
Email: phlipp  
Title: Sather 1.0 Tutorial  
Phone: (510) 643-9153 FAX (510) 643-7684  
Author: Michael Philippsen 
Date: 0.1, December 1994  
Note: Version  On leave from  
Web: icsi.berkeley.edu TR-94-062  
Address: I 1947 Center St. Suite 600 Berkeley, California 94704-1198  
Affiliation: INTERNATIONAL COMPUTER SCIENCE INSTITUTE  Department of Computer Science, University of Karlsruhe, Germany  
Abstract: We thoroughly describe the implementation of a basic chess program. By carefully reading this document and the discussed example program, you will learn enough about Sather 1.0 to start programming in Sather 1.0 yourself. This document is intended for programmers familiar with object oriented languages such as Eiffel or C++. General information on object oriented programming can be found in [5]. The main features of Sather 1.0 are explained in detail: we cover the difference between subtyping and implementation inheritance and explain the implementation and usage of iters. Moreover, the example program introduces all the class elements (constants, shared and object attributes, routines and iters) are introduced. Most statements and most expressions are also discussed. Where appropriate, the usage of some basic features which are provided by the Sather 1.0 libraries are demonstrated. The Tutorial is completed by showing how an external class can be used to interface to a C program. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Robert Henderson and Benjamin Zorn. </author> <title> A comparison of object-oriented programming in four modern languages. </title> <type> Technical Report CU-CS-641-93, </type> <institution> University of Colerado, Boulder, </institution> <month> July </month> <year> 1993. </year>
Reference-contexts: The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in <ref> [1, 3, 12] </ref>. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online. <p> [0]. c.size returns the number of elements stored in the array. c [c.size-1] accesses the last element. 38setup (args:ARRAYfSTRg):BOOL is 39-- set defaults 40ret : BOOL := true; -- the default is that the parameters are ok 41p ::= #ARRAYfCHARg (2); 42p [0] := 'H'; -- default: human player 43p <ref> [1] </ref> := 'C'; -- default: computer player 44d : CHAR := 'X'; -- type of display First of all, setup creates a few variables that will hold the result of the evaluation of the command line arguments. <p> The # symbols is syntactic sugar for calls of create routines. If the create routine need additional arguments, they must be supplied behind the # symbol. Here the array has two characters which can be accessed as p [0] and p <ref> [1] </ref>. In the following code segment, the arguments get processed in a loop (lines 47-65). The first argument, args [0] is left out, since this contains the name of the running program. <p> In contrast to BOARD, 77-- this object has a special create routine, that needs an argument. 78white := #HUMAN (board.white to play); 79else 80white := #MINMAX (board.white to play); 81end; 82if p <ref> [1] </ref> = 'H' then 83black := #HUMAN (~board.white to play); 84else 85black := #MINMAX (~board.white to play); 86end; 87-- the first player is White 88player := white; 89else 90#OUT+"To start Sather Tutorial Chess use: nn"; 91#OUT+"args [0] [&lt;white&gt; &lt;black&gt;] [&lt;Displ&gt;]nn"; 92#OUT+" &lt;white&gt; can be either H for Human Playernn"; 9 93#OUT+"
Reference: [2] <author> Chu-Cheow Lim and A. Stolcke. </author> <title> Sather language design and performance evaluation. </title> <type> Technical Report TR-91-034, </type> <institution> International Computer Science Institute, Berkeley, </institution> <month> May </month> <year> 1991. </year>
Reference-contexts: Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see <ref> [2, 4, 11, 13] </ref>. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in [1, 3, 12]. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online.
Reference: [3] <author> Scott Milton and Heinz W. Schmidt. </author> <title> Dynamic dispatch in object-oriented languages. </title> <type> Technical Report TR-CS-94-02, </type> <institution> CSIRO Division of Information Technology, Canberra, Australia, </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in <ref> [1, 3, 12] </ref>. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online.
Reference: [4] <author> Stephan Murer, Stephen Omohundro, and Clemens Szyperski. Sather Iters: </author> <title> Object-oriented iteration abstraction. </title> <type> Technical Report TR-93-045, </type> <institution> International Computer Science Institute, Berkeley, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see <ref> [2, 4, 11, 13] </ref>. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in [1, 3, 12]. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online.
Reference: [5] <editor> Object-Orientation FAQ. </editor> <address> http://iamwww.unibe.ch/ scg/OOinfo/FAQ. </address>
Reference: [6] <author> Stephen M. Omohundro. </author> <title> The differences between Sather and Eiffel. </title> <journal> Eiffel Outlook, </journal> <volume> 1(1) </volume> <pages> 12-14, </pages> <month> April </month> <year> 1991. </year>
Reference-contexts: Send mail to info@icsi.berkeley.edu for more information. The current language specification is published in [10]. This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in <ref> [6, 7, 8, 9] </ref>. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view.
Reference: [7] <author> Stephen M. Omohundro. </author> <title> Sather's design. </title> <journal> Eiffel Outlook, </journal> <volume> 1(3) </volume> <pages> 20-21, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Send mail to info@icsi.berkeley.edu for more information. The current language specification is published in [10]. This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in <ref> [6, 7, 8, 9] </ref>. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view.
Reference: [8] <author> Stephen M. Omohundro. </author> <title> Sather provides nonproprietary access to object-oriented programming. </title> <journal> Computer in Physics, </journal> <volume> 6(5) </volume> <pages> 444-449, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Send mail to info@icsi.berkeley.edu for more information. The current language specification is published in [10]. This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in <ref> [6, 7, 8, 9] </ref>. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. <p> first player is set to be white, both kings have not moved. 13private set up is 14position ::= #POS; 15white to play := true; 16-- set up white pieces 17whitepieces := #(16); 18position.pos := "a2"; 19loop i::=0.upto!(7); 20whitepieces [i] := #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces <ref> [8] </ref> := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces [9] := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces [10] := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces [11] := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces [12] := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT <p> := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces <ref> [8] </ref> := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces [9] := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces [10] := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces [11] := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces [12] := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces [13] := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT
Reference: [9] <author> Stephen M. Omohundro. </author> <title> The Sather programming language. </title> <journal> Dr. Dobb's Journal, </journal> <volume> 18(11) </volume> <pages> 42-48, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Send mail to info@icsi.berkeley.edu for more information. The current language specification is published in [10]. This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in <ref> [6, 7, 8, 9] </ref>. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. <p> kings have not moved. 13private set up is 14position ::= #POS; 15white to play := true; 16-- set up white pieces 17whitepieces := #(16); 18position.pos := "a2"; 19loop i::=0.upto!(7); 20whitepieces [i] := #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces [8] := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces <ref> [9] </ref> := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces [10] := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces [11] := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces [12] := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK <p> := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces <ref> [9] </ref> := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces [10] := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces [11] := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces [12] := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces [13] := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT (position,PIECE::black); 45position.pos := "h8"; blackpieces [15] := #ROOK
Reference: [10] <author> Stephen M. Omohundro. </author> <title> The Sather 1.0 specification. </title> <type> Technical Report TR-in preparation, </type> <institution> International Computer Science Institute, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: Others can be retrieved via anonymous ftp from ftp.icsi.berkeley.edu under /pub/techreports. As a last resort, hardcopies may be ordered for a small fee. Send mail to info@icsi.berkeley.edu for more information. The current language specification is published in <ref> [10] </ref>. This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in [13]. <p> TUPfINT,FLTg has attributes t1:INT and t2:FLT). It defines a create routine with an argument corresponding to each attribute. There are more basic data types. Since these are irrelevant for this Tutorial, the interested reader is referred to the manual <ref> [10] </ref>. <p> These are evaluated for every call of the iter. But since this kind of argument is not used in Sather Tutorial Chess, the reader is referred to the Sather Manual <ref> [10] </ref> for further discussion. 33 checked. If this position is still on the board it is returned to the caller. This is done in line 192 by the yield statement. After the caller has processed the new position, the next call to the iter will resume after line 192. <p> 14position ::= #POS; 15white to play := true; 16-- set up white pieces 17whitepieces := #(16); 18position.pos := "a2"; 19loop i::=0.upto!(7); 20whitepieces [i] := #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces [8] := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces [9] := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces <ref> [10] </ref> := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces [11] := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces [12] := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := <p> := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces [9] := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces <ref> [10] </ref> := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces [11] := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces [12] := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces [13] := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT (position,PIECE::black); 45position.pos := "h8"; blackpieces [15] := #ROOK (position,PIECE::black); 46white K moved := false; 47black K
Reference: [11] <author> Stephen M. Omohundro and Chu-Cheow Lim. </author> <title> The Sather language and libraries. </title> <type> Technical Report TR-92-017, </type> <institution> International Computer Science Institute, Berkeley, </institution> <month> March </month> <year> 1992. </year>
Reference-contexts: Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see <ref> [2, 4, 11, 13] </ref>. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in [1, 3, 12]. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online. <p> 16-- set up white pieces 17whitepieces := #(16); 18position.pos := "a2"; 19loop i::=0.upto!(7); 20whitepieces [i] := #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces [8] := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces [9] := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces [10] := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces <ref> [11] </ref> := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces [12] := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] <p> set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces [9] := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces [10] := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces <ref> [11] </ref> := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces [12] := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces [13] := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT (position,PIECE::black); 45position.pos := "h8"; blackpieces [15] := #ROOK (position,PIECE::black); 46white K moved := false; 47black K moved := false; 48last move := void; 49MAIN::display.redraw
Reference: [12] <author> Heinz W. Schmidt and Stephen M. Omohundro. </author> <title> CLOS, Eiffel, and Sather: A comparison. </title> <editor> In Andreas Paepcke, editor, </editor> <booktitle> Object-Oriented Programming: The CLOS Perspective, </booktitle> <pages> pages 181-213. </pages> <publisher> MIT Press Cambridge, </publisher> <address> Massachusetts, London, England, </address> <year> 1993. </year> <note> Available as ICSI TR-91-047. </note>
Reference-contexts: The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in <ref> [1, 3, 12] </ref>. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online. <p> 18position.pos := "a2"; 19loop i::=0.upto!(7); 20whitepieces [i] := #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces [8] := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces [9] := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces [10] := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces [11] := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces <ref> [12] </ref> := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces [13] := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; <p> := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces [9] := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces [10] := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces [11] := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces <ref> [12] </ref> := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces [13] := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT (position,PIECE::black); 45position.pos := "h8"; blackpieces [15] := #ROOK (position,PIECE::black); 46white K moved := false; 47black K moved := false; 48last move := void; 49MAIN::display.redraw (self.str); 50end; Several iters are needed to return
Reference: [13] <author> Clemens Szyperski, Stephen Omohundro, and Stephan Murer. </author> <title> Engineering a programming language: The type and class system of Sather. </title> <editor> In Jurg Gutknecht, editor, </editor> <booktitle> Programming Languages and System Architectures, </booktitle> <pages> pages 208-227. </pages> <publisher> Springer Verlag, Lecture Notes in Computer Science 782, </publisher> <month> November </month> <year> 1993. </year> <note> Available as technical report ICSI TR-93-064. 58 </note>
Reference-contexts: This document can be found next to the code on the ftp server mentioned above. Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in <ref> [13] </ref>. Moreover, ICSI technical papers report on other specific issues, see [2, 4, 11, 13]. 1 Sather has been analyzed from an external point of view. <p> Obviously the file is called manual.ps. Sather's general design and the differences from Eiffel have been presented in [6, 7, 8, 9]. The type system is presented in depth in [13]. Moreover, ICSI technical papers report on other specific issues, see <ref> [2, 4, 11, 13] </ref>. 1 Sather has been analyzed from an external point of view. Comments and comparisons can be found in [1, 3, 12]. 1.3 Related Work: Sather-K Although we know a lot about Sather-K, which is being developed in Karlsruhe, Germany, it is not yet available online. <p> #PAWN (position,PIECE::white); 21position.pos := position.east; 22end; 23position.pos := "a1"; whitepieces [8] := #ROOK (position,PIECE::white); 24position.pos := "b1"; whitepieces [9] := #KNIGHT (position,PIECE::white); 25position.pos := "c1"; whitepieces [10] := #BISHOP (position,PIECE::white); 26position.pos := "d1"; whitepieces [11] := #QUEEN (position,PIECE::white); 27position.pos := "e1"; whitepieces [12] := #KING (position,PIECE::white); 28position.pos := "f1"; whitepieces <ref> [13] </ref> := #BISHOP (position,PIECE::white); 29position.pos := "g1"; whitepieces [14] := #KNIGHT (position,PIECE::white); 30position.pos := "h1"; whitepieces [15] := #ROOK (position,PIECE::white); 31-- set up black pieces 32blackpieces := #(16); 33position.pos := "a7"; 34loop i::=0.upto!(7); 35blackpieces [i] := #PAWN (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); <p> (position,PIECE::black); 36position.pos := position.east; 38 37end; 38position.pos := "a8"; blackpieces [8] := #ROOK (position,PIECE::black); 39position.pos := "b8"; blackpieces [9] := #KNIGHT (position,PIECE::black); 40position.pos := "c8"; blackpieces [10] := #BISHOP (position,PIECE::black); 41position.pos := "d8"; blackpieces [11] := #QUEEN (position,PIECE::black); 42position.pos := "e8"; blackpieces [12] := #KING (position,PIECE::black); 43position.pos := "f8"; blackpieces <ref> [13] </ref> := #BISHOP (position,PIECE::black); 44position.pos := "g8"; blackpieces [14] := #KNIGHT (position,PIECE::black); 45position.pos := "h8"; blackpieces [15] := #ROOK (position,PIECE::black); 46white K moved := false; 47black K moved := false; 48last move := void; 49MAIN::display.redraw (self.str); 50end; Several iters are needed to return all pieces on the board that fulfill a
References-found: 13

