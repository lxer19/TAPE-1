URL: ftp://ftp.cs.jhu.edu/pub/barequet/papers/unv-vis97.ps.gz
Refering-URL: http://www.cs.jhu.edu/~barequet/papers.html
Root-URL: http://www.cs.jhu.edu
Title: Repairing CAD Models  
Author: Gill Barequet Subodh Kumar 
Affiliation: Johns Hopkins University  
Abstract: We describe an algorithm for repairing polyhedral CAD models that have errors in their B-REP. Errors like cracks, degeneracies, duplication, holes and overlaps are usually introduced in solid models due to imprecise arithmetic, model transformations, designer's fault, programming bugs, etc. Such errors often hamper further processing like finite element analysis, radiosity computation and rapid prototyping. Our fault-repair algorithm converts an unordered collection of polygons to a shared-vertex representation to help eliminate errors. This is done by choosing, for each polygon edge, the most appropriate edge to unify it with. The two edges are then geometrically merged into one, by moving vertices. At the end of this process, each polygon edge is either coincident with another or is a boundary edge for a polygonal hole or a dangling wall and may be appropriately repaired. Finally, in order to allow user-inspection of the automatic corrections, we produce a visualization of the repair and let the user mark the corrections that conflict with the original design intent. A second iteration of the correction algorithm then produces a repair that is commensurate with the intent. Thus, by involving the users in a feedback loop, we are able to refine the correction to their satisfaction. 
Abstract-found: 1
Intro-found: 1
Reference: [3DS89] <institution> Stereolithography interface specification. SLA CAD, 3D Systems Inc. (Valencia, </institution> <address> CA), </address> <year> 1989. </year> <note> p/n 50065-S01-00. </note>
Reference-contexts: 1 Introduction CAD (Computer-Aided Design) models are often represented as unordered lists of polygons sometimes referred to as soups of polygons. File formats like IGES [NCG91], DXF [Aut95] and STL <ref> [3DS89] </ref> (which is a de facto standard in the rapid-prototyping industry) allow users to represent models as such soups of polygons. Each polygon is listed independently as an ordered list of its vertex-coordinates, occasionally along with its normal vector. The collection of polygons is assumed to represent a complete model.
Reference: [Aut95] <institution> Data Interchange Format. </institution> <note> http://www.autodesk.com, 1995. AutoCAD Release 13. </note>
Reference-contexts: 1 Introduction CAD (Computer-Aided Design) models are often represented as unordered lists of polygons sometimes referred to as soups of polygons. File formats like IGES [NCG91], DXF <ref> [Aut95] </ref> and STL [3DS89] (which is a de facto standard in the rapid-prototyping industry) allow users to represent models as such soups of polygons. Each polygon is listed independently as an ordered list of its vertex-coordinates, occasionally along with its normal vector.
Reference: [BDE96] <author> G. Barequet, M. Dickerson, and D. Eppstein. </author> <title> On triangulating three-dimensional polygons. </title> <booktitle> In Proc. 12th Ann. ACM Symp. on Computational Geometry, </booktitle> <pages> pages 3847, </pages> <address> Philadelphia, PA, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: Our system automatically triangulates these holes (unless overridden by the user). A triangulation of a three-dimensional polygonal contour C is a collection of triangles which define a simply-connected 2-manifold whose boundary is C. Barequet et al. show in <ref> [BDE96] </ref> that the decision whether a three-dimensional polygon is triangulable (that is, whether it has a triangulation which does not intersect itself) is N P-complete. For practical reasons, we do not check whether a hole is triangulable or not.
Reference: [BMSW91] <author> D. Baum, S. Mann, K. Smith, and J. Winget. </author> <title> Making radiosity usable: Automatic preprocessing and meshing techniques for the generation of accurate radios-ity solutions. </title> <journal> ACM Computer Graphics, </journal> <volume> 25(4):5160, </volume> <year> 1991. </year>
Reference-contexts: Army Research Office under Grant DAAH04-96-1-0013. (a) Original model (b) Repaired model images with artifacts in the presence of cracks in the surface due to leakage of light. <ref> [BMSW91] </ref> catalogs some common types of errors and proposes techniques to avoid them. Missing polygons are also a common source of holes in the model.
Reference: [BS95] <author> G. Barequet and M. Sharir. </author> <title> Filling gaps in the boundary of a polyhedron. </title> <booktitle> Computer Aided Geometric Design, </booktitle> <address> 12(2):207229, </address> <year> 1995. </year>
Reference-contexts: They use local techniques for filling a hole by triangles. Makela and Dolenc [MD93] also use local techniques for filling cracks in the model surface. Barequet and Sharir <ref> [BS95] </ref> describe a globally-consistent approach for identifying and filling holes. Unfortunately, when a large number of cracks is involved, simple-minded hole filling may result in an explosion of the number of polygons needed to describe the model. <p> Our method ensures that no vertex is moved farther than a user-specified error-tolerance. Larger holes are filled using the triangulation technique of <ref> [BS95] </ref>. 1.2 Our Approach We present a topologically-based geometric algorithm designed to rid polygonal boundary representations (B-REP) of solid models of some common errors. <p> If this assumption is invalid for an application, each polygon may be considered a single component and passed on to the merging phase. We compute the connected components of the model using a process similar to that of <ref> [BS95] </ref>. We first construct G, the adjacency graph of the model. Each facet of the model is a vertex in G. <p> In addition, we need to determine the preceding and following boundary-edges for each edge in a component (which are used later for computing scores). To obtain the boundary contours of a component, we compute the binary sum <ref> [BS95] </ref> of all the facets (as cycles of graph-edges). The result is the collection of the boundary polygonal contours (see Figure 2). Note that in case of T-joint (Figure 3), there are two possible preceding or following edges; we maintain pointers to both. <p> These considerations are very similar to those of <ref> [BS95] </ref>. 5 Filling Holes If the user sets a small value for ", the maximum allowed vertex-shift, there may be holes left in the models at the end of the vertex merging phase. <p> Barequet et al. show in [BDE96] that the decision whether a three-dimensional polygon is triangulable (that is, whether it has a triangulation which does not intersect itself) is N P-complete. For practical reasons, we do not check whether a hole is triangulable or not. As in <ref> [BS95] </ref>, we use a simple dynamic-programming technique which computes the triangulation of a hole with n edges in O (n 3 ) time.
Reference: [BST96] <author> G. Barequet, D. Shapiro, and A. Tal. </author> <title> History-driven reconstruction of polyhedral surfaces from parallel slices. </title> <booktitle> In Proceedings of IEEE Visualization'96, </booktitle> <pages> pages 149156, </pages> <year> 1996. </year>
Reference-contexts: For practical reasons, we do not check whether a hole is triangulable or not. As in [BS95], we use a simple dynamic-programming technique which computes the triangulation of a hole with n edges in O (n 3 ) time. Following <ref> [BST96] </ref>, we minimize a measure which is a linear combination of the area of the triangles and the ratio (for each triangle) between the lengths of the longest and the shortest edges. Let A (t) be the area of a triangle t, and let L (t) (resp.
Reference: [BW92] <author> J.H. Bhn and M.J. Wozny. </author> <title> Automatic cad-model repair: </title> <editor> Shell-closure. In H.L. Marcus et al., editor, </editor> <booktitle> Proc. Solid Freeform Fabrication Symposium, </booktitle> <pages> pages 8694, </pages> <address> U. Texas, Austin, Texas USA, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: For our application, vertex-shifting seems to cause comparatively smaller perturbation to the input model. Rock and Wozny [RW92] present efficient data structures for computing exact matches between polygon edges for reconstructing the topology of the model. Bhn and Wozny <ref> [BW92, BW93] </ref> present a technique based on Jordan curve construction for identifying holes bounded by edges at each of which only one facet occurs. They use local techniques for filling a hole by triangles. Makela and Dolenc [MD93] also use local techniques for filling cracks in the model surface.
Reference: [BW93] <author> J.H. Bhn and M.J. Wozny. </author> <title> A topology-based approach for shell-closure. </title> <editor> In P.R. Wilson et al., editor, </editor> <title> Geometric Modeling for Product Realization, pages 297319. </title> <publisher> North-Holland, </publisher> <year> 1993. </year>
Reference-contexts: For our application, vertex-shifting seems to cause comparatively smaller perturbation to the input model. Rock and Wozny [RW92] present efficient data structures for computing exact matches between polygon edges for reconstructing the topology of the model. Bhn and Wozny <ref> [BW92, BW93] </ref> present a technique based on Jordan curve construction for identifying holes bounded by edges at each of which only one facet occurs. They use local techniques for filling a hole by triangles. Makela and Dolenc [MD93] also use local techniques for filling cracks in the model surface.
Reference: [KM95] <author> S. Kumar and D. Manocha. </author> <title> Efficient rendering of trimmed NURBS surfaces. </title> <booktitle> Computer-Aided Design, </booktitle> <address> 27(7):509521, </address> <month> July </month> <year> 1995. </year>

Reference: [MF96a] <author> S.M. Morvan and G.M. Fadel. IVECS: </author> <title> An interactive virtual environment for the correction of .STL files. </title> <booktitle> In Conference on Virtual Design, </booktitle> <address> U. California, Irvine, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: We assume that the target model is a set of closed 2-manifolds [O'N66], but allow users to override this assumption. 1.1 Related Work Several techniques for correcting some of the errors described above have been proposed in the past. Morvan and Fadel <ref> [MF96a, MF96b] </ref> describe a virtual environment that provides tools for model correction, controlled primarily by the user. Unfortunately, this can be a cumbersome and inefficient procedure for large models. Furthermore, it is easy to miss errors.
Reference: [MF96b] <author> S.M. Morvan and G.M. Fadel. IVECS, </author> <title> interactive correction of .STL files in a virtual environment. </title> <booktitle> In Proc. Solid Freeform Fabrication Symposium, </booktitle> <address> U. Texas, Austin, Texas USA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: We assume that the target model is a set of closed 2-manifolds [O'N66], but allow users to override this assumption. 1.1 Related Work Several techniques for correcting some of the errors described above have been proposed in the past. Morvan and Fadel <ref> [MF96a, MF96b] </ref> describe a virtual environment that provides tools for model correction, controlled primarily by the user. Unfortunately, this can be a cumbersome and inefficient procedure for large models. Furthermore, it is easy to miss errors.
Reference: [MF97] <author> T. Murali and T. Funkhouser. </author> <title> Consistent solid and boundary representations from arbitrary polygonal data. </title> <booktitle> In Symposium on Interactive 3D Graphics, </booktitle> <pages> pages 155162, </pages> <address> Providence, RI, </address> <year> 1997. </year>
Reference-contexts: Barequet and Sharir [BS95] describe a globally-consistent approach for identifying and filling holes. Unfortunately, when a large number of cracks is involved, simple-minded hole filling may result in an explosion of the number of polygons needed to describe the model. The approach of Murali and Funkhouser <ref> [MF97] </ref> is to determine regions of space that lie inside a solid using spatial partitioning and use the partition as the description of solids. Unfortunately, for degenerate cases, their output may be significantly different from the input even for small errors in the input.
Reference: [NCG91] <institution> Initial graphics exchange specification (iges) version 5.1. National Computer Graphics Association, </institution> <year> 1991. </year>
Reference-contexts: 1 Introduction CAD (Computer-Aided Design) models are often represented as unordered lists of polygons sometimes referred to as soups of polygons. File formats like IGES <ref> [NCG91] </ref>, DXF [Aut95] and STL [3DS89] (which is a de facto standard in the rapid-prototyping industry) allow users to represent models as such soups of polygons. Each polygon is listed independently as an ordered list of its vertex-coordinates, occasionally along with its normal vector.
Reference: [O'N66] <author> B. O'Neill. </author> <title> Elementary Differential Geometry. </title> <publisher> Academic Press, </publisher> <year> 1966. </year>
Reference-contexts: We present algorithms to eliminate dangling geometry, T-joints, holes and cracks in a polygonal solid model, and generate consistent polygon-orientations. We assume that the target model is a set of closed 2-manifolds <ref> [O'N66] </ref>, but allow users to override this assumption. 1.1 Related Work Several techniques for correcting some of the errors described above have been proposed in the past. Morvan and Fadel [MF96a, MF96b] describe a virtual environment that provides tools for model correction, controlled primarily by the user.
Reference: [RW92] <author> S. J. Rock and M. J. Wozny. </author> <title> Generating topological information from a 'bucket of facets'. </title> <editor> In H.L. Marcus et al., editor, </editor> <booktitle> Proc. Solid Freeform Fabrication Symposium, </booktitle> <pages> pages 251259, </pages> <address> U. Texas, Austin, Texas USA, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: The user can visualize the errors and guide the correction algorithm. Turk and Levoy [TL94], in order to generate polygonal models from range data, remove overlaps of polygons by clipping them. For our application, vertex-shifting seems to cause comparatively smaller perturbation to the input model. Rock and Wozny <ref> [RW92] </ref> present efficient data structures for computing exact matches between polygon edges for reconstructing the topology of the model. Bhn and Wozny [BW92, BW93] present a technique based on Jordan curve construction for identifying holes bounded by edges at each of which only one facet occurs.
Reference: [TL94] <author> G. Turk and M. Levoy. </author> <title> Zippered polygon meshes from range images. </title> <booktitle> In Proceedings of ACM SIGGRAPH, </booktitle> <pages> pages 311318, </pages> <year> 1994. </year>
Reference-contexts: Furthermore, it is easy to miss errors. Our approach makes the correction process automatic, at the same time including the user in the correction loop. The user can visualize the errors and guide the correction algorithm. Turk and Levoy <ref> [TL94] </ref>, in order to generate polygonal models from range data, remove overlaps of polygons by clipping them. For our application, vertex-shifting seems to cause comparatively smaller perturbation to the input model.
References-found: 16

