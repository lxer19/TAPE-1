URL: http://robotics.stanford.edu/users/hhg/icra97.ps.gz
Refering-URL: http://underdog.stanford.edu/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: flavalle,hhg,cdb,latombeg@robotics.stanford.edu  
Title: Motion Strategies for Maintaining Visibility of a Moving Target  
Author: Steven M. LaValle Hector H. Gonzalez-Ba~nos Craig Becker Jean-Claude Latombe 
Note: Presented at the 1997 IEEE International Conference on Robotics and Automation  
Address: Stanford, CA 94305  
Affiliation: Computer Science Department Stanford University  
Abstract: We introduce the problem of computing robot motion strategies that maintain visibility of a moving target in a cluttered workspace. Both motion constraints (as considered in standard motion planning) and visibility constraints (as considered in visual tracking) must be satisfied. Additional criteria, such as the total distance traveled, can be optimized. The general problem is divided into two categories, on the basis of whether the target is predictable. For the predictable case, an algorithm that computes optimal, numerical solutions is presented. For the more challenging case of a partially-predictable target, two on-line algorithms are presented that each attempt to maintain future visibility with limited prediction. One strategy maximizes the probability that the target will remain in view in a subsequent time step, and the other maximizes the minimum time in which the target could escape the visibility region. We additionally discuss issues resulting from our implementation and experiments on a mobile robot system. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Ba~sar and P. R. Kumar. </author> <title> On worst case design strate gies. </title> <institution> Comput. Math. Applic., 13(1-3):239-245, </institution> <year> 1987. </year>
Reference-contexts: This indicates that from any initial state, the strategy will guarantee the least possible loss given the worst-case actions of nature. This concept has been used previously to design controllers based on worst-case analysis <ref> [1] </ref>. With probabilistic uncertainty, a strategy, fl fl 2 , can be chosen that minimizes the expected loss: L (x 1 ; fl fl ) = inf L (x 1 ; fl) = inf Z for all x 1 2 X.
Reference: [2] <author> C. Becker, H. Gonzalez-Ba~nos, J.-C. Latombe, and C. Tomasi. </author> <title> An intelligent observer. </title> <booktitle> In Preprints of International Symposium on Experimental Robotics, </booktitle> <pages> pages 94-99, </pages> <year> 1995. </year>
Reference-contexts: This increased complexity motivates the consideration of alternative approaches which can provide reasonable behavior by making a tradeoff between computational cost and the quality of the solution. Experiments with an on-line algorithm that is presented in this section were performed using a mobile robot system that is described in <ref> [2] </ref>. 4.1 Optimal Strategies The notions of a strategy and of optimality become more interesting if there is uncertainty in target prediction. Recall that k 2 fi refers to an unknown action that can be applied to move the target using q t k ; k ). <p> The current implementation of the system consists of eight modules: a visual target tracker, a landmark detector, the motion planner, a graphic interface, a calibration module, the control module, and a low-level control driver. For more specific details see <ref> [2] </ref>. We have also studied the observer behavior in a variety of simulated environments. A sequence of frames from one such simulation is shown in Figure 5. Performance can generally be improved by incorporating additional information into the prediction.
Reference: [3] <author> A. J. Briggs and B. R. Donald. </author> <title> Robust geometric algorithms for sensor planning. </title> <editor> In J.-P. Laumond and M. Overmars, editors, </editor> <booktitle> Proc. 2nd Workshop on Algorithmic Foundations of Robotics. A.K. Peters, </booktitle> <address> Wellesley, MA, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: In applications that involve automated processes that need to be monitored, such as in an assembly workcell, parts or subassemblies might need to be verified for accuracy or are determined to be in correct configurations. Visual monitoring tasks are also suitable for mobile robot applications <ref> [3] </ref>. In medical applications, one would like to move cameras around a surgery site to keep a designated area of interest (key tissue) in continuous sight, despite unpredictable motions of potentially obstructing people and instruments, and display a smooth sequence of images for the surgeon [12].
Reference: [4] <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: Recall that k 2 fi refers to an unknown action that can be applied to move the target using q t k ; k ). Two alternative interpretations of the unknown actions are possible. If the unknown actions are modeled as nondeterministic uncertainty (as referred to in <ref> [4, 11] </ref>), then it is only assumed that k 2 fi for some specified fi. In this case, one would design a strategy that performs the best given the worst-case choices for k .
Reference: [5] <author> B. Espiau, F. Chaumette, and P. Rives. </author> <title> A new approach to visual servoing in robotics. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 8(3) </volume> <pages> 313-326, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Visual information can also be used to track robots or robot features that appear in an image, and be directly integrated into a servo loop (e.g., <ref> [5, 6, 14] </ref>). A motion planning problem is considered in this paper in which a robot carries a camera that must main tain visibility of a target.
Reference: [6] <author> S. Hutchinson, G. D. Hager, and P. I. Corke. </author> <title> A tutorial on visual servo control. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 12(5) </volume> <pages> 651-670, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: Visual information can also be used to track robots or robot features that appear in an image, and be directly integrated into a servo loop (e.g., <ref> [5, 6, 14] </ref>). A motion planning problem is considered in this paper in which a robot carries a camera that must main tain visibility of a target.
Reference: [7] <author> K. Kant and S. W. Zucker. </author> <title> Toward efficient trajectory planning: The path-velocity decomposition. </title> <journal> Int. J. Robot. Res., </journal> <volume> 5(3) </volume> <pages> 72-89, </pages> <year> 1986. </year>
Reference-contexts: The stage index is included because the problem is time-varying. This is similar to the use of configuration-time space representations for motion planning among known moving obstacles <ref> [7, 10] </ref>. An array representation of the spaces is constructed, which ultimately limits the current approach to observers that have only a few degrees of freedom.
Reference: [8] <author> L. E. Kavraki. </author> <title> Computation of configuration-space obstacles using the Fast Fourier Transform. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 11(3) </volume> <pages> 408-413, </pages> <year> 1995. </year>
Reference-contexts: This is similar to the use of configuration-time space representations for motion planning among known moving obstacles [7, 10]. An array representation of the spaces is constructed, which ultimately limits the current approach to observers that have only a few degrees of freedom. In <ref> [8] </ref>, it is shown that the Fast Fourier Transform can be used to efficiently obtain a C-space representation from the static obstacles and robot geometry. Step 2: Since the primary task is to maintain visibility of the target, the acceptable observer locations are marked.
Reference: [9] <author> R. E. Larson and J. L. Casti. </author> <title> Principles of Dynamic Programming, Part II. </title> <publisher> Dekker, </publisher> <address> New York, NY, </address> <year> 1982. </year>
Reference-contexts: Al though the approach shares some similarities with Dijk-stra's algorithm on graphs, the principle is applied in the present context over a continuous state space and over discrete time. Its use follows directly from the differential equations that express the dynamic programming principle in standard optimal control <ref> [9, 11] </ref>. 3.1 Computational Approach The computational approach can be organized into four basic steps: 2 1. Construct a discretized representation of C o free fi K, in which K = f1; : : :; K + 1g. 2. <p> This technique has been used previously in numerical dynamic programming computations; related issues are discussed in <ref> [9, 11] </ref>. Step 4: Suppose the cost-to-go functions have been computed. If the q o 1 is fixed, then u fl 1 can be obtained by using (3) for the given initial state, x 1 .
Reference: [10] <author> J.-C. Latombe. </author> <title> Robot Motion Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, MA, </address> <year> 1991. </year>
Reference-contexts: The first condition implies that target tracking is the primary interest, and visibility can be defined in a variety of ways, depending on the particular problem. The second condition introduces the geometric constraints that appear in the standard path planning problem <ref> [10] </ref>. The third condition complicates the tracking problem by prohibiting pairs of observer and target configurations at which the observer cannot "see" the target. In many cases an obstacle in the workspace will cause both motion and visibility constraints. <p> In general, the observer and target can be considered as rigid or articulated bodies, with standard configuration-space parameterizations <ref> [10] </ref>. Let C o free and C t free denote the free configuration spaces of the observer and target, respectively. Let X = C o free fi C t free represent the state space. A state simultaneously specifies configurations for the observer and target. <p> The stage index is included because the problem is time-varying. This is similar to the use of configuration-time space representations for motion planning among known moving obstacles <ref> [7, 10] </ref>. An array representation of the spaces is constructed, which ultimately limits the current approach to observers that have only a few degrees of freedom.
Reference: [11] <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Ur-bana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Al though the approach shares some similarities with Dijk-stra's algorithm on graphs, the principle is applied in the present context over a continuous state space and over discrete time. Its use follows directly from the differential equations that express the dynamic programming principle in standard optimal control <ref> [9, 11] </ref>. 3.1 Computational Approach The computational approach can be organized into four basic steps: 2 1. Construct a discretized representation of C o free fi K, in which K = f1; : : :; K + 1g. 2. <p> This technique has been used previously in numerical dynamic programming computations; related issues are discussed in <ref> [9, 11] </ref>. Step 4: Suppose the cost-to-go functions have been computed. If the q o 1 is fixed, then u fl 1 can be obtained by using (3) for the given initial state, x 1 . <p> Recall that k 2 fi refers to an unknown action that can be applied to move the target using q t k ; k ). Two alternative interpretations of the unknown actions are possible. If the unknown actions are modeled as nondeterministic uncertainty (as referred to in <ref> [4, 11] </ref>), then it is only assumed that k 2 fi for some specified fi. In this case, one would design a strategy that performs the best given the worst-case choices for k . <p> This represents a standard notion used in optimal control, and has been applied to motion planning problems that involve other forms of prediction uncertainty in <ref> [11] </ref>. Let fl k : X ! U denote a strategy at stage k. Let fl = ffl 1 ; fl 2 ; : : : ; fl K g denote a strategy. Let denote the space of possible strategies for the robot.
Reference: [12] <author> S. Lavallee, J. Troccaz, L. Gaborit, A. L. Benabid P. Cin-quin, and D. Hoffman. </author> <title> Image-guided operating robot: A clinical application in stereotactic neurosurgery. </title> <editor> In R. H. Taylor, S. Lavallee, G. C. Burdea, and R. Mosges, editors, </editor> <booktitle> Computer-Integrated Surgery, </booktitle> <pages> pages 343-351. </pages> <publisher> Mit Press, </publisher> <address> Cambridge, MA, </address> <year> 1996. </year>
Reference-contexts: In medical applications, one would like to move cameras around a surgery site to keep a designated area of interest (key tissue) in continuous sight, despite unpredictable motions of potentially obstructing people and instruments, and display a smooth sequence of images for the surgeon <ref> [12] </ref>. In a telepresence or virtual presence application, a vision system can be used in a remote location to automatically track a variety of moving objects such as vehicles, people, or other robots.
Reference: [13] <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: Step 2: Since the primary task is to maintain visibility of the target, the acceptable observer locations are marked. Using omnidirectional visibility, this can be accomplished efficiently by performing scan conversion of a computed visibility polygon that emanates from the target. Using a standard sweep algorithm <ref> [13] </ref>, the visibility polygon can be computed in O (n lg n) time. If a loss functional is defined that evaluates individual viewpoints then one would precompute real-valued costs, as opposed to binary flags.
Reference: [14] <author> N. P. Papanikolopoulos, P. K. Khosla, and T. Kanade. </author> <title> Visual tracking of a moving target by a camera mounted on a robot: A combination of control and vision. </title> <journal> IEEE Trans. Robot. & Autom., </journal> <volume> 9(1) </volume> <pages> 14-35, </pages> <month> February </month> <year> 1993. </year> <month> 6 </month>
Reference-contexts: Visual information can also be used to track robots or robot features that appear in an image, and be directly integrated into a servo loop (e.g., <ref> [5, 6, 14] </ref>). A motion planning problem is considered in this paper in which a robot carries a camera that must main tain visibility of a target.
References-found: 14

