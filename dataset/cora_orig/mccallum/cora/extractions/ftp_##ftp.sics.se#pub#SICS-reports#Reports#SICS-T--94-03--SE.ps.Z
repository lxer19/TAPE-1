URL: ftp://ftp.sics.se/pub/SICS-reports/Reports/SICS-T--94-03--SE.ps.Z
Refering-URL: http://www.sics.se/libindex.html
Root-URL: 
Title: Design of Telephony Services In Lotos  
Author: Jose Luis Vivas 
Date: March 22, 1994  
Abstract: The purpose of this thesis is to design and validate a telephony system using the formal description language LOTOS and a series of tools provided by the Lotosphere Integrated Tool Environment, LITE. The starting point is a requirements document containing a series of informal specifications of services common to modern telephony systems. Special emphasis has been laid on choosing a design that simplifies the integration of additional telephone services in the specification. Most design decisions were thus taken with the purpose of creating an environment that could help different designers to develop distinct functionalities without the need for each one to be acquainted with other existing features in the system. To this end, the design was structured in a fashion that might enhance the extensibility of the system, as well as prevention and detection of incompatibilities between different features. A methodology is thus proposed for dealing with what is commonly known as the feature interaction problem for telephony systems.
Abstract-found: 1
Intro-found: 1
Reference: [BH83] <author> B. Biebow and J. Hagelstein. </author> <title> Algebraic specification of synchro nization and errors: A telephonic example. </title> <booktitle> volume 154 of Lecture Notes in Computer Science, </booktitle> <pages> pages 1-14. </pages> <publisher> Springer Verlag, </publisher> <year> 1983. </year>
Reference-contexts: Specifications of basic telephony systems using colored Petri nets was discussed by K. Jensen in [Jen87]. A different formalism for representing telephone systems, based on algebraic abstract data types, was proposed by Biebow and Hagelstein <ref> [BH83] </ref>. Tvrdy [Tvr89] published an early paper about the specification of telephony systems in LOTOS. A mobile telephone system in LOTOS have been specified by Cam and Vuong [CV:SimCel]. An object-oriented approach to the specification of telecommunication services was presented in [Sim89].
Reference: [BL91] <author> R. Boumezbeur and L. Logrippo. </author> <title> Specification and Validation of Telephone Systems in LOTOS. </title> <type> Technical Report TR-91-23, </type> <institution> University of Ottawa, </institution> <year> 1991. </year>
Reference-contexts: A preliminary version of a formal specification of telephone systems in LOTOS, using the constraint-oriented style, appeared in [FLS89], followed by a new version in [FLS91]. A design methodology for the description in LOTOS of telephone systems with the inclusion of additional services was published by R.Boumezbeur and L.Logrippo <ref> [BL91] </ref>, followed by a Master of Sciences thesis by Boumezbeur [Bou91]. A specification of an ISDN telephone system in LOTOS, together with a semi-automatic generation of executable code from this specification, was presented in [EHM92a] and [EHM92b].
Reference: [Bou91] <author> R. Boumezbeur. </author> <title> Design, Specification and Validation of Telephony Systems in LOTOS. </title> <type> Master's thesis, </type> <institution> University of Ottawa, </institution> <year> 1991. </year>
Reference-contexts: A design methodology for the description in LOTOS of telephone systems with the inclusion of additional services was published by R.Boumezbeur and L.Logrippo [BL91], followed by a Master of Sciences thesis by Boumezbeur <ref> [Bou91] </ref>. A specification of an ISDN telephone system in LOTOS, together with a semi-automatic generation of executable code from this specification, was presented in [EHM92a] and [EHM92b]. The specification presented in this study has been inspired by the work realized by Boumezber in [Bou91]. 2 1.3 Disposition A presentation of the <p> a Master of Sciences thesis by Boumezbeur <ref> [Bou91] </ref>. A specification of an ISDN telephone system in LOTOS, together with a semi-automatic generation of executable code from this specification, was presented in [EHM92a] and [EHM92b]. The specification presented in this study has been inspired by the work realized by Boumezber in [Bou91]. 2 1.3 Disposition A presentation of the stepwise refinement methodology for LOTOS, together with the related notion of specification style, is the subject of Section 2. <p> about the actions of the user (see section 8 for a clarification of this point). 15 6.3 The data types In order to achieve an open, extendible, modular and general data structure, a strategy towards the data type part of the specification has been chosen that differs from earlier ones <ref> [Bou91, EHM92a] </ref> . Basically, it is an orthogonalization of the data structures used in these implementations. <p> The disabling operator, which seems natural to apply in disconnections, has been avoided on the ground that it may lead to nondeterministic and incorrect behaviour, as may be seen in <ref> [Bou91] </ref>), where some incorrections where introduced in this way. <p> In the worst case, e.g. if B 0 the abortion signal might be missed altogether. This is what happens in the specification developed in <ref> [Bou91] </ref>), where the following sequence of events is possible : user ?n 0:Phone !OffHook line !n 0 !DITO user !n 0 !Dito T user !n 0 !DialKs ?CN 0:Phone line !CN 0 !CORE (* connection request *) user !n 0 !HangUp (* caller hangs up *) line !CN 0 !COAT I
Reference: [CCI87] <author> CCITT. </author> <title> CCITT recommendation Z.100: Functional Specification and Decomposition Language (SDL), </title> <booktitle> 1987. </booktitle> <pages> 33 </pages>
Reference-contexts: 1 Introduction 1.1 Motivation The most common language in use today for specifying telephony systems is SDL <ref> [CCI87] </ref>. However, CCITT has been considering the eventual appropriateness of LOTOS as a more advanced description language. Currently available tools give support for production of non-LOTOS, technology specific implementations of LOTOS designs.
Reference: [CS92] <author> M. Caneve and E Salvatori. </author> <title> Lite User Manual. </title> <booktitle> ESPRIT, </booktitle> <year> 1992. </year>
Reference-contexts: Generality postulates the use of general-purpose definitions that can be instantiated, rather than special-purpose ones. Finally, open-endedness is related to the flexibility of the design, the possibility of modifying and extending it easily. 3 Tools The tools that will be considered here are SMILE <ref> [CS92] </ref>, LOLA [PL93] and TOPO [VMdM + 92], all of which are included in the LOTOSPHERE integrated tool environment, LITE [CS92]. LITE is an integrated environment providing state of the art tool support for the design process with LOTOS. <p> Finally, open-endedness is related to the flexibility of the design, the possibility of modifying and extending it easily. 3 Tools The tools that will be considered here are SMILE <ref> [CS92] </ref>, LOLA [PL93] and TOPO [VMdM + 92], all of which are included in the LOTOSPHERE integrated tool environment, LITE [CS92]. LITE is an integrated environment providing state of the art tool support for the design process with LOTOS. It provides tools for edition, report generation, simulation, verification, compilation and testing. The tasks to be accomplished with the help of these tools are validation, verification and compilation. <p> An extensive validation of the specification was performed, following the guidelines presented in [MAQM92]. Simulation and state exploration were performed mainly with the LOTOSPHERE tool SMILE <ref> [CS92] </ref>. Must and may tests were executed with LOLA [PL93]. Validation of data types was done mainly by evaluation of expressions and with the completion tool in LITE. The length of the resulting LOTOS specification is approximately 2000 lines, of which 1100 were dedicated to the data type part.
Reference: [EHM92a] <author> P. Ernberg, T. Hovander, and F. Monfort. </author> <title> Specification and imple mentation of an ISDN Telephone System Using LOTOS. </title> <type> Technical Report T92:04, </type> <institution> SICS, Ellemtel, Ericsson Telecomunicaciones, </institution> <year> 1992. </year>
Reference-contexts: A specification of an ISDN telephone system in LOTOS, together with a semi-automatic generation of executable code from this specification, was presented in <ref> [EHM92a] </ref> and [EHM92b]. The specification presented in this study has been inspired by the work realized by Boumezber in [Bou91]. 2 1.3 Disposition A presentation of the stepwise refinement methodology for LOTOS, together with the related notion of specification style, is the subject of Section 2. <p> about the actions of the user (see section 8 for a clarification of this point). 15 6.3 The data types In order to achieve an open, extendible, modular and general data structure, a strategy towards the data type part of the specification has been chosen that differs from earlier ones <ref> [Bou91, EHM92a] </ref> . Basically, it is an orthogonalization of the data structures used in these implementations.
Reference: [EHM92b] <author> P. Ernberg, T. Hovander, and F. Monfort. </author> <title> Specification and imple mentation of an ISDN Telephone System Using LOTOS. </title> <booktitle> In Proc. 5 th International Conference on Formal Description Techniques, </booktitle> <year> 1992. </year>
Reference-contexts: A specification of an ISDN telephone system in LOTOS, together with a semi-automatic generation of executable code from this specification, was presented in [EHM92a] and <ref> [EHM92b] </ref>. The specification presented in this study has been inspired by the work realized by Boumezber in [Bou91]. 2 1.3 Disposition A presentation of the stepwise refinement methodology for LOTOS, together with the related notion of specification style, is the subject of Section 2.
Reference: [Ell90] <author> Ellemtel Utvecklings AB. ISDN-services: </author> <title> Function Specification. </title> <type> Internal Report, </type> <year> 1990. </year>
Reference-contexts: Such systems show little variation, but certain functionalities may differ, e.g. whether a call is released if the called subscriber clears. 4.2 The Services The informal specifications of the ISDN-services included in this work were taken from a PM produced at ELLEMTEL <ref> [Ell90] </ref>. It is a carefully conceived and well-structured document, produced in a telephone company by people with experience in the field, written in a concise style with special emphasis on the use of clear and unambiguous terms. It is a pure natural language specification, without charts or diagrams.
Reference: [FLS89] <author> M. Faci, L. Logrippo, and B. Stepien. </author> <title> Formal Specification of Tele phone Systems in LOTOS. </title> <editor> In E. Brinksma, G. Scollo, and C.A. Vissers, editors, </editor> <title> Protocol Specification, Testing, and Verification, </title> <booktitle> IX, </booktitle> <pages> pages 25-34. </pages> <address> University of Ottawa, </address> <publisher> North-Holland, </publisher> <year> 1989. </year>
Reference-contexts: A mobile telephone system in LOTOS have been specified by Cam and Vuong [CV:SimCel]. An object-oriented approach to the specification of telecommunication services was presented in [Sim89]. A preliminary version of a formal specification of telephone systems in LOTOS, using the constraint-oriented style, appeared in <ref> [FLS89] </ref>, followed by a new version in [FLS91]. A design methodology for the description in LOTOS of telephone systems with the inclusion of additional services was published by R.Boumezbeur and L.Logrippo [BL91], followed by a Master of Sciences thesis by Boumezbeur [Bou91].
Reference: [FLS91] <author> M. Faci, L. Logrippo, and B. Stepien. </author> <title> Formal specification of tel phone systems in LOTOS: the constraint-oriented style approach. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 21 </volume> <pages> 53-67, </pages> <year> 1991. </year>
Reference-contexts: An object-oriented approach to the specification of telecommunication services was presented in [Sim89]. A preliminary version of a formal specification of telephone systems in LOTOS, using the constraint-oriented style, appeared in [FLS89], followed by a new version in <ref> [FLS91] </ref>. A design methodology for the description in LOTOS of telephone systems with the inclusion of additional services was published by R.Boumezbeur and L.Logrippo [BL91], followed by a Master of Sciences thesis by Boumezbeur [Bou91].
Reference: [Jen87] <author> K. Jensen. </author> <title> Coloured petri nets. </title> <booktitle> volume 254 of Lecture Notes in Computer Science, </booktitle> <pages> pages 248-299. </pages> <publisher> Springer Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Specifications of basic telephony systems using colored Petri nets was discussed by K. Jensen in <ref> [Jen87] </ref>. A different formalism for representing telephone systems, based on algebraic abstract data types, was proposed by Biebow and Hagelstein [BH83]. Tvrdy [Tvr89] published an early paper about the specification of telephony systems in LOTOS. A mobile telephone system in LOTOS have been specified by Cam and Vuong [CV:SimCel].
Reference: [MAQM92] <author> T. Miguel, A. Azcorra, J. Quemada, and J.A. Ma~nas. </author> <title> A Pragmatic Approach to Verification, Validation and Compilation. </title> <type> Technical Report Lo/WP3/T3.3/UPM/N0042/V1, </type> <institution> LOTOSPHERE, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: An extensive validation of the specification was performed, following the guidelines presented in <ref> [MAQM92] </ref>. Simulation and state exploration were performed mainly with the LOTOSPHERE tool SMILE [CS92]. Must and may tests were executed with LOLA [PL93]. Validation of data types was done mainly by evaluation of expressions and with the completion tool in LITE.
Reference: [Pav91] <author> S. Pavon. </author> <title> The Lotos Design Methodology: </title> <type> Guidelines. </type> <institution> Techni cal Report Lo/WP1/T1.1/N0044/V02, LOTOSPHERE, </institution> <month> Decem-ber </month> <year> 1991. </year>
Reference-contexts: This is basically the gist of the LOTOSPHERE Design Methodology, conceived to support the development of high quality design <ref> [Pav91, QAP92] </ref>. In the LOTOSPHERE Design Methodology, the design trajectory starts with the requirements capturing phase, which yields a user requirements document, an informal description of the system, usually in terms of natural language statements.
Reference: [PL93] <author> S. Pavon and D. Larrabeiti. </author> <title> LOLA (LOtos LAboratory: User Manual (version 2.3). </title> <institution> Madrid University of Technology, </institution> <year> 1993. </year>
Reference-contexts: Generality postulates the use of general-purpose definitions that can be instantiated, rather than special-purpose ones. Finally, open-endedness is related to the flexibility of the design, the possibility of modifying and extending it easily. 3 Tools The tools that will be considered here are SMILE [CS92], LOLA <ref> [PL93] </ref> and TOPO [VMdM + 92], all of which are included in the LOTOSPHERE integrated tool environment, LITE [CS92]. LITE is an integrated environment providing state of the art tool support for the design process with LOTOS. It provides tools for edition, report generation, simulation, verification, compilation and testing. <p> LOLA accepts full LOTOS language. 6 7 Several different expansions are possible. Expansions may be used in testing by synchronization with a test process or a test sequence. LOLA can be used to generate may tests from a reference specification (for details, see <ref> [PL93] </ref>). The set of may tests obtained in this way may then be composed with the system specification and executed using some test running techniques. LOLA calculates the response of a system specification to must , may , and reject tests. <p> An extensive validation of the specification was performed, following the guidelines presented in [MAQM92]. Simulation and state exploration were performed mainly with the LOTOSPHERE tool SMILE [CS92]. Must and may tests were executed with LOLA <ref> [PL93] </ref>. Validation of data types was done mainly by evaluation of expressions and with the completion tool in LITE. The length of the resulting LOTOS specification is approximately 2000 lines, of which 1100 were dedicated to the data type part.
Reference: [QAP92] <author> J. Quemada, A. Azcorra, and S. Pavon. </author> <title> Development with LO TOS. </title> <institution> Technical University of Madrid, </institution> <month> June </month> <year> 1992. </year>
Reference-contexts: This is basically the gist of the LOTOSPHERE Design Methodology, conceived to support the development of high quality design <ref> [Pav91, QAP92] </ref>. In the LOTOSPHERE Design Methodology, the design trajectory starts with the requirements capturing phase, which yields a user requirements document, an informal description of the system, usually in terms of natural language statements. <p> Each step should bring forth a more refined version of the system (Figure 2). The distinct phases of the design process are considered to be closely related to different programming styles <ref> [VSvS88, QAP92, VSvSB91] </ref>. The main ones are the following: Monolithic style In the monolithic style the parallel operators are disallowed. The two most important constructs used are action prefix and choice. Only observable interactions may occur.
Reference: [Sim89] <author> L. Simon. </author> <title> An object-oriented delta approach to telecommunication service specification. </title> <type> Master's thesis, </type> <institution> Carleton University, </institution> <address> Ottawa, Ontario, Canada, </address> <year> 1989. </year>
Reference-contexts: Tvrdy [Tvr89] published an early paper about the specification of telephony systems in LOTOS. A mobile telephone system in LOTOS have been specified by Cam and Vuong [CV:SimCel]. An object-oriented approach to the specification of telecommunication services was presented in <ref> [Sim89] </ref>. A preliminary version of a formal specification of telephone systems in LOTOS, using the constraint-oriented style, appeared in [FLS89], followed by a new version in [FLS91].
Reference: [Tvr89] <author> I. Tvrdy. </author> <title> Formal Modelling of Telematic Services in LOTOS. </title> <journal> Microprocessing and Microprogramming, </journal> <volume> 25 </volume> <pages> 313-318, </pages> <year> 1989. </year> <month> 34 </month>
Reference-contexts: Specifications of basic telephony systems using colored Petri nets was discussed by K. Jensen in [Jen87]. A different formalism for representing telephone systems, based on algebraic abstract data types, was proposed by Biebow and Hagelstein [BH83]. Tvrdy <ref> [Tvr89] </ref> published an early paper about the specification of telephony systems in LOTOS. A mobile telephone system in LOTOS have been specified by Cam and Vuong [CV:SimCel]. An object-oriented approach to the specification of telecommunication services was presented in [Sim89].
Reference: [VMdM + 92] <author> M. Veiga, J. Ma~nas, T. de Miguel, T. Robles, J. Salvachua, and G. Huecas. </author> <title> How to Use LOTOS Data Types from C Code and How to Implement them by Hand Using TOPO version 3R1. </title> <institution> Madrid University of Technology, </institution> <year> 1992. </year>
Reference-contexts: Generality postulates the use of general-purpose definitions that can be instantiated, rather than special-purpose ones. Finally, open-endedness is related to the flexibility of the design, the possibility of modifying and extending it easily. 3 Tools The tools that will be considered here are SMILE [CS92], LOLA [PL93] and TOPO <ref> [VMdM + 92] </ref>, all of which are included in the LOTOSPHERE integrated tool environment, LITE [CS92]. LITE is an integrated environment providing state of the art tool support for the design process with LOTOS. It provides tools for edition, report generation, simulation, verification, compilation and testing.
Reference: [VSvS88] <author> C. Vissers, G. Scollo, and M. van Sinderen. </author> <title> Architecture and specification style in formal descriptions of distributed systems. </title> <editor> In S. Aggarwal and K. Sabnani, editors, </editor> <title> Protocol Specification, Testing, and Verification, VIII. </title> <publisher> North-Holland, </publisher> <year> 1988. </year>
Reference-contexts: Each step should bring forth a more refined version of the system (Figure 2). The distinct phases of the design process are considered to be closely related to different programming styles <ref> [VSvS88, QAP92, VSvSB91] </ref>. The main ones are the following: Monolithic style In the monolithic style the parallel operators are disallowed. The two most important constructs used are action prefix and choice. Only observable interactions may occur.
Reference: [VSvSB91] <author> C. A. Vissers, G. Scollo, M. van Sinderen, and E. Briksma. </author> <title> Speci fication styles in distributed systems design and verification. </title> <journal> Theoretical Computer Science, </journal> <volume> 89 </volume> <pages> 179-206, </pages> <year> 1991. </year>
Reference-contexts: Each step should bring forth a more refined version of the system (Figure 2). The distinct phases of the design process are considered to be closely related to different programming styles <ref> [VSvS88, QAP92, VSvSB91] </ref>. The main ones are the following: Monolithic style In the monolithic style the parallel operators are disallowed. The two most important constructs used are action prefix and choice. Only observable interactions may occur.
Reference: [Wol91] <author> Dietmar Wolz. </author> <title> Data Type Evaluator: User Manual, </title> <month> February </month> <year> 1991. </year>
Reference-contexts: The validation task may include simulation, test generation, test execution and debugging. The symbolic simulator SMILE performs symbolic evaluation and has an embedded narrowing functionality based upon the narrowing algorithm for abstract data type evaluation <ref> [Wol91] </ref>. It provides an advanced interface with several functionalities (Figure 3). In the main window, both the specification and the simulation tree are visible (Figure 4). The dynamic behaviour may be requested for any process or behaviour defined in the specification.
Reference: [Zav85] <author> P. Zave. </author> <title> The distributed alternative to finite-state-machine speci fications. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 7(1) </volume> <pages> 10-36, </pages> <year> 1985. </year> <month> 35 </month>
Reference-contexts: In this way, the usefulness of the formal specification could be extended to every phase of the design process. 1.2 Related Work A formalism for describing distributed systems, applied to telephony systems, was presented in <ref> [Zav85] </ref>. Specifications of basic telephony systems using colored Petri nets was discussed by K. Jensen in [Jen87]. A different formalism for representing telephone systems, based on algebraic abstract data types, was proposed by Biebow and Hagelstein [BH83].
References-found: 22

