URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-974/CS-TR-90-974.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-90-974/
Root-URL: http://www.cs.wisc.edu
Title: A Theory of Program Modifications one to understand the fundamental algebraic properties of integrationlaws that
Author: G. Ramalingam and Thomas Reps 
Note: (1) It allows  
Address: Wisconsin Madison  
Affiliation: University of  
Abstract: The need to integrate several versions of a program into a common one arises frequently, but it is a tedious and time consuming task to merge programs by hand. The program-integration algorithm proposed by Horwitz, Prins, and Reps provides a way to create a semantics-based tool for integrating a base program with two or more variants. The integration algorithm is based on the assumption that any change in the behaviour, rather than the text, of a program variant is significant and must be preserved in the merged program. An integration system based on this algorithm will determine whether the variants incorporate interfering changes, and, if they do not, create an integrated program that includes all changes as well as all features of the base program that are preserved in all variants. This paper studies the algebraic properties of the program-integration operation, such as whether there is a law of associativity. (For example, in this context associativity means: If three variants of a given base are to be integrated by a pair of two-variant integrations, the same result is produced no matter which two variants are integrated first.) Whereas an earlier work that studied the algebraic properties of program integration formalized the Horwitz-Prins-Reps integration algorithm as an operation in a Brouwerian algebra, this paper introduces a new algebraic structure in which integration can be formalized, called fm-algebra. In fm-algebra, the notion of integration derives from the concepts of a program modification and an operation for combining modifications. (Thus, while earlier work concerned an algebra of programs, this paper concerns an algebra of program modifications.) A novelty of fm-algebra is that program modifications are formalized as functionsmore specifically, as a set of functions from programs to programs that obey a particular set of axioms. The potential benefits of an algebraic theory of integration, such as the one developed in this paper, are actually three-fold: 
Abstract-found: 1
Intro-found: 1
Reference: <institution> Ferr87. </institution>
Reference: <author> Ferrante, J., Ottenstein, K., and Warren, J., </author> <title> The program dependence graph and its use in optimization, </title> <journal> ACM Trans. Program. </journal>
Reference: <author> Lang. </author> <booktitle> Syst. </booktitle> <pages> 9(3) pp. </pages> <month> 319-349 (July </month> <year> 1987). </year> <month> Horw89a. </month>
Reference: <author> Horwitz, S., Pfeiffer, P., and Reps, T., </author> <title> Dependence analysis for pointer variables, </title> <booktitle> Proceedings of the ACM SIGPLAN 89 Conference on Programming Language Design and Implementation, </booktitle> <address> (Portland, OR, </address> <month> June 21-23, </month> <year> 1989), </year> <journal> ACM SIGPLAN Notices 24(7) pp. </journal> <month> 28-40 (July </month> <year> 1989). </year> - <note> 14 - Horw89. </note>
Reference: <author> Horwitz, S., Prins, J., and Reps, T., </author> <title> Integrating non-interfering versions of programs, </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <pages> 11(3) pp. </pages> <month> 345-387 (July </month> <year> 1989). </year> <month> Horw90. </month>
Reference: <author> Horwitz, S., Reps, T., and Binkley, D., </author> <title> Interprocedural slicing using dependence graphs, </title> <journal> ACM Trans. Program. Lang. Syst. </journal> <pages> 12(1) pp. </pages> <month> 26-60 (January </month> <year> 1990). </year>
Reference: <institution> Kuck81. </institution>
Reference: <author> Kuck, D.J., Kuhn, R.H., Leasure, B., Padua, D.A., and Wolfe, M., </author> <title> Dependence graphs and compiler optimizations, pp. </title> <booktitle> 207-218 in Conference Record of the Eighth ACM Symposium on Principles of Programming Languages, </booktitle> <address> (Williamsburg, VA, </address> <month> January 26-28, </month> <year> 1981), </year> <booktitle> ACM, </booktitle> <address> New York, NY (1981). McKi46. </address>
Reference: <author> McKinsey, J.C.C. and Tarski, A., </author> <title> On closed elements in closure algebras, </title> <note> Annals of Mathematics 47(1) pp. 122-162 (January 1946). Otte84. </note>
Reference: <author> Ottenstein, K.J. and Ottenstein, L.M., </author> <title> The program dependence graph in a software development environment, </title> <booktitle> Proceedings of the ACM SIGSOFT/SIGPLAN Software Engineering Symposium on Practical Software Development Environments, </booktitle> <address> (Pittsburgh, PA, </address> <month> Apr. </month> <pages> 23-25, </pages> <year> 1984), </year> <journal> ACM SIGPLAN Notices 19(5) pp. </journal> <month> 177-184 (May </month> <year> 1984). </year>
Reference: <institution> Reps90. </institution>
Reference: <author> Reps, T., </author> <title> Algebraic properties of program integration, pp. </title> <booktitle> 326-340 in Proceedings of the Third European Symposium on Programming, </booktitle> <address> (Copenhagen, Denmark, </address> <month> May 15-18, </month> <year> 1990), </year> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Vol. 432, </volume> <editor> ed. N. Jones,Springer-Verlag, </editor> <address> New York, NY (1990). Weis84. </address>
Reference: <author> Weiser, M., </author> <title> Program slicing, </title> <journal> IEEE Transactions on Software Engineering SE-10(4) pp. </journal> <month> 352-357 (July </month> <year> 1984). </year>
Reference: <institution> Yang90. </institution>
Reference: <author> Yang, W., Horwitz, S., and Reps, T., </author> <title> A program integration algorithm that accommodates semantics-preserving transformations, </title> <booktitle> SIGSOFT 90: Proceedings of the Fourth ACM SIGSOFT Symposium on Software Development Environments, </booktitle> <address> (Irvine, CA, </address> <month> December 3-5, </month> <year> 1990), </year> <booktitle> ACM SIGSOFT Software Engineering Notes 15(6) pp. </booktitle> <month> 133-143 (December </month> <year> 1990). </year>
References-found: 15

