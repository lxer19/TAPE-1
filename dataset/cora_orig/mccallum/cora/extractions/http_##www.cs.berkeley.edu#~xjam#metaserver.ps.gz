URL: http://www.cs.berkeley.edu/~xjam/metaserver.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~xjam/personal.htm
Root-URL: 
Email: cjparris@watson.ibm.com xjam@cs.berkeley.edu  
Title: Transformation Proxy Support for Thin-Clients  
Author: Colin Parris Brian Dennis 
Keyword: World Wide Web, Internet Clients, Proxy, Multi-Media Languages, Thin-Clients  
Address: Yorktown Heights, New York University of California, Berkeley  
Affiliation: IBM T. J. Watson Research Center Computer Science Division  
Abstract: The desire for ubiquitous connection to the Internet has fueled recent research into access for low-cost, resource limited, thin-clients. We describe a proxy, the MetaServer, based on transforming structured documents dependent on the client's capabilities and environment. A key element is the MultiMedia Transformation Language, or MMTL. MMTL is an embedded scripting language specifically designed for transforming structured network documents. MMTL provides the MetaServer with a general solution for the problem of matching media to client capabilities. Our initial prototype and experiments indicate that a MetaServer has acceptable performance as an HTTP server that transforms HTML documents.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Gnn server 2.0 manual. </author> <note> http://wws.tools.gnn.com/, 1996. </note>
Reference-contexts: With the code shown in Figure1 we have subsumed the functionality of the simplest of HTTP servers. In fact there are commercial web servers such as AOLServer <ref> [1] </ref> and free implementations such as Jigsaw [2] which have the same amount of flexibility to capture requests and process them with an embedded language. Most other popular servers can achieve similar functionality through the use of Common Gateway Interface compliant programs.
Reference: [2] <institution> The Jigsaw HTTP server. </institution> <note> http://www.w3.org/Jigsaw/, 1996. </note>
Reference-contexts: With the code shown in Figure1 we have subsumed the functionality of the simplest of HTTP servers. In fact there are commercial web servers such as AOLServer [1] and free implementations such as Jigsaw <ref> [2] </ref> which have the same amount of flexibility to capture requests and process them with an embedded language. Most other popular servers can achieve similar functionality through the use of Common Gateway Interface compliant programs.
Reference: [3] <author> Navio. </author> <note> http:/http://www.navio.com/aboutus/background.html/, 1996. </note>
Reference-contexts: minimal configuration machines are usually Pentium/100MHz machines, configured with 8 Mbyte of main memory, 1.0 Gbyte hard drive, and a 14.4 Kbps modem. 1 price and capability from network-accessible PDAs such as the Sony MagicLink [4] to the ISTs currently being delivered by WebTV Networks Inc.[5] and developed by Navio <ref> [3] </ref>. In order for these thin-clients to provide users accessibility to the network they are usually augmented by support from servers located in the network. These supporting servers combined with the thin-client provide the functionality and performance needed to usefully access the Internet.
Reference: [4] <institution> Sony magic link. </institution> <note> http://http://www.sel.sony.com/SEL/Magic/, 1996. </note>
Reference-contexts: These thin-clients can range in 1 These minimal configuration machines are usually Pentium/100MHz machines, configured with 8 Mbyte of main memory, 1.0 Gbyte hard drive, and a 14.4 Kbps modem. 1 price and capability from network-accessible PDAs such as the Sony MagicLink <ref> [4] </ref> to the ISTs currently being delivered by WebTV Networks Inc.[5] and developed by Navio [3]. In order for these thin-clients to provide users accessibility to the network they are usually augmented by support from servers located in the network.
Reference: [5] <institution> Webtv networks inc. </institution> <note> http://www.webtv.net/HTML/home.license.html/, 1996. </note>
Reference-contexts: In the existing landscape there already exists enough variants to warrant proxy support, as shown by the differing resource characteristics of a several proposed or current products. The set top box being developed by WebTV Networks Inc <ref> [5] </ref> has a a 112 MHz 64 Bit Orion MIPS RISC CPU with digital extensions, 2 Mbytes RAM, a 33.6 Kbps V:34 bis modem, and a patented technology which formats Web content to appear optimally in all formats.
Reference: [6] <author> Wink communications. </author> <note> http:/http://www.wink.com/company/home.html/, 1996. </note>
Reference-contexts: Set top boxes that are supported by the Wink <ref> [6] </ref> Interactive Communication Application Protocol (ICAP) which enables interactive internet applications to be delivered over cable and satellite networks varying in configuration from 66 MHz 80486 processor to 110 MHz MIPS RISC CPUs with cable modems (speeds of 10/2 Mbps).
Reference: [7] <author> Ken Arnold and James Gosling. </author> <title> The Java Programming Languag. </title> <publisher> Addison Wesley, </publisher> <year> 1996. </year>
Reference-contexts: It is important to note that the transformation specific language features presented here can be incorporated into other servers with embedded scripting languages such as the AOLServer, which has embedded Tcl [20] interpreters, or Jigsaw, which can be extended using Java <ref> [7] </ref>.
Reference: [8] <author> Trudy E. Bell, John A. Adam, and Sue J. </author> <title> Lowe. </title> <journal> Technology 96 communications. IEEE Spectrum, </journal> <month> January </month> <year> 1996. </year>
Reference-contexts: In the the international market the penetration of PC and other newer communication technologies in a cross section is very low when compared to that of phone lines and TV sets <ref> [8] </ref>. These numbers coupled with the need of the lesser developed countries to embrace the new information technologies indicate that there is a worldwide market for thin clients as a less expensive method (both in economic and learning-curve costs) of Internet connectivity.
Reference: [9] <author> C. Brooks, M. Mazer, S. Meeks, and J. Miller. </author> <title> Application-specific Proxy Servers as HTTP Stream Transducers. </title> <booktitle> In Proceeedings of the Fourth International World Wide Web Conference, </booktitle> <address> Boston, MA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: This transformation is accomplished by using application-level stream transducers <ref> [9] </ref> to modify the document stream.
Reference: [10] <author> William Clinger and Jonathan Rees. </author> <title> Revised 4 report on the algorithmic language Scheme, </title> <month> November </month> <year> 1991. </year>
Reference-contexts: The proxy scripting language is called MultiMedia Transformation Language, MMTL, and supports the efficient transformation of HTML pages. MMTL can also support the transformation of structured information in a variety of formats including Lotus Notes, SMTP, and NNTP. MMTL is an extended version of the Scheme <ref> [10] </ref> language obtained by applying several key principles that we believe are significant to thin client support. This paper begins with a discussion of the motivation for this work in Chapter 2. We present an overview of our proxy server and MMTL in Chapter 3. <p> Scheme is a small, simple, dynamically typed, statically scoped, dialect of Lisp. Complete details of the Scheme language can be found in <ref> [10] </ref>.
Reference: [11] <author> Brian Dennis. "crossjam: </author> <type> Thesis summary". </type> <address> "http://http.cs.berkley.edu/ xjam/cascon/cascon.html", </address> <year> 1996. </year>
Reference-contexts: The majority of the language design is a result of dissertation work done by Dennis <ref> [11] </ref>. In this subsection we present a high level overview of MMTL and discuss some of the transformation concepts that we featured in the language and believe are to improving flexibility in proxy servers.
Reference: [12] <author> M. Liljeberg et al. </author> <title> Enhanced services for world wide web in mobile WAN environments. </title> <type> Technical Report C-1996-28, </type> <institution> University of Helsinki CS Technical Report, </institution> <year> 1996. </year>
Reference-contexts: The Odyssey system [19] supports network variability by providing a number of representations of data objects on a server and an interface that permits clients to track the state of the network environment and negotiate for a representation appropriate for the current state of the connectivity. MOWGLI <ref> [12] </ref> is a another system that supports network accessibility and variability. In this system a proxy and client-side agent cooperate to manage the bandwidth resources on the wireless link.
Reference: [13] <author> A. Fox, S. Gribble, E. Brewer, and E. Amir. </author> <title> Adaption to Network and Client Variability via On-Demand Dynamic Distillation. </title> <booktitle> In Proceeedings of ACM Mobicom`96, </booktitle> <address> White Plains, NY, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: These proxies differ from our work as they focus on very specialized tasks and are not suitable for general transformations. One of the most relevant examples (as compared to our work) is that of the Berkeley's GloMop 8 <ref> [13] </ref> proxy server that supports resource limited mobile clients. The proxy's (which can be a client's workstation) job is to retrieve documents on the client's behalf and to transmit them to the client in a format that is useful and efficient.
Reference: [14] <author> Dario Giuse. KR: </author> <title> Constraint-Based Knowledge Representation. </title> <institution> Carnegie Mellon University, Garnet Project, </institution> <year> 1994. </year>
Reference-contexts: We had to judiciously choose features to reach our goals, but combine them so that they did not interact poorly or were redundant. First, we have added a small prototype based object system to the language. This object system is similar to KR <ref> [14] </ref>, the fundamental object system of the Garnet [18] user interface toolkit. In this system, objects are simply collections of named slots. Prototype based object systems do not make a distinction between objects and their classes.
Reference: [15] <author> James Gosling, David S.H. Rosenthal, and Michelle Arden. </author> <title> The NeWS Book. </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: Our primary use of this object system is in representing the tree nodes of document trees. We have also embedded a small pattern matching facility into MMTL. This pattern matching was inspired by the NeWS <ref> [15] </ref> system and was easily embedded into MMTL. Essentially, prototype objects serve as patterns. Given two objects, call one the pattern the other the candidate, matching proceeds as follows. Each slot in the pattern must exist in the candidate or else the match fails.
Reference: [16] <editor> Special Issue. </editor> <booktitle> Intelligent agents. Communications of the ACM, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: The monitoring of the stream permits, with the use of data mining and intelligent agent technologies <ref> [16] </ref>, the proxy to add value to the content or structure 4 The full details of these measurements can be found in [22]. 4 of the information that presented is to the client without the clients' deliberate intervention.
Reference: [17] <author> J. R. LoVerso. </author> <title> The distributed clients service. </title> <note> Documentation available at http://www.osf.org/www/dist client. </note>
Reference-contexts: While GloMop does not provide as limiting a solution as the previously cited transcoding it does not provide a general solution to transformation as a focuses on a few specialized techniques (distillation, postscript conversions, etc). The Distributed Clients Project <ref> [17] </ref> has developed a proxy server (called in their terminology the net-side component) that supports network variability and intermittent network connectivity by actions such as pre-fetching of information of interest and by transforming the information according to the current connectivity conditions.
Reference: [18] <author> Brad A. Myers, Dario Giuse, Roger B. Dannenberg, Brad Vander Zanden, David Kosbie, Ed Pervin, Andrew Mickish, and Phillipe Marchal. Garnet: </author> <title> Comprehensive support for graphical highly-interactive user interfaces. </title> <journal> IEEE Computer, </journal> <volume> 23(11), </volume> <month> November </month> <year> 1990. </year>
Reference-contexts: First, we have added a small prototype based object system to the language. This object system is similar to KR [14], the fundamental object system of the Garnet <ref> [18] </ref> user interface toolkit. In this system, objects are simply collections of named slots. Prototype based object systems do not make a distinction between objects and their classes. New objects are created by copying existing objects, describing new slots, and altering old slots.
Reference: [19] <author> B.D. Noble, M. Price, and M. Satyanarayanan. </author> <title> A Programming Interface for Application-aware Adaption in Mobile Computing. </title> <booktitle> In Proceeedings of the Second USENIX Symposium on Mobile and Location-Independent Computing, </booktitle> <address> Ann Arbor, MI, </address> <month> April </month> <year> 1995. </year> <month> 21 </month>
Reference-contexts: This transformation is accomplished by using application-level stream transducers [9] to modify the document stream. The Odyssey system <ref> [19] </ref> supports network variability by providing a number of representations of data objects on a server and an interface that permits clients to track the state of the network environment and negotiate for a representation appropriate for the current state of the connectivity.
Reference: [20] <author> John Ousterhout. </author> <title> TCL: An embeddable command language. </title> <booktitle> In Proceedings of the 1990 USENIX Winter Conference, </booktitle> <pages> pages 133-146, </pages> <year> 1990. </year>
Reference-contexts: It is important to note that the transformation specific language features presented here can be incorporated into other servers with embedded scripting languages such as the AOLServer, which has embedded Tcl <ref> [20] </ref> interpreters, or Jigsaw, which can be extended using Java [7].
Reference: [21] <author> Y. Sato. </author> <title> Delegate server. </title> <note> Documentation available at http://www.etl.go.jp/etl/People/ysato@etl.go.jp/DeleGate/. </note>
Reference-contexts: The overall work of proxies have been in the support of firewalls but new contributions have extended the concept to include other functions. 18 Proxies are now used to support transcoding. Several relevant examples are the Delegate Server, the Shoudouka Mediator, an the MINSE mediator. The DeleGate Server <ref> [21] </ref>, is a proxy server whose main contributions are the support of caching and character code conversion. DeleGate supports filters that enable on-the-fly English to Kanji conversion of HTML pages.
Reference: [22] <author> D. Tapscott. </author> <title> The digital economy. </title> <publisher> McGraw-Hill Publications, </publisher> <year> 1996. </year>
Reference-contexts: The effect of bandwidth limitations can be readily evidenced when engaging in Web access via most commercially available low-cost modems (by low cost we mean less than US $100, thus with speeds of 14.4 Kbps and less). Recent studies 3 <ref> [22] </ref> have measured the average HTML page retrieved at 6.4 Kbytes, with roughly 7 images per page. Using a 14.4 Kbps modem with standard compression (V.42bis and MNP-5) it takes on average 6 seconds to load this page 4 . <p> Using the 9600 bps modem in the set-top box or PDA it takes on average 10 seconds to load this page. If we consider that on average it takes three access <ref> [22] </ref> to locate the desired page then access from a resource limited client can take anywhere from 18 to 30 seconds to load a desired page assuming that the server is lightly loaded. These access times will grow due to the increase in richness of content on the Web. <p> The monitoring of the stream permits, with the use of data mining and intelligent agent technologies [16], the proxy to add value to the content or structure 4 The full details of these measurements can be found in <ref> [22] </ref>. 4 of the information that presented is to the client without the clients' deliberate intervention. The proxy may detect trends and suggest new web sites or indicate when content has changed in a site that the client often visits.
Reference: [23] <author> Allison Woodruff, Paul M. Aoki, Eric Brewer, Paul Gauthier, and Lawrence Rowe. </author> <title> An investigation of documents from the world wide web. </title> <booktitle> In Proceedings of the Fifth Internation World Wide Web Conference. World Wide Web Consortium, </booktitle> <publisher> Elsevier, </publisher> <year> 1996. </year> <note> "http://www3conf.inria.fr/fich html/papers/P7/Overview.html". </note>
Reference-contexts: Total size: 188 bytes, node count 7 : 12. * Average: A document devised to match some of the characteristics of web documents analyzed by Woodruff, Aoki, et. al. <ref> [23] </ref> which appeared in the 1996 World Wide Web conference. Total size: 3056 bytes, number of images 3, node count: 189. * High: Dan Garcia's http://http.cs.berkeley.edu/%7Eddgarcia/index.html home page circa October 1996. This document is a monument to grandiose web page design.
Reference: [24] <author> K.-P. Yee. Minse. </author> <note> Documentation available at http://www.lfw.org/math. 22 </note>
Reference-contexts: DeleGate supports filters that enable on-the-fly English to Kanji conversion of HTML pages. The Shodouka Mediator is a proxy server that renders kana and kanji into GIF images in real-time. <ref> [24] </ref> provides a mediator (proxy) service that renders mathematical equations written using a mathematical expression notation, known as MINSE, into HTML. These proxies differ from our work as they focus on very specialized tasks and are not suitable for general transformations.
References-found: 24

