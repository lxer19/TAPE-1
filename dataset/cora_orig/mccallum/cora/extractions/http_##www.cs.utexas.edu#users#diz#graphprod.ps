URL: http://www.cs.utexas.edu/users/diz/graphprod.ps
Refering-URL: http://www.cs.utexas.edu/users/diz/pubs.html
Root-URL: 
Title: DERANDOMIZED GRAPH PRODUCTS  
Author: Noga Alon, Uriel Feige, Avi Wigderson and David Zuckerman 
Keyword: Key words. Approximation; derandomization; random walks.  
Note: Subject classifications. 60J15, 68R10.  
Abstract: Berman and Schnitger gave a randomized reduction from approximating MAX-SNP problems within constant factors arbitrarily close to 1 to approximating clique within a factor of n * (for some *). This reduction was further studied by Blum, who gave it the name randomized graph products. We show that this reduction can be made deterministic (derandomized), using random walks on expander graphs. The main technical contribution of this paper is in lower bounding the probability that all steps of a random walk stay within a specified set of vertices of a graph. (Previous work was mainly concerned with upper bounding this probability.) This lower bound extends also to the case that different sets of vertices are specified for different time steps of the walk. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Koml os, E. Szemer edi, </author> <title> Deterministic Simulation in Logspace. </title> <booktitle> Proc. Nineteenth Ann. ACM Symp. </booktitle> <institution> Theor. Comput., </institution> <year> 1987, </year> <pages> 132-140. </pages>
Reference-contexts: Derandomization. The tool we use in order to derandomize the randomized graph products is that of random walks on constant degree expander graphs. This tool was first developed by <ref> [1] </ref>. Let U be a universe of n items from which we want to sample k items. Arrange the n items as the vertices of a special type of constant degree graph (expander) H. <p> This property is important for 6 Alon et al. ensuring that if G 2 G a (that is, G has no large clique), then DG k does not have a large clique. A sufficiently strong upper bound for our purpose was already proved in <ref> [1] </ref>. The second property that we need is to lower bound the probability that all k pseudorandom sample points do fall inside a prespecified set. This property insures that if G 2 G b (G has a large clique), then DG k has a large clique. <p> Again we use linear algebra, but now we need a bound on , the second largest eigenvalue in absolute value of the transition matrix A. Our proof extends the techniques in <ref> [1] </ref>. We will also need the following notation: P is the vector space R n . X is the subspace of multiples of 1 n = (1=n; 1=n; : : : ; 1=n). Y is the subspace orthogonal to X.
Reference: [2] <author> N. Alon, </author> <title> Eigenvalues and expanders. </title> <type> Combinatorica 6, </type> <year> 1986, </year> <pages> 83-96. </pages>
Reference-contexts: For nonbipartite Ramanujan graphs, 2 p d 1=d (and this is known to be asymptotically the smallest possible value of for large n and small d, see <ref> [2] </ref>). Theorem 2.1.
Reference: [3] <author> N. Alon, F. R. K. Chung, </author> <title> Explicit construction of linear sized tolerant networks. </title> <journal> Discrete Math. </journal> <volume> 72, </volume> <year> 1988, </year> <pages> 15-19. </pages>
Reference-contexts: The main new technical lemma that we need is to lower bound the probability that a random walk (on a special type of expander graph) stays inside a prespecified set of nodes. This is not difficult to show, using the results of <ref> [3] </ref> and [18]. It turns out that the proof of this property does not rely at all on the expansion property of the graph, but rather on how "different" it is from a bipartite graph. <p> Then fl + 1 (1 ): The second lemma is similar to Lemma 2.3 of <ref> [3] </ref>, and its proof presented below follows the one in [3]. Lemma 2.3. Let H; d; n; A; 0 ; ; n1 ; W and be as in the previous lemma, and let d W be the average degree of the induced subgraph of H on W . <p> Then fl + 1 (1 ): The second lemma is similar to Lemma 2.3 of <ref> [3] </ref>, and its proof presented below follows the one in [3]. Lemma 2.3. Let H; d; n; A; 0 ; ; n1 ; W and be as in the previous lemma, and let d W be the average degree of the induced subgraph of H on W . Then d W + n1 (1 ): Proof.
Reference: [4] <author> E. Amaldi, V. Kann, </author> <title> The complexity and approximability of finding maximum feasible subsystems of linear relations. </title> <note> Theoretical Computer Science, to appear. Derandomized graph products 15 </note>
Reference-contexts: In Section 3 we use them in showing that it is NP-hard to approximate the size of the maximum independent set within a factor of * , in graphs of degree at most . In <ref> [4] </ref>, and in the final version of [5], they are used in showing that it is NP-hard to approximate to within a factor of n * the maximum number of simultaneously satisfiable equations in a system of n linear equations over the rationals, and that it is NP-hard to approximate to
Reference: [5] <author> S. Arora, L. Babai, J. Stern, and Z. Sweedyk, </author> <title> The Hardness of Approximate Optima in Lattices, Codes and Linear Equations. </title> <booktitle> Proc. 34th Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1993, </year> <pages> 724-733. </pages> <note> (Final version submitted to J. Comput. System Sci.) </note>
Reference-contexts: In Section 3 we use them in showing that it is NP-hard to approximate the size of the maximum independent set within a factor of * , in graphs of degree at most . In [4], and in the final version of <ref> [5] </ref>, they are used in showing that it is NP-hard to approximate to within a factor of n * the maximum number of simultaneously satisfiable equations in a system of n linear equations over the rationals, and that it is NP-hard to approximate to within a factor of q * the
Reference: [6] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, M. Szegedy, </author> <title> Proof Verification and Hardness of Approximation Problems. </title> <booktitle> Proc. 33rd Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1992, </year> <pages> 14-23. </pages>
Reference-contexts: Recently, using the theory of interactive proofs, it has been established that approximating !(G) within a factor of n * (for some *) is NP-complete <ref> [13, 7, 6] </ref>. It is of great interest to find a "graph theoretic" proof that clique is hard to approximate, without the use of interactive proofs. <p> Assumption 1.5. There exist constants 0 &lt; a &lt; b &lt; 1 such that it is NP-hard to decide for G 2 G whether G 2 G a or G 2 G b . 4 Alon et al. Under Assumption 1.5 (which is a theorem by now <ref> [6] </ref>), we want to prove that it is NP-hard to approximate clique within n * , for some * that depends on a and b. We sketch the randomized reduction of [10, 11]. <p> Berman and Schnitger concluded that it is MAX-SNP-hard under randomized reductions to approximate clique within a factor of n * . To understand the part of the interactive proofs machinary that can be replaced by graph products, consider the state of affairs concerning clique approximation (following the paper <ref> [6] </ref>). 1. It is NP-hard to approximate MAX-SNP-hard problems within a factor of 1 + ffi (for some ffi &gt; 0 that depends on the nature of the particular Derandomized graph products 5 MAX-SNP-hard problem). Hence Assumption 1.5 above holds. 2. <p> Halldorsson and Radhakrishnan [16] analyse the performance of the greedy algorithm on this problem, and discuss several extensions. As to hardness results for this problem, it follows from <ref> [6] </ref> and [24] that even if = 3, it is NP-hard to approximate ff (G) within a factor of 1 + *, for some * &gt; 0. <p> Proof. Let 0 &lt; a &lt; b &lt; 1 be two constants, let G a be a family of graphs that satisfy ff (G) &lt; an, let G b be a family of graphs that satisfy ff (G) &gt; bn, and let G G a G b . By <ref> [6] </ref> and [24], there exist constants 0 &lt; a &lt; b &lt; 1 such that it is NP-hard to decide for G 2 G whether G 2 G a or G 2 G b , even if G contains only graphs of maximum degree 3.
Reference: [7] <author> S. Arora, S. Safra, </author> <title> Probabilistic Checking of Proofs; A New Characterization of NP. </title> <booktitle> Proc. 33rd Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1992, </year> <pages> 2-13. </pages>
Reference-contexts: Recently, using the theory of interactive proofs, it has been established that approximating !(G) within a factor of n * (for some *) is NP-complete <ref> [13, 7, 6] </ref>. It is of great interest to find a "graph theoretic" proof that clique is hard to approximate, without the use of interactive proofs.
Reference: [8] <author> M. Bellare, O. Goldreich, S. Goldwasser, </author> <title> Randomness in Interactive Proofs. </title> <booktitle> Proc. 31st Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1990, </year> <pages> 563-572. </pages>
Reference-contexts: The related question of upper bounding this probability is central to randomness-efficient error-reduction procedures for interactive proofs <ref> [8] </ref>. In anticipation of future applications, we provide a lower bound for this case. This lower bound uses in an essential way the expansion properties of the underlying graph H, and its proof is different from that of the lower bound discussed above. 2. <p> This strengthens the estimate in <ref> [8] </ref>. Acknowledgements Research of the first author was supported in part by a USA-Israeli BSF grant. Part of this work was done while the second auther was visiting IBM T.J. Watson Research Center at Yorktown Heights.
Reference: [9] <author> P. Berman, M. Furer, </author> <title> Approximating maximum independent set in bounded degree graphs. </title> <booktitle> Proc. of 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994, </year> <pages> 365-371. </pages>
Reference-contexts: It follows that the same unapproximability results that hold for !(G) hold also for ff (G). Derandomized graph products 11 An interesting question is how well can ff (G) be approximated in graphs of maximum degree at most . Berman and Furer <ref> [9] </ref> design a polynomial time algorithm that approximates ff (G) to within a ration of =5 + c, where 0 &lt; c &lt; 1 is some universal constant. Halldorsson and Radhakrishnan [16] analyse the performance of the greedy algorithm on this problem, and discuss several extensions.
Reference: [10] <author> P. Berman, G. Schnitger, </author> <title> On the Complexity of Approximating the Independent Set Problem. </title> <journal> Information and Computation, </journal> <volume> Vol. 96, </volume> <year> 1992, </year> <pages> 77-94. </pages>
Reference-contexts: We make a modest step in this direction, by showing that (a small) part of the interactive proofs machinary can be replaced by a graph theoretic tool. Our proof is based on an approach of Berman and Schnitger <ref> [10] </ref>, and essentially is a derandomization of a randomized reduction that they construct. The basic graph theoretic tool that we use is that of graph products. Derandomized graph products 3 Definition 1.4. Let G = (V; E) be a graph. <p> Thus even if k is nonconstant, the largest ratio of approximation that we can exclude never reaches N * . A way of overcoming both limitations was suggested by Berman and Schnit-ger <ref> [10] </ref>. The following is implicit in [10], and appears explicitly in [11] under the name of randomized graph products. <p> Thus even if k is nonconstant, the largest ratio of approximation that we can exclude never reaches N * . A way of overcoming both limitations was suggested by Berman and Schnit-ger <ref> [10] </ref>. The following is implicit in [10], and appears explicitly in [11] under the name of randomized graph products. <p> Under Assumption 1.5 (which is a theorem by now [6]), we want to prove that it is NP-hard to approximate clique within n * , for some * that depends on a and b. We sketch the randomized reduction of <ref> [10, 11] </ref>. On input G 2 G, we want to determine whether G 2 G a or G 2 G b . Let k = fi (log n). Consider G k . It has n k vertices. If G 2 G a then !(G k ) &lt; (an) k . <p> Since our technique is a de-randomization of the Berman and Schnitger technique, we call it derandomized graph products. Remark: The concept of randomized graph products and its relation to clique approximation follows from the work of Berman and Schnitger <ref> [10] </ref>, and is presented in [11]. At that time, Assumption 1.5 above was not known to hold. Instead, Berman and Schnitger considered MAX-SNP, a class of approximation problems defined in [24]. It is a simple matter to show that the problem presented in Assumption 1.5 is MAX-SNP-hard.
Reference: [11] <author> A. Blum. </author> <type> Ph.D. dissertation, </type> <institution> MIT. </institution>
Reference-contexts: Thus even if k is nonconstant, the largest ratio of approximation that we can exclude never reaches N * . A way of overcoming both limitations was suggested by Berman and Schnit-ger [10]. The following is implicit in [10], and appears explicitly in <ref> [11] </ref> under the name of randomized graph products. <p> Under Assumption 1.5 (which is a theorem by now [6]), we want to prove that it is NP-hard to approximate clique within n * , for some * that depends on a and b. We sketch the randomized reduction of <ref> [10, 11] </ref>. On input G 2 G, we want to determine whether G 2 G a or G 2 G b . Let k = fi (log n). Consider G k . It has n k vertices. If G 2 G a then !(G k ) &lt; (an) k . <p> Since our technique is a de-randomization of the Berman and Schnitger technique, we call it derandomized graph products. Remark: The concept of randomized graph products and its relation to clique approximation follows from the work of Berman and Schnitger [10], and is presented in <ref> [11] </ref>. At that time, Assumption 1.5 above was not known to hold. Instead, Berman and Schnitger considered MAX-SNP, a class of approximation problems defined in [24]. It is a simple matter to show that the problem presented in Assumption 1.5 is MAX-SNP-hard.
Reference: [12] <author> A. Cohen, A. Wigderson, Dispersers, </author> <title> deterministic amplification, and weak random sources. </title> <booktitle> Proc. 30th Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1989, </year> <pages> 14-19. </pages>
Reference-contexts: To the best of our knowledge, this question was not explicitly addressed before. It has been proved that the fraction of pseudorandom sample points that fall within a set is expected to be roughly proportional to its size <ref> [12, 17] </ref>, but even for fairly large sets, this does not exclude the possibility that for every k size pseudo random sample, at least one point lies outside the set.
Reference: [13] <author> U. Feige, S. Goldwasser, L. Lov asz, S. Safra, M. Szegedy, </author> <title> Approximating Clique is Almost NP-complete. </title> <booktitle> Proc. 32nd Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1991, </year> <pages> 2-12. </pages>
Reference-contexts: Recently, using the theory of interactive proofs, it has been established that approximating !(G) within a factor of n * (for some *) is NP-complete <ref> [13, 7, 6] </ref>. It is of great interest to find a "graph theoretic" proof that clique is hard to approximate, without the use of interactive proofs.
Reference: [14] <author> O. Gabber, Z. Galil, </author> <title> Explicit Constructions of Linear Sized Superconcentra-tors. </title> <journal> J. Comput. System Sci., </journal> <volume> 22(3), </volume> <year> 1981, </year> <pages> 407-420. </pages>
Reference-contexts: Our proof goes through even if H is nonsimple (it has self loops and parallel edges). This gives greater flexibility in the design of H. In particular, one may start with a constant degree bipartite expander, such as the one constructed in <ref> [14] </ref>, add self loops to each vertex (to destroy bipartiteness and make j n1 j bounded away from 0 ), and take the product of the resulting graph with itself sufficiently many times (until a desired value of 0 = is reached). 3.
Reference: [15] <author> M. Garey, D. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference: [16] <author> M. Halldorsson, J. Radhakrishnan, </author> <title> Greed is good: approximating independent sets in sparse and bounded-degree graphs. </title> <booktitle> Proc. Twenty-sixth Ann. ACM Symp. </booktitle> <institution> Theor. Comput., </institution> <year> 1994, </year> <pages> 439-448. </pages>
Reference-contexts: Berman and Furer [9] design a polynomial time algorithm that approximates ff (G) to within a ration of =5 + c, where 0 &lt; c &lt; 1 is some universal constant. Halldorsson and Radhakrishnan <ref> [16] </ref> analyse the performance of the greedy algorithm on this problem, and discuss several extensions.
Reference: [17] <author> R. Impagliazzo, D. Zuckerman, </author> <title> How to Recycle Random Bits. </title> <booktitle> Proc. 30th Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1989, </year> <pages> 248-253. </pages>
Reference-contexts: To the best of our knowledge, this question was not explicitly addressed before. It has been proved that the fraction of pseudorandom sample points that fall within a set is expected to be roughly proportional to its size <ref> [12, 17] </ref>, but even for fairly large sets, this does not exclude the possibility that for every k size pseudo random sample, at least one point lies outside the set.
Reference: [18] <author> N. Kahale, </author> <title> Better Expansion for Ramanujan Graphs. </title> <booktitle> Proc. 33rd Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1992, </year> <pages> 398-404. </pages> <note> 16 Alon et al. </note>
Reference-contexts: The main new technical lemma that we need is to lower bound the probability that a random walk (on a special type of expander graph) stays inside a prespecified set of nodes. This is not difficult to show, using the results of [3] and <ref> [18] </ref>. It turns out that the proof of this property does not rely at all on the expansion property of the graph, but rather on how "different" it is from a bipartite graph. <p> Similarly, it is essential that H does not have "large" independent sets. A typical measure for these properties is the value of the smallest (most negative) eigenvalue of the adjacency matrix of H (see for example Corollary 2 in <ref> [18] </ref>), and indeed our lower bound is expressed in terms of this eigenvalue. 1.3. A stronger lemma. For the purpose of derandomized graph products, it suffices to consider a fixed set of size bn, and lower bound the probability that a random walk stays inside the set. <p> The first one is Lemma 3 of <ref> [18] </ref> which we state without proof. Lemma 2.2. ([18]) Let H be a d-regular graph on n vertices, and let A and 1 = 0 n1 be as above. <p> The upper bound is Corollary 1 in <ref> [18] </ref>, and we give its proof only for the sake of completeness.) Proposition 2.4. Let H; d; n; A; 0 ; ; n1 be as above, let W be a set of w vertices in H and put = w=n.
Reference: [19] <author> R. Karp, </author> <title> Reducibility Among Combinatorial Problems. </title> <editor> In R. Miller and J. Thatcher, editors, </editor> <booktitle> Complexity of Computer Computations, </booktitle> <pages> pp. 85-103, </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: The motivating example. The problem of computing the size of the maximum clique in a graph was one of the first problems shown to be NP-complete <ref> [19] </ref>. Definition 1.1. Let G be a graph on n vertices. A clique is a set of vertices, any two of which are connected by an edge. The size of the maximum clique in G is denoted by !(G).
Reference: [20] <author> N. Linial, U. Vazirani, </author> <title> Graph Products and Chromatic Numbers. </title> <booktitle> Proc. 30th Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1989, </year> <pages> 124-128. </pages>
Reference-contexts: Recall that !(G) denotes the size of the maximum clique in G. It is easy to verify that !(G k ) = (!(G)) k . Graph products are used in order to "amplify gaps" in hardness results for approximation algorithms ([15], and see also <ref> [20] </ref>).
Reference: [21] <author> A. Lubotsky, R. Phillips, P. Sarnak, </author> <title> Ramanujan Graphs. </title> <journal> Combinatorica, </journal> <volume> Vol. 8(3), </volume> <year> 1988, </year> <pages> 261-277. </pages>
Reference-contexts: Derandomized graph products Derandomized graph products 7 Our graph H is based on an explicit construction of a constant degree expander graph. It is simplest to assume that H is a non-bipartite d-regular Ramanujan graph as in <ref> [21, 22] </ref>, where d &gt; 16 (ba) 2 . (If n is such that no respective H graph exists, then G can be slightly modified by adding dummy vertices until a desirable value of n is reached.) We construct the graph DG k (D stands for "derandomized") in the following way.
Reference: [22] <author> G. A. Margulis, </author> <title> Explicit group-theoretical constructions of combinatorial schemes and their application to the design of expanders and superconcentrators. </title> <type> Problemy Peredachi Informatsii 24, </type> <year> 1988, </year> <title> 51-60 (in Russian). English translation in Problems of Information Transmission 24, </title> <booktitle> 1988, </booktitle> <pages> 39-46. </pages>
Reference-contexts: Derandomized graph products Derandomized graph products 7 Our graph H is based on an explicit construction of a constant degree expander graph. It is simplest to assume that H is a non-bipartite d-regular Ramanujan graph as in <ref> [21, 22] </ref>, where d &gt; 16 (ba) 2 . (If n is such that no respective H graph exists, then G can be slightly modified by adding dummy vertices until a desirable value of n is reached.) We construct the graph DG k (D stands for "derandomized") in the following way.
Reference: [23] <author> M. Marcus, H. </author> <title> Minc, A Survey of Matrix Theory and Matrix Inequalities. </title> <publisher> Allyn and Bacon, Inc., </publisher> <address> Boston, </address> <year> 1964. </year>
Reference-contexts: Therefore, if u = P w i=1 c i u i then p (W; k) = n i=1 i fl k1 Since P w i = w (as this is the square of the L 2 -norm of u), and, by Lemma 2.2 and the Perron-Frobenius Theorem (cf., e.g., <ref> [23] </ref>), each fl i is in absolute value at most fl 1 + 1 (1 ), the required upper bound follows from (2.1) (for any k).
Reference: [24] <author> C. Papadimitriou, M.Yannakakis, </author> <title> Optimization, Approximation, and Complexity Classes. </title> <journal> J. Comput. System Sci., </journal> <volume> Vol. 43, </volume> <year> 1991, </year> <pages> 425-440. </pages>
Reference-contexts: At that time, Assumption 1.5 above was not known to hold. Instead, Berman and Schnitger considered MAX-SNP, a class of approximation problems defined in <ref> [24] </ref>. It is a simple matter to show that the problem presented in Assumption 1.5 is MAX-SNP-hard. <p> Halldorsson and Radhakrishnan [16] analyse the performance of the greedy algorithm on this problem, and discuss several extensions. As to hardness results for this problem, it follows from [6] and <ref> [24] </ref> that even if = 3, it is NP-hard to approximate ff (G) within a factor of 1 + *, for some * &gt; 0. <p> By [6] and <ref> [24] </ref>, there exist constants 0 &lt; a &lt; b &lt; 1 such that it is NP-hard to decide for G 2 G whether G 2 G a or G 2 G b , even if G contains only graphs of maximum degree 3.
Reference: [25] <author> D. Zuckerman, </author> <title> Simulating BPP Using a General Weak Random Source. </title> <booktitle> Proc. 32nd Ann. IEEE Symp. </booktitle> <institution> Found. Comput. Sci., </institution> <year> 1991, </year> <pages> 79-89. </pages> <institution> Manuscript received 18 November 1993 Noga Alon Department of Mathematics Tel Aviv University Tel Aviv, Israel and AT & T Bell Labs Murray Hill, NJ, 07974, USA noga@math.tau.ac.il Uriel Feige Department of Applied Math and Computer Science Weizmann Institute Rehovot 76100, Israel feige@wisdom.weizmann.ac.il Avi Wigderson Department of Computer Science Hebrew University of Jerusalem Givat Ram, Jerusalem, Israel avi@cs.huji.ac.il David Zuckerman Dept. of Computer Sciences University of Texas at Austin Austin, </institution> <address> TX 78712, USA diz@cs.utexas.edu </address>
Reference-contexts: Hence Assumption 1.5 above holds. 2. Using error reduction techniques for interactive proof systems (specifically suggested in <ref> [25] </ref>), one can show that approximating clique within a factor of n * is NP-hard. 3.
References-found: 25

