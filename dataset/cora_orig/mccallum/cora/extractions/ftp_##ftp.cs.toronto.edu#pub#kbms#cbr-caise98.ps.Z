URL: ftp://ftp.cs.toronto.edu/pub/kbms/cbr-caise98.ps.Z
Refering-URL: http://www.cs.utoronto.ca/~juris/pub.html
Root-URL: 
Email: jurisica@fis.utoronto.ca  nixon@cs.toronto.edu  
Phone: 2  
Title: Building Quality into Case-Based Reasoning Systems  
Author: Igor Jurisica and Brian A. Nixon 
Address: 140 St. George St., Toronto, ON M5S 3G6, Canada  Toronto, ON M5S 3H5, Canada  
Affiliation: 1 University of Toronto, Faculty of Information Studies  University of Toronto, Dept. of Computer Science  
Abstract: Complex decision-support information systems for diverse domains need advanced facilities, such as knowledge repositories, reasoning systems, and modeling for processing interrelated information. System development must satisfy functional requirements, but must also systematically meet global quality factors, such as performance, confidentiality and accuracy, called non-functional requirements (NFRs). To build quality into an important class of decision support systems, case-based reasoning (CBR) systems, this paper presents "Qual-ityCBR," a goal-oriented, knowledge-based approach for systematically dealing with NFRs for CBR systems. With the idea that similar problems have similar solutions, CBR systems store cases (problems with solutions) and solve new problems by retrieving and reusing similar past cases. QualityCBR integrates existing work on CBR and NFRs. It helps developers state and refine NFRs, consider tradeoffs, make decisions and evaluate their impact on NFRs. We illustrate the approach in a complex medical domain, in vitro fertilization, where CBR suggests therapy for patients, predicts the probability for successful pregnancy, and deter mines patient's characteristics that can improve pregnancy rate.
Abstract-found: 1
Intro-found: 1
Reference: 2. <author> R. Behi and M. Nolan. </author> <title> Ethical issues in research. </title> <journal> British Journal of Nursing, </journal> <volume> 4(12) </volume> <pages> 712-716, </pages> <year> 1995. </year>
Reference-contexts: While we did not initially identify professional integrity as a main goal, it is very interesting to see that the result of our analysis using the NFR Framework was in harmony with the observation that the integrity of researchers is paramount <ref> [2] </ref>. 3.4 Other NFRs Additional NFRs for the presented system include: (1) Robustness: the ability to gracefully handle a variety of situations; (2) User friendliness: providing the right degree of assistance to users; and (3) Informativeness: providing the right amount of information, appropriately arranged.
Reference: 3. <author> L. Chung. </author> <title> Dealing with security requirements during the development of information systems. </title> <booktitle> In Proc. 5 th Int. Conf. on Advanced Information Systems Engineering, </booktitle> <pages> pages 234-251, </pages> <address> Paris, France, 1993. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy [4] and security <ref> [3] </ref>. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time.
Reference: 4. <author> L. Chung. </author> <title> Representing and Using Non-Functional Requirements: A Process-Oriented Approach. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Univ. of Toronto, </institution> <year> 1993. </year>
Reference-contexts: These facilities are combined in our approach, called QualityCBR. To provide a development process that addresses NFRs for CBR, and is goal-oriented, systematic developer-directed and qualitative, we draw on the "NFR Framework" <ref> [4, 6, 31] </ref>. The NFR Framework supports this process of building quality in to a system interactively, while considering NFRs throughout the development process. Quality requirements are treated as goals to be systematically achieved during the design and development process. <p> be used for case base clustering by: (1) appropriately grouping attributes into categories (clustering of attributes); (2) discovering what values are "close" for particular attributes (clustering of attribute values); and (3) structuring the case base into clusters of relevant cases (clustering of cases). 2.2 Handling Non-Functional Requirements The NFR Framework <ref> [4, 31] </ref> helps a developer represent and use key concepts about NFRs (e.g., security and performance), the particular domain (e.g., IVF), and development expertise, (e.g., CBR, databases and system development). <p> The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) [5, 7]. Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy <ref> [4] </ref> and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time. The "NFR Assistant" prototype tool [4], <p> <ref> [4] </ref> and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time. The "NFR Assistant" prototype tool [4], provides support to a developer using the NFR Framework, by providing catalogues of concepts and methods, aiding the construction and evaluation of development graphs, and keeping track of correlations. The tool draws on the ConceptBase system [18] which uses the Telos [15, 30] knowledge representation language. <p> In addition, we have used domain knowledge, priorities and performance catalogues to produce customized solutions which meet needs of a particular organization. 3.3 Security Requirements Security is an important factor, especially in medicine, and IVF is a particularly sensitive application. Security includes such concepts as integrity, confidentiality and availability <ref> [4] </ref>, whose combination is used in a generic methodology for medical data security [14].
Reference: 5. <author> L. Chung and B. A. Nixon. </author> <title> Dealing with Non-Functional Requirements: Three Experimental Studies of a Process-Oriented Approach. </title> <booktitle> In Proc. 17 th Int. Conf. on Software Eng., </booktitle> <pages> pages 25-37, </pages> <address> Seattle, WA, </address> <year> 1995. </year>
Reference-contexts: Section 3.2 presents the components of the NFR Framework in more detail, and illustrates their use. The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) <ref> [5, 7] </ref>. Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy [4] and security [3].
Reference: 6. <author> L. Chung, B. A. Nixon, J. Mylopoulos, and E. Yu. </author> <note> Non-Functional Requirements in Software Engineering. In preparation, </note> <year> 1998. </year>
Reference-contexts: These facilities are combined in our approach, called QualityCBR. To provide a development process that addresses NFRs for CBR, and is goal-oriented, systematic developer-directed and qualitative, we draw on the "NFR Framework" <ref> [4, 6, 31] </ref>. The NFR Framework supports this process of building quality in to a system interactively, while considering NFRs throughout the development process. Quality requirements are treated as goals to be systematically achieved during the design and development process.
Reference: 7. <author> L. Chung, B. A. Nixon, and E. Yu. </author> <title> Dealing with Change: An Approach using Non-Functional Requirements. </title> <journal> Requirements Engineering, </journal> <volume> 1(4) </volume> <pages> 238-260, </pages> <year> 1996. </year> <title> An earlier version, Using Non-Functional Requirements to Systematically Support Change, </title> <booktitle> appeared in Proc. 2 nd IEEE Int. Symp. on Requirements Eng., </booktitle> <address> York, U.K., </address> <year> 1995, </year> <pages> pp. 132-139. </pages>
Reference-contexts: The factors which must be considered during development may all change during a system's lifetime. This greatly increases the complexity of development, and further motivates the need for a systematic approach. By using a knowledge-based approach, and by drawing on the NFR Framework's facilities for dealing with change <ref> [7] </ref>, we can systematically deal with change. There are two possible combinations of techniques for CBR and NFRs: (1) using CBR to support reasoning about and reuse of NFRs, and (2) using NFRs to systematically build quality into a CBR system. <p> Section 3.2 presents the components of the NFR Framework in more detail, and illustrates their use. The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) <ref> [5, 7] </ref>. Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy [4] and security [3]. <p> This is an example of reusing an existing development graph, which uses the NFR Framework's components to capture decisions and rationale, as a resource for rapid analysis of the impact of change upon the achievement of NFRs <ref> [7] </ref>. In addition, we have used domain knowledge, priorities and performance catalogues to produce customized solutions which meet needs of a particular organization. 3.3 Security Requirements Security is an important factor, especially in medicine, and IVF is a particularly sensitive application. <p> A variety of NFRs (e.g., performance, security, informativeness), and tradeoffs between individual requirements have been considered. We also found that the NFR Framework's development graphs and change facilities <ref> [7] </ref> made the process of dealing with change easier. In this paper we have considered changes in priorities of NFRs and in implementation techniques. This is consistent with results of using the NFR Framework to deal with changes in requirements for a commercial system.
Reference: 8. <author> A. Dardenne, A. van Lamsweerde, and S. Fickas. </author> <title> Goal-directed requirements acquisition. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 20 </volume> <pages> 3-50, </pages> <year> 1993. </year>
Reference-contexts: Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. It would be interesting to see if QualityCBR could be used to use other goal-oriented approaches to requirements engineering, e.g., <ref> [8, 11, 12] </ref>. This would draw on several facilities, such as representation of goals, priorities, and positive and negative links.
Reference: 9. <author> D. E. Denning, P. J. Denning, and M. D. Schwartz. </author> <title> The tracker: A threat to statistical database security. </title> <journal> ACM TODS, </journal> <volume> 4 </volume> <pages> 76-96, </pages> <year> 1979. </year>
Reference-contexts: The issue of security of statistical data is a complex one. According to [32]: "confusion still surrounds the question of whether privacy can be fundamentally violated by statistics drawn from personal records". However, it was also shown that statistical information could provide detailed information about individuals <ref> [9] </ref>. The more information pieces are tied together the more identifiable the individual is. Confidentiality of patient information must handle two goals: (1) information that identifies a patient and (2) information that does not (see Figure 3).
Reference: 10. <author> C.L. Early and L. C. </author> <title> Strong. Certificates of confidentiality: A valuable tool for protecting genetic data. </title> <journal> American Journal of Human Genetics, </journal> <volume> 57(3) </volume> <pages> 727-731, </pages> <year> 1995. </year>
Reference-contexts: Clearly, access to medical data should be restricted to authorized persons, in relation to their status [13]. In the case of the IVF clinic, the mere fact that someone is an IVF patient is considered quite a personal matter, hence confidential <ref> [10] </ref>. The issue of security of statistical data is a complex one. According to [32]: "confusion still surrounds the question of whether privacy can be fundamentally violated by statistics drawn from personal records". However, it was also shown that statistical information could provide detailed information about individuals [9].
Reference: 11. <author> S. Fickas and P. Nagarajan. </author> <title> Being suspicious: Critiquing problem specifications. </title> <booktitle> In Proc. AAAI-88, </booktitle> <pages> pages 19-24, </pages> <address> Saint Paul, MN, </address> <year> 1988. </year>
Reference-contexts: Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. It would be interesting to see if QualityCBR could be used to use other goal-oriented approaches to requirements engineering, e.g., <ref> [8, 11, 12] </ref>. This would draw on several facilities, such as representation of goals, priorities, and positive and negative links. <p> For example, sets of development graphs for a variety of systems could be examined and analyzed to find patterns (templates) of sequences of method applications. This could be aided by facilities for critiquing and rationalizing specifications <ref> [11] </ref>. Such templates could then be used as larger building blocks when using the NFR Framework to develop a variety of systems. Thus, CBR would provide underlying technology for a reuse assistant for the NFR Framework.
Reference: 12. <author> S. F. Fickas. </author> <title> Automating the transformational development of software. </title> <journal> IEEE Trans. on Software Eng., </journal> <volume> SE-11(11):1268-1277, </volume> <year> 1985. </year>
Reference-contexts: Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. It would be interesting to see if QualityCBR could be used to use other goal-oriented approaches to requirements engineering, e.g., <ref> [8, 11, 12] </ref>. This would draw on several facilities, such as representation of goals, priorities, and positive and negative links.
Reference: 13. <author> F.H. </author> <title> France and P.N. Gaunt. The need for security A clinical view. </title> <journal> International Journal of Bio-Medical Computing, 35(Suppl. </journal> 1):189-194, 1994. 
Reference-contexts: This dual usage complicates confidentiality considerations. Furthermore, researchers sometimes need to obtain further information about particular patients, hence the statistical research information must contain some patient identifiers. Clearly, access to medical data should be restricted to authorized persons, in relation to their status <ref> [13] </ref>. In the case of the IVF clinic, the mere fact that someone is an IVF patient is considered quite a personal matter, hence confidential [10]. The issue of security of statistical data is a complex one. <p> Thus, the goal for robustness of the system is refined into goals for data integrity, robustness of reasoning and robustness of presentation (Figure 4, top left). Data integrity is important [14]. As suggested in <ref> [13] </ref>, verification and validation of data completeness and accuracy is an additional measure ensuring data integrity. Thus, especially in the early stages of system development, all attributes available should be used. This allows for correlating the attributes, which can lead to identifying data integrity violations.
Reference: 14. <author> S. Furnell, P. Gaunt, G. Pangalos, P. Sanders, and M. Warren. </author> <title> A generic methodology for health care data security. </title> <journal> Medical Informatics, </journal> <volume> 19(3) </volume> <pages> 229-245, </pages> <year> 1994. </year>
Reference-contexts: Security includes such concepts as integrity, confidentiality and availability [4], whose combination is used in a generic methodology for medical data security <ref> [14] </ref>. For the IVF clinic, we identified two primary goals (top part of Figure 3): (1) The physical integrity of gametes of the patient is extremely crucial (indicated by "!!"). (2) The confidentiality of patient data should be maintained. <p> Thus, the goal for robustness of the system is refined into goals for data integrity, robustness of reasoning and robustness of presentation (Figure 4, top left). Data integrity is important <ref> [14] </ref>. As suggested in [13], verification and validation of data completeness and accuracy is an additional measure ensuring data integrity. Thus, especially in the early stages of system development, all attributes available should be used. This allows for correlating the attributes, which can lead to identifying data integrity violations.
Reference: 15. <author> S. Greenspan, J. Mylopoulos, and A. Borgida. </author> <title> On Formal Requirements Modeling Languages: RML Revisited. </title> <booktitle> In Proceedings, 16th International Conference on Software Engineering, </booktitle> <pages> pages 135-147, </pages> <address> Sorrento, Italy, </address> <year> 1994. </year>
Reference-contexts: The "NFR Assistant" prototype tool [4], provides support to a developer using the NFR Framework, by providing catalogues of concepts and methods, aiding the construction and evaluation of development graphs, and keeping track of correlations. The tool draws on the ConceptBase system [18] which uses the Telos <ref> [15, 30] </ref> knowledge representation language. A specialization of the tool, the Performance Requirements Assistant [34, 35], offers catalogues of concepts and techniques for treating performance requirements, using other Telos-based knowledge base management tools, 1 but offers only a subset of the functionality of the NFR Assistant. 1 M.
Reference: 16. <author> F. Honig. </author> <title> When you can't ask their name: Linking anonymous respondents with the Hogben number. </title> <journal> Australian Journal of Public Health, </journal> <volume> 19(1) </volume> <pages> 94-96, </pages> <year> 1995. </year>
Reference-contexts: To reduce the risk of names being divulged to third parties, the patient's name should not be used outside the lab. Instead, an identification number (hospital number, sample number or user generated number <ref> [16] </ref>) is used. Evaluating the Overall Impact of Decisions. Using a name within the lab helps accurately identify gametes, and maintain its physical integrity. The selective use of name and number provides confidentiality of identifying information, both inside and outside the lab.
Reference: 17. <author> W. F. Hyslop. </author> <title> Performance Prediction of Relational Database Management Systems. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Univ. of Toronto, </institution> <year> 1991. </year>
Reference-contexts: Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy [4] and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach <ref> [17] </ref> based on data model features, to reduce the number of issues considered at a time.
Reference: 18. <author> M. Jarke. </author> <title> ConceptBase V3.1 User Manual. </title> <institution> Univ. of Passau, </institution> <year> 1992. </year>
Reference-contexts: The "NFR Assistant" prototype tool [4], provides support to a developer using the NFR Framework, by providing catalogues of concepts and methods, aiding the construction and evaluation of development graphs, and keeping track of correlations. The tool draws on the ConceptBase system <ref> [18] </ref> which uses the Telos [15, 30] knowledge representation language.
Reference: 19. <author> I. Jurisica. </author> <title> Supporting flexibility. A case-based reasoning approach. </title> <booktitle> In The AAAI Fall Symposium. Flexible Computation in Intelligent Systems: Results, Issues, and Opportunities, </booktitle> <address> Cambridge, MA, </address> <year> 1996. </year>
Reference-contexts: But similarity of cases is only one measure of system quality. It is also important that the solution be provided quickly. It should be noted that the tradeoff between closeness and timeliness of a solution depends on requirements of a particular application <ref> [19] </ref>. For these reasons we use a variable-context similarity assessment and case base clustering as described next. T A3 is a CBR system, which uses a variable-context similarity-based retrieval algorithm [22] and a flexible representation language. <p> Individual attributes are grouped into one or more categories [22]. Categories bring additional structure to a case representation. This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. As a result, we get a more flexible reasoning system <ref> [19] </ref>, a more comprehensible presentation of complex information [20], improved solution quality [24], and improved scalability [23]. During the CBR process, we want to handle partial as well as exact matches. <p> For example, the use of an "any time system" (which must produce a valid answer at any time) entails flexible and adaptive procedures to meet accuracy and safety requirements <ref> [19] </ref>. These steps will help us to better asses the generality of the approach and proposed combined tools to evaluate its costs and benefits.
Reference: 20. <author> I. Jurisica. </author> <title> Similarity-based retrieval for diverse Bookshelf software repository users. </title> <booktitle> In IBM CASCON Conference, </booktitle> <pages> pages 224-235, </pages> <address> Toronto, Canada, </address> <year> 1997. </year>
Reference-contexts: This paper addresses the latter issue, using the QualityCBR approach. In particular, we describe the process of using QualityCBR and providing catalogues that deal with alternative implementations. QualityCBR draws on a flexible knowledge representation language for information systems | Telos [30], relevance assessment <ref> [20] </ref>, similarity-based retrieval algorithm [22], and the NFR Framework's goal-oriented, qualitative approach [31]. In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. <p> Categories bring additional structure to a case representation. This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. As a result, we get a more flexible reasoning system [19], a more comprehensible presentation of complex information <ref> [20] </ref>, improved solution quality [24], and improved scalability [23]. During the CBR process, we want to handle partial as well as exact matches. We have a partial matching when attribute values of one case match only a subset of values of another case. <p> Dealing with Several NFRs for the System. presentation. Thus, only relevant attributes should be used in later phases. As described in Section 2.1, knowledge-discovery techniques can be used to locate features relevant to the problem solving task [24]. Using only relevant features improves flexibility <ref> [20] </ref>, accuracy [22], and efficiency [23]. The effect of this selective use of attributes contributes positively to the top goals of robustness and informativeness, both of which are accomplished, but user friendliness is not accomplished for the reasons described below. <p> T A3's performance evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine [24], [24], control task in robotic domains [21], character recognition [22], iterative browsing and intelligent retrieval <ref> [20] </ref>. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system.
Reference: 21. <author> I. Jurisica and J. Glasgow. </author> <title> A case-based reasoning approach to learning control. </title> <booktitle> In 5 th International Conference on Data and Knowledge Systems for Manufacturing and Engineering, </booktitle> <address> DKSME-96, Phoenix, AZ, </address> <year> 1996. </year>
Reference-contexts: This is consistent with results of using the NFR Framework to deal with changes in requirements for a commercial system. T A3's performance evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine [24], [24], control task in robotic domains <ref> [21] </ref>, character recognition [22], iterative browsing and intelligent retrieval [20]. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. <p> We would like to conduct fuller studies of applying TA3 to a variety of areas, both public and private, such as medicine, engineering and commerce, which require a variety of NFRs. Notably, we plan to explore the capability of using QualityCBR during building engineering applications, such as robotics <ref> [21] </ref>, where real time response is critical. For example, the use of an "any time system" (which must produce a valid answer at any time) entails flexible and adaptive procedures to meet accuracy and safety requirements [19].
Reference: 22. <author> I. Jurisica and J. Glasgow. </author> <title> Case-based classification using similarity-based re-trieval. </title> <journal> International Journal of Artificial Intelligence Tools. Special Issue of IEEE ICTAI-96 Best Papers, </journal> <volume> 6(4) </volume> <pages> 511-536, </pages> <year> 1997. </year>
Reference-contexts: This paper addresses the latter issue, using the QualityCBR approach. In particular, we describe the process of using QualityCBR and providing catalogues that deal with alternative implementations. QualityCBR draws on a flexible knowledge representation language for information systems | Telos [30], relevance assessment [20], similarity-based retrieval algorithm <ref> [22] </ref>, and the NFR Framework's goal-oriented, qualitative approach [31]. In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. <p> For these reasons we use a variable-context similarity assessment and case base clustering as described next. T A3 is a CBR system, which uses a variable-context similarity-based retrieval algorithm <ref> [22] </ref> and a flexible representation language. Knowledge must be represented in a form appropriate for the intended user, and the representation should be rich enough to support complex, yet efficient processing [23]. Cases are represented as a collection of attribute-value pairs. Individual attributes are grouped into one or more categories [22]. <p> <ref> [22] </ref> and a flexible representation language. Knowledge must be represented in a form appropriate for the intended user, and the representation should be rich enough to support complex, yet efficient processing [23]. Cases are represented as a collection of attribute-value pairs. Individual attributes are grouped into one or more categories [22]. Categories bring additional structure to a case representation. This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. <p> By controlling what constitutes a partial match, context specifies important attributes and how "close" an attribute value must be. We say that a case satisfies (or matches) a particular context, if for each attribute specified in the context, the value of that attribute in the case satisfies the constraint <ref> [22] </ref>. Thus, the matching process can be described as a constraint satisfaction problem [40]. The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer [23], and adaptability of the suggested solution [26]. <p> a particular context, if for each attribute specified in the context, the value of that attribute in the case satisfies the constraint <ref> [22] </ref>. Thus, the matching process can be described as a constraint satisfaction problem [40]. The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer [23], and adaptability of the suggested solution [26]. Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected [37]. <p> Dealing with Several NFRs for the System. presentation. Thus, only relevant attributes should be used in later phases. As described in Section 2.1, knowledge-discovery techniques can be used to locate features relevant to the problem solving task [24]. Using only relevant features improves flexibility [20], accuracy <ref> [22] </ref>, and efficiency [23]. The effect of this selective use of attributes contributes positively to the top goals of robustness and informativeness, both of which are accomplished, but user friendliness is not accomplished for the reasons described below. <p> This is consistent with results of using the NFR Framework to deal with changes in requirements for a commercial system. T A3's performance evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine [24], [24], control task in robotic domains [21], character recognition <ref> [22] </ref>, iterative browsing and intelligent retrieval [20]. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system.
Reference: 23. <author> I. Jurisica and J. Glasgow. </author> <title> An efficient approach to iterative browsing and retrieval for case-based reasoning. </title> <editor> In Angel Pasqual del Pobil, Jose Mira, and Moonis Ali, editors, </editor> <booktitle> Lecture Notes in Computer Science, </booktitle> <address> IEA/AIE*98. </address> <publisher> Springer-Verlag, </publisher> <year> 1998. </year>
Reference-contexts: T A3 is a CBR system, which uses a variable-context similarity-based retrieval algorithm [22] and a flexible representation language. Knowledge must be represented in a form appropriate for the intended user, and the representation should be rich enough to support complex, yet efficient processing <ref> [23] </ref>. Cases are represented as a collection of attribute-value pairs. Individual attributes are grouped into one or more categories [22]. Categories bring additional structure to a case representation. This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. <p> This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. As a result, we get a more flexible reasoning system [19], a more comprehensible presentation of complex information [20], improved solution quality [24], and improved scalability <ref> [23] </ref>. During the CBR process, we want to handle partial as well as exact matches. We have a partial matching when attribute values of one case match only a subset of values of another case. <p> Thus, the matching process can be described as a constraint satisfaction problem [40]. The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer <ref> [23] </ref>, and adaptability of the suggested solution [26]. Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected [37]. Our approach of representing cases as sets of Telos-style categories [30], each comprising a set of tuples, allows for multiple levels of m-of-n matching. <p> Dealing with Several NFRs for the System. presentation. Thus, only relevant attributes should be used in later phases. As described in Section 2.1, knowledge-discovery techniques can be used to locate features relevant to the problem solving task [24]. Using only relevant features improves flexibility [20], accuracy [22], and efficiency <ref> [23] </ref>. The effect of this selective use of attributes contributes positively to the top goals of robustness and informativeness, both of which are accomplished, but user friendliness is not accomplished for the reasons described below. <p> Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability <ref> [23] </ref> of the system. It would be interesting to see if QualityCBR could be used to use other goal-oriented approaches to requirements engineering, e.g., [8, 11, 12]. This would draw on several facilities, such as representation of goals, priorities, and positive and negative links.
Reference: 24. <author> I. Jurisica, J. Mylopoulos, J. Glasgow, H. Shapiro, and R. F. Casper. </author> <title> Case-based reasoning in IVF: Prediction and knowledge mining. </title> <journal> Artificial Intelligence in Medicine, </journal> <volume> 12(1) </volume> <pages> 1-24, </pages> <year> 1998. </year>
Reference-contexts: In this paper we use a generic CBR system called T A3 (pronounced tah-tree) to build a complex medical DSS, which can be used to advise physicians who prescribe treatment plans for in vitro fertilization (IVF) patients <ref> [24] </ref>. CBR systems must meet functional requirements, including retrieving past cases, selecting and reasoning about relevant ones, interactively exploring cases, and adapting them to produce a solution, which is then evaluated. <p> QualityCBR draws on a flexible knowledge representation language for information systems | Telos [30], relevance assessment [20], similarity-based retrieval algorithm [22], and the NFR Framework's goal-oriented, qualitative approach [31]. In addition, QualityCBR uses knowledge discovery algorithms <ref> [1, 24] </ref> and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. During the development of the system we considered some NFRs, albeit in an ad hoc manner. <p> In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 <ref> [24] </ref>. During the development of the system we considered some NFRs, albeit in an ad hoc manner. <p> Categories bring additional structure to a case representation. This reduces the impact of irrelevant attributes on system performance by selectively using individual categories during matching. As a result, we get a more flexible reasoning system [19], a more comprehensible presentation of complex information [20], improved solution quality <ref> [24] </ref>, and improved scalability [23]. During the CBR process, we want to handle partial as well as exact matches. We have a partial matching when attribute values of one case match only a subset of values of another case. <p> The problem is to find these attribute groupings, i.e., a context that specifies which attributes are needed for accurate prediction, and what range or similarity should be allowed for attribute values. This knowledge can be automatically discovered <ref> [24] </ref> and can be used for case base clustering by: (1) appropriately grouping attributes into categories (clustering of attributes); (2) discovering what values are "close" for particular attributes (clustering of attribute values); and (3) structuring the case base into clusters of relevant cases (clustering of cases). 2.2 Handling Non-Functional Requirements The <p> In addition, the system should be robust and user-friendly (Section 3.4). 3.1 Functional Requirements in the IVF Domain In vitro fertilization (IVF) is an example of a complex medical domain, where DSS can be used to suggest the hormonal treatment and to support research <ref> [24] </ref>. Individual patients respond to the treatment differently. A patient's response and the pregnancy rate depends on many attributes. <p> Knowledge mining in T A3 involves finding a context in which a particular group of cases is considered similar. The user has the ability to specify a threshold, which controls the quality and the quantity of discovered information <ref> [24] </ref>. Considering that each patient is described by about a hundred attributes [24], that there are about 600 patients per year per clinic and that there are about 300 IVF clinics in North America [29], the problem is not simple. <p> The user has the ability to specify a threshold, which controls the quality and the quantity of discovered information <ref> [24] </ref>. Considering that each patient is described by about a hundred attributes [24], that there are about 600 patients per year per clinic and that there are about 300 IVF clinics in North America [29], the problem is not simple. <p> There is a relationship between accuracy, time and space: the more cases are stored, the more accurate solutions can be provided, but the longer it takes to find cases relevant to a given problem. Knowledge discovery. Treatment protocols can be improved by using knowledge discovery <ref> [24] </ref>. Discovered knowledge is used to organize attributes into categories, and cases into clusters (equivalence classes). <p> Dealing with Several NFRs for the System. presentation. Thus, only relevant attributes should be used in later phases. As described in Section 2.1, knowledge-discovery techniques can be used to locate features relevant to the problem solving task <ref> [24] </ref>. Using only relevant features improves flexibility [20], accuracy [22], and efficiency [23]. The effect of this selective use of attributes contributes positively to the top goals of robustness and informativeness, both of which are accomplished, but user friendliness is not accomplished for the reasons described below. <p> This is consistent with results of using the NFR Framework to deal with changes in requirements for a commercial system. T A3's performance evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine <ref> [24] </ref>, [24], control task in robotic domains [21], character recognition [22], iterative browsing and intelligent retrieval [20]. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. <p> This is consistent with results of using the NFR Framework to deal with changes in requirements for a commercial system. T A3's performance evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine <ref> [24] </ref>, [24], control task in robotic domains [21], character recognition [22], iterative browsing and intelligent retrieval [20]. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. <p> evaluation has been conducted on several domains: pre-diction and knowledge mining in medicine <ref> [24] </ref>, [24], control task in robotic domains [21], character recognition [22], iterative browsing and intelligent retrieval [20]. Each domain has different characteristics; this helps evaluation of different aspects of the system. We have evaluated both the competence [24] and scalability [23] of the system. It would be interesting to see if QualityCBR could be used to use other goal-oriented approaches to requirements engineering, e.g., [8, 11, 12]. This would draw on several facilities, such as representation of goals, priorities, and positive and negative links.
Reference: 25. <author> D. Leake, </author> <title> editor. Case-Based Reasoning: Experiences, lessons and future directions. </title> <publisher> AAAI Press, </publisher> <year> 1996. </year>
Reference-contexts: However, to effectively build families of DSSs for complex domains, such as medical, governmental or industrial applications, we need a systematic knowledge-based approach to: (1) empower expert user to make effective decisions using a DSS, and (2) address concerns for quality and performance requirements. Case-based reasoning (CBR) systems <ref> [25] </ref> are an important class of DSSs that represent experiences (problems with solutions) as cases. Cases are used for solving new problems by accessing past cases and comparing their similarity to a given problem. <p> Our aim is a flexible system that can be applied to various domains, without sacrificing system performance. We consider system performance as a quality of solution and its timeliness. A case-based reasoning approach <ref> [25] </ref> relies on the idea that similar problems have similar solutions. Facing a new problem, a CBR system retrieves similar cases stored in a case base and adapts them to fit the problem at hand.
Reference: 26. <author> D. Leake, A. Kinley, and D. Wilson. </author> <title> Case-based similarity assessment: Estimating adaptability from experience. </title> <booktitle> In Proc. of the AAAI-97, </booktitle> <year> 1997. </year>
Reference-contexts: Thus, the matching process can be described as a constraint satisfaction problem [40]. The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer [23], and adaptability of the suggested solution <ref> [26] </ref>. Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected [37]. Our approach of representing cases as sets of Telos-style categories [30], each comprising a set of tuples, allows for multiple levels of m-of-n matching.
Reference: 27. <author> A. S. Lee. </author> <title> A scientific methodology for MIS case studies. </title> <journal> MIS Quarterly, </journal> <pages> pages 30-50, </pages> <year> 1991. </year>
Reference-contexts: These steps will help us to better asses the generality of the approach and proposed combined tools to evaluate its costs and benefits. Studies should use a methodology, such as <ref> [27] </ref> which allows us to have the kind of confidence in the results that one would have in using the scientific method. An important direction for future work is to apply CBR to the NFR Framework and its associated tool.
Reference: 28. <author> J. Lee. </author> <title> Extending the Potts and Bruns Model for Recording Design Rationale. </title> <booktitle> In Proc., 13th Int. Conf. on Software Eng., </booktitle> <pages> pages 114-125, </pages> <address> Austin, Texas, </address> <year> 1991. </year>
Reference-contexts: Being influenced by work in DSSs <ref> [28] </ref>, the NFR Framework maintains a concise and structured development graph whose components record the developer's goals, decisions and design rationale. The developer states a set of NFRs for the system, which are represented as goals that are considered throughout the system development process. <p> Here, we identify the prediction operation as being time-critical (indicated by "!"), and provide a reason using domain knowledge: it is important to aid the doctor by quickly suggesting a treatment. This is an example of recording design rationale <ref> [28] </ref> - the reasons for decisions using the NFR Framework's arguments. As part of the development graph, arguments are available when making further decisions and changes.
Reference: 29. <author> P. M. McShane. </author> <title> Customized comparative clinical results assessment of your IVF program. </title> <publisher> IVF America, </publisher> <year> 1993. </year>
Reference-contexts: Considering that each patient is described by about a hundred attributes [24], that there are about 600 patients per year per clinic and that there are about 300 IVF clinics in North America <ref> [29] </ref>, the problem is not simple. Moreover, IVF information is more sensitive than general medical information and the complex IVF process involves various professionals, which need to access part or whole information about the patient. IVF has relevance to both the public and private sectors.
Reference: 30. <author> J. Mylopoulos, A. Borgida, M. Jarke, and M. Koubarakis. </author> <title> Telos: Representing knowledge about information systems. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 8(4) </volume> <pages> 325-362, </pages> <year> 1990. </year>
Reference-contexts: This paper addresses the latter issue, using the QualityCBR approach. In particular, we describe the process of using QualityCBR and providing catalogues that deal with alternative implementations. QualityCBR draws on a flexible knowledge representation language for information systems | Telos <ref> [30] </ref>, relevance assessment [20], similarity-based retrieval algorithm [22], and the NFR Framework's goal-oriented, qualitative approach [31]. In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. <p> Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected [37]. Our approach of representing cases as sets of Telos-style categories <ref> [30] </ref>, each comprising a set of tuples, allows for multiple levels of m-of-n matching. Thus, important attributes may require n-of-n matches for a given category, and less important attributes may allow for k-of-n matches (k &lt; n). <p> The "NFR Assistant" prototype tool [4], provides support to a developer using the NFR Framework, by providing catalogues of concepts and methods, aiding the construction and evaluation of development graphs, and keeping track of correlations. The tool draws on the ConceptBase system [18] which uses the Telos <ref> [15, 30] </ref> knowledge representation language. A specialization of the tool, the Performance Requirements Assistant [34, 35], offers catalogues of concepts and techniques for treating performance requirements, using other Telos-based knowledge base management tools, 1 but offers only a subset of the functionality of the NFR Assistant. 1 M.
Reference: 31. <author> J. Mylopoulos, L. Chung, and B. Nixon. </author> <title> Representing and Using Non-Functional Requirements: A Process-Oriented Approach. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 18 </volume> <pages> 483-497, </pages> <year> 1992. </year>
Reference-contexts: These facilities are combined in our approach, called QualityCBR. To provide a development process that addresses NFRs for CBR, and is goal-oriented, systematic developer-directed and qualitative, we draw on the "NFR Framework" <ref> [4, 6, 31] </ref>. The NFR Framework supports this process of building quality in to a system interactively, while considering NFRs throughout the development process. Quality requirements are treated as goals to be systematically achieved during the design and development process. <p> In particular, we describe the process of using QualityCBR and providing catalogues that deal with alternative implementations. QualityCBR draws on a flexible knowledge representation language for information systems | Telos [30], relevance assessment [20], similarity-based retrieval algorithm [22], and the NFR Framework's goal-oriented, qualitative approach <ref> [31] </ref>. In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience [36]. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. During the development of the system we considered some NFRs, albeit in an ad hoc manner. <p> be used for case base clustering by: (1) appropriately grouping attributes into categories (clustering of attributes); (2) discovering what values are "close" for particular attributes (clustering of attribute values); and (3) structuring the case base into clusters of relevant cases (clustering of cases). 2.2 Handling Non-Functional Requirements The NFR Framework <ref> [4, 31] </ref> helps a developer represent and use key concepts about NFRs (e.g., security and performance), the particular domain (e.g., IVF), and development expertise, (e.g., CBR, databases and system development).
Reference: 32. <author> H.B. Newcombe. </author> <title> When privacy threatens public health. </title> <journal> Canadian Journal of Public Health. Revue Canadienne de Sante Publique., </journal> <volume> 83(3) </volume> <pages> 188-192, </pages> <year> 1995. </year>
Reference-contexts: In the case of the IVF clinic, the mere fact that someone is an IVF patient is considered quite a personal matter, hence confidential [10]. The issue of security of statistical data is a complex one. According to <ref> [32] </ref>: "confusion still surrounds the question of whether privacy can be fundamentally violated by statistics drawn from personal records". However, it was also shown that statistical information could provide detailed information about individuals [9]. The more information pieces are tied together the more identifiable the individual is.
Reference: 33. <author> B. A. Nixon. </author> <title> Dealing with performance requirements during the development of information systems. </title> <booktitle> In Proc. IEEE International Symposium on Requirements Engineering, </booktitle> <pages> pages 42-49, </pages> <address> San Diego, CA, </address> <year> 1994. </year>
Reference-contexts: The NFR Framework, with its associated tool, helps a developer state and refine NFRs, consider design tradeoffs, justify decisions and evaluate their impact on NFRs, while giving the developer control of the development process. To deal with performance requirements, we draw on the Performance Requirements Framework <ref> [33, 34, 35] </ref>, a specialization of the NFR Framework. The factors which must be considered during development may all change during a system's lifetime. This greatly increases the complexity of development, and further motivates the need for a systematic approach. <p> The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) [5, 7]. Its approach can be specialized to deal with a number of NFRs, such as performance <ref> [33, 34, 35] </ref>, accuracy [4] and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time.
Reference: 34. <author> B. A. Nixon. </author> <title> Representing and using performance requirements during the development of information systems. </title> <booktitle> In Proc. 4 th Int. Conf. on Extending Database Technology, </booktitle> <pages> pages 187-200, </pages> <address> Cambridge, U.K., </address> <year> 1994. </year>
Reference-contexts: The NFR Framework, with its associated tool, helps a developer state and refine NFRs, consider design tradeoffs, justify decisions and evaluate their impact on NFRs, while giving the developer control of the development process. To deal with performance requirements, we draw on the Performance Requirements Framework <ref> [33, 34, 35] </ref>, a specialization of the NFR Framework. The factors which must be considered during development may all change during a system's lifetime. This greatly increases the complexity of development, and further motivates the need for a systematic approach. <p> The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) [5, 7]. Its approach can be specialized to deal with a number of NFRs, such as performance <ref> [33, 34, 35] </ref>, accuracy [4] and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time. <p> The tool draws on the ConceptBase system [18] which uses the Telos [15, 30] knowledge representation language. A specialization of the tool, the Performance Requirements Assistant <ref> [34, 35] </ref>, offers catalogues of concepts and techniques for treating performance requirements, using other Telos-based knowledge base management tools, 1 but offers only a subset of the functionality of the NFR Assistant. 1 M. Stanley's Telos sh and B. <p> Specialized catalogues draw on combinations of aspects, e.g., domain knowledge for knowledge data dis covery. Concepts about particular NFRs (e.g., performance and security). For example, a terminology of performance concepts is made available, along with a catalogue which shows the impact of implementation techniques on time and space goals <ref> [34] </ref>. Concepts about the particular application domain, e.g., IVF: descriptions of processes (e.g., a cycle of patient treatment) and workload (e.g., number of patients). <p> In developing QualityCBR, catalogues have been organized to represent diverse knowledge concerning CBR, NFRs, IVF, and development techniques. By drawing on several axes (e.g., CBR and performance), we can focus on small groups of specific methods. This approach is similar to the organization of information system performance requirements issues <ref> [34] </ref>. We feel that the use of such catalogues is helpful in dealing with NFRs in medical computing and other complex domains, public and private. To demonstrate how a developer can use QualityCBR to deal with conflicting and changing requirements, we illustrated its use in a medical domain.
Reference: 35. <author> B. A. Nixon. </author> <title> Performance Requirements for Information Systems. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Science, Univ. of Toronto, </institution> <year> 1997. </year>
Reference-contexts: The NFR Framework, with its associated tool, helps a developer state and refine NFRs, consider design tradeoffs, justify decisions and evaluate their impact on NFRs, while giving the developer control of the development process. To deal with performance requirements, we draw on the Performance Requirements Framework <ref> [33, 34, 35] </ref>, a specialization of the NFR Framework. The factors which must be considered during development may all change during a system's lifetime. This greatly increases the complexity of development, and further motivates the need for a systematic approach. <p> The NFR Framework has been previously applied to information systems in several domains, in both the public and private sectors (e.g., health insurance, banking and government systems) [5, 7]. Its approach can be specialized to deal with a number of NFRs, such as performance <ref> [33, 34, 35] </ref>, accuracy [4] and security [3]. For performance, for example, we represented principles for building good response time into systems [39] and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time. <p> The tool draws on the ConceptBase system [18] which uses the Telos [15, 30] knowledge representation language. A specialization of the tool, the Performance Requirements Assistant <ref> [34, 35] </ref>, offers catalogues of concepts and techniques for treating performance requirements, using other Telos-based knowledge base management tools, 1 but offers only a subset of the functionality of the NFR Assistant. 1 M. Stanley's Telos sh and B.
Reference: 36. <author> B. A. Nixon, K. L. Chung, D. Lauzon, A. Borgida, J. Mylopoulos, and M. Stanley. </author> <title> Design of a compiler for a semantic data model. </title> <editor> In J. W. Schmidt and C. Thanos, editors, </editor> <booktitle> Foundations of Knowledge Base Management, </booktitle> <pages> pages 293-343. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: QualityCBR draws on a flexible knowledge representation language for information systems | Telos [30], relevance assessment [20], similarity-based retrieval algorithm [22], and the NFR Framework's goal-oriented, qualitative approach [31]. In addition, QualityCBR uses knowledge discovery algorithms [1, 24] and data model implementation experience <ref> [36] </ref>. QualityCBR is applied to a complex medical DSS for IVF practitioners T A3 [24]. During the development of the system we considered some NFRs, albeit in an ad hoc manner.
Reference: 37. <author> J. Ortega. </author> <title> On the informativeness of the DNA promoter sequences domain theory. </title> <journal> Journal of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 361-367, </pages> <year> 1995. </year> <note> Research Note. </note>
Reference-contexts: The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer [23], and adaptability of the suggested solution [26]. Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected <ref> [37] </ref>. Our approach of representing cases as sets of Telos-style categories [30], each comprising a set of tuples, allows for multiple levels of m-of-n matching. Thus, important attributes may require n-of-n matches for a given category, and less important attributes may allow for k-of-n matches (k &lt; n).
Reference: 38. <editor> H. A. Simon. </editor> <booktitle> The Sciences of the Artificial, </booktitle> <address> 2 nd Edition. </address> <publisher> MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1981. </year>
Reference-contexts: The NFR Framework takes a qualitative, "satisficing" approach, in which goals are more-or-less met, although they may not be satisfied in an absolute sense <ref> [38] </ref>. Similarly, the goal of good response time for research reasoning can be refined into a goal of fast response for the "discovery" process which searches patient records for patterns.
Reference: 39. <author> C. U. Smith. </author> <title> Performance Engineering of Software Systems. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: Its approach can be specialized to deal with a number of NFRs, such as performance [33, 34, 35], accuracy [4] and security [3]. For performance, for example, we represented principles for building good response time into systems <ref> [39] </ref> and arranged information system implementation knowledge using a layering approach [17] based on data model features, to reduce the number of issues considered at a time. <p> Other types of relationships can be shown by other link types (see Figure 2). In building quality into a system, it is important to identify priorities. For the case of building performance in, we should identify time-critical operations as well as those which dominate the workload <ref> [39] </ref>. Here, we identify the prediction operation as being time-critical (indicated by "!"), and provide a reason using domain knowledge: it is important to aid the doctor by quickly suggesting a treatment. <p> For example, if a parent goal received positive and negative values from different offsprings, the developer is able to resolve the conflict using domain knowledge. It should be noted that not all goals can always be met, but performance can be enhanced if the priorities are accomplished <ref> [39] </ref>. As presented in Figure 2, the critical goal for prediction has been met. Since the update time goal was also met, the top goal for records and reasoning was met. As the discovery goal was met, the top goal for research reasoning was also met.
Reference: 40. <author> P. R. Thagard, K. J. Holyoak, G. Nelson, and D. Gotchfeld. </author> <title> Analog retrieval by constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 46 </volume> <pages> 259-310, </pages> <year> 1990. </year> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: We say that a case satisfies (or matches) a particular context, if for each attribute specified in the context, the value of that attribute in the case satisfies the constraint [22]. Thus, the matching process can be described as a constraint satisfaction problem <ref> [40] </ref>. The quality of the matching process is measured by the closeness of retrieved cases [22], timeliness of the answer [23], and adaptability of the suggested solution [26]. Ortega has shown that partial m-of-n matches improve performance if m is reasonably selected [37].
References-found: 39

