URL: http://epoch.cs.berkeley.edu:8000/control/online/debull97.ps
Refering-URL: http://www.cs.berkeley.edu/~jmh/papers.html
Root-URL: 
Title: Online Processing Redux  
Author: Joseph M. Hellerstein 
Address: Berkeley  
Affiliation: U.C.  
Abstract: The term "online" has become an all-too-common addendum to database system names of the day. In this article we reexamine the notion of processing queries online. We distinguish between online processing and preprocessing, and argue that online processing for large queries requires redesigning major portions of a database system. We highlight pressing applications for truly online processing, and sketch ongoing research in these applications at Berkeley. We also outline basic techniques for running long queries online. We close by reevaluating the typical measurements of cost/performance for online systems, and propose a mass-market approach for designing and measuring data-intensive processing. 
Abstract-found: 1
Intro-found: 1
Reference: [ACSW96] <author> Alexander Aiken, Jolly Chen, Michael Stonebraker, and Allison Woodruff. Tioga-2: </author> <title> A direct-manipulation database visualization environment. </title> <booktitle> In Proc. 12th IEEE International Conference on Data Engineering, </booktitle> <pages> pages 208-217, </pages> <address> New Orleans, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: In other instances status information might be unnecessary. The code underneath these widgets would need to process data using the kinds of techniques described in Section 3. 4 2.4 Online Data Visualization Data visualization is an increasingly active research area, with some impressive prototypes under development (e.g. Tioga Datasplash <ref> [ACSW96] </ref>, DEVise [LRB + 97], Pad [PF93]). These systems are all interactive, allowing users to "pan" and "zoom" in datasets, and derive and view new visualizations quickly. An inherent challenge in architecting a data visualization system is that it must present large volumes of information efficiently.
Reference: [Ant92] <author> Gennady Antoshenkov. </author> <title> Random Sampling from Pseudo-Ranked B+ Trees. </title> <booktitle> In Proc. 18th International Conference on Very Large Data Bases, </booktitle> <pages> pages 375-382, </pages> <address> Vancouver, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: More flexible trees can be used for online processing yet more effectively. Ranked trees [Olk93] and pseudo-ranked trees <ref> [Ant92] </ref> allow more accurate "bucket depth" information to be included with the keys.
Reference: [Ant93] <author> Gennady Antoshenkov. </author> <title> Query Processing in DEC Rdb: Major Issues and Future Challenges. </title> <journal> IEEE Data Engineering Bulletin, </journal> <volume> 16(4) </volume> <pages> 42-52, </pages> <year> 1993. </year>
Reference-contexts: In fact, any level of depth d in the tree is a rough equi-depth histogram of (n + 1) d buckets. Thus a standard B+-tree can be traversed in breadth-first order to produce an iteratively refining estimate of a data set <ref> [Ant93] </ref>. Two-dimensional indexes like R-trees can be used to iteratively refine graphical or geographical datasets, and are perfectly suited for online data visualization. Compression techniques like wavelets are commonly used in online network delivery of images. <p> We are currently investigating efficient versions of such joins. 7 3.5 Competition and Multi-Threading Sometimes it can be difficult to predict the processing scheme that will produce the best behavior. Antoshenkov has proposed running multiple access methods in competition to resolve this problem in standard relational systems <ref> [Ant93, AZ96] </ref>. This approach is particularly important in online processing: one processing scheme may produce online results quickly, while another may produce final answers far more quickly than the first.
Reference: [Aok97] <author> Paul M. Aoki. </author> <title> Generalizing "Search" in Generalized Search Trees. </title> <note> Submitted for publication, </note> <month> June </month> <year> 1997. </year>
Reference-contexts: Ranked trees [Olk93] and pseudo-ranked trees [Ant92] allow more accurate "bucket depth" information to be included with the keys. Generalized Search Trees (GiSTs) allow essentially arbitrary flexibility in keys [HNP95]; Aoki has proposed extensions to the GiST framework <ref> [Aok97] </ref> to encompass statistical (non-restrictive) keys and arbitrary traversal patterns. 3.4 Plane-Sweep Joins Haas has recently noted that nested loops join is not necessarily appropriate for online estimation; this is because one can tighten a confidence interval only once per tuple of the outer relation [Haa97b].
Reference: [AS94] <author> Rakesh Agrawal and Ramakrishnan Srikant. </author> <title> Fast Algorithms for Mining Association Rules. </title> <booktitle> In Proc. 20th International Conference on Very Large Data Bases, </booktitle> <pages> pages 487-499, </pages> <address> Santiago, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: A particularly frustrating aspect of data mining algorithms is that they are not only slow, but also opaque; they are "black boxes" that do not allow users to tune them in significant ways without starting over. Consider, for example, the common algorithms for finding "association rules" in market-basket data <ref> [AS94] </ref>. The goal of these algorithms is to find sets of items that people tend to buy together in a single trip to a store (e.g., rules of the form "people who buy diapers also tend to buy beer").
Reference: [ASY97] <author> Ron Avnur, Jonathan Spier, and Shu-Yuen Didi Yao. </author> <title> GOLD (GUI OnLine Data) Mining for Association Rules. Class project, </title> <editor> CS286, U. C. </editor> <address> Berkeley, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Setting them too low means that the system (a) runs even more slowly, and (b) returns an overwhelming amount of information, most of which is useless. The association rules techniques can be easily "brought online", and a prototype implementation has been undertaken at Berkeley <ref> [ASY97] </ref>. While the algorithm is in its first phase producing individual items (1-itemsets) that have minimum support, it can provide running estimations of support for 1-itemsets in the same manner as an online aggregation query for COUNT. <p> To make this work in an online setting, the original algorithm and the user modification should each represent a thread of processing | it is both correct and beneficial to execute many such threads simultaneously, to encourage online feedback to user input as well as to promote progress toward completion <ref> [ASY97] </ref>. Scheduling of the different threads should be handled carefully to maximize feedback throughput.
Reference: [AZ96] <author> Gennady Antoshenkov and Mohamed Ziauddin. </author> <title> Query Processing and Optimization in Oracle Rdb. </title> <journal> VLDB Journal, </journal> <volume> 5(4) </volume> <pages> 229-237, </pages> <year> 1996. </year>
Reference-contexts: We are currently investigating efficient versions of such joins. 7 3.5 Competition and Multi-Threading Sometimes it can be difficult to predict the processing scheme that will produce the best behavior. Antoshenkov has proposed running multiple access methods in competition to resolve this problem in standard relational systems <ref> [Ant93, AZ96] </ref>. This approach is particularly important in online processing: one processing scheme may produce online results quickly, while another may produce final answers far more quickly than the first.
Reference: [BDD + 89] <author> Philip A. Bernstein, Umeshwar Dayal, David J. DeWitt, Dieter Gawlick, Jim Gray, Matthias Jarke, Bruce G. Lindsay, Peter C. Lockemann, David Maier, Erich J. Neuhold, Andreas Reuter, Lawrence A. Rowe, Hans-Jorg Schek, Joachim W. Schmidt, Michael Schrefl, and Michael Stonebraker. </author> <title> Future Directions in DBMS Research | The Laguna Beach Report. </title> <journal> ACM SIGMOD Record, </journal> <volume> 18(1) </volume> <pages> 17-26, </pages> <year> 1989. </year>
Reference-contexts: This research has some additional benefits as well: * Online processing is a natural and long-sought <ref> [BDD + 89, SSU90, SAD + 93] </ref> meeting point for research in databases and user interfaces. * The current "database dinosaurs" have no clear advantage in developing online processing sys tems.
Reference: [Fal96] <author> Christos Faloutsos. </author> <title> Searching Multimedia Databases by Content. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1996. </year>
Reference-contexts: Two-dimensional indexes like R-trees can be used to iteratively refine graphical or geographical datasets, and are perfectly suited for online data visualization. Compression techniques like wavelets are commonly used in online network delivery of images. It happens that the standard Haar wavelet encoding <ref> [Fal96] </ref> is extremely close to the traditional quad-tree [FB74], which is in turn isomorphic to the Z-ordering of Orenstein [Ore86].
Reference: [FB74] <author> R. A. Finkel and J. L. Bentley. Quad-Trees: </author> <title> A Data Structure For Retrieval On Composite Keys. </title> <journal> ACTA Informatica, </journal> <volume> 4(1) </volume> <pages> 1-9, </pages> <year> 1974. </year> <month> 9 </month>
Reference-contexts: Compression techniques like wavelets are commonly used in online network delivery of images. It happens that the standard Haar wavelet encoding [Fal96] is extremely close to the traditional quad-tree <ref> [FB74] </ref>, which is in turn isomorphic to the Z-ordering of Orenstein [Ore86].
Reference: [GBLP96] <author> Jim Gray, Adam Bosworth, Andrew Layman, and Hamid Pirahesh. </author> <title> Data Cube: A Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals. </title> <type> Technical Report MSR-TR-95-22, </type> <institution> Microsoft Research, </institution> <year> 1996. </year>
Reference-contexts: Bulletin of the IEEE Computer Society Technical Committee on Data Engineering 1 1.1 Today's OLAP? PAP The OLAP products available today provide interactive drill-down, roll-up and cube facilities <ref> [GBLP96] </ref>. Implementation techniques differ: some systems implement these facilities over relational query engines ("ROLAP"), others implement special-purpose multidimensional storage and retrieval engines ("MO-LAP"). The interfaces are indeed "online", in the sense that users see interactive performance | with each "point" or "click", information is consolidated and displayed almost instantaneously.
Reference: [Haa96] <author> P. J. Haas. </author> <title> Hoeffding Inequalities for Join-Selectivity Estimation and Online Aggregation. </title> <institution> IBM Research Report RJ 10040, IBM Almaden Research Center, </institution> <address> San Jose, CA, </address> <year> 1996. </year>
Reference-contexts: In the Online Aggregation project, we have exploited and developed results in statistics to provide estimators for common SQL aggregation functions (COUNT, SUM, AVG, STDDEV), and confidence intervals of the sort seen in Figure 1 <ref> [Haa96, Haa97a] </ref>. These kinds of estimations are obviously useful for Online Aggregation.
Reference: [Haa97a] <author> Peter J. Haas. </author> <title> Large-Sample and Deterministic Confidence Intervals for Online Aggregation. </title> <booktitle> In Proc. 9th International Conference on Scientific and Statistical Database Management, </booktitle> <address> Olympia, WA, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: In the Online Aggregation project, we have exploited and developed results in statistics to provide estimators for common SQL aggregation functions (COUNT, SUM, AVG, STDDEV), and confidence intervals of the sort seen in Figure 1 <ref> [Haa96, Haa97a] </ref>. These kinds of estimations are obviously useful for Online Aggregation.
Reference: [Haa97b] <author> Peter J. Haas. </author> <type> Personal communication. </type> <month> May </month> <year> 1997. </year>
Reference-contexts: extensions to the GiST framework [Aok97] to encompass statistical (non-restrictive) keys and arbitrary traversal patterns. 3.4 Plane-Sweep Joins Haas has recently noted that nested loops join is not necessarily appropriate for online estimation; this is because one can tighten a confidence interval only once per tuple of the outer relation <ref> [Haa97b] </ref>. As an alternative, in joint work we are considering joins which draw on ever larger combinations of tuples from the two input relations.
Reference: [HHW97] <author> Joseph M. Hellerstein, Peter J. Haas, and Helen J. Wang. </author> <title> Online Aggregation. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <address> Tucson, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: In current relational systems such queries have batch behavior, requiring a long wait for the user. In <ref> [HHW97] </ref> we detail an Online Aggregation system we are building at Berkeley, which performs relational aggregation queries in an online fashion. <p> The numbers represent the "strides" through the groups. The Index Stride access method was presented in <ref> [HHW97] </ref>. Given a B-tree index on the grouping columns, 1 on the first request for a tuple we open a scan on the leftmost edge of the index, where we find a key value k 1 .
Reference: [HNP95] <author> Joseph M. Hellerstein, Jeffrey F. Naughton, and Avi Pfeffer. </author> <title> Generalized Search Trees for Database Systems. </title> <booktitle> In Proc. 21st International Conference on Very Large Data Bases, </booktitle> <address> Zurich, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: More flexible trees can be used for online processing yet more effectively. Ranked trees [Olk93] and pseudo-ranked trees [Ant92] allow more accurate "bucket depth" information to be included with the keys. Generalized Search Trees (GiSTs) allow essentially arbitrary flexibility in keys <ref> [HNP95] </ref>; Aoki has proposed extensions to the GiST framework [Aok97] to encompass statistical (non-restrictive) keys and arbitrary traversal patterns. 3.4 Plane-Sweep Joins Haas has recently noted that nested loops join is not necessarily appropriate for online estimation; this is because one can tighten a confidence interval only once per tuple of
Reference: [LRB + 97] <author> Miron Livny, Raghu Ramakrishnan, Kevin S. Beyer, Guangshun Chen, Donko Donjerkovic, Shilpa Lawande, and Jussi Myllymaki. </author> <title> DEVise: Integrated Querying and Visualization of Large Datasets. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <address> Tucson, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: The code underneath these widgets would need to process data using the kinds of techniques described in Section 3. 4 2.4 Online Data Visualization Data visualization is an increasingly active research area, with some impressive prototypes under development (e.g. Tioga Datasplash [ACSW96], DEVise <ref> [LRB + 97] </ref>, Pad [PF93]). These systems are all interactive, allowing users to "pan" and "zoom" in datasets, and derive and view new visualizations quickly. An inherent challenge in architecting a data visualization system is that it must present large volumes of information efficiently.
Reference: [NBC + 94] <author> Chris Nyberg, Tom Barclay, Zarka Cvetanovic, Jim Gray, and David B. Lomet. AlphaSort: </author> <title> A RISC Machine Sort. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 233-242, </pages> <address> Minneapolis, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Analogies are sometimes made between these benchmarks and auto racing (e.g., the "Indy" and "Daytona" versions of sorting benchmarks <ref> [NBC + 94] </ref>). If we apply the logic of such benchmarks to automobiles, we are led to buy the fastest car we can purchase within our budget. Few of us use such logic in choosing a car.
Reference: [Olk93] <author> Frank Olken. </author> <title> Random Sampling from Databases. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <year> 1993. </year>
Reference-contexts: Olken proposed sampling access methods <ref> [Olk93] </ref>, and these are quite applicable for applications which require guarantees of randomness during online processing. In many cases more traditional access methods may be used, as long as the order of access is expected to be uncorrelated with the estimation being made. <p> More flexible trees can be used for online processing yet more effectively. Ranked trees <ref> [Olk93] </ref> and pseudo-ranked trees [Ant92] allow more accurate "bucket depth" information to be included with the keys.
Reference: [Ore86] <author> J. A. Orenstein. </author> <title> Spatial Query Processing in an Object-Oriented Database System. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <pages> pages 326-336, </pages> <address> Washington, D.C., </address> <month> May </month> <year> 1986. </year>
Reference-contexts: Compression techniques like wavelets are commonly used in online network delivery of images. It happens that the standard Haar wavelet encoding [Fal96] is extremely close to the traditional quad-tree [FB74], which is in turn isomorphic to the Z-ordering of Orenstein <ref> [Ore86] </ref>. This analogy motivates and justifies the use of multi-dimensional indexes for online delivery of data, and conversely suggests interesting directions for online indexing and search, using the wavelet estimation described above to model the eventual state of an n-dimensional search tree.
Reference: [PF93] <author> K. Perlin and D. Fox. </author> <title> Pad: An Alternative Approach to the Computer Interface. </title> <booktitle> In Proc. ACM SIGGRAPH, </booktitle> <pages> pages 57-64, </pages> <address> Anaheim, </address> <year> 1993. </year>
Reference-contexts: The code underneath these widgets would need to process data using the kinds of techniques described in Section 3. 4 2.4 Online Data Visualization Data visualization is an increasingly active research area, with some impressive prototypes under development (e.g. Tioga Datasplash [ACSW96], DEVise [LRB + 97], Pad <ref> [PF93] </ref>). These systems are all interactive, allowing users to "pan" and "zoom" in datasets, and derive and view new visualizations quickly. An inherent challenge in architecting a data visualization system is that it must present large volumes of information efficiently.
Reference: [SAD + 93] <author> Michael Stonebraker, Rakesh Agrawal, Umeshwar Dayal, Erich J. Neuhold, and Andreas Reuter. </author> <title> Database Research at the Crossroads: The Vienna Update. </title> <booktitle> In Proc. 19th International Conference on Very Large Data Bases, </booktitle> <pages> pages 688-692, </pages> <address> Dublin, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: This research has some additional benefits as well: * Online processing is a natural and long-sought <ref> [BDD + 89, SSU90, SAD + 93] </ref> meeting point for research in databases and user interfaces. * The current "database dinosaurs" have no clear advantage in developing online processing sys tems.
Reference: [SSU90] <author> Abraham Silberschatz, Michael Stonebraker, and Jeffrey D. Ullman. </author> <title> Database Systems: Achievements and Opportunities | The "Lagunita" Report. </title> <journal> ACM SIGMOD Record, </journal> <volume> 19(4) </volume> <pages> 6-22, </pages> <year> 1990. </year>
Reference-contexts: This research has some additional benefits as well: * Online processing is a natural and long-sought <ref> [BDD + 89, SSU90, SAD + 93] </ref> meeting point for research in databases and user interfaces. * The current "database dinosaurs" have no clear advantage in developing online processing sys tems.
Reference: [ZDN97] <author> Yihong Zhao, Prasad Deshpande, and Jeffrey F. Naughton. </author> <title> An Array-Based Algorithm for Simultaneous Multidimensional Aggregates. </title> <booktitle> In Proc. ACM-SIGMOD International Conference on Management of Data, </booktitle> <address> Tucson, </address> <month> May </month> <year> 1997. </year> <month> 10 </month>
Reference-contexts: The secret to their success is precomputation | in most OLAP systems, the answer to each point and click is computed long before the user even starts the application. In fact many OLAP systems do that computation relatively inefficiently <ref> [ZDN97] </ref>, but since the processing is done in advance the end-user does not see the performance problem. Observe that today's OLAP systems do essentially no processing | online or otherwise | while the end-user is running them. They are better termed Precomputed Analytic Processing (PAP) systems.
References-found: 24

