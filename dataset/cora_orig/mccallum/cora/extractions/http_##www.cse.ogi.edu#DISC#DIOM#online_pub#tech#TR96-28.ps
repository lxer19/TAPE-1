URL: http://www.cse.ogi.edu/DISC/DIOM/online_pub/tech/TR96-28.ps
Refering-URL: http://www.cse.ogi.edu/DISC/DIOM/publication.html
Root-URL: http://www.cse.ogi.edu
Email: email: fyoosh,lingliug@cs.ualberta.ca  email: calton@cse.ogi.edu  
Title: Towards Interoperable Heterogeneous Information Systems: An Experiment Using the DIOM Approach  
Author: Yooshin Lee and Ling Liu Calton Pu 
Note: The first two authors are partially supported by NSERC grant OGP-0172859 and NSERC grant STR-0181014. This author is partially supported by DARPA grant N00014-94-1-0845, NSF grant IRI-9510112, grants from the Hewlett-Packard Company and Tektronix.  
Address: GSB 615, Edmonton, Alberta T6G 2H1 Canada  P.O.Box 91000 Portland, Oregon 97291-1000 USA  
Affiliation: Department of Computing Science University of Alberta  Dept. of Computer Science and Engineering Oregon Graduate Institute  
Abstract: The Distributed Interoperable Object Model (DIOM) [19, 17] introduced the approach that explicitly defines the interfaces of an information consumer and an information producer, matching them dynamically to achieve interoperability in heterogeneous information systems with growing number of autonomous data sources as components. In this paper, we describe an experimental implementation of a cooperative information system, built on web browser interfaces, the Oracle database manager, and CGI scripts. This initial implementation demonstrates the practical feasibility of building DIOM-based customizable and scalable solutions for interconnecting information consumers with information producers. Highlights of this simple system include: (1) a demonstration of the DIOM query mediation component [17] with interactive query tracing, (2) a generic wrapper construction library, and (3) a demo accessible over the Internet. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahmed, P. Smedt, W. Du, W. Kent, M. Ketabchi, W. Litwin, , and A. Raffi. </author> <title> The Pegasus heterogeneous multidatabase system. </title> <journal> IEEE Computer Magazine, </journal> <volume> 24(12) </volume> <pages> 19-27, </pages> <month> December </month> <year> 1991. </year>
Reference-contexts: communication such as IBM's DSOM and Microsoft's OLE. 5 Java and JDBC are trademarks of Sun Microsystems Inc, http://splash.javasoft.com/jdbc/ 6 URL stands for Uniform Resource Locator (e.g., http://www.cs.ualberta.ca/). 7 In the following discussion this left frame will be omitted in the screen figures for presentation convenience. 15 A conventional approach <ref> [1] </ref> for multidatabase or federated database management relies on building a single global schema to encompass the differences among the multiple local database schemas. Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy and scalability.
Reference: [2] <author> Y. Arens and et al. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2(2) </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: Other representative examples include the Context Exchange project at MIT [14, 27], which uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source, and the SIMS project <ref> [3, 2] </ref> which adapts the LOOM knowledge representation system as the data model and uses the LOOM query language to implement the agent-based integration. In addition, a number of proposals have competed as the basic enabling technologies for implementing interop-erable objects in distributed and dynamic object computing environments.
Reference: [3] <author> Y. Arens and C. Knoblock. </author> <title> Planning and reformulating queries for semantically-modeled multidatabase systems. </title> <booktitle> In Proceedings of the first International Conference on Knowledge and Information Management, </booktitle> <year> 1992. </year>
Reference-contexts: Other representative examples include the Context Exchange project at MIT [14, 27], which uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source, and the SIMS project <ref> [3, 2] </ref> which adapts the LOOM knowledge representation system as the data model and uses the LOOM query language to implement the agent-based integration. In addition, a number of proposals have competed as the basic enabling technologies for implementing interop-erable objects in distributed and dynamic object computing environments.
Reference: [4] <author> K. Bath. </author> <note> What is Oraperl? http://www.bf.rmit.edu.au/ orafaq/perlish.html#oraperl, </note> <year> 1995. </year>
Reference-contexts: This subtyping based classification allows much of the wrapper code from previous implementations to be reused. Our first relational DBMS wrapper is implemented for the RDBMS Oracle7 using Oraperl 4 <ref> [4] </ref> gateway. The wrapper data manipulation commands are directly translated into Oracle commands using the ora do Oraperl function call. Unlike structured repositories, semi-structured information repositories typically do not have any local data processing facilities, so the wrapper must perform the data processing. <p> All the components and its interface functions are created using HTML [9] and Perl CGI-scripts [24, 29]. Linking to the underlying data sources and metadata library databases is implemented with Oraperl <ref> [4] </ref>, since Diorama uses the Oracle7 as the back-end service repository support. Clients may be implemented using any GUI-tool such as Web Applications (HTML-based), TCL/TK applications, Smalltalk applications etc.
Reference: [5] <author> N. Borenstein. </author> <title> RFC 1521: MIME (multipurpose internet mail extensions) part one: Mechanisms for specifying and describing the format of internet message bodies. </title> <address> ftp://ds.internic.net/rfc/rfc1521.txt, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: For this example, the requested service is a select, the class to query is Job, the attributes to return are all (`*') from Job, and the query condition is company name=``IBM''. 4.4.2 Wrapper Result Format The wrapper returns the result from wrapper service calls as a MIME 3 multi-part object <ref> [5, 23] </ref> which is already a part of the HTTP 1.0 specifications.
Reference: [6] <author> C. Bowman, P. Danzig, D. Hardy, U. Manber, and M. F. Schwartz. </author> <title> The Harvest information discovery and access system. </title> <booktitle> In Proceedings of the Second International World Wide Web Conference, </booktitle> <pages> pages 763-771, </pages> <address> Chicago, Illinois, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: sorts of documents, but producing wrappers to these types of data will require the most effort. 4.5 Wrappers to Semi-Structured Information Sources: An Example The complexity and the large scale of the world wide web (WWW) has fueled the development of search tools such as Yahoo, the Harvest Web Broker <ref> [6] </ref>, and Lycos [22]. These tools are sufficient for simple keyword-based searching but the results contain simple information and are represented as HTML documents which impedes further processing.
Reference: [7] <author> C. M. Bowman, P. B. Danzig, D. R. Hardy, U. Manber, M. F. Schwartz, , and D. P. Wessels. Harvest: </author> <title> A scalable, customizable discovery and access system. </title> <type> Technical Report CU-CS-732-94, </type> <institution> Department of Computer Science, University of Colorado, </institution> <month> March </month> <year> 1995. </year> <note> http://newbruno.cs.colorado.edu/harvest/papers.html. </note>
Reference-contexts: Highlights of the current implementation include: * User interface supporting query tracing and interactive distributed query processing. * a generic HTML wrapper library, currently with three instances: Yahoo directory wrapper, Usenet news wrapper, and Harvest <ref> [7] </ref> information wrapper. 16 We have made significant progress towards the second phase of the Diorama implementation, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in [17], and the producers' profile organization; (2) the realization of the query decomposition algorithm, described
Reference: [8] <author> M. Carey, L. Haas, and P. S. et al. </author> <title> Towards heterogeneous multimedia information systems: the Garlic approach. </title> <type> In Technical Report, </type> <institution> IBM Almaden Research Center, </institution> <year> 1994. </year>
Reference-contexts: The intelligent integration of information (I 3 ) reference framework [30, 31] can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases. Examples include the Garlic project at IBM Almaden Research Center <ref> [8] </ref>, which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, the TSIMMIS [12] at Stanford, which implements the mediators-based information integration architecture through a simple object exchange model.
Reference: [9] <author> J. December and M. Ginsburg. </author> <title> HTML & CGI Unleashed. </title> <publisher> Sams.Net Publishing, </publisher> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: All the components and its interface functions are created using HTML <ref> [9] </ref> and Perl CGI-scripts [24, 29]. Linking to the underlying data sources and metadata library databases is implemented with Oraperl [4], since Diorama uses the Oracle7 as the back-end service repository support. Clients may be implemented using any GUI-tool such as Web Applications (HTML-based), TCL/TK applications, Smalltalk applications etc.
Reference: [10] <author> R. C. et al. </author> <title> The Object Database Standard: ODMG-93 (Release 1.1). </title> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy and scalability. Component schemas cannot evolve without the consent from the integrated schema. Recent activities in the OMG [26] and the ODMG standard <ref> [10] </ref>, which extends the OMG object model to the database interoperability, are the important milestones for applying object-orientation to distributed object management. The intelligent integration of information (I 3 ) reference framework [30, 31] can be seen as a generic system architecture for information integration.
Reference: [11] <author> R. Fielding and H. Frystyk. </author> <note> Hypertext transfer protocol - HTTP/1.0. http://www.w3.org/pub/WWW/Protocols/HTTP1.0/draft-ietf-http-spec.html, february 1996. </note>
Reference-contexts: Clients may be implemented using any GUI-tool such as Web Applications (HTML-based), TCL/TK applications, Smalltalk applications etc. Components of the prototype system interact via HTTP <ref> [11] </ref> protocol, a popular protocol that provides good flexibility in types of data to be sent or received (both text and binary).
Reference: [12] <author> H. Garcia-Molina and et al. </author> <title> The TSIMMIS approach to mediation: data models and languages (extended abstract). </title> <type> In Technical Report, </type> <institution> Stanford University, </institution> <year> 1994. </year>
Reference-contexts: Several projects are currently undergoing to adapt and extend this architecture with different emphases. Examples include the Garlic project at IBM Almaden Research Center [8], which targets at developing a system and tools for the management of large quantities of heterogeneous multimedia information, the TSIMMIS <ref> [12] </ref> at Stanford, which implements the mediators-based information integration architecture through a simple object exchange model.
Reference: [13] <institution> Georgia Tech Research Corporation. GVU's 4th WWW user survey home page. </institution> <address> http://www.cc.gatech.edu/gvu/user surveys/survey-10-1995/, </address> <year> 1995. </year>
Reference-contexts: Users are spending approximately 79% of online time browsing <ref> [13] </ref>, therefore it is estimated that much bandwidth today is wasted due to inefficient searching and ineffective assembly of result data.
Reference: [14] <author> C. Goh, S. Madnick, and M. Siegel. </author> <title> Context interchange: overcoming the challenges of large-scale interoper--able database systems in a dynamic environment. </title> <booktitle> In Proceedings of International Conference on Information and Knowledge Management, </booktitle> <pages> pages 337-346, </pages> <year> 1994. </year>
Reference-contexts: Other representative examples include the Context Exchange project at MIT <ref> [14, 27] </ref>, which uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source, and the SIMS project [3, 2] which adapts the LOOM knowledge representation system as the data model and uses the LOOM query language to implement the agent-based integration.
Reference: [15] <author> R. Hull and R. King. </author> <title> Reference architecture for the intelligent integration of information (version 1.0.1). </title> <address> http://isse.gmu.edu/I3 Arch/index.html, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: Figure 1 presents a sketch of the Diorama architecture, which conforms to the I 3 mediator-based reference framework <ref> [15] </ref>. Mediators in DIOM are application-specific. Each mediator consists of a consumer's domain model and many information producer's source models and are described in terms of the DIOM interface definition language (DIOM IDL) [19].
Reference: [16] <author> Y. Lee. </author> <title> Rainbow: A prototype of the diom interoperable system. MSc. </title> <type> Thesis, </type> <institution> Department of Computer Science, University of Alberta, </institution> <note> A demo version of the prototype is available at http://ugweb.cs.ualberta.ca/ diom, </note> <month> July, </month> <year> 1996. </year>
Reference-contexts: Each different repository type needs a wrapper to connect with the system and ultimately to the consumers. To facilitate the incorporation of new information sources, each Diorama wrapper is specified with a suite of generic functions <ref> [16] </ref> which calls underlying local functions specific to the corresponding source repository. New sources are able to participate in Diorama by implementing these underlying local functions. <p> In addition to directly submit a simple query, we also provide the Simple Query Tracing option <ref> [16] </ref>. <p> Figure 10 an example subquery result returned from repository DR3. Once all the subqueries are processed, the results are returned from the wrappers and assembled according to the original IQL query expression through semantic attachment operations <ref> [17, 16] </ref>. Figure 11 shows a result of the initial query from Figure 7 in tabular format. 4.4 Generic Wrapper Design Wrappers are software modules that are responsible for connecting individual information sources to external users. <p> Each service request maps directly to one of the generic functions in the generic function suite (See <ref> [16] </ref> for a detailed description). <p> Eventually, these function creation steps can be automated using a well designed interface for entering the URL description and a description of how the HTML record is formatted. 14 4.6 Current Implementation Status The first demonstration package of Diorama <ref> [16] </ref> is implemented as a World Wide Web (WWW) application. All the components and its interface functions are created using HTML [9] and Perl CGI-scripts [24, 29]. <p> Due to the space limitation, we omit the further discussion of the list of Diorama facilities. Readers who are interested in more details may refer to <ref> [16] </ref> or visit us at http://ugweb.cs.ualberta.ca/~diom. 5 Related Work Several approaches have been proposed for information gathering from multiple heterogeneous information sources, including multidatabases and federated databases, intelligent integration of information architectures [30], and standard interfaces for software integration and communication such as IBM's DSOM and Microsoft's OLE. 5 Java and
Reference: [17] <author> L. Liu and C. Pu. </author> <title> Customizable information gathering across heterogeneous information sources. </title> <type> Technical report, </type> <institution> Department of Computer Science, University of Alberta, </institution> <month> Dec. </month> <year> 1995. </year>
Reference-contexts: In this paper we report our experience in building an experimental cooperative information system, called Diorama, capable of providing transparent and customizable information access across multiple heterogeneous and autonomous information sources. The theoretical model and architecture of Diorama are based on previous work on DIOM <ref> [17, 19, 21] </ref>, which features the support of the USECA properties throughout the development of distributed query services. 1 Diorama demonstrates the systematic design and the flexible cooperation of the DIOM distributed query mediation services, and the practical applicability of the DIOM approach [19, 21] towards an intelligent and scalable solution <p> To process requests, the DSM communicates with an Official Metadata Catalog (OMC) server, which handles the storage of the information source repository and interface repository <ref> [17] </ref>). For example, when a DSM needs to load mediator information to process a consumer query, it instantiates the mediator by retrieving the mediator definition from an OMC. Each different repository type needs a wrapper to connect with the system and ultimately to the consumers. <p> An expert query may run over a set of interfaces defined through a mediator. The resultant object is represented in terms of an IDL specification derived from the query specification itself. The DIOM-IQL form shown in Figure 7 closely follows the DIOM-IQL syntax description <ref> [17] </ref>. The Mediator field allows the user to specify which grouping of interfaces to use and can be left open to allow the system to generate the corresponding IDL interface. <p> Figure 10 an example subquery result returned from repository DR3. Once all the subqueries are processed, the results are returned from the wrappers and assembled according to the original IQL query expression through semantic attachment operations <ref> [17, 16] </ref>. Figure 11 shows a result of the initial query from Figure 7 in tabular format. 4.4 Generic Wrapper Design Wrappers are software modules that are responsible for connecting individual information sources to external users. <p> wrapper library, currently with three instances: Yahoo directory wrapper, Usenet news wrapper, and Harvest [7] information wrapper. 16 We have made significant progress towards the second phase of the Diorama implementation, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in <ref> [17] </ref>, and the producers' profile organization; (2) the realization of the query decomposition algorithm, described in [21] and query assembly operations based on consumer's profile, producers' registration data, and domain-specific ontology or thesaurus; and (3) the algorithms for generating optimized parallel access plans.
Reference: [18] <author> L. Liu and C. Pu. </author> <title> The DIOM approach to large-scale interoperable information systems. </title> <type> Technical report, </type> <institution> TR95-16, Department of Computing Science, University of Alberta, Edmonton, Alberta, </institution> <month> March </month> <year> 1995. </year>
Reference-contexts: The IQL preprocessor will first check with the DIOM interface repository where all the interface definitions are stored. If the IDL specification of the target interfaces given in the FROM clause does not exist, an appropriate IDL specification will be generated <ref> [18] </ref>.
Reference: [19] <author> L. Liu and C. Pu. </author> <title> The distributed interoperable object model and its application to large-scale interop-erable database systems. </title> <booktitle> In ACM International Conference on Information and Knowledge Management (CIKM'95), </booktitle> <address> Baltimore, Maryland, USA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: In this paper we report our experience in building an experimental cooperative information system, called Diorama, capable of providing transparent and customizable information access across multiple heterogeneous and autonomous information sources. The theoretical model and architecture of Diorama are based on previous work on DIOM <ref> [17, 19, 21] </ref>, which features the support of the USECA properties throughout the development of distributed query services. 1 Diorama demonstrates the systematic design and the flexible cooperation of the DIOM distributed query mediation services, and the practical applicability of the DIOM approach [19, 21] towards an intelligent and scalable solution <p> are based on previous work on DIOM [17, 19, 21], which features the support of the USECA properties throughout the development of distributed query services. 1 Diorama demonstrates the systematic design and the flexible cooperation of the DIOM distributed query mediation services, and the practical applicability of the DIOM approach <ref> [19, 21] </ref> towards an intelligent and scalable solution for interconnecting information consumers with information producers. The main contribution of this paper is the practical demonstration of the DIOM information mediation methodology [21] through the design and implementation of an experimental query mediation toolkit in Diorama. <p> The USECA properties here refer to Uniform access to heterogeneous information sources, Scalability to the growing number of information sources, Evolution and Composability of software and information sources, and Autonomy of participants, both information consumers and information producers. 1 2 DIOM System Architecture The DIOM system architecture, first introduced in <ref> [19] </ref>, is a two-tier architecture offering services at both the mediator level and the wrapper level. Figure 1 presents a sketch of the Diorama architecture, which conforms to the I 3 mediator-based reference framework [15]. Mediators in DIOM are application-specific. <p> Mediators in DIOM are application-specific. Each mediator consists of a consumer's domain model and many information producer's source models and are described in terms of the DIOM interface definition language (DIOM IDL) <ref> [19] </ref>. The consumer's domain model specifies the querying interests of the consumer and the preferred query result representation. The producer's source models describe the information sources in terms of DIOM internal object representation generated by the DIOM interface manager. <p> DIOM can be seen as a glue that spans and integrates these interface models at a higher level. 6 Conclusion and Future Work We have described an experimental implementation of Diorama, a cooperative information system based on the DIOM approach <ref> [19] </ref> to support interoperability in internet environments with heterogeneous and autonomous components. Diorama is constructed using web interfaces, Oracle, and CGI scripts. A demo is accessible through Web browsers on the Internet (see Section 4.6).
Reference: [20] <author> L. Liu, C. Pu, R. Barga, and T. Zhou. </author> <title> Differential evaluation of continual queries. </title> <booktitle> In IEEE Proceedings of the 16th International Conference on Distributed Computing Systems, </booktitle> <address> Hong Kong, </address> <month> May 27-30 </month> <year> 1996. </year>
Reference-contexts: Expert queries can also be installed and re-issused periodically or fired later by some pre-defined triggers <ref> [20] </ref>. An expert query may run over a set of interfaces defined through a mediator. The resultant object is represented in terms of an IDL specification derived from the query specification itself. The DIOM-IQL form shown in Figure 7 closely follows the DIOM-IQL syntax description [17].
Reference: [21] <author> L. Liu, C. Pu, and Y. Lee. </author> <title> An adaptive approach to query mediation across heterogeneous databases. </title> <booktitle> In Proceedings of the International Conference on Coopertive Information Systems, </booktitle> <address> Brussels, </address> <month> June 19-21 </month> <year> 1996. </year>
Reference-contexts: In this paper we report our experience in building an experimental cooperative information system, called Diorama, capable of providing transparent and customizable information access across multiple heterogeneous and autonomous information sources. The theoretical model and architecture of Diorama are based on previous work on DIOM <ref> [17, 19, 21] </ref>, which features the support of the USECA properties throughout the development of distributed query services. 1 Diorama demonstrates the systematic design and the flexible cooperation of the DIOM distributed query mediation services, and the practical applicability of the DIOM approach [19, 21] towards an intelligent and scalable solution <p> are based on previous work on DIOM [17, 19, 21], which features the support of the USECA properties throughout the development of distributed query services. 1 Diorama demonstrates the systematic design and the flexible cooperation of the DIOM distributed query mediation services, and the practical applicability of the DIOM approach <ref> [19, 21] </ref> towards an intelligent and scalable solution for interconnecting information consumers with information producers. The main contribution of this paper is the practical demonstration of the DIOM information mediation methodology [21] through the design and implementation of an experimental query mediation toolkit in Diorama. <p> The main contribution of this paper is the practical demonstration of the DIOM information mediation methodology <ref> [21] </ref> through the design and implementation of an experimental query mediation toolkit in Diorama. We describe Diorama by a walk-through example query to illustrate its ability to automate the linking of information consumers (users searching for information) with information producers (hosts providing information). <p> What is required is a more efficient and scalable system that interconnect a consumer to all available job repositories and make querying easier over these heterogeneous repositories. Queries to multiple information sources are expressed in the DIOM interface query language (DIOM IQL) <ref> [21] </ref>, an object-oriented extension of SQL. IQL queries use the naming conventions and terminology defined in the information consumer's domain model. There is no need for the query writers to be aware of the many different naming conventions and terminology used in the underlying information sources. <p> wrapper. 16 We have made significant progress towards the second phase of the Diorama implementation, which will focus on three main aspects: (1) the creation of consumer's profile, the metadata catalog management, described in [17], and the producers' profile organization; (2) the realization of the query decomposition algorithm, described in <ref> [21] </ref> and query assembly operations based on consumer's profile, producers' registration data, and domain-specific ontology or thesaurus; and (3) the algorithms for generating optimized parallel access plans. We are also interested in developing generic wrapper functions that can be used to generate wrapper instances for various types of data repositories.
Reference: [22] <author> M. L. Mauldin and J. R. R. Leavitt. </author> <title> Web agent related research at the center for machine translation. Center for Machine Translation, </title> <institution> Carnegie Mellon University, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: but producing wrappers to these types of data will require the most effort. 4.5 Wrappers to Semi-Structured Information Sources: An Example The complexity and the large scale of the world wide web (WWW) has fueled the development of search tools such as Yahoo, the Harvest Web Broker [6], and Lycos <ref> [22] </ref>. These tools are sufficient for simple keyword-based searching but the results contain simple information and are represented as HTML documents which impedes further processing. There is a need for tools which can assist consumers in the merging, the combining, and the sorting of retrieved results from multiple sources.
Reference: [23] <author> K. Moore. </author> <title> RFC 1522: MIME (multipurpose internet mail extensions) part two: Message header extensions for non-ascii text. </title> <address> ftp://ds.internic.net/rfc/rfc1522.txt, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: For this example, the requested service is a select, the class to query is Job, the attributes to return are all (`*') from Job, and the query condition is company name=``IBM''. 4.4.2 Wrapper Result Format The wrapper returns the result from wrapper service calls as a MIME 3 multi-part object <ref> [5, 23] </ref> which is already a part of the HTTP 1.0 specifications.
Reference: [24] <author> NCSA HTTPd Development Team. </author> <title> The common gateway interface. </title> <address> http://hoohoo.ncsa.uiuc.edu/cgi/overview.html. </address>
Reference-contexts: All the components and its interface functions are created using HTML [9] and Perl CGI-scripts <ref> [24, 29] </ref>. Linking to the underlying data sources and metadata library databases is implemented with Oraperl [4], since Diorama uses the Oracle7 as the back-end service repository support. Clients may be implemented using any GUI-tool such as Web Applications (HTML-based), TCL/TK applications, Smalltalk applications etc.
Reference: [25] <institution> Netscape Communications Corp. </institution> <note> Netscape homepage. http://home.netscape.com/. </note>
Reference-contexts: Section 4.4 will provide a further discussion. 5 4.2 User Interface This section describes the design of the HTML-based Diorama user interface accessible by World Wide Web clients such as Netscape <ref> [25] </ref>. <p> The initial main menu page is shown in Figure 12. It is broken up into three main sections. The first section is the menu options at the top of the screen which are Netscape program functions (See <ref> [25] </ref> for Netscape details). The second section is the larger frame to the right of the screen which offers all major Diorama features: the Producer Metadata Facilities, the Consumer Metadata Facilities, and the Query Facilities.
Reference: [26] <author> OMG. </author> <title> The Common Object Request Broker: Architecture and specification. Object Management Group, Object Request Broker Task Force, </title> <year> 1993. </year>
Reference-contexts: Although the enforcement of a single global schema through data integration yields full transparency for uniform access, component databases have much restricted autonomy and scalability. Component schemas cannot evolve without the consent from the integrated schema. Recent activities in the OMG <ref> [26] </ref> and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for applying object-orientation to distributed object management. The intelligent integration of information (I 3 ) reference framework [30, 31] can be seen as a generic system architecture for information integration. <p> In addition, a number of proposals have competed as the basic enabling technologies for implementing interop-erable objects in distributed and dynamic object computing environments. Examples include Microsoft's Object Linking and Embedding (OLE), IBM's System Object Model (SOM) and its distributed version (DSOM), OMG's Common Object Request Broker Architecture (CORBA) <ref> [26] </ref>. Many of these are available as deployed software packages. Although these proposals are clearly practical and important, they focus primarily on the software interface problem, not the USECA properties in integration and access of multiple heterogeneous information sources.
Reference: [27] <author> M. Siegel and S. Madnick. </author> <title> Context interchange: sharing the meaning of data. </title> <booktitle> In ACM SIGMOD RECORD on Management of Data, </booktitle> <pages> pages 77-78, 20, </pages> <month> 4 </month> <year> (1991). </year>
Reference-contexts: Other representative examples include the Context Exchange project at MIT <ref> [14, 27] </ref>, which uses context knowledge in a context mediator to explicitly define the meaning of information provided by a source, and the SIMS project [3, 2] which adapts the LOOM knowledge representation system as the data model and uses the LOOM query language to implement the agent-based integration.
Reference: [28] <author> Sun Microsystems, Inc. </author> <title> The JDBC(tm) database access API. </title> <note> http://splash.javasoft.com/jdbc/, 1996. </note>
Reference-contexts: The invocation commands to a wrapper are embedded within the HTTP call and the result is returned as a MIME object. At end of the first phase of the Diorama prototype development, Sun Microsystems announced the release of the Java JDBC 5 <ref> [28] </ref> database access API. The continuous effort for Diorama wrapper development will be using Java programming language. We expect that utilizing Java and JDBC will allow single wrapper implementations to be used for all underlying supported repositories.
Reference: [29] <author> L. Wall and R. L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly and Associates, </publisher> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: All the components and its interface functions are created using HTML [9] and Perl CGI-scripts <ref> [24, 29] </ref>. Linking to the underlying data sources and metadata library databases is implemented with Oraperl [4], since Diorama uses the Oracle7 as the back-end service repository support. Clients may be implemented using any GUI-tool such as Web Applications (HTML-based), TCL/TK applications, Smalltalk applications etc.
Reference: [30] <author> G. Wiederhold. </author> <title> Mediators in the architecture of future information systems. </title> <journal> IEEE Computer Magazine, </journal> <month> March </month> <year> 1992. </year>
Reference-contexts: Readers who are interested in more details may refer to [16] or visit us at http://ugweb.cs.ualberta.ca/~diom. 5 Related Work Several approaches have been proposed for information gathering from multiple heterogeneous information sources, including multidatabases and federated databases, intelligent integration of information architectures <ref> [30] </ref>, and standard interfaces for software integration and communication such as IBM's DSOM and Microsoft's OLE. 5 Java and JDBC are trademarks of Sun Microsystems Inc, http://splash.javasoft.com/jdbc/ 6 URL stands for Uniform Resource Locator (e.g., http://www.cs.ualberta.ca/). 7 In the following discussion this left frame will be omitted in the screen figures <p> Recent activities in the OMG [26] and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for applying object-orientation to distributed object management. The intelligent integration of information (I 3 ) reference framework <ref> [30, 31] </ref> can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases.
Reference: [31] <author> G. Wiederhold. </author> <title> I 3 glossary. </title> <type> Draft 7, </type> <month> March 16 </month> <year> 1995. </year>
Reference-contexts: Recent activities in the OMG [26] and the ODMG standard [10], which extends the OMG object model to the database interoperability, are the important milestones for applying object-orientation to distributed object management. The intelligent integration of information (I 3 ) reference framework <ref> [30, 31] </ref> can be seen as a generic system architecture for information integration. Several projects are currently undergoing to adapt and extend this architecture with different emphases.
Reference: [32] <author> R. W. Wiggins. </author> <title> Growth of the internet: An overview of a complicated subject. </title> <note> http://www.msu.edu//staff/rww/netgrow.html, 1995. </note>
Reference-contexts: 1 Introduction The explosion of networking technology has led to the ubiquitous Internet and the large-scale accessibility of diverse information sources. Although there is much debate on the accuracy of Internet measurements, a study <ref> [32] </ref> done in 1995 conservatively estimates that there are ten million hosts and twenty million users on the Internet with numbers doubling roughly every year.
References-found: 32

