URL: ftp://ftp.cs.columbia.edu/reports/reports-1995/cucs-002-95.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1995.html
Root-URL: http://www.cs.columbia.edu
Email: issy@ee.technion.ac.il  kaiser@cs.columbia.edu  
Title: Integrating Groupware Activities into Workflow Management Systems  
Author: Israel Z. Ben-Shaul Gail E. Kaiser 
Address: City, Haifa 32000 israel  New York, NY 10027 united states  
Affiliation: Department of Electrical Engineering Technion-Israel Institute of Technology Technion  Department of Computer Science Columbia University  
Abstract: Computer supported cooperative work (CSCW) has been recognized as a crucial enabling technology for multi-user computer-based systems, particularly in cases where synchronous human-human interaction is required between geographically dispersed users. Work-flow is an emerging technology that supports complex business processes in modern corporations by allowing to explicitly define the process, and by supporting its execution in a workflow management system (WFMS). Since workflow inherently involves humans carrying out parts of the process, it is only natural to explore how to synergize these two technologies. We analyze the relationships between groupware and work-flow management, present our general approach to integrating synchronous groupware tools into a WFMS, and conclude with an example process that was implemented in the Oz WFMS and integrated such tools. Our main contribution lies in the integration and synchronization of individual groupware activities into modeled workflow processes, as opposed to being a built-in part of the workflow WFMS. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Naser S. Barghouti and Gail E. Kaiser. </author> <title> Concurrency control in advanced database applications. </title> <journal> ACM Computing Surveys, </journal> <volume> 23(3) </volume> <pages> 269-317, </pages> <month> September </month> <year> 1991. </year>
Reference: [2] <author> Israel Ben-Shaul and Gail E. Kaiser. </author> <title> A Paradigm for Decentralized Process Modeling. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1995. </year>
Reference-contexts: introduction. 4.1. Oz Overview Oz <ref> [2] </ref> is a multi-site collaborative WFMS that supports interoperability among heterogeneous and autonomous processes. <p> Interactions among sites utilize local client-remote server and server-to-server connectivity facil ities provided by the system (local client-local server connections assume a shared network file system, but need not reside on the same host). Treaties, Summits and interconnectivity support are discussed elsewhere <ref> [2, 4, 3] </ref>; here we investigate collaboration among multiple users regardless of whether they work within the same or in different processes, or within the same local area network vs. across a wide area network. <p> to select, locate, and connect to the proper participants; set up the activation and transfer control for the execution of the external tool; and regain control after the termination of the activity, setting the proper state values and possibly invoking other single- or multi-user derived rules. "benchmark" process appears in <ref> [2] </ref>): the groupware conference rule and the personal review rule that precedes it.
Reference: [3] <author> Israel Z. Ben-Shaul and Gail E. Kaiser. </author> <title> A configuration process for a distributed software development environment. </title> <booktitle> In 2nd International Workshop on Configurable Distributed Systems, </booktitle> <pages> pages 123-134, </pages> <address> Pitts-burgh PA, </address> <month> March </month> <year> 1994. </year>
Reference-contexts: Interactions among sites utilize local client-remote server and server-to-server connectivity facil ities provided by the system (local client-local server connections assume a shared network file system, but need not reside on the same host). Treaties, Summits and interconnectivity support are discussed elsewhere <ref> [2, 4, 3] </ref>; here we investigate collaboration among multiple users regardless of whether they work within the same or in different processes, or within the same local area network vs. across a wide area network.
Reference: [4] <author> Israel Z. Ben-Shaul and Gail E. Kaiser. </author> <title> A paradigm for decentralized process modeling and its realization in the oz environment. </title> <booktitle> In 16th International Conference on Software Engineering, </booktitle> <pages> pages 179-188, </pages> <address> Sor-rento, Italy, May 1994. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference-contexts: Interactions among sites utilize local client-remote server and server-to-server connectivity facil ities provided by the system (local client-local server connections assume a shared network file system, but need not reside on the same host). Treaties, Summits and interconnectivity support are discussed elsewhere <ref> [2, 4, 3] </ref>; here we investigate collaboration among multiple users regardless of whether they work within the same or in different processes, or within the same local area network vs. across a wide area network.
Reference: [5] <author> XSoft Marketing Communications. Inconcert: </author> <title> Workflow software from xsoft, </title> <month> October </month> <year> 1995. </year> <note> http://www.xerox.com/XSoft/DataSheets/InConcert.html. </note>
Reference: [6] <author> Prasun Dewan and John Riedl. </author> <title> Toward computer-supported concurrent software engineering. </title> <journal> Computer, </journal> <volume> 26(1) </volume> <pages> 17-36, </pages> <month> January </month> <year> 1993. </year>
Reference: [7] <author> Michael E. Fagan. </author> <title> Advances in software inspections. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> SE-12(7):744-751, </volume> <month> July </month> <year> 1986. </year>
Reference: [8] <author> Christer Fernstrom. </author> <title> PROCESS WEAVER: Adding process support to UNIX. </title> <booktitle> In 2nd International Conference on the Software Process: Continuous Software Process Improvement, </booktitle> <pages> pages 12-26, </pages> <address> Berlin, Germany, February 1993. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [9] <author> Rodrigo F. Flores. </author> <title> The value of a methodology for workflow, </title> <note> 1995. http://www.actiontech.com/market/papers/method5.html. </note>
Reference: [10] <author> Pankaj K. Garg and Mehdi Jazayeri, </author> <title> editors. </title> <booktitle> Process-Centered Software Engineering Environments. </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <address> CA, </address> <year> 1995. </year>
Reference-contexts: introduction. 4.1. Oz Overview Oz [2] is a multi-site collaborative WFMS that supports interoperability among heterogeneous and autonomous processes. Initially, it was designed to support software engineering projects (also known as process-centered software engineering environments, see <ref> [10] </ref> for a book surveying such systems), but later has been generalized to support workflow in various application domains (e.g., healthcare workflow [22]).
Reference: [11] <author> John Gintell, John Arnold, Michael Houde, Jacek Kruszelnicki, Roland McKenney, and Gerard Memmi. </author> <title> Scrutiny (TM): A collaborative inspection and review systems. </title> <editor> In Ian Sommerville and Manfred Paul, editors, </editor> <booktitle> 4th European Software Engineering Conference, number 717 in Lecture Notes in Computer Science, </booktitle> <pages> pages 344-360, </pages> <address> Garmisch-Partenkirchen, Ger-many, </address> <month> September </month> <year> 1993. </year> <note> Springer-Verlag. </note>
Reference: [12] <author> Mark A. Gisi and Gail E. Kaiser. </author> <title> Extending a tool integration language. </title> <editor> In Mark Dowson, editor, </editor> <booktitle> 1st International Conference on the Software Process: Manufacturing Complex Systems, </booktitle> <pages> pages 218-227, </pages> <address> Redondo Beach CA, October 1991. </address> <publisher> IEEE Computer Society Press. </publisher>
Reference: [13] <author> Jonathan Grudin. </author> <title> Computer supported cooperative work: History and focus. </title> <journal> Computer, </journal> <volume> 27(5), </volume> <month> May </month> <year> 1994. </year>
Reference: [14] <author> Dennis Heimbigner and Leon Osterweil. </author> <title> An argument for the elimination of roles. In Carlo Ghezzi, editor, </title> <booktitle> 9th International Software Process Workshop, </booktitle> <address> Airlie VA, October 1994. </address> <publisher> IEEE Computer Society Press. In press. </publisher>
Reference: [15] <author> George T. Heineman and Gail E. Kaiser. </author> <title> An architecture for integrating concurrency control into environment frameworks. </title> <booktitle> In 17th International Conference on Software Engineering, </booktitle> <address> Seattle WA, </address> <month> April </month> <year> 1995. </year> <note> In press. </note>
Reference-contexts: activity can be executed (e.g., all prerequisites are satisfied and no parameters are locked exclusively by another user) and explores opportunities to automate and/or guide the execution of this or related activities (e.g., invoking other activities to attempt to satisfy the prerequisites or negotiating according to relaxed concurrency control policies <ref> [15] </ref>), and eventually returns to the client | either with the necessary information to execute the activity or to inform the client that the activity cannot be performed at this time. A local process in Oz is defined using a rule-based language.
Reference: [16] <author> George T. Heineman, Gail E. Kaiser, Naser S. Bargh-outi, and Israel Z. Ben-Shaul. </author> <title> Rule chaining in marvel: Dynamic binding of parameters. </title> <journal> IEEE Expert, </journal> <volume> 7(6) </volume> <pages> 26-32, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: Oz allows for dynamic (or late) binding of data to activities. The actual parameters to the rule are designated either explicitly by the user, or automatically by the process engine in case of a chained-to rule (see <ref> [16] </ref>). In addition, the language binds derived parameters in a binding clause that queries the project database, usually resulting in a set of objects structurally and/or logically related to the actual parameters.
Reference: [17] <author> D. Hollinsworth. </author> <title> The workflow reference model. </title> <type> Technical Report TC00-1003, </type> <institution> Workflow Management Coalition. </institution> <note> http://www.aiai.ed.ac.uk/WfMC/. </note>
Reference: [18] <author> Van Jacobson and Steve McCanne. wb. van@ee.lbl.gov, mccanne@ee.lbl.gov, </author> <title> The development of `wb', `vat', and `sd' were supported by the Director, </title> <institution> Office of Energy Research, Scientific Computing Staff, of the U.S. Department of Energy under Contract No. DE-AC03-76SF00098. </institution>
Reference-contexts: of the boxes in Figure 1 could be realized as either a single rule, or as a set of interrelated rules 1 In an actual implementation of a similar task we used the white board public-domain tool, which enables multiple distributed users to share a virtual white-board on their screens <ref> [18] </ref>. collectively implementing the (sub)task. The edges between the boxes are represented by the matchings between effects of one rule and the condition of another rule.
Reference: [19] <author> Gail E. Kaiser, Israel Z. Ben-Shaul, George T. Heine-man, and Wilfredo Marrero. </author> <title> Process evolution for constraint-enforcing environments. </title> <type> Technical Report CUCS-047-92, </type> <institution> Columbia University Department of Computer Science, </institution> <month> March </month> <year> 1994. </year>
Reference: [20] <author> Simon M. Kaplan, William J. Tolone, Alan M. Car-roll, Douglas P. Bogia, and Celsina Bignoli. </author> <title> Supporting collaborative software development with Conver-sationBuilder. </title> <editor> In Herbert Weber, editor, </editor> <booktitle> 5th ACM SIGSOFT Symposium on Software Development Environments, </booktitle> <pages> pages 11-20, </pages> <address> Tyson's Corner VA, </address> <month> Decem-ber </month> <year> 1992. </year> <journal> Special issue of Software Engineering Notes, </journal> <volume> 17(5), </volume> <month> December </month> <year> 1992. </year>
Reference: [21] <author> Kenyon Brown Kevin Brown and Kyle Brown. </author> <title> Mastering LOTUS NOTES. </title> <address> SYBEX, San Francisco CA, </address> <year> 1995. </year>
Reference: [22] <author> Wenke Lee, Gail E. Kaiser, Paul D. Clayton, and Eric H. Sherman. OzCare: </author> <title> A workflow automation system for care plans. </title> <type> Technical Report CUCS-012-96, </type> <institution> Columbia University Department of Computer Science, </institution> <month> March </month> <year> 1996. </year> <note> Submitted for publication. </note>
Reference-contexts: Initially, it was designed to support software engineering projects (also known as process-centered software engineering environments, see [10] for a book surveying such systems), but later has been generalized to support workflow in various application domains (e.g., healthcare workflow <ref> [22] </ref>).
Reference: [23] <institution> Workflow Management Coalition Members. Work-flow management coalition reference model, </institution> <month> February </month> <year> 1995. </year> <note> http://www.aiai.ed.ac.uk/WfMC/GIF/WfMC-ref-model.GIF. </note>
Reference: [24] <author> Giuseppe Valetto and Gail E. Kaiser. </author> <title> Enveloping sophisticated tools into process-centered environments. </title> <journal> Automated Software Engineering. </journal> <note> To appear. </note>
References-found: 24

