URL: http://www.cs.umn.edu/Users/dept/users/du/papers/disksch.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/du/papers/
Root-URL: http://www.cs.umn.edu
Title: The Effect of Disk Scheduling Schemes on a Video Server for Supporting Quality MPEG Video Accesses  
Author: Horng-Juing Lee and David H.C. Du 
Keyword: VOD, Disk Scheduling, Earliest Deadline First, Admission Control Algorithm  
Address: Minneapolis, MN 55455  
Affiliation: Distributed Multimedia Research Center 1 Dept. of Computer Science University of Minnesota  
Abstract: A Video-On-Demand (VOD) server provides video delivery service to clients by supporting multiple concurrent accesses and maintaining a continuous (i.e., jitter-free) video playback. The difficulty of providing VOD with a guaranteed quality of service is primarily due to the variation in access latencies over the delivery path, from storage subsystem to network subsystem. In addition, with the bit rate variation inherited from MPEG encoding scheme, this problem becomes even severe. One technique to alleviate the problem in storage subsystem is through a disk scheduling scheme. How successfully a disk scheduling scheme deals with this variation situation is an important issue. Because of the variation over the video delivery path and the degree of aggressiveness in an admission decision, the possibility of a system over-loading situation is highly likely. How this affects the service quality (especially jitter behavior) provided by VOD servers using different disk scheduling schemes is not well known. Furthermore, in the case that users are willing to accept a preset jitter threshold in video deliveries as an acceptable quality, then, how a disk scheduling scheme responds to this relaxed constraint has not been investigated either. In this paper, we intend to answer these questions by conducting a simulation study of four basic disk scheduling schemes (First Come First Serve, SCAN, Circular SCAN and Earliest Deadline First). The result shows that each disk scheduling scheme demonstrates different behavior regarding to the number of supportable jitter-free streams, the number of jitter incidents, the number of streams affected by jitter incidents, the jitter frequency, and the jitter delay time. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M-S Chen, D. D. Kanklur, and P. S. Yu, </author> <title> "Support for Fully Interactive Playout in a Disk-Array-Based Video Server", </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <year> 1994, </year> <pages> pp 391-398. </pages>
Reference-contexts: For example, at the moment when frame B 22 is retrieved, it can be displayed at once since the depending frames P 21 and I 24 have been brought in already. This new storage order of MPEG videos has been proposed in <ref> [1] </ref>. In the paper, we assume video files are stored using the new storage order.
Reference: [2] <author> C. S. Freedman and D. J. DeWitt, </author> <title> "The SPIFFI Scalable Video-On-Demand System", </title> <booktitle> Proc. of SIGMOD, </booktitle> <year> 1995, </year> <pages> pp 352-363. </pages>
Reference-contexts: In this paper, we intend to answer these questions. Many researchers have addressed the disk scheduling issues for a VOD server <ref> [12, 5, 2] </ref>. <p> They address the issues of number of supportable streams and response time for aperiodic requests in both non-extended and extended deadline approaches. Their study assumes that a video file is encoded in a constant data rate. There is no discussion about the jitter behavior. <ref> [2] </ref> evaluates the performance of SPIFFI: a scalable VOD system. They use MPEG video in their simulation study. The frame sizes of a MPEG video are generated using an exponential distribution, thus, the bandwidth of these MPEG videos are varied.
Reference: [3] <author> G. Neufled, D. Makaroff and N. Hutchinson, </author> <title> "The Design of A Variable Bit Rate Continuous Media Server", </title> <booktitle> Proc. of 5th Intl. Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <year> 1995, </year> <pages> pp 375-378. </pages>
Reference-contexts: As a result, the time to display the retrieved data is a constant, as is the period length. This approach faces several challenges such as management and allocation of variable buffer requirement in each request and the variation of access latency caused by variable request sizes <ref> [13, 11, 3] </ref>. Another approach retains the use of a fixed request size in a retrieval process. This approach then considers a video stream access as a periodic process (still needs to iteratively retrieve a video file) but the period interval varies from request to request.
Reference: [4] <author> P.V. Rangan and H.M. Vin, </author> <title> "Designing File Systems for Digital Video and Audio", </title> <journal> Operating Systems Review, </journal> <volume> vol. 25, no. 5, </volume> <year> 1991, </year> <pages> pp 69-79. </pages>
Reference-contexts: In this paper, we intend to answer these questions. Many researchers have addressed the disk scheduling issues for a VOD server [12, 5, 2]. They attempt to find a better scheme to increase the number of supportable jitter-free playback streams. <ref> [4] </ref> describes the necessity of an admission scheme to control the number of playback streams in a VOD server in order to guarantee real-time video delivery under limited system resources. [10] describes a statistical-base admission control strategy. <p> The two buffers are used in a pipelined style, one for retrieval from the storage system, and the other for delivering to network interface. The roles of the two buffers will be exchanged in the next retrieval. We also assume the video display rate is 30 frames per second. <ref> [4, 12] </ref> defined a video retrieval as a periodic process with each request asking for a block of data in each period. The next data block has to be ready before the display of the current data block is completed. <p> An admission control algorithm of a VOD server is used to control the number of playback requests in order to maintain a quality of video delivery service <ref> [4, 10] </ref>. One of the most important service criteria is to manage the jitter incidents within a level which is acceptable by clients.
Reference: [5] <author> A.L.N. Reddy and J.C. Wyllie, </author> <title> "I/O Issues in a Multimedia System", </title> <journal> IEEE Computer, </journal> <volume> vol. 27 no. 3 1994, </volume> <pages> pp 69-74. </pages>
Reference-contexts: In this paper, we intend to answer these questions. Many researchers have addressed the disk scheduling issues for a VOD server <ref> [12, 5, 2] </ref>. <p> These g groups are processed repeatly in FCFS fashion. For requests within a group, they are served using SCAN scheme. However, it is not feasible to find the optimal number of groups for each given number of streams to be supported. schedules requests within a group using SCAN and <ref> [5] </ref> discusses disk scheduling schemes in a system existing of both periodic and aperiodic requests. They propose a disk scheduling scheme called SCAN-EDF to provide both seek optimization and earlier deadline first service. <p> For FCFS, SCAN, and C-SCAN, in most cases, FCFS supports more streams than SCAN and 10 SCAN performs better than C-SCAN. This outcome is different from the result reported in <ref> [5] </ref> when videos are encoded using a constant data bit rate scheme. They concluded that C-SCAN supports more streams than EDF.
Reference: [6] <author> O. Rose, </author> <title> "Statistical Properties of MPEG Video Traffic and their Impact on Traffic Model in ATM Systems", </title> <institution> University of Wurzburg, Institute of Computer Science, </institution> <note> Research Report 101, </note> <month> Feb. </month> <year> 1995. </year> <month> 19 </month>
Reference-contexts: A smaller number of displayable frames for a read request means a shorter deadline for the next request. Figure 2 is the distribution of the number of displayable frames in each subsequent read request for a video file titled starwars from <ref> [6] </ref>. The request size is 512KB. <p> The simulation is conducted on a SPARC 10 workstation. We describe each component of the simulation model in following sections. It includes trace data of quality MPEG-1 videos, disk specification, stream access, and delay model. Quality MPEG-1 Video The trace data of quality MPEG-1 videos are obtained from <ref> [6] </ref> 2 with the following encoding parameters. * GOP pattern: IBBPBBPBBPBB (12 frames); * Each frame consists of one slice; * Quantizer scales: 10 (I), 14 (P), 18 (B); * Encoder: UC Berkeley MPEG-1 software encoder; * Encoder input: 384 fi 288 pels with 12 bit color information; * Number of
Reference: [7] <author> C. Ruemmler and J. Wilkes, </author> <title> "An Introduction to Disk Drive Modeling", </title> <journal> IEEE Computer, </journal> <volume> vol. 27 no. 3 1994, </volume> <pages> pp 17-28. </pages>
Reference-contexts: As indicated, the variation ranges from 2.67 to 5.59 bit rate difference. For the simulation, we store each video file contiguously and next to each other. Disk Specification We utilized the detailed disk access model of HP 79560 disk reported in <ref> [7] </ref> especially for its formulation for seek time calculation. All 15 video files are stored in the disk. Table 3 lists the disk specification. A disk access consists of three phases: disk seek, disk rotation, and data transfer. The actual seek time is calculated based on the formula reported in [7]; <p> <ref> [7] </ref> especially for its formulation for seek time calculation. All 15 video files are stored in the disk. Table 3 lists the disk specification. A disk access consists of three phases: disk seek, disk rotation, and data transfer. The actual seek time is calculated based on the formula reported in [7]; the disk rotation time is determined using a uniform distribution in the range of zero to maximum rotation time.
Reference: [8] <author> H. Schwetman, </author> <title> "CSIM Users' Guide", </title> <type> MCC Technical No. </type> <institution> ACT-126-90, </institution> <year> 1990. </year>
Reference-contexts: This scheme adds real-time concern which may cause excessive disk seek overhead. 7 3 Simulation Our event-driven simulation is written in CSIM <ref> [8] </ref>. The metric of the simulation is the maximum number of jitter-free streams. The simulation is conducted on a SPARC 10 workstation. We describe each component of the simulation model in following sections. It includes trace data of quality MPEG-1 videos, disk specification, stream access, and delay model.
Reference: [9] <author> A. Silberschatz, J. Peterson, and P. Galvin, </author> <title> "Operating System Concepts, 3rd Edition", </title> <publisher> Addison-Wesley Publishing, </publisher> <year> 1991. </year>
Reference-contexts: Disk scheduling schemes proposed above are either a variation, or a hybrid of the four basic schemes: FCFS, SCAN, C-SCAN, and EDF. Therefore, we choose them as study targets. We briefly describe these four disk scheduling scheme here. For detail, readers can refer to <ref> [9] </ref>. * FCFS: The disk head servers requests by their arrival time. This scheme is easy to implement by using a queue construct and involves the least overhead among other schemes. * SCAN (called LOOK in [9]): The disk head moves back and forth over the disk surface while serving request <p> For detail, readers can refer to <ref> [9] </ref>. * FCFS: The disk head servers requests by their arrival time. This scheme is easy to implement by using a queue construct and involves the least overhead among other schemes. * SCAN (called LOOK in [9]): The disk head moves back and forth over the disk surface while serving request lying under it. The disk head changes direction after serving the last request in the current direction. This scheme reduces seek time overhead but introduces variation in response time. * C-SCAN (called C-LOOK in [9]): Unlike <p> in <ref> [9] </ref>): The disk head moves back and forth over the disk surface while serving request lying under it. The disk head changes direction after serving the last request in the current direction. This scheme reduces seek time overhead but introduces variation in response time. * C-SCAN (called C-LOOK in [9]): Unlike SCAN in which a disk head moves bidirectionally, in C-SCAN, a disk head serves requests while moving in one particular direction.
Reference: [10] <author> H.M. Vin, P. Goyal , A. Goyal, and A. Goyal, </author> <title> "A Statistical Admission Control Algorithm for Multimedia Servers", </title> <booktitle> ACM Multimedia 94, </booktitle> <year> 1994, </year> <pages> pp 33-40. </pages>
Reference-contexts: They attempt to find a better scheme to increase the number of supportable jitter-free playback streams. [4] describes the necessity of an admission scheme to control the number of playback streams in a VOD server in order to guarantee real-time video delivery under limited system resources. <ref> [10] </ref> describes a statistical-base admission control strategy. In this study, we investigate the effect (especially jitter effect) of disk scheduling schemes on a VOD server for supporting MPEG-1 video accesses. <p> An admission control algorithm of a VOD server is used to control the number of playback requests in order to maintain a quality of video delivery service <ref> [4, 10] </ref>. One of the most important service criteria is to manage the jitter incidents within a level which is acceptable by clients.
Reference: [11] <author> H.M. Vin, S. Rao, and Goyal P. Goyal, </author> <title> "Optimizing the Placement of Multimedia Objects on Disk Arrays", </title> <booktitle> Proc. of the 2nd IEEE Int'l Conf. on Multimedia Computing and Systems, </booktitle> <year> 1995, </year> <pages> pp 158-165. </pages>
Reference-contexts: The property of fixed period in the retrieval model no longer exists in MPEG videos encoded using variable bit rate. It is then necessary to redefine the retrieval model. Two possible approaches for this problem are proposed by <ref> [13, 11] </ref>. The first approach is to preserve the property of fixed period by accessing a fixed number of frames, instead of fixed data block, in each request. As a result, the time to display the retrieved data is a constant, as is the period length. <p> As a result, the time to display the retrieved data is a constant, as is the period length. This approach faces several challenges such as management and allocation of variable buffer requirement in each request and the variation of access latency caused by variable request sizes <ref> [13, 11, 3] </ref>. Another approach retains the use of a fixed request size in a retrieval process. This approach then considers a video stream access as a periodic process (still needs to iteratively retrieve a video file) but the period interval varies from request to request.
Reference: [12] <author> P.S. Yu, M.S. Chen, and D.D. Kandlur, </author> <title> "Grouped Sweeping Scheduling for DASD-based Multimedia Storage Management", </title> <journal> Multimedia Systems, </journal> <volume> vol. 1, no. 3, </volume> <year> 1993, </year> <pages> pp 99-109. </pages>
Reference-contexts: In this paper, we intend to answer these questions. Many researchers have addressed the disk scheduling issues for a VOD server <ref> [12, 5, 2] </ref>. <p> The two buffers are used in a pipelined style, one for retrieval from the storage system, and the other for delivering to network interface. The roles of the two buffers will be exchanged in the next retrieval. We also assume the video display rate is 30 frames per second. <ref> [4, 12] </ref> defined a video retrieval as a periodic process with each request asking for a block of data in each period. The next data block has to be ready before the display of the current data block is completed. <p> Therefore, the more missed-deadline delays that occur during a video retrieval session, the longer the time required to playback the video file. 2.5 Disk Scheduling Schemes Many researchers have proposed new disk scheduling schemes to increase the number of supportable jitter-free streams. <ref> [12] </ref> proposes a disk scheduling framework called Grouped 6 Sweeping Scheduling (GSS) for multimedia storage management. They compared GSS with FCFS and SCAN in terms of buffer requirement and supportable streams. GSS divides a set of n requests into g groups. These g groups are processed repeatly in FCFS fashion.
Reference: [13] <author> E. Chang and A. Zakhor, </author> <title> "Admissions Control and Data Placement for VBR Video Servers", </title> <booktitle> Proc. of 1st IEEE Conf. on Image Processing, </booktitle> <year> 1994, </year> <pages> pp 208-221. 20 </pages>
Reference-contexts: The property of fixed period in the retrieval model no longer exists in MPEG videos encoded using variable bit rate. It is then necessary to redefine the retrieval model. Two possible approaches for this problem are proposed by <ref> [13, 11] </ref>. The first approach is to preserve the property of fixed period by accessing a fixed number of frames, instead of fixed data block, in each request. As a result, the time to display the retrieved data is a constant, as is the period length. <p> As a result, the time to display the retrieved data is a constant, as is the period length. This approach faces several challenges such as management and allocation of variable buffer requirement in each request and the variation of access latency caused by variable request sizes <ref> [13, 11, 3] </ref>. Another approach retains the use of a fixed request size in a retrieval process. This approach then considers a video stream access as a periodic process (still needs to iteratively retrieve a video file) but the period interval varies from request to request.
References-found: 13

