URL: http://www.demo.cs.brandeis.edu/papers/edc98.ps
Refering-URL: http://www.demo.cs.brandeis.edu/papers/long.html
Root-URL: http://www.cs.brandeis.edu
Title: Computer Evolution of Buildable Objects for Evolutionary Design by Computers  
Author: by Pablo J. Funes and Jordan B. Pollack 
Abstract-found: 0
Intro-found: 1
Reference: <author> Angeline, P. J. and Pollack, J. B. </author> <year> (1994). </year> <title> Coevolving High-Level Representations. </title> <editor> In C. Langton, (ed.) </editor> <booktitle> Proceedings of the Third Artificial Life Meeting. </booktitle>
Reference-contexts: An improved description should bring genotype and phenotype closer, providing a better ground for evolution of objects of higher complexity. The crossover operator provides a primitive way to reuse successful parts, modules, that may spread over the population. A better representation combined with modular recombination tools <ref> (Angeline and Pollack, 1994) </ref> could allow composite block structures such as the bricklayers pattern which holds increased stress to be discovered and replicated as new basic components.
Reference: <author> Chapman, C. D., Saitou, K. and Jakiela, M. J. </author> <title> (1993) Genetic Algorithms as an Approach to Configuration and Topology Design, </title> <booktitle> in Proceedings of the 1993 Design Automation Conference, DE-Vol. </booktitle> <pages> 65-1. </pages> <booktitle> Published by the A.S.M.E., </booktitle> <address> Albuquerque, New Mexico, p. </address> <pages> 485-498. </pages>
Reference-contexts: This type of application uses genetic algorithms as a search tool to optimize a shape under clearly defined preconditions. The GA is required, for example, to simultaneously maximize the stiffness and minimize the weight of a piece subject to external loads <ref> (Chapman et al., 1993) </ref>. 2.4 Evolutionary Design Evolutionary Design, the creation of new designs by computers, using evolutionary computation methods (Bentley, 1996), is a new research area with an enormous potential.
Reference: <author> Cliff, D., Harvey, I., Husbands, P. </author> <year> (1996). </year> <title> Artificial Evolution of Visual Control Systems for Robots. From Living Eyes to Seeing Machines. </title> <editor> M. Srinivisan and S. Venkatesh (eds.), </editor> <publisher> Oxford University Press. </publisher>
Reference-contexts: recombination of available components and evaluation of functionality through physics simulation. 3 2.5 Evolutionary Robotics Work in evolutionary robotics has traditionally focused in the evolution of robot controllers to provide a given robot platform either real or simulated with a custom brain that, once downloaded, will produce an adequate behavior <ref> (Mataric and Cliff, 1996) </ref>. The process of adaptation through evolutionary search allows these artificial life forms with evolved brains to perform in the environments they inhabit. Some experiments rely on carefully designed simulations (Cliff et al., 1996), while others apply evolution directly in the real robot (Floreano and Mondada, 1994). <p> The process of adaptation through evolutionary search allows these artificial life forms with evolved brains to perform in the environments they inhabit. Some experiments rely on carefully designed simulations <ref> (Cliff et al., 1996) </ref>, while others apply evolution directly in the real robot (Floreano and Mondada, 1994). Hybrid techniques (Lund, 1995) are a mixture of the two.
Reference: <author> Cormen, T. H., Leiserson, C. E. and Rivest, R. L. </author> <year> (1989). </year> <title> Introduction to Algorithms. </title> <publisher> MIT press - McGraw Hill. </publisher>
Reference-contexts: From this strategy of modelling an algorithmic problem arises. Where nature simply distributes work dynamically through small deformations along the structure, our model needs an algorithm to determine the existence of solutions. We have not found a complete algorithm for this problem, but a greedy <ref> (Cormen, et al., 1989, p. 239) </ref> technique, not always capable of finding the solution when there is one, guarantees the stability of the structure in the numerous cases when a solution is actually found. Our model is thus conservative. <p> But in the case where only one force is present, the problem is describable as a network ow algorithm (NFA) <ref> (Cormen et al., 1989, ch. 12) </ref> and can be solved by known methods. The possibility of adapting generalized versions of network ow algorithms (Iusem and Zenios, 1995; Leighton et al., 1995) to our problem remains to be explored.
Reference: <author> Darwen, P. J. </author> <title> (1996) Co-evolutionary Learning by Automatic Modularisation with Speciation. </title> <institution> University of New South Wales, </institution> <year> 1996. </year>
Reference: <author> Floreano, D. and Mondada, F. </author> <year> (1994). </year> <title> Automatic Creation of an Autonomous Agent: Genetic Evolution of a Neural Network Driven Robot. </title> <editor> In D. Cliff, P. Husbands, J.-A. Meyer, and S. Wil-son (Eds.), </editor> <booktitle> From Animals to Animats III, </booktitle> <address> Cambridge, MA. </address> <publisher> MIT Press. </publisher>
Reference-contexts: The process of adaptation through evolutionary search allows these artificial life forms with evolved brains to perform in the environments they inhabit. Some experiments rely on carefully designed simulations (Cliff et al., 1996), while others apply evolution directly in the real robot <ref> (Floreano and Mondada, 1994) </ref>. Hybrid techniques (Lund, 1995) are a mixture of the two.
Reference: <author> Forbus, K. </author> <year> (1984). </year> <title> Qualitative process theory. </title> <booktitle> In Artificial Intelligence 24, </booktitle> <pages> 85-168. </pages>
Reference-contexts: It starts with a logical representation of a mechanism, such as a heat pump <ref> (Forbus, 1984) </ref> or a string (Gardin and Meltzer, 1989), and produces simulations, or envisionments, of the future behavior of the mechanism. QP has not to our knowledge been used as the simulator in an evolutionary design system. 2.2 Computer Graphics.
Reference: <author> Funes, P. and Pollack, J. </author> <year> (1997). </year> <title> Computer Evolution of Buildable Objects. </title> <booktitle> Fourth European Conference on Artificial Life. </booktitle> <editor> P. Husbands and I. Harvey, eds., </editor> <publisher> MIT Press. </publisher> <pages> pp 358-367. </pages>
Reference-contexts: Lego is a registered trademark of the Lego group. 2 With a representation and a physical simulation that follow these ideas, we have obtained some promising results. In a first stage we worked with two-dimensional structures only <ref> (Funes and Pollack 1997) </ref>. We have recently extended our framework to three dimensions; one 3D application is described here as well.
Reference: <author> Gardin, F. and Meltzer, B. </author> <year> (1989). </year> <title> Analogical Representations of Naive Physics. </title> <booktitle> Artificial Life 38, </booktitle> <pages> pp 139-159. </pages>
Reference-contexts: It starts with a logical representation of a mechanism, such as a heat pump (Forbus, 1984) or a string <ref> (Gardin and Meltzer, 1989) </ref>, and produces simulations, or envisionments, of the future behavior of the mechanism. QP has not to our knowledge been used as the simulator in an evolutionary design system. 2.2 Computer Graphics.
Reference: <author> Goldberg, David E. </author> <year> (1989). </year> <title> Genetic Algorithms in Search, Optimization, and Machine Learning. </title> <publisher> Addison-Wesley. </publisher>
Reference-contexts: For the successful run pictured above the coverage objective was redefined as covering at least 96% of the target area. The use of stepped fitness functions might not be ideal; Pareto optimality aware GA techniques <ref> (Goldberg, 1989, ch. 5) </ref> should improve performance in multiobjective problems such as this one. 8 Problems and future research directions The algorithm being used to solve our models does not find all possible solutions. More sophisticated algorithmic tools may provide ways to fully solve the system of equations.
Reference: <author> Iusem, A. and Zenios, S. </author> <year> (1995). </year> <title> Interval Underrelaxed Bregmans method with an application. </title> <journal> In Optimization, </journal> <volume> vol. 35, iss. 3, </volume> <editor> p. </editor> <volume> 227. </volume>
Reference: <author> Jakobi, N., Husbands, P. and Harvey, I. </author> <year> (1995). </year> <title> Noise and the Reality Gap: </title> <booktitle> The use of Simulation in Evolutionary Robotics, in Advances in Artificial Life: Proceedings of the 3rd European Conference on Artificial Life, </booktitle> <editor> Moran, F., Moreno, A., Merelo, J., Chacon, P. (eds.) Springer-Ver-lag, </editor> <booktitle> Lecture Notes in Artificial Intelligence 929. </booktitle> <pages> pp. 704-720. </pages>
Reference-contexts: Evolutionary roboticists have found similar unpredictabilities when attempting to simulate the environment for a real robot <ref> (Jakobi et al., 1995) </ref>. This has lead to the incorporation of random noise to the simulators in order to generate robust behaviors suitable to be transferred to the real world. Our model provides only an approximation to the complex physical properties of Legos.
Reference: <author> Koza, John R. </author> <year> (1992). </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: The new variations are then tested with the simulation machinery, as described in the previous sections, to evaluate their properties and select or discard them accordingly. Our representation borrows the standard tree mutation and crossover operators from genetic programming <ref> (Koza, 1992) </ref>. We have implemented tree representations of 2D and 3D Lego structures. Each node on the tree represents a brick and has a size type parameter indicating the size of the brick and a list of descendants, which are new bricks physically attached to the parent.
Reference: <author> Lee, W., Hallam, J. and Lund, H. </author> <year> (1996). </year> <title> A Hybrid GP/GA Approach for Co-evolving Controllers and Robot Bodies to Achieve Fitness-Specified Tasks. </title> <booktitle> In Proceedings of IEEE 3rd International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. 20 Leighton, </publisher> <editor> T., Makedon, F., Plotkin, S., Stein, C., Tardos, E. and Tragoudas, S. </editor> <year> (1995). </year> <title> Fast Approximation Algorithms for Muticommodity Flow Problems. </title> <journal> Journal of Computer and Syst. Sciences 50. </journal> <volume> p. </volume> <pages> 228-243. </pages>
Reference: <author> Lund, H., </author> <year> (1995). </year> <title> Evolving Robot Control Systems. </title> <editor> In J. T. Alander (ed.) </editor> <booktitle> Proceedings of 1NWGA, </booktitle> <institution> University of Vaasa, Vaasa. </institution>
Reference-contexts: The process of adaptation through evolutionary search allows these artificial life forms with evolved brains to perform in the environments they inhabit. Some experiments rely on carefully designed simulations (Cliff et al., 1996), while others apply evolution directly in the real robot (Floreano and Mondada, 1994). Hybrid techniques <ref> (Lund, 1995) </ref> are a mixture of the two. Whereas some of the most interesting work in artificial life Karl Sims for example involves evolution of morphology and control together, researchers in evolutionary robotics use human designed robot machines and try to evolve control programs for them.
Reference: <author> Lund, H., Hallam, J and Lee, W. </author> <year> (1997). </year> <title> Evolving Robot Morphology. </title> <booktitle> Invited paper in Proceedings of IEEE Fourth International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press, </publisher> <address> NJ. </address>
Reference: <author> Mataric, M and Cliff, D. </author> <year> (1996). </year> <title> Challenges In Evolving Controllers for Physical Robots. </title> <journal> In Evolu-tional Robotics, special issue of Robotics and Autonomous Systems, </journal> <volume> Vol. 19, No. 1. </volume> <pages> pp 67-83. </pages>
Reference-contexts: recombination of available components and evaluation of functionality through physics simulation. 3 2.5 Evolutionary Robotics Work in evolutionary robotics has traditionally focused in the evolution of robot controllers to provide a given robot platform either real or simulated with a custom brain that, once downloaded, will produce an adequate behavior <ref> (Mataric and Cliff, 1996) </ref>. The process of adaptation through evolutionary search allows these artificial life forms with evolved brains to perform in the environments they inhabit. Some experiments rely on carefully designed simulations (Cliff et al., 1996), while others apply evolution directly in the real robot (Floreano and Mondada, 1994).
Reference: <author> Ngo, J.T., and Marks, J. </author> <year> (1993). </year> <title> Spacetime Constraints Revisited. </title> <booktitle> In Computer Graphics, Annual Conference Series. p. </booktitle> <pages> 335-342. </pages>
Reference-contexts: QP has not to our knowledge been used as the simulator in an evolutionary design system. 2.2 Computer Graphics. The work of Karl Sims (Sims, 1994 and 1994b) was seminal in the fields of evolutionary computation and artificial life. Following Ngo and Marks <ref> (Ngo and Marks, 1993) </ref>, Sims evolved virtual creatures that have both physical architecture and control programs created by an evolutionary computation process. Despite their beautiful realism, Sims organisms are far from real.
Reference: <author> Pollack, J. B., Blair, A. and Land, M.(1996). </author> <title> Coevolution of A Backgammon Player. </title> <booktitle> Proceedings Artificial Life V, </booktitle> <editor> C. Langton, (Ed), </editor> <publisher> MIT Press. </publisher>
Reference: <author> Shoenauer, M. </author> <year> (1996). </year> <title> Shape Representations and Evolution Schemes. </title> <editor> In L. J. Fogel, P. J. Angeline and T. Back, Editors, </editor> <booktitle> Proceedings of the 5th Annual Conference on Evolutionary Programming, </booktitle> <publisher> MIT Press, to appear. </publisher>
Reference: <author> Sims, K. </author> <year> (1994). </year> <title> Evolving Virtual Creatures. </title> <booktitle> In Computer Graphics, Annual Conference Series. </booktitle>
Reference-contexts: QP has not to our knowledge been used as the simulator in an evolutionary design system. 2.2 Computer Graphics. The work of Karl Sims <ref> (Sims, 1994 and 1994b) </ref> was seminal in the fields of evolutionary computation and artificial life. Following Ngo and Marks (Ngo and Marks, 1993), Sims evolved virtual creatures that have both physical architecture and control programs created by an evolutionary computation process.
Reference: <author> Sims, K. </author> <year> (1994b). </year> <title> Evolving 3D Morphology and Behavior by Competition. </title> <booktitle> In Artificial Life IV Proceedings, </booktitle> <publisher> MIT Press. </publisher>
Reference: <author> Tesauro, G. </author> <title> (1995) Temporal difference learning and TD-Gammon. </title> <journal> Communications of the ACM, </journal> <volume> 38(3): </volume> <pages> 58-68. </pages>
Reference: <author> Zienkiewicz, </author> <title> O.C. (1977). The Finite Element Method in Engineering Science. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <note> 3rd edition. </note>
Reference-contexts: There was no attempt to emulate a real environment that could house mechanical counterparts of those virtual creatures. 2.3 Structural Mechanics/Structural Topology The engineering field of structural mechanics is based on methods, such as finite element modelling <ref> (Zienkiewicz, 1977) </ref> to construct computable models of continuous materials by approximating them with discrete networks. These tools are in broad use in the engineering community, carefully supervised and oriented towards particular product designs, and are often quite computa-tionally intensive.
References-found: 24

