URL: http://www.cs.tu-berlin.de/techreports/kit/documents/Quantz/cade94.ps.gz
Refering-URL: http://www.cs.tu-berlin.de/techreports/
Root-URL: 
Email: royer@onera.fr  jjq@cs.tu-berlin.de  
Phone: 2  
Title: On Intuitionistic Query Answering in Description Bases  
Author: Veronique Royer and J. Joachim Quantz 
Keyword: Description Logics, Intuitionistic Sequent Calculus, Least Fixed Point Semantics, Query Answering  
Address: ONERA DES/SIA, avenue de la division Leclerc, B.P. 72, F-92322 Chatillon CEDEX  Berlin, KIT-VM11, FR 5-12, Franklinstr. 28/29, D-10587 Berlin  
Affiliation: 1  Technische Universitat  
Abstract: In this paper we present a weak and a strong intuitionistic calculus for query answering in Description Logics (DL). Given the standard model-theoretic semantics for DL, a complete query-answering calculus has to perform complex case analyses to cope with implicit disjunctions stemming from some of the concept-forming operators in DL. To avoid this complexity we propose an intuitionistic approach to query answering based on the Sequent-Calculus-style axiomatization of DL we have developed in [20] and [21]. By taking into account only the intuitionistic inference schemata of this axiomatization, we obtain a strong intuitionistic query-answering calculus. An additional restriction to reasoning about explicit objects allows a further simplification of the proof theory and yields a weak intuitionistic calculus. We prove completeness of these calculi wrt axiomatic semantics based on the Intuitionistic Sequent Calculus. For the weak calculus we also give a least fixed point semantics as known from Deductive Databases and Logic Programming. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> K. Apt, H. Blair, A. Walker, </author> <title> Towards a Theory of Declarative Knowledge, </title> <booktitle> in Workshop on Foundations of Deductive Databases and Logic Programming, </booktitle> <address> Washington, </address> <year> 1986 </year>
Reference-contexts: If the Right Contraction rule is applicable, an arbitrary number of dupli cations is possible, which means that no control of the proof process is possible. Of course the second problem has been the motivation for restricted inferences in Linear Logic [9], Logic Programming [14], and Deductive Databases <ref> [1] </ref>. In the following, we will use the standard approaches developed in these fields. We will therefore define alternative, intuitionistic semantics for DL. We will therefore define alternative, intuitionistic semantics for DL.
Reference: 2. <author> F. Baader, B. </author> <title> Hollunder, Embedding Defaults into Terminological Knowledge Representation Formalisms, </title> <booktitle> in KR-92, </booktitle> <pages> 306-317 </pages>
Reference-contexts: These rules are either interpreted as material implications, being thus equivalent to the formula c 1 v c 2 , or as forward chaining trigger rules applied whenever an object o is known to be an instance of c 1 <ref> [2, 7] </ref>. In this paper we will not address the issue of rules and restrict our investigation to DL modelings containing only a TBox and an ABox.
Reference: 3. <author> F. Bancilhon, D. Maier, Y. Sagic, J. Ullman, </author> <title> Magic Sets and other Strange Ways of Implementing Logic Programs, </title> <booktitle> in Principles of Database Systems (PODS-86), </booktitle> <pages> 1-15, </pages> <year> 1986 </year>
Reference-contexts: Since we have followed the standard strategy of Deductive Databases, an extension of our approach to recursive description bases seems possible by integrating methods similar to the ones developed in these fields (e.g. <ref> [3, 12] </ref>). Let us now conclude by some comments about complexity. Even with intuitionistic semantics, some complexity still arises from left-implication elimination as performed in the secong triggering rule for TB clauses in Fig. 1, because arbitrarily long disjunctive queries potentially arise.
Reference: 4. <author> R.J. Brachman, J.G. Schmolze, </author> <title> An Overview of the KL-ONE Knowledge Representation System Cognitive Science 9, </title> <type> 171-216, </type> <year> 1985 </year>
Reference-contexts: Following the debate on the lacking formal foundation of these representation formats in the mid-70's, Brachman proposed the representation language KL-ONE, which is described in an overview, which was circulated in the beginning of the 1980's and was finally published in 1985 <ref> [4] </ref>. In the last decade, substantial theoretical research concerning complexity and decidability of different dialects of Description Logics has been conducted (e.g. [6]). In parallel, several DL systems have been implemented and used in various applications (e.g. [5, 11, 18]).
Reference: 5. <author> R. Brachman, D.L. McGuiness, P.F. Patel-Schneider, L. Alperin Resnick, A. Borgida, </author> <title> Living with CLASSIC: When and How to Use a KL-ONE-like Language, </title> <editor> in ,J. Sowa (Ed.), </editor> <booktitle> Principles of Semantic Networks: Explorations in the Representation of Knowledge, </booktitle> <address> San Mateo: </address> <publisher> Morgan Kaufmann, </publisher> <pages> 401-456, </pages> <year> 1991 </year>
Reference-contexts: In the last decade, substantial theoretical research concerning complexity and decidability of different dialects of Description Logics has been conducted (e.g. [6]). In parallel, several DL systems have been implemented and used in various applications (e.g. <ref> [5, 11, 18] </ref>). In the following, we will use a simple DL, whose syntax is given below.
Reference: 6. <author> F.M. Donini, M. Lenzerini, D. Nardi, W. </author> <title> Nutt, </title> <booktitle> Tractable Concept Languages IJCAI-91, </booktitle> <pages> 458-463 </pages>
Reference-contexts: In the last decade, substantial theoretical research concerning complexity and decidability of different dialects of Description Logics has been conducted (e.g. <ref> [6] </ref>). In parallel, several DL systems have been implemented and used in various applications (e.g. [5, 11, 18]). In the following, we will use a simple DL, whose syntax is given below.
Reference: 7. <author> F.M. Donini, M. Lenzerini, D. Nardi, A. Schaerf, W. Nutt, </author> <title> Adding Epistemic Operators to Concept Languages, </title> <booktitle> in KR-92, </booktitle> <pages> 342-353 </pages>
Reference-contexts: These rules are either interpreted as material implications, being thus equivalent to the formula c 1 v c 2 , or as forward chaining trigger rules applied whenever an object o is known to be an instance of c 1 <ref> [2, 7] </ref>. In this paper we will not address the issue of rules and restrict our investigation to DL modelings containing only a TBox and an ABox. <p> To derive the assertion 8r:c 2 (o) we have to add the terminological clause 8r:c 1 ! 8r:c 2 , which is logically entailed by c 1 ! c 2 . The complexity of assertional reasoning is illustrated by the following description base taken from <ref> [7] </ref>: friend (john,susan) loves (susan,peter) graduate (susan) friend (john,peter) loves (peter,mary) : graduate (mary) Given the model-theoretic semantics, one can show by case reasoning that this AB entails the fact 9friend:(graduate u 9loves:: graduate)(john). In any model of AB either peter is graduate or peter is not. <p> The intuitionistic calculi presented in this paper allow an efficient answering of open queries due to the explicit control of the proof strategy given by the existence of query and answer rules. This contrasts to the tableaux-based technique used for example in <ref> [7] </ref>, which is mainly intended for answering closed queries and can only be inefficiently applied to open queries 6 .
Reference: 8. <author> J. Gallier, </author> <title> Logic for Computer Science; Foundations of Automatic Theorem Proving, </title> <address> New York: </address> <publisher> Harper and Row, </publisher> <year> 1986 </year>
Reference-contexts: For the axiomatic semantics consider the Intuitionistic Sequent Calculus [10, 23] shown in Fig. 3. It is obtained from the classical Sequent Calculus <ref> [8] </ref> by replacing the classical :, _, weakening, and contraction rules by their intuitionistic versions. Definition 5.
Reference: 9. <author> J.Y. Girard, </author> <title> Linear Logic, </title> <booktitle> Theoretical Computer Science,50, </booktitle> <year> 1987 </year>
Reference-contexts: If the Right Contraction rule is applicable, an arbitrary number of dupli cations is possible, which means that no control of the proof process is possible. Of course the second problem has been the motivation for restricted inferences in Linear Logic <ref> [9] </ref>, Logic Programming [14], and Deductive Databases [1]. In the following, we will use the standard approaches developed in these fields. We will therefore define alternative, intuitionistic semantics for DL. We will therefore define alternative, intuitionistic semantics for DL.
Reference: 10. <author> J.Y. Girard, Y. Lafont, P. Taylor, </author> <title> Proofs and Types, </title> <publisher> Cambridge: Cambridge University Press, </publisher> <year> 1989 </year>
Reference-contexts: Intuitionistic Sequent Calculus <ref> [10] </ref>. (a stands for an eigen-parameter, i.e. a parameter not occurring in the lower sequent; t stands for a term occurring in the lower sequent.) 5 Completeness We will now give an axiomatic and a least fixed point semantics and show completeness of our intuitionistic calculi wrt these semantics. <p> For the axiomatic semantics consider the Intuitionistic Sequent Calculus <ref> [10, 23] </ref> shown in Fig. 3. It is obtained from the classical Sequent Calculus [8] by replacing the classical :, _, weakening, and contraction rules by their intuitionistic versions. Definition 5.
Reference: 11. <author> T. Hoppe, C. Kindermann, J.J. Quantz, A. Schmiedel, M. Fischer, </author> <title> BACK V5 Tutorial & Manual, </title> <type> KIT Report 100, </type> <institution> Technische Universitat Berlin, </institution> <year> 1993 </year>
Reference-contexts: In the last decade, substantial theoretical research concerning complexity and decidability of different dialects of Description Logics has been conducted (e.g. [6]). In parallel, several DL systems have been implemented and used in various applications (e.g. <ref> [5, 11, 18] </ref>). In the following, we will use a simple DL, whose syntax is given below. <p> In [20] we have presented a systematic method towards axiomatizing DL, namely by deriving inference schemata via rewriting Sequent Calculus proofs of terminological formulae. In [21] we have applied this method to the expressive terminological fragment underlying BACK V5 <ref> [11] </ref>. We did not address the axiomatization of assertional inferences, however, which we will deal with in this paper. The following is a list of intuitionistic inference schemata for the terminological fragment investigated in this paper. <p> This source of complexity can be eliminated by restricting to languages without explicit disjunctions and without full negation 7 , as is usually done in implemented systems like BACK V5 <ref> [11] </ref>. Then the rules involving disjunctions in Fig. 1 and Fig. 2 are no more needed. The Strong Calculus remains intrinsically complex because of Skolemization and Equality reasoning.
Reference: 12. <author> J.M. Kerisit, R. Lescoeur, J. Rohmer, </author> <title> The Alexander Method: a Technique for the Processing of Recursive Axioms in Deductive Databases, New Generation Computing 3(4), </title> <year> 1986 </year>
Reference-contexts: The present section introduces formally two query-answering calculi. They look much like the Alexander Method for Deductive Databases <ref> [12] </ref>. However, as the structure of subsumption formulae and assertions are far more complex than in definite deductive databases, the adequate analogue is rather the Sequent Calculus (SC). <p> Since we have followed the standard strategy of Deductive Databases, an extension of our approach to recursive description bases seems possible by integrating methods similar to the ones developed in these fields (e.g. <ref> [3, 12] </ref>). Let us now conclude by some comments about complexity. Even with intuitionistic semantics, some complexity still arises from left-implication elimination as performed in the secong triggering rule for TB clauses in Fig. 1, because arbitrarily long disjunctive queries potentially arise.
Reference: 13. <author> H.J. Levesque, </author> <title> Foundations of a Functional Approach to Knowledge Representation, </title> <booktitle> Artificial Intelligence 23, </booktitle> <pages> 155-212, </pages> <year> 1984 </year>
Reference-contexts: Note that the avoidance of reasoning with implicit objects (i.e. object names not occurring within assertions of AB), even if only temporarily in the course of proofs, distinguishes the weak calculus from model theoretic epistemic calculi as proposed, for example, in <ref> [13, 19] </ref>. In these calculi the answer set of an epistemic query is defined as the intersection of the answer sets wrt arbitrary models. leader!(mt,mary) is an epistemic answer to leader?(mt,x) in the model theoretical sense, because in all the models of AB respecting TB mary satisfies invariantly the query.
Reference: 14. <author> J.W. Lloyd, </author> <booktitle> Foundations of Logic Programming, </booktitle> <address> Berlin: </address> <publisher> Springer, </publisher> <year> 1987 </year>
Reference-contexts: If the Right Contraction rule is applicable, an arbitrary number of dupli cations is possible, which means that no control of the proof process is possible. Of course the second problem has been the motivation for restricted inferences in Linear Logic [9], Logic Programming <ref> [14] </ref>, and Deductive Databases [1]. In the following, we will use the standard approaches developed in these fields. We will therefore define alternative, intuitionistic semantics for DL. We will therefore define alternative, intuitionistic semantics for DL.
Reference: 15. <author> B.Nebel, </author> <title> Reasoning and Revision in Hybrid Representation Systems, </title> <booktitle> Lecture Notes in Artificial Intelligence 422, </booktitle> <address> Berlin: </address> <publisher> Springer, </publisher> <year> 1990 </year>
Reference-contexts: the expense of completeness, one should take the approach of systems based on flexible inference strategies, where some inferences only are performed [17]. 6 The query c?(x) has to be mapped to queries c?(o i ) for all o i 2 O. 7 Negation is restricted to so-called primitive terms <ref> [15] </ref>.
Reference: 16. <author> T. Przyymusinski, </author> <title> On the Declarative and Procedural Semantics of Logic Programs, </title> <journal> Journal of Automated Reasoning 5, </journal> <pages> 167-205, </pages> <year> 1989 </year>
Reference-contexts: Definite databases, where intensional rules are definite Horn clauses (i.e. Horn clauses with exactly one positive literal), can be given a proof-theoretical accountthe least fixed point semantics (e.g. <ref> [16] </ref>). Indeed, the informational content of any definite deductive database can be computed as the least fixed point of some consequence operator.
Reference: 17. <author> J.J. Quantz, G. Dunker, V. Royer, </author> <title> Flexible Inference Strategies for DL Systems, </title> <booktitle> to appear in International Workshop on Description Logics, </booktitle> <address> Bonn, </address> <year> 1994 </year>
Reference-contexts: To increase efficiency, at the expense of completeness, one should take the approach of systems based on flexible inference strategies, where some inferences only are performed <ref> [17] </ref>. 6 The query c?(x) has to be mapped to queries c?(o i ) for all o i 2 O. 7 Negation is restricted to so-called primitive terms [15].
Reference: 18. <author> J.J. Quantz, B. Schmitz, </author> <title> Knowledge-Based Disambiguation for Machine Translation, </title> <booktitle> Minds and Machines 4, </booktitle> <pages> 39-57, </pages> <year> 1994 </year>
Reference-contexts: In the last decade, substantial theoretical research concerning complexity and decidability of different dialects of Description Logics has been conducted (e.g. [6]). In parallel, several DL systems have been implemented and used in various applications (e.g. <ref> [5, 11, 18] </ref>). In the following, we will use a simple DL, whose syntax is given below.
Reference: 19. <author> R. Reiter, </author> <title> On Asking What a Database Knows, </title> <editor> in J.W. LLoyd (Ed.), </editor> <booktitle> Computational Logic, </booktitle> <address> Berlin: </address> <publisher> Springer, </publisher> <pages> 96-113, </pages> <year> 1990 </year>
Reference-contexts: Note that the avoidance of reasoning with implicit objects (i.e. object names not occurring within assertions of AB), even if only temporarily in the course of proofs, distinguishes the weak calculus from model theoretic epistemic calculi as proposed, for example, in <ref> [13, 19] </ref>. In these calculi the answer set of an epistemic query is defined as the intersection of the answer sets wrt arbitrary models. leader!(mt,mary) is an epistemic answer to leader?(mt,x) in the model theoretical sense, because in all the models of AB respecting TB mary satisfies invariantly the query.
Reference: 20. <author> V. Royer, J.J. Quantz, </author> <title> Deriving Inference Rules for Terminological Logics, </title> <editor> in , D. Pearce, G. Wagner (eds), </editor> <booktitle> Logics in AI, Proceedings of JELIA'92, </booktitle> <address> Berlin: </address> <publisher> Springer, </publisher> <pages> 84-105, </pages> <year> 1992 </year>
Reference-contexts: Similarly, assertion bases have by themselves a great inferential power, contrarily to the extensional facts of intensional databases. The deductive paradigm must account for both intrinsic entailment relations, assertional and terminological. In <ref> [20] </ref> we have presented a systematic method towards axiomatizing DL, namely by deriving inference schemata via rewriting Sequent Calculus proofs of terminological formulae. In [21] we have applied this method to the expressive terminological fragment underlying BACK V5 [11].
Reference: 21. <author> V. Royer, J.J. Quantz, </author> <title> Deriving Inference Rules for Description Logics: a Rewriting Approach into Sequent Calculi, </title> <type> KIT Report 112, </type> <institution> Technische Universitat Berlin, </institution> <year> 1993 </year>
Reference-contexts: Due to lack of space we here give only the FOL translations of all, some, atleast, and atmost (for a complete translation see <ref> [21] </ref>): 8r : c = x (8yr (x)(y) ! c (y)) def nr:c = x (9y 1 : : : y n r (x)(y 1 ) ^ c (y 1 ) : : : r (x)(y n ) ^ c (y n ) nr:c = x (9y 1 : : : <p> The deductive paradigm must account for both intrinsic entailment relations, assertional and terminological. In [20] we have presented a systematic method towards axiomatizing DL, namely by deriving inference schemata via rewriting Sequent Calculus proofs of terminological formulae. In <ref> [21] </ref> we have applied this method to the expressive terminological fragment underlying BACK V5 [11]. We did not address the axiomatization of assertional inferences, however, which we will deal with in this paper. The following is a list of intuitionistic inference schemata for the terminological fragment investigated in this paper. <p> Most inference rules are presented in inconsistency form (variants of them are obtained by using negation rules, intuitionistically). The propositional rules are basically the rules for the propositional fragment of the Intuition-istic Sequent Calculus and are therefore omitted here. More details about the complete axiomatization can be found in <ref> [21] </ref>. &gt; v c * ) &gt; v 8r:c c v ? * ) 9r:c v ? : c 2 u c 1 v ? ; r 1 v r 2 * 8 r 2 :c 2 u 9 r 1 :c 1 v ? c 1 u c 2 v
Reference: 22. <author> J.E. Stoy, </author> <title> Denotational Semantics: The Scott-Strachey Approach to Programming Language Theory, </title> <publisher> Cambridge: MIT Press, </publisher> <year> 1977 </year>
Reference-contexts: ! c and c 1 (o); : : : ; c n (o) 2 S, then c (o) 2 T B (S) As usual we rely on Tarski's Theorem and the fact that T B is a monotonic continuous operator on the power set of assertions ordered by set inclusion <ref> [22] </ref>. Therefore, ! n=1 n Proposition 8. Let DB = (TB,AB) be a DL description base. DB; c?(x) ` W QA c!(o) iff c (o) 2 ! Proof (sketch). Condition (2) in the definition of the consequence operator is taken care of by the structural rules of the weak calculus.
Reference: 23. <author> G. Sundholm, </author> <title> Systems of Deduction, </title> <editor> in D.Gabbay, F.Guenthner (eds), </editor> <booktitle> Handbook of Philosophical Logic, </booktitle> <volume> Vol. I, </volume> <publisher> Dordrecht: Reidel, </publisher> <month> 133-188, </month> <title> 1983 This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: For the axiomatic semantics consider the Intuitionistic Sequent Calculus <ref> [10, 23] </ref> shown in Fig. 3. It is obtained from the classical Sequent Calculus [8] by replacing the classical :, _, weakening, and contraction rules by their intuitionistic versions. Definition 5.
References-found: 23

