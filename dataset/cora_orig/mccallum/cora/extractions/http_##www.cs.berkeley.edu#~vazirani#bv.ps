URL: http://www.cs.berkeley.edu/~vazirani/bv.ps
Refering-URL: http://www.cs.berkeley.edu/~vazirani/
Root-URL: 
Title: Quantum complexity theory possibility of giving a mathematical proof that quantum Turing Machines are more
Author: Ethan Bernstein Umesh Vazirani 
Note: Turing Machine, satisfies: BPP BQP P ]P Therefore there is no  
Date: September 8, 1997  
Abstract: In this paper we study quantum computation from a complexity theoretic viewpoint. Our first result is the existence of an efficient universal quantum Turing Machine in Deutsch's model of a quantum Turing Machine [20]. This construction is substantially more complicated than the corresponding construction for classical Turing Machines in fact, even simple primitives such as looping, branching and composition are not straightforward in the context of quantum Turing Machines. We establish how these familiar primitives can be implemented, and also introduce some new, purely quantum mechanical primitives, such as changing the computational basis, and carrying out an arbitrary unitary transformation of polynomially bounded dimension. We also consider the precision to which the transition amplitudes of a quantum Turing Machine need to be specified. We prove that O(log T ) bits of precision suffice to support a T step computation. This justifies the claim that that the quantum Turing Machine model should be regarded as a discrete model of computation and not an analog one. We give the first formal evidence that quantum Turing Machines violate the modern (complexity theoretic) formulation of the Church-Turing thesis. We show the existence of a problem, relative to an oracle, that can be solved in polynomial time on a quantum Turing Machine, but requires super-polynomial time on a bounded-error probabilistic Turing Machine; and thus not in the class BPP . The class BQP , of languages that are efficiently decidable (with small error-probability) on a quantum 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Adleman, L., DeMarrais, J., and Huang, M., </author> <title> Quantum computability, </title> <type> manuscript, </type> <year> 1994. </year>
Reference-contexts: Adleman, et. al. <ref> [1] </ref> and Solovay and Yao [40] have further clarified this point by showing that quantum coin flips with amplitudes 3=5 and 4=5 are sufficient for universal quantum computation. Quantum computation is necessarily time reversible, since quantum physics requires unitary evolution. <p> A common restriction is to allow amplitudes only from the set f0; 1 2 ; 1g. More generally, we might allow any real number in the interval <ref> [0; 1] </ref> which can be computed by some deterministic algorithm to within any desired 2 n in time polynomial in n. It is easily shown that the first possibility is computationally no more restrictive than the second. <p> We now give a slightly modified version of the definition of a QTM provided by Deutsch [20]. As in the case of probabilistic TM, we must limit the transition amplitudes to efficiently computable numbers. Adleman, et. al. <ref> [1] </ref> and Solovay and Yao [40] have separately shown that further restricting QTMs to rational amplitudes does not reduce their computational power. In fact, they have shown that the set of amplitudes f0; 3 5 ; 4 5 ; 1g are sufficient to construct a universal QTM. <p> Lemma 4.2.2 Given any QTM (reversible TM) M = ( 1 fi fi k ; Q; ffi) and permutation : <ref> [1; k] </ref> ! [1; k], there is a QTM (reversible TM) M 0 = ( (1) fi fi (k) ; Q; ffi 0 ) such that the M 0 behaves exactly as M except that its tracks are permuted according to . 17 The following two lemmas are also straightforward, but <p> Lemma 4.2.2 Given any QTM (reversible TM) M = ( 1 fi fi k ; Q; ffi) and permutation : <ref> [1; k] </ref> ! [1; k], there is a QTM (reversible TM) M 0 = ( (1) fi fi (k) ; Q; ffi 0 ) such that the M 0 behaves exactly as M except that its tracks are permuted according to . 17 The following two lemmas are also straightforward, but stating them separately <p> Note that a single copy of this fixed rotation gives the only "non-classical" amplitudes (those other than 0; 1) in the transition function of the universal QTM constructed below. See Adleman, et. al. <ref> [1] </ref> and Solovay and Yao [40] for the constructions of universal QTMs whose amplitudes are restricted to a small set of rationals. <p> First, we describe a procedure for computing such a k. Start by calculating n, a power of 2, such that * &gt; 2 2 n1 . Next, approximate 2 as a fraction with denominator 2 n . In other words, find an integer m 2 <ref> [1; 2 n ] </ref> such that fi fi 2 n fi fi 2 n Then we can let k = m2 n because m2 n Rmod 2 = 1 X 2 n2 i mod 2 0 1 X 2 n2 i A mod 2 0 2 n + 2m i=log n+2 <p> Each supercell holds a pair of integers p; where 2 <ref> [1; card ()] </ref> represents the contents of the corresponding cell of M , and p 2 [0; card (Q)] represents the state of M , if its tape head is scanning the corresponding cell and p = 0 otherwise. <p> The first phase of the simulation will be handled by the machine M 1 with state set given by the union of sets Q, Q fi Q fi fi <ref> [1; 4] </ref>, Q fi [5; 7], and fq a ; q b g. Its start state will be q a and the final state q f . 58 The transitions of M 1 are defined as follows.
Reference: [2] <author> Arora S., Impagliazzo, R., Vazirani, U., </author> <title> On the Role of the Cook-Levin Theorem in Complexity Theory, </title> <type> manuscript, </type> <year> 1993. </year>
Reference-contexts: Definition 6.2.1 A dfid unitary matrix M is near-trivial if it satisfies one of the following two conditions 1. M is the identity except that one of its diagonal entries is e i for some 2 <ref> [0; 2] </ref>. i.e. 9j m j;j = e i ; 8k 6= j m k;k = 1, and 8k 6= l m k;l = 0. 2. <p> <ref> [0; 2] </ref>. i.e. 9j m j;j = e i ; 8k 6= j m k;k = 1, and 8k 6= l m k;l = 0. 2. M is the identity except that the submatrix in one pair of distinct dimensions j and k is the rotation by some angle 2 [0; 2]: sin cos . <p> Lemma 6.3.1 Let R = 2 P 1 Then there is a deterministic algorithm taking time polynomial in log 1=* and the length of the input which on input ; * with 2 <ref> [0; 2] </ref> and * &gt; 0, produces integer output k bounded by a polynomial in 1=* such that jkR j mod 2 * Proof. First, we describe a procedure for computing such a k. Start by calculating n, a power of 2, such that * &gt; 2 2 n1 . <p> This result provided the first evidence that QTMs are more powerful than classical probabilistic TMs with bounded error probability [11]. One could ask what the relevance of these oracle results is, in view of the non-relativizing results on probabilistically checkable proofs [36, 3]. Moreover, Arora et al. <ref> [2] </ref> make the case that the fact that the P versus NP question relativizes does not imply that the question "cannot be resolved by current techniques in complexity theory".
Reference: [3] <author> Arora S., Lund C., Motwani R., Sudan M. and Szegedy M., </author> <title> Proof verification and intractability of approximation problems, </title> <booktitle> Proceedings of the 33rd Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1992. </year>
Reference-contexts: This result provided the first evidence that QTMs are more powerful than classical probabilistic TMs with bounded error probability [11]. One could ask what the relevance of these oracle results is, in view of the non-relativizing results on probabilistically checkable proofs <ref> [36, 3] </ref>. Moreover, Arora et al. [2] make the case that the fact that the P versus NP question relativizes does not imply that the question "cannot be resolved by current techniques in complexity theory".
Reference: [4] <author> Babai, L., and Moran, S., </author> <title> Arthur-Merlin games: a randomized proof system, and a hierarchy of complexity classes, </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 36(1988), </volume> <pages> pp. 254-276. </pages>
Reference-contexts: The first phase of the simulation will be handled by the machine M 1 with state set given by the union of sets Q, Q fi Q fi fi <ref> [1; 4] </ref>, Q fi [5; 7], and fq a ; q b g. Its start state will be q a and the final state q f . 58 The transitions of M 1 are defined as follows.
Reference: [5] <author> Barenco, A., Bennett, C., Cleve, R., DiVincenzo, D., Margolus, N., Shor, P., Sleator, T., Smolin, J., and Weinfurter, H., </author> <title> Elementary gates for quantum computation, </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: Second, we desire that the decomposition can itself be efficiently computed given the desired unitary transformation as input. For more recent work on the efficient simulation of a unitary transformation by a quantum computation network see <ref> [5] </ref> and the references therein. 6.1 Measuring errors in approximated transformations In this section, we will deal with operators (linear transformations) on finite dimensional Hilbert spaces. <p> The first phase of the simulation will be handled by the machine M 1 with state set given by the union of sets Q, Q fi Q fi fi [1; 4], Q fi <ref> [5; 7] </ref>, and fq a ; q b g. Its start state will be q a and the final state q f . 58 The transitions of M 1 are defined as follows.
Reference: [6] <author> Benioff, P., </author> <title> Quantum Hamiltonian models of Turing machines Journal of Statistical Physics, </title> <booktitle> 29(1982), </booktitle> <pages> pp. 515-546. </pages>
Reference-contexts: Can we get inherently new kinds of (discrete) computing devices based on quantum physics? Early work on the computational possibilities of quantum physics <ref> [6] </ref> asked the opposite question: does quantum mechanic's insistence on unitary evolution restrict the class of efficiently computable problems? They concluded that as far as deterministic computation is concerned, the only additional constraint imposed by quantum mechanics is that the computation must be reversible, and therefore by Bennett's [7] work it
Reference: [7] <author> Bennett, C. H., </author> <title> Logical reversibility of computation, </title> <journal> IBM J. Res. Develop., </journal> <volume> 17(1973), </volume> <pages> pp. 525-532. </pages>
Reference-contexts: quantum physics [6] asked the opposite question: does quantum mechanic's insistence on unitary evolution restrict the class of efficiently computable problems? They concluded that as far as deterministic computation is concerned, the only additional constraint imposed by quantum mechanics is that the computation must be reversible, and therefore by Bennett's <ref> [7] </ref> work it follows that quantum computers are at least as powerful as classical computers. The issue of the extra computational power of quantum mechanics over probabilistic computers was first raised by by Feynman [25] in 1982. <p> However, these constructions are more difficult for QTMs because one must be very careful to maintain reversibility. In fact, the same difficulties arise when building reversible deterministic TMs. However, building reversible TMs up out of simpler reversible TMs has never been necessary. This is because Bennett <ref> [7] </ref> showed how to efficiently simulate any deterministic TM with one which is reversible. So, one can build a reversible TM by first building the desired computation with a non-reversible machine, and then using Bennett's construction. <p> Note that we have altered the definition of a reversible TM from the one used by Bennett <ref> [7, 8] </ref> so that our reversible TMs are a special case of our QTMs. First, we have restricted our reversible TM to move its head only left and right, instead of also allowing it to stay still. <p> So, the time evolution preserves length, and the QTM is well-formed. 2 Previous work of Bennett shows that reversible machines can efficiently simulate deterministic TMs. Of course, if a deterministic TM computes a function which is not one-to-one, then no reversible machine 16 can simulate it exactly. Bennett <ref> [7] </ref> showed that a generalized reversible TM can do the next best thing, which is to take any input x and compute x; M (x) where M (x) is the output of M on input x. <p> Again, this means that c can have only one predecessor. 2 We will prove the Synchronization Theorem in the following way. Using ideas from the constructions of Bennett <ref> [7] </ref> and Morita et.al. [33], we will show that given any deterministic TM M there is a reversible multi-track TM which on input x produces output x; M (x), and whose running time depends only on the sequence of head movements of M on input x. <p> The first phase of the simulation will be handled by the machine M 1 with state set given by the union of sets Q, Q fi Q fi fi [1; 4], Q fi <ref> [5; 7] </ref>, and fq a ; q b g. Its start state will be q a and the final state q f . 58 The transitions of M 1 are defined as follows.
Reference: [8] <author> Bennett, C. H., </author> <title> Time/space tradeoffs for reversible computation, </title> <journal> SIAM J. Comput., </journal> <volume> 18(1989), </volume> <pages> pp. 766-776. </pages>
Reference-contexts: Note that we have altered the definition of a reversible TM from the one used by Bennett <ref> [7, 8] </ref> so that our reversible TMs are a special case of our QTMs. First, we have restricted our reversible TM to move its head only left and right, instead of also allowing it to stay still.
Reference: [9] <author> Bennett, C. H., Bernstein, E., Brassard, G., and Vazirani, U., </author> <title> Strengths and weaknesses of quantum computing, </title> <note> SIAM J. Comput., to appear. </note>
Reference-contexts: It is natural to ask whether quantum Turing Machines can solve every problem in N P in polynomial time. Bennett, Bernstein, Brassard and Vazirani <ref> [9] </ref> give evidence showing the limitations of quantum Turing Machines. They show that relative to an oracle chosen uniformly at random, with probability 1, the class NP cannot be solved on a quantum Turing Machine in time o (2 n=2 ). <p> So, using only polynomial space, we can step through all of these configurations computing a running sum of the their squared magnitudes. 2 Following Valiant's suggestion [43], the upper bound can be further improved to P ]P . This proof can be simplified by using a theorem from <ref> [9] </ref> which shows how any BQP machine can be turned into a "clean" version M that on input x produces a final superposition with almost all of its weight on x; M (x) where M (x) is a 1 if M accepts x and a 0 otherwise. <p> For example, oracles that perform more general, non-Boolean unitary operations have been considered in computational learning theory [15], and used to obtain large separations [32] between quantum and classical relativized complexity classes. See <ref> [9] </ref> for a discussion of more general definitions of oracle quantum computing. 8.4 Fourier Sampling and the power of QTMs In this section we give evidence that QTMs are more powerful than bounded-error probabilistic TMs.
Reference: [10] <author> Bernstein, E., </author> <title> Quantum complexity theory, </title> <type> PhD dissertation, </type> <institution> U.C. Berkeley, </institution> <note> to appear. </note>
Reference-contexts: Yao [46] showed that these models are polynomially equivalent to the basic model, as are quantum circuits (which were introduced in [21]. The efficiency of Yao's simulation has been improved in <ref> [10] </ref> to show that the simulation overhead is a polynomial with degree independent of the number of tapes. Arguably, the full computational power of quantum physics for discrete systems is captured by the quantum analog of a cellular automaton. <p> Notice that a QTM differs from a classical TM in that the "user" has decisions beyond just choosing an input. A priori it is not clear whether multiple observations might increase the power of QTMs This point is discussed in more detail in <ref> [10] </ref>, and there it is shown that one may assume without loss of generality that the QTM is only observed once. Therefore, in this paper, we shall make simplifying assumptions about the measurement of the final result of the QTM. <p> Therefore, in this paper, we shall make simplifying assumptions about the measurement of the final result of the QTM. The fact that these assumptions do not result in any loss of generality follows from the results in <ref> [10] </ref>. In general, the "output" of a QTM is a sample from a probability distribution. We can regard two QTMs as functionally equivalent, for practical purposes, if their output distributions are sufficiently close to each other. <p> We can regard two QTMs as functionally equivalent, for practical purposes, if their output distributions are sufficiently close to each other. A formal definition of what it means for one QTM to simulate another is also given in <ref> [10] </ref>. As in the case of classical TMs, the formal definition is quite unwieldy. In the actual constructions, it will be easy to see in what sense they are simulations. Therefore we will not replicate the formal definitions from [10] here. <p> means for one QTM to simulate another is also given in <ref> [10] </ref>. As in the case of classical TMs, the formal definition is quite unwieldy. In the actual constructions, it will be easy to see in what sense they are simulations. Therefore we will not replicate the formal definitions from [10] here.
Reference: [11] <author> Bernstein, E. and Vazirani, U., </author> <title> Quantum complexity theory, </title> <booktitle> Proceedings of the 25th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1993, </year> <pages> pp. 11-20. </pages>
Reference-contexts: For example, it is clear that computers that oper ate on arbitrary length words in unit time, or that exactly compute with infinite precision real numbers are fl A preliminary abstract of this work appeared as <ref> [11] </ref>. y Microsoft Corporation, One Microsoft Way, Redmond, WA 98052 (ethanb@microsoft.com). Research supported by N.S.F. Grant CCR-9310214. z Computer Science Division, University of California, Berkeley, CA 94720 (vazirani@cs.berkeley.edu). Research sup ported by N.S.F. Grant CCR-9310214 1 not realizable. <p> One approach to arguing affirmatively is to consider various other reasonable models, and to show that the quantum Turing Machine can efficiently simulate each of them. An earlier version of this work <ref> [11] </ref> left open the question of whether standard variants of a quantum Turing Machine, such as machines with multiple tapes or with modified tape access, are more powerful than the basic model. <p> This result provided the first evidence that QTMs are more powerful than classical probabilistic TMs with bounded error probability <ref> [11] </ref>. One could ask what the relevance of these oracle results is, in view of the non-relativizing results on probabilistically checkable proofs [36, 3].
Reference: [12] <author> Berthiaume, A., and Brassard, G., </author> <title> The quantum challenge to structural complexity theory, </title> <booktitle> Proceedings of 7th IEEE Conference on Structure in Complexity Theory, 1992, </booktitle> <volume> pt. </volume> <pages> 132-137. </pages>
Reference-contexts: Finally, several researchers have explored the computational power of quantum Turing Machines. Early work by Deutsch and Jozsa [22] showed how to exploit some inherently quantum mechanical features of QTMs. Their results, in conjunction with subsequent results by Berthiaume and Brassard <ref> [12, 13] </ref>, established the existence of oracles under which there are computational problems that QTMs can solve in polynomial time with certainty, whereas if we require a classical probabilistic Turing machine to produce the correct answer with certainty, then it must take exponential time on some inputs.
Reference: [13] <author> Berthiaume, A., and Brassard, G., </author> <title> Oracle quantum computing, </title> <journal> Journal of Modern Optics, </journal> <volume> 41(1994), </volume> <pages> pp. 2521-2535. </pages>
Reference-contexts: Finally, several researchers have explored the computational power of quantum Turing Machines. Early work by Deutsch and Jozsa [22] showed how to exploit some inherently quantum mechanical features of QTMs. Their results, in conjunction with subsequent results by Berthiaume and Brassard <ref> [12, 13] </ref>, established the existence of oracles under which there are computational problems that QTMs can solve in polynomial time with certainty, whereas if we require a classical probabilistic Turing machine to produce the correct answer with certainty, then it must take exponential time on some inputs. <p> It is natural to define quantum analogues of classical complexity classes <ref> [13] </ref>. In classical complexity theory, BPP is regarded as the class of all languages that are efficiently computable on a classical computer.
Reference: [14] <author> Berthiaume, A., Deutsch, D., and Jozsa, R., </author> <booktitle> The stabilisation of quantum computation, Proceedings of the Workshop on Physics and Computation, </booktitle> <year> 1994, </year> <note> p. 60. </note>
Reference: [15] <author> Bshouty, N. and Jackson, J., </author> <title> Learning DNF over uniform distribution using a quantum example oracle, </title> <booktitle> Proceedings of 8th Annual ACM Conference on Computational Learning Theory, </booktitle> <year> 1995, </year> <pages> pp. 118-127. </pages>
Reference-contexts: For example, oracles that perform more general, non-Boolean unitary operations have been considered in computational learning theory <ref> [15] </ref>, and used to obtain large separations [32] between quantum and classical relativized complexity classes.
Reference: [16] <author> Calderbank, A.R. and Shor, P., </author> <title> Good quantum error correcting codes exist, </title> <journal> Phys. </journal> <note> Rev. A, to appear. </note>
Reference-contexts: Very recently, there have been a sequence of important results showing how to implement quantum error-correcting codes and also use these codes to make quantum algorithms (quite) robust against the effects of decoherence <ref> [16] </ref> and [38]. Quantum computation touches upon the foundations of both computer science and quantum physics. The nature of quantum physics was clarified by the Einstein-Podolsky-Rosen paradox and Bell's inequalities (discussed in [25]) which demonstrate the difference between its statistical properties and those of any "classical" model.
Reference: [17] <author> Chirac and Zoller, </author> <title> Quantum computation using trapped cold ions, </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: The former bound is tight since recent work of Grover [28] shows how to accept the class NP relative to any oracle on a quantum computer in time O (2 n=2 ). Several designs have been proposed for realizing quantum computers <ref> [17] </ref>, [23]. A number of authors have argued that there are fundamental problems in building quantum computers, most notably the effects of the decoherence of quantum superpositions, or the entanglement of the system with the environment.
Reference: [18] <author> Chuang, I., LaFlamme, R., Shor, P., and Zurek, W., </author> <title> Quantum computers, factoring and decoherence, </title> <type> manuscript, </type> <year> 1995. </year>
Reference: [19] <editor> Cohen-Tannoudji, C., Diu, B., LaLoe, F., </editor> <booktitle> Quantum mechanics, </booktitle> <year> 1977, </year> <pages> pp. 108-181. </pages>
Reference: [20] <author> Deutsch, D., </author> <title> Quantum theory, the Church-Turing principle and the universal quantum computer, </title> <journal> Proc. R. Soc. Lond., </journal> <volume> A400(1985), </volume> <pages> pp. 97-117. </pages>
Reference-contexts: A precise model of a quantum physical computer hereafter referred to as the quantum Turing Machine was formulated by Deutsch <ref> [20] </ref>. There are two ways of thinking about quantum computers. <p> Moreover, the simulation time is bounded by a polynomial in T , jxj, and 1=*. Deutsch <ref> [20] </ref> gave a different construction of a universal quantum Turing Machine. The simulation overhead in Deutsch's construction is exponential in T (the issue Deutsch was interested in was computability, not computational complexity). The structure of the efficient universal quantum Turing Machine constructed in this paper is very simple. <p> For completeness, let us recall the definition of a deterministic TM. There are many standard variations to the definition of deterministic TM, none of which affect their computational power. In this paper we will make our choices consistent with those in Deutsch's paper <ref> [20] </ref>: we consider TMs with a two-way infinite tape and a single tape head which must move left or right one square on each step. We also give standard definitions for interpreting the input, output, and running time of a deterministic TM. <p> A TM which halts on all inputs therefore computes a function from ( #) fl to fl . We now give a slightly modified version of the definition of a QTM provided by Deutsch <ref> [20] </ref>. As in the case of probabilistic TM, we must limit the transition amplitudes to efficiently computable numbers. Adleman, et. al. [1] and Solovay and Yao [40] have separately shown that further restricting QTMs to rational amplitudes does not reduce their computational power. <p> We will show in this section that reversible TMs are a special case of QTMs. So, as Deutsch <ref> [20] </ref> noted, Bennett's result allows any desired deterministic computation to be carried out on a QTM.
Reference: [21] <author> Deutsch, D., </author> <title> Quantum computational networks, </title> <journal> Proc. R. Soc. Lond., </journal> <volume> A425(1989), </volume> <pages> pp. 73-90. </pages>
Reference-contexts: Yao [46] showed that these models are polynomially equivalent to the basic model, as are quantum circuits (which were introduced in <ref> [21] </ref>. The efficiency of Yao's simulation has been improved in [10] to show that the simulation overhead is a polynomial with degree independent of the number of tapes. Arguably, the full computational power of quantum physics for discrete systems is captured by the quantum analog of a cellular automaton. <p> The decomposition of an arbitrary unitary transformation into a product of simple unitary transformations is similar to work carried out by Deutsch <ref> [21] </ref>. Deutsch's work, although phrased in terms of quantum computation networks, can be viewed as showing that a d dimensional unitary transformation can be decomposed into a product of transformations where each applies a particular unitary transformation to 3 dimensions and acts as the identity elsewhere.
Reference: [22] <author> Deutsch, D. and Jozsa, R., </author> <title> Rapid solution of problems by quantum computation, </title> <journal> Proc. R. Soc. Lond., </journal> <volume> A439(1992), </volume> <pages> pp. 553-558. </pages>
Reference-contexts: This problem has been solved in the special case of linearly bounded quantum cellular automata [24, 45]. Finally, several researchers have explored the computational power of quantum Turing Machines. Early work by Deutsch and Jozsa <ref> [22] </ref> showed how to exploit some inherently quantum mechanical features of QTMs. <p> Given a boolean function g : Z n 2 ! f1; 1g, we may define a function f : Z n 2 ! C of norm 1 by letting f (x) = g (x)=2 n=2 . Following Deutsch and Josza <ref> [22] </ref> if g is a polynomial time computable function, there is a QTM that produces the superposition P x2f0;1g n g (x)jxi in time polynomial in n.
Reference: [23] <author> DiVincenzo, D., </author> <title> Two-bit gates are universal for quantum computation, </title> <journal> Phys. Rev. A, </journal> <volume> 51(1995), </volume> <pages> pp. 1015-1022. </pages>
Reference-contexts: The former bound is tight since recent work of Grover [28] shows how to accept the class NP relative to any oracle on a quantum computer in time O (2 n=2 ). Several designs have been proposed for realizing quantum computers [17], <ref> [23] </ref>. A number of authors have argued that there are fundamental problems in building quantum computers, most notably the effects of the decoherence of quantum superpositions, or the entanglement of the system with the environment.
Reference: [24] <author> D urr, C., Santha, M., Thanh, </author> <title> A decision procedure for well-formed linear quantum cellular automata, </title> <booktitle> RAC workshop, </booktitle> <address> Berkeley, </address> <year> 1995. </year>
Reference-contexts: The difficulty has to do with decomposing a unitary transformation that represents many overlapping sites of activity into a product of simple, local unitary transformations. This problem has been solved in the special case of linearly bounded quantum cellular automata <ref> [24, 45] </ref>. Finally, several researchers have explored the computational power of quantum Turing Machines. Early work by Deutsch and Jozsa [22] showed how to exploit some inherently quantum mechanical features of QTMs.
Reference: [25] <author> Feynman, R., </author> <title> Simulating physics with computers, </title> <journal> International Journal of Theoretical Physics, </journal> <volume> 21(1982), </volume> <pages> pp. 467-488. </pages>
Reference-contexts: The issue of the extra computational power of quantum mechanics over probabilistic computers was first raised by by Feynman <ref> [25] </ref> in 1982. In that paper, Feynman pointed out a very curious problem: the natural simulation of a quantum physical system on a probabilistic Turing Machine requires an exponential slowdown. Moreover, it is unclear how to carry out the simulation more efficiently. <p> Quantum computation touches upon the foundations of both computer science and quantum physics. The nature of quantum physics was clarified by the Einstein-Podolsky-Rosen paradox and Bell's inequalities (discussed in <ref> [25] </ref>) which demonstrate the difference between its statistical properties and those of any "classical" model. The computational differences between quantum and classical physics are if anything more striking, and can be expected to offer new insights into the nature of quantum physics. <p> However, an experiment demonstrating the exponential speedup offered by quantum computation over classical computation would establish that something like the exponentially large Hilbert space must exist. Finally, it is important, as Feynman pointed out <ref> [25] </ref>, to clarify the computational overhead required to simulate a quantum mechanical system.
Reference: [26] <author> Feynman, R., </author> <title> Quantum mechanical computers, </title> <journal> Foundations of Physics, </journal> <volume> 16(1986), </volume> <pages> pp. 507-531. </pages> <note> (Originally appeared in Optics News, </note> <month> February </month> <year> 1985.) </year>
Reference-contexts: Taking limits, we get that ( ^ U x; y) = (x; ^ U fl y), as desired. As an aside, we should briefly mention that another resolution of this issue is achieved by following Feynman <ref> [26] </ref>, who suggested that if we use a quantum mechanical system with Hamiltonian U + U fl , then the resulting system has a local, time invariant Hamiltonian. It is easy to probabilistically recover the computation of the original system from the computation of the new one.
Reference: [27] <author> Fredkin, E., and Toffoli, T., </author> <title> Conservative Logic, </title> <journal> Internat. J. Theoret. Phys., </journal> <volume> 21(1982), </volume> <editor> p. </editor> <volume> 219. </volume>
Reference: [28] <author> Grover, L., </author> <title> Searching for a needle in a haystack a fast quantum mechanical algorithm, </title> <type> manuscript, </type> <year> 1995. </year>
Reference-contexts: They also show that relative to a permutation oracle chosen uniformly at random, with probability 1, the class NP " co-NP cannot be solved on a quantum Turing Machine in time o (2 n=3 ). The former bound is tight since recent work of Grover <ref> [28] </ref> shows how to accept the class NP relative to any oracle on a quantum computer in time O (2 n=2 ). Several designs have been proposed for realizing quantum computers [17], [23].
Reference: [29] <author> Landauer, R., </author> <title> Is quantum mechanics useful?, </title> <journal> Proc. R. Soc. Lond., </journal> <note> to appear. </note>
Reference: [30] <author> Lipton, R., </author> <type> Personal communication, </type> <year> 1994. </year>
Reference-contexts: In this paper, we show in a similar sense, that quantum Turing Machines are discrete devices: the transition amplitudes need only be accurate to O (log T ) bits of precision to support T steps of computation. As Lipton <ref> [30] </ref> pointed out, it is crucial that the number of bits is O (log T ) and not O (T ) (as it was in an early version of this paper), since k bits of precision requires pinning down the transition amplitude to one part in 2 k . <p> In an earlier version of this paper, we showed that T O (1) bits of precision are sufficient to correctly carry out T steps of computation to within accuracy * for any constant *. Lipton <ref> [30] </ref> pointed out that for the device to be regarded as a discrete device, we must require that its transition amplitudes be specified to at most one part in T O (1) (as opposed to accurate to within T O (1) bits of precision).
Reference: [31] <author> Lloyd, S., </author> <title> A potentially realizable quantum computer, </title> <journal> Science, </journal> <volume> 261(1993), </volume> <pages> pp. 1569-1571. </pages>
Reference: [32] <author> Machta, J., </author> <title> Phase information in quantum oracle computing, </title> <institution> Physics Department, University of Massachusetts at Amherst, </institution> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: For example, oracles that perform more general, non-Boolean unitary operations have been considered in computational learning theory [15], and used to obtain large separations <ref> [32] </ref> between quantum and classical relativized complexity classes. See [9] for a discussion of more general definitions of oracle quantum computing. 8.4 Fourier Sampling and the power of QTMs In this section we give evidence that QTMs are more powerful than bounded-error probabilistic TMs.
Reference: [33] <author> Morita, K., Shirasaki, A., and Gono, Y., </author> <title> A 1-tape 2-symbol reversible Turing Machine, </title> <journal> IEEE Transactions of the IEICE, </journal> <volume> E72(1989), </volume> <pages> pp. </pages> <month> 223-228. </month> <title> [34] von Neumann J., Various Techniques Used in Connection with Random Digits, Notes by G. E. Forsythe, National Bureau of Standards, </title> <journal> Applied Math Series, </journal> <volume> 12(1951), </volume> <pages> pp. 36-38. </pages> <booktitle> Reprinted in von Neumann's Collected Works, </booktitle> <volume> 5(1963), </volume> <publisher> Pergamon Press, </publisher> <pages> pp. 768-770. </pages>
Reference-contexts: For both constructions, he used a multi-tape TM and also suggested how the simulation could be carried out using only a single-tape machine. Morita et.al. <ref> [33] </ref> use Bennett's ideas, and some further techniques, to show that any deterministic TM can be simulated by a generalized reversible TM with a two symbol alphabet. We will give a slightly different simulation of a deterministic TM with a reversible machine that preserves an important timing property. <p> Again, this means that c can have only one predecessor. 2 We will prove the Synchronization Theorem in the following way. Using ideas from the constructions of Bennett [7] and Morita et.al. <ref> [33] </ref>, we will show that given any deterministic TM M there is a reversible multi-track TM which on input x produces output x; M (x), and whose running time depends only on the sequence of head movements of M on input x.
Reference: [35] <author> Palma, G., Suominen, K., and Ekert, A., </author> <title> Quantum computers and dissipation, </title> <type> manuscript, </type> <year> 1995. </year>
Reference: [36] <author> A. Shamir., IP=PSPACE, </author> <booktitle> Proceedings of the 22nd ACM Symposium on the Theory of Computing, </booktitle> <year> 1990, </year> <pages> pp. 11-15. </pages>
Reference-contexts: More importantly, Simon's paper also introduced an important new technique which was one of the ingredients in a remarkable result proved subsequently by Shor <ref> [36] </ref>. Shor gave polynomial time quantum algorithms for the factoring and discrete log problems. These two problems have been well-studied, and their presumed intractability forms the basis of much of modern cryptography. These results have injected a greater sense of urgency to the actual implementation of a quantum computer. <p> This result provided the first evidence that QTMs are more powerful than classical probabilistic TMs with bounded error probability [11]. One could ask what the relevance of these oracle results is, in view of the non-relativizing results on probabilistically checkable proofs <ref> [36, 3] </ref>. Moreover, Arora et al. [2] make the case that the fact that the P versus NP question relativizes does not imply that the question "cannot be resolved by current techniques in complexity theory". <p> the other hand, in our oracle results (and also in the subsequent results of [39]), the key property of oracles that is exploited is their back-box nature, and for the reasons sketched below, these results did indeed provide strong evidence that BQP 6= BPP (of course, the later results of <ref> [36] </ref> gave even stronger evidence).
Reference: [37] <author> Shor, P., </author> <title> Algorithms for quantum computation: Discrete log and factoring, </title> <booktitle> Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference: [38] <author> Shor, P., </author> <title> Fault-tolerant quantum computation, </title> <booktitle> Proceedings of the 37th Annual IEEE Symposium on the Foundations of Computer Science, </booktitle> <year> 1996. </year>
Reference-contexts: Very recently, there have been a sequence of important results showing how to implement quantum error-correcting codes and also use these codes to make quantum algorithms (quite) robust against the effects of decoherence [16] and <ref> [38] </ref>. Quantum computation touches upon the foundations of both computer science and quantum physics. The nature of quantum physics was clarified by the Einstein-Podolsky-Rosen paradox and Bell's inequalities (discussed in [25]) which demonstrate the difference between its statistical properties and those of any "classical" model.
Reference: [39] <editor> Simon, D., </editor> <booktitle> On the power of quantum computation, Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: A detailed discussion about the implications of these oracle results is in the introduction to x8.4. Simon <ref> [39] </ref> subsequently strengthened our result in the time parameter by proving the existence of an oracle relative to which a certain problem can be solved in polynomial time on a quantum Turing Machine, but cannot be solved in less than 2 n=2 steps on a probabilistic Turing Machine (Simon's problem is <p> Moreover, Arora et al. [2] make the case that the fact that the P versus NP question relativizes does not imply that the question "cannot be resolved by current techniques in complexity theory". On the other hand, in our oracle results (and also in the subsequent results of <ref> [39] </ref>), the key property of oracles that is exploited is their back-box nature, and for the reasons sketched below, these results did indeed provide strong evidence that BQP 6= BPP (of course, the later results of [36] gave even stronger evidence).
Reference: [40] <author> Solovay, R., and Yao, A., </author> <type> manuscript, </type> <year> 1996. </year>
Reference-contexts: Adleman, et. al. [1] and Solovay and Yao <ref> [40] </ref> have further clarified this point by showing that quantum coin flips with amplitudes 3=5 and 4=5 are sufficient for universal quantum computation. Quantum computation is necessarily time reversible, since quantum physics requires unitary evolution. <p> We now give a slightly modified version of the definition of a QTM provided by Deutsch [20]. As in the case of probabilistic TM, we must limit the transition amplitudes to efficiently computable numbers. Adleman, et. al. [1] and Solovay and Yao <ref> [40] </ref> have separately shown that further restricting QTMs to rational amplitudes does not reduce their computational power. In fact, they have shown that the set of amplitudes f0; 3 5 ; 4 5 ; 1g are sufficient to construct a universal QTM. <p> Note that a single copy of this fixed rotation gives the only "non-classical" amplitudes (those other than 0; 1) in the transition function of the universal QTM constructed below. See Adleman, et. al. [1] and Solovay and Yao <ref> [40] </ref> for the constructions of universal QTMs whose amplitudes are restricted to a small set of rationals.
Reference: [41] <author> Toffoli, T., </author> <title> Bicontinuous extensions of invertible combinatorial functions, </title> <journal> Mathematical Systems Theory, </journal> <volume> 14(1981), </volume> <pages> pp. 13-23. </pages>
Reference: [42] <author> Unruh, W., </author> <title> Maintaining coherence in quantum computers, </title> <journal> Phys. Rev. A, </journal> <volume> 51(1995), </volume> <editor> p. </editor> <volume> 992. </volume>
Reference: [43] <author> Valiant, L., </author> <type> Personal communication, </type> <year> 1992. </year>
Reference-contexts: So, using only polynomial space, we can step through all of these configurations computing a running sum of the their squared magnitudes. 2 Following Valiant's suggestion <ref> [43] </ref>, the upper bound can be further improved to P ]P .
Reference: [44] <author> Vazirani, U. and Vazirani, V., </author> <title> Random polynomial time is equal to semi-random polynomial time, </title> <booktitle> Proceedings of the 26th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1985. </year>
Reference-contexts: However, there is extensive work showing that probabilistic computation can be carried out in a such a way that it is so insensitive to the transition probabilities that they can be allowed to vary arbitrarily in a large range <ref> [34, 44, 47] </ref>. In this paper, we show in a similar sense, that quantum Turing Machines are discrete devices: the transition amplitudes need only be accurate to O (log T ) bits of precision to support T steps of computation.
Reference: [45] <author> Watrous, J., </author> <title> On one dimensional quantum cellular automata, </title> <booktitle> Proceedings of the 36th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1995. </year>
Reference-contexts: The difficulty has to do with decomposing a unitary transformation that represents many overlapping sites of activity into a product of simple, local unitary transformations. This problem has been solved in the special case of linearly bounded quantum cellular automata <ref> [24, 45] </ref>. Finally, several researchers have explored the computational power of quantum Turing Machines. Early work by Deutsch and Jozsa [22] showed how to exploit some inherently quantum mechanical features of QTMs.
Reference: [46] <author> Yao, A., </author> <title> Quantum circuit complexity, </title> <booktitle> Proceedings of the 34th Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1993, </year> <pages> pp. 352-361. </pages>
Reference-contexts: An earlier version of this work [11] left open the question of whether standard variants of a quantum Turing Machine, such as machines with multiple tapes or with modified tape access, are more powerful than the basic model. Yao <ref> [46] </ref> showed that these models are polynomially equivalent to the basic model, as are quantum circuits (which were introduced in [21]. The efficiency of Yao's simulation has been improved in [10] to show that the simulation overhead is a polynomial with degree independent of the number of tapes.
Reference: [47] <author> Zuckerman, D., </author> <title> Weak Random Sources, </title> <type> PhD dissertation, </type> <institution> U.C. Berkeley, </institution> <year> 1990. </year> <month> 64 </month>
Reference-contexts: However, there is extensive work showing that probabilistic computation can be carried out in a such a way that it is so insensitive to the transition probabilities that they can be allowed to vary arbitrarily in a large range <ref> [34, 44, 47] </ref>. In this paper, we show in a similar sense, that quantum Turing Machines are discrete devices: the transition amplitudes need only be accurate to O (log T ) bits of precision to support T steps of computation.
References-found: 46

