URL: http://dc.isx.com/~bkettle/Papers/iccbr97.ps
Refering-URL: 
Root-URL: 
Email: Kathryn Sanders@brown.edu  bkettler@isx.com  hendler@cs.umd.edu  
Phone: 2  3  
Title: The Case for Graph-Structured Representations  
Author: Kathryn E. Sanders and Brian P. Kettler and James A. Hendler 
Address: Providence, RI 02912,  2000 N. 15th St., Suite 1000, Arlington, VA 22201,  College Park, MD 20742,  
Affiliation: 1 Computing and Information Services, Brown University,  ISX Corporation,  Dept. of Computer Science, University of Maryland,  
Abstract: Case-based reasoning involves reasoning from cases: specific pieces of experience, the reasoner's or another's, that can be used to solve problems. We use the term "graph-structured" for representations that (1) are capable of expressing the relations between any two objects in a case, (2) allow the set of relations used to vary from case to case, and (3) allow the set of possible relations to be expanded as necessary to describe new cases. Such representations can be implemented as, for example, semantic networks or lists of concrete propositions in some logic. We believe that graph-structured representations offer significant advantages, and thus we are investigating ways to implement such representations efficiently. We make a "case-based argument" using examples from two systems, chiron and caper, to show how a graph-structured representation supports two different kinds of case-based planning in two different domains. We discuss the costs associated with graph-structured representations and describe an approach to reducing those costs, imple mented in caper.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Alterman. </author> <title> Adaptive planning. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 393-421, </pages> <year> 1988. </year>
Reference: 2. <author> W. A. Andersen, J. A. Hendler, M. P. Evett, and B. P. Kettler. </author> <title> Massively parallel matching of knowledge structures. </title> <editor> In H. Kitano and J. Hendler, editors, </editor> <booktitle> Massively Parallel Artificial Intelligence, </booktitle> <pages> pages 52-73. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <address> Menlo Park, California, </address> <year> 1994. </year>
Reference-contexts: the cost of matching. paradyme, for example, is a massively parallel frame system that has been used to implement a memory for a CBR system [18]. 6 In caper, the massively parallel mechanisms of the Parka Structure Matcher are used to match a probe graph to caper's semantic network memory <ref> [2] </ref>. 7 To evaluate the average-case behavior of matching a (labelled) probe graph to a subgraph of caper's (labelled) memory graph, we have done some preliminary experiments. We generated representative retrieval probes for a transport logistics domain and recorded the time taken to process them by the Parka Structure Matcher. <p> The complexity of the underlying subgraph-matching algorithm on actual casebases is much less than the worst case complexity (exponential in the number of binary constraints). For a detailed analysis of the algorithm, see <ref> [2] </ref>. As the size of the casebases grow, additional processors result in subsecond 6 For a comparison of paradyme to Parka, see [9] and [15]. 7 A sample memory graph is shown in Figure 2.
Reference: 3. <author> K. D. Ashley. </author> <title> Modelling legal argument: reasoning with cases and hypotheticals. </title> <type> Technical Report 88-01, </type> <institution> University of Massachusetts, Amherst, Department of Computer and Information Science, </institution> <year> 1988. </year> <type> (PhD Thesis). </type>
Reference-contexts: Next, it computes a mapping between the facts of each case and the facts of the current situation, in order to determine the overlap between the two, and sorts the cases by inserting them into a hypo-style case lattice <ref> [3] </ref>.
Reference: 4. <author> K. D. Ashley. </author> <title> Modelling legal argument: reasoning with cases and hypotheticals. </title> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference-contexts: Balancing the need for an expressive representation with efficiency considerations, most CBR systems have used representations that fall between feature-based and graph-structured. For example, several systems include some relational information but use the same structure for each case (e.g., <ref> [4, 8] </ref>). Graph-structured representations are more expressive, but at a significant computational cost. We believe that graph-structured representations offer significant advantages, and thus we are investigating ways to implement such representations efficiently.
Reference: 5. <author> N. J. Belkin and W. B. Croft. </author> <title> Retrieval techniques. </title> <journal> Annual Review of Information Science and Technology, </journal> <volume> 22 </volume> <pages> 109-145, </pages> <year> 1987. </year>
Reference-contexts: In this paper, we adopt the term "feature-based," used to describe these simple IR representations <ref> [5] </ref>, and use it to denote any representation that expresses facts about individual objects in a case without relating them to each other. Such representations may be implemented using a set of attribute-value pairs, a feature vector, or frames with atomic slot-fillers.
Reference: 6. <author> L. K. Branting. </author> <title> Integrating rules and precedents for classification and explanation: automating legal analysis. </title> <type> Technical Report AI90-146, </type> <institution> Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin, </institution> <year> 1990. </year> <type> (PhD Thesis). </type>
Reference-contexts: Altogether, there are probably no more than fifteen possible mappings for any case, and the search could be pruned so that not all of these are examined (as done in grebe <ref> [6] </ref>). For a small casebase, in a domain where instantaneous response time is not required, chi-ron's response times (typically three to five minutes per problem) are tolerable. Still, the time required for matching is significant, and increases linearly with the size of the casebase.
Reference: 7. <author> B. Cuthill and R. </author> <title> McCartney. Issue spotting in legal cases. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Intelligence and Law, Amsterdam, </booktitle> <pages> pages 245-253, </pages> <year> 1993. </year>
Reference-contexts: For example, chef indexes cooking plans under their main ingredients and cooking failures under sets of causally relevant features [12]. Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses <ref> [7] </ref>. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in [20, 16, 15]).
Reference: 8. <author> E. Domeshek. </author> <title> What Abby cares about. </title> <booktitle> In Proceedings of the Workshop on Case-Based Reasoning, </booktitle> <pages> pages 13-24, </pages> <year> 1991. </year>
Reference-contexts: Balancing the need for an expressive representation with efficiency considerations, most CBR systems have used representations that fall between feature-based and graph-structured. For example, several systems include some relational information but use the same structure for each case (e.g., <ref> [4, 8] </ref>). Graph-structured representations are more expressive, but at a significant computational cost. We believe that graph-structured representations offer significant advantages, and thus we are investigating ways to implement such representations efficiently.
Reference: 9. <author> M. P. Evett, J. A. Hendler, and L. Spector. </author> <title> Parallel knowledge representation on the Connection Machine. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 22 </volume> <pages> 168-184, </pages> <year> 1994. </year>
Reference-contexts: For a detailed analysis of the algorithm, see [2]. As the size of the casebases grow, additional processors result in subsecond 6 For a comparison of paradyme to Parka, see <ref> [9] </ref> and [15]. 7 A sample memory graph is shown in Figure 2. The probe graph contains nodes that are constants or variables and links that are constants (predicates). Fig. 3.
Reference: 10. <author> B. Falkenhainer, K. D. Forbus, and D. Gentner. </author> <title> The structure-mapping engine: Algorithm and examples. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 1-63, </pages> <year> 1990. </year>
Reference: 11. <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: For hybrid representations with fixed structures, it is also linear. Using a graph-structured representation increases the computational cost of matching. If cases were represented as unlabelled graphs, matching would be the subgraph isomorphism problem, which is NP-complete <ref> [11] </ref>. If the graphs had node labels and no node label ever occurred more than once in a given case, matching would be linear in the sum of the number of nodes and the number of edges.
Reference: 12. <author> K. J. Hammond. </author> <title> Case-based planning: A framework for planning from experience. </title> <journal> Cognitive Science, </journal> <volume> 14 </volume> <pages> 384-443, </pages> <year> 1990. </year>
Reference-contexts: Feature-based techniques are often employed such as the construction of a discrimination network using selected case features (attributes). For example, chef indexes cooking plans under their main ingredients and cooking failures under sets of causally relevant features <ref> [12] </ref>. Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [7]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time.
Reference: 13. <author> K. J. Holyoak and P. R. Thagard. </author> <title> Analogical mapping by constraint satisfaction. </title> <booktitle> Cognitive Science, </booktitle> <pages> pages 295-355, </pages> <year> 1989. </year>
Reference: 14. <author> S. Kambhampati and J. A. Hendler. </author> <title> A validation-structure-based theory of plan modification and reuse. </title> <journal> Artificial Intelligence, </journal> <volume> 55 </volume> <pages> 193-258, </pages> <year> 1992. </year>
Reference-contexts: Domain knowledge and planning techniques are used to form probes at case retrieval time. Multiple plans (or sub-plans) can be retrieved and merged into a target plan using stored plan rationale (validations) and methods based on those used in the priar system <ref> [14] </ref>. caper is being tested in our (artificial) transport logistics planning domain. caper's semantic network memory is implemented using Parka, a high, performance frame-based knowledge representation system.[9]. 5 A case includes the goals, initial situation, and plan/subplan hierarchy, and plan validation structures for a planning problem. during plan adaptation and plan
Reference: 15. <author> B. P. Kettler. </author> <title> Case-based Planning with a High Performance Parallel Memory. </title> <type> Doctoral dissertation, </type> <institution> University of Maryland at College Park, Dept. of Computer Science, </institution> <month> November </month> <year> 1995. </year> <note> Technical Report CS-TR-3561. </note>
Reference-contexts: We discuss the costs associated with graph-structured representations and describe an approach to reducing those costs, implemented in caper. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in [22] and <ref> [15] </ref>. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> the prototype and previous successful cases of a given strategy), and if so, also uses the lattice to generate hypo-style arguments for and against the success of a plan. caper is a case-based planning system that makes use of massive parallelism to access a large casebase (currently several hundred cases) <ref> [16, 15] </ref>. caper uses graph-structured representations for cases and conceptual knowledge, implemented as a single semantic network. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [7]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [20, 16, 15] </ref>). <p> The purpose of these experiments was to assess the absolute parallel retrieval times and the scalability of the parallel methods used, for a variety of representative retrieval probes (generated by hand) and casebase sizes. The probes were matched to non-pre-indexed casebases of varying sizes. Details can be found in <ref> [15] </ref>. Probes (structure-matching queries) were run on a 1, 8, and 16 processor configuration of an IBM SP2 parallel processing computer on a 200 case casebase (8130 component plans represented by 116728 Parka frames and 1746060 Parka assertions). <p> For a detailed analysis of the algorithm, see [2]. As the size of the casebases grow, additional processors result in subsecond 6 For a comparison of paradyme to Parka, see [9] and <ref> [15] </ref>. 7 A sample memory graph is shown in Figure 2. The probe graph contains nodes that are constants or variables and links that are constants (predicates). Fig. 3. <p> not indexed, the initial casebase acquisition process is completely automated. 5 Related Work and Conclusions Other CBR and analogical reasoning systems that have used graph-structured representations include plexus, grebe, and cookie, arcs, acme and sme.[1, 6, 19, 24, 13, 10] Space limitations prohibit detailed discussion of these systems here (see <ref> [15] </ref>). In this paper we have argued for graph-structured case representations, which express arbitrary relations among objects in a flexible way, over more limited or inflexible methods, illustrating the distinction between these kinds of representations with examples of information retrieval systems, CBR systems, and computational models of human analogical reasoning.
Reference: 16. <author> B. P. Kettler, J. A. Hendler, W. A. Andersen, and M. P. Evett. </author> <title> Massively parallel support for case-based planning. </title> <journal> IEEE Expert, </journal> <pages> pages 8-14, </pages> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: the prototype and previous successful cases of a given strategy), and if so, also uses the lattice to generate hypo-style arguments for and against the success of a plan. caper is a case-based planning system that makes use of massive parallelism to access a large casebase (currently several hundred cases) <ref> [16, 15] </ref>. caper uses graph-structured representations for cases and conceptual knowledge, implemented as a single semantic network. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [7]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [20, 16, 15] </ref>).
Reference: 17. <author> J. L. Kolodner. </author> <title> Case-Based Reasoning. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, California, </address> <year> 1993. </year>
Reference-contexts: By "reasonably complete," we mean a representation 4 We use "indexing" to mean the use of pointers for case retrieval, rather than a more recent, broader interpretation of "indexing" that includes any domain knowledge used in the retrieval of cases (e.g., <ref> [17] </ref>). 5 Parka runs on parallel platforms (Thinking Machines' CM-2 and CM-5, IBM SP2, and others) and provides very fast inferencing mechanisms. A serial version of Parka has also been developed. Fig. 1. Part of chiron's representation of Hughston v.
Reference: 18. <author> J. L. Kolodner and R. Thau. </author> <title> Design and implementation of a case memory. </title> <type> Technical Report RL88-1, </type> <institution> Thinking Machines Corporation, </institution> <address> Cambridge, Mass., </address> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: A few systems have used parallel techniques to reduce the cost of matching. paradyme, for example, is a massively parallel frame system that has been used to implement a memory for a CBR system <ref> [18] </ref>. 6 In caper, the massively parallel mechanisms of the Parka Structure Matcher are used to match a probe graph to caper's semantic network memory [2]. 7 To evaluate the average-case behavior of matching a (labelled) probe graph to a subgraph of caper's (labelled) memory graph, we have done some preliminary
Reference: 19. <author> R. </author> <title> McCartney. Episodic cases and real-time performance in a case-based planning system. </title> <journal> Expert Systems with Applications, </journal> <volume> 6 </volume> <pages> 9-22, </pages> <year> 1993. </year>
Reference: 20. <author> R. McCartney and K. E. Sanders. </author> <title> The case for cases: a call for purity in case-based reasoning. </title> <booktitle> In Proceedings of the AAAI Symposium on Case-based Reasoning, </booktitle> <pages> pages 12-16, </pages> <year> 1990. </year>
Reference-contexts: A serial version of Parka has also been developed. Fig. 1. Part of chiron's representation of Hughston v. Commissioner. that includes all the information about a case that is likely to be useful. As argued in <ref> [20] </ref>, in order to maximize their usefulness, case representations should be as complete as possible. Complete representations increase a system's reasoning power: a system cannot reason with information that it does not have. In particular, a graph-structured representation makes it possible to express the relations between objects. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [7]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [20, 16, 15] </ref>).
Reference: 21. <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufman, </publisher> <address> San Mateo, California, </address> <year> 1980. </year>
Reference-contexts: Such representations can be implemented, for example, as semantic networks or lists of concrete propositions in some logic. Whether the representation is implemented as a list of propositions or as a graph is immaterial, since there is a simple translation from propositional to graph representation <ref> [21] </ref>. Balancing the need for an expressive representation with efficiency considerations, most CBR systems have used representations that fall between feature-based and graph-structured. For example, several systems include some relational information but use the same structure for each case (e.g., [4, 8]).
Reference: 22. <author> K. E. Sanders. Chiron: </author> <title> planning in an open-textured domain. </title> <type> Technical Report 94-38, </type> <institution> Computer Science Department, Brown University, </institution> <year> 1994. </year> <type> (PhD Thesis). </type>
Reference-contexts: We discuss the costs associated with graph-structured representations and describe an approach to reducing those costs, implemented in caper. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in <ref> [22] </ref> and [15]. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> Node labels correspond to unary predicates on a given object. For example, Hughston is a lawyer; house1 is both a house and real property; Shell-Oil-Company is a corporation; and so forth. For the actual representation and the original text of the case, see <ref> [22] </ref>. In this case, the taxpayer, Hughston, was a lawyer for Shell Oil, in Texas. When he was transferred to a new location in Texas, he sold his old house (which had a bathroom with a tile floor) and bought another, closer to his new place of work.
Reference: 23. <author> K. Stoffel, M. G. Taylor, and J. A. Hendler. </author> <title> Efficient management for very large ontologies. </title> <booktitle> In Fifteenth National Conference on Artificial Intelligence (AAAI 97), </booktitle> <pages> page (submitted), </pages> <year> 1997. </year>
Reference: 24. <author> P. R. Thagard, K. J. Holyoak, C. Nelson, and D. Gochfeld. </author> <title> Analog retrieval by constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 46 </volume> <pages> 259-310, </pages> <year> 1990. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
References-found: 24

