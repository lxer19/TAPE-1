URL: http://ic-www.arc.nasa.gov/ic/projects/mba/papers/livingstone.ps
Refering-URL: http://ic-www.arc.nasa.gov/ic/projects/mba/index.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: E-mail: williams,nayak@ptolemy.arc.nasa.gov  
Title: A Model-based Approach to Reactive Self-Configuring Systems  
Author: Brian C. Williams and P. Pandurang Nayak 
Address: MS 269-2 Moffett Field, CA 94305 USA  
Affiliation: Recom Technologies, NASA Ames Research Center,  
Abstract: This paper describes Livingstone, an implemented kernel for a model-based reactive self-configuring autonomous system. It presents a formal characterization of Livingstone's representation formalism, and reports on our experience with the implementation in a variety of domains. Livingstone provides a reactive system that performs significant deduction in the sense/response loop by drawing on our past experience at building fast propositional conflict-based algorithms for model-based diagnosis, and by framing a model-based configuration manager as a propositional feedback controller that generates focused, optimal responses. Livingstone's representation formalism achieves broad coverage of hybrid hardware/software systems by coupling the transition system models underlying concurrent reactive languages with the qualitative representations developed in model-based reasoning. Livingstone automates a wide variety of tasks using a single model and a single core algorithm, thus making significant progress towards achieving a central goal of model-based reasoning. Livingstone, together with the HSTS planning and scheduling engine and the RAPS executive, has been selected as part of the core autonomy architecture for NASA's first New Millennium spacecraft. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Agre, P., and Chapman, D. </author> <year> 1987. </year> <title> Pengi: An implementation of a theory of activity. </title> <booktitle> In Procs. of AAAI-87. </booktitle>
Reference: <author> Brglez, F., and Fujiwara, H. </author> <year> 1985. </year> <title> A neutral netlist of 10 combinational benchmark circuits. </title> <booktitle> In Int. Symp. on Circuits and Systems. </booktitle>
Reference: <author> Brooks, R. A. </author> <year> 1991. </year> <title> Intelligence without reason. </title> <booktitle> In Procs. of IJCAI-91, </booktitle> <pages> 569-595. </pages> <editor> de Kleer, J., and Williams, B. C. </editor> <year> 1987. </year> <title> Diagnosing multiple faults. </title> <booktitle> Artificial Intelligence 32(1) </booktitle> <pages> 97-130. </pages> <editor> de Kleer, J., and Williams, B. C. </editor> <year> 1989. </year> <title> Diagnosis with behavioral modes. </title> <booktitle> In Procs. of IJCAI-89, </booktitle> <pages> 1324-1330. </pages>
Reference: <author> Dressler, O., and Struss, P. </author> <year> 1994. </year> <title> Model-based diagnosis with the default-based diagnosis engine: Effective control strategies that work in practice. </title> <booktitle> In Procs. of ECAI-94. </booktitle>
Reference: <author> Firby, R. J. </author> <year> 1995. </year> <title> The RAP language manual. </title> <note> Working Note AAP-6, </note> <institution> University of Chicago. </institution>
Reference-contexts: Living-stone automates all these tasks using a single model and a single core algorithm, thus making significant progress towards achieving the model-based vision. Livingstone, integrated with the HSTS planning and closed, while the others are open. scheduling system (Muscettola 1994) and the RAPS executive <ref> (Firby 1995) </ref>, was demonstrated to successfully navigate the simulated NewMaap spacecraft into Saturn orbit during its one hour insertion window, despite about half a dozen failures. Consequently, Liv-ingstone, RAPS, and HSTS have been selected to fly Deep Space 1, forming the core autonomy architecture of NASA's New Millennium program.
Reference: <author> Kuipers, B., and Astrom, K. </author> <year> 1994. </year> <title> The composition and validation of heterogenous control laws. </title> <type> Automatica 30(2) </type> <pages> 233-249. </pages>
Reference: <author> Manna, Z., and Pnueli, A. </author> <year> 1992. </year> <title> The Temporal Logic of Reactive and Concurrent Systems: Specification. </title> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Second, our modeling formalism represents a radical shift from first order logic, traditionally used to characterize model-based diagnostic systems. It achieves broad coverage of hybrid hardware/software systems by coupling the transition system models underlying concurrent reactive languages <ref> (Manna & Pnueli 1992) </ref> with the qualitative representations developed in model-based reasoning. Reactivity is respected by restricting the model to concurrent propositional transition systems that are synchronous. Third, the long held vision of model-based reasoning has been to use a single central model to support a diversity of engineering tasks. <p> First-order formulations, though expressive, are overly general and do not lend themselves to efficient reasoning. Propositional formulations lend themselves to efficient reasoning, but are inadequate for representing concepts such as state change. Hence, we use a concurrent transition system formulation and a temporal logic specification <ref> (Manna & Pnueli 1992) </ref> as a starting point for modeling hardware and software. Components operate concurrently, communicating over "wires," and hence can be modeled as concurrent communicating transition systems. <p> It represents an important step toward our goal of developing a fully model-based autonomous system (Williams 1996). Three technical features of Livingstone are particularly worth highlighting. First, our modeling formalism achieves broad coverage of hybrid hardware/software systems by coupling the transition system models underlying concurrent reactive languages <ref> (Manna & Pnueli 1992) </ref> with the qualitative representations developed in model-based reasoning. Second, we achieve a reactive system that performs significant deduction in the sense/response loop by using propositional transition systems, qualitative models, and synchronous components transitions.
Reference: <author> Muscettola, N. </author> <year> 1994. </year> <title> HSTS: Integrating planning and scheduling. </title> <editor> In Fox, M., and Zweben, M., eds., </editor> <title> Intelligent Scheduling. </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Living-stone automates all these tasks using a single model and a single core algorithm, thus making significant progress towards achieving the model-based vision. Livingstone, integrated with the HSTS planning and closed, while the others are open. scheduling system <ref> (Muscettola 1994) </ref> and the RAPS executive (Firby 1995), was demonstrated to successfully navigate the simulated NewMaap spacecraft into Saturn orbit during its one hour insertion window, despite about half a dozen failures.
Reference: <author> Nerode, A., and Kohn, W. </author> <year> 1993. </year> <title> Models for hybrid systems. </title> <editor> In Grossman, R. L. et al, eds., </editor> <title> Hybrid Systems. </title> <publisher> Springer-Verlag. </publisher> <pages> 317-356. </pages>
Reference: <author> Pell, B.; Bernard, D. E.; Chien, S. A.; Gat, E.; Muscet-tola, N.; Nayak, P. P.; Wagner, M. D.; and Williams, B. C. </author> <year> 1996. </year> <title> A remote agent prototype for spacecraft autonomy In Procs. </title> <booktitle> of SPIE Conf. on Optical Science, Engineering, and Instrumentation. </booktitle>
Reference-contexts: Consequently, Liv-ingstone, RAPS, and HSTS have been selected to fly Deep Space 1, forming the core autonomy architecture of NASA's New Millennium program. In this architecture <ref> (Pell et al. 1996) </ref> HSTS translates high-level goals into partially-ordered tokens on resource time-lines. RAPS executes planner tokens by translating them into low-level spacecraft commands while enforcing temporal constraints between tokens. Livingstone tracks spacecraft state and planner tokens, and recon-figures for failed tokens. <p> Implementation and experiments We have implemented Livingstone based on the ideas described in this paper. Livingstone was part of a rapid prototyping demonstration of an autonomous architecture for spacecraft control, together with the HSTS planning/scheduling engine and the RAPS executive <ref> (Pell et al. 1996) </ref>. In this architecture, RAPS further decomposes and orders HSTS output before handing goals to Livingstone.
Reference: <author> Poole, D. </author> <year> 1995. </year> <title> Sensing and acting in the independent choice logic. </title> <booktitle> In Procs. of the AAAI Spring Symp. on Extending Theories of Action, </booktitle> <pages> 163-168. </pages>
Reference: <author> Williams, B. C. </author> <year> 1996. </year> <title> Model-based autonomous systems in the new millennium. </title> <booktitle> In Procs. of AIPS-96. </booktitle>
Reference-contexts: We expect final delivery of Livingstone to this project in 1997. Conclusions In this paper we introduced Livingstone, a reactive, model-based self-configuring system, which provides a kernel for model-based autonomy. It represents an important step toward our goal of developing a fully model-based autonomous system <ref> (Williams 1996) </ref>. Three technical features of Livingstone are particularly worth highlighting. First, our modeling formalism achieves broad coverage of hybrid hardware/software systems by coupling the transition system models underlying concurrent reactive languages (Manna & Pnueli 1992) with the qualitative representations developed in model-based reasoning.
Reference: <author> Zhang, Y., and Mackworth, A. K. </author> <year> 1995. </year> <title> Constraint nets: A semantic model for hybrid dynamic systems. </title> <journal> Journal of Theoretical Computer Science 138(1) </journal> <pages> 211-239. </pages>
References-found: 13

