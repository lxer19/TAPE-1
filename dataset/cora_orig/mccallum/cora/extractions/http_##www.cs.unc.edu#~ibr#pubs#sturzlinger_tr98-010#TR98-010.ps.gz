URL: http://www.cs.unc.edu/~ibr/pubs/sturzlinger_tr98-010/TR98-010.ps.gz
Refering-URL: http://www.cs.unc.edu/~ibr/pubs.html
Root-URL: http://www.cs.unc.edu
Email: stuerzl@cs.unc.edu  
Title: 1 Imaging all Visible Surfaces Or How many Reference Images are needed for Image Based Modeling?  
Author: Wolfgang Strzlinger 
Address: Chapel Hill  
Affiliation: Dept. of Computer Science, University of North Carolina at  
Abstract: Today many systems exist to generate geometric models of existing scenes and objects. However, no accurate data about surface appearance such as colors and textures is stored in this process. Such data can be captured as a series of images that, collectively, capture all surfaces of the object. This work introduces a method to compute a minimal set of camera positions for this purpose. Taking images from the computed positions can then be used to derive a complete set of surface appearance data. A slightly different application of the presented method is the computation of a minimal set of viewpoints for reference images to be used in image-based rendering methods. First a method to determine an optimal set of viewpoint regions for a given scene is introduced. It uses a hierarchical visibility method to preprocess the scene. Then a technique to find an optimal set of viewpoint regions is presented and the solution is used to derive an optimal set of viewpoints. Results and visualizations of the computed solutions are presented.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bekaert P., de Laet F. S., Dutre, P., RenderPark: </author> <title> A Photorealistic Rendering Tool, </title> <note> http://www.cs.kuleuven.ac.be/cwis/research/graphics/RENDERPARK, 1997. </note>
Reference-contexts: Shaft culling [9] is used to speed the refinement process. Note that shaft culling can be optimized in the recursive refinement by temporarily storing the current list of potential occluders during recursive subdivision and using this list during further refinement of the link <ref> [1] </ref>, [6]. For each link created the list of potential occluders is stored for later use. Figure 4 shows pseudo-code. <p> If there is one occluder that occludes the whole shaft, the nodes are mutually invisible and subdivision stops. This test is a simple addition to the shaft-culling test <ref> [1] </ref>. Often there is no single polygon that blocks the shaft completely. This causes unnecessary subdivision and potentially false results - some areas are falsely classified as partially visible. To evaluate the visibility for each shaft exactly, a different method such as the visibility skeleton [14] has to be used. <p> Therefore, the generalization to three-dimensional viewing regions is considered to be relatively straightforward. The hierarchical visibility preprocessing was implemented by modifying a public domain radiosity package <ref> [1] </ref>. Ray tracing is used if there is more than one potential occluder between a viewing region (or viewpoint) and an element. If all random rays are occluded our implementation (falsely) concludes - 6 - that the shaft is occluded.
Reference: [2] <author> Cazals, F., G. Drettakis, C. Puech, </author> <title> Filtering, Clustering and Hierarchy Construction: a New Solution for Ray-Tracing Complex Scenes, </title> <booktitle> Proceedings of EUROGRAPHICS 95, </booktitle> <pages> pp. 371-382, </pages> <year> 1995. </year>
Reference-contexts: The interior nodes of this hierarchy are bounding volumes (also known as clusters) and the leaves are surfaces that are subdivided further into elements on demand. The hierarchy can be constructed during modeling or automatically by clustering nearby surfaces together (e.g. <ref> [2] </ref>). A hierarchical visibility method subdivides this scene hierarchy depending on the relative visibility of objects. The hierarchical visibility algorithm used in this method starts with two nodes. One is the top level bounding box enclosing the whole scene. The other is the global viewing region.
Reference: [3] <author> Chen, S. E., L. Williams, </author> <title> View Interpolation for Image Synthesis, </title> <booktitle> Proceedings of SIGGRAPH 93, </booktitle> <pages> pp. 270-288, </pages> <year> 1993. </year>
Reference-contexts: One possibility is to warp each pixel of the reference images into the destination view. For more detailed explanations of image warping see <ref> [3] </ref>, [12].
Reference: [4] <author> Chen, S. E., </author> <title> QuickTime VR- An Image-Based Approach to Virtual Environment Navigation, </title> <booktitle> Proceedings of SIGGRAPH 95, </booktitle> <pages> pp. 29-38, </pages> <year> 1995 </year>
Reference-contexts: Taking photographs from all the computed viewpoints will guarantee that every part of every surface is visible in at least one image. Furthermore, the method assumes that potentially a spherical image can be obtained from every viewpoint. Compositing multiple images to a spherical image <ref> [4] </ref> can be used to generate such images. Note that this work addresses the visibility issues of the problem only.
Reference: [5] <author> Debevec, P. E., C. J. Taylor, J. Malik, </author> <title> Modeling and Rendering Architecture from Photographs: </title>
Reference-contexts: Therefore, a visualization of the object will only show the geometric structure but will not match the appearance of surfaces. For objects with known geometry but unknown surface appearance, methods to derive textures from prerecorded images (see e.g. <ref> [5] </ref>) can be used. This is the case when visualizing existing structures from unreachable viewpoints, visualizing modifications to a real scene, or generating realistic textures for virtual training systems. <p> For objects with unknown geometry it is possible to reconstruct the geometry from prerecorded images with image-based modeling methods. One successful approach <ref> [5] </ref> helps the user to construct an approximate geometric model. It is hard to judge for a human if a set of prerecorded images is complete in the sense that every part of every surface and object is visible in at least one of the images.
References-found: 5

