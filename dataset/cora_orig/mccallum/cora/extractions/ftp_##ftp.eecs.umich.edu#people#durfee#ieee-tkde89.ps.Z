URL: ftp://ftp.eecs.umich.edu/people/durfee/ieee-tkde89.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/durfee/vita.html
Root-URL: http://www.cs.umich.edu
Title: Trends in Cooperative Distributed Problem Solving  
Author: Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill Edmund H. Durfee Victor R. Lesser and Daniel D. Corkill 
Affiliation: Department of Electrical and Computer Engineering at the University of Michigan.  Department of Computer and Information Science at the University of Massachusetts.  
Note: is with the  are with the  
Date: July 12, 1995  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> James F. Allen. </author> <title> A Plan-Based Approach to Speech Act Recognition. </title> <type> PhD thesis, </type> <institution> University of Toronto, </institution> <month> February </month> <year> 1979. </year> <note> (Also published as Technical Report 131/79, </note> <institution> Department of Computer Science, University of Toronto, Toronto, Canada, </institution> <month> February </month> <year> 1979.). </year>
Reference-contexts: Research on dialogue comprehension in natural language understanding is also relevant to CDPS research because both research areas must reason about multiple agents with distinct and possibly contradictory mental states <ref> [1, 9] </ref>. Mental states include not only facts or knowledge but also beliefs and goals.
Reference: [2] <author> D. E. Appelt. </author> <title> Planning natural language utterances to satisfy multiple goals. </title> <type> Technical Note 259, </type> <institution> SRI International, </institution> <address> Menlo Park, California, </address> <year> 1982. </year>
Reference-contexts: This approach can account for the effect of resource limitations on the derivation of the consequences of beliefs. Appelt has used a possible world formalism to represent and reason about belief <ref> [2] </ref>. Cohen and Levesque have developed a formal theory for reasoning about an agent's intentions as combination of what it has chosen and how it is committed to its choice [10].
Reference: [3] <author> Ronald C. Arkin, Edward M. Riseman, and Allen R. Hanson. ArRA: </author> <title> An architecture for vision-based robot navigation. </title> <booktitle> In Proceedings of the DARPA Image Understanding Workshop, </booktitle> <pages> pages 17-431, </pages> <address> Los Angeles, California, </address> <month> February </month> <year> 1987. </year>
Reference-contexts: Illustrative situations include controlling an autonomous vehicle that uses separate expert systems for system status, mission planning, navigation, situation assessment, and piloting <ref> [3, 74] </ref>; or negotiation among expert systems of two corporations to decide price and/or delivery time on a major purchase.
Reference: [4] <author> M. Benda, V. Jagannathan, and R. Dodhiawalla. </author> <title> On optimal cooperation of knowledge sources. </title> <type> Technical Report BCS-G2010-28, </type> <institution> Boeing AI Center, Boeing Computer Services, Bellevue, WA, </institution> <month> August </month> <year> 1985. </year>
Reference-contexts: This latter capability leads to organizational change while the former is more associated with local refinements of the organization. Gasser is currently using the MACE testbed [29] to simulate a game-like application domain where agents of one type attempt to surround and capture agents of another type <ref> [4] </ref>. He is using this simulated application to empirically evaluate his coordination mechanisms [30]. 2.3.2 Coordination Using Organizational Structuring Corkill and Lesser have applied organizational structures to CDPS to efficiently implement network coordination strategies.
Reference: [5] <author> R. Bisiani. </author> <title> A software and hardware environment for developing AI applications on parallel processors. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 742-747, </pages> <address> Philadelphia, Pennsylvania, </address> <month> August </month> <year> 1986. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 451-456, </address> <publisher> Morgan Kauf-mann, 1988.). </publisher>
Reference-contexts: If reasoning about coordination is an integral part of an agent, the agent must have knowledge representations, inference techniques, and control components that are adequate for this type of reasoning. Practical CDPS networks will also require advanced software infrastructures, languages and operating systems <ref> [5, 37] </ref>. CDPS has opened a new door in the study of intelligence. CDPS research continues to reveal the complexity of coordination in all of its forms, and the extensive though sometimes subtle connections between intelligent coordination and other aspects of intelligence.
Reference: [6] <editor> Alan H. Bond and Les Gasser. </editor> <booktitle> Readings in Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kauf-mann Publishers, </publisher> <address> San Mateo, CA, </address> <year> 1988. </year>
Reference-contexts: Further Reading For further information on CDPS, the collection Readings in Distributed Artificial Intelligence edited by Bond and Gasser contains the seminal papers in the field <ref> [6] </ref>. In addition, the book Distributed Artificial Intelligence, edited by Huhns, provides papers on current research directions [40]. A second such book is due out late in 1989. Acknowledgements We would like to thank Clive Dym for helping us in our early drafts and Paul Cohen for many editorial suggestions.
Reference: [7] <author> Stephanie Cammarata, David McArthur, and Randall Steeb. </author> <title> Strategies of cooperation in distributed problem solving. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 767-770, </pages> <institution> Karlsruhe, Federal Republic of Germany, </institution> <month> August </month> <year> 1983. </year> <note> 32 (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 102-105, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: constraints, rather than insisting that each node have a global view of all nodes' choices and their resource utilization requirements. 2.1.3 Negotiation in Air-Traffic Control Negotiation is an important part of the cooperation strategies developed by Cammarata, McArthur, and Steeb for resolving conflicts among plans of a group of nodes <ref> [7] </ref>. <p> A multi-agent plan is built to avoid inconsistent or conflicting actions, and is typically used in CDPS networks to identify and plan around resource conflicts. For example, in scheduling the use of airspace <ref> [7] </ref> or machining tools [31], an unexpected conflict for a resource can be costly in time, money, or human life. Rather than risking incoherent and inconsistent decisions that nodes might make using other approaches, multi-agent planning insists that nodes plan out beforehand exactly how each will act and interact. <p> Georgeff and Lansky have pursued this centralized multi-agent planning approach further, using alternative representations for events in multi-agent domains [32, 33, 47]. Cammarata, Steeb, and McArthur have also developed a system for centralized multi-agent planning <ref> [7] </ref>. Their system, described more completely in Section 2.1.3, works in an air-traffic control application. Through a process of negotiation, the nodes (aircraft) choose a coordinator.
Reference: [8] <author> Ernest Chang. </author> <title> Participant systems. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 11, </booktitle> <pages> pages 311-339. </pages> <publisher> Pitman, </publisher> <year> 1987. </year>
Reference-contexts: Computer-Supported Human Cooperation. Computer technology promises to provide people with more and better information for making decisions. However, unless computers also assist people by filtering the information and focusing attention on relevant information, the amount of information can become overwhelming <ref> [8, 41, 54] </ref>. By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination [16, 57, 60, 70].
Reference: [9] <author> Philip R. Cohen. </author> <title> On Knowing What to Say: Planning Speech Acts. </title> <type> PhD thesis, </type> <institution> University of Toronto, </institution> <month> January </month> <year> 1978. </year> <note> (Also published as Technical Report 118, </note> <institution> Department of Computer Science, University of Toronto, Toronto, Canada, </institution> <month> January </month> <year> 1978.). </year>
Reference-contexts: Research on dialogue comprehension in natural language understanding is also relevant to CDPS research because both research areas must reason about multiple agents with distinct and possibly contradictory mental states <ref> [1, 9] </ref>. Mental states include not only facts or knowledge but also beliefs and goals.
Reference: [10] <author> Philip R. Cohen and Hector J. Levesque. </author> <title> Intention = choice + commitment. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 410-415, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Appelt has used a possible world formalism to represent and reason about belief [2]. Cohen and Levesque have developed a formal theory for reasoning about an agent's intentions as combination of what it has chosen and how it is committed to its choice <ref> [10] </ref>. Rosenschein has developed a more general theory of multi-agent planning which allows for the existence of other agents and their mental states as part of the environment within which plans can be constructed [68].
Reference: [11] <author> S. Conry, R. Meyer, and J. Searlemen. </author> <title> A shared knowledge base for independent problem solving agents. </title> <booktitle> In Proceedings of the IEEE Expert Systems in Government Symposium, Mc Lean, </booktitle> <address> Virginia, </address> <month> October </month> <year> 1985. </year>
Reference-contexts: Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing [80, 62, 61], and resource allo 3 cation/control in a long-haul communication network <ref> [11, 34] </ref>. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions. As in the distributed interpretation domains, data is inherently distributed among nodes, in this case because each has its own local planning database, capabilities, and view of the world state.
Reference: [12] <author> Susan E. Conry, Robert A. Meyer, and Victor R. Lesser. </author> <title> Multistage negotiation in distributed planning. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 367-384. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1988. </year>
Reference-contexts: Distributed Interpretation. Distributed interpretation applications require the integration and analysis of distributed data to generate a (potentially distributed) semantic model of the data. Application domains include distributed sensor networks [51, 50, 56, 89] and communication network fault diagnosis <ref> [12] </ref>. In these applications, a central problem solver is inappropriate because it would be less reliable than a network, it would not exploit the potential parallelism in processing data from different regions, and it would require substantial communication bandwidth to collect the large amounts of raw sensory data. <p> subsumes contracting in an approach that allows nodes to suitably decompose and distribute tasks and to cooperatively solve inherently distributed problems by communicating in a more expressive framework. 2.1.2 Multistage Negotiation Another use of a limited form of negotiation in task allocation has been developed by Conry and her colleagues <ref> [12] </ref>. They consider a class of task allocation problems called distributed constraint satisfaction problems, in which a coordinated set of actions is required to achieve the goals of the network, but each node has only limited resources available for completing all of its assigned actions.
Reference: [13] <author> Daniel D. Corkill. </author> <title> Hierarchical planning in a distributed environment. </title> <booktitle> In Proceedings of the Sixth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 168-175, </pages> <address> Cambridge, Massachusetts, </address> <month> August </month> <year> 1979. </year> <note> (An extended version was published as Technical Report 79-13, </note> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <month> February </month> <year> 1979.). </year>
Reference-contexts: The general approach is to provide each node with a model of other nodes' plans <ref> [13, 32, 43] </ref>. For example, Corkill has developed a distributed hierarchical planner based on NOAH [69] where nodes represent each other using MODEL nodes [13] and synchronize the plan execution with explicit synchronization actions. The nodes plan together level by level. <p> The general approach is to provide each node with a model of other nodes' plans [13, 32, 43]. For example, Corkill has developed a distributed hierarchical planner based on NOAH [69] where nodes represent each other using MODEL nodes <ref> [13] </ref> and synchronize the plan execution with explicit synchronization actions. The nodes plan together level by level. They each build local plans at one level of detail, and build suitable models of each other by communicating about shared resources needed for their goals.
Reference: [14] <author> Daniel D. Corkill and Victor R. Lesser. </author> <title> The use of meta-level control for coordination in a distributed problem solving network. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 748-756, </pages> <institution> Karlsruhe, Federal Republic of Germany, </institution> <month> August </month> <year> 1983. </year> <note> (Also appeared in Computer Architectures for Artificial Intelligence Applications, </note> <editor> Benjamin W. Wah and G.-J. Li, editors, </editor> <publisher> IEEE Computer Society Press, </publisher> <pages> pages 507-515, </pages> <year> 1986). </year>
Reference-contexts: Corkill and Lesser suggest that even in networks composed of a modest number of nodes, a complete analysis to determine the detailed activities at each node is impractical; the computation and communication costs of determining the optimal set and allocation of activities far outweigh the improvement in problem-solving performance <ref> [14] </ref>. Instead, they suggest that coordination in CDPS networks must sacrifice some potential improvement for a less complex coordination problem. <p> This approach divides the problem of network coordination into two concurrent activities <ref> [14] </ref>: the construction and maintenance of a network-wide organizational structure; and the continuous local elaboration of this structure into precise activities using the local knowledge and control capabilities of each node.
Reference: [15] <author> Daniel David Corkill. </author> <title> A Framework for Organizational Self-Design in Distributed Problem Solving Networks. </title> <type> PhD thesis, </type> <institution> University of Massachusetts, </institution> <month> February </month> <year> 1983. </year> <note> (Also published as Technical Report 82-33, </note> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <month> December </month> <year> 1982.). </year>
Reference-contexts: In fact, it has been argued that some degree of inconsistency among nodes is beneficial to network problem solving <ref> [15, 63] </ref>. If the network permits inconsistencies, it must be able to resolve them. To do so, it should allow nodes to exchange inconsistent partial solutions, so that one or more of them has enough informa 14 tion to resolve the inconsistency. <p> With this general, high-level view, the nodes can ensure that they meet conditions that are essential to successful problem solving, including <ref> [15] </ref>: Coverage. Any necessary portion of the overall problem must be within the problem-solving capabilities of at least one node. Connectivity. Nodes must interact in a manner that permits the covered activities to be developed and integrated into an overall solution. Capability. <p> These examples illustrate the variety of information that an organizational structure can contain. 2.3.1 Ties to Organizational Theory Theories about human organizations can provide insights to CDPS, and the work of Galbraith, March and Simon, Williamson, and Dewey is particularly relevant <ref> [15, 25, 28, 39, 45] </ref>. For example, 17 Several possible organizations are shown, where for each the horizontal axis corresponds to locations and the vertical axis corresponds to information level (higher levels contain more completely processed information). <p> They have implemented and evaluated their ideas in one of the most flexible CDPS simulation testbeds developed to date: the Distributed Vehicle Monitoring Testbed (DVMT) <ref> [15, 50] </ref>. The DVMT simulates a network of nodes that perform distributed interpretation to track vehicles moving among them. The spatially-distributed nodes detect the sounds of vehicles, and each applies knowledge of vehicle sounds and movements to track vehicles through its spatial area.
Reference: [16] <author> W.B. Croft and L.S. Lefkowitz. </author> <title> Knowledge-based support of cooperative activities. </title> <booktitle> In Proceedings of the Twenty-first Annual Hawaii International Conference on System Sciences, </booktitle> <volume> volume 3, </volume> <pages> pages 312-318, </pages> <year> 1988. </year> <note> (Published by IEEE Computer Society Press, Catalog Number 88TH0213-9.). </note>
Reference-contexts: By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination <ref> [16, 57, 60, 70] </ref>. By building networks of CDPS computer assistants for the people in an organization, we can improve coordination by allowing these assistants to solve (initially routine) coordination problems such as scheduling meetings or routing messages to suitable people.
Reference: [17] <author> Keith S. Decker, Edmund H. Durfee, and Victor R. Lesser. </author> <title> Evaluating research in cooperative distributed problem solving. </title> <editor> In Michael N. Huhns and Les Gasser, editors, </editor> <booktitle> Distributed Artificial Intelligence, volume 2 of Research Notes in Artificial Intelligence. </booktitle> <publisher> Pitman, </publisher> <year> 1989. </year>
Reference-contexts: Solving this control problem entails dealing with interactions among 7 subproblems (in the application domain), promoting parallelism, integrating local results into com-plete solutions, resolving inconsistencies among local results, and transferring relevant information at appropriate times. Almost every CDPS approach developed to date has been motivated and evaluated <ref> [17] </ref> in the context of an application domain, often by building a simulator for the domain .
Reference: [18] <author> Edmund H. Durfee. </author> <title> Coordination of Distributed Problem Solvers. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1988. </year>
Reference-contexts: Their partial global planning approach <ref> [19, 18] </ref> thus addresses the different goals of cooperation (Table 1). In the partial global planning approach, each node can represent and reason about the actions and interactions for groups of nodes and how they affect local activities. <p> This information helps a potential recipient make more informed decisions about how to respond to the proposal. Partial global planning provides a unified framework that supports different forms of coordination, and has been implemented and evaluated in the DVMT (Section 2.3.2) <ref> [18] </ref>. In this implementation, a node's local planner develops a plan at multiple levels of detail, including a representation of major plan steps.
Reference: [19] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Using partial global plans to coordinate distributed problem solvers. </title> <booktitle> In Proceedings of the Tenth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 875-883, </pages> <address> Milan, Italy, </address> <month> August </month> <year> 1987. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 285-293, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Durfee and Lesser expanded on the organizational structuring approach to develop a meta-level organization for specifying how nodes in a CDPS network should cooperatively decide how to solve a problem together <ref> [19] </ref>. That is, the meta-level organization organizes the coordination activities of the nodes, while the separate domain-level organization organizes their domain-level problem-solving activities. An unanswered question for this research is where organizational structure comes from in the first place. <p> Durfee and Lesser have developed a CDPS approach called partial global planning (Section 2.5.2), in which nodes build local plans and share these plans to identify potential improvements to coordination <ref> [19] </ref>. Unlike multi-agent planning, which assumes that a plan is formed before nodes begin to act, partial global planning allows nodes to interleave planning and action. In partial global planning, nodes coordinate as best they can given their current view, rather than waiting for a complete view of the network. <p> Their partial global planning approach <ref> [19, 18] </ref> thus addresses the different goals of cooperation (Table 1). In the partial global planning approach, each node can represent and reason about the actions and interactions for groups of nodes and how they affect local activities.
Reference: [20] <author> Edmund H. Durfee and Victor R. Lesser. </author> <title> Predictability versus responsiveness: Coordinating problem solvers in dynamic domains. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 66-71, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: The costs to obtain consistent, complete, and up-to-date information might be prohibitively large in terms of delays due to synchronization and message transmission. Additionally, in a highly dynamic environment, the cost of recomputing network control for each minor change in the state of network may also be expensive <ref> [20] </ref>.
Reference: [21] <author> Edmund H. Durfee, Victor R. Lesser, and Daniel D. Corkill. </author> <title> Coherent cooperation among communicating problem solvers. </title> <journal> IEEE Transactions on Computers, </journal> <note> C-36(11):1275-1291, Novem-ber 1987. (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 268-284, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: In this section, we describe the general goals of CDPS, some tasks in which achieving these goals is important, and some specific technical problems that must be solved for CDPS to succeed. Four general goals for CDPS are presented in Table 1, <ref> [21] </ref>. Depending on the kind of application, some of these goals might be more important than others. The differences are highlighted by considering several classes of application domains in CDPS research. Distributed Interpretation. <p> Durfee, Lesser, and Corkill expanded these ideas and showed that a static organization structure cannot always guarantee coherent network behavior <ref> [21] </ref>. An organization that is specialized for one short-term situation may be inappropriate for another. <p> Durfee, Lesser, and Corkill describe three major characteristics of the information communicated among nodes that affects global coherence|how well the nodes work as a team. These are relevance, timeliness and completeness <ref> [21] </ref>. The relevance of a message measures the amount of information that is consistent with the solution derived by the network.
Reference: [22] <author> Lee D. Erman, Frederick Hayes-Roth, Victor R. Lesser, and D. Raj Reddy. </author> <title> The Hearsay-II speech-understanding system: Integrating knowledge to resolve uncertainty. </title> <journal> Computing Surveys, </journal> <volume> 12(2) </volume> <pages> 213-253, </pages> <month> June </month> <year> 1980. </year>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II <ref> [22] </ref>, the ETHER language [44], the BEINGS system [48], CAOS [71], Poligon [64], and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task.
Reference: [23] <author> Nicholas V. Findler and Ron Lo. </author> <title> An examination of distributed planning in the world of air traffic control. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 3 </volume> <pages> 411-431, </pages> <year> 1986. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control <ref> [23, 88] </ref>, cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing [80, 62, 61], and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [24] <author> Mark S. Fox. </author> <title> Organization structuring: Designing large complex software. </title> <type> Technical Report 79-155, </type> <institution> Computer Science Department, Carnegie-Mellon University, Pittsburgh, Pennsylvania, </institution> <month> December </month> <year> 1979. </year>
Reference-contexts: In CDPS, problem solving nodes also have limited information processing capabilities. Fox concentrates on the effects of complexity and uncertainty on choosing suitable CDPS organizations <ref> [24, 25] </ref>.
Reference: [25] <author> Mark S. Fox. </author> <title> An organizational view of distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 11(1) </volume> <pages> 70-80, </pages> <month> January </month> <year> 1981. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 140-150, </address> <publisher> Morgan Kauf-mann, 1988.). </publisher>
Reference-contexts: These examples illustrate the variety of information that an organizational structure can contain. 2.3.1 Ties to Organizational Theory Theories about human organizations can provide insights to CDPS, and the work of Galbraith, March and Simon, Williamson, and Dewey is particularly relevant <ref> [15, 25, 28, 39, 45] </ref>. For example, 17 Several possible organizations are shown, where for each the horizontal axis corresponds to locations and the vertical axis corresponds to information level (higher levels contain more completely processed information). <p> In CDPS, problem solving nodes also have limited information processing capabilities. Fox concentrates on the effects of complexity and uncertainty on choosing suitable CDPS organizations <ref> [24, 25] </ref>.
Reference: [26] <author> Jay Galbraith. </author> <title> Designing Complex Organizations. </title> <publisher> Addison-Wesley, </publisher> <year> 1973. </year>
Reference-contexts: In (c), the nodes are organized in a matrix organization, where separate nodes are responsible for different processing levels, and their results are integrated by other nodes. 18 Galbraith <ref> [26, 27] </ref> has developed a set of paradigms for redesigning an organizational structure to cope with the increased communication caused by uncertainty (such as unexpected events and er-rorful information). Galbraith draws upon March and Simon's work, which recognized the limited information processing capabilities of humans [55, 72, 73].
Reference: [27] <author> Jay R. </author> <title> Galbraith. Organization Design. </title> <publisher> Addison-Wesley, </publisher> <year> 1977. </year>
Reference-contexts: In (c), the nodes are organized in a matrix organization, where separate nodes are responsible for different processing levels, and their results are integrated by other nodes. 18 Galbraith <ref> [26, 27] </ref> has developed a set of paradigms for redesigning an organizational structure to cope with the increased communication caused by uncertainty (such as unexpected events and er-rorful information). Galbraith draws upon March and Simon's work, which recognized the limited information processing capabilities of humans [55, 72, 73]. <p> Bounded rationality has serious implications on the quality of decisionmaking under uncertainty, for "the greater the task uncertainty, the greater the amount of information that must be processed...to achieve a given level of performance" <ref> [27] </ref>. A motivation for variations in organizational structures (in terms of the type, frequency, and connectivity pattern on information flow) is to provide additional information processing capacity (to handle greater uncertainty) within the bounded rationality of the organization's individual members.
Reference: [28] <author> L. Gasser. </author> <title> The integration of computing and routine work. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 4(3) </volume> <pages> 205-225, </pages> <month> July </month> <year> 1986. </year>
Reference-contexts: These examples illustrate the variety of information that an organizational structure can contain. 2.3.1 Ties to Organizational Theory Theories about human organizations can provide insights to CDPS, and the work of Galbraith, March and Simon, Williamson, and Dewey is particularly relevant <ref> [15, 25, 28, 39, 45] </ref>. For example, 17 Several possible organizations are shown, where for each the horizontal axis corresponds to locations and the vertical axis corresponds to information level (higher levels contain more completely processed information). <p> However, the implications of their work for CDPS are unclear, because they assume that the individual tasks are independent and because they do not model uncertainty in terms of the accuracy of control and problem-solving decisions. Gasser <ref> [28] </ref> is pursuing a view of organization for CDPS that is less structural in perspective and more related to current organization theory [52, 83]. He views an organization as a "particular set of settled and unsettled problems about belief and action through which agents view other agents.
Reference: [29] <author> Les Gasser, Carl Braganza, and Nava Herman. MACE: </author> <title> A flexible testbed for distributed AI research. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 5, </booktitle> <pages> pages 119-152. </pages> <publisher> Pitman, </publisher> <year> 1987. </year>
Reference-contexts: This latter capability leads to organizational change while the former is more associated with local refinements of the organization. Gasser is currently using the MACE testbed <ref> [29] </ref> to simulate a game-like application domain where agents of one type attempt to surround and capture agents of another type [4].
Reference: [30] <author> Les Gasser and Nicolas Rouquette. </author> <title> Representing and using organizational knowledge in distributed AI systems. </title> <booktitle> In Proceedings of the 1988 Distributed AI Workshop, </booktitle> <month> May </month> <year> 1988. </year>
Reference-contexts: Organizational change means opening and/or settling some different set of questions in a different way, giving individual agents new problems to solve and ... a different base of assumptions about the beliefs and actions of other agents" <ref> [30] </ref>. Gasser asserts that agents need the ability to recognize, diagnose and repair violated expectations when other agents fail to meet default assumptions in previously settled questions. When expectations are violated, agents generate new questions that must be settled. <p> Gasser is currently using the MACE testbed [29] to simulate a game-like application domain where agents of one type attempt to surround and capture agents of another type [4]. He is using this simulated application to empirically evaluate his coordination mechanisms <ref> [30] </ref>. 2.3.2 Coordination Using Organizational Structuring Corkill and Lesser have applied organizational structures to CDPS to efficiently implement network coordination strategies.
Reference: [31] <author> Michael Georgeff. </author> <title> Communication and interaction in multi-agent planning. </title> <booktitle> In Proceedings of the Third National Conference on Artificial Intelligence, </booktitle> <pages> pages 125-129, </pages> <address> Washington, D.C., </address> <month> August </month> <year> 1983. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 200-204, </address> <publisher> Morgan Kaufmann, 1988.). </publisher> <pages> 34 </pages>
Reference-contexts: A multi-agent plan is built to avoid inconsistent or conflicting actions, and is typically used in CDPS networks to identify and plan around resource conflicts. For example, in scheduling the use of airspace [7] or machining tools <ref> [31] </ref>, an unexpected conflict for a resource can be costly in time, money, or human life. Rather than risking incoherent and inconsistent decisions that nodes might make using other approaches, multi-agent planning insists that nodes plan out beforehand exactly how each will act and interact. <p> more computation and communication resources than other approaches. 2.4.1 Centralized Multi-Agent Planning Georgeff develops a multi-agent planning approach where the plans of individual nodes are first formed, and then some central planning node collects them, and analyzes them to identify potential interactions, such conflicts between the nodes over limited resources <ref> [31] </ref>. The central node then performs a safety analysis to determine which potential interactions could lead to conflicts; for example, when a node modifies the world in such a way that another cannot continue with its plan.
Reference: [32] <author> Michael Georgeff. </author> <title> A theory of action for multiagent planning. </title> <booktitle> In Proceedings of the Fourth National Conference on Artificial Intelligence, </booktitle> <pages> pages 121-125, </pages> <address> Austin, Texas, </address> <month> August </month> <year> 1984. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 205-209, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Georgeff and Lansky have pursued this centralized multi-agent planning approach further, using alternative representations for events in multi-agent domains <ref> [32, 33, 47] </ref>. Cammarata, Steeb, and McArthur have also developed a system for centralized multi-agent planning [7]. Their system, described more completely in Section 2.1.3, works in an air-traffic control application. Through a process of negotiation, the nodes (aircraft) choose a coordinator. <p> The general approach is to provide each node with a model of other nodes' plans <ref> [13, 32, 43] </ref>. For example, Corkill has developed a distributed hierarchical planner based on NOAH [69] where nodes represent each other using MODEL nodes [13] and synchronize the plan execution with explicit synchronization actions. The nodes plan together level by level.
Reference: [33] <author> Michael Georgeff. </author> <title> A representation of events in multi-agent domains. </title> <booktitle> In Proceedings of the Fifth National Conference on Artificial Intelligence, </booktitle> <pages> pages 70-75, </pages> <address> Philadelphia, Pennsylvania, </address> <month> August </month> <year> 1986. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 210-215, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Georgeff and Lansky have pursued this centralized multi-agent planning approach further, using alternative representations for events in multi-agent domains <ref> [32, 33, 47] </ref>. Cammarata, Steeb, and McArthur have also developed a system for centralized multi-agent planning [7]. Their system, described more completely in Section 2.1.3, works in an air-traffic control application. Through a process of negotiation, the nodes (aircraft) choose a coordinator.
Reference: [34] <author> S. Goyal and R. Worrest. </author> <title> Expert system applications to network management. </title> <editor> In J. Leibowitz, editor, </editor> <booktitle> Expert System Applications to Telecommunications, </booktitle> <volume> volume 1, </volume> <pages> pages 3-44. </pages> <publisher> John Wiley & Sons, </publisher> <year> 1988. </year>
Reference-contexts: Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing [80, 62, 61], and resource allo 3 cation/control in a long-haul communication network <ref> [11, 34] </ref>. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions. As in the distributed interpretation domains, data is inherently distributed among nodes, in this case because each has its own local planning database, capabilities, and view of the world state.
Reference: [35] <author> Barbara J. Grosz and Candace L. Sidner. </author> <title> Discourse structure and the proper treatment of interruptions. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 832-839, </pages> <month> August </month> <year> 1985. </year>
Reference-contexts: Through an appropriate dialogue, the agents can converge on shared plans for how they should coordinate their activities <ref> [35, ?] </ref>. Another research approach towards developing a formal theory for understanding the nature of cooperation among multiple agents is that of Rosenschein and Genesereth [65, 68, 66].
Reference: [36] <author> Joseph Y. Halpern and Yoram Moses. </author> <title> Knowledge and common knowledge in a distributed environment. </title> <booktitle> In Third ACM Conference on Principles of Distributed Computing, </booktitle> <year> 1984. </year>
Reference-contexts: Halpern and Moses have investigated the issue of common knowledge between agents, discovering limitations in what agents can know about each other <ref> [36] </ref>. Research on dialogue comprehension in natural language understanding is also relevant to CDPS research because both research areas must reason about multiple agents with distinct and possibly contradictory mental states [1, 9]. Mental states include not only facts or knowledge but also beliefs and goals.
Reference: [37] <author> Frederick Hayes-Roth, Lee D. Erman, Scott Fouse, Jay S. Lark, and James Davidson. ABE: </author> <title> A cooperative operation system and development environment. </title> <editor> In Mark Richer, editor, </editor> <booktitle> AI Tools and Techniques. </booktitle> <publisher> Ablex Publishing Corporation, </publisher> <year> 1988. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 457-489, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: If reasoning about coordination is an integral part of an agent, the agent must have knowledge representations, inference techniques, and control components that are adequate for this type of reasoning. Practical CDPS networks will also require advanced software infrastructures, languages and operating systems <ref> [5, 37] </ref>. CDPS has opened a new door in the study of intelligence. CDPS research continues to reveal the complexity of coordination in all of its forms, and the extensive though sometimes subtle connections between intelligent coordination and other aspects of intelligence.
Reference: [38] <author> Carl Hewitt. </author> <title> Viewing control structures as patterns of passing messages. </title> <journal> Artificial Intelligence, </journal> <volume> 8(3) </volume> <pages> 323-364, </pages> <month> Fall </month> <year> 1977. </year>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework <ref> [38] </ref>, Hearsay-II [22], the ETHER language [44], the BEINGS system [48], CAOS [71], Poligon [64], and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task.
Reference: [39] <author> Carl Hewitt. </author> <title> Offices are open systems. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 4(3) </volume> <pages> 271-287, </pages> <month> July </month> <year> 1986. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 321-330, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: As described in Section 2.3, this led to techniques built on top of FA/C to control it. 15 2.2.2 Open Systems Building on the FA/C approach and his previous work on the Scientific Community Metaphor [45], Hewitt has elaborated on the concept of Open Systems <ref> [39] </ref>. The Open Systems approach, which Hewitt has recently referred to as Organizational Knowledge Processing, emphasizes the need for agents to cope with conflicting, inconsistent and partial information as an integral part of their operation; and to be highly reliable so that the operation of the system is continuous. <p> However, the network of microtheories taken as a whole can be inconsistent. Debate and negotiation are used to resolve these inconsistencies. Hewitt further assumes that the "internal operation, organization and state of one computational agent may be unknown and unavailable to another agent..." <ref> [39] </ref>. This assumption requires cooperative strategies that are similar to those needed to deal with heterogeneous expert systems, where individual systems may use different problem-solving strategies and knowledge representations and have different criteria for judging acceptability of solutions. <p> These examples illustrate the variety of information that an organizational structure can contain. 2.3.1 Ties to Organizational Theory Theories about human organizations can provide insights to CDPS, and the work of Galbraith, March and Simon, Williamson, and Dewey is particularly relevant <ref> [15, 25, 28, 39, 45] </ref>. For example, 17 Several possible organizations are shown, where for each the horizontal axis corresponds to locations and the vertical axis corresponds to information level (higher levels contain more completely processed information). <p> As a result, agents might never converge on shared, coordinated plans [67]. Hewitt, in his studies of open systems (Section 2.2.2), addresses this problem and argues that formal logic is inadequate <ref> [39] </ref>. 29 Researchers are following a number of different approaches to extending logical formalisms for CDPS applications.
Reference: [40] <editor> Michael Huhns, editor. </editor> <booktitle> Distributed Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1987. </year>
Reference-contexts: Further Reading For further information on CDPS, the collection Readings in Distributed Artificial Intelligence edited by Bond and Gasser contains the seminal papers in the field [6]. In addition, the book Distributed Artificial Intelligence, edited by Huhns, provides papers on current research directions <ref> [40] </ref>. A second such book is due out late in 1989. Acknowledgements We would like to thank Clive Dym for helping us in our early drafts and Paul Cohen for many editorial suggestions.
Reference: [41] <author> Michael N. Huhns, Uttam Mukhopadhyay, Larry M. Stephens, and Ronald D. Bonnell. </author> <title> DAI for document retrieval: The MINDS project. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 9, </booktitle> <pages> pages 249-284. </pages> <publisher> Pitman, </publisher> <year> 1987. </year>
Reference-contexts: Computer-Supported Human Cooperation. Computer technology promises to provide people with more and better information for making decisions. However, unless computers also assist people by filtering the information and focusing attention on relevant information, the amount of information can become overwhelming <ref> [8, 41, 54] </ref>. By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination [16, 57, 60, 70].
Reference: [42] <author> Kurt Konolige. </author> <title> Circumscriptive ignorance. </title> <booktitle> In Proceedings of the Second National Conference on Artificial Intelligence, </booktitle> <pages> pages 202-204, </pages> <address> Pittsburgh, Pennsylvania, </address> <month> August </month> <year> 1982. </year>
Reference-contexts: Konolige has developed the Deductive Belief model in which an agent's beliefs are described as a set of sentences in formal language together with a deductive process for deriving the consequences of those beliefs <ref> [42, 43] </ref>. This approach can account for the effect of resource limitations on the derivation of the consequences of beliefs. Appelt has used a possible world formalism to represent and reason about belief [2].
Reference: [43] <author> Kurt Konolige. </author> <title> A deductive model of belief. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 377-381, </pages> <institution> Karlsruhe, Federal Republic of Germany, </institution> <month> August </month> <year> 1983. </year>
Reference-contexts: The general approach is to provide each node with a model of other nodes' plans <ref> [13, 32, 43] </ref>. For example, Corkill has developed a distributed hierarchical planner based on NOAH [69] where nodes represent each other using MODEL nodes [13] and synchronize the plan execution with explicit synchronization actions. The nodes plan together level by level. <p> Konolige has developed the Deductive Belief model in which an agent's beliefs are described as a set of sentences in formal language together with a deductive process for deriving the consequences of those beliefs <ref> [42, 43] </ref>. This approach can account for the effect of resource limitations on the derivation of the consequences of beliefs. Appelt has used a possible world formalism to represent and reason about belief [2].
Reference: [44] <author> William A. Kornfeld. </author> <title> ETHER: A parallel problem solving system. </title> <booktitle> In Proceedings of the Sixth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 490-492, </pages> <address> Cambridge, Massachusetts, </address> <month> August </month> <year> 1979. </year> <month> 35 </month>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II [22], the ETHER language <ref> [44] </ref>, the BEINGS system [48], CAOS [71], Poligon [64], and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task. <p> The presence of this information allows a node to draw on work already performed by other nodes. Kornfeld and Hewitt implemented a parallel processing version of this system, called Ether, that embodies many of their ideas <ref> [44] </ref>.
Reference: [45] <author> William A. Kornfeld and Carl E. Hewitt. </author> <title> The scientific community metaphor. </title> <journal> IEEE Trans--actions on Systems, Man, and Cybernetics, </journal> <note> SMC-11(1):24-33, January 1981. (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 311-320, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: As described in Section 2.3, this led to techniques built on top of FA/C to control it. 15 2.2.2 Open Systems Building on the FA/C approach and his previous work on the Scientific Community Metaphor <ref> [45] </ref>, Hewitt has elaborated on the concept of Open Systems [39]. <p> These examples illustrate the variety of information that an organizational structure can contain. 2.3.1 Ties to Organizational Theory Theories about human organizations can provide insights to CDPS, and the work of Galbraith, March and Simon, Williamson, and Dewey is particularly relevant <ref> [15, 25, 28, 39, 45] </ref>. For example, 17 Several possible organizations are shown, where for each the horizontal axis corresponds to locations and the vertical axis corresponds to information level (higher levels contain more completely processed information). <p> Thus, contracting provides an example of automated network organization, but the overhead of having to reorganize for each problem could be substantial. From a different perspective, Kornfeld and Hewitt have proposed that CDPS can be organized in a manner analogous to the structure of scientific research <ref> [45] </ref>. In their scientific community metaphor for CDPS, nodes posit either "questions" (goals) or "answers" (results) into a mutually accessible archive. The presence of this information allows a node to draw on work already performed by other nodes.
Reference: [46] <author> Susan Lander and Victor Lesser. </author> <title> Negotiation among cooperating experts. </title> <booktitle> In Proceedings of the 1988 Distributed AI Workshop, </booktitle> <month> May </month> <year> 1988. </year>
Reference-contexts: For them to reconcile different solutions to the same problem, they need detailed models of each other|their capabilities, goals, plans, and preferences|to form a compromise solution, or to re-evaluate their solution criteria to cooperatively generate a completely new solution <ref> [46] </ref>. Computer-Supported Human Cooperation. Computer technology promises to provide people with more and better information for making decisions. However, unless computers also assist people by filtering the information and focusing attention on relevant information, the amount of information can become overwhelming [8, 41, 54].
Reference: [47] <author> Amy L. Lansky and Dan Fogelsong. </author> <title> Localized representation and planning methods for parallel domains. </title> <booktitle> In Proceedings of the Sixth National Conference on Artificial Intelligence, </booktitle> <pages> pages 240-245, </pages> <address> Seattle, Washington, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: Georgeff and Lansky have pursued this centralized multi-agent planning approach further, using alternative representations for events in multi-agent domains <ref> [32, 33, 47] </ref>. Cammarata, Steeb, and McArthur have also developed a system for centralized multi-agent planning [7]. Their system, described more completely in Section 2.1.3, works in an air-traffic control application. Through a process of negotiation, the nodes (aircraft) choose a coordinator.
Reference: [48] <author> Douglas B. Lenat. Beings: </author> <title> Knowledge as interacting experts. </title> <booktitle> In Proceedings of the Fourth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 126-133, </pages> <address> Stanford, California, </address> <month> August </month> <year> 1975. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 161-168, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II [22], the ETHER language [44], the BEINGS system <ref> [48] </ref>, CAOS [71], Poligon [64], and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task.
Reference: [49] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> Functionally accurate, cooperative distributed systems. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> SMC-11(1):81-96, </volume> <month> January </month> <year> 1981. </year>
Reference-contexts: than to try to resolve the inconsistency, so long as the application domain allows a problem solver to recover from incorrect control decisions. 2.2.1 The Functionally-Accurate, Cooperative Approach Lesser, Corkill, and Erman were among the first researchers to explore the possibility of building CDPS networks that worked effectively despite inconsistencies <ref> [51, 49] </ref>. In their functionally-accurate, cooperative (FA/C) approach, network problem solving is structured so that nodes cooperatively exchange and integrate partial, tentative, high-level results to construct a consistent and complete solution.
Reference: [50] <author> Victor R. Lesser and Daniel D. Corkill. </author> <title> The Distributed Vehicle Monitoring Testbed: A tool for investigating distributed problem solving networks. </title> <journal> AI Magazine, </journal> <volume> 4(3) </volume> <pages> 15-33, </pages> <month> Fall </month> <year> 1983. </year> <note> (Also published in Blackboard Systems, </note> <editor> Robert S. Engelmore and Anthony Morgan, </editor> <booktitle> editors, </booktitle> <pages> pages 353-386, </pages> <note> Addison-Wesley, 1988 and in Readings from AI Magazine: Volumes 1-5, </note> <editor> Robert Engelmore, </editor> <booktitle> editor, </booktitle> <pages> pages 69-85, </pages> <publisher> AAAI, </publisher> <address> Menlo Park, California, </address> <year> 1988). </year>
Reference-contexts: The differences are highlighted by considering several classes of application domains in CDPS research. Distributed Interpretation. Distributed interpretation applications require the integration and analysis of distributed data to generate a (potentially distributed) semantic model of the data. Application domains include distributed sensor networks <ref> [51, 50, 56, 89] </ref> and communication network fault diagnosis [12]. <p> They have implemented and evaluated their ideas in one of the most flexible CDPS simulation testbeds developed to date: the Distributed Vehicle Monitoring Testbed (DVMT) <ref> [15, 50] </ref>. The DVMT simulates a network of nodes that perform distributed interpretation to track vehicles moving among them. The spatially-distributed nodes detect the sounds of vehicles, and each applies knowledge of vehicle sounds and movements to track vehicles through its spatial area.
Reference: [51] <author> Victor R. Lesser and Lee D. Erman. </author> <title> Distributed interpretation: A model and experiment. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1144-1163, </volume> <month> December </month> <year> 1980. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 120-139, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: The differences are highlighted by considering several classes of application domains in CDPS research. Distributed Interpretation. Distributed interpretation applications require the integration and analysis of distributed data to generate a (potentially distributed) semantic model of the data. Application domains include distributed sensor networks <ref> [51, 50, 56, 89] </ref> and communication network fault diagnosis [12]. <p> than to try to resolve the inconsistency, so long as the application domain allows a problem solver to recover from incorrect control decisions. 2.2.1 The Functionally-Accurate, Cooperative Approach Lesser, Corkill, and Erman were among the first researchers to explore the possibility of building CDPS networks that worked effectively despite inconsistencies <ref> [51, 49] </ref>. In their functionally-accurate, cooperative (FA/C) approach, network problem solving is structured so that nodes cooperatively exchange and integrate partial, tentative, high-level results to construct a consistent and complete solution. <p> Moreover, because FA/C networks can tolerate inconsistency, they can be more resilient and robust in face of processor, sensor and communication failures. Lesser and Erman developed a three-node FA/C network of modified Hearsay-II speech understanding systems, in which each system sampled one time-continuous segment of the speech signal <ref> [51] </ref>. The systems exchanged only high-level intermediate results consisting of phrase hypotheses, and yet could still converge on complete interpretations despite the loss of some messages.
Reference: [52] <author> David Maines. Urban life, </author> <year> 1984. </year> <note> Special issue on negotiated order theory. </note>
Reference-contexts: Gasser [28] is pursuing a view of organization for CDPS that is less structural in perspective and more related to current organization theory <ref> [52, 83] </ref>. He views an organization as a "particular set of settled and unsettled problems about belief and action through which agents view other agents.
Reference: [53] <author> T. W. Malone and S. A. Smith. </author> <title> Tradeoffs in designing organizations: Implications for new forms of human organizations and computer systems. </title> <type> Working Paper CISR WP 112 (Sloan WP 1541-84), </type> <institution> Center for Information Systems Research, Massachusetts Institute of Technology, </institution> <address> Cambridge, Massachusetts 02139, </address> <month> March </month> <year> 1984. </year>
Reference-contexts: he says, "Complexity and uncertainty are two opposing forces; complexity forcing a distribution of tasks ultimately resulting in heterarchical structure; uncertainty pushing in the opposite direction, vertically integrating tasks into a more hierarchical structure." Malone and Smith have also tried to develop theories about how distributed networks should be organized <ref> [53] </ref>. They have used queuing theory models to analyze generic organizational classes to determine their performance strengths and weaknesses with respect to processing, communication, and reliability.
Reference: [54] <author> Thomas W. Malone. </author> <booktitle> What is coordination theory? In Proceedings of the National Science Foundation Coordination Theory Workshop, </booktitle> <month> February </month> <year> 1988. </year>
Reference-contexts: Computer-Supported Human Cooperation. Computer technology promises to provide people with more and better information for making decisions. However, unless computers also assist people by filtering the information and focusing attention on relevant information, the amount of information can become overwhelming <ref> [8, 41, 54] </ref>. By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination [16, 57, 60, 70].
Reference: [55] <author> James G. March and Herbert A. Simon. </author> <title> Organizations. </title> <publisher> John Wiley & Sons, </publisher> <year> 1958. </year>
Reference-contexts: The emphasis is shifted from optimizing a specific dimension of effective cooperation to achieving a balance that leads to acceptable network performance. This approach is similar to the concept of "satisficing" developed by March and Simon to describe human organizational problem solving <ref> [55] </ref>. Network coordination is difficult in CDPS networks because limited internode communication restricts each node's view of network problem solving activity. <p> Galbraith draws upon March and Simon's work, which recognized the limited information processing capabilities of humans <ref> [55, 72, 73] </ref>. Called bounded rationality, this limitation applies to both the amount of environmental (sensory) information that can be effectively used to make decisions, and the amount of control that can be effectively exercised.
Reference: [56] <author> C. Mason, R. Johnson, R. Searfus, D. Lager, and T. Canales. </author> <title> A seismic event analyzer for nuclear test ban treaty verification. </title> <booktitle> In Proceedings of the Third International Conference on Applications of Artificial Intelligence in Engineering, </booktitle> <month> August </month> <year> 1988. </year>
Reference-contexts: The differences are highlighted by considering several classes of application domains in CDPS research. Distributed Interpretation. Distributed interpretation applications require the integration and analysis of distributed data to generate a (potentially distributed) semantic model of the data. Application domains include distributed sensor networks <ref> [51, 50, 56, 89] </ref> and communication network fault diagnosis [12].
Reference: [57] <author> Murray S. Mazer. </author> <title> Exploring the use of distributed problem-solving in office support systems. </title> <booktitle> In Proceedings of the IEEE Computer Society Symposium on Office Automation, </booktitle> <pages> pages 217-225, </pages> <month> April </month> <year> 1987. </year> <month> 36 </month>
Reference-contexts: By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination <ref> [16, 57, 60, 70] </ref>. By building networks of CDPS computer assistants for the people in an organization, we can improve coordination by allowing these assistants to solve (initially routine) coordination problems such as scheduling meetings or routing messages to suitable people.
Reference: [58] <author> James L. McClelland, David E. Rumelhart, </author> <title> and the PDP Research Group. Parallel Distributed Processing: Explorations in the Microstructure of Cognition (2 Volumes). </title> <publisher> MIT Press, </publisher> <year> 1987. </year>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II [22], the ETHER language [44], the BEINGS system [48], CAOS [71], Poligon [64], and Connectionism <ref> [58] </ref>. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task. The cooperative behavior exhibited by these systems stems from either a centralized scheduling mechanism or from predefined interactions between tightly-coupled, simple processing elements.
Reference: [59] <author> Nils J. Nilsson. </author> <title> Two heads are better than one. </title> <journal> SIGART Newsletter, </journal> <volume> (73):43, </volume> <month> October </month> <year> 1980. </year>
Reference-contexts: CDPS research brings to the fore issues in areas such as introspection, planning, language, and reasoning about belief. As Nilsson predicted in his early involvement in CDPS, research into CDPS forces us to address many of the basic problems of AI <ref> [59] </ref>. These insights have led some CDPS researchers to view reasoning about coordination|about how to interact with other intelligent agents|as a fundamental aspect of intelligent behavior.
Reference: [60] <author> Sergei Nirenburg and Victor Lesser. </author> <title> Providing intelligent assistance in distributed office environments. </title> <editor> In Alan H. Bond and Les Gasser, editors, </editor> <booktitle> Readings in Distributed Artificial Intelligence, </booktitle> <pages> pages 590-598. </pages> <publisher> Morgan Kaufman, </publisher> <year> 1988. </year>
Reference-contexts: By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination <ref> [16, 57, 60, 70] </ref>. By building networks of CDPS computer assistants for the people in an organization, we can improve coordination by allowing these assistants to solve (initially routine) coordination problems such as scheduling meetings or routing messages to suitable people.
Reference: [61] <author> H. Van Dyke Parunak. </author> <title> Manufacturing experience with the contract net. </title> <editor> In Michael N. Huhns, editor, </editor> <booktitle> Distributed Artificial Intelligence, Research Notes in Artificial Intelligence, chapter 10, </booktitle> <pages> pages 285-310. </pages> <publisher> Pitman, </publisher> <year> 1987. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing <ref> [80, 62, 61] </ref>, and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [62] <author> H. Van Dyke Parunak, Bruce W. Irish, James Kindrick, and Peter W. Lozo. </author> <title> Fractal actors for distributed manufacturing control. </title> <booktitle> In Proceedings of the second IEEE Conference on AI Applications, </booktitle> <pages> pages 653-660, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing <ref> [80, 62, 61] </ref>, and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [63] <author> Scott Reed and Victor R. Lesser. </author> <title> Division of labor in honey bees and distributed focus of attention. </title> <type> Technical Report 80-17, </type> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <month> September </month> <year> 1980. </year>
Reference-contexts: In fact, it has been argued that some degree of inconsistency among nodes is beneficial to network problem solving <ref> [15, 63] </ref>. If the network permits inconsistencies, it must be able to resolve them. To do so, it should allow nodes to exchange inconsistent partial solutions, so that one or more of them has enough informa 14 tion to resolve the inconsistency.
Reference: [64] <author> James P. Rice. </author> <title> Poligon: A system for parallel problem solving. </title> <type> Technical Report KSL-86-19, </type> <institution> Knowledge Systems Laboratory, Computer Science Department, Stanford University, </institution> <address> Palo Alto, California 94304, </address> <month> April </month> <year> 1986. </year>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II [22], the ETHER language [44], the BEINGS system [48], CAOS [71], Poligon <ref> [64] </ref>, and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task.
Reference: [65] <author> Jeffery S. Rosenschein. </author> <title> Synchronization of multi-agent plans. </title> <booktitle> In Proceedings of the Second National Conference on Artificial Intelligence, </booktitle> <pages> pages 115-119, </pages> <address> Pittsburgh, Pennsylvania, </address> <month> August </month> <year> 1982. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 187-191, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Through an appropriate dialogue, the agents can converge on shared plans for how they should coordinate their activities [35, ?]. Another research approach towards developing a formal theory for understanding the nature of cooperation among multiple agents is that of Rosenschein and Genesereth <ref> [65, 68, 66] </ref>. They have based their model on game theory techniques and have shown the utility of communication to resolve conflicts among agents having disparate goals.
Reference: [66] <author> Jeffrey S. Rosenschein and Michael R. Genesereth. </author> <title> Deals among rational agents. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 91-99, </pages> <address> Los Angeles, California, </address> <month> August </month> <year> 1985. </year> <note> (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 227-234, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: Reasoning about other systems is important whether the systems are cooperating, coexisting, or competing with each other. CDPS, as its name implies, concentrates only on forms of cooperation between AI systems. Note, however, that cooperation does not assume benevolence between nodes <ref> [66] </ref>, but instead that despite different viewpoints and goals, nodes must work together to meet the demands of their environment. CDPS also differs significantly from distributed processing. A distributed-processing network typically has multiple, disparate tasks executing concurrently in the network. <p> Through an appropriate dialogue, the agents can converge on shared plans for how they should coordinate their activities [35, ?]. Another research approach towards developing a formal theory for understanding the nature of cooperation among multiple agents is that of Rosenschein and Genesereth <ref> [65, 68, 66] </ref>. They have based their model on game theory techniques and have shown the utility of communication to resolve conflicts among agents having disparate goals.
Reference: [67] <author> Jeffrey S. Rosenschein and Michael R. Genesereth. </author> <title> Communication and cooperation among logic-based agents. </title> <booktitle> In Proceedings of the Sixth Phoenix Conference on Computers and Communications, </booktitle> <pages> pages 594-600, </pages> <address> Scottsdale, AZ, </address> <month> February </month> <year> 1987. </year>
Reference-contexts: Using a logic-based approach, Rosenschein and Genesereth studied how agents with a common goal but different local information can exchange propositions to converge on identical plans. In their formulation, goals are propositions to prove, local information is represented in axioms, and plans are proofs of the goal propositions <ref> [67] </ref>. They developed strategies for convergence based on assumptions about the correctness and completeness of agents' information, about what each agent knows about other agents' knowledge, about what each agent knows about itself, and about whether additional information can cause a previously acceptable plan to be unacceptable. <p> Both cases lead to the possibility of generating incorrect inferences which in turn may result in agents having inconsistent beliefs about the world. As a result, agents might never converge on shared, coordinated plans <ref> [67] </ref>. Hewitt, in his studies of open systems (Section 2.2.2), addresses this problem and argues that formal logic is inadequate [39]. 29 Researchers are following a number of different approaches to extending logical formalisms for CDPS applications.
Reference: [68] <author> Stan Rosenschein. </author> <title> Reasoning about distributed action. </title> <journal> SIGART Newsletter, </journal> <volume> 84:7, </volume> <year> 1983. </year>
Reference-contexts: Rosenschein has developed a more general theory of multi-agent planning which allows for the existence of other agents and their mental states as part of the environment within which plans can be constructed <ref> [68] </ref>. Halpern and Moses have investigated the issue of common knowledge between agents, discovering limitations in what agents can know about each other [36]. <p> Through an appropriate dialogue, the agents can converge on shared plans for how they should coordinate their activities [35, ?]. Another research approach towards developing a formal theory for understanding the nature of cooperation among multiple agents is that of Rosenschein and Genesereth <ref> [65, 68, 66] </ref>. They have based their model on game theory techniques and have shown the utility of communication to resolve conflicts among agents having disparate goals.
Reference: [69] <author> Earl D. Sacerdoti. </author> <title> A Structure for Plans and Behavior. </title> <publisher> Elsevier, </publisher> <year> 1977. </year>
Reference-contexts: The general approach is to provide each node with a model of other nodes' plans [13, 32, 43]. For example, Corkill has developed a distributed hierarchical planner based on NOAH <ref> [69] </ref> where nodes represent each other using MODEL nodes [13] and synchronize the plan execution with explicit synchronization actions. The nodes plan together level by level.
Reference: [70] <author> Arvind Sathi, Thomas E. Morton, and Steven F. Roth. Callisto: </author> <title> An intelligent project management system. </title> <journal> AI Magazine, </journal> <volume> 7(5) </volume> <pages> 34-52, </pages> <year> 1986. </year>
Reference-contexts: By building AI systems with coordination knowledge, we can remove some of the burden from people. Domains where this is important include intelligent command and control systems and multiuser project coordination <ref> [16, 57, 60, 70] </ref>. By building networks of CDPS computer assistants for the people in an organization, we can improve coordination by allowing these assistants to solve (initially routine) coordination problems such as scheduling meetings or routing messages to suitable people. <p> The negotiation framework developed by Sathi and his colleagues also has not been directly 13 applied to CDPS. In their framework, agents iteratively relax their constraints until a compromise is reached <ref> [70] </ref>.
Reference: [71] <author> Eric Schoen. </author> <title> The CAOS system. </title> <type> Technical Report STAN-CS-86-1125, </type> <institution> Computer Science Department, Stanford University, Stanford, </institution> <address> California 94305, </address> <month> March </month> <year> 1986. </year>
Reference-contexts: However, the relative autonomy and adaptability of the problem-solving nodes|a direct consequence of limited communication|sets CDPS networks apart from approaches such as the Actor framework [38], Hearsay-II [22], the ETHER language [44], the BEINGS system [48], CAOS <ref> [71] </ref>, Poligon [64], and Connectionism [58]. In all of these systems, knowledge is compartmentalized so that each actor or "expert" is a specialist in one particular aspect of the overall problem-solving task.
Reference: [72] <author> Herbert A. Simon. </author> <title> Models of Man. </title> <publisher> John Wiley & Sons, </publisher> <year> 1957. </year> <month> 37 </month>
Reference-contexts: Galbraith draws upon March and Simon's work, which recognized the limited information processing capabilities of humans <ref> [55, 72, 73] </ref>. Called bounded rationality, this limitation applies to both the amount of environmental (sensory) information that can be effectively used to make decisions, and the amount of control that can be effectively exercised.
Reference: [73] <author> Herbert A. Simon. </author> <booktitle> The Sciences of the Artificial. </booktitle> <publisher> MIT Press, </publisher> <year> 1969. </year>
Reference-contexts: Galbraith draws upon March and Simon's work, which recognized the limited information processing capabilities of humans <ref> [55, 72, 73] </ref>. Called bounded rationality, this limitation applies to both the amount of environmental (sensory) information that can be effectively used to make decisions, and the amount of control that can be effectively exercised.
Reference: [74] <author> David Smith and Martin Broadwell. </author> <title> Plan coordination in support of expert systems. </title> <booktitle> In Proceedings of the DARPA Knowledge-based Planning Workshop, </booktitle> <address> Austin, Texas, </address> <month> December </month> <year> 1987. </year>
Reference-contexts: Illustrative situations include controlling an autonomous vehicle that uses separate expert systems for system status, mission planning, navigation, situation assessment, and piloting <ref> [3, 74] </ref>; or negotiation among expert systems of two corporations to decide price and/or delivery time on a major purchase.
Reference: [75] <author> Reid G. Smith. </author> <title> A framework for distributed problem solving. </title> <booktitle> In Proceedings of the Sixth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 836-841, </pages> <address> Cambridge, Massachusetts, </address> <month> August </month> <year> 1979. </year>
Reference-contexts: The following subsections discuss more specific characterizations of negotiation. 2.1.1 The Contract-Net Protocol One of the earliest and most influential research projects in CDPS is the Contract-Net framework developed by Smith and Davis <ref> [79, 75, 76, 77, 78] </ref>. The nodes use the Contract-Net protocol to form contracts concerning how they should allocate tasks in the network.
Reference: [76] <author> Reid G. Smith. </author> <title> The contract net protocol: High-level communication and control in a distributed problem solver. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-29(12):1104-1113, </volume> <month> December </month> <year> 1980. </year>
Reference-contexts: The following subsections discuss more specific characterizations of negotiation. 2.1.1 The Contract-Net Protocol One of the earliest and most influential research projects in CDPS is the Contract-Net framework developed by Smith and Davis <ref> [79, 75, 76, 77, 78] </ref>. The nodes use the Contract-Net protocol to form contracts concerning how they should allocate tasks in the network.
Reference: [77] <author> Reid G. Smith and Randall Davis. </author> <title> Frameworks for cooperation in distributed problem solving. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <note> SMC-11(1):61-70, January 1981. (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 61-70, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: The following subsections discuss more specific characterizations of negotiation. 2.1.1 The Contract-Net Protocol One of the earliest and most influential research projects in CDPS is the Contract-Net framework developed by Smith and Davis <ref> [79, 75, 76, 77, 78] </ref>. The nodes use the Contract-Net protocol to form contracts concerning how they should allocate tasks in the network.
Reference: [78] <author> Reid G. Smith and Randall Davis. </author> <title> Negotiation as a metaphor for distributed problem solving. </title> <journal> Artificial Intelligence, </journal> <volume> 20 </volume> <pages> 63-109, </pages> <year> 1983. </year>
Reference-contexts: The following subsections discuss more specific characterizations of negotiation. 2.1.1 The Contract-Net Protocol One of the earliest and most influential research projects in CDPS is the Contract-Net framework developed by Smith and Davis <ref> [79, 75, 76, 77, 78] </ref>. The nodes use the Contract-Net protocol to form contracts concerning how they should allocate tasks in the network.
Reference: [79] <author> Reid Garfield Smith. </author> <title> A Framework for Problem Solving in a Distributed Processing Environment. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1978. </year> <note> A revised version was published by UMI Research Press. </note>
Reference-contexts: The following subsections discuss more specific characterizations of negotiation. 2.1.1 The Contract-Net Protocol One of the earliest and most influential research projects in CDPS is the Contract-Net framework developed by Smith and Davis <ref> [79, 75, 76, 77, 78] </ref>. The nodes use the Contract-Net protocol to form contracts concerning how they should allocate tasks in the network.
Reference: [80] <author> Stephen F. Smith and Juha E. Hynynen. </author> <title> Integrated decentralization of production management: An approach for factory scheduling. </title> <editor> In C. R. Liu, A. Requicha, and S. Chandrasekar, editors, </editor> <booktitle> Intelligent and Integrated Manufacturing Analysis and Synthesis, </booktitle> <pages> pages 427-439. </pages> <booktitle> The American Society of Mechanical Engineers, </booktitle> <address> New York, </address> <year> 1987. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing <ref> [80, 62, 61] </ref>, and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [81] <author> John A. Stankovic, Krithivasan Ramamritham, and Sheng-Chang Cheng. </author> <title> Evaluation of a flexible task scheduling algorithm for distributed hard real-time systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-34(12):1130=1143, </volume> <month> December </month> <year> 1985. </year>
Reference-contexts: However, more recent research into distributed scheduling for a network operating system has begun to take more of a CDPS perspective <ref> [81] </ref>. 2 Important CDPS Approaches and Empirical Investigations The underlying problem encountered in CDPS networks is that nodes must make decisions about their problem-solving and communication actions based on local views that might be incomplete, inconsistent, or out-of-date.
Reference: [82] <author> R. Steeb, S. Cammarata, S. Narain, J. Rothenburg, and W. Giarla. </author> <title> Cooperative intelligence for remotely piloted vehicle fleet control. </title> <type> Technical Report R-3408-ARPA, </type> <institution> Rand Corporation, </institution> <month> October </month> <year> 1986. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control [23, 88], cooperating robots, remotely piloted vehicles <ref> [82] </ref>, distributed process control in manufacturing [80, 62, 61], and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [83] <author> A. Strauss. </author> <title> Negotiations: Varieties, Processes, Contexts, and Social Order. </title> <booktitle> Jossey Bass, </booktitle> <address> San Francisco, </address> <year> 1978. </year>
Reference-contexts: Gasser [28] is pursuing a view of organization for CDPS that is less structural in perspective and more related to current organization theory <ref> [52, 83] </ref>. He views an organization as a "particular set of settled and unsettled problems about belief and action through which agents view other agents.
Reference: [84] <author> Katia Sycara. </author> <title> Planning for negotiation: A case-based approach. </title> <booktitle> In DARPA Knowledge-Based Planning Workshop, </booktitle> <pages> pages 11.1-11.10, </pages> <month> December </month> <year> 1987. </year>
Reference-contexts: choice is a plane with the most room to manueveur. 2.1.4 Cognitive Modeling of Negotiation Although her research has not been directly applied to CDPS, Sycara is developing a computational model for multistage negotiation leading to compromise between multiple agents dealing with multiple issues in both single and repeated encounters <ref> [87, 84, 85] </ref>. Her model is based on messages that contain proposed compromises, persuasive arguments, reasons for agreement or disagreement with compromises and arguments, requests for additional information, and agents' utility measures for the issues they disagree on.
Reference: [85] <author> Katia Sycara. </author> <title> Resolving goal conflicts via negotiation. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 245-250, </pages> <month> August </month> <year> 1988. </year>
Reference-contexts: But AI methods have in the past served to implement and validate theoretical models of human intelligence, and CDPS provides a similar methodological framework for testing theories about human cooperation and coordination. For example, an important and common aspect of coordination among humans is negotiating 4 through compromise <ref> [85] </ref>. Developing mechanisms that emulate human methods for coordinating their interactions can improve our understanding of humans, and in particular about how humans iteratively converge on decisions about how to share resources and avoid detrimental interactions. <p> choice is a plane with the most room to manueveur. 2.1.4 Cognitive Modeling of Negotiation Although her research has not been directly applied to CDPS, Sycara is developing a computational model for multistage negotiation leading to compromise between multiple agents dealing with multiple issues in both single and repeated encounters <ref> [87, 84, 85] </ref>. Her model is based on messages that contain proposed compromises, persuasive arguments, reasons for agreement or disagreement with compromises and arguments, requests for additional information, and agents' utility measures for the issues they disagree on.
Reference: [86] <author> Katia P. Sycara. </author> <title> Multi-agent compromise via negotiation. </title> <booktitle> In Proceedings of the 1988 Distributed AI Workshop, </booktitle> <month> May </month> <year> 1988. </year> <month> 38 </month>
Reference-contexts: A perennial goal of CDPS researchers has been to capitalize on insights about human negotiation, to build mechanisms that enable AI systems to negotiate. Unfortunately, negotiation, like other terms that describe human behavior (e.g., "intelligence") is difficult to define in mechanistic terms. For example, Sycara <ref> [86] </ref> states that 8 the negotiation process involves identifying potential interactions either through com-munication or by reasoning about the current states and intentions of other agents in the system and modifying the intentions of these agents to avoid harmful interactions or create cooperative situations.
Reference: [87] <author> Katia Sycara-Cyranski. </author> <title> Arguments of persuasion in labour mediation. </title> <booktitle> In Proceedings of the Ninth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 294-296, </pages> <address> Los Angeles, California, </address> <month> August </month> <year> 1985. </year>
Reference-contexts: choice is a plane with the most room to manueveur. 2.1.4 Cognitive Modeling of Negotiation Although her research has not been directly applied to CDPS, Sycara is developing a computational model for multistage negotiation leading to compromise between multiple agents dealing with multiple issues in both single and repeated encounters <ref> [87, 84, 85] </ref>. Her model is based on messages that contain proposed compromises, persuasive arguments, reasons for agreement or disagreement with compromises and arguments, requests for additional information, and agents' utility measures for the issues they disagree on.
Reference: [88] <author> Perry W. Thorndyke, David McArthur, and Stephanie Cammarata. </author> <title> Autopilot: A distributed planner for air fleet control. </title> <booktitle> In Proceedings of the Seventh International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 171-177, </pages> <month> August </month> <year> 1981. </year>
Reference-contexts: Distributed Planning and Control. Distributed planning and control applications involve developing and coordinating the actions of distributed effector nodes to perform desired tasks. Application domains include distributed air-traffic control <ref> [23, 88] </ref>, cooperating robots, remotely piloted vehicles [82], distributed process control in manufacturing [80, 62, 61], and resource allo 3 cation/control in a long-haul communication network [11, 34]. Distributed planning and control applications often involve distributed interpretation to determine appropriate node actions.
Reference: [89] <author> Robert Wesson, Frederick Hayes-Roth, John W. Burge, Cathleen Statz, and Carl A Sunshine. </author> <title> Network structures for distributed situation assessment. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <note> SMC-11(1):5-23, January 1981. (Also published in Readings in Distributed Artificial Intelligence, </note> <editor> Alan H. Bond and Les Gasser, editors, </editor> <address> pages 71-89, </address> <publisher> Morgan Kaufmann, 1988.). </publisher>
Reference-contexts: The differences are highlighted by considering several classes of application domains in CDPS research. Distributed Interpretation. Distributed interpretation applications require the integration and analysis of distributed data to generate a (potentially distributed) semantic model of the data. Application domains include distributed sensor networks <ref> [51, 50, 56, 89] </ref> and communication network fault diagnosis [12].
References-found: 89

