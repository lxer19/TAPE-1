URL: http://www.cs.wisc.edu/~fischer/ftp/pub/mcplib/pathsolv.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/mcplib/
Root-URL: 
Title: The Path Solver: A Non-Monotone Stabilization Scheme for Mixed Complementarity Problems  
Author: Steven P. Dirkse Michael C. Ferris 
Date: September 1993  
Abstract: The Path solver is an implementation of a stabilized Newton method for the solution of the Mixed Complementarity Problem. The stabilization scheme employs a path-generation procedure which is used to construct a piecewise-linear path from the current point to the Newton point; a step length acceptance criterion and a non-monotone pathsearch are then used to choose the next iterate. The algorithm is shown to be globally convergent under assumptions which generalize those required to obtain similar results in the smooth case. Several implementation issues are discussed, and extensive computational results obtained from problems commonly found in the literature are given. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. Armijo. </author> <title> Minimization of functions having Lipschitz-continuous first partial derivatives. </title> <journal> Pacific Journal on Mathematics, </journal> <volume> 16 </volume> <pages> 1-3, </pages> <year> 1966. </year>
Reference-contexts: Let A be a first-order approximation of f on X 0 . A is a uniform first-order approximation (with respect to X 0 ) if there exists h : (0; 1) 7! <ref> [0; 1] </ref>, with h (s) = o (s), such that for any x; y 2 X 0 , 4 Note the fundamental difference between first-order approximations to a function at a point and on a set; the approximation on a set is an operator by which approximations at the points in <p> We now define a path formally, using the definition from [34]. Definition 6 A path in IR n is a continuous function p : [0; T ] 7! IR n , where T 2 <ref> [0; 1] </ref>. The Newton path satisfies the following additional conditions: p k (0) = x k ; (8a) The path p k may be denoted simply by p when the context makes the meaning clear. <p> ) is a descent direction for fi; note that fi 0 (x k ) d = f (x k ) &gt; rf (x k ) d = f (x k ) &gt; f (x k ) In order to find a value of t which satisfies (12), an Armijo search <ref> [1, 7] </ref> can be performed on the path p.
Reference: [2] <author> D. P. Bertsekas and E. M. Gafni. </author> <title> Projection methods for variational inequalities with application to the traffic assignment problem. </title> <journal> Mathematical Programming Study, </journal> <volume> 17 </volume> <pages> 139-159, </pages> <year> 1982. </year>
Reference-contexts: 0, 0) 16 (35) 18 / 18 .54 J-N " " 16 (175) 18 / 18 .79 Path (0.5, : : : , 0.5, 0, 0, 0, 0) 16 (33) 18 / 18 .54 J-N " " 16 (175) 18 / 18 .79 31 5.6 A Traffic Assignment Model In <ref> [2] </ref>, Bertsekas and Gafni describe a traffic assignment problem and its formulation as a NCP in 15 variables. However, this problem can be formulated more concisely as a MCP, using only 5 variables.
Reference: [3] <author> A. Brooke, D. Kendrick, and A. Meeraus. </author> <title> GAMS: A User's Guide. </title> <publisher> The Scientific Press, </publisher> <address> South San Francisco, CA, </address> <year> 1988. </year>
Reference-contexts: This can be done automatically, by setting an option, and makes comparisons with Lemke's method a trivial task. These and other options can be set in an options file. In this section, use of the GAMS interface and options file are discussed further. 4.1 The GAMS Interface GAMS <ref> [3] </ref> is an algebraic modeling system which allows models to be expressed in a clear, concise, and easily modified way. Furthermore, it allows the model to be expressed independently of any solution algorithm for it.
Reference: [4] <author> M. Cao and M. C. Ferris. </author> <title> A pivotal method for affine variational inequalities. </title> <type> Technical Report 1114, </type> <institution> Computer Sciences Department, University of Wisconsin, Madison Wisconsin 53706, </institution> <month> October </month> <year> 1992. </year> <month> 34 </month>
Reference-contexts: In this case, a basis can be obtained by choosing as many slack columns as possible. In <ref> [4] </ref>, Cao and Ferris describe a scheme whereby the lineality of the feasible set B is factored out, and a new problem solved over a reduced space. The full rank condition on M f is a necessary condition in that context.
Reference: [5] <author> V. Chvatal. </author> <title> Linear Programming. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1983. </year>
Reference-contexts: A ray start is performed, in which 0 is set to minf j 0; e + q 0g. This ray start leads directly to an initial basic feasible solution (BFS) <ref> [5] </ref> of the system (9). Note that the variables z and w are feasible for the LCP only if = 0. In general, will be basic in the initial BFS, with value 0 &gt; 0, as a result of the ray start.
Reference: [6] <author> R. W. Cottle and G. B. Dantzig. </author> <title> Complementary pivot theory of mathematical programming. </title> <journal> Linear Algebra and its Applications, </journal> <volume> 1 </volume> <pages> 103-125, </pages> <year> 1968. </year>
Reference-contexts: When the feasible set B = IR n + , the approximation (7) reduces to the linear complementarity problem (LCP), to which Lemke's method can be applied. We now consider Lemke's method as a path construction technique. 6 In Lemke's method <ref> [24, 6] </ref>, an extra column (called a covering vector) is added to the matrix M , along with an artificial variable . Typically, the covering vector is taken to be the unit vector e (the vector whose components are all ones).
Reference: [7] <author> J. E. Dennis and R. B. Schnabel. </author> <title> Numerical Methods for Unconstrained Optimization and Nonlinear Equations. </title> <booktitle> Prentice-Hall Series in Computational Mathematics. </booktitle> <publisher> Prentice-Hall, Inc, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1983. </year>
Reference-contexts: 1 Introduction Among the many algorithms for solving nonlinear systems of equations, Newton's method is perhaps the most well known; basic references for it and its many variants are found in <ref> [28, 7] </ref>. This powerful method has excellent local convergence properties, but may fail to be globally convergent. Several damping strategies which involve searching the Newton direction exist; these enlarge the domain of convergence for Newton's method. <p> In the smooth case, the Newton direction yields a zero of the approximation and also serves as a descent direction for the merit function <ref> [7] </ref>. The paths we construct have similar properties. Recall from Section 2.2, (8b) that the norm of the approximation A k goes to zero linearly in (1 t) on the path p. <p> ) is a descent direction for fi; note that fi 0 (x k ) d = f (x k ) &gt; rf (x k ) d = f (x k ) &gt; f (x k ) In order to find a value of t which satisfies (12), an Armijo search <ref> [1, 7] </ref> can be performed on the path p.
Reference: [8] <author> S. P. Dirkse and M. C. Ferris. </author> <title> Solving complementarity problems via GAMS: A model library. </title> <type> Manuscript, </type> <year> 1993. </year>
Reference-contexts: This interface with GAMS grants the user a convenient and flexible means of defining the problem to be solved, as well as ready access to a library of complementarity problems already formulated in the GAMS language <ref> [8] </ref>. Since large, sparse problems are frequently encountered, the Path solver handles data in a sparse format. It also incorporates a DEVEX-type [20] scheme in the implementation of the ratio test, which increases numerical stability. <p> These problems, described in greater detail in <ref> [8] </ref>, have been formulated in GAMS and are available from the authors. The following algorithms are compared: Path The Path solver described in this paper. Path b The Path solver set to solve the first approximation from the Lemke-type basis described in Section 2.2.
Reference: [9] <author> S. P. Dirkse, M. C. Ferris, P. V. Preckel, and T. Rutherford. </author> <title> The GAMS callable program library for variational and complementarity solvers. </title> <type> Manuscript. </type>
Reference-contexts: The solver is written in the C language, and is designed to operate on its own or as a GAMS subsystem; the current implementation relies on GAMS/CPLIB (a software library developed in part by the authors <ref> [9] </ref>) to formulate the problems under consideration and provide function and derivative information. This interface with GAMS grants the user a convenient and flexible means of defining the problem to be solved, as well as ready access to a library of complementarity problems already formulated in the GAMS language [8]. <p> Furthermore, it allows the model to be expressed independently of any solution algorithm for it. By using GAMS/CPLIB, MCP's can be formulated and made available to solvers in a highly portable fashion, as described in <ref> [9] </ref> and illustrated below. The key elements of the MCP are the function f and the bounds l and u; these determine the problem completely. Fortunately, specifying the bounds is a trivial task.
Reference: [10] <author> M. C. Ferris and S. Lucidi. </author> <title> Globally convergent methods for nonlinear equations. </title> <type> Technical Report 1030, </type> <institution> Computer Sciences Department, University of Wisconsin, </institution> <year> 1991. </year>
Reference-contexts: Several damping strategies which involve searching the Newton direction exist; these enlarge the domain of convergence for Newton's method. Computational experience with linesearch schemes has shown that convergence can be slowed considerably by the requirements these schemes impose. Recently, Grippo, Lampariello, and Lucidi [12, 13] and Ferris and Lucidi <ref> [10] </ref> have shown that the monotone descent requirement of the linesearch can be relaxed somewhat without sacrificing the global convergence properties. Other references on this subject are Pang, Han, and Rangaraj [31] and Rangaraj [35]. A key generalization of Newton's method is its application to systems of nonsmooth equations. <p> Implementations of these methods invariably require a monotonic decrease in this merit function, although there is evidence which indicates that this requirement may impede or block convergence to the solution of the equation <ref> [12, 13, 10] </ref>. Various non-monotone stabilization (NMS) schemes for Newton's method have been proposed, each seeking to improve efficiency by relaxing the requirement of monotone descent. The Path solver implements a 11 scheme of this type, modified to incorporate a pathsearch rather than a linesearch.
Reference: [11] <author> R. Fletcher. </author> <title> Practical Methods of Optimization. </title> <publisher> John Wiley & Sons, </publisher> <year> 1987. </year>
Reference-contexts: A key generalization of Newton's method is its application to systems of nonsmooth equations. Nonsmooth equations arise in a number of mathematical programming applications; fl Computer Sciences Department, University of Wisconsin, Madison, Wisconsin 53706 1 examples include Wilson's sequential quadratic programming (SQP) method <ref> [43, 11, 39] </ref>, the generalized equations of Robinson [36, 37], and reformulations of variational inequalities (VI) and complementarity problems [39].
Reference: [12] <author> L. Grippo, F. Lampariello, and S. Lucidi. </author> <title> A nonmonotone line search technique for Newton's method. </title> <journal> SIAM Journal of Numerical Analysis, </journal> <volume> 23 </volume> <pages> 707-716, </pages> <year> 1986. </year>
Reference-contexts: Several damping strategies which involve searching the Newton direction exist; these enlarge the domain of convergence for Newton's method. Computational experience with linesearch schemes has shown that convergence can be slowed considerably by the requirements these schemes impose. Recently, Grippo, Lampariello, and Lucidi <ref> [12, 13] </ref> and Ferris and Lucidi [10] have shown that the monotone descent requirement of the linesearch can be relaxed somewhat without sacrificing the global convergence properties. Other references on this subject are Pang, Han, and Rangaraj [31] and Rangaraj [35]. <p> Implementations of these methods invariably require a monotonic decrease in this merit function, although there is evidence which indicates that this requirement may impede or block convergence to the solution of the equation <ref> [12, 13, 10] </ref>. Various non-monotone stabilization (NMS) schemes for Newton's method have been proposed, each seeking to improve efficiency by relaxing the requirement of monotone descent. The Path solver implements a 11 scheme of this type, modified to incorporate a pathsearch rather than a linesearch.
Reference: [13] <author> L. Grippo, F. Lampariello, and S. Lucidi. </author> <title> A class of nonmonotone stabilization methods in unconstrained optimization. </title> <journal> Numerische Mathematik, </journal> <volume> 59 </volume> <pages> 779-805, </pages> <year> 1991. </year>
Reference-contexts: Several damping strategies which involve searching the Newton direction exist; these enlarge the domain of convergence for Newton's method. Computational experience with linesearch schemes has shown that convergence can be slowed considerably by the requirements these schemes impose. Recently, Grippo, Lampariello, and Lucidi <ref> [12, 13] </ref> and Ferris and Lucidi [10] have shown that the monotone descent requirement of the linesearch can be relaxed somewhat without sacrificing the global convergence properties. Other references on this subject are Pang, Han, and Rangaraj [31] and Rangaraj [35]. <p> Implementations of these methods invariably require a monotonic decrease in this merit function, although there is evidence which indicates that this requirement may impede or block convergence to the solution of the equation <ref> [12, 13, 10] </ref>. Various non-monotone stabilization (NMS) schemes for Newton's method have been proposed, each seeking to improve efficiency by relaxing the requirement of monotone descent. The Path solver implements a 11 scheme of this type, modified to incorporate a pathsearch rather than a linesearch.
Reference: [14] <author> S.-P. Han, J.-S. Pang, and N. Rangaraj. </author> <title> Globally convergent Newton methods for non-smooth equations. </title> <journal> Mathematics of Operations Research, </journal> <volume> 17(3) </volume> <pages> 586-607, </pages> <month> August </month> <year> 1992. </year>
Reference-contexts: Other work in this area includes that of Han, Pang, and Rangaraj <ref> [14] </ref> and a recent article by Pang and Qi [32]. An extensive bibliography can be found in the survey article [18] by Harker and Pang.
Reference: [15] <author> T. Hansen and T. C. Koopmans. </author> <title> On the definition and computation of a capital stock invariant under optimization. </title> <journal> Journal of Economic Theory, </journal> <volume> 5 </volume> <pages> 487-523, </pages> <year> 1972. </year>
Reference-contexts: We believe that the complementarity formulation they employed does not accurately reflect Powell's constraints, and that it is unlikely that their solutions correspond to feasible points for the original problem. 5.5 The Hansen-Koopmans Problem In <ref> [15] </ref>, Hansen and Koopmans consider the problem of determining an invariant capital stock. <p> An invariant capital stock is an initial investment of capital which has the property that the discounted sum of the utilities is maximumized when the initial capital stock remains unchanged during each of the following time periods. The Path solver was tested on a 14-variable example taken from <ref> [15] </ref>; all the data in Table 10 were obtained using a discount factor of ff = 0:7 and the starting points indicated. In addition, we have used a two-stage approach to test the Path solver and the Josephy-Newton method.
Reference: [16] <author> P. T. Harker. </author> <title> Alternative models of spatial competition. </title> <journal> Operations Research, </journal> <volume> 34 </volume> <pages> 410-425, </pages> <year> 1986. </year>
Reference-contexts: " 20 Path (1, 1, : : : , 1) 17 (413) 18 / 18 13.14 Path b " " 9 (33) 10 / 10 .56 J-N " " 9 (170) 10 / 10 1.41 B-DIFF " " 15 NE/SQP " " 20 In another example of spatial competition, Harker <ref> [16] </ref> gives an example of an oligopolis-tic market. In this market, the supplies and demands are the variables; these supplies and demands determine the prices. As in the previous example, the conditions for a spatial price equilibrium lead to an NCP, in 27 variables.
Reference: [17] <author> P. T. Harker. </author> <title> Accelerating the convergence of the diagonalization and projection algorithms for finite-dimensional variational inequalities. </title> <journal> Mathematical Programming, </journal> <volume> 41 </volume> <pages> 29-59, </pages> <year> 1988. </year>
Reference-contexts: 4 1.47 J-N " " 3 (102) 4 / 4 3.41 p 1 = (1; : : : ; 1); y 1 = (1; : : : ; 1) 5.2 A Nash Equilibrium In [26], a 10-variable Nash equilibrium problem is described; solution techniques for this problem are discussed in <ref> [17] </ref>. All the methods performed well on this problem; however, since all variables are positive at the solution, the warm start taken by the Path solver makes it particularly effective.
Reference: [18] <author> P. T. Harker and J.-S. Pang. </author> <title> Finite-dimensional variational inequality and nonlinear complementarity problems: A survey of theory, algorithms, </title> <journal> and applications. Mathematical Programming, </journal> <volume> 48(2) </volume> <pages> 161-220, </pages> <month> September </month> <year> 1990. </year>
Reference-contexts: Other work in this area includes that of Han, Pang, and Rangaraj [14] and a recent article by Pang and Qi [32]. An extensive bibliography can be found in the survey article <ref> [18] </ref> by Harker and Pang. The primary aims of this paper are to introduce and describe a stabilization scheme for Newton methods for nonsmooth equations, present a global convergence result for the resulting algorithm, and give the results of an extensive computational study of this algorithm.
Reference: [19] <author> P. T. Harker and B. Xiao. </author> <title> Newton's method for the nonlinear complementarity problem: </title>
Reference-contexts: While these nonsmooth equations are not F (rechet)-differentiable, they are often B (ouligand)-differentiable [38]; Pang [29] presents a generalization of Newton's method based on this, while Harker and Xiao <ref> [19] </ref> describe the the results of their computational study of this method as applied to a number of complementarity problems. Other work in this area includes that of Han, Pang, and Rangaraj [14] and a recent article by Pang and Qi [32]. <p> J-N The classic Josephy-Newton's method, as described in [21]. The results shown were obtained by running the Path solver with the options file set to emulate Josephy-Newton's method. B-DIFF The B-differentiable equations approach of Harker and Xiao <ref> [19] </ref>, in which each major iteration involves a linesearch of a direction determined by solv ing a system of equations. NE/SQP In [30], Pang and Gabriel describe a scheme in which the search direction is determined by solving a quadratic program; this direction is linesearched as well. <p> Unless otherwise noted, the results for the Path solver were obtained using default values for all parameters; in no case was the code modified to improve performance for any particular problem. For B-DIFF and NE/SQP we include only results available in the literature <ref> [19, 30] </ref>. 24 The results presented in this section indicate that the Path solver improves on the clas-sical Josephy-Newton's method in both speed and robustness. <p> The problem from [22] was also used in numerical tests done by Josephy in [21], and is referred to as the Josephy problem here and in <ref> [19] </ref>. When previous versions of the Path solver which utilized a forward pathsearch and did not include the watchdog techniques of the current version were tested on these problems, they tended to perform poorly from some of the start points considered. <p> The stabilization techniques have yielded the Path solver results shown in Tables 6 and 7. These results were achieved without the heuristic used in <ref> [19] </ref>: this heuristic has the effect of moving to a basis for which both B-DIFF and the Path solver have little difficulty. 5.4 A Non-Linear Program from Powell In [33], Powell gives a nonlinear program containing 5 variables and three equality constraints. <p> Note also that the Path solver terminated at the global optimum when run on the MCP model. While Harker and Xiao <ref> [19] </ref> report computational experience using this problem, we have not included their results here.
References-found: 19

