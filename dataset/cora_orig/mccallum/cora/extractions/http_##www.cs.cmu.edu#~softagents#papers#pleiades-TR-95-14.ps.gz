URL: http://www.cs.cmu.edu/~softagents/papers/pleiades-TR-95-14.ps.gz
Refering-URL: http://www.cs.cmu.edu/~softagents/publications_old.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Cooperative Intelligent Software Agents  
Author: Dajun Zeng Katia Sycara 
Note: c fl1995 Carnegie Mellon University yThis research has been sponsored in part by ARPA Contract F33615-93-1 1330  
Date: March, 1995  
Address: Pittsburgh, Pennsylvania 15213  
Affiliation: The Robotics Institute Carnegie Mellon University  
Pubnum: CMU-RI-TR-95-14  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Lisa Dent, Jesus Boticario, John McDermott, Tom Mitchell, and David Zabowski. </author> <title> A personal learning apprentice. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence. AAAI, </booktitle> <year> 1992. </year>
Reference-contexts: If a task assistant is a personal assistant to a particular user, it possesses in addition, task-relevant preferences of its user. For details on automated acquisition of user preferences, see <ref> [1, 10] </ref>. Having the user interact only through a relevant task assistant hides the underlying distributed information gathering and problem solving complexity and frees the user from having to know of, access and interact with a plethora of information seeking agents in support of a task. <p> If faculty members have personalized calendar management assistants (e.g., Tom Mitchell's Calendar Apprentice CAP <ref> [1, 8] </ref>), the scheduling agent communicates with those assistants 3 . For each contacted faculty member, his/her calendar assistant sends the scheduling agent information as to whether the faculty member agrees to meet with Gio and the preferred meeting location and time.
Reference: [2] <author> Oren Etzioni, Keith Golden, and Daniel Weld. </author> <title> Tractable closed world reasoning with updates. </title> <booktitle> In Proceedings of 4th International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <year> 1994. </year>
Reference-contexts: On the other hand, automated or semi-automated problem solving systems typically operate in a closed world environment, where almost every piece of information needed for problem solving is assumed to be known before problem solving starts or can be inferred by the system <ref> [2] </ref>. For ex 1 We want to thank Tom Mitchell, Rich Caruana, Dana Freitag, Matthew Glickman, Ken Lang, Sean Slittery, David Zabowski and other members of the PLEIADES project for interesting discussions.
Reference: [3] <author> Oren Etzioni and Daniel Weld. </author> <title> A softbot-based interface to the internet. </title> <journal> Communications of the ACM, </journal> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: Although this opportunity has been recognized by the decision support community [6], there has currently been limited investigation of problem solving frameworks where information is actively sought out in an open environment and is seamlessly integrated with problem solving and decision making <ref> [3, 9] </ref>. One of the main goals of our research in the PLEIADES group is to address this issue. In most current information retrieval systems, users are assumed to know the information source and the form of their queries. <p> To realize the great opportunities for enhanced decision support presented by the availability of the new network-based electronic information environment, new problem solving architectures must be developed that integrate active information gathering with decision support functionality <ref> [3] </ref>. In this paper, we present a distributed framework where intelligent software agents cooperate asynchronously to perform goal-directed information retrieval and information integration in support of various tasks, such as finding information about people on the Internet, managing calendars and making arrangements to host visitors in an academic environment.
Reference: [4] <author> Tim Finin, Rich Fritzson, and Don McKay. </author> <title> A language and protocol to support intelligent agent interoperability. </title> <booktitle> In Proceedings of the CE and CALS Washington 92 Conference, </booktitle> <month> June </month> <year> 1992. </year>
Reference-contexts: Obviously, one of the major issues involved in multi-agent system is the problem of interoperabil 5 ity and communication between the agents. In our framework, we use the KQML language <ref> [4] </ref> for inter-agent communication. In order to incorporate and utilize pre-existing software agents or information services that have been developed by others, we adopt the following strategy: If the agent is under our control, it will be built using KQML.
Reference: [5] <author> Henry A. Kautz, Bart Selman, and Michael Coen. </author> <title> Bottom-up design of software agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year> <month> 9 </month>
Reference-contexts: Hosting a visitor involves arranging the visitor's schedule with faculty whose research interests match the interests that the visitor has expressed in his/her visit request. A different variation of the hosting visitor task has also been explored by Kautz and his colleagues at Bell Labs <ref> [5] </ref>. A visitor hosting agent should have the following capabilities: (1) It should automate information retrievals in terms of finding personnel information of potential appropriate meeting attendees. It should be able to access various on-line public databases and information resources at the disposal of the visit organizer.
Reference: [6] <author> Jay Liebowitz. </author> <title> Expert SYSTEMS for business and management. </title> <publisher> Your--don Press, </publisher> <address> Englewood Cliffs, N.J., </address> <year> 1990. </year>
Reference-contexts: This presents the opportunity for enhanced levels of decision support that integrate information gathering and utilization into a decision support framework. Although this opportunity has been recognized by the decision support community <ref> [6] </ref>, there has currently been limited investigation of problem solving frameworks where information is actively sought out in an open environment and is seamlessly integrated with problem solving and decision making [3, 9]. One of the main goals of our research in the PLEIADES group is to address this issue.
Reference: [7] <author> JyiShane Liu and Katia Sycara. </author> <title> Distributed meeting scheduling. </title> <booktitle> In Proceedings of the Sixteenth Annual Conference of the Cognitive Science Society, </booktitle> <address> Atlanta, Georgia, </address> <month> August 13-16 </month> <year> 1994. </year>
Reference-contexts: The scheduling task where multiple agents are involved is very complex and will not be described here. (For details, see <ref> [7] </ref>.) To support the hosting visitors task, Visitor Hoster retrieves information from various heterogeneous information resources at CMU and also internet-based resources, such as remotely accessing plan files at sites external to CMU to extract information about people.
Reference: [8] <author> Tom Mitchell, Rich Caruana, Dayne Freitag, John McDermott, and David Zabowski. </author> <title> Experience with a learning personal assistant. </title> <journal> Communications of the ACM, </journal> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year>
Reference-contexts: If faculty members have personalized calendar management assistants (e.g., Tom Mitchell's Calendar Apprentice CAP <ref> [1, 8] </ref>), the scheduling agent communicates with those assistants 3 . For each contacted faculty member, his/her calendar assistant sends the scheduling agent information as to whether the faculty member agrees to meet with Gio and the preferred meeting location and time.
Reference: [9] <author> Tim Oates, M. V. Nagendra Prasad, and Victor R. Lesser. </author> <title> Cooperative information gathering: A distributed problem solving approach. </title> <note> Technical Report UMass Computer Science Techincal Report 94-66, </note> <institution> Depart of Computer Science, University of Massachusetts, </institution> <year> 1994. </year>
Reference-contexts: Although this opportunity has been recognized by the decision support community [6], there has currently been limited investigation of problem solving frameworks where information is actively sought out in an open environment and is seamlessly integrated with problem solving and decision making <ref> [3, 9] </ref>. One of the main goals of our research in the PLEIADES group is to address this issue. In most current information retrieval systems, users are assumed to know the information source and the form of their queries.
Reference: [10] <author> Katia Sycara and Kazuo Miyashita. </author> <title> Case-based acquisition of user preferences for solution improvement in ill-structured domains. </title> <booktitle> In Proceedings of AAAI-94, </booktitle> <address> Seattle, Washington, </address> <month> August </month> <year> 1994. </year> <note> AAAI. 10 </note>
Reference-contexts: If a task assistant is a personal assistant to a particular user, it possesses in addition, task-relevant preferences of its user. For details on automated acquisition of user preferences, see <ref> [1, 10] </ref>. Having the user interact only through a relevant task assistant hides the underlying distributed information gathering and problem solving complexity and frees the user from having to know of, access and interact with a plethora of information seeking agents in support of a task.
References-found: 10

