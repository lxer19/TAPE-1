URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/98.aips.satplan.ps
Refering-URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/papers.html
Root-URL: 
Email: kautz@research.att.com  selman@cs.cornell.edu  
Title: The Role of Domain-Specific Knowledge in the Planning as Satisfiability Framework  
Author: Henry Kautz Bart Selman 
Address: 180 Park Avenue Florham Park, NJ 07932  Ithaca, NY 14853  
Affiliation: AT&T Laboratories  Department of Computer Science Cornell University  
Abstract: SATPLAN is currently one of the fastest planning systems for domain-independent planning. In nearly all practical applications, however, there exists an abundance of domain-specific knowledge that can be used to improve the performance of a planning system. This knowledge is traditionally encoded as procedures or rules that are tied to the details of the planning engine. We present a way to encode domain knowledge in a purely declarative, algorithm independent manner. We demonstrate that the same heuristic knowledge can be used by completely different search engines, one systematic, the other using greedy local search. This approach greatly enhances the power of SATPLAN: solution times for some problems are reduced from days to seconds. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Adorf, H.M. Johnston, M.D. </author> <year> (1990). </year> <title> A discrete stochastic neural network algorithm for constraint satisfaction problems. </title> <booktitle> Proc. of the Int. Joint Conf. on Neural Networks, </booktitle> <address> San Diego, CA, </address> <year> 1990. </year>
Reference: <author> Agre, P. and Chapman, D. </author> <year> (1987). </year> <title> Pengi: an implementation of a theory of activity. </title> <booktitle> Proc. AAAI-87, </booktitle> <address> Seattle, WA. </address>
Reference-contexts: The reason is that practical systems minimize search by using techniques such as domain-specific control rules (Bacchus and Kabanza 1995, Carbonell et al. 1992, Penberthy 1992, Sacerdoti 1977, Slaney and Thiebaux 1996, Veloso 1992, and Weld 1994), "compiled" reactive plans <ref> (Agre and Chapman 1987, Williams and Nayak 1997) </ref>, and heuristics based on temporal and resource constraints (Vere 1985, Muscettola 1994). However, scaling remains problematic in many interesting domains. All these techniques involve incorporating more domain specific knowledge into the planner.
Reference: <author> Bacchus, F. and Kabanza, F. </author> <year> (1995). </year> <title> Using temporal logic to control search in a forward-chaining planner. </title> <type> Technical report, </type> <institution> University of Waterloo. </institution>
Reference: <author> Blum, A. and Furst, </author> <title> M.L. (1995). Fast planning through planning graph analysis. </title> <booktitle> Proc. IJCAI-95, </booktitle> <address> Montreal, Canada. </address>
Reference: <author> Bonet, B., Loerincs, G., and Geffner, H. </author> <year> (1990). </year> <title> A robust and fast action selection mechanism. </title> <booktitle> Proc. </booktitle> <address> AAAI-97, Providence, </address> <publisher> RI, </publisher> <pages> 714-719. </pages>
Reference: <author> Carbonell, J. , Blythe J., Etzioni, O., Gil, Y., Joseph, R., Kahn, D., Knoblock, C., Minton, S., Perez, A., Reilly, S., Veloso, M., Wang, </author> <title> X (1992). Prodigy 4.0: the manual and tutorial. </title> <type> CMU, CS Tech. Report CMU-CS-92-150. </type>
Reference: <author> Crawford, J.M. and Auton, L.D. </author> <year> (1993). </year> <title> Experimental results on the cross-over point in satisfiability problems. </title> <booktitle> Proc. AAAI-93, </booktitle> <address> Washington, DC, </address> <pages> 21-27. </pages>
Reference-contexts: The "ntab" variations employ an implementation <ref> (Crawford and Auton 1993) </ref> of the classic Davis-Putnam-Loveland systematic search procedure, while the "Walksat" variations use stochastic local search. (Our specific version of local search is based on the GSAT / Walksat algorithm (Selman et al. 1992; 1994).) The "STRIPS" variations used SAT encodings automatically generated from a STRIPS-style problem specification: <p> These experiments expand on the ones performed in Ernst et al. (1997), which considered only the "move" and "state" versions. Each version of each problem was instantiated, simplified by unit propagation, and then solved by the "ntab" implementation of the Davis-Putnam-Loveland procedure <ref> (Crawford and Auton 1993) </ref>, and by Walk-sat. The number of time steps was set to the smallest (optimal) value.
Reference: <author> Ernst, M.D., Millstein, T.D., and Weld, D.S. </author> <year> (1997). </year> <title> Automatic SAT-compilation of planning problems. </title> <booktitle> Proc. IJCAI-97, Nagoya, Japan, </booktitle> <pages> 1169-1176. </pages>
Reference: <author> Erol, K., Nau, D.S., and Subrahmanian, </author> <title> V.S. (1992). On the complexity of domain-independent planning. </title> <booktitle> Proceedings AAAI92, </booktitle> <pages> 381-386. </pages>
Reference: <author> Etzioni, </author> <title> Oren (1993). Acquiring search-control knowledge via static analysis. </title> <journal> Artificial Intelligence, </journal> <volume> 62(2), </volume> <pages> 255-302. </pages>
Reference: <author> Frank, J., Cheeseman, P., and Stutz, J. </author> <title> (to appear). When gravity fails: local search topology. </title>
Reference: <author> Gupta and Nau (1992). </author> <title> On the complexity of blocks-world planning. </title> <journal> Artificial Intelligence, </journal> <volume> 56, </volume> <pages> 139-403. </pages>
Reference: <author> Joslin, D. and Pollack, M. </author> <year> (1995). </year> <title> Passive and Active Decision Postponement in Plan Generation. </title> <booktitle> In the European Workshop on Planning (EWSP), </booktitle> <address> Assisi, Italy, </address> <month> Sept. </month> <year> 1995. </year>
Reference: <author> Joslin D. and Roy, A. </author> <year> (1997). </year> <title> Exploiting symmetries in lifted CSPs. </title> <booktitle> Proc. </booktitle> <address> AAAI-97, Providence, RI. </address>
Reference: <author> Kambhampati, S., Katukam, S., and Qu, Y. </author> <year> (1996). </year> <title> Failure driven dynamic search control for partial order planners: an explanation based approach. </title> <booktitle> Artificial Intelligence 88(1-2), </booktitle> <pages> 253-315. </pages>
Reference: <author> Kautz, H., McAllester, D., and Selman, B. </author> <year> (1996). </year> <title> Encoding plans in propositional logic. </title> <booktitle> Proc. </booktitle> <address> KR-96, Cam-bridge, MA. </address>
Reference-contexts: It would be interesting to investigate how to modify techniques such as EBL so that the output is a set of such constraints. There is also a relationship between heuristic generation and what has been called "theory compilation" <ref> (Selman and Kautz 1996) </ref>. For example, one could fix the operators and the goal state, generate a number of consequences, and add them back to the original the-ory. <p> Third, we will be comparing the manually-created heuristic axioms used here with those that can be automatically generated, either by exact compilation (Williams and Nayak 1997) or approximate compilation <ref> (Selman and Kautz 1996) </ref>. Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans (Kautz, McAllester, and Selman 1996), metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. <p> Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans <ref> (Kautz, McAllester, and Selman 1996) </ref>, metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. We believe that many of the lessons we have learned about state-space planning apply to more general models.
Reference: <author> Kautz, H. and Selman, B. </author> <year> (1996). </year> <title> Pushing the envelope: planning, propositional logic, and stochastic search. </title> <booktitle> Proc. </booktitle> <address> AAAI-1996, Portand, OR, </address> <year> 1996. </year>
Reference-contexts: It would be interesting to investigate how to modify techniques such as EBL so that the output is a set of such constraints. There is also a relationship between heuristic generation and what has been called "theory compilation" <ref> (Selman and Kautz 1996) </ref>. For example, one could fix the operators and the goal state, generate a number of consequences, and add them back to the original the-ory. <p> Third, we will be comparing the manually-created heuristic axioms used here with those that can be automatically generated, either by exact compilation (Williams and Nayak 1997) or approximate compilation <ref> (Selman and Kautz 1996) </ref>. Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans (Kautz, McAllester, and Selman 1996), metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. <p> Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans <ref> (Kautz, McAllester, and Selman 1996) </ref>, metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. We believe that many of the lessons we have learned about state-space planning apply to more general models.
Reference: <author> Knoblock, C. </author> <year> (1994). </year> <title> Automatically generating abstrac tions for planning. </title> <booktitle> Artificial Intelligence 68(2). </booktitle>
Reference-contexts: A different (complementary) approach is to automatically generate heuristics. There has been a great deal of work on the problem of heuristic generation, including that on explanation-based learning (Minton 1988, Kambhampati et al. 1996), static analysis of operator schemas (Smith 1989, Etzioni 1993), problem abstraction <ref> (Knoblock 1994) </ref>, and operator-graph analysis (Smith and Peot 1996). All of this work has aimed at producing explicit search control rules: for example, rules that would state when to prefer one operator application over another, or when to cut off a branch of recursive search.
Reference: <author> Li, Chu Min and Anbulagan (1997). </author> <title> Heuristics based on unit propagation for satisfiability problems. </title> <booktitle> Proc. IJCAI-97, </booktitle> <address> Kyoto, Japan, </address> <year> 1997. </year>
Reference-contexts: For example, one could fix the operators and the goal state, generate a number of consequences, and add them back to the original the-ory. In the worse case, the compiled theory is exponentially large, but the general approach can be efficient in practice <ref> (Williams and Nayak 1997) </ref>. Another area that investigates potentially useful techniques is that of simplification of search problems by the discovery of "symmetries". <p> We are beginning experiments with a new SAT engine combining features of stochastic and systematic search that is particularly good at solving planning problems. Third, we will be comparing the manually-created heuristic axioms used here with those that can be automatically generated, either by exact compilation <ref> (Williams and Nayak 1997) </ref> or approximate compilation (Selman and Kautz 1996). Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans (Kautz, McAllester, and Selman 1996), metric and qualitative temporal constraints, and soft constraints.
Reference: <author> McAllester, David (1991). </author> <title> Observations on cognitive judgements. </title> <booktitle> Proc. AAAI-91, </booktitle> <address> Anaheim, CA, </address> <pages> 910-915. </pages>
Reference-contexts: How can one can go about developing heuristics for a problem domain? The traditional approach, and the one followed in this paper, is to simply employ introspection to capture both "obvious" inferences that are hard to deduce mechanically <ref> (McAllester 1991) </ref> and simplifying assumptions that follow from abstracting the essence of the domain. It is clearly a matter of debate whether the introspective approach is feasible in the long run. The common complaint is that manually-created heuristics are hard to maintain as a complex system evolves over time.
Reference: <author> Minton, S. </author> <year> (1988). </year> <title> Quantitative results concerning the utility of explanation-based learning. </title> <booktitle> Proc. AAAI-88, </booktitle> <address> St. </address>
Reference-contexts: Thus, they may prove to be no harder to write or maintain than any other part of the domain specification. A different (complementary) approach is to automatically generate heuristics. There has been a great deal of work on the problem of heuristic generation, including that on explanation-based learning <ref> (Minton 1988, Kambhampati et al. 1996) </ref>, static analysis of operator schemas (Smith 1989, Etzioni 1993), problem abstraction (Knoblock 1994), and operator-graph analysis (Smith and Peot 1996).
Reference: <author> Paul, </author> <booktitle> MN, </booktitle> <pages> 564-569. </pages>
Reference: <author> Muscettola, N. </author> <year> (1994). </year> <title> On the utility of bottleneck reasoning for scheduling. </title> <booktitle> Proc. AAAI-94, </booktitle> <address> Seattle, WA, </address> <pages> 1105-1110. </pages>
Reference: <author> Penberthy, J. and Weld, D. </author> <year> (1992). </year> <title> UCPOP: A sound, complete, partial order planner for ADL. </title> <booktitle> In the Proc. of the Third Int. Conf. on Knowledge Representation and Reasoning, </booktitle> <address> Boston, MA, </address> <pages> 103-114. </pages>
Reference: <author> Sacerdoti, E. D. </author> <year> (1977). </year> <title> A Structure for Plans and Behavior. </title> <publisher> Elsevier, </publisher> <address> NY. </address>
Reference: <author> Selman, B. and Kautz, H. </author> <year> (1996). </year> <title> Knowledge compilation and theory approximation. </title> <journal> Journal of the ACM, </journal> <volume> 43(2) </volume> <pages> 193-224, </pages> <year> 1996. </year>
Reference-contexts: It would be interesting to investigate how to modify techniques such as EBL so that the output is a set of such constraints. There is also a relationship between heuristic generation and what has been called "theory compilation" <ref> (Selman and Kautz 1996) </ref>. For example, one could fix the operators and the goal state, generate a number of consequences, and add them back to the original the-ory. <p> Third, we will be comparing the manually-created heuristic axioms used here with those that can be automatically generated, either by exact compilation (Williams and Nayak 1997) or approximate compilation <ref> (Selman and Kautz 1996) </ref>. Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans (Kautz, McAllester, and Selman 1996), metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. <p> Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans <ref> (Kautz, McAllester, and Selman 1996) </ref>, metric and qualitative temporal constraints, and soft constraints. The basic principle behind all our work is to view planning as efficient combinatorial search. We believe that many of the lessons we have learned about state-space planning apply to more general models.
Reference: <author> Selman, B., Kautz, H., and Cohen, B. </author> <year> (1994). </year> <title> Noise Strategies for Local Search. </title> <booktitle> Proc. AAAI-94, </booktitle> <address> Seattle, WA, </address> <year> 1994, </year> <pages> 337-343. </pages>
Reference-contexts: We showed how planning problems could be converted into large propositional satisfiabil-ity problems, and then solved using highly-optimized search procedures. In particular, we showed that Walk-sat <ref> (Selman et al. 1994) </ref> could be used to solve certain hard planning problems that were beyond the capabilities of previous specialized planning systems. The SATPLAN system operates by converting a planning problem into a set of axiom schemas. These schemas are instantiated for plans of a fixed given length.
Reference: <author> Selman, B., Levesque, H.J., and Mitchell, D. </author> <title> (1992) A new method for solving hard satisfiability problems. </title> <booktitle> Proc. AAAI-92, </booktitle> <address> San Jose, CA (1992) 440-446. </address>
Reference: <author> Slaney, J. and Thiebaux, S. </author> <year> (1996). </year> <title> Linear time near-optimal planning in the blocks world. </title> <booktitle> Proc. AAAI-96, </booktitle> <address> Portland, OR, </address> <year> 1996. </year>
Reference: <author> Smith, D. </author> <year> (1989). </year> <title> Controlling backward inference. </title> <journal> Artificial Intelligence, </journal> <volume> 39, </volume> <pages> 145-208. </pages>
Reference-contexts: A different (complementary) approach is to automatically generate heuristics. There has been a great deal of work on the problem of heuristic generation, including that on explanation-based learning (Minton 1988, Kambhampati et al. 1996), static analysis of operator schemas <ref> (Smith 1989, Etzioni 1993) </ref>, problem abstraction (Knoblock 1994), and operator-graph analysis (Smith and Peot 1996).
Reference: <author> Smith, D. and Parra, E. </author> <title> Transfornational Approach to Transportation Scheduling, </title> <booktitle> Proc. of the 8th Knowledge-Based Software Eng. Conf., 1993, </booktitle> <address> Chicago, IL. </address>
Reference: <author> Smith, D. and Peot, M. </author> <year> (1996). </year> <title> Suspending recurison in causal link planning. </title> <booktitle> Proc. </booktitle> <address> AIPS-96, Edinburgh, UK, </address> <year> 1996. </year>
Reference-contexts: There has been a great deal of work on the problem of heuristic generation, including that on explanation-based learning (Minton 1988, Kambhampati et al. 1996), static analysis of operator schemas (Smith 1989, Etzioni 1993), problem abstraction (Knoblock 1994), and operator-graph analysis <ref> (Smith and Peot 1996) </ref>. All of this work has aimed at producing explicit search control rules: for example, rules that would state when to prefer one operator application over another, or when to cut off a branch of recursive search.
Reference: <author> Stone, P., Veloso, M., and Blythe, J. </author> <year> (1994). </year> <title> The need for different domain-independent heuristics. </title> <booktitle> In AIPS94, </booktitle> <pages> pages 164-169, </pages> <address> Chicago, </address> <year> 1994. </year>
Reference: <author> Veloso, M. </author> <year> (1992). </year> <title> Learning by analogical reasoning in general problem solving. </title> <type> Ph.D. Thesis, CMU, CS Techn. Report CMU-CS-92-174. </type>
Reference: <author> Vere, S. </author> <year> (1985). </year> <title> Temporal scope of assertions and window cutoff. </title> <booktitle> Proc. IJCAI-85, </booktitle> <address> Los Angeles, CA. </address>
Reference-contexts: minimize search by using techniques such as domain-specific control rules (Bacchus and Kabanza 1995, Carbonell et al. 1992, Penberthy 1992, Sacerdoti 1977, Slaney and Thiebaux 1996, Veloso 1992, and Weld 1994), "compiled" reactive plans (Agre and Chapman 1987, Williams and Nayak 1997), and heuristics based on temporal and resource constraints <ref> (Vere 1985, Muscettola 1994) </ref>. However, scaling remains problematic in many interesting domains. All these techniques involve incorporating more domain specific knowledge into the planner.
Reference: <author> Williams, B. and Nayak, P. </author> <year> (1997). </year> <title> A reactive planner for a model-based executive. </title> <booktitle> Proc. IJCAI-97, </booktitle> <address> Kyoto, Japan. </address>
Reference-contexts: For example, one could fix the operators and the goal state, generate a number of consequences, and add them back to the original the-ory. In the worse case, the compiled theory is exponentially large, but the general approach can be efficient in practice <ref> (Williams and Nayak 1997) </ref>. Another area that investigates potentially useful techniques is that of simplification of search problems by the discovery of "symmetries". <p> We are beginning experiments with a new SAT engine combining features of stochastic and systematic search that is particularly good at solving planning problems. Third, we will be comparing the manually-created heuristic axioms used here with those that can be automatically generated, either by exact compilation <ref> (Williams and Nayak 1997) </ref> or approximate compilation (Selman and Kautz 1996). Finally, we are beginning to experiment with SAT-PLAN for richer planning models, such as ones involving causal plans (Kautz, McAllester, and Selman 1996), metric and qualitative temporal constraints, and soft constraints.
Reference: <author> Weld, D. </author> <year> (1994). </year> <title> An introduction to least commitment planning. </title> <journal> AI Magazine, </journal> <month> Summer/Fall </month> <year> 1994. </year>
References-found: 37

