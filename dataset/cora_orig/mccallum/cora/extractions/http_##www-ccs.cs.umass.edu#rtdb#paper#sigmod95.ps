URL: http://www-ccs.cs.umass.edu/rtdb/paper/sigmod95.ps
Refering-URL: http://www-ccs.cs.umass.edu/rtdb/publications.html
Root-URL: 
Email: e-mail: -krithi,sivasank,stankovic,towsley,xiong-@cs.umass.edu  
Title: Integrating Temporal, Real-Time, and Active Databases being controlled, they must be updated frequently to maintain
Author: Krithi Ramamritham, Raju Sivasankaran, John A. Stankovic, Don T. Towsley, Ming Xiong 
Note: Since the system's data is supposedto reflect the environment  
Address: Amherst MA 01003-4610  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: In these systems, meeting timeliness, predictability, and QoS guarantee requirements through appropriate resource and overload management become very important. So, algorithms and protocols for concurrency control, recovery, and scheduling are needed. These algorithms must exploit semantics of the data and the transactions to be responsive and efficient. Whereas time cognizant scheduling, concurrency control and conflict resolution have been studied in the literature, recovery issues have not. We have developed strategies for data placement at the appropriate level of memory hierarchy, for avoiding undoing/redoing by exploiting data/transaction characteristics, and for placing logs at the appropriate level in the memory hierarchy. Another issue that we have studied deals with the assignment of priority to transactions in active real-time database systems. We are also studying concurrency control for temporal and multi-media data. We have built RADEx, a simulation environment to evaluate our solutions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Abbott and H. Garcia-Molina, </author> <title> Scheduling Real-Time Transactions with Disk Resident Data, </title> <booktitle> Proceedings of the 15th International Conference on Very Large Databases, </booktitle> <month> August </month> <year> 1989. </year>
Reference-contexts: When we have transactions that have both temporal and active data, the two types of priority assignment policies discussed in this section need to be combined. We are currently exploring this issue. 6 Conclusions Transaction scheduling and concurrency control aspects of real-time databases have been studied in detail <ref> [1, 5, 6, 7] </ref>. Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [3, 2].
Reference: [2] <author> U. Dayal et. al., </author> <title> The HIPAC Project: Combining Active Databases and Timing Constraints, </title> <booktitle> SIGMOD Record, </booktitle> <volume> 17, 1, </volume> <month> March </month> <year> 1988. </year>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions <ref> [3, 2] </ref>. Transaction scheduling in active databases [4] and recently in real-time active databases [9] has been studied.
Reference: [3] <institution> Special Issue on Active Databases, Data Engineering, </institution> <month> Dec </month> <year> 1992. </year>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions <ref> [3, 2] </ref>. Transaction scheduling in active databases [4] and recently in real-time active databases [9] has been studied.
Reference: [4] <author> U. Dayal, M. Hsu, and R. Ladin, </author> <title> Organizing Long-Running Activities with Triggers and Transactions, </title> <booktitle> ACM 1990. </booktitle>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [3, 2]. Transaction scheduling in active databases <ref> [4] </ref> and recently in real-time active databases [9] has been studied. Little, if any attention has been paid to transaction scheduling when transactions dynamically trigger other transactions, to data-characteristic-dependent transaction processing, to the placement of data and logs, and to logging and recovery techniques.
Reference: [5] <author> J.R. Haritsa, M.J. Carey, and M. Livny, </author> <title> Earliest Deadline Scheduling for Real-Time Database Systems, </title> <booktitle> Proceedings of the Real-Time Systems Symposium, </booktitle> <month> Dec </month> <year> 1991. </year>
Reference-contexts: When we have transactions that have both temporal and active data, the two types of priority assignment policies discussed in this section need to be combined. We are currently exploring this issue. 6 Conclusions Transaction scheduling and concurrency control aspects of real-time databases have been studied in detail <ref> [1, 5, 6, 7] </ref>. Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [3, 2].
Reference: [6] <author> J. Huang, J.A. Stankovic, K. Ramamritham, and D. Towsley, </author> <title> Experimental Evaluation of Real-Time Optimistic Concur-rency Control Schemes., </title> <booktitle> Proceedings of the 17th Conference on Very Large Databases, </booktitle> <month> Sept </month> <year> 1991. </year>
Reference-contexts: When we have transactions that have both temporal and active data, the two types of priority assignment policies discussed in this section need to be combined. We are currently exploring this issue. 6 Conclusions Transaction scheduling and concurrency control aspects of real-time databases have been studied in detail <ref> [1, 5, 6, 7] </ref>. Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [3, 2].
Reference: [7] <author> Y. Lin and S.H. Son, </author> <title> Concurrency Control in Real-Time Databases by Dynamic Adjustment of Serialization Order, </title> <booktitle> In Proceedings of the Real-Time Systems Symposium, </booktitle> <month> Dec </month> <year> 1990. </year>
Reference-contexts: When we have transactions that have both temporal and active data, the two types of priority assignment policies discussed in this section need to be combined. We are currently exploring this issue. 6 Conclusions Transaction scheduling and concurrency control aspects of real-time databases have been studied in detail <ref> [1, 5, 6, 7] </ref>. Active database researchers have been involved in the development of system models that incorporate the ECA paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [3, 2].
Reference: [8] <author> B. Purimetla, R. M. Sivasankaran and J.Stankovic, </author> <title> A Study of Distributed Real-Time Active Database Applications, </title> <booktitle> IEEE Workshop on Parallel and Distributed Real-time Systems, </booktitle> <month> April </month> <year> 1993. </year>
Reference: [9] <author> B. Purimetla, R. Sivasankaran, J.A. Stankovic, K. Ramam-ritham and D. Towsley, </author> <title> Priority Assignment in Real-Time Active Databases, </title> <booktitle> Conference on Parallel and Distributed Information Systems, Oct 1994. (selected to appear in) VLDB (Very Large Data Bases) Journal, </booktitle> <month> January </month> <year> 1996. </year>
Reference-contexts: This policy initially assigns the triggering transaction's priority based on assumptions about its probability of triggering a transaction when events occur. The priorities are subsequently adjusted based on whether or not transactions are triggered at these events. Our performance results <ref> [9] </ref> indicate that DIV and SL provide better performance to transactions that trigger than PD; SL's performance depends on the relative slacks of transactions; Extra information about triggering characteristics improves performance; With information about I/O, SL performs very well for disk resident databases. <p> Transaction scheduling in active databases [4] and recently in real-time active databases <ref> [9] </ref> has been studied. Little, if any attention has been paid to transaction scheduling when transactions dynamically trigger other transactions, to data-characteristic-dependent transaction processing, to the placement of data and logs, and to logging and recovery techniques. These are crucial to meet the performance requirements of RTADBs.
Reference: [10] <author> E. </author> <title> Rahm Use of Global Extended Memory for Distributed Transaction Processing, </title> <booktitle> Proc. 4th Int'l Workshop on High Performance Transaction Systems, </booktitle> <month> Sept </month> <year> 1991. </year>
Reference: [11] <author> K. Ramamritham, </author> <title> Real-Time Databases, </title> <journal> International Journal of Distributed and Parallel Databases, </journal> <year> 1993. </year>
Reference-contexts: Note that when transactions access temporal data, the data must be up-to-date, as specified by its absolute consistency requirements, and correlated, as specified by their relative consistency requirements <ref> [11] </ref>. * Frequency of Access of data refers to the frequency with the data is read or written, that is, it indirectly reflects the need for the data to be kept in main memory. High frequency This kind of data corresponds to what is usually called hotspots.
Reference: [12] <author> K. Ramamritham, </author> <title> Where Do Deadlines Come from and Where Do They Go?, </title> <journal> Journal of Database Management, </journal> <note> (to appear) 1996. </note>
Reference-contexts: trigger entry into specific modes; to trigger the necessary adaptive responses to time constraint violations to effect recovery, trigger actions if temporal data is (about to become) invalid; and to shed loads as well as adjust deadlines and other parameters, e.g., importance levels and QoS, of actions, when overloads occur <ref> [12] </ref>. Extant work on real-time databases focuses mainly on the meeting of time constraints. But it is clear that there is a need to integrate time-constraint handling with active and temporal requirements. This obviously calls for time cognizant priority assignment, con-currency control and conflict resolution mechanisms.
Reference: [13] <author> R. M. Sivasankaran, K. Ramamritham, J. A. Stankovic, and D. Towsley. </author> <title> Data Placement, Logging and Recovery in Real-Time Active Databases, Workshop on Active Real-Time Database Systems, </title> <address> Sweden, </address> <month> June </month> <year> 1995. </year> <month> 5 </month>
Reference-contexts: For instance, in the undo/redo recovery model, undoing the effects of a transaction consumes resources that can interfere with ongoing transactions. RTADB recovery techniques must consider resource availability to determine the most opportune time to do recovery. In this paper we outlined the approaches developed to address these problems <ref> [13] </ref>. Since most situations offer multiple options, we have developed a simulator that allows us to study the tradeoffs and then develop the policies.
References-found: 13

