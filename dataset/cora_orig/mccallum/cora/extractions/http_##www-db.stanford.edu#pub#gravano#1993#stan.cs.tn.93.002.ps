URL: http://www-db.stanford.edu/pub/gravano/1993/stan.cs.tn.93.002.ps
Refering-URL: http://www.public.iastate.edu/~CYBERSTACKS/Aristotle.htm
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The Efficacy of GlOSS for the Text Database Discovery Problem  
Author: Luis Gravano Hector Garca-Molina Anthony Tomasic 
Affiliation: Stanford University  
Pubnum: Technical Note Number STAN-CS-TN-93-2  
Abstract: The popularity of information retrieval has led users to a new problem: finding which text databases (out of thousands of candidate choices) are the most relevant to a user. Answering a given query with a list of relevant databases is the text database discovery problem. The first part of this paper presents a practical method for attacking this problem based on estimating the result size of a query and a database. The method is termed GlOSS-Glossary of Servers Server. The second part of this paper evaluates GlOSS using four different semantics to answer a user's queries. Real users' queries were used in the experiments. We also describe several variations of GlOSS and compare their efficacy. In addition, we analyze the storage cost of our approach to the problem.
Abstract-found: 1
Intro-found: 1
Reference: [BC92] <author> Daniel Barbara and Chris Clifton. </author> <title> Information Brokers: Sharing knowledge in a heterogeneous distributed system. </title> <type> Technical Report MITL-TR-31-92, </type> <institution> Matsushita Information Technology Laboratory, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers", that is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also [DANO91]. [SA89] and <ref> [BC92] </ref> are other examples of this type of approach in which users query a "meta-information" database. A "content based routing" system is used in [SDW + ] to address the database discovery problem.
Reference: [BLCGP92] <author> Tim Berners-Lee, Robert Cailliau, Jean-F. Groff, and Bernd Pollermann. </author> <title> World-Wide Web: The Information Universe. </title> <journal> Electronic Networking: Research, Applications and Policy, </journal> <volume> 1(2), </volume> <year> 1992. </year>
Reference-contexts: Different systems follow different approaches to this: one such approach is to let users "browse" through information about the different databases. Examples include Gopher [SEKN92], where users navigate through the network following a hierarchy of indexes, and World Wide Web <ref> [BLCGP92] </ref>, which uses a hypertext interface to do this. The Veronica Service [Fos92] has recently added a search facility to Gopher.
Reference: [CD90] <author> D. Chapman and S. DeFazio. </author> <title> Statistical characteristics of legal document databases. </title> <type> S&PT Technical Report, </type> <institution> Mead Data Central, </institution> <month> January </month> <year> 1990. </year>
Reference-contexts: answer to the query. 3 A B C D Knuth 100 Knuth 10 Knuth 1 Knuth 10 computer 200 computer 100 computer 100 computer 0 d = 1000 d = 100 d = 200 d = 20 smaller than a full index (see Section 6.2 and Figure 25): For example, <ref> [CD90] </ref> reports statistics on a legal textual 9 Gigabyte database. The vocabulary of this database consists of approximately 1,800,000 words. For each of these words we only need to keep its frequency, as opposed to the identities of the documents that have these words.
Reference: [DANO91] <author> Peter B. Danzig, Jongsuk Ahn, John Noll, and Katia Obraczka. </author> <title> Distributed indexing: a scalable mechanism for distributed information retrieval. </title> <booktitle> In Proceedings of the 14 th Annual SIGIR Conference, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers", that is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also <ref> [DANO91] </ref>. [SA89] and [BC92] are other examples of this type of approach in which users query a "meta-information" database. A "content based routing" system is used in [SDW + ] to address the database discovery problem.
Reference: [DLO92] <author> Peter B. Danzig, Shih-Hao Li, and Katia Obraczka. </author> <title> Distributed indexing of autonomous Internet services. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: Also, sites are organized into "specialization subgraphs". If one node of such a graph is reached during the search process, the search proceeds "non-randomly" in this subgraph, if it corresponds to a specialization relevant to the query being executed. See also [Sch93]. In Indie (shorthand for "Distributed Indexing") <ref> [DLO92] </ref>, information is indexed by "Indie brokers", that have, among other administrative data, a boolean query associated with each of 2 them (a "generator rule"). Each broker indexes (not necessarily local) documents that satisfy the broker's generator rule.
Reference: [Fos92] <author> Steve Foster. </author> <title> About the Veronica service, </title> <month> November </month> <year> 1992. </year> <note> Message posted in comp.infosystems.gopher. </note>
Reference-contexts: Examples include Gopher [SEKN92], where users navigate through the network following a hierarchy of indexes, and World Wide Web [BLCGP92], which uses a hypertext interface to do this. The Veronica Service <ref> [Fos92] </ref> has recently added a search facility to Gopher. The Prospero File System [Neu92] lets users organize information available in the Internet through the definition (and sharing) of customized views (virtual systems) of the different objects and services available to them.
Reference: [FW + 93] <author> Jim Fullton, Archie Warnock, et al. </author> <note> Release notes for freeWAIS 0.2, </note> <month> October </month> <year> 1993. </year>
Reference-contexts: One disadvantage is that the user typically needs two queries. Also, the master database documents have to be written by hand to cover the relevant topics, and have to be manually kept up to date as the underlying database changes. However, freeWAIS <ref> [FW + 93] </ref> automatically adds the 50 most frequently occurring words in an information server to the associated description in the directory of servers.
Reference: [GS93] <author> Ran Giladi and Peretz Shoval. </author> <title> Routing queries in a network of databases driven by a meta knowledge-base. </title> <booktitle> In Proceedings of the International Workshop on Next Generation Information Technologies and Systems, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: With our sample query find Knuth ^ computer, the processing could extract the concept computer science and the index would determine that documents on this concept appear in the Computer Science and the Medical databases. This approach has been followed in <ref> [GS93] </ref>. Another approach to solving the database discovery problem is user transparent database selection in a way that guarantees exhaustive answers to the users' queries.
Reference: [KM91] <author> Brewster Kahle and Art Medlar. </author> <title> An information system for corporate users: Wide Area Information Servers. </title> <type> Technical Report TMC199, </type> <institution> Thinking Machines Corporation, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: A different approach is to keep a database of "meta-information" about the available databases and have users query this database to obtain the set of databases to search. For example, WAIS <ref> [KM91] </ref> provides a "directory of servers." This "master" database contains a set of documents, each describing (in English) the contents of a database on the network. The users first query the master database, and once they have identified potential databases, direct their query to these databases.
Reference: [Neu92] <author> B. Clifford Neuman. </author> <title> The Prospero File System: A global file system based on the Virtual System model. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: Examples include Gopher [SEKN92], where users navigate through the network following a hierarchy of indexes, and World Wide Web [BLCGP92], which uses a hypertext interface to do this. The Veronica Service [Fos92] has recently added a search facility to Gopher. The Prospero File System <ref> [Neu92] </ref> lets users organize information available in the Internet through the definition (and sharing) of customized views (virtual systems) of the different objects and services available to them.
Reference: [ODL93] <author> Katia Obraczka, Peter B. Danzig, and Shih-Hao Li. </author> <title> Internet resource discovery services. </title> <booktitle> IEEE Computer, </booktitle> <month> September </month> <year> 1993. </year>
Reference-contexts: This paper presents a framework for (and analyzes a solution to) this problem, which we call the text database discovery problem (also referred to as the resource discovery problem in some generally more comprehensive contexts). [SEKN92] and <ref> [ODL93] </ref> provide surveys of proposed solutions to this problem.
Reference: [SA89] <author> Patricia Simpson and Rafael Alonso. </author> <title> Querying a network of autonomous databases. </title> <type> Technical Report CS-TR-202-89, </type> <institution> Dept. of Computer Science, Princeton University, </institution> <month> January </month> <year> 1989. </year>
Reference-contexts: The generator objects associated with the brokers are gathered by a "directory of servers", that is queried initially by the users to obtain a list of the brokers whose generator rules match the given query. See also [DANO91]. <ref> [SA89] </ref> and [BC92] are other examples of this type of approach in which users query a "meta-information" database. A "content based routing" system is used in [SDW + ] to address the database discovery problem.
Reference: [SB88] <author> Gerard Salton and Chris Buckley. </author> <title> Parallel text search methods. </title> <journal> Communications of the ACM, </journal> <volume> 31(2), </volume> <month> February </month> <year> 1988. </year>
Reference-contexts: The traditional information retrieval problem of finding documents relevant to a user query is studied by (a) describing an information retrieval model (consisting of a document representation, a query representation, and a matching algorithm) and (b) evaluating the model in terms of precision and recall <ref> [TC92, SB88] </ref>. This problem has a single underlying semantics of producing all (measured by recall) and only (measured by precision) the documents relevant to the query. We expand on this framework by motivating four different semantics for the database discovery problem. <p> Now we will relate Success, Alpha, and Beta to the well-known precision and recall parameters <ref> [SB88] </ref>. Consider, for example, criterion C EX : Relevant Chosen EST .
Reference: [Sch90] <author> Michael F. Schwartz. </author> <title> A scalable, non-hierarchical resource discovery mechanism based on probabilistic protocols. </title> <type> Technical Report CU-CS-474-90, </type> <institution> Dept. of Computer Science, University of Colorado at Boulder, </institution> <month> June </month> <year> 1990. </year> <month> 38 </month>
Reference-contexts: However, freeWAIS [FW + 93] automatically adds the 50 most frequently occurring words in an information server to the associated description in the directory of servers. Another drawback is that in general, databases containing relevant documents might be missed if they are not chosen during the database selection phase. <ref> [Sch90] </ref> follows a probabilistic approach to the resource discovery problem.
Reference: [Sch93] <author> Michael F. </author> <type> Schwartz. </type> <institution> Internet resource discovery at the University of Colorado. IEEE Computer, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: Also, sites are organized into "specialization subgraphs". If one node of such a graph is reached during the search process, the search proceeds "non-randomly" in this subgraph, if it corresponds to a specialization relevant to the query being executed. See also <ref> [Sch93] </ref>. In Indie (shorthand for "Distributed Indexing") [DLO92], information is indexed by "Indie brokers", that have, among other administrative data, a boolean query associated with each of 2 them (a "generator rule"). Each broker indexes (not necessarily local) documents that satisfy the broker's generator rule.
Reference: [SDW + ] <author> Mark A. Sheldon, Andrzej Duda, Ron Weiss, James W. O'Toole, and David K. Gifford. </author> <title> A content routing system for distributed information servers. </title> <note> To appear in EDBT '94. </note>
Reference-contexts: See also [DANO91]. [SA89] and [BC92] are other examples of this type of approach in which users query a "meta-information" database. A "content based routing" system is used in <ref> [SDW + ] </ref> to address the database discovery problem. The "content routing system" keeps a "content label" for each information server (or collection of objects, more generally), with attributes describing the contents of the collection.
Reference: [SEKN92] <author> Michael F. Schwartz, Alan Emtage, Brewster Kahle, and B. Clifford Neuman. </author> <title> A comparison of Internet resource discovery approaches. </title> <journal> Computer Systems, </journal> <volume> 5(4), </volume> <year> 1992. </year>
Reference-contexts: This paper presents a framework for (and analyzes a solution to) this problem, which we call the text database discovery problem (also referred to as the resource discovery problem in some generally more comprehensive contexts). <ref> [SEKN92] </ref> and [ODL93] provide surveys of proposed solutions to this problem. <p> Thus, the user will be aware of and an active participant in this selection process. Different systems follow different approaches to this: one such approach is to let users "browse" through information about the different databases. Examples include Gopher <ref> [SEKN92] </ref>, where users navigate through the network following a hierarchy of indexes, and World Wide Web [BLCGP92], which uses a hypertext interface to do this. The Veronica Service [Fos92] has recently added a search facility to Gopher. <p> This approach has been followed in [GS93]. Another approach to solving the database discovery problem is user transparent database selection in a way that guarantees exhaustive answers to the users' queries. For example, the Archie system <ref> [SEKN92] </ref> periodically obtains a recursive listing of the contents of all the available FTP sites in order to answer users' queries.
Reference: [SM83] <author> Gerard Salton and Michael J. McGill. </author> <title> Introduction to modern information retrieval. </title> <publisher> McGraw-Hill, </publisher> <year> 1983. </year>
Reference-contexts: Also, the system we had available to perform our experiments uses only boolean queries (see Section 4.1). Nevertheless, it should be stressed that the approach taken in this paper can be generalized to the vector space retrieval model <ref> [SM83] </ref>. The reason why we restrict our study to "and" queries is that we want to understand a simple case first. Also, most of the queries in the trace we studied (see Section 4.1) are "and" queries.
Reference: [TC92] <author> Howard R. Turtle and W. Bruce Croft. </author> <booktitle> Uncertainty in information retrieval systems, </booktitle> <month> September </month> <year> 1992. </year> <note> Presented at an NSF Workshop in Majorca. 39 </note>
Reference-contexts: The traditional information retrieval problem of finding documents relevant to a user query is studied by (a) describing an information retrieval model (consisting of a document representation, a query representation, and a matching algorithm) and (b) evaluating the model in terms of precision and recall <ref> [TC92, SB88] </ref>. This problem has a single underlying semantics of producing all (measured by recall) and only (measured by precision) the documents relevant to the query. We expand on this framework by motivating four different semantics for the database discovery problem.
References-found: 19

