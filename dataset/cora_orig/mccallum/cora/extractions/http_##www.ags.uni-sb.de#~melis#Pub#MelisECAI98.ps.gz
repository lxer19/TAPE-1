URL: http://www.ags.uni-sb.de/~melis/Pub/MelisECAI98.ps.gz
Refering-URL: http://jswww.cs.uni-sb.de/~melis/
Root-URL: 
Title: AI-Techniques in Proof Planning  
Author: Erica Melis 
Abstract: Proof planning is an application of Artificial Intelligence (AI)-planning in mathematical domains for theorem proving. The paper presents a knowledge-based proof planning approach that is implemented in the OMEGA proof planner. It evaluates control-rules in order to restrict the otherwise intractable search spaces and combines proof planning with domain-specific constraint solving. Several AI-techniques contribute to the successful planning of proofs that were beyond the capabilities of theorem provers and proof planners previously. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.R. Anderson, </author> <title> `Acquisition of proof skills in geometry', in Machine Learning, An Artificial Intelligence Approach, </title> <editor> eds., R.S. Michalski, J.G. Carbonell, and T.M. Mitchell, </editor> <address> 191-219, </address> <publisher> Springer, </publisher> <year> (1984). </year>
Reference-contexts: Moreover, these systems produce calculus-level proofs that are difficult to understand even for experts. Proof planning can help avoiding both problems. There is a cognitive motivation for proof planning too that is due to the fact that mathematicians tend to plan proofs. Several sources <ref> [1, 14] </ref> provide empirical evidence that mathematicians use specific methods (e.g., diagonalization) and plan a proof during the proof discovery process.
Reference: [2] <author> C. Benzmueller, L. Cheikhrouhou, D. Fehrer, A. Fiedler, X. Huang, M. Kerber, M. Kohlhase, K. Konrad, A. Meier, E. Melis, W. Schaarschmidt, J. Siekmann, and V. Sorge, </author> <title> `OMEGA: Towards a mathematical assistant', </title> <booktitle> in CADE-14, </booktitle> <pages> pp. 252-255. </pages> <publisher> Springer, </publisher> <year> (1997). </year>
Reference-contexts: Technically, methods are (partial) specifications of tactics originating from tactical theorem proving [10]. Tactics are procedures that execute several inference steps. In OMEGA <ref> [2] </ref> the methods are represented by frame-like structures. Their specifications used in planning are provided by the slots premises and conclusions that contain annotated proof lines.
Reference: [3] <author> W. Bibel, </author> <title> `Let's plan it deductively', </title> <booktitle> in IJCAI-97, </booktitle> <pages> pp. 1549-1562, </pages> <year> (1997). </year>
Reference-contexts: Personal com munication with Bill McCune. proof planners including CL A M . In order to cope with genuinely mathematical problems we extended the proof planning methodology such that proof planning can use domain knowledge. Contribution of the Paper. In his invited talk at IJCAI-97 <ref> [3] </ref>, Bibel suggested to solve many AI-problems by automated theorem provers. Vice versa we suggest to employ AI-techniques for automated proof planning. In particular, we show how we have made progress in proving mathematical theorems a knowledge-based proof planning approach and by employing AI-techniques that restrict the search.
Reference: [4] <author> W.W. Bledsoe, </author> <title> `Challenge problems in elementary analysis', </title> <journal> Journal of Automated Reasoning, </journal> <volume> 6, </volume> <year> (1990). </year>
Reference-contexts: A well known limit theorem, LIM+ (LIM*), states that the limit of the sum (product) of two functions is the sum (the product) of their limits. Bledsoe <ref> [4] </ref> introduced LIM+ as a challenge problem. LIM+ is at the edge of what other theorem proving systems or proof planners can prove, and certainly LIM* is beyond their capabilities. 3.1 Methods The methods that belong to the domain knowledge represent frequently used mathematical proof steps.
Reference: [5] <author> W.W. Bledsoe, </author> <title> R.S. Boyer, and W.H. Henneman, `Computer proofs of limit theorems', </title> <journal> Artificial Intelligence, </journal> <volume> 3(1), </volume> <pages> 27-60, </pages> <year> (1972). </year>
Reference-contexts: In proving limit theorems, estimations of term magnitudes are needed frequently. Hence we designed estimation methods. To alleviate the burden of knowledge engineering for one of the proof methods for limit theorems, we rationally reconstructed Bledsoe's limit heuristic that was used in a special-purpose program <ref> [5] </ref>. In a similar way, the procedures of other special-purpose theorem provers can be reconstructed.
Reference: [6] <author> A. Bundy, </author> <title> `The use of explicit plans to guide inductive proofs', </title> <booktitle> in CADE-9, </booktitle> <pages> pp. 111-120. </pages> <publisher> Springer, </publisher> <year> (1988). </year>
Reference-contexts: Although this observation seems to be obvious for everyone who has been engaged in mathematics, the question is, how to realize this technically and how to represent the knowledge needed. These questions are addressed in the paper. In order to avoid super-exponential search, Bundy <ref> [6] </ref> introduced proof planning for proving theorems by induction. This proof planning for inductive proofs is implemented in the proof planner CL A M [8].
Reference: [7] <author> A. Bundy, </author> <title> `A science of reasoning', </title> <booktitle> in Computational logic: Essays in Honor of Alan Robinson, </booktitle> <editor> eds., J-L. Lassez and G. Plotkin, </editor> <address> 178-198, </address> <publisher> MIT Press, </publisher> <year> (1991). </year>
Reference-contexts: However, with the same methods and control-rules OMEGA's planner succeeds to prove all the limit theorems. For instance, the search space of planning LIM* has 470 nodes. Evaluation. How can the work presented be assessed in terms of of the criteria for proof plans from Bundy's Science of Reasoning <ref> [7] </ref>? Expectancy: The methods and control work for planning the limit theorems. Generality: All methods can be used for a larger class of proof plans.
Reference: [8] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill, </author> <title> `Experiments with proof plans for induction', </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7, </volume> <pages> 303-324, </pages> <year> (1991). </year>
Reference-contexts: These questions are addressed in the paper. In order to avoid super-exponential search, Bundy [6] introduced proof planning for proving theorems by induction. This proof planning for inductive proofs is implemented in the proof planner CL A M <ref> [8] </ref>. It employs a global search heuristic for difference reduction, rippling, and its operators are complex inferences such as induction, base-case, and step-case rather than calculus-level rules. While rippling suffices for proofs working by difference reduction, it fails to guide other mathematical proofs.
Reference: [9] <author> R.E. Fikes and N.J. Nilsson, </author> <title> `STRIPS: A new approach to the application of theorem proving to problem solving', </title> <journal> Artificial Intelligence, </journal> <volume> 2, </volume> <pages> 189-208, </pages> <year> (1971). </year>
Reference-contexts: The paper presents the general knowledge-based proof planning. Knowledge that is used in planning proofs for a class of limit theorems illustrates our approach. We conclude with results and an evaluation. 2 Brief Review of Proof Planning The basic idea of proof planning is that of AI-planning <ref> [9] </ref>. Here, operators, called methods, encode mathematical proof methods. These methods represent inference actions that usually are more complex than the inference steps in a logical calculus and therefore the resulting plans are abstract representations of proofs. Technically, methods are (partial) specifications of tactics originating from tactical theorem proving [10].
Reference: [10] <author> M. Gordon, R. Milner, </author> <title> and C.P. </title> <publisher> Wadsworth, Edinburgh LCF: </publisher>
Reference-contexts: Here, operators, called methods, encode mathematical proof methods. These methods represent inference actions that usually are more complex than the inference steps in a logical calculus and therefore the resulting plans are abstract representations of proofs. Technically, methods are (partial) specifications of tactics originating from tactical theorem proving <ref> [10] </ref>. Tactics are procedures that execute several inference steps. In OMEGA [2] the methods are represented by frame-like structures. Their specifications used in planning are provided by the slots premises and conclusions that contain annotated proof lines.
References-found: 10

