URL: http://http.cs.berkeley.edu/~vahdat/publications/c252_writeup.ps
Refering-URL: http://http.cs.berkeley.edu/~vahdat/publications/work.html
Root-URL: 
Title: A Trace-Driven Analysis of XMEM: Another Level in the Memory Hierarchy  
Author: Douglas Ghormley and Amin Vahdat 
Date: May 14, 1993  
Abstract: Modern computer architectures make use of memory hierarchies to hide the latency associated with accessing slower devices. While CPU speeds have been increasing exponentially, disk access times have remained nearly constant. This trend has caused a dramatic rise in the relative cost of a page fault. In this paper, we evaluate the merits of introducing XMEM, another level in the memory hierarchy, between primary (main memory) and secondary (magnetic disk) storage. We modified a version of the UNIX kernel to produce a trace of all page faults. A simulator for XMEM determined that in some instances, XMEM could produce very reasonable results. 
Abstract-found: 1
Intro-found: 1
Reference: [Baker et al. 1991] <author> Baker, M., Hartman, J., Kupfer, M., Shirriff, K., and Ousterhout, J. </author> <title> Measurements of a Distributed File System. </title> <booktitle> In Proceedings of the 13th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 198-212, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: However, an operating system's default replacement policy very often minimizes the page faults which do occur. XMEM is not designed to lower the number of page faults, but rather to lower the cost associated with the faults which do occur. Earlier work on Sprite <ref> [Nelson et al. 1988, Baker et al. 1991] </ref> suggested that diskless workstations can make use of centralized file servers for all their paging traffic. In the Sprite model, both file pages and virtual memory pages would be retrieved from a server.
Reference: [Bershad et al. 1990] <author> Bershad, B., Anderson, T., Lazowska, E., and Levy, H. </author> <title> Lightweight Remote Procedure Calls. </title> <journal> In ACM Transactions on Computer Systems, </journal> <pages> pp. 37-54, </pages> <month> February </month> <year> 1990. </year>
Reference: [Chen et al. 1993] <author> Chen, P. M., Lee, E. K., Drapeau, A. L., Lutz, K., Miller, E., Seshan, S., Shirriff, K., Patterson, D. A., and Katz, R. H. </author> <title> Performance and Design Evaluation of the RAID-II Storage Server. </title> <booktitle> In Proceedings of International Parallel Processing Syposium 1993 Workshop on I/O, </booktitle> <year> 1993. </year> <note> To Appear. </note>
Reference-contexts: A speedup of 20% 5 is achieved by using an external server for the times when a machine's physical memory is too small for an application's working set. This improvement would be even more significant if one were to use a faster disk configuration such as RAID <ref> [Chen et al. 1993] </ref> on the XMEM server. This would not only markedly improve transfer time, but would allow for larger block sizes on the server for a relatively small cost in transfer time 6 .
Reference: [Comerford & Watson 1992] <author> Comerford, R. and Watson, G. F. </author> <title> Memory Catches Up. </title> <journal> IEEE Spectrum, </journal> <pages> pp. 34-51, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: We present the conclusions of our work in section six. 2 Background and Related Work Much work has been done in attempts to have main memory speeds keep up with CPU speeds <ref> [Comerford & Watson 1992] </ref>. Unfortunately, it is largely agreed that physical limitations will prevent any similar improvements in disk access time.
Reference: [Culler et al. 1993] <author> Culler, D. E., Patterson, D. A., and Wilensky, R. </author> <title> The Distributed Supercomputer: The Viable MPP is a Building full of Workstations. Project Proposal at U.C. </title> <address> Berkeley, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: However, the solution 1 is very similar to that presented in Figure 1. Finally, the model presented would fit in nicely with the vision of tomorrow's supercomputer as a large number of workstations distributed throughout a building connected through a fast network with low latency and high throughput <ref> [Culler et al. 1993] </ref>. 4 Methodology In order to get a realistic model for the number of page faults which occur in a typical work environment and most accurately model the potential benefits of XMEM, we modified a version of the UNIX kernel to record all page faults. <p> While current network and operating system support carries a lot of overhead in making RPCs [Bershad et al. 1990, Hutchinson et al. 1989, Schroeder & Burrows 1989], 100 MBit/sec local area networks with network/operating system latencies in the range of microseconds <ref> [Culler et al. 1993] </ref> will become available in the near future. Thus, we assume that in the near future an RPC with a 4 KB return value (a page request to the XMEM server) will have a round trip time of 1 msec.
Reference: [Denning 1980] <author> Denning, P. </author> <title> Working Sets, Past and Present. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 6(1) </volume> <pages> 64-84, </pages> <month> January </month> <year> 1980. </year>
Reference-contexts: For fully-associative XMEM, each entry of XMEM is searched for the pid/page combination which caused the fault. A 1-bit clock algorithm is used to approximate a least recently used (LRU) <ref> [Levy & Lipman 1982, Denning 1980] </ref> page replacement policy on a page miss.
Reference: [Harty & Cheriton 1992] <author> Harty, K. and Cheriton, D. R. </author> <title> Application-Controlled Physical Memory Using External Page-Cache Management. </title> <booktitle> In Proceedings of the 5th ACM Symposium on Architectural Support for Programming Languages and Operating Systems, </booktitle> <year> 1992. </year> <month> 17 </month>
Reference: [Hutchinson et al. 1989] <author> Hutchinson, N. C., Peterson, L. L., Abbott, M. B., and O'Malley, S. </author> <title> RPC in the x-Kernel: Evaluating New Design Techniques. </title> <booktitle> In Proceedings of the 12th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 91-101, </pages> <year> 1989. </year>
Reference: [Iftode et al. 1993] <author> Iftode, L., Li, K., and Petersen, K. </author> <title> Memory Servers for Multicomputers. </title> <booktitle> In COMPCON, </booktitle> <month> February </month> <year> 1993. </year>
Reference-contexts: Though the model we use to evaluate our design is based on a network of workstations, it can easily be extended to multiprocessor systems. In such a scheme, a number of nodes are used as memory servers for the other nodes' computation <ref> [Iftode et al. 1993] </ref> either because each node does not have enough local memory to carry out a particular computation or because only a limited number of nodes have access to disk drives.
Reference: [Krueger et al. 1993] <author> Krueger, K., Loftesness, D., Vahdat, A., and Anderson, T. </author> <title> Tools for the Development of Application-Specific Virtual Memory Management. </title> <type> Technical Report CSD-93-740, </type> <institution> University of California at Berkeley, </institution> <month> April </month> <year> 1993. </year>
Reference: [Levy & Lipman 1982] <author> Levy, H. and Lipman, P. </author> <title> Virtual Memory Management in the VAX/VMS Operating System. </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 35-41, </pages> <month> March </month> <year> 1982. </year>
Reference-contexts: For fully-associative XMEM, each entry of XMEM is searched for the pid/page combination which caused the fault. A 1-bit clock algorithm is used to approximate a least recently used (LRU) <ref> [Levy & Lipman 1982, Denning 1980] </ref> page replacement policy on a page miss.
Reference: [McNamee & Armstrong 1990] <author> McNamee, D. and Armstrong, K. </author> <title> Extending the Mach External Pager Interface to Accomodate User-Level Page Replacement Policies. </title> <booktitle> In Proceedings of First USENIX Mach Symposium, </booktitle> <address> Burlington, Vermont, </address> <month> October </month> <year> 1990. </year>
Reference: [Nelson et al. 1988] <author> Nelson, M., Welch, B., and Ousterhout, J. </author> <title> Caching in the Sprite Network File System. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 134-154, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: However, an operating system's default replacement policy very often minimizes the page faults which do occur. XMEM is not designed to lower the number of page faults, but rather to lower the cost associated with the faults which do occur. Earlier work on Sprite <ref> [Nelson et al. 1988, Baker et al. 1991] </ref> suggested that diskless workstations can make use of centralized file servers for all their paging traffic. In the Sprite model, both file pages and virtual memory pages would be retrieved from a server.
Reference: [Schroeder & Burrows 1989] <author> Schroeder, M. D. and Burrows, M. </author> <title> Performance of Firefly RPC. </title> <booktitle> In Proceedings of the 12th ACM Symposium on Operating Systems Principles, </booktitle> <pages> pp. 83-90, </pages> <year> 1989. </year>
Reference: [Stonebraker & Dozier 1991] <author> Stonebraker, M. and Dozier, J. </author> <title> Large Capacity Object Servers to Support Global Change Research. </title> <type> Technical Report 91/1, </type> <institution> Sequoia 2000, </institution> <month> July </month> <year> 1991. </year>
Reference-contexts: Hardware and the machine's operating system combine to provide the abstraction of virtual memory; a process can access locations not contained in main memory. Such page faults are serviced by a magnetic disk drives. Some systems also include a final layer, tertiary storage <ref> [Stonebraker & Dozier 1991] </ref> for long-term archival purposes. This paper will focus on the growing disparity between CPU speeds and access times to disk. Over the past decade, CPU power has been nearly doubling every year.
Reference: [Stonebraker 1981] <author> Stonebraker, M. </author> <title> Operating System Support for Database Management. </title> <booktitle> In Communications of the ACM, </booktitle> <year> 1981. </year> <month> 18 </month>
Reference-contexts: The growing gap between CPU speed and disk access times leads to an ever-increasing relative cost of a page fault <ref> [Stonebraker 1981] </ref>. Today's RISC machines operate with a cycle time on the order of 10 ns, while transferring a page of This work was supported in part by the National Science Foundation (CDA-8722788), the Digital Equipment Corporation (the Systems Research Center and the External Research Program), and the AT&T Foundation.
References-found: 16

