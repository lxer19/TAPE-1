URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3468/3468.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Email: fkettler,sanders,hendlerg@cs.umd.edu  
Phone: Fax: (301) 405-6707  
Title: The Case for Structure-based Representations  
Author: Kathryn E. Sanders, Brian P. Kettler, and James A. Hendler 
Keyword: case memory structures; knowledge representation.  
Address: College Park, MD 20742  
Affiliation: Department of Computer Science University of Maryland  
Abstract: Case-based reasoning involves reasoning from cases: specific pieces of experience, the reasoner's or another's, that can be used to solve problems. As a result, case representation is critical: an incomplete case representation limits the system's reasoning power. In this paper we argue for structure-based case representations, which express arbitrary relations among objects in a flexible way, over more limited or inflexible methods. We motivate the distinction between these kinds of representations with examples from information retrieval systems, CBR systems, and computational models of human analogical reasoning. Structure-based representations provide the benefits of greater expres-sivity and economy. We give examples of these benefits from two case-based planning systems we have developed, CaPER and CHIRON, and show how the case matching and case acquisition costs can be reduced through the use of massively parallel techniques. This paper is being submitted as a scientific paper. fl Submitted to the 1995 International Conference on Case-based Reasoning. This work has benefited from the comments of Bill Anderson, Karl Branting, Sean Luke, and Robert McCartney. Research by B. Kettler and J. Hendler was supported in part by grants from NSF (IRI-8907890), ONR (N00014-J-91-1451), AFOSR (F49620-93-1-0065), the ARPA/Rome Laboratory Planning Initiative (F30602-93-C-0039 and by ARI (MDA-903-92-R-0035, subcontract through Microelectronics and Design, Inc.). Research by K. Sanders was supported in part by grants from NSF PYI Award (IRI-8957601) to Thomas Dean, AFOSR and ARPA (F30602-91-C-0041), ONR (N00014-91-J-4052), ARPA Order 8225, NSF and ARPA (IRI-8905436), IBM (17290066, 17291066, 17292066, 17293066), and by NSF (IRI-8801253). 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Alterman. </author> <title> Adaptive planning. </title> <journal> Cognitive Science, </journal> <volume> 12 </volume> <pages> 393-421, </pages> <year> 1988. </year>
Reference-contexts: We make a "case-based argument" using examples from two systems, chiron and caper, to show the benefits of a structure-based repre 2 sentation, particularly in case-based planning, and to illustrate approaches to overcoming its costs. Other systems that have used structure-based representations include plexus <ref> [1] </ref>, grebe [5], arcs [25], and sme [8], and cookie [20]. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. <p> ARCS and SME, two cognitive models of human analogical reasoning, also used structure-based representations. plexus is an adaptive planning system in a commonsense reasoning domain that uses case-based methods to adapt parts of a previous plan to a new situation on the fly <ref> [1] </ref>. plexus uses a structure-based representation (a semantic net) and can ascend (descend) abstraction links to generalize (specialize) actions in a plan being adapted. plexus interleaves plan adaptation and execution. grebe is a case-based legal analysis system in the domain of workers' compensation.
Reference: [2] <author> W. A. Andersen, J. A. Hendler, M. P. Evett, and B. P. Kettler. </author> <title> Massively parallel matching of knowledge structures. </title> <editor> In H. Kitano and J. Hendler, editors, </editor> <booktitle> Massively Parallel Artificial Intelligence, </booktitle> <pages> pages 52-73. </pages> <publisher> AAAI Press/The MIT Press, </publisher> <address> Menlo Park, California, </address> <year> 1994. </year>
Reference-contexts: PARADYME, for example, is a massively parallel frame system that has been 8 used to implement a memory for a CBR system [19]. 2 In caper, the massively parallel mechanisms of the Parka Structure Matcher are used to match a probe graph to caper's semantic network memory <ref> [2] </ref>. 3 To evaluate the average-case behavior of matching a (labelled) probe graph to a subgraph of caper's (labelled) memory graph, we have done some preliminary experiments. We generated representative retrieval probes for a transport logistics domain and recorded the time taken to process them by the Parka Structure Matcher. <p> The complexity of the underlying subgraph--matching algorithm on actual casebases is much less than the worst case complexity (exponential in the number of binary constraints). For a detailed analysis of the algorithm, see <ref> [2] </ref>. 4.2 Case Acquisition The cost of case acquisition can be high, particularly if a CBR system uses many cases. Case acquisition includes the costs of representing and indexing individual cases. The time cost of acquiring cases can be lower in systems using feature-based representations.
Reference: [3] <author> K. D. Ashley. </author> <title> Modelling legal argument: reasoning with cases and hypotheticals. </title> <type> Technical Report 88-01, </type> <institution> University of Massachusetts, Amherst, Department of Computer and Information Science, </institution> <year> 1988. </year> <type> (PhD Thesis). </type>
Reference-contexts: Feature-based representations cannot express the information needed by CBR systems in complex real-world domains. Several of these hybrids combine structure-based representations with feature-based indexing (e.g., [11]). Others include some relational information but use the same structure for each case (e.g., <ref> [3] </ref>). We believe that pure structure-based representations offer significant advantages, and thus we are investigating ways to implement such representations efficiently. <p> Next, it computes a mapping between the facts of each case and the facts of the current situation, in order to determine the overlap between the two, and sorts the cases by inserting them into a hypo-style case lattice <ref> [3] </ref>.
Reference: [4] <author> N. J. Belkin and W. B. Croft. </author> <title> Retrieval techniques. </title> <journal> Annual Review of Information Science and Technology, </journal> <volume> 22 </volume> <pages> 109-145, </pages> <year> 1987. </year>
Reference-contexts: In this paper, we adopt the term "feature-based," used to describe these simple IR representations <ref> [4] </ref>, and use it to denote any representation that expresses facts about individual objects in a case without relating them to each other. Such representations may be implemented using a set of attribute-value pairs, a feature vector, or frames with atomic slot-fillers. <p> Such representations may be implemented using a set of attribute-value pairs, a feature vector, or frames with atomic slot-fillers. We use the term "structure-based" (also drawn from information-retrieval <ref> [4] </ref>) for representations that express arbitrary relations among objects in a flexible way. Structure-based representations are often implemented as graph structures such as semantic networks or as lists of concrete propositions in some logic.
Reference: [5] <author> L. K. Branting. </author> <title> Integrating rules and precedents for classification and explanation: automating legal analysis. </title> <type> Technical Report AI90-146, </type> <institution> Artificial Intelligence Laboratory, Department of Computer Sciences, University of Texas at Austin, </institution> <year> 1990. </year> <type> (PhD Thesis). </type>
Reference-contexts: We make a "case-based argument" using examples from two systems, chiron and caper, to show the benefits of a structure-based repre 2 sentation, particularly in case-based planning, and to illustrate approaches to overcoming its costs. Other systems that have used structure-based representations include plexus [1], grebe <ref> [5] </ref>, arcs [25], and sme [8], and cookie [20]. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. <p> Altogether, there are probably no more than fifteen possible mappings for any case, and the search could be pruned so that not all of these are examined (as done in grebe <ref> [5] </ref>. For a small casebase, in a domain where instantaneous response time is not required, chiron's response times (typically three to five minutes per problem) are tolerable. Still, the time required for matching is significant, and increases linearly with the size of the casebase. <p> It uses a structure-based representation (a semantic net). As a serial structure-based system, it faced the same issues of matching and case acquisition as chiron, but in the context of analysis rather than planning <ref> [5] </ref>. cookie is an integrated case-based planning and execution system in the meal-preparation domain that examined the use of highly detailed case descriptions. A case in cookie is a list of propositions in a temporal logic of actions and facts that represents meal-preparation episodes.
Reference: [6] <author> B. Cuthill and R. </author> <title> McCartney. Issue spotting in legal cases. </title> <booktitle> In Proceedings of the Fourth International Conference on Artificial Intelligence and Law, Amsterdam, </booktitle> <pages> pages 245-253, </pages> <year> 1993. </year>
Reference-contexts: For example, CHEF indexes cooking plans under their main ingredients and cooking failures under sets of causally relevant features [11]. Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses <ref> [6] </ref>. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in [22, 17, 15]). A few systems have used parallel techniques to reduce the cost of matching.
Reference: [7] <author> M. P. Evett, J. A. Hendler, and L. Spector. </author> <title> Parallel knowledge representation on the Connection Machine. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 22 </volume> <pages> 168-184, </pages> <year> 1994. </year>
Reference-contexts: Multiple plans (or subplans) can be retrieved and merged into a target plan. caper's semantic network memory is implemented using Parka, a massively parallel frame-based knowledge representation system that runs on the Connection Machine (CM-2 and CM-5) and provides very fast inferencing mechanisms <ref> [7] </ref>. A case includes the goals, initial situation, and plan/subplan hierarchy for a planning problem. Plan validation structures based on those used in the priar system [14] are also stored. <p> Not only are the absolute parallel retrieval times low but they scale well to large casebases: the retrieval times appear to grow better than logarithmically 2 For a comparison of PARADYME to Parka, see <ref> [7] </ref>. 3 A sample memory graph is shown in Figure 2. The probe graph contains nodes that are constants or variables and links that are constants (predicates). 4 The CM-2 with 32K virtual (16K real) processors.
Reference: [8] <author> B. Falkenhainer, K. D. Forbus, and D. Gentner. </author> <title> The structure-mapping engine: Algorithm and examples. </title> <journal> Artificial Intelligence, </journal> <volume> 41 </volume> <pages> 1-63, </pages> <year> 1990. </year>
Reference-contexts: Other systems that have used structure-based representations include plexus [1], grebe [5], arcs [25], and sme <ref> [8] </ref>, and cookie [20]. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in [24] and [15]. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> A case in cookie is a list of propositions in a temporal logic of actions and facts that represents meal-preparation episodes. Issues faced included how to retrieve multiple partially-matching cases that could be adapted and combined into a single solution [20]. SME is a system for analogue mapping <ref> [8] </ref>. SME has been used to test the structure-matching theory, which claims humans use structural similarity (isomorphism) on structure-based representations when mapping between analogues [10]. Humans are able to find structural similarities between two analogues which are dissimilar on the surface: e.g., in proportional analogies such as 3:6 :: 2:4.
Reference: [9] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and intractability. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: For hybrid representations with fixed structures, it is also linear. Using a structure-based representation increases the computational cost of matching. If cases were represented as unlabelled graphs, matching would be the subgraph isomorphism problem, which is NP-complete <ref> [9] </ref>. If the graphs had node labels and no node label ever occurred more than once in a given case, matching would be linear in the sum of the number of nodes and the number of edges.
Reference: [10] <author> D. Gentner. Structure-mapping: </author> <title> A theoretical framework for analogy. </title> <journal> Cognitive Science, </journal> <volume> 7 </volume> <pages> 155-170, </pages> <year> 1983. </year> <month> 12 </month>
Reference-contexts: SME is a system for analogue mapping [8]. SME has been used to test the structure-matching theory, which claims humans use structural similarity (isomorphism) on structure-based representations when mapping between analogues <ref> [10] </ref>. Humans are able to find structural similarities between two analogues which are dissimilar on the surface: e.g., in proportional analogies such as 3:6 :: 2:4. Feature-based models of similarity are not able to account for analogies such as these [10]. SME can produce mappings found by humans. <p> structural similarity (isomorphism) on structure-based representations when mapping between analogues <ref> [10] </ref>. Humans are able to find structural similarities between two analogues which are dissimilar on the surface: e.g., in proportional analogies such as 3:6 :: 2:4. Feature-based models of similarity are not able to account for analogies such as these [10]. SME can produce mappings found by humans. ARCS is a system for analogue retrieval built to test a theory that humans use the constraints of semantic (surface) similarity, structural isomorphism, and pragmatic centrality (the purpose of the analogy, goals of the reasoner, etc.) when retrieving analogues [25, 12].
Reference: [11] <author> K. J. Hammond. </author> <title> Case-based planning: A framework for planning from experience. </title> <journal> Cognitive Science, </journal> <volume> 14 </volume> <pages> 384-443, </pages> <year> 1990. </year>
Reference-contexts: Balancing the need for an expressive representation with efficiency considerations, most CBR systems have used representations that fall between feature-based and structure-based. Feature-based representations cannot express the information needed by CBR systems in complex real-world domains. Several of these hybrids combine structure-based representations with feature-based indexing (e.g., <ref> [11] </ref>). Others include some relational information but use the same structure for each case (e.g., [3]). We believe that pure structure-based representations offer significant advantages, and thus we are investigating ways to implement such representations efficiently. <p> Feature-based techniques are often employed such as the construction of a discrimination network using selected case features (attributes). For example, CHEF indexes cooking plans under their main ingredients and cooking failures under sets of causally relevant features <ref> [11] </ref>. Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [6]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time.
Reference: [12] <author> K. J. Holyoak and P. Thagard. </author> <title> Mental Leaps: Analogy in Creative Thought. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, Mass., </address> <year> 1995. </year>
Reference-contexts: SME can produce mappings found by humans. ARCS is a system for analogue retrieval built to test a theory that humans use the constraints of semantic (surface) similarity, structural isomorphism, and pragmatic centrality (the purpose of the analogy, goals of the reasoner, etc.) when retrieving analogues <ref> [25, 12] </ref>. ARCS uses parallel constraint satisfaction techniques on structure-based representations. Its performance compares favorably with that of humans, and ARCS is better able to use structural similarity at retrieval time and thus can find relevant cases that a human might not.
Reference: [13] <author> K. J. Holyoak and P. R. Thagard. </author> <title> Analogical mapping by constraint satisfaction. </title> <booktitle> Cognitive Science, </booktitle> <pages> pages 295-355, </pages> <year> 1989. </year>
Reference-contexts: Its performance compares favorably with that of humans, and ARCS is better able to use structural similarity at retrieval time and thus can find relevant cases that a human might not. ACME is a system for analogue mapping that is very similar to ARCS <ref> [13] </ref>. 6 Conclusions In this paper we have argued for structure-based case representations, which express arbitrary relations among objects in a flexible way, over more limited or inflexible methods, illustrating the distinction between these kinds of representations with examples of information retrieval systems, CBR systems, and computational models of human analogical
Reference: [14] <author> S. Kambhampati and J. A. Hendler. </author> <title> A validation-structure-based theory of plan modification and reuse. </title> <journal> Artificial Intelligence, </journal> <volume> 55 </volume> <pages> 193-258, </pages> <year> 1992. </year>
Reference-contexts: A case includes the goals, initial situation, and plan/subplan hierarchy for a planning problem. Plan validation structures based on those used in the priar system <ref> [14] </ref> are also stored.
Reference: [15] <author> B. P. Kettler. </author> <title> Case-based Planning with a Massively Parallel Memory. </title> <type> Doctoral dissertation, </type> <institution> University of Maryland at College Park, Dept. of Computer Science, </institution> <year> 1995. </year> <note> In preparation. </note>
Reference-contexts: These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in [24] and <ref> [15] </ref>. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> the prototype and previous successful cases of a given strategy), and if so, also uses the lattice to generate hypo-style arguments for and against the success of a plan. caper is a case-based planning system that makes use of massive parallelism to access a large casebase (currently several hundred cases) <ref> [17, 15] </ref>. caper uses structure-based representations for cases and conceptual knowledge, implemented as a single semantic network. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [6]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [22, 17, 15] </ref>). A few systems have used parallel techniques to reduce the cost of matching.
Reference: [16] <author> B. P. Kettler and J. A. Hendler. </author> <title> Evaluating a case-based planning system. </title> <editor> In D. W. Aha, editor, </editor> <booktitle> Case-based Reasoning Workshop, Twelfth National Conference on Artificial Intelligence, </booktitle> <pages> pages 157-163. </pages> <note> AAAI, unpublished, </note> <year> 1994. </year>
Reference-contexts: We are building a thousand-case casebase (approx. 100K frames) for the transport logistics domain and a casebase of chiron's legal cases translated into Parka, and we plan further empirical evaluation (see <ref> [16] </ref> for details).
Reference: [17] <author> B. P. Kettler, J. A. Hendler, W. A. Andersen, and M. P. Evett. </author> <title> Massively parallel support for case-based planning. </title> <journal> IEEE Expert, </journal> <pages> pages 8-14, </pages> <month> Feb. </month> <year> 1994. </year>
Reference-contexts: the prototype and previous successful cases of a given strategy), and if so, also uses the lattice to generate hypo-style arguments for and against the success of a plan. caper is a case-based planning system that makes use of massive parallelism to access a large casebase (currently several hundred cases) <ref> [17, 15] </ref>. caper uses structure-based representations for cases and conceptual knowledge, implemented as a single semantic network. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [6]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [22, 17, 15] </ref>). A few systems have used parallel techniques to reduce the cost of matching. <p> The probes were matched to an unindexed memory using Parka on a CM-2 and a serial version of Parka and the results are shown in figure 3. 4 of varying size (log scale). These results, detailed in <ref> [17] </ref>, show parallel retrieval times of about a second, even for a 100 case memory which contained 1213 (sub)plans (8616 frames).
Reference: [18] <author> J. L. Kolodner. </author> <title> Case-Based Reasoning. </title> <publisher> Morgan Kaufmann Publishers, </publisher> <address> San Mateo, California, </address> <year> 1993. </year>
Reference-contexts: In this case, the taxpayer, Hughston, was a lawyer for Shell Oil, in Texas. 1 We use "indexing" to mean the use of pointers for case retrieval, rather than a more recent, broader interpretation of "indexing" that includes any domain knowledge used in the retrieval of cases (e.g., <ref> [18] </ref>). 4 When he was transferred to a new location in Texas, he sold his old house (which had a bathroom with a tile floor) and bought another, closer to his new place of work. He had three children, of whom the oldest was ten years old.
Reference: [19] <author> J. L. Kolodner and R. Thau. </author> <title> Design and implementation of a case memory. </title> <type> Technical Report RL88-1, </type> <institution> Thinking Machines Corporation, </institution> <month> Aug. </month> <year> 1988. </year>
Reference-contexts: A few systems have used parallel techniques to reduce the cost of matching. PARADYME, for example, is a massively parallel frame system that has been 8 used to implement a memory for a CBR system <ref> [19] </ref>. 2 In caper, the massively parallel mechanisms of the Parka Structure Matcher are used to match a probe graph to caper's semantic network memory [2]. 3 To evaluate the average-case behavior of matching a (labelled) probe graph to a subgraph of caper's (labelled) memory graph, we have done some preliminary
Reference: [20] <author> R. </author> <title> McCartney. Episodic cases and real-time performance in a case-based planning system. </title> <journal> Expert Systems with Applications, </journal> <volume> 6 </volume> <pages> 9-22, </pages> <year> 1993. </year>
Reference-contexts: Other systems that have used structure-based representations include plexus [1], grebe [5], arcs [25], and sme [8], and cookie <ref> [20] </ref>. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in [24] and [15]. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> A case in cookie is a list of propositions in a temporal logic of actions and facts that represents meal-preparation episodes. Issues faced included how to retrieve multiple partially-matching cases that could be adapted and combined into a single solution <ref> [20] </ref>. SME is a system for analogue mapping [8]. SME has been used to test the structure-matching theory, which claims humans use structural similarity (isomorphism) on structure-based representations when mapping between analogues [10].
Reference: [21] <author> R. McCartney, B. Moreland, and M. Pukinskis. </author> <title> Case acquisition from plain text: reading recipes from a cookbook. </title> <booktitle> In Proceedings of the first international conference on information and knowledge management, </booktitle> <address> Baltimore, MD, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: As cases are not indexed, the initial casebase acquisition process is completely automated. Natural language processing methods have also been employed to automatically generate cases. For example, cookie's RAS module scanned in recipes from a cookbook in English and converted them to case representations <ref> [21] </ref>. 10 5 Related Work Other CBR systems that have used structure-based representations include plexus, grebe, and cookie.
Reference: [22] <author> R. McCartney and K. E. Sanders. </author> <title> The case for cases: a call for purity in case-based reasoning. </title> <booktitle> In Proceedings of the AAAI Symposium on Case-based Reasoning, </booktitle> <pages> pages 12-16, </pages> <year> 1990. </year>
Reference-contexts: By "reasonably complete," we mean a representation that includes all the information about a case that is likely to be useful. As argued in <ref> [22] </ref>, in order to maximize their usefulness, case representations should be as complete as possible. Complete representations increase a system's reasoning power: a system cannot reason with information that it does not have. In particular, a structure-based representation makes it possible to express the relations between objects. <p> Similarly, chaser indexes tort cases under features such as the harm caused and possible legal defenses [6]. The main disadvantage of indexing is that it hinders flexibility at case retrieval time. Cases that share unindexed features with the target problem will not be retrieved. (See discussion in <ref> [22, 17, 15] </ref>). A few systems have used parallel techniques to reduce the cost of matching.
Reference: [23] <author> N. J. Nilsson. </author> <booktitle> Principles of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufman, </publisher> <address> San Mateo, California, </address> <year> 1980. </year>
Reference-contexts: Structure-based representations are often implemented as graph structures such as semantic networks or as lists of concrete propositions in some logic. Whether the representation is implemented as a list of propositions or as a graph is immaterial, since there is a simple translation from propositional to graph representation <ref> [23] </ref>. What is important is that the topology of the graph corresponding to the case representation varies from case to case. Balancing the need for an expressive representation with efficiency considerations, most CBR systems have used representations that fall between feature-based and structure-based.
Reference: [24] <author> K. E. Sanders. Chiron: </author> <title> planning in an open-textured domain. </title> <type> Technical Report 94-38, </type> <institution> Computer Science Department, Brown University, </institution> <year> 1994. </year> <type> (PhD Thesis). </type>
Reference-contexts: Other systems that have used structure-based representations include plexus [1], grebe [5], arcs [25], and sme [8], and cookie [20]. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. Details can be found in <ref> [24] </ref> and [15]. chiron is a hybrid rule-based and case-based system in the domain of tax planning. <p> Node labels correspond to unary predicates on a given object. For example, Hughston is a lawyer; house1 is both a house and real property; Shell-Oil-Company is a corporation; and so forth. For the actual representation and the original text of the case, see <ref> [24] </ref>.
Reference: [25] <author> P. R. Thagard, K. J. Holyoak, C. Nelson, and D. Gochfeld. </author> <title> Analog retrieval by constraint satisfaction. </title> <journal> Artificial Intelligence, </journal> <volume> 46 </volume> <pages> 259-310, </pages> <year> 1990. </year> <month> 13 </month>
Reference-contexts: We make a "case-based argument" using examples from two systems, chiron and caper, to show the benefits of a structure-based repre 2 sentation, particularly in case-based planning, and to illustrate approaches to overcoming its costs. Other systems that have used structure-based representations include plexus [1], grebe [5], arcs <ref> [25] </ref>, and sme [8], and cookie [20]. These systems are described briefly in Section 5. 2 Overview of caper and chiron This section gives a brief overview of chiron and caper. <p> SME can produce mappings found by humans. ARCS is a system for analogue retrieval built to test a theory that humans use the constraints of semantic (surface) similarity, structural isomorphism, and pragmatic centrality (the purpose of the analogy, goals of the reasoner, etc.) when retrieving analogues <ref> [25, 12] </ref>. ARCS uses parallel constraint satisfaction techniques on structure-based representations. Its performance compares favorably with that of humans, and ARCS is better able to use structural similarity at retrieval time and thus can find relevant cases that a human might not.
References-found: 25

