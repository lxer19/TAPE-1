URL: http://robotics.stanford.edu/~latombe/papers/ijrr95/two-handed/paper.ps
Refering-URL: http://robotics.stanford.edu/~latombe/projects/
Root-URL: http://www.cs.stanford.edu
Title: embly Sequencing  
Author: Randall H. Wilson Lydia Kavraki Tomas Lozano-Perez Jean-Claude Latombe 
Address: Albuquerque, NM 87185, USA.  Stanford, CA 94305, USA.  545 Technology Square, Cambridge, MA 02139, USA.  
Affiliation: Intelligent Systems and Robotics Center, Sandia National Laboratories,  at Stanford University. Computer Science Robotics Laboratory, Stanford University,  MIT Artificial Intelligence Laboratory,  
Date: 335-350, 1995  
Note: Two-Handed Ass International Journal of Robotics Research 14(4), pages  This work was performed while the author was  
Abstract: This article considers the computational complexity of automatically determining assembly sequences for mechanical products. Specifically, we address the partitioning problem: given an assembly of rigid parts, identify a proper subassembly that can be removed as a rigid object without disturbing the rest of the assembly. We examine the complexity of the partitioning problem under various types of relative motions allowed for the subassemblies. We show that when arbitrary motions are allowed to separate the two subassemblies, partitioning is NP-complete. We then describe a general framework for reasoning about assembly motions called the interference diagram. In its most general form the interference diagram yields an exponential-time algorithm to partition an assembly. However, two special cases of the interference diagram studied in this article yield polynomial-time sequencing algorithms. The first case occurs when assembly motions are restricted to single translations. The second case considers infinitesimal rigid motions in translation and rotation and yields a superset of all feasible partitionings. These two algorithms have important practical applica tions in assembly planning. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> E. M. Arkin, R. Connelly, and J. S. B. Mitchell. </author> <title> On monotone paths among obstacles, with applications to planning assemblies. </title> <booktitle> In Proc. of the 5th ACM Symp. on Computational Geometry, </booktitle> <pages> pages 334-343, </pages> <year> 1989. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> However, this approach requires that extra planning information be present in the assembly description and risks missing some assembly sequences. Arkin, Connelly, and Mitchell <ref> [ 1 ] </ref> use the concept of a monotone path among obstacles to derive a polynomial-time algorithm for partitioning an assembly of polygons in the plane with a single infinite translation. This corresponds to the first special case of the interference diagram considered below (Section 5).
Reference: [2] <author> D. F. Baldwin. </author> <title> Algorithmic methods and software tools for the generation of mechanical assembly sequences. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1990. </year>
Reference-contexts: Finally, many systems predefine a small set of assembly trajectories or heuristically choose trajectories based on features of the parts or their contacts <ref> [ 33; 2; 13; 6 ] </ref> . However, this approach requires that extra planning information be present in the assembly description and risks missing some assembly sequences. <p> Two parts are in contact when their boundaries intersect. In experiments, industrial assemblies have proven to be quite constrained by their contacts <ref> [ 2; 15; 32 ] </ref> , resulting in very few subassemblies that must be further tested for removability. Let us consider disassembly motions consisting of arbitrary rigid motions (combining translation and rotation) in 3D for polyhedral parts; the 2D and translation cases are just simpler.
Reference: [3] <author> D. F. Baldwin, T. E. Abell, M.-C. M. Lui, T. L. De Fazio, and D. E. Whitney. </author> <title> An integrated computer aid for generating and evaluating assembly sequences for mechanical products. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 7(1) </volume> <pages> 78-94, </pages> <year> 1991. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Most experimental assembly planning systems find only monotone two-handed assembly sequences. These systems address the partitioning problem in a variety of ways. Several systems <ref> [ 3; 15; 21 ] </ref> enumerate all possible subassemblies and test each for removal, an approach that is practical for small assemblies but exponential-time in the worst case.
Reference: [4] <author> G. Boothroyd. </author> <title> Assembly Automation and Product Design. </title> <publisher> Marcel Dekker, </publisher> <year> 1991. </year>
Reference-contexts: These cases prove very useful in practice. 5 Partitioning with Single Translations Very few assembly operations in industry require the kind of convoluted paths that the general partitioning problem allows; in fact, an assembly that needs such a complicated motion is a prime candidate for redesign <ref> [ 4 ] </ref> . Instead, the vast majority of operations can be accomplished by relatively simple motions, such as single translations to infinity or extended twisting motions. In this section we examine the effect on the partitioning problem when disassembly paths are limited to single translations.
Reference: [5] <author> B. Chazelle and H. Edelsbrunner. </author> <title> An optimal algorithm for intersecting line segments in the plane. </title> <journal> Journal of the ACM, </journal> <volume> 39(1) </volume> <pages> 1-54, </pages> <year> 1992. </year>
Reference-contexts: The arrangement they determine has complexity O (v 4 ) and can be calculated in the same time bound <ref> [ 5 ] </ref> . The blocking graphs can be found by traversing the arrangement, making small changes as each 16 cell boundary is crossed.
Reference: [6] <author> A. Delchambre and P. Gaspart. KBAP: </author> <title> An industrial prototype of knowledge-based assembly planner. </title> <booktitle> In Proc. of the IEEE Intl. Conf. on Robotics and Automation, </booktitle> <pages> pages 2404-2409, </pages> <year> 1992. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Finally, many systems predefine a small set of assembly trajectories or heuristically choose trajectories based on features of the parts or their contacts <ref> [ 33; 2; 13; 6 ] </ref> . However, this approach requires that extra planning information be present in the assembly description and risks missing some assembly sequences.
Reference: [7] <author> H. Edelsbrunner. </author> <title> Algorithms in Combinatorial Geometry. </title> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: Then the arrangement 3 In most real assemblies, m n, c t v 2 , and c m. 18 of polytopes on S 5 has O (c 5 ) cells and can be constructed in O (c 5 ) time using a topological sweep <ref> [ 7 ] </ref> . Because each cell's blocking graph can have at most 2m edges, checking it for strong connectedness can be performed in time O (m). Hence, identifying a subassembly that is locally free has total running time of O (mc 5 ).
Reference: [8] <author> H. A. Ernst. MH-1: </author> <title> A Computer-Operated Mechanical Hand. Sc.D. </title> <type> thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1961. </year>
Reference-contexts: 1 Introduction Automated assembly of composite products has been a goal of robotics researchers since the beginning of the field <ref> [ 8; 16 ] </ref> , and robots are used today to assemble a variety of products. However, programming these robots remains tedious and error prone, and algorithms are sought to help program them.
Reference: [9] <author> M. R. Garey and D. S. Johnson. Computers and Intractability. W. H. Freeman, </author> <year> 1979. </year>
Reference-contexts: Schwartz and Sharir [ 28 ] have shown that path planning can be done in polynomial time for the case considered here. We show that PP is NP-hard by a reduction from 3-Satisfiability (3-SAT), a well known NP-complete problem <ref> [ 9 ] </ref> .
Reference: [10] <author> H. Halberstam and K. R. Roth. </author> <title> Sequences. </title> <publisher> Springer-Verlag, </publisher> <year> 1983. </year> <pages> Page 90. </pages>
Reference-contexts: It is not hard to choose the a i 's; a straightforward example of sequence that has all its terms distinct is a i = 2 i . However, this sequence yields an exponential length for the assignment mechanism. Using a result of Erdos <ref> [ 10 ] </ref> , it is possible to select the a i 's in such a way that maxfa 0 ; : : :; a n g = O (n 2 ). Then the physical length of the assignment mechanism becomes a polynomial of n. Acknowledgments The authors thank D.
Reference: [11] <author> D. Halperin and R. H. Wilson. </author> <title> Assembly partitioning with a constant number of translations. </title> <type> Technical Report SAND94-1819, </type> <institution> Sandia National Labs, </institution> <year> 1994. </year>
Reference-contexts: For instance, one way to measure the complexity of a translational path is by the number of straight-line translations it includes. In separate work, Halperin and Wilson <ref> [ 11 ] </ref> investigate the problem of partitioning an assembly with a small number t of translations. The case t = 1 is the single translation case described above.
Reference: [12] <author> H. Hirukawa, T. Matsui, and K. Takase. </author> <title> Automatic determination of possible velocity and applicable force of frictionless objects in contact from a geometric model. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 10(3) </volume> <pages> 309-322, </pages> <year> 1994. </year>
Reference-contexts: In Figure 13 the vertices V k are circled. (See <ref> [ 12; 29 ] </ref> for the constraints arising from other polyhedral contact types, and [ 27 ] for the constraints from curved surfaces in contact.) The intersection of the half-spaces of point-plane constraints between each pair of parts P i and P j is a closed convex 6D polytope in the
Reference: [13] <author> R. L. Hoffman. </author> <title> A common sense approach to assembly sequence planning. </title> <editor> In L. S. Homem de Mello and S. Lee, editors, </editor> <booktitle> Computer-Aided Mechanical Assembly Planning, </booktitle> <pages> pages 289-314. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year> <month> 23 </month>
Reference-contexts: In nonmonotone assembly sequences, parts may assume intermediate positions in subassemblies. Natarajan [ 24 ] and Wolter [ 33 ] show that assembly sequencing is PSPACE-hard when nonmono-tone sequences are allowed. Hoffman <ref> [ 13 ] </ref> describes one of the few nonmonotone assembly planning systems. In assembly sequences that are not two-handed, more than one subassembly may move independently at the same time. <p> Finally, many systems predefine a small set of assembly trajectories or heuristically choose trajectories based on features of the parts or their contacts <ref> [ 33; 2; 13; 6 ] </ref> . However, this approach requires that extra planning information be present in the assembly description and risks missing some assembly sequences.
Reference: [14] <author> L. S. Homem de Mello and S. Lee, </author> <title> editors. Computer-Aided Mechanical As--sembly Planning. </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably.
Reference: [15] <author> L. S. Homem de Mello and A. C. Sanderson. </author> <title> A correct and complete algorithm for the generation of mechanical assembly sequences. </title> <journal> IEEE Trans. on Robotics and Automation, </journal> <volume> 7(2) </volume> <pages> 228-240, </pages> <year> 1991. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Most experimental assembly planning systems find only monotone two-handed assembly sequences. These systems address the partitioning problem in a variety of ways. Several systems <ref> [ 3; 15; 21 ] </ref> enumerate all possible subassemblies and test each for removal, an approach that is practical for small assemblies but exponential-time in the worst case. <p> Two parts are in contact when their boundaries intersect. In experiments, industrial assemblies have proven to be quite constrained by their contacts <ref> [ 2; 15; 32 ] </ref> , resulting in very few subassemblies that must be further tested for removability. Let us consider disassembly motions consisting of arbitrary rigid motions (combining translation and rotation) in 3D for polyhedral parts; the 2D and translation cases are just simpler.
Reference: [16] <author> H. Inoue. </author> <title> Force feedback in precise assembly tasks. </title> <type> Technical Report AIM-308, </type> <institution> MIT AI Lab, </institution> <year> 1974. </year>
Reference-contexts: 1 Introduction Automated assembly of composite products has been a goal of robotics researchers since the beginning of the field <ref> [ 8; 16 ] </ref> , and robots are used today to assemble a variety of products. However, programming these robots remains tedious and error prone, and algorithms are sought to help program them.
Reference: [17] <author> L. Kavraki and M. N. Kolountzakis. </author> <title> Partitioning a planar assembly into two connected parts is NP-complete. </title> <journal> Information Processing Letters, </journal> <note> 1995. To appear. </note>
Reference-contexts: Finally, it can be shown easily that the reduction presented above is polynomial in the size of the 3-SAT problem. It follows that: Theorem 1 PP is NP-complete. Variants of the above proof establish that the following problems are NP-complete <ref> [ 31; 18; 17 ] </ref> : * Partitioning of a planar assembly when rotation is not allowed. * Partitioning of an assembly of polyhedra when rotation is allowed and when rotation is not allowed. * Partitioning of an assembly with parts of constant complexity (i.e., each part is limited to a <p> This constraint is useful in practice, because unconnected subassemblies are usually more difficult to grasp, fixture, and manipulate. As noted at the end of Section 3, partitioning assemblies of polygons in the plane into connected subassemblies is NP-complete <ref> [ 17 ] </ref> . Partitioning with infinitesimal rigid motions, as in Section 6, can be accomplished in polynomial time when connected subassemblies are required [ 29 ] .
Reference: [18] <author> L. Kavraki and J.-C. Latombe. </author> <title> Complexity of partitioning a planar assembly. </title> <type> Technical Report STAN-CS-93-1467, </type> <institution> Dept. of Computer Science, Stanford Univ., </institution> <year> 1993. </year>
Reference-contexts: In this section we show that deciding whether such a subassembly exists is an NP-complete problem. We outline the proof for an assembly of polygons that can translate and rotate in the plane. A more detailed version of the proof can be found in <ref> [ 18 ] </ref> . The NP-completeness result also extends to some restricted variants of the partitioning problem that are presented at the end of this section. <p> Finally, it can be shown easily that the reduction presented above is polynomial in the size of the 3-SAT problem. It follows that: Theorem 1 PP is NP-complete. Variants of the above proof establish that the following problems are NP-complete <ref> [ 31; 18; 17 ] </ref> : * Partitioning of a planar assembly when rotation is not allowed. * Partitioning of an assembly of polyhedra when rotation is allowed and when rotation is not allowed. * Partitioning of an assembly with parts of constant complexity (i.e., each part is limited to a
Reference: [19] <author> S. Khanna, R. Motwani, and R. H. Wilson. </author> <title> Graph certificates, lookahead in dynamic graph problems, and assembly planning in robotics. </title> <type> Technical Report SAND94-3128, </type> <institution> Sandia National Labs, </institution> <year> 1994. </year>
Reference-contexts: Checking a single graph for strong connectedness requires time linear in the number of edges, and the time to check all the blocking graphs dominates the running time of each algorithm. Khanna et al. <ref> [ 19 ] </ref> group consecutive graphs into phases that are checked together, achieving amortized time per graph of O (n 1:38 ), where n is the number of nodes in each graph. This reduces the running time of the algorithms in Sections 5 and 6 accordingly.
Reference: [20] <author> H. Ko and K. Lee. </author> <title> Automatic assembling procedure generation from mating conditions. </title> <booktitle> Computer Aided Design, </booktitle> <volume> 19(1) </volume> <pages> 3-10, </pages> <year> 1987. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Several systems [ 3; 15; 21 ] enumerate all possible subassemblies and test each for removal, an approach that is practical for small assemblies but exponential-time in the worst case. Another approach is to consider only sequences in which each operation mates a single part with a subassembly <ref> [ 20; 32 ] </ref> . This approach reduces the partitioning problem to checking for the motion of each part but risks losing some, maybe all, of the assembly sequences for a product.
Reference: [21] <author> S. S. Krishnan and A. C. Sanderson. </author> <title> Path planning algorithms for assembly sequence planning. </title> <booktitle> In Intl. Conf. on Intelligent Robotics, </booktitle> <pages> pages 428-439, </pages> <year> 1991. </year>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Most experimental assembly planning systems find only monotone two-handed assembly sequences. These systems address the partitioning problem in a variety of ways. Several systems <ref> [ 3; 15; 21 ] </ref> enumerate all possible subassemblies and test each for removal, an approach that is practical for small assemblies but exponential-time in the worst case.
Reference: [22] <author> T. Lozano-Perez. </author> <title> Spatial planning: A configuration space approach. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-32(2):108-120, </volume> <year> 1983. </year>
Reference-contexts: For every pair (X; Y ) of parts, the set of placements of X in which it intersects with Y is the configuration space (or C-space) obstacle for the pair of parts <ref> [ 22 ] </ref> . The C-space obstacle for part X moving with Y as an obstacle is labeled X=Y , while the C-space obstacle for Y moving with X as an obstacle is labeled Y =X.
Reference: [23] <author> B. Mishra, J. T. Schwartz, and M. Sharir. </author> <title> On the existence and synthesis of multifinger positive grips. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 541-558, </pages> <year> 1987. </year>
Reference-contexts: However, the tangent hyperplanes and arrangement on S 5 can be computed more directly from the contacts of the assembly. The constraints that contacts impose on the relative motion of the two contacting 17 bodies have been studied in depth (see for instance <ref> [ 23; 25; 27 ] </ref> ). An infinitesimal rigid motion can be described by a 6D vector dX = (dx; dy; dz; dff; dfi; dfl) giving the components of translation and rates of infinitesimal rotation about the coordinate axes, respectively.
Reference: [24] <author> B. K. Natarajan. </author> <title> On planning assemblies. </title> <booktitle> In Proc. of the 4th ACM Symp. on Computational Geometry, </booktitle> <pages> pages 299-308, </pages> <year> 1988. </year>
Reference-contexts: Such sequences are two-handed because one hand is needed to hold each rigidly moving subassembly (a table or fixture counts as a hand, if one is used) <ref> [ 24 ] </ref> , and monotone because parts are never placed in intermediate positions relative to each other [ 33 ] . <p> In nonmonotone assembly sequences, parts may assume intermediate positions in subassemblies. Natarajan <ref> [ 24 ] </ref> and Wolter [ 33 ] show that assembly sequencing is PSPACE-hard when nonmono-tone sequences are allowed. Hoffman [ 13 ] describes one of the few nonmonotone assembly planning systems. In assembly sequences that are not two-handed, more than one subassembly may move independently at the same time.
Reference: [25] <author> M. S. Ohwovoriole. </author> <title> An Extension of Screw Theory and its Application to the Automation of Industrial Assemblies. </title> <type> PhD thesis, </type> <institution> Stanford Univ., </institution> <month> April </month> <year> 1980. </year>
Reference-contexts: However, the tangent hyperplanes and arrangement on S 5 can be computed more directly from the contacts of the assembly. The constraints that contacts impose on the relative motion of the two contacting 17 bodies have been studied in depth (see for instance <ref> [ 23; 25; 27 ] </ref> ). An infinitesimal rigid motion can be described by a 6D vector dX = (dx; dy; dz; dff; dfi; dfl) giving the components of translation and rates of infinitesimal rotation about the coordinate axes, respectively.
Reference: [26] <author> R. S. Palmer. </author> <title> Computational Complexity of Motion and Stability of Polygons. </title> <type> PhD thesis, </type> <institution> Cornell Univ., </institution> <year> 1989. </year>
Reference-contexts: Hoffman [ 13 ] describes one of the few nonmonotone assembly planning systems. In assembly sequences that are not two-handed, more than one subassembly may move independently at the same time. Palmer <ref> [ 26 ] </ref> considers the infinitesimal partitioning problem in this case: determining whether a feasible set of simultaneous, infinitesimal motions exists for the parts of a polygonal assembly. He shows that this problem is NP-complete by a reduction from 3-Satisfiability.
Reference: [27] <author> E. Rimon and J. Burdick. </author> <title> Mobility of bodies in contact|I: A new second order mobility index for multiple-finger grasps. </title> <booktitle> In Proc. of the IEEE Intl. Conf. on Robotics and Automation, </booktitle> <pages> pages 2329-2335, </pages> <year> 1994. </year> <month> 24 </month>
Reference-contexts: However, the tangent hyperplanes and arrangement on S 5 can be computed more directly from the contacts of the assembly. The constraints that contacts impose on the relative motion of the two contacting 17 bodies have been studied in depth (see for instance <ref> [ 23; 25; 27 ] </ref> ). An infinitesimal rigid motion can be described by a 6D vector dX = (dx; dy; dz; dff; dfi; dfl) giving the components of translation and rates of infinitesimal rotation about the coordinate axes, respectively. <p> In Figure 13 the vertices V k are circled. (See [ 12; 29 ] for the constraints arising from other polyhedral contact types, and <ref> [ 27 ] </ref> for the constraints from curved surfaces in contact.) The intersection of the half-spaces of point-plane constraints between each pair of parts P i and P j is a closed convex 6D polytope in the space of infinitesimal motions.
Reference: [28] <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: I. the case of a two-dimensional rigid polygonal body moving amidst polygonal barriers. </title> <journal> Communications on Pure and Applied Mathematics, </journal> <volume> 36 </volume> <pages> 345-398, </pages> <year> 1983. </year>
Reference-contexts: We will show that PP is NP-complete. It is clearly in NP, since a nondeterministic algorithm can guess S and then invoke a path planner to find the path of S out of the assembly. Schwartz and Sharir <ref> [ 28 ] </ref> have shown that path planning can be done in polynomial time for the case considered here. We show that PP is NP-hard by a reduction from 3-Satisfiability (3-SAT), a well known NP-complete problem [ 9 ] .
Reference: [29] <author> R. H. Wilson. </author> <title> On Geometric Assembly Planning. </title> <type> PhD thesis, </type> <institution> Stanford Univ., </institution> <month> March </month> <year> 1992. </year> <note> Stanford Technical Report STAN-CS-92-1416. </note>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Finally, the subassembly fB; Cg is safe, since neither B nor C collides with the remaining objects (Fig. 7 (b)). The constraints in a cell can be represented and analyzed using a blocking 11 graph <ref> [ 29; 30 ] </ref> . A blocking graph is a directed graph with a node for each part; a label X=Y in the cell induces a directed arc from node X to node Y in the graph. <p> In Figure 13 the vertices V k are circled. (See <ref> [ 12; 29 ] </ref> for the constraints arising from other polyhedral contact types, and [ 27 ] for the constraints from curved surfaces in contact.) The intersection of the half-spaces of point-plane constraints between each pair of parts P i and P j is a closed convex 6D polytope in the <p> As noted at the end of Section 3, partitioning assemblies of polygons in the plane into connected subassemblies is NP-complete [ 17 ] . Partitioning with infinitesimal rigid motions, as in Section 6, can be accomplished in polynomial time when connected subassemblies are required <ref> [ 29 ] </ref> . However, the computational complexity of the partitioning problem with single translations, as considered in Section 5, remains unknown when connected subassemblies are required. A practical algorithm to solve this last problem could have important applications in assembly planning systems.
Reference: [30] <author> R. H. Wilson and J.-C. Latombe. </author> <title> Geometric reasoning about mechanical assembly. </title> <journal> Artificial Intelligence, </journal> <volume> 71(2) </volume> <pages> 371-396, </pages> <year> 1994. </year>
Reference-contexts: Finally, the subassembly fB; Cg is safe, since neither B nor C collides with the remaining objects (Fig. 7 (b)). The constraints in a cell can be represented and analyzed using a blocking 11 graph <ref> [ 29; 30 ] </ref> . A blocking graph is a directed graph with a node for each part; a label X=Y in the cell induces a directed arc from node X to node Y in the graph.
Reference: [31] <author> R. H. Wilson, J.-C. Latombe, and T. Lozano-Perez. </author> <title> On the complexity of partitioning an assembly. </title> <type> Technical Report STAN-CS-92-1458, </type> <institution> Dept. of Computer Science, Stanford Univ., </institution> <year> 1992. </year>
Reference-contexts: Finally, it can be shown easily that the reduction presented above is polynomial in the size of the 3-SAT problem. It follows that: Theorem 1 PP is NP-complete. Variants of the above proof establish that the following problems are NP-complete <ref> [ 31; 18; 17 ] </ref> : * Partitioning of a planar assembly when rotation is not allowed. * Partitioning of an assembly of polyhedra when rotation is allowed and when rotation is not allowed. * Partitioning of an assembly with parts of constant complexity (i.e., each part is limited to a
Reference: [32] <author> R. H. Wilson and J.-F. Rit. </author> <title> Maintaining geometric dependencies in assembly planning. </title> <editor> In L. S. Homem de Mello and S. Lee, editors, </editor> <booktitle> Computer-Aided Mechanical Assembly Planning, </booktitle> <pages> pages 217-242. </pages> <publisher> Kluwer Academic Publishers, </publisher> <year> 1991. </year>
Reference-contexts: Several systems [ 3; 15; 21 ] enumerate all possible subassemblies and test each for removal, an approach that is practical for small assemblies but exponential-time in the worst case. Another approach is to consider only sequences in which each operation mates a single part with a subassembly <ref> [ 20; 32 ] </ref> . This approach reduces the partitioning problem to checking for the motion of each part but risks losing some, maybe all, of the assembly sequences for a product. <p> Two parts are in contact when their boundaries intersect. In experiments, industrial assemblies have proven to be quite constrained by their contacts <ref> [ 2; 15; 32 ] </ref> , resulting in very few subassemblies that must be further tested for removability. Let us consider disassembly motions consisting of arbitrary rigid motions (combining translation and rotation) in 3D for polyhedral parts; the 2D and translation cases are just simpler.
Reference: [33] <author> J. D. Wolter. </author> <title> On the Automatic Generation of Plans for Mechanical Assembly. </title> <type> PhD thesis, </type> <institution> Univ. of Michigan, </institution> <year> 1988. </year> <month> 25 </month>
Reference-contexts: Disassembly planning has been a very popular approach to assembly sequencing (see for instance <ref> [ 20; 33; 1; 3; 14; 15; 21; 6; 29 ] </ref> ). The most constraints on assembly motions are present in the final assembled state of the product, so reasoning backward from the assembled state reduces the branching factor of the search considerably. <p> Such sequences are two-handed because one hand is needed to hold each rigidly moving subassembly (a table or fixture counts as a hand, if one is used) [ 24 ] , and monotone because parts are never placed in intermediate positions relative to each other <ref> [ 33 ] </ref> . For example, the assembly in Figure 1 (a) can be assembled by a monotone two-handed assembly sequence, whereas the assembly in Figure 1 (b) cannot; the latter requires one part to be placed in an intermediate position and then moved again later. <p> In nonmonotone assembly sequences, parts may assume intermediate positions in subassemblies. Natarajan [ 24 ] and Wolter <ref> [ 33 ] </ref> show that assembly sequencing is PSPACE-hard when nonmono-tone sequences are allowed. Hoffman [ 13 ] describes one of the few nonmonotone assembly planning systems. In assembly sequences that are not two-handed, more than one subassembly may move independently at the same time. <p> Finally, many systems predefine a small set of assembly trajectories or heuristically choose trajectories based on features of the parts or their contacts <ref> [ 33; 2; 13; 6 ] </ref> . However, this approach requires that extra planning information be present in the assembly description and risks missing some assembly sequences.
References-found: 33

