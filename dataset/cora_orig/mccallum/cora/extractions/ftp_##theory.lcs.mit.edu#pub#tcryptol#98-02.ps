URL: ftp://theory.lcs.mit.edu/pub/tcryptol/98-02.ps
Refering-URL: http://theory.lcs.mit.edu/~tcryptol/1998/98-02.html
Root-URL: 
Title: The Graph Clustering Problem has a Perfect Zero-Knowledge Proof  
Author: Alfredo De Santis Giovanni Di Crescenzo Oded Goldreich Giuseppe Persiano 
Keyword: Graph Isomorphism, Zero-Knowledge Interactive Proofs.  
Date: January 27, 1998  
Abstract: In this note we show that this problem has a (perfect) zero-knowledge interactive proof system. 
Abstract-found: 1
Intro-found: 1
Reference: [AKS] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> An O(n log n) Sorting Network, </title> <booktitle> Proceedings of 15th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1983. </year>
Reference-contexts: possible to construct, in time polynomial in n and t, a monotone formula that computes Thresh t;n (x 1 ; :::; x n ). (A proof of existence of such a formula is given in [Va]; the construction of such a formula can be derived by using the result in <ref> [AKS] </ref>; other constructions are given in [Fr].) Tools. We use the following results from [DeDiPeYu]. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system.
Reference: [AiHa] <author> W. Aiello and J. H-astad. </author> <title> Statistical Zero Knowledge Can Be Recognized in Two Rounds Journal of Computer and System Sciences, </title> <journal> vol. </journal> <volume> 42, </volume> <year> 1991, </year> <pages> pp. 327-345. </pages>
Reference-contexts: Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen <ref> [Fo, AiHa] </ref>. Still, perfect zero-knowledge proofs are worth to investigate since they seem to capture the intrinsic properties of the zero-knowledge notion. Trying to extend the domain of perfect zero-knowledge, we consider the Graph Clustering Problem (GCP), formally defined below.
Reference: [BoFrLu] <author> J. Boyar, K. Friedl, and C. Lund, </author> <title> Practical Zero-Knowledge Proofs: Giving Hints and Using Deficiencies, </title> <journal> Journal of Cryptology, n. </journal> <volume> 4, </volume> <pages> pp. 185-206, </pages> <year> 1991. </year>
Reference-contexts: Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties <ref> [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu] </ref>, or are obtained by formulae compositions over such languages [DeDiPeYu]. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa].
Reference: [DeDiPe] <author> A. De Santis, G. Di Crescenzo, and G. Persiano, </author> <title> The Non-Parameterized Graph Clustering Problem is in PZK, </title> <type> manuscript, </type> <year> 1997. </year>
Reference-contexts: Loosely speaking, the input to the problem consists of a sequence of integers and a sequence of graphs, and the question is whether the equivalence classes under the fl This paper combines unpublished manuscripts by Goldreich [G96], and by De Santis, Di Crescenzo and Per siano <ref> [DeDiPe] </ref>. y Dipartimento di Informatica ed Appl., Universita di Salerno, 84081 Baronissi (SA), Italy. E-mail: ads@dia.unisa.it. z Computer Science and Engineering Department, University of California San Diego, 92093 La Jolla, CA, USA. E-mail: giovanni@cs.ucsd.edu. x Work done while visiting MIT.
Reference: [DeDiPeYu] <author> A. De Santis, G. Di Crescenzo, G. Persiano, and M. Yung, </author> <title> On Monotone Formula Closure of SZK, </title> <booktitle> Proceedings of 35th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu], or are obtained by formulae compositions over such languages <ref> [DeDiPeYu] </ref>. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa]. Still, perfect zero-knowledge proofs are worth to investigate since they seem to capture the intrinsic properties of the zero-knowledge notion. <p> We show that GCP has a perfect zero-knowledge proof system. Our proof proceeds by expressing GCP as a conjunction of a constant number of monotone formulae over Graph Isomorphism (or Non-Isomorphism) statements. This allows us to apply a general result of <ref> [DeDiPeYu] </ref>. Our technique can be adapted to other random self-reducible languages, such as quadratic residuosity, discrete log, etc. 2 Preliminaries We recall the definition of perfect zero-knowledge proof systems [GoMiRa]. <p> We use the following results from <ref> [DeDiPeYu] </ref>. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system. Theorem 2 [DeDiPeYu] The language of all true monotone formulae over graph non isomorphism statements has a perfect zero-knowledge proof system. 3 A perfect zero-knowledge proof system for GCP In <p> We use the following results from <ref> [DeDiPeYu] </ref>. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system. Theorem 2 [DeDiPeYu] The language of all true monotone formulae over graph non isomorphism statements has a perfect zero-knowledge proof system. 3 A perfect zero-knowledge proof system for GCP In this section we <p> We use the following results from <ref> [DeDiPeYu] </ref>. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system. Theorem 2 [DeDiPeYu] The language of all true monotone formulae over graph non isomorphism statements has a perfect zero-knowledge proof system. 3 A perfect zero-knowledge proof system for GCP In this section we present a perfect zero-knowledge proof system for the language GCP.
Reference: [Fo] <author> L. Fortnow, </author> <title> The Complexity of Perfect Zero Knowledge, </title> <booktitle> Proceedings of 19th Annual ACM Symposium on Theory of Computing, </booktitle> <year> 1987, </year> <pages> pp. 204-209. 7 </pages>
Reference-contexts: Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen <ref> [Fo, AiHa] </ref>. Still, perfect zero-knowledge proofs are worth to investigate since they seem to capture the intrinsic properties of the zero-knowledge notion. Trying to extend the domain of perfect zero-knowledge, we consider the Graph Clustering Problem (GCP), formally defined below.
Reference: [Fr] <author> J. Friedman, </author> <title> Constructing O(n log n) Size Monotone Formulae for the k-th Threshold Function of n Boolean Variables, </title> <journal> SIAM Journal on Computing, </journal> <volume> vol. 15, </volume> <editor> n. </editor> <volume> 3, </volume> <year> 1986. </year>
Reference-contexts: in n and t, a monotone formula that computes Thresh t;n (x 1 ; :::; x n ). (A proof of existence of such a formula is given in [Va]; the construction of such a formula can be derived by using the result in [AKS]; other constructions are given in <ref> [Fr] </ref>.) Tools. We use the following results from [DeDiPeYu]. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system.
Reference: [G95] <author> O. Goldreich, </author> <title> Foundation of Cryptography Fragments of a Book, </title> <month> February </month> <year> 1995. </year> <note> Available from http://theory.lcs.mit.edu/~oded/frag.html. </note>
Reference-contexts: With probability at most 1=2, the output S V fl (x) is a special failure symbol, denoted ?. 2. Conditioned on S V fl (x) 6= ?, the distribution S V fl (x) is identical to P $ V fl (x). The above definition is taken from <ref> [G95] </ref>, and is at least as strong as the original definitions [GoMiRa] where the simulator is allowed to run for expected polynomial-time (but is not allowed to fail). The Graph Clustering Problem.
Reference: [G96] <author> O. Goldreich, </author> <title> The Graph Clustering Problem has a Perfect Zero-Knowledge Proof, Theory of Crypto Library, </title> <year> 1996. </year>
Reference-contexts: Loosely speaking, the input to the problem consists of a sequence of integers and a sequence of graphs, and the question is whether the equivalence classes under the fl This paper combines unpublished manuscripts by Goldreich <ref> [G96] </ref>, and by De Santis, Di Crescenzo and Per siano [DeDiPe]. y Dipartimento di Informatica ed Appl., Universita di Salerno, 84081 Baronissi (SA), Italy. E-mail: ads@dia.unisa.it. z Computer Science and Engineering Department, University of California San Diego, 92093 La Jolla, CA, USA. E-mail: giovanni@cs.ucsd.edu. x Work done while visiting MIT.
Reference: [GoKu] <author> O. Goldreich and E. Kushilevitz, </author> <title> A Perfect Zero Knowledge Proof for a Decision Problem Equivalent to Discrete Logarithm, </title> <booktitle> "Advances in Cryptology - CRYPTO 88", vol. 403 of "Lecture Notes in Computer Science", </booktitle> <editor> S. Goldwasser editor, </editor> <publisher> Springer Verlag. </publisher>
Reference-contexts: Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties <ref> [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu] </ref>, or are obtained by formulae compositions over such languages [DeDiPeYu]. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa].
Reference: [GoMiWi] <author> O. Goldreich, S. Micali, and A. Wigderson, </author> <title> Proofs that Yield Nothing but their Validity or All Languages in NP Have Zero-Knowledge Proof Systems, </title> <journal> Journal of the ACM, </journal> <volume> vol. 38, </volume> <editor> n. </editor> <volume> 1, </volume> <year> 1991, </year> <pages> pp. 691-729. </pages>
Reference-contexts: Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties <ref> [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu] </ref>, or are obtained by formulae compositions over such languages [DeDiPeYu]. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa]. <p> E-mail: oded@lcs.mit.edu. -Dipartimento di Informatica ed Appl., Universita di Salerno, 84081 Baronissi (SA), Italy. E-mail: giuper@dia.unisa.it. 1 graph isomorphism relation of the given graphs have sizes which match the given sequence of inte-gers. GCP is related to Graph Isomorphism, known to have a perfect zero-knowledge proof <ref> [GoMiWi] </ref>, and yet seems more complex than it. The knowledge-complexity (cf., [GoMiRa, GoPe]) of GCP is easily bounded by a function of the integral part of the instance, and for some years this problem served as an example of a non-trivial case of bounded knowledge-complexity.
Reference: [GoOr] <author> O. Goldreich and Y. Oren, </author> <title> Definitions and Properties of Zero-Knowledge Proof Systems, </title> <journal> Journal of Cryptology, </journal> <volume> vol. 7, </volume> <year> 1994, </year> <pages> pp. 1-32. </pages>
Reference-contexts: Then, the perfect zero-knowledge property of protocol (P,V) follows from the fact that a sequential composition of perfect zero-knowledge protocols results in a perfect zero-knowledge protocol, as proved in <ref> [GoOr] </ref>. We thus obtain our main result Theorem 3 The protocol (P,V) is a perfect zero-knowledge interactive proof system for GCP.
Reference: [GoPe] <author> O. Goldreich and E. Petrank, </author> <title> Quantifying Knowledge Complexity, </title> <booktitle> Proceedings of 32nd IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1994. </year>
Reference-contexts: E-mail: giuper@dia.unisa.it. 1 graph isomorphism relation of the given graphs have sizes which match the given sequence of inte-gers. GCP is related to Graph Isomorphism, known to have a perfect zero-knowledge proof [GoMiWi], and yet seems more complex than it. The knowledge-complexity (cf., <ref> [GoMiRa, GoPe] </ref>) of GCP is easily bounded by a function of the integral part of the instance, and for some years this problem served as an example of a non-trivial case of bounded knowledge-complexity. We show that GCP has a perfect zero-knowledge proof system.
Reference: [GoMiRa] <author> S. Goldwasser, S. Micali, and C. Rackoff, </author> <title> The Knowledge Complexity of Interactive Proof Systems, </title> <journal> SIAM Journal on Computing, </journal> <volume> vol. 18, </volume> <editor> n. </editor> <volume> 1, </volume> <year> 1989. </year>
Reference-contexts: 1 Introduction The remarkable notion of perfect zero-knowledge proofs was introduced by Goldwasser, Micali and Rackoff <ref> [GoMiRa] </ref>. A perfect zero-knowledge proof system is a method for a prover to convince a polynomial-time bounded verifier with very high probability that a certain assertion is true without revealing any additional information (in an information-theoretic sense). <p> Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties <ref> [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu] </ref>, or are obtained by formulae compositions over such languages [DeDiPeYu]. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa]. <p> E-mail: giuper@dia.unisa.it. 1 graph isomorphism relation of the given graphs have sizes which match the given sequence of inte-gers. GCP is related to Graph Isomorphism, known to have a perfect zero-knowledge proof [GoMiWi], and yet seems more complex than it. The knowledge-complexity (cf., <ref> [GoMiRa, GoPe] </ref>) of GCP is easily bounded by a function of the integral part of the instance, and for some years this problem served as an example of a non-trivial case of bounded knowledge-complexity. We show that GCP has a perfect zero-knowledge proof system. <p> This allows us to apply a general result of [DeDiPeYu]. Our technique can be adapted to other random self-reducible languages, such as quadratic residuosity, discrete log, etc. 2 Preliminaries We recall the definition of perfect zero-knowledge proof systems <ref> [GoMiRa] </ref>. <p> Conditioned on S V fl (x) 6= ?, the distribution S V fl (x) is identical to P $ V fl (x). The above definition is taken from [G95], and is at least as strong as the original definitions <ref> [GoMiRa] </ref> where the simulator is allowed to run for expected polynomial-time (but is not allowed to fail). The Graph Clustering Problem.
Reference: [ToWo] <author> M. Tompa and H. Woll, </author> <title> Random Self-Reducibility and Zero-Knowledge Interactive Proofs of Possession of Information, </title> <booktitle> Proceedings of 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1987. </year>
Reference-contexts: Not many are the languages which have been shown to have a perfect zero-knowledge proof system; in particular, all of them share number-theoretic or random self-reducibility properties <ref> [GoMiRa, GoMiWi, GoKu, ToWo, BoFrLu] </ref>, or are obtained by formulae compositions over such languages [DeDiPeYu]. Moreover, it is known that it is unlikely that all languages in NP have a perfect zero-knowledge proof system, unless unexpected consequences in complexity theory happen [Fo, AiHa].
Reference: [Va] <author> L. Valiant, </author> <title> Short Monotone Formulae for the Majority Function, </title> <journal> Journal of Algorithms, </journal> <volume> vol. 5, </volume> <editor> n. </editor> <volume> 3, </volume> <year> 1984, </year> <pages> pp. 363-366. </pages>
Reference-contexts: We use throughout the paper the fact that it is possible to construct, in time polynomial in n and t, a monotone formula that computes Thresh t;n (x 1 ; :::; x n ). (A proof of existence of such a formula is given in <ref> [Va] </ref>; the construction of such a formula can be derived by using the result in [AKS]; other constructions are given in [Fr].) Tools. We use the following results from [DeDiPeYu]. Theorem 1 [DeDiPeYu] The language of all true monotone formulae over graph isomorphism statements has a perfect zero-knowledge proof system.
References-found: 16

