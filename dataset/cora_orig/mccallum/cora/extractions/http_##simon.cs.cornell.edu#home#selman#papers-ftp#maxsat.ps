URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/maxsat.ps
Refering-URL: http://simon.cs.cornell.edu/home/selman/papers-ftp/index.html
Root-URL: 
Email: fkautzg@research.att.com  
Title: Solving Problems with Hard and Soft Constraints Using a Stochastic Algorithm for MAX-SAT  Direct correspondence to:  
Author: Yuejun Jiang, Henry Kautz, and Bart Selman Henry Kautz 
Address: Mountain Ave., Room 2C-407 Murray Hill, NJ 07974  
Affiliation: AT&T Bell Laboratories  600  
Abstract: Stochastic local search is an effective technique for solving certain classes of large, hard propositional satisfiability problems, including propositional encodings of problems such as circuit synthesis and graph coloring (Selman, Levesque, and Mitchell 1992; Selman, Kautz, and Cohen 1994). Many problems of interest to AI and operations research cannot be conveniently encoded as simple satisfiability, because they involve both hard and soft constraints - that is, any solution may have to violate some of the less important constraints. We show how both kinds of constraints can be handled by encoding problems as instances of weighted MAX-SAT (finding a model that maximizes the sum of the weights of the satisfied clauses that make up a problem instance). We generalize our local-search algorithm for satisfiability (GSAT) to handle weighted MAX-SAT, and present experimental results on encodings of the Steiner tree problem, which is a well-studied hard combinatorial search problem. On many problems this approach turns out to be competitive with the best current specialized Steiner tree algorithms developed in operations research. Our positive results demonstrate that it is practical to use domain-independent logical representations with a general search procedure to solve interesting classes of hard combinatorial search problems. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Adorf, H. M., and Johnston, M. D. </author> <title> (1990) A discrete stochastic neural network algorithm for constraint satisfaction problems. </title> <booktitle> Proceedings of the International Joint Conference on Neural Networks, </booktitle> <address> San Diego, CA. </address>
Reference: <author> Beasley, J. </author> <title> (1989) An SST-based algorithm for the Steiner Tree problems in graphs. </title> <booktitle> Networks 19, </booktitle> <pages> 1-16. </pages>
Reference: <author> Chopra, S., Gorres, E., and Rao, M. </author> <title> (1992) Solving the Steiner Tree problem on a graph using branch and cut. </title> <journal> ORSA Journal on Computing 4(3), </journal> <pages> 3-18. </pages>
Reference: <author> Crawford, J. M., and Baker, A.B. </author> <year> (1994). </year> <title> Experimental results on the application of sat-isfiability algorithms to scheduling problems. </title> <booktitle> Proceedings AAAI-94, </booktitle> <address> Seattle, WA, </address> <pages> 1092-1097. </pages>
Reference: <author> Davis, M., and Putnam, H. </author> <year> (1960). </year> <title> A computing procedure for quantification theory. </title> <journal> J. Assoc. Comput. Mach. </journal> <volume> 7, </volume> <pages> 201-215. </pages>
Reference-contexts: 1 Introduction This paper appeared at the 1st International Joint Workshop on Artificial Intelligence and Operations Research, Timberline, Oregon, 1995. Traditional satisfiability-testing algorithms are based on backtracking search 1 <ref> (Davis and Putnam 1960) </ref>. Surprisingly few search heuristics have proven to be generally useful; increases in the size of problems that can be practically solved have come mainly from increases in machine speed and more efficient implementations (Trick and Johnson 1993).
Reference: <author> Dowsland, K. </author> <title> (1991) Hill-climbing simulated annealing and the Steiner problem in graphs. </title> <journal> Eng. Opt. </journal> <volume> 17, </volume> <pages> 91-107. </pages>
Reference-contexts: It is important to note that Walksat scales up to problems based on large graphs, especially when the set of Steiner nodes is relatively small. This should be contrasted with some other local-search style approaches to solving Steiner trees using simulated annealing <ref> (Dowsland 1991) </ref> and genetic algorithms (Kapsalis et al. 1993). Despite the fact that these local search algorithms were designed specifically for solving Steiner problems, they can only handle the smallest instances in the B and C classes.
Reference: <author> Ginsberg, M. and McAllester, D. </author> <title> (1994) GSAT and dynamic backtracking. </title> <booktitle> Proceedings KR-94, </booktitle> <address> Bonn, Germany, </address> <pages> 226-237. </pages>
Reference-contexts: algorithm, called GSAT, is only a partial decision procedure it cannot be used to prove that a formula is unsatisfiable, but only find models of satisfiable ones and does not work on problems where the structure of the local search space yields no information about the location of global optima <ref> (Ginsberg and McAllester 1994) </ref>. However, GSAT is very useful in practice. For example, it is the only approach that can solve certain very large, computationally hard, formulas derived from circuit synthesis problems (Selman, Kautz, and Cohen 1994). <p> We worked on a well-known set of benchmark problems, and compared our performance with the best published results. One of our implicit goals in this work is to develop representations and algorithms that provide state-of-the-art performance, and advance research in both the AI and operations research communities <ref> (Ginsberg 1994) </ref>. Not all possible MAX-SAT encodings of an optimization problem are equally good. For practical applications, the final size of the encoding is crucial, and even a low-order polynomial blowup in size may be unacceptable.
Reference: <editor> Ginsberg, M. </editor> <booktitle> (1994) Organizational meeting for AI/OR initiative, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: algorithm, called GSAT, is only a partial decision procedure it cannot be used to prove that a formula is unsatisfiable, but only find models of satisfiable ones and does not work on problems where the structure of the local search space yields no information about the location of global optima <ref> (Ginsberg and McAllester 1994) </ref>. However, GSAT is very useful in practice. For example, it is the only approach that can solve certain very large, computationally hard, formulas derived from circuit synthesis problems (Selman, Kautz, and Cohen 1994). <p> We worked on a well-known set of benchmark problems, and compared our performance with the best published results. One of our implicit goals in this work is to develop representations and algorithms that provide state-of-the-art performance, and advance research in both the AI and operations research communities <ref> (Ginsberg 1994) </ref>. Not all possible MAX-SAT encodings of an optimization problem are equally good. For practical applications, the final size of the encoding is crucial, and even a low-order polynomial blowup in size may be unacceptable.
Reference: <author> Green, C. </author> <title> (1969) Application of theorem proving to problem solving. </title> <booktitle> Proceedings IJCAI-69, </booktitle> <address> Washington, DC, </address> <pages> 219-239. </pages>
Reference-contexts: One issue that arises in studying this approach to problem-solving is developing problem encodings where a solution corresponds to a satisfying model (Kautz and Selman 1992), instead of having a solution correspond to a refutation proof <ref> (Green 1969) </ref>. But for some kinds of problems no useful encoding in terms of propositional satisfiability can be found in particular, problems that contain both hard and soft constraints.
Reference: <author> Gu, J. </author> <title> (1992) Efficient local search for very large-scale satisfiability problems. </title> <journal> Sigart Bulletin 3(1), </journal> <pages> 8-12. </pages>
Reference: <author> Hansen, P., and Jaumard, B. </author> <title> (1990) Algorithms for the maximum satisfiability problem. </title> <booktitle> Computing 44, </booktitle> <pages> 279-303. </pages>
Reference: <author> Hwang, F.K, Richards, D.S., and Winter, P. </author> <title> (1992) The Steiner Tree Problem, </title> <publisher> Amsterdam: North-Holland (Elsevier Science Publishers). </publisher>
Reference-contexts: The main experimental work described in this paper is on Boolean encodings of network Steiner tree problems. These problems have many applications in network design and routing, and have been intensively studied in operations research for several decades <ref> (Hwang et al. 1992) </ref>. We worked on a well-known set of benchmark problems, and compared our performance with the best published results. <p> We found such a set of benchmark problems in the operations research community, as we describe in the next section. 3 Steiner Tree Problems Network Steiner tree problem have long been studied in operations research <ref> (Hwang et al. 1992) </ref>, and many well-known, hard benchmark instances are available. The problems we used can be obtained by ftp from the OR Repository at Imperial College (mscmga.ms.ic.ac.uk).
Reference: <author> Johnson, </author> <title> D.S., </title> <type> (1994) Personal communication. </type>
Reference-contexts: The SGI is rated is 136 MIPS, while the Vax is rated at 6 MIPS. This would indicate a ratio of 22 in relative speed; however, at least one user of both machines <ref> (Johnson 1994) </ref> reports a maximum speedup factor of 15 on combinatorial algorithms, with as small a factor as 3 on large instances.
Reference: <author> Kapsalis, A., Rayward-Smith, V., and Smith, G. </author> <title> (1993) Solving the graphical Steiner tree problem using genetic algorithms. </title> <journal> J. Oper. Res. Soc. </journal> <volume> 44(4), </volume> <pages> 397-406. </pages>
Reference-contexts: It is important to note that Walksat scales up to problems based on large graphs, especially when the set of Steiner nodes is relatively small. This should be contrasted with some other local-search style approaches to solving Steiner trees using simulated annealing (Dowsland 1991) and genetic algorithms <ref> (Kapsalis et al. 1993) </ref>. Despite the fact that these local search algorithms were designed specifically for solving Steiner problems, they can only handle the smallest instances in the B and C classes.
Reference: <author> Kautz, H., and Selman, B. </author> <year> (1992). </year> <title> Planning as satisfiability. </title> <booktitle> Proceedings ECAI-92, </booktitle> <address> Vienna, Austria. </address> <note> 14 Lever, </note> <author> J., and Richards, B. </author> <title> (1994) A CLP approach to flight scheduling problems. </title> <booktitle> Proceed--ings of the International Symposium on Methodologies for Intelligent Systems, </booktitle> <year> 1994. </year>
Reference-contexts: One issue that arises in studying this approach to problem-solving is developing problem encodings where a solution corresponds to a satisfying model <ref> (Kautz and Selman 1992) </ref>, instead of having a solution correspond to a refutation proof (Green 1969). But for some kinds of problems no useful encoding in terms of propositional satisfiability can be found in particular, problems that contain both hard and soft constraints.
Reference: <author> Minton, S., Johnston, M.D., Philips, A.B., and Laird, P. </author> <title> (1990) Solving large-scale constraint satisfaction an scheduling problems using a heuristic repair method. </title> <booktitle> Proceedings AAAI-90, </booktitle> <address> Boston, MA, </address> <pages> 17-24. </pages>
Reference: <author> Papadimitriou, C.H., and Steiglitz, K. </author> <title> (1982) Combinatorial Optimization. </title> <address> Englewood Cliffs, NJ: </address> <publisher> Prentice-Hall. </publisher>
Reference: <author> Selman, B., Levesque, H.J., and Mitchell, D.G. </author> <title> (1992) A new method for solving hard sat-isfiability problems. </title> <booktitle> Proceedings AAAI-92, </booktitle> <address> San Jose, CA, </address> <pages> 440-446. </pages>
Reference-contexts: One issue that arises in studying this approach to problem-solving is developing problem encodings where a solution corresponds to a satisfying model <ref> (Kautz and Selman 1992) </ref>, instead of having a solution correspond to a refutation proof (Green 1969). But for some kinds of problems no useful encoding in terms of propositional satisfiability can be found in particular, problems that contain both hard and soft constraints. <p> we retain the use of purely propositional problem representations, and our finely-tuned randomized techniques for escaping from local minima during search. 2 A Stochastic Search Algorithm The GSAT procedure mentioned in the introduction solves satisfiability problems by searching through the space of truth assignments for one that satisfies all clauses <ref> (Selman, Levesque, and Mitchell 1992) </ref>. The search begins at a random complete truth assignment. The neighborhood of a point in the search space is defined as the set of assignments that differ from that point by the value assigned to a single variable.
Reference: <author> Selman, B., and Kautz, H. </author> <title> (1993a) Domain-independent extensions to GSAT: solving large structured satisfiability problems. </title> <booktitle> Proceedings IJCAI-93, </booktitle> <address> Chambery, France, </address> <pages> 290-295. </pages>
Reference-contexts: It can also solve randomly generated Boolean formulas that are two orders of magnitude larger than the largest handled by any current backtracking algorithm <ref> (Selman and Kautz 1993a) </ref>. The success of stochastic local search in handling formulas that contain thousands of discrete variables has made it a viable approach for directly solving logical encodings of interesting problems in AI and operations research (OR), such as circuit diagnosis and planning (Selman and Kautz 1993b).
Reference: <author> Selman, B. and Kautz, H. </author> <title> (1993b) An empirical study of greedy local search for satisfiability testing. </title> <booktitle> Proceedings AAAI-93, </booktitle> <address> Washington, DC, </address> <pages> 46-51. </pages>
Reference-contexts: The success of stochastic local search in handling formulas that contain thousands of discrete variables has made it a viable approach for directly solving logical encodings of interesting problems in AI and operations research (OR), such as circuit diagnosis and planning <ref> (Selman and Kautz 1993b) </ref>. Thus, at least on certain classes of problems, it provides a general model-finding technique that scales to realistically-sized instances, demonstrating that the use of a purely declarative, logical representation is not necessarily in conflict with the need for computational efficiency.
Reference: <author> Selman, B., Kautz, H., and Cohen, B. </author> <title> (1994) Noise strategies for local search. </title> <booktitle> Proceedings AAAI-94, </booktitle> <address> Seattle, WA, </address> <year> 1994. </year>
Reference-contexts: However, GSAT is very useful in practice. For example, it is the only approach that can solve certain very large, computationally hard, formulas derived from circuit synthesis problems <ref> (Selman, Kautz, and Cohen 1994) </ref>. It can also solve randomly generated Boolean formulas that are two orders of magnitude larger than the largest handled by any current backtracking algorithm (Selman and Kautz 1993a).
Reference: <editor> Trick, M., and Johnson, D.S. (Eds.) </editor> <booktitle> (1993) Working notes of the DIMACS Algorithm Implementation Challenge, </booktitle> <institution> Rutgers University, </institution> <address> New Brunswick, NJ. </address> <month> 15 </month>
Reference-contexts: Traditional satisfiability-testing algorithms are based on backtracking search 1 (Davis and Putnam 1960). Surprisingly few search heuristics have proven to be generally useful; increases in the size of problems that can be practically solved have come mainly from increases in machine speed and more efficient implementations <ref> (Trick and Johnson 1993) </ref>. Selman, Levesque, and Mitchell (1992) introduced an alternative approach for satisfiability testing, based on stochastic local search.
References-found: 22

