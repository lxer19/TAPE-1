URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3847/3847.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Algorithms for Capacitated Vehicle Routing  
Author: Moses Charikar Samir Khuller Balaji Raghavachari 
Keyword: Vehicle routing, Traveling salesman problem, Approximation algorithms, Graphs.  
Note: AMS Classification: 90B06, 90C27, 68Q20, 68R10, 05C38, 05C85.  
Date: November 20, 1997  
Abstract: Given n identical objects (pegs), placed at arbitrary initial locations, we consider the problem of transporting them efficiently to n target locations (slots) with a vehicle that can carry at most k pegs at a time. This problem is referred to as k-delivery TSP, and it is a generalization of the Traveling Salesman Problem. We give a 5-approximation algorithm for the problem of minimizing the total distance traveled by the vehicle. There are two kinds of transportations possible | one that could drop pegs at intermediate locations and pick them up later in the route for delivery (preemptive) and one that transports pegs to their targets directly (non-preemptive). In the former case, by exploiting the freedom to drop, one may be able to find a shorter delivery route. We construct a non-preemptive tour that is within a factor 5 of the optimal preemptive tour. In addition we show that the ratio of the distances traveled by an optimal non-preemptive tour versus a preemptive tour is bounded by 4. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Anily and J. Bramel, </author> <title> "Approximation algorithms for the capacitated traveling salesman problem with pick-ups and deliveries," </title> <type> Manuscript, </type> <year> (1997). </year>
Reference-contexts: We will refer to their algorithm as the "CMR algorithm". They obtained an approximation ratio of 9.5. They also gave better algorithms for the cases k = 1 and k = 1, that obtain ratios of 2 in both cases. Independent of our work, Anily and Bramel <ref> [1] </ref> showed that a modification of the CMR algorithm improves the approximation ratio to 7 3 k (in fact, we show that one can obtain a better bound of 6:5 by modifying the CMR approach). <p> Note that the matching does not include all nodes in the original problem and therefore it could possibly be arbitrarily expensive. Another complication is that the segments do not have the same number of points on them. The techniques used in the previous results <ref> [1, 10] </ref> do not yield a bound on the cost of such a matching. We show how to bound the cost of the matching with respect to an optimal tour, and use it to derive a better approximation bound. We now describe the algorithm in detail. 2.2. The algorithm 1.
Reference: [2] <author> S. Anily and R. Hassin, </author> <title> "The swapping problem," </title> <journal> Networks, </journal> <volume> 22 </volume> <pages> 419-433, </pages> <year> (1992). </year>
Reference-contexts: In STOC '97, Asano et al [6] gave a polynomial-time approximation scheme for the same special case in the geometric setting, when k is O (log n= log log n). Anily and Hassin <ref> [2] </ref> demonstrated an algorithm that obtains a ratio of 2.5 for the 1-delivery TSP. The first constant factor approximation algorithm for the general problem was given by Chalasani, Motwani and Rao [10]. We will refer to their algorithm as the "CMR algorithm". They obtained an approximation ratio of 9.5.
Reference: [3] <author> E. Arkin, R. Hassin and L. Klein, </author> <title> "Restricted delivery problems on a network," </title> <journal> Networks, </journal> <volume> 29 </volume> <pages> 205-216, </pages> <year> (1997). </year>
Reference-contexts: The algorithms are slightly faster for the cases when drops are permitted. Frederickson [12] showed improved running times for a cycle when no drops are allowed. The issue of tours under various types of restrictions has also been investigated by Arkin, Hassin and Klein <ref> [3] </ref>. Outline of the paper: In Section 2 we describe an approximation algorithm for the k-delivery TSP that obtains an approximation ratio of 5. We first prove a simpler bound of 6.5 in Section 2, and then in Section 3, we provide a better analysis of our algorithm.
Reference: [4] <author> S. Arora, </author> <title> "Polynomial time approximation schemes for Euclidean TSP and other Geometric problems", </title> <booktitle> Proc. of 37th Annual Symp. on Foundations of Comp. Sci. </booktitle> <year> (1996), </year> <pages> Pages 1-11. </pages>
Reference-contexts: Since the proof is complex, we first prove a simpler bound of 6.5; this proof contains some of the basic ideas. * For geometrical instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20]) can be used to obtain an (1 + *) approximation of the TSP, and this leads to an approximation factor of 4 (1 + *) for these instances. * We also describe a simple algorithm that finds a preemptive tour whose length is at most 5 <p> If Christofides' algorithm is used, then ff 1:5. For geometric instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20] can be used to obtain a (1 + *) approximation of the TSP tour. In this case, ff = 1 + *, for any constant * &gt; 0. <p> Using this improved bound, we get an approximation ratio of 5, and we can bound the ratio of C k to C 0 k by 4. Also, for geometric instances (consisting of points in the plane with Euclidean distances), using an (1 + *)- optimal tour <ref> [4, 5, 20] </ref> in the first step of the algorithm, we obtain a ratio of 4 (1 + *). 2 If we are given a fixed starting point q, we obtain a tour that starts and ends at q as follows. We apply the algorithm as usual. <p> As shown in [10], A kC k . Using Christofides' approximation for the TSP, T p and T s are at most 1:5C k . The approximation ratio obtained is therefore at most 9:5. For geometrical instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20]) can be used to obtain an (1+*) approximation of the TSP, and this leads to better approximation factors for these instances. Theorem 2.5 shows that A k 2 C 0 k .
Reference: [5] <author> S. Arora, </author> <title> "Nearly linear time approximation schemes for Euclidean TSP and other Geometric problems", </title> <booktitle> Proc. of 38th Annual Symp. on Foundations of Comp. Sci. </booktitle> <year> (1997), </year> <pages> Pages 554-563. </pages>
Reference-contexts: Since the proof is complex, we first prove a simpler bound of 6.5; this proof contains some of the basic ideas. * For geometrical instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20]) can be used to obtain an (1 + *) approximation of the TSP, and this leads to an approximation factor of 4 (1 + *) for these instances. * We also describe a simple algorithm that finds a preemptive tour whose length is at most 5 <p> If Christofides' algorithm is used, then ff 1:5. For geometric instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20] can be used to obtain a (1 + *) approximation of the TSP tour. In this case, ff = 1 + *, for any constant * &gt; 0. <p> Using this improved bound, we get an approximation ratio of 5, and we can bound the ratio of C k to C 0 k by 4. Also, for geometric instances (consisting of points in the plane with Euclidean distances), using an (1 + *)- optimal tour <ref> [4, 5, 20] </ref> in the first step of the algorithm, we obtain a ratio of 4 (1 + *). 2 If we are given a fixed starting point q, we obtain a tour that starts and ends at q as follows. We apply the algorithm as usual. <p> As shown in [10], A kC k . Using Christofides' approximation for the TSP, T p and T s are at most 1:5C k . The approximation ratio obtained is therefore at most 9:5. For geometrical instances, such as points in the plane, the algorithms of Arora <ref> [4, 5] </ref> and Mitchell [20]) can be used to obtain an (1+*) approximation of the TSP, and this leads to better approximation factors for these instances. Theorem 2.5 shows that A k 2 C 0 k .
Reference: [6] <author> T. Asano, N. Katoh, H. Tamaki and T. Tokuyama, </author> <title> "Covering points in the plane by k-tours: towards a polynomial time approximation scheme for general k," </title> <booktitle> Proc. of 29th Annual ACM Symp. on Theory of Computing (STOC) (1997), </booktitle> <pages> Pages 275-283. </pages>
Reference-contexts: Christofides [11] surveys various issues, including problem formulation and algorithms, related to the vehicle routing problem, where the vehicles originate at a central depot. In STOC '97, Asano et al <ref> [6] </ref> gave a polynomial-time approximation scheme for the same special case in the geometric setting, when k is O (log n= log log n). Anily and Hassin [2] demonstrated an algorithm that obtains a ratio of 2.5 for the 1-delivery TSP.
Reference: [7] <author> M. J. Atallah and S. R. Kosaraju, </author> <title> "Efficient solutions to some transportation problems with applications to minimizing robot arm travel," </title> <journal> SIAM J. Comput., </journal> <volume> 17(5) </volume> <pages> 569-591, </pages> <year> (1988). </year>
Reference-contexts: Knuth [19, Section 5.4.8] discusses Karp's work [18] on the problem for paths and trees. Fast algorithms were given by Atallah and Kosaraju <ref> [7] </ref> for the cases in which the graph is either a simple cycle or path. The algorithms are slightly faster for the cases when drops are permitted. Frederickson [12] showed improved running times for a cycle when no drops are allowed.
Reference: [8] <author> J. A. Bondy and U. S. R. Murty, </author> <title> "Graph Theory with Applications," </title> <publisher> American Elsevier, </publisher> <address> New York, </address> <year> (1977). </year>
Reference-contexts: This collection of paths can be decomposed into k=2 perfect matchings between p-and n-pieces (because the edges of a d-regular bipartite graph can be decomposed into d perfect matchings <ref> [8] </ref>). It follows that the weight of the minimum weight perfect matching on the p- and n-pieces is at most the average weight of the k 2 matchings we found. By triangle inequality, the weight of the symmetric difference is at most the sum of the weights of the matchings.
Reference: [9] <author> D. O. Casco, B. L. Golden and E. A. </author> <title> Wasil, "Vehicle routing with backhauls: models, algorithms and case studies," Vehicle Routing: Methods and Studies, </title> <editor> Eds: Golden and Assad, </editor> <publisher> North Holland, </publisher> <address> Amsterdam (1988). </address> <month> 18 </month>
Reference-contexts: These transportation problems occur in real life in areas such as robotics and transportation of packages. Methods for obtaining "good" solutions to the problems are of great practical significance. For example, Casco et al <ref> [9] </ref> report that combining deliveries and pickups for supermarkets led to an industry wide savings of $160 million a year.
Reference: [10] <author> P. Chalasani, R. Motwani and A. Rao, </author> <title> "Algorithms for robot grasp and delivery," </title> <booktitle> 2nd International Workshop on Algorithmic Foundations of Robotics, </booktitle> <year> (1996). </year>
Reference-contexts: Anily and Hassin [2] demonstrated an algorithm that obtains a ratio of 2.5 for the 1-delivery TSP. The first constant factor approximation algorithm for the general problem was given by Chalasani, Motwani and Rao <ref> [10] </ref>. We will refer to their algorithm as the "CMR algorithm". They obtained an approximation ratio of 9.5. They also gave better algorithms for the cases k = 1 and k = 1, that obtain ratios of 2 in both cases. <p> Note that the matching does not include all nodes in the original problem and therefore it could possibly be arbitrarily expensive. Another complication is that the segments do not have the same number of points on them. The techniques used in the previous results <ref> [1, 10] </ref> do not yield a bound on the cost of such a matching. We show how to bound the cost of the matching with respect to an optimal tour, and use it to derive a better approximation bound. We now describe the algorithm in detail. 2.2. The algorithm 1. <p> We need to bound the weight of the matching M . We cannot bound the weight of the matching by the method used in <ref> [10] </ref> since the matching is not being found on a graph that involves all the pegs and slots. <p> Our main goal is to prove the following theorem. Theorem 2.5: A k 2 C 0 This theorem follows once we establish the following lemmas. Lemma 2.6 (Chalasani, Motwani and Rao <ref> [10] </ref>): A 1 2 C 1 . We now prove that a non-preemptive unit-capacity vehicle can simulate a preemptive capacity-k vehicle, with an increase of the length of the tour by a factor of k. <p> This algorithm is a modification of the strategy given by Chalasani, Motwani and Rao <ref> [10] </ref>. 4.1. The CMR Algorithm We first review the algorithm given by Chalasani, Motwani and Rao [10] for this problem. We then show that a modification of the algorithm improves the approximation ratio to 6:5 without preemption, and 5 with preemption. <p> This algorithm is a modification of the strategy given by Chalasani, Motwani and Rao <ref> [10] </ref>. 4.1. The CMR Algorithm We first review the algorithm given by Chalasani, Motwani and Rao [10] for this problem. We then show that a modification of the algorithm improves the approximation ratio to 6:5 without preemption, and 5 with preemption. We will assume for simplicity that n is a multiple of k, and that k is even. <p> The total length of such a tour is shown to be at most 3T p + 2T s + 2M 4:5C k + 3C k + 2 k A. As shown in <ref> [10] </ref>, A kC k . Using Christofides' approximation for the TSP, T p and T s are at most 1:5C k . The approximation ratio obtained is therefore at most 9:5.
Reference: [11] <author> N. Christofides, </author> <title> "Vehicle routing," in The traveling salesman problem, edited by E. </title> <editor> L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan and D. B. Shmoys, </editor> <publisher> John Wiley & Sons, </publisher> <address> New York, </address> <pages> Pages 431-448, </pages> <year> (1985). </year>
Reference-contexts: They provided an approximation algorithm that obtains a performance ratio of 3. For geometric graphs | graphs induced by points in the plane with Euclidean distances as edge-weights, they provided a polynomial time approximation scheme for constant k. Christofides <ref> [11] </ref> surveys various issues, including problem formulation and algorithms, related to the vehicle routing problem, where the vehicles originate at a central depot.
Reference: [12] <author> G. N. Frederickson, </author> <title> "A note on the complexity of a simple transportation problem," </title> <journal> SIAM J. Comput., </journal> <volume> 22(1) </volume> <pages> 57-61, </pages> <year> (1993). </year>
Reference-contexts: Fast algorithms were given by Atallah and Kosaraju [7] for the cases in which the graph is either a simple cycle or path. The algorithms are slightly faster for the cases when drops are permitted. Frederickson <ref> [12] </ref> showed improved running times for a cycle when no drops are allowed. The issue of tours under various types of restrictions has also been investigated by Arkin, Hassin and Klein [3].
Reference: [13] <author> G. N. Frederickson and D. J. Guan, </author> <title> "Non-preemptive ensemble motion planning on a tree," </title> <journal> Journal of Algorithms,15(1):29-60, </journal> <year> (1993). </year>
Reference-contexts: The goal is to find a shortest tour that performs the transportation. For the unit capacity case, Frederickson, Hecht and 3 Kim [15] gave an algorithm with an approximation factor of 1.8. For the case when the underlying metric is a tree, Frederickson and Guan <ref> [13, 14] </ref> have given fast algorithms to compute optimal solutions for the preemptive case, and fast approximation algorithms for the non-preemptive case (the problems are NP-hard even for trees). Knuth [19, Section 5.4.8] discusses Karp's work [18] on the problem for paths and trees.
Reference: [14] <author> G. N. Frederickson and D. J. Guan, </author> <title> "Preemptive ensemble motion planning on a tree," </title> <journal> SIAM J. Comput., </journal> <volume> 22(1) </volume> <pages> 1130-1152, </pages> <year> (1992). </year>
Reference-contexts: The goal is to find a shortest tour that performs the transportation. For the unit capacity case, Frederickson, Hecht and 3 Kim [15] gave an algorithm with an approximation factor of 1.8. For the case when the underlying metric is a tree, Frederickson and Guan <ref> [13, 14] </ref> have given fast algorithms to compute optimal solutions for the preemptive case, and fast approximation algorithms for the non-preemptive case (the problems are NP-hard even for trees). Knuth [19, Section 5.4.8] discusses Karp's work [18] on the problem for paths and trees.
Reference: [15] <author> G. N. Frederickson, M. S. Hecht and C. E. Kim, </author> <title> "Approximation algorithms for some routing problems," </title> <journal> SIAM J. Comput., </journal> <volume> 7(2) </volume> <pages> 178-193, </pages> <year> (1978). </year>
Reference-contexts: But, in the stacker-crane problem, the objects are not identical and each object has a specific target destination. The goal is to find a shortest tour that performs the transportation. For the unit capacity case, Frederickson, Hecht and 3 Kim <ref> [15] </ref> gave an algorithm with an approximation factor of 1.8.
Reference: [16] <author> M. R. Garey and D. S. Johnson, </author> <title> "Computers and intractability: A guide to the theory of NP-completeness," </title> <publisher> Freeman, </publisher> <address> San Francisco, </address> <year> (1978). </year>
Reference: [17] <author> M. Haimovich and A. H. G. Rinnooy Kan, </author> <title> "Bounds and heuristics for capacitated routing problems," </title> <journal> Math. Oper. Res. </journal> <volume> 10 </volume> <pages> 527-542, </pages> <year> (1985). </year>
Reference-contexts: The distances between the given points satisfies the triangle inequality since the vehicle can always take a shortest path between any two points. Replacing the distances between each pair of points by the shortest-path distance between them ensures that the triangle inequality is satisfied. Haimovich and Rinnooy Kan <ref> [17] </ref> studied a special case of this problem when all the pegs are located at one central depot, and are delivered with a vehicle of capacity k. They provided an approximation algorithm that obtains a performance ratio of 3.
Reference: [18] <author> R. M. Karp, </author> <title> "Two combinatorial problems associated with external sorting," Combinatorial Algorithms, </title> <booktitle> Courant Comp. Sci. Symp., </booktitle> <pages> Pages 17-29, </pages> <publisher> Algorithmics Press, </publisher> <address> New York, </address> <year> (1972). </year>
Reference-contexts: For the case when the underlying metric is a tree, Frederickson and Guan [13, 14] have given fast algorithms to compute optimal solutions for the preemptive case, and fast approximation algorithms for the non-preemptive case (the problems are NP-hard even for trees). Knuth [19, Section 5.4.8] discusses Karp's work <ref> [18] </ref> on the problem for paths and trees. Fast algorithms were given by Atallah and Kosaraju [7] for the cases in which the graph is either a simple cycle or path. The algorithms are slightly faster for the cases when drops are permitted.
Reference: [19] <author> D. E. Knuth, </author> <title> "The art of computer programming, vol 3: Sorting and Searching," </title> <publisher> Addison Wesley, </publisher> <year> (1973). </year>
Reference-contexts: For the case when the underlying metric is a tree, Frederickson and Guan [13, 14] have given fast algorithms to compute optimal solutions for the preemptive case, and fast approximation algorithms for the non-preemptive case (the problems are NP-hard even for trees). Knuth <ref> [19, Section 5.4.8] </ref> discusses Karp's work [18] on the problem for paths and trees. Fast algorithms were given by Atallah and Kosaraju [7] for the cases in which the graph is either a simple cycle or path. The algorithms are slightly faster for the cases when drops are permitted.
Reference: [20] <author> J. Mitchell, </author> <title> "Guillotine subdivisions approximate polygonal subdivisions: Part II A simple polynomial-time approximation scheme for geometric k-MST, TSP, and related problems," </title> <type> Manuscript, </type> <year> (1996). </year> <month> 19 </month>
Reference-contexts: Since the proof is complex, we first prove a simpler bound of 6.5; this proof contains some of the basic ideas. * For geometrical instances, such as points in the plane, the algorithms of Arora [4, 5] and Mitchell <ref> [20] </ref>) can be used to obtain an (1 + *) approximation of the TSP, and this leads to an approximation factor of 4 (1 + *) for these instances. * We also describe a simple algorithm that finds a preemptive tour whose length is at most 5 times the length of <p> If Christofides' algorithm is used, then ff 1:5. For geometric instances, such as points in the plane, the algorithms of Arora [4, 5] and Mitchell <ref> [20] </ref> can be used to obtain a (1 + *) approximation of the TSP tour. In this case, ff = 1 + *, for any constant * &gt; 0. <p> Using this improved bound, we get an approximation ratio of 5, and we can bound the ratio of C k to C 0 k by 4. Also, for geometric instances (consisting of points in the plane with Euclidean distances), using an (1 + *)- optimal tour <ref> [4, 5, 20] </ref> in the first step of the algorithm, we obtain a ratio of 4 (1 + *). 2 If we are given a fixed starting point q, we obtain a tour that starts and ends at q as follows. We apply the algorithm as usual. <p> Using Christofides' approximation for the TSP, T p and T s are at most 1:5C k . The approximation ratio obtained is therefore at most 9:5. For geometrical instances, such as points in the plane, the algorithms of Arora [4, 5] and Mitchell <ref> [20] </ref>) can be used to obtain an (1+*) approximation of the TSP, and this leads to better approximation factors for these instances. Theorem 2.5 shows that A k 2 C 0 k . Since C 0 k C k , we also have A k 2 C k .
References-found: 20

