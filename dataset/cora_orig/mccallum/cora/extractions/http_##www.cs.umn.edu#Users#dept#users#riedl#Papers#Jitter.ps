URL: http://www.cs.umn.edu/Users/dept/users/riedl/Papers/Jitter.ps
Refering-URL: http://www.cs.umn.edu/Users/dept/users/riedl/Papers/
Root-URL: http://www.cs.umn.edu
Title: Hiding Jitter in an Audio  Hiding Jitter in an Audio Stream  
Author: Dan Frankowski, John Riedl 
Date: June 17, 1993 1  
Pubnum: Stream  
Abstract: There is currently great interest in transmitting continuous media by packet-switched networks. In particular, we are interested in audio data. Variation in packet arrival times (called delay jitter) can interrupt the steady delivery of the data stream. We can hide delay jitter by buffering the data before playing it. How long should we buffer? If the buffer time is short, we do not effectively hide delay jitter. If it is large, we introduce undesirable latency into the stream. This project explores methods of choosing this buffer time. We define a model of a stream and choose a measure of sound quality. We present probability theory based on our model that allows us to choose the buffer size for exponentially distributed packet delivery times. If the delivery times are not exponential, we define a new heuristic solution to choosing the buffer size called History (based on an ordered list of past interarrival times) and compare it to two statistical heuristics: StDev (based on standard deviation), and Abs-Dev (based on absolute deviation). History appears to have some benefits over StDev and AbsDev: a user-level knob for hiding delay jitter, and less sensitivity to single late packet arrivals. 
Abstract-found: 1
Intro-found: 1
Reference: [AES85] <institution> Method for Measurement of Weighted Peak Flutter of Sound Recording and Reproducing Equipment (AES Standard), Journal of the Audio Engineering Society, </institution> <note> Vol. </note> <month> 33, </month> <pages> pages 467-75, </pages> <month> June </month> <year> 1985. </year> <title> Contains a brief description of jitter, scrape utter, utter, wow, drift, and a rigorous testing procedure for a psychoacoustic measure of utter. </title>
Reference-contexts: However, this work focuses on speech distortions that preserve the temporal ow of the sound. The psychologist Moore offers general comments about the effect of introducing silence into speech [Moor82]. Also, the audio engineering community has studied distantly related problems of utter, jitter, and wow <ref> [AES85] </ref>, but these are due to imprecise movement of the tape mechanism. No temporal gaps are introduced; rather, different types of noise or signal modulation are heard. Cohen concisely defines the problem of smoothness in packet-switched voice networks as well as several abstract buffering strategies [Cohe80].
Reference: [Ande92] <author> A file system for continuous media, D. Anderson, Y. Osawa, R. </author> <title> Govindan, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 10, No. 4, </volume> <pages> pages 311-337, </pages> <month> November </month> <year> 1992. </year> <title> Describes a file server for real-time access of multimedia data. </title>
Reference-contexts: playing delivered data (section 2.3). (To be fair, Rowe et.al. are interested in synchronizing streams, not improving their individual quality.) Anderson et.al. describe the design of a file server where multiple sessions can coexist including files that require a guaranteed minimum access rate per second and those that do not <ref> [Ande92] </ref>. They do not discuss extending this to a file server available on the network. June 18, 1993 14 4.0 Theory This section further develops the model of the problem, and presents theoretical results.
Reference: [Boud92] <author> The ATM: </author> <title> a tutorial, Jean-Yves le Boudec, </title> <journal> Computer Networks and ISDN Sys tems, </journal> <volume> Vol. 24, </volume> <pages> pages 279-309, </pages> <year> 1992. </year> <title> Explains the Asynchronous Transfer Mode protocol for local-area networks. Mentions simulations in another paper to find a good buffer size to hide lost cells (page 300). </title>
Reference-contexts: Schulzrinne et.al. describe the VT audio conferencer [Scho89] as choosing buffer time by counting unusually late packets, and declare it more unstable than absolute deviation. The Asynchronous Transfer Mode (ATM), a new standard for high-bandwidth virtual circuit-switching fiber-optic network, employs a buffering scheme briey referenced in <ref> [Boud92] </ref>. Shephard et.al discuss implementing parameters of quality of service that are important to support multimedia data: bit error rate, packet error rate, upper bounds on delay, delay jitter, and throughput [Shep92]. Several authors describe protocols that give hard upper bounds on delay jitter by increasing end-to-end latency [Ferr92] [Verm91].
Reference: [Casn92] <author> First IETF Internet Audiocast, S. Casner, S. </author> <title> Deering, </title> <journal> ACM SIGCOMM, Com puter Communication Review, </journal> <pages> pages 92-97, </pages> <year> 1992. </year> <title> Describes a meeting of the Internet Engineering Task Force (IETF) whose audio was broadcast to several sites via Steven Deering's IP multicast. Mentions in the appendix June 18, 1993 38 changing the kernel variable audio_79C30_bsize from 1024 to 180 with the debugger adb. </title>
Reference-contexts: Cohen concisely defines the problem of smoothness in packet-switched voice networks as well as several abstract buffering strategies [Cohe80]. Casner et.al. describe recent experiences in audio conferencing on wide-area networks by the Internet Engineering Task Force, along with lists of solved and unsolved problems <ref> [Casn92] </ref>. In their experiments they used the vat [VanJ92] audio conferencer. Researchers have used various methods to choose buffer time. Rowe et.al. choose one second [Rowe92]. <p> The device records 8,000 8-bit m-law encoded Pulse Code Modulated (PCM) samples per second. By default, the device makes data available to the kernel in 1024-byte chunks. However, we may change this value by using the adb debugger to modify the kernel variable audio_79C30_bsize (appendix of <ref> [Casn92] </ref>). 6.1.2 Implementation of a two-person audio conferencer We built a two-person distributed audio conferencer called speak. A person starts speak specifying the Internet address of the remote machine with which to communicate (e.g. myria.cs.umn.edu). Another speak must be started on the remote machine.
Reference: [Cohe80] <editor> On packet speech communication, D. Cohen, </editor> <booktitle> Proceedings of the Fifth Interna tional Conference on Computer Communications, IEEE, </booktitle> <pages> pages 271-74, </pages> <month> October </month> <year> 1980. </year> <title> A concise summary of the problems of transmitting packetized sound. </title>
Reference-contexts: No temporal gaps are introduced; rather, different types of noise or signal modulation are heard. Cohen concisely defines the problem of smoothness in packet-switched voice networks as well as several abstract buffering strategies <ref> [Cohe80] </ref>. Casner et.al. describe recent experiences in audio conferencing on wide-area networks by the Internet Engineering Task Force, along with lists of solved and unsolved problems [Casn92]. In their experiments they used the vat [VanJ92] audio conferencer. Researchers have used various methods to choose buffer time.
Reference: [Come91] <editor> Internetworking with TCP/IP Volume I: </editor> <booktitle> Principles, Protocols, and Architec tures, Second Edition, </booktitle> <publisher> D.E. Comer, Prentice-Hall, </publisher> <year> 1991. </year> <title> Discusses protocol layering, and where important boundaries between these layers (chapter 10). </title>
Reference-contexts: There are many subtleties avoided here such as how many of the gives and passes are expensive memory copies, which steps include error-checking, and so on. (See chapter 10 of <ref> [Come91] </ref> for details.) However, this gives an idea of how many details we have abstracted away.
Reference: [Corm90] <editor> Introduction to Algorithms, T.H. Cormen, C.E. Leiserson, R.L. Rivest, </editor> <publisher> McGraw-Hill Book Company, </publisher> <year> 1990. </year> <title> Discusses implementing an order-statistic tree (page 281). </title>
Reference-contexts: As the knob moves towards one, the p value moves down, meaning that the buffer time is larger than most interarrival times, but not all. History takes operations per packet arrival by keeping an order-statistic tree (page 281 <ref> [Corm90] </ref>). Inserting into this tree and finding an element of a given rank is . For a small window size, a simpler implementation is to keep a sorted list of interarrival times and choose the element at location .
Reference: [DeGr86] <author> Probability and Statistics, </author> <title> 2nd Edition, </title> <editor> M.H. DeGroot, </editor> <publisher> Addison-Wesley, </publisher> <year> 1986. </year> <title> Shows that the sum (or difference) of normal variables is normal (page 270). </title>
Reference-contexts: If the delivery time distribution is normal, the interarrival time distribution is normal. This is because normally distributed random variables have the beautiful property that a linear combination of them produces another normally distribution random variable with the means and variances added (page 270 <ref> [DeGr86] </ref>). Hence is normally distrib uted with mean zero and standard deviation .
Reference: [Dimo89] <editor> Objective speech distortion measures and their relevance to speech quality assessments, S. Dimolitsas, </editor> <booktitle> IEE Proceedings, </booktitle> <volume> Vol. 136 Part I, No. 5, </volume> <month> October </month> <year> 1989. </year> <title> A good summary paper of concepts behind objective distortion measures. </title>
Reference-contexts: June 18, 1993 13 Many people have studied the subjective sound quality of distorted speech, and even produced and studied objective measures <ref> [Dimo89] </ref> [Wang92] [Quac88]. However, this work focuses on speech distortions that preserve the temporal ow of the sound. The psychologist Moore offers general comments about the effect of introducing silence into speech [Moor82].
Reference: [Fell68] <institution> Introduction to Probability Theory and Its Applications, </institution> <note> Volume I, </note> <author> W. Feller, </author> <year> 1968, </year> <title> John Wiley & Sons. Basic identities of expected value and variance. </title>
Reference-contexts: When modeling network loads, this type should be considered if distributed isochronous continuous multimedia applications become more common. Second, the average of the interarrival times is the packet generation interval A. Using that expectation of a sum is the sum of the expectations, and (page 222 <ref> [Fell68] </ref>), If the average is much greater than A, it may indicate that data is being lost somewhere along the connection, as it did in several of our (unreported!) experiments. 4.2.2 Statistics of the interarrival distribution Without knowing what the interarrival distribution is, we may still find its standard deviation, given <p> Again using probability theory, we know that the variance of the sum independent variables is the sum of the variances and (page 230 <ref> [Fell68] </ref>), To find the standard deviation, take the square root: . Many different shapes of delivery distribution may have the same standard deviation. Probably many different shapes of interarrival time distribution will have the same standard deviation. We will see below that standard deviation does not give much information.
Reference: [Ferr92] <editor> Delay jitter control scheme for packet-switching internetworks, D. </editor> <title> Ferrari, </title> <journal> Com puter Communications, </journal> <volume> Vol. 15, No. 6, </volume> <pages> pages 367-73, </pages> <month> July/August </month> <year> 1992. </year> <title> Describes an algorithm with a small amount of buffering to provide upper bounds on jitter for an internetwork of nodes where each point-to-point link bounds jitter. </title>
Reference-contexts: Shephard et.al discuss implementing parameters of quality of service that are important to support multimedia data: bit error rate, packet error rate, upper bounds on delay, delay jitter, and throughput [Shep92]. Several authors describe protocols that give hard upper bounds on delay jitter by increasing end-to-end latency <ref> [Ferr92] </ref> [Verm91]. The goal of these protocols is to minimize buffering at each node in the network, but they assume that each link in the network can individually guarantee upper bounds on delay. Jeffay notes that such guarantees will require real-time operating system support [Jeff92a].
Reference: [Jeff92a] <editor> Kernel support for live digital audio and video, K. Jeffay, D.L. Stone, </editor> <title> F.D. Smith, </title> <journal> Computer Communications, </journal> <volume> Vol. 15, No. 6, </volume> <pages> pages 388-95, </pages> <month> July/August </month> <year> 1992. </year> <title> Discusses kernel and network protocol support for real-time audio and video. Dis cusses operating system support for real-time events. Mentions that jitter control for audio is more important than for video (page 392). </title>
Reference-contexts: The goal of these protocols is to minimize buffering at each node in the network, but they assume that each link in the network can individually guarantee upper bounds on delay. Jeffay notes that such guarantees will require real-time operating system support <ref> [Jeff92a] </ref>. This is unlikely in the near future. UNIX, for example, cannot offer such support. Smoothing a multimedia stream can be used in several applications that have been studied. Riedl et.al. analyze the load placed on the network by a multi-person audio conference with and without silence deletion [Ried93].
Reference: [Jeff92b] <editor> Transport and display mechanisms for multimedia conferencing across packet switched networks, K. Jeffay, D.L. Stone, F.D. Smith, </editor> <title> not yet published, </title> <month> October </month> <year> 1992. </year> <title> Mentions sending audio data multiple times for greater reliability (page 2). </title>
Reference-contexts: Variable-bit encoding schemes can be more efficient, but are more CPU-intensive, which may be a bottleneck in trans mitting streams. Data is seldom dropped on a local-area network [Schoc80]. On wide-area networks, packets may be sent twice to reduce the chance that they will be dropped <ref> [Jeff92b] </ref>. Packets which arrive out of order may be buffered until the right spot. Most packets will be the same size if we transmit at steady intervals.
Reference: [Kinc91] <institution> Numerical Analysis: Mathematics of scientific computing, </institution> <address> D. </address> <publisher> Kincaid, W. Cheney, Brooks/Cole Publishing Company, </publisher> <year> 1991. </year> <title> Explains the bisection method (page 57). </title>
Reference-contexts: If two values of are the same, Newtons method will not work since the method predicts the next point from the slope between the previous two endpoints. However, is nonincreasing, so we can find a close fit using a modified bisection method (page 57 <ref> [Kinc91] </ref>).
Reference: [Klei75] <institution> Queueing Systems Volume I: </institution> <note> Theory, </note> <editor> L. Kleinrock, </editor> <publisher> John Wiley & Sons, </publisher> <year> 1975. </year> <title> Discusses Laplace transforms applied to probability density functions. </title> <address> June 18, </address> <year> 1993 </year> <month> 39 </month>
Reference-contexts: It should. When determining the density function of the sum of two random variables , we take a convolution of and (page 345 <ref> [Klei75] </ref>). In this case, we are finding the density function of , where X and Y have the same distribution (that of d n ). To compute a convolution, we may use Laplace transforms to simplify our calculations. <p> The formula for this distribution function is The expected value of this distribution is , its variance is , and its Laplace transform is Using the Laplace transform, we may find the interarrival time distribution: Using the fact that is the Laplace transform of (page 346 <ref> [Klei75] </ref>), recognizing the other factor from the previous analysis of exponential interarrival times, and using the linearity of the Laplace transform, we get p 1fi p 0.95= f d x ( ) 1 le 0 x c 2 lx- 1 le + x c&gt; 1 c + l 2 2 2
Reference: [Krau67] <institution> Effects of Transmission Delay and Access Delay on the Efficiency of Verbal Communication, R. </institution> <note> Krauss, </note> <author> P. </author> <title> Bricker., </title> <journal> Journal of the Acoustical Society of America, </journal> <pages> pages 286-292, </pages> <year> 1967. </year> <title> Discusses a subjective test of the effect of talker-to-talker latency on performing some complicated task. The task is complicated enough that the subjective measure is not quantitative. The voice was transmitted using analog equipment. </title>
Reference-contexts: We could not find studies on the effect of temporal gaps, but they almost certainly depend on the context that the gap interrupts [Moor82]. A study on the effects of latency on a sophisticated collaborative effort showed that latency of more than a quarter second (250 ms) was disturbing <ref> [Krau67] </ref>. We chose our measure to be a combination of two components: silent events per unit time and buffer time. For the first component, we rejected percent silence played: it seems more sensitive to a single extremely late packet, which we cannot control.
Reference: [Lamp78] <author> Time, </author> <title> clocks, and the ordering of events in a distributed system, L. Lamport, </title> <journal> Communications of the ACM, </journal> <volume> Vol. 27, No. 7, </volume> <pages> pages 558-564, </pages> <month> July </month> <year> 1978. </year> <title> Describes why it is impossible to measure simultaneity on a distributed network. </title>
Reference-contexts: Some will not when the senders CPU is busy when we need it, hopefully a small fraction. 2.3 Measuring stream quality We must use quantities observable at the receivers end to measure stream quality. Audio (or end-to-end) latency cannot be observed <ref> [Lamp78] </ref> from the receivers end. June 18, 1993 10 However, the latency we add to the stream through buffering (buffer time) can be observed. Also, delay jitter is observable. Audio jitter may be calculated if we know the size of both the buffer and the packet received.
Reference: [Milt63] <institution> Tables of the equally correlated multivariate normal probability integral, </institution> <type> R.C. Milton, Technical Report No. 27, </type> <institution> Department of Statistics, University of Minne sota, </institution> <month> July </month> <year> 1963. </year> <title> Evaluates an integral of the maximum of a series of normal variables. </title>
Reference-contexts: Hence is normally distrib uted with mean zero and standard deviation . The integral equation for a conversation with no silent events has been studied in another context (table IB of <ref> [Milt63] </ref>, for , ) but only up to 25 packets. 4.4 Measured distributions Below, Figure 10 shows a graph of a histogram of interarrival times using a packet generation interval of 160 ms.
Reference: [Moor82] <editor> An Introduction to the Psychology of Hearing, B. C. J. Moore, </editor> <publisher> Academic Press, Harcourt Brace Jovanovich, </publisher> <year> 1982. </year> <title> Discusses filling temporal gaps with noise to improve quality (page 202) and context dependent effects of temporal gaps (page 226). </title>
Reference-contexts: To pick a measure, we first looked for the psychological effects of temporal gaps or latency on a two-way audio stream. We could not find studies on the effect of temporal gaps, but they almost certainly depend on the context that the gap interrupts <ref> [Moor82] </ref>. A study on the effects of latency on a sophisticated collaborative effort showed that latency of more than a quarter second (250 ms) was disturbing [Krau67]. We chose our measure to be a combination of two components: silent events per unit time and buffer time. <p> However, this work focuses on speech distortions that preserve the temporal ow of the sound. The psychologist Moore offers general comments about the effect of introducing silence into speech <ref> [Moor82] </ref>. Also, the audio engineering community has studied distantly related problems of utter, jitter, and wow [AES85], but these are due to imprecise movement of the tape mechanism. No temporal gaps are introduced; rather, different types of noise or signal modulation are heard.
Reference: [Norm88] <institution> The Psychology of Everyday Things, </institution> <address> D. Norman, HarperCollins, </address> <year> 1988. </year> <note> Describes the horrors of the modern-day telephone (page 19). </note>
Reference-contexts: To show computer spreadsheets or June 18, 1993 6 graphics in a video conference, one must display them on a computer in the conferencing room. To set up an audio conference with a telephone, one must strike a dazzling string of nonintuitive keys (page 19 <ref> [Norm88] </ref>). So how do we send continuous media between computers? Today there are two main choices: circuit-switching and packet-switching. A circuit switching network sets up a connection with reserved data bandwidth from one computer to the other for the entire session.
Reference: [Quac88] <institution> Objective Measures of Speech Quality, S.R. Quackenbush, T.P. Barnwell III, </institution> <address> M.A. </address> <publisher> Clements, Prentice-Hall, </publisher> <year> 1988. </year> <title> Ten years of work on measuring subjective speech quality of distorted sound. Does not include sound with temporal gaps. </title>
Reference-contexts: Sound quality is subjective. However, we need an objective measure to compare quality in a mechanical fashion. Objective measures of subjective sound quality to date have explicitly avoided temporal gaps by time-aligning the sound signals (see <ref> [Quac88] </ref>). We must therefore investigate our own measures. Many possible measures of sound quality may be based on the statistical distribution of the number and lengths of the temporal gaps: Number of silent events over the conversation. This is simple, but depends on the length of the conversation. <p> June 18, 1993 13 Many people have studied the subjective sound quality of distorted speech, and even produced and studied objective measures [Dimo89] [Wang92] <ref> [Quac88] </ref>. However, this work focuses on speech distortions that preserve the temporal ow of the sound. The psychologist Moore offers general comments about the effect of introducing silence into speech [Moor82].
Reference: [Ried93] <author> SuiteSound: </author> <title> Design, Implementation, and Experiments, </title> <editor> J. Riedl, V. Mashayekhi, J. Schnepf, M. Claypool, D. </editor> <title> Frankowski, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <month> August </month> <year> 1993, </year> <title> to appear. Performs audio conferencing experiments with and without silence deletion. </title>
Reference-contexts: This is unlikely in the near future. UNIX, for example, cannot offer such support. Smoothing a multimedia stream can be used in several applications that have been studied. Riedl et.al. analyze the load placed on the network by a multi-person audio conference with and without silence deletion <ref> [Ried93] </ref>. They do not analyze the sound quality of the conference. Terry et.al. define a data abstraction to manipulate audio data on a network audio server [Terr88]. They assume that the problem of high-quality real-time delivery is solved (page 12).
Reference: [Rowe92] <author> A continuous media player, L. Rowe, B. Smith, </author> <booktitle> Proceedings of the 3rd Interna tional Workshop on Network and OS Support for Digital Audio and Video, </booktitle> <address> San Diego CA, </address> <month> November </month> <year> 1992. </year> <title> Discusses synchronizing multimedia streams. Chooses a buffer time of one second. </title>
Reference-contexts: In their experiments they used the vat [VanJ92] audio conferencer. Researchers have used various methods to choose buffer time. Rowe et.al. choose one second <ref> [Rowe92] </ref>. Terek et.al. choose the most efficient time, the one that throws away the smallest proportion of sound because of buffer overows on the sender or receivers side [Tere91]. Nevot chooses a buffer time (called playout delay) proportional to the absolute deviation of the interarrival times [Schu92]. <p> Terry et.al. define a data abstraction to manipulate audio data on a network audio server [Terr88]. They assume that the problem of high-quality real-time delivery is solved (page 12). Rowe et.al. describe problems in synchronizing different streams of multimedia from a network server <ref> [Rowe92] </ref>.
Reference: [Scho89] <editor> A packet-switched multimedia conferencing system, </editor> <title> E.M. Schooler, S.L. </title> <journal> Casner, ACM Special Interest Group on Office Information Systems (SIGOIS) Bulletin, </journal> <volume> Vol. 10, </volume> <pages> pages 12-22, </pages> <month> January </month> <year> 1989. </year> <note> Describes the audio conferencer VT. </note>
Reference-contexts: Nevot chooses a buffer time (called playout delay) proportional to the absolute deviation of the interarrival times [Schu92]. Schulzrinne et.al. describe the VT audio conferencer <ref> [Scho89] </ref> as choosing buffer time by counting unusually late packets, and declare it more unstable than absolute deviation. The Asynchronous Transfer Mode (ATM), a new standard for high-bandwidth virtual circuit-switching fiber-optic network, employs a buffering scheme briey referenced in [Boud92].
Reference: [Schoc80] <institution> Performance of an Ethernet local network, </institution> <month> J.F. </month> <title> Shoch, </title> <journal> J.A. Hupp, Communica tions of the ACM, </journal> <volume> Vol. 23, No. 12, </volume> <month> December </month> <year> 1980. </year> <title> Discovers extremely few bit errors on a local-area network. </title> <address> June 18, </address> <year> 1993 </year> <month> 40 </month>
Reference-contexts: Sun and NeXT machines) and is a constant-rate compression scheme. Variable-bit encoding schemes can be more efficient, but are more CPU-intensive, which may be a bottleneck in trans mitting streams. Data is seldom dropped on a local-area network <ref> [Schoc80] </ref>. On wide-area networks, packets may be sent twice to reduce the chance that they will be dropped [Jeff92b]. Packets which arrive out of order may be buffered until the right spot. Most packets will be the same size if we transmit at steady intervals.
Reference: [Schu92] <institution> Voice communication across the Internet: A network voice terminal, H. Schulzrinne, University of Massachusetts, </institution> <month> August </month> <year> 1992. </year> <note> Paper and software (binaries and source) are available via anonymous ftp from gai-a.cs.umass.edu, </note> <editor> directory /pub/nevot. </editor> <title> Describes an audio conferencing system that works on several different types of machines, does encryption, six different types of audio compression, and can use several network protocols simultaneously: UDP (with or without Deering's IP multicast), TCP, </title> <publisher> and ST-II. </publisher>
Reference-contexts: Terek et.al. choose the most efficient time, the one that throws away the smallest proportion of sound because of buffer overows on the sender or receivers side [Tere91]. Nevot chooses a buffer time (called playout delay) proportional to the absolute deviation of the interarrival times <ref> [Schu92] </ref>. Schulzrinne et.al. describe the VT audio conferencer [Scho89] as choosing buffer time by counting unusually late packets, and declare it more unstable than absolute deviation. The Asynchronous Transfer Mode (ATM), a new standard for high-bandwidth virtual circuit-switching fiber-optic network, employs a buffering scheme briey referenced in [Boud92]. <p> Also, in practice standard deviation has proven to be very sensitive to outliers. That is, one late packet causes a significant increase in buffer time. For this reason, Nevot <ref> [Schu92] </ref> chose to use absolute deviation instead, defined as This is more expensive to compute, since the mean within the absolute value changes for every sample with each packet arrival. It is less sensitive to outliers because it does not square the distance from the mean. <p> For example, the best-fit values for AbsDev in our LAN environment (e.g. 0.16 for AbsDev at night, 1.25 during the day) are very different from the value 4 shown in <ref> [Schu92] </ref>, and they behave differently. 10.0 Future Work There is much future work to be done in the area of quality of a media stream. This section briey outlines possible directions. 10.1 Effects on sound quality Study the effect of silence deletion on delay jitter, audio jitter, and sound quality.
Reference: [Shep92] <institution> Protocol support for distributed multimedia applications, </institution> <address> D. </address> <note> Shephard, </note> <author> D. Hutchinson, F. Garcia, G. </author> <title> Coulson, </title> <journal> Computer Communications, </journal> <volume> Vol. 15, No. 6, </volume> <month> July/August </month> <year> 1992. </year> <title> Discusses different parameters of quality of service. </title>
Reference-contexts: Shephard et.al discuss implementing parameters of quality of service that are important to support multimedia data: bit error rate, packet error rate, upper bounds on delay, delay jitter, and throughput <ref> [Shep92] </ref>. Several authors describe protocols that give hard upper bounds on delay jitter by increasing end-to-end latency [Ferr92] [Verm91]. The goal of these protocols is to minimize buffering at each node in the network, but they assume that each link in the network can individually guarantee upper bounds on delay.
Reference: [Tane89] <institution> Computer Networks, </institution> <note> Second Edition, A.S. </note> <editor> Tanenbaum, </editor> <publisher> Prentice Hall, </publisher> <year> 1989. </year> <note> Compares packet-switched and circuit-switched networks (page 89). </note>
Reference-contexts: While a circuit-switching network seems a natural choice for isochronous, continuous, real-time media, we study in this paper delivering such data on a packet-switching network. Why? First, todays computer networks (especially over long distances) are usually packet-switched (page 89 <ref> [Tane89] </ref>), and will be for at least the next 3-4 years. Second, the network to which we had access was packet-switched.
Reference: [Tere91] <editor> Experiences with Audio Conferencing Using the X Window System, UNIX, and TCP/IP, R. Terek, J. Pasquale, USENIX, </editor> <month> Summer </month> <year> 1991, </year> <month> pages 405-417. </month> <title> Discusses finding the most efficient block size of audio samples to send over the net work. Discusses getting sound from the device in blocks smaller than 1024 bytes. </title>
Reference-contexts: Our method of improving sound quality will also affect the quality by throwing away some sound. This suggests more potential measures of quality: number of discarding events, total sound discarded, or percent sound discarded. This last measure was used by Terek et.al. in <ref> [Tere91] </ref> and called efficiency. 3.0 Previous work Work related to delivering isochronous, continuous real-time multimedia data has already been studied. <p> Researchers have used various methods to choose buffer time. Rowe et.al. choose one second [Rowe92]. Terek et.al. choose the most efficient time, the one that throws away the smallest proportion of sound because of buffer overows on the sender or receivers side <ref> [Tere91] </ref>. Nevot chooses a buffer time (called playout delay) proportional to the absolute deviation of the interarrival times [Schu92]. Schulzrinne et.al. describe the VT audio conferencer [Scho89] as choosing buffer time by counting unusually late packets, and declare it more unstable than absolute deviation.
Reference: [Terr88] <editor> Managing Stored Voice in the Etherphone System, D. B. Terry, D. C. </editor> <title> Swinehart, </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> Vol. 6, No. 1, </volume> <pages> pages 3-27, </pages> <month> February </month> <year> 1988. </year> <title> Discusses a data abstraction for manipulating audio on a network server. </title>
Reference-contexts: Riedl et.al. analyze the load placed on the network by a multi-person audio conference with and without silence deletion [Ried93]. They do not analyze the sound quality of the conference. Terry et.al. define a data abstraction to manipulate audio data on a network audio server <ref> [Terr88] </ref>. They assume that the problem of high-quality real-time delivery is solved (page 12). Rowe et.al. describe problems in synchronizing different streams of multimedia from a network server [Rowe92].
Reference: [VanJ92] <author> Van Jacobsen and Steve McCanne, </author> <title> Lawrence Berkeley Laboratory, </title> <institution> University of California, Berkeley, </institution> <address> CA, </address> <year> 1992. </year> <note> The vat audioconferencing software. </note>
Reference-contexts: Casner et.al. describe recent experiences in audio conferencing on wide-area networks by the Internet Engineering Task Force, along with lists of solved and unsolved problems [Casn92]. In their experiments they used the vat <ref> [VanJ92] </ref> audio conferencer. Researchers have used various methods to choose buffer time. Rowe et.al. choose one second [Rowe92]. Terek et.al. choose the most efficient time, the one that throws away the smallest proportion of sound because of buffer overows on the sender or receivers side [Tere91].
Reference: [Verm91] <institution> Delay jitter control for real-time communication in a packet switching network, D.C. </institution> <note> Verma, </note> <author> H. Zhang, and D. Ferrari, </author> <booktitle> Proceedings of TriComm 1991 Conference, </booktitle> <month> April </month> <year> 1991. </year> <title> Includes simulations of tradeoffs between end-to-end latency and delay jitter control. </title>
Reference-contexts: Shephard et.al discuss implementing parameters of quality of service that are important to support multimedia data: bit error rate, packet error rate, upper bounds on delay, delay jitter, and throughput [Shep92]. Several authors describe protocols that give hard upper bounds on delay jitter by increasing end-to-end latency [Ferr92] <ref> [Verm91] </ref>. The goal of these protocols is to minimize buffering at each node in the network, but they assume that each link in the network can individually guarantee upper bounds on delay. Jeffay notes that such guarantees will require real-time operating system support [Jeff92a].
Reference: [Wang92] <editor> An objective measure for predicting subjective quality of speech coders, S. Wang, A. Sekey, A. </editor> <title> Gersho, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <month> June </month> <year> 1992. </year> <title> Predicts the subjective Mean Opinion Score (MOS) with a correlation coefficient of around 0.90. Does not handle temporal gaps. </title>
Reference-contexts: June 18, 1993 13 Many people have studied the subjective sound quality of distorted speech, and even produced and studied objective measures [Dimo89] <ref> [Wang92] </ref> [Quac88]. However, this work focuses on speech distortions that preserve the temporal ow of the sound. The psychologist Moore offers general comments about the effect of introducing silence into speech [Moor82].
References-found: 33

