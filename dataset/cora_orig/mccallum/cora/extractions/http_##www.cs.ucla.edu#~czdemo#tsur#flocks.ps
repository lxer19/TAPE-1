URL: http://www.cs.ucla.edu/~czdemo/tsur/flocks.ps
Refering-URL: http://www.cs.ucla.edu/~czdemo/tsur/
Root-URL: http://www.cs.ucla.edu
Title: Query Flocks: A Generalization of Association-Rule Mining  
Author: Dick Tsur, Jeffrey D. Ullman, Serge Abiteboul, Chris Clifton, Rajeev Motwani, 
Date: October 21, 1997  
Affiliation: Hitachi Corp.  Stanford University  Stanford University and INRIA  MITRE Corp.  Stanford University Svetlozar Nestorov, Stanford University  
Abstract: Association-rule mining has proved a very successful technique for extracting useful information from very large databases. This success is attributed not only to the appropriateness of the objectives, but to the fact that a number of new query-optimization ideas, such as the "a-priori" trick, make association-rule mining run much faster than might be expected. In this paper we see that the same tricks can be extended to a much more general context, allowing efficient mining of very large databases for many different kinds of patterns. The general idea, called "query flocks," is a generate-and-test model for data-mining problems. We see how the idea can be used either in a general-purpose mining system or in a next generation of conventional query optimizers.
Abstract-found: 1
Intro-found: 1
Reference: [AHV95] <author> S. Abiteboul, R. Hull, and V. Vianu, </author> <title> Foundations of Databases, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1995. </year>
Reference-contexts: If that bound is less than the threshold in the filter condition, we can eliminate certain values of a parameter or parameters without further consideration. But where do these less expensive queries come from? 3.1 Containment for Conjunctive Queries When the queries involved are conjunctive ([CM77], [Ull89], <ref> [AHV95] </ref>), there is a straightforward answer to the question.
Reference: [AIS93] <author> R. Agrawal, T. Imielinski, and A. Swami, </author> <title> "Mining association rules between sets of items in large databases," </title> <booktitle> Proc. ACM SIGMOD Conf., </booktitle> <pages> pp. 207-216, </pages> <year> 1993. </year>
Reference: [AS94] <author> R. Agrawal and R. Srikant, </author> <title> "Fast algorithms for mining association rules," </title> <booktitle> Proc. 20th VLDB Conf., </booktitle> <year> 1994. </year>
Reference-contexts: ! diapers has high interest means that if you buy beer, then you are much more (or much less) likely to buy diapers than the general population. 1.2 The A-Priori Optimization There is an important trick for speeding up the search for high-support sets of items, known as a-priori ([AIS93], <ref> [AS94] </ref>). It uses the fact that if a set of items S appears in c baskets, then any subset of S appears in at least c baskets.
Reference: [CM77] <author> A. K. Chandra and P. M. Merlin, </author> <title> "Optimal implementation of conjunctive queries in relational databases," </title> <booktitle> Proc. Ninth Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pp. 77-90. </pages>
Reference-contexts: We would simply eliminate one of the parameters and mention beer explicitly in the query flock, should we require one of the items to be beer. We shall use as our query language "conjunctive queries" <ref> [CM77] </ref>, augmented with arithmetic (introduced in Section 2.4 and with union, as introduced in Section 3.4. In the following and subsequent examples, we shall use Datalog ([Ull88]) notation, rather than SQL, to express our queries. Datalog gives us two capabilities whose utility will become clear in Section 3: 1.
Reference: [G*79] <author> P. P. Griffiths (Selinger), M. M. Astrahan, D. D. Chamberlin, R. A. Lorie, and T. G. </author> <title> Price [1979]. "Access path selection in a relational database management system," </title> <booktitle> ACM SIGMOD International Conf. on Management of Data, </booktitle> <pages> pp. 23-34., </pages> <year> 1979. </year>
Reference-contexts: Notice that these left sides must be copied literally, using the same relation name as the predicate and the same parameters as arguments. 2 4.3 An Exponential Search for Query Plans There is ample precedent for making exponential searches to find the best query plan, for instance <ref> [G*79] </ref>. Because queries tend to be small, exponential searches are often computationally feasible. However, the space of query plans entailed by the rule in Section 4.2 is not bounded by an exponential in the size of the query defining the original query flock.
Reference: [GHQ95] <author> A. Gupta, V. Harinarayan, and D. Quass, </author> <title> Generalized projections, a powerful approach to aggregation, </title> <booktitle> Proc. 21st VLDB Conf., </booktitle> <year> 1995. </year> <month> 19 </month>
Reference-contexts: In principle, the necessary code optimizations could be implemented in SQL systems. The idea is roughly "pushing grouping down the expression tree," and as such has been studied in the abstract by <ref> [GHQ95] </ref>. However, until the advent of market-basket mining, there has been little motivation for database vendors to invest a lot of time and effort in building these transformations into their systems.
Reference: [HS95] <author> M. Houtsma and A. Swami, </author> <title> "Set-oriented mining of association rules," </title> <booktitle> Proc. Intl. Conf. on Data Engineering, </booktitle> <pages> pp. 25-34. </pages>
Reference-contexts: This approach was examined by <ref> [HS95] </ref>, for instance. The problem is that the right optimizations are beyond the state of the art in commercial database systems.
Reference: [Klu82] <author> A. Klug, </author> <title> "Equivalence of relational algebra and relational calculus query languages having aggregate functions," </title> <journal> J. ACM 29:3, </journal> <pages> pp. 699-717. </pages>
Reference-contexts: First, the discovery of containing queries is not as easy. There are decision procedures | <ref> [Klu82] </ref> or [ZO93] for Datalog with arithmetic, and [LS93] for Datalog with negation, including arithmetic. However, there are some cases where the containing query cannot be characterized as a subset of the subgoals of the contained query.
Reference: [LS93] <author> A. Y. Levy and Y. Sagiv, </author> <title> "Queries independent of update," </title> <booktitle> Proc. International Conference on Very Large Data Bases, </booktitle> <pages> pp. 171-181, </pages> <year> 1993. </year>
Reference-contexts: First, the discovery of containing queries is not as easy. There are decision procedures | [Klu82] or [ZO93] for Datalog with arithmetic, and <ref> [LS93] </ref> for Datalog with negation, including arithmetic. However, there are some cases where the containing query cannot be characterized as a subset of the subgoals of the contained query.
Reference: [Man97] <author> H. Mannila, </author> <title> "Methods and problems in data mining," </title> <booktitle> Proc. Intl. Conf. on Database Theory, </booktitle> <year> 1997, </year> <pages> pp. 41-55, </pages> <publisher> Springer-Verlag. </publisher>
Reference: [Ull88] <author> J. D. Ullman, </author> <title> Principles of Database and Knowledge-Base Systems, Volume I| Fundamental Concepts, </title> <publisher> Computer Science Press, </publisher> <address> New York., </address> <year> 1988. </year>
Reference: [Ull89] <author> J. D. Ullman, </author> <title> Principles of Database and Knowledge-Base Systems, Volume II|The New Technologies, </title> <publisher> Computer Science Press, </publisher> <address> New York., </address> <year> 1989. </year>
Reference-contexts: If that bound is less than the threshold in the filter condition, we can eliminate certain values of a parameter or parameters without further consideration. But where do these less expensive queries come from? 3.1 Containment for Conjunctive Queries When the queries involved are conjunctive ([CM77], <ref> [Ull89] </ref>, [AHV95]), there is a straightforward answer to the question.
Reference: [UW97] <author> J. D. Ullman and J. Widom, </author> <title> A First Course in Database Systems, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Mass., </address> <year> 1997. </year>
Reference: [ZO93] <author> X. Zhang and M. Z. </author> <title> Ozsoyoglu [1993]. "On efficient reasoning with implication constraints," </title> <booktitle> Proc. Third DOOD Conference, </booktitle> <pages> pp. 236-252, </pages> <year> 1993. </year> <month> 20 </month>
Reference-contexts: First, the discovery of containing queries is not as easy. There are decision procedures | [Klu82] or <ref> [ZO93] </ref> for Datalog with arithmetic, and [LS93] for Datalog with negation, including arithmetic. However, there are some cases where the containing query cannot be characterized as a subset of the subgoals of the contained query.
References-found: 14

