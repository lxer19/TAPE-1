URL: http://www.eecs.umich.edu/~chaudhry/papers/tchm.ps
Refering-URL: http://www.eecs.umich.edu/~chaudhry/publications.html
Root-URL: http://www.eecs.umich.edu
Email: email: -chaudhry, moyne, rundenst-@eecs.umich.edu  
Title: Active Controller: Utilizing Active Databases for Implementing Multi-Step Control of Semiconductor Manufacturing  
Author: Nauman Chaudhry, James Moyne, and Elke A. Rundensteiner 
Keyword: Inter-process control; manufacturing database; active database for control; semiconductor manufacturing.  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan,  
Abstract: Whenever the fabrication process consists of several steps and the dynamic modification of individual steps or step sequences of the process is allowed, multi-step feedback and feed-forward control can be utilized to improve the quality of the fabrication process. Feedback and feed-forward control have been identified as important features of the semiconductor manufacturing facility of the future, and research has been carried out on developing suitable control algorithms. However, the issue of providing generic enabling mechanisms for multi-step control has not been adequately addressed. To fill this gap, we have developed the Active Controller - a generic, adaptable and reusable software enabler for multi-step control in manufacturing facilities. The Active Controller utilizes a recently emerging technology, called active databases, to define and automatically execute powerful and expressive rules for implementing multi-step control algorithms. The conditions of Active Controller rules are defined to check for scenarios in which multi-step control is needed. The Active Controller keeps track of relevant processing events and data, and when the conditions for multi-step control hold, executes appropriate actions to compensate for the errors in processing. We show that the Active Controller implementation, with its capability for the definition of complex rules over a history of processing events and ability to invoke user-provided analysis routines, provides for a generic and adaptable implementation that can be used to implement various algorithms for multi-step control. We also address the important issue of integrating the Active Controller with existing CIM environments and describe the Active Controllers interaction with CIM applications to highlight the fact that the Active Controller is not tied to a specific CIM implementation. 
Abstract-found: 1
Intro-found: 1
Reference: [BCP96] <author> E. Baralis, S. Ceri, S. Paraboschi, </author> <title> Modularization Techniques for Active Rule Design, </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 21, 1, </volume> <month> March </month> <year> 1996, </year> <pages> 1-29. </pages>
Reference-contexts: We solve this problem of indirect interaction of rules by applying the design principle of stratification <ref> [BCP96] </ref> to the definition of active rules for process control. The result, as proven in [CMR96], is the partitioning of rules into disjoint sets with the property that as long as the rule execution in each individual set terminates, the execution caused by any rule triggering in the system terminates.
Reference: [Bom92] <author> B. </author> <title> Bombay, The BCAM Control and Monitoring Environment, </title> <type> Masters Thesis, </type> <institution> UC Ber-keley, </institution> <month> September </month> <year> 1992. </year> <month> 22 </month>
Reference-contexts: Again, provision for multi-step control is not discussed. The Berkeley Computer Aided Manufacturing (BCAM) system is a semiconductor manufacturing system developed at the University of California, Berkeley <ref> [Bom92] </ref>. BCAM software utilizes equipment models for supervisory control. The models are used by the software for process simulation and recipe generation. This recipe generation is used to accommodate product specifications. BCAM stores and retrieves equipment recipes and models in a recipe database.
Reference: [Bon95] <author> D. Boning, et. al, </author> <title> Run by Run Control of Chemical-mechanical Polishing, </title> <booktitle> Proceedings of the 17th IEEE/CPMT International Electronics Manufacturing Technology Symposium. </booktitle> <address> Austin, TX, </address> <pages> 81-87. </pages>
Reference-contexts: A number of research efforts have been undertaken to provide feed-back control of individual processing steps to maintain desired processing characteristics. Feed-back control of individual steps has been carried out both as run-to-run (e.g., [SHI95], <ref> [Bon95] </ref>, etc.) as well as real-time control ([Ras95], [Sch93], etc.). Recently research has also been carried out to provide control of sequences of inter-related processes. A control system for photolithography sequences is described in [Lea96]. After each step in the photolithography sequence the state of the wafer is analyzed.
Reference: [CMR96] <author> N. Chaudhry, J. Moyne, E. Rundensteiner, </author> <title> Extended Aggregation Relationships for Process Specification and Enactment in Active Databases, </title> <note> submitted for publication. Also available as Tech. Rep. </note> <institution> CSE-TR-XXX-96, EECS Dept., CSE Division, University of Michigan, </institution> <address> Ann Arbor, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: To make active database technology suitable for developing control applications, we have developed solutions to these different problems for the domain of process control by exploiting particular characteristics of the process specification model (i.e., Figure 4). A detailed description of this research is given in <ref> [CMR96] </ref>. Here we give a brief summary of some of the salient features. To overcome the absence of design methodologies for defining active rules, we have developed specific guidelines for rule definition. <p> We solve this problem of indirect interaction of rules by applying the design principle of stratification [BCP96] to the definition of active rules for process control. The result, as proven in <ref> [CMR96] </ref>, is the partitioning of rules into disjoint sets with the property that as long as the rule execution in each individual set terminates, the execution caused by any rule triggering in the system terminates.
Reference: [CTM93] <author> N. Chaudhry, R. Telfeyan, B. Moore, H. Etemad and J. </author> <title> Moyne, A Run-to-Run Control Framework for VLSI Manufacturing, </title> <booktitle> Proceedings of the SRC Techcon, </booktitle> <month> September </month> <year> 1993, </year> <pages> 31-33. </pages>
Reference-contexts: This research effort complements research previously carried out on the design and development of a Generic Cell Controller (GCC) at the University of Michigan [MoM92], <ref> [CTM93] </ref>. The GCC acts as an event driven controller, mapping incoming messages to appropriate control actions thereby providing sequential control of equipment.
Reference: [DBB88] <author> U. Dayal et. al., </author> <title> The HiPAC Project: Combining Active Databases and Timing Constraints, </title> <booktitle> Sigmod Record, </booktitle> <volume> 17, 1, </volume> <month> March </month> <year> 1988, </year> <pages> 51 - 70. </pages>
Reference: [DCB93] <author> D. Durbeck, J-H. Chern and D. Boning, </author> <title> A System for Semiconductor Process Specification, </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> 6, </volume> <month> 4 (November </month> <year> 1993), </year> <pages> 297-305. </pages>
Reference-contexts: We first describe the design of the Active Controller and then its implementation using the Ode active DBMS from AT&T [Ode95]. 3.3.1 Modeling the Process Flow In current semiconductor manufacturing CIM systems, semiconductor manufacturing process ows to fabricate a wafer are specified by a hierarchical object-oriented data structure <ref> [DCB93] </ref>, [KiN95]. Process ows are composed from ows, processes, steps and equipments as shown in Figure 4 using the Object Modeling Technique (OMT) [Rum91]. In this model, a step is the basic unit of processing and is defined as what can be accomplished in one chamber.
Reference: [GGD94] <author> S. Gatziu, A. Geppert and K. Dittrich, </author> <title> The SAMOS Active DBMS Prototype, </title> <type> Technical Report 94.16, </type> <institution> Institut fur Informatik, Universitat Zurich, </institution> <year> 1994. </year>
Reference-contexts: Active database systems represent one of the important enhancements of conventional database systems, where the database system is transformed to be active, i.e., to provide the ability to monitor the database state and to react to predefined situations without explicit user action or application requests ([DBB88], [Han92], [SRH90], [LGA96], [WCL91], <ref> [GGD94] </ref>). Situations to be observed and actions to be initiated are managed by the DBMS. Active DBMSs thus provide common, application independent functionality for complex dynamic control structures.
Reference: [Han92] <author> E. Hanson, </author> <title> Rule Condition Testing and Action Execution in Ariel, </title> <booktitle> Proceedings of the 1992 ACM SIGMOD International Conference on Management of Data, </booktitle> <address> San Diego, California, </address> <month> June </month> <year> 1992, </year> <pages> 49-58. </pages>
Reference-contexts: Active database systems represent one of the important enhancements of conventional database systems, where the database system is transformed to be active, i.e., to provide the ability to monitor the database state and to react to predefined situations without explicit user action or application requests ([DBB88], <ref> [Han92] </ref>, [SRH90], [LGA96], [WCL91], [GGD94]). Situations to be observed and actions to be initiated are managed by the DBMS. Active DBMSs thus provide common, application independent functionality for complex dynamic control structures.
Reference: [KiN95] <author> P. Kristoff and D. Nunn, </author> <title> The Process Specification System for MMST, </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> 8, </volume> <month> 3 (August </month> <year> 1995), </year> <pages> 262-271. </pages>
Reference-contexts: We first describe the design of the Active Controller and then its implementation using the Ode active DBMS from AT&T [Ode95]. 3.3.1 Modeling the Process Flow In current semiconductor manufacturing CIM systems, semiconductor manufacturing process ows to fabricate a wafer are specified by a hierarchical object-oriented data structure [DCB93], <ref> [KiN95] </ref>. Process ows are composed from ows, processes, steps and equipments as shown in Figure 4 using the Object Modeling Technique (OMT) [Rum91]. In this model, a step is the basic unit of processing and is defined as what can be accomplished in one chamber.
Reference: [Lar94] <author> G. Larrabee, </author> <title> Flexible Intelligent Manufacture of Microelectronic Devices, </title> <journal> Manufacturing Review, </journal> <volume> 7, </volume> <month> 3 (Sept </month> <year> 1994), </year> <pages> 212-226. </pages>
Reference-contexts: Control of semiconductor processes over multiple steps has been identified as an important feature of the semiconductor manufacturing facilities of the future <ref> [Lar94] </ref> and research has been conducted for developing control algorithms for carrying out such control [Lea96], [Sto94]. However, the development of enabling mechanisms which can be used to implement multi-step feedback and feed-forward control has not been adequately addressed (see Section 4 for further discussion).
Reference: [Lea96] <author> S. Leang, et. al., </author> <title> A Control System for Photolithographic Sequences, </title> <journal> IEEE Transaction on Semiconductor Manufacturing, </journal> <volume> 9, 2, </volume> <month> May </month> <year> 1996, </year> <pages> 191-206. </pages>
Reference-contexts: Control of semiconductor processes over multiple steps has been identified as an important feature of the semiconductor manufacturing facilities of the future [Lar94] and research has been conducted for developing control algorithms for carrying out such control <ref> [Lea96] </ref>, [Sto94]. However, the development of enabling mechanisms which can be used to implement multi-step feedback and feed-forward control has not been adequately addressed (see Section 4 for further discussion). To fill this gap, we have developed an adaptable, portable and generic software enabler for multi-step control in manufacturing facilities. <p> Feed-back control of individual steps has been carried out both as run-to-run (e.g., [SHI95], [Bon95], etc.) as well as real-time control ([Ras95], [Sch93], etc.). Recently research has also been carried out to provide control of sequences of inter-related processes. A control system for photolithography sequences is described in <ref> [Lea96] </ref>. After each step in the photolithography sequence the state of the wafer is analyzed. This analysis is done by using statistical process control techniques and if the control limits are violated a control alarm is triggered to vary the processing yet to be carried out. <p> By achieving the stated goal of keeping the capacitance of the fabricated capacitor fairly constant (within 1%), the study demonstrated the potential of using multi-step control. The control strategies described in [Sto94], as well as the strategies described in <ref> [Lea96] </ref> can be implemented by using the Active Controller. In fact, the control rules shown in the examples in Section 3 implement some of the control strategies described in these papers.
Reference: [LeS92a] <author> S. Leang and C. Spanos, </author> <title> Application of Feed-forward Control to a Lithography Stepper, </title> <booktitle> Proceeding of the 1992 IEEE/SEMI International Semiconductor Manufacturing Science Symposium, </booktitle> <pages> 79-84. </pages>
Reference-contexts: A new recipe is generated for the exposure step by modifying the exposure time to compensate for the reectance error <ref> [LeS92a] </ref>. This control algorithm is encoded in the Active Controller as follows [Figure 6]: A rule spin_cb_error is defined on the class spin_coat. The event associated with the rule is after spin_cb_execute and hence will be raised after the execution of the spin-coat and bake step. <p> The models are used by the software for process simulation and recipe generation. This recipe generation is used to accommodate product specifications. BCAM stores and retrieves equipment recipes and models in a recipe database. Research within BCAM has also focussed on the provision of multi-step control as described in <ref> [LeS92a] </ref>, [LeS92b] and [Les96], and discussed in the previous section.
Reference: [LeS92b] <author> S. Leang and C. Spanos, </author> <title> Application of Feed-forward and Feedback Control to a Photolithography Sequence, </title> <booktitle> Proceedings of the 1992 IEEE/SEMI Advanced Semiconductor Manufacturing Conference, </booktitle> <pages> 143-147. 23 </pages>
Reference-contexts: This recipe generation is used to accommodate product specifications. BCAM stores and retrieves equipment recipes and models in a recipe database. Research within BCAM has also focussed on the provision of multi-step control as described in [LeS92a], <ref> [LeS92b] </ref> and [Les96], and discussed in the previous section.
Reference: [LGA96] <author> D. Lieuwen, N. Gehani, R. Arlein, </author> <title> The Ode Active Database: Trigger Semantics and Implementation, </title> <booktitle> Proceedings of the Twelfth International Conference on Data Engineering, Febru-ary 1996, </booktitle> <address> New Orleans, </address> <pages> 412-420 </pages>
Reference-contexts: Active database systems represent one of the important enhancements of conventional database systems, where the database system is transformed to be active, i.e., to provide the ability to monitor the database state and to react to predefined situations without explicit user action or application requests ([DBB88], [Han92], [SRH90], <ref> [LGA96] </ref>, [WCL91], [GGD94]). Situations to be observed and actions to be initiated are managed by the DBMS. Active DBMSs thus provide common, application independent functionality for complex dynamic control structures.
Reference: [MHM94] <author> J. McGehee, J. Hebley, and J. Mahaffey, </author> <title> The MMST Computer-Integrated Manufacturing System Framework, </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> 7, </volume> <month> 2 (May </month> <year> 1994), </year> <note> 107 -116. </note>
Reference-contexts: The factory CIM systems are comprised of several applications which provide the various CIM functions [Sem96]. The different factory applications identified in a research and development program called Microelectronics Manufacturing Science & Technology (MMST) <ref> [MHM94] </ref>, are representative of a typcial CIM implementation. These applications are described below: Factory Application: This is logically the highest level control application in the CIM system. The Factory Application provides services for starting up and shutting down the factory and for coordinating the activities of operations management personnel. <p> The functionalities provided by the Active Controller fall in the Specification Application and Machine/Process Control Application groups. One of the most sophisticated of the existing semiconductor factory management environments was developed within the Microelectronics Manufacturing Science & Technology (MMST) project at Texas Instruments, Inc. <ref> [MHM94] </ref>. The CIM system for MMST aims to integrate and automate the wafer manufacturing process both horizontally (i.e., order entry through finished wafer output) and vertically (i.e., production planning through embedded machine control).
Reference: [MoM92] <author> J. Moyne and L. McAfee, </author> <title> A Generic Cell Controller for the Automated VLSI Manufacturing Facility, </title> <journal> IEEE Transactions on Semiconductor Manufacturing 5, </journal> <month> 2 (May </month> <year> 1992), </year> <pages> 77-87. </pages>
Reference-contexts: This research effort complements research previously carried out on the design and development of a Generic Cell Controller (GCC) at the University of Michigan <ref> [MoM92] </ref>, [CTM93]. The GCC acts as an event driven controller, mapping incoming messages to appropriate control actions thereby providing sequential control of equipment.
Reference: [MTH92] <author> M. McIlrath et. al., </author> <title> CAFE-The MIT Computer-Aided Fabrication Environment, </title> <journal> IEEE Transactions on Components, Hybrids, and Manufacturing Technology, </journal> <volume> 15, 2, </volume> <month> May </month> <year> 1992, </year> <pages> 353-360. </pages>
Reference-contexts: The system is partitioned into various applications (as mentioned in Section 2.1) which closely correspond to the application groups of the Sematech CIM Framework. Provision of multi-step control, though, is not discussed in the description of the MMST CIM environment. CAFE, the MIT Computer-Aided Fabrication Environment <ref> [MTH92] </ref>, is a system developed for use in all phases of process design, development, planning, and manufacturing of integrated circuit wafers. The key components of the CAFE architecture are the data model and database schema, the process ow and wafer representation, and the application programming and database interfaces.
Reference: [Ode95] <institution> Ode 4.0 User Manual, AT&T Bell Laboratories, </institution> <address> Murray Hill, New Jersey. </address>
Reference-contexts: The Active Controller carries out multi-step control by manipulating the process specification via rules defined on this specification. We first describe the design of the Active Controller and then its implementation using the Ode active DBMS from AT&T <ref> [Ode95] </ref>. 3.3.1 Modeling the Process Flow In current semiconductor manufacturing CIM systems, semiconductor manufacturing process ows to fabricate a wafer are specified by a hierarchical object-oriented data structure [DCB93], [KiN95].
Reference: [Ous94] <author> J. Ousterhout, </author> <title> Tcl and the Tk toolkit, </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: A graph FIGURE 6. Rules defined for correcting spin-coat error. Rule name Class for which rule (s) is defined Event (s) that the class monitors Condition Action Event 15 ical user interface (GUI) has also been developed for the Active Controller using Tcl/Tk <ref> [Ous94] </ref>. A screen shot of the main GUI window is shown in Figure 8. Odes programming language O++ has been developed by extending C++ to provide persistence, transactions and other database functionalities.
Reference: [Pat93] <author> N. Paton, et. al., </author> <title> Dimension of Active Behaviour, </title> <booktitle> Proceedings of the 1st International Workshop on Rules in Database Systems, </booktitle> <month> August </month> <year> 1993, </year> <pages> 40-57. </pages>
Reference-contexts: However, various active database systems have been developed to provide different sets of capabilities. Several dimensions can be used to characterize the capabilities and behavior of different active databases as discussed in <ref> [Pat93] </ref>. These dimensions relate to the structure, execution model and management of active rules.
Reference: [Ras95] <author> B. Rashap, et.al., </author> <title> Control of semiconductor manufacturing equipment: real-time feedback control of a reactive ion etcher, </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> 8, 3, </volume> <month> August </month> <year> 1995, </year> <pages> 286-297. </pages>
Reference: [Rum91] <author> J. Rumbaugh, et. al., </author> <title> Object-Oriented Modeling and Design, </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference-contexts: Process ows are composed from ows, processes, steps and equipments as shown in Figure 4 using the Object Modeling Technique (OMT) <ref> [Rum91] </ref>. In this model, a step is the basic unit of processing and is defined as what can be accomplished in one chamber. A step is carried out on one piece of equipment. However, the same equipment may be used by more than one step.
Reference: [Sch93] <author> C. Schaper, et. al., </author> <title> Real-time Control of Rapid Thermal Processing Semiconductor Manufacturing Equipment, </title> <booktitle> Proceedings of the 1993 American Control Conference. </booktitle> <address> San Francisco, CA, </address> <pages> 2985-2989. </pages>
Reference-contexts: A number of research efforts have been undertaken to provide feed-back control of individual processing steps to maintain desired processing characteristics. Feed-back control of individual steps has been carried out both as run-to-run (e.g., [SHI95], [Bon95], etc.) as well as real-time control ([Ras95], <ref> [Sch93] </ref>, etc.). Recently research has also been carried out to provide control of sequences of inter-related processes. A control system for photolithography sequences is described in [Lea96]. After each step in the photolithography sequence the state of the wafer is analyzed.
Reference: [Sem96] <institution> Computer Integrated Manufacturing (CIM) Application Framework Specification 1.3, Sematech Technology Transfer Document Number 93061697F-ENG. </institution>
Reference-contexts: The factory CIM systems are comprised of several applications which provide the various CIM functions <ref> [Sem96] </ref>. The different factory applications identified in a research and development program called Microelectronics Manufacturing Science & Technology (MMST) [MHM94], are representative of a typcial CIM implementation. These applications are described below: Factory Application: This is logically the highest level control application in the CIM system. <p> In addition, multi-step control should be provided via a pluggable module that has as little impact on existing applications as is possible <ref> [Sem96] </ref>. 3 Active Controller for Multi-Step Control We now describe the Active Controller, the multi-step controller we have developed to fulfil the requirements for multi-step control as discussed in the previous section. <p> Some of the more prominent efforts are now discussed to highlight the relation of the Active Controller to representative CIM environments. The Sematech CIM Framework <ref> [Sem96] </ref> is different in nature from the other three research efforts, in that it provides a comprehensive specification for an application framework, rather than a specific implementation. The heart of the framework is a set of semiconductor manufacturing abstractions and services that are typically embodied as applications.
Reference: [SHI95] <author> E. Sachs, A. Hu, A. Ingolfsson, </author> <title> Run by run process control: combining SPC and feedback control, </title> <journal> IEEE Transactions on Semiconductor Manufacturing, </journal> <volume> 8, 1, </volume> <month> Feb </month> <year> 1995. </year> <title> p 26-43. </title> <editor> [SiK95]E. Simon and A. Kotz-Dittrich, </editor> <title> Promises and Realities of Active Database Systems, </title> <booktitle> Proceedings of the 21st VLDB, </booktitle> <year> 1995, </year> <pages> 642-653. </pages>
Reference-contexts: A number of research efforts have been undertaken to provide feed-back control of individual processing steps to maintain desired processing characteristics. Feed-back control of individual steps has been carried out both as run-to-run (e.g., <ref> [SHI95] </ref>, [Bon95], etc.) as well as real-time control ([Ras95], [Sch93], etc.). Recently research has also been carried out to provide control of sequences of inter-related processes. A control system for photolithography sequences is described in [Lea96]. After each step in the photolithography sequence the state of the wafer is analyzed.
Reference: [SRH90] <author> M. Stonebraker, L. Rowe, and M. Hirohama, </author> <title> The Implementation of POSTGRES, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 2, 1, </volume> <month> March </month> <year> 1990, </year> <pages> 125-142. 24 </pages>
Reference-contexts: Active database systems represent one of the important enhancements of conventional database systems, where the database system is transformed to be active, i.e., to provide the ability to monitor the database state and to react to predefined situations without explicit user action or application requests ([DBB88], [Han92], <ref> [SRH90] </ref>, [LGA96], [WCL91], [GGD94]). Situations to be observed and actions to be initiated are managed by the DBMS. Active DBMSs thus provide common, application independent functionality for complex dynamic control structures.
Reference: [Sto94] <author> K. Stoddard, et. al., </author> <title> Application of feed-forward and adaptive feedback control to semiconductor device manufacturing, </title> <booktitle> Proceedings of the 1994 American Control Conference, </booktitle> <address> Green Valley, AZ, </address> <pages> 892-896. </pages>
Reference-contexts: Control of semiconductor processes over multiple steps has been identified as an important feature of the semiconductor manufacturing facilities of the future [Lar94] and research has been conducted for developing control algorithms for carrying out such control [Lea96], <ref> [Sto94] </ref>. However, the development of enabling mechanisms which can be used to implement multi-step feedback and feed-forward control has not been adequately addressed (see Section 4 for further discussion). To fill this gap, we have developed an adaptable, portable and generic software enabler for multi-step control in manufacturing facilities. <p> Results indicate a significant improvement in the overall capability of the process sequence. 20 Another research effort in multi-step control is reported in <ref> [Sto94] </ref>. Feed-forward and feedback techniques are applied to a processing sequence involving the four basic steps of silicon oxidation, aluminum metallization, lithography and aluminum etch. A parallel-plate capacitor is manufactured to study the effect of control strategies in this process sequence. Feed-forward control is carried out at two points. <p> By achieving the stated goal of keeping the capacitance of the fabricated capacitor fairly constant (within 1%), the study demonstrated the potential of using multi-step control. The control strategies described in <ref> [Sto94] </ref>, as well as the strategies described in [Lea96] can be implemented by using the Active Controller. In fact, the control rules shown in the examples in Section 3 implement some of the control strategies described in these papers.
Reference: [Teo94] <author> T. Teorey, </author> <title> Database Modeling & Design: the Fundamental Principles, 2nd ed., </title> <publisher> Morgan Kaufmann Publishers, </publisher> <year> 1994. </year>
Reference-contexts: In particular, unlike traditional (passive) database systems for which well-defined methodologies for building database applications exist <ref> [Teo94] </ref>, a key difficulty in developing applications using active databases is the lack of methodological support for active rule definition [SiK95]. It has also been noted that another hindrance in the employment of active database technology is the difficulty in defining and maintaining rule sets whose execution is predictable [WiC96].
Reference: [WCL91] <author> J. Widom, R. Cochrane, and B. Lindsay, </author> <title> Implementing Set-Oriented Production Rules as an Extension to Starburst, </title> <booktitle> Proceedings of the 17th International Conference on Very Large Data Bases, </booktitle> <month> September </month> <year> 1991, </year> <pages> 275-285. </pages>
Reference-contexts: Active database systems represent one of the important enhancements of conventional database systems, where the database system is transformed to be active, i.e., to provide the ability to monitor the database state and to react to predefined situations without explicit user action or application requests ([DBB88], [Han92], [SRH90], [LGA96], <ref> [WCL91] </ref>, [GGD94]). Situations to be observed and actions to be initiated are managed by the DBMS. Active DBMSs thus provide common, application independent functionality for complex dynamic control structures.
Reference: [WiC96] <author> J. Widom and S. Ceri, </author> <title> Active Database Systems: Triggers and Rules for Advanced Database Processing, </title> <publisher> Morgan-Kaufmann, </publisher> <year> 1996. </year>
Reference-contexts: An active database system is a database system that monitors situations of interest (i.e., events) and, when they occur, triggers appropriate responses <ref> [WiC96] </ref>. The behavior to be implemented is expressed in rules. These rules are comprised of event-condition-action (ECA) elements. <p> Active DBMSs thus provide common, application independent functionality for complex dynamic control structures. Instead of having each application survey events and conditions individually, and schedule the appropriate reactions (i.e., consistency checks, notification procedures etc.), the scheduling of the actions is incorporated into the DBMS <ref> [WiC96] </ref>. The desired behavior of active DBMSs is expressed in terms of event-condition-action (ECA) rules. The rule syntax can be described as: ON event IF condition DO action, with the semantics: when the event occurs, if the condition is true, then carry out the action. <p> It has also been noted that another hindrance in the employment of active database technology is the difficulty in defining and maintaining rule sets whose execution is predictable <ref> [WiC96] </ref>. Therefore, for active database technology to be an attractive vehicle for the implementation of advanced applications, the implementor needs to be guided towards defining rules that are easy to analyze and whose behavior is predictable.
References-found: 31

