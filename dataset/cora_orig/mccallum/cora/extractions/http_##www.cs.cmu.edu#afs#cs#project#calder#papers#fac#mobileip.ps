URL: http://www.cs.cmu.edu/afs/cs/project/calder/papers/fac/mobileip.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs.cmu.edu/project/calder/www/mobileip.html
Root-URL: 
Title: A Nitpick Analysis of Mobile IPv6  Keywords: partial specifications, model checking, Nitpick/NP, mobile internetworking protocols  
Author: Daniel Jackson Yuchung Ng Jeannette Wing 
Date: 22 September 1997  
Address: 545 Technology Square  Cambridge, MA 02139 Ithaca, NY 14853 Pittsburgh, PA 15213  
Affiliation: MIT Lab. for Comp.Sci. Computer Science Dept. Computer Science Dept.  Cornell University Carnegie Mellon University  
Abstract: A lightweight formal method [JW96] enables partial specification and automatic analysis by sacrificing breadth of coverage and expressive power. By design, NP is a specification language that is a subset of Z and Nitpick is a tool that quickly and automatically checks properties of finite models of systems specified in NP. We used NP to state two critical acyclicity properties of Mobile IPv6, a new internetworking protocol that allows mobile hosts to communicate with each other. In our Nitpick analysis of Mobile IPv6 we discovered a flaw in a 1996 version of the design: one of the acyclicity properties does not hold. It takes only two hosts to exhibit this flaw. This paper gives self-contained overviews of Mobile IPv6 and of NP and Nitpick to understand the details of our specification and analysis. 
Abstract-found: 1
Intro-found: 1
Reference: [JD96a] <author> Daniel Jackson and Craig A. Damon. </author> <title> Nitpick Reference Manual. </title> <institution> CMU-CS-96-109. School of Computer Science, Carnegie Mellon University, </institution> <address> Pittsburgh, PA, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: These are features of Z, in a slightly adapted form. To illustrate these ideas, we shall use a simplified version of the specification; the full specification is given in Section 4. A full grammar and description of the specification language NP is available as a technical report <ref> [JD96a] </ref>. Global Abstract States We view the state of the protocol globally, in terms of sets and relations. Rather than thinking about the contents of nodes and messages concretely, we think purely in terms of the abstract graph these contents imply, and its properties.
Reference: [JD96b] <author> Daniel Jackson and Craig A. Damon. </author> <title> Elements of Style: Analyzing a Software Design Feature with a Counterexample Detector, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 22, No. 7, </volume> <month> July </month> <year> 1996, </year> <pages> pp. 484495. </pages>
Reference-contexts: In our study of IPv6, there were no interesting cases that required more than two hosts and two messages. Moreover, by using various reduction mechanisms, models can often be found even though the space of possible models is huge. These mechanisms, and the rationale behind Nitpick, are discussed elsewhere <ref> [JD96b, JJD97] </ref>. 4. NP Specifications and Nitpick Analysis of Mobile IPv6 We present in detail the NP specification and Nitpick analysis of the cache acyclicity property since that is where we found a design flaw.
Reference: [JJD97] <author> Daniel Jackson, Somesh Jha and Craig A. Damon, </author> <title> Isomorph-free Model Enumeration: A New Method for Checking Relational Specifications, </title> <note> to appear, ACM Transactions on Programming Languages and Systems. </note>
Reference-contexts: In our study of IPv6, there were no interesting cases that required more than two hosts and two messages. Moreover, by using various reduction mechanisms, models can often be found even though the space of possible models is huge. These mechanisms, and the rationale behind Nitpick, are discussed elsewhere <ref> [JD96b, JJD97] </ref>. 4. NP Specifications and Nitpick Analysis of Mobile IPv6 We present in detail the NP specification and Nitpick analysis of the cache acyclicity property since that is where we found a design flaw.
Reference: [JW96] <author> Daniel Jackson and Jeannette Wing, </author> <title> Lightweight Formal Methods, </title> <booktitle> IEEE Computer, </booktitle> <month> April </month> <year> 1996, </year> <pages> pp. 21-22. </pages>
Reference-contexts: Conclusions Our study of IPv6 illustrates, more generally, our attitude to formal methods <ref> [JW96] </ref>. Formality is not an end in itself, and indeed we recognize that a formal specification is usually harder to write (and read) than an informal one. Not many problems can be solved entirely by formal means, or merit complete formalization.
Reference: [JP96] <author> David B. Johnson and C. Perkins, </author> <title> Mobility Support in IPv6, Mobile IP Working Group INTERNET-DRAFT, </title> <month> June </month> <year> 1996. </year>
Reference-contexts: Internetworking protocols such as IP [P80] used in the Internet today do not currently support host movement. IPv6, the next generation of IP, addresses the need to support mobility <ref> [JP96] </ref>. This new protocol allows transparent routing of packets to mobile nodes regardless of the mobile nodes current point of attachment. 2.1. Terminology A network is made of one or more subnets (Figure 1).
Reference: [J95] <author> David B. Johnson, </author> <title> Scalable Support for Transparent Mobile Host Internetworking, </title> <journal> Wireless Network, </journal> <volume> Vol. 1, </volume> <month> October </month> <year> 1995, </year> <pages> pp. 311-321. </pages>
Reference-contexts: In our analysis of Mobile IPv6 we discovered that it does not satisfy one of the acyclicity properties. Ironically an earlier version, IPv4 <ref> [J95] </ref>, does. We brought this problem to the attention of one of the IPv6 designers (Johnson) who agreed that indeed the standards ambiguous and imprecise language admits this design flaw; a subsequent wording change to the IPv6 documentation (1997 version) suggests a fix to the problem found.
Reference: [L78] <author> Leslie Lamport, </author> <title> Time, Clocks, and the Ordering of Events in a Distributed System, </title> <journal> CACM, </journal> <volume> Volume 21, Number 7, </volume> <month> July </month> <year> 1978, </year> <pages> pp. 558-565. </pages>
Reference-contexts: The send and expiration times of packets sent from different hosts are based on the same clock, and all caches determine the expiration time of a cache entry by consulting this global clock. Lamports synchronized clocks would be one way to achieve a close approximation of a global clock <ref> [L78] </ref>. We now walk through the specification line by line.
Reference: [P80] <author> J.B. Postel, </author> <title> Internetworking Protocol Approaches, </title> <journal> IEEE Transactions on Communications, April 1980, </journal> <volume> Vol. 28, </volume> <pages> pp. 604-611. </pages>
Reference-contexts: Users want the ability to access their personal files or the Web through their laptop whether they 2 are in the office, at home, or on the road. Internetworking protocols such as IP <ref> [P80] </ref> used in the Internet today do not currently support host movement. IPv6, the next generation of IP, addresses the need to support mobility [JP96]. This new protocol allows transparent routing of packets to mobile nodes regardless of the mobile nodes current point of attachment. 2.1.
Reference: [S92] <author> J.M. Spivey, </author> <title> The Z Notation: A Reference Manual, second edition, </title> <publisher> Prentice-Hall, </publisher> <year> 1992 </year> <month> 21 </month>
Reference-contexts: We wrote our formal specification in NP, the input language of Nitpick, a tool for checking properties of finite binary relations. By design, NP is a subset of Z <ref> [S92] </ref>; any Z specification expressed in terms of NP is amenable to Nitpick analysis. Nitpick is one of the few semantic analyzers for Z.
References-found: 9

