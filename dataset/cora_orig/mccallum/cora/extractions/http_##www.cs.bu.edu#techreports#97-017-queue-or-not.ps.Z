URL: http://www.cs.bu.edu/techreports/97-017-queue-or-not.ps.Z
Refering-URL: http://cs-www.bu.edu/techreports/Home.html
Root-URL: 
Email: harchol@theory.lcs.mit.edu  fcrovella,murtag@bu.edu  Email: cristina@dcc.ufmg.br.  
Title: To Queue or Not to Queue: When Queueing is Better Than Timesharing in a Distributed System  
Author: Mor Harchol-Balter Mark E. Crovella Cristina D. Murta 
Note: Supported by the NSF Postdoctoral Fellowship in the Mathematical Sciences. Supported in part by NSF Grants CCR-9501822 and CCR-9706685. Supported by a grant from CAPES, Brazil. Permanent address: Depto.  
Date: October 31, 1997  
Address: NE43-340 Cambridge, MA 02139  Boston, MA 02215  Parana, Curitiba, PR 81531, Brazil.  
Affiliation: Laboratory for Computer Science MIT,  Department of Computer Science Boston University  de Informatica, Universidade Federal do  
Pubnum: BUCS-TR-1997-017  
Abstract: We examine the question of whether to employ the first-come-first-served (FCFS) discipline or the processor-sharing (PS) discipline at the hosts in a distributed server system. We are interested in the case in which service times are drawn from a heavy-tailed distribution, and so have very high variability. Traditional wisdom when task sizes are highly variable would prefer the PS discipline, because it allows small tasks to avoid being delayed behind large tasks in a queue. However, we show that system performance can actually be significantly better under FCFS queueing, if each task is assigned to a host based on the task's size. By task assignment, we mean an algorithm that inspects incoming tasks and assigns them to hosts for service. The particular task assignment policy we propose is called SITA-E: Size Interval Task Assignment with Equal Load. Surprisingly, under SITA-E, FCFS queueing typically outperforms the PS discipline by a factor of about two, as measured by mean waiting time and mean slowdown (waiting time of task divided by its service time). We compare the FCFS/SITA-E policy to the processor-sharing case analytically; in addition we compare it to a number of other policies in simulation. We show that the benefits of SITA-E are present even in small-scale distributed systems (four or more hosts). Furthermore, SITA-E is a static policy that does not incorporate feedback knowledge of the state of the hosts, which allows for a simple and scalable implemen tation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Martin F. Arlitt and Carey L. Williamson. </author> <title> Web server workload characterization: The search for invariants. </title> <booktitle> In Proceedings of the 1996 SIGMETRICS Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 126-137, </pages> <year> 1996. </year>
Reference-contexts: We show surprisingly that for lower ff SITA-E is the better of the two. In this work we have been loosely inspired by an abstraction of a distributed Web server. Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed <ref> [3, 4, 1] </ref>, while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers [12, 8, 15, 17]. <p> A task-assignment policy is an algorithm which assigns each task to one of the hosts for service. 2 Heavy-Tailed distributions. One of the motivating factors in this work is the recent observation that file sizes on Web servers often exhibit heavy-tailed distributions <ref> [1, 4, 3] </ref>. <p> Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations [16, 14, 9]. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in <ref> [3, 4, 1] </ref> has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3.
Reference: [2] <author> Azer Bestavros and Sue Nagy. </author> <title> Concurrency Admission Control in ACCORD. In Azer Bestavros 19 and Victor Fay-Wolfe, </title> <editor> editors, </editor> <booktitle> Advances in Real-Time Database and Information Retrieval Systems, chapter 15. </booktitle> <publisher> Kluwer Academic Publishers, Norwell, </publisher> <address> Massachusetts, </address> <year> 1997. </year>
Reference-contexts: One additional implication of this work is that it strengthens the argument for admission control in distributed servers. Admission control has often been proposed in timeshared systems as a means to improve overall system throughput, for example, to avoid virtual memory overhead due to thrashing <ref> [2, 19] </ref>. In admission control, at most m tasks are allowed to timeshare the host where m is near the optimal multiprogramming level for the host. However, the use of admission control means that the system must either deny service to some requests, or queue them for service.
Reference: [3] <author> Mark E. Crovella and Azer Bestavros. </author> <title> Self-similarity in World Wide Web traffic: Evidence and possible causes. </title> <booktitle> In Proceedings of the 1996 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems, </booktitle> <pages> pages 160-169, </pages> <month> May </month> <year> 1996. </year>
Reference-contexts: We show surprisingly that for lower ff SITA-E is the better of the two. In this work we have been loosely inspired by an abstraction of a distributed Web server. Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed <ref> [3, 4, 1] </ref>, while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers [12, 8, 15, 17]. <p> A task-assignment policy is an algorithm which assigns each task to one of the hosts for service. 2 Heavy-Tailed distributions. One of the motivating factors in this work is the recent observation that file sizes on Web servers often exhibit heavy-tailed distributions <ref> [1, 4, 3] </ref>. <p> Such a distribution has infinite variance; and if ff 1 the distribution has infinite mean. For Web file size measurements, typical values of the tail index ff seem to be in range of 1.1 to 1.3 <ref> [4, 3] </ref>. These values of ff are so low as to motivate particular focus on analyzing the effects of high variability in file size, and on developing resource management policies that specifically address high variability in file size, which we do in this paper. Task sizes. <p> Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations [16, 14, 9]. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in <ref> [3, 4, 1] </ref> has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. <p> Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in [3, 4, 1] has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in <ref> [3, 4] </ref> are approximately 1.1 to 1.3. There is evidence that file sizes in systems other than the Web may show heavy tails as well: Unix file size measurements are presented in [11], and I/O in a general computing enviroment is presented in [21].
Reference: [4] <author> Mark E. Crovella, Murad S. Taqqu, and Azer Bestavros. </author> <title> Heavy-tailed probability distributions in the world wide web. In A Practical Guide To Heavy Tails, </title> <booktitle> chapter 1, </booktitle> <pages> pages 1-23. </pages> <publisher> Chapman & Hall, </publisher> <address> New York, </address> <year> 1997. </year>
Reference-contexts: We show surprisingly that for lower ff SITA-E is the better of the two. In this work we have been loosely inspired by an abstraction of a distributed Web server. Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed <ref> [3, 4, 1] </ref>, while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers [12, 8, 15, 17]. <p> A task-assignment policy is an algorithm which assigns each task to one of the hosts for service. 2 Heavy-Tailed distributions. One of the motivating factors in this work is the recent observation that file sizes on Web servers often exhibit heavy-tailed distributions <ref> [1, 4, 3] </ref>. <p> Such a distribution has infinite variance; and if ff 1 the distribution has infinite mean. For Web file size measurements, typical values of the tail index ff seem to be in range of 1.1 to 1.3 <ref> [4, 3] </ref>. These values of ff are so low as to motivate particular focus on analyzing the effects of high variability in file size, and on developing resource management policies that specifically address high variability in file size, which we do in this paper. Task sizes. <p> Recent measurements indicate that a Web server might experience ff in the range of approximately 1.1 to 1.3 <ref> [4] </ref>. If k and p are held constant, an increase in ff results in a decrease in the mean task size. Therefore, to hold E fXg constant, we decrease k, the lower bound on the B (k; p; ff) distribution, as we increase ff. <p> Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations [16, 14, 9]. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in <ref> [3, 4, 1] </ref> has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. <p> Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in [3, 4, 1] has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in <ref> [3, 4] </ref> are approximately 1.1 to 1.3. There is evidence that file sizes in systems other than the Web may show heavy tails as well: Unix file size measurements are presented in [11], and I/O in a general computing enviroment is presented in [21].
Reference: [5] <author> Carlos A. Cunha, Azer Bestavros, and Mark E. Crovella. </author> <title> Characteristics of WWW client-based traces. </title> <type> Technical Report TR-95-010, </type> <institution> Boston University Department of Computer Science, </institution> <month> April </month> <year> 1995. </year>
Reference-contexts: We choose a load of 0:8 representing a heavily loaded server. The mean task execution time, E fXg, is chosen to be 3000 time units. This could be interpreted as the number of bytes in an average Web page <ref> [5] </ref>.
Reference: [6] <author> E. Lazowska D. Eager and J. Zahorjan. </author> <title> Aadaptive load sharing in homogeneous distributed systems. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 12(5), </volume> <year> 1986. </year>
Reference-contexts: More recently, analytic work on load balancing has considered more general task size distributions than the traditional exponential distribution (this usually requires some decomposition approximation where the nodes of the network are assumed to behave independently of each other, see for example, <ref> [6] </ref>). However the specific properties of heavy-tailed task sizes are only just now beginning to be incorporated into the design of load balancing policies [9]. Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult.
Reference: [7] <author> Anja Feldmann and Ward Whitt. </author> <title> Fitting mixtures of exponentials to long-tail distributions to analyze network performance models. </title> <booktitle> In Proceedings of IEEE INFOCOM'97, </booktitle> <pages> pages 1098-1116, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Analysis of queues with infinite variance task sizes is difficult [22]. For this reason finite variance approximations to heavy-tailed distributions are increasingly being used <ref> [7] </ref>. 7 Conclusion The main contribution of this paper is the introduction and performance evaluation of the SITA-E task assignment policy. The SITA-E approach may be applied to any task size distribution so 18 long as that distribution is known in advance and has finite mean.
Reference: [8] <author> Simson L. Garfinkel. </author> <title> The wizard of Netscape. </title> <journal> WebServer Magazine, </journal> <volume> 1(2) </volume> <pages> 59-63, </pages> <year> 1996. </year>
Reference-contexts: Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed [3, 4, 1], while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers <ref> [12, 8, 15, 17] </ref>. The two aspects of Web servers that we incorporate in our model are that, first, Web file sizes have been found to be heavy-tailed, and second, task sizes may often be inferred from the name of the file being requested.
Reference: [9] <author> Mor Harchol-Balter and Allen Downey. </author> <title> Exploiting process lifetime distributions for dynamic load balancing. </title> <booktitle> In Proceedings of SIGMETRICS '96, </booktitle> <pages> pages 13-24, </pages> <year> 1996. </year>
Reference-contexts: in this model of a distributed server a task's service time is known at the time of its arrival greatly differentiates this model from a typical network of workstations load balancing model where task sizes are not known in advance and must be estimated as the task runs (e.g., see <ref> [9] </ref>). The design of a centralized router for distributed Web servers that can inspect task service demands is described in [10]. Performance metrics. <p> There is a huge body of literature on load balancing in general distributed systems, including analytic, simulation, and implementation work (see <ref> [9] </ref> for a number of references). More recently, analytic work on load balancing has considered more general task size distributions than the traditional exponential distribution (this usually requires some decomposition approximation where the nodes of the network are assumed to behave independently of each other, see for example, [6]). <p> However the specific properties of heavy-tailed task sizes are only just now beginning to be incorporated into the design of load balancing policies <ref> [9] </ref>. Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations [16, 14, 9]. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. <p> However the specific properties of heavy-tailed task sizes are only just now beginning to be incorporated into the design of load balancing policies [9]. Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations <ref> [16, 14, 9] </ref>. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in [3, 4, 1] has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. <p> In addition to files and I/O traces, other computer system attributes have also been shown to exhibit heavy tailed distributions. In particular, the lifetime of processes in some systems can show heavy tails: [16] found that Unix process lifetimes showed heavy tails with 1:05 ff 1:25 and <ref> [9] </ref> found that Unix process lifetimes showed heavy tails with ff 1. Analysis of queues with infinite variance task sizes is difficult [22].
Reference: [10] <author> Guerney Hunt, Erich Nahum, and John Tracey. </author> <title> Enabling content-based load distribution for scalable services. </title> <type> Preprint, </type> <year> 1997. </year>
Reference-contexts: The design of a centralized router for distributed Web servers that can inspect task service demands is described in <ref> [10] </ref>. Performance metrics. The effectiveness of a task assignment scheme will be measured in terms of mean waiting time, mean queue length, and mean slowdown, where a task's slowdown is its waiting time divided by its service demand. All means are per-task averages.
Reference: [11] <author> Gordon Irlam. </author> <title> Unix file size survey - 1993. </title> <note> Available at http://www.base.com/gordoni /ufs93.html, </note> <month> September </month> <year> 1994. </year>
Reference-contexts: The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. There is evidence that file sizes in systems other than the Web may show heavy tails as well: Unix file size measurements are presented in <ref> [11] </ref>, and I/O in a general computing enviroment is presented in [21]. Also, the authors in [20] found that the upper tail of the distribution of data bytes in FTP bursts (file transfers over the Internet) was well fit to a heavy-tailed distribution with 0:9 ff 1:1.
Reference: [12] <author> E. D. Katz, M. Butler, and R. E. McGrath. </author> <title> A scalable web server: The NCSA prototype. </title> <booktitle> In Proceedings of the First International WWW Conference, </booktitle> <year> 1994. </year>
Reference-contexts: Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed [3, 4, 1], while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers <ref> [12, 8, 15, 17] </ref>. The two aspects of Web servers that we incorporate in our model are that, first, Web file sizes have been found to be heavy-tailed, and second, task sizes may often be inferred from the name of the file being requested.
Reference: [13] <author> Leonard Kleinrock. </author> <title> Queueing Systems, </title> <booktitle> volume II. Computer Applications. </booktitle> <publisher> John Wiley & Sons, </publisher> <year> 1976. </year>
Reference-contexts: If the workload is heavy-tailed, the second moment of the service time explodes, as shown in Figure 2. In contrast, Theorem 2 below show that the second moment of the service time plays no role for a PS queue. Theorem 2 <ref> [13] </ref> Consider an M/G/1 PS queue with arrival rate : E fW g = 1 5 E fSg = 1 Now consider a distributed server employing FCFS queueing at the hosts.
Reference: [14] <author> Phillip Krueger and Miron Livny. </author> <title> A comparison of preemptive and non-preemptive load distributing. </title> <booktitle> In 8th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 123-130, </pages> <month> June </month> <year> 1988. </year>
Reference-contexts: However the specific properties of heavy-tailed task sizes are only just now beginning to be incorporated into the design of load balancing policies [9]. Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations <ref> [16, 14, 9] </ref>. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in [3, 4, 1] has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3.
Reference: [15] <author> K.L.E. Law, B. Nandy, and A. Chapman. </author> <title> A scalable and distributed WWW proxy system. </title> <booktitle> In Proceedings of ACM Multimedia '97, </booktitle> <year> 1997. </year>
Reference-contexts: Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed [3, 4, 1], while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers <ref> [12, 8, 15, 17] </ref>. The two aspects of Web servers that we incorporate in our model are that, first, Web file sizes have been found to be heavy-tailed, and second, task sizes may often be inferred from the name of the file being requested.
Reference: [16] <author> W. E. Leland and T. J. Ott. </author> <title> Load-balancing heuristics and process behavior. </title> <booktitle> In Proceedings of Performance and ACM Sigmetrics, </booktitle> <pages> pages 54-69, </pages> <year> 1986. </year>
Reference-contexts: However the specific properties of heavy-tailed task sizes are only just now beginning to be incorporated into the design of load balancing policies [9]. Performance analysis of load balancing policies under heavy-tailed task sizes is usually difficult. Heavy-tailed distributions have however been considered in some load balancing simulations <ref> [16, 14, 9] </ref>. Nonetheless, heavy-tailed distributions are important because they are beginning to appear in many measurements of computer systems. Work in [3, 4, 1] has shown that Web file sizes often exhibit heavy tails. The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. <p> In addition to files and I/O traces, other computer system attributes have also been shown to exhibit heavy tailed distributions. In particular, the lifetime of processes in some systems can show heavy tails: <ref> [16] </ref> found that Unix process lifetimes showed heavy tails with 1:05 ff 1:25 and [9] found that Unix process lifetimes showed heavy tails with ff 1. Analysis of queues with infinite variance task sizes is difficult [22].
Reference: [17] <author> Antoine Morad and Huiqun Liu. </author> <title> Redirection-based scalable web server architecture. </title> <type> preprint, </type> <year> 1997. </year>
Reference-contexts: Recent characterizations of Web server workloads suggest that service times are strongly heavy-tailed [3, 4, 1], while at the same time distributed systems are increasingly being proposed as architectures for high performance Web servers <ref> [12, 8, 15, 17] </ref>. The two aspects of Web servers that we incorporate in our model are that, first, Web file sizes have been found to be heavy-tailed, and second, task sizes may often be inferred from the name of the file being requested.
Reference: [18] <author> [Author Omitted]. </author> <title> To queue or not to queue: When queueing is better than timesharing in a distributed system (extended version). </title> <type> Technical Report 10/97. 20 </type>
Reference: [19] <author> H. Pang, M. J. Carey, and M. Livny. </author> <title> Managing memory for real-time queries. </title> <booktitle> In Proceedings of the 1994 ACM SIGMOD Conference on Management of Data, </booktitle> <pages> pages 221-232, </pages> <year> 1994. </year>
Reference-contexts: One additional implication of this work is that it strengthens the argument for admission control in distributed servers. Admission control has often been proposed in timeshared systems as a means to improve overall system throughput, for example, to avoid virtual memory overhead due to thrashing <ref> [2, 19] </ref>. In admission control, at most m tasks are allowed to timeshare the host where m is near the optimal multiprogramming level for the host. However, the use of admission control means that the system must either deny service to some requests, or queue them for service.
Reference: [20] <author> Vern Paxson and Sally Floyd. </author> <title> Wide-area traffic: The failure of poisson modeling. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <pages> pages 226-244, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: There is evidence that file sizes in systems other than the Web may show heavy tails as well: Unix file size measurements are presented in [11], and I/O in a general computing enviroment is presented in [21]. Also, the authors in <ref> [20] </ref> found that the upper tail of the distribution of data bytes in FTP bursts (file transfers over the Internet) was well fit to a heavy-tailed distribution with 0:9 ff 1:1.
Reference: [21] <author> David L. Peterson. </author> <title> Data center I/O patterns and power laws. </title> <booktitle> In CMG Proceedings, </booktitle> <month> December </month> <year> 1996. </year>
Reference-contexts: The ranges of ff reported in [3, 4] are approximately 1.1 to 1.3. There is evidence that file sizes in systems other than the Web may show heavy tails as well: Unix file size measurements are presented in [11], and I/O in a general computing enviroment is presented in <ref> [21] </ref>. Also, the authors in [20] found that the upper tail of the distribution of data bytes in FTP bursts (file transfers over the Internet) was well fit to a heavy-tailed distribution with 0:9 ff 1:1.

References-found: 21

