URL: http://www.icsi.berkeley.edu/~yairb/pubs/BG-harmonic.ps
Refering-URL: http://www.icsi.berkeley.edu/~yairb/
Root-URL: http://www.icsi.berkeley.edu
Title: The Harmonic k-Server Algorithm is Competitive  
Author: Yair Bartal Eddie Grove 
Abstract: The k-server problem is a generalization of the paging problem, and is the most studied problem in the area of competitive online problems. The Harmonic algorithm is a very natural and simple randomized algorithm for the k-server problem. We give a simple proof that the Harmonic k-server algorithm is competitive. The competitive ratio we prove is the best currently known for the algorithm. The Harmonic algorithm is memoryless and time-efficient. This is the only such algorithm known to be competitive for the k-server problem.
Abstract-found: 1
Intro-found: 1
Reference: [BBKTW] <author> S. Ben-David, A. Borodin, R.M. Karp, G. Tardos, and A. Wigderson. </author> <title> On the Power of Randomization in Online Algorithms. </title> <booktitle> In Proc. of the 22nd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 379-386, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: It is interesting to consider randomized algorithms for online problems. We need a generalization of the notion of a competitive ratio. In particular, we must specify in what way the sequence of requests may depend upon the choices of the algorithm. Ben-David, Borodin, Karp, Tardos and Widgerson <ref> [BBKTW] </ref> introduced a framework for studying randomized algorithms for online problems called request-answer games. We will restrict our attention to one type of request-answer game for the k-server problem. An adaptive online adversary specifies the initial positions of k servers. <p> The actual value was about 3 17;000 . Chrobak and Larmore [CL] have proved that Harmonic is 3-competitive for k = 2. Ben-David, Borodin, Karp, Tardos and Widgerson <ref> [BBKTW] </ref> proved that any proof (based upon a computable potential function) that an algorithm is C-competitive against any adaptive online adversary can be used to create a deterministic algorithm that is C 2 -competitive.
Reference: [BKT] <author> P. Berman, H. Karloff, and G. Tardos. </author> <title> A Competitive 3-Server Algorithm. </title> <booktitle> In Proc. 1st ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1990. </year>
Reference-contexts: They proved that Harmonic is 2 -competitive against a lazy adversary. There are examples for which the lazy adversary forces Harmonic to do 2 times the o*ine work. No other adversary has been shown to force a higher competitive ratio. Berman, Karloff, and Tardos <ref> [BKT] </ref> proved that Harmonic is competitive for k = 3 against any adaptive online adversary with a competitive ratio of that was so large it was just referred to as O (1) in the paper. The actual value was about 3 17;000 .
Reference: [BR] <author> Y. Bartal and A. Rosen. </author> <title> The Distributed k-Server Problem | A Comeptitive Distributed Translator for k-Server Agorithms. </title> <booktitle> In Proc. of the 33rd Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <month> October </month> <year> 1992. </year>
Reference-contexts: The other algorithms cited above use memory and take time that increases unboundedly with the length of the request sequence. The Harmonic algorithm also has applications for the distributed k-server problem <ref> [BR] </ref>. 2 The Harmonic Algorithm The Harmonic algorithm for the online k-server problem was proposed by Raghavan and Snir [RS]. Call A the current request location. Harmonic sends each server with probability inversely proportional to its distance from A.
Reference: [CKPV] <author> M. Chrobak, H. Karloff, T. Payne, and S. Vishwanathan. </author> <title> New Results on Server Problems. </title> <booktitle> In Proc. 1st ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1990. </year>
Reference-contexts: By a result of Chrobak, Karloff, Payne, and Vishwanathan <ref> [CKPV] </ref>, any algorithm in the algebraic decision tree model to compute an optimal o*ine strategy for a request sequence of length m takes time (m log m). Recently, Koutsoupias and Papadimitriou [KP] showed that a well known k-server algorithm, called the work-function algorithm, is (2k 1)-competitive.
Reference: [CL] <author> M. Chrobak and L. Larmore. </author> <title> On Fast Algorithms for Two Servers. </title> <booktitle> In Proc. Mathematical Foundations of Computer Science, </booktitle> <address> Banska Bystrica, </address> <year> 1990. </year> <note> Also, to appear in Journal of Algorithms. </note>
Reference-contexts: The actual value was about 3 17;000 . Chrobak and Larmore <ref> [CL] </ref> have proved that Harmonic is 3-competitive for k = 2.
Reference: [FRR] <author> A. Fiat, Y. Rabani, and Y. Ravid. </author> <title> Competitive k-Server Algorithms. </title> <booktitle> In Proc. of the 31st Ann. IEEE Symp. on Foundations of Computer Science, </booktitle> <month> October </month> <year> 1990. </year> <note> Also, to appear in JCSS Special FOCS Issue. 13 </note>
Reference-contexts: For k &gt; 3, the existence of a competitive algorithm for the online k-server problem was open until Fiat, Rabani, and Ravid <ref> [FRR] </ref> constructed randomized and deterministic algorithms over general metric spaces for which the competitive ratio C (k) = exp (O (k log k)). 3 The algorithm in [FRR] is somewhat complicated, and after each request it is necessary to compute the optimal cost of serving all the requests so far. <p> For k &gt; 3, the existence of a competitive algorithm for the online k-server problem was open until Fiat, Rabani, and Ravid <ref> [FRR] </ref> constructed randomized and deterministic algorithms over general metric spaces for which the competitive ratio C (k) = exp (O (k log k)). 3 The algorithm in [FRR] is somewhat complicated, and after each request it is necessary to compute the optimal cost of serving all the requests so far.
Reference: [G] <author> E. Grove. </author> <title> The Harmonic k-Server Algorithm is Competitive. </title> <booktitle> In Proc. of the 23rd Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 260-266, </pages> <month> May </month> <year> 1991. </year>
Reference: [KP] <author> E. Koutsoupias and C. Papadimitriou. </author> <title> On the k-Server Conjecture. </title> <booktitle> In Proc. of the 26th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 507-511, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: By a result of Chrobak, Karloff, Payne, and Vishwanathan [CKPV], any algorithm in the algebraic decision tree model to compute an optimal o*ine strategy for a request sequence of length m takes time (m log m). Recently, Koutsoupias and Papadimitriou <ref> [KP] </ref> showed that a well known k-server algorithm, called the work-function algorithm, is (2k 1)-competitive. The Harmonic algorithm cannot achieve a competitive ratio this low. However, the work-function algorithm uses a lot of memory and is slow, growing with the length of the input sequence.
Reference: [MMS] <author> M.S. Manasse, L.A. McGeoch, and D.D. Sleator. </author> <title> Competitive Algorithms for On-Line Problems. </title> <booktitle> In Proc. of the 20th Ann. ACM Symp. on Theory of Computing, </booktitle> <pages> pages 322-333, </pages> <month> May </month> <year> 1988. </year>
Reference-contexts: C is called the competitive ratio of the algorithm. The competitive ratio is a measure of how much better we could do if we knew the future. 1.2 The k-Server Problem The online k-server problem was introduced by Manasse, McGeoch and Sleator in <ref> [MMS] </ref>. We are given initial locations of k servers in a metric space. Requests for service at points fx t g come in over time. Immediately after the t th request is received, one of the servers must be moved from its current location to x t . <p> We require the adversary to choose a maximum length m for the game so that the expectations will behave. 1.3 Previous Results In the paper introducing the online k-server problem, Manasse, McGeoch, and Sleator <ref> [MMS] </ref> constructed a deterministic 2-competitive 2-server algorithm. They also proved that no deterministic algorithm can have a competitive ratio less than k. Consider an online adaptive adversary that moves an o*ine server only if every o*ine server is coincident with an online server. Such an adversary is called lazy.
Reference: [RS] <author> P. Raghavan and M. Snir. </author> <title> Memory versus Randomization in On-Line Algorithms. </title> <booktitle> In Proc. 16th ICALP, </booktitle> <month> July </month> <year> 1989. </year>
Reference-contexts: They also proved that no deterministic algorithm can have a competitive ratio less than k. Consider an online adaptive adversary that moves an o*ine server only if every o*ine server is coincident with an online server. Such an adversary is called lazy. Raghavan and Snir <ref> [RS] </ref> presented an algorithm called Harmonic. The Harmonic k-server algorithm moves each server to serve a request with probablity inversely propotional to its distance to the location of the request. They proved that Harmonic is 2 -competitive against a lazy adversary. <p> The Harmonic algorithm also has applications for the distributed k-server problem [BR]. 2 The Harmonic Algorithm The Harmonic algorithm for the online k-server problem was proposed by Raghavan and Snir <ref> [RS] </ref>. Call A the current request location. Harmonic sends each server with probability inversely proportional to its distance from A. The normalization factor is N = P where z ranges over the locations of the online servers.
Reference: [ST] <author> D.D. Sleator and R.E. Tarjan. </author> <title> Amortized Efficiency of List Update and Paging Rules. </title> <booktitle> Communication of the ACM, </booktitle> <pages> 28(2) pages 202-208, </pages> <year> 1985. </year> <month> 14 </month>
Reference-contexts: In contrast, an o*ine procedure is allowed to know the entire sequence of inputs in advance, before it makes any decisions. We want online algorithms whose cost compares favorably to the cost of an optimal o*ine algorithm. Sleator and Tarjan <ref> [ST] </ref> founded the study of competitive algorithms by introducing the idea that the performance of an online algorithm should be measured by the maximum ratio fl Department of Computer Science, Tel-Aviv University, Tel-Aviv 69978, Israel. E-mail: yairb@math.tau.ac.il. y Department of Computer Science, Duke University, Durham NC. E-mail: efg@cs.duke.edu.
References-found: 11

