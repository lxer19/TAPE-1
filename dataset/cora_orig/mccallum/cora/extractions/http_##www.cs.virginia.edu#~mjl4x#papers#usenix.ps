URL: http://www.cs.virginia.edu/~mjl4x/papers/usenix.ps
Refering-URL: http://www.cs.virginia.edu/~mjl4x/vitae.html
Root-URL: http://www.cs.virginia.edu
Email: fstrayer,mlewis,recg@ca.sandia.gov  
Title: XTP as a Transport Protocol for Distributed Parallel Processing  
Author: W. Timothy Strayer Michael J. Lewis Raymond E. Cline, Jr. 
Address: California  
Affiliation: Distributed Computing Department Sandia National Laboratories,  
Abstract: The Xpress Transfer Protocol (XTP) is a flexible transport layer protocol designed to provide efficient service without dictating the communication paradigm or the delivery characteristics that qualify the paradigm. XTP provides the tools to build communication services appropriate to the application. Current data delivery solutions for many popular cluster computing environments use TCP and UDP. We examine TCP, UDP, and XTP with respect to the communication characteristics typical of parallel applications. We perform measurements of end-to-end latency for several paradigms important to cluster computing. An implementation of XTP is shown to be comparable to TCP in end-to-end latency on preestablished connections, and does better for paradigms where connections must be constructed on the fly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> D. D. Clark, V. Jacobson, J. Romkey, and H. Salwen. </author> <title> An Analysis of TCP Processing Overhead. </title> <journal> IEEE Communications Magazine, </journal> <volume> 27(6) </volume> <pages> 23-29, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Van Jacobson has observed that the predictability of future packets, based on previously received packets, is high enough to allow significant performance tuning of TCP (some of the observations made by Jacobson and others to tune TCP and UDP are chronicled in [8]). Further, fast-path studies of TCP <ref> [1] </ref> suggest that TCP packets can be parsed in about 200 instructions. Less can be done with issues that involve the design of the protocol.
Reference: [2] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP, Vol: I, Principles, Protocols, and Architecture: Second Edition. </title> <publisher> Prentice Hall, </publisher> <address> Edgewood Cliffs, New Jersey, </address> <year> 1991. </year>
Reference-contexts: Since the TCP specification does not prevent the connection close handshake from piggybacking on the connection setup handshake, in theory only three segments are needed to reliably deliver TCP data <ref> [3, 2] </ref>. In practice, however, at least nine packets are used, as shown in Because of its popularity and longevity, TCP is a target for implementation optimizations.
Reference: [3] <author> W. A. Doeringer, D. Dykeman, M. Kaiserswerth, B. W. Meister, and H. </author> <title> Rudin. A Survey of Light-Weight Transport Protocols for High-Speed Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 38(11) </volume> <pages> 2025-2039, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Since the TCP specification does not prevent the connection close handshake from piggybacking on the connection setup handshake, in theory only three segments are needed to reliably deliver TCP data <ref> [3, 2] </ref>. In practice, however, at least nine packets are used, as shown in Because of its popularity and longevity, TCP is a target for implementation optimizations.
Reference: [4] <editor> J. Postel (editor). </editor> <title> Transmission Control Protocol, </title> <address> rfc-793, </address> <month> September </month> <year> 1981. </year>
Reference-contexts: In this way, TCP provides the notion of a reliable stream of data in which order is relative and important. TCP does not provide message boundary markers. TCP uses a three-way handshake to establish a connection <ref> [4] </ref>, where initial sequence numbers for both directions of flow are exchanged. The three-way handshake guards against connection hazards caused by duplicate packets. Once open, the two communicants exchange data reliably. Graceful close of a connection requires each side to know that the other has received all data sent.
Reference: [5] <author> S. J. Le*er, M. K. McKusick, M. J. Karels, and J. S. Quarterman. </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1989. </year>
Reference-contexts: The three-way handshake guards against connection hazards caused by duplicate packets. Once open, the two communicants exchange data reliably. Graceful close of a connection requires each side to know that the other has received all data sent. The Berkeley and System V Unix-based implementations of TCP <ref> [5, 7] </ref>, through the socket and TLI interfaces, separate the connection establishment, data transfer, and connection closing into three stages.
Reference: [6] <author> M. J. Lewis and R. E. Cline Jr. </author> <title> PVM Communication Performance in Switched FDDI Heterogeneous Distributed Computing Environments. </title> <booktitle> Proceedings of the IEEE Workshop on Advances in Parallel and Distributed Systems, </booktitle> <pages> pages 13-19, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: With these new technologies, cluster interconnects begin to resemble MPP interconnects in construction and performance. Even so, it has been shown that popular parallel processing systems, such as PVM, are still unable to fully exploit the performance of these high speed networks <ref> [6] </ref>. Emphasis must now be placed on optimizing the parallel processing systems and their transport protocols. 2.1 Parallel Algorithms Several problem types have emerged as particularly appropriate for parallelization. Among these are iterative calculations over fields of values, such as stencil algorithms and multi-body dynamics simulations that use space-cell decompositions.
Reference: [7] <author> M. Padovano. </author> <title> Networking Applications on UNIX System V Release 4. </title> <publisher> Prentice Hall, </publisher> <address> Edgewood Cliffs, New Jersey, </address> <year> 1993. </year>
Reference-contexts: The three-way handshake guards against connection hazards caused by duplicate packets. Once open, the two communicants exchange data reliably. Graceful close of a connection requires each side to know that the other has received all data sent. The Berkeley and System V Unix-based implementations of TCP <ref> [5, 7] </ref>, through the socket and TLI interfaces, separate the connection establishment, data transfer, and connection closing into three stages.
Reference: [8] <author> C. Partridge and S. Pink. </author> <title> A Faster UDP. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(4) </volume> <pages> 429-440, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Van Jacobson has observed that the predictability of future packets, based on previously received packets, is high enough to allow significant performance tuning of TCP (some of the observations made by Jacobson and others to tune TCP and UDP are chronicled in <ref> [8] </ref>). Further, fast-path studies of TCP [1] suggest that TCP packets can be parsed in about 200 instructions. Less can be done with issues that involve the design of the protocol.
Reference: [9] <author> W. T. Strayer, B. J. Dempsey, and A. C. Weaver. XTP: </author> <title> The Xpress Transfer Protocol. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1993. </year>
Reference-contexts: Less can be done with issues that involve the design of the protocol. Once a protocol is widely available, the packet use and functional offerings are already decided and difficult to alter. 3.2 The Xpress Transfer Protocol The Xpress Transfer Protocol (XTP) <ref> [11, 9] </ref> provides a transport layer service without dictating the communication paradigm or the delivery characteristics that qualify the paradigm. Communication paradigms are patterns of packet exchanges.
Reference: [10] <editor> Mentat XTP Internals Manual, Mentat, </editor> <publisher> Inc., </publisher> <address> Los Angeles, California, </address> <year> 1994. </year>
Reference-contexts: Mentat Inc., of Los Angeles, California 1 , has developed a kernel implementation of XTP Version 3.7, called MXTP <ref> [10] </ref>, with a TLI interface. To characterize the performance of XTP, we ran several different tests using MXTP and the implementations of TCP and UDP (also with TLI interfaces) that come standard with SunOS 5.3 (Solaris). <p> Timings with the two-way orderly release showed times in the one-half to one second range. The psuedo-code for the sender for the XTP One-Shot data transfer is shown in Figure 7. the one-way latency. According to <ref> [10] </ref>, the number of packets used for this One-Shot send is five: the FIRST packet with DATA from sender to receiver, a CNTL packet in reply, and a three way CNTL packet exchange to close the connection.
Reference: [11] <author> XTP Protocol Definition, </author> <title> Revision 3.6. </title> <type> Technical Report PEI 92-10, Protocol Engines, </type> <institution> Inc., </institution> <month> January </month> <year> 1992. </year>
Reference-contexts: Less can be done with issues that involve the design of the protocol. Once a protocol is widely available, the packet use and functional offerings are already decided and difficult to alter. 3.2 The Xpress Transfer Protocol The Xpress Transfer Protocol (XTP) <ref> [11, 9] </ref> provides a transport layer service without dictating the communication paradigm or the delivery characteristics that qualify the paradigm. Communication paradigms are patterns of packet exchanges.
References-found: 11

