URL: http://wwwis.win.tue.nl/~dignum/deon94.ps
Refering-URL: http://wwwis.win.tue.nl/~dignum/papers.html
Root-URL: http://www.win.tue.nl
Title: Free Choice and Contextually Permitted Actions  
Author: F.Dignum J.-J.Ch.Meyer R.J.Wieringa 
Abstract: We present a solution to the paradox of free choice permission by introducing strong and weak permission in a deontic logic of action. It is shown how counterintuitive consequences of strong permission can be avoided by limiting the contexts in which an action can be performed. This is done by introducing the only operator, which allows us to say that only ff is performed (and nothing else), and by introducing contextual interpretation of action terms. 
Abstract-found: 1
Intro-found: 1
Reference: [Aqv84] <author> L. Aqvist. </author> <title> Deontic logic. In D.M. </title> <editor> Gabbay and F. Guenthner, editors, </editor> <booktitle> Handbook of Philosophical Logic II, </booktitle> <pages> pages 605-714. </pages> <publisher> Reidel, </publisher> <year> 1984. </year>
Reference-contexts: 1 Introduction In the standard system of deontic logic <ref> [Aqv84, Wri51] </ref>, it is a theorem that P (p) ! P (p _ q) which means that if p is permitted then p _ q is also permitted.
Reference: [AlH78] <author> A. al-Hibri. </author> <title> Deontic Logic: A Comprehensive Appraisal and a New Proposal. </title> <publisher> University Press of America, </publisher> <year> 1978 </year>
Reference-contexts: In this paper we showed that both forms of the paradox can be eliminated if we take the context in which an action is performed into account. In a survey of paradoxes in deontic logic, al-Hibri <ref> [AlH78] </ref> rightly points out that the inference P (ff) ! P (ff + fi) omits something, viz. the admissibility of fi.
Reference: [BW90] <author> J.C.M. Baeten and W.P. Weijland. </author> <title> Process Algebra. </title> <publisher> Cambridge University Press, </publisher> <year> 1990. </year>
Reference: [Bro86] <author> M. Broy. </author> <title> A theory for nondeterminism, parallelism, </title> <journal> communication and concurrency. Theoretical Computer Science, </journal> <volume> vol.45, </volume> <pages> pages 1-62, </pages> <year> 1986. </year>
Reference-contexts: The idea is that failure is avoided when possible, i.e. when there is a non-failing alternative. In <ref> [Bro86] </ref>, this is called angelic nondeterminism. With this function defined, we can now give the semantical operators on D. For the parallel operator & we use a set-intersection * ", which is almost the same as the normal set-intersection.
Reference: [dBKM+86] <author> J.W. de Bakker, J.N Kok, J.-J.Ch. Meyer, E.-R. Olderog, and J.I. Zucker. </author> <title> Contrasting themes in the semantics of imperative concurrency. </title> <editor> In J.W. de Bakker, W.P. de Roever, and G. Rozenberg, editors, </editor> <booktitle> Current Trends in Concurrency: Overviews and Tutorials, </booktitle> <pages> pages 51-121. </pages> <publisher> LCNS 224 Springer, </publisher> <address> Berlin, </address> <year> 1986. </year>
Reference-contexts: They have an intensional flavour: they denote what happens in the world in an abstract way; only the event itself is recorded here, not yet its result. This is usually called a uniform semantics in the literature on the semantics of concurrency (e.g. <ref> [dBKM+86] </ref>). (Later on, we shall also introduce a more extensional (or non-uniform) semantics in the sense of events as causing changes (or transitions) of states of the world.) We further assume a special event ffi, which is not an element of A, called failure (comparable to deadlock in process algebra ([BW90]). <p> we define a convenient operator on sets of s-sets: Definition 4 Let T be a set of s-sets then T ffi = T nf [ffi]g if 9S 2 T : S 6= [ffi] f [ffi]g otherwise The operator T ffi is closely related to what is called failure removal in <ref> [dBKM+86] </ref>. The idea is that failure is avoided when possible, i.e. when there is a non-failing alternative. In [Bro86], this is called angelic nondeterminism. With this function defined, we can now give the semantical operators on D.
Reference: [Cas81] <author> H.-N. Casta neda. </author> <title> The Paradoxes of Deontic Logic: The simplest solution to all of them in one fell swoop. </title> <editor> In R. Hilpinen, editor, </editor> <booktitle> New Studies in Deontic Logic. </booktitle> <pages> pages 37-85, </pages> <publisher> Reidel, </publisher> <year> 1981. </year>
Reference-contexts: gratefully acknowledges the hospitality of Linkoping University during revision of this paper. z Free University of Amsterdam, Faculty of Mathematics and Computer Science, De Boelelaan 1081a, 1081 HV Amsterdam, The Netherlands, e-mail:roelw@cs.vu.nl This research of J.-J.Ch.Meyer and R.J.Wieringa is partially supported by ESPRIT BRWG project No.8319 'ModelAge'. 1 Casta neda <ref> [Cas81] </ref> argues that the paradox of free choice permission, along with many other paradoxes of deontic logic, is due to the use of ordinary logical connectives inside the P operator. He proposes to distinguish practitions from assertions and to apply deontic operators to practitions rather than assertions.
Reference: [Dig89] <author> F. Dignum. </author> <title> A language for modelling knowledge bases. </title> <type> Ph.d. thesis, </type> <institution> Vrije Universiteit, </institution> <address> Amsterdam, </address> <year> 1989. </year>
Reference: [DM90] <author> F. Dignum and J.-J.Ch. Meyer. </author> <title> Negations of transactions and their use in the specification of dynamic and deontic integrity constraints. </title> <editor> In M. Kwiatkowska, M.W. Shields, and R.M. Thomas, editors, </editor> <title> Semantics for Concurrency, </title> <booktitle> Leicester 1990, </booktitle> <pages> pages 61-80, </pages> <address> Berlin, 1990. </address> <publisher> Springer. </publisher> <pages> 20 </pages>
Reference-contexts: In section 4, we discuss a possible refinement of the theory based on the previous sections, by introducing contexts of actions. Finally, in section 5, we draw some conclusions and point out some topics for future research. 2 Interpretation for actions in logic 2.1 Introduction In <ref> [Mey88, DM90, Dig92] </ref> the standard interpretation of an action expression was given in an open sense, i.e. if an action expression is used it means informally that the action denoted by that action expression occurs, possibly in combination with other actions. The reason for this is twofold. <p> The second reason is that it facilitates the definition of the parallel execution as well as the negation of an action, which is needed in this approach to model obligation. See <ref> [DM90] </ref> for more explanation on this topic. We will keep this "standard" interpretation of an action expression, but we will add an operator to indicate that an action can only be performed in isolation. This operator is (quite obviously) called the "only" operator.
Reference: [Dig92] <author> F. Dignum. </author> <title> Using transactions in integrity constraints. </title> <booktitle> Workshop on Applied Logic, </booktitle> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: In section 4, we discuss a possible refinement of the theory based on the previous sections, by introducing contexts of actions. Finally, in section 5, we draw some conclusions and point out some topics for future research. 2 Interpretation for actions in logic 2.1 Introduction In <ref> [Mey88, DM90, Dig92] </ref> the standard interpretation of an action expression was given in an open sense, i.e. if an action expression is used it means informally that the action denoted by that action expression occurs, possibly in combination with other actions. The reason for this is twofold. <p> A discussion of the other operators (especially obligation) can be found at several places in the literature <ref> [Mey88, WM93, Mey92, WMW89, Dig92] </ref>. The definition above states that ff is permitted if there is a way to do ff such that it does not lead to a violation state (a state in which the special proposition V iolation is true).
Reference: [Gam91a] <author> L.T.F. Gamut. </author> <title> Logic, Language and Meaning 1: Introduction to Logic. </title> <publisher> University of Chicago Press, </publisher> <year> 1991. </year> <note> L.T.F. Gamut is a pseudonym for J.F.A.K. </note> <editor> van Benthem, J. Groenendijk, D. de Jongh, M. Stokhof, and H. </editor> <publisher> Verkuyl. </publisher>
Reference-contexts: j= [f ire a gun]:V iolation ! [f ire a gun & aim at the president]:V iolation ) j= P s (f ire a gun) ! P s (f ire a gun & aim at the president) Given our strong interpretation of the permission, using the prudential assumption of Grice <ref> [Gam91a, Gam91b] </ref> about the maxims of communication, what we actually mean by: It is permitted to fire a gun is more appropriately represented as: P s (only (f ire a gun)) This permission does still imply permissions like P s (only (f ire a gun) & shoot the president) P s
Reference: [Gam91b] <author> L.T.F. Gamut. </author> <title> Logic, Language and Meaning 2: Intensional Logic and Logical Grammar. </title> <publisher> University of Chicago Press, </publisher> <year> 1991. </year> <note> L.T.F. Gamut is a pseudonym for J.F.A.K. </note> <editor> van Benthem, J. Groenendijk, D. de Jongh, M. Stokhof, and H. </editor> <publisher> Verkuyl. </publisher>
Reference-contexts: j= [f ire a gun]:V iolation ! [f ire a gun & aim at the president]:V iolation ) j= P s (f ire a gun) ! P s (f ire a gun & aim at the president) Given our strong interpretation of the permission, using the prudential assumption of Grice <ref> [Gam91a, Gam91b] </ref> about the maxims of communication, what we actually mean by: It is permitted to fire a gun is more appropriately represented as: P s (only (f ire a gun)) This permission does still imply permissions like P s (only (f ire a gun) & shoot the president) P s
Reference: [Har79] <author> D. Harel. </author> <title> First Order Dynamic Logic. </title> <publisher> Springer, </publisher> <year> 1979. </year> <note> Lecture Notes in Computer Science 68. </note>
Reference-contexts: The action logic used by these authors is some variant of dynamic logic <ref> [Har79, KT90] </ref>. Meyer [Mey87, Mey88] showed how this approach can avoid many of the paradoxes of standard deontic logic.
Reference: [Hil81] <author> R. </author> <title> Hilpinen. Conditionals in possible worlds. </title> <editor> In G. Flstad, editor, </editor> <title> Contemporary Philosophy, a New Survey, </title> <booktitle> vol.1, </booktitle> <pages> pages 299-335. </pages> <publisher> Reidel, </publisher> <year> 1981. </year>
Reference-contexts: Thus Kamp allows expressions like P K (F p _ F q) and P K F (p _ q), where the permission operator P K resembles Von Wright's P s . The former expression entails P K F p, the latter does not. As Hilpinen <ref> [Hil81] </ref> remarks, F can be regarded as an operator that selects the class of possible ways that are permitted in order to establish the result given as its argument. fl Eindhoven University of Technology, Dept. of Mathematics and Computer Science, P.O.box 513, 5600 MB Eindhoven, The Netherlands, tel.+31-40-474426, fax. +31-40-436685, e-mail:
Reference: [Kam73] <author> H. Kamp. </author> <title> Free choice permission. </title> <booktitle> Aristotelian Society Proceedings N.S., vol.74, </booktitle> <pages> pages 57-74, 1973-1974. </pages>
Reference-contexts: Kamp <ref> [Kam73] </ref> proposes to introduce a focus operator F , that keeps track of the disjuncts that are permitted in disjunctive permission.
Reference: [KM87] <author> S. Khosla and T.S.E. Maibaum. </author> <title> The prescription and description of state based systems. </title> <editor> In B. Banieqbal, H. Barringer, and A. Pnueli, editors, </editor> <booktitle> Temporal Logic in Specification, </booktitle> <pages> pages 243-294. </pages> <publisher> Springer, </publisher> <year> 1987. </year> <note> Lecture Notes in Computer Science 398. </note>
Reference-contexts: He proposes to distinguish practitions from assertions and to apply deontic operators to practitions rather than assertions. Interpreting this as a distinction between actions and states, McCarty [McC83], Khosla and Maibaum <ref> [KM87] </ref> and Meyer [Mey88] independently produced formalizations of deontic action logic, in which actions are distinguished from states and deontic operators apply to actions, not states. The action logic used by these authors is some variant of dynamic logic [Har79, KT90].
Reference: [KT90] <author> D. Kozen and J. Tiuryn. </author> <title> Logics of programs. </title> <editor> In Jan van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, </booktitle> <pages> pages 789-840. </pages> <publisher> Elsevier Science Publishers, </publisher> <year> 1990. </year>
Reference-contexts: The action logic used by these authors is some variant of dynamic logic <ref> [Har79, KT90] </ref>. Meyer [Mey87, Mey88] showed how this approach can avoid many of the paradoxes of standard deontic logic.
Reference: [McC83] <author> L.T. McCarty. </author> <title> Permissions and obligations. </title> <booktitle> In Proceedings of the Eighth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 287-294, </pages> <address> Karlsruhe, </address> <publisher> W. </publisher> <address> Germany, 1983. </address> <publisher> Kaufmann. </publisher>
Reference-contexts: He proposes to distinguish practitions from assertions and to apply deontic operators to practitions rather than assertions. Interpreting this as a distinction between actions and states, McCarty <ref> [McC83] </ref>, Khosla and Maibaum [KM87] and Meyer [Mey88] independently produced formalizations of deontic action logic, in which actions are distinguished from states and deontic operators apply to actions, not states. The action logic used by these authors is some variant of dynamic logic [Har79, KT90]. <p> If ff is weakly permitted, there is at least one way of doing it that does not lead to a violation. If it is strongly permitted, then no ways of doing it lead to a violation. Similar operators have been introduced by McCarty <ref> [McC83, McC86] </ref> and Segerberg [Seg82]. We will show that, by introducing contexts in which actions take place, the problem with strong permission mentioned at the beginning of this paper can be avoided.
Reference: [McC86] <author> L.T. McCarty. Permissions and obligations: </author> <title> An informal introduction. </title> <editor> In A.A. Martino and F.S. Natali, editors, </editor> <booktitle> Automated Analysis of Legal Texts, </booktitle> <pages> pages 307-337. </pages> <publisher> North-Holland, </publisher> <year> 1986. </year> <booktitle> Edited versions of selected papers from the Second International Conference on Logic, Informatics, Law, </booktitle> <address> Florence, Italy, </address> <month> September </month> <year> 1985. </year>
Reference-contexts: If ff is weakly permitted, there is at least one way of doing it that does not lead to a violation. If it is strongly permitted, then no ways of doing it lead to a violation. Similar operators have been introduced by McCarty <ref> [McC83, McC86] </ref> and Segerberg [Seg82]. We will show that, by introducing contexts in which actions take place, the problem with strong permission mentioned at the beginning of this paper can be avoided.
Reference: [Mey87] <author> J.-J.Ch. Meyer. </author> <title> A simple solution to the `deepest' paradox in deontic logic. </title> <journal> Logique et Analyse, Nouvelle Serie, </journal> <volume> vol.30, </volume> <pages> pages 81-90, </pages> <year> 1987. </year>
Reference-contexts: The action logic used by these authors is some variant of dynamic logic [Har79, KT90]. Meyer <ref> [Mey87, Mey88] </ref> showed how this approach can avoid many of the paradoxes of standard deontic logic. <p> The formulas are introduced in the set Form as abbreviations as follows: * F (ff) abbreviates [ff]V iolation * O (ff) abbreviates F (ff) * P (ff) abbreviates :F (ff) For an extensive account of the adequacy of these abbreviations we refer to <ref> [Mey88, Mey87, WWMD91] </ref>; here it suffices to note that e.g. the claim that it is forbidden to do the action denoted by ff is equated with the dynamic logic expression [ff]V iolation, stating that performing the action denoted by ff leads to a violation state (i.e., a state in which a
Reference: [Mey88] <author> J.-J.Ch. Meyer. </author> <title> A different approach to deontic logic: Deontic logic viewed as a variant of dynamic logic. </title> <journal> Notre Dame Journal of Formal Logic, </journal> <volume> vol.29, </volume> <pages> pages 109-136, </pages> <year> 1988. </year>
Reference-contexts: He proposes to distinguish practitions from assertions and to apply deontic operators to practitions rather than assertions. Interpreting this as a distinction between actions and states, McCarty [McC83], Khosla and Maibaum [KM87] and Meyer <ref> [Mey88] </ref> independently produced formalizations of deontic action logic, in which actions are distinguished from states and deontic operators apply to actions, not states. The action logic used by these authors is some variant of dynamic logic [Har79, KT90]. <p> The action logic used by these authors is some variant of dynamic logic [Har79, KT90]. Meyer <ref> [Mey87, Mey88] </ref> showed how this approach can avoid many of the paradoxes of standard deontic logic. <p> In section 4, we discuss a possible refinement of the theory based on the previous sections, by introducing contexts of actions. Finally, in section 5, we draw some conclusions and point out some topics for future research. 2 Interpretation for actions in logic 2.1 Introduction In <ref> [Mey88, DM90, Dig92] </ref> the standard interpretation of an action expression was given in an open sense, i.e. if an action expression is used it means informally that the action denoted by that action expression occurs, possibly in combination with other actions. The reason for this is twofold. <p> The semantics of action expressions is based on (sets of) so-called events. (In fact, we shall use even sets of sets of events, but we shall see this shortly.) The semantics that we shall give here is a simplified version of the one used in <ref> [Mey88] </ref>. The simplification is based on the fact that we do not consider sequences of actions in this paper. The extension to sequences of actions can be easily made, but would obscure the points that we try to make in this paper. <p> This language is a variant of dynamic logic ([Har79]), and was first used for this purpose in <ref> [Mey88] </ref>. We assume a fixed set Prop of atomic propositions, including a special element V iolation, denoting (a state of) violation. The set Form of formulae is then the smallest set closed under: (1). Prop Form (2). <p> The formulas are introduced in the set Form as abbreviations as follows: * F (ff) abbreviates [ff]V iolation * O (ff) abbreviates F (ff) * P (ff) abbreviates :F (ff) For an extensive account of the adequacy of these abbreviations we refer to <ref> [Mey88, Mey87, WWMD91] </ref>; here it suffices to note that e.g. the claim that it is forbidden to do the action denoted by ff is equated with the dynamic logic expression [ff]V iolation, stating that performing the action denoted by ff leads to a violation state (i.e., a state in which a <p> The definition of the deontic operators, as is standard for this kind of approach and as given in the previous section (cf. <ref> [Mey88, WMW89, WM93, Mey92] </ref>), is as follows: O (ff)=[ff]V iolation F (ff)=[ff]V iolation P (ff)=:F (ff) =:[ff]V iolation 11 We will only discuss the definition of the permission operator at this place. <p> A discussion of the other operators (especially obligation) can be found at several places in the literature <ref> [Mey88, WM93, Mey92, WMW89, Dig92] </ref>. The definition above states that ff is permitted if there is a way to do ff such that it does not lead to a violation state (a state in which the special proposition V iolation is true). <p> The fact that strong permission and prohibition are not complementary in our system also influences the following implication that holds in all the deontic systems that are defined in terms of dynamic logic as is done in <ref> [Mey88] </ref>. j= O (ff) ^ :P (ff) ! F (any) Which means that if an action is obliged and at the same time not permitted then it is forbidden to do anything.
Reference: [Mey90] <author> J.-J.Ch. Meyer. </author> <title> Using Programming Concepts in Deontic Reasoning. </title> <editor> In R. Bartsch, J. van Benthem, and P. van Emde Boas, editors, </editor> <booktitle> Semantics and Contextual Expression, </booktitle> <pages> pages 117-145, </pages> <publisher> Foris, </publisher> <address> Dordrecht, </address> <year> 1989. </year>
Reference: [Mey92] <author> J.-J.Ch. Meyer. </author> <title> Free Choice Permissions and Ross's Paradox: Internal vs. External Nondeterminism. </title> <editor> In C.P.Dekker and M.Stockhof, editors, </editor> <booktitle> Proceedings 8th. </booktitle> <address> Amsterdam Collloquium,pages 367-380, </address> <institution> University of Amsterdam, </institution> <year> 1992. </year>
Reference-contexts: However, the paradox of free choice permission still remains, except that it now has the form P (ff) ! P (ff + fi), where ff and fi denote actions and + is a choice operator. It was suggested by Meyer and Wieringa <ref> [Mey92, WM93] </ref> that the paradox could be avoided by distinguishing active from passive choice, denoted by and +, respectively. <p> The definition of the deontic operators, as is standard for this kind of approach and as given in the previous section (cf. <ref> [Mey88, WMW89, WM93, Mey92] </ref>), is as follows: O (ff)=[ff]V iolation F (ff)=[ff]V iolation P (ff)=:F (ff) =:[ff]V iolation 11 We will only discuss the definition of the permission operator at this place. <p> A discussion of the other operators (especially obligation) can be found at several places in the literature <ref> [Mey88, WM93, Mey92, WMW89, Dig92] </ref>. The definition above states that ff is permitted if there is a way to do ff such that it does not lead to a violation state (a state in which the special proposition V iolation is true).
Reference: [Seg82] <author> K. Segerberg. </author> <title> A deontic logic of action. </title> <journal> Studia Logica, vol.41, </journal> <volume> pp.269-282, </volume> <year> 1982. </year> <month> 21 </month>
Reference-contexts: If ff is weakly permitted, there is at least one way of doing it that does not lead to a violation. If it is strongly permitted, then no ways of doing it lead to a violation. Similar operators have been introduced by McCarty [McC83, McC86] and Segerberg <ref> [Seg82] </ref>. We will show that, by introducing contexts in which actions take place, the problem with strong permission mentioned at the beginning of this paper can be avoided. <p> We will now discuss each of these three issues. 12 3.1 Permission to fail The new, strong definition for the permission operator implies that fail is also permitted. Actually Segerberg <ref> [Seg82] </ref> defines a strong permission starting with the permission to fail as the central property.
Reference: [WMW89] <author> R. Wieringa, J.-J.Ch. Meyer, and H. Weigand. </author> <title> Specifying dynamic and deontic integrity constraints in knowledge bases. </title> <journal> Data & Knowledge Engineering, </journal> <volume> vol.4, </volume> <pages> pages 157-189, </pages> <year> 1989. </year>
Reference-contexts: The definition of the deontic operators, as is standard for this kind of approach and as given in the previous section (cf. <ref> [Mey88, WMW89, WM93, Mey92] </ref>), is as follows: O (ff)=[ff]V iolation F (ff)=[ff]V iolation P (ff)=:F (ff) =:[ff]V iolation 11 We will only discuss the definition of the permission operator at this place. <p> A discussion of the other operators (especially obligation) can be found at several places in the literature <ref> [Mey88, WM93, Mey92, WMW89, Dig92] </ref>. The definition above states that ff is permitted if there is a way to do ff such that it does not lead to a violation state (a state in which the special proposition V iolation is true).
Reference: [WWMD91] <author> R. Wieringa, H. Weigand, J.-J.Ch. Meyer, and F. Dignum. </author> <title> The inheritance of dynamic and deontic integrity constraints. </title> <booktitle> In Annals of Mathematics and Artificial Intelligence 3, </booktitle> <pages> pages 393-428. </pages> <publisher> Baltzer A.G., </publisher> <year> 1991. </year>
Reference-contexts: The formulas are introduced in the set Form as abbreviations as follows: * F (ff) abbreviates [ff]V iolation * O (ff) abbreviates F (ff) * P (ff) abbreviates :F (ff) For an extensive account of the adequacy of these abbreviations we refer to <ref> [Mey88, Mey87, WWMD91] </ref>; here it suffices to note that e.g. the claim that it is forbidden to do the action denoted by ff is equated with the dynamic logic expression [ff]V iolation, stating that performing the action denoted by ff leads to a violation state (i.e., a state in which a
Reference: [WM93] <author> R.J. Wieringa and J.-J.Ch. Meyer. </author> <title> Actors, Actions and Initiative in Normative System Specification. </title> <booktitle> In Annals of Mathematics and Artificial Intelligence,Vol 7, </booktitle> <pages> pages 289-346, </pages> <year> 1993. </year>
Reference-contexts: However, the paradox of free choice permission still remains, except that it now has the form P (ff) ! P (ff + fi), where ff and fi denote actions and + is a choice operator. It was suggested by Meyer and Wieringa <ref> [Mey92, WM93] </ref> that the paradox could be avoided by distinguishing active from passive choice, denoted by and +, respectively. <p> The definition of the deontic operators, as is standard for this kind of approach and as given in the previous section (cf. <ref> [Mey88, WMW89, WM93, Mey92] </ref>), is as follows: O (ff)=[ff]V iolation F (ff)=[ff]V iolation P (ff)=:F (ff) =:[ff]V iolation 11 We will only discuss the definition of the permission operator at this place. <p> A discussion of the other operators (especially obligation) can be found at several places in the literature <ref> [Mey88, WM93, Mey92, WMW89, Dig92] </ref>. The definition above states that ff is permitted if there is a way to do ff such that it does not lead to a violation state (a state in which the special proposition V iolation is true).
Reference: [Wri51] <author> G.H. von Wright. </author> <title> Deontic logic. Mind, </title> <booktitle> vol.60, </booktitle> <pages> pages 1-15, </pages> <year> 1951. </year>
Reference-contexts: 1 Introduction In the standard system of deontic logic <ref> [Aqv84, Wri51] </ref>, it is a theorem that P (p) ! P (p _ q) which means that if p is permitted then p _ q is also permitted.
Reference: [Wri68] <author> G.H. von Wright. </author> <title> An Essay in Deontic Logic and the General Theory of Action. </title> <journal> Acta Philosophica Fennica, Fasc. </journal> <volume> 21, </volume> <publisher> North-Holland, </publisher> <year> 1968. </year> <month> 22 </month>
References-found: 28

