URL: http://www.cs.man.ac.uk/~kung-kiu/pub/jlp94.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~kung-kiu/pub/
Root-URL: http://www.cs.man.ac.uk
Title: LOGIC PROGRAM SYNTHESIS  
Author: YVES DEVILLE AND KUNG-KIU LAU 
Note: J. LOGIC PROGRAMMING 1993:12:1-199 1  
Abstract: fl This paper presents an overview and a survey of logic program synthesis. Logic program synthesis is interpreted here in a broad way; it is concerned with the following question: given a specification, how do we get a logic program satisfying the specification? Logic programming provides a uniquely nice and uniform framework for program synthesis since the specification, the synthesis process and the resulting program can all be expressed in logic. Three main approaches to logic program synthesis by formal methods are described: constructive synthesis, deductive synthesis and inductive synthesis. Related issues such as correctness and verification as well as synthesis by informal methods are briefly presented. Our presentation is made coherent by employing a unified framework of terminology and notation, and by using the same running example for all the approaches covered. This paper thus intends to provide an assessment of existing work and a framework for future research in logic program syn thesis. 
Abstract-found: 1
Intro-found: 1
Reference: [ABW88.] <author> K.R. Apt, H. Blair, and A. Walker. </author> <title> Towards a theory of declarative knowledge. </title> <editor> In J. Minker, editor, </editor> <booktitle> Foundations of Deductive Databases. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference: [Bal78.] <author> K. Balogh. </author> <title> On an interactive program verifier for Prolog programs. In Colloquia Mathematica Societatis Janos Bolyai 26, </title> <booktitle> Mathematical Logic in Computer Science, Salgotarjan, Hungary, </booktitle> <pages> pages 111-142, </pages> <year> 1978. </year>
Reference: [Bal85.] <author> Robert Balzer. </author> <title> A 15 year perspective on automatic programming. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 11(11) </volume> <pages> 1257-1268, </pages> <month> November </month> <year> 1985. </year>
Reference: [BC85.] <author> Joseph L. Bates and Robert L. Constable. </author> <title> Proofs as programs. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 7(1) </volume> <pages> 113-136, </pages> <month> Jan-uary </month> <year> 1985. </year>
Reference: [BC89.] <author> A. Bossi and N. Cocco. </author> <title> Verifying correctness of logic programs. </title> <booktitle> In Proc. TAPSOFT '89, </booktitle> <volume> LNCS 352, </volume> <pages> pages 96-110. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference: [BCD90.] <author> A. Bossi, N. Cocco, and S. Dulli. </author> <title> A method for specializing logic programs. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 12(2) </volume> <pages> 253-302, </pages> <year> 1990. </year>
Reference: [BF82.] <editor> A. Barr and E.A. Feigenbaum, editors. </editor> <booktitle> The Handbook of Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1982. </year>
Reference: [BGK84.] <author> Alan W. Biermann, Gerard Guiho, and Yves Kodratoff, </author> <title> editors. Automatic Program Construction Techniques. </title> <publisher> Macmillan, </publisher> <year> 1984. </year>
Reference: [BH84.] <author> W. Bibel and K. M. Hornig. </author> <title> LOPS a system based on a strategical approach to program synthesis. </title> <editor> In A. W. Biermann, G. Guiho, and Y. Ko-dratoff, editors, </editor> <title> Automatic program construction techniques, </title> <booktitle> chapter 3, </booktitle> <pages> pages 69-89. </pages> <publisher> MacMillan, </publisher> <year> 1984. </year> <month> 27 </month>
Reference: [Bie92.] <author> A. W. Biermann. </author> <title> Automatic programming. </title> <editor> In S. C. Shapiro, editor, </editor> <booktitle> Encyclopedia of Artificial Intelligence, </booktitle> <pages> pages 59-83. </pages> <publisher> John Wiley, </publisher> <address> second, </address> <note> extended edition, </note> <year> 1992. </year>
Reference: [Bie93.] <author> A.W. Biermann. </author> <type> Personal Communication, </type> <year> 1993. </year>
Reference: [BP90.] <author> Dave Barker-Plummer. </author> <title> Cliche programming in Prolog. </title> <editor> In M. Bruynooghe, editor, </editor> <booktitle> Proceedings of Meta'90, </booktitle> <pages> pages 47-256, </pages> <year> 1990. </year>
Reference: [Bra86.] <author> I. Bratko. </author> <booktitle> PROLOG Programming for Artificial Intelligence. International Computer Science. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1986. </year>
Reference: [BSH90.] <author> A. Bundy, A. Smaill, and J. Hesketh. </author> <title> Turning eureka steps into calculations in automatic program synthesis. </title> <editor> In S.L.H. Clarke, editor, </editor> <booktitle> Proceedings of UK IT 90, </booktitle> <pages> pages 221-226, </pages> <year> 1990. </year>
Reference: [BSK89.] <author> M. Bruynooghe, D. De Schreye, and B. Krekels. </author> <title> Compiling control. </title> <journal> Journal of Logic Programming, </journal> <volume> 6(1-2):135-162, </volume> <year> 1989. </year>
Reference: [BSvH + 91.] <author> A. Bundy, A. Stevens, F. van Harmelen, A. Ireland, and A. Smaill. Rippling: </author> <title> A heuristic for guiding inductive proofs. </title> <note> Research Paper 567, DAI, 1991. Submitted to Artificial Intelligence. </note>
Reference: [BSW90.] <author> A. Bundy, A. Smaill, and G. Wiggins. </author> <title> The synthesis of logic programs from inductive proofs. </title> <editor> In J.W. Lloyd, editor, </editor> <booktitle> Proc. Esprit Symposium on Computational Logic, </booktitle> <pages> pages 135-149. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference: [Bur69.] <author> R.M. Burstall. </author> <title> Proving properties of programs by structural induction. </title> <journal> The Computer Journal, </journal> <volume> 72 </volume> <pages> 41-48, </pages> <year> 1969. </year>
Reference: [Bur74.] <author> R.M. Burstall. </author> <title> Program proving as hand simulation with a little induction. </title> <booktitle> In IFIP 74, </booktitle> <pages> pages 308-312. </pages> <address> Norh Holland, </address> <year> 1974. </year>
Reference: [BvHHS90.] <author> A. Bundy, F. van Harmelen, C. Horn, and A. Smaill. </author> <title> The Oyster-Clam system. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> Proc. 10th International Conference on Automated Deduction, </booktitle> <pages> pages 647-648. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <booktitle> Lecture Notes in Artificial Intelligence No. </booktitle> <pages> 449. </pages>
Reference: [BvHHS91.] <author> A. Bundy, F. van Harmelen, J. Hesketh, and A. Smaill. </author> <title> Experiments with proofs plans for induction. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 7 </volume> <pages> 303-324, </pages> <year> 1991. </year>
Reference: [BvHSI90.] <author> A. Bundy, F. van Harmelen, A. Smaill, and A. Ireland. </author> <title> Extensions to the rippling-out tactic for guiding inductive proofs. In M.E. </title> <editor> Stickel, editor, </editor> <booktitle> Proc. 10th International Conference on Automated Deduction, </booktitle> <pages> pages 132-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year> <booktitle> Lecture Notes in Artificial Intelligence No. </booktitle> <pages> 449. </pages>
Reference: [CD88.] <author> B. Courcelle and P. Deransart. </author> <title> Proofs of partial correctness for attribute grammars with applications to recursive procedures and logic programming. </title> <journal> Information and Computation, </journal> <volume> 78(1) </volume> <pages> 1-55, </pages> <year> 1988. </year>
Reference: [Cet al. 86.] <editor> R.L. Constable and et al. </editor> . <title> Implementing Mathematics with the NuPRL Proof Development System. </title> <publisher> Prentice Hall, </publisher> <year> 1986. </year>
Reference: [Cla79.] <author> K.L. Clark. </author> <title> Predicate logic as a computational formalism. </title> <type> Technical Report 79/59, </type> <institution> Imperial College of Science and Technology, Univ. of London, </institution> <year> 1979. </year>
Reference: [Cla81.] <author> K.L. Clark. </author> <title> The synthesis and verification of logic programs. </title> <type> Technical Report DOC 81/36, </type> <institution> Imperial College, </institution> <month> September </month> <year> 1981. </year> <note> (Revised version of a document which first appeared in 1977). </note>
Reference: [CM84.] <author> W.F. Clocksin and C.S. Mellish. </author> <title> Programming in Prolog. </title> <publisher> Springer Verlag, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1984. </year>
Reference: [CM91.] <author> L. Colussi and E. Marchiori. </author> <title> Proving correctness of logic programs using axiomatic semantics. </title> <editor> In K. Furukawa, editor, </editor> <booktitle> Proceedings of ICLP'91, </booktitle> <pages> pages 629-642. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [CS77.] <author> K.L. Clark and S. Sickel. </author> <title> Predicate logic: A calculus for deriving programs. </title> <booktitle> In Proc. IJCAI-77, </booktitle> <pages> pages 419-420, </pages> <year> 1977. </year> <month> 28 </month>
Reference: [CT77.] <author> K.L. Clark and S.- A. </author> <title> Tarnlund. A first order theory of data and programs. </title> <booktitle> In Proc. IFIP 77, </booktitle> <pages> pages 939-944. </pages> <publisher> North-Holland, </publisher> <year> 1977. </year>
Reference: [Day87.] <author> G. Dayantis. </author> <title> Logic program derivation for a class of first order logic relations. </title> <booktitle> In Proc. IJCAI-87, </booktitle> <pages> pages 9-14, </pages> <year> 1987. </year>
Reference: [DB89.] <author> Y. Deville and J. Burnay. </author> <title> Generalization and program schemata: A step towards computer-aided construction of logic programs. </title> <booktitle> In Proc. North American Conf. on Logic Programming 1989, </booktitle> <pages> pages 409-425. </pages> <publisher> MIT Press, </publisher> <year> 1989. </year>
Reference: [Dev90.] <author> Y. Deville. </author> <title> Logic Programming: Systematic Program Development. </title> <booktitle> International Series in Logic Programming. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference: [DF88.] <author> P. Deransart and G. Ferrand. </author> <title> Logic programming: Methodology and teaching. </title> <editor> In K. Fuchi and L. Kott, editors, </editor> <booktitle> Proc. French Japan Symposium, </booktitle> <pages> pages 133-147, </pages> <month> August </month> <year> 1988. </year>
Reference: [DF89.] <author> P. Deransart and G. Ferrand. </author> <title> A methodological view of logic programming with negation. </title> <type> Technical Report RR 1011, </type> <institution> INRIA, </institution> <month> April </month> <year> 1989. </year>
Reference: [DM87.] <author> W. Drabent and J. Maluszynsky. </author> <title> Inductive assertion method for logic programs. </title> <booktitle> In Proc. TAPSOFT '87, </booktitle> <volume> 2, LNCS 250, </volume> <pages> pages 167-181. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference: [FD92a.] <author> G. Ferrand and P. Deransart. </author> <title> Proof methods of partial correctness and weak completeness for normal logic programs. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of JICSLP'92, </booktitle> <pages> pages 161-174. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference: [FD92b.] <author> P. Flener and Y. Deville. </author> <title> Towards stepwise, schema-guided synthesis of logic programs. In T.P. </title> <editor> Clement and K.K. Lau, editors, </editor> <title> Logic Program Synthesis and Transformation, </title> <booktitle> Workshops in Computing, </booktitle> <pages> pages 46-64. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: [FD93a.] <author> P. Flener and Y. Deville. </author> <title> Synthesis of composition and discriminate operators for divide-and-conquer logic programs. In J.-M. Jacquet, editor, Constructing Logic Programs. </title> <publisher> Wiley & Sons, </publisher> <year> 1993. </year> <month> (forthcoming). </month>
Reference: [FD93b.] <author> Pierre Flener and Yves Deville. </author> <title> Logic program synthesis from incomplete specifications. </title> <journal> Journal of Symbolic Computation: Special Issue on Automatic Programming, </journal> <note> 1993. </note> <author> (W. Bibel and A. W. Biermann Editors), </author> <note> Accepted for publication. </note>
Reference: [Fle93.] <author> P. Flener. </author> <title> Logic Algorithm Synthesis from Examples and properties. </title> <type> PhD thesis, </type> <institution> Unite d'Informatique, Universite Catholique de Louvain, Belgium, </institution> <year> 1993. </year>
Reference: [Fri90.] <author> L. </author> <title> Fribourg. Extracting logic programs from proofs that use extended Prolog execution and induction. </title> <booktitle> In Proc. 7 th Int. Conf. on Logic Programming, </booktitle> <pages> pages 685-699. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [Fri91.] <author> L. </author> <title> Fribourg. Automatic generation of simplification lemmas for inductive proofs. </title> <editor> In V. Saraswat and K. Ueda, editors, </editor> <booktitle> Proc. 1991 Int. Logic Programming Symposium, </booktitle> <pages> pages 103-116. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Fri93.] <author> L. </author> <title> Fribourg. Extracting logic programs that use extended Prolog execution and induction. In J.-M. Jacquet, editor, Constructing Logic Programs. </title> <publisher> Wiley & Sons, </publisher> <year> 1993. </year> <month> (forthcoming). </month>
Reference: [GH89.] <author> T. S. Gegg-Harrison. </author> <title> Basic Prolog schemata. </title> <type> Technical Report CS-1989-20, </type> <institution> Dept. of Computer Science, Duke University, </institution> <year> 1989. </year>
Reference: [GH90.] <author> T. S. Gegg-Harrison. </author> <title> A scheme-based approach to teaching recursive Pro-log programming. </title> <type> Technical Report CS-1990-4, </type> <institution> Dept. of Computer Science, Duke University, </institution> <year> 1990. </year>
Reference: [GKPVC86.] <author> F. Giannesini, H. Kanoui, R. Passero, and M. Van Caneghem. </author> <title> Prolog. </title> <publisher> Addison-Wesley, </publisher> <year> 1986. </year>
Reference: [GL88.] <author> M. Gelfond and V. Lifschitz. </author> <title> The stable model semantics for logic programming. </title> <editor> In B Kowalski and K. Bowen, editors, </editor> <booktitle> Proc. 1988 Int. Logic 29 Programming Symposium, </booktitle> <pages> pages 1070-1080. </pages> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [GLM92.] <author> M. Gabrielli, G. Levi, and M.C. Meo. </author> <title> Observational equivalences for logic programs. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of JICSLP'92, </booktitle> <pages> pages 131-145. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
Reference: [Gol86.] <author> Allen T. Goldberg. </author> <title> Knowledge-based programming: A survey of program design and construction techniques. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 12(7) </volume> <pages> 752-768, </pages> <month> July </month> <year> 1986. </year>
Reference: [Hag90.] <author> Masami Hagiya. </author> <title> Programming by example and proving by example using higher-order unification. </title> <editor> In M. E. Stickel, editor, </editor> <booktitle> Proceedings of CADE'90, </booktitle> <pages> pages 588-602. </pages> <publisher> Springer Verlag LNCS 449, </publisher> <year> 1990. </year>
Reference: [Han80.] <author> A. Hansson. </author> <title> A Formal Development of Programs. </title> <type> PhD thesis, </type> <institution> Dept. of Information Processing and Computer Science and Computer Science, The Royal Institute of Technology and The University of Stockholm, </institution> <year> 1980. </year>
Reference: [Hay86.] <author> S. Hayashi. </author> <title> A system extracting programs from proofs. </title> <booktitle> In 3rd Working Conference on the formal description of programming concepts, </booktitle> <address> Ebberup, Danemark, </address> <year> 1986. </year>
Reference: [HC92.] <author> Jean Henrard and Baudouin Le Charlier. Folon: </author> <title> An environment for declarative construction of logic programs. </title> <editor> In M. Bruynooghe and M. Wirsing, editors, </editor> <booktitle> Proceedings of PLILP'92, </booktitle> <pages> pages 217-231. </pages> <publisher> Springer Verlag LNCS 631, </publisher> <year> 1992. </year>
Reference: [HL78.] <author> G. Huet and B. Lang. </author> <title> Proving and applying program transformations expressed with second-order patterns. </title> <journal> Acta Informatica, </journal> <volume> 11 </volume> <pages> 31-55, </pages> <year> 1978. </year>
Reference: [HL91.] <author> P. Hill and J. Lloyd. </author> <title> The Godel report. </title> <type> Technical Report TR-91-02, </type> <institution> Department of Computer Science, University of Bristol, </institution> <month> March </month> <year> 1991. </year>
Reference: [Hog78.] <author> C.J. </author> <title> Hogger. Program synthesis in predicate logic. </title> <booktitle> In Proc. AISB/GI Conf. on Artificial Intelligence, University of Hamburg, </booktitle> <pages> pages 22-27, </pages> <year> 1978. </year>
Reference: [Hog81.] <author> C.J. </author> <title> Hogger. Derivation of logic programs. </title> <journal> J. ACM, </journal> <volume> 28(2) </volume> <pages> 372-392, </pages> <month> April </month> <year> 1981. </year>
Reference: [Hog84.] <author> C.J. </author> <title> Hogger. Introduction to Logic Programming. </title> <publisher> Academic Press, </publisher> <year> 1984. </year>
Reference: [How80.] <author> W.A. Howard. </author> <title> The formulae-as-type notion of construction. </title> <editor> In J.P. Seldin and J.R. Hindley, editors, </editor> <booktitle> To H.B. Curry; Essays on combinatory logic, lamda calculus and formalism, </booktitle> <pages> pages 479-490. </pages> <publisher> Academic Press, </publisher> <year> 1980. </year>
Reference: [HT79.] <author> A. Hansson and S.- A. </author> <title> Tarnlund. A natural programming calculus. </title> <booktitle> In Proc. IJCAI-79, </booktitle> <pages> pages 348-355, </pages> <year> 1979. </year>
Reference: [Kan86.] <author> T. Kanamori. </author> <title> Soundness and completeness of extended execution for proving properties of Prolog programs. </title> <type> Technical Report TR-175, </type> <institution> ICOT, </institution> <month> May </month> <year> 1986. </year>
Reference: [Kaw91.] <author> T. Kawamura. </author> <title> Derivation of efficient logic programs by synthesizing new predicates. </title> <editor> In V. Saraswat and K. Ueda, editors, </editor> <booktitle> Proc. 1991 Int. Logic Programming Symposium, </booktitle> <pages> pages 611-612. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Kaw92.] <author> T. Kawamura. </author> <title> Logic program synthesis from first order logic specifications. </title> <booktitle> In Proc. Fifth Generation Computer Systems 92, </booktitle> <pages> pages 463-472, </pages> <address> Tokyo, 1992. </address> <publisher> Ohmsha. </publisher>
Reference: [KBB93a.] <author> I. Kraan, D. Basin, and A. Bundy. </author> <title> Logic program synthesis via proof planning. </title> <editor> In K.K. Lau and T. Clement, editors, </editor> <title> Logic Program Synthesis and Transformation, </title> <booktitle> Workshops in Computing, </booktitle> <pages> pages 1-14. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [KBB93b.] <author> I. Kraan, D. Basin, and A. Bundy. </author> <title> Middle-out reasoning for logic program synthesis. </title> <editor> In D.S. Warren, editor, </editor> <booktitle> Proc. 10 th Int. Conf. on Logic Programming, </booktitle> <pages> pages 441-455. </pages> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference: [KF86.] <author> T. Kanamori and H. Fujita. </author> <title> Formulation of induction formulas in verification of Prolog programs. </title> <editor> In J.H. Siekmann, editor, </editor> <booktitle> Proc. *th International Conference on Automated Deduction, </booktitle> <volume> LNCS 225, </volume> <pages> pages 281-299. </pages> <publisher> Springer 30 Verlag, </publisher> <year> 1986. </year>
Reference: [KH87.] <author> T. Kanamori and K. Horiuchi. </author> <title> Construction of logic programs based on generalized unfold/fold rules. </title> <booktitle> In Proc. 4 th Int. Conf. on Logic Programming, Melbourne, </booktitle> <pages> pages 744-768, </pages> <year> 1987. </year>
Reference: [KK88.] <author> T. Kanamori and T. Kawamura. </author> <title> Preservation of stronger equivalence in unfold/fold logic program transformation (ii). </title> <type> Technical Report TR-403, </type> <institution> ICOT, </institution> <month> June </month> <year> 1988. </year>
Reference: [Kre90.] <author> C. </author> <title> Kreitz. Towards a formal theory of program construction. </title> <journal> Revue d'Intelligence Artificielle, </journal> <volume> 4(3) </volume> <pages> 53-79, </pages> <year> 1990. </year>
Reference: [Kre93a.] <author> C. </author> <title> Kreitz. Formal mathematics for verifiably correct program synthesis, 1993. </title> <institution> Forschungsbericht, Technische Hochschule Darmstadt, Germany. </institution>
Reference: [Kre93b.] <author> C. </author> <title> Kreitz. Meta-synthesis | Deriving programs that develop programs, </title> <year> 1993. </year>
Reference: [KS86.] <author> T. Kanamori and H. Seki. </author> <title> Verification of Prolog programs using an extension of execution. </title> <editor> In E. Shapiro, editor, </editor> <booktitle> Proc. 3rd Int. Conf. on Logic Programming, </booktitle> <pages> pages 475-489. </pages> <publisher> Springer-Verlag, </publisher> <year> 1986. </year> <note> LNCS 255. </note>
Reference: [KS90.] <author> M. Kirschenbaum and L. Sterling. </author> <title> Prolog programming using skeletons and techniques. </title> <type> Technical Report TR-90-109, </type> <institution> Center for Automation and Intelligent Systems Research, Case Western Reserve University, </institution> <year> 1990. </year>
Reference: [KS91.] <author> M. Kirschenbaum and L. Sterling. </author> <title> Refinement strategies for inductive learning of simple Prolog programs. </title> <booktitle> In Proceedings of IJCAI'91, </booktitle> <pages> pages 757-761, </pages> <year> 1991. </year>
Reference: [Lak89a.] <author> A. Lakhotia. </author> <title> A Workshop for Developing Logic Programs by Stepwise Enhancement. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Engineering and Science, Case Western Reserve University, </institution> <year> 1989. </year>
Reference: [Lak89b.] <author> Arun Lakhotia. </author> <title> Incorporating `programming techniques' into Prolog programs. </title> <editor> In E. L. Lusk and R. A. Overbeek, editors, </editor> <booktitle> Proceedings of NA-CLP'89, </booktitle> <pages> pages 426-440. </pages> <publisher> MIT Press., </publisher> <year> 1989. </year>
Reference: [Lev91a.] <author> J.M. Lever. </author> <title> Combining induction with resolution in logic programming. </title> <type> Technical Report PhD Thesis, </type> <institution> Dpt. of Computing, Imperial College, Lon-don, </institution> <year> 1991. </year>
Reference: [Lev91b.] <author> J.M. Lever. </author> <title> Proving program properties by means of SLS-resolution. </title> <editor> In K. Furukawa, editor, </editor> <booktitle> Proceedings of ICLP'91, </booktitle> <pages> pages 614-628. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [Llo87.] <author> J. W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1987. </year>
Reference: [LO92.] <author> K.K. Lau and M. Ornaghi. </author> <title> Towards a formal framework for deductive synthesis of logic programs. </title> <type> Technical Report UMCS-92-11-2, </type> <institution> Dept. of Computer Science, University of Manchester, </institution> <month> November </month> <year> 1992. </year>
Reference: [LO93.] <author> K.K. Lau and M. Ornaghi. </author> <title> An incompleteness result for deductive synthesis of logic programs. </title> <editor> In D.S. Warren, editor, </editor> <booktitle> Proc. 10 th Int. Conf. on Logic Programming, </booktitle> <pages> pages 456-477. </pages> <publisher> MIT Press, </publisher> <year> 1993. </year>
Reference: [LO94.] <author> K.K. Lau and M. Ornaghi. </author> <title> A formal view of specification, deductive synthesis and transformation of logic programs. </title> <editor> In Y. Deville, editor, </editor> <title> Logic Program Synthesis and Transformation, Workshops in Computing. </title> <publisher> Springer-Verlag, </publisher> <year> 1994. </year> <booktitle> Proceedings of Third International Workshop on Logic Program Synthesis and Transformation. </booktitle>
Reference: [LP90.] <author> K.K. Lau and S.D. Prestwich. </author> <title> Top-down synthesis of recursive logic procedures from first-order logic specifications. </title> <editor> In D.H.D. Warren and P. Sz-eredi, editors, </editor> <booktitle> Proc. 7 th Int. Conf. on Logic Programming, </booktitle> <pages> pages 667-684. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [LP91.] <author> K.K. Lau and S.D. Prestwich. </author> <title> Synthesis of a family of recursive sorting procedures. </title> <editor> In V. Saraswat and K. Ueda, editors, </editor> <booktitle> Proc. 1991 Int. Logic 31 Programming Symposium, </booktitle> <pages> pages 641-658. </pages> <publisher> MIT Press, </publisher> <year> 1991. </year>
Reference: [LS88.] <author> A. Lakhotia and L. Sterling. </author> <title> Composing recursive logic programs with clausal join. </title> <journal> New Generation Computing, </journal> <volume> 6 </volume> <pages> 211-225, </pages> <year> 1988. </year>
Reference: [LS90.] <author> A. Lakhotia and L. Sterling. </author> <title> Stepwise enhencement: A variant of incremental programming. </title> <booktitle> In Proc. Conf. on Software Engineering, </booktitle> <year> 1990. </year>
Reference: [LWD93.] <author> V. Lombart, G. Wiggins, and Y. Deville. </author> <title> Guiding synthesis proofs. </title> <booktitle> In LOPSTR'93, </booktitle> <year> 1993. </year> <note> Extended Abstract. </note>
Reference: [Mah88.] <author> M.J. Maher. </author> <title> Equivalences of logic programs. </title> <editor> In J. Minker, editor, </editor> <booktitle> Foundations of Deductive Databases and Logic Programming, </booktitle> <pages> pages 627-658. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1988. </year>
Reference: [MR93.] <author> S. Muggleton and L. De Raedt. </author> <title> Inductive logic programming: a survey. </title> <journal> Journal of Logic Programming, </journal> <note> Special Issue on "Ten Years of Logic Programming", 1993. (Submitted). </note>
Reference: [Mug91.] <author> S. Muggleton. </author> <title> Inductive logic programming. </title> <journal> New Generation Computing, </journal> <volume> 8(4) </volume> <pages> 295-317, </pages> <year> 1991. </year>
Reference: [Mug92.] <editor> S. Muggleton, editor. </editor> <booktitle> Inductive Logic Programming. Volume APIC-38, </booktitle> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference: [MW80.] <author> Z. Manna and R. Waldinger. </author> <title> A deductive approach to program synthesis. </title> <journal> ACM Trans. on Programming Languages and Systems, </journal> <volume> 2(1) </volume> <pages> 90-121, </pages> <month> January </month> <year> 1980. </year>
Reference: [Nai87.] <author> L. Naish. </author> <title> Specification = Program + Types. </title> <booktitle> In Proc. FST & TCS. </booktitle> <publisher> Springer-Verlag, LNCS, </publisher> <year> 1987. </year>
Reference: [Nai93.] <author> L. Naish. </author> <title> Verification of logic programs and imperative programs. In J.-M. Jacquet, editor, Constructing Logic Programs. </title> <publisher> Wiley & Sons, </publisher> <year> 1993. </year> <month> (forthcoming). </month>
Reference: [Neu92.] <author> G. Neugebauer. </author> <title> The IO-graph method: Algorithm design and implementation. </title> <note> 1992. Submitted to the Journal of Symbolic Computation. </note>
Reference: [Neu93.] <author> G. Neugebauer. </author> <title> The LOPS approach: A transformation point of view. In K.K. Lau and T.P. Clement, editors, Logic Program Synthesis and Transformation, </title> <booktitle> Workshops in Computing, </booktitle> <pages> pages 80-81. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [O'K90.] <author> R.A. O'Keefe. </author> <title> The Craft of Prolog. Logic Programming Series. </title> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [Plo70.] <author> Gordon D. Plotkin. </author> <title> A note on inductive generalization. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 5, </booktitle> <pages> pages 153-163. </pages> <publisher> Edinburgh University Press, </publisher> <address> Edinburgh (UK), </address> <year> 1970. </year>
Reference: [Plo71.] <author> Gordon D. Plotkin. </author> <title> A further note on inductive generalization. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 6, </booktitle> <pages> pages 101-124. </pages> <publisher> Edinburgh University Press, </publisher> <address> Edinburgh (UK), </address> <year> 1971. </year>
Reference: [Prz88.] <author> T. Przymunsinski. </author> <title> Perfect model semantics. </title> <editor> In B Kowalski and K. Bowen, editors, </editor> <booktitle> Proc. 1988 Int. Logic Programming Symposium, </booktitle> <pages> pages 1081-1096. </pages> <publisher> MIT Press, </publisher> <year> 1988. </year>
Reference: [PS90.] <author> A.J. Power and L. Sterling. </author> <title> A notion of map between logic programs. </title> <booktitle> In Proc. 7 th Int. Conf. on Logic Programming, </booktitle> <pages> pages 390-404. </pages> <publisher> MIT Press, </publisher> <year> 1990. </year>
Reference: [Rey70.] <author> J.C. Reynolds. </author> <title> Transformational systems and the algebraic structure of atomic formulas. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 5, </booktitle> <pages> pages 135-151. </pages> <publisher> Edinburgh University Press, </publisher> <address> Edinburgh (UK)., </address> <year> 1970. </year>
Reference: [RW88.] <author> Charles Rich and Richard C. Waters. </author> <title> Automatic programming: Myths and prospects. </title> <journal> IEEE Computer, </journal> <volume> 21(8) </volume> <pages> 40-51, </pages> <month> August </month> <year> 1988. </year>
Reference: [Sha81.] <author> Ehud Y. Shapiro. </author> <title> An algorithm that infers theories from facts. </title> <booktitle> In Proceedings of IJCAI'81, </booktitle> <pages> pages 446-451, </pages> <year> 1981. </year>
Reference: [Sha83.] <author> Ehud Y. Shapiro. </author> <title> Algorithmic Program Debugging. </title> <publisher> MIT Press, </publisher> <year> 1983. </year> <month> 32 </month>
Reference: [Smi84.] <author> D.R. Smith. </author> <title> The synthesis of LISP programs from examples. </title> <editor> In A. W. Biermann, G. Guiho, and Y. Kodratoff, editors, </editor> <title> Automatic program construction techniques, </title> <booktitle> chapter 15, </booktitle> <pages> pages 307-324. </pages> <publisher> MacMillan, </publisher> <year> 1984. </year>
Reference: [Smi88.] <author> D.R. Smith. </author> <title> The structure and design of global search algorithms. </title> <type> Technical Report KES.U.87.12, </type> <institution> Kestrel Institute, </institution> <address> Palo Alto (CA, USA), </address> <year> 1988. </year>
Reference: [Smi90.] <author> D.R. Smith. KIDS: </author> <title> A semiautomatic program development system. </title> <journal> IEE Trans. on Soft. Engineering, </journal> <volume> 16(9) </volume> <pages> 1024-1043, </pages> <year> 1990. </year>
Reference: [SS86.] <author> L. Sterling and E. Shapiro. </author> <title> The Art of Prolog. </title> <publisher> MIT Press, </publisher> <year> 1986. </year>
Reference: [ST89.] <author> T. Sato and H. Tamaki. </author> <title> First order compiler: A deterministic logic program synthesis algorithm. </title> <journal> J. Symbolic Computation, </journal> <volume> 8 </volume> <pages> 605-627, </pages> <year> 1989. </year>
Reference: [Tin90.] <author> Nancy L. Tinkham. </author> <title> Induction of Schemata for Program Synthesis. </title> <type> PhD thesis, </type> <institution> Duke University, Durham (NC, USA), </institution> <year> 1990. </year>
Reference: [VGRS88.] <author> A. Van Gelder, K. Ross, and J.S. Schlipf. </author> <title> Unfounded sets and well-founded semantics for general logic programs. </title> <booktitle> In Proc. 7th Symposium on Principles of Database Systems, </booktitle> <pages> pages 221-230, </pages> <year> 1988. </year>
Reference: [WBKH92.] <author> G. Wiggins, A. Bundy, I. Kraan, and J. Hesketh. </author> <title> Synthesis and transformation of logic programs from constructive, inductive proof. In T.P. </title> <editor> Clement and K.K. Lau, editors, </editor> <title> Logic Program Synthesis and Transformation, </title> <booktitle> Workshops in Computing, </booktitle> <pages> pages 27-45. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference: [Wig92a.] <author> G.A. Wiggins. </author> <title> Negation and control in automatically generated logic programs. </title> <editor> In A. Pettorossi, editor, </editor> <booktitle> Proceedings of META-92, </booktitle> <year> 1992. </year>
Reference: [Wig92b.] <author> Geraint Wiggins. </author> <title> Synthesis and transformation of logic programs in the whelk proof development system. </title> <editor> In K. Apt, editor, </editor> <booktitle> Proceedings of JIC-SLP'92, </booktitle> <pages> pages 351-365. </pages> <publisher> MIT Press, </publisher> <year> 1992. </year>
References-found: 116

