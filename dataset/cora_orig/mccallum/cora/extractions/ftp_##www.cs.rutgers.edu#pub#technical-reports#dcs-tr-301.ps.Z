URL: ftp://www.cs.rutgers.edu/pub/technical-reports/dcs-tr-301.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Phone: 2  
Title: Schema Correspondences between Objects with Semantic Proximity  
Author: Vipul Kashyap and Amit Sheth 
Address: New Brunswick, NJ 08903  444 Hoes Lane, Piscataway, NJ 08854-4182  
Affiliation: 1 Department of Computer Science, Rutgers University,  Bellcore,  
Abstract: In a multidatabase system, schematic conflicts between two objects are usually of interest only when the objects have some semantic similarity. In this paper we try to reconcile the schematic and semantic perspectives. We introduce a uniform formalism called schema correspondences to represent structural similarities between the objects. We represent the semantic similarities between the objects us ing the concept of semantic proximity. We show how the reconciliation is achieved by illustrating the association of the schema correspondence(s) with and as component(s) of the semantic proximity. We also provide a data model independent semantic taxonomy on the basis of the semantic proximity defined. We then enumerate and classify the schematic and data conflicts. The association between the schema correspondences and semantic proximity helps represent the possible semantic similarities between two objects having these conflicts. One representation of uncertain information using semantic proximity as the basis is explored. Issues of inconsistent information are also discussed in the framework of semantic proximity.
Abstract-found: 1
Intro-found: 1
Reference: [BGMP90] <author> D. Barbara, H. Garcia-Molina, and D. Porter. </author> <title> A Probabilistic Relational Model. </title> <booktitle> Lecture Notes in Computer Science : Advances in Database Technology EDBT '90, </booktitle> <volume> #416, </volume> <year> 1990. </year>
Reference-contexts: Address) Let Domain (STUDENT.Id#) = f123, 456, 789g and Domain (DEPARTMENT.Num) = f321, 654, 987g It is possible to define a Mapping between the domains defined above, but this does not mean that STUDENT.Id# is equivalent to DEPARTMENT.Num A third approach is to use discrete probability distributions to model uncertainty <ref> [BGMP90, TCY93] </ref>. However, probability values are either assigned as a measure of belief or by an analysis of the underlying sample. If the values are assigned as a measure of belief as in [Zad78], then it is necessary to specify an underlying basis for specifying these measures. <p> A 1;1 fi A 1;2 ! A 2;1 fi A 2;2 . Hence, the implicit independence assumption of <ref> [BGMP90] </ref> might not accurately reflect the mappings. * The state (s) or the extensions of the two objects. The semantic proximity described in the previous section is able to capture this information which represents the semantic similarity between two objects according to the Real World Semantics.
Reference: [BOT86] <author> Y. Breitbart, P. Olson, and G. Thompson. </author> <title> Database Integration in a Distributed Heterogeneous Database System. </title> <booktitle> In Proceedings of the 2nd IEEE Conference on Data Engineering, </booktitle> <month> February </month> <year> 1986. </year>
Reference-contexts: While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., [Ken91]) in the database context is scarce. Classification or taxonomies of schematic differences appear in <ref> [DH84, BOT86, CRE87, KLK91, KS91] </ref>. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in [CHS91, SPD92, UW91, GB91]. <p> Conflicts Homonyms Synonyms Union Compatibility Conflicts Schema Isomorphism Conflicts Missing Data Item Conflicts (Semantic Resemblance) (Semantic Incompatibility) (Semantic Equivalence) (Semantic Relationship) (Semantic Relationship) (Semantic Relevance) 8 Data Value Incompatibility Problem This class of conflicts covers those incompatibilities that arise due to the values of the data present in different databases <ref> [BOT86] </ref>, and is different from the default value conflicts and attribute integrity constraint conflicts described in Section 5. The latter type of conflict is due to the definitions of the values of the attribute domains, whereas here we refer to the data values already existing in the database.
Reference: [CHS91] <author> C. Collet, M. N. Huhns, and W. Shen. </author> <title> Resource Integration using a Large Knowledge Base in Carnot. </title> <booktitle> IEEE Computer, </booktitle> <month> December </month> <year> 1991. </year>
Reference-contexts: In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in <ref> [CHS91, SPD92, UW91, GB91] </ref>. However, purely schematic considerations do not suffice to determine the similarity between objects [FKN91][SG89]. <p> Thus, a point in the structural space (structural schema correspondence) can correspond to several points in the semantic space (semantic proximity). This is illustrated by an example in section 4.5.2. 3.1 Previous approaches to represent Structural Similarities In the Carnot project <ref> [CHS91] </ref> during the schema representation phase, the schema of an information resource is represented in the formalism of the global schema.
Reference: [CRE87] <author> B. Czejdo, M. Rusinkiewicz, and D. Embley. </author> <title> An approach to Schema Integration and Query Formulation in Federated Database Systems. </title> <booktitle> In Proceedings of the 3rd IEEE Conference on Data Engineering, </booktitle> <month> February </month> <year> 1987. </year>
Reference-contexts: While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., [Ken91]) in the database context is scarce. Classification or taxonomies of schematic differences appear in <ref> [DH84, BOT86, CRE87, KLK91, KS91] </ref>. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in [CHS91, SPD92, UW91, GB91]. <p> The remaining sections deal with a broad class of schematic differences. We first define the schema correspondences between the objects having those differences. They are associated with and are a part of the definition of the semantic proximity between the objects. Section 5 deals with the domain incompatibility problem <ref> [CRE87] </ref> which arises when attributes have different domain definitions. Section 6 discusses the entity definition incompatibility problem [CRE87] which arises when the entity descriptors used for the same entity are partially compatible. <p> They are associated with and are a part of the definition of the semantic proximity between the objects. Section 5 deals with the domain incompatibility problem <ref> [CRE87] </ref> which arises when attributes have different domain definitions. Section 6 discusses the entity definition incompatibility problem [CRE87] which arises when the entity descriptors used for the same entity are partially compatible. Section 8 deals with the abstraction level incompatibility problem [DH84] which arises when the same entity is represented at different levels of abstraction. <p> It is a generalization of the connectors proposed in <ref> [CRE87] </ref>. This uniform formalism may involve mappings between the domains of these objects. The key aspect of our approach is that the schema correspondences so defined are associated with and are components of the semantic proximity defined in the previous section. <p> This formalism is a generalization of the concept of connectors used to augment the relational model in <ref> [CRE87] </ref>. <p> A broad definition of this incompatibility was given in <ref> [CRE87] </ref>. We examine in detail the aspects in which two attribute domain definitions can differ and give a comprehensive enumeration of the resulting types of incompatibilities. Some of these aspects have been identified in [DAODT85]. <p> A broad definition of this class of conflicts was given in <ref> [CRE87] </ref>. Here we examine in detail the scenarios in which the entity definitions of semantically similar entities might conflict to give a more precise and comprehensive enumeration of this class of conflicts.
Reference: [DAODT85] <author> S. Deen, R. Amin, G. Ofori-Dwumfuo, and M. Taylor. </author> <title> The architecture of a Generalised Distributed Database System PRECI*. </title> <journal> IEEE Computer, </journal> <volume> 28(4), </volume> <year> 1985. </year>
Reference-contexts: However these assertions do not give us the mappings between the various elements involved in the assertions. They are also not able to capture the correspondences between the values of a schema element in one database and the schema elements in other databases <ref> [DAODT85, KLK91] </ref>. 7 3.2 Schema Correspondences as a uniform formalism We propose a uniform formalism to represent the mappings which are generated to represent the structural similarities between objects having schematic conflicts and some semantic affinity. <p> A broad definition of this incompatibility was given in [CRE87]. We examine in detail the aspects in which two attribute domain definitions can differ and give a comprehensive enumeration of the resulting types of incompatibilities. Some of these aspects have been identified in <ref> [DAODT85] </ref>. For each enumerated conflict, we specify the schema correspondence in association with and as a component of the semantic proximity. 6.1 Naming Conflicts Two attributes that are semantically alike might have different names. They are known as synonyms. <p> SALARY 2 , , &gt; where is a total 1-1 value mapping defined as, : SALARY 1 $ SALARY 2 In this case SALARY 2 = (SALARY 1 ) = 2 fi SALARY 1 6.4 Data Precision Conflicts Two attributes that are semantically similar might be represented using different precisions <ref> [DAODT85] </ref>. This case is different from the previous case in that there may not be one-one mapping between the values of the domains. There may be a many-one mapping from the domain of the precise attribute to the domain of the coarse attribute. <p> (D 1 , D 2 ), &gt; where Abstraction is expressed in the schema correspondence, &lt; SHIP, fId#, Weightg, CONVOY, fId#, AvgWeightg, &gt; where is a partial many-one mapping defined as, : SHIP.Id#, fi Weight ! CONVOY.Id# fi AvgWeight 10 Schematic Discrepancies Problem This class of conflicts was discussed in <ref> [DAODT85, KLK91] </ref>. It was noted that these conflicts can take place within the same data model and arise when data in one database correspond to metadata of another database. This class of conflicts is similar to that discussed in Section 6 when the conflicts depend on the database state.
Reference: [DeM89] <author> L. DeMichiel. </author> <title> Resolving Database Incompatibility : An approach to performing Relational Operations over Mismatched Domains. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 1(4), </volume> <year> 1989. </year>
Reference-contexts: Thus, these factors could form a basis for assignment of 15 the fuzzy strengths. Another approach has been that of using partial values and maybe tuples <ref> [DeM89] </ref> using the framework of 3-valued logic. In this approach, the partial and maybe information has a more formal basis, i.e., a value mapping between the domains of the objects.
Reference: [DH84] <author> U. Dayal and H. Hwang. </author> <title> View definition and Generalization for Database Integration of a Multidatabase System. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 10(6), </volume> <month> November </month> <year> 1984. </year> <month> 36 </month>
Reference-contexts: Three of the best known approaches to deal with multiple databases are tightly coupled federation, loosely-coupled federation, and interdependent data management [SL90][She91a]. A critical task in creating a tightly-coupled federation is that of schema integration (e.g., <ref> [DH84] </ref>). A critical task in accessing data in a loosely-coupled federation [LA86, HM85] is to define a view over multiple databases or to define a query using a multidatabase language. A critical task in interdependent data management is to define multidatabase interdependencies [RSK91]. <p> While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., [Ken91]) in the database context is scarce. Classification or taxonomies of schematic differences appear in <ref> [DH84, BOT86, CRE87, KLK91, KS91] </ref>. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in [CHS91, SPD92, UW91, GB91]. <p> Section 5 deals with the domain incompatibility problem [CRE87] which arises when attributes have different domain definitions. Section 6 discusses the entity definition incompatibility problem [CRE87] which arises when the entity descriptors used for the same entity are partially compatible. Section 8 deals with the abstraction level incompatibility problem <ref> [DH84] </ref> which arises when the same entity is represented at different levels of abstraction. <p> S 2 = (S 1 ) = perturb (S 1 , *) where * is the discrepancy in the state of the two objects. 30 9 Abstraction Level Incompatibility Problem This class of conflicts was first discussed in <ref> [DH84] </ref> in the context of the functional model. These incompatibilities arise when two semantically similar entities are represented at differing levels of abstraction. Differences in abstraction can arise due to the different levels of generality at which an entity is represented in the database.
Reference: [ELN86] <author> R. Elmasri, J. Larson, and S. Navathe. </author> <title> Schema Integration Algorithms for Federated Databases and Logical Database Design. </title> <type> Technical report, </type> <institution> Honeywell Corporate Systems Develpment Division, Golden Valley, MN, </institution> <year> 1986. </year>
Reference-contexts: Our definition is also intensional in nature, and differs from the extensional definition of Elmasri et al. <ref> [ELN86] </ref> who define RWS of an object to be the set of real world objects it represents. 3 REAL WORLD Model World 1 Model World 2 Context Context ( O ) Context ( O ) O O 1 2 semPro ( O 1 2 is semantically closer than semantic relationship, and <p> One approach has been to group attributes in a taxonomy of equivalence classes <ref> [ELN86, ME84] </ref> or a subtype hierarchy [SG89][SM92] and specify object relationships based on assertions among attributes. Another approach has been to annotate attributes or objects with a set of concepts from a global concept space [YSDK91] and determine the object relationships based on the concepts they are related to. <p> We show how some of the proposed heuristics used for assignment of fuzzy strengths to the relationships can be simulated using the semantic proximities and by defining an appropriate uncertainty function. 5.3.1 The heuristic of % of common attributes This is a very simple heuristic <ref> [ELN86] </ref> to represent using the semantic proximity. It is a heuristic which essentially exploits the structural similarity between two entities. The uncertainty function will be independent of the context (s) and the states of the objects.
Reference: [EN89] <author> R. Elmasri and S. Navathe. </author> <title> Fundamentals of Database Systems. </title> <address> Ben-jamin/Cummins, </address> <year> 1989. </year>
Reference-contexts: In this case, the user may be presented with extensions of both the objects. In order to express this type of semantic similarity, we introduce an aspect of context, which we call role, by extending the concept of role defined in <ref> [EN89] </ref>. Semantic resemblance is defined in detail in section 4.5.2. 12 4.5.1 Role played by an object in a context This refers to the relationship between an object and the semantic context to which it belongs. <p> Student 1 .Name $ Student 2 .Id# fi Student 2 .Name The uncertainty function is then given as : (Student 1 , Student 2 ) = jfId#;Namegjfi100 jfId#;Name;Gradegj 5.3.2 The heuristic of instance participation This heuristic uses the concept of the cardinality constraints of the entities participating in the mappings <ref> [EN89, VH91] </ref> to define the uncertainty function. Although this function expresses more semantic information than the previous one, it is independent of the context (s) of the two objects. Using the concept of cardinality constraints, we can define the uncertainty function as follows.
Reference: [FKN91] <author> P. Fankhauser, M. Kracker, and E. Neuhold. </author> <title> Semantic vs. Structural resemblance of Classes. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multidatabases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: We address some of the issues of uncertainty and inconsistency. In Section 4, we describe fuzzy terminological relationships <ref> [FKN91] </ref> by expressing the fuzzy strengths as a function of the semantic proximity between two objects. Section 7 addresses the data value incompatibility problem which arises out of the inconsistency between related data and the semantic similarities possible between inconsistent data. <p> One approach has been to determine the similarity of objects using fuzzy and incomplete terminological knowledge <ref> [FKN91] </ref> together with schema knowledge. The difficulty of this approach is that the assignment of fuzzy strengths is based on intuition, and albeit arbitrary.
Reference: [GB91] <author> D. Gangopadhyay and T. Barsalou. </author> <title> On the Semantic Equivalence of Heterogeneous Representations in Multimodel Multidatabase Systems. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multidatabases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in <ref> [CHS91, SPD92, UW91, GB91] </ref>. However, purely schematic considerations do not suffice to determine the similarity between objects [FKN91][SG89]. <p> Also identifying an object as a relation/entity/class may not be necessary as we are interested in a data-model independent manner of representing structural object correspondences. There have been various model describing techniques to represent object correspondences <ref> [GB91, UW91] </ref>. One approach has been to use a higher order language like M (DM)- L [GB91] to define metatypes which formalize the syntax and semantics of a data model construct by a collection of second order logic formulae. <p> There have been various model describing techniques to represent object correspondences [GB91, UW91]. One approach has been to use a higher order language like M (DM)- L <ref> [GB91] </ref> to define metatypes which formalize the syntax and semantics of a data model construct by a collection of second order logic formulae. Two types are equivalent if the corresponding sets of second-order formulae are logically equivalent.
Reference: [Guh90] <author> R. V. Guha. </author> <title> Micro-theories and Contexts in Cyc Part I : Basic Issues. </title> <type> Technical Report ACT-CYC-129-90, </type> <institution> Microelectronics and Computer Technology Corporation, Austin TX, </institution> <month> June </month> <year> 1990. </year>
Reference-contexts: contexts associated with the external schemas to be subcontexts of the context associated with the appropriate federated schema. * At a very elementary level, a context can be thought of as a named collection of the domains of the Objects. * When using a well defined ontology, such as Cyc <ref> [Guh90] </ref>, a well defined partition (called Microtheory) of the ontology can be assigned a context. * Sometimes a context can be "hard-coded" into the definition of an object. For example, when we have the two entities EMPLOYEE and TELECOMM-EMPLOYEE, the TELECOMMUNICATIONS context is "hard-coded" in the second entity.
Reference: [HM85] <author> D. Heimbigner and D. McLeod. </author> <title> A federated architecture for Information Systems. </title> <journal> ACM Transactions on Office Information Systems, </journal> <volume> 3,3, </volume> <year> 1985. </year>
Reference-contexts: Three of the best known approaches to deal with multiple databases are tightly coupled federation, loosely-coupled federation, and interdependent data management [SL90][She91a]. A critical task in creating a tightly-coupled federation is that of schema integration (e.g., [DH84]). A critical task in accessing data in a loosely-coupled federation <ref> [LA86, HM85] </ref> is to define a view over multiple databases or to define a query using a multidatabase language. A critical task in interdependent data management is to define multidatabase interdependencies [RSK91].
Reference: [HM93] <author> J. Hammer and D. McLeod. </author> <title> An approach to resolving Semantic Heterogeneity in a Federation of Autonomous, Heterogeneous, Database Systems. </title> <journal> International Journal of Intelligent and Cooperative Information Systems., </journal> <month> March </month> <year> 1993. </year>
Reference-contexts: Thus we establish uncertainty and inconsistency as aspects of semantics. Work is in progress on the following research issues : * We have demonstrated the reconciliation of the schematic and semantic perspectives. The development of resolution techniques for schematic conflicts <ref> [KCGS93, HM93] </ref> is complementary to the discussion in this paper.
Reference: [KCGS93] <author> W. Kim, I. Choi, S. Gala, and M. Scheevel. </author> <title> On resolving Schematic Heterogeneity in Multidatabase Systems. Distributed and Parallel Databases, </title> <journal> An International Journal, </journal> <volume> 1(3), </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: Thus we establish uncertainty and inconsistency as aspects of semantics. Work is in progress on the following research issues : * We have demonstrated the reconciliation of the schematic and semantic perspectives. The development of resolution techniques for schematic conflicts <ref> [KCGS93, HM93] </ref> is complementary to the discussion in this paper.
Reference: [Ken91] <author> W. Kent. </author> <title> The breakdown of the Information Model in Multidatabase Systems. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multidatabases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: In this paper, we are interested in the dual perspective that emphasizes both the semantic similarities and the schematic (representational/ structural) differences. While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., <ref> [Ken91] </ref>) in the database context is scarce. Classification or taxonomies of schematic differences appear in [DH84, BOT86, CRE87, KLK91, KS91]. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix).
Reference: [KLK91] <author> R. Krishnamurthy, W. Litwin, and W. Kent. </author> <title> Language features for Interoperability of Databases with Schematic Discrepancies. </title> <booktitle> In Proceedings of 1991 ACM SIGMOD, </booktitle> <month> May </month> <year> 1991. </year>
Reference-contexts: While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., [Ken91]) in the database context is scarce. Classification or taxonomies of schematic differences appear in <ref> [DH84, BOT86, CRE87, KLK91, KS91] </ref>. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in [CHS91, SPD92, UW91, GB91]. <p> Section 8 deals with the abstraction level incompatibility problem [DH84] which arises when the same entity is represented at different levels of abstraction. Section 9 deals with the schematic discrepancy problem <ref> [KLK91] </ref> which arises when data in one database corresponds to schema elements in another. 2 Incompatibility Domain Definition Incompatibility Entity Definition Incompatibility Data Value Incompatibility Abstraction Level Incompatibility Schematic Discrepancy 2 Semantic Similarities between objects In this section, we discuss the concept of semantic proximity to characterize semantic similarities between objects, <p> However these assertions do not give us the mappings between the various elements involved in the assertions. They are also not able to capture the correspondences between the values of a schema element in one database and the schema elements in other databases <ref> [DAODT85, KLK91] </ref>. 7 3.2 Schema Correspondences as a uniform formalism We propose a uniform formalism to represent the mappings which are generated to represent the structural similarities between objects having schematic conflicts and some semantic affinity. <p> (D 1 , D 2 ), &gt; where Abstraction is expressed in the schema correspondence, &lt; SHIP, fId#, Weightg, CONVOY, fId#, AvgWeightg, &gt; where is a partial many-one mapping defined as, : SHIP.Id#, fi Weight ! CONVOY.Id# fi AvgWeight 10 Schematic Discrepancies Problem This class of conflicts was discussed in <ref> [DAODT85, KLK91] </ref>. It was noted that these conflicts can take place within the same data model and arise when data in one database correspond to metadata of another database. This class of conflicts is similar to that discussed in Section 6 when the conflicts depend on the database state. <p> This class of conflicts is similar to that discussed in Section 6 when the conflicts depend on the database state. We now analyze the problem and identify three aspects with help of an example given in <ref> [KLK91] </ref>. Example : Consider three stock databases. All contain the closing price for each day of each stock in the stock market.
Reference: [KS91] <author> W. Kim and J. Seo. </author> <title> Classifying Schematic and Data Heterogeneity in Mul-tidatabase Systems. </title> <journal> IEEE Computer, </journal> <volume> 24(12), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: While there is a significant amount of literature discussing schematic differences, work on semantic issues (e.g., [Ken91]) in the database context is scarce. Classification or taxonomies of schematic differences appear in <ref> [DH84, BOT86, CRE87, KLK91, KS91] </ref>. In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in [CHS91, SPD92, UW91, GB91]. <p> The default value of an attribute is that value which it is defined to have in the absence of more information about the real world. These conflicts were discussed in <ref> [KS91] </ref> and can be classified as the broader class of domain incompatibility conflicts. In this case, two attributes might have different default values in different databases.
Reference: [KS93] <author> V. Kashyap and A. Sheth. </author> <title> Context based arbitration for information discovery and multidatabase interoperability. </title> <note> In preparation ...., 1993. </note>
Reference-contexts: An investigation into uncertainty functions depending on semantic proximity in general and context in particular is also required. * We are investigating the application of the dual semantic and schematic perspectives to information discovery and identification <ref> [KS93] </ref>. Acknowledgements Peter Fankhauser's comments helped us present the uncertainty function in the proper perspective. We thank Dr. Moira Norrie and other participants in the semantic interoperability discussion group for discussing an early version of this paper. Their comments helped to improve and clarify the presentation.
Reference: [LA86] <author> W. Litwin and A. Abdellatif. </author> <title> Multidatabase Interoperability. </title> <booktitle> IEEE Computer, </booktitle> <month> 19(12), December </month> <year> 1986. </year> <month> 37 </month>
Reference-contexts: Three of the best known approaches to deal with multiple databases are tightly coupled federation, loosely-coupled federation, and interdependent data management [SL90][She91a]. A critical task in creating a tightly-coupled federation is that of schema integration (e.g., [DH84]). A critical task in accessing data in a loosely-coupled federation <ref> [LA86, HM85] </ref> is to define a view over multiple databases or to define a query using a multidatabase language. A critical task in interdependent data management is to define multidatabase interdependencies [RSK91]. <p> The concept of dynamic attributes has been proposed in <ref> [LA86] </ref> to specify the mappings between different attributes. Various ways of implementing the mappings are proposed (viz. mathematical formulae, tables, programs). However, we here focus on the specification of mappings at a conceptual level between the domains of attributes and objects. <p> For instance, the salary attribute might have values in $(SALARY 1 ) and $(SALARY 2 ). Typically mappings between data represented in different scales can be easily expressed in terms of a function or a lookup table, or by using dynamic attributes as in <ref> [LA86] </ref> and wrt all contexts. In such cases, two objects O 1 and O 2 can be considered to be semantically equivalent.
Reference: [LG90] <author> D. Lenat and R. V. Guha. </author> <title> Building Large Knowledge Based Systems : Rep--resentation and Inference in the Cyc Project. </title> <publisher> Addison-Wesley Publishing Company Inc, </publisher> <year> 1990. </year>
Reference-contexts: The mapping between each individual information resource and global schema is accomplished by a set of articulation axioms which are used to map the entities of an information resource to the concepts (viz. frames, slots) in Cyc's existing ontology <ref> [LG90] </ref>. Here we are interested in the structural correspondences between two objects, and an extensive ontology as in [LG90] may not be required. Also identifying an object as a relation/entity/class may not be necessary as we are interested in a data-model independent manner of representing structural object correspondences. <p> and global schema is accomplished by a set of articulation axioms which are used to map the entities of an information resource to the concepts (viz. frames, slots) in Cyc's existing ontology <ref> [LG90] </ref>. Here we are interested in the structural correspondences between two objects, and an extensive ontology as in [LG90] may not be required. Also identifying an object as a relation/entity/class may not be necessary as we are interested in a data-model independent manner of representing structural object correspondences. There have been various model describing techniques to represent object correspondences [GB91, UW91].
Reference: [LNE89] <author> J. Larson, S. Navathe, and R. Elmasri. </author> <title> A Theory of Attribute Equivalence in Databases with Application to Schema Integration. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 15(4), </volume> <year> 1989. </year>
Reference-contexts: This is a generalization of DOMAIN-DISJOINT-ROLE-EQUAL concept in <ref> [LNE89] </ref>. semPro (O 1 , O 2 ) = &lt;context, NONE, (D 1 , D 2 ), &gt; where context = context (O 1 ) [ context (O 2 ) and D 1 6= D 2 and role-of (O 1 , context) = role-of (O 2 , context) Example : In
Reference: [ME84] <author> M. Mannino and W. Effelsberg. </author> <title> Matching techniques in Global Schema Design. </title> <booktitle> In Proceedings of the 1st IEEE Conference on Data Engineering, </booktitle> <month> April </month> <year> 1984. </year>
Reference-contexts: One approach has been to group attributes in a taxonomy of equivalence classes <ref> [ELN86, ME84] </ref> or a subtype hierarchy [SG89][SM92] and specify object relationships based on assertions among attributes. Another approach has been to annotate attributes or objects with a set of concepts from a global concept space [YSDK91] and determine the object relationships based on the concepts they are related to.
Reference: [RSK91] <author> M. Rusinkiewicz, A. Sheth, and G. Karabatis. </author> <title> Specifying Interdatabase Dependencies in a Multidatabase Environment. </title> <journal> IEEE Computer, </journal> <volume> 24(12), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: A critical task in accessing data in a loosely-coupled federation [LA86, HM85] is to define a view over multiple databases or to define a query using a multidatabase language. A critical task in interdependent data management is to define multidatabase interdependencies <ref> [RSK91] </ref>. In performing any of these critical tasks, and hence in any approach to interoperability of database systems, the fundamental question is that of identifying objects in different databases that are semantically related, and then resolve the schematic differences among semantically 1 related objects. <p> This type of conflict has been identified in <ref> [RSK91] </ref> and has been expressed as a temporal consistency predicate 6 . One of the databases which has conflicting values, might have obsolete information. This means that the information stored in the databases is time dependent.
Reference: [SG89] <author> A. Sheth and S. Gala. </author> <title> Attribute relationships : An impediment in automating Schema Integration. </title> <booktitle> In Proceedings of the NSF Workshop on Heterogeneous Databases, </booktitle> <month> December </month> <year> 1989. </year>
Reference-contexts: any level of representation, viz. attribute level or entity level. 1 Wood [Woo85] defines semantics to be "the scientific study of the relations between signs and symbols and what they denote or mean." It is not possible to completely define what an object denotes or means in the model world <ref> [SG89] </ref>. We consider these to be aspects of real world semantics (RWS) of an object 2 . Our emphasis is on identifying semantic similarity even when the objects have significant representational differences [She91b]. <p> Two objects can be semantically similar in one of the above four ways. Semantic equivalence 1 Objects at the entity level can be denoted by single-place predicates P (x) and attributes can be denoted by two-place predicates Q (x,y) <ref> [SG89] </ref>. 2 The term "real world semantics" distinguishes from the "(model) semantics" that can be captured using the abstractions in a semantic data model. <p> abstraction by itself cannot capture semantic similarity, as it is always possible to construct a mapping between two semantically unrelated objects 5 X X D1 is a subset of D2 x D3 x D4 Domain of Object (D1) Domain of attr (D2) Domain of attr (D3) Domain of attr (D4) <ref> [SG89] </ref>. However, if there is a semantic similarity between two objects, then we should be able to do so wrt a particular (or all) context (s).
Reference: [She91a] <author> A. Sheth. </author> <title> Federated Database Systems for managing Distributed, Heterogeneous, and Autonomous Databases. </title> <booktitle> Tutorial Notes the 17th VLDB Conference, </booktitle> <month> September </month> <year> 1991. </year>
Reference: [She91b] <author> A. Sheth. </author> <title> Semantic issues in Multidatabase Systems. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multidatabases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: With high interconnectivity and access to many information sources, the primary issue in the future will not be how to efficiently process the data that is known to be relevant, but which data is relevant <ref> [She91b] </ref>. Three of the best known approaches to deal with multiple databases are tightly coupled federation, loosely-coupled federation, and interdependent data management [SL90][She91a]. A critical task in creating a tightly-coupled federation is that of schema integration (e.g., [DH84]). <p> We consider these to be aspects of real world semantics (RWS) of an object 2 . Our emphasis is on identifying semantic similarity even when the objects have significant representational differences <ref> [She91b] </ref>. Semantic proximity is an attempt to characterize the degree of semantic similarity between two objects using the RWS. It provides a qualitative measure to distinguish between the terms introduced in [She91b], viz. semantic equivalence, semantic relationship, semantic relevance and semantic resemblance. <p> Our emphasis is on identifying semantic similarity even when the objects have significant representational differences <ref> [She91b] </ref>. Semantic proximity is an attempt to characterize the degree of semantic similarity between two objects using the RWS. It provides a qualitative measure to distinguish between the terms introduced in [She91b], viz. semantic equivalence, semantic relationship, semantic relevance and semantic resemblance. Two objects can be semantically similar in one of the above four ways. <p> As indicated earlier, we define qualitative measures to distinguish between the terms introduced in <ref> [She91b] </ref>, viz. semantic equivalence, semantic relationship, semantic relevance and semantic resemblance. This depends on the values taken by context and the type of schema correspondence associated with that value of context as a part of the semantic proximity.
Reference: [SK92] <author> A. Sheth and V. Kashyap. </author> <title> So Far (Schematically), yet So Near (Semantically). </title> <booktitle> Invited paper in Proceedings of the IFIP TC2/WG2.6 Conference on Semantics of Interoperable Database Systems, DS-5, </booktitle> <month> November </month> <year> 1992. </year>
Reference-contexts: We characterize the degree of semantic similarity between a pair of objects using the concept of semantic proximity <ref> [SK92] </ref> which is proposed in Section 3 of this paper. <p> The schema correspondence (s) are then associated with and as component (s) of the semantic proximity. * We develop a semantic taxonomy emphasizing semantic similarities between objects and show its relationship to a structural taxonomy emphasizing schematic (structural/representational) differences among the objects <ref> [SK92] </ref>. The association between the schema correspondences and semantic proximity helps represent the possible semantic similarities between two objects having these conflicts. <p> In this paper we have defined the concept of semantic proximity, using which we represent the degrees of similarities between the objects <ref> [SK92] </ref>. We use the context in which these objects are being compared to capture the real world semantics of the relationships. The capability to combine semantically similar data from different databases is required to process queries spanning multiple databases. <p> Based on these similarity measures, we develop a semantic taxonomy which emphasizes the similarities between objects. We show the relationship of this taxonomy to the structural taxonomy which emphasizes schematic (representational, structural) differences among the objects <ref> [SK92] </ref>. The association between the schema correspondences and semantic proximity helps represent the possible semantic similarities between two objects having these conflicts.
Reference: [SK93] <author> A. Sheth and V. Kashyap. </author> <title> Context-bound Semantics (a Multidatabase perspective). </title> <note> To be submitted for journal publication, </note> <year> 1993. </year>
Reference-contexts: Examples and discussions in the rest of the paper will clarify these points. A more detailed discussion of the nature of context and it's relation to semantics is provided in <ref> [SK93] </ref>. 2.3 The Structural Components 2.3.1 Abstraction used to map the objects We use the term abstraction to refer to a mechanism used to map the domains of the objects to each other or to the domain of a common third object. <p> We need to incorporate semantic similarities between objects represented by the semantic proximity in the conflict resolution techniques defined above. * Additional work is needed to further clarify the nature and structure of the context in which two objects are defined. Our work in this area is reported in <ref> [SK93] </ref>. Experimentation is required with different representations of context and methodologies devised for their efficient management. * In this paper we approximate the relationship between strucuture and semantics 35 by viewing the schema correspondences as a projection of semantic proximity wrt context.
Reference: [SL90] <author> A. Sheth and J. Larson. </author> <title> Federated Database Systems for managing Distributed, Heterogeneous and Autonomous Databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3), </volume> <month> September </month> <year> 1990. </year>
Reference-contexts: context 4 of DB1). * When many entities participate in a relationship, the entities can be thought of as belonging to the same context, which in this case is identified as the relationship in which the entities participate. * In a federated database approach, we can use a federated schema <ref> [SL90] </ref> to identify a context to which two objects may belong to. * From the five-level schema architecture for a federated database system [SL90], a context can be specified in terms of an export schemas (a context that is closer to a database) or an external schema (a context that is <p> context, which in this case is identified as the relationship in which the entities participate. * In a federated database approach, we can use a federated schema <ref> [SL90] </ref> to identify a context to which two objects may belong to. * From the five-level schema architecture for a federated database system [SL90], a context can be specified in terms of an export schemas (a context that is closer to a database) or an external schema (a context that is closer to an application).
Reference: [SM91] <author> M. Siegel and S. Madnick. </author> <title> A Metadata Approach to resolving Semantic Conflicts. </title> <booktitle> In Proceedings of the 17th VLDB, </booktitle> <month> September </month> <year> 1991. </year>
Reference-contexts: It is possible for two objects to be semantically closer in one context than in another context. Some of the alternatives for representing a context in a multidatabase system are as follows. * In <ref> [SM91] </ref>, the context is identified as the semantics associated with an application's view of existing data and is called the application semantic view.
Reference: [SM92] <author> A. Sheth and H. Marcus. </author> <title> Schema Analysis and Integration: Methodology, Techniques and Prototype Toolkit. </title> <type> Technical Report TM-STS-019981/1, </type> <institution> Bellcore, </institution> <month> March </month> <year> 1992. </year>
Reference: [SPD92] <author> S. Spaccapietra, C. Parent, and Y. Dupont. </author> <title> Model Independent Assertions for Integration of Heterogeneous Schemas. </title> <journal> The VLDB Journal, </journal> <month> July </month> <year> 1992. </year> <month> 38 </month>
Reference-contexts: In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in <ref> [CHS91, SPD92, UW91, GB91] </ref>. However, purely schematic considerations do not suffice to determine the similarity between objects [FKN91][SG89]. <p> Class in an OODB maps to a relation in a RDB) may not be necessary. An alternative approach <ref> [SPD92] </ref> is to model commonalities between the schemas of the various component databases as correspondence assertions which state some relationship between two elements and their instances in the two databases.
Reference: [SRK92] <author> A. Sheth, M. Rusinkiewicz, and G. Karabatis. </author> <title> Using Polytransactions to manage Independent Data. In Database Transaction Models, </title> <year> 1992. </year>
Reference-contexts: (D 1 , D 2 ), (S 1 , S 2 )&gt; where Abstraction is expressed in the following schema correspondence, &lt; O 1 , , O 2 , , &gt; 6 Additional information on weaker criteria for consistency can be found in the literature on transaction models (e.g., see <ref> [SRK92] </ref>). 29 Data Value Incompatibility Known Inconsistency Temporal Inconsistency Acceptable Inconsistency (State Semantic Equivalence) (Eventual Semantic Equivalence) (Epsilon Semantic Equivalence) where is a total 1-1 value mapping defined by, : S 1 (t + t) $ S 2 (t) i.e.
Reference: [TCY93] <author> F. Tseng, A. Chen, and W. Yang. </author> <title> Answering Heterogeneous Database Queries with Degrees of Uncertainty. Distributed and Parallel Databases, </title> <journal> An International Journal, </journal> <volume> 1(3), </volume> <month> July </month> <year> 1993. </year>
Reference-contexts: Address) Let Domain (STUDENT.Id#) = f123, 456, 789g and Domain (DEPARTMENT.Num) = f321, 654, 987g It is possible to define a Mapping between the domains defined above, but this does not mean that STUDENT.Id# is equivalent to DEPARTMENT.Num A third approach is to use discrete probability distributions to model uncertainty <ref> [BGMP90, TCY93] </ref>. However, probability values are either assigned as a measure of belief or by an analysis of the underlying sample. If the values are assigned as a measure of belief as in [Zad78], then it is necessary to specify an underlying basis for specifying these measures.
Reference: [UW91] <author> S. Urban and J. Wu. </author> <title> Resolving Semantic Heterogeneity through the explicit representation of Data Model Semantics. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multidatabases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: In this paper we present what we believe a comprehensive taxonomy of schematic conflicts which subsumes most of the taxonomies found in literature (refer to the table in the Appendix). Attempts have been made to represent structural similarities in <ref> [CHS91, SPD92, UW91, GB91] </ref>. However, purely schematic considerations do not suffice to determine the similarity between objects [FKN91][SG89]. <p> Also identifying an object as a relation/entity/class may not be necessary as we are interested in a data-model independent manner of representing structural object correspondences. There have been various model describing techniques to represent object correspondences <ref> [GB91, UW91] </ref>. One approach has been to use a higher order language like M (DM)- L [GB91] to define metatypes which formalize the syntax and semantics of a data model construct by a collection of second order logic formulae. <p> Two types are equivalent if the corresponding sets of second-order formulae are logically equivalent. Since we are interested in specifying the correspondences between two objects at the schema level, we may not need the full scope of a second-order logic. Another model describing approach <ref> [UW91] </ref> has been to use a semantic data model to represent its own structural semantics as well as the semantics of the other data models in a multidatabase system.
Reference: [VH91] <author> V. Ventrone and S. Heiler. </author> <title> Semantic Heterogeneity as a result of Domain Evolution. </title> <booktitle> SIGMOD Record, special issue on Semantic Issues in Multi-databases, </booktitle> <editor> A. Sheth, ed., </editor> <volume> 20(4), </volume> <month> December </month> <year> 1991. </year>
Reference-contexts: Student 1 .Name $ Student 2 .Id# fi Student 2 .Name The uncertainty function is then given as : (Student 1 , Student 2 ) = jfId#;Namegjfi100 jfId#;Name;Gradegj 5.3.2 The heuristic of instance participation This heuristic uses the concept of the cardinality constraints of the entities participating in the mappings <ref> [EN89, VH91] </ref> to define the uncertainty function. Although this function expresses more semantic information than the previous one, it is independent of the context (s) of the two objects. Using the concept of cardinality constraints, we can define the uncertainty function as follows.
Reference: [Woo85] <author> J. Wood. </author> <title> What's in a link ? In Readings in Knowledge Representation. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1985. </year>
Reference-contexts: These objects may model information at any level of representation, viz. attribute level or entity level. 1 Wood <ref> [Woo85] </ref> defines semantics to be "the scientific study of the relations between signs and symbols and what they denote or mean." It is not possible to completely define what an object denotes or means in the model world [SG89].
Reference: [YSDK91] <author> C. Yu, W. Sun, S. Dao, and D. Keirsey. </author> <title> Determining relationships among attributes for Interoperability of Multidatabase Systems. </title> <booktitle> In Proceedings of the 1st International Workshop on Interoperability in Multidatabase Systems, </booktitle> <month> April </month> <year> 1991. </year>
Reference-contexts: One approach has been to group attributes in a taxonomy of equivalence classes [ELN86, ME84] or a subtype hierarchy [SG89][SM92] and specify object relationships based on assertions among attributes. Another approach has been to annotate attributes or objects with a set of concepts from a global concept space <ref> [YSDK91] </ref> and determine the object relationships based on the concepts they are related to. Whether giving assertions among attributes or concepts, in practice we often can give only a fuzzy (i.e. uncertain or ambiguous) assertion.
Reference: [Zad78] <author> L. Zadeh. </author> <title> Fuzzy Sets as a basis for a Theory of Possibility. </title> <journal> Fuzzy Sets and Systems, </journal> <volume> 1(1), </volume> <year> 1978. </year> <month> 39 </month>
Reference-contexts: However, probability values are either assigned as a measure of belief or by an analysis of the underlying sample. If the values are assigned as a measure of belief as in <ref> [Zad78] </ref>, then it is necessary to specify an underlying basis for specifying these measures. Also, if these values are assigned by analyzing the underlying sample, then they depend on the extensions or state of the objects, which might be rendered obsolete in a continually changing database.
References-found: 40

