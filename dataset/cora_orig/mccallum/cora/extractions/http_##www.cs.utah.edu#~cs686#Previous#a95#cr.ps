URL: http://www.cs.utah.edu/~cs686/Previous/a95/cr.ps
Refering-URL: http://www.cs.utah.edu/~cs686/Previous/a95/
Root-URL: 
Email: fkim,ziqiang,achieng@cs.uiuc.edu  
Title: Compressionless Routing: A Framework for Adaptive and Fault-tolerant Routing  
Author: Jae H. Kim Ziqiang Liu Andrew A. Chien 
Date: April 18 21, 1994.  
Note: In Proceedings of ISCA'94, Chicago, IL,  
Address: 1304 W. Springfield Avenue Urbana, IL 61801  
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  Visiting scholar from Dept. Teleinformatics, Royal Institute of Technology, Sweden.  
Abstract: Compressionless Routing (CR) is a new adaptive routing framework which provides a unified framework for efficient deadlock-free adaptive routing and fault-tolerance. CR exploits the tight-coupling between wormhole routers for flow control to detect potential deadlock situations and recover from them. Fault-tolerant Compressionless Routing (FCR) extends Compressionless Routing to support end-to-end fault-tolerant delivery. Detailed routing algorithms, implementation complexity and performance simulation results for CR and FCR are presented. CR has the following advantages: deadlock-free adaptive routing in torus networks with no virtual channels, simple router designs, order-preserving message transmission, applicability to a wide variety of network topologies, and elimination of the need for buffer allocation messages. FCR has the following advantages: tolerates transient faults while maintaining data integrity (nonstop fault-tolerance), tolerates permanent faults, can be applied to a wide variety of network topologies, and eliminates the need for software buffering and retry for reliability. These advantages of CR and FCR not only simplify hardware support for adaptive routing and fault-tolerance, they also can simplify communication software layers. fl The research described in this paper was supported in part by NSF grants CCR-9209336 and MIP-92-23732, ONR grant N00014-92-J-1961, and NASA grant NAG 1-613. Additional support has been provided by a generous special-purpose grant from the AT&T Foundation. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> BBN Advanced Computers, Inc. Butterfly Products Overview, </institution> <month> October </month> <year> 1987. </year>
Reference-contexts: CR extends that work, providing a practical framework for adaptive wormhole routing and fault-tolerant routing. The basic technique used in CR routing, drop-at-block is not new; several machines such as the BBN Butterfly <ref> [1] </ref> and the MIT Transit [11] use similar techniques. The BBN Butterfly network resolves message conflicts by dropping blocked messages. The switch which discards messages initiates a reject signal that tears down the path. The sender retransmits the message some time later.
Reference: [2] <author> A. A. Chien and J. H. Kim. </author> <title> Planar-adaptive routing: Low-cost adaptive networks for multiprocessors. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <pages> pages 268-77, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Adaptive routing techniques can produce higher utilization of network resources and more robust performance. Most existing adaptive routing algorithms guarantee deadlock-freedom by defining a set of cycle free routes on a set of virtual networks implemented with virtual channels. Cycles can be prevented statically <ref> [4, 12, 2] </ref> or dynamically [7]. All of these approaches require virtual channels to provide deadlock-free routing in torus networks. The one exception is the Turn Model which prevents deadlock by prohibiting turns [13].
Reference: [3] <author> Andrew A. Chien. </author> <title> A cost and performance model for k-ary n-cube wormhole routers. </title> <booktitle> In Proceedings of Hot Interconnects Workshop, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: However, this approach only works for meshes; in tori (meshes with wraparounds), additional virtual channels are required for deadlock prevention. Unfortunately, virtual channels can be expensive because they complicate routing decision and channel control, increasing router node delay significantly <ref> [3] </ref>. Consequently, to achieve adaptive routing with speed comparable to dimension-order routers, more efficient adaptive routing algorithms must be developed. As large-scale massively-parallel systems have been deployed in the field, it has become increasingly clear that fault-tolerance is a critical factor in the design of machines and particularly multiprocessor networks.
Reference: [4] <author> W. Dally and C. Seitz. </author> <title> Deadlock-free message routing in multiprocessor interconnection networks. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-36(5), </volume> <year> 1987. </year>
Reference-contexts: Adaptive routing techniques can produce higher utilization of network resources and more robust performance. Most existing adaptive routing algorithms guarantee deadlock-freedom by defining a set of cycle free routes on a set of virtual networks implemented with virtual channels. Cycles can be prevented statically <ref> [4, 12, 2] </ref> or dynamically [7]. All of these approaches require virtual channels to provide deadlock-free routing in torus networks. The one exception is the Turn Model which prevents deadlock by prohibiting turns [13].
Reference: [5] <author> W. J. Dally. </author> <title> Virtual channel flow control. </title> <journal> IEEE Transactions on Parallel and Distributed Systems, </journal> <volume> 3(2) </volume> <pages> 194-205, </pages> <year> 1992. </year>
Reference-contexts: When more buffering capacity is added to improve network throughput, it can be organized as virtual channels <ref> [5] </ref>, giving greater performance gain than using it as a single deep buffer.
Reference: [6] <author> W. J. Dally and C. Seitz. </author> <title> The torus routing chip. </title> <booktitle> Distributed Computing, </booktitle> <pages> pages 187-196, </pages> <year> 1986. </year>
Reference-contexts: Finally, we compare the CR network performance (a) (a) 16x16 and (b) 8x8x8 torus networks. achieved for different message sizes. with dimension-order routing to calibrate its performance (see Figure 11). The dimension-order router requires two virtual channels for deadlock prevention in a torus <ref> [6] </ref>. The figure shows that CR networks (with a single virtual channel) give comparable or better performance than DOR networks (with two virtual channels) even under uniform traffic. The CR network provides lower average latencies for all load rates below saturation.
Reference: [7] <author> J. Duato. </author> <title> On the design of deadlock-free adaptive routing algorithms for multicomputers: </title> <booktitle> design methodologies. In Proceedings of Parallel Architectures and Languages Europe, </booktitle> <year> 1991. </year>
Reference-contexts: Adaptive routing techniques can produce higher utilization of network resources and more robust performance. Most existing adaptive routing algorithms guarantee deadlock-freedom by defining a set of cycle free routes on a set of virtual networks implemented with virtual channels. Cycles can be prevented statically [4, 12, 2] or dynamically <ref> [7] </ref>. All of these approaches require virtual channels to provide deadlock-free routing in torus networks. The one exception is the Turn Model which prevents deadlock by prohibiting turns [13]. However, this approach only works for meshes; in tori (meshes with wraparounds), additional virtual channels are required for deadlock prevention. <p> Estimating the number of deadlocks that occur is difficult because a deadlock would normally mean the end of any network simulation the entire network will eventually be blocked. To conservatively estimate the number of PDS, we simulated a deadlock-free routing algorithm (Duato's routing algorithm <ref> [7] </ref>) which uses two virtual networks an adaptive one and a deadlock-free deterministic one. During the simulation, we counted the number of times messages needed to use the dimension-order routed virtual channels (to escape deadlock).
Reference: [8] <author> M. Homewood and M. McLaren. </author> <title> Meiko CS-2 interconnect Elan Elite design. </title> <booktitle> In Proceedings of the IEEE Hot Interconnects Symposium. IEEE TCMM, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: The I min calculation requires a few adders and a distance calculator that is also required in any other network interface. This hardware is much simpler than that found in the Meiko CS-2 <ref> [8] </ref> and perhaps comparable to that found in the Intel Paragon [9] and Thinking Machines CM-5 [15]. 4.2 Receiver Implementation receives messages from the router, interpreting PAD, FKILL and flow control information to implement the FCR protocol. The receiver passes assembled messages to the processor.
Reference: [9] <author> Intel Corporation. </author> <title> Paragon XP/S Product Overview, </title> <year> 1991. </year>
Reference-contexts: The I min calculation requires a few adders and a distance calculator that is also required in any other network interface. This hardware is much simpler than that found in the Meiko CS-2 [8] and perhaps comparable to that found in the Intel Paragon <ref> [9] </ref> and Thinking Machines CM-5 [15]. 4.2 Receiver Implementation receives messages from the router, interpreting PAD, FKILL and flow control information to implement the FCR protocol. The receiver passes assembled messages to the processor. After discarding the header flit, the receiver accepts valid data until the PAD signal is asserted.
Reference: [10] <author> C. F. Joerg. </author> <title> Design and implementation of a packet switched routing chip. </title> <type> Master's thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <year> 1990. </year> <month> MIT/LCS/TR-482. </month>
Reference-contexts: By using a timeout, CR reduces unnecessary message drops. Third, CR eliminates the need for acknowledgements whereas in previous schemes, each message requires a positive acknowledgement. Though other mechanisms which provide hardware acknowledgements <ref> [10, 11] </ref> have been proposed, they all consume substantial network bandwidth. 8 Summary In this paper, we have presented Compressionless Routing, a combined framework for efficient deadlock-free routing and fault-tolerant communication.
Reference: [11] <author> T. F. Knight. </author> <title> Technologies for low latency interconnection switches. </title> <booktitle> In Proceedings of ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <year> 1989. </year>
Reference-contexts: CR extends that work, providing a practical framework for adaptive wormhole routing and fault-tolerant routing. The basic technique used in CR routing, drop-at-block is not new; several machines such as the BBN Butterfly [1] and the MIT Transit <ref> [11] </ref> use similar techniques. The BBN Butterfly network resolves message conflicts by dropping blocked messages. The switch which discards messages initiates a reject signal that tears down the path. The sender retransmits the message some time later. The dropping strategy can improve network utilization by eliminating secondary conflicts. <p> By using a timeout, CR reduces unnecessary message drops. Third, CR eliminates the need for acknowledgements whereas in previous schemes, each message requires a positive acknowledgement. Though other mechanisms which provide hardware acknowledgements <ref> [10, 11] </ref> have been proposed, they all consume substantial network bandwidth. 8 Summary In this paper, we have presented Compressionless Routing, a combined framework for efficient deadlock-free routing and fault-tolerant communication.
Reference: [12] <author> D. Linder and J. Harden. </author> <title> An adaptive and fault tolerant wormhole routing strategy for k-ary n-cubes. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-40(1):2-12, </volume> <month> Jan-uary </month> <year> 1991. </year>
Reference-contexts: Adaptive routing techniques can produce higher utilization of network resources and more robust performance. Most existing adaptive routing algorithms guarantee deadlock-freedom by defining a set of cycle free routes on a set of virtual networks implemented with virtual channels. Cycles can be prevented statically <ref> [4, 12, 2] </ref> or dynamically [7]. All of these approaches require virtual channels to provide deadlock-free routing in torus networks. The one exception is the Turn Model which prevents deadlock by prohibiting turns [13].
Reference: [13] <author> L. Ni and C. Glass. </author> <title> The turn model for adaptive routing. </title> <booktitle> In Proceedings of the International Symposium on Computer Architecture, </booktitle> <year> 1992. </year>
Reference-contexts: Cycles can be prevented statically [4, 12, 2] or dynamically [7]. All of these approaches require virtual channels to provide deadlock-free routing in torus networks. The one exception is the Turn Model which prevents deadlock by prohibiting turns <ref> [13] </ref>. However, this approach only works for meshes; in tori (meshes with wraparounds), additional virtual channels are required for deadlock prevention. Unfortunately, virtual channels can be expensive because they complicate routing decision and channel control, increasing router node delay significantly [3].
Reference: [14] <author> D. Reeves, E. Gehringer, and A. Chandiramani. </author> <title> Adaptive routing and deadlock recovery: A simulation study. </title> <booktitle> In Proceedings of the 4th Conference on Hypercube Concurrent Computers and Applications, </booktitle> <year> 1989. </year>
Reference-contexts: Since CR depends only on the distance in flits, padding overhead is independent of the number of virtual channels. 7 Related Work The closest related work to Compressionless Routing is a study on abort-and-retry routing which explored the idea of detecting possible deadlock situations and canceling switch connections <ref> [14] </ref>. CR extends that work, providing a practical framework for adaptive wormhole routing and fault-tolerant routing. The basic technique used in CR routing, drop-at-block is not new; several machines such as the BBN Butterfly [1] and the MIT Transit [11] use similar techniques.
Reference: [15] <institution> Thinking Machines Corporation, Cambridge, Mas-sachusets. </institution> <type> CM5 Technical Summary, </type> <month> October </month> <year> 1991. </year>
Reference-contexts: The I min calculation requires a few adders and a distance calculator that is also required in any other network interface. This hardware is much simpler than that found in the Meiko CS-2 [8] and perhaps comparable to that found in the Intel Paragon [9] and Thinking Machines CM-5 <ref> [15] </ref>. 4.2 Receiver Implementation receives messages from the router, interpreting PAD, FKILL and flow control information to implement the FCR protocol. The receiver passes assembled messages to the processor. After discarding the header flit, the receiver accepts valid data until the PAD signal is asserted.
References-found: 15

