URL: http://www.cs.ucla.edu/~zengx/pads98-glomo.ps
Refering-URL: http://www.cs.ucla.edu/~zengx/
Root-URL: http://www.cs.ucla.edu
Title: GloMoSim: A Library for Parallel Simulation of Large-scale Wireless Networks  
Author: Xiang Zeng Rajive Bagrodia Mario Gerla 
Address: Los Angeles Los Angeles, CA 90095  
Affiliation: Department of Computer Science University of California,  
Abstract: A number of library-based parallel and sequential network simulators have been designed. This paper describes a library, called GloMoSim (for Global Mobile system Simulator), for parallel simulation of wireless networks. GloMoSim has been designed to be extensible and composable: the communication protocol stack for wireless networks is divided into a set of layers, each with its own API. Models of protocols at one layer interact with those at a lower (or higher) layer only via these APIs. The modular implementation enables consistent comparison of multiple protocols at a given layer. The parallel implementation of GloMoSim can be executed using a variety of conservative synchronization protocols, which include the null message and conditional event algorithms. This paper describes the GloMoSim library, addresses a number of issues relevant to its parallelization, and presents a set of experimental results on the IBM 9076 SP, a distributed memory multi-computer. These experiments use models constructed from the library modules. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Alwan, R. Bagrodia, N. Bambos, M. Gerla, L. Kleinrock, J. Short, and J. Villasenor, </author> <title> Adaptive Mobile Multimedia Networks. </title> <journal> IEEE personal communications , June 1997. </journal>
Reference-contexts: In its most general form, ad hoc networking supports transmission of multimedia traffic over multi-hop transmissions in a network of mobile communicating devices <ref> [1] </ref>. It is fairly easy to devise mobile networking scenarios where a mobile multi-hop wireless network is interfaced with a wired network such that end-to-end performance is determined by the characteristics of both wireless and wired network components.
Reference: [2] <author> R. Bagrodia, and W. Liao. Maisie: </author> <title> A Language for Design of Efficient Discrete-Event Simulation. </title> <journal> IEEE Transactions on Software Engineering. </journal> <month> April </month> <year> 1994 </year>
Reference-contexts: GloMoSim library is written in PARSEC (for PARallel Simulation Environment for Complex Systems) [4], a simulation environment derived from the Maisie simulator <ref> [2] </ref>. PARSEC adopts a message-based approach to discrete-event simulation: physical processes are modeled by simulation objects called entities, and events are represented by transmission of timestamped messages among corresponding entities.
Reference: [3] <author> R. Bagrodia, Y.A.Chen, et al., </author> <title> "Parallel Simulation of a Highspeed Wormhole Routing Network", </title> <booktitle> Proceedings of PADS1996 </booktitle>
Reference: [4] <author> R. Bagrodia, R. Meyerr, et al., </author> <title> PARSEC: A Parallel Simulation Environment for Complex System, </title> <type> UCLA technical report, </type> <year> 1997. </year> <note> [5]. </note> <author> Christopher D. Carothers, Richard M. Fujimoto, Yi-Bing Lin and Paul England, </author> <title> Distributed Simulation of Large-scale PCS Networks </title>
Reference-contexts: GloMoSim is a library-based sequential and parallel simulator for wireless networks. It is designed as a set of library modules, each of which simulates a specific wireless communication protocol in the protocol stack. The library has been developed using PARSEC, a C-based parallel simulation language <ref> [4] </ref>. New protocols and modules can be programmed and added to the library using this language. GloMoSim has been designed to be extensible and composable. It has been implemented on both shared memory and distributed memory computers and can be executed using a variety of synchronization protocols. <p> GloMoSim library is written in PARSEC (for PARallel Simulation Environment for Complex Systems) <ref> [4] </ref>, a simulation environment derived from the Maisie simulator [2]. PARSEC adopts a message-based approach to discrete-event simulation: physical processes are modeled by simulation objects called entities, and events are represented by transmission of timestamped messages among corresponding entities.
Reference: [6] <author> K.M. Chandy and R. Sherman. </author> <title> The Conditional Event Approach to Distributed Simulation. </title> <booktitle> Distributed Simulation Conference, </booktitle> <address> Miami, </address> <year> 1989. </year>
Reference-contexts: simulation overheads; model decomposition or partitioning to achieve load balance; efficient process to processor mappings to reduce communications and other overheads in parallel execution. 5.1 Synchronization protocols The performance of GloMoSim library is evaluated as a function of three different conservative synchronization algorithms: null message protocol [15], conditional event protocol <ref> [6] </ref>, and Accelerated Null Message protocol (ANP), which is a combination of preceding two schemes [10].
Reference: [7] <author> J.G. Clearly, J. J. Tsai, </author> <title> Conservative Parallel Simulation of ATM Networks, </title> <booktitle> Proceedings of PADS 1996 </booktitle>
Reference: [8] <author> R. Fujimoto. </author> <title> Parallel Discrete Event Simulation. </title> <journal> Communications of the ACM, </journal> <month> October </month> <year> 1990. </year>
Reference-contexts: In our current GloMoSim implementation, the models assume a static communication topology, which is specified in an initialization entity called driver. 5.1.2 User defined lookahead. Seeing that good lookahead exploitation is essential to improve performance of conservative protocol <ref> [8] </ref>, we try to extract lookahead from a PARSEC entitys semantic information. Specifically, if an entitys next output message has at least timestamp increment d compared with the entitys current simulation clock, we say a lookahead d can be obtained.
Reference: [9] <author> T. Holvoet and P. Verbaeten, </author> <title> Using Agents for Simulating and Implementing Petri nets, </title> <booktitle> Proceedings of PADS 1997. </booktitle>
Reference: [10] <author> V. Jha and R. Bagrodia, </author> <title> Transparent Implementation of Conservative Algorithms in Parallel Simulation Languages. </title> <booktitle> In Winter Simulation Conference, </booktitle> <month> December </month> <year> 1993 </year> <month> [11]. </month> <title> P. Karn, MACA a New Channel Access Method for Packet Radio, </title> <booktitle> in ARRL/CRRL Amateur radio 9 th Computer Networking Conference, </booktitle> <address> ARRL, </address> <year> 1990. </year>
Reference-contexts: to reduce communications and other overheads in parallel execution. 5.1 Synchronization protocols The performance of GloMoSim library is evaluated as a function of three different conservative synchronization algorithms: null message protocol [15], conditional event protocol [6], and Accelerated Null Message protocol (ANP), which is a combination of preceding two schemes <ref> [10] </ref>. The PARSEC visual front-end (PAVE) allows choice of a specific conservative runtime to be selected simply as an option in the execution command! As the null message protocol is well known , we omit descriptions from this paper [15]. The conditional event protocol distinguishes between definite and conditional events. <p> Both synchronous and asynchronous algorithms have been defined to identify the earliest conditional event; these algorithms are very similar to those used to compute GVT for optimistic synchronization protocols. The primary advantage of conditional event algorithm is that its performance is less sensitive to lookahead properties of the model <ref> [10] </ref>. Since the ANP algorithm uses null messages together with the conditional event algorithm, it is expected to perform well with models whose lookahead properties are not well understood or where they change dynamically.
Reference: [12] <author> W. Liu, </author> <title> et al Parallel Simulation Environment for Mobile Wireless Networks, </title> <address> WSC, </address> <year> 1996 </year>
Reference-contexts: Also, the broadcast nature of wireless radio transmission makes communication topology in simulation models relatively denser than for an equivalent wired network. The research described in <ref> [12] </ref> studied the performance of parallel simulation of a specific protocol a clustering algorithm in mobile, multi-hop, wireless networks.
Reference: [13] <author> Kumar, Grama, Gupta, and Karypis, Benjamin Cumings, </author> <title> Introduction to Parallel Computing </title>
Reference-contexts: Mapping GEL (sec) 4-Null (sec) 4-Cond (sec) (sec) Horizontal 838 480 486 490 Vertical 839 326 381 333 Table 1 Execution time comparison of two aggregation schemes The next concern is distribution of partitions among processors. We view the partitions as forming a two-dimensional matrix. Typical strategies <ref> [13] </ref> that have been used in decomposing matrix include random mapping, which assigns entities randomly to processors; block mapping, which assigns a block of neighboring entities to one processor (Figure 5); and cyclic mapping, which assigns entities cyclically to processors (Figure 6). 1 1 2 2 3 3 4 4 1
Reference: [14] <author> P. Martini, M. Rumekasten, J. Tolle, </author> <title> Tolerant Synchronization for Distributed Simulations of Interconnected Computer Networks, </title> <booktitle> Proceedings of PADS 1997 </booktitle>
Reference: [15] <author> J. Misra, </author> <title> Distributed Discrete-Event Simulation, </title> <journal> ACM Computing Surveys, </journal> <month> March </month> <year> 1986. </year>
Reference-contexts: efficient synchronization to reduce simulation overheads; model decomposition or partitioning to achieve load balance; efficient process to processor mappings to reduce communications and other overheads in parallel execution. 5.1 Synchronization protocols The performance of GloMoSim library is evaluated as a function of three different conservative synchronization algorithms: null message protocol <ref> [15] </ref>, conditional event protocol [6], and Accelerated Null Message protocol (ANP), which is a combination of preceding two schemes [10]. <p> The PARSEC visual front-end (PAVE) allows choice of a specific conservative runtime to be selected simply as an option in the execution command! As the null message protocol is well known , we omit descriptions from this paper <ref> [15] </ref>. The conditional event protocol distinguishes between definite and conditional events.
Reference: [16] <author> D. M. Nicol, </author> <title> Parallel Discrete Event Simulation of FCFS Stochastic Queuing Networks. In Parallel Programming: Experience with Applications, </title> <booktitle> Languages and Systems. ACM SIGPLAN, </booktitle> <month> July </month> <year> 1988. </year>
References-found: 14

