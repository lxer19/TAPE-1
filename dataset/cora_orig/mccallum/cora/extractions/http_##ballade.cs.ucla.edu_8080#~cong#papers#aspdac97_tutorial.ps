URL: http://ballade.cs.ucla.edu:8080/~cong/papers/aspdac97_tutorial.ps
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Email: cong@cs.ucla.edu  
Title: Modeling and Layout Optimization of VLSI Devices and Interconnects In Deep Submicron Design  
Author: Jason Cong 
Address: Los Angeles, CA 90095  
Affiliation: Department of Computer Science University of California,  
Abstract: This paper presentsan overview of recent advances on modeling and layout optimization of devices and interconnects for high-performance VLSI circuit design under the deep submi-cron technology. First, we review a number of interconnect and driver/gate delay models, which are most useful to guide the layout optimization. Then, we summarize the available performance optimization techniques for VLSI device and interconnect layout, including driver and transistor sizing, transistor ordering, interconnect topology optimization, optimal wire sizing, optimal buffer placement, and simultaneous topology construction, buffer insertion, buffer and wire sizing. The efficiency and impact of these techniques will be discussed in the tutorial. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. B. Bakoglu, </author> <title> Circuits, Interconnections, and Packaging for VLSI, </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference: [2] <author> K. D. Boese, A. B. Kahng, and G. Robins, </author> <title> High-performance routing trees with identified critical sinks, </title> <booktitle> Proc. Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 182-187. </pages>
Reference-contexts: The A-tree construction method has been extended to signal nets with multiple drivers (as in signal busses) [12]. Further optimization of interconnect topology involves using more accurate delay models during routing tree topology construction. For example, the Elmore delay model was used in <ref> [2] </ref> and the 2-pole delay model was used in [33] to evaluate which node or edge to be added to the routing tree during iterative tree construction. Other methods, including the alphabetical tree and P-tree construction, have also been proposed. They are summarized in [6]. B.
Reference: [3] <author> B. S. Carlson and C.Y. Chen, </author> <title> Performance Enhancement of CMOS VLSI Circuits by Transistor Reordering, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 361-366. </pages>
Reference-contexts: When applied to the entire circuit, it needs to be combined with circuit timing analysis so that when a gate is optimized, the signal arrival times at its inputs are known. The reader may refer to <ref> [3] </ref> and [28] for more details. Transistor ordering has no (or little) area penalty, but the reduction on delay is limited (usually around 5%). IV. INTERCONNECT LAYOUT OPTIMIZATION In this subsection, we summarize recent research results on interconnect layout optimization, including interconnect topology optimization and optimal wiresizing. A.
Reference: [4] <author> C.-P. Chen, H. Zhou, and D. F. </author> <title> Wong Optimal Non-Uniform Wire-Sizing under the Elmore Delay Model, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1996, </year> <pages> pp. 38-43. </pages>
Reference-contexts: Further studies on wiresizing optimization include using more accurate delay models, such as higher-order RC delay models [22] and lossy transmission line models [31], and understanding the optimal wire shape under the assumption that non-uniform continuous wire-sizing is allowed to each wire segment <ref> [4] </ref>. These results are discussed in more details in [6]. V. SIMULTANEOUS DEVICE AND INTERCONNECT OPTIMIZATION We feel that the most promising approach to performance optimization is to consider the interaction between devices and interconnects, and optimize both of them at the same time.
Reference: [5] <author> J. Cong and L. </author> <title> He, An Efficient Approach to Simultaneous Transistor and Interconnect Sizing, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1996, </year> <pages> pp. 181-186. </pages>
Reference-contexts: This approach has been shown to be very effective for optimizing very large buffered trees, yielding substantial reduction on both delay and power dissipation compared to manual designs. In fact, it was recently shown in <ref> [5] </ref> that the dominance property holds for a large class of objective functions called general CH-posynomials, which are defined as follows. <p> The class of simple CH-posynomials is a subset of posynomial functions defined in [13]. The optimization problem of minimizing a simple/general CH-posynomial is called a simple/general CH-posynomial program. It was shown in <ref> [5] </ref> that the dominance property holds for both simple and general CH-posynomial programs, and the local refinement operation can be applied to compute the lower and upper bounds of an optimal solution efficiently. Based on this general result, the work in [5] is able to perform simultaneous transistor and wire sizing <p> It was shown in <ref> [5] </ref> that the dominance property holds for both simple and general CH-posynomial programs, and the local refinement operation can be applied to compute the lower and upper bounds of an optimal solution efficiently. Based on this general result, the work in [5] is able to perform simultaneous transistor and wire sizing efficiently given a general netlist (not limited to buffered trees).
Reference: [6] <author> J. Cong, L. He, C.-K. Koh, and P. H. Madden, </author> <title> Performance Optimization of VLSI Interconnect Layout, Integration, </title> <journal> the VLSI Journal, </journal> <volume> Vol. 21, Nos. 1&2, </volume> <month> November </month> <year> 1996, </year> <pages> pp. 1-94. </pages>
Reference-contexts: Recent advances in transistor sizing include the use of more accurate transistor delay model with consideration of the input waveform slope, and the use of linear programming, convex programming, or other non-linear programming techniques for computing a global optimal solution. These results are summarized in <ref> [6] </ref>. The gate sizing problem includes both the continuous and the discrete gate sizing problems. The continuous gate sizing problem assumes that all transistors in a gate can be scaled by a common factor, which is called the size of a gate. <p> As a result, more accurate delay models and global optimization techniques are often used for continuous gate sizing, as reviewed in <ref> [6] </ref>. This formulation is useful for parameterized cell generation. The discrete gate sizing problem assumes that each gate has a discrete set of pre-designed implementations (cells) as in a given cell library, and one needs to choose an appropriate cell for each gate for performance optimization. <p> The discrete gate sizing problem has been shown to be NP-hard. Optimal solutions are only applicable to special circuits (such as trees and series-parallel circuits) based on dynamic programming. Heuristic methods have developed for general circuits based on sensitivity analysis and/or mathematical programming. The reader may refer to <ref> [6] </ref> for more details. C. Transistor Ordering The transistor ordering problem is to find the best ordering of (series-connected) transistors in each gate to minimize the delay and/or the power. <p> Wire-length minimiza tion is achieved by constructing an optimal (or near-optimal) Steiner tree (OST). The commonly used methods include iterative addition of Steiner points, optimal merging of edges of a minimum spanning tree (MST), or iterative refinement of an MST. These methods are surveyed in <ref> [6] </ref>. When the interconnect resistance needs to be considered, the first step is to minimize or control the path-lengths from the driver to timing-critical sinks to reduce the interconnect RC delay. <p> It first constructs an MST, then eliminates the long paths by adding `short-cuts' into the MST and computing a shortest path tree of the resulting graph. Other algorithms in this class include the AHHK tree construction and the `performance oriented spanning tree' construction, which are discussed in [19] and <ref> [6] </ref>. An extreme case of this class of algorithms is to construct a shortest path tree with the minimum wire-length. <p> Other methods, including the alphabetical tree and P-tree construction, have also been proposed. They are summarized in <ref> [6] </ref>. B. Wiresizing Optimization It was first shown in [10, 11] that when wire resistance becomes significant, as in the deep submicron design, proper wire-sizing can effectively reduce the interconnect delay. <p> It has been extended to optimize the routing trees with multiple drivers, routing trees without a priori segmentation of long wires, and to meet the target delays using La-grangian relaxation. The reader may refer to <ref> [6] </ref> for more details. An alternative approach to wiresizing optimization computes an optimal wiresizing solution using bottom-up merging and top-down selection [20]. <p> These results are discussed in more details in <ref> [6] </ref>. V. SIMULTANEOUS DEVICE AND INTERCONNECT OPTIMIZATION We feel that the most promising approach to performance optimization is to consider the interaction between devices and interconnects, and optimize both of them at the same time. This section discusses the recent advances in this area. A. <p> Other studies on simultaneous device and wire sizing include using higher order RC delay models for the interconnect by either matching to the target moments or using a q-pole transfer function for sensitivity analysis. The reader may refer to <ref> [6] </ref> for more details. B. Buffer Insertion Buffer (also called repeater) insertion is a common and effective technique to use active device area to trade for reduction of interconnect delay. <p> Other methods have also been proposed for simultaneous topology construction and wire sizing, including a greedy dynamic wire sizing during iterative routing tree construction and use of link insertion with dynamic wire sizing to create non-tree topologies. These algorithms are summarized in <ref> [6] </ref>. VI. CONCLUDING REMARKS This paper has summarized the delay modeling techniques for VLSI devices and interconnects which have been useful to guide performance optimization in VLSI layout under the deep submicron technology. <p> It did not address the layout optimization issues for special nets, such as skew minimization for clock nets and minimization of noise and voltage drop for power nets. A comprehensive survey of research results on clock skew optimization was presented in <ref> [6] </ref>. Another challenge for layout design under the deep submicron technology is modeling and minimization of crosstalk noise, which is becoming increasingly important because of reduced line-to-line spacing and change of aspect-ratio of metal lines. <p> We see only a limited amount of research in this area, and did not include it in this tutorial. A list of related publications were cited in <ref> [6] </ref>. We believe that this is an important research area which will impact the design of future layout systems.
Reference: [7] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong, </author> <title> Provably Good Performance-Driven Global Routing, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 11(6), </volume> <month> June </month> <year> 1992, </year> <pages> pp. 739-752. </pages>
Reference-contexts: A class of algorithms have been developed to minimize both the path-lengths and the total wire-length in a routing tree. For example, the bounded-radius bounded-cost (BRBC) algorithm <ref> [7] </ref> bounds the radius (i.e. the maximum path-length between the driver and a sink) in the routing tree while minimizing its total wire-length. It first constructs an MST, then eliminates the long paths by adding `short-cuts' into the MST and computing a shortest path tree of the resulting graph.
Reference: [8] <author> J. Cong and C.-K. Koh, </author> <title> Simultaneous Driver and Wire Sizing for Performance and Power Optimization, </title> <journal> IEEE Trans. on Very Large Scale Integration (VLSI) Systems, </journal> <volume> 2(4), </volume> <month> December </month> <year> 1994, </year> <pages> pp. 408-423. </pages>
Reference-contexts: This section discusses the recent advances in this area. A. Simultaneous Device and Wire Sizing The simultaneous driver and wire sizing (SDWS) problem was first studied in <ref> [8] </ref> and later generalized to simultaneous buffer and wire sizing (SBWS) in a buffered routing tree [9]. In both cases, the switch-level model is used for the driver and the Elmore delay model is used for the interconnects modeled as RC trees.
Reference: [9] <author> J. Cong, C.-K. Koh, and K.-S. Leung, </author> <title> Simultaneous Buffer and Wire Sizing for Performance and Power Optimization, </title> <booktitle> Proc. Int'l Symp. on Low Power Electronics and Design, </booktitle> <month> August </month> <year> 1996, </year> <pages> pp. 271-276. </pages>
Reference-contexts: This section discusses the recent advances in this area. A. Simultaneous Device and Wire Sizing The simultaneous driver and wire sizing (SDWS) problem was first studied in [8] and later generalized to simultaneous buffer and wire sizing (SBWS) in a buffered routing tree <ref> [9] </ref>. In both cases, the switch-level model is used for the driver and the Elmore delay model is used for the interconnects modeled as RC trees.
Reference: [10] <author> J. Cong and K. S. Leung, </author> <title> Optimal Wiresizing Under the Distributed El-more Delay Model, </title> <booktitle> Proc. Int'l. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. 634-639. </pages>
Reference-contexts: Other methods, including the alphabetical tree and P-tree construction, have also been proposed. They are summarized in [6]. B. Wiresizing Optimization It was first shown in <ref> [10, 11] </ref> that when wire resistance becomes significant, as in the deep submicron design, proper wire-sizing can effectively reduce the interconnect delay.
Reference: [11] <author> J. Cong, K. S. Leung, and D. Zhou, </author> <title> Performance-Driven Interconnect Design Based on Distributed RC Delay Model, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 606-611. </pages>
Reference-contexts: Other algorithms in this class include the AHHK tree construction and the `performance oriented spanning tree' construction, which are discussed in [19] and [6]. An extreme case of this class of algorithms is to construct a shortest path tree with the minimum wire-length. It was shown in <ref> [11] </ref>, however, using a bottom-up merging heuristic, a minimal length shortest path tree in the Manhattan plane (also called the A-tree) can be constructed very efficiently with sizable delay reduction yet only a small wire-length overhead compared to the OST. <p> Other methods, including the alphabetical tree and P-tree construction, have also been proposed. They are summarized in [6]. B. Wiresizing Optimization It was first shown in <ref> [10, 11] </ref> that when wire resistance becomes significant, as in the deep submicron design, proper wire-sizing can effectively reduce the interconnect delay. <p> C. Simultaneous Topology Construction with Buffer and Wire Sizing Recently, the wiresized buffered A-tree (WBA-tree) algorithm was proposed [25] for simultaneous routing tree topology construction, buffer insertion and wiresizing. It naturally combines the A-tree construction algorithm <ref> [11] </ref> and the simultaneous buffer insertion and wiresizing algorithm, as both use bottom-up construction techniques. Similar to the buffer insertion algorithm presented in the previous section, the WBA algorithm includes a bottom-up synthesis procedure and a top-down selection procedure.
Reference: [12] <author> J. Cong and P. H. Madden, </author> <title> Performance Driven Routing with Multiple Sources, </title> <booktitle> Proc. Int'l Symp. on Circuits and Systems, </booktitle> <year> 1995, </year> <pages> pp. 1157-1169. </pages>
Reference-contexts: The A-tree construction method has been extended to signal nets with multiple drivers (as in signal busses) <ref> [12] </ref>. Further optimization of interconnect topology involves using more accurate delay models during routing tree topology construction.
Reference: [13] <author> J. G. Ecker, </author> <title> Geometric Programming: Methods, Computations and Applications, </title> <journal> SIAM Review, </journal> <volume> vol. 22, No. 3, </volume> <month> July </month> <year> 1980, </year> <pages> pp. 338-362. </pages>
Reference-contexts: When the coefficient functions in Eqn. (12) are constants, the function f (X) is called a simple CH-posynomial. The class of simple CH-posynomials is a subset of posynomial functions defined in <ref> [13] </ref>. The optimization problem of minimizing a simple/general CH-posynomial is called a simple/general CH-posynomial program.
Reference: [14] <author> W. C. </author> <title> Elmore, The Transient Response of Damped Linear Networks with Particular Regard to Wide-Band Amplifiers, </title> <journal> Journal of Applied Physics, </journal> <volume> vol. 19, no. 1, </volume> <month> Jan. </month> <year> 1948, </year> <pages> pp. 55-63. </pages>
Reference: [15] <author> J. P. Fishburn and A. E. Dunlop, TILOS: </author> <title> A Posynomial Programming Approach to Transistor Sizing, </title> <booktitle> Proc. Int'l. Conf. on Computer-Aided Design, </booktitle> <year> 1985, </year> <pages> pp. 326-328. </pages>
Reference-contexts: Transistor and Gate Sizing The transistor sizing problem is to determine the optimal width for each transistor to optimize the overall circuit performance. This technique is often used in cell generation and full-custom layout. It is usually assumed that the transistor width may change continuously. The early work TILOS <ref> [15] </ref> used the simple switch-level model for tran-sistors, formulated the transistor sizing problem as a posynomial program, and applied a greedy sensitivity based method. The sensitivity of a transistor is defined to be the delay reduction due to a unit increment of its size.
Reference: [16] <author> L. P. P. P. van Ginneken, </author> <title> Buffer Placement in Distributed RC-tree Networks for Minimal Elmore Delay, </title> <booktitle> Proc. Int'l Symp. on Circuits and Systems, </booktitle> <year> 1990, </year> <pages> pp. 865-868. </pages>
Reference-contexts: As the Elmore delay of a long wire grows quadratically in terms of the length of the wire, buffer insertion can reduce interconnect delay significantly. A polynomial-time dynamic programming algorithm was presented in <ref> [16] </ref> to find the optimal buffer placement and sizing for RC trees under the Elmore delay model. The formulation assumes that the possible buffer positions (called legal positions), possible buffer sizes, and the required arrival times at sinks are given, and maximizes the required arrival time at the source.
Reference: [17] <author> R. Gupta, B. Tutuianu, B. Krauter, and L. T. Pillage, </author> <title> The Elmore Delay as a Bound for RC Trees with Generalized Input Signals, </title> <booktitle> Proc. 32nd ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1995, </year> <pages> pp. 364-369. </pages>
Reference: [18] <author> N. Hedenstierna and K. O. Jeppson, </author> <title> CMOS Circuit Speed and Buffer Optimization, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <year> 1987, </year> <pages> pp. 270-281. </pages>
Reference-contexts: When N is not fixed, the optimal stage ratio f = e and the stage number is N = ln ( C L ). When the more accurate driver delay model in Eqn. (7) is used with consideration of the driver output capacitance, the result in <ref> [18] </ref> shows that the optimal stage ratio f satisfies f = e (a+ f )= f where a is the ra tio between the intrinsic output capacitance and the input gate capacitance of the inverter. For the technology used in [18], a is about 1.35 and the optimal stage ratio is <p> with consideration of the driver output capacitance, the result in <ref> [18] </ref> shows that the optimal stage ratio f satisfies f = e (a+ f )= f where a is the ra tio between the intrinsic output capacitance and the input gate capacitance of the inverter. For the technology used in [18], a is about 1.35 and the optimal stage ratio is in the range of 3-5 instead of e.
Reference: [19] <author> A. B. Kahng and G. Robins, </author> <title> On Optimal Interconnections for VLSI, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1994. </year>
Reference-contexts: It first constructs an MST, then eliminates the long paths by adding `short-cuts' into the MST and computing a shortest path tree of the resulting graph. Other algorithms in this class include the AHHK tree construction and the `performance oriented spanning tree' construction, which are discussed in <ref> [19] </ref> and [6]. An extreme case of this class of algorithms is to construct a shortest path tree with the minimum wire-length.
Reference: [20] <author> J. Lillis, C. K. Cheng and T. T. Y. Lin, </author> <title> Optimal Wire Sizing and Buffer Insertion for Low Power and a Generalized Delay Model, </title> <booktitle> Proc. IEEE Int'l. Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1995, </year> <pages> pp. 138-143. </pages>
Reference-contexts: The reader may refer to [6] for more details. An alternative approach to wiresizing optimization computes an optimal wiresizing solution using bottom-up merging and top-down selection <ref> [20] </ref>. At each node v, a set of irredundant wiresizing solutions of the subtree rooted at v is generated by merging and pruning the ir-redundant wiresizing solutions of the subtrees rooted at the children nodes of v.
Reference: [21] <author> N. Menezes, R. Baldick, and L. T. Pileggi, </author> <title> A Sequential Quadratic Programming Approach to Concurrent Gate and Wire Sizing, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1995, </year> <pages> pp. 144-151. </pages>
Reference: [22] <author> N. Menezes, S. Pullela, F. Dartu and L. T. Pillage, </author> <title> RC Interconnect Synthesis A Moment Fitting Approach, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <year> 1994, </year> <pages> pp. 418-425. </pages>
Reference-contexts: Further studies on wiresizing optimization include using more accurate delay models, such as higher-order RC delay models <ref> [22] </ref> and lossy transmission line models [31], and understanding the optimal wire shape under the assumption that non-uniform continuous wire-sizing is allowed to each wire segment [4]. These results are discussed in more details in [6]. V.
Reference: [23] <author> N. Menezes, S. Pullela, and L. T. Pileggi, </author> <title> Simultaneous Gate and Interconnect Sizing for Circuit-Level Delay Optimization, </title> <booktitle> Proc. 32nd ACM/IEEE Design Automation Conf., </booktitle> <month> June </month> <year> 1995, </year> <pages> pp. 690-695. </pages>
Reference: [24] <author> P. R. O'Brien and T. L. Savarino, </author> <title> Modeling the Driving-Point Characteristic of Resistive Interconnect for Accurate Delay Estimation, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1989, </year> <pages> pp. 512-515. </pages>
Reference-contexts: However, not all the capacitance of the routing tree and the sinks is seen by the driver due to the effect of interconnect resistance shielding, especially in deep submicron design with fast logic gates of lower driver resistance. The effective capacitance model was proposed to first use a p-model <ref> [24] </ref> (Fig. 1 (c)) to better approximate the driving point admittance at the root of the interconnect (or equivalently, the output of the driver), and then compute iteratively the effective capacitance seen by the driver, denoted C e f f , using the k-factor equations.
Reference: [25] <author> T. Okamoto and J. Cong, </author> <title> Buffered Steiner Tree Construction with Wire Sizing for Interconnect Layout Optimization, </title> <booktitle> Proc. Int'l Conf. on Computer-Aided Design, </booktitle> <month> Nov. </month> <year> 1996, </year> <pages> pp. 44-49. </pages>
Reference-contexts: Then, a top-down back-tracing procedure is carried out to select the buffer assignment solution that led to the optimal option at the source. C. Simultaneous Topology Construction with Buffer and Wire Sizing Recently, the wiresized buffered A-tree (WBA-tree) algorithm was proposed <ref> [25] </ref> for simultaneous routing tree topology construction, buffer insertion and wiresizing. It naturally combines the A-tree construction algorithm [11] and the simultaneous buffer insertion and wiresizing algorithm, as both use bottom-up construction techniques.
Reference: [26] <author> J. K. Ousterhout, </author> <title> Switch-Level Delay Models for Digital MOS VLSI, </title> <booktitle> Proc. 21st Design Automation Conf., </booktitle> <year> 1984, </year> <pages> pp. 542-548. </pages>
Reference-contexts: The input signal has a transition time of t t . The slope model uses a one-dimensional table to compute the effective driver resistance based on the concept of rise-time ratio <ref> [26] </ref>. The effective resistance of a driver depends on the transition time of the input signal, the loading capacitance, and the size of the driver.
Reference: [27] <author> L. T. Pillage and R. A. Rohrer, </author> <title> Asymptotic Waveform Evaluation for Timing Analysis, </title> <journal> IEEE Trans. on Computer-Aided Design, </journal> <volume> 9(4), </volume> <month> Apr. </month> <year> 1990, </year> <pages> pp. 352-366. </pages>
Reference: [28] <author> S. C. Prasad and K. Roy, </author> <title> Circuit Optimization for Minimization of Power Consumption under Delay Constraint, </title> <booktitle> Proc. Int'l workshop on Low Power Design, </booktitle> <month> April, </month> <year> 1994, </year> <pages> pp. 15-20. </pages>
Reference-contexts: When applied to the entire circuit, it needs to be combined with circuit timing analysis so that when a gate is optimized, the signal arrival times at its inputs are known. The reader may refer to [3] and <ref> [28] </ref> for more details. Transistor ordering has no (or little) area penalty, but the reduction on delay is limited (usually around 5%). IV. INTERCONNECT LAYOUT OPTIMIZATION In this subsection, we summarize recent research results on interconnect layout optimization, including interconnect topology optimization and optimal wiresizing. A.
Reference: [29] <author> J. Qian, S. Pullela, and L. T. Pileggi, </author> <title> Modeling the Effective Capacitance for the RC Interconnect of CMOS Gates, </title> <journal> IEEE Trans. on Computer-Aided Design of Integrated Circuits and Systems, </journal> <volume> 13(12), </volume> <month> Dec. </month> <year> 1994, </year> <pages> pp. 1526-1535. </pages>
Reference-contexts: Another commonly used driver delay model pre-characterizes the driver delay of each type of drivers in terms of the input transition time t t , and the total load capacitance C L in the form of k-factor equations <ref> [30, 29] </ref>, such as: t d f = (k 1 + k 2 C L ) t t + k 3 C 3 t f = (k 0 2 C L ) t t + k 0 L + k 0 5 ; (9) where k 15 and k 0 15 <p> The process stops when the value of C e f f does not change in two successive iterations. A so-called resistance model (R-model) was also proposed in <ref> [29] </ref> to better approximate the slow decaying tail portion of the response waveform. This method illustrates the complication of the interaction between the drive model and the interconnect model in the deep submicron design. III.
Reference: [30] <author> N. H. E. Weste and K. Eshraghian, </author> <title> Principles of CMOS VLSI Design: a Systems Perspective 2nd ed, </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Another commonly used driver delay model pre-characterizes the driver delay of each type of drivers in terms of the input transition time t t , and the total load capacitance C L in the form of k-factor equations <ref> [30, 29] </ref>, such as: t d f = (k 1 + k 2 C L ) t t + k 3 C 3 t f = (k 0 2 C L ) t t + k 0 L + k 0 5 ; (9) where k 15 and k 0 15
Reference: [31] <author> T. Xue, E. S. Kuh and Q. Yu, </author> <title> A Sensitivity-Based Wiresizing Approach to Interconnect Optimization of Lossy Transmission Line Topologies, </title> <booktitle> Proc. IEEE Multi-Chip Module Conf., </booktitle> <year> 1996, </year> <pages> pp. 117-121. </pages>
Reference-contexts: Further studies on wiresizing optimization include using more accurate delay models, such as higher-order RC delay models [22] and lossy transmission line models <ref> [31] </ref>, and understanding the optimal wire shape under the assumption that non-uniform continuous wire-sizing is allowed to each wire segment [4]. These results are discussed in more details in [6]. V.
Reference: [32] <author> D. Zhou, and X. Y. Liu, </author> <title> On the Optimal Drivers for High-Speed Low Power ICs, to appear in InternationalJournal of High Speed Electronics and System, </title> <year> 1996. </year>
Reference-contexts: For the technology used in [18], a is about 1.35 and the optimal stage ratio is in the range of 3-5 instead of e. In a recent work on driver sizing for both performance and power optimization <ref> [32] </ref>, the increasing stage ratios f i = f 0 (1 + g) i are used, where g is a modification factor determined by the I-V curve of the transistor. Proper choice of increasing stage ratios can reduce power dissipation considerably with no or little loss on performance. B.
Reference: [33] <author> D. Zhou, F. Tsui, and D. S. Gao, </author> <title> High Performance Multichip Interconnection Design, </title> <booktitle> Proc. 4th ACM/SIGDA Physical Design Workshop, </booktitle> <month> Apr. </month> <year> 1993, </year> <pages> pp. 32-43. </pages>
Reference-contexts: Further optimization of interconnect topology involves using more accurate delay models during routing tree topology construction. For example, the Elmore delay model was used in [2] and the 2-pole delay model was used in <ref> [33] </ref> to evaluate which node or edge to be added to the routing tree during iterative tree construction. Other methods, including the alphabetical tree and P-tree construction, have also been proposed. They are summarized in [6]. B.
References-found: 33

