URL: http://www.cs.msu.edu/~cps941/F98/papers/whitleyTutorial.ps
Refering-URL: http://www.cs.msu.edu/~cps941/F98/papers/papers.html
Root-URL: http://www.cs.msu.edu
Email: whitley@cs.colostate.edu  
Title: A Genetic Algorithm Tutorial  
Author: Darrell Whitley 
Keyword: Genetic Algorithms, Search, Parallel Algorithms  
Address: Fort Collins, CO 80523  
Affiliation: Computer Science Department, Colorado State University  
Abstract: This tutorial covers the canonical genetic algorithm as well as more experimental forms of genetic algorithms, including parallel island models and parallel cellular genetic algorithms. The tutorial also illustrates genetic search by hyperplane sampling. The theoretical foundations of genetic algorithms are reviewed, include the schema theorem as well as recently developed exact models of the canonical genetic algorithm.
Abstract-found: 1
Intro-found: 1
Reference: <author> Ackley, D. </author> <title> (1987) A Connectionist Machine for Genetic Hillclimbing. </title> <publisher> Kluwer Academic Publishers. </publisher>
Reference: <author> Antonisse, H.J. </author> <title> (1989) A New Interpretation of the Schema Notation that Overturns the Binary Encoding Constraint. </title> <booktitle> Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann. </publisher>
Reference: <author> Back, T., Hoffmeister, F. and Schwefel, </author> <title> H.P. (1991) A Survey of Evolution Strategies. </title> <booktitle> Proc. 4th International Conf. on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann. </publisher>
Reference: <author> Baker, J. </author> <title> (1985) Adaptive selection methods for genetic algorithms. </title> <booktitle> Proc. International Conf. on Genetic Algorithms and Their Applications. </booktitle> <editor> J. Grefenstette, ed. </editor> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> Baker, J. </author> <title> (1987) Reducing Bias and Inefficiency in the Selection Algorithm. </title> <booktitle> Genetic Algorithms and Their Applications: Proc. Second International Conf. </booktitle> <editor> J. Grefenstette, ed. </editor> <publisher> Lawrence Erlbaum. </publisher>
Reference-contexts: Next an outer roulette wheel is placed around the pie with N equally spaced pointers. A single spin of the roulette wheel will now simultaneously pick all N members of the intermediate population. The resulting selection is also unbiased <ref> (Baker, 1987) </ref>. After selection has been carried out the construction of the intermediate population is complete and recombination can occur. This can be viewed as creating the next population from the intermediate population.
Reference: <author> Booker, L. </author> <title> (1987) Improving Search in Genetic Algorithms. In, Genetic Algorithms and Simulating Annealing, </title> <editor> L. Davis, ed. </editor> <publisher> Morgan Kaufman, </publisher> <pages> pp. 61-73. </pages>
Reference: <author> Bridges, C. and Goldberg, D. </author> <title> (1987) An analysis of reproduction and crossover in a binary-coded genetic Algorithm. </title> <booktitle> Proc. 2nd International Conf. on Genetic Algorithms and Their Applications. </booktitle>
Reference: <editor> J. Grefenstette, ed. </editor> <publisher> Lawrence Erlbaum. </publisher>
Reference: <author> Collins, R. and Jefferson, D. </author> <title> (1991) Selection in Massively Parallel Genetic Algorithms. </title> <booktitle> Proc. 4th International Conf. on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 249-256. </pages>
Reference: <author> Davidor, Y. </author> <title> (1991) A Naturally Occurring Niche & Species Phenomenon: The Model and First Results. </title> <booktitle> Proc 4th International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 257-263. </pages>
Reference: <author> Davis, L.D. </author> <title> (1991) Handbook of Genetic Algorithms. </title> <publisher> Van Nostrand Reinhold. </publisher>
Reference: <author> DeJong, K. </author> <title> (1975) An Analysis of the Behavior of a Class of Genetic Adaptive Systems. </title> <type> PhD Dissertation. </type> <institution> Dept. of Computer and Communication Sciences, Univ. of Michigan, Ann Arbor. </institution> <note> 35 Eshelman, </note> <author> L. </author> <title> (1991) The CHC Adaptive Search Algorithm. Foundations of Genetic Algorithms, </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan-Kaufmann. </publisher> <pages> pp 256-283. </pages>
Reference-contexts: This particular description of a genetic algorithm is intentionally abstract because in some sense, the term genetic algorithm has two meanings. In a strict interpretation, the genetic algorithm refers to a model introduced and investigated by John Holland (1975) and by students of Holland <ref> (e.g., DeJong, 1975) </ref>. It is still the case that most of the existing theory for genetic algorithms applies either solely or primarily to the model introduced by Holland, as well as variations on what will be referred to in this paper as the canonical genetic algorithm.
Reference: <author> Fitzpatrick, J.M. and Grefenstette, J.J. </author> <title> (1988) Genetic Algorithms in Noisy Environments. </title> <journal> Machine Learning, </journal> <volume> 3(2/3): </volume> <pages> 101-120. </pages>
Reference-contexts: Assume a genetic algorithm is used to optimize some form of control strategy. In such cases, the state space must be sampled in a limited fashion and the resulting evaluation of control strategies is approximate and noisy <ref> (c.f., Fitzpatrick and Grefenstette, 1988) </ref>. The evaluation function must also be relatively fast. This is typically true for any optimization method, but it may particularly pose an issue for genetic algorithms. Since a genetic algorithm works with a population of potential solutions, it incurs the cost of evaluating this population.
Reference: <author> Fogel, L.J., Owens, A.J., and Walsh, M.J. </author> <title> (1966) Artificial Intelligence Through Simulated Evolution. </title> <publisher> John Wiley. </publisher>
Reference: <editor> Fogel, D., and Atmar, J.W., eds. </editor> <booktitle> (1992) First Annual Conference on Evolutionary Programming. </booktitle>
Reference-contexts: The individuals, or "organisms," in this study were finite state machines. Organisms that best solved some target function obtained the opportunity to reproduce. Parents were mutated to create offspring. There has been renewed interest in Evolution Programming as reflected by the 1992 First Annual Conference on Evolutionary Programming <ref> (Fogel and Atmar 1992) </ref>. Evolution Strategies are based on the work of Rechenberg (1973) and Schwefel (1975; 1981) and are discussed in a survey by Back, Hoffmeister and Schwefel (1991). Two examples of Evolution Strategies (ES) are the (+)-ES and (; )-ES.
Reference: <author> Goldberg, D. and Bridges, C. </author> <title> (1990) An Analysis of a Reordering Operator on a GA-Hard Problem. </title> <journal> Biological Cybernetics, </journal> <volume> 62 </volume> <pages> 397-405. </pages>
Reference-contexts: Fitness can also be assigned based on a string's rank in the population (Baker, 1985; Whitley, 1989) or by sampling methods, such as tournament selection <ref> (Goldberg, 1990) </ref>. It is helpful to view the execution of the genetic algorithm as a two stage process. It starts with the current population. Selection is applied to the current population to create an intermediate population.
Reference: <author> Goldberg, D. </author> <title> (1987) Simple Genetic Algorithms and the Minimal, Deceptive Problem. In, Genetic Algorithms and Simulated Annealing, </title> <editor> L. Davis, ed., </editor> <publisher> Pitman. </publisher>
Reference: <author> Goldberg, D. </author> <title> (1989) Genetic Algorithms in Search, Optimization and Machine Learning. </title> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Goldberg, D. </author> <title> (1990) A Note on Boltzmann Tournament Selection for Genetic Algorithms and Population-oriented Simulated Annealing. </title> <type> TCGA 90003, </type> <institution> Engineering Mechanics, Univ. Alabama. </institution>
Reference-contexts: Fitness can also be assigned based on a string's rank in the population (Baker, 1985; Whitley, 1989) or by sampling methods, such as tournament selection <ref> (Goldberg, 1990) </ref>. It is helpful to view the execution of the genetic algorithm as a two stage process. It starts with the current population. Selection is applied to the current population to create an intermediate population.
Reference: <author> Goldberg, D. </author> <title> (1991) The Theory of Virtual Alphabets. Parallel Problem Solving from Nature, </title> <publisher> Springer Verlag. </publisher>
Reference: <author> Goldberg, D., and Deb, K. </author> <title> (1991) A Comparative Analysis of Selection Schemes Used in Genetic Algorithms. Foundations of Genetic Algorithms, </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan-Kaufmann. </publisher> <pages> pp 69-93. </pages>
Reference: <author> Gorges-Schleuter, M. </author> <title> (1991) Explicit Parallelism of Genetic Algorithms through Population Structures. Parallel Problem Solving from Nature, </title> <publisher> Springer Verlag, </publisher> <pages> pp 150-159. </pages>
Reference: <author> Grefenstette, J.J. </author> <title> (1986) Optimization of Control Parameters for Genetic Algorithms. </title> <journal> IEEE Trans. Systems, Man, and Cybernetics, </journal> <volume> 16(1): </volume> <pages> 122-128. </pages>
Reference: <author> Grefenstette, J.J. and Baker, J. </author> <title> (1989) How Genetic Algorithms Work: A Critical Look at Implicit Parallelism. </title> <booktitle> Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann. </publisher>
Reference-contexts: Thus, looking at the average fitness of all the strings in a particular hyperplane (or using a random sample to estimate this fitness) is only relevant to the first generation or two <ref> (Grefenstette and Baker, 1989) </ref>. After this, the sampling of strings is biased and the inexactness of the schema theorem makes it impossible to predict computational behavior. In general, the schema theorem provides a lower bound that holds for only one generation into the future.
Reference: <author> Grefenstette, J.J. </author> <title> (1993) Deception Considered Harmful. Foundations of Genetic Algorithms -2-, </title> <editor> D. Whitley, ed., </editor> <publisher> Morgan Kaufmann. </publisher> <pages> pp: 75-91. </pages>
Reference: <author> Hillis, D. </author> <title> (1990) Co-Evolving Parasites Improve Simulated Evolution as an Optimizing Procedure. </title> <journal> Physica D 42, </journal> <pages> pp 228-234. </pages>
Reference: <author> Holland, J. </author> <booktitle> (1975) Adaptation In Natural and Artificial Systems. </booktitle> <publisher> University of Michigan Press. </publisher>
Reference-contexts: In the canonical genetic algorithm each member of this population will be a binary string of length L which corresponds to the problem encoding. Each string is sometimes referred to as a "genotype" <ref> (Holland, 1975) </ref> or, alternatively, a "chromosome" (Schaffer, 1987). In most cases the initial population is generated randomly. After creating an initial population, each string is then evaluated and assigned a fitness value. The notion of evaluation and fitness are sometimes used interchangeably. <p> should be sampled by numerous points in the population. (This issue is reexamined in more detail in subsequent sections of this paper.) A key part of a genetic algorithm's intrinsic or implicit parallelism is derived from the fact that many hyperplanes are sampled when a population of strings is evaluated <ref> (Holland 1975) </ref>; in fact, it can be argued that far more hyperplanes are sampled than the number of strings contained in the population. <p> Goldberg and Bridges (1990), Whitley (1991) as well as Holland (1975) discuss the problems of exploiting linkage and the recombination of tagged representations. 4 The Schema Theorem A foundation has been laid to now develop the fundamental theorem of genetic algorithms. The schema theorem <ref> (Holland, 1975) </ref> provides a lower bound on the change in the sampling rate for a single hyperplane from generation t to generation t + 1. Consider again what happens to a particular hyperplane, H when only selection occurs.
Reference: <author> Liepins, G. and Vose, M. </author> <title> (1990) Representation Issues in Genetic Algorithms. </title> <journal> Journal of Experimental and Theoretical Artificial Intelligence, </journal> <volume> 2 </volume> <pages> 101-115. </pages>
Reference: <author> Manderick, B. and Spiessens P. </author> <title> (1989) Fine Grained Parallel Genetic Algorithms. </title> <booktitle> Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 428-433. </pages>
Reference: <author> Michalewicz, Z. </author> <title> (1992) Genetic Algorithms + Data Structures = Evolutionary Programs. </title> <publisher> Springer-Verlag, AI Series, </publisher> <address> New York. </address>
Reference: <author> Muhlenbein, H. </author> <title> (1991) Evolution in Time and Space The Parallel Genetic Algorithm. Foundations of Genetic Algorithms, </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan-Kaufmann. </publisher> <pages> pp 316-337. </pages>
Reference: <author> Muhlenbein, H. </author> <title> (1992) How genetic algorithms really work: I. Mutation and Hillclimbing, Parallel Problem Solving from Nature -2-, </title> <editor> R. Manner and B. Manderick, eds. </editor> <publisher> North Holland. </publisher>
Reference: <author> Nix, A. and Vose, M. </author> <title> (1992) Modeling Genetic Algorithms with Markov Chains. </title> <journal> Annals of Mathematics and Artificial Intelligence. </journal> <volume> 5 </volume> <pages> 79-88. </pages> <note> 36 Rechenberg, </note> <author> I. </author> <title> (1973) Evolutionsstrategie: Optimierung technischer Systeme nach Prinzipien der biologischen Evolution. </title> <publisher> Frommann-Holzboog Verland, Stuttgart. </publisher>
Reference-contexts: More complex extension of the Vose and Liepins model include finite population models using Markov chains <ref> (Nix and Vose, 1992) </ref>. Vose (1993) surveys the current state of this research. 28 8 Other Models of Evolutionary Computation There are several population based algorithms that are either spin-offs of Holland's genetic algorithm, or which were developed independently.
Reference: <author> Schaffer, J.D. </author> <title> (1987) Some Effects of Selection Procedures on Hyperplane Sampling by Genetic Algorithms. In, Genetic Algorithms and Simulated Annealing, </title> <editor> L. Davis, ed. </editor> <publisher> Pitman. </publisher>
Reference-contexts: In the canonical genetic algorithm each member of this population will be a binary string of length L which corresponds to the problem encoding. Each string is sometimes referred to as a "genotype" (Holland, 1975) or, alternatively, a "chromosome" <ref> (Schaffer, 1987) </ref>. In most cases the initial population is generated randomly. After creating an initial population, each string is then evaluated and assigned a fitness value. The notion of evaluation and fitness are sometimes used interchangeably.
Reference: <editor> Schaffer, J.D., and Eshelman, L. </editor> <title> (1993) Real-Coded Genetic Algorithms and Interval Schemata. </title>
Reference: <institution> Foundations of Genetic Algorithms -2-, </institution> <address> D. </address> <publisher> Whitley, ed. Morgan-Kaufmann. </publisher>
Reference: <author> Schwefel, </author> <title> H.P. (1975) Evolutionsstrategie und numerische Optimierung. </title> <type> Dissertation, </type> <institution> Technische Universitat Berlin. </institution>
Reference: <author> Schwefel, </author> <title> H.P. (1981) Numerical Optimization of Computer Models. </title> <publisher> Wiley. </publisher>
Reference: <author> Spears, W. and DeJong, K. </author> <title> (1991) An Analysis of Multi-Point Crossover. Foundations of Genetic Algorithms, </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan-Kaufmann. </publisher>
Reference: <author> Syswerda, G. </author> <title> (1989) Uniform Crossover in Genetic Algorithms. </title> <booktitle> Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 2-9. </pages>
Reference: <author> Syswerda, G. </author> <title> (1991) A Study of Reproduction in Generational and Steady-State Genetic Algorithms. Foundations of Genetic Algorithms, </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan-Kaufmann. </publisher> <pages> pp 94-101. </pages>
Reference-contexts: The name "steady state" is somewhat misleading, since these algorithms show more variance than canonical genetic algorithms in the terms of hyperplane sampling behavior <ref> (Syswerda, 1991) </ref> and are therefore more susceptible to sample error and genetic drift. The advantage is that the best points found in the search are maintained in the population. This results in a more aggressive search that in practice is often quite effective.
Reference: <author> Starkweather, T., Whitley, D., and Mathias, K. </author> <title> (1991) Optimization Using Distributed Genetic Algorithms. Parallel Problem Solving from Nature, </title> <publisher> Springer Verlag. </publisher>
Reference: <author> Tanese, R. </author> <booktitle> (1989) Distributed Genetic Algorithms. Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 434-439. </pages>
Reference: <editor> Vose, M. </editor> <booktitle> (1993) Modeling Simple Genetic Algorithms. Foundations of Genetic Algorithms -2-, </booktitle> <address> D. </address>
Reference-contexts: Recent theoretical advances in modeling genetic algorithms also apply primarily to the canonical genetic algorithm <ref> (Vose, 1993) </ref>. In a broader usage of the term, a genetic algorithm is any population-based model that uses selection and recombination operators to generate new sample points in a search space. Many genetic algorithm models have been introduced by researchers largely working from 1 an experimental perspective. <p> It is obvious in some vacuous sense that knowing the distribution of the initial population as well as the fitnesses of these strings (and the strings that are subsequently generated by the genetic algorithm) is sufficient information for modeling the dynamic behavior of the genetic algorithm <ref> (Vose 1993) </ref>. This suggests that we only need information about those strings sampled by the genetic algorithm. However, this micro-level view of the genetic algorithm does not seems to explain its macro-level processing power. 5.2 The Case for Nonbinary Alphabets There are two basic arguments against using higher cardinality alphabets.
Reference: <editor> Whitley, ed., </editor> <publisher> Morgan Kaufmann. </publisher> <pages> pp: 63-73. </pages>
Reference: <author> Vose, M. and Liepins, G. </author> <title> (1991) Punctuated Equilibria in Genetic Search. </title> <booktitle> Complex Systems 5 </booktitle> <pages> 31-44. </pages>
Reference: <author> Whitley, D. </author> <title> (1989) The GENITOR Algorithm and Selective Pressure. </title> <booktitle> Proc 3rd International Conf on Genetic Algorithms, </booktitle> <publisher> Morgan-Kaufmann, </publisher> <pages> pp 116-121. </pages>
Reference: <author> Whitley, D. </author> <title> (1991) Fundamental Principles of Deception in Genetic Search. Foundations of Genetic Algorithms. </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Whitley, D. </author> <title> (1993a) An Executable Model of a Simple Genetic Algorithm. Foundations of Genetic Algorithms -2-. </title> <editor> D. Whitley, ed. </editor> <publisher> Morgan Kaufmann. </publisher>
Reference: <editor> Whitley, D. </editor> <booktitle> (1993b) Cellular Genetic Algorithms. Proc. 5th International Conference on Genetic Algorithms. </booktitle> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Finally, a fine grain massively parallel implementation that assumes one individual resides at each processor will be explored. It can be shown that the fine grain models are a subclass of cellular automata <ref> (Whitley 1993b) </ref>. Therefore, while these algorithms have been referred to by a number of somewhat awkward names (e.g., fine grain genetic algorithms, or massively parallel genetic algorithms) the name cellular genetic algorithm is used in this tutorial.
Reference: <author> Whitley, D., and Kauth, J. </author> <title> (1988) GENITOR: a Different Genetic Algorithm. </title> <booktitle> Proceedings of the Rocky Mountain Conference on Artificial Intelligence, </booktitle> <address> Denver, </address> <publisher> CO. </publisher> <pages> pp 118-130. </pages>
Reference: <author> Whitley, D. and Starkweather, T. </author> <title> (1990) Genitor II: a Distributed Genetic Algorithm. </title> <journal> Journal Expt. Theor. Artif. Intell., </journal> <volume> 2 </volume> <pages> 189-214 Whitley, </pages> <editor> D., Das, R., and Crabb, C. </editor> <title> (1992) Tracking Primary Hyperplane Competitors During Genetic Search. </title> <journal> Annals of Mathematics and Artificial Intelligence. </journal> 6:367-388. 
Reference: <author> Winston, P. </author> <booktitle> (1992) Artificial Intelligence, Third Edition. </booktitle> <publisher> Addison-Wesley. </publisher>
Reference: <author> Wright, A. </author> <title> (1991) Genetic Algorithms for Real Parameter Optimization. Foundations of Genetic Algorithms. </title> <editor> G. Rawlins, ed. </editor> <publisher> Morgan Kaufmann. </publisher>
Reference: <author> Wright, S. </author> <title> (1932) The Roles of Mutation, Inbreeding, Crossbreeding, and Selection in Evolution. </title> <booktitle> Proc. 6th Int. Congr. on Genetics, </booktitle> <pages> pp 356-366. 37 </pages>
References-found: 55

