URL: http://www.cse.psu.edu/~borah/gls96.ps
Refering-URL: http://www.cse.psu.edu/~borah/resume.html
Root-URL: http://www.cse.psu.edu
Title: Recent Developments in Performance Driven Steiner Routing: an Overview  
Author: Manjit Borah Robert Michael Owens Mary Jane Irwin 
Address: Park, PA 16801  
Affiliation: Department of Computer Science and Engineering The Pennsylvania State University University  
Abstract: The contribution of interconnect delay to the stage delay of a circuit is increasing with scaling of the minimum feature size. At larger feature size the interconnect delay contribution was small and the driver resistance was very large compared to wire resistance. Consequently, a simple lumped model was sufficient for evaluating and optimizing circuit delay. However, with sub-micron processes, the contribution of interconnect delay dominates the stage delay and the wire resistance becomes noticeable, making the interconnect delay dependent on the routing topology. Hence it is becoming necessary to use a more accurate model for estimating and optimizing interconnect delay. This paper surveys the recent advancements in techniques for generating on-chip interconnect topology for optimizing circuit performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. C. Hu, J. H. Huang, and A. B. Kahng. </author> <title> A Direct Combination of the Prim and Dijkstra Constructions for Improved Performance Driven Global Routing. </title> <booktitle> In Proccedings of IEEE IS-CAS, </booktitle> <month> May </month> <year> 1993. </year>
Reference-contexts: Cong et al, in [12] proposed the "shallow-light" routing construct which bounds both, the radius and the total length of the tree simultaneously, allowing better control in the tradeoff. Alpert et al, in <ref> [1] </ref> showed that the objective of minimizing the radius and minimizing the total length can be achieved by combining the techniques of Prim's and Dijkstra's minimum spanning tree algorithms.
Reference: [2] <author> H. B. Bakoglu. </author> <title> Circuits, Interconnections and Packaging for VLSI. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: As the feature sizes are scaled down, the gate delays improve with the scaling factor while local interconnect delay remain unchanged <ref> [2] </ref>. Hence, the delay contribution due to the interconnect becomes the dominant factor of the circuit delay in the sub-micron regime. Moreover, the increase in the wire resistance per unit length is quadratic with the scaling factor while the driver ON resistance is nearly unchanged [2]. <p> local interconnect delay remain unchanged <ref> [2] </ref>. Hence, the delay contribution due to the interconnect becomes the dominant factor of the circuit delay in the sub-micron regime. Moreover, the increase in the wire resistance per unit length is quadratic with the scaling factor while the driver ON resistance is nearly unchanged [2]. Thus, the ratio of the driver ON resistance to the unit wire resistance is decreasing super-linearly with the scaling factor. The interconnect topology plays a significant role in the circuit delay. A simple lumped model for interconnect delay is no longer applicable.
Reference: [3] <author> M. W. Bern. </author> <title> Two Probabilistic results on Rectilinear Steiner Trees. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 191-204, </pages> <year> 1988. </year>
Reference-contexts: This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes. Including the minimum spanning tree construction [24], it has O (n log n) complexity. Another class of heuristics <ref> [3, 34] </ref> emulates Kruskal's or Prim's minimum spanning tree construction [15].
Reference: [4] <author> K. D. Boese, A. B. Kahng, B. McCoy, and G. Robins. </author> <title> Fidelity and Near Optimality of Elmore Based Routing Constructions. </title> <booktitle> In Proccedings of ICCP, </booktitle> <pages> pages 81-84, </pages> <month> October </month> <year> 1993. </year>
Reference-contexts: Therefore subtrees with large capacitance should be close to the source. The Elmore delay model is found to be a reliable model for characterizing the RC interconnect delay of a tree <ref> [4, 27] </ref>. Although the resistance shielding and transmission line effects in global interconnect lines are not captured accurately by the Elmore delay model, it provides a fast and reliable way to evaluate the signal delay for on-chip interconnects.
Reference: [5] <author> K. D. Boese, A. B. Kahng, B. McKoy, and G. Robins. </author> <title> Rectilinear Steiner Trees with Minimum Elmore Delay. </title> <booktitle> In Proccedings of DAC, </booktitle> <pages> pages 381-386, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: The Steiner version of their algorithm (the SERT algorithm) has a complexity of O (n 4 ). In <ref> [5] </ref> they presented a branch-and-bound algorithm (BB-SORT) for computing the optimal Elmore routing tree for small (less than 10 nodes) nets. The authors of [5] also showed that the SERT algorithm produces routes with close to optimal Elmore delays (table 2, quoted from [5]). <p> The Steiner version of their algorithm (the SERT algorithm) has a complexity of O (n 4 ). In <ref> [5] </ref> they presented a branch-and-bound algorithm (BB-SORT) for computing the optimal Elmore routing tree for small (less than 10 nodes) nets. The authors of [5] also showed that the SERT algorithm produces routes with close to optimal Elmore delays (table 2, quoted from [5]). The extra wire-length overhead of the SERT route, compared to a minimum Steiner route is found to be very high. <p> In <ref> [5] </ref> they presented a branch-and-bound algorithm (BB-SORT) for computing the optimal Elmore routing tree for small (less than 10 nodes) nets. The authors of [5] also showed that the SERT algorithm produces routes with close to optimal Elmore delays (table 2, quoted from [5]). The extra wire-length overhead of the SERT route, compared to a minimum Steiner route is found to be very high. <p> delay with optimal delay Size of percent deviation from average CPU time net optimal Elmore delay (100 samples ) PER-St SERT-C PER-St SERT-C 4 0.52 4.11 3.7 ms 0.5 ms 6 1.43 8.7 6.0 ms 0.9 ms 8 1.85 14.13 8.2 ms 1.5 ms routes produced by the BBSORT-C algorithm <ref> [5] </ref> showed that the PER-Steiner algorithm on the average produces routes with nearly optimal Elmore delay to the critical sink (table 4). 6 Conclusions A survey of the recent techniques for performance oriented Steiner routing is presented.
Reference: [6] <author> K. D. Boese, A. B. Kahng, and G. Robins. </author> <title> High-Performance Routing Trees with Identified Critical Sinks. </title> <booktitle> In Proccedings of DAC, </booktitle> <pages> pages 182-187, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: While the above approaches for minimizing the radius use a linear delay model, recent approaches use the more accurate Elmore delay model. Boese et al, in <ref> [6] </ref> proposed method to minimize the maximum delay of a net using the Elmore delay model directly during the construction of the tree. <p> However, the results of this technique is sensitive to the alphabetic order chosen for the initial tree. Although the formulation of the problem in [38] is different from that of <ref> [6] </ref> the authors compared their results with [6] and showed that both algorithms produce routes with comparable average delays. <p> However, the results of this technique is sensitive to the alphabetic order chosen for the initial tree. Although the formulation of the problem in [38] is different from that of <ref> [6] </ref> the authors compared their results with [6] and showed that both algorithms produce routes with comparable average delays. <p> The algorithm based on Dreyfus-Wagner's method has exponential time complexity which makes it impractical for large nets. The CFD algorithm has asymptotic complexity fi (n 3 ). Boese et al, in <ref> [6] </ref> developed a routing heuristic for minimizing the Elmore delay to the identified critical sink (the SERT-C algorithm).
Reference: [7] <author> M. Borah, R. M. Owens, and M. J. Irwin. </author> <title> A Fast Routing Algorithm for Minimizing Elmore Delay to Identified Critical Sinks. </title> <journal> IEEE Transactions on CAD. </journal> <note> submitted, </note> <month> May </month> <year> 1995. </year>
Reference-contexts: The PER-Steiner algorithm has O (n 2 ) running time. A direct comparison between the PER-Steiner algorithm and the SERT-C algorithm showed that the PER-Steiner algorithm produces routes with significantly better Elmore delay to the critical sink than SERT-C (table 3) 2 with similar CPU time requirements <ref> [7] </ref>.
Reference: [8] <author> M. Borah, R. M. Owens, and M. J. Irwin. </author> <title> An Edge-Based Heuristic for Steiner Routing. </title> <journal> IEEE Transactions on CAD, </journal> <volume> 13(12) </volume> <pages> 1563-1568, </pages> <month> December </month> <year> 1994. </year>
Reference-contexts: The 1-Steiner heuristic, however, is too slow for a reasonably large net. Since a routing algorithm has to be applied numerous times during the process of layout evaluation, a fast routing algorithm is desirable. Borah et al, in <ref> [8] </ref> presented a simple, yet efficient heuristic for computing the Steiner approximation from the minimum spanning tree (figure 3). <p> A batched version of this algorithm is implemented using simple data-structures and techniques with O (n 2 ) time complexity and O (n) space. Using sophisticated techniques the running time of the batched ER heuristic can be further improved to O (n log n) <ref> [8] </ref>. The route quality of the batched ER heuristic is comparable to the batched 1-Steiner heuristic with one order speedup in running time. Table 1 summarizes the results from the best existing heuristics for rectilinear Steiner trees. <p> Columns 2 and 3 present the average reduction from the minimum spanning tree length by batched 1-Steiner and batched ER algorithm, respectively. Column 5 presents the improvements obtained by the optimal algorithm of [37]. It was noted in <ref> [8] </ref> that the routes produced by the 1-Steiner and the ER heuristics are different in nature and there are cases where one algorithm produces significantly better route than the other. <p> Source (b) (a) Critical Source Critical SERT-C route, critical sink Elmore delay=1.0 nS; (b) PER Steiner route, critical sink Elmore delay=0.72 nS Borah et al, in [9] presented an algorithm based on their edge-based (ER) heuristic <ref> [8] </ref> to compute Steiner routes with minimized Elmore delay to the critical sink (figure 5 (b)). Their algorithm (the PER-Steiner algorithm) uses three phases, each phase using the same ER heuristic with a different cost function.
Reference: [9] <author> M. Borah, R. M. Owens, and M. J. Irwin. </author> <title> Fast Algorithm for Performance Oriented Steiner Routing. </title> <booktitle> In Proceedings of Great Lakes Symposium on VLSI, </booktitle> <month> Mar </month> <year> 1995. </year>
Reference-contexts: Source (b) (a) Critical Source Critical SERT-C route, critical sink Elmore delay=1.0 nS; (b) PER Steiner route, critical sink Elmore delay=0.72 nS Borah et al, in <ref> [9] </ref> presented an algorithm based on their edge-based (ER) heuristic [8] to compute Steiner routes with minimized Elmore delay to the critical sink (figure 5 (b)). Their algorithm (the PER-Steiner algorithm) uses three phases, each phase using the same ER heuristic with a different cost function. <p> The cost functions in phase (2) and (3) use the Elmore delay model directly to determine the incremental effect of an ER operation on the critical sink delay <ref> [9] </ref>. The PER-Steiner algorithm has O (n 2 ) running time. A direct comparison between the PER-Steiner algorithm and the SERT-C algorithm showed that the PER-Steiner algorithm produces routes with significantly better Elmore delay to the critical sink than SERT-C (table 3) 2 with similar CPU time requirements [7].
Reference: [10] <author> J. P. Cohoon and L. J. Randall. </author> <title> Critical Net Routing. </title> <booktitle> Proceedings of ICCD, </booktitle> <pages> pages 174-179, </pages> <year> 1991. </year>
Reference-contexts: 1 (source at the center): (a) minimum cost tree, cost = radius R (1 + 2); (b) minimum radius tree (shortest path tree) cost = N R, radius = R; (c) with K spokes (N AE K): cost R (K + 2), radius R (1 + Cohoon et al, in <ref> [10] </ref> and Cong et al, in [11] first proposed approaches to minimize the radius of the routing tree using a geometric cost. The approach described in [10] uses a constrained tree construction around the geometric radius using a combination of the shortest path tree construction for minimum radius and the Steiner <p> R, radius = R; (c) with K spokes (N AE K): cost R (K + 2), radius R (1 + Cohoon et al, in <ref> [10] </ref> and Cong et al, in [11] first proposed approaches to minimize the radius of the routing tree using a geometric cost. The approach described in [10] uses a constrained tree construction around the geometric radius using a combination of the shortest path tree construction for minimum radius and the Steiner tree construction for minimum tree length.
Reference: [11] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong. </author> <title> Performance Driven Global Routing for Cell Based ICs. </title> <booktitle> Proceedings of ICCD, </booktitle> <pages> pages 170-173, </pages> <year> 1991. </year>
Reference-contexts: minimum cost tree, cost = radius R (1 + 2); (b) minimum radius tree (shortest path tree) cost = N R, radius = R; (c) with K spokes (N AE K): cost R (K + 2), radius R (1 + Cohoon et al, in [10] and Cong et al, in <ref> [11] </ref> first proposed approaches to minimize the radius of the routing tree using a geometric cost. <p> Otherwise it connects the node using the shortest path from the source. The approach in <ref> [11] </ref> also minimizes the radius, recognizing the importance of minimizing the length of the routing tree. It allows the maximum radius of the tree to be 1 + * factor larger than the geometric radius.
Reference: [12] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong. </author> <title> Provably Good Performance Driven Global Routing. </title> <journal> IEEE Transactions on CAD, </journal> <year> 1992. </year>
Reference-contexts: It allows the maximum radius of the tree to be 1 + * factor larger than the geometric radius. Hence, it allows a continuous tradeoff between the length of the routing tree and its radius using different values of *. Cong et al, in <ref> [12] </ref> proposed the "shallow-light" routing construct which bounds both, the radius and the total length of the tree simultaneously, allowing better control in the tradeoff.
Reference: [13] <author> J. Cong, K. S. Leung, and D. Zhou. </author> <title> Performance-driven Interconnect Design Based on Distributed RC Delay Model. </title> <booktitle> In Proccedings of DAC, </booktitle> <pages> pages 606-611, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Alpert et al, in [1] showed that the objective of minimizing the radius and minimizing the total length can be achieved by combining the techniques of Prim's and Dijkstra's minimum spanning tree algorithms. In <ref> [13] </ref> the authors use an A-tree construction 1 to obtain a balance between optimal Steiner tree and a shortest path tree using the intuitions drawn from the distributed RC model of [35].
Reference: [14] <author> J. Cong and P. Madden. </author> <title> Performance-driven Routing with Multiple Sources. </title> <booktitle> In Proccedings of ISCAS, </booktitle> <volume> volume I, </volume> <pages> pages 203-206, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Performance driven routing of nets with multiple sources (such as buses) has also been considered <ref> [14] </ref>.
Reference: [15] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms, chapter 24. </title> <publisher> McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: The resulting algorithm requires linear time on the number of nodes. Including the minimum spanning tree construction [24], it has O (n log n) complexity. Another class of heuristics [3, 34] emulates Kruskal's or Prim's minimum spanning tree construction <ref> [15] </ref>.
Reference: [16] <author> F. Dartu, N. Menezes, J. Qian, and L. Pillage. </author> <title> A Gate-Delay Model for High-Speed CMOS Circuits. </title> <booktitle> In Proceedings of DAC, </booktitle> <pages> pages 576-580, </pages> <year> 1994. </year>
Reference-contexts: The interconnect topology plays a significant role in the circuit delay. A simple lumped model for interconnect delay is no longer applicable. To complicate matters even more, the increasing circuit complexity is causing the global interconnect delays nearly independent of the driver strength due to resistive shielding effects <ref> [31, 16] </ref>. The delay of such interconnects must be optimized by inserting buffers or repeaters, using higher level metal layers and appropriately increasing the width of the wires.
Reference: [17] <author> W. C. </author> <title> Elmore. The Transient Response of Damped Linear Network with Particular Regard to Wideband Amplifiers. </title> <journal> Journal of Applied Physics, </journal> <volume> 19 </volume> <pages> 55-63, </pages> <year> 1948. </year>
Reference-contexts: Sakurai, in [36] also derived a simplified upper bound on the RC delay of a routing tree using empirical fit equations representing the contribution of the path resistance and the capacitance at a node. A more accurate estimation is obtained using the El-more delay <ref> [17] </ref>. The Elmore delay is computed as the 50% delay of the RC tree using the first (and the dominant) moment of its impulse response. The Elmore delay model provides an excellent tradeoff in terms of the computation time and accuracy.
Reference: [18] <author> M. Garey and D. S. Johnson. </author> <title> The Rectilinear Steiner Problem is NP Complete. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 32(4) </volume> <pages> 826-834, </pages> <year> 1977. </year>
Reference-contexts: Secondly, the capacitance of the net is minimized which reduces the switching capacitance of the node, reducing the power dissipation. A Steiner tree is used to minimize the interconnect length. Since optimal Steiner tree construction is an NP-hard problem <ref> [18] </ref>, approximation heuristics are commonly used for generating Steiner routes. For a detailed study of Steiner routing heuristics the reader is referred to [26, 33].
Reference: [19] <author> G. Georgakopoulos and C. H. Papadimitriou. </author> <title> The 1-Steiner Tree Problem. </title> <journal> Journal of Algorithms, </journal> <volume> 8 </volume> <pages> 122-130, </pages> <year> 1987. </year>
Reference-contexts: algorithms are fast, but produce routes far from optimal, only about 7 to 9% average reduction from the minimum spanning tree length. (a) (b) To improve the route quality of Steiner approximations, Kahng and Robins, in [25] proposed a heuristic based on the 1-Steiner construction proposed by Georgakopoulus and Papadimitriou <ref> [19] </ref>.
Reference: [20] <author> J. Griffith, G. Robins, J. S. Salowe, and T. Zhang. </author> <title> Closing the Gap: Near-Optimal Steiner Trees in Polynomial Time. </title> <journal> IEEE Transactions on CAD, </journal> <volume> 13(11) </volume> <pages> 1351-1365, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: The algorithm required about half an hour to compute the optimal Steiner route for 30 points. A comparison with the optimal Steiner routes generated by [37] show that the batched 1-Steiner algorithm produces near optimal routes <ref> [20] </ref>. The 1-Steiner heuristic, however, is too slow for a reasonably large net. Since a routing algorithm has to be applied numerous times during the process of layout evaluation, a fast routing algorithm is desirable.
Reference: [21] <author> J. M. Ho, G. Vijayan, and C. K. Wong. </author> <title> New Algorithms for the Rectilinear Steiner Tree Problem. </title> <journal> IEEE Transactions on CAD, </journal> <volume> 9(2) </volume> <pages> 185-193, </pages> <year> 1990. </year>
Reference-contexts: Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree. The simplest among the Steiner approximation heuristics is the edge-overlap class of heuristics <ref> [21, 28, 29] </ref>. We consider the heuristic presented in [21] as a representative of this class. This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes. <p> Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree. The simplest among the Steiner approximation heuristics is the edge-overlap class of heuristics [21, 28, 29]. We consider the heuristic presented in <ref> [21] </ref> as a representative of this class. This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes.
Reference: [22] <author> X. Hong, T. Xue, E. S. Kuh, C. K. Cheng, and J. Huang. </author> <title> Performance-Driven Steiner Tree Algorithm For Global Routing. </title> <booktitle> In Proceedings of DAC, </booktitle> <pages> pages 177-181, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Their algorithm has fi (n 3 ) time complexity. Hong et al <ref> [22] </ref> also proposed timing driven routing based on the simplified wire delay model of [36] as the upper bound on the delay. They developed two algorithms, one derived from Dreyfus-Wagner's dynamic programming method and the other, the Constructive Force Directed algorithm, based on Kruskal's minimum spanning tree (MST) algorithm.
Reference: [23] <author> F. K. Hwang. </author> <title> On Steiner minimal Trees with Rectilinear Distance. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 30(1) </volume> <pages> 104-114, </pages> <year> 1976. </year>
Reference-contexts: A Steiner tree is used to minimize the interconnect length. Since optimal Steiner tree construction is an NP-hard problem [18], approximation heuristics are commonly used for generating Steiner routes. For a detailed study of Steiner routing heuristics the reader is referred to [26, 33]. Hwang <ref> [23] </ref> showed that any heuristic that improves upon the length of the minimum spanning tree (MST) generates a Steiner tree at most 1.5 times larger than the optimal Steiner tree. Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree.
Reference: [24] <author> F. K. Hwang. </author> <title> An O(n log n) Algorithm for Rectilinear Minimal Spanning Trees. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 26(2) </volume> <pages> 177-182, </pages> <month> April </month> <year> 1979. </year>
Reference-contexts: We consider the heuristic presented in [21] as a representative of this class. This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes. Including the minimum spanning tree construction <ref> [24] </ref>, it has O (n log n) complexity. Another class of heuristics [3, 34] emulates Kruskal's or Prim's minimum spanning tree construction [15].
Reference: [25] <author> A. B. Kahng and G. Robins. </author> <title> A New Class of Steiner Tree Heuristics with Good Performance: the Iterated 1-steiner Approach. </title> <booktitle> In Proceedings of ICCAD, </booktitle> <volume> volume 9, </volume> <pages> pages 428-431, </pages> <year> 1990. </year>
Reference-contexts: Both of these classes of algorithms are fast, but produce routes far from optimal, only about 7 to 9% average reduction from the minimum spanning tree length. (a) (b) To improve the route quality of Steiner approximations, Kahng and Robins, in <ref> [25] </ref> proposed a heuristic based on the 1-Steiner construction proposed by Georgakopoulus and Papadimitriou [19].
Reference: [26] <author> A. B. Kahng and G. Robins. </author> <title> On Optimal Interconnections for VLSI. </title> <address> Kluwer-Academic, </address> <year> 1995. </year>
Reference-contexts: A Steiner tree is used to minimize the interconnect length. Since optimal Steiner tree construction is an NP-hard problem [18], approximation heuristics are commonly used for generating Steiner routes. For a detailed study of Steiner routing heuristics the reader is referred to <ref> [26, 33] </ref>. Hwang [23] showed that any heuristic that improves upon the length of the minimum spanning tree (MST) generates a Steiner tree at most 1.5 times larger than the optimal Steiner tree. Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree.
Reference: [27] <author> S. Kim, R. M. Owens, and M. J. Irwin. </author> <title> Experiments With a Performance Driven Module Generator. </title> <booktitle> In Proceedings of DAC, </booktitle> <pages> pages 687-690, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Therefore subtrees with large capacitance should be close to the source. The Elmore delay model is found to be a reliable model for characterizing the RC interconnect delay of a tree <ref> [4, 27] </ref>. Although the resistance shielding and transmission line effects in global interconnect lines are not captured accurately by the Elmore delay model, it provides a fast and reliable way to evaluate the signal delay for on-chip interconnects.
Reference: [28] <author> J. H. Lee, N. K. Bose, and F. K. Hwang. </author> <title> Use of Steiner's problem in sub-optimal routing in rectilinear metric. </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <pages> pages 470-476, </pages> <year> 1976. </year>
Reference-contexts: Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree. The simplest among the Steiner approximation heuristics is the edge-overlap class of heuristics <ref> [21, 28, 29] </ref>. We consider the heuristic presented in [21] as a representative of this class. This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes.
Reference: [29] <author> K. W. Lee and C. Sechen. </author> <title> A New Global Router for Row-Based Layout. </title> <booktitle> In Proceedings of ICCAD, </booktitle> <pages> pages 180-183, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree. The simplest among the Steiner approximation heuristics is the edge-overlap class of heuristics <ref> [21, 28, 29] </ref>. We consider the heuristic presented in [21] as a representative of this class. This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes.
Reference: [30] <author> A. Lim, S. W. Cheng, and C. T. Wu. </author> <title> Performance Oriented Rectilinear Steiner Trees. </title> <booktitle> In Proccedings of DAC, </booktitle> <pages> pages 171-176, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: The delay model used in this algorithm is that of [36] which is less accurate than the Elmore delay model. In <ref> [30] </ref> Lim, Cheng and Wu gave an algorithm for minimizing the delay to identified critical sinks (POMRST-algorithm) using a geometric cost function in which they minimize a combination of the total tree length and the source-to sink distance, based on Prim's MST construction.
Reference: [31] <author> P. R. O'Brien and T. L. Savarino. </author> <title> Modeling the Driving Point Characteristic of Resistive Interconnect for Accurate Delay Estimation. </title> <booktitle> In Proceedings of ICCAD, </booktitle> <pages> pages 512-515, </pages> <year> 1989. </year>
Reference-contexts: The interconnect topology plays a significant role in the circuit delay. A simple lumped model for interconnect delay is no longer applicable. To complicate matters even more, the increasing circuit complexity is causing the global interconnect delays nearly independent of the driver strength due to resistive shielding effects <ref> [31, 16] </ref>. The delay of such interconnects must be optimized by inserting buffers or repeaters, using higher level metal layers and appropriately increasing the width of the wires.
Reference: [32] <author> S. Prasitjutrakul and W. Kubitz. </author> <title> A Timing-Driven Global Router for Custom Chip Design. </title> <booktitle> In Proceedings of ICCAD, </booktitle> <pages> pages 48-51, </pages> <year> 1990. </year>
Reference-contexts: Earliest attempt at routing to minimize sink delay is found in <ref> [32] </ref>, where the authors use an A fl algorithm to compute the route with maximized minimum delay slack to any sink.
Reference: [33] <author> D. Richards, F. K. Hwang, and W. Winter. </author> <title> Steiner Tree Problems, chapter 2. </title> <publisher> North Holland, </publisher> <year> 1992. </year>
Reference-contexts: A Steiner tree is used to minimize the interconnect length. Since optimal Steiner tree construction is an NP-hard problem [18], approximation heuristics are commonly used for generating Steiner routes. For a detailed study of Steiner routing heuristics the reader is referred to <ref> [26, 33] </ref>. Hwang [23] showed that any heuristic that improves upon the length of the minimum spanning tree (MST) generates a Steiner tree at most 1.5 times larger than the optimal Steiner tree. Encouraged by this result several heuristics have been developed that improves upon the minimum spanning tree.
Reference: [34] <author> D. S. Richards. </author> <title> Fast Heuristic Algorithms for Rectilinear Steiner Trees. </title> <journal> Algorithmica, </journal> <volume> 4 </volume> <pages> 191-207, </pages> <year> 1989. </year>
Reference-contexts: This heuristic starts with an MST and merges the bounding boxes of adjacent edges introducing Steiner points (figure 1). The resulting algorithm requires linear time on the number of nodes. Including the minimum spanning tree construction [24], it has O (n log n) complexity. Another class of heuristics <ref> [3, 34] </ref> emulates Kruskal's or Prim's minimum spanning tree construction [15].
Reference: [35] <author> J. Rubinstein, P. Penfield, and M. Horowitz. </author> <title> Signal Delay in RC Tree Networks. </title> <journal> IEEE Transactions on CAD, </journal> <volume> 2(3) </volume> <pages> 201-211, </pages> <month> Mar </month> <year> 1983. </year>
Reference-contexts: A truly distributed RC model is difficult to compute accurately, therefore several lumped approximations have been proposed for estimating the RC delay quickly. Penfield et al, in <ref> [35] </ref> presented models to compute the upper and the lower bounds on the delay of an RC tree. The upper bound is computed as the sum of the open circuit time constants of all the nodes, a term which can be computed easily. <p> In [13] the authors use an A-tree construction 1 to obtain a balance between optimal Steiner tree and a shortest path tree using the intuitions drawn from the distributed RC model of <ref> [35] </ref>. While the above approaches for minimizing the radius use a linear delay model, recent approaches use the more accurate Elmore delay model. Boese et al, in [6] proposed method to minimize the maximum delay of a net using the Elmore delay model directly during the construction of the tree.
Reference: [36] <author> T. Sakurai. </author> <title> Approximation of Wiring Delay in MOSFET LSI. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> SC-18(4):418-426, </volume> <year> 1983. </year>
Reference-contexts: Penfield et al, in [35] presented models to compute the upper and the lower bounds on the delay of an RC tree. The upper bound is computed as the sum of the open circuit time constants of all the nodes, a term which can be computed easily. Sakurai, in <ref> [36] </ref> also derived a simplified upper bound on the RC delay of a routing tree using empirical fit equations representing the contribution of the path resistance and the capacitance at a node. A more accurate estimation is obtained using the El-more delay [17]. <p> This is a generalized version of performance driven routing where a time bound is computed for each sink using a timing analyzer and the timing slack at each pin is maximized. The delay model used in this algorithm is that of <ref> [36] </ref> which is less accurate than the Elmore delay model. <p> Their algorithm has fi (n 3 ) time complexity. Hong et al [22] also proposed timing driven routing based on the simplified wire delay model of <ref> [36] </ref> as the upper bound on the delay. They developed two algorithms, one derived from Dreyfus-Wagner's dynamic programming method and the other, the Constructive Force Directed algorithm, based on Kruskal's minimum spanning tree (MST) algorithm.
Reference: [37] <author> J. S. Salowe and D. M. Warme. </author> <title> An Exact Rectilinear Steiner Tree Algorithm. </title> <booktitle> In Proccedings of ICCD, </booktitle> <pages> pages 472-475, </pages> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Using sophisticated techniques the asymptotic time complexity of batched 1-Steiner algorithm can be improved to O (n 2 log n) with O (n 2 log n) space requirement. The routes produced by the 1-Steiner heuristic is better than any approximation heuristic proposed so far. Salowe and Warme in <ref> [37] </ref> presented an algorithm for computing the optimal Steiner tree using a backtracking search technique. The algorithm required about half an hour to compute the optimal Steiner route for 30 points. A comparison with the optimal Steiner routes generated by [37] show that the batched 1-Steiner algorithm produces near optimal routes <p> Salowe and Warme in <ref> [37] </ref> presented an algorithm for computing the optimal Steiner tree using a backtracking search technique. The algorithm required about half an hour to compute the optimal Steiner route for 30 points. A comparison with the optimal Steiner routes generated by [37] show that the batched 1-Steiner algorithm produces near optimal routes [20]. The 1-Steiner heuristic, however, is too slow for a reasonably large net. Since a routing algorithm has to be applied numerous times during the process of layout evaluation, a fast routing algorithm is desirable. <p> Table 1 summarizes the results from the best existing heuristics for rectilinear Steiner trees. Columns 2 and 3 present the average reduction from the minimum spanning tree length by batched 1-Steiner and batched ER algorithm, respectively. Column 5 presents the improvements obtained by the optimal algorithm of <ref> [37] </ref>. It was noted in [8] that the routes produced by the 1-Steiner and the ER heuristics are different in nature and there are cases where one algorithm produces significantly better route than the other.
Reference: [38] <author> A. Vittal and M. Marek-Sadowska. </author> <title> Minimal Delay Interconnect Design Using Alphabetic Trees. </title> <booktitle> In Proceedings of DAC, </booktitle> <pages> pages 392-396, </pages> <year> 1994. </year>
Reference-contexts: Recently, Vittal et al, in <ref> [38] </ref> developed an algorithm to compute routing trees to minimize the average Elmore delay of a net using alphabetic trees with O (n 2 ) time complexity. <p> However, the results of this technique is sensitive to the alphabetic order chosen for the initial tree. Although the formulation of the problem in <ref> [38] </ref> is different from that of [6] the authors compared their results with [6] and showed that both algorithms produce routes with comparable average delays.
References-found: 38

