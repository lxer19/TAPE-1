URL: http://www.cs.rutgers.edu/~shklar/papers/ngits95.ps
Refering-URL: http://www.cs.rutgers.edu/~shklar/papers/
Root-URL: http://www.cs.rutgers.edu
Email: shklar@cs.rutgers.edu  
Title: Abstract for building software repositories and storing geo-spatial data. It provides access to the original
Author: Leon Shklar Kshitij Shah Chumki Basu Vipul Kashyap 
Keyword: 2.0 Structure of Metadata  
Address: 445 South Street, Morris  NJ 07960-6438  Brunswick, NJ 08902  Georgia, Athens, GA 30602-7404  
Affiliation: Bell Communications Research,  town,  Computer Science Department, Rutgers University, New  LSDIS, Department of Computer Science, University of  
Note: 1.0 Introduction The InfoHarness prototype is now operational and is being trialed at Bellcore  The important advantage of InfoHarness is providing  This is achieved by  that are described in this section. 2.1 InfoHarness Objects An InfoHarness object (IHO) is defined recursively to be one of the following:  InfoHarness is a Bellcore trademark Presented at the Second International Workshop on Next Generation Information Technologies (NGITS95), June 28-30, 1995, Naharia, Israel.  
Abstract: In our previous work [shk94], we have discussed providing integrated and rapid access to existing heterogeneous information without any restructuring, reformatting or relocation of data. Such access is achieved through the generation of metadata that encapsulates the original information. We are currently working on designing a data modeling language aimed at controlling the metadata generation process. In this paper, we discuss applying this language to modeling heterogeneous information and demonstrate the ease with which the information may be made available for search and browsing. The InfoHarness system [shk94] has been designed to provide rapid access to huge amounts of heterogeneous information without its relocation, restructuring, or reformatting. Many researchers have investigated the use of metadata to support run-time access to the original information [boh94, fis91, gar93, gro94, hsu91, jai94, sho93], as well as the use of data mining for the automatic extraction of metadata [mat93,sho93]. We have developed and synthesized some of the ideas contained in these efforts to provide advanced search and browsing capabilities without imposing constraints on information suppliers. We are currently working on defining a data modeling language, which we refer to as the InfoHarness Repository Definition Language (IRDL), to control the metadata generation process. As in [kha94], we treat modeling as an abstraction for the purpose of understanding and utilization. Under this interpretation, related portions of information may be grouped together by imposing logical structures on the physical data. The idea is to provide a semantically-tailored view of data and facilitate search and browsing by imposing the contains, is-contained-in, and part-of relationships. The modeling approach to representing heterogeneous information is supported by IRDL, which aids in logically linking together heterogeneous components. (WWW) browsers. An interpreter that converts IRDL statements into metadata entities is under construction. In this paper, we demonstrate the exibility of the language by discussing the generation of information repositories that contain images, documents, and arbitrarily formatted data. In section 2, we define the basic concepts employed by InfoHarness. In the following section, we discuss the main features of our modeling language designed to control the metadata generation process. In section 4, we discuss the examples of applying IRDL to modeling heterogeneous information. In the two final sections, we discuss related work and outline our future plans. Metadata entities, which encapsulate units of physical information of interest to end-users, are called information units (IU). An IU may be associated with a file (e.g., a man page), a portion of a file (e.g., a C function), a set of files (e.g., a set of related man pages), or a request for the retrieval of data from an external source (e.g., a database query). For example, a C file and a function that occurs in this file may be encapsulated by separate information units. 
Abstract-found: 1
Intro-found: 1
Reference: [bas91] <author> V.R. Basili, </author> <title> Support for comprehensive reuse, </title> <journal> Software Eng. Journal, </journal> <volume> pp.303-316, </volume> <year> 1991. </year>
Reference: [boh94] <author> K. Bohm and T. Rakow, </author> <title> Metadata for Multimedia Documents, SIGMOD Record, special issue on Metadata for Digital Media, </title> <month> December </month> <year> 1994. </year>
Reference-contexts: 1.0 Introduction The InfoHarness system [shk94] has been designed to provide rapid access to huge amounts of heterogeneous information without its relocation, restructuring, or reformatting. Many researchers have investigated the use of metadata to support run-time access to the original information <ref> [boh94, fis91, gar93, gro94, hsu91, jai94, sho93] </ref>, as well as the use of data mining for the automatic extraction of metadata [mat93,sho93]. We have developed and synthesized some of the ideas contained in these efforts to provide advanced search and browsing capabilities without imposing constraints on information suppliers.
Reference: [bur87] <author> B.A. Burton, R.W. Aragon, S.A. Bailey, K.D. Koehler and L.A. Mayes, </author> <title> The reusable software library, </title> <journal> IEEE Software, </journal> <pages> pp. 25-33, </pages> <month> July </month> <year> 1987. </year>
Reference: [che94] <author> F. Chen, M. Hearst, J. Kupiec, J. Pederson and L. Wilcox, </author> <title> Metadata for Mixed-Media Access, SIGMOD Record, special issue on Metadata for Digital Media, </title> <month> December </month> <year> 1994. </year>
Reference: [con87] <author> E.J. Conklin, </author> <title> Hypertext: an introduction and survey, </title> <journal> IEEE Computer, </journal> <volume> Vol 20(9), </volume> <pages> pp 17-41, </pages> <year> 1987. </year>
Reference-contexts: The structure definition component, which is currently the most well-developed component of the language, focuses on defining sets. The type definition component includes declarative support for new data types, as well as new indexing technologies. Other methodologies exist for capturing the internal structure of heterogeneous data <ref> [con87, hal87, hal88, nie90, tom91] </ref>. Representations within hypertext systems capture basic notions of objects (nodes) and relationships (links) which are used to build complex structures (e.g., hierarchies, arbitrary networks).
Reference: [cro90] <author> C.J. Crouch, </author> <title> An approach to the automatic construction of global thesauri, </title> <journal> Inform. Processing and Management, </journal> <volume> vol. 26(5), </volume> <pages> pp. 629-640, </pages> <year> 1990. </year>
Reference-contexts: Software reusability now extends beyond code and includes other software assets such as specifications, designs, test cases, plans, data, and documentation <ref> [pri88, len87, inc90, bur87,bas91, cro90] </ref>. The construction of digital libraries and the modeling of geo-spatial data require assembling a variety of media types, both structured and unstructured, and consequently ensuring ease of access and manipulation.
Reference: [dee90] <author> S. Deerwester, S.T. Dumais, G.W. Furnas, T.K. Landauer and R. Hashman, </author> <title> Indexing by Latent Semantic Indexing, </title> <journal> Journal of the American Society for Information Science, </journal> <volume> 41(6), </volume> <year> 1990. </year>
Reference-contexts: Create simple IHOs that encapsulate individual sections that occur in this document. 1.2. Create a composite IHO that encapsulates the doc ument and points to IHOs created in step 1.1. 2. Create an indexed collection of the composite IHOs created in step 1, using Latent Semantic Indexing (LSI) <ref> [dee90] </ref> for indexing physical data. These steps are implemented by the sample IRDL program in Fig. 3. The type declaration statements in this program indicate that LSI is a collection type and that TEX and TEX_S are data types.
Reference: [fal94] <author> B. Falkenhainer, et al. </author> <title> CML: A Compositional Modeling Language, </title> <type> DRAFT. </type>
Reference-contexts: We categorize the languages examined below as algebraic model formulation generators (AMPL [fou87], GAMS [ken87], GEML [neu94], LINGO [lin91], LPL [hur89]), graphical model generators (GOOD [gys94], GYNGEN [for94]), and hybrid/compositional model generators with an underlying representation based on mathematical and symbolic properties (CML <ref> [fal94] </ref>, SHSML [tay93]). In the following discussion, we examine these languages along the structure and the type definition dimensions. In all cases, a language is reective of the modeling paradigm from which it evolved.
Reference: [fis91] <author> G. Fischer and C. Stevens, </author> <title> Information access in complex, poorly structured information spaces, </title> <booktitle> Proceedings of the CHI Conference91, </booktitle> <year> 1991. </year>
Reference-contexts: 1.0 Introduction The InfoHarness system [shk94] has been designed to provide rapid access to huge amounts of heterogeneous information without its relocation, restructuring, or reformatting. Many researchers have investigated the use of metadata to support run-time access to the original information <ref> [boh94, fis91, gar93, gro94, hsu91, jai94, sho93] </ref>, as well as the use of data mining for the automatic extraction of metadata [mat93,sho93]. We have developed and synthesized some of the ideas contained in these efforts to provide advanced search and browsing capabilities without imposing constraints on information suppliers.
Reference: [for94] <author> M. Forster nad P. Mevert, </author> <title> A tool for network modeling, </title> <journal> European Journal of Operational Research 72, </journal> <pages> 287-299, </pages> <year> 1994. </year>
Reference-contexts: Although modeling languages borrow from the classical hierarchical, relational and network approaches, a number of them incorporate and extend the relational model. We categorize the languages examined below as algebraic model formulation generators (AMPL [fou87], GAMS [ken87], GEML [neu94], LINGO [lin91], LPL [hur89]), graphical model generators (GOOD [gys94], GYNGEN <ref> [for94] </ref>), and hybrid/compositional model generators with an underlying representation based on mathematical and symbolic properties (CML [fal94], SHSML [tay93]). In the following discussion, we examine these languages along the structure and the type definition dimensions. In all cases, a language is reective of the modeling paradigm from which it evolved.
Reference: [fou87] <author> R. Fourer, D.M. Gay and B.W. Kernighan, AMPL: </author> <title> A Mathematical Programming Language, </title> <institution> Technical Report 87-03 Department of Industrial Engineering and Management Sciences, Northwestern University, </institution> <address> Evanston, IL, </address>
Reference-contexts: The concept of a simple, declarative language to support modeling is not new. Although modeling languages borrow from the classical hierarchical, relational and network approaches, a number of them incorporate and extend the relational model. We categorize the languages examined below as algebraic model formulation generators (AMPL <ref> [fou87] </ref>, GAMS [ken87], GEML [neu94], LINGO [lin91], LPL [hur89]), graphical model generators (GOOD [gys94], GYNGEN [for94]), and hybrid/compositional model generators with an underlying representation based on mathematical and symbolic properties (CML [fal94], SHSML [tay93]). In the following discussion, we examine these languages along the structure and the type definition dimensions.
Reference: [gar93] <author> F. Garzotto. P. Paolini, and D. Schwabe. </author> <month> HDM </month> - 
Reference-contexts: 1.0 Introduction The InfoHarness system [shk94] has been designed to provide rapid access to huge amounts of heterogeneous information without its relocation, restructuring, or reformatting. Many researchers have investigated the use of metadata to support run-time access to the original information <ref> [boh94, fis91, gar93, gro94, hsu91, jai94, sho93] </ref>, as well as the use of data mining for the automatic extraction of metadata [mat93,sho93]. We have developed and synthesized some of the ideas contained in these efforts to provide advanced search and browsing capabilities without imposing constraints on information suppliers.
References-found: 12

