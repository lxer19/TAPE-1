URL: http://www.cs.umd.edu/users/hwang/papers/icde.ps
Refering-URL: http://www.cs.umd.edu/users/hwang/
Root-URL: 
Title: Distributed Video Presentations  
Author: Eenjun Hwang, V.S. Subrahmanian B. Prabhakaran 
Address: College Park, USA 20742 Singapore 119260  
Affiliation: Computer Science Department Dept. of Computer Science University of Maryland National University of Singapore  
Abstract: In this paper, we consider a distributed video server environment where video movies need not be stored entirely in one server. Blocks of a video movie are allowed to be distributed and replicated over multiple video servers. Customers are served by one video server. This video server, termed originating server, might have to interact with other servers for downloading missing blocks of the requested movie. We present three types of presentation plans that an originating server can possibly construct for satisfying a customer's request. A presentation plan can be considered as a detailed (temporally synchronized) sequence of steps carried out by the originating server for presenting the requested movie to the customer. Creation of presentation plans involves obtaining commitments from other video servers and the network service provider, as well as making commitments of local resources, within the limitations of available bandwidth, available buffer, and customer consumption rates. For evaluating the goodness of a presentation plan, we introduce two measures of optimality for presentation plans : minimizing wait time for a customer, and minimizing access bandwidth. We present algorithms for computing optimal presentation plans, and compare experimentally their performance. We have also mathematically proved certain results for the presentation plans. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Adali, K.S. Candan, S.-S. Chen, K. Erol, </author> <title> and V.S. Subrahmanian, "Advanced Video Informa (a) using naive buffer allocation (b) using dynamic buffer allocation tion Systems", </title> <journal> ACM Multimedia Systems Journal, </journal> <volume> 4, </volume> <pages> pps 172-186, </pages> <year> 1996. </year>
Reference-contexts: For a hybrid presentation plan, the customer wait is defined to be r 1 :CustConsStart <ref> [1] </ref>. An alternative criterion for optimality is access bandwidth. Every time the originating server satisfying a customer's request reads data into its buffers, it does so because either the data was shipped to it by another server, or because it read it from its local disk. <p> Suppose that buf 1 buf 2 . Then for any presentation plan PP: WAIT NL 2 P P WAIT N L 1 P P : 7 Related Work In the rapidly emerging area of multimedia databases [9] and video databases <ref> [1, 15] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network. Issues in the design of a video on-demand server have been dealt with in [10].
Reference: [2] <author> K.S. Candan, E. Hwang and V.S. Subrahma-nian, </author> <title> "An Event-Based Model for Continuous Media Data on Heterogeneous Disk Servers", </title> <journal> ACM Multimedia Systems Journal, </journal> <note> accepted, to appear. </note>
Reference-contexts: The access patterns of the movie follow a Zipf distribution and use raw data obtained from a video rental store [18], and that has previously been used [4]. For the movie placement mapping, we use the concept of replication ratio defined originally in <ref> [2] </ref>.
Reference: [3] <author> K. S. Candan, B. Prabhakaran, and V. S. Subrahmanian, </author> <title> "CHIMP : A Framework for Supporting Multimedia Document Authoring and Presentation", </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <address> Boston, </address> <month> November </month> <year> 1996. </year>
Reference-contexts: Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. [11, 13] discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. <ref> [3] </ref> describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. Caching of movie blocks has been described in [4]. They also provide valuable user access patterns of movies derived from a real-life video rental store data.
Reference: [4] <author> A. Dan and D. Sitaram, </author> <title> "A Generalized Interval Caching Policy for Mixed Interactive and Long Video Workloads", </title> <booktitle> Multimedia Computing and Networking, </booktitle> <address> San Jose, </address> <month> January </month> <year> 1996. </year>
Reference-contexts: Arrival Time 5-25 sec ( avg. 12 ) Request Pattern data referenced in <ref> [4] </ref> Number of Servers 5 Disk Buffer size 30 MB Disk Bandwidth Avg. 1.9 MB Table 3: Parameters Used For Simulation 5 Simulation Experiments Simulation experiments of the suggested VoD architecture were carried out. A total of 600 customers were assumed to make requests for movies. <p> A total of 600 customers were assumed to make requests for movies. Table 3 summarizes the parameters used for simulation. The access patterns of the movie follow a Zipf distribution and use raw data obtained from a video rental store [18], and that has previously been used <ref> [4] </ref>. For the movie placement mapping, we use the concept of replication ratio defined originally in [2]. <p> Caching of movie blocks has been described in <ref> [4] </ref>. They also provide valuable user access patterns of movies derived from a real-life video rental store data. In our work, we use the same access pattern for our experiments. 8 Conclusions In this paper, we have provided a distributed VoD architecture that supports customer-server and server server interactions.
Reference: [5] <author> A. Dan, M. Kienzle, and D. Sitaram, </author> <title> "A Dynamic Policy of Segment Replication for Load-balancing in Video-On-Demand Servers", </title> <journal> ACM Multimedia Systems Journal, </journal> <year> 1995. </year>
Reference: [6] <author> A. Drapeau, D. Patterson, R. Katz, </author> <title> "Toward Workload Characterization of Video Server and Digital Library Applications", </title> <booktitle> ACM Sigmetrics Conf. on Measurement and Modeling of Computer Systems, </booktitle> <address> Nashville, </address> <month> May </month> <year> 1994. </year>
Reference: [7] <author> D. Jaday, C. Srinilta, A. Choudhary, P.B. Berra, </author> <title> "Design and Evaluation of Data Access Strategies in a High Performance Multimedia-on-Demand Server", </title> <booktitle> Proc. of IEEE Multimedia, </booktitle> <year> 1995. </year>
Reference-contexts: Issues in the design of multi-user HDTV storage server have been discussed in [16]. In contrast, we deal with the construction of presentation plans to deliver videos across distributed networked sites. Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [8, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented.
Reference: [8] <author> T.D.C. Little, et al, </author> <title> "A Digital On-demand Video Service Supporting Content-based Queries", </title> <booktitle> Proc. of ACM Multimedia, </booktitle> <address> Ana-heim, CA, </address> <month> August </month> <year> 1993, </year> <pages> pp. 427-436. </pages>
Reference-contexts: Issues in the design of multi-user HDTV storage server have been discussed in [16]. In contrast, we deal with the construction of presentation plans to deliver videos across distributed networked sites. Data access strategies in a high performance Multimedia-on-Demand server have been discussed in <ref> [8, 7] </ref>. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented.
Reference: [9] <author> S. Marcus and V.S. Subrahmanian, </author> <title> "Foundations of Multimedia Database Systems", </title> <journal> Journal of the ACM, </journal> <volume> Vol. 43, 3, </volume> <pages> pps 474-523, </pages> <year> 1996. </year>
Reference-contexts: Suppose that buf 1 buf 2 . Then for any presentation plan PP: WAIT NL 2 P P WAIT N L 1 P P : 7 Related Work In the rapidly emerging area of multimedia databases <ref> [9] </ref> and video databases [1, 15], users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network. Issues in the design of a video on-demand server have been dealt with in [10].
Reference: [10] <author> A.N. Mourad, </author> <title> "Issues in the Design of a Storage Server For Video-on-Demand", </title> <journal> ACM/Springer-Verlag Multimedia Systems, </journal> <volume> (4), </volume> <year> 1996, </year> <pages> pp. 70-86. </pages>
Reference-contexts: Issues in the design of a video on-demand server have been dealt with in <ref> [10] </ref>. The emphasis has been on scheduling mechanisms for disk accesses that (a) using naive buffer allocation (b) using dynamic buffer allocation (a) using naive buffer allocation (b) using dynamic buffer allocation significantly lower the buffer-size requirements in the case of disk arrays.
Reference: [11] <author> J. Nussbaumer, B. Patel, F. Schaffa, and J.P.G. Sterbenz, </author> <title> "Networking Requirements for Interactive Video on Demand", </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <month> January </month> <year> 1995. </year>
Reference-contexts: Data access strategies in a high performance Multimedia-on-Demand server have been discussed in [8, 7]. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. <ref> [11, 13] </ref> discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [3] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. Caching of movie blocks has been described in [4].
Reference: [12] <author> C.H. Papadimitriou, S. Ramanathan, and P. Venkat Rangan, </author> <title> "Information Caching for Delivery of Personalized Video Programs on Home Entertainment Channels", </title> <booktitle> Proc. of IEEE Multimedia, </booktitle> <year> 1995. </year>
Reference: [13] <author> S.V. Raghavan, B. Prabhakaran and Satish K. Tripathi, </author> <title> "Synchronization Representation and Traffic Source Modeling in Orchestrated Presentation", </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> Vol. 14, No. 1, </volume> <month> January </month> <year> 1996. </year>
Reference-contexts: Data access strategies in a high performance Multimedia-on-Demand server have been discussed in [8, 7]. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. <ref> [11, 13] </ref> discuss the network requirements for multimedia-on demand. [17] presents resource reservation schemes for guaranteeing network throughput. [3] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. Caching of movie blocks has been described in [4].
Reference: [14] <author> Eenjun Hwang, B. Prabhakaran, </author> <title> V.S. Subrah-manian, "Presentation Planning for Distributed Video Systems", </title> <address> CS-TR-3723 UMIACS-TR-96-91, </address> <year> 1996. </year>
Reference-contexts: Using data obtained from a video store to characterize access patterns for video rentals, we derive experimental results showing that the notion of a hybrid presentation plan seems to be the best of the three types of plans. Full details of the results discussed here can be obtained from <ref> [14] </ref>. Acknowledgements : We are grateful to Asit Dan for providing us with the data in [18].
Reference: [15] <author> D. Rotem and J.L. Zhao, </author> <title> "Buffer Management for Video Database Systems", </title> <booktitle> Proc. of IEEE Intl. Conf. on Data Engineering, </booktitle> <year> 1995, </year> <month> pps 439-448. </month>
Reference-contexts: Suppose that buf 1 buf 2 . Then for any presentation plan PP: WAIT NL 2 P P WAIT N L 1 P P : 7 Related Work In the rapidly emerging area of multimedia databases [9] and video databases <ref> [1, 15] </ref>, users may query a large distributed multimedia archive and retrieve the desired videos (in part, or in whole) across the network. Issues in the design of a video on-demand server have been dealt with in [10].
Reference: [16] <author> H.M. Vin and P.V. Rangan, </author> <title> "Design of a Multiuser HDTV Storage Server", </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <volume> Vol. 11, No. 1, </volume> <month> January </month> <year> 1993. </year>
Reference-contexts: Issues in the design of multi-user HDTV storage server have been discussed in <ref> [16] </ref>. In contrast, we deal with the construction of presentation plans to deliver videos across distributed networked sites. Data access strategies in a high performance Multimedia-on-Demand server have been discussed in [8, 7]. Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented.
Reference: [17] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, D. Zappala, "RSVP: </author> <title> A New Resource ReSerVation Protocol", </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993, </year>
Reference-contexts: Here, algorithms for a multimedia server operation for retrieval of remote media objects are presented. The algorithms also exploit knowledge of data access patterns to improve system throughput. [11, 13] discuss the network requirements for multimedia-on demand. <ref> [17] </ref> presents resource reservation schemes for guaranteeing network throughput. [3] describes how retrieval schedules can be determined by a client based on flexible temporal specifications of multimedia document presentation. Caching of movie blocks has been described in [4].
Reference: [18] <author> Video Store Magazine, </author> <month> Dec. 13, </month> <year> 1992. </year>
Reference-contexts: A total of 600 customers were assumed to make requests for movies. Table 3 summarizes the parameters used for simulation. The access patterns of the movie follow a Zipf distribution and use raw data obtained from a video rental store <ref> [18] </ref>, and that has previously been used [4]. For the movie placement mapping, we use the concept of replication ratio defined originally in [2]. <p> Full details of the results discussed here can be obtained from [14]. Acknowledgements : We are grateful to Asit Dan for providing us with the data in <ref> [18] </ref>.
References-found: 18

