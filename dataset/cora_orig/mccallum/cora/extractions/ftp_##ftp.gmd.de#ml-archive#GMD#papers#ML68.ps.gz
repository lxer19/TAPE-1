URL: ftp://ftp.gmd.de/ml-archive/GMD/papers/ML68.ps.gz
Refering-URL: http://www.cs.bham.ac.uk/~anp/bibtex/kdd.bib.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: The ILP description learning problem: Towards a general model-level definition of data mining in ILP  
Author: Stefan Wrobel Saso Dzeroski 
Address: Schlo Birlinghoven 53754 Sankt Augustin  
Affiliation: GMD, FIT.KI  
Abstract: stefan.wrobel@gmd.de, saso.dzeroski@gmd.de Proc. FGML-95, Annual Workshop of the GI Special Interest Group Machine Learning (GI FG 1.1.3), ed. K. Morik and J. Herrmann, Research Report 580, Univ.Dortmund, 1995. Abstract The task of discovering interesting regularities in (large) sets of data (data mining, knowledge discovery) has recently met with increased interest in Machine Learning in general and in Inductive Logic Programming (ILP) in particular. However, while there is a widely accepted definition for the task of concept learning from examples in ILP, definitions for the data mining task have been proposed only recently. In this paper, we examine these so-called "non-monotonic semantics" definitions and show that non-monotonicity is only an incidental property of the data mining learning task, and that this task makes perfect sense without such an assumption. We therefore introduce and define a generalized definition of the data mining task called the ILP description learning problem and discuss its properties and relation to the traditional concept learning (prediction) learning problem. Since our characterization is entirely on the level of models, the definition applies independently of the chosen hypothesis language.
Abstract-found: 1
Intro-found: 1
Reference: [BG94] <author> Francesco Bergadano and Daniele Gunetti. </author> <title> Learning clauses by tracing derivations. </title> <editor> In Stefan Wrobel, editor, </editor> <booktitle> Proc. Fourth Int. Workshop on Inductive Logic Programming (ILP-94), </booktitle> <pages> pages 11 - 29, </pages> <address> Schlo Birlinghoven, 53754 Sankt Augustin, Germany, </address> <year> 1994. </year> <institution> GMD (German Natl. Research Center for Computer Science). </institution> <note> GMD-Studien Nr. 237. </note>
Reference-contexts: Claudien ("CLAusal DIscovery ENgine", [RB93]) generates a hypothesis in the form of a full clausal theory, i.e. in a larger hypothesis space than Rdt. The form that clauses in the hypothesis may take is specified through a declarative bias facility/language that combines rule schemata [KW92] and clause sets <ref> [BG94] </ref>. As Rdt, Claudien also looks for regularities in a single dataset D. The dataset D has the form of a definite clausal theory and has thus a unique minimal Herbrand model.
Reference: [DRB93] <author> L. De Raedt and M. Bruynooghe. </author> <title> A theory of clausal discovery. </title> <editor> In R. Bajcsy, editor, </editor> <booktitle> Proceedings of the 13th International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 1058-1063. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year>
Reference-contexts: The above definition was introduced by De Raedt and Bruynooghe <ref> [DRB93] </ref>, In this definition, a dataset D is given, and the task is to find a hypothesis H that is true in the minimal Herbrand model of D.
Reference: [DRD94] <author> L. De Raedt and S. Dzeroski. </author> <title> First order jk-clausal theories are pac-learnable. </title> <journal> Artificial Intelligence, </journal> <volume> 70 </volume> <pages> 375-392, </pages> <year> 1994. </year>
Reference-contexts: On the other hand, existing work on defining the description learning task has concentrated exclusively on the so-called "non-monotonic semantics" of ILP [RB93] <ref> [DRD94, D 95] </ref>, strongly associating the task of finding descriptive properties of data with a closed-world interpretation of the data in the spirit of Helft's formalization [Hel89]. <p> In the family case, a single dataset comprises the facts about one family. The use of background knowledge that is common across all datasets is also allowed. Special cases of this setting are considered by De Raedt and Dzeroski <ref> [DRD94] </ref> and De Raedt and Van Laer [DRVL95]. Definition 2 (Local nonmonotonic ILP) For a hypothesis language L H , the following problem is called the local nonmonotonic ILP problem.
Reference: [DRVL95] <author> L. De Raedt and W. Van Laer. </author> <title> Inductive constraint logic. </title> <type> Technical report, </type> <institution> Departement Computerwettenschapen, Katholieke Universiteit Leuven, Leuven, Belgium, </institution> <year> 1995. </year> <month> 18 </month>
Reference-contexts: In the family case, a single dataset comprises the facts about one family. The use of background knowledge that is common across all datasets is also allowed. Special cases of this setting are considered by De Raedt and Dzeroski [DRD94] and De Raedt and Van Laer <ref> [DRVL95] </ref>. Definition 2 (Local nonmonotonic ILP) For a hypothesis language L H , the following problem is called the local nonmonotonic ILP problem. <p> Learning task. ICL ("Inductive Constraint Logic", <ref> [DRVL95] </ref>) is a successor of Claudien, inheriting thus its hypothesis language and declarative bias facilities. ICL also inherits the closed-world assumption from Claudien. The principal difference is that ICL can use several datasets (examples). It employs the local definition of the description relationship. <p> The accuracy of a clause c is defined as A (c) = P (c)=(P (c) + N (c)). As a simple criterion, a threshold on the accuracy of clauses could be emposed. ICL, however, employs a more complicated statistical measure, known under the name of significance <ref> [DRVL95] </ref>. 8 Future work: Towards a model-level charac terization of degree of confirmation What we have seen in the preceding section is that the implemented systems that address the ILP description problem have found some relatively flexible solutions to allow the user to accept certain hypotheses while rejecting other based on
Reference: [D 95] <author> S. Dzeroski. </author> <title> Numerical Constraints and Learnability in Inductive Logic Programming. </title> <type> PhD thesis, </type> <institution> Faculty of Electrical Engineering and Computer Science, University of Ljubljana, Ljubljana, Slovenia, </institution> <year> 1995. </year>
Reference-contexts: On the other hand, existing work on defining the description learning task has concentrated exclusively on the so-called "non-monotonic semantics" of ILP [RB93] <ref> [DRD94, D 95] </ref>, strongly associating the task of finding descriptive properties of data with a closed-world interpretation of the data in the spirit of Helft's formalization [Hel89]. <p> The paper is organized as follows. In section 2, we first illustrate the description learning problem with an example that will be used throughout the paper. In section 3, we then briefly recapitulate the existing non-monotonic ILP semantics definitions of De Raedt and Bruynooghe [RB93] and of Dzeroski <ref> [D 95] </ref>. In section 4, we generalize these existing definitions by introducing a general "description" relationship between a hypothesis and a set of data, encompassing both a closed-world and an open world interpretation of the data. <p> In a more general case, it can be advantageous to think of 2 the given data set or theory as describing a number of different objects, situations, or cases in only some of which we are interested <ref> [D 95] </ref>. We would then like the learning hypothesis to be such that it describes the interesting cases, but none of the uninteresting cases, i.e., we want general properties that are true of simply all cases to be filtered out. <p> A typical dataset would comprise facts on all families in a given region. Background knowledge can also be provided as a part of the dataset in the form of a set of definite clauses. Studying the computational complexity of learning within the above setting, Dzeroski <ref> [D 95] </ref> proposes a generalized definition of nonmonotonic ILP. In this definition, one is interested in the properties common to several datasets of interest, possibly properties that distinguish between the datasets of interest and other given 4 datasets considered not to be interesting.
Reference: [Eng94] <author> Roman Englert. Reprasentation, </author> <title> prufen und lernen von integritatsbedin-gungen im mobal-system. </title> <institution> Arbeitspapiere der gmd, GMD, St. Augustin, </institution> <year> 1994. </year> <title> M.S. </title> <type> Thesis. </type>
Reference-contexts: Only clauses that are above the thresolds are reported. For clauses with empty heads, only the threshold on B (c) applies which in this case is the number of violations of the clause. 7.3 Icdt Learning task. Just as Claudien, Icdt ("Integrity Constraint Discovery Tool", <ref> [Eng94] </ref>) searches the space of full clauses (where literals in both body and head may be negated as well). As a successor Rdt, however, it employs Rdt's simpler declarative bias language (schemata extended to general clauses) and search strategy. <p> Like Rdt and unlike Claudien, Icdt is using the general open-world instantiation of the description learning task. Instantiation of j= D . Icdt also makes assumptions only about the conclusion predicates of the clause to be learned. On hypotheses with non-empty conclusions, Icdt <ref> [Eng94] </ref> uses the same basic confirmation criteria that Rdt is using. For headless clauses, however, as pointed out for Claudien, such criteria cannot be applied so easily.
Reference: [Fla92] <author> P.A. Flach. </author> <title> A framework for inductive logic programming. </title> <editor> In S. Mug-gleton, editor, </editor> <booktitle> Inductive Logic Programming, </booktitle> <pages> pages 193-212. </pages> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Using M + (D) corresponds to making a closed-world assumption, which is a form of nonmonotonic reasoning, hence the name nonmonotonic semantics of ILP. Related nonmonotonic ILP semantics have been proposed by Helft [Hel89] and Flach <ref> [Fla92] </ref>. The above definition assumes a single set of data D. The hypothesis H should capture the properties of D as a whole. A typical dataset would comprise facts on all families in a given region.
Reference: [Hel89] <author> Nicolas Helft. </author> <title> Induction as nonmonotonic inference. </title> <booktitle> In Proceedings of the 1st International Conference on Knowledge Representation and Reasoning, </booktitle> <pages> pages 149 - 156, </pages> <address> San Mateo, CA, 1989. </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: On the other hand, existing work on defining the description learning task has concentrated exclusively on the so-called "non-monotonic semantics" of ILP [RB93] [DRD94, D 95], strongly associating the task of finding descriptive properties of data with a closed-world interpretation of the data in the spirit of Helft's formalization <ref> [Hel89] </ref>. In this paper, we examine whether these restrictions can be relaxed and propose a general definition of the description learning task which admits both an open world and a closed world instantiation, showing that the non-monotonic interpretation of examples is not a central characteristic of the description problem. <p> Using M + (D) corresponds to making a closed-world assumption, which is a form of nonmonotonic reasoning, hence the name nonmonotonic semantics of ILP. Related nonmonotonic ILP semantics have been proposed by Helft <ref> [Hel89] </ref> and Flach [Fla92]. The above definition assumes a single set of data D. The hypothesis H should capture the properties of D as a whole. A typical dataset would comprise facts on all families in a given region.
Reference: [KD94] <author> Jorg-Uwe Kietz and Saso Dzeroski. </author> <title> Inductive logic programming and learnability. </title> <journal> SIGART Bulletin, </journal> <volume> 5(1):22 - 32, </volume> <year> 1994. </year>
Reference-contexts: The important point to consider is how to map the sets of positive and negative examples to the components of the description learning problem, so let us recall the exact definition of the prediction problem first <ref> [KD94] </ref>.
Reference: [KW92] <author> Jorg-Uwe Kietz and Stefan Wrobel. </author> <title> Controlling the complexity of learning in logic through syntactic and task-oriented models. </title> <editor> In Stephen Mug-gleton, editor, </editor> <booktitle> Inductive Logic Programming, chapter 16, </booktitle> <pages> pages 335 - 359. </pages> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1992. </year> <booktitle> Presented at the Int. Workshop on Inductive Logic Programming, </booktitle> <year> 1991. </year> <note> Also available as Arbeitspapiere der GMD No. 503. </note>
Reference-contexts: Here, it could be instructive to look at the solutions that existing algorithms for the description learning task in ILP have chosen with respect to their particular hypothesis language. 7.1 Rdt Learning task. Rdt ("Rule Discovery Tool", <ref> [KW92] </ref>) solves the ILP D problem in a generalized function-free Horn program representation, i.e., using clauses with a single head, but which can use negated literals in both the head and the body of the clause. <p> Claudien ("CLAusal DIscovery ENgine", [RB93]) generates a hypothesis in the form of a full clausal theory, i.e. in a larger hypothesis space than Rdt. The form that clauses in the hypothesis may take is specified through a declarative bias facility/language that combines rule schemata <ref> [KW92] </ref> and clause sets [BG94]. As Rdt, Claudien also looks for regularities in a single dataset D. The dataset D has the form of a definite clausal theory and has thus a unique minimal Herbrand model.
Reference: [LD94] <author> N. Lavrac and S. Dzeroski. </author> <title> Inductive Logic Programming: Techniques and Applications. </title> <publisher> Ellis Horwood, </publisher> <year> 1994. </year>
Reference-contexts: For the prediction learning task, a widely accepted general definition has emerged that can be found almost identically in most ILP papers addressing this task <ref> [Mug91, MDR94, LD94] </ref>.
Reference: [Llo87] <author> J.W. Lloyd. </author> <title> Foundations of Logic Programming. </title> <publisher> Springer Verlag, </publisher> <address> Berlin, New York, 2nd edition, </address> <year> 1987. </year>
Reference-contexts: The definitions are based on model theory notions from standard first-order logic. We therefore briefly introduce the key notions of interpretations and models. We assume familiarity with the syntax of first-order logic <ref> [Llo87] </ref>. An interpretation comprises a mapping from terms to domain objects (called a pre-interpretation) and a mapping from predicates to domain relations, for a particular (real-life) domain under study. Taken together, these two mappings assign a truth value to each statement in the particular first-order language.
Reference: [MDR94] <author> Stephen Muggleton and Luc De Raedt. </author> <title> Inductive logic programming: Theory and methods. </title> <journal> Journal of Logic Programming, </journal> <volume> 19/20:629 - 679, </volume> <year> 1994. </year>
Reference-contexts: For the prediction learning task, a widely accepted general definition has emerged that can be found almost identically in most ILP papers addressing this task <ref> [Mug91, MDR94, LD94] </ref>.
Reference: [Mug91] <author> S. Muggleton. </author> <title> Inductive logic programming. </title> <journal> New Generation Computing, </journal> <volume> 8(4) </volume> <pages> 295-318, </pages> <year> 1991. </year>
Reference-contexts: For the prediction learning task, a widely accepted general definition has emerged that can be found almost identically in most ILP papers addressing this task <ref> [Mug91, MDR94, LD94] </ref>.
Reference: [RB93] <author> L. De Raedt and M. Bruynooghe. </author> <title> A theory of clausal discovery. </title> <booktitle> In Proceedings of the 13th International Joint Conference on Artificial Intelligence. </booktitle> <publisher> Morgan Kaufmann, </publisher> <year> 1993. </year> <month> 19 </month>
Reference-contexts: On the other hand, existing work on defining the description learning task has concentrated exclusively on the so-called "non-monotonic semantics" of ILP <ref> [RB93] </ref> [DRD94, D 95], strongly associating the task of finding descriptive properties of data with a closed-world interpretation of the data in the spirit of Helft's formalization [Hel89]. <p> The paper is organized as follows. In section 2, we first illustrate the description learning problem with an example that will be used throughout the paper. In section 3, we then briefly recapitulate the existing non-monotonic ILP semantics definitions of De Raedt and Bruynooghe <ref> [RB93] </ref> and of Dzeroski [D 95]. In section 4, we generalize these existing definitions by introducing a general "description" relationship between a hypothesis and a set of data, encompassing both a closed-world and an open world interpretation of the data. <p> The final section contains our conclusions (section 9). 2 An example of the description problem In the simple case of the description problem, we might have only a single body of data to describe <ref> [RB93] </ref>, i.e., we are interested in all properties that are true of this body of data. <p> Claudien ("CLAusal DIscovery ENgine", <ref> [RB93] </ref>) generates a hypothesis in the form of a full clausal theory, i.e. in a larger hypothesis space than Rdt. The form that clauses in the hypothesis may take is specified through a declarative bias facility/language that combines rule schemata [KW92] and clause sets [BG94].
References-found: 15

