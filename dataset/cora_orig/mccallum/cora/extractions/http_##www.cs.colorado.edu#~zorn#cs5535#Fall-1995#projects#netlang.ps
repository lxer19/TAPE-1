URL: http://www.cs.colorado.edu/~zorn/cs5535/Fall-1995/projects/netlang.ps
Refering-URL: http://www.cs.colorado.edu/~zorn/cs5535/Fall-1995/index.html
Root-URL: http://www.cs.colorado.edu
Email: Email: klauser, marwah ]@cs.colorado.edu  
Keyword: Artur Klauser and Manish Marwah  
Date: December 15, 1995  
Web: http://www.cs.colorado.edu/~klauser/docs/netlang/netlang.html  
Note: An online version of this document is available at  
Address: Campus Box 430  Boulder, CO 80309-0430 USA  Boulder Boulder, CO,  
Affiliation: Department of Computer Science  University of Colorado  University of Colorado at  
Abstract: Networking Languages: What We Need and What We Have 
Abstract-found: 1
Intro-found: 1
Reference: [AKM95a] <author> Keith Andrews, Frank Kappe, and Hermann Maurer. Hyper-G and Harmony: </author> <title> Towards the Next Generation of Networked Information Technology. </title> <booktitle> In CHI'95 Conference Companion, </booktitle> <address> Denver, </address> <month> May </month> <year> 1995. </year> <note> http://hyperg.iicm.tu-graz.ac.at/hyperg.papers. 11 </note>
Reference-contexts: Hyper-G <ref> [AKM95a, AKM95b] </ref>, a second generation web-based hypermedia system, takes these facts into account in its transfer protocol. Two problems have to be addressed for good network performance: Latency, i.e. the time it takes for a network packet to travel from sender to receiver.
Reference: [AKM95b] <author> Keith Andrews, Frank Kappe, and Hermann Maurer. </author> <title> Serving Information to the Web with Hyper-G. </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> 27(6), </volume> <month> April </month> <year> 1995. </year> <booktitle> Proc. Third International WWW Conference, </booktitle> <address> WWW'95, Darmstadt, Germany, http://hyperg.iicm.tu-graz.ac.at/hyperg.papers. </address>
Reference-contexts: Hyper-G <ref> [AKM95a, AKM95b] </ref>, a second generation web-based hypermedia system, takes these facts into account in its transfer protocol. Two problems have to be addressed for good network performance: Latency, i.e. the time it takes for a network packet to travel from sender to receiver.
Reference: [Car95] <author> Luca Cardelli. Obliq: </author> <title> A Language with Distributed Scope. </title> <journal> Computer Systems, </journal> <volume> 8(1) </volume> <pages> 27-59, </pages> <year> 1995. </year>
Reference-contexts: It takes some of its ideas from Smalltalk, but puts them in a C++ style syntax. [Sun95b] describes the features of the language and also compares it to C++. The suitability of Java as a networking language is also discussed. However, no quantitative results are given. Obliq <ref> [Car95, SRC95] </ref> is a distributed, lexically-scoped, interpreted language. It is different from other languages we investigate in that it is designed as a distributed language with semantics of code migration and remote execution built in.
Reference: [Col95] <author> Colusa Software. Omniware: </author> <title> A Universal Substrate for Mobile Code, </title> <note> 1995. http://www.colusa.com/. </note>
Reference-contexts: VisualBasic [Mic95], an interpreted, downloadable, extensible language intended for program interoperability also falls partially into the category of networking languages. However, as it lacks portability, security, and is proprietary, it is not further discussed here. Omniware <ref> [Col95] </ref> is yet another approach to solve the problem of mobile code. Omniware specifies a virtual machine, OmniVM, and a support library, which run on clients. Code can be written in any programming language with a back-end for OmniVM, initially C/C++.
Reference: [Gen95] <author> General Magic. </author> <title> Telescript / Magic Cap Developer Documentation, </title> <note> 1995. http://www.genmagic.com/MagicCapDocs/Concepts/Telescript.html. </note>
Reference-contexts: Python [Wat95] is an interpreted, interactive, object-oriented language with dynamic typing. It provides several high level portable windowing interfaces. However, networking is only supported in form of a system call interface, which does not provide portable networking functions. Thus, the language is not discussed further. Telescript <ref> [Gen95] </ref> is an interpreted, network oriented language based on the idea of agents traveling through the network from machine to machine. Telescript is a function oriented, Pascal like language that is integrated in a programming system called Magic Cap.
Reference: [HZ94] <author> R. Henderson and Ben Zorn. </author> <title> A Comparison of Object-oriented Programming in Four Modern Languages. </title> <journal> Software|Practice and Experience, </journal> <volume> 24(11) </volume> <pages> 1077-1095, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: These areas have been chosen to be representative for the type of application for such languages which we have in mind, namely information systems and browsers on a global network. A similar type of comparison in the domain of object oriented languages is described in <ref> [HZ94] </ref>. 4.1 Test Programs Browsers clearly need the ability to support networking to be able to get in touch with remote machines and search for information as well as download information and new code to extend their functionality.
Reference: [Mic95] <author> Microsoft. </author> <title> Visual Basic White Papers, </title> <note> 1995. http://www.microsoft.com/VBASIC/vbwhite/VBWHITE.HTM. </note>
Reference-contexts: Telescript agents running on servers can go back to client machines upon arrival of events on 2 the server, without being explicitly called back by the client. It is a proprietary language and thus is not examined further in this study. VisualBasic <ref> [Mic95] </ref>, an interpreted, downloadable, extensible language intended for program interoperability also falls partially into the category of networking languages. However, as it lacks portability, security, and is proprietary, it is not further discussed here. Omniware [Col95] is yet another approach to solve the problem of mobile code.
Reference: [Mid95] <author> Bill Middleton. </author> <note> Perl5 Web Page, 1995. http://www.metronet.com/perlinfo/perl5.html. </note>
Reference-contexts: It allows computations to migrate to remote machines as closures, capturing their current bindings of free variables as network references pointing back to their origin. Perl <ref> [WS92, Mid95] </ref> in its current version (5) is a scripting language that subsumes programming tools such as Unix command shells, sed, awk, and also provides some object oriented features. It is especially expressive for pattern matching and text processing. Perl is an interpreted, extensible language supporting dynamic binding.
Reference: [Ous90] <author> John K. Ousterhout. </author> <title> Tcl: An Embeddable Command Language. </title> <booktitle> In Proceedings of the 1990 Winter USENIX Conference, </booktitle> <year> 1990. </year>
Reference-contexts: It is especially expressive for pattern matching and text processing. Perl is an interpreted, extensible language supporting dynamic binding. Low level network support is included in the language. Windowing support is added by the Perl/Tk extension package. Tcl <ref> [Ous90, Ous95b, Ous95a] </ref> originally started out as a Tool Command Language facilitating tool interoperability. Its main emphasis is on embeddability, extensibility, and its dynamic (interpreted) nature. Tk adds high-level windowing capabilities to Tcl. Networking support is not included in the language.
Reference: [Ous95a] <author> John Ousterhout. </author> <title> Scripts and Agents: The New Software High Ground, </title> <booktitle> 1995. Invited Talk at the Winter 1995 USENIX Conference. </booktitle>
Reference-contexts: It is especially expressive for pattern matching and text processing. Perl is an interpreted, extensible language supporting dynamic binding. Low level network support is included in the language. Windowing support is added by the Perl/Tk extension package. Tcl <ref> [Ous90, Ous95b, Ous95a] </ref> originally started out as a Tool Command Language facilitating tool interoperability. Its main emphasis is on embeddability, extensibility, and its dynamic (interpreted) nature. Tk adds high-level windowing capabilities to Tcl. Networking support is not included in the language.
Reference: [Ous95b] <author> John Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year> <note> ISBN 0-201-63337-X. </note>
Reference-contexts: It is especially expressive for pattern matching and text processing. Perl is an interpreted, extensible language supporting dynamic binding. Low level network support is included in the language. Windowing support is added by the Perl/Tk extension package. Tcl <ref> [Ous90, Ous95b, Ous95a] </ref> originally started out as a Tool Command Language facilitating tool interoperability. Its main emphasis is on embeddability, extensibility, and its dynamic (interpreted) nature. Tk adds high-level windowing capabilities to Tcl. Networking support is not included in the language.
Reference: [SES95a] <author> Simon E. Spero. </author> <title> Analysis of HTTP Performance Problems, </title> <note> 1995. http://sunsite.unc.edu/mdma-release/http-prob.html. </note>
Reference-contexts: This can be embedded in the language itself or part of the language environment in form of standard networking libraries. 3.1.1 Performance Especially when dealing with wide area and global networks, performance is an important factor in networking support. A study of the most common WWW protocol, HTTP, <ref> [SES95a, SES95b] </ref> has revealed that HTTP performance could be improved by approximately a factor of 10 by considering performance issues of the lower level TCP/IP protocol such as connection setup and slow-start costs, and by using binary, instead of plain text transmission.
Reference: [SES95b] <author> Simon E. Spero. </author> <title> Next Generation Hypertext Transport Protocol, </title> <note> 1995. http://www.w3.org/pub/WWW/Protocols/HTTP-NG/http-ng-status.html. </note>
Reference-contexts: This can be embedded in the language itself or part of the language environment in form of standard networking libraries. 3.1.1 Performance Especially when dealing with wide area and global networks, performance is an important factor in networking support. A study of the most common WWW protocol, HTTP, <ref> [SES95a, SES95b] </ref> has revealed that HTTP performance could be improved by approximately a factor of 10 by considering performance issues of the lower level TCP/IP protocol such as connection setup and slow-start costs, and by using binary, instead of plain text transmission.
Reference: [SRC95] <author> Luca Cardelli (DEC SRC). </author> <note> Obliq Web Page, 1995. http://www.research.digital.com/SRC/Obliq/Obliq.html. </note>
Reference-contexts: It takes some of its ideas from Smalltalk, but puts them in a C++ style syntax. [Sun95b] describes the features of the language and also compares it to C++. The suitability of Java as a networking language is also discussed. However, no quantitative results are given. Obliq <ref> [Car95, SRC95] </ref> is a distributed, lexically-scoped, interpreted language. It is different from other languages we investigate in that it is designed as a distributed language with semantics of code migration and remote execution built in.
Reference: [Sun95a] <author> Sun Microsystems. </author> <title> The Java Language: </title> <note> A White Paper, 1995. http://java.sun.com. </note>
Reference-contexts: Language and environment requirements are discussed in Sec. 3. Four existing languages, Perl, Tcl, Java, and Obliq, are compared to each other in Sec. 4, and the work is concluded in Sec. 5. 2 Related Work The Java language and its environment are defined in <ref> [Sun95a, Sun95c] </ref>. It is an object-oriented, architecture neutral, interpreted language with multithreading support. It takes some of its ideas from Smalltalk, but puts them in a C++ style syntax. [Sun95b] describes the features of the language and also compares it to C++.
Reference: [Sun95b] <author> Sun Microsystems. </author> <title> The Java Language Environment, </title> <month> May </month> <year> 1995. </year> <note> http://java.sun.com. </note>
Reference-contexts: It is an object-oriented, architecture neutral, interpreted language with multithreading support. It takes some of its ideas from Smalltalk, but puts them in a C++ style syntax. <ref> [Sun95b] </ref> describes the features of the language and also compares it to C++. The suitability of Java as a networking language is also discussed. However, no quantitative results are given. Obliq [Car95, SRC95] is a distributed, lexically-scoped, interpreted language.
Reference: [Sun95c] <author> Sun Microsystems. </author> <title> The Java Language Specification, </title> <month> March </month> <year> 1995. </year> <note> http://java.sun.com. </note>
Reference-contexts: Language and environment requirements are discussed in Sec. 3. Four existing languages, Perl, Tcl, Java, and Obliq, are compared to each other in Sec. 4, and the work is concluded in Sec. 5. 2 Related Work The Java language and its environment are defined in <ref> [Sun95a, Sun95c] </ref>. It is an object-oriented, architecture neutral, interpreted language with multithreading support. It takes some of its ideas from Smalltalk, but puts them in a C++ style syntax. [Sun95b] describes the features of the language and also compares it to C++.
Reference: [TUG95] <institution> IICM Technical University Graz. The Hyper-G Project, </institution> <year> 1995. </year> <note> http://hyperg.iicm.tu-graz.ac.at/hyperg. </note>
Reference-contexts: This includes servers, clients, as well as users. Servers and clients can use automatic certification protocols upon connection setup. User authentication needs to be supported on top of that, e.g. with a username/password scheme as used in Unix (e.g. Hyper-G <ref> [TUG95] </ref> supports such a scheme). Integrity: Make sure that the contents of transferred information is not altered by third parties while in transit. Ways to assure this property use forms of digital signatures, transmitted together with the message contents.
Reference: [Wat95] <author> Aaron R. Watters. </author> <title> The What, Why, Who, and Where of Python, </title> <note> 1995. UnixWorld Online http://www.wcmh.com/uworld/archives/95/tutorial/005.html. </note>
Reference-contexts: Its main emphasis is on embeddability, extensibility, and its dynamic (interpreted) nature. Tk adds high-level windowing capabilities to Tcl. Networking support is not included in the language. TclX, an extended version of Tcl, adds networking and operating system support to the basic command set. Python <ref> [Wat95] </ref> is an interpreted, interactive, object-oriented language with dynamic typing. It provides several high level portable windowing interfaces. However, networking is only supported in form of a system call interface, which does not provide portable networking functions. Thus, the language is not discussed further.
Reference: [WLAG93] <author> Robert Wahbe, Steven Lucco, Thomas E. Anderson, and Susan L. Graham. </author> <title> Efficient Software-Based Fault Isolation. </title> <booktitle> In Fourteenth ACM Symposium on Operating Systems Principles, </booktitle> <address> SIGOPS'93, Asheville, NC, </address> <pages> pages 203-216, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Code can be written in any programming language with a back-end for OmniVM, initially C/C++. The virtual machine translates its instruction set to native processor instructions for fast execution. Security is provided by the technique of software fault isolation <ref> [WLAG93] </ref>. Unfortunately, Omniware is not freely available, so it is not considered further. <p> Obliq uses its mechanism of closures and static scoping to ensure that any code imported on a machine can only access resources explicitly given to it. All unbound variables continue to reference locations on the originating machine. Finally, Omniware uses the technique of software fault isolation <ref> [WLAG93] </ref> to guarantee valid memory references, and multiple levels of trust to allow different levels of freedom to access various other system resources through library calls. 3.5 Computational Performance Despite portability and interoperability, which could lead to some slowdown in execution, performance is equally important for high user acceptance.
Reference: [WS92] <author> Larry Wall and Randal L. Schwartz. </author> <title> Programming Perl. </title> <publisher> O'Reilly & Associates, </publisher> <year> 1992. </year> <note> ISBN 0-937-17564-1. </note>
Reference-contexts: It allows computations to migrate to remote machines as closures, capturing their current bindings of free variables as network references pointing back to their origin. Perl <ref> [WS92, Mid95] </ref> in its current version (5) is a scripting language that subsumes programming tools such as Unix command shells, sed, awk, and also provides some object oriented features. It is especially expressive for pattern matching and text processing. Perl is an interpreted, extensible language supporting dynamic binding.
Reference: [WWW95a] <institution> WWW Consortium. Mobile Code, </institution> <year> 1995. </year> <note> http://www.w3.org/hypertext/WWW/MobileCode/. </note>
Reference-contexts: Security is provided by the technique of software fault isolation [WLAG93]. Unfortunately, Omniware is not freely available, so it is not considered further. A final resource for further references to languages and systems mentioned, and not mentioned above, is the web page on Mobile Code <ref> [WWW95a] </ref>, put together by the WWW consortium. 3 Language/Environment Requirements and Operational Context The following sections discuss requirements for a networking language and the language environment, such as its libraries.
Reference: [WWW95b] <institution> WWW Consortium. </institution> <note> The WWW Project, 1995. http://www.w3.org/. </note>
Reference-contexts: 1 Introduction In the recent past large numbers of non-academic users have gained access to wide area and global networks, such as the Internet. Especially the development of integrated information browsers, mainly a product of the World Wide Web (WWW) Project <ref> [WWW95b] </ref>, has enabled the mass of computer users to access the wealth of information available on the network. As reaction to this wide spread use, research related to the use of wide area and global networks for information distribution and exchange has gained more momentum.
Reference: [WWW95c] <institution> WWW Virtual Library. PGP Pretty Good Privacy, </institution> <year> 1995. </year> <note> http://draco.centerline.com:8080/~franl/pgp/. </note>
Reference-contexts: Information like financial transactions, medical records, and other forms of personal data needs to be protected against unintended publicity. This can be provided by message encryption, additionally or combined with message integrity protocols for data certification purposes. PGP <ref> [WWW95c] </ref> is an example for providing all three, user authenticity, data integrity and privacy. Solutions to the aforementioned security problems will typically need to be provided by a combination of the operating system and the language's networking support library.
Reference: [WWW95d] <institution> WWW Virtual Library. </institution> <note> WWW Caching, 1995. http://www.stars.com/Vlib/Providers/Caching.html. 13 </note>
Reference-contexts: Although this sounds stupid at first, caching does exactly this <ref> [WWW95d] </ref>. Instead of connecting to the real server, connect to a nearby cache server, using local area communication on a higher bandwidth, lower latency network. Only in case the cache server does not have the required item, needs a long distance communication be invoked.
References-found: 25

