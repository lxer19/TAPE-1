URL: http://www.cs.tamu.edu/people/jhamann/entc485/report/toplevel.ps.Z
Refering-URL: http://www.cs.tamu.edu/people/jhamann/entc485/
Root-URL: http://www.cs.tamu.edu
Title: Tcl/Tk, Tkined, and Network Management  
Author: Jerrid Hamann 
Degree: submitted to Dr. Pierre Catala  
Address: Texas A&M University, College Station, Texas  
Affiliation: ENTC 485 Network Mangement Project  
Date: April 24, 1996  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Uyless Black. </author> <title> TCP/IP & Related Protocols. </title> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <note> second edition, </note> <year> 1995. </year>
Reference-contexts: See page 8 for a source code listing. 6.3 Researched TCP/IP and SNMP In addition to my Networks and Distributed Systems course in the Department of Computer Science, I have done some independent research on TCP/IP and SNMP. I have studied [2] and <ref> [1] </ref>, as well as a Network Management web paper [13]. 11 6.4 Experimentation with the Computer Science Network To begin experimenting with the Tkined tool and the Scotty functions, I chose the Department of Computer Science network as my testing ground.
Reference: [2] <author> Douglas E. Comer. </author> <title> Internetworking with TCP/IP, volume I. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <note> second edition, </note> <year> 1991. </year>
Reference-contexts: See page 8 for a source code listing. 6.3 Researched TCP/IP and SNMP In addition to my Networks and Distributed Systems course in the Department of Computer Science, I have done some independent research on TCP/IP and SNMP. I have studied <ref> [2] </ref> and [1], as well as a Network Management web paper [13]. 11 6.4 Experimentation with the Computer Science Network To begin experimenting with the Tkined tool and the Scotty functions, I chose the Department of Computer Science network as my testing ground.
Reference: [3] <author> Jerrid Hamann. </author> <title> Extensions to tkined, an undergraduate telecom project. </title> <address> http://www.cs.tamu.edu/people/jhamann/entc485/, March 1996. </address>
Reference-contexts: Scotty scripts are embedded in the Tkined interface to act upon the defined network objects. 10 6 Project Procedures My adivsor, Pierre Catala, and I decided to meet once a week to discuss my project's progress. Progress reports can be found at <ref> [3] </ref>. The procedures and steps I followed are outlined below. 6.1 Brief Introduction to Tcl/Tk I purchased and began reading Tcl and the Tk Toolkit, by John K. Ouster-hout, author of Tcl/Tk.
Reference: [4] <author> David Martland. </author> <title> Introduction [tcl/tk]. </title> <address> http://http2.brunel.ac.uk:8080/ csstddm/TCL2/sectionstar2.2.1.html, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: Unlike many of the other toolkits, it is not necessary to use C or C++ in order to manipulate the widgets, and useful applications can be built very rapidly once some expertise of the Tcl/Tk system has been gained <ref> [4] </ref>. 2.1 Tcl, a Tool Command Language The Tcl language is normally interpreted, using either the tclsh shell or the wish shell. Since Tcl scripts are not compiled to native machine code, applications will normally not run as fast as equivalent C programs. <p> There exists header files and libraries that can be compiled and linked into C or C++ code, allowing the user interface to be written in Tcl <ref> [4] </ref>. There are versions of Tcl for different hardware systems, and for different operating systems, so Tcl is to a large extent portable. However, it has already been noted that where Tcl programs are used to access operating systems features, portability will be sacrificed to convenience on the user hardware [4]. <p> <ref> [4] </ref>. There are versions of Tcl for different hardware systems, and for different operating systems, so Tcl is to a large extent portable. However, it has already been noted that where Tcl programs are used to access operating systems features, portability will be sacrificed to convenience on the user hardware [4]. 2.2 Tk, a graphical user interface toolkit A popular extension to the Tcl core is the Tk toolkit. Tk allows programmers to easily integrate a graphical user interface (GUI) into their operating Tcl script.
Reference: [5] <editor> David Martland. Widgets [tcl/tk]. </editor> <address> http://http2.brunel.ac.uk:8080/ csst-ddm/TCL2/chapterstar2.3.html, </address> <month> August </month> <year> 1994. </year>
Reference-contexts: The widgets available in Tk shield the programmer from the complicated Xlib and Motif programming issues. While most Tcl/Tk development is in UNIX X-Windows systems, versions of Tcl/Tk do exist for other operating systems, such as Windows NT <ref> [5] </ref>. 1 Graphical User Interface 3 3 Ined, A Application Independent Network Ed- itor Planning and maintaining large scale complex networked systems requires a set of tools that assist network designers, technicians and users.
Reference: [6] <author> Schonwalder, J. </author> <note> Scotty Man Page. </note>
Reference-contexts: From that web page, I found and read the Tkined man page [7], the Tkined FAQ [9], Ined An Application Independent Network Editor [11], and Tcl Extensions for Network Management Applications [12]. To understand the Scotty toolkit extensions, I read the Scotty man page <ref> [6] </ref> and the Scotty FAQ [8]. I also developed a sample Scotty/Tcl script to trace routes through an internet using ICMP and DNS.
Reference: [7] <author> Schonwalder, J. </author> <note> Tkined Man Page. </note>
Reference-contexts: Tkined has evolved from the original Ined version which was written on top of the Unidraw/Interviews framework. Tkined in its current form is a set of tk scripts and some C code that handles Tkined objects <ref> [7] </ref>. 5.1 Event Driven Management The extensions (Scotty) are based on the event-driven programming paradigm well known to every Tk programmer. A typical Scotty application loads an initialization script which installs some basic event handlers. Once initialization is complete, the application enters and event loop. <p> Using the Tkined home page [10], I found whitepapers and man pages related to Tkined, Scotty, Ined (the original network editor that grew into Tkined). From that web page, I found and read the Tkined man page <ref> [7] </ref>, the Tkined FAQ [9], Ined An Application Independent Network Editor [11], and Tcl Extensions for Network Management Applications [12]. To understand the Scotty toolkit extensions, I read the Scotty man page [6] and the Scotty FAQ [8].
Reference: [8] <author> Schonwalder, J. </author> <title> Frequently Asked Questions about Scotty, </title> <month> November </month> <year> 1995. </year>
Reference-contexts: Scotty programmers can also query the domain name system (DNS), send ICMP requests, use generic TCP/UDP services, invoke selected SUN RPCs, send and serve HTTP requests, and other TCP/IP layer functions <ref> [8] </ref>. 4.1 The IP Interface At the IP layer, Scotty includes commands for the Internet Control Message Protocol (ICMP) and the Address Resolution Protocol (ARP). <p> From that web page, I found and read the Tkined man page [7], the Tkined FAQ [9], Ined An Application Independent Network Editor [11], and Tcl Extensions for Network Management Applications [12]. To understand the Scotty toolkit extensions, I read the Scotty man page [6] and the Scotty FAQ <ref> [8] </ref>. I also developed a sample Scotty/Tcl script to trace routes through an internet using ICMP and DNS.
Reference: [9] <author> Schonwalder, J. </author> <title> Frequently Asked Questions about Tkined, </title> <month> August </month> <year> 1995. </year>
Reference-contexts: Using the Tkined home page [10], I found whitepapers and man pages related to Tkined, Scotty, Ined (the original network editor that grew into Tkined). From that web page, I found and read the Tkined man page [7], the Tkined FAQ <ref> [9] </ref>, Ined An Application Independent Network Editor [11], and Tcl Extensions for Network Management Applications [12]. To understand the Scotty toolkit extensions, I read the Scotty man page [6] and the Scotty FAQ [8].
Reference: [10] <author> Schonwalder, J. and H. Langendorfer. Tkined. </author> <note> http://www.cs.tubs.de/ibr/projects/nm/tkined/welcome.html. </note>
Reference-contexts: Using the Tkined home page <ref> [10] </ref>, I found whitepapers and man pages related to Tkined, Scotty, Ined (the original network editor that grew into Tkined).
Reference: [11] <author> Schonwalder, J. and H. Langendorfer. </author> <title> Ined an application independent network editor. </title> <booktitle> In Proc. World Conference On Tools and Techniques for System Administration, Networking, and Security, </booktitle> <address> Arlington (Vir-ginia), </address> <month> April </month> <year> 1993. </year>
Reference-contexts: The idea behind the Ined editor is to provide an application independent network editor that could be extended by applications to support all tasks listed above <ref> [11] </ref>. 3.1 The Editor The Ined editor was based on the following goals [11]: * The editor must provide basic editing features for network maps (selecting, moving, copying, cutting and pasting objects, undo and redo operations). * The editor must be able to maintain connections between objects. * The editor must <p> The idea behind the Ined editor is to provide an application independent network editor that could be extended by applications to support all tasks listed above <ref> [11] </ref>. 3.1 The Editor The Ined editor was based on the following goals [11]: * The editor must provide basic editing features for network maps (selecting, moving, copying, cutting and pasting objects, undo and redo operations). * The editor must be able to maintain connections between objects. * The editor must be independent of any network type or network layer. * The appearance of <p> A tool definition includes a tool name and the set of commands provided by this tool. The names of all registered tools are shown in the tool box. The commands of a tool will pop up whenever the tool is selected <ref> [11] </ref>. 5 4 Scotty, a Tcl Interpreter with TCP/IP Exten- sions Scotty is an extension for the Tool Command Language (Tcl) which provides access to various TCP/IP network protocols. <p> Using the Tkined home page [10], I found whitepapers and man pages related to Tkined, Scotty, Ined (the original network editor that grew into Tkined). From that web page, I found and read the Tkined man page [7], the Tkined FAQ [9], Ined An Application Independent Network Editor <ref> [11] </ref>, and Tcl Extensions for Network Management Applications [12]. To understand the Scotty toolkit extensions, I read the Scotty man page [6] and the Scotty FAQ [8]. I also developed a sample Scotty/Tcl script to trace routes through an internet using ICMP and DNS.
Reference: [12] <author> Schonwalder, J. and H. Langendorfer. </author> <title> Tcl extensions for network management applications. </title> <booktitle> In Proc. 3rd Tcl/Tk Workshop, </booktitle> <address> Toronto (Canada), </address> <month> July </month> <year> 1995. </year> <month> 23 </month>
Reference-contexts: The Internet and the OSI networking communities have developed network management architectures which define the structure of network management information and protocols to retrieve and manipulate management information provided by agents running on the network elements <ref> [12] </ref>. Many network management applications are subcomponents of network mangement platforms, which provide a development and runtime environment for network technicians and programmers. Unfortunately, many of these platform solutions are particular to one vendor, and fails to work in multi-vendor configurations [13]. <p> This is not necessarily the fault of the application designers, as it is very difficult to program an application for every kind of network equipment on the market, present and future. Application development worsens as programmers discover bugs in network devices <ref> [12] </ref>. As a consequence, many network management applications must be continually adapted to new target environments. Network programmers must re-code portions of the platform software, taking care not to affect other parts of the application. <p> A learning curve is present, as end-users try to understand their vendor's software and how to program around it. To overcome this problem, J. Schonwalder and H. Langendorfer designed a network management platform which uses the Tool Command Language (Tcl) to provide a higher level of abstraction <ref> [12] </ref>. My semester project for the Department of Engineering Technology, Telecommunications division, was to investigate Schonwalder and Langendorfer's Tcl research, learn their network management tool, Tkined, and customize this tool for monitoring equipment within the Department of Engineering Technology and the Department of Computer Science network. <p> These commands can be used to ping devices and resolve IP addresses and store the results into Tcl data structures <ref> [12] </ref>. 4.2 The TCP/UDP Interface Access to many services at and above the transport layer is provided by the tcp and udp commands. Both commands simply bind file handles to socket descriptors for ease of manipulation inside the Tcl script. <p> Both commands simply bind file handles to socket descriptors for ease of manipulation inside the Tcl script. Examples of the tcp and udp commands are: tcp connect, tcp info, and udp send <ref> [12] </ref>. 4.3 The Application Layer Interface At the application layer, Scotty has some built-in functions to ease writing high-level network applications. Some of these functions include dns to query a domain name server, netdb to query a local network database, and http to communicate with World Wide Web (WWW) Servers [12]. <p> <ref> [12] </ref>. 4.3 The Application Layer Interface At the application layer, Scotty has some built-in functions to ease writing high-level network applications. Some of these functions include dns to query a domain name server, netdb to query a local network database, and http to communicate with World Wide Web (WWW) Servers [12]. 4.4 The SNMP Interface The Simple Network Management Protocol (SNMP) is the management protocol of the Internet and allows SNMP managers to monitor and modify 6 status and performance information. In implementing SNMP in the Scotty tool, the developers had the following goals [12]: * to provide access to SNMPv1 <p> with World Wide Web (WWW) Servers <ref> [12] </ref>. 4.4 The SNMP Interface The Simple Network Management Protocol (SNMP) is the management protocol of the Internet and allows SNMP managers to monitor and modify 6 status and performance information. In implementing SNMP in the Scotty tool, the developers had the following goals [12]: * to provide access to SNMPv1 and SNMPv2 using the convergence rules as defined in the SNMPv2 standard * to create an efficient and portable implementation * to allow fast access to MIB definitions * to define an easy to use Tcl interface * and to support asynchronous as well <p> In the course of this project, I wrote a small traceroute program using the Scotty extensions to Tcl. The basic idea for the script came from <ref> [12] </ref>, but I enhanced the original program to include DNS lookups on each of the hosts on the route. 7 #!/usr/local/bin/scotty -f proc traceroute -ip -max 32- - set ttl 1 set total_rtt 0 set new "" while -$new != $ip && $ttl &lt;= $max - set old $new set hop <p> A typical Scotty application loads an initialization script which installs some basic event handlers. Once initialization is complete, the application enters and event loop. Tcl scripts are evaluated to process events that are created when a message is received from the network or if a timer expires <ref> [12] </ref>. 5.2 Using Scotty to Access the TCP/IP layers Because Tcl/Tk has no built-in TCP/IP functionality, the authors of Tkined created Scotty to provide easy access to TCP/IP protocols. Once of the primary protocol implementations in Scotty is Internet Control Message Protocol (ICMP). <p> Once of the primary protocol implementations in Scotty is Internet Control Message Protocol (ICMP). The icmp command allows the script to send ICMP echo, mask or timestamp requests to a list of hosts <ref> [12] </ref>. In a Tkined map, a set of network devices may be targeted for a Scotty script, such as Reachability. In this case, Tkined would poll the selected devices periodically with an ICMP echo packet, checking for responses. <p> Devices that do not respond before the designated timeout period would begin to flash red on the Tkined map. 5.3 Using Tkined and Scotty for Network Management A complete network management application would include the following components <ref> [12] </ref>: 9 * Tkined The most visible part is the graphical user interface, Tkined. Tkined defines object types like nodes, networks, and links and offers services on those objects. * Configuration Database A network database is used to house an inventory of network devices and device information. <p> From that web page, I found and read the Tkined man page [7], the Tkined FAQ [9], Ined An Application Independent Network Editor [11], and Tcl Extensions for Network Management Applications <ref> [12] </ref>. To understand the Scotty toolkit extensions, I read the Scotty man page [6] and the Scotty FAQ [8]. I also developed a sample Scotty/Tcl script to trace routes through an internet using ICMP and DNS.
Reference: [13] <author> Douglas W. Stevenson. </author> <title> Network management: What it is and what it isn't. </title> <address> http://smurfland.cit.buffalo.edu/NetMan/Doc/DStevenson/, April 1995. </address>
Reference-contexts: Many network management applications are subcomponents of network mangement platforms, which provide a development and runtime environment for network technicians and programmers. Unfortunately, many of these platform solutions are particular to one vendor, and fails to work in multi-vendor configurations <ref> [13] </ref>. This is not necessarily the fault of the application designers, as it is very difficult to program an application for every kind of network equipment on the market, present and future. Application development worsens as programmers discover bugs in network devices [12]. <p> I have studied [2] and [1], as well as a Network Management web paper <ref> [13] </ref>. 11 6.4 Experimentation with the Computer Science Network To begin experimenting with the Tkined tool and the Scotty functions, I chose the Department of Computer Science network as my testing ground.
Reference: [14] <author> Shiqian Yu. </author> <title> Guarenteeing hard real-time deadlines in a practical atm lan. A Master Project Report, </title> <month> January </month> <year> 1996. </year> <title> This document was typeset using L a T E X on April 24, </title> <booktitle> 1996. </booktitle> <pages> 24 </pages>
Reference-contexts: They were using SunNet Manager to monitor the ATM switches, using some special add-in configuration files from Bay Networks <ref> [14] </ref>. I experimented with the SunNet Manager (SNM), and with Tkined and the Scotty extension set.
References-found: 14

