URL: ftp://dimacs.rutgers.edu/pub/berryj/link_teaser.ps
Refering-URL: http://dimacs.rutgers.edu/~berryj/LINK.html
Root-URL: http://www.cs.rutgers.edu
Title: An Informal Preview of the Link System  
Author: Jonathan Berry 
Date: April 23, 1996  
Affiliation: DIMACS Center  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> D. Berque, R. Cecchini, M. Goldberg, and R. Rivenburgh. </author> <title> The setplayer system for symbolic computation on power sets. </title> <journal> Journal of Symbolic Computation, </journal> <volume> 14 </volume> <pages> 645-662, </pages> <year> 1992. </year>
Reference-contexts: the development of GraphLab [9], Nate Dean was largely responsible for the package NETPAD at Bellcore [7] , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathematica [10], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer <ref> [1] </ref>. Though these packages have many useful features, some overlapping and some not, none was complete or without significant drawbacks depending on the user and the application. These researchers wanted a more comprehensive package that would add new features and retain the positive aspects of their previous efforts.
Reference: [2] <author> J. Berry, N. Dean, P. Fasel, M. Goldberg, E. Johnson, J. MacCuish, G. Shannon, and S. Skiena. </author> <title> Link: A combinatorics adn graph theory workbench for applications and research. </title> <type> Technical Report 95-15, </type> <institution> Center for Discrete Mathematics and Theoretical Computer Science, </institution> <address> Piscataway, NJ, </address> <year> 1995. </year>
Reference-contexts: It has been partially funded by NSF grant CCR-9214487 and ONR award 400x116yip01. Many people have contributed to Link. This unpublished preview contains text from <ref> [2] </ref>, which lists the contributers. The figure above is postscript output from Link. y DIMACS is a cooperative project of Rutgers University, Princeton University, AT&T Bell Laboratories and Bellcore.
Reference: [3] <author> N. Dean and G. E. Shannon, </author> <title> editors. Computational Support for Discrete Mathematics. </title> <journal> American Mathematical Society, 1993. DIMACS Series in Discrete Mathematics and Theoretical Computer Science, </journal> <volume> Volume 15. </volume>
Reference-contexts: The magnitude of such a project exceeds the efforts made so far by the researchers and research groups responsible for the existing systems. A good discussion of software packages for discrete math is found in <ref> [3, 11, 6] </ref>. From the standpoint of a theoretician or an applications researcher, there are several features which characterize a useful software tool for their work. First, it is essential to have a set of libraries that are efficient, easy to use, robust, and extensible.
Reference: [4] <author> E. Gallesio. </author> <title> The stk reference manual. </title> <type> Technical Report RT 95-31a, </type> <institution> I3S CNRS, Universite de Nice - Sophia Antipolis, France, </institution> <year> 1995. </year>
Reference-contexts: But Link is much more than a set of class libraries. Link has a flexible interface based upon Eric Gallesio's STk (Scheme-Tk) package 1 <ref> [4] </ref>. STk supports a variant of the Common Lisp Object System, which allows object-oriented techniques to be used during interface design. Examples of Scheme code which accesses Link objects are included in Section 4. A user's manual explains the Scheme interface. <p> graph type. 6 STk&gt; (define g (graph)) #[undefined] STk&gt; (describe g) #[&lt;ubingraph*&gt; #p5658cc] is an instance of class &lt;ubingraph*&gt; Slots are: val = f [] fgg 4 The Scheme-Tk Interface The basic objects of Link can now be created and manipulated in a Scheme-Tk environment, thanks to the STk package <ref> [4] </ref>. The examples in this section are the output of an automated process which feeds input files to Link's STk interpreter and formats the output in L A T E X. 2 . They are excerpts from the user's manual of Link.
Reference: [5] <author> D. Libes. </author> <title> Exploring Expect. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <year> 1995. </year>
Reference-contexts: A key feature of Link will be the ease in which output from one method can be used as input to another. This will allowing functional computing in the style of Steven Skiena's Combinatorica package [10]. 2 This is accomplished using Don Libes' expect extension of Tcl <ref> [5] </ref> 7 STk&gt; (define dg (digraph '(1 2 3 4) '((1 2 3) (2 3 4)))) #[undefined] STk&gt; (define n (neighbors (vertex-ref 1 dg))) #[undefined] STk&gt; (describe (vertex-ref 1 dg)) #[&lt;vertex*&gt; #p55a234] is an instance of class &lt;vertex*&gt; Slots are: val = 2 STk&gt; (describe n) #[&lt;set&lt;vertex*&gt;> #p564968] is an instance
Reference: [6] <author> K. Mehlhorn and S. Nahger. Leda: </author> <title> A platform for combinatorial and geometric computing. </title> <journal> CACM, </journal> <volume> 38(1) </volume> <pages> 96-102, </pages> <month> Jan </month> <year> 1995. </year>
Reference-contexts: The magnitude of such a project exceeds the efforts made so far by the researchers and research groups responsible for the existing systems. A good discussion of software packages for discrete math is found in <ref> [3, 11, 6] </ref>. From the standpoint of a theoretician or an applications researcher, there are several features which characterize a useful software tool for their work. First, it is essential to have a set of libraries that are efficient, easy to use, robust, and extensible.
Reference: [7] <author> M. Mevenkamp, N. Dean, and C. Monma. </author> <title> NETPAD user's guide and reference guide, </title> <year> 1990. </year>
Reference-contexts: Each had already directed similar projects. Greg Shannon of Indiana University had organized the development of GraphLab [9], Nate Dean was largely responsible for the package NETPAD at Bellcore <ref> [7] </ref> , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathematica [10], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer [1].
Reference: [8] <author> J. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference: [9] <author> G. Shannon, L. Meeden, and D. Friedman. SchemeGraphs: </author> <title> An object-oriented environment for manipulating graphs, </title> <booktitle> 1990. Software and documentation. </booktitle>
Reference-contexts: In July 1991, four researchers met at the SIAM conference for Applied Mathematics in Washington D.C. and discussed the possibility of creating a large software package for discrete mathematics. Each had already directed similar projects. Greg Shannon of Indiana University had organized the development of GraphLab <ref> [9] </ref>, Nate Dean was largely responsible for the package NETPAD at Bellcore [7] , Steve Skiena at State University at New York at Stony Brook had produced Combinatorica on top of Mathematica [10], and Mark Goldberg and his students at Rensselaer Polytechnic Institute had implemented SetPlayer [1].

Reference: [11] <editor> R. Tamassia and I. G. Tollis, editors. </editor> <booktitle> Proceedings of the DIMACS Inter--national Workshop on Graph Drawing, 1994. Lecture Notes in Computer Science, </booktitle> <volume> 894. </volume> <pages> 23 </pages>
Reference-contexts: The magnitude of such a project exceeds the efforts made so far by the researchers and research groups responsible for the existing systems. A good discussion of software packages for discrete math is found in <ref> [3, 11, 6] </ref>. From the standpoint of a theoretician or an applications researcher, there are several features which characterize a useful software tool for their work. First, it is essential to have a set of libraries that are efficient, easy to use, robust, and extensible.
References-found: 10

