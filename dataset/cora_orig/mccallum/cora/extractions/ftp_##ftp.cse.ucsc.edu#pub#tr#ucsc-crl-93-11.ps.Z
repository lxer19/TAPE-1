URL: ftp://ftp.cse.ucsc.edu/pub/tr/ucsc-crl-93-11.ps.Z
Refering-URL: http://www.cse.ucsc.edu/~golding/
Root-URL: http://www.cse.ucsc.edu
Title: Using an object-oriented framework to construct wide-area group communication mechanisms  
Author: Richard A. Golding Darrell D. E. Long 
Note: Supported in part while at the University of California by the Concurrent Systems Project at Hewlett-Packard Laboratories and by a graduate fellowship from the Santa Cruz Operation. Supported in part by the National Science Foundation under Grant NSF CCR-9111220 and by the Office of Naval Research under Grant N00014-92-J-1807.  
Date: March 17, 1993  
Address: Amsterdam, The Netherlands  Santa Cruz  Santa Cruz, CA 95064  
Affiliation: Vrije Universiteit,  University of California,  Concurrent Systems Laboratory Computer and Information Sciences University of California, Santa Cruz  
Pubnum: UCSC-CRL-93-11  
Abstract: Many wide-area distributed applications, including distributed databases, can be implemented using a group communication mechanism. We have developed a family of weak-consistency group communication mechanisms, based on the timestamped anti-entropy communication protocol, that provides the scalability and fault-tolerance needed by wide-area systems. We discuss an object-oriented framework for constructing this kind of group communication mechanism, and how its components can be selected to take advantage of specific application semantics. We examine several design choices that we made in building two very different wide-area distributed database applications, and how this framework led to simple, efficient implementations in both systems. 
Abstract-found: 1
Intro-found: 1
Reference: [Birman87] <author> Kenneth P. Birman and Thomas A. Joseph. </author> <title> Reliable communication in the presence of failures. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 5(1) </volume> <pages> 47-76, </pages> <month> February </month> <year> 1987. </year>
Reference-contexts: Several group communication protocols have been developed. Many of these protocols provide strong consistency guarantees, usually providing one-copy serializabil-ity (1SR) so that the group members behave as if they were a single logical principal. Some protocols such as the Isis ABCAST protocol <ref> [Birman87] </ref> ensure that every principal receives every update message, so that there is never any difference between group members.
Reference: [Birman90] <author> Kenneth Birman, Andre Schiper, and Pat Stephenson. </author> <title> Fast causal multicast. </title> <type> Technical report TR-1105. </type> <institution> Department of Computer Science, Cornell University, </institution> <month> 13 April </month> <year> 1990. </year>
Reference-contexts: Some protocols such as the Isis ABCAST protocol [Birman87] ensure that every principal receives every update message, so that there is never any difference between group members. Others allow some divergence, as long as it does not violate 1SR: the Isis CBCAST protocol <ref> [Birman90] </ref> and the Psync protocol [Mishra89] provide causal consistency [Lamport78], while voting protocols [Gifford79] ensure that a majority of the members perform the update. Protocols that provide 1SR cannot scale to the large numbers of group members that are required for wide-area systems.
Reference: [Bloch87] <author> Joshua J. Bloch, Dean S. Daniels, and Alfred Z. Spector. </author> <title> A weighted voting algorithm for replicated directories. </title> <journal> Journal of the ACM, </journal> <volume> 34(4) </volume> <pages> 859-909, </pages> <month> October </month> <year> 1987. </year>
Reference-contexts: A record of the deletion must be maintained until the deletion has been observed by all principals, so that no principal can miss the operation and re-introduce the item to other principals. In the Clearinghouse these records were called death certificates [Demers88], while the Bloch-Daniels-Spector distributed dictionary algorithm <ref> [Bloch87] </ref> places timestamps on the gaps between items as well as on the items themselves.
Reference: [Campbell92] <author> Roy H. Campbell, Nayeem Islam, and Peter Madany. </author> <title> Choices, frameworks, and refinement. </title> <journal> Computing Systems, </journal> <volume> 5(3) </volume> <pages> 217-57. </pages> <publisher> Usenix Association, </publisher> <month> Summer </month> <year> 1992. </year>
Reference-contexts: When a concrete framework is to be instantiated, an instance of each class is created and connected. The framework therefore serves as a way to organize the classes. The Choices object-oriented operating system uses frameworks to structure the implementation of process management, virtual memory, storage, and other services <ref> [Campbell92] </ref>. The x-kernel used a similar idea to combine components form a fast and efficient interprocess communication subsystem [Peterson90]. This mechanism has been used to construct a modular system for building consistent group communication protocols [Mishra92].
Reference: [Cristian91] <author> Flaviu Cristian. </author> <title> Reaching agreement on processor-group membership in synchronous distributed systems. </title> <journal> Distributed Computing, </journal> <volume> 4(4) </volume> <pages> 175-87, </pages> <year> 1991. </year>
Reference-contexts: The first mechanism is used in many existing systems, including Isis, Arjuna, most replication protocols, and our systems. The second mechanism has been proposed by Cristian <ref> [Cristian91] </ref>, and works by discovering what principals believe they are members. It generally requires global broadcast, which is infeasible in networks the size of the Internet. This mechanism is not considered further. Principals join and leave the group by executing join and leave protocols.
Reference: [Danzig92] <author> Peter B. Danzig, Shih-Hao Li, and Katia Obraczka. </author> <title> Distributed indexing of autonomous Internet services. </title> <journal> Computing Systems, </journal> <volume> 5(4) </volume> <pages> 433-59. </pages> <publisher> USENIX Association, </publisher> <month> Fall </month> <year> 1992. </year> <month> 9 </month>
Reference-contexts: 1 Introduction Many wide-area systems are being, or have recently been, constructed on the Internet. These services range from AFS [Howard88], which provides a generic distributed file service, to highly specific applications such as the Archie FTP location service [Emtage92] and the Indie distributed indexing tool <ref> [Danzig92] </ref>. We have developed the Tattler reliability monitoring tool [Long92] and the Refdbms bibliographic database system [Golding92a]. Other possible services include distributing public cryptographic keys, software distribution, and resource location for mobile hosts. These applications share several requirements.
Reference: [Demers88] <author> Alan Demers, Dan Greene, Carl Hauser, Wes Irish, John Larson, Scott Shenker, Howard Sturgis, Dan Swinehart, and Doug Terry. </author> <title> Epidemic algorithms for replicated database maintenance. </title> <journal> Operating Systems Review, </journal> <volume> 22(1) </volume> <pages> 8-32, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Any client request can be processed by any single member, and the resulting update message propagated asynchronously to other group members. This approach was first formalized in the epidemic replication protocols used in the Xerox Clearinghouse name service <ref> [Demers88] </ref>. The Lazy Replication system [Ladin91] provided a combination of weak and causal consistency. We have developed the timestamped anti-entropy (TSAE) protocol, which provides efficient, reliable propagation of update messages throughout the group. Like the protocols used in the Clearinghouse, members periodically contact each other and exchange messages. <p> A record of the deletion must be maintained until the deletion has been observed by all principals, so that no principal can miss the operation and re-introduce the item to other principals. In the Clearinghouse these records were called death certificates <ref> [Demers88] </ref>, while the Bloch-Daniels-Spector distributed dictionary algorithm [Bloch87] places timestamps on the gaps between items as well as on the items themselves.
Reference: [Emtage92] <author> Alan Emtage and Peter Deutsch. </author> <title> Archie - an electronic directroy service for the Internet. </title> <booktitle> Proceedings of the Winter Conference (San Francisco), </booktitle> <pages> pages 93-110. </pages> <publisher> Usenix Association, </publisher> <month> January </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Many wide-area systems are being, or have recently been, constructed on the Internet. These services range from AFS [Howard88], which provides a generic distributed file service, to highly specific applications such as the Archie FTP location service <ref> [Emtage92] </ref> and the Indie distributed indexing tool [Danzig92]. We have developed the Tattler reliability monitoring tool [Long92] and the Refdbms bibliographic database system [Golding92a]. Other possible services include distributing public cryptographic keys, software distribution, and resource location for mobile hosts. These applications share several requirements.
Reference: [Gifford79] <author> D. K. Gifford. </author> <title> Weighted voting for replicated data. </title> <booktitle> Proceedings of 7th ACM Symposium on Operating Systems Principles (Pacific Grove, California), </booktitle> <pages> pages 150-62. </pages> <institution> Association for Computing Machinery, </institution> <month> December </month> <year> 1979. </year>
Reference-contexts: Others allow some divergence, as long as it does not violate 1SR: the Isis CBCAST protocol [Birman90] and the Psync protocol [Mishra89] provide causal consistency [Lamport78], while voting protocols <ref> [Gifford79] </ref> ensure that a majority of the members perform the update. Protocols that provide 1SR cannot scale to the large numbers of group members that are required for wide-area systems.
Reference: [Golding92a] <author> Richard A. Golding. </author> <title> Weak-consistency group communication and membership. </title> <type> PhD thesis, </type> <note> published as Technical report UCSC-CRL-92-52. </note> <institution> Computer and Information Sciences Board, University of California at Santa Cruz, </institution> <month> December </month> <year> 1992. </year>
Reference-contexts: These services range from AFS [Howard88], which provides a generic distributed file service, to highly specific applications such as the Archie FTP location service [Emtage92] and the Indie distributed indexing tool [Danzig92]. We have developed the Tattler reliability monitoring tool [Long92] and the Refdbms bibliographic database system <ref> [Golding92a] </ref>. Other possible services include distributing public cryptographic keys, software distribution, and resource location for mobile hosts. These applications share several requirements. They all will be used by millions of users in all parts of the world. <p> They are infeasible when communication latency is long: an exchange of messages on the Internet can require as much as two seconds. Protocols that relax their serializability guarantees can scale to large groups. Weak consistency protocols provide no serializability guarantees <ref> [Golding92a] </ref>. These protocols allow members to differ for a while, as long as every member eventually receives and acts on every update message. Any client request can be processed by any single member, and the resulting update message propagated asynchronously to other group members. <p> Unlike other group communication systems, the TSAE protocol only requires weakly-consistent membership views. We have described the TSAE protocol and its performance in more detail in other work <ref> [Golding92a] </ref>. 2 Framework We have used an abstract framework to design and implement weak-consistency group communication mechanisms based on the TSAE protocol. This framework is only part of a complete application. A complete group member would also include a framework for communicating with clients. <p> This inconsistency between principals is removed when delivery completes. We have developed the timestamped anti-entropy protocol as one implementation of the message delivery component. It provides reliable, eventual, exactly-once message delivery in wide-area distributed systems. We have discussed this protocol in detail in other works <ref> [Golding92a] </ref>. It maintains a summary of the messages and acknowledgments it has received, and periodically exchanges batches of messages between pairs of principals. The summaries 6 make the exchange efficient by allowing each principal to send only the messages the other has not yet received. <p> Between sending the message and receiving the acknowledgment the member enters a special state where it cannot orig 8 inate messages, but does exchange messages with other members. We have proven that this approach is correct when composed with the TSAE message delivery protocol <ref> [Golding92b, Golding92a] </ref>. We have also developed a variant on these protocols that allow two groups to merge. Our experience with this group membership mechanism in Refdbms is generally positive. It uses the join-leave implementation because there is no sensible way to merge two databases.
Reference: [Golding92b] <author> Richard A. Golding and Kim Taylor. </author> <title> Group membership in the epidemic style. </title> <type> Technical report UCSC-CRL-92-13. </type> <institution> Computer and Information Sciences Board, University of California at Santa Cruz, </institution> <month> 22 April </month> <year> 1992. </year>
Reference-contexts: Between sending the message and receiving the acknowledgment the member enters a special state where it cannot orig 8 inate messages, but does exchange messages with other members. We have proven that this approach is correct when composed with the TSAE message delivery protocol <ref> [Golding92b, Golding92a] </ref>. We have also developed a variant on these protocols that allow two groups to merge. Our experience with this group membership mechanism in Refdbms is generally positive. It uses the join-leave implementation because there is no sensible way to merge two databases.
Reference: [Golding93] <author> Richard A. Golding and Darrell D. E. </author> <title> Long. Modeling replica divergence in a weak-consistency protocol for global-scale distributed data bases. </title> <type> Technical report UCSC-CRL-93-09. </type> <institution> Computer and Information Sciences Board, University of Califor-nia at Santa Cruz, </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: The pending image can be retrieved by providing a tag of the form Smith92.pending. This allows citations of pending references to be embedded in a L A T E X document or sent to another user by electronic mail. Our performance evaluations <ref> [Golding93] </ref> have shown that the simple total ordering used in Refdbms does not substantially delay message delivery on average.
Reference: [Howard88] <author> John H. Howard, Michael L. Kazar, Sherri G. Menees, David A. Nichols, M. Satya-narayanan, Robert N. Sidebotham, and Michael J. West. </author> <title> Scale and performance in a distributed file system. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 6(1) </volume> <pages> 51-81, </pages> <month> February </month> <year> 1988. </year>
Reference-contexts: 1 Introduction Many wide-area systems are being, or have recently been, constructed on the Internet. These services range from AFS <ref> [Howard88] </ref>, which provides a generic distributed file service, to highly specific applications such as the Archie FTP location service [Emtage92] and the Indie distributed indexing tool [Danzig92]. We have developed the Tattler reliability monitoring tool [Long92] and the Refdbms bibliographic database system [Golding92a].
Reference: [Ladin91] <author> Rivka Ladin, Barbara Liskov, and Liuba Shrira. </author> <title> Lazy replication: exploiting the semantics of distributed services. </title> <booktitle> Position paper for 4th ACM-SIGOPS European Workshop (Bologna, </booktitle> <month> 3-5 September </month> <year> 1990). </year> <title> Published as Operating Systems Review, </title> <booktitle> 25(1) </booktitle> <pages> 49-55, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: Any client request can be processed by any single member, and the resulting update message propagated asynchronously to other group members. This approach was first formalized in the epidemic replication protocols used in the Xerox Clearinghouse name service [Demers88]. The Lazy Replication system <ref> [Ladin91] </ref> provided a combination of weak and causal consistency. We have developed the timestamped anti-entropy (TSAE) protocol, which provides efficient, reliable propagation of update messages throughout the group. Like the protocols used in the Clearinghouse, members periodically contact each other and exchange messages.
Reference: [Lamport78] <author> Leslie Lamport. </author> <title> Time, clocks, and the ordering of events in a distributed system. </title> <journal> Communications of the ACM, </journal> <volume> 21(7) </volume> <pages> 558-65, </pages> <year> 1978. </year>
Reference-contexts: Others allow some divergence, as long as it does not violate 1SR: the Isis CBCAST protocol [Birman90] and the Psync protocol [Mishra89] provide causal consistency <ref> [Lamport78] </ref>, while voting protocols [Gifford79] ensure that a majority of the members perform the update. Protocols that provide 1SR cannot scale to the large numbers of group members that are required for wide-area systems.
Reference: [Long92] <author> Darrell D. E. </author> <title> Long. A replicated monitoring tool. </title> <booktitle> Proceedings of 2nd Workshop on the Management of Replicated Data, </booktitle> <pages> pages 96-9, </pages> <month> November </month> <year> 1992. </year>
Reference-contexts: These services range from AFS [Howard88], which provides a generic distributed file service, to highly specific applications such as the Archie FTP location service [Emtage92] and the Indie distributed indexing tool [Danzig92]. We have developed the Tattler reliability monitoring tool <ref> [Long92] </ref> and the Refdbms bibliographic database system [Golding92a]. Other possible services include distributing public cryptographic keys, software distribution, and resource location for mobile hosts. These applications share several requirements. They all will be used by millions of users in all parts of the world. <p> All of the techniques make use of messages being delivered in the same order at every principal and reliable, exactly-once message delivery. 3.2 The Tattler system The Tattler system is a distributed availability monitor for the Internet <ref> [Long92] </ref>. It monitors a set of Internet hosts, measuring how often they are rebooted and what fraction of the time they are available. The measurements are taken from several different network sites to minimize the effect of network failure on the results, and to make the sampling mechanism very reliable.
Reference: [Massalin89] <author> Henry Massalin and Calton Pu. </author> <title> Threads and input/output in the Synthesis kernel. </title> <booktitle> Proceedings of 12th ACM Symposium on Operating Systems Principles (Litchfield Park, </booktitle> <address> AZ, </address> <month> 3-6 December </month> <year> 1989). </year> <title> Published as Operating Systems Review, </title> <booktitle> 23(5) </booktitle> <pages> 191-201, </pages> <month> December </month> <year> 1989. </year>
Reference-contexts: The x-kernel used a similar idea to combine components form a fast and efficient interprocess communication subsystem [Peterson90]. This mechanism has been used to construct a modular system for building consistent group communication protocols [Mishra92]. The Synthesis operating system uses run-time code synthesis to combine protocol objects at run-time <ref> [Massalin89] </ref>. 1.3 Group communication A group communication mechanism organizes a set of principals, acting as group members, into a distributed group. The mechanism provides a group multicast protocol, by which each member can send a message to all group members.
Reference: [Mishra89] <author> Shikavant Mishra, Larry L. Peterson, and Richard D. Schlichting. </author> <title> Implementing fault-tolerant replicated objects using Psync. </title> <booktitle> Proceedings of 8th Symposium on Reliable Distributed Systems (Seattle, WA), </booktitle> <pages> pages 42-52. </pages> <publisher> IEEE Computer Society Press, </publisher> <address> catalog number 88CH2807-6, </address> <month> 10-12 October </month> <year> 1989. </year>
Reference-contexts: Some protocols such as the Isis ABCAST protocol [Birman87] ensure that every principal receives every update message, so that there is never any difference between group members. Others allow some divergence, as long as it does not violate 1SR: the Isis CBCAST protocol [Birman90] and the Psync protocol <ref> [Mishra89] </ref> provide causal consistency [Lamport78], while voting protocols [Gifford79] ensure that a majority of the members perform the update. Protocols that provide 1SR cannot scale to the large numbers of group members that are required for wide-area systems. <p> A message ordering mechanism can be evaluated by the amount of extra information that must be appended to messages, by the amount of state each principal must maintain, and by the delay it imposes between receipt and delivery. Some causally-consistent mechanisms, such as Psync <ref> [Mishra89] </ref>, require that messages be tagged with a number of timestamps or message identifiers. Total order-ings can be accomplished with a per-principal counter or timestamp, though the resulting order will not be causal unless the counter or timestamp respects causality. Message ordering can require delaying updates for extended periods.
Reference: [Mishra92] <author> Shivakant Mishra, Larry L. Peterson, and Richard D. Schlichting. </author> <title> Protocol modularity in systems for managing replicated data. </title> <booktitle> Proceedings of 2nd Workshop on the Managment of Replicated Data (Monterey, California), </booktitle> <pages> pages 78-81, </pages> <month> Novem-ber </month> <year> 1992. </year>
Reference-contexts: The x-kernel used a similar idea to combine components form a fast and efficient interprocess communication subsystem [Peterson90]. This mechanism has been used to construct a modular system for building consistent group communication protocols <ref> [Mishra92] </ref>. The Synthesis operating system uses run-time code synthesis to combine protocol objects at run-time [Massalin89]. 1.3 Group communication A group communication mechanism organizes a set of principals, acting as group members, into a distributed group.
Reference: [Peterson90] <author> Larry Peterson, Norman Hutchinson, Sean O'Malley, and Herman Rao. </author> <title> The x-kernel: a platform for accessing Internet resources. </title> <journal> IEEE Computer, </journal> <volume> 23(5) </volume> <pages> 23-33, </pages> <month> May </month> <year> 1990. </year>
Reference-contexts: The framework therefore serves as a way to organize the classes. The Choices object-oriented operating system uses frameworks to structure the implementation of process management, virtual memory, storage, and other services [Campbell92]. The x-kernel used a similar idea to combine components form a fast and efficient interprocess communication subsystem <ref> [Peterson90] </ref>. This mechanism has been used to construct a modular system for building consistent group communication protocols [Mishra92].
Reference: [Rumbaugh91] <author> James Rumbaugh, Michael Blaha, William Premerlani, Frederick Eddy, and William Lorensen. </author> <title> Object-Oriented Modeling and Design. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1991. </year>
Reference-contexts: It generalizes concepts such as layered design, often used in specifying network protocols, and structured design. It is related to the Object-Oriented Design methodology <ref> [Rumbaugh91] </ref>. A framework is useful both as a tool to design components, and as a method for sharing design and coding effort between applications. A framework composes a number of component objects to form a complete subsystem.
Reference: [Schneider90] <author> Fred B. Schneider. </author> <title> Implementing fault-tolerant services using the state machine approach: a tutorial. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(4) </volume> <pages> 299-319, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: The mechanism provides a group multicast protocol, by which each member can send a message to all group members. Group communication can be used to implement a replicated service using the state machine approach <ref> [Schneider90] </ref>. Each group member maintains a copy of the state being replicated. Operations on this state are multicast to the group members, causing each member to transform its copy of the state in the same way as other members. Several group communication protocols have been developed.
Reference: [Turek92] <author> John Turek and Dennis Shasha. </author> <title> The many faces of consensus in distributed systems. </title> <journal> IEEE Computer, </journal> <volume> 25(6) </volume> <pages> 8-17, </pages> <month> June </month> <year> 1992. </year> <month> 10 </month>
Reference-contexts: In pathological cases, as when two mobile computers are never connected at the same time, it may be necessary to communicate through other principals. These conditions are sufficient to make distributed consensus possible <ref> [Turek92] </ref>. 1.2 Frameworks A framework is an object-oriented description of the components that make up a system and how they are connected. It generalizes concepts such as layered design, often used in specifying network protocols, and structured design. It is related to the Object-Oriented Design methodology [Rumbaugh91].
References-found: 23

