URL: http://www.cs.rpi.edu/~sibel/research/papers/sigmod99.ps
Refering-URL: http://www.cs.rpi.edu/~sibel/research/papers/sigmod99.html
Root-URL: http://www.cs.rpi.edu
Email: sibel@cs.rpi.edu  mlsapino@di.unito.it  vs@cs.umd.edu  
Title: A Multimedia Presentation Algebra  
Author: S. Adal M.L. Sapino V.S. Subrahmanian 
Address: Torino  
Affiliation: Rensselaer Polytechnic Institute  Universita di  University of Maryland  
Note: Paper Number: A112  
Abstract: Over the last few years, there has been a tremendous increase in the number of interactive multimedia presentations prepared by different individuals and organizations. These run the gamut from PowerPoint presentations to sophisticated presentations built using tools like Director and/or ToolBook. Yet, to date, the need to query archives of such multimedia presentations has barely been recognized. In this paper, we describe an algebra called multimedia presentation algebra (MPA) for querying databases consisting of multimedia presentations created by individuals as well as for constructing new presentations from existing ones. In contrast to the relational algebra, MPA must operate on trees whose branches reflect different possible playouts of a family of presentations. We define selection, projection, join, merge, union, intersection and difference operations for such databases, and develop sound and complete algorithms for implementing these operations. We prove a host of equivalence results for queries in this algebra which may be used to build query optimizers for interactive presentation databases. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. </author> <title> Adal (1998) Multimedia Information Integration, MMII: making peace with your multimedia., </title> <note> to appear in IEEE Intelligent Systems. 24 </note>
Reference-contexts: In order to define object selection conditions, we assume the existence of a set of variables ranging over the base types. Variables over complex types are inductively defined as follows. Suppose O is a variable over objects of type o . Then: * If o = ARRAY <ref> [1; : : : ; K] </ref> of o 0 then O [i] is a variable of type o 0 for 1 i K. * If o = RECORD f 1 : o 1 ; : : : ; f n : o n END RECORD then O:f i is a variable <p> Thus, over the coming years, there will be a growing need to build the ability to query databases consisting of interactive multimedia presentations, to query this rapidly growing, but much neglected body of data <ref> [1] </ref>.
Reference: [2] <author> C. Baral, G. Gonzalez, </author> <title> and T.C. Som. (1998) Design and Implementation of Display Specifications for Multimedia An--swers, </title> <booktitle> ICDE'98, </booktitle> <pages> pp. 558-565, </pages> <address> Orlando, Florida, </address> <year> 1998. </year>
Reference: [3] <author> E. Bertino, E. Ferrari. </author> <title> (1998) Conceptual Temporal Models for Multimedia Data, </title> <note> accepted for publication in IEEE Trans. on Knowledge and Data Engineering (to appear). </note>
Reference-contexts: They built a system called CHIMP that supported the creation and delivery of multimedia presentations across a network. Song [20] identified the appropriateness of difference constraints for specifying temporal aspects of a presentation at around the same time. Bertino and Ferrari <ref> [3] </ref> have developed an extension of the CHIMP based approach to perform detailed reasoning about individual media objects. Other related work includes [19, 15] which use intervals for scheduling multimedia presentations (interval constraints form a strict subclass of difference constraints).
Reference: [4] <author> M.C. Buchanan and P.T. </author> <booktitle> Zellweger (1993) Automatic Temporal Layout Mechanisms ACM Multimedia 93, </booktitle> <pages> pp. 341-350, </pages> <year> 1993. </year>
Reference-contexts: Many efficient algorithms for these operations have been proposed in the literature and we can make use of any of these methods. 7 Related Work One of the first attempts to build multimedia presentations was due to Buchanan and Zellweger <ref> [4, 5] </ref> who described a constraint based approach to specifying temporal aspects of a multimedia presentation. Their solution to the presentation constraints was based on the simplex algorithm. Kim and Song [11] extended this framework with elastic time, and provided improved algorithms. <p> The constraints expressible using their framework are less expressive 1 than those of <ref> [4, 5, 11, 8, 9] </ref>, but by sacrificing this expressiveness, they are able to develop a calculus to query sets of such graph-based presentations. Note that their framework applies to non-interactive presentations only. In a related work [16], G.
Reference: [5] <author> M.C. Buchanan and P.T. </author> <title> Zellweger (1993) Automatically Generating Consistent Schedules for Multimedia Documents, </title> <journal> ACM/Springer-Verlag Journal of Multimedia Systems, </journal> <volume> vol. 1, no. 2, </volume> <year> 1993. </year>
Reference-contexts: Many efficient algorithms for these operations have been proposed in the literature and we can make use of any of these methods. 7 Related Work One of the first attempts to build multimedia presentations was due to Buchanan and Zellweger <ref> [4, 5] </ref> who described a constraint based approach to specifying temporal aspects of a multimedia presentation. Their solution to the presentation constraints was based on the simplex algorithm. Kim and Song [11] extended this framework with elastic time, and provided improved algorithms. <p> The constraints expressible using their framework are less expressive 1 than those of <ref> [4, 5, 11, 8, 9] </ref>, but by sacrificing this expressiveness, they are able to develop a calculus to query sets of such graph-based presentations. Note that their framework applies to non-interactive presentations only. In a related work [16], G.
Reference: [6] <author> K.S.Candan, E. Lemar, </author> <title> and V.S. Subrahmanian. (1997) Management and Rendering of Multimedia Views, </title> <booktitle> Proc. 1998 Intl. Workshop on Multimedia Information Systems, Sep. 1998. </booktitle> <publisher> Springer Verlag Lecture Notes in Computer Science. </publisher>
Reference-contexts: This paper is an attempt to formalize the querying of interactive multimedia presentations for static documents in which the resulting presentation for each interaction is pre-determined and stored. It builds on top of previous work <ref> [6, 7] </ref> in which we have developed the concept of an interactive multimedia presentation or IMP for short, and implemented it. <p> As most commercial tools to build multimedia presentations (e.g. Microsoft PowerPoint, IconAuthor, ToolBook, Director) all support interactions, and as a key aspect distinguishing a movie from a presentation is the ability of a user watching the presentation to interact with it, Candan et al. <ref> [6, 7] </ref> developed a model of interactive multimedia presentations (IMPs for short). This has been briefly described in Section 2 of this paper. Work on the development of a presentation database has been pioneered by the Ozsoyoglus' [12] who have developed a graphical query calculus and a graphical query language.
Reference: [7] <author> K.S.Candan, E. Lemar and V.S.Subrahmanian. </author> <title> Multimedia View Management, Currently being revised according to referee comments, </title> <journal> VLDB Journal. </journal>
Reference-contexts: This paper is an attempt to formalize the querying of interactive multimedia presentations for static documents in which the resulting presentation for each interaction is pre-determined and stored. It builds on top of previous work <ref> [6, 7] </ref> in which we have developed the concept of an interactive multimedia presentation or IMP for short, and implemented it. <p> As most commercial tools to build multimedia presentations (e.g. Microsoft PowerPoint, IconAuthor, ToolBook, Director) all support interactions, and as a key aspect distinguishing a movie from a presentation is the ability of a user watching the presentation to interact with it, Candan et al. <ref> [6, 7] </ref> developed a model of interactive multimedia presentations (IMPs for short). This has been briefly described in Section 2 of this paper. Work on the development of a presentation database has been pioneered by the Ozsoyoglus' [12] who have developed a graphical query calculus and a graphical query language.
Reference: [8] <author> K.S. Candan, B. Prabhakaran and V.S. Subrahmanian. </author> <title> (1996) CHIMP: A Framework for Supporting Multimedia Document Authoring and Presentation, </title> <booktitle> Proc. 1996 ACM Multimedia 1996 Conference, </booktitle> <address> Boston, MA, </address> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: Their solution to the presentation constraints was based on the simplex algorithm. Kim and Song [11] extended this framework with elastic time, and provided improved algorithms. Later, Candan et al. <ref> [8, 9] </ref> showed that instead of using arbitrary constraints, a small class of constraints called difference constraints was enough not only to specify temporal aspects of a multimedia presentation, but also to specify spatial aspects, together with a variety of quality of service (QoS) constraints [9]. In [8, 9], Candan et.al <p> Candan et al. <ref> [8, 9] </ref> showed that instead of using arbitrary constraints, a small class of constraints called difference constraints was enough not only to specify temporal aspects of a multimedia presentation, but also to specify spatial aspects, together with a variety of quality of service (QoS) constraints [9]. In [8, 9], Candan et.al further introduces prioritized difference constraints and they show how to relax presentation constraints (and modify the presentation in the most desirable manner) when there are conflicts within presentation specifications or there are resource limitations. <p> The constraints expressible using their framework are less expressive 1 than those of <ref> [4, 5, 11, 8, 9] </ref>, but by sacrificing this expressiveness, they are able to develop a calculus to query sets of such graph-based presentations. Note that their framework applies to non-interactive presentations only. In a related work [16], G.
Reference: [9] <author> K.S. Candan, B. Prabhakaran, </author> <title> and V.S. Subrahmanian (1996) Retrieval Schedules Based on Resource Availability and Flexible Presentation Specifications, </title> <note> Accepted for publication in ACM-Springer Multimedia Systems Journal. </note>
Reference-contexts: We note that it is possible in general to under-specify the requirements about objects. This means the system will have to decide the time and location for such objects. Techniques for filling the temporal and spatial dimensions with objects have been discussed in <ref> [9] </ref>. An IMP is valid if it satisfies the realizability and boundness conditions. An IMP is strongly valid if in addition, it is compact. In the rest of the paper, we assume that all IMPs are valid. <p> We describe in Section 5.2 how nodes can be removed. Similarly, boundness can be ensured by restricting all constraints to the relevant object terms Section 6.2. In addition, unrealizable constraints can be relaxed by removing minimal conditions from the constraints. In <ref> [9] </ref>, we give a declarative definition of relaxation and develop and complete algorithms for computing it. When discussing MPA operations, we show how and when operations preserve validity and strong validity automatically. In other cases, we assume that the appropriate action can be taken to ensure these properties. <p> Their solution to the presentation constraints was based on the simplex algorithm. Kim and Song [11] extended this framework with elastic time, and provided improved algorithms. Later, Candan et al. <ref> [8, 9] </ref> showed that instead of using arbitrary constraints, a small class of constraints called difference constraints was enough not only to specify temporal aspects of a multimedia presentation, but also to specify spatial aspects, together with a variety of quality of service (QoS) constraints [9]. In [8, 9], Candan et.al <p> Later, Candan et al. [8, 9] showed that instead of using arbitrary constraints, a small class of constraints called difference constraints was enough not only to specify temporal aspects of a multimedia presentation, but also to specify spatial aspects, together with a variety of quality of service (QoS) constraints <ref> [9] </ref>. In [8, 9], Candan et.al further introduces prioritized difference constraints and they show how to relax presentation constraints (and modify the presentation in the most desirable manner) when there are conflicts within presentation specifications or there are resource limitations. <p> Candan et al. <ref> [8, 9] </ref> showed that instead of using arbitrary constraints, a small class of constraints called difference constraints was enough not only to specify temporal aspects of a multimedia presentation, but also to specify spatial aspects, together with a variety of quality of service (QoS) constraints [9]. In [8, 9], Candan et.al further introduces prioritized difference constraints and they show how to relax presentation constraints (and modify the presentation in the most desirable manner) when there are conflicts within presentation specifications or there are resource limitations. <p> The constraints expressible using their framework are less expressive 1 than those of <ref> [4, 5, 11, 8, 9] </ref>, but by sacrificing this expressiveness, they are able to develop a calculus to query sets of such graph-based presentations. Note that their framework applies to non-interactive presentations only. In a related work [16], G.
Reference: [10] <author> E. Hwang, P. Prabhakaran, </author> <title> and V.S. Subrahmanian. Distributed Video Presentations, </title> <booktitle> in Proc. 1998 IEEE Intl. Conf. on Data Engineering. </booktitle>
Reference-contexts: Creation of retrieval schedules has also been studied by Hwang, Prab-hakaran and Subrahmanian <ref> [10] </ref> who have proposed a method to create retrieval schedules for non-interactive presentations. They built a system called CHIMP that supported the creation and delivery of multimedia presentations across a network.
Reference: [11] <author> M.Y. Kim and J. </author> <title> Song (1995) Multimedia Documents with Elastic Time, </title> <booktitle> ACM Multimedia Conference '95, </booktitle> <year> 1995. </year>
Reference-contexts: Their solution to the presentation constraints was based on the simplex algorithm. Kim and Song <ref> [11] </ref> extended this framework with elastic time, and provided improved algorithms. <p> The constraints expressible using their framework are less expressive 1 than those of <ref> [4, 5, 11, 8, 9] </ref>, but by sacrificing this expressiveness, they are able to develop a calculus to query sets of such graph-based presentations. Note that their framework applies to non-interactive presentations only. In a related work [16], G.
Reference: [12] <author> T. Lee, L. Sheng, T. Bozkaya, N.H. Balkir, Z.M. Ozsoyoglu, and G. Ozsoyoglu. </author> <title> Querying Multimedia Presentations Based on Content, </title> <note> (submitted for publication), </note> <year> 1998. </year>
Reference-contexts: of thousands of interactive multimedia presentations all over the world (ranging from PowerPoint presentations to Macromedia Director and Asymetrix Toolbook presentations), the concept of an interactive multimedia presentation database has not been adequately explored, though an important preliminary investigation (which did not account for interaction) was explored by Ozsoyoglu et.al. <ref> [12] </ref>. In this paper, we investigate the data management support needed to query interactive multimedia presentations (IMPs for short) from possibly heterogeneous repositories and to create modified presentations on the fly from these repositories. <p> This has been briefly described in Section 2 of this paper. Work on the development of a presentation database has been pioneered by the Ozsoyoglus' <ref> [12] </ref> who have developed a graphical query calculus and a graphical query language. <p> Our framework extends their framework in the following important ways: (i) even in the non-interactive case, the work presented here applies to presentations containing difference constraints, (ii) our framework allows the query 1 In short, the constraints in <ref> [12] </ref> are expressible in the form x y, while in our case, we can express the wider class of constraints having the form x y c. 23 ing of interactive multimedia presentations, which theirs does not support, (iii) our framework provides an algebra that is specialized towards the querying of interactive <p> The framework of <ref> [12] </ref> does contain a calculus, which we do not have. The framework, algebra and implementation operators described in this paper apply to the querying of distributed multimedia presentations created using tools such as PowerPoint, IconAuthor, ToolBook, Director, etc. <p> In this paper, we have taken a first step (building upon previous important steps taken by the Ozsoyoglus' <ref> [12] </ref>) towards the definition of an interactive multimedia presentation database in particular, we have: * defined the concept of an interactive multimedia presentation database (IPD); * developed a set of algebraic operations on IPDs including very general versions of join and merge opera tions; * defined the concepts of validity and
Reference: [13] <author> W.-S. Li, K.S. Candan, K. Hirata, and Y. Hara. </author> <title> (1997) Facilitating Multimedia Database Exploration through Visual Interfaces and Perpetual Query Reformulations, </title> <publisher> VLDB'97. </publisher>
Reference: [14] <author> J. Lin and Z.M. Ozsoyoglu. </author> <title> (1997) Processing OODB Queries by O-Algebra, </title> <booktitle> Proc. 8th International Conference on Information and Knowledge Management, </booktitle> <address> Rockville, Maryland, </address> <month> Nov. </month> <year> 1996, </year> <pages> pp. 134-142. </pages>
Reference-contexts: They use a generic object algebra called the O-algebra <ref> [14] </ref> while in contrast, we present an algebra specialized for multimedia presentations in particular, our algebra contains unique operators like merge and join under different constraint merge and/or amalgamation conditions, which have no counterparts in their framework and (v) we present a host of query equivalence results that may serve as
Reference: [15] <author> T.D.C. Little and A. </author> <title> Ghafoor (1990) Synchronization and Storage Models for Multimedia Objects, </title> <journal> IEEE J. on Selected Areas of Communications, </journal> <volume> vol. 8, no. 3, </volume> <month> April </month> <year> 1990, </year> <pages> pp. 413-427. </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Song [20] identified the appropriateness of difference constraints for specifying temporal aspects of a presentation at around the same time. Bertino and Ferrari [3] have developed an extension of the CHIMP based approach to perform detailed reasoning about individual media objects. Other related work includes <ref> [19, 15] </ref> which use intervals for scheduling multimedia presentations (interval constraints form a strict subclass of difference constraints). Baral et al.[2] specify a language through which answers to queries on multimedia databases may be visualized as multimedia presentations. None of these approaches deals with interaction.
Reference: [16] <author> G. Ozsoyoglu, V. Hakkoymaz, and J.D. </author> <title> Kraft (1996) Automating the Assembly of Presentations from Multimedia Databases, </title> <booktitle> Twelfth International Conference on Data Engineering, </booktitle> <pages> pp. 593-601, </pages> <address> New Orleans, </address> <month> February </month> <year> 1996. </year>
Reference-contexts: Note that their framework applies to non-interactive presentations only. In a related work <ref> [16] </ref>, G. Ozsoyoglu and his colleagues discuss a system called VIDQUERY which assembles a presentation based on a given query and a set of inclusion exclusion constraints.
Reference: [17] <author> M.T. Ozsu, D. Szafron, G. El-Medani, and C. Vittal. </author> <title> (1995) An Object-Oriented Multimedia Database System for a News-on-Demand Application, </title> <journal> ACM/Springer Multimedia Systems Journal, </journal> <volume> 3: </volume> <pages> 182-203, </pages> <year> 1995. </year>
Reference-contexts: The framework of [12] does contain a calculus, which we do not have. The framework, algebra and implementation operators described in this paper apply to the querying of distributed multimedia presentations created using tools such as PowerPoint, IconAuthor, ToolBook, Director, etc. News on demand applications <ref> [17] </ref> are often authored with such tools. 8 Conclusions With the growing use of computers to create technical, business and artistic presentations, there has been a huge increase in the number of multimedia presentation tools out in the market.
Reference: [18] <author> Y. Rui, T.S. Huang, and S. Mehrotra. </author> <title> (1997) Content-based Image Retrieval with Relevance Feedback in MARS, </title> <booktitle> IEEE Int. Conf. on Image Processing, </booktitle> <year> 1997. </year>
Reference: [19] <author> T.K. Shih, S.K.C. Lo, S.-J. Fu, and J.B. </author> <title> Chang (1996) Using Interval Logic and Inference Rules for the Automatic Generation of Multimedia Presentations, </title> <booktitle> IEEE International Conference on Multimedia Computing and Systems '96, </booktitle> <pages> pp. 425-428, </pages> <address> Hiroshima, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: Song [20] identified the appropriateness of difference constraints for specifying temporal aspects of a presentation at around the same time. Bertino and Ferrari [3] have developed an extension of the CHIMP based approach to perform detailed reasoning about individual media objects. Other related work includes <ref> [19, 15] </ref> which use intervals for scheduling multimedia presentations (interval constraints form a strict subclass of difference constraints). Baral et al.[2] specify a language through which answers to queries on multimedia databases may be visualized as multimedia presentations. None of these approaches deals with interaction.
Reference: [20] <author> J. Song, Y.N. Doganata, M.Y. Kim and A.N. Tantawi. </author> <title> (1997) Modeling Timed User Interactions in Multimedia Documents, </title> <booktitle> in Proc. 1997 IEEE Intl. Conf. on Multimedia Computing Systems. </booktitle>
Reference-contexts: Creation of retrieval schedules has also been studied by Hwang, Prab-hakaran and Subrahmanian [10] who have proposed a method to create retrieval schedules for non-interactive presentations. They built a system called CHIMP that supported the creation and delivery of multimedia presentations across a network. Song <ref> [20] </ref> identified the appropriateness of difference constraints for specifying temporal aspects of a presentation at around the same time. Bertino and Ferrari [3] have developed an extension of the CHIMP based approach to perform detailed reasoning about individual media objects.
Reference: [21] <author> J.D. Ullman. </author> <booktitle> (1989) Principles of Database and Knowledge Base Systems, </booktitle> <volume> volume 2. </volume> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: In our ongoing work, we are (i) developing a multimedia presentation calculus (MPC). Ullman <ref> [21] </ref> presents a concept of safe query in the relational calculus.
Reference: [22] <author> J.W. Wong, K.A. Lyons, D. Evans, R.J. Velthuys, G.v. Bochmann, E. Dubois, N.D. Georganas, G. Neufeld, M.T. Ozsu, J. Brinskelle, A. Hafid, N. Hutchinson, P. Iglinski, B. Kerherve, L. Lamont, D. Makaroff, and D. Szafron, </author> <title> Enabling Technology for Distributed Multimedia Applications, </title> <journal> IBM Systems Journal, </journal> <volume> 36(4), </volume> <year> 1997, </year> <pages> pages 489-507. 25 </pages>
References-found: 22

