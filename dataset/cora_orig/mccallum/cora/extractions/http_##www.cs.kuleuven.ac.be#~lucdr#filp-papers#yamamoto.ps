URL: http://www.cs.kuleuven.ac.be/~lucdr/filp-papers/yamamoto.ps
Refering-URL: http://www.cs.kuleuven.ac.be/~lucdr/filp.html
Root-URL: 
Email: Email yamamoto@intellektik.informatik.th-darmstadt.de  
Phone: Phone +49-6151-16-2863, Fax +49-6151-16-5326  
Title: Which Hypotheses Can Be Found with Inverse Entailment? -Extended Abstract  
Author: Akihiro YAMAMOTO 
Address: Alexanderstr. 10, D64283 Darmstadt, GERMANY  
Affiliation: Fachgebiet Intellektik, Fachbereich Informatik Technische Hochschule Darmstadt  
Abstract: In this paper we give a completeness theorem of an inductive inference rule inverse entailment proposed by Muggleton. Our main result is that a hypothesis clause H can be derived from an example E under a background theory B with inverse entailment iff H subsumes E relative to B in Plotkin's sense. The theory B can be any clausal theory, and the example E can be any clause which is neither a tautology nor implied by B. The derived hypothesis H is a clause which is not always definite. In order to prove the result we give declarative semantics for arbitrary consistent clausal theories, and show that SB-resolution, which was originally introduced by Plotkin, is complete procedural semantics. The completeness is shown as an extension of the completeness theorem of SLD-resolution. We also show that every hypothesis H derived with saturant generalization, proposed by Rouveirol, must subsume E w.r.t. B in Buntine's sense. Moreover we show that saturant generalization can be obtained from inverse entailment by giving some restriction to its usage.
Abstract-found: 1
Intro-found: 1
Reference: [ Buntine, 1988 ] <author> W. Buntine. </author> <title> Generalized Subsumption and Its Applications to Induction and Redundancy. </title> <journal> Artificial Intelligence, </journal> <volume> 36 </volume> <pages> 149-176, </pages> <year> 1988. </year>
Reference-contexts: SOLDR-resolution is an extension of SLD-resolution and is also a restricted version of SOL-derivation [ Inoue, 1992 ] . We also prove the completeness of saturant generalization w.r.t. the generalized subsumption relation <ref> [ Buntine, 1988 ] </ref> . This paper is organized as follows: In the next section we make some preparation on logic, inverse entailment, and saturation. We give a new definition of completeness of inductive rules in Section 3. <p> Definition. A clause D subsumes a clause C if there is a substitution such that every literal in D occurs in C. Two well-known extensions of the subsumption relation have been proposed: the relative subsumption relation in [ Plotkin, 1971 ] , and the generalized subsumption relation defined in <ref> [ Buntine, 1988 ] </ref> . Definition ( [ Plotkin, 1971 ] ) . Let H and E be two clauses. <p> Definition ( [ Plotkin, 1971 ] ) . Let H and E be two clauses. H subsumes E relative to B, written as H -P E (B), if there is a clause F such that B j= 8 (E $ F ) and H subsumes F . Definition ( <ref> [ Buntine, 1988 ] </ref> ) . Let H and E be two definite clauses. H subsumes E w.r.t. B, written as H BE (B), if T H (M ) T E (M ) for every Herbrand model M of B. 2.2. <p> The difference of the two rules can also be represented by the completeness theorem of saturant generalization. The following theorem proved by <ref> [ Buntine, 1988 ] </ref> is help-ful. Theorem 6 ( [ Buntine, 1988 ] ). Let H and E be definite clauses, and B be a definite program. Then H -B E (B) iff, for some substitution , H + = E E and B ^ E j= :(H ). <p> The difference of the two rules can also be represented by the completeness theorem of saturant generalization. The following theorem proved by <ref> [ Buntine, 1988 ] </ref> is help-ful. Theorem 6 ( [ Buntine, 1988 ] ). Let H and E be definite clauses, and B be a definite program. Then H -B E (B) iff, for some substitution , H + = E E and B ^ E j= :(H ). Corollary 2. The relation -B is a generalization relation.
Reference: [ Cohen, 1995a ] <author> W. W. Cohen. </author> <title> Pac-learning Recursive Logic Programs: Efficient Algorithms. </title> <journal> J. of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 501-539, </pages> <year> 1995. </year>
Reference-contexts: Some learnability of definite programs was shown in <ref> [ Cohen, 1995a; 1995b ] </ref> by using the same strategy that inverse entailment is founded on. He gave a class of definite clauses which is learnable in polynomial time. For every hypothesis H in the class, the predicate symbol of H + does not occur in H .
Reference: [ Cohen, 1995b ] <author> W. W. Cohen. </author> <title> Pac-learning Recursive Logic Programs: Negative Results. </title> <journal> J. of Artificial Intelligence Research, </journal> <volume> 2 </volume> <pages> 541-573, </pages> <year> 1995. </year>
Reference: [ Furukawa et al., 1997 ] <author> K. Furukawa, T. Murakami, K. Ueno, T. Ozaki, and K. Shimazu. </author> <title> On a Sufficient Condition for the Exisitence of Moset Specific Hypothesis in Progol. SIG-FAI-9603, </title> <type> 56-61, </type> <institution> Resarch Reprot of JSAI, </institution> <year> 1997. </year>
Reference-contexts: We also show that every correct hypothesis H can be derived if B is a ground reduced definite program and E is a ground unit clause. Another condition for B was given by <ref> [ Furukawa et al., 1997 ] </ref> under the same assumptions on E and H. These conditions are not sufficient when we apply inverse entailment to areas the knowledge of which is not represented as definite programs.
Reference: [ Inoue, 1992 ] <author> K. Inoue. </author> <title> Linear Resolution for Consequence Finding. </title> <journal> Artificial Intelligence, </journal> <volume> 56 </volume> <pages> 301-353, </pages> <year> 1992. </year>
Reference-contexts: Saturant generalization derives hypotheses by generalizing clauses called saturants. We show that saturant generalization can be obtained from inverse entailment if we represent inverse entailment with SOLDR-resolution [ Yamamoto, 1997 ] . SOLDR-resolution is an extension of SLD-resolution and is also a restricted version of SOL-derivation <ref> [ Inoue, 1992 ] </ref> . We also prove the completeness of saturant generalization w.r.t. the generalized subsumption relation [ Buntine, 1988 ] . This paper is organized as follows: In the next section we make some preparation on logic, inverse entailment, and saturation.
Reference: [ Kowalski, 1970 ] <author> R. A. Kowalski. </author> <title> The Case for Using Equality Axioms in Automatic Demonstration. </title> <booktitle> In Proceedings of the Symposium on Automatic Demon-staration (Lecture Notes in Mathematics 125), </booktitle> <pages> pages 112-127. </pages> <publisher> Springer-Verlag, </publisher> <year> 1970. </year>
Reference-contexts: As procedural semantics we adopt SB-resolution, which was introduced in [ Plotkin, 1971 ] with the name C-derivation. We prove a theorem between the two semantics by extending the completeness theorem of SLD-resolution, with the sub-sumption theorem <ref> [ Kowalski, 1970 ] </ref> and a property on relative subsumption given in [ Plotkin, 1971 ] . Inverse entailment is not the first inference rule based on the strategy that every hypothesis is generated by generalizing highly specified clauses.
Reference: [ Lloyd, 1987 ] <author> J. W. Lloyd. </author> <title> Foundations of Logic Programming : Second, Extended Edition. </title> <publisher> Springer - Ver-lag, </publisher> <year> 1987. </year>
Reference-contexts: Covering is used in defining the T P operator <ref> [ Lloyd, 1987 ] </ref> . Definition. For a definite program P and an Herbrand interpretation I, we define T P (I) as T P (I) = fA 2 HB (L) j A is covered by a clause in P g: We will often use the subsumption relation between two clauses. <p> The second change is justified by the well known fact that, for any A 2 H B (L), B ^ E j= A iff there is m 0 such that A 2 T B^E m (;) <ref> [ Lloyd, 1987 ] </ref> . 3. Completeness of Inductive Inference Rules Generally speaking an inductive inference rule is a rule with which hypotheses are derived from a given example E under a background theory B. <p> It is easy to construct an SB-derivation of (P; G) from such an SLD-refutation. Now we give declarative semantics of an arbitrary clausal theory w.r.t. which SB-resolution is complete, by referring the completeness theorem of SLD-resolution. Theorem 2 ( <ref> [ Lloyd, 1987 ] </ref> ). For a definite program P and a goal clause G = A 1 ; : : : ; A n , the following three are equivalent: 1. There is an SLD-refutation of P ^ G. 2.
Reference: [ Muggleton, 1995 ] <author> S. Muggleton. </author> <title> Inverse Entailment and Progol. </title> <journal> New Generation Computing, </journal> <volume> 13 </volume> <pages> 245-286, </pages> <year> 1995. </year> [ <editor> Nienhuys-Cheng and de Wolf, 1994 ] S.-H. Nienhuys-Cheng and Ronald de Wolf. </editor> <booktitle> The Sub-sumption Theorem in Inductive Logic Programming: </booktitle> <editor> Facts and Fallacies. In L. de Raedt, editor, </editor> <booktitle> Proceedings of the 5th International Workshop on Inductive Logic Programming, </booktitle> <pages> pages 147-160, </pages> <year> 1994. </year>
Reference-contexts: However, inverse entailment is not given its logical foundations enough. In this paper we construct the logical foundations of inverse entailment. We say a hypothesis H is correct if B ^ H j= E and B^H is consistent. It was proposed in <ref> [ Muggleton, 1995 ] </ref> that every hypothesis derived with inverse entailment is correct and that every correct hypothesis H can be derived. In the terminology in [ Rouveirol, 1991 ] he said inverse entailment is complete as an inductive inference rule. <p> In this paper we define a clause as a formula of the form F = 8x 1 : : : x k (A 1 _ A 2 _ : : : _ A n _ :B 1 _ : : : _ :B m ) 1 In <ref> [ Muggleton, 1995 ] </ref> a disjunction of all literals in Bot (E; B) is used and called the bottom clause, but we do not use it because it may consists of infinitely many literals. where n 0, m 0, A i 's and B j 's are all atoms, and x <p> H subsumes E w.r.t. B, written as H BE (B), if T H (M ) T E (M ) for every Herbrand model M of B. 2.2. Inverse entailment and saturation We give a formal definition of the inverse entailment rule in <ref> [ Muggleton, 1995 ] </ref> . Definition. Let B be a clausal theory and E be a clause. The bottom set of E under B is a set of literals Bot (E; B) = fL 2 GL (L) j B ^ E j= :Lg: Definition. <p> A clause H is derived by the inverse entailment rule from E under B if H subsumes some ground clause K which is a disjunction of literals in Bot (E; B). Example 1 ( <ref> [ Muggleton, 1995 ] </ref> ). <p> 1 = small (x) fluffy (x); cat (x) is derived with inverse entailment because H 1 subsumes a clause K 1 = small (c x ) fluffy (c x ); cat (c x ): No procedure with which we can generate all elements of the bottom set is given in <ref> [ Muggleton, 1995 ] </ref> , but we showed in [ Yamamoto, 1997 ] they can be generated with SOLDR-resolution when B is a definite program and E is a definite clause.
Reference: [ Plotkin, 1971 ] <author> G. D. Plotkin. </author> <title> Automatic Methods of Inductive Inference. </title> <type> PhD thesis, </type> <institution> Edinburgh University, </institution> <year> 1971. </year>
Reference-contexts: Our main result is that a hypothesis H is derived with inverse entailment iff H subsumes E relative to B whenever E is not a tautology and B 6j= E. The relative subsumption was defined in <ref> [ Plotkin, 1971 ] </ref> . If H subsumes E relative to B, it holds that B ^ H j= E. This means that the definition of completeness in [ Rouveirol, 1991 ] is too restricted to represent the ability of inverse entailment. <p> As procedural semantics we adopt SB-resolution, which was introduced in <ref> [ Plotkin, 1971 ] </ref> with the name C-derivation. We prove a theorem between the two semantics by extending the completeness theorem of SLD-resolution, with the sub-sumption theorem [ Kowalski, 1970 ] and a property on relative subsumption given in [ Plotkin, 1971 ] . <p> As procedural semantics we adopt SB-resolution, which was introduced in <ref> [ Plotkin, 1971 ] </ref> with the name C-derivation. We prove a theorem between the two semantics by extending the completeness theorem of SLD-resolution, with the sub-sumption theorem [ Kowalski, 1970 ] and a property on relative subsumption given in [ Plotkin, 1971 ] . Inverse entailment is not the first inference rule based on the strategy that every hypothesis is generated by generalizing highly specified clauses. Another inference rule based on the strategy was given in [ Rouveirol, 1992 ] which we call the saturant generalization rule. <p> Definition. A clause D subsumes a clause C if there is a substitution such that every literal in D occurs in C. Two well-known extensions of the subsumption relation have been proposed: the relative subsumption relation in <ref> [ Plotkin, 1971 ] </ref> , and the generalized subsumption relation defined in [ Buntine, 1988 ] . Definition ( [ Plotkin, 1971 ] ) . Let H and E be two clauses. <p> Two well-known extensions of the subsumption relation have been proposed: the relative subsumption relation in <ref> [ Plotkin, 1971 ] </ref> , and the generalized subsumption relation defined in [ Buntine, 1988 ] . Definition ( [ Plotkin, 1971 ] ) . Let H and E be two clauses. H subsumes E relative to B, written as H -P E (B), if there is a clause F such that B j= 8 (E $ F ) and H subsumes F . <p> C 0 is used exactly once as D ij . If C n is an empty clause, the sequence is called an SB-refutation of (T; C). Theorem 1 ( <ref> [ Plotkin, 1971 ] </ref> ). Let H and E be clauses and B a clausal theory. Then H -P E (B) iff one of the following three holds: 1. E is a tautology. 2. B j= E. 3. There is an SB-refutation of (B ^ E; H). Corollary 1.
Reference: [ Rouveirol, 1991 ] <author> C. </author> <title> Rouveirol. Completeness for Inductive Procedures. </title> <booktitle> In Proceedings of the 8th International Workshop on Machine Learning, </booktitle> <pages> pages 452-456. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1991. </year>
Reference-contexts: We say a hypothesis H is correct if B ^ H j= E and B^H is consistent. It was proposed in [ Muggleton, 1995 ] that every hypothesis derived with inverse entailment is correct and that every correct hypothesis H can be derived. In the terminology in <ref> [ Rouveirol, 1991 ] </ref> he said inverse entailment is complete as an inductive inference rule. We showed in [ Yamamoto, 1996 ] that his proposition does not hold in general, by giving a case in which some correct hypotheses cannot be derived with inverse entailment. <p> The relative subsumption was defined in [ Plotkin, 1971 ] . If H subsumes E relative to B, it holds that B ^ H j= E. This means that the definition of completeness in <ref> [ Rouveirol, 1991 ] </ref> is too restricted to represent the ability of inverse entailment. In this paper we revise the definition so that we can represent the abilty in the form of a completeness theorem. <p> Definition. An inductive inference rule R is complete w.r.t. a generalization relation if R is correct and every hypothesis H such that H - E (B) can be derived from E under B with R. The completeness defined in <ref> [ Rouveirol, 1991 ] </ref> can be regarded as the completeness w.r.t. the implication relation I in our definition. We can show, with an example used in [ Yamamoto, 1996 ] , that neither inverse entailment nor saturant generalization is complete w.r.t. the implication relation. Example 2.
Reference: [ Rouveirol, 1992 ] <author> C. </author> <title> Rouveirol. Extentions of Inversion of Resolution Applied to Theory Completion. </title> <editor> In S. Muggleton, editor, </editor> <booktitle> Inductive Logic Programming, </booktitle> <pages> pages 63-92. </pages> <publisher> Academic Press, </publisher> <year> 1992. </year>
Reference-contexts: Inverse entailment is not the first inference rule based on the strategy that every hypothesis is generated by generalizing highly specified clauses. Another inference rule based on the strategy was given in <ref> [ Rouveirol, 1992 ] </ref> which we call the saturant generalization rule. She assumed that the background theory B is a definite program and the positive examples E are definite clauses. Every hypothesis H generated with the rule is a definite clause. Saturant generalization derives hypotheses by generalizing clauses called saturants.
Reference: [ Yamamoto, 1996 ] <author> A. Yamamoto. </author> <title> Improving Theories for Inductive Logic Programming Systems with Ground Reduced Programs. Submitted to New Generation Computing, </title> <year> 1996. </year>
Reference-contexts: It was proposed in [ Muggleton, 1995 ] that every hypothesis derived with inverse entailment is correct and that every correct hypothesis H can be derived. In the terminology in [ Rouveirol, 1991 ] he said inverse entailment is complete as an inductive inference rule. We showed in <ref> [ Yamamoto, 1996 ] </ref> that his proposition does not hold in general, by giving a case in which some correct hypotheses cannot be derived with inverse entailment. <p> The completeness defined in [ Rouveirol, 1991 ] can be regarded as the completeness w.r.t. the implication relation I in our definition. We can show, with an example used in <ref> [ Yamamoto, 1996 ] </ref> , that neither inverse entailment nor saturant generalization is complete w.r.t. the implication relation. Example 2.
Reference: [ Yamamoto, 1997 ] <author> A. Yamamoto. </author> <title> Representing Inductive Inference with SOLD-Derivation. </title> <booktitle> Submitted to the IJCAI'97 Workshop on Abduction and Induction in AI, </booktitle> <year> 1997. </year>
Reference-contexts: Every hypothesis H generated with the rule is a definite clause. Saturant generalization derives hypotheses by generalizing clauses called saturants. We show that saturant generalization can be obtained from inverse entailment if we represent inverse entailment with SOLDR-resolution <ref> [ Yamamoto, 1997 ] </ref> . SOLDR-resolution is an extension of SLD-resolution and is also a restricted version of SOL-derivation [ Inoue, 1992 ] . We also prove the completeness of saturant generalization w.r.t. the generalized subsumption relation [ Buntine, 1988 ] . <p> derived with inverse entailment because H 1 subsumes a clause K 1 = small (c x ) fluffy (c x ); cat (c x ): No procedure with which we can generate all elements of the bottom set is given in [ Muggleton, 1995 ] , but we showed in <ref> [ Yamamoto, 1997 ] </ref> they can be generated with SOLDR-resolution when B is a definite program and E is a definite clause. <p> By using SOLDR-resolution introduced in [ Ya-mamoto, 1997 ] , we give a more precise relation between the two rules. We have shown in <ref> [ Yamamoto, 1997 ] </ref> that, if P ^ G is consistent, every element in LC (P ^ G) is a ground instance of some consequence of SOLDR-derivation of (P; G). The converse also holds. In other words, every positive literals in Bot (E; B) can be generated by using SOLDR-resolution.
References-found: 13

