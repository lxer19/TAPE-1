URL: http://www.cs.wisc.edu/~condon/papers/agarwalcondon.ps
Refering-URL: http://www.cs.wisc.edu/~condon/condon.html
Root-URL: 
Email: sameet@cs.wisc.edu  condon@cs.wisc.edu  
Title: On Approximation Algorithms for Hierarchical MAX-SAT  
Author: Sameet Agarwal Anne Condon 
Note: Agarwal's research supported by  research funds. Condon's research supported by NSF grant CCR-9257241 and by matching grants from AT&T Foundation and IBM.  
Date: July 2, 1997  
Address: 1210 West Dayton St. Madison, WI 53706  1210 West Dayton St. Madison, WI 53706  
Affiliation: Computer Sciences Department University of Wisconsin  Computer Sciences Department University of Wisconsin  University of Wisconsin Computer Sciences Department  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy, </author> <title> Proof Verification and Hardness of Approximation Problems, </title> <booktitle> Proc. 33rd Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1992, </year> <pages> pp. 14-23. </pages>
Reference-contexts: It is an open problem whether this lower bound for H-MAX-INDEPENDENT-SET can be improved to n * . (The standard (non-hierarchical) MAX-INDEPENDENT-SET problem is NP-hard to approximate within a factor of n * , for some * &lt; 1 <ref> [1, 6] </ref>.) We have also presented a polynomial time approximation algorithm for H-MAX-SAT with performance guarantee 2=3. Our algorithm builds on ideas of Lieberherr and Specker and Yannakakis in a non-trivial way, extending their approach for MAX-SAT to H-MAX-SAT.
Reference: [2] <author> A. Cohen and A. Wigderson, Dispersers, </author> <title> Deterministic Amplification, and Weak Random Sources, </title> <booktitle> Proc. 30th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1989, </year> <pages> pp. 14-19. </pages>
Reference: [3] <author> A. Condon, </author> <title> Approximate Solutions for Problems in PSPACE, </title> <journal> SIGACT News, </journal> <volume> Vol. 26 No. 2, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: Then compute the lazy evaluation of the resulting formula to obtain an instance of SAT. Finally, apply Johnson's algorithm to this instance to obtain a hierarchical specification of a truth assignment of F . Lazy evaluation is also useful in describing simple approximation algorithms for hierarchical graphs. In <ref> [3] </ref> we describe a simple 1=2-approximation algorithm for H-MAX-CUT based on this idea. The resulting algorithm is similar to, but simpler than, the 1/2-approximation algorithm of Marathe et al. [17] for H-MAX-CUT.
Reference: [4] <author> A. Condon, J. Feigenbaum, C. Lund, and P. Shor, </author> <title> Probabilistically Checkable Debate Systems and Approximation Algorithms for PSPACE-hard functions, </title> <journal> Chicago Journal of Theoretical Computer Science, </journal> <volume> Vol. </volume> <year> 1995, </year> <note> Article 4, 19 October 1995. 24 </note>
Reference-contexts: We note that hardness of approximation results for several other PSPACE-hard problems (but not for hierarchically defined problems) based on reductions from debate systems 4 can be found in <ref> [4, 5] </ref>. A hardness of approximability result for a PSPACE-hard hierarchically defined linear programming problem can be found in [17]. Our second result is that there is an efficient approximation algorithm for the H-MAX-SAT problem with performance guarantee 2/3.
Reference: [5] <author> A. Condon, J. Feigenbaum, C. Lund, and P. Shor, </author> <title> Random Debaters and the Hardness of Approximating Stochastic Functions, </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 26, No. 2, </volume> <month> March </month> <year> 1997, </year> <pages> pages 369-400. </pages>
Reference-contexts: Thus, if there is a polynomial time algorithm that computes a function g such that g (F ) is in the range [*H-MAX-SAT (F ); (1=*)H-MAX-SAT (F )] then PSPACE = P. To prove this, we use a result of Condon et al. <ref> [5] </ref>, which characterizes PSPACE in terms of resource-bounded debate systems. We reduce the problem of determining if such a debate system accepts a language L to the problem of approximating the H-MAX-3SAT function. <p> We note that hardness of approximation results for several other PSPACE-hard problems (but not for hierarchically defined problems) based on reductions from debate systems 4 can be found in <ref> [4, 5] </ref>. A hardness of approximability result for a PSPACE-hard hierarchically defined linear programming problem can be found in [17]. Our second result is that there is an efficient approximation algorithm for the H-MAX-SAT problem with performance guarantee 2/3. <p> By "approximating f within ratio * is PSPACE-hard," we mean that, if g approximates f within ratio *, then g is PSPACE-hard. 2.3 Randomized Probabilistically Checkable Debate Systems (RPCDS) We need the following definitions pertaining to debate systems from <ref> [5] </ref> in order to describe the proof of our main nonapproximability result in Section 3. A randomized probabilistically checkable debate system (RPCDS) consists of a verifier V and a debate format D. The debate format is a pair of polynomial-time computable functions (f (n); g (n)). <p> Furthermore, the verifier's queries are non-adaptive, that is, the bits queried are completely determined by the input and the result of the coin flips. Condon et al. <ref> [5] </ref> showed that PSPACE = RP CD (O (log n); O (1)). 3 Nonapproximability of Hierarchical-MAX-3SAT In this section we show in Theorem 1 that for some constant * &lt; 1, it is PSPACE-hard to approximate H-MAX-3SAT within ratio *.
Reference: [6] <author> U. Feige, S. Goldwasser, L. Lovasz, M. Safra, and M. Szegedy, </author> <title> Approximating Clique is Almost NP-Complete, </title> <booktitle> Proc. 32nd Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1991, </year> <pages> pp. 2-12. </pages>
Reference-contexts: It is an open problem whether this lower bound for H-MAX-INDEPENDENT-SET can be improved to n * . (The standard (non-hierarchical) MAX-INDEPENDENT-SET problem is NP-hard to approximate within a factor of n * , for some * &lt; 1 <ref> [1, 6] </ref>.) We have also presented a polynomial time approximation algorithm for H-MAX-SAT with performance guarantee 2=3. Our algorithm builds on ideas of Lieberherr and Specker and Yannakakis in a non-trivial way, extending their approach for MAX-SAT to H-MAX-SAT.
Reference: [7] <author> M. X. Goemans and D. P. Williamson, </author> <title> New 3/4-Approximation Algorithms for the Maximum Satisfiability Problem, </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 7, </volume> <year> 1994, </year> <pages> pp. 656-666. </pages>
Reference-contexts: Although to our knowledge the H-MAX-SAT problem has no immediate practical applications, we chose it for this study because it is the hierarchical analogue of the widely studied NP-hard MAX-SAT problem. Progress on MAX-SAT <ref> [7, 8, 20] </ref> has led to discovery of new techniques, such as those based on semi-definite programming, that are also useful for MAX-CUT, COLORING and many other NP-hard problems. We hope that progress on H-MAX-SAT may similarly lead to insights on other hierarchically defined problems. <p> Algorithms for MAX-SAT that have performance guarantee 3=4 are known, but they do not have the simple greedy structure of our algorithm. Instead, they are based on algorithms for max flow (Yannakakis [20]), linear programming (Goemans and Williamson <ref> [7] </ref>) and semi-definite programming (Goemans and Williamson [8], for MAX-2SAT). A naive application of these techniques to hierarchical formulas would lead to a flow or programming problem of exponential size, and hence an exponential-time algorithm.
Reference: [8] <author> M. X. Goemans and D. P. Williamson, </author> <title> Improved Approximation Algorithms for Maximum Cut and Satisfiability Problems Using Semidefinite Programming, </title> <journal> J. ACM, </journal> <volume> 42, </volume> <year> 1995, </year> <pages> pp. 1115-1145. </pages>
Reference-contexts: Although to our knowledge the H-MAX-SAT problem has no immediate practical applications, we chose it for this study because it is the hierarchical analogue of the widely studied NP-hard MAX-SAT problem. Progress on MAX-SAT <ref> [7, 8, 20] </ref> has led to discovery of new techniques, such as those based on semi-definite programming, that are also useful for MAX-CUT, COLORING and many other NP-hard problems. We hope that progress on H-MAX-SAT may similarly lead to insights on other hierarchically defined problems. <p> Algorithms for MAX-SAT that have performance guarantee 3=4 are known, but they do not have the simple greedy structure of our algorithm. Instead, they are based on algorithms for max flow (Yannakakis [20]), linear programming (Goemans and Williamson [7]) and semi-definite programming (Goemans and Williamson <ref> [8] </ref>, for MAX-2SAT). A naive application of these techniques to hierarchical formulas would lead to a flow or programming problem of exponential size, and hence an exponential-time algorithm.
Reference: [9] <author> H. B. Hunt III, M. V. Marathe, V. Radhakrishnan, S. S. Ravi, D. J. Rosenkrantz, and R. E. Stearns, </author> <title> A unified approach to approximation schemes for NP- and PSPACE- hard problems for geometric graphs, </title> <booktitle> Proc. Second Annual European Symposium on Algorithms, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1994, </year> <pages> pp. 424-435. </pages>
Reference-contexts: Previously, a performance guarantee of 1=2 for H-MAX-3SAT was shown by Marathe et al. <ref> [9, 17] </ref>. Their algorithm is based on an algorithm of Johnson [12] for MAX-SAT; roughly, their method is to apply Johnson's technique in a "bottom-up" manner at each level of the hierarchical formula. <p> In this case, we also say that A is a *-approximation algorithm for H-MAX-SAT or that A approximates H-SAT within ratio *. The approximation algorithms for H-MAX-SAT considered in previous papers <ref> [9, 17] </ref> and in this paper all output a hierarchical specification of a truth assignment.
Reference: [10] <author> H. Hunt III, M. Marathe, R. Stearns, and V. Radhakrishnan, </author> <title> On the Complexity and Approx-imability of Periodic and Hierarchical Specifications, </title> <type> Manuscript, </type> <institution> SUNY at Albany, </institution> <year> 1994. </year>
Reference-contexts: We reduce the problem of determining if such a debate system accepts a language L to the problem of approximating the H-MAX-3SAT function. As an immediate application, we obtain nonapproximability results for functions on hierarchical graphs which were previously studied by Hunt et al. <ref> [10, 18] </ref>. In what follows, we use the prefix "H-" to denote a problem on hierarchical instances; for example H-MAX-CUT is the function that maps a hierarchically specified graph to the size of the maximum cut of the graph. <p> In what follows, we use the prefix "H-" to denote a problem on hierarchical instances; for example H-MAX-CUT is the function that maps a hierarchically specified graph to the size of the maximum cut of the graph. Previously, Hunt et al. <ref> [10] </ref> gave approximation-preserving reductions from H-MAX-SAT to the H-MAX-CUT and H-MAX-INDEPENDENT-SET problems. Combining these with our result, it follows that it is PSPACE-hard to approximate H-MAX-CUT and H-MAX-INDEPENDENT-SET to within some constant factor. <p> Hence the total weight of any solution of the H-3SAT formula is at most (k + 6)p (n)2 N . Thus, it is PSPACE-hard to approximate H-MAX-3SAT within ratio (k + 6)=7 of optimal. 2 12 Previously, Hunt et al. <ref> [10] </ref> gave approximation-preserving reductions from H-MAX-SAT to the H-MAX-CUT and H-MAX-INDEPENDENT-SET and H-MAX-2SAT problems (see [10] for definitions of the hierarchical graph problems). Combining these with Theorem 1, we obtain the following corollary. <p> Thus, it is PSPACE-hard to approximate H-MAX-3SAT within ratio (k + 6)=7 of optimal. 2 12 Previously, Hunt et al. <ref> [10] </ref> gave approximation-preserving reductions from H-MAX-SAT to the H-MAX-CUT and H-MAX-INDEPENDENT-SET and H-MAX-2SAT problems (see [10] for definitions of the hierarchical graph problems). Combining these with Theorem 1, we obtain the following corollary. <p> This result, combined with approximation-preserving reductions of Marathe et al. <ref> [10] </ref>, also implies that for some * &lt; 1, it is PSPACE-hard to approximate the hierarchical graph problems H-MAX-CUT, H-MAX-INDEPENDENT-SET and H-MAX-2SAT within ratio *.
Reference: [11] <author> R. Impagliazzo and D. Zuckerman, </author> <title> How to Recycle Random Bits, </title> <booktitle> Proc. 30th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society Press, Los Alamitos, </publisher> <year> 1989, </year> <pages> pp. 248-253. </pages>
Reference: [12] <author> D. S. Johnson, </author> <title> Approximation Algorithms for Combinatorial Problems, </title> <journal> J. Comput. System Sci., </journal> <volume> 9 (1974), </volume> <pages> pp. 256-278. </pages>
Reference-contexts: Previously, a performance guarantee of 1=2 for H-MAX-3SAT was shown by Marathe et al. [9, 17]. Their algorithm is based on an algorithm of Johnson <ref> [12] </ref> for MAX-SAT; roughly, their method is to apply Johnson's technique in a "bottom-up" manner at each level of the hierarchical formula. Our algorithm builds on previous work of of Lieberherr and Specker [16] and Yannakakis [20] for MAX-SAT to obtain the improved bound.
Reference: [13] <author> T. Lengauer, </author> <title> Exploiting Hierarchy in VLSI Design, </title> <booktitle> Proc. Aegean Workshop on Computing, Lecture Notes in Computer Science, </booktitle> <volume> Vol. 227, </volume> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1986, </year> <pages> pp. 180-193. </pages>
Reference-contexts: 1 Introduction Succinct representations of graphs, Boolean formulas and other structures have been studied for over a decade, motivated by applications in VLSI circuit design, scheduling, finite element analysis, and many other applications. A good example is the class of hierarchically defined graphs, proposed by Lengauer <ref> [13, 14] </ref> as a means of specifying VLSI layout circuits. The hierarchical specification of a graph may be logarithmic in the size of the graph.
Reference: [14] <author> T. Lengauer and K. Melhorn, </author> <title> The HILL System: A Design Environment for the Hierarchical Specification, Compaction, and Simulation of Integrated Circuit Layouts, </title> <booktitle> Proc. MIT Conference on Advanced Research in VLSI, </booktitle> <editor> P. Penfield Jr. ed., </editor> <publisher> Artech House Company, </publisher> <year> 1984, </year> <pages> pp. 139-149. </pages>
Reference-contexts: 1 Introduction Succinct representations of graphs, Boolean formulas and other structures have been studied for over a decade, motivated by applications in VLSI circuit design, scheduling, finite element analysis, and many other applications. A good example is the class of hierarchically defined graphs, proposed by Lengauer <ref> [13, 14] </ref> as a means of specifying VLSI layout circuits. The hierarchical specification of a graph may be logarithmic in the size of the graph.
Reference: [15] <author> T. Lengauer and K. Wagner, </author> <title> The Correlation Between the Complexities of the Non-Hierarchical and Hierarchical Versions of Graph Problems, </title> <journal> J. Comput. System Sci., </journal> <volume> 44 (1992), </volume> <pages> pp. 63-93. 25 </pages>
Reference: [16] <author> K. Lieberherr and E. Specker, </author> <title> Complexity of Partial Satisfaction II, </title> <type> TR 293, </type> <institution> Department of EECS, Princeton University, </institution> <year> 1982. </year>
Reference-contexts: Their algorithm is based on an algorithm of Johnson [12] for MAX-SAT; roughly, their method is to apply Johnson's technique in a "bottom-up" manner at each level of the hierarchical formula. Our algorithm builds on previous work of of Lieberherr and Specker <ref> [16] </ref> and Yannakakis [20] for MAX-SAT to obtain the improved bound. Another new feature of our algorithm is the use of a "lazy evaluation" of the hierarchical formula. <p> Combining these with Theorem 1, we obtain the following corollary. Corollary 2 For some constant * &lt; 1, it is PSPACE-hard to approximate H-MAX-2SAT, H-MAX-CUT and H-MAX-INDEPENDENT-SET to within ratio *. 4 2/3-Approximation Algorithm for H-MAX-SAT Our algorithm builds on ideas of Lieberherr and Specker <ref> [16] </ref> and Yannakakis [20]. We actually describe our algorithm for a weighted version of H-MAX-SAT in which clauses may be labeled with binary weights. To motivate our approach, we first describe the algorithm of Lieberherr and Specker [16]. <p> 2/3-Approximation Algorithm for H-MAX-SAT Our algorithm builds on ideas of Lieberherr and Specker <ref> [16] </ref> and Yannakakis [20]. We actually describe our algorithm for a weighted version of H-MAX-SAT in which clauses may be labeled with binary weights. To motivate our approach, we first describe the algorithm of Lieberherr and Specker [16]. We then show in a series of examples how we build on their approach to obtain our algorithm. We give a precise description of our algorithm in Section 4.1 and a proof of its correctness in Section 4.2.
Reference: [17] <author> M. Marathe, H. Hunt III, and S. Ravi, </author> <title> The Complexity of Approximating PSPACE-Complete Problems for Hierarchical Specifications, </title> <booktitle> Proc. 20th International Colloquium on Automata, Languages, and Programming, </booktitle> <year> 1993, </year> <pages> pp. 76-87. </pages>
Reference-contexts: The hierarchical specification of a graph may be logarithmic in the size of the graph. Partly as a result of this, optimization functions defined on hierarchical structures are often PSPACE-hard, motivating the study of approximation algorithms for optimization functions on such succinct structures. Marathe et al. <ref> [17] </ref> described polynomial time approximation algorithms for hierarchical versions of the MAX-CUT and SAT problems, both of which have a performance guarantee of 1=2. This is not as good as the best performance guarantees for the non-hierarchical versions of these problems. <p> We note that hardness of approximation results for several other PSPACE-hard problems (but not for hierarchically defined problems) based on reductions from debate systems 4 can be found in [4, 5]. A hardness of approximability result for a PSPACE-hard hierarchically defined linear programming problem can be found in <ref> [17] </ref>. Our second result is that there is an efficient approximation algorithm for the H-MAX-SAT problem with performance guarantee 2/3. <p> Previously, a performance guarantee of 1=2 for H-MAX-3SAT was shown by Marathe et al. <ref> [9, 17] </ref>. Their algorithm is based on an algorithm of Johnson [12] for MAX-SAT; roughly, their method is to apply Johnson's technique in a "bottom-up" manner at each level of the hierarchical formula. <p> Another new feature of our algorithm is the use of a "lazy evaluation" of the hierarchical formula. This technique can also be used to simplify other algorithms in the literature for hierarchical problems, such as the approximation algorithms of Marathe et al. <ref> [17] </ref> for H-MAX-CUT. Whether our algorithm can be further improved is an interesting problem for several reasons. Algorithms for MAX-SAT that have performance guarantee 3=4 are known, but they do not have the simple greedy structure of our algorithm. <p> It does not appear to help even if the flow or programming problems can be expressed hierarchically, since both of these problems are PSPACE-hard. Moreover, approximating the optimal solution to a hierarchical linear programming problem within ratio * for any * &lt; 1 is PSPACE-hard <ref> [17] </ref>. It would be interesting to find an efficient approximation algorithm for H-MAX-SAT which overcomes these problems to achieve a performance guarantee of 3=4 or better. The rest of the paper is organized as follows. In Section 2, we define precisely the H-SAT and H-MAX-SAT problems studied in this paper. <p> In this case, we also say that A is a *-approximation algorithm for H-MAX-SAT or that A approximates H-SAT within ratio *. The approximation algorithms for H-MAX-SAT considered in previous papers <ref> [9, 17] </ref> and in this paper all output a hierarchical specification of a truth assignment. <p> Lazy evaluation is also useful in describing simple approximation algorithms for hierarchical graphs. In [3] we describe a simple 1=2-approximation algorithm for H-MAX-CUT based on this idea. The resulting algorithm is similar to, but simpler than, the 1/2-approximation algorithm of Marathe et al. <ref> [17] </ref> for H-MAX-CUT. Our algorithm for H-MAX-SAT only outputs a lower bound on the weight of the solution output, not its exact weight.
Reference: [18] <author> M. Marathe, H. Hunt III, R. Stearns, and V. Radhakrishnan, </author> <title> Hierarchical Specifications and Polynomial-Time Approximation Schemes for PSPACE-Complete Problems, </title> <booktitle> Proc. 26th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1994, </year> <pages> pp. 468-477. </pages>
Reference-contexts: Towards this end, we focus on the PSPACE-hard H-MAX-SAT problem, that of determining the maximum weight of any set of clauses of a hierarchically defined Boolean formula in CNF form that can be satisfied by some truth assignment <ref> [18] </ref>. Although to our knowledge the H-MAX-SAT problem has no immediate practical applications, we chose it for this study because it is the hierarchical analogue of the widely studied NP-hard MAX-SAT problem. <p> We present an approximation algorithm for H-MAX-SAT that has performance guarantee 2=3. We also present a hardness-of-approximation result for H-MAX-SAT. Since the hardness of many other problems on hierarchical structures are based on reductions from the H-SAT problem <ref> [18] </ref>, our negative result on approximating H-SAT leads to similar negative results for several problems on hierarchical graphs. Before describing our results and their applications in detail, we use a simple example to explain the H-MAX-SAT problem. <p> We reduce the problem of determining if such a debate system accepts a language L to the problem of approximating the H-MAX-3SAT function. As an immediate application, we obtain nonapproximability results for functions on hierarchical graphs which were previously studied by Hunt et al. <ref> [10, 18] </ref>. In what follows, we use the prefix "H-" to denote a problem on hierarchical instances; for example H-MAX-CUT is the function that maps a hierarchically specified graph to the size of the maximum cut of the graph.
Reference: [19] <author> J. Spencer, </author> <title> Ten Lectures on the Probabilistic Method, </title> <booktitle> CBMS-NSF Regional Conference Series in Applied Mathematics, </booktitle> <address> Np. 52, </address> <publisher> SIAM, </publisher> <address> Philadelphia, PA, </address> <year> 1987. </year>
Reference-contexts: From the fact that F is good, it follows that every clause in the formula has a probability 2=3 of being satisfied. This randomized algorithm can be made deterministic by a well-known procedure, called the method of conditional expectations <ref> [19, 20] </ref>. The Lieberherr-Specker algorithm can be extended to work not just for good formulas, but for the general MAX-SAT problem (which has not apparently been previously noted in the literature), and it can also be extended to H-MAX-SAT.
Reference: [20] <author> M. Yannakakis, </author> <title> On the Approximation of Maximum Satisfiability, </title> <booktitle> Proc. 3rd Symp. on Discrete Algorithms, ACM, </booktitle> <address> New York, </address> <year> 1992, </year> <pages> pp. 1-9. 26 </pages>
Reference-contexts: Although to our knowledge the H-MAX-SAT problem has no immediate practical applications, we chose it for this study because it is the hierarchical analogue of the widely studied NP-hard MAX-SAT problem. Progress on MAX-SAT <ref> [7, 8, 20] </ref> has led to discovery of new techniques, such as those based on semi-definite programming, that are also useful for MAX-CUT, COLORING and many other NP-hard problems. We hope that progress on H-MAX-SAT may similarly lead to insights on other hierarchically defined problems. <p> Their algorithm is based on an algorithm of Johnson [12] for MAX-SAT; roughly, their method is to apply Johnson's technique in a "bottom-up" manner at each level of the hierarchical formula. Our algorithm builds on previous work of of Lieberherr and Specker [16] and Yannakakis <ref> [20] </ref> for MAX-SAT to obtain the improved bound. Another new feature of our algorithm is the use of a "lazy evaluation" of the hierarchical formula. <p> Whether our algorithm can be further improved is an interesting problem for several reasons. Algorithms for MAX-SAT that have performance guarantee 3=4 are known, but they do not have the simple greedy structure of our algorithm. Instead, they are based on algorithms for max flow (Yannakakis <ref> [20] </ref>), linear programming (Goemans and Williamson [7]) and semi-definite programming (Goemans and Williamson [8], for MAX-2SAT). A naive application of these techniques to hierarchical formulas would lead to a flow or programming problem of exponential size, and hence an exponential-time algorithm. <p> Combining these with Theorem 1, we obtain the following corollary. Corollary 2 For some constant * &lt; 1, it is PSPACE-hard to approximate H-MAX-2SAT, H-MAX-CUT and H-MAX-INDEPENDENT-SET to within ratio *. 4 2/3-Approximation Algorithm for H-MAX-SAT Our algorithm builds on ideas of Lieberherr and Specker [16] and Yannakakis <ref> [20] </ref>. We actually describe our algorithm for a weighted version of H-MAX-SAT in which clauses may be labeled with binary weights. To motivate our approach, we first describe the algorithm of Lieberherr and Specker [16]. <p> From the fact that F is good, it follows that every clause in the formula has a probability 2=3 of being satisfied. This randomized algorithm can be made deterministic by a well-known procedure, called the method of conditional expectations <ref> [19, 20] </ref>. The Lieberherr-Specker algorithm can be extended to work not just for good formulas, but for the general MAX-SAT problem (which has not apparently been previously noted in the literature), and it can also be extended to H-MAX-SAT. <p> By equivalent, we mean that under any truth assignment of variables of S, the weight of S is the same as the weight of S 0 under the same truth assignment. This conversion is inspired by an algorithm of Yannakakis <ref> [20] </ref>, who shows how a 2-CNF formula can be converted into an equivalent 2-CNF formula with no unit clauses, using max flow. Yannakakis uses this to obtain a 3/4-approximation algorithm for MAX-2SAT.
References-found: 20

