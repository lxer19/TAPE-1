URL: ftp://www.cs.rutgers.edu/pub/technical-reports/dcs-tr-294.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Title: SORTING NETWORK  
Author: V. Chvatal 
Address: New Brunswick, NJ 08903, USA  
Affiliation: Computer Science Department, Rutgers University  
Note: LECTURE NOTES ON THE NEW AKS  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> Sorting in c log n parallel steps,Combinatorica 3 (1983), </title> <type> 1-19. </type>
Reference: [2] <author> M. Ajtai, J. Komlos, and E. Szemeredi, </author> <title> An O(n log n) sorting network, </title> <booktitle> Proc. 15th Ann. ACM Symp. on Theory of Computing (1983), </booktitle> <pages> pp. 1-9. </pages>
Reference: [3] <author> B.E. Batcher, </author> <title> Sorting networks and their applications, </title> <booktitle> Proc. 32nd Ann. AFIPS Spring Joint Comp. Conf. </booktitle> <month> 32 </month> <year> (1968), </year> <month> pp.307-314. </month>
Reference-contexts: The various m-sorters featured in this description can be implemented as the sorting networks constructed by Batcher <ref> [3] </ref>; these have depth p (p + 1)=2 when m = 2 p for a positive integer p.
Reference: [4] <author> W. Hoeffding, </author> <title> Probability inequalities for sums of bounded random variables, </title> <journal> Am. Statist. Assoc. J. </journal> <volume> 58 (1963), </volume> <pages> 13-30. </pages>
Reference-contexts: We shall use the following result of Hoeffding <ref> [4] </ref>; for an easily accessible proof, see the Appendix. LEMMA 6.3 Let N be a set of size n and let S be its subset of size s; let r 1 ; r 2 ; : : : ; r k be nonnegative integers.
Reference: [5] <author> D. E. Knuth, </author> <booktitle> The Art of Computer Programming. </booktitle> <volume> Vol. </volume> <month> 3. </month> <title> Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA (1973). </address>
Reference: [6] <author> F. T. Leighton, </author> <title> Tight bounds on the complexity of parallel sorting, </title> <journal> IEEE Transactions on Computers C-34 (1985), </journal> <pages> 344-354. </pages>
Reference-contexts: Knuth asked whether such networks exist for all M. An earlier affirmative answer is implicit in a work of Leighton <ref> [6] </ref>; his algorithm columnsort provides a sorting network om 2s 3 wires, made from 2s 2 -sorters, whose depth is four; applying this result twice in a recursive fashion yields a sorting network on 2s 9=2 wires, made from 2s 2 -sorters, whose depth is 16.) 3 2 THE TREE PARADIGM
Reference: [7] <author> M. S. Paterson, </author> <title> Improved sorting networks with O(log n) depth, </title> <booktitle> Algorithmica 5 (1990), </booktitle> <pages> 75-92. </pages>
Reference-contexts: 1 INTRODUCTION We assume familiarity with the notion of a sorting network ([5], Section 5.3.4). Ajtai, Komlos, and Szemeredi [1,2] constructed sorting networks with N wires of depth O (log N). They were not concerned with the value of the proportionality constant implicit in the O <p>- notation; subsequently Paterson <ref> [7] </ref> replaced the O (log N ) by c lg N with c under 6100. (We write lg for the logarithm to the base 2 and ln for the natural logarithm.) The purpose of these lecture notes is to describe an implementation of a more recent, and as yet unpublished, proposal <p> The policy of keeping a (i; t) proportional to N A i -t whenever ff (t) &lt; i &lt; !(t) was advocated (in the special case k = 2) by Paterson <ref> [7] </ref>; the notation A; used in this section is his, as is the notation ; ffi used in the next section. <p> Since both sides of the last inequality are powers of two, the desired conclusion follows. 2 4 ANALYSIS OF THE NETWORK This section follows the lines of Paterson <ref> [7] </ref>. <p> In preparing for these lectures, I had the benefit of several conversations with Komlos and Szemeredi; in addition, Komlos gave me a preprint of Paterson's paper <ref> [7] </ref> and rudimentary notes concerning mainly the separators based on scrambles.

References-found: 7

