URL: ftp://ftp.cs.umd.edu/pub/netdyn/networks92.dtp.ps
Refering-URL: http://www.cs.umd.edu/projects/netdyn.html
Root-URL: 
Title: DTP: An Efficient Transport Protocol  
Author: Dheeraj Sanghi and Ashok K. Agrawala 
Keyword: Keyword Codes: C.2.2 Keywords: Computer-Communication Networks, Network Protocols  
Address: College Park, MD 20742, USA  
Affiliation: Department of Computer Science, University of Maryland,  
Abstract: We recently introduced a new flow control scheme, called send-time control, which is based on a deterministic model of virtual circuits in a computer network. In this scheme, the time at which a packet is sent by a source is computed from estimates of round-trip time, traffic in the network and bottleneck service time. In this paper, we describe a new transport protocol, called DTP, which uses send-time control as its flow control scheme. Preliminary measurements of coast-to-coast connections over the Internet show significant performance improvement over TCP, which is the most commonly used transport protocol in the Internet today. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Ashok K. Agrawala and B. N. Jain. </author> <title> Deterministic analysis of queues in tandem with applications to computer networks. </title> <type> Technical Report CS-TR-2511, </type> <institution> Department of Computer Science, University of Maryland, College Park, </institution> <month> July </month> <year> 1990. </year>
Reference-contexts: XTP uses rate based flow control, but depends on information from the intermediate nodes to set the rate correctly. VMTP is a special purpose protocol optimized for transaction oriented data transfer across LANs. We have taken the approach of modeling virtual circuits as deterministic servers in tandem <ref> [1, 10, 20] </ref>. The analysis of such models have led us to develop a new flow control scheme, send-time control. In this scheme, the time to send each packet is explicitly decided and the packets are sent at that time, or soon thereafter.
Reference: [2] <author> Ashok K. Agrawala and Dheeraj Sanghi. </author> <title> Design and evaluation of an adaptive flow control scheme. </title> <booktitle> In Proceedings of IEEE INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: In Section 4, we describe some experiments and present results. In Section 5, we present our concluding remarks. 2. Send-Time Control Scheme In this section, we give a brief description of send-time control scheme. Details are provided in reference <ref> [2] </ref>. Consider a virtual circuit connection between a source and a destination. Data packets sent by the source are routed via intermediate nodes, and delivered to the destination. Each data packet is acknowledged by the destination. Acknowledgements are routed via intermediate nodes, and delivered to the source. <p> If the last acknowledgement received is for packet j k, and the next packet to be sent is packet j, one can show <ref> [2] </ref> that the time to send the next packet can be determined by the following equation: d 0 jk + kt b t: (2) This will cause the bottleneck server to remain busy but there will be no queues. <p> The send-time control equation would then become <ref> [2] </ref>: d 0 jk + kt b t + l=jk+1 Note that unlike the earlier case in which we assumed no cross traffic, here we have cross-traffic delay terms (ffi l 's) in the send-time control equation which are not known until later. <p> In all our experiments, we transferred 1000 packets. The source application generated data as fast as possible. The idea was to simulate bulk data transfer over the Internet. We have used simulations to study the interaction between two DTP connections in a network. The results <ref> [2] </ref> show that both the connections achieved higher throughput as compared to the case when there were two TCP connections in the network. We believe that the primary cause of poor performance of TCP is a consequence of the way it handles packet losses.
Reference: [3] <author> J. Atkins. </author> <title> Path control: The transport network of SNA. </title> <journal> IEEE Transactions on Communication, </journal> <volume> COM-28:527-538, </volume> <month> April </month> <year> 1980. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes <ref> [3, 12, 16, 18] </ref>, and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. <p> When the destination receives a packet, it sends an acknowledgement to the sender. The source is then free to send more data units. This scheme is used by TCP [18] and SNA <ref> [3] </ref>. TCP is the most commonly used protocol in the Internet. Van Jacobson [9] has suggested improvements to the TCP's window-based flow control scheme by introducing a slow start scheme. In his scheme, the window size is reduced to one, when a packet loss is detected.
Reference: [4] <author> J-C. Bolot and A. U. Shankar. </author> <title> Dynamical behavior of rate-based flow control mech-anisms. </title> <journal> Computer Communication Review, </journal> <volume> 20(2) </volume> <pages> 35-49, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes <ref> [4, 5, 6, 7] </ref>. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. The source assigns increasing fl This work is supported in part by Rome Labs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland.
Reference: [5] <author> D. R. Cheriton. VMTP: </author> <title> a transport protocol for the next generation of communication systems. </title> <booktitle> In Proceedings of ACM SIGCOMM '86, </booktitle> <pages> pages 406-415, </pages> <address> Stowe, Vermont, </address> <month> August </month> <year> 1986. </year>
Reference-contexts: The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes <ref> [4, 5, 6, 7] </ref>. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. The source assigns increasing fl This work is supported in part by Rome Labs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland. <p> The source transmits data at this rate, until the source and the destination agree to modify the rate. This scheme is used by NETBLT [7], XTP [6] and VMTP <ref> [5] </ref>. NETBLT divides packets into blocks. Before a block of packets is sent, the source and the destination negotiate a rate, which remains constant until the whole block is transferred. XTP uses rate based flow control, but depends on information from the intermediate nodes to set the rate correctly.
Reference: [6] <author> G. Chesson. </author> <title> XTP/PE overview. </title> <booktitle> In Proceedings of 13th Conference on Local Computer Networks, </booktitle> <pages> pages 292-296, </pages> <address> Minneapolis, MN, </address> <month> October </month> <year> 1988. </year>
Reference-contexts: The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes <ref> [4, 5, 6, 7] </ref>. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. The source assigns increasing fl This work is supported in part by Rome Labs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland. <p> The source transmits data at this rate, until the source and the destination agree to modify the rate. This scheme is used by NETBLT [7], XTP <ref> [6] </ref> and VMTP [5]. NETBLT divides packets into blocks. Before a block of packets is sent, the source and the destination negotiate a rate, which remains constant until the whole block is transferred.
Reference: [7] <author> David Clark, M. L. Lambert, and Lixia Zhang. NETBLT: </author> <title> A high throughput transport protocol. </title> <booktitle> In Proceedings of ACM SIGCOMM '87, </booktitle> <pages> pages 353-359, </pages> <address> Stowe, Ver-mont, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes <ref> [4, 5, 6, 7] </ref>. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. The source assigns increasing fl This work is supported in part by Rome Labs and DARPA under contract F30602-90-C-0010 to UMIACS at the University of Maryland. <p> The source transmits data at this rate, until the source and the destination agree to modify the rate. This scheme is used by NETBLT <ref> [7] </ref>, XTP [6] and VMTP [5]. NETBLT divides packets into blocks. Before a block of packets is sent, the source and the destination negotiate a rate, which remains constant until the whole block is transferred.
Reference: [8] <author> M. Gerla and L. Kleirock. </author> <title> Flow control: A comparative survey. </title> <journal> IEEE Transactions on Communication, </journal> <volume> COM-28(4):553-574, </volume> <month> April </month> <year> 1980. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes <ref> [8, 15] </ref> can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window.
Reference: [9] <author> V. Jacobson. </author> <title> Congestion avoidance and control. </title> <booktitle> In Proceedings of ACM SIGCOMM '88, </booktitle> <pages> pages 314-329, </pages> <address> Stanford, California, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: When the destination receives a packet, it sends an acknowledgement to the sender. The source is then free to send more data units. This scheme is used by TCP [18] and SNA [3]. TCP is the most commonly used protocol in the Internet. Van Jacobson <ref> [9] </ref> has suggested improvements to the TCP's window-based flow control scheme by introducing a slow start scheme. In his scheme, the window size is reduced to one, when a packet loss is detected. The window size is increased slowly thereafter on receipt of every acknowledgement.
Reference: [10] <author> B. N. Jain and Ashok K. Agrawala. </author> <title> Deterministic modeling and transient analysis of a network processor with cross traffic. </title> <type> Technical Report CS-TR-2737, </type> <institution> Department of Computer Science, University of Maryland, College Park, </institution> <month> August </month> <year> 1991. </year>
Reference-contexts: XTP uses rate based flow control, but depends on information from the intermediate nodes to set the rate correctly. VMTP is a special purpose protocol optimized for transaction oriented data transfer across LANs. We have taken the approach of modeling virtual circuits as deterministic servers in tandem <ref> [1, 10, 20] </ref>. The analysis of such models have led us to develop a new flow control scheme, send-time control. In this scheme, the time to send each packet is explicitly decided and the packets are sent at that time, or soon thereafter.
Reference: [11] <author> Raj Jain. </author> <title> A timeout-based congestion control scheme for window flow-controlled networks. </title> <journal> IEEE J. on Selected Areas in Communication, </journal> <volume> SAC-4(7):1162-1167, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: In his scheme, the window size is reduced to one, when a packet loss is detected. The window size is increased slowly thereafter on receipt of every acknowledgement. Raj Jain has also suggested a similar scheme in <ref> [11] </ref>. SNA uses a fixed-window flow control, where the acknowledgement for the first packet in the window allows the sender to send another window. In rate-based schemes, the transport protocol entities at the source and at the destination agree upon a rate for transmitting the packets.
Reference: [12] <author> Keng-Tai Ko and S. K. Tripathi. </author> <title> Optimal end-to-end sliding window flow control in high speed networks. </title> <booktitle> In Proceedings of the Tenth Annual IEEE International Phoenix Conference on Computers and Communication, </booktitle> <year> 1991. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes <ref> [3, 12, 16, 18] </ref>, and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window.
Reference: [13] <author> S. J. Le*er, W. N. Joy, R. S. Fabry, P. Lapsley, S. Miller, and C. Torek. </author> <title> An Advanced 4.3BSD Interprocess Communication Tutorial. </title> <institution> Department of Electrical Engineering and Computer Science, University of California, Berkeley, </institution> <year> 1986. </year>
Reference-contexts: In each experiment, there were two application processes, a data source and a data sink. Both processes were on the host huginn.cs.umd.edu, a VAXStation 3200 at the Computer Science Department, University of Maryland. The packets were routed via various remote gateways on the Internet, using IP LSRR option <ref> [13] </ref>. The source generated 1000 packets of 512 octets each. Please note that the transport protocol entity may have to send more than 1000 packets since some packets may be lost and are retransmit-ted.
Reference: [14] <author> S. J. Le*er, M. K. McKusick, M. J. Karels, and J. S. Quarterman. </author> <title> The Design and Implementation of the 4.3BSD UNIX Operating System. </title> <publisher> Addison-Wesley, </publisher> <month> May </month> <year> 1989. </year>
Reference-contexts: The retransmission timeout values for all packets in transit are stored in a linked list. The timeout values are maintained in much the same way as scheduled times are maintained in the callout queue in Unix <ref> [14] </ref>. The least timeout value is at the front of the list. The other timeout values are stored in the increasing order. In the list, except for the first value, only the difference between the timeout values of a packet and that of the previous one is stored.
Reference: [15] <author> N. F. Maxemchuck and M. E. Zarki. </author> <title> Routing and flow control in high-speed, wide-area networks. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 78 </volume> <pages> 204-221, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes <ref> [8, 15] </ref> can be divided into two broad categories, namely, window-based schemes [3, 12, 16, 18], and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window.
Reference: [16] <author> D. Mitra. </author> <title> Optimal design of windows for high speed data networks. </title> <booktitle> In Proceedings of IEEE INFOCOM '90, </booktitle> <pages> pages 1156-1163, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes <ref> [3, 12, 16, 18] </ref>, and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window.
Reference: [17] <editor> J. B. Postel (editor). </editor> <title> Internet Protocol. Request for Comment: </title> <institution> RFC-791, Network Information Center, SRI International, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: This sometimes delays the detection of packet loss, and affects the throughput. 3.1. Implementation We have implemented DTP in 4.3 BSD Unix and in Sun OS 4.1. It is currently running on a VAXStation 3200 and a SparcStation 1+. The protocol runs on top of the Internet Protocol (IP) <ref> [17] </ref>. Here, we describe some of the salient features of the DTP implementation. In DTP, we use the best clock granularity that Unix provides, which in case of our implementation is 10 ms.
Reference: [18] <editor> J. B. Postel (editor). </editor> <title> Transmission Control Protocol. Request for Comment: </title> <institution> RFC-793, Network Information Center, SRI International, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: The transport protocol entity forms packets and passes them to the network layer. The flow control at the transport layer controls the transfer of packets from the transport layer to the network layer. Most flow control schemes [8, 15] can be divided into two broad categories, namely, window-based schemes <ref> [3, 12, 16, 18] </ref>, and rate-based schemes [4, 5, 6, 7]. In window-based schemes, the transport protocol entities at the source and the destination agree upon a window-size or, simply, window. <p> The window refers to the set of (contiguous) sequence numbers that the source can send without waiting for any ac-knowledgements. When the destination receives a packet, it sends an acknowledgement to the sender. The source is then free to send more data units. This scheme is used by TCP <ref> [18] </ref> and SNA [3]. TCP is the most commonly used protocol in the Internet. Van Jacobson [9] has suggested improvements to the TCP's window-based flow control scheme by introducing a slow start scheme. In his scheme, the window size is reduced to one, when a packet loss is detected.
Reference: [19] <author> Dheeraj Sanghi, M. C. V. Subramaniam, A. U. Shankar, O. Gudmundsson, and P. Jalote. </author> <title> A TCP instrumentation and its use in evaluating roundtrip-time estimators. </title> <journal> J. of Internetworking: Research & Experience, </journal> <volume> 1(2) </volume> <pages> 77-99, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: This way, the minimum service time also gets added to the estimates of cross traffic delays. There are estimators for both the transit time and the additional delay due to cross traffic. We have instrumented the DTP implementation, similar to the instrumentation of TCP described in <ref> [19] </ref>. This instrumentation allows us to monitor specified connections. Every time a packet is sent or received on the connection that is being monitored, information about the current state of connection and variables from the packet header are stored in a log record.
Reference: [20] <author> John Waclawsky. </author> <title> Window Dynamics. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, University of Maryland, College Park, </institution> <month> May </month> <year> 1990. </year>
Reference-contexts: XTP uses rate based flow control, but depends on information from the intermediate nodes to set the rate correctly. VMTP is a special purpose protocol optimized for transaction oriented data transfer across LANs. We have taken the approach of modeling virtual circuits as deterministic servers in tandem <ref> [1, 10, 20] </ref>. The analysis of such models have led us to develop a new flow control scheme, send-time control. In this scheme, the time to send each packet is explicitly decided and the packets are sent at that time, or soon thereafter.
References-found: 20

