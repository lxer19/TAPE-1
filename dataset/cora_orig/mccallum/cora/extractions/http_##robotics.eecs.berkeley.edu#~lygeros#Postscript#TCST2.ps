URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/TCST2.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~lygeros/Publications/TCST2.html
Root-URL: 
Email: fgodbole,lygeros,ekta,akash,lind@eecs.berkeley.edug  
Title: Communication Protocols for a Fault Tolerant Automated Highway System  
Author: D.N. Godbole, J. Lygeros, E. Singh, A. Deshpande, A.E. Lindsey 
Keyword: Automated Highway Systems, Fault Tolerant Control, Intervehicle Coordination, Automatic Verification  
Note: Research supported by the California PATH program, Institute of Transportation  under MOU 135  
Address: Berkeley, CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California  Studies, University of California, Berkeley  
Abstract: We present the design and verification of inter-vehicle communication protocols for the operation of an Automated Highway System (AHS) in the presence of faults. We consider various hardware faults that can develop on the automated vehicle on an AHS. Our design consists of discrete event supervisory controllers to stop the faulty vehicle or take it out of the highway in a safe manner. Because these actions require cooperation between vehicles in the neighborhood of the faulty vehicle, the supervisory controllers are implemented by means of communication protocols. The logical correctness of the proposed protocols is verified using computational verification tools. We discuss the safety of the proposed design and highlight the problems associated with carrying out a complete safety analysis. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Shaldover, </author> <title> "Operation of automated guideway transit vehicles in dynamically recon-figured trains and platoons," </title> <year> 1979. </year>
Reference-contexts: Platoons are isolated from one another by large gaps, of the order of 30 meters. Packing the vehicles tightly yields significant improvement in highway capacity (estimated to be up to 4 times the current value). Preliminary studies <ref> [1, 2] </ref> also show that this can be done without an adverse effect on passenger safety and comfort. In order to implement such a scheme automatic control of the vehicles is necessary, as human drivers cannot reliably produce the inputs necessary for platooning.
Reference: [2] <author> P. Varaiya, </author> <title> "Smart cars on smart roads: problems of control," </title> <journal> IEEE Transactions on Automatic Control, </journal> <volume> vol. AC-38, no. 2, </volume> <pages> pp. 195-207, </pages> <year> 1993. </year>
Reference-contexts: Platoons are isolated from one another by large gaps, of the order of 30 meters. Packing the vehicles tightly yields significant improvement in highway capacity (estimated to be up to 4 times the current value). Preliminary studies <ref> [1, 2] </ref> also show that this can be done without an adverse effect on passenger safety and comfort. In order to implement such a scheme automatic control of the vehicles is necessary, as human drivers cannot reliably produce the inputs necessary for platooning. <p> In order to implement such a scheme automatic control of the vehicles is necessary, as human drivers cannot reliably produce the inputs necessary for platooning. The control and coordination of such a large number of vehicles poses a formidable problem. In <ref> [2] </ref> a hierarchical controller was proposed for platooning under normal conditions of operation, i.e. when environmental conditions are benign and the operation of the vehicles is faultless. The controller is organized into four layers and is distributed between the vehicle and the roadside. <p> It is intended for faults where vehicle needs no assistance to exit Normal: is the normal mode strategy defined by the normal mode AHS architecture of <ref> [2] </ref>. The strategy is implemented by means of finite state machines in [3]. 2.2 Coordination Regulator Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the normal mode maneuvers of [3] as well as some new, emergency maneuvers. <p> It should be noted that the initiation of the Queue Management maneuver and its efficient operation rely on cooperation from the roadside controller. Like all actions depending on this controller in the designs of <ref> [2, 6] </ref>, this maneuver is not critical from the point of view of safety. 2.3 Priorities and Mutual Exclusion In the normal mode architecture of [2], mutual exclusion between maneuvers was achieved by imposing the constraint that each platoon can be engaged in at most one maneuver at a time. <p> Like all actions depending on this controller in the designs of [2, 6], this maneuver is not critical from the point of view of safety. 2.3 Priorities and Mutual Exclusion In the normal mode architecture of <ref> [2] </ref>, mutual exclusion between maneuvers was achieved by imposing the constraint that each platoon can be engaged in at most one maneuver at a time. For a given platoon all maneuvers are initiated by the platoon leader.
Reference: [3] <author> A. Hsu, F. Eskafi, S. Sachs, and P. Varaiya, </author> <title> "Protocol design for an automated highway system," Discrete Event Dynamic Systems, </title> <journal> vol. </journal> <volume> 2, no. 1, </volume> <pages> pp. 183-206, </pages> <year> 1994. </year>
Reference-contexts: The controller is organized into four layers and is distributed between the vehicle and the roadside. The backbone of the hierarchical controller is the coordination layer. The coordination layer design proposed in <ref> [3] </ref> consists of a collection of communication protocols in the form of coordinating finite state machines (FSM). The protocols determine the cooperation between neighboring platoons needed to carry out various maneuvers. For normal operation five maneuvers are sufficient: join, split, lane change, entry and exit [4, 5]. <p> The requirements on the continuous and roadside control laws for fault tolerant operation are presented in [6]. 5 Take Immediate Exit Normal (TIE-N): is similar to the TIE strategy except the faulty vehicle uses the normal lane change and split protocols of <ref> [3] </ref> instead of Emergency Lane Change and Forced Split. It is intended for faults where vehicle needs no assistance to exit Normal: is the normal mode strategy defined by the normal mode AHS architecture of [2]. The strategy is implemented by means of finite state machines in [3]. 2.2 Coordination Regulator <p> split protocols of <ref> [3] </ref> instead of Emergency Lane Change and Forced Split. It is intended for faults where vehicle needs no assistance to exit Normal: is the normal mode strategy defined by the normal mode AHS architecture of [2]. The strategy is implemented by means of finite state machines in [3]. 2.2 Coordination Regulator Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the normal mode maneuvers of [3] as well as some new, emergency maneuvers. Forced Split (FS): is used by a faulty vehicle to become a free agent. <p> The strategy is implemented by means of finite state machines in <ref> [3] </ref>. 2.2 Coordination Regulator Maneuvers The strategies described above are appropriate concatenations of atomic maneuvers. These include the normal mode maneuvers of [3] as well as some new, emergency maneuvers. Forced Split (FS): is used by a faulty vehicle to become a free agent. If the faulty vehicle is a follower it requests the leader of the platoon to initiate a Forced Split . <p> Extensive work has already been done on fault detection [13, 14, 15, 16] while [6] presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of <ref> [3] </ref>. Assumption 3 (Continuous State Evolution) The regulation layer behavior is adequately summarized by the corresponding environment machine used in our verification.
Reference: [4] <author> A. Hsu, F. Eskafi, S. Sachs, and P. Varaiya, </author> <title> "The design of platoon maneuver protocols for IVHS," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-91-6, University of California, Berkeley, </institution> <year> 1991. </year>
Reference-contexts: The protocols determine the cooperation between neighboring platoons needed to carry out various maneuvers. For normal operation five maneuvers are sufficient: join, split, lane change, entry and exit <ref> [4, 5] </ref>. These maneuvers form an alphabet for describing the discrete aspects of the behavior of an automated vehicle. In [6] the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions.
Reference: [5] <author> D. N. Godbole, F. Eskafi, E. Singh, and P. Varaiya, </author> <title> "Design of an entry and exit maneuvers for AHS," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 3576-3580, </pages> <year> 1995. </year>
Reference-contexts: The protocols determine the cooperation between neighboring platoons needed to carry out various maneuvers. For normal operation five maneuvers are sufficient: join, split, lane change, entry and exit <ref> [4, 5] </ref>. These maneuvers form an alphabet for describing the discrete aspects of the behavior of an automated vehicle. In [6] the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions.
Reference: [6] <author> J. Lygeros, D. N. Godbole, and M. E. Broucke, </author> <title> "Towards a fault tolerant AHS design, part I: Extended architecture," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-96-14, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: The protocols determine the cooperation between neighboring platoons needed to carry out various maneuvers. For normal operation five maneuvers are sufficient: join, split, lane change, entry and exit [4, 5]. These maneuvers form an alphabet for describing the discrete aspects of the behavior of an automated vehicle. In <ref> [6] </ref> the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions. Because the system performance is likely to be degraded under these conditions, the operation under the extended controller designed in [6] is given the name degraded modes of operation. <p> In <ref> [6] </ref> the normal mode controller hierarchy was extended to deal with a wide range of faults and adverse environmental conditions. Because the system performance is likely to be degraded under these conditions, the operation under the extended controller designed in [6] is given the name degraded modes of operation. The work presented here forms the backbone for this extended architecture. In particular, new coordination layer protocols that allow a faulty vehicle to either stop on the highway or reach the nearest exit are designed. <p> We present verification results that prove that the proposed protocols satisfy certain desirable discrete properties: they are deadlock free, fair, etc. The verification will be carried out mostly automatically, using computational verification tools. The goal of the fault tolerant architecture proposed in <ref> [6] </ref> is to minimize the impact of faults on the highway throughput while maintaining safe operation. A complete safety and throughput analysis is a very challenging task and will not be fully addressed here. <p> This problem is currently being investigated by means of macro-simulation. The paper is arranged in four sections. In Section 2 we describe the fault tolerant coordination layer design and relate it to the framework for emergency maneuver initiation and fault classification presented in <ref> [6] </ref>. In Section 3 we give the formal specification of communication protocols using finite state machines. The discrete performance of the proposed design is then verified using automatic verification tools. We explore the implications of the verification results and relate them to the original goals set for the design. <p> We explore the implications of the verification results and relate them to the original goals set for the design. This indicates directions in which our work can be extended or modified; these are summarized in the concluding section. 3 2 Extended Coordination Layer According to the framework of <ref> [6] </ref>, the extended coordination layer controller is divided into two levels (Figure 1): a strategic planning level called coordination supervisor and an execution level called coordination regulator. Once a fault is detected the capability and performance monitors of [6] classify it into a unique fault class. <p> concluding section. 3 2 Extended Coordination Layer According to the framework of <ref> [6] </ref>, the extended coordination layer controller is divided into two levels (Figure 1): a strategic planning level called coordination supervisor and an execution level called coordination regulator. Once a fault is detected the capability and performance monitors of [6] classify it into a unique fault class. Depending on the class, the coordination supervisor selects a strategy (or compound maneuver). The strategy consists of a concatenation of atomic maneuvers, which are executed by the coordination layer regulator. The maneuvers invoke continuous controllers which comprise the regulation layer. <p> The requirements on the continuous and roadside control laws for fault tolerant operation are presented in <ref> [6] </ref>. 5 Take Immediate Exit Normal (TIE-N): is similar to the TIE strategy except the faulty vehicle uses the normal lane change and split protocols of [3] instead of Emergency Lane Change and Forced Split. <p> It should be noted that the initiation of the Queue Management maneuver and its efficient operation rely on cooperation from the roadside controller. Like all actions depending on this controller in the designs of <ref> [2, 6] </ref>, this maneuver is not critical from the point of view of safety. 2.3 Priorities and Mutual Exclusion In the normal mode architecture of [2], mutual exclusion between maneuvers was achieved by imposing the constraint that each platoon can be engaged in at most one maneuver at a time. <p> The priority depends on the severity of the fault, with higher priority assigned to more severe faults. Based on the fault classification of <ref> [6] </ref> the strategies introduced above can be be assigned the following priorities: AS &gt; CS &gt; GS &gt; TIE-E &gt; TIE &gt; TIE-N &gt; Normal If a request for a low priority maneuver comes in while a high priority maneuver is in progress the low priority maneuver has to wait. <p> Extensive work has already been done on fault detection [13, 14, 15, 16] while <ref> [6] </ref> presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [3].
Reference: [7] <author> D. N. Godbole, J. Lygeros, and S. Sastry, </author> <title> "Hierarchical hybrid control: an IVHS case study," </title> <booktitle> in IEEE Control and Decision Conference, </booktitle> <pages> pp. 1592-1597, </pages> <year> 1994. </year>
Reference-contexts: To prove the safety of a proposed design one has to analyze the hybrid interaction between the discrete controllers of the coordination layer and the continuous controllers of the vehicle regulators. Even for normal operation this can be very difficult, as the results of <ref> [7] </ref> indicate. For degraded conditions of operation the situation is further complicated by the need to establish a formal 2 safety specification. In [8] such a specification is given based on the following definitions: Definition 1 A catastrophe is a high relative velocity collision.
Reference: [8] <author> A. Hitchcock, </author> <title> "A specification of an automated freeway with vehicle borne intelligence," </title> <type> Tech. Rep. PATH Memorandum 92-8, </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1992. </year>
Reference-contexts: Even for normal operation this can be very difficult, as the results of [7] indicate. For degraded conditions of operation the situation is further complicated by the need to establish a formal 2 safety specification. In <ref> [8] </ref> such a specification is given based on the following definitions: Definition 1 A catastrophe is a high relative velocity collision. A possible catastrophe is a situation that can give rise to a catastrophe without any additional faults developing in the system. <p> The second approach seems preferable as it allows us to compare different designs by a common norm and captures the idea that the hardware design should be such that severe faults should be less likely. Such a probabilistic analysis can be carried out by means of Monte Carlo simulations <ref> [8] </ref>. We would like to use analytical methods as much as possible, and use simulation to verify our predictions. It should also be noted that the above analysis does not take into account redundant hardware used for obtaining the same functional capability. <p> The proofs were based on results obtained by a computational tool for finite state machine verification. Further, we showed that the original safety specification proposed in <ref> [8] </ref> cannot be met and proposed two ways of refining this specification. The control of automated highways involves both continuous and discrete dynamics and must be addressed in the hybrid systems framework. In this paper only the discrete aspects of the proposed design were addressed.
Reference: [9] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A game theoretic approach to hybrid system design," </title> <type> Tech. Rep. </type> <institution> UCB/ERL-M95/77, Electronic Research Laboratory, University of California Berkeley, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: The automatic protocol verification presented here will rely on a finite state description of the continuous dynamics of the system. Verifying that this description is a valid abstraction of the continuous dynamics is the topic of on-going work. We are hoping that the game-theory based approach introduced in <ref> [9] </ref> that has successfully been applied to the verification of safety for the normal mode [10] will provide the answer. Similar problems are encountered when trying to evaluate the impact of the proposed design on throughput. <p> In this paper only the discrete aspects of the proposed design were addressed. To complete the verification process the continuous dynamics also need to be included. This is the topic of current research. For this task, we plan to use the algorithms developed in <ref> [9] </ref> (which have been successfully applied to the normal mode controllers [10]) to carry out the verification. As a first step in this direction, the proposed communication protocols were also implemented (together with appropriate continuous controllers) on the highway micro simulator SmartPath [17].
Reference: [10] <author> J. Lygeros, D. N. Godbole, and S. Sastry, </author> <title> "A verified hybrid controller for automated vehicles." </title> <type> (preprint, </type> <note> submitted to Special Issue on Hybrid Systems of the IEEE Transactions on Automatic Control), </note> <month> March </month> <year> 1996. </year>
Reference-contexts: Verifying that this description is a valid abstraction of the continuous dynamics is the topic of on-going work. We are hoping that the game-theory based approach introduced in [9] that has successfully been applied to the verification of safety for the normal mode <ref> [10] </ref> will provide the answer. Similar problems are encountered when trying to evaluate the impact of the proposed design on throughput. <p> To complete the verification process the continuous dynamics also need to be included. This is the topic of current research. For this task, we plan to use the algorithms developed in [9] (which have been successfully applied to the normal mode controllers <ref> [10] </ref>) to carry out the verification. As a first step in this direction, the proposed communication protocols were also implemented (together with appropriate continuous controllers) on the highway micro simulator SmartPath [17]. They are currently being tested in this platform.
Reference: [11] <author> D. N. Godbole, J. Lygeros, E. Singh, A. Deshpande, and A. Lindsey, </author> <title> "Towards a fault tolerant AHS design, part II: Design and verification of communication protocols," </title> <type> Tech. Rep. </type> <institution> UCB-ITS-PRR-96-15, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1996. </year>
Reference-contexts: During the execution of the degraded mode strategies, the faulty vehicle may request cooperation from neighboring vehicles. This cooperation can be encoded by means of communication protocols. In <ref> [11] </ref> the details of these protocols are specified in terms of interacting finite state machines. Here we give a brief overview of the design and selected finite state machine examples (for figures see the appendix). <p> The objective of the verification process will be to keep track of the location of the faulty vehicle in the grid and ensure that the proposed maneuvers change the location as desired. By inspecting the proposed coordination protocols (and identifying obviously equivalent grid labels) it can be shown <ref> [11] </ref> that a 4 fi 5 grid with 4 subcells assigned to the faulty cell is sufficient for single fault verification. 3.2 Single Fault: COSPAN Verification First we assume that there is only one fault on the entire highway and prove that the individual strategies are logically correct.
Reference: [12] <author> Z. Har'El and R. Kurshan, </author> <title> Cospan User's Guide. </title> <institution> AT&T Bell Laboratories, </institution> <year> 1987. </year>
Reference-contexts: SUPR-TIE). In verifying the ELC protocol by itself this predicate is replaced by "true", so that this maneuver is repeatedly initiated. 3.2.2 Verification Results The formal FSM were transcribed into the language used by the verification software COSPAN <ref> [12] </ref>. The design was verified by using a set of monitors. The monitors themselves are finite state machines whose transitions depend on the states and transitions of the design FSM.
Reference: [13] <author> R. K. Douglas, J. L. Speyer, D. L. Mingori, R. H. Chen, D. P. Malladi, and W. H. Chung, </author> <title> "Fault detection and identification with application to advanced vehicle control systems." </title> <institution> California PATH Research Report UCB-ITS-PRR-95-26, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1995. </year> <month> 20 </month>
Reference-contexts: Extensive work has already been done on fault detection <ref> [13, 14, 15, 16] </ref> while [6] presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [3].
Reference: [14] <author> V. Garg, </author> <title> Fault Detection in Nonlinear Systems: An application to Automated Highway Systems. </title> <type> PhD thesis, </type> <institution> Department of Mechanical Engineering, University of California, Berkeley, California, </institution> <year> 1995. </year>
Reference-contexts: Extensive work has already been done on fault detection <ref> [13, 14, 15, 16] </ref> while [6] presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [3].
Reference: [15] <author> A. Agogino, K. Gobel, and S. Alag, </author> <title> "Intelligent sensor validation and sensor fusion for reliability and safety enhancement in vehicle control." </title> <institution> California PATH Research Report UCB-ITS-PRR-95-40, Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1995. </year>
Reference-contexts: Extensive work has already been done on fault detection <ref> [13, 14, 15, 16] </ref> while [6] presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [3].
Reference: [16] <author> M. Tomizuka, S. Patwardhan, W. B. Zhang, and P. Devlin, </author> <title> "Theory and experiments of tire blow-out effects and hazard reduction control for automated vehicle lateral control system," </title> <booktitle> in American Control Conference, </booktitle> <pages> pp. 1207-1209, </pages> <year> 1994. </year>
Reference-contexts: Extensive work has already been done on fault detection <ref> [13, 14, 15, 16] </ref> while [6] presents a possible initiation scheme for emergency procedures. Assumption 2 (Normal Mode) The normal mode protocols have been properly designed and verified. This is a valid assumption based on the results of [3].
Reference: [17] <author> F. Eskafi, D. Khorramabadi, and P. Varaiya, "SmartPath: </author> <title> An automated highway system simulator." </title> <type> PATH Technical Report UCB-ITS-94-4. </type> <institution> Institute of Transportation Studies, University of California, Berkeley, </institution> <year> 1994. </year>
Reference-contexts: As a first step in this direction, the proposed communication protocols were also implemented (together with appropriate continuous controllers) on the highway micro simulator SmartPath <ref> [17] </ref>. They are currently being tested in this platform. The simulation results will be subsequently used to tune a macro simulator to obtain performance estimates in terms of throughput.
References-found: 17

