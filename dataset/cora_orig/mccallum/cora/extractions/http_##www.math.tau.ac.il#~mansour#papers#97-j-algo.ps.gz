URL: http://www.math.tau.ac.il/~mansour/papers/97-j-algo.ps.gz
Refering-URL: 
Root-URL: 
Title: Efficient On-Line Call Control Algorithms  
Author: Juan A. Garay Inder S. Gopal Shay Kutten Yishay Mansour Moti Yung 
Abstract: In this paper we study the problem of on-line call control in a communication network, namely, the problem of accepting or rejecting an incoming call (a request for a connection between two points in a network) without having the knowledge of future calls. The problem is a part of the more general problem of bandwidth allocation and management. Intuition suggests that knowledge of future call arrivals can be crucial to the performance of the system. In this paper, however, we present preemptive deterministic on-line call control algorithms. We use competitive analysis to measure their performance|i.e., we compare our algorithms to their off-line, clairvoyant counterparts|and prove optimality for some of them. We consider two specific networks: a line of nodes and a single edge, and investigate a variety of cases concerning the value of the calls. The value is accrued only if the call terminates successfully; otherwise|if the call is rejected, or prematurely terminated|no value is gained. The performance of the algorithm is then measured by the cumulative value achieved, when given a sequence of calls. The variety of call value criteria that we study|constant; proportional to the length of the call's route; proportional to its holding time|captures many of the natural cost assignments to network services. fl A preliminary version of this paper appeared in Proc. 2nd Israel Symp. on the Theory of Computing and Systems, pp. 285-293, Natanya, Israel, June 1993. y IBM T.J. Watson Research Center, P.O. Box 704, Yorktown Heights, NY 10598. z Computer Science Department, Tel-Aviv University, Israel. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> B. Awerbuch, Y. Azar, and S. Plotkin, </author> <title> "Throughput Competitive On-Line Routing," </title> <booktitle> Proc 34th IEEE Annual Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 32-40, </pages> <address> Palo Alto, CA, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: This has been addressed by Awerbuch, Bartal, Fiat and Rosen in [3], where they give a competitive (randomized) algorithm for non-preemptive call scheduling on tree networks. Awerbuch, Gawlick, Leighton and Rabani [4] have considered also non-tree networks, such as meshes. Awerbuch, Azar and Plotkin <ref> [1] </ref> provide a competitive call control strategy for 2 The holding time of a call is the time that elapses from its creation until it terminates.
Reference: [2] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts, </author> <title> "Competitive Routing of Virtual Circuits with Unknown Duration," </title> <booktitle> Proc. 5th Annual ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 321-327, </pages> <address> Arlington, VA, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: In this paper we assume that the available estimates are correct. 3 general networks if the profit of a call is proportional to the bandwidth-duration product. Awerbuch, Azar, Plotkin and Waarts <ref> [2] </ref> study the case of unknown call duration, and show how to achieve competitiveness by allowing rerouting of the calls.
Reference: [3] <author> B. Awerbuch, Y. Bartal, A. Fiat, and A. Rosen, </author> <title> "Competitive Non-Preemptive Call Control," </title> <booktitle> Proc. 5th Annual ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <pages> pp. 312-320, </pages> <address> Arlington, VA, </address> <month> January </month> <year> 1994. </year>
Reference-contexts: Indeed, our work has, directly or indirectly, motivated a number of recent interesting works. One immediate direction is investigating the problem in other network topologies. This has been addressed by Awerbuch, Bartal, Fiat and Rosen in <ref> [3] </ref>, where they give a competitive (randomized) algorithm for non-preemptive call scheduling on tree networks. Awerbuch, Gawlick, Leighton and Rabani [4] have considered also non-tree networks, such as meshes.
Reference: [4] <author> B. Awerbuch, R. Gawlick, T. Leighton, and Y. Rabani, </author> <title> "Online Admission Control and Circuit Routing for High Performance Computing and Communication," </title> <booktitle> Proc 35th IEEE Annual Symp. on Foundations of Computer Science, </booktitle> <pages> pp. 412-423, </pages> <address> Santa Fe, NM, </address> <month> November </month> <year> 1994. </year> <title> [5] "Special Issue on Asynchronous Transfer Mode," </title> <journal> Int. Journal of Digital and Analog Cabled Systems, </journal> <volume> 1(4), </volume> <year> 1988. </year>
Reference-contexts: One immediate direction is investigating the problem in other network topologies. This has been addressed by Awerbuch, Bartal, Fiat and Rosen in [3], where they give a competitive (randomized) algorithm for non-preemptive call scheduling on tree networks. Awerbuch, Gawlick, Leighton and Rabani <ref> [4] </ref> have considered also non-tree networks, such as meshes. Awerbuch, Azar and Plotkin [1] provide a competitive call control strategy for 2 The holding time of a call is the time that elapses from its creation until it terminates.
Reference: [6] <author> A. Bar-Noy, R. Canetti, S. Kutten, Y. Mansour and B. Schieber, </author> <title> "Bandwidth Allocation with Preemption," </title> <note> to appear in Proc. STOC 1995. </note>
Reference-contexts: Awerbuch, Azar, Plotkin and Waarts [2] study the case of unknown call duration, and show how to achieve competitiveness by allowing rerouting of the calls. More recently, Bar-Noy et al. <ref> [6] </ref> have considered the problem where the bandwidth requirement is general, but impose the restriction that the maximum bandwidth required by a single call is at most a constant fraction (say, half) of the link capacity. For this model they present constant-competitive algorithms.
Reference: [7] <author> S. Baruah, G. Koren, D. Mao, B. Mishra, A. Raghunathan, L. Rosier, D. Shasha and F. Wang, </author> <title> "On the Competitiveness of On-Line Real-Time Task Scheduling," </title> <booktitle> Proc. IEEE Real-Time Systems Symposium, </booktitle> <pages> pp. 106-115, </pages> <year> 1991. </year>
Reference-contexts: The abstract scenario we consider here is that of two nodes connected by a single communication line. We give an algorithm that is 1 4 -competitive. Optimality follows from reducing our problem to a special machine scheduling problem, and applying the results of <ref> [7] </ref>. The general form of our algorithms for the three cases above is depicted in Figure 1, where ff and fi are constants and f and h are functions. <p> algorithm|which we call HT , for holding time|accepts an incoming call only if its (estimated) holding time is more than twice the holding time of the existing call. (The parameters used for this case gives an algorithm very similar to the one designed independently for a certain scheduling problem in <ref> [7] </ref>.) We remark that our analysis applies to time intervals of finite duration, since no on-line algorithm can guarantee a competitive factor with respect to time intervals of infinite duration. Theorem 4.1 Algorithm HT is 1 4 -competitive. <p> Theorem 4.2 When the call value is given by the call's holding time, there does not exist an on-line call control algorithm with a competitive factor greater than 1 4 . The theorem follows from the lower bound derived by Baruah et al. (cf. Lemma 1, <ref> [7] </ref>) for the related on-line task scheduling problem in a uniprocessor environment. In such a setting, tasks requests arrive with an associated execution time and no slack time (i.e., the time between a task's arrival time and its deadline corresponds exactly to its computation time). <p> The correspondence between this problem and call control with known holding time on a single link is immediate. Baruah et al. show that there does not exist an on-line scheduling algorithm with a competitive factor greater than 0.25. We refer the reader to <ref> [7] </ref> for further details. 5 Final Remarks In this paper we have studied the problem of preemptive call control in an on-line fashion for a variety of call value criteria. We have provided algorithms that are competitive; furthermore, these algorithms are shown to be optimal.
Reference: [8] <author> D. Clark, B. Davie, D. Farber, I. Gopal, B. Kadaba, W. Sincoskie, J. Smith and D. Tennenhouse, </author> <title> "An Overview of the AURORA Gigabit Testbed," </title> <booktitle> Proc. INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <pages> pp. 569-581, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction High-speed networks (e.g., <ref> [14, 5, 9, 8] </ref>), as providers of multimedia services, will have to support a wide variety of traffic types. Each of these traffic types will have very different requirements in terms of required duration and throughput, and tolerable delay and message loss.
Reference: [9] <author> I. Cidon and I. Gopal, "PARIS: </author> <title> An approach to integrated high-speed private networks," </title> <journal> Int. Journal of Digital and Analog Cabled Systems, </journal> <volume> 1(2), </volume> <pages> pp. 77-86, </pages> <year> 1988. </year>
Reference-contexts: 1 Introduction High-speed networks (e.g., <ref> [14, 5, 9, 8] </ref>), as providers of multimedia services, will have to support a wide variety of traffic types. Each of these traffic types will have very different requirements in terms of required duration and throughput, and tolerable delay and message loss.
Reference: [10] <author> M. Furst and A. Tomkins, </author> <title> "Some Lower Bounds for Call Control Algorithms," </title> <type> private communication. </type>
Reference-contexts: This bound is optimal, as recently shown by Furst and Tomkins <ref> [10] </ref>. * Val (c i ) = O (1). The value of a call is constant, and the network consists of a line of processors. As in the previous case, we assume that both the holding time and the arrival time for all the calls are the same. <p> This yields a 1 4 (&gt; 1 2g+1 ) competitiveness lower bound for this model. More recently, Furst and Tomkins have been able to close the gap, by providing a matching 1 2g+1 lower bound <ref> [10] </ref>. 3 Constant Call Value In this section we consider the uniform value criterion, that is, a call value that is independent of the call's length and duration.
Reference: [11] <author> J.A. </author> <title> Garay and I.S. Gopal, "Call Preemption in Communication Networks," </title> <booktitle> Proc. INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <pages> pp. 1043-1050, </pages> <year> 1992. </year>
Reference-contexts: An initial study of the call control problem in an on-line fashion was presented by Garay and Gopal in <ref> [11] </ref>. One of the cases studied there was the maximization of line utilization on a single edge for a call value given by the call's holding time. 2 They showed that if the holding times of the arriving calls are unknown, then competitive algorithms (deterministic or randomized) do not exist. <p> Roughly speaking, this is so because the adversary can always orchestrate situations in which the algorithm, unaware of the calls' duration, ends up preempting (or rejecting) long-duration calls in favor of short ones, thus yielding an unbounded competitive ratio. It was also shown in <ref> [11] </ref> that if there is no penalty for preempting an existing call (e.g., the telephone company charges the customer according to the usage time, even if the call is disconnected), then an optimal 1-competitive algorithm exists.
Reference: [12] <author> S. Plotkin, </author> <title> "Competitive Routing of Virtual Circuits in ATM Networks," </title> <journal> IEEE J. Selected Areas in Communications, special issue on Advances in the Fundamentals of Networking (invited paper), </journal> <pages> pp. 1128-1136, </pages> <month> August </month> <year> 1995. </year> <note> &lt;http:// theory.stanford.edu/people/plotkin/routing.html&gt;. </note>
Reference-contexts: For this model they present constant-competitive algorithms. The reader is referred to <ref> [12] </ref> for a recent overview of on-line call admission and routing algorithms. 1.1 Our Results A communication network is a general graph, G = (V; E), jV j = n.
Reference: [13] <author> D. Sleator and R. Tarjan, </author> <title> "Amortized efficiency of list update and paging rules," </title> <journal> Communications of the ACM, </journal> <volume> 28(2), </volume> <pages> pp. 202-208, </pages> <year> 1985, </year> <month> 13 </month>
Reference-contexts: Examples of on-line problems include the scheduling of jobs on (parallel) machines, paging|i.e., the allocation of cache memory, the maintenance of dynamic data structures, network routing, etc. We evaluate on-line algorithms in terms of their competitiveness (a measure introduced in <ref> [13] </ref>, and thereafter intensively applied to various on-line settings).
Reference: [14] <author> J.S. Turner, </author> <title> "New Directions in Communications (or Which Way to the Information Age?)," </title> <journal> IEEE Commun. Mag., </journal> <volume> Vol. 24, </volume> <pages> pp. 8-15, </pages> <month> Oct. </month> <year> 1986. </year> <month> 14 </month>
Reference-contexts: 1 Introduction High-speed networks (e.g., <ref> [14, 5, 9, 8] </ref>), as providers of multimedia services, will have to support a wide variety of traffic types. Each of these traffic types will have very different requirements in terms of required duration and throughput, and tolerable delay and message loss.
References-found: 13

