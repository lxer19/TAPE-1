URL: http://www.cs.wustl.edu/cs/techreports/1993/wucs-93-16.ps.Z
Refering-URL: http://www.cs.wustl.edu/cs/cs/publications.html
Root-URL: http://www.cs.wustl.edu
Email: jbf@random.wustl.edu vasu@wuccrc.wustl.edu  
Title: The N-Body Problem: Distributed System Load Balancing And Performance Evaluation 12  
Author: Mark Franklin Vasudha Govindan 
Address: Campus Box 1115 One Brookings Drive St. Louis, Missouri 63130  
Affiliation: Computer and Communications Research Center Washington University  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Andrew W. Appel. </author> <title> An Efficient Program for Many-body Simulation. </title> <journal> SIAM Journal of Sci. and Stat. Comp., </journal> <volume> 6, </volume> <month> January </month> <year> 1985. </year> <month> 20 </month>
Reference: [2] <author> Joshua E. Barnes and Piet Hut. </author> <title> A Hierarchical O(N log N) Force Calculation Algorithm. </title> <journal> Nature, </journal> <volume> 324(4), </volume> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: The technique discussed here is based on the Barnes-Hut algorithm <ref> [2] </ref> to study the evolution of a system of bodies (or particles) under the influence of Newtonian gravitational attraction. The input consists of the mass, initial position and initial velocities of particles distributed over a finite physical domain.
Reference: [3] <author> Roger Chamberlain and Mark A. Franklin. </author> <title> Hierarchical Discrete-Event Simulation on Hypercube Architectures. </title> <booktitle> IEEE MICRO, </booktitle> <month> August </month> <year> 1990. </year>
Reference-contexts: In this section, we propose a general performance model that can be adapted to derive performance models for a class of synchronous iterative algorithms (also called multiphase algorithms or synchronous algorithms)[10][5]. The model formulation is similar to the technique developed in <ref> [3] </ref> for hierarchical discrete event simulation. Synchronous iterative algorithms generally possess the following structure: The execution of the algorithm proceeds in a number of sequential steps or "iterations". The work associated with each iteration is distributed over some or all of the available processors.
Reference: [4] <author> Edward A. Desloge. </author> <title> Classical Mechanics. </title> <publisher> John Wiley, </publisher> <address> New york, </address> <year> 1982. </year>
Reference-contexts: Approximate methods like the hierarchical methods considered here reduce the complexity to O (n log n) for general distributions and O (n) for uniform distributions [2][1]. Hierarchical methods are based on the following principle due to Sir Isaac Newton <ref> [4] </ref>: If the magnitude of interaction between bodies falls off rapidly with distance, then the effect of a large group of bodies may be approximated by a single equivalent body, if the group of bodies is far enough away from the point at which the effect is being evaluated.
Reference: [5] <author> M. Dubios and F.A. Briggs. </author> <title> Performance of synchronized iterative processes in multiprocessor systems. </title> <journal> IEEE Trans. Software Eng., </journal> <volume> (4), </volume> <month> July </month> <year> 1982. </year>
Reference: [6] <editor> G.C. Fox et al. </editor> <title> Solving Problems on Concurrent Processors. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1988. </year>
Reference: [7] <author> P. Hanrahan et al. </author> <title> A Rapid Hierarchical Radiosity Problem. </title> <booktitle> Proc. of SIGGRAPH, </booktitle> <year> 1991. </year>
Reference-contexts: Parallel N-body techniques are widely applied in a number of fields [9] ranging from astrophysics, to fluid dynamics, to computational geometry <ref> [7] </ref>. They require dynamically changing, non-uniform, intensive computation and irregular, unstructured communication. They are therefore good candidates for use as parallel computing benchmarks [8] and the results presented in this paper are part of an ongoing effort at developing such parallel benchmarks.
Reference: [8] <author> Singh et.al. </author> <title> Implications of Hierarchical N-body Methods for Multiprocessor Architecture. </title> <type> Technical Report CSL-TR-92-506, </type> <institution> Computer Systems Laboratory, Stanford University, </institution> <year> 1992. </year>
Reference-contexts: Parallel N-body techniques are widely applied in a number of fields [9] ranging from astrophysics, to fluid dynamics, to computational geometry [7]. They require dynamically changing, non-uniform, intensive computation and irregular, unstructured communication. They are therefore good candidates for use as parallel computing benchmarks <ref> [8] </ref> and the results presented in this paper are part of an ongoing effort at developing such parallel benchmarks. In addition, the N-body simulation algorithm presented here is prototypical of a wide class of algorithms referred to as synchronous iterative algorithms.
Reference: [9] <author> Leslie Greengard. </author> <title> The Rapid Evaluation of Potential Fields in Particle Systems. </title> <publisher> ACM Press, </publisher> <year> 1987. </year>
Reference-contexts: 1 Introduction In this paper, the N-body simulation problem is considered, its parallel implementation is described, its execution time performance is modeled and compared with measured results, and two alternative load balancing algorithms for enhancing performance are investigated. Parallel N-body techniques are widely applied in a number of fields <ref> [9] </ref> ranging from astrophysics, to fluid dynamics, to computational geometry [7]. They require dynamically changing, non-uniform, intensive computation and irregular, unstructured communication.
Reference: [10] <author> K. Hwang and F.A.Briggs. </author> <title> Computer Architecture and Parallel Processing. </title> <publisher> McGraw-Hill, </publisher> <address> New York, NY, </address> <year> 1986. </year>
Reference: [11] <author> John Salmon and Michael S. Warren. </author> <title> Astrophysical N-body Simulations on the Delta. </title> <type> Technical report, </type> <institution> California Institute of Technology, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: Clearly, formation of the le-tree involves exchange of information between each pair of processors. The ORB decomposition imposes a hierarchical structure on this apparently "unstructured" communications requirement. The algorithm to construct the le-tree (due to Salmon <ref> [11] </ref>) is illustrated in Figure 3. The le-tree algorithm reduces the amount of data transferred (and hence the message size) by having the sender identify and send only the data required by the receiving processors.
Reference: [12] <author> Harold S. Stone. </author> <title> High-Performance Computer Architecture. </title> <publisher> Addison-wesley Pub. Co., </publisher> <address> Reading, Mass., </address> <year> 1990. </year>
Reference-contexts: The work associated with each iteration is distributed over some or all of the available processors. At the end of each iteration, the processors perform a barrier synchronization <ref> [12] </ref> and then proceed to the next iteration. The time spent in each iteration can be divided into three phases computation, communication and synchronization. The work done in each of these phases depends on the algorithm.
Reference: [13] <author> V.S.Sunderam. </author> <title> PVM: A Framework for Parallel Distributed Computing. </title> <journal> Concurrency: Practice and Experience, </journal> <volume> 2, </volume> <month> Dec. </month> <year> 1990. </year> <month> 21 </month>
Reference-contexts: The models and results given in this paper apply to much of this class. N-body simulation algorithm has been implemented on a network of SUN workstations connected by standard ethernet, running under the PVM <ref> [13] </ref> environment. Performance has been measured and models verified in this manner. An important step in the design of high performance computing systems is to study possible enhancements to the existing system and estimate the performance implications of these enhancements.
References-found: 13

