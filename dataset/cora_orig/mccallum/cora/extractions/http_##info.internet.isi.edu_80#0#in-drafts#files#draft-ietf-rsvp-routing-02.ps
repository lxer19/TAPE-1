URL: http://info.internet.isi.edu:80/0/in-drafts/files/draft-ietf-rsvp-routing-02.ps
Refering-URL: http://info.internet.isi.edu:80/in-drafts/id-abstracts.html
Root-URL: http://www.isi.edu
Title: RSRR: A Routing Interface For  Status of  
Author: File: draft-ietf-rsvp-routing-.ps Jeff Kann USC/ISI 
Affiliation: University of Oregon  
Date: January 1, 1999  June 1998  July 1, 1998  
Note: Internet Draft Daniel Zappala Expires  To learn the current status of any Internet-Draft, please check the "1id-abstracts.txt" listing contained in the Internet-Drafts Shadow Directories on ds.internic.net (US East Coast), nic.nordu.net (Europe), ftp.isi.edu (US West Coast), or munnari.oz.au (Pacific Rim).  
Pubnum: RSVP  Memo  
Abstract: This document is an Internet-Draft. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress." Abstract This memo describes version 2 of RSRR, a routing interface for RSVP. By using this interface, RSVP may obtain forwarding information from routers and use it to place reservation state within the network. Version 1 of this interface was designed primarily for RSVP interaction with IPv4 multicast routing protocols. Version 2 adds support for IPv4 unicast as well as IPv6 unicast and multicast routing. A backwards compatibility mechanism is provided. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. J. Ballardie, P.F. Francis, and J. Crowcroft. </author> <title> "Core Based Trees". </title> <booktitle> In ACM SIG-COMM, </booktitle> <month> August </month> <year> 1993. </year>
Reference-contexts: When obtaining forwarding table entries from RSRR, RSVP also needs to know whether the multicast routing protocol is using sender-rooted (e.g shortest-path) trees or shared trees (e.g. with the PIM [3] or CBT <ref> [1] </ref> multicast routing protocols). For shared trees, RSVP only needs to obtain and store one route for all senders to the group. In addition, RSVP must mimic the IP multicast forwarding model.
Reference: [2] <author> R. Braden, L. Zhang, S. Berson, S. Herzog, and S. Jamin. </author> <title> "Resource ReSerVation Protocol (RSVP) Version 1 Functional Specification". </title> <booktitle> work in progress, </booktitle> <month> March </month> <year> 1997. </year>
Reference-contexts: The RSRR interface provides RSVP with forwarding table entries and notifies it when those entries change. This document elaborates on the routing support described in the RSVP spec <ref> [2] </ref>. This document describes version 2 of RSRR. In addition to IPv4 multicast routing protocols, which were covered extensively in the version 1 document, version 2 explicitly addresses IPv4 unicast routing and adds support for IPv6 unicast and multicast routing.
Reference: [3] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, Van Jacobson, Ching-Gung Liu, and Liming Wei. </author> <title> "An Architecture for Wide-Area Multicast Routing". </title> <booktitle> In ACM SIGCOMM, </booktitle> <month> August </month> <year> 1994. </year>
Reference-contexts: When obtaining forwarding table entries from RSRR, RSVP also needs to know whether the multicast routing protocol is using sender-rooted (e.g shortest-path) trees or shared trees (e.g. with the PIM <ref> [3] </ref> or CBT [1] multicast routing protocols). For shared trees, RSVP only needs to obtain and store one route for all senders to the group. In addition, RSVP must mimic the IP multicast forwarding model.
Reference: [4] <author> Daniel Zappala. </author> <title> "RSVP Loop Prevention for Wildcard Reservations". </title> <booktitle> Work in Progress, </booktitle> <month> February </month> <year> 1996. </year>
Reference-contexts: When running over shared trees, RSVP can also significantly decrease the size of the scope object in wildcard filter Resv messages. RSVP uses a scope object, listing all upstream senders, to prevent looping of wildcard filter Resv messages <ref> [4] </ref> (Figure 2a). For shared trees, RSVP can use a scope object that includes a wildcard address, greatly reducing the size of the Resv message. A Resv message with a wildcard address would follow shared tree state but never sender tree state (Figure 2b).
Reference: [5] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zappala. "RSVP: </author> <title> A New Resource ReSerVation Protocol". </title> <journal> IEEE Network, </journal> <month> September </month> <year> 1993. </year> <note> Zappala, Kann Expires January 1, 1999 [Page 8] Internet Draft RSRR June 1998 Appendices </note>
Reference-contexts: 1 Introduction This document describes Routing Support for Resource Reservations (RSRR), an abstract interface by which RSVP <ref> [5] </ref> may obtain routing information. RSVP is a resource reservation protocol used by hosts to request Quality of Service from the network. RSVP does not include a routing protocol; instead it may use any underlying routing protocol (s) to determine where it should carry resource reservations.
References-found: 5

