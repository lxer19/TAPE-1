URL: http://www.cs.wisc.edu/~zhao/sigmod98.ps
Refering-URL: http://www.cs.wisc.edu/~zhao/zhao.html
Root-URL: 
Email: g@cs.wisc.edu  
Title: Simultaneous Optimization and Evaluation of Multiple Dimensional Queries  
Author: Yihong Zhao Prasad M. Deshpande Jeffrey F. Naughton Amit Shukla fzhao, pmd, naughton, samit 
Address: Wisconsin, Madison  
Affiliation: Computer Sciences Department University of  
Abstract: Database researchers have made significant progress on several research issues related to multidimensional data analysis, including the development of fast cubing algorithms, efficient schemes for creating and maintaining precomputed group-bys, and the design of efficient storage structures for multidimensional data. However, to date there has been little or no work on multidimensional query optimization. Recently, Microsoft has proposed "OLE DB for OLAP" as a standard multidimensional interface for databases. OLE DB for OLAP defines Multi-Dimensional Expressions (MDX), which have the interesting and challenging feature of allowing clients to ask several related dimensional queries in a single MDX expression. In this paper, we present three algorithms to optimize multiple related dimensional queries. Two of the algorithms focus on how to generate a global plan from several related local plans. The third algorithm focuses on generating a good global plan without first generating local plans. We also present three new query evaluation primitives that allow related query plans to share portions of their evaluation. Our initial performance results suggest that the exploitation of common subtask evaluation and global optimization can yield substantial performance improvements when relational database systems are used as data sources for multidimensional analysis. 
Abstract-found: 1
Intro-found: 1
Reference: [CS94] <author> S. Chaudhuri and K. Shim. </author> <title> "Including group-by in query optimization". </title> <booktitle> In VLDB Conference, </booktitle> <pages> page 354-366, </pages> <year> 1994. </year>
Reference: [CR96] <author> Damianos Chatziantoniou, Kenneth A. Ross. </author> <title> Querying Multiple Features of Groups in Relational Databases". Multidimensional Aggregates". </title> <booktitle> In Proceedings of the 22nd International Conference on Very Large Databases, </booktitle> <address> Mumbai (Bombay), pp295-306. </address>
Reference-contexts: In the performance study, we show that these three query operators improve the performance of multiple related dimensional queries. 1 A significant challenge in multiple dimensional query optimization and evaluation arises due to the way multidimensional data sources attempt to speed up query evaluation using precomputation <ref> [GHQ95, HRU96, CR96] </ref>. Simply put, in general, for any dimensional query there will be a number of distinct precomputed aggregates that can be used as the data table from which to evaluate the query.
Reference: [DKLPY94] <author> D.J. DeWitt, N. Kabra, J. Luo, J.M. Pa-tel, J. Yu. </author> <title> "Client-Server Paradise." </title> <booktitle> Proceedings of the 20th VLDB Conference, </booktitle> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: The operating system used was Solaris 2.4. We used version 0.5 of Paradise <ref> [DKLPY94] </ref>, configured with an 16MB buffer pool. The test databases were created using the Unix file system on a local disk. We flushed both the Unix file system buffer and Paradise buffer pool before running each test. 7.2 Data Sets The test database is set up in the following tables.
Reference: [HRU96] <author> V. Harinarayan, A. Rajaraman, and J.D. Ullman. </author> " <title> Implementing Data Cubes Efficiently", </title> <booktitle> Proc. ACM SIGMOD '96. </booktitle>
Reference-contexts: In the performance study, we show that these three query operators improve the performance of multiple related dimensional queries. 1 A significant challenge in multiple dimensional query optimization and evaluation arises due to the way multidimensional data sources attempt to speed up query evaluation using precomputation <ref> [GHQ95, HRU96, CR96] </ref>. Simply put, in general, for any dimensional query there will be a number of distinct precomputed aggregates that can be used as the data table from which to evaluate the query.
Reference: [GHQ95] <author> A. Gupta, V Harinarayan, D. Quass. </author> <title> "Aggregate-Query Processing in Data Warehousing Environments", </title> <booktitle> Proceedings of the 21st VLDB Conference Zurich, </booktitle> <address> Swizerland, </address> <year> 1995. </year>
Reference-contexts: In the performance study, we show that these three query operators improve the performance of multiple related dimensional queries. 1 A significant challenge in multiple dimensional query optimization and evaluation arises due to the way multidimensional data sources attempt to speed up query evaluation using precomputation <ref> [GHQ95, HRU96, CR96] </ref>. Simply put, in general, for any dimensional query there will be a number of distinct precomputed aggregates that can be used as the data table from which to evaluate the query.
Reference: [MS] <author> Microsoft Corporated. </author> <title> "OLE DB for OLAP Design Specification Beta 2". </title> <address> http://www.microsoft.com/data/ oledb/olap/prodinfo.html </address>
Reference-contexts: Specifically, Miscrosoft recently released its proposed "OLE DB for OLAP" standard for interfaces to multidimensional data sources <ref> [MS] </ref>. This standard, or one heavily influenced by this standard, is likely to become widely supported. <p> We study and compare our three algorithms in Section 7. Finally, we conclude in Section 8. 2 Multi-Dimensional Expressions (MDX) Due to space constraints, in this section we only discuss the MDX features which are relevant to the paper. The reader interested in more detail is referred to <ref> [MS] </ref>. We mainly focus on expressing several related OLAP queries in a single MDX expression. The Microsoft document [MS] includes the following example: NEST (-Venkatrao, Netz-, -USA_North.CHILDREN, USA_South, Japan-) on COLUMNS -Qtr1.CHILDREN, Qtr2, Qtr3, Qtr4.CHILDREN - on ROWS CONTEXT SalesCube FILTER (Sales, [1991], Products.All) NEST, CONTEXT, COLUMNS, ROWS, CHILDREN, and FILTER <p> The reader interested in more detail is referred to <ref> [MS] </ref>. We mainly focus on expressing several related OLAP queries in a single MDX expression. The Microsoft document [MS] includes the following example: NEST (-Venkatrao, Netz-, -USA_North.CHILDREN, USA_South, Japan-) on COLUMNS -Qtr1.CHILDREN, Qtr2, Qtr3, Qtr4.CHILDREN - on ROWS CONTEXT SalesCube FILTER (Sales, [1991], Products.All) NEST, CONTEXT, COLUMNS, ROWS, CHILDREN, and FILTER are all reserved MDX keywords.
Reference: [OQ97] <author> Patrick O'Neil and Dallan Quass. </author> <title> "Improved Query Performance with Variant Indexes." </title> <booktitle> Proc. of the 1997 SIGMOD Conference, </booktitle> <month> May, </month> <year> 1997. </year>
Reference-contexts: Recall that the basic operation in such an environment is a star join. In this paper, we consider two star join methods: hash-based and index-based star join. For very selective star join queries, the join index-based star join method is a good alternative <ref> [OQ97] </ref>. For non-selective star join queries, the hash-based star join is a good solution [Su96]. 3.1 Shared Scan for Hash-based Star Join Before discussing this new operator, we describe by example how a generic pipelined right-deep star-join followed by an aggregation works in a relational system.
Reference: [PS88] <author> J. </author> <title> Park and A Segev "Using common subex-pressions to optimize multiple queries". </title> <booktitle> In Proc. 4th Intern. Conf. on Data Engineering, </booktitle> <pages> pages 311-319, </pages> <month> February, </month> <year> 1988. </year>
Reference-contexts: While our results apply directly to MDX, they would be equally applicable to other language frameworks that allow the expression of multiple dimensional queries. While similar problems have long been studied in the context of global query optimization (see, for example, <ref> [PS88] </ref>, [S88], and [SS94]), the multidimensional nature of the simultaneous queries found in MDX expressions present both new opportunities and new challenges.
Reference: [S88] <author> Timos K. Sellis. </author> <title> "Multiple-Query Optimization". </title> <journal> ACM Transactions on Database Systems, </journal> <volume> Vol 13, No.1, </volume> <month> March </month> <year> 1988, </year> <pages> Pages 23-52. </pages>
Reference-contexts: While our results apply directly to MDX, they would be equally applicable to other language frameworks that allow the expression of multiple dimensional queries. While similar problems have long been studied in the context of global query optimization (see, for example, [PS88], <ref> [S88] </ref>, and [SS94]), the multidimensional nature of the simultaneous queries found in MDX expressions present both new opportunities and new challenges. <p> In addition, for each group-by we have disjoint selection predicates. This means that we cannot use the "finding the Common Selection predicates" techniques that are so widely used in multi-query optimization algorithms for general SQL queries <ref> [S88] </ref>. In this paper, for simplicity of notation we interchange the MDX query with the target group-by corresponding to the query. For example, we use A 0 B 0 C 0 both to refer to the target list of a group by and to the query that computes this group-by.
Reference: [SS94] <author> K. Shim and T.Sellis, </author> <title> "Improvements on a Heuristic Algorithm for Multiple- Query Optimization", </title> <journal> Data and Knowledge Engineering, </journal> <volume> Vol. 12, </volume> <pages> No.2, </pages> <month> March </month> <year> 1994. </year>
Reference-contexts: While our results apply directly to MDX, they would be equally applicable to other language frameworks that allow the expression of multiple dimensional queries. While similar problems have long been studied in the context of global query optimization (see, for example, [PS88], [S88], and <ref> [SS94] </ref>), the multidimensional nature of the simultaneous queries found in MDX expressions present both new opportunities and new challenges.
Reference: [SM94] <author> Sunita Sarawagi, Michael Stonebraker, </author> <title> "Efficient Organization of Large Multidimensional Arrays". </title> <booktitle> In Proceedings of the Eleventh International Conference on Data Engineering, </booktitle> <address> Houston, TX, </address> <month> February </month> <year> 1994. </year>
Reference: [Su96] <author> Prakash Sundaresan. </author> <title> "Data Warehousing Features in Informix OnLine XPS." </title> <booktitle> Presentation at the Fourth International PDIS Conference, </booktitle> <pages> December 18-20, </pages> <address> 1996, Miami Beach, Florida. </address>
Reference-contexts: In this paper, we consider two star join methods: hash-based and index-based star join. For very selective star join queries, the join index-based star join method is a good alternative [OQ97]. For non-selective star join queries, the hash-based star join is a good solution <ref> [Su96] </ref>. 3.1 Shared Scan for Hash-based Star Join Before discussing this new operator, we describe by example how a generic pipelined right-deep star-join followed by an aggregation works in a relational system.
Reference: [YL95] <author> W. P. Yan and P. Larson. </author> <title> "Eager aggregation and lazy aggregation". </title> <booktitle> In VLDB Conference, </booktitle> <pages> page 345-357, </pages> <year> 1995. </year>
Reference: [ZTN96] <author> Y.H. Zhao, K. Tufte, and J.F. Naughton. </author> <title> "On the Performance of an Array-Based ADT for OLAP Workloads". </title> <type> Technical Report CS-TR-96-1313, </type> <institution> University of Wisconsin-Madison, CS Department, </institution> <month> May </month> <year> 1996. </year>
References-found: 14

