URL: http://www.sci.tamucc.edu/constraint95/schrag.ps
Refering-URL: http://www.sci.tamucc.edu/constraint95/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: schrag@cs.utexas.edu  miranker@cs.utexas.edu  
Title: Domain Reduction: Sound and Incomplete Constraint Satisfaction (with Respect to Unsatisfiability)  
Author: Robert Schrag Daniel Miranker 
Keyword: CSP algorithm.  
Address: Austin  Austin  
Affiliation: Department of Computer Sciences, Applied Research Laboratories University of Texas at  Department of Computer Sciences University of Texas at  
Abstract: We develop a constraint satifaction procedure that is sound and incomplete with respect to unsatisifiability; i.e., the procedure returns the values "unsatisfiable" or "don't-know." The method exploits a many-to-one mapping of domain values, termed "domain reduction," with concomitant reduction in worst-case time complexity. We believe the method may become an important complement to existing procedures which are sound and incomplete with respect to satisfiability. Formal development and our experiments with randomly generated problems suggest that domain reduction is most promising when input domains are large and constraints are sparse in terms of the number of tuples they allow. These results are encouraging, particularly in the context of database applications and anytime reasoning where domain sizes are extremely large. We suggest new experiments to investigate effectiveness on CSPs with domain sizes beyond the scope of our current implementation of an underlying sound and complete 
Abstract-found: 1
Intro-found: 1
Reference: [ Boddy and Dean, 1994 ] <author> Boddy, Mark and Dean, </author> <title> Thomas 1994. Deliberation scheduling for problem solving in time-constrained environments. </title> <booktitle> Artificial Intelligence 67(2) </booktitle> <pages> 245-285. </pages>
Reference-contexts: Given large domains, the reduced problems are easiest to process when fl is large and d 0 is small. Smaller values of fl, give greater chances for success. We think this set of circumstances presents an ideal opportunity for the application of an "anytime" algorithm <ref> [ Dean and Boddy, 1988a, Boddy and Dean, 1994 ] </ref> for real-time situations. E.g., start with a small value for fl, and in successive applications double it until a deadline for response is reached.
Reference: [ Borgida and Etherington, 1989 ] <author> Borgida, Alex and Etherington, David 1989. </author> <title> Hierarchical knowledge bases and efficient disjunctive reasoning. </title> <booktitle> In Principles of Knowledge Representation and Reasoning: Proceedings of the First International Conference (KR'89). </booktitle> <pages> 33-43. </pages>
Reference: [ Cheeseman et al., 1991 ] <author> Cheeseman, Peter; Kanef-sky, Bob; and Taylor, </author> <title> William 1991. Where the really hard problems are. </title> <booktitle> In Proceedings of the Twlefth International Joint Conference on Artificial Intelligence (IJCAI-91). </booktitle> <pages> 331-337. </pages>
Reference-contexts: It is well-known that in such random distributions there is a fairly sharp transition from under-constrained problems which are almost all satisfiable to over-constrained problems which are almost all unsatis-fiable <ref> [ Cheeseman et al., 1991, Williams and Hogg, 1992 ] </ref> . We avoided the under-constrained region, and whenever we happened to generate a satisfiable instance we discarded it and generated another instance in its place, so that all of our experimental problems were unsatisfiable.
Reference: [ Crawford and Baker, 1994 ] <author> Crawford, James and Baker, </author> <title> Andrew 1994. Experimental results on the application of satisfiability algorithms to scheduling problems. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94). </booktitle> <pages> 1092-1097. </pages>
Reference: [ Dalal and Etherington, 1992 ] <author> Dalal, Mukesh and Etherington, David 1992. </author> <title> Tractable approximate deduction using limited vocabularies. </title> <booktitle> In Proceedings of the Ninth Canadian Conference on Artificial Intelligence (AI'92). </booktitle> <pages> 206-212. </pages>
Reference: [ Dean and Boddy, 1988a ] <author> Dean, Thomas and Boddy, </author> <title> Mark 1988a. An analysis of time-dependent planning. </title> <booktitle> In Proceedings AAAI-88 Seventh National Conference on Artificial Intelligence. </booktitle> <pages> 49-54. </pages>
Reference-contexts: Given large domains, the reduced problems are easiest to process when fl is large and d 0 is small. Smaller values of fl, give greater chances for success. We think this set of circumstances presents an ideal opportunity for the application of an "anytime" algorithm <ref> [ Dean and Boddy, 1988a, Boddy and Dean, 1994 ] </ref> for real-time situations. E.g., start with a small value for fl, and in successive applications double it until a deadline for response is reached.
Reference: [ Dean and Boddy, 1988b ] <author> Dean, Thomas and Boddy, </author> <title> Mark 1988b. Reasoning about partially ordered events. </title> <booktitle> Artificial Intelligence 36(3) </booktitle> <pages> 375-399. </pages>
Reference-contexts: For simplicity of presentation, we assume that fl is an integer which 1 When such a procedure goes ahead and reports satis-fiability anyway, we call it "complete and unsound." (See, e.g., <ref> [ Dean and Boddy, 1988b ] </ref> .) evenly divides d 0 . We show that the reduced CSP is unsatisfiable only if the original CSP is. We use a sound and complete algorithm on the reduced problem. <p> Our main question is whether it would be competetive with existing procedures which also are sound and incomplete with respect to satis-fiability. Related Work The playing off of two complementary, sound and incomplete reasoning strategies is echoed in several approaches to tractable reasoning, including temporal reasoning projection <ref> [ Dean and Boddy, 1988b, Schrag et al., 1992 ] </ref> and knowledge compilation for propositional theories [ Selman and Kautz, 1991, Kautz and Selman, 1994, Dalal and Etherington, 1992 ] . The knowledge compilation approaches are closest to our method.
Reference: [ Kautz and Selman, 1994 ] <author> Kautz, Henry and Sel-man, </author> <title> Bart 1994. An empirical evaluation of knowledge compilation by theory approximation. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94). </booktitle> <pages> 155-161. </pages>
Reference: [ Mackworth, 1992 ] <author> Mackworth, </author> <title> Alan 1992. Constraint satisfaction. </title> <editor> In Shapiro, Stuart, editor 1992, </editor> <booktitle> Encyclopedia of Artificial Intelligence. </booktitle> <publisher> Wiley. </publisher> <pages> 285-293. </pages>
Reference-contexts: Introduction A constraint satisfaction problem (CSP) algorithm is sound if every solution it returns is indeed a solution; a CSP algorithm is complete if it always will return a solution when one exists. Consider a finite-domain CSP <ref> [ Mackworth, 1992 ] </ref> with n variables fx 1 ; x 2 ; : : : ; x n g, all ranging over a common domain (chosen for simplicity) of d values V = fv 1 ; v 2 ; : : : ; v d g, and m binary constraints.
Reference: [ Mitchell et al., 1992 ] <author> Mitchell, David; Selman, Bart; and Levesque, </author> <title> Hector 1992. Hard and easy distributions of SAT problems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92). </booktitle> <pages> 459-465. </pages>
Reference-contexts: We transform a more constrained, unsatisfiable problem to a less constrained, unsatis-fiable problem. This means that we are going from a region of lesser difficulty in a distribution which is generally harder to a region of greater difficulty in a distribution which is generally easier <ref> [ Mitchell et al., 1992 ] </ref> . Which effect would dominate? The experiments show that there definitely are regions where the technique is more successful; dramatic, order-of-magnitude, gains in efficiency can occur when the domain size is large and constraints are sparse.
Reference: [ Mohan, 1991 ] <author> Mohan, </author> <title> Sunil 1991. Constructing hierarchical solvers for functional constraint satisfaction problems. </title> <booktitle> In Working Notes, AAAI Spring Symposium on Constraint-Based Reasoning, </booktitle> <address> Stan-ford University, Palo Alto, CA. </address> <pages> 147-153. </pages>
Reference-contexts: Then add axioms of the sort v i ! f (v i ) to a propositional encoding of the CSP. This work also is related to other reasoning approaches that use abstractions, such as Mohan's hierarchical approach to constraint satisfaction <ref> [ Mohan, 1991 ] </ref> . Our experiments may help shed some light on when solving an abstract version of the CSP will be beneficial. Conclusion We have presented "domain reduction," a new constraint satisfaction procedure which is sound and incomplete with respect to unsatisfiability.
Reference: [ Prosser, 1993 ] <author> Prosser, </author> <title> Patrick 1993. Hybrid algorithms for the constraint satisfaction problem. </title> <booktitle> Computational Intelligence 9(3) </booktitle> <pages> 268-299. </pages>
Reference-contexts: We processed the generated and reduced problems using an implementation of FC/DVO/CBJ (that is, backtracking search with forward checking, dynamic variable ordering, and conflict-directed backjumping) <ref> [ Prosser, 1993 ] </ref> , and we counted constraint checks as an implementation-independent measure of processing time. We did not attempt to figure in time to perform the mappings. We can generate the mappings in time linear in d.
Reference: [ Schrag et al., 1992 ] <author> Schrag, Robert; Boddy, Mark; and Carciofini, </author> <title> Jim 1992. Managing disjunction for practical temporal reasoning. </title> <editor> In Nebel, Bern-hard; Rich, Charles; and Swartout, William, editors 1992, </editor> <booktitle> Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR'92), </booktitle> <address> San Mateo, CA. </address> <publisher> Mor-gan Kaufmann. </publisher> <pages> 36-46. </pages>
Reference-contexts: Our main question is whether it would be competetive with existing procedures which also are sound and incomplete with respect to satis-fiability. Related Work The playing off of two complementary, sound and incomplete reasoning strategies is echoed in several approaches to tractable reasoning, including temporal reasoning projection <ref> [ Dean and Boddy, 1988b, Schrag et al., 1992 ] </ref> and knowledge compilation for propositional theories [ Selman and Kautz, 1991, Kautz and Selman, 1994, Dalal and Etherington, 1992 ] . The knowledge compilation approaches are closest to our method.
Reference: [ Selman and Kautz, 1991 ] <author> Selman, Bart and Kautz, </author> <title> Henry 1991. Knowledge compilation using horn approximations. </title> <booktitle> In Proceedings of the Ninth National Conference on Artificial Intelligence (AAAI-91). </booktitle> <pages> 904-909. </pages>
Reference: [ Selman et al., 1992 ] <author> Selman, Bart; Levesque, Hector; and Mitchell, David 1992. </author> <title> A new method for solving hard satisfiability problems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92). </booktitle> <pages> 440-446. </pages>
Reference-contexts: There exists a number of procedures for solving CSPs which are sound and incomplete with respect to satisfiability | any solution they return is a valid solution, but they may not find a solution when it exists. These include local search procedures such as GSAT <ref> [ Selman et al., 1992 ] </ref> (or direct CSP versions described by Tsang requiring no propositional encoding [ 1993 ] ), Crawford and Baker's Isamp solution sampling method [ 1994 ] , and others.
Reference: [ Tsang, 1993 ] <author> Tsang, </author> <title> Edward 1993. Foundations of Constraint Satisfaction. </title> <publisher> Academic Press. </publisher> [ <editor> Williams and Hogg, 1992 ] Williams, Colin and Hogg, </editor> <title> Tad 1992. Using deep structure to locate hard problems. </title> <booktitle> In Proceedings of the Tenth National Conference on Artificial Intelligence (AAAI-92). </booktitle> <pages> 472-477. </pages>
References-found: 16

