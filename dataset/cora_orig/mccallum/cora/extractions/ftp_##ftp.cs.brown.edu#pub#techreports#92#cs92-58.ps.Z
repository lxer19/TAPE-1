URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-58.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-58.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "When trees collide: an approximation algorithm for the generalized Steiner tree problem on networks," </title> <booktitle> Proceedings of the 23rd Annual ACM Symposium on Theory of Computing (1991), </booktitle> <pages> pp. 134-144. </pages>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees <ref> [1] </ref> and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2. <p> In the last iteration, when the number of active components falls to O (b), we run the approximation algorithm for minimum-cost generalized Steiner forest of Agrawal, Klein and Ravi <ref> [1] </ref> using the contracted active components as sites. The maximum degree of any node in this forest is O (b) and the cost is at most twice OP T b using the performance guarantee in [1]. <p> we run the approximation algorithm for minimum-cost generalized Steiner forest of Agrawal, Klein and Ravi <ref> [1] </ref> using the contracted active components as sites. The maximum degree of any node in this forest is O (b) and the cost is at most twice OP T b using the performance guarantee in [1]. Also, the final subgraph output has no active component and so the final subgraph contains a generalized Steiner forest for the site-pairs. The proof of the performance guarantee proceeds exactly as before. <p> The value of the packing is the sum of the weights of all the cuts in the packing. A maximum packing is one of maximum value. The following theorem is a consequence of the results in <ref> [1, 12] </ref>. Theorem 6.3 Given an undirected graph with edge-weights, the minimum-weight Spanning tree has weight at most twice the value of a maximum packing of cuts.
Reference: [2] <author> A. Agrawal, P. Klein and R. Ravi, </author> <title> "How tough is the minimum degree Steiner tree? An approximate min-max equality (complete with algorithms)", </title> <institution> TR-CS-91-49, Brown University (1991). </institution>
Reference-contexts: Minimizing this cost corresponds to the minimum-degree network design problem, which has also been well-studied <ref> [2, 9, 10, 27] </ref>. A cost measure that captures the price associated with using the network is the bottleneck cost which is the maximum cost of any edge in the network. <p> A series of recent results have addressed the problem of minimum-degree networks of various forms: spanning trees [9, 10], Steiner trees <ref> [2, 10] </ref>, generalized Steiner forests and more general one-connected networks as well as two-edge-connected spanning networks [27].
Reference: [3] <author> A. V. Aho, J. E. Hopcroft and J. D. Ullman, </author> <title> The design and Analysis of Computer Algorithms, </title> <publisher> Addison Wesley, </publisher> <address> Reading MA., </address> <year> 1974. </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees <ref> [3, 20, 26] </ref>, TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2. <p> Output: A spanning tree in which the maximum degree of any node is b. 1 Find an MST of the given graph. This can be done by using any of the well-known algorithms <ref> [20, 26, 3] </ref>. 2 Root the spanning tree at an arbitrary node r.
Reference: [4] <author> J. Bar-Ilan, and D. Peleg, </author> <title> "Approximation algorithms for selecting network centers (Preliminary version)," </title> <booktitle> LNCS 519, Proceedings, 2nd Workshop, WADS '91, Algorithms and Data Structures series, </booktitle> <publisher> Springer-Verlag. </publisher>
Reference-contexts: However, in applications that arise in real-world situations, it is often the case that the network to be built is required to minimize more than one of these cost measures simultaneously. Recent papers have identified many such problems <ref> [4, 18, 17, 31] </ref> wherein more than one objective is specified in the statement of the problem. In this paper, we embark on a new research endeavor, namely studying the approximation of general network-design problems with multiple objectives in a unified way. <p> One important contribution to this area is by Bar-Ilan and Peleg <ref> [4] </ref>. In this work, they provide approximation algorithms for problem of allocating network centers wherein each center is allowed to service only a bounded number of nodes.
Reference: [5] <author> P. Berman and V. Ramaiyer, </author> <title> "Improved approximations for the Steiner tree problem," </title> <booktitle> Proc., 3rd Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 325-334. </pages>
Reference: [6] <author> C. W. Duin, an A. Volgenant, </author> <title> "Some generalizations of the Steiner problem in graphs," </title> <journal> Networks, </journal> <volume> 17, </volume> <pages> pp. 353-364, </pages> <year> (1987). </year>
Reference-contexts: Iwainsky et al. [16] formulated a version of the minimum-cost Steiner problem with an additional cost based on node-degrees. Duin and Volgenant <ref> [6] </ref> formulate the degree-bounded Steiner tree problem motivated by practical considerations. 2.2 Minimizing one of the cost measures Much work has been done on approximating each of the cost measures that we simultaneously minimize.
Reference: [7] <author> J. Edmonds, and E. L. Johnson, </author> <title> "Matching, Euler tours and the Chinese postman", </title> <journal> Math. Prog. </journal> <volume> 5, </volume> <year> (1973), </year> <pages> pp. 88-124. </pages>
Reference-contexts: This problem is sometimes referred to as the f -factor problem [23], and is known to be polynomially solvable <ref> [23, 7, 29] </ref>. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v). <p> The b-bounded even DCS problem described above is a generalization of the famous T -join problem <ref> [7] </ref>. Note that when b is allowed to be unbounded, then the b-bounded even DCS problem reduces to the T -join problem. A proof of Fact 3.2 can be provided using a transformation to a min-cost perfect matching problem as is done for the T -join problem in [23, 7]. <p> Note that when b is allowed to be unbounded, then the b-bounded even DCS problem reduces to the T -join problem. A proof of Fact 3.2 can be provided using a transformation to a min-cost perfect matching problem as is done for the T -join problem in <ref> [23, 7] </ref>. Using results on the structure of T -joins, it is easy to prove the following property of any subgraph H satisfying the conditions of Fact 3.2. Proposition 3.3 Let H be any subgraph satisfying the conditions in Fact 3.2.
Reference: [8] <author> A. M. Frieze, G. Galbiati, and F. Maffioli, </author> <title> "On the worst-case performance of some algorithms for the asymmetric traveling salesman problem," </title> <journal> Networks, </journal> <volume> 12, </volume> <pages> pp. 23-39, </pages> <year> (1982). </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs <ref> [21, 8] </ref>, Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [9] <author> M. Furer and B. Raghavachari, </author> <title> "An N C approximation algorithm for the minimum degree spanning tree problem," </title> <booktitle> Proceedings of the 28th Annual Allerton Conference on Communication, Control and Computing (1990), </booktitle> <pages> pp. 274-281. </pages>
Reference-contexts: Minimizing this cost corresponds to the minimum-degree network design problem, which has also been well-studied <ref> [2, 9, 10, 27] </ref>. A cost measure that captures the price associated with using the network is the bottleneck cost which is the maximum cost of any edge in the network. <p> The case of spanning trees treated in Theorem 1.2 is less interesting in the case of node-weighted graphs since every node must be included in the output solution. This problem then reduces to computing a minimum-degree spanning tree that has been well-studied <ref> [9, 10] </ref>. We focus our attention on the more interesting case of Steiner trees. Recently, Klein and Ravi [19] have presented the first polynomial-time approximation algorithms for node-weighted Steiner trees. The performance guarantee of their approximation algorithms is logarithmic in the number of terminals specified in the problem. <p> A series of recent results have addressed the problem of minimum-degree networks of various forms: spanning trees <ref> [9, 10] </ref>, Steiner trees [2, 10], generalized Steiner forests and more general one-connected networks as well as two-edge-connected spanning networks [27]. <p> We shall use b to denote the degree bound specified in the problem. We also use OP T b to denote the minimum cost of any b-bounded spanning tree of the input graph. 3.2.1 Overview The algorithm follows the same skeletal outline as that of Furer and Raghavachari <ref> [9] </ref> for approximating the minimum degree spanning tree. However, we generalize it to ensure that the cost of the solution chosen is small as well. The algorithm works in O (log n b ) phases where n is the number of nodes in the original graph.
Reference: [10] <author> M. Furer and B. Raghavachari, </author> <title> "Approximating the minimum degree spanning tree to within one from the optimal degree," </title> <booktitle> Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 317-324. </pages>
Reference-contexts: Minimizing this cost corresponds to the minimum-degree network design problem, which has also been well-studied <ref> [2, 9, 10, 27] </ref>. A cost measure that captures the price associated with using the network is the bottleneck cost which is the maximum cost of any edge in the network. <p> The case of spanning trees treated in Theorem 1.2 is less interesting in the case of node-weighted graphs since every node must be included in the output solution. This problem then reduces to computing a minimum-degree spanning tree that has been well-studied <ref> [9, 10] </ref>. We focus our attention on the more interesting case of Steiner trees. Recently, Klein and Ravi [19] have presented the first polynomial-time approximation algorithms for node-weighted Steiner trees. The performance guarantee of their approximation algorithms is logarithmic in the number of terminals specified in the problem. <p> A series of recent results have addressed the problem of minimum-degree networks of various forms: spanning trees <ref> [9, 10] </ref>, Steiner trees [2, 10], generalized Steiner forests and more general one-connected networks as well as two-edge-connected spanning networks [27]. <p> A series of recent results have addressed the problem of minimum-degree networks of various forms: spanning trees [9, 10], Steiner trees <ref> [2, 10] </ref>, generalized Steiner forests and more general one-connected networks as well as two-edge-connected spanning networks [27].
Reference: [11] <author> M. R. Garey and D. S. Johnson, </author> <title> Computers and Intractability: A guide to the theory of NP-completeness, </title> <editor> W. H. </editor> <publisher> Freeman, </publisher> <address> San Francisco (1979). </address>
Reference-contexts: Such problems are termed bottleneck problems and these have also received considerable attention [14, 25]. Finding a network of sufficient generality and of minimum cost with respect to each one of these measures can be shown to be NP-complete <ref> [11] </ref>. Hence much of the work mentioned above focuses on approximation algorithms for each of these problems. However, in applications that arise in real-world situations, it is often the case that the network to be built is required to minimize more than one of these cost measures simultaneously.
Reference: [12] <author> M. X. Goemans, and D. P. Williamson, </author> <title> "A general approximation technique for constrained forest problems", </title> <booktitle> Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms (1992), </booktitle> <pages> pp. 307-316. </pages>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> Here k represents the number of nodes of G that are sites. In fact, we can even go one step further and prove the same result as above for a whole class of constrained forest problems introduced by Goemans and Williamson in <ref> [12] </ref>. <p> As before, we can extend the above theorem to generalized Steiner forests and to even more general constrained forest problems addressed in <ref> [12] </ref>. We omit these extensions in this abstract. We note that the above theorem subsumes the result of Klein and Ravi [19] since it contains their result as a special case when the degree of any node in the solution is allowed to be unbounded. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks <ref> [12] </ref>. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2. <p> This in turn is at most 2k (k + 2)c fl . However, we can apply an approximate min-max relation between a MST and a packing of cuts in the graph that is derived in <ref> [12] </ref> in proving a better performance guarantee of 4 (k +2) for the total cost. In particular, if OP T k denotes the cost of a minimum k-connected subgraph, we show that OP T k kc fl 2 . <p> The value of the packing is the sum of the weights of all the cuts in the packing. A maximum packing is one of maximum value. The following theorem is a consequence of the results in <ref> [1, 12] </ref>. Theorem 6.3 Given an undirected graph with edge-weights, the minimum-weight Spanning tree has weight at most twice the value of a maximum packing of cuts. <p> A maximum packing is one of maximum value. The following theorem is a consequence of the results in [1, 12]. Theorem 6.3 Given an undirected graph with edge-weights, the minimum-weight Spanning tree has weight at most twice the value of a maximum packing of cuts. The algorithm in <ref> [12] </ref> greedily finds a packing of cuts and simultaneously builds a minimum spanning tree of weight at most twice the value of this packing.
Reference: [13] <author> M. Grotschel, L. Lovasz and A. Schrijver, </author> <title> Geometric Algorithms and Combinatorial Optimization, </title> <publisher> Springer-Verlag (1988). </publisher>
Reference: [14] <author> D. S. Hochbaum, and D. B. Shmoys, </author> <title> "An unified approach to approximation algorithms for bottleneck problems," </title> <journal> JACM, </journal> <volume> Vol. 33, No. 3, </volume> <pages> pp. 533-550, </pages> <month> (July </month> <year> 1986). </year>
Reference-contexts: If the cost of an edge reflects the geographical distance between its endpoints, then minimizing the bottleneck cost in a network corresponds to minimizing the maximum distance traveled in a single hop in the network. Such problems are termed bottleneck problems and these have also received considerable attention <ref> [14, 25] </ref>. Finding a network of sufficient generality and of minimum cost with respect to each one of these measures can be shown to be NP-complete [11]. Hence much of the work mentioned above focuses on approximation algorithms for each of these problems. <p> We note that the techniques of Parker and Rardin [25] and subsequently Hochbaum and Shmoys <ref> [14] </ref> apply to approximate the bottleneck cost of the TSP within a factor of two of the optimum. Similarly, the techniques of Rosenkrantz, Stearns and Lewis [28] apply to approximate the total cost of the TSP within twice the optimum. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in <ref> [14, 25] </ref>. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [15] <author> F. K. Hwang and D. S. Richards, </author> <title> "Steiner tree problems," </title> <journal> Networks, </journal> <volume> Vol. 22, No. 1, </volume> <pages> pp. </pages> <month> 55-90 </month> <year> (1992). </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees <ref> [15, 30] </ref>, generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [16] <author> A. Iwainsky, E. Canuto, O. Taraszow, and A. Villa, </author> <title> "Network decomposition for the optimization of connection structures," </title> <journal> Networks, </journal> <volume> 16, </volume> <pages> pp. 205-235, </pages> <year> (1986). </year> <month> 18 </month>
Reference-contexts: Iwainsky et al. <ref> [16] </ref> formulated a version of the minimum-cost Steiner problem with an additional cost based on node-degrees.
Reference: [17] <author> S. Khuller, B. Raghavachari, and N. Young, </author> <title> "Balancing Minimum Spanning and Shortest Path Trees," </title> <type> Tech. report CS-92-20, </type> <institution> Penn. State Univ., </institution> <note> August 1992 (To appear in the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms (1993). </note>
Reference-contexts: However, in applications that arise in real-world situations, it is often the case that the network to be built is required to minimize more than one of these cost measures simultaneously. Recent papers have identified many such problems <ref> [4, 18, 17, 31] </ref> wherein more than one objective is specified in the statement of the problem. In this paper, we embark on a new research endeavor, namely studying the approximation of general network-design problems with multiple objectives in a unified way. <p> Klein, Agrawal, Ravi and Rao [18] provide an approximation algorithm for finding an elimination ordering for sparse Gaussian elimination to simultaneously minimize the fill-in, the total operation count and the elimination height. Khuller, Raghavachari, and Young <ref> [17] </ref> provide an algorithm for finding a spanning tree whose weight is at most a constant times that of the MST such that the distance in this tree from the root is at most a constant times the distance in the input graph.
Reference: [18] <author> P. Klein, A. Agrawal, R. Ravi, and S. Rao, </author> <title> "Approximation through multicommodity flow," </title> <booktitle> in Proc. 31th Annual Symposium on Foundations of Computer Science (1990), </booktitle> <pages> pp. 726-737. </pages>
Reference-contexts: However, in applications that arise in real-world situations, it is often the case that the network to be built is required to minimize more than one of these cost measures simultaneously. Recent papers have identified many such problems <ref> [4, 18, 17, 31] </ref> wherein more than one objective is specified in the statement of the problem. In this paper, we embark on a new research endeavor, namely studying the approximation of general network-design problems with multiple objectives in a unified way. <p> This result is quite similar in flavor to Observation 1.1 wherein we are required to conform to the degree requirement and wish to approximate only the total cost. Klein, Agrawal, Ravi and Rao <ref> [18] </ref> provide an approximation algorithm for finding an elimination ordering for sparse Gaussian elimination to simultaneously minimize the fill-in, the total operation count and the elimination height.
Reference: [19] <author> P. Klein and R. Ravi, </author> <title> "A nearly best-possible approximation for node-weighted Steiner trees," submitted to the Integer Programming and Combinatorial Optimization Conference III (1993). </title>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> This problem then reduces to computing a minimum-degree spanning tree that has been well-studied [9, 10]. We focus our attention on the more interesting case of Steiner trees. Recently, Klein and Ravi <ref> [19] </ref> have presented the first polynomial-time approximation algorithms for node-weighted Steiner trees. The performance guarantee of their approximation algorithms is logarithmic in the number of terminals specified in the problem. <p> Using recent results on the hardness of approximation for the set-cover problem [24], they show that the performance guarantee is nearly best-possible (within a constant factor) unless N P = ~ P . We extend the techniques of Klein and Ravi <ref> [19] </ref> to the case when the degree of the Steiner tree is also required to be bounded and derive the following analogue of Theorem 1.2. <p> As before, we can extend the above theorem to generalized Steiner forests and to even more general constrained forest problems addressed in [12]. We omit these extensions in this abstract. We note that the above theorem subsumes the result of Klein and Ravi <ref> [19] </ref> since it contains their result as a special case when the degree of any node in the solution is allowed to be unbounded. Though we generalize their result, the performance guarantee on the cost of the solution that we prove matches that proved in [19] within a constant factor. <p> result of Klein and Ravi <ref> [19] </ref> since it contains their result as a special case when the degree of any node in the solution is allowed to be unbounded. Though we generalize their result, the performance guarantee on the cost of the solution that we prove matches that proved in [19] within a constant factor. Using the observation in their paper, it follows that the performance guarantee of our solution in terms of the total cost is nearly best-possible unless N P = ~ P . 1.4 An application: approximating minimum-degree generalized Steiner forests Theorem 1.3 has an important application. <p> First, we recall a tree decomposition theorem. Then we look at a variant of a degree constrained subgraph problem which we use as a subroutine in our solutions. 3.1.1 A tree decomposition theorem The following tree decomposition theorem from <ref> [19] </ref> will be used in bounding the cost of the solution obtained by our algorithms. 4 Claim 3.1 Let T be a tree with an even number of marked nodes. <p> We prove Lemma 5.3 in the remainder of this section. Lemma 5.4 is proved similarly. 10 5.0.9 Spider decompositions We employ the notion of spider decompositions introduced in <ref> [19] </ref> in showing that the each node chosen in Step 10 has small quotient cost with respect to the optimal solution. Definition: A spider is a tree with at most one node of degree greater than two. <p> A spider decomposition of M in G is a set of node-disjoint nontrivial spiders in G such that the union of the feet of the spiders in the decomposition contains M . Theorem 5.5 (Klein and Ravi <ref> [19] </ref>) Let G be a connected graph, and let M be a subset of its nodes such that jM j 2.
Reference: [20] <author> J. B. Kruskal, </author> <title> "On the shortest spanning subtree of a graph and the traveling salesman problem", </title> <journal> Proc. American Mathematical Society, </journal> <volume> 7(1), </volume> <pages> pp. 48-50, </pages> <year> 1956. </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees <ref> [3, 20, 26] </ref>, TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2. <p> Output: A spanning tree in which the maximum degree of any node is b. 1 Find an MST of the given graph. This can be done by using any of the well-known algorithms <ref> [20, 26, 3] </ref>. 2 Root the spanning tree at an arbitrary node r.
Reference: [21] <author> E. L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. Shmoys (eds.), </author> <title> The Traveling Salesman Problem, </title> <publisher> Wiley, </publisher> <address> Chichester, </address> <year> (1985). </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs <ref> [21, 8] </ref>, Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [22] <author> F. T. Leighton and S. Rao, </author> <title> "An approximate max-flow min-cut theorem for uniform multicommodity flow problems with application to approximation algorithms," </title> <booktitle> Proceedings of the 29th Annual IEEE Conference on Foundations of Computer Science (1988), </booktitle> <pages> pp. 422-431. </pages>
Reference-contexts: Then by Claim 5.7, we have r j 12OP T b 5C j j1 (4) We now use an analysis technique due to Leighton and Rao <ref> [22] </ref> to complete the proof.
Reference: [23] <author> L. Lovasz and M. D. Plummer, </author> <title> Matching theory, </title> <publisher> Akademiai Kiado, </publisher> <address> Budapest (1986). </address>
Reference-contexts: This problem is sometimes referred to as the f -factor problem <ref> [23] </ref>, and is known to be polynomially solvable [23, 7, 29]. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v). Fact 3.2 [23] (b-bounded <p> This problem is sometimes referred to as the f -factor problem [23], and is known to be polynomially solvable <ref> [23, 7, 29] </ref>. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v). <p> This problem is sometimes referred to as the f -factor problem <ref> [23] </ref>, and is known to be polynomially solvable [23, 7, 29]. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v). Fact 3.2 [23] (b-bounded even DCS problem) The following problem has a polynomial time solution: Given an undirected graph G = (V; E) such that V = S [ T and S " <p> problem <ref> [23] </ref>, and is known to be polynomially solvable [23, 7, 29]. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v). Fact 3.2 [23] (b-bounded even DCS problem) The following problem has a polynomial time solution: Given an undirected graph G = (V; E) such that V = S [ T and S " T = ;, and an integer b 2, find a subgraph H (if one exists) of G of minimum cost <p> Note that when b is allowed to be unbounded, then the b-bounded even DCS problem reduces to the T -join problem. A proof of Fact 3.2 can be provided using a transformation to a min-cost perfect matching problem as is done for the T -join problem in <ref> [23, 7] </ref>. Using results on the structure of T -joins, it is easy to prove the following property of any subgraph H satisfying the conditions of Fact 3.2. Proposition 3.3 Let H be any subgraph satisfying the conditions in Fact 3.2.
Reference: [24] <author> C. Lund and M. Yannakakis, </author> <title> "On the Hardness of Approximating Minimization Problems," </title> <type> (manuscript), </type> <month> July </month> <year> 1992. </year>
Reference-contexts: Recently, Klein and Ravi [19] have presented the first polynomial-time approximation algorithms for node-weighted Steiner trees. The performance guarantee of their approximation algorithms is logarithmic in the number of terminals specified in the problem. Using recent results on the hardness of approximation for the set-cover problem <ref> [24] </ref>, they show that the performance guarantee is nearly best-possible (within a constant factor) unless N P = ~ P .
Reference: [25] <author> R. G. Parker, and R. L. Rardin, </author> <title> "Guaranteed performance heuristic for the bottleneck traveling salesman problem," </title> <journal> Oper. Res. Lett. </journal> <volume> 6, </volume> <pages> pp. 269-272, </pages> <year> (1982). </year>
Reference-contexts: If the cost of an edge reflects the geographical distance between its endpoints, then minimizing the bottleneck cost in a network corresponds to minimizing the maximum distance traveled in a single hop in the network. Such problems are termed bottleneck problems and these have also received considerable attention <ref> [14, 25] </ref>. Finding a network of sufficient generality and of minimum cost with respect to each one of these measures can be shown to be NP-complete [11]. Hence much of the work mentioned above focuses on approximation algorithms for each of these problems. <p> We note that the techniques of Parker and Rardin <ref> [25] </ref> and subsequently Hochbaum and Shmoys [14] apply to approximate the bottleneck cost of the TSP within a factor of two of the optimum. Similarly, the techniques of Rosenkrantz, Stearns and Lewis [28] apply to approximate the total cost of the TSP within twice the optimum. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in <ref> [14, 25] </ref>. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [26] <author> R.C. Prim, </author> <title> "Shortest connection networks and some generalizations", </title> <journal> Bell System Tech Journal, </journal> <volume> 36(6), </volume> <pages> pp. 1389-1401, </pages> <year> 1957. </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees <ref> [3, 20, 26] </ref>, TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2. <p> Output: A spanning tree in which the maximum degree of any node is b. 1 Find an MST of the given graph. This can be done by using any of the well-known algorithms <ref> [20, 26, 3] </ref>. 2 Root the spanning tree at an arbitrary node r.
Reference: [27] <author> R. Ravi, B. Raghavachari, and P. N. Klein, </author> <title> "Approximation through local optimality: Designing networks with small degree," </title> <booktitle> to appear in Proceedings, Twelfth Annual Conference on Foundations of Software Technology and Theoretical Computer Science, December 1992, </booktitle> <address> New Delhi, India. </address>
Reference-contexts: Minimizing this cost corresponds to the minimum-degree network design problem, which has also been well-studied <ref> [2, 9, 10, 27] </ref>. A cost measure that captures the price associated with using the network is the bottleneck cost which is the maximum cost of any edge in the network. <p> We can use this theorem to provide the first polynomial-time approximation algorithm for a class of minimum-degree forest problems considered by Ravi, Raghavachari 2 and Klein in <ref> [27] </ref>. A prototypical example of a problem in this class is the minimum-degree generalized Steiner forest problem: given an undirected graph with site-pairs of nodes, find a generalized Steiner forest for the site-pairs whose maximum degree is minimum. The best approximation ratio for this problem achievable using the techniques in [27] <p> <ref> [27] </ref>. A prototypical example of a problem in this class is the minimum-degree generalized Steiner forest problem: given an undirected graph with site-pairs of nodes, find a generalized Steiner forest for the site-pairs whose maximum degree is minimum. The best approximation ratio for this problem achievable using the techniques in [27] is (n * ) for some constant * &gt; 0. The running time of the algorithm achieving this ratio is O (n 1 * ). We can improve the approximation factor achievable in polynomial-time for this problem by an application of Theorem 1.3. <p> A series of recent results have addressed the problem of minimum-degree networks of various forms: spanning trees [9, 10], Steiner trees [2, 10], generalized Steiner forests and more general one-connected networks as well as two-edge-connected spanning networks <ref> [27] </ref>. A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees [15, 30], generalized Steiner trees [1] and even more general one-connected networks [12].
Reference: [28] <author> D. J. Rosenkrantz, R. E. Stearns and P. M. Lewis II, </author> <title> An analysis of several heuristics for the traveling salesman problem, </title> <journal> SIAM J. Computing, </journal> <volume> 6(3), </volume> <pages> pp. 563-581, </pages> <year> 1977. </year>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> In this case, we present approximations that strictly conform to the degree restrictions in the input problem and approximate the bottleneck cost of the output network as well. We introduce an extension of the short-cutting technique of Rosenkrantz, Stearns and Lewis <ref> [28] </ref> for the TSP problem to approximate the total cost, the maximum degree as well as the bottleneck cost of spanning networks. <p> If we insist on a Hamiltonian path (i.e., require b = 2), then the simple TSP heuristic in <ref> [28] </ref> provides a solution that approximates the total cost of the spanning tree by a factor 2 (1 1 n ) in an n-node graph, but provides no guarantee on the bottleneck cost. <p> We note that the techniques of Parker and Rardin [25] and subsequently Hochbaum and Shmoys [14] apply to approximate the bottleneck cost of the TSP within a factor of two of the optimum. Similarly, the techniques of Rosenkrantz, Stearns and Lewis <ref> [28] </ref> apply to approximate the total cost of the TSP within twice the optimum. However, the theorem above is the first of its kind on approximating both these cost measures for the TSP simultaneously even under triangle inequality. We can extend Theorem 1.6 to higher-connected networks as follows. <p> Lemmas 5.1, 5.2, 5.3 and 5.4 together prove the performance guarantee in Theorem 1.4. 13 6 Algorithms under triangle inequality In this section, we introduce the short-cutting technique used in proving Theorem 1.6. First, we review the short-cutting method introduced in <ref> [28] </ref>. 6.1 Short-cutting for TSP Rosenkrantz, Stearns and Lewis [28] introduced a simple short-cutting technique for obtaining a TSP tour of a graph with edge-costs obeying the triangle inequality. We review this method briefly. <p> First, we review the short-cutting method introduced in <ref> [28] </ref>. 6.1 Short-cutting for TSP Rosenkrantz, Stearns and Lewis [28] introduced a simple short-cutting technique for obtaining a TSP tour of a graph with edge-costs obeying the triangle inequality. We review this method briefly. First note that the cost of a TSP tour is at least as much as that of a minimum spanning tree of the graph.
Reference: [29] <author> A. Schrijver, </author> <title> "Min-max results in Combinatorial Optimization," in Mathematical programming: The state of the art, </title> <editor> Eds. A. Bachem, M. Grotschel, and B. </editor> <booktitle> Korte, </booktitle> <pages> pp. 439-500, </pages> <publisher> Springer (1983). </publisher>
Reference-contexts: This problem is sometimes referred to as the f -factor problem [23], and is known to be polynomially solvable <ref> [23, 7, 29] </ref>. The following more general variant of this problem is also known to be polynomially solvable using matching techniques [23]. Definition: We denote the degree of a node v in a subgraph H by deg H (v).
Reference: [30] <author> P. Winter, </author> <title> "Steiner problem in networks : a survey," </title> <booktitle> BIT 25 (1985), </booktitle> <pages> pp. 485-496. </pages>
Reference-contexts: If we associate costs with feasible edges and nodes that can be used to build the network, then we may look for a network such that the price of construction is minimized. This is the minimum-cost network design problem and has been well studied <ref> [3, 1, 8, 12, 15, 19, 20, 26, 28, 21, 30] </ref>. A notion of cost that reflects the vulnerability of the network to single point failures and also quantifies the amount of decentralization in the network is the maximum degree of any node in the network. <p> A lot of research effort has been dedicated to the study of minimum-cost network problems: e.g., spanning trees [3, 20, 26], TSPs [21, 8], Steiner trees <ref> [15, 30] </ref>, generalized Steiner trees [1] and even more general one-connected networks [12]. Bottleneck problems have been investigated in [14, 25]. 3 Approximating both the degree and cost: the edge-weighted case In this section, we sketch a proof of Theorem 1.2.
Reference: [31] <author> R. T. Wong, </author> <title> "Worst case analysis of network design problem heuristics," </title> <journal> SIAM. J. Alg. Disc. Meth., </journal> <volume> 1., </volume> <pages> pp. 51-63, </pages> <year> (1980). </year>
Reference-contexts: However, in applications that arise in real-world situations, it is often the case that the network to be built is required to minimize more than one of these cost measures simultaneously. Recent papers have identified many such problems <ref> [4, 18, 17, 31] </ref> wherein more than one objective is specified in the statement of the problem. In this paper, we embark on a new research endeavor, namely studying the approximation of general network-design problems with multiple objectives in a unified way. <p> One important contribution to this area is by Bar-Ilan and Peleg [4]. In this work, they provide approximation algorithms for problem of allocating network centers wherein each center is allowed to service only a bounded number of nodes. Wong <ref> [31] </ref> examines a budget network design problem in which a network is to be built whose cost is at most a certain budget such that the sum of the path-lengths of commodities to be routed using this network is minimized.

References-found: 31

