URL: http://www.cs.cornell.edu/Info/People/summers/Papers/classify.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/summers/classify.html
Root-URL: 
Email: summers@cs.cornell.edu  
Title: Near-Wordless Document Structure Classification  
Author: Kristen Summers 
Affiliation: Department of Computer Science Cornell University  
Abstract: Automatic derivation of logical document structure from generic layout would enable a multiplicity of electronic document manipulation tools of a type that is becoming crucial to users who wish to browse the internet. This problem can be divided into segmentation (dividing the text into a hierarchy of pieces) and classification (categorizing these pieces as particular logical structures.) This paper proposes an approach to the classification of logical document structures, according to their distance from prototypes that are primarily geometric. The prototypes consider linguistic information minimally, thus relying minimally on the accuracy of OCR and decreasing language-dependence. Different classes of logical structures and the differences in the requisite information for classifying them are presented. A prototype format is proposed, existing prototypes and a distance measurement are described, and performance results are provided.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. D. Bruza and T. W. C. Huibers. </author> <title> Detecting the erosion of hierarchic information structures. </title> <booktitle> In Proceedings of the Workshop on Principles of Document Processing, </booktitle> <address> Seeheim, </address> <year> 1994. </year>
Reference-contexts: structured, in a fashion that requires no hierarchy. 2 For example, a document may be known to have been formatted with the L a T E X article style; in this case, precisely those structures for which the author has used the provided macros will be found. 3 In fact, <ref> [1] </ref> suggests that people tend to violate rules of this kind, even when they write the rules themselves. 4 One effect of this is that the system would probably not perform well on a text like [2]; documents designed to violate human expectations fall outside the scope of this work. 5 <p> the set of all possible structure categories. 3.2 The Distance Measure The measurement of the distance from a segment to a prototype is given on a scale from 0 to 1 by an approximate average of the following attribute distances (each of which is normalized to fall within the interval <ref> [0; 1] </ref>.) An unspecified attribute always yields distance 0.
Reference: [2] <author> Jacques Derrida. Glas. </author> <title> Collection Digraphe. </title> <publisher> Editions Galilee, </publisher> <address> Paris, </address> <year> 1974. </year>
Reference-contexts: which the author has used the provided macros will be found. 3 In fact, [1] suggests that people tend to violate rules of this kind, even when they write the rules themselves. 4 One effect of this is that the system would probably not perform well on a text like <ref> [2] </ref>; documents designed to violate human expectations fall outside the scope of this work. 5 For instance, in the L a T E X article style [10], theorems and similar structures are entirely left-justified, but ordinary paragraphs have an indented first line. 3 Table 1: Characterizations of Current Structures Structure Primary
Reference: [3] <author> Peter Fankhauser and Yi Xu. </author> <title> MarkItUp! An incremental approach to document structure recognition. </title> <publisher> Electronic Publishing, </publisher> <pages> 6(4) 447-456, </pages> <year> 1993. </year>
Reference-contexts: The systems in [9], [12], [14], and [18] identify structures based on a flat set of divisions of pages of one narrow format type each. 1 The system in <ref> [3] </ref> learns to identify lexically similar structures; 1 These narrow formats include such types as envelopes and tables, which are typically quite highly and uniformly 2 again, these form a flat set of divisions. The system in [4, 5] is more general, separating pages into text and graphics. <p> The system in [4, 5] is more general, separating pages into text and graphics. These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and <ref> [3] </ref> also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], [7, 20], and [13]. The former two systems find logical document hierarchies consisting of paragraphs, sections, and subsections by parsing, based on knowledge of standard printers' formatting rules.
Reference: [4] <author> Lloyd Alan Flechter and Rangachar Kasturi. </author> <title> Segmentation of binary images into text strings and graphics. </title> <booktitle> In Proceedings of the SPSE 40th Conference on Applications of Artificial Intelligence V, </booktitle> <volume> volume 786, </volume> <pages> pages 533-540, </pages> <year> 1987. </year> <title> 11 This is the case, of course, only for languages that share most layout conventions. This holds for a great number of languages, </title> <journal> however. </journal> <volume> 12 </volume>
Reference-contexts: The system in <ref> [4, 5] </ref> is more general, separating pages into text and graphics. These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. <p> The system in <ref> [4, 5] </ref> is more general, separating pages into text and graphics. These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], [7, 20], and [13].
Reference: [5] <author> Lloyd Alan Fletcher and Rangachar Kasturi. </author> <title> A robust algorithm for text string separation from mixed text/graphics images. </title> <journal> IEEE Transactions on Pattern Analysis and Machine Intelligence, </journal> <volume> 10(6) </volume> <pages> 910-918, </pages> <month> November </month> <year> 1988. </year>
Reference-contexts: The system in <ref> [4, 5] </ref> is more general, separating pages into text and graphics. These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. <p> The system in <ref> [4, 5] </ref> is more general, separating pages into text and graphics. These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], [7, 20], and [13].
Reference: [6] <author> E. Fox, Q. Chen, and R. </author> <title> France. Integrating search and retrieval with hypertext. </title> <editor> In E. Berk and J. Devlin, editors, </editor> <booktitle> Hypertext/Hypermedia Handbook, </booktitle> <pages> pages 329-355. </pages> <publisher> McGraw-Hill, </publisher> <address> New York, </address> <year> 1991. </year>
Reference-contexts: certain kinds of structures under given sets of conditions; browsing can proceed by exploring the logical structure tree; and retrieval can be based in whole or in part on the existence 1 of and relationships between logical structures. (This last can, of course, be combined with classical information retrieval techniques <ref> [6, 8, 16] </ref>.) Documents have an inherent layout structure, i.e. the character- and line-level marks on a page and their positions can be automatically described (in shape, if not meaning) precisely, and they consistently have a significance, by virtue of the fact that document layout is intended to convey meaning to
Reference: [7] <author> Hiromichi Fujisawa, Yasuaki Nakano, and Kiyomichi Kurino. </author> <title> Segmentation methods for character recognition: From segmentation to document structure analysis. </title> <booktitle> In Proceedings of the IEEE, </booktitle> <volume> volume 80, </volume> <pages> pages 1079-1092, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], <ref> [7, 20] </ref>, and [13]. The former two systems find logical document hierarchies consisting of paragraphs, sections, and subsections by parsing, based on knowledge of standard printers' formatting rules.
Reference: [8] <author> Marti A. Hearst and Christian Plaunt. </author> <title> Subtopic structuring for full-length document access. </title> <booktitle> In Proceedings of SIGIR, </booktitle> <address> Pittsburgh, PA, </address> <year> 1993. </year>
Reference-contexts: certain kinds of structures under given sets of conditions; browsing can proceed by exploring the logical structure tree; and retrieval can be based in whole or in part on the existence 1 of and relationships between logical structures. (This last can, of course, be combined with classical information retrieval techniques <ref> [6, 8, 16] </ref>.) Documents have an inherent layout structure, i.e. the character- and line-level marks on a page and their positions can be automatically described (in shape, if not meaning) precisely, and they consistently have a significance, by virtue of the fact that document layout is intended to convey meaning to
Reference: [9] <author> A. Jain and S. Bhattacharjee. </author> <title> Address block location on envelopes using gabor filters. </title> <journal> Pattern Recognition, </journal> <volume> 25(12), </volume> <year> 1992. </year>
Reference-contexts: As a result of this assumption, segmentation and classification are performed in the single step of finding the requisite layout structures. The systems in <ref> [9] </ref>, [12], [14], and [18] identify structures based on a flat set of divisions of pages of one narrow format type each. 1 The system in [3] learns to identify lexically similar structures; 1 These narrow formats include such types as envelopes and tables, which are typically quite highly and uniformly
Reference: [10] <author> Leslie Lamport. </author> <title> L a T E X: A Document Preparation System. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, </address> <year> 1986. </year>
Reference-contexts: when they write the rules themselves. 4 One effect of this is that the system would probably not perform well on a text like [2]; documents designed to violate human expectations fall outside the scope of this work. 5 For instance, in the L a T E X article style <ref> [10] </ref>, theorems and similar structures are entirely left-justified, but ordinary paragraphs have an indented first line. 3 Table 1: Characterizations of Current Structures Structure Primary Secondary Linguistic Symbolic Geometric Paragraph x x Heading x x x Section Body x Section x First Paragraph x x List Item x x List x
Reference: [11] <author> Masaaki Mizuno, Yoshitake Tsuji, Toshiyuki Tanaka, Haruhiko Tanaka, Masao Iwashita, and Tsutomu Temma. </author> <title> Document recognition system with layout structure generator. </title> <journal> NEC Research and Development, </journal> <volume> 32(2) </volume> <pages> 430-437, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in <ref> [11] </ref>, [7, 20], and [13]. The former two systems find logical document hierarchies consisting of paragraphs, sections, and subsections by parsing, based on knowledge of standard printers' formatting rules.
Reference: [12] <author> G. Nagy, S. Seth, and M. Vishwanathan. </author> <title> A prototype document image analysis system for technical journals. </title> <journal> Computer, </journal> <volume> 25(7), </volume> <year> 1992. </year>
Reference-contexts: As a result of this assumption, segmentation and classification are performed in the single step of finding the requisite layout structures. The systems in [9], <ref> [12] </ref>, [14], and [18] identify structures based on a flat set of divisions of pages of one narrow format type each. 1 The system in [3] learns to identify lexically similar structures; 1 These narrow formats include such types as envelopes and tables, which are typically quite highly and uniformly 2
Reference: [13] <author> Gilbert B. Porter and Emil V. Rainero. </author> <title> Document reconstruction: A system for recovering document structure from layout. </title> <booktitle> In Proceedings of the Conference on Electronic Publishing, </booktitle> <pages> pages 127-141, </pages> <year> 1992. </year>
Reference-contexts: These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], [7, 20], and <ref> [13] </ref>. The former two systems find logical document hierarchies consisting of paragraphs, sections, and subsections by parsing, based on knowledge of standard printers' formatting rules.
Reference: [14] <author> M. Armon Rahgozar, Zhigang Fan, and Emil V. Rainero. </author> <title> Tabular document recognition. </title> <booktitle> In SPIE Proceedings, </booktitle> <address> San Jose, </address> <month> February </month> <year> 1994. </year>
Reference-contexts: As a result of this assumption, segmentation and classification are performed in the single step of finding the requisite layout structures. The systems in [9], [12], <ref> [14] </ref>, and [18] identify structures based on a flat set of divisions of pages of one narrow format type each. 1 The system in [3] learns to identify lexically similar structures; 1 These narrow formats include such types as envelopes and tables, which are typically quite highly and uniformly 2 again,
Reference: [15] <author> Daniela Rus and Kristen Summers. </author> <title> Using white space for automated document structuring. </title> <booktitle> In Proceedings of the Workshop on Principles of Document Processing, </booktitle> <address> Seeheim, </address> <year> 1994. </year>
Reference-contexts: Our earlier work <ref> [15] </ref> has proposed an approach to segmentation based entirely on an analysis of the contours of text (i.e., the left and right white space); this paper proposes an approach to classification that relies minimally on symbolic and linguistic cues. <p> The details of the resulting algorithm are supplied in Subsection 3.3. Sample existing prototypes are given in Figure 1 3.1 Prototype Attributes 3.1.1 The Indentation Alphabet Earlier work has presented the indentation alphabet data structure for capturing the geometry of document segments <ref> [15] </ref>. An indentation alphabet provides a means of describing the text contours of a document portion. In essence, it consists of a set of symbols and their definitions, together with a set of matching rules.
Reference: [16] <author> Gerard Salton. </author> <title> Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, </address> <year> 1989. </year>
Reference-contexts: certain kinds of structures under given sets of conditions; browsing can proceed by exploring the logical structure tree; and retrieval can be based in whole or in part on the existence 1 of and relationships between logical structures. (This last can, of course, be combined with classical information retrieval techniques <ref> [6, 8, 16] </ref>.) Documents have an inherent layout structure, i.e. the character- and line-level marks on a page and their positions can be automatically described (in shape, if not meaning) precisely, and they consistently have a significance, by virtue of the fact that document layout is intended to convey meaning to
Reference: [17] <author> D. Sankoff and J. Kruskal. </author> <title> Time warps, string edits, and macromolecules: the theory and practice of sequence comparison. </title> <publisher> Addison-Wesley, </publisher> <year> 1983. </year>
Reference-contexts: not, however, considered a secondary structure; a structure with many children, of which one is a paragraph and the rest list items is probably a list that contains an interruption. 7 Geometry The gross geometric distance between a text block and a structure prototype is given by the Levenshtein distance <ref> [17] </ref> between the indentation alphabet representations; this is normalized by dividing by the sum of the lengths of the two representations. Context The context distance is the average of its the predecessor and successor distances; each of these is the average of the sub-attribute distances.
Reference: [18] <author> Dacheng Wang and Sargur N. Srihari. </author> <title> Classification of newspaper image blocks using texture analysis. Computer Vision, </title> <journal> Graphics, and Image Processing, </journal> <volume> 47 </volume> <pages> 327-352, </pages> <year> 1989. </year>
Reference-contexts: As a result of this assumption, segmentation and classification are performed in the single step of finding the requisite layout structures. The systems in [9], [12], [14], and <ref> [18] </ref> identify structures based on a flat set of divisions of pages of one narrow format type each. 1 The system in [3] learns to identify lexically similar structures; 1 These narrow formats include such types as envelopes and tables, which are typically quite highly and uniformly 2 again, these form
Reference: [19] <author> Gio Wiederhold. </author> <booktitle> Mediators in the architecture of future information systems. Computer, </booktitle> <pages> pages 38-49, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: As good internet navigation and resource discovery tools are developed, the text files accessible to a user through the internet will come to form an implicit distributed collection of documents in much the same way as other files will form an implicit database collection <ref> [19] </ref>. As the quantity of available information grows, however, so too does the probability of overwhelming a user; in order to use the internet document collection effectively, users will require sophisticated tools for manipulating its elements.
Reference: [20] <author> Hiroshi Yashiro, Tatsuya Murakami, Yoshihiro Shima, Yasuaki Nakano, and Hiromichi Fuji-sawa. </author> <title> A new method of document structure extraction using generic layout knowledge. </title> <booktitle> In International Workshop on Industrial Applications of Machine Intelligence and Vision, </booktitle> <address> Tokyo, </address> <month> April </month> <year> 1989. </year> <month> 13 </month>
Reference-contexts: These approaches are appropriate when the structures of interest include no nesting; all but [4, 5] and [3] also require that the documents of interest be of a known, highly structured type. More general systems are presented in [11], <ref> [7, 20] </ref>, and [13]. The former two systems find logical document hierarchies consisting of paragraphs, sections, and subsections by parsing, based on knowledge of standard printers' formatting rules.
References-found: 20

