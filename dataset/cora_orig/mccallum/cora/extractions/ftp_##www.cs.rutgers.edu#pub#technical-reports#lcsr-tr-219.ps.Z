URL: ftp://www.cs.rutgers.edu/pub/technical-reports/lcsr-tr-219.ps.Z
Refering-URL: http://www.cs.rutgers.edu/pub/technical-reports/
Root-URL: 
Abstract: dvitps ERROR: current.dvi @ oz.rutgers.edu Certain fonts that you requested in your dvi file could not be found on the system. In order to print your document, other fonts that are installed were substituted for these missing fonts. Below is a list of the substitutions that were made. /usr/local/lib/fonts/gf/cmbx12.518pk substituted for cmbx12.519pk 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Advanced Micro Devices, </author> <title> Saturn SXL Notebook Computer Functional Product Specification, Release Date 6/25/91, Revision 1.01. </title>
Reference-contexts: An interesting feature of current portable computers is that the computer may run in at least 2 modes, such as full on (CPU running at 25 MHz) and doze (CPU running at 3 MHz), in the AMD Saturn computer <ref> [1] </ref>. Switching between CPU modes and/or suspending or powering the hard disk may be controlled by software from within an application program. We refer to the ratio of the power consumed in energy saving mode to the power consumed in normal mode as the idling coefficient. <p> approach to the problem is to extend global query optimization techniques [34]. 3 Examples In this section, we present an example to show that the energy consumption of work optimal plans may be significantly higher (factors of 3-12) than the energy consumption of energy optimal plans. the AMD Saturn SXL <ref> [1] </ref>.
Reference: [2] <author> R. Alonso. </author> <title> "Query Optimization in Distributed Databases Through Load Balancing" PhD Dissertation, </title> <institution> Division of Computer Science, University of California, Berkeley, </institution> <year> 1986. </year>
Reference-contexts: The idea of compiling queries into multiple plans for a given SQL statement such that the plan chosen at execution time depended on the load at that time was proposed in <ref> [2] </ref>. The techniques discussed in this paper can be applied to the above scenario as well, and, in general, to multi-criterion optimization problems in which each criterion is an additive metric.
Reference: [3] <author> R. Alonso and S. Ganguly. </author> <title> "Query Optimization for Energy Efficiency in Mobile Environments", </title> <booktitle> In Proceedings of the 1993 International Workshop on Foundations of Models and Languages for Data and Objects, </booktitle> <address> Aigen, </address> <institution> Austria. 4 currently at AT&T Bell Labs, </institution> <note> on leave from UT, Austin. 21 </note>
Reference-contexts: The techniques presented in the paper can be used to optimize ad-hoc queries, i.e., queries that are executed only once for a given state of the client-server system. Optimization of ad-hoc queries is discussed in <ref> [3, 4] </ref>. Work is in progress [19] to validate the simulation results obtained using more accurate experiments. Future work includes extending our two dimensional algorithms to three and higher dimensional spaces.
Reference: [4] <author> R. Alonso and S.Ganguly. </author> <title> "Energy Efficient Query Optimization" In MITL Technical Report 33-92, </title> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: The techniques presented in the paper can be used to optimize ad-hoc queries, i.e., queries that are executed only once for a given state of the client-server system. Optimization of ad-hoc queries is discussed in <ref> [3, 4] </ref>. Work is in progress [19] to validate the simulation results obtained using more accurate experiments. Future work includes extending our two dimensional algorithms to three and higher dimensional spaces.
Reference: [5] <author> R. Alonso, E. M. Haber, and H. J. Korth. </author> <title> "A Database Interface for Mobile Computers", </title> <booktitle> In Proceedings of the 1992 Globecomm Workshop on Networking of Personal Communications Applications, </booktitle> <address> Orlando, Florida. </address>
Reference: [6] <author> R. Alonso and H. J. Korth. </author> <title> "Database System Issues in Nomadic Computing", </title> <booktitle> Proceedings of the 1993 ACM-SIGMOD Conference on the Management of Data. </booktitle>
Reference-contexts: 1 Introduction Computing with mobile machines introduces novel technical challenges in the area of database systems <ref> [6] </ref> and resurrects some issues in distributed database systems. In this paper, we study the ramifications of one important characteristic of mobile computing, namely, the reliance of portable computers on batteries as the power source, on query processing and optimization. <p> For current mobile machines, the idling coefficient lies between 0.1 to 0.6. The emerging architecture of a mobile computing system is that of a distributed system in which a collection of mobile clients communicate with a stationary (and powered) server <ref> [6] </ref>. We consider a scenario in which the mobile client participates in distributed query processing with the server. The appropriate optimization criterion in a mobile computing environment should take both energy consumed at the client and the resource utilization at the server into account.
Reference: [7] <author> P.M.G. Apers, A.R. Hevner and S.B. Yao. </author> <title> "Optimization algorithms for Distributed Queries", </title> <journal> IEEE Transactions on Software Engineering, Volume SE-9, </journal> <note> No 1,Janu ary 1983). </note>
Reference: [8] <author> B.R. Badrinath and T. Imielinski. </author> <title> "Replication and Mobility", </title> <booktitle> Proceedings of the 1992 Workshop on the Management of Replicated Data, Monterrey, </booktitle> <address> California. </address>
Reference: [9] <author> D.S. Batory. </author> " <title> Concepts for a Database System Synthesizer", </title> <booktitle> In Proceedings of the 1988 ACM Symposium on Principles of Database Systems. </booktitle>
Reference: [10] <author> R.E. Bellman. </author> <title> Dynamic Programming, </title> <publisher> Princeton University Press, </publisher> <year> 1957. </year>
Reference: [11] <author> P.A. Bernstein and D.M. Chiu. </author> <title> "Using Semi-Joins to Solve Relational Queries", </title> <journal> Journal of the ACM, </journal> <volume> 28:1, </volume> <year> 1981. </year>
Reference: [12] <author> W.W. Chu and P. Hurley. </author> <title> "Optimal Query Processing for Distributed Systems", </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-31:9, </volume> <month> Sept. </month> <year> 1982. </year>
Reference: [13] <author> D. Daniels, </author> <title> "Query Compilation in a Distributed Database System", </title> <type> IBM Technical Report RJ3423, 3/22/82. </type>
Reference-contexts: Our contributions are as follows: 1. We present bounds on the maximum energy saved by choosing the least energy plan over the least work plan (which is the plan of choice in standard distributed databases <ref> [13, 30, 31] </ref>). When the server is lightly loaded, we show that the maximum savings is no more than a factor of (idling coefficient) 1 . 2. <p> Section 4 discuses the cost model and the optimization criterion. In Section 5 we present bounds on the maximum benefit that can be incurred by optimizing for energy as opposed to the standard metric of total work <ref> [13, 30, 31] </ref>. Section 6 discusses the coverset, linearset and linear combinations algorithm. Section 7 presents the performance comparison. Finally, we conclude in Section 8. 2 Query Initiation Rules There are two different ways in which query execution may be initiated. <p> Clearly, option (b) is not always practical for general queries, and in practice the energy consumed would lie between those of (a) and (b); both numbers are listed in Figure 2. Even though the client plan is the optimal work plan <ref> [13, 30, 31] </ref>, as Figure 2 shows, the server plan is significantly more energy-efficient, between factors of 3 to 10, depending 6 Screen Full On Screen Backlight off Screen Dark Disk Spin Disk Susp. Disk Spin Disk Susp. Disk Spin Disk Susp. <p> The work done by a plan p, denoted by W (p) is defined as W (p) = W c (p) + W s (p) We assume that the estimation of W c and W s is done using a cost model similar to that used by System R* <ref> [13, 30, 31] </ref>. 4.2 The Optimization Criterion In this section, we discuss the optimization criterion. Let L denote the load at the server and B denote the battery energy level of the client at a specific time. Suppose a query is initiated at that time.
Reference: [14] <author> Eager. </author> <title> "Advances in Rechargeable Batteries Pace Portable Computer Growth", </title> <booktitle> In Proceedings of the 1991 Silicon Valley Personal Computer Conference. </booktitle>
Reference: [15] <author> R. Epstein, M. Stonebraker and E. Wong. </author> <title> "Distributed Query Processing in a Relational Database System", </title> <booktitle> Proceedings of the 1980 ACM SIGMOD Conference on Management of Data. </booktitle>
Reference: [16] <author> J.C. Freytag. </author> <title> "A rule-based view of query optimization", </title> <booktitle> In Proceedings of the 1987 ACM-SIGMOD Conference on the Management of Data. </booktitle>
Reference: [17] <author> S. Ganguly, W. Hasan and R. Krishnamurthy. </author> <title> "Query optimization for Parallel Executions", </title> <booktitle> In Proceedings of the 1992 ACM-SIGMOD Conference on Management of Data. </booktitle>
Reference-contexts: When the server is lightly loaded, we show that the maximum savings is no more than a factor of (idling coefficient) 1 . 2. Adaptation of Partial Order Dynamic Programming: The basic observation is that partial order dynamic programming <ref> [17, 18] </ref> may be adapted to find all plans that could possibly be optimal for a certain state of the client-server system. We show how to adapt the partial order dynamic programming strategy (p.o. dp) to this scenario such that the coverset of plans [17, 18] returned by p.o. dp is <p> is that partial order dynamic programming <ref> [17, 18] </ref> may be adapted to find all plans that could possibly be optimal for a certain state of the client-server system. We show how to adapt the partial order dynamic programming strategy (p.o. dp) to this scenario such that the coverset of plans [17, 18] returned by p.o. dp is the set of candidate optimal plans for a query. 3. Linear Combinations Algorithm: The coverset of plans plans obtained from a partial order dynamic programming is approximated by the linearset of the query. <p> Then p is a member of the coverset of the partial order 1 . 2 A partial order dynamic programming algorithm <ref> [17, 18] </ref> may be designed using the partial order 1 and extending the System R* optimizer design. 6.1 Linearset of a Query In this section, we discuss the concept of the linearset of a query, which is an approximation to the coverset.
Reference: [18] <author> S. Ganguly. </author> <title> "Parallel Evaluation of Deductive Database Queries", </title> <type> PhD Dissertation, </type> <institution> The University of Texas at Austin, </institution> <month> August </month> <year> 1992. </year> <month> 22 </month>
Reference-contexts: When the server is lightly loaded, we show that the maximum savings is no more than a factor of (idling coefficient) 1 . 2. Adaptation of Partial Order Dynamic Programming: The basic observation is that partial order dynamic programming <ref> [17, 18] </ref> may be adapted to find all plans that could possibly be optimal for a certain state of the client-server system. We show how to adapt the partial order dynamic programming strategy (p.o. dp) to this scenario such that the coverset of plans [17, 18] returned by p.o. dp is <p> is that partial order dynamic programming <ref> [17, 18] </ref> may be adapted to find all plans that could possibly be optimal for a certain state of the client-server system. We show how to adapt the partial order dynamic programming strategy (p.o. dp) to this scenario such that the coverset of plans [17, 18] returned by p.o. dp is the set of candidate optimal plans for a query. 3. Linear Combinations Algorithm: The coverset of plans plans obtained from a partial order dynamic programming is approximated by the linearset of the query. <p> Then p is a member of the coverset of the partial order 1 . 2 A partial order dynamic programming algorithm <ref> [17, 18] </ref> may be designed using the partial order 1 and extending the System R* optimizer design. 6.1 Linearset of a Query In this section, we discuss the concept of the linearset of a query, which is an approximation to the coverset.
Reference: [19] <author> A. Goel. </author> <title> "Multi-Criterion Query Optimization", </title> <type> Masters Thesis in Preparation, </type> <institution> De--partment of Electrical Engineering, Rutgers University. </institution>
Reference-contexts: In an actual experiment, the random estimation of costs would be replaced by calls to the cost model. An implementation of a cost model similar to that used by the System R* is under progress and will be used to verify the conclusions of the simulations <ref> [19] </ref>. The linearset for the query is computed from the coverset. <p> We conclude that the linear comb algorithm may be used as a practical choice for query compilation. A detailed performance evaluation using the cost model of System R* is currently under implementation in <ref> [19] </ref>. 7.3 Runtime selection of the optimal plan In this section, we discuss the algorithm to select the optimal plan at run time. <p> The techniques presented in the paper can be used to optimize ad-hoc queries, i.e., queries that are executed only once for a given state of the client-server system. Optimization of ad-hoc queries is discussed in [3, 4]. Work is in progress <ref> [19] </ref> to validate the simulation results obtained using more accurate experiments. Future work includes extending our two dimensional algorithms to three and higher dimensional spaces. Acknowledgements We thank Tony Dahbura, Peter Honeyman, and Brian Marsh at MITL, Panasonic, for their help in gathering power consumption information.
Reference: [20] <author> N. Goodman, P.A. Bernstein, E.Wong, C.L. Reeve and J.B. Rothnie. </author> <title> "Query Processing in SDD-1: A System for Distributed Databases," </title> <journal> ACM Transactions on Database Systems. </journal>
Reference: [21] <author> G. Graefe and W.J. McKenna. </author> <title> "The Volcano Optimizer Generator:Extensibility and Efficient Search", </title> <booktitle> In Proceedings of the 1993 IEEE Conference on Data Engineering. </booktitle>
Reference: [22] <author> GRID, </author> <title> GRIDPAD Radio Module Specifications, </title> <year> 1992. </year>
Reference: [23] <author> W. Hong and M. Stonebraker, </author> <booktitle> "Optimization of Parallel Query Execution Plans in XPRS" Proceedings of the 1991 International Conference on Parallel and Distributed Information Systems </booktitle>
Reference: [24] <author> T. Imielinski and B. R. Badrinath. </author> <title> "Querying in Highly Mobile Distributed Environments", </title> <booktitle> Proceedings of the 1992 Very Large Database Systems Conference. </booktitle>
Reference: [25] <author> T. Imielinski and B. R. Badrinath. </author> <title> "Data Management for Mobile Computing", </title> <booktitle> Sigmod Record, </booktitle> <month> March </month> <year> 1993. </year>
Reference: [26] <author> Y.E. Ioannidis and Y.C. Kang. </author> <title> "Randomized Algorithms for Optimizing Large Join Queries", </title> <booktitle> In Proceedings of the 1990 ACM-SIGMOD Conference on Management of Data. </booktitle>
Reference: [27] <author> Y.E. Ioannidis and Y.C. Kang. </author> <title> "Query Optimization by Simulated Annealing". </title> <booktitle> In Proceedings of the 1987 ACM-SIGMOD Conference on Management of Data. </booktitle>
Reference: [28] <author> M. Jarke and J. Koch. </author> <title> "Query Optimization in Database Systems", </title> <journal> In ACM Computing Surveys, </journal> <volume> 18(2), </volume> <month> June </month> <year> 1984. </year>
Reference: [29] <author> R. Krishnamurthy, H. Boral, and C. Zaniolo, </author> <title> "Optimization of Nonrecursive Queries", </title> <booktitle> In Proceedings of the 1986 Very Large Database Systems Conference. </booktitle>
Reference: [30] <author> G.H. Lohman et. al. </author> <title> "Query Processing in R*", In Query Processing in Database Systems, </title> <editor> (Kim, Batory and Reiner(eds.), </editor> <booktitle> 1985), </booktitle> <publisher> Springer-Verlag, Hiedelberg. </publisher>
Reference-contexts: Our contributions are as follows: 1. We present bounds on the maximum energy saved by choosing the least energy plan over the least work plan (which is the plan of choice in standard distributed databases <ref> [13, 30, 31] </ref>). When the server is lightly loaded, we show that the maximum savings is no more than a factor of (idling coefficient) 1 . 2. <p> Section 4 discuses the cost model and the optimization criterion. In Section 5 we present bounds on the maximum benefit that can be incurred by optimizing for energy as opposed to the standard metric of total work <ref> [13, 30, 31] </ref>. Section 6 discusses the coverset, linearset and linear combinations algorithm. Section 7 presents the performance comparison. Finally, we conclude in Section 8. 2 Query Initiation Rules There are two different ways in which query execution may be initiated. <p> Clearly, option (b) is not always practical for general queries, and in practice the energy consumed would lie between those of (a) and (b); both numbers are listed in Figure 2. Even though the client plan is the optimal work plan <ref> [13, 30, 31] </ref>, as Figure 2 shows, the server plan is significantly more energy-efficient, between factors of 3 to 10, depending 6 Screen Full On Screen Backlight off Screen Dark Disk Spin Disk Susp. Disk Spin Disk Susp. Disk Spin Disk Susp. <p> The work done by a plan p, denoted by W (p) is defined as W (p) = W c (p) + W s (p) We assume that the estimation of W c and W s is done using a cost model similar to that used by System R* <ref> [13, 30, 31] </ref>. 4.2 The Optimization Criterion In this section, we discuss the optimization criterion. Let L denote the load at the server and B denote the battery energy level of the client at a specific time. Suppose a query is initiated at that time.
Reference: [31] <author> L.F. Mackert and G.M. Lohman. </author> <title> "R* Optimizer Validation and Performance Evaluation for Local Queries", </title> <booktitle> Proceedings of the 1986 Very Large Database Systems Conference. </booktitle>
Reference-contexts: Our contributions are as follows: 1. We present bounds on the maximum energy saved by choosing the least energy plan over the least work plan (which is the plan of choice in standard distributed databases <ref> [13, 30, 31] </ref>). When the server is lightly loaded, we show that the maximum savings is no more than a factor of (idling coefficient) 1 . 2. <p> Section 4 discuses the cost model and the optimization criterion. In Section 5 we present bounds on the maximum benefit that can be incurred by optimizing for energy as opposed to the standard metric of total work <ref> [13, 30, 31] </ref>. Section 6 discusses the coverset, linearset and linear combinations algorithm. Section 7 presents the performance comparison. Finally, we conclude in Section 8. 2 Query Initiation Rules There are two different ways in which query execution may be initiated. <p> Clearly, option (b) is not always practical for general queries, and in practice the energy consumed would lie between those of (a) and (b); both numbers are listed in Figure 2. Even though the client plan is the optimal work plan <ref> [13, 30, 31] </ref>, as Figure 2 shows, the server plan is significantly more energy-efficient, between factors of 3 to 10, depending 6 Screen Full On Screen Backlight off Screen Dark Disk Spin Disk Susp. Disk Spin Disk Susp. Disk Spin Disk Susp. <p> The work done by a plan p, denoted by W (p) is defined as W (p) = W c (p) + W s (p) We assume that the estimation of W c and W s is done using a cost model similar to that used by System R* <ref> [13, 30, 31] </ref>. 4.2 The Optimization Criterion In this section, we discuss the optimization criterion. Let L denote the load at the server and B denote the battery energy level of the client at a specific time. Suppose a query is initiated at that time.
Reference: [32] <author> C. O'Malley. </author> <title> "The SL Germination Comparison Report" Pen, </title> <journal> The Magazine of Pen-based Computing Issue 7, </journal> <month> May/June </month> <year> 1992. </year>
Reference-contexts: In this paper, we study the ramifications of one important characteristic of mobile computing, namely, the reliance of portable computers on batteries as the power source, on query processing and optimization. Normal use of such machines cause batteries to run out of power within several hours <ref> [32] </ref> and heavy use may substantially decrease this period. Moreover, significant advances in battery technology do not seem to be forthcoming.
Reference: [33] <author> P. Selinger et. al. </author> <title> "Access Path Selection in a Relational Database Management System", </title> <booktitle> In Proceedings of the 1979 ACM SIGMOD Conference on Management of Data. </booktitle> <pages> 23 </pages>
Reference: [34] <author> T.K. Sellis. </author> <title> "Global Query Optimization", </title> <booktitle> In Proceedings of the 1986 ACM SIGMOD Conference on Management of Data. </booktitle>
Reference-contexts: Hence, the overhead imposed by the server initiation rule on the server is not overwhelming. An alternative approach to the problem is to extend global query optimization techniques <ref> [34] </ref>. 3 Examples In this section, we present an example to show that the energy consumption of work optimal plans may be significantly higher (factors of 3-12) than the energy consumption of energy optimal plans. the AMD Saturn SXL [1].
Reference: [35] <author> A. Swami and A. Gupta. </author> <title> "Optimization of Large Join Queries", </title> <booktitle> In Proceedings of the 1988 ACM SIGMOD Conference on Management of Data. </booktitle>
Reference: [36] <author> A. Swami. </author> <title> "Optimization of Large Join Queries", </title> <type> PhD Thesis, </type> <institution> Stanford University 1989. </institution>
Reference: [37] <author> E. Wong and K. Youssefi, </author> <title> "Decomposition |a Strategy for Query Processing", </title> <journal> ACM Transactions on Database Systems,1,3, </journal> <month> September </month> <year> 1976. </year> <month> 24 </month>
References-found: 37

