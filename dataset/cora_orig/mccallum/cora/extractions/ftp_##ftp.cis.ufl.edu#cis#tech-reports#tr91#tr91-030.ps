URL: ftp://ftp.cis.ufl.edu/cis/tech-reports/tr91/tr91-030.ps
Refering-URL: http://www.cis.ufl.edu/tech-reports/tech-reports/tr91-abstracts.html
Root-URL: http://www.cis.ufl.edu
Title: Deleting Vertices To Bound Path Length  
Author: Doowon Paik+ Sudhakar Reddy++ Sartaj Sahni+ 
Keyword: And Phrases Vertex deletion, directed acyclic graphs, rooted trees, series-parallel graphs, NP-hard  
Note: Research supported, in part, by the National Science Foundation under grants DCR-84-20935 and MIPS-86-17374. Research supported, in part, by SDIO/IST Contract No. N00014-90-J-1793 managed by US Office of Naval Research.  
Affiliation: University of Florida University of Iowa University of Florida  
Abstract: We examine the vertex deletion problem for weighted directed acyclic graphs (wdags). The objective is to delete the fewest number of vertices so that the resulting wdag has no path of length &gt; d. Several simplified versions of this problem are shown to be NP-hard. However, the problem is solved in linear time when the wdag is a rooted tree and in quadratic time when the wdag is a series-parallel graph. 
Abstract-found: 1
Intro-found: 1
Reference: [GARE79] <author> M. R. Garey, and D. S. Johnson, </author> <title> "Computers and Intractability ", W. </title> <editor> H. </editor> <publisher> Freeman and Company, </publisher> <address> San Francisco, </address> <year> 1979. </year>
Reference: [HORO78] <author> E. Horowitz, and S. Sahni, </author> <title> "Fundamentals of Computer Algorithms", </title> <publisher> Computer Science Press, </publisher> <address> Maryland, </address> <year> 1978. </year>
Reference: [HORO90] <author> E. Horowitz, and S. Sahni, </author> <title> "Fundamentals of Data Structures in Pascal", </title> <publisher> Computer Science Press, </publisher> <address> Maryland, </address> <year> 1990. </year>
Reference-contexts: The algorithm is a simple postorder <ref> [HORO90] </ref> traversal of the tree. During this traversal we compute, for each node x, the maximum delay, D (x), from x to any other node in its subtree.
Reference: [KRIS79] <author> M. Krishnamoorthy and N. Deo, </author> <title> "Node deletion NP-complete problems", </title> <journal> SIAM Jr on Computing, </journal> <volume> Vol 8, No 4, </volume> <year> 1979, </year> <pages> pp 619-625. </pages>
Reference-contexts: 1 Introduction A variety of vertex deletion problems formulated on graphs and digraphs are known to be NP-hard <ref> [KRIS79] </ref>. In this paper, we propose a new formulation of the vertex deletion problem that is applicable to edge weighted directed acyclic graphs (wdag).
Reference: [PAIK90] <author> D. Paik, S. Reddy, and S. Sahni, </author> <title> "Vertex Splitting In Dags And Applications To Partial Scan Designs And Lossy Circuits", </title> <institution> University of Florida, </institution> <type> Technical Report, </type> <year> 1990. </year> - 
Reference-contexts: This problem is a natural variant of the vertex splitting problem for weighted wdags that we studied in <ref> [PAIK90] </ref>. In the vertex splitting problem, we are split the fewest number of vertices so that the resulting wdag has no path of length &gt;d. When a vertex is split, two vertices are created. <p> We note that this quadratic algorithm is easily adapted to the vertex splitting problem on series-parallel graphs. This adaptation does not affect its complexity. Likewise, the backtracking algorithm and heuristics proposed in <ref> [PAIK90] </ref> for the vertex splitting problem may be easily adapted to the vertex deletion problem of this paper. 2 Terminology Let G = (V, E,w) be a weighted directed acyclic graph with vertex set V, edge set E, and edge weighting funtion w. w (i,j) is the weight of the edge <p> An example is given in Figure 6. - _______________________________________________________________________________ To show that DVDP for multistage graphs is NP-hard, we use the NP-hardness of the problem 2-3SAT <ref> [PAIK90] </ref> defined as: Input: A boolean function F = C 1 C 2 . . . C n in n variables x 1 , x 2 , ... , x n . Each clause C i is the disjunction of either two or three literals. <p> For trees we have developed a linear time DVDP algorithm and for series-parallel graphs with n vertices we have developed an O (n 2 ) time algorithm. Our algorithm for series-parallel graphs is easily adapted to solve the wdag vertex splitting problem <ref> [PAIK90] </ref> for series-parallel graphs in O (n 2 ) time. For general graphs, the heuristics proposed in [PAIK90] for the vertex splitting problem may be adapted to the DVDP problem. <p> Our algorithm for series-parallel graphs is easily adapted to solve the wdag vertex splitting problem <ref> [PAIK90] </ref> for series-parallel graphs in O (n 2 ) time. For general graphs, the heuristics proposed in [PAIK90] for the vertex splitting problem may be adapted to the DVDP problem.
References-found: 5

