URL: http://janowiec.cs.iastate.edu/~lavalle/papers/wads97.ps
Refering-URL: http://janowiec.cs.iastate.edu/
Root-URL: http://www.cs.iastate.edu
Email: fguibas,latombe,lavalle,dlin,rajeevg@cs.stanford.edu  
Title: Visibility-Based Pursuit-Evasion in a Polygonal Environment  
Author: Leonidas J. Guibas, Jean-Claude Latombe, Steven M. LaValle, David Lin and Rajeev Motwani 
Address: Stanford, CA 94305 USA  
Affiliation: Computer Science Department Stanford University  
Abstract: This paper addresses the problem of planning the motion of one or more pursuers in a polygonal environment to eventually "see" an evader that is unpredictable, has unknown initial position, and is capable of moving arbitrarily fast. This problem was first introduced by Suzuki and Yamashita. Our study of this problem is motivated in part by robotics applications, such as surveillance with a mobile robot equipped with a camera that must find a moving target in a cluttered workspace. A few bounds are introduced, and a complete algorithm is presented for computing a successful motion strategy for a single pursuer. For simply-connected free spaces, it is shown that the minimum number of pursuers required is fi(lg n). For multiply-connected free spaces, the bound is fi( h + lg n) pursuers for a polygon that has n edges and h holes. A set of problems that are solvable by a single pursuer and require a linear number of recontaminations is shown. The complete algorithm searches a finite cell complex that is constructed on the basis of critical information changes. It has been implemented and computed examples are shown.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> T. Ba~sar and G. J. Olsder. </author> <title> Dynamic Noncooperative Game Theory. </title> <publisher> Academic Press, </publisher> <address> London, </address> <year> 1982. </year>
Reference-contexts: Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications such as air traffic control <ref> [1] </ref>, military strategy [10], and trajectory tracking [9]. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games. Once these constraints are introduced, the problem inherits the additional complications that arise in geometric motion planning.
Reference: 2. <author> D. Bienstock and P. Seymour. </author> <title> Monotonicity in graph searching. </title> <journal> J. Algorithms, </journal> <volume> 12 </volume> <pages> 239-245, </pages> <year> 1991. </year>
Reference-contexts: It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in [11] that no recontamination is necessary (a shorter proof of this appears in <ref> [2] </ref>). In [22] a free space was given that requires two recontaminations, which at least established that recontamination is generally necessary for visibility-based pursuit evasion.
Reference: 3. <author> B. Chazelle. </author> <title> A theorem on polygon cutting with applications. </title> <booktitle> In Proc. 23rd Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 339-349, </pages> <year> 1982. </year>
Reference-contexts: Recall that for any simple polygon, a pair of vertices can always be connected so that polygon is partitioned into two regions, each with at least one third of the edges of the original polygon <ref> [3] </ref>. This implies that F can be recursively partitioned until a triangulation is constructed, and each triangular region only requires O (lg n) recombinations before F is obtained (i.e., the recursion depth is logarithmic in n).
Reference: 4. <author> W.-P. Chin and S. Ntafos. </author> <title> Optimum watchman routes. </title> <journal> Information Processing Letters, </journal> <volume> 28 </volume> <pages> 39-44, </pages> <year> 1988. </year>
Reference-contexts: Far fewer guards are needed when they are allowed to move and search for an evader; however, the required motion strategies can become quite complex. A closely related art gallery variant is the watchman tour problem <ref> [4] </ref>. In this case a minimum-length closed path is computed such that any point in the polygon is visible from some point along the path.
Reference: 5. <author> D. Crass, I. Suzuki, and M. Yamashita. </author> <title> Searching for a mobile intruder in a corridor the open edge variant of the polygon search problem. </title> <journal> Int. J. Comput. Geom. & Appl., </journal> <volume> 5(4) </volume> <pages> 397-412, </pages> <year> 1995. </year>
Reference-contexts: In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in <ref> [5, 22] </ref>. It was stated in [21] that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type. <p> The final theorem of this section pertains to the class of free spaces that can be searched by a single pursuer. A similar result is also obtained in <ref> [5] </ref>. It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in [11] that no recontamination is necessary (a shorter proof of this appears in [2]).
Reference: 6. <author> M. Erdmann. </author> <title> Randomization for robot tasks: Using dynamic programming in the space of knowledge states. </title> <journal> Algorithmica, </journal> <volume> 10 </volume> <pages> 248-291, </pages> <year> 1993. </year>
Reference-contexts: Let the information space, I, represent the set of possible information states. The information space is a standard representational tool for problems that have imperfect state information, and has been useful for other motion planning problems <ref> [6, 12] </ref>.
Reference: 7. <author> L. Guibas and J. Stolfe. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> AMC Trans. Graphics, </journal> <volume> 4(2) </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference-contexts: Most problems we encountered were solved in a few seconds or less. The implementation uses the quad-edge structure from <ref> [7] </ref> to maintain the topological ordering of the conservative cells. The search strategy is Dijkstra's shortest path algorithm, in which the distance is measured from the adjacent cell centroids. Figure 5 shows two computed examples.
Reference: 8. <author> L. J. Guibas, R. Motwani, and P. Raghavan. </author> <title> The robot localization problem. </title> <editor> In K. Goldberg, D. Halperin, J.-C. Latombe, and R. Wilson, editors, </editor> <booktitle> Proc. 1st Workshop on Algorithmic Foundations of Robotics, </booktitle> <pages> pages 269-282. </pages> <address> A.K. Peters, Welles-ley, MA, </address> <year> 1995. </year>
Reference-contexts: Hence, a cell decomposition that maintains the same corresponding gap edges will only contain conservative cells. The idea is to partition the free space into convex cells by identifying critical places at which edge visibility changes. A decomposition of this type has been used for robot localization in <ref> [8, 23] </ref>, and generates O (n 3 ) cells in the worst case for a simple polygon (which is always true if H (F ) = 1). The free space can be sufficiently partitioned in our case by extending rays in the three general cases.
Reference: 9. <author> O. Hajek. </author> <title> Pursuit Games. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1975. </year>
Reference-contexts: Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications such as air traffic control [1], military strategy [10], and trajectory tracking <ref> [9] </ref>. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games. Once these constraints are introduced, the problem inherits the additional complications that arise in geometric motion planning.
Reference: 10. <author> R. Isaacs. </author> <title> Differential Games. </title> <publisher> Wiley, </publisher> <address> New York, NY, </address> <year> 1965. </year>
Reference-contexts: Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications such as air traffic control [1], military strategy <ref> [10] </ref>, and trajectory tracking [9]. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games. Once these constraints are introduced, the problem inherits the additional complications that arise in geometric motion planning.
Reference: 11. <author> A. S. Lapaugh. </author> <title> Recontamination does not help to search a graph. </title> <journal> J. ACM, </journal> <volume> 40(2) </volume> <pages> 224-245, </pages> <month> April </month> <year> 1993. </year>
Reference-contexts: This result is surprising because pursuit-evasion in a graph is known not to require any recontaminations <ref> [11] </ref>. Consider the problem of determining the minimum number of pursuers, H (F ), required to find an evader in a given free space F . This number will generally depend on both the topological and geometric complexity of F . <p> A similar result is also obtained in [5]. It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in <ref> [11] </ref> that no recontamination is necessary (a shorter proof of this appears in [2]). In [22] a free space was given that requires two recontaminations, which at least established that recontamination is generally necessary for visibility-based pursuit evasion.
Reference: 12. <author> S. M. LaValle. </author> <title> A Game-Theoretic Framework for Robot Motion Planning. </title> <type> PhD thesis, </type> <institution> University of Illinois, Urbana, IL, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Let the information space, I, represent the set of possible information states. The information space is a standard representational tool for problems that have imperfect state information, and has been useful for other motion planning problems <ref> [6, 12] </ref>.
Reference: 13. <author> S. M. LaValle, D. Lin, L. J. Guibas, J.-C. Latombe, and R. Motwani. </author> <title> Finding an unpredictable target in a workspace with obstacles. </title> <booktitle> In Prof. IEEE Int'l Conf. on Robotics and Automation, </booktitle> <year> 1997. </year>
Reference-contexts: A complete algorithm for H (F ) = 1 is detailed in this paper, and the general techniques apply to the case in which H (F ) &gt; 1. In related work <ref> [13] </ref> we have developed a greedy algorithm that efficiently solves many multiple-pursuer problems. Because the position of the evader is unknown, one does not have direct access to the state at a given time.
Reference: 14. <author> R. J. Lipton and R. E. Tarjan. </author> <title> A separator theorem for planar graphs. </title> <journal> SIAM Journal of Applied Mathematics, </journal> <volume> 36 </volume> <pages> 177-189, </pages> <year> 1979. </year>
Reference-contexts: Consider the dual graph of the triangulation, which has O (n) edges and vertices. Take the subgraph induced by taking only the vertices that correspond to trichromatic triangles in the original triangulation. The planar graph separator theorem <ref> [14] </ref> implies that at most O ( p h) edges can be chosen to partition the graph into two portions with at least one third of the edges on each side of the partition.
Reference: 15. <author> F. Makedon and I. H. Sudborough. </author> <title> Minimizing width in linear layouts. </title> <booktitle> In Proc. 10th ICALP, Lecture Notes in Computer Science 154, </booktitle> <pages> pages 478-490. </pages> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth <ref> [15, 17] </ref>. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications such as air traffic control [1], military strategy [10], and trajectory tracking [9]. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games. <p> Let the edges of G k connect any two vertices for which one coordinate differs by one unit (i.e., a standard four-neighborhood). The cutwidth of G k is k. It is established in <ref> [15] </ref> that for all graphs G, the search number S (G) is related to the cutwidth as S (G) CW (G) bdeg (G)=2cS (G), in which deg (G) is the maximum vertex degree of G.
Reference: 16. <author> N. Megiddo, S. L. Hakimi, M. R. Garey, D. S. Johnson, and C. H. Papadimitriou. </author> <title> The complexity of searching a graph. </title> <journal> J. ACM, </journal> <volume> 35(1) </volume> <pages> 18-44, </pages> <month> January </month> <year> 1988. </year>
Reference-contexts: Interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [16, 19] </ref>. The search number of a graph refers to the minimum number of pursers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [15, 17]. <p> Some results from graph searching will first be described and utilized to construct difficult worst-case problem instances. Let Parsons' problem refer to the graph-searching problem presented in <ref> [16, 19] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader.
Reference: 17. <author> B. Monien and I. H. Sudborough. </author> <title> Min cut is NP-complete for edge weighted graphs. </title> <journal> Theoretical Computer Science, </journal> <volume> 58 </volume> <pages> 209-229, </pages> <year> 1988. </year>
Reference-contexts: The search number of a graph refers to the minimum number of pursers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth <ref> [15, 17] </ref>. Pursuit-evasion scenarios in continuous spaces have arisen in a variety of applications such as air traffic control [1], military strategy [10], and trajectory tracking [9]. Although interesting decision problems arise through the differential motion models, geometric free-space constraints are usually not considered in classical pursuit-evasion games. <p> A variety of simple, heuristic algorithms can be developed that might use more pursuers than necessary. The general problem is intractable if P 6= N P : Theorem 8. Computing H (F ) is NP-hard. Proof: It is shown in <ref> [17] </ref> that Parsons' problem for a planar graph with maximum vertex degree 3 is NP-complete (i.e., computing the search number, S (G) ).
Reference: 18. <author> J. O'Rourke. </author> <title> Art Gallery Theorems and Algorithms. </title> <publisher> Oxford University Press, </publisher> <address> New York, NY, </address> <year> 1987. </year>
Reference-contexts: A moving visibility polygon in a polygonal environment adds geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [18, 21] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible.
Reference: 19. <author> T. D. Parsons. </author> <title> Pursuit-evasion in a graph. </title> <editor> In Y. Alani and D. R. Lick, editors, </editor> <booktitle> Theory and Applcation of Graphs, </booktitle> <pages> pages 426-441. </pages> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1976. </year>
Reference-contexts: Interesting results have been obtained for pursuit-evasion in a graph, in which the pursuers and evader can move from vertex to vertex until eventually a pursuer and evader lie in the same vertex <ref> [16, 19] </ref>. The search number of a graph refers to the minimum number of pursers needed to solve a pursuit-evasion problem, and has been closely related to other graph properties such as cutwidth [15, 17]. <p> Some results from graph searching will first be described and utilized to construct difficult worst-case problem instances. Let Parsons' problem refer to the graph-searching problem presented in <ref> [16, 19] </ref>. The task is to specify the number of pursuers required to find an evader that can execute continuous motions along the edges of a graph. Instead of using visibility, capture is achieved when one of the pursuers "touches" the evader. <p> In this case and in similar cases, the pursuer that is fixed in the geometric problem can clear the corresponding edge by traveling between its endpoints in G; thus, the graph problem can still be solved using the same number of pursuers. 2 This theorem, from <ref> [19] </ref>, is useful for proving Theorem 4: Lemma 3. (Parsons) Let G be a tree. <p> There exist simply-connected free spaces F with n edges such that H (F ) = (lg n). Proof: Using Lemma 3, a tree, G, can be constructed recursively that has a constant branching factor of three, height N 1, and requires N pursuers (an example is given in <ref> [19] </ref>). By Lemma 2, an equivalent geometric instance can be constructed for any N . 2 Theorem 4 together imply a tight logarithmic bound, H (F ) = fi (lg n). Next consider the class of problems for which F has h holes. a. b.
Reference: 20. <author> J. T. Schwartz and M. Sharir. </author> <title> On the piano movers' problem: III. Coordinating the motion of several independent bodies. </title> <journal> Int. J. Robot. Res., </journal> <volume> 2(3) </volume> <pages> 97-140, </pages> <year> 1983. </year>
Reference-contexts: We next describe a general mechanism for defining critical information changes. This is inspired in part by a standard approach used in motion planning, which is to preserve completeness by using a decomposition of the configuration space that is constructed by analyzing critical events. For example, in <ref> [20] </ref> a cell decomposition is determined by analyzing the contact manifolds in a composite configuration space that is generated by the positions of several disks in the plane. The next definition describes an information invariance property, which allows the information space, I, to be partitioned into equivalence classes.
Reference: 21. <author> T. Shermer. </author> <title> Recent results in art galleries. </title> <journal> Proc. IEEE, </journal> <volume> 80(9) </volume> <pages> 1384-1399, </pages> <month> Septem-ber </month> <year> 1992. </year>
Reference-contexts: A moving visibility polygon in a polygonal environment adds geometric information that must be utilized, and also leads to connections with the static art gallery problems <ref> [18, 21] </ref>. In the limiting case, art gallery results serve as a loose upper bound on the number of pursuers by allowing a covering of the free space by static guards, guaranteeing that any evader will be immediately visible. <p> In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in [5, 22]. It was stated in <ref> [21] </ref> that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type.
Reference: 22. <author> I. Suzuki and M. Yamashita. </author> <title> Searching for a mobile intruder in a polygonal region. </title> <journal> SIAM J. Comput., </journal> <volume> 21(5) </volume> <pages> 863-888, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: In our case, however, the pursuers have the additional burden of ensuring that an evader cannot "sneak" to a portion of the environment that has already been explored. The problem that we consider and other variations have been considered previously in <ref> [5, 22] </ref>. It was stated in [21] that it remained an interesting challenge to determine if a polygon is searchable by a single pursuer. Several applications can be envisioned for problems and motion strategies of this type. <p> Consider the problem of determining the minimum number of pursuers, H (F ), required to find an evader in a given free space F . This number will generally depend on both the topological and geometric complexity of F . In <ref> [22] </ref> a class of simple polygons is identified for which a single pursuer suffices (referred to as "hedgehogs"). <p> It states that there exist examples that require recontaminating some portion of the free space a linear number of times. This result is surprising because for Parsons' problem it was shown in [11] that no recontamination is necessary (a shorter proof of this appears in [2]). In <ref> [22] </ref> a free space was given that requires two recontaminations, which at least established that recontamination is generally necessary for visibility-based pursuit evasion. <p> The complexity of our complete algorithm also remains open. It also remains an interesting pursuit to attempt to characterize the set of simple polygons such that H (F ) = 1; interesting subsets have been characterized in <ref> [22] </ref>, and our information space concepts might be useful in this endeavor. Information space concepts were used to provide a natural characterization of the unique problem states. The visibility-based pursuit-evasion problem was Fig. 5. Two computed examples are shown, each with three snapshots of the solution.

References-found: 22

