URL: http://www.arch.su.edu.au/~andres/kbs96.ps
Refering-URL: http://www.cs.cmu.edu/afs/cs/project/prodigy/Web/Mixed-init/Read-group/
Root-URL: 
Title: Design by Interactive Exploration Using Memory-Based Techniques  
Author: Andres Gomez de Silva Garza Mary Lou Maher 
Address: Sydney NSW 2006 Australia  
Affiliation: Key Centre of Design Computing Department of Architectural and Design Science University of  
Abstract: One of the characteristics of design is that designers rely extensively on past experience in order to create new designs. Because of this, memory-based techniques from artificial intelligence, which help store, organise, retrieve, and reuse experiential knowledge held in memory, are good candidates for aiding designers. Another characteristic of design is the phenomenon of exploration in the early stages of design configuration. A designer begins with an ill-structured, partially defined, problem specification, and through a process of exploration gradually refines and modifies it as his/her understanding of the problem improves. In this paper we describe demex, an interactive computer-aided design system that employs memory-based techniques to help its users explore the design problems they pose to the system, in order to acquire a better understanding of the requirements of the problems. demex has been applied in the domain of structural design of buildings. 
Abstract-found: 1
Intro-found: 1
Reference: [Gero 1990] <author> J. Gero. </author> <title> Design Prototypes: A Knowledge Representation Schema for Design. </title> <journal> AI Magazine, </journal> <pages> 26-36. </pages> <month> Winter </month> <year> 1990. </year>
Reference-contexts: Design variables can describe structural, functional or behavioural aspects of a case or model. This characterisation follows from research on the representation of design knowledge as prototypes, as described in <ref> [Gero 1990] </ref>. The use of function, behaviour, and structure attributes assists in defining the design experience 5 beyond the description of the solution, since function and behaviour capture some of the intent and/or semantics of the design, not just the physical characteristics captured by structure.
Reference: [Goel and Pirolli 1989] <author> V. Goel and P. Pirolli. </author> <title> Motivating the Notion of Generic Design within Information Processing Theory: The Design Problem Space. </title> <journal> AI Magazine, </journal> <pages> 18-36. </pages> <month> Spring </month> <year> 1989. </year>
Reference: [Kolodner 1984] <author> J.L. Kolodner. </author> <title> Retrieval and Organizational Strategies in Conceptual Memory: A Computer Model. </title> <publisher> Lawrence Erlbaum Associates. </publisher> <year> 1984. </year>
Reference-contexts: Said a different way, design problems are generally underspecified at the inception of the design process; the initial, conceptual, phase of design helps to elaborate on the problem <ref> [Kolodner 1984] </ref> to identify important aspects of the problem that were not captured in the original specification. One source of knowledge that helps perform this problem reformulation is generic knowledge about the domain of the problems that are being solved.
Reference: [Maher 1987] <author> M.L. Maher. </author> <title> Engineering Design Synthesis: A Domain Independent Representation. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> 1(3), </volume> <pages> 207-213. </pages> <year> 1987. </year>
Reference-contexts: In this domain, cases represent the structural designs of specific buildings (or parts of buildings), and models represent classes of structural systems and subsystems used in buildings. This work builds on our previous work on edesyn <ref> [Maher 1987] </ref>, a generalised system decomposition approach to design synthesis (ie., model-based reasoning); cadsyn [Maher and Zhang 1993], a constraint satisfaction approach to case-based reasoning; and case-cad [Maher and Balachandran 1994a, 1994b] [Maher, Balachandran, and Zhang 1995], a multimedia case-based retrieval system. demex differs from these systems because it focuses on
Reference: [Maher and Balachandran 1994a] <author> M.L. Maher and B. Balachandran. </author> <title> Multimedia Approach to Case-Based Structural Design. </title> <journal> Journal of Computing in Civil Engineering, </journal> <volume> Vol. 8 No. 3, </volume> <pages> 359-376, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: This work builds on our previous work on edesyn [Maher 1987], a generalised system decomposition approach to design synthesis (ie., model-based reasoning); cadsyn [Maher and Zhang 1993], a constraint satisfaction approach to case-based reasoning; and case-cad <ref> [Maher and Balachandran 1994a, 1994b] </ref> [Maher, Balachandran, and Zhang 1995], a multimedia case-based retrieval system. demex differs from these systems because it focuses on the exploration of memory for defining and elaborating design specifications, using both a model memory and a case memory.
Reference: [Maher and Balachandran 1994b] <author> M.L. Maher and B. Balachandran. </author> <title> Flexible Retrieval Strategies for Case-Based Design. </title> <booktitle> In Proceedings of the 3rd International Conference on Artificial Intelligence in Design, </booktitle> <pages> 163-180, </pages> <month> August </month> <year> 1994. </year>
Reference-contexts: Both the category and hierarchical partitions (supported by the attributes "part" and "part-of") help make demex's memory storage and retrieval more flexible [Maher and Zhang 1993] <ref> [Maher and Balachandran 1994b] </ref>. 8 3 Memory Organisation Another important issue needs to be addressed in systems that perform memory-based reasoning: how are the objects in the system's memory or-ganised? The memory organisation scheme employed must enable efficient and flexible access to the objects in memory, and efficient and flexible ways
Reference: [Maher, Balachandran, and Zhang 1995] <author> M.L. Maher, B. Balachandran, and D.M. Zhang. </author> <title> Case-Based Reasoning in Design. </title> <publisher> Lawrence Erlbaum Associates. </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction One of the characteristics of design is that designers rely extensively on past experience in order to create new designs (eg., see <ref> [Maher, Balachandran, and Zhang 1995] </ref>). The experience may be their own, that is, specific design problems they have encountered before, or the experience may be the documented experience of others. Being able to use and reuse this experience requires that it be recalled at the appropriate times. <p> This work builds on our previous work on edesyn [Maher 1987], a generalised system decomposition approach to design synthesis (ie., model-based reasoning); cadsyn [Maher and Zhang 1993], a constraint satisfaction approach to case-based reasoning; and case-cad [Maher and Balachandran 1994a, 1994b] <ref> [Maher, Balachandran, and Zhang 1995] </ref>, a multimedia case-based retrieval system. demex differs from these systems because it focuses on the exploration of memory for defining and elaborating design specifications, using both a model memory and a case memory.
Reference: [Maher and Zhang 1993] <author> M.L. Maher and D.M. Zhang. CADSYN: </author> <title> A Case-Based Design Process Model. </title> <booktitle> Artificial Intelligence for Engineering Design, Analysis, and Manufacturing, </booktitle> <volume> 7(2), </volume> <pages> 97-110. </pages> <year> 1993. </year>
Reference-contexts: This work builds on our previous work on edesyn [Maher 1987], a generalised system decomposition approach to design synthesis (ie., model-based reasoning); cadsyn <ref> [Maher and Zhang 1993] </ref>, a constraint satisfaction approach to case-based reasoning; and case-cad [Maher and Balachandran 1994a, 1994b] [Maher, Balachandran, and Zhang 1995], a multimedia case-based retrieval system. demex differs from these systems because it focuses on the exploration of memory for defining and elaborating design specifications, using both a model <p> Both the category and hierarchical partitions (supported by the attributes "part" and "part-of") help make demex's memory storage and retrieval more flexible <ref> [Maher and Zhang 1993] </ref> [Maher and Balachandran 1994b]. 8 3 Memory Organisation Another important issue needs to be addressed in systems that perform memory-based reasoning: how are the objects in the system's memory or-ganised? The memory organisation scheme employed must enable efficient and flexible access to the objects in memory, and
Reference: [Schank 1982] <author> R. Schank. </author> <title> Dynamic Memory: A Theory of Learning in Computers and People. </title> <publisher> Cambridge University Press. </publisher> <year> 1982. </year> <type> 36 37 38 39 40 description. 41 42 43 </type>
Reference-contexts: In order to achieve this goal, an appropriate memory organ-isation scheme will reflect the way that design problems, cases, and models are described, and will facilitate the comparison between the description of a design problem and the description of a memory object. Memory organ-isation should also be dynamic <ref> [Schank 1982] </ref>, in the sense that the memory should be able to reorganise itself, without altering the contents of its objects, when the need arises to incorporate new memory objects into it, or to remove old memory objects from it. 9 3.1 demex's Memory Scheme In demex, there are three dynamic
References-found: 9

