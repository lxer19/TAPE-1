URL: http://www.hcs.eng.fsu.edu/pubs/ssst96.ps
Refering-URL: http://www.hcs.eng.fsu.edu/Pubs.html
Root-URL: 
Title: Modeling and Simulation of Processors and Networks for Smart Navy Aircraft Components and Systems a
Author: Alan George, Michael Miars, Robert Todd, and Warren Rosen 
Note: Rosen is with the Naval Air Warfare Center, Aircraft Division, Warminster, PA. Researchers in the HCS Research Lab are developing  from these systems. This paper  
Address: 1 Dr.  
Affiliation: High-performance Computing and Simulation (HCS) Research Laboratory FAMU-FSU College of Engineering, Florida State Univ. and Florida A&M Univ.  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Gault, Kenneth, Carlos Bedoya, Chris Miller, and John Mohr, </author> <title> Advanced Vehicle Management System (AVMS) Architecture Studies , Flight Dynamics Directorate, </title> <institution> Wright-Patterson AFB, OH, </institution> <year> 1992. </year>
Reference-contexts: As with most military research and development, the private sector may also benefit from the SNACS project by the realization of a SNACS architecture for commercial airliners using the same system concepts <ref> [1] </ref>. Foresight Foresight is a graphical, general-purpose tool for system modeling and simulation designed to run on UNIX workstations. Designers create models with graphical and textual editors and library elements. The models are analyzed statically for consistency and syntax errors and then executed via the graphical simulator engine.
Reference: [2] <author> Gaiser, Brad, </author> <title> Foresight Users Guide, Release 3.00, </title> <booktitle> NuThena Systems, </booktitle> <address> McLean, VA, </address> <year> 1994. </year>
Reference-contexts: The methods available in this package have been developed from a succession of related modeling techniques. Combined, these methods provide a versatile means of simulating a wide range of systems at various abstraction levels with minimal design time. History and reference can be found in <ref> [2] </ref>. Computer-based executability allows designers to verify specifications, functionality, and performance of dynamic systems. Synchronization and resource usage are typical problems that may not be readily apparent from a static model. <p> The syntax of the operations that occur when performing a transition are quite similar to that used in minispecs. Minispecs are primitive elements that are uniquely textual. The Executable Systems Modeling Language used by mini-specs is explained in the users handbook <ref> [2] </ref> and is quite similar to the C programming language. Examples of an STD and minispec implementing the same message generating function are shown in Figures 2 and 3. <p> In STDs and minispecs, the specified input and output ports must be identical in name and number to external flows represented in the parent DFD. Reusable processes incorporate the ideas of encapsulation and inheritance found in objectoriented design <ref> [2] </ref>. Models can be designed to operate at various levels of abstraction ranging from fine-grain emulation to coarse-grain statistical simulation. Library elements support modeling at both extremes and user-defined processes can be focused at the desired level. <p> Consequently, a well-designed Foresight model may perform some critical procedures at a fine-grain functional level and still interact with less critical procedures in the same model that are simulated using statistical information <ref> [2] </ref>. Existing C programs and functions defining or simulating a system may be tied into Foresight simulations. External procedure calls are made from either STDs or minispecs. This feature avoids unnecessary design time costs and adds flexibility to model creation. <p> Thus, they cannot be modified or expanded. Future versions of Foresight may provide not only the current library elements, but lower-level STD and minispec templates representing common modeling algorithms. Doing so would alleviate the limitation mentioned in the preceding paragraph and lend more flexibility to model design <ref> [2] </ref>. Processor Models The models being designed by the HCS laboratory are for use by researchers in evaluating prospective systems. Many of the required features and parameters of possible candidates are being analyzed and evaluated.
Reference: [3] <author> SAE Committee AS-2, </author> <title> Interconnect Networks, Linear Token Passing Multiplex Data Bus , SAE Aerospace Standard AS4074, </title> <address> Warrendale, PA, </address> <year> 1993. </year>
Reference-contexts: Air Force and Army respectively. There are minor differences between these two buses although both are based on the Linear Token Passing Multiplex Data Bus (LTPMDB) standard from SAE <ref> [3] </ref>. The Foresight tool provides a model called Linear Token-Passing Network (LTPN) which resembles HSDB. The only quantitative difference found between LTPN and LTPMDB was the number of overhead bits which has since been set in accordance with the LTPMDB standard. <p> of data and 72 bits of overhead; 24-bit tokens; four uniformly-distributed priority levels and a 25-slot queue per level per node; interarrival rate is varied in order to generate the desired offered load; and values for THT, TRT1, TRT2, and TRT3 of 0.5, 0.7, 0.7, and 0.95 milliseconds respectively (see <ref> [3] </ref> for further information on these token holding and rotation parameters). 0 20 40 60 80 Offered Load (Mbps) L a t e n c y ( m s ) As can be seen in Figure 5, the effective throughput of the model asymptotically approaches the base data rate but does
Reference: [4] <author> Hammond, Joseph and Peter OReilly, </author> <title> Performance Analysis of Local Computer Networks , Addison-Wesley, </title> <address> Reading, Mass., </address> <year> 1986. </year>
Reference: [5] <author> Johnson, Barry, </author> <title> Design and Analysis of Fault-Tolerant Digital Systems , Addison-Wesley, </title> <address> Reading, Mass., </address> <year> 1989. </year>
Reference-contexts: An offered load of 50-Mbps will eventually lead to network saturation and exponentially increasing latencies once all of the queues in the nodes have filled. Dependability Modeling The state transition diagram in Foresight is naturally suited to handle Markov models, the analytical foundation of many dependability models <ref> [5] </ref>. Unfortunately, models with more than a dozen states cause the transition conditions to become cumbersome and difficult to follow. Examples of "small" models that STDs can handle well are TMR with a spare, reconfigurable duplication, single standby sparing, etc.
References-found: 5

