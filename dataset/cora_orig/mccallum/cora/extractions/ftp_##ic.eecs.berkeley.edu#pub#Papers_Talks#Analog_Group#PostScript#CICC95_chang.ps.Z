URL: ftp://ic.eecs.berkeley.edu/pub/Papers_Talks/Analog_Group/PostScript/CICC95_chang.ps.Z
Refering-URL: http://www-cad.eecs.berkeley.edu:80/~charbon/publications/analog-group-publications.html
Root-URL: http://www.cs.berkeley.edu
Title: Top-Down, Constraint-Driven Design Methodology Based Generation of a Second Order S-D A/D Converter  
Author: Henry Chang Eric Felt Alberto Sangiovanni-Vincentelli 
Address: Berkeley, CA 94720, U.S.A.  
Affiliation: Electronics Research Laboratory Department of Electrical Engineering and Computer Sciences University of California,  
Abstract: To accelerate the design cycle for analog circuits and mixed-signal systems, we have proposed a top-down, constraint-driven design methodology [1]. In this paper we present a complete design flow to illustrate this design methodology as it applies to the design of a second order sigma-delta (S-D) analog-to-digital (A/D) converter. We start from its performance and functional specifications and ending with the testing of the fabricated parts. Experimental results are presented. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Chang, A. Sangiovanni-Vincentelli, F. Balarin, E. Charbon, U. Choudhury, G. Jusuf, E. Liu, E. Malavasi, R. Neff and P. Gray, </author> <title> A Top-down, Constraint-Driven Design Methodologyfor Analog IntegratedCircuits, </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 841-846, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: 1 Introduction As the level of system integration increases, one apparent bottleneck is the design of the analog circuit components. Though these components are often small in area, their design times can be high. To address this problem we have proposed a top-down, constraint-driven design methodology <ref> [1] </ref>, and, with it, have provided a variety of design tools such as behavioral level simulators, optimization tools, and physical layout tools. To show the effectiveness of this methodology, we have undertaken design examples beginning with industrial-strength specifications, and not ending until the designs have been fabricated and tested.
Reference: [2] <author> H. Chang, E. Liu, R. Neff, E. Felt, E. Malavasi, E. Charbon, A. Sangiovanni-Vincentelli and P. R. Gray, </author> <title> Top-Down, Constraint-Driven Methodology Based Generation of n-bit Interpolative Current Source D/A Converters, </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 369-372, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: To show the effectiveness of this methodology, we have undertaken design examples beginning with industrial-strength specifications, and not ending until the designs have been fabricated and tested. Previously presented has been the complete design flow for a class of interpolative switched current source D/A converters <ref> [2] </ref>. This paper presents a complete design flow of a second order (S-D) A/D converter. The two examples differ for the following reasons: (1) the subcomponents are different, (2) the performances and the reasons for their degradation are different, and (3) the sub-blocks are not in regular arrays. <p> If low values for the parameters are more difficult to obtain than high values, a = 0, e.g. thermal noise. If the reverse is true, b = 0, e.g. OTA gain. <ref> [2] </ref> contains a general description. Two points are required to find the remaining two constants. One corresponds to a moderate difficulty design point, and the second to a hard design point. These are heuristically chosen by a designer. Because of this heuristic nature, overall optimality is lost for the design.
Reference: [3] <author> B. E. Boser, </author> <title> Design and Implementation of Oversampled Analog-to-Digital Converters, </title> <type> Ph.D. Thesis, </type> <institution> Integrated Circuits Laboratory, Stanford Univeristy, Stan-ford, </institution> <month> Oct </month> <year> 1988. </year>
Reference-contexts: The architecture of the converter is shown in Figure 1. It is a second order system with a 1-bit quantizer similar to the one found in <ref> [3] </ref>. The input anti-aliasing filter and the decimation filter to convert the bit-stream output to data words is done off chip. 3 Synthesis Path The two-level hierarchy used for synthesis is shown in Figure 2. <p> Given values for each of these parameters, along with f x from Table 1, the SNR for the S-D A/D can be computed using a behavioral model developed for this particular system and the behavioral simulator MIDAS <ref> [3] </ref>. Since the behavioral simulator is low-level-implementation independent, area as a function of the parameters cannot be determined. Since we cannot minimize area directly, we choose to maximize design flexibility during this optimization step. <p> ; C S ) 1:5 ns I kT=C (V gs V T ; I leg ; C S ) 20 V rms V gs V T 100 mV C S 100 f F the OTA, integrator, and bias circuitry are computed using analytic equations. 3.2.2 Comparator The comparator used in <ref> [3] </ref> was used in this design. The set of constraints required for the design of the comparator were C off 100 mV, C hysteresis 100 mV, and C noise 9.35 mV rms .
Reference: [4] <author> J. Shao and R. Harjani, </author> <title> Macromodeling of Analog Circuits for Hierarchical Circuit Design, </title> <booktitle> in Proc. IEEE ICCAD, </booktitle> <pages> pp. 656-663, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: Because of this heuristic nature, overall optimality is lost for the design. However, if a solution is found, feasibility is insured. If the design is found to be too suboptimal when completed, the flexibility functions can be rebuilt to reflect data from previous design passes for future iterations. <ref> [4] </ref> attempts to a priori build extremely accurate contours (flexibility functions) to also guarantee an optimal result. Unfortunately, this is extremely expensive, since not only does the entire design space need to be simulated, but also all possible combinations of architectures must be explored before any designs can be obtained.
Reference: [5] <institution> Modular In-core Nonlinear Optimization System (MINOS 5.3), Systems Optimization Laboratory, Department of Operations Research, Stanford University. </institution>
Reference-contexts: Normally, an off-the-shelf optimization program such as MI-NOS <ref> [5] </ref> is used to solve this problem. However, when functions are computed using iterative techniques (simulators), because of numerical noise, general purpose optimizers tend to fail. This was true for this problem.
Reference: [6] <author> K. A. Nishimura, </author> <title> Optimum Partitioning of Analog and Digital Circuitry in Mixed-Signal Circuits for Signal Processing, </title> <type> Technical report, Ph.D. Thesis, </type> <institution> University of California at Berkeley, </institution> <month> July </month> <year> 1993. </year>
Reference: [7] <author> R. Castello and P. Gray, </author> <title> A High-Performance Micropower Switched-Capacitor Filer, </title> <journal> IEEE Journal of Solid State Circuits, </journal> <volume> vol. SC-20, </volume> <pages> pp. </pages> <month> 1122-1132,December </month> <year> 1985. </year>
Reference: [8] <author> D. S. Harrison, A. R. Newton, R. L. Spickelmier and T. J. Barnes, </author> <title> Electronic CAD Frameworks, </title> <journal> Proc. of the IEEE, </journal> <volume> vol. 78, </volume> <editor> n. </editor> <volume> 2, </volume> <pages> pp. </pages> <month> 393-417,February </month> <year> 1990. </year>
Reference: [9] <author> E. Charbon, E. Malavasi, D. Pandini and A. Sangiovanni-Vincentelli, </author> <title> Imposing Tight Specifications on Analog IC's through Simultaneous Placement and Module Optimization, </title> <booktitle> in Proc. IEEE CICC, </booktitle> <pages> pp. 525-528, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: The extra lines added: (i) indicate transistor matching, (ii) indicate transistor symmetry, and (iii) split transistors into smaller parallel transistors for decreasing drain capacitance and for canceling linear gradient effects. 3. Generate the transistor stacks using MKSTACK <ref> [9] </ref>. If transistors have the same gate width and share diffusion contacts, they are combined to form stacks of parallel transistors. 4. Generate the capacitors using an automatic layout tool. 5. Implement the nets of the parallel transistors which are in stacks using another automatic layout tool.
References-found: 9

