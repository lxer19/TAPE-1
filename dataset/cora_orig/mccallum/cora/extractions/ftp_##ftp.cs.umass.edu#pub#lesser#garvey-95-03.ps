URL: ftp://ftp.cs.umass.edu/pub/lesser/garvey-95-03.ps
Refering-URL: http://dis.cs.umass.edu/~garvey/publications.html
Root-URL: 
Title: Design-to-time Scheduling with Uncertainty  
Author: Alan Garvey and Victor Lesser 
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: UMass Computer Science Technical Report 95-03 April 28, 1995 Abstract Design-to-time real-time scheduling is an approach to solving time-sensitive problems where multiple methods are available for many subproblems. This paper examines design-to-time scheduling problems where the value (quality) and duration of methods is uncertain. We first describe our basic approach to scheduling design-to-time problems, describe the necessary extensions for scheduling uncertain tasks, and describe the effects of uncertainty on the difficulty of scheduling and on the quality of the schedules produced. 
Abstract-found: 1
Intro-found: 1
Reference: [ Boddy and Dean, 1989 ] <author> Mark Boddy and Thomas Dean. </author> <title> Solving time-dependent planning problems. </title> <booktitle> In Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, </booktitle> <address> Detroit, MI, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: In the anytime algorithm approach a procedure is available for each subproblem that achieves increasing value as it is given increasing runtime. In early anytime algorithm work by Dean and Boddy <ref> [ Dean and Boddy, 1988, Boddy and Dean, 1989 ] </ref> each of these procedures was assumed to be independent and the function mapping value to time (known as the performance profile was assumed to be static.
Reference: [ Daniel, 1978 ] <author> W. W. Daniel. </author> <title> Applied Nonparametric Statistics. </title> <address> Houghton-Mifflin, Boston, </address> <year> 1978. </year>
Reference-contexts: Because the variance between these randomly generated episodes is so great, we took advantage of the paired response nature of the data to run a non-parametric Wilcoxon matched-pairs signed-ranks test <ref> [ Daniel, 1978 ] </ref> to compare the worst-case values (0 for quality, 1 for time) with the median values (0.5 for each). The null hypothesis is that there is no difference in the sum of quality for all task groups in each pair of runs.
Reference: [ Dean and Boddy, 1988 ] <author> T. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceedings of the Seventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 49-54, </pages> <address> St. Paul, Minnesota, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: Design-to-time is related to anytime algorithm <ref> [ Dean and Boddy, 1988, Russell and Zilber-stein, 1991 ] </ref> and imprecise computation [ Liu et al., 1991 ] approaches to problem solving. In the anytime algorithm approach a procedure is available for each subproblem that achieves increasing value as it is given increasing runtime. <p> In the anytime algorithm approach a procedure is available for each subproblem that achieves increasing value as it is given increasing runtime. In early anytime algorithm work by Dean and Boddy <ref> [ Dean and Boddy, 1988, Boddy and Dean, 1989 ] </ref> each of these procedures was assumed to be independent and the function mapping value to time (known as the performance profile was assumed to be static.
Reference: [ Decker and Lesser, 1992 ] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Generalizing the partial global planning algorithm. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 1(2) </volume> <pages> 319-346, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: Most recently, design-to-time research has looked at distributed scheduling. In this work no limitations were placed on interactions (thus necessitating heuristic scheduling) and problems were divided (usually with some overlap) among multiple agents. Coordination between agents was handled using the Generalized Partial Global Planning (GPGP) approach <ref> [ Decker and Lesser, 1992 ] </ref> . At the request of the coordination algorithm, agents would make commitments to completing particular methods by particular times. The heuristic scheduling in this work was done using an early version of the basic algorithm described in this paper.
Reference: [ Decker and Lesser, 1993 ] <author> Keith S. Decker and Victor R. Lesser. </author> <title> Quantitative modeling of complex computational task environments. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 217-224, </pages> <address> Washington, </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Another major focus of our work on design-to-time is on taking interactions among subproblems into account when building solution plans, both hard interactions that must be heeded to find correct solutions (e.g., hard precedence constraints), and soft interactions that can improve (or hinder) performance (e.g., facilitates constraints <ref> [ Decker and Lesser, 1993 ] </ref> ). <p> An example of a problem to be solved by the design-to-time scheduling algorithm is given in Figure 1. This representation of a task structure is based on the TMS modeling framework <ref> [ Decker and Lesser, 1993 ] </ref> . In a TMS task structure the leaves of the graph represent executable computations (known as methods) and the nonleaf nodes represent tasks that achieve quality as a function of the quality of their subtasks. <p> The form of such task structures is described in more detail in <ref> [ Decker and Lesser, 1993 ] </ref> .
Reference: [ Dey et al., 1993 ] <author> J.K. Dey, James Kurose, and Don Towsley. </author> <title> On-line processor scheduling for a class of IRIS (increasing reward with increasing time) real-time tasks. </title> <type> CS Technical Report 93-09, </type> <institution> University of Massachusetts, </institution> <year> 1993. </year> <month> 14 </month>
Reference-contexts: Following that we describe experiments that explore the effect of uncertainty on the difficulty of scheduling and the quality of schedules produced. We conclude with a 1 A more general and more efficient algorithm for solving this problem has since been designed by Dey, Kurose and Towsley <ref> [ Dey et al., 1993 ] </ref> . 3 summary of the approach and a discussion of future research questions. 2 Problem Specification In our work, problems are presented to the decision-maker as TMS task structures.
Reference: [ Garvey and Lesser, 1993 ] <author> Alan Garvey and Victor Lesser. </author> <title> Design-to-time real-time schedul-ing. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1491-1502, </pages> <year> 1993. </year>
Reference: [ Garvey and Lesser, 1994 ] <author> Alan Garvey and Victor Lesser. </author> <title> A survey of research in deliberative real-time artificial intelligence. </title> <journal> The Journal of Real-Time Systems, </journal> <volume> 6, </volume> <year> 1994. </year>
Reference-contexts: More detail on anytime algorithms and other AI approaches to real-time are described in Garvey and Lesser <ref> [ Garvey and Lesser, 1994 ] </ref> . Imprecise computation is a systems-oriented approach that relies on methods that have mandatory and optional parts.
Reference: [ Garvey et al., 1993 ] <author> Alan Garvey, Marty Humphrey, and Victor Lesser. </author> <title> Task interdependencies in design-to-time real-time scheduling. </title> <booktitle> In Proceedings of the Eleventh National Conference on Artificial Intelligence, </booktitle> <pages> pages 580-585, </pages> <address> Washington, D.C., </address> <month> July </month> <year> 1993. </year>
Reference-contexts: Previous work on design-to-time scheduling has examined scheduling in an actual application [ Gar-vey and Lesser, 1993 ] , in a simulation of an application with particularly circumscribed interactions among tasks <ref> [ Garvey et al., 1993 ] </ref> , and in a distributed simulation [ Garvey et al., 1994 ] .
Reference: [ Garvey et al., 1994 ] <author> Alan Garvey, Keith Decker, and Victor Lesser. </author> <title> A negotiation-based interface between a real-time scheduler and a decision-maker. </title> <type> CS Technical Report 94-08, </type> <institution> University of Massachusetts, </institution> <year> 1994. </year>
Reference-contexts: Previous work on design-to-time scheduling has examined scheduling in an actual application [ Gar-vey and Lesser, 1993 ] , in a simulation of an application with particularly circumscribed interactions among tasks [ Garvey et al., 1993 ] , and in a distributed simulation <ref> [ Garvey et al., 1994 ] </ref> . In the work on the actual application (the Distributed Vehicle Monitoring Testbed) the focus was on scheduling in situations where approximations were available for some of the tasks of the system, and interactions among tasks were assumed to be minimal.
Reference: [ Ho et al., 1992 ] <author> Kevin I-J. Ho, Joseph Y-T. Leung, and W-D. Wei. </author> <title> Scheduling imprecise computation tasks with 0/1-constraint. </title> <type> Technical Report UNL-CSE-92-16, </type> <institution> University of Nebraska-Lincoln, </institution> <year> 1992. </year>
Reference-contexts: Research in imprecise computation has focussed on finding polynomial time algorithms for well constrained subsets of the general problem [ Liu et al., 1991 ] , or showing that particular problems are NP-Complete <ref> [ Ho et al., 1992, Leung et al., 1992 ] </ref> . Imprecise computation differs from design-to-time in its limiting of interactions to precedence constraints, its interest in severely limiting problem representation to allow polynomial time solutions to be found, and its exclusive focus on optimal (rather than heuristic, satisficing) solutions.
Reference: [ Leung et al., 1992 ] <author> Joseph Y-T. Leung, Vincent K.M. Yu, and W-D. Wei. </author> <title> Minimizing the weighted number of tardy task units. </title> <type> Technical report, </type> <institution> University of Nebraska-Lincoln, </institution> <year> 1992. </year>
Reference-contexts: Research in imprecise computation has focussed on finding polynomial time algorithms for well constrained subsets of the general problem [ Liu et al., 1991 ] , or showing that particular problems are NP-Complete <ref> [ Ho et al., 1992, Leung et al., 1992 ] </ref> . Imprecise computation differs from design-to-time in its limiting of interactions to precedence constraints, its interest in severely limiting problem representation to allow polynomial time solutions to be found, and its exclusive focus on optimal (rather than heuristic, satisficing) solutions.
Reference: [ Liu et al., 1991 ] <author> J. W. S. Liu, K. J. Lin, W. K. Shih, A. C. Yu, J. Y. Chung, and W. Zhao. </author> <title> Algorithms for scheduling imprecise computations. </title> <journal> IEEE Computer, </journal> <volume> 24(5) </volume> <pages> 58-68, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Design-to-time is related to anytime algorithm [ Dean and Boddy, 1988, Russell and Zilber-stein, 1991 ] and imprecise computation <ref> [ Liu et al., 1991 ] </ref> approaches to problem solving. In the anytime algorithm approach a procedure is available for each subproblem that achieves increasing value as it is given increasing runtime. <p> The only kind of interaction between methods that has been explored in imprecise computation is hard precedence constraints. Research in imprecise computation has focussed on finding polynomial time algorithms for well constrained subsets of the general problem <ref> [ Liu et al., 1991 ] </ref> , or showing that particular problems are NP-Complete [ Ho et al., 1992, Leung et al., 1992 ] .
Reference: [ Russell and Zilberstein, 1991 ] <author> Stuart J. Russell and Shlomo Zilberstein. </author> <title> Composing real-time systems. </title> <booktitle> In Proceedings of the Twelfth International Joint Conference on Artificial Intelligence, </booktitle> <pages> pages 212-217, </pages> <address> Sydney, Australia, </address> <month> August </month> <year> 1991. </year>
Reference-contexts: Dean and Boddy derived an algorithm for optimally allocating time to anytime algorithms under these assumptions 1 . More recent work in anytime algorithm scheduling has been done by Zilberstein and Russell <ref> [ Russell and Zilberstein, 1991, Zilberstein and Russell, 1992 ] </ref> . They extended the paradigm to allow performance profiles to be dependent on inputs.
Reference: [ Smith, 1993 ] <author> Stephen F. Smith. </author> <title> Integrating planning and scheduling: Towards effective coordination in complex, resource-constrained domains. In Keynote Address at the Italian Planning Workshop, </title> <address> Rome, Italy, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: This scheduling of such prespecified task structures that contain alternatives represents a simplified version of the scheduling problem in which a planner for dynamically generated process plans is tightly integrated with a scheduler as described by Smith <ref> [ Smith, 1993 ] </ref> . Our approach is quite different from his, but the basic idea of problems that require both deciding what to do and deciding when to do it is shared.
Reference: [ Zilberstein and Russell, 1992 ] <author> Shlomo Zilberstein and Stuart J. Russell. </author> <title> Efficient resource-bounded reasoning in AT-RALPH. </title> <booktitle> In Proceedings of the First International Conference on AI Planning Systems, </booktitle> <address> College Park, Maryland, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Dean and Boddy derived an algorithm for optimally allocating time to anytime algorithms under these assumptions 1 . More recent work in anytime algorithm scheduling has been done by Zilberstein and Russell <ref> [ Russell and Zilberstein, 1991, Zilberstein and Russell, 1992 ] </ref> . They extended the paradigm to allow performance profiles to be dependent on inputs.
Reference: [ Zweben et al., 1993 ] <author> Monte Zweben, Eugene Davis, Brian Daun, and Michael J. Deale. </author> <title> Scheduling and rescheduling with iterative repair. </title> <journal> IEEE Transactions on Systems, Man and Cybernetics, </journal> <volume> 23(6) </volume> <pages> 1588-1596, </pages> <year> 1993. </year> <month> 15 </month>
Reference-contexts: In the work on uncertainty mentioned below, a consideration of the probability that the schedule will achieve its expected quality is also done. Following this basic evaluation, a series of local improvements are attempted on the schedule. These improvements are a form of iterative repair <ref> [ Zweben et al., 1993 ] </ref> , except that each successful improvement adds new alternatives for the entire set of task groups to those being considered (i.e., new plans), rather than actual complete schedules.
References-found: 17

