URL: http://www-cs-faculty.stanford.edu/~koza/GPway.ps
Refering-URL: http://www.cs.bham.ac.uk/~wbl/biblio/gp-bibliography.html
Root-URL: 
Email: koza@cs.stanford.edu  forrest@evolute.com  jlohn7@leland.stanford.edu  makeane@ix.netcom.com  dandre@cs.berkeley.edu  
Title: Use of Architecture-Altering Operations to Dynamically Adapt a Three-Way Analog Source Identification Circuit to Accommodate
Author: John R. Koza Forrest H Bennett III Jason Lohn Frank Dunlap Martin A. Keane David Andre 
Note: The problem is difficult because  enabled genetic programming to  the additional new source.  
Web: http://www-cs faculty.stanford.edu/~koza/  
Address: Stanford, California 94305-9020  Stanford, California 94305  Stanford, California 94305  Palo Alto, California  5733 West Grover Chicago, Illinois 60630  Berkeley, California  
Affiliation: Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Visiting Scholar Computer Science Dept. Stanford University  Dunlap Consulting  Martin Keane Inc.  Computer Science Division University of California  
Abstract: We used genetic programming to evolve b o t h the topology and the sizing (numerical values) for each component of an analog electrical circuit that can correctly classify an incoming analog electrical signal into three categories. Then, the r e p e r t o i r e o f s o u r c e s w a s dynamically changed by adding a new source during the run. The p a p e r d e s c r i b e s h o w t h e 
Abstract-found: 1
Intro-found: 1
Reference: <author> Aaserud, O. and Nielsen, I. Ring. </author> <year> 1995. </year> <title> Trends in current analog design: A panel debate. Analog Integrated Circuits and Signal Processing. </title> <type> 7(1) 5-9. </type>
Reference: <author> Andre, David, Bennett III, Forrest H, and Koza, John R. </author> <year> 1996. </year> <title> Discovery by genetic programming of a cellular automata rule that is better than any known rule for the majority classification problem. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results for the Three-Way Source Identification Problem A satisfactory solution to the problem was found on our first run of this problem. The best circuit from generation 0 (figure 2) has a fitness of 286.2 and scores 64 hits. <p> Approximately 1 brain second was required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 human-written Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Also, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a, 1996b) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Andre, David and Koza, John R. </author> <year> 1996. </year> <title> Parallel genetic programming: A scalable implementation using the transputer architecture. </title> <editor> In Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge: </address> <publisher> MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results for the Three-Way Source Identification Problem A satisfactory solution to the problem was found on our first run of this problem. The best circuit from generation 0 (figure 2) has a fitness of 286.2 and scores 64 hits. <p> Approximately 1 brain second was required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 human-written Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Also, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a, 1996b) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <editor> Angeline, P. J. and Kinnear, K. E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming 2. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Gruau, Frederic. </author> <year> 1996. </year> <title> Artificial cellular development in optimization and compilation. </title> <editor> In Sanchez, Eduardo and Tomassini, Marco (editors). </editor> <year> 1996. </year> <title> Towards Evolvable Hardware. </title> <booktitle> Lecture Notes in Computer Science, </booktitle> <volume> Volume 1062. </volume> <publisher> Berlin: Springer-Verlag. </publisher> <pages> Pages 48 75. </pages>
Reference: <author> Holland, John H. </author> <year> 1975. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Ann Arbor, MI: </address> <publisher> University of Michigan Press. </publisher>
Reference: <author> Juille, Hugues. </author> <year> 1995. </year> <title> Evolution of nondeterministic incremental algorithms as a new approach for search in state spaces. </title> <editor> In Eshelman, L. J. (editor). </editor> <booktitle> Proceedings of the Sixth International Conference on Genetic Algorithms. </booktitle> <address> San Francisco: </address> <publisher> Morgan Kaufmann. </publisher> <pages> 351358. </pages>
Reference: <author> Juille, Hugues. </author> <year> 1997. </year> <type> Personal communication. </type>
Reference: <editor> Kinnear, Kenneth E. Jr. (editor). </editor> <booktitle> 1994. Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Knuth, Donald E. </author> <year> 1973. </year> <booktitle> The Art of Computer Programming. </booktitle> <volume> Vol. </volume> <pages> 3. </pages> <address> Reading, MA: </address> <publisher> Addison-Wesley. </publisher>
Reference: <author> Koza, John R. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: It is therefore considered by many to be a form of art rather than a science." When genetic programming was used to adapt to a changing environment during the run and solve the four-way source identification problem, we included automatically defined functions <ref> (Koza 1992, 1994) </ref>.
Reference: <author> Koza, John R. </author> <year> 1994a. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <publisher> Cambridge: MIT Press. </publisher>
Reference-contexts: Also, the performance of four different versions of genetic programming <ref> (Koza 1994a, Koza and Andre 1996a, 1996b) </ref> on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Koza, John R. </author> <year> 1994b. </year> <title> Genetic Programming II Videotape: The Next Generation. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. </author> <year> 1994c. </year> <title> Architecture-altering operations for evolving the architecture of a multipart program in genetic programming. </title> <institution> Stanford University Computer Science Dept. </institution> <note> technical report STAN-CS-TR-94-1528. </note>
Reference-contexts: Architecture-altering operations <ref> (Koza 1994c) </ref> enable genetic programming to determine the architecture of a multipart computer program dynamically during a run. A change in the architecture of a multipart computer program during a run of genetic programming corresponds to a change in genome structure in the natural world.
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996a. </year> <title> Classifying protein segments as transmembrane domains using architecture-altering operations in genetic programming. </title>
Reference: <editor> In Angeline, Peter J. and Kinnear, Kenneth E. Jr. (editors). </editor> <booktitle> 1996. Advances in Genetic Programming II. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996b. </year> <title> Evolution of iteration in genetic programming. </title> <booktitle> In Evolutionary Programming V: Proceedings of the Fifth Annual Conference Cambridge, </booktitle> <address> MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R. and Andre, David. </author> <year> 1996c. </year> <title> Automatic discovery of protein motifs using genetic programming. </title> <editor> In Yao, Xin (editor). </editor> <booktitle> 1996. Evolutionary Computation: Theory and Applications. </booktitle> <address> Singapore: </address> <publisher> World Scientific. </publisher>
Reference-contexts: approximately 1 brain second of computational effort was required for the runs of genetic programming that successfully evolved protein motifs for detecting the D-E-A-D box family of proteins and for detecting the manganese superoxide dismutase family as well or better than the comparable human-written motifs found in the PROSITE database <ref> (Koza and Andre 1996c) </ref>. Juille's discovery (1995), using evolutionary computation, of a sorting network for 13 items that was smaller than the best network in Knuth (1973) consumed approximately 0.8 brain seconds (Juillie 1997). best circuit of generation 0. circuit of generation 41. circuit of generation 85. 8 .
Reference: <author> Koza, John R., Andre, David, Bennett III, Forrest H, and Keane, Martin A. </author> <year> 1996. </year> <title> Use of automatically defined functions and architecture-altering operations in automated circuit synthesis using genetic programming. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results for the Three-Way Source Identification Problem A satisfactory solution to the problem was found on our first run of this problem. The best circuit from generation 0 (figure 2) has a fitness of 286.2 and scores 64 hits. <p> Approximately 1 brain second was required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 human-written Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Also, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a, 1996b) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996a. </year> <title> Toward evolution of electronic animals using genetic programming. </title> <booktitle> Artificial Life V: Proceedings of the Fifth International Workshop on the Synthesis and Simulation of Living Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996b. </year> <title> Four problems for which a computer program evolved by genetic programming is competitive with human performance. </title> <booktitle> Proceedings of the 1996 IEEE International Conference on Evolutionary Computation. </booktitle> <publisher> IEEE Press. </publisher> <pages> Pages 110. </pages>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996c. </year> <title> Automated design of both the topology and sizing of analog electrical circuits using genetic programming. </title> <editor> In Gero, John S. and Sudweeks, Fay (editors). </editor> <booktitle> Artificial Intelligence in Design '96. </booktitle> <address> Dordrecht: </address> <publisher> Kluwer. </publisher> <pages> Pages 151-170. </pages>
Reference-contexts: approximately 1 brain second of computational effort was required for the runs of genetic programming that successfully evolved protein motifs for detecting the D-E-A-D box family of proteins and for detecting the manganese superoxide dismutase family as well or better than the comparable human-written motifs found in the PROSITE database <ref> (Koza and Andre 1996c) </ref>. Juille's discovery (1995), using evolutionary computation, of a sorting network for 13 items that was smaller than the best network in Knuth (1973) consumed approximately 0.8 brain seconds (Juillie 1997). best circuit of generation 0. circuit of generation 41. circuit of generation 85. 8 .
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1996d. </year> <title> Automated WYWIWYG design of both the topology and component values of analog electrical circuits using genetic programming. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher>
Reference: <author> Koza, John R., Bennett III, Forrest H, Andre, David, and Keane, Martin A. </author> <year> 1997. </year> <title> Evolution using genetic programming of a low-distortion 96 Decibel operational amplifier. </title> <booktitle> Proceedings of the 1997 ACM Symposium on Applied Computing, </booktitle> <address> San Jose, California, February 28 March 2, 1997. New York: </address> <publisher> Association for Computing Machinery. </publisher> <pages> Pages 207 - 216. </pages>
Reference: <editor> Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: On each generation, four boatloads of emigrants, each consisting of B = 2% (the migration rate) of the node's subpopulation (selected on the basis of fitness) were dispatched to each of the four toroidally adjacent processing nodes <ref> (Andre and Koza 1996) </ref>. 4 . Results for the Three-Way Source Identification Problem A satisfactory solution to the problem was found on our first run of this problem. The best circuit from generation 0 (figure 2) has a fitness of 286.2 and scores 64 hits. <p> Approximately 1 brain second was required to evolve a one-dimensional cellular automata rule for the majority classification task whose accuracy (82.326%) exceeds that of the original 1978 human-written Gacs-Kurdyumov-Levin (GKL) rule, all other known subsequent human-written rules, and all other known rules produced by automated approaches for this problem <ref> (Andre, Bennett, and Koza 1996) </ref>. Also, the performance of four different versions of genetic programming (Koza 1994a, Koza and Andre 1996a, 1996b) on the transmembrane segment identification problem is slightly superior to that of algorithms written by knowledgeable human investigators.
Reference: <author> Koza, John R., and Rice, James P. </author> <year> 1992. </year> <title> G e n e t i c Programming: The Movie. </title> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <editor> Kruiskamp, Marinum Wilhelmus and Leenaerts, Domine. </editor> <year> 1995. </year> <title> DARWIN: CMOS opamp synthesis by means of a genetic algorithm. </title> <booktitle> Proceedings of the 32nd Design Automation Conference. </booktitle> <address> New York, NY: </address> <institution> Association for Computing Machinery. </institution> <month> 433438. </month>
Reference-contexts: It is therefore considered by many to be a form of art rather than a science." When genetic programming was used to adapt to a changing environment during the run and solve the four-way source identification problem, we included automatically defined functions <ref> (Koza 1992, 1994) </ref>.
Reference: <author> Ohno, Susumu. </author> <year> 1970. </year> <title> Evolution by Gene Duplication. </title> <address> New York: </address> <publisher> Springer-Verlag. </publisher>
Reference: <author> Quarles, Thomas, Newton, A. R., Pederson, D. O., and Sangiovanni-Vincentelli, A. </author> <year> 1994. </year> <note> SPICE 3 Version 3F5 User's Manual. </note> <institution> Dept. of Electrical Engineering and Computer Science, Univ. of California, Berkeley, </institution> <address> CA. </address>
Reference-contexts: The netlist identifies each component of the circuit, the nodes to which that component is connected, and the value of that component. Each circuit is then simulated to determine its behavior. The 217,000-line SPICE (Simulation Program with Integrated Circuit Emphasis) simulation program <ref> (Quarles et al. 1994) </ref> was modified to run as a submodule within the genetic programming system. For this problem, the voltage VOUT is probed at node 5 and the circuit is simulated in the frequency domain.
Reference: <author> Sterling, Thomas, Messina, Paul, and Smith, Paul H. </author> <year> 1995. </year> <title> Enabling Technologies for Petaflops Computing. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: Thus, both versions of the source identification problem used about one brain second (i.e., a petaflop of operations spread over two days, instead of one second) to produce a satisfactory circuit. However, as described in Enabling Technologies for Petaflops Computing <ref> (Sterling, Messina, and Smith 1995) </ref>, the era of petaflops computing (in which 10 1 5 operations are performed in one second) is imminent.
Reference: <author> Thompson, Adrian. </author> <year> 1996. </year> <title> Silicon evolution. </title> <editor> In Koza, John R., Goldberg, D. E., Fogel, D. B., and Riolo, R. L. (editors). </editor> <booktitle> 1996. Genetic Programming 1996: Proceedings of the First Annual Conference. </booktitle> <address> Cambridge, MA: MIT Press. </address> <note> Version 2 G -0 8 4 Camera-Ready Submitted March 25, 1997 to GP-97 Conference </note>
References-found: 30

