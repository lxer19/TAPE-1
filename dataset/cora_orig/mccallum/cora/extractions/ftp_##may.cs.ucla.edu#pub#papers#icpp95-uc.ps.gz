URL: ftp://may.cs.ucla.edu/pub/papers/icpp95-uc.ps.gz
Refering-URL: http://may.cs.ucla.edu/papers/
Root-URL: http://www.cs.ucla.edu
Title: Efficient implementation of high-level parallel programs. In 4th International Conference on Architectural Support for Programming
Author: Bagrodia, R. and Mathur, S. [] Bagrodia, R., Chandy, M., and Dhagat, M. [] Chen, K. . [] Cormen, T.H., Leiserson, C.E., and Rivest, R.L. [] Dhagat, M., Bagrodia, R., and Chandy, M. [] Mehrotra, P. and Van Rosendale, J. Rosing, M., Schnabel, R.B., and Weaver, R.B. [] Schwartz, J.T., Dewar, R.B.K, Dubinsky, E., and Schonberg, E. . [] Seevers, B., Quinn, M. and Hatcher, P. [] Subhlok, J., Stichnoth, J.M., O'Hallaron, D.R. and Gross, T. 
Address: Los Angeles, CA 90024,  Pasadena, CA 91125,  Hampton, VA, 1990.  Cambridge, MA, 1988.  
Affiliation: UC:  University of California,  Caltech,  Institute for Computer Application in Science and Engineering,  
Date: April 1991.  September 1994.  December 1994.  May 1993.  September 1992.  May 1993.  21(3), September 1989.  
Note: 5 CONCLUSION References [1]  [9] IBM, Kingston, NY 12401. IBM AIX Parallel Environment Parallel Programming Reference, 2.1 edition,  [10] Massingill, B. Integrating Task and Data Parallelism. Master's thesis,  [13]  The DINO parallel programming language. Journal of Parallel and Distributed Computing, 13:30-42, 1991. [14] Sabot, G. The Paralation Model: Architecture-Independent Parallel Programming. The MIT Press,  pages 44-47, Boulder, Colorado,  In Fourth ACM SIG-PLAN Symposium on Principles and Practice of Parallel Programming, pages 13-22, San Diego, California,  [18] Wegner, P. (Ed.). Special Issue on Programming Language Paradigms. ACM Computing Surveys,  
Pubnum: 142-153,  Technical Report 940030,  Technical Report 90-69,  
Abstract: tran compilers by using the task-parallel language For--tran M to coordinate data-parallel HPF tasks. Fortran M is designed to support dynamic task parallel programs where the identity of task is determined only at run-time and is run-time multithreaded. However data-parallel languages like HPF assume a dedicated machine of known size at compile-time. This raises the problem of integrating the run-time systems of the two compilers. Additionally, the Fortran M and HPF compiler may have different internal data representations. Data being transferred between modules may first have to be converted to representation used by the destination module. The task-parallel and data-parallel paradigms are the two dominant parallel programming models in use today. The integration of the two can result in significant performance benefits for several applications. Also, some applications, such as pipelined computations and coupled simulations, can be designed more naturally in a combination of the two programming models. In this paper, we have proposed the integration of task and data-parallelism in an extension of C called UC. We have demonstrated the performance benefits of our approach for several applications on the IBM SP2. [6] High Performance Fortran Forum. High Performance Fortran Language Specification, version 1.0. Technical Report CRPC-TR92225, Center for Research on Parallel Computation, Rice University, Huston, TX, January 1993. [7] Foster, I., Xu, M., Avalani, B. and Choudhary, A. A Compilation System That Integrates High Performance Fortran and Fortran M. In 1994 Scalable High Performance Computing Conference, May 1994. [8] Hiranandani, S., Kennedy, K., Koelbel, C., Kre-mer, U., and Tseng, C.-W. An Overview of the Fortran D programming system. Technical Report CRPC-TR91121, Center for Research on Parallel Computation, Rice University, Huston, TX, March 1991. [12] Rose, J.R. and Steele Jr., G.L. Cfl: An Extended C Language for Data Parallel Programming. Technical Report PL-87.5, Thinking Machines Corporation, Cambridge, MA, March 1987. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bagrodia, R. and Mathur, S. </author> <title> Efficient implementation of high-level parallel programs. </title> <booktitle> In 4th International Conference on Architectural Support for Programming Languages, </booktitle> <pages> pages 142-153, </pages> <month> April </month> <year> 1991. </year>
Reference: [2] <author> Bagrodia, R., Chandy, M., and Dhagat, M. </author> <note> UC: </note>
References-found: 2

