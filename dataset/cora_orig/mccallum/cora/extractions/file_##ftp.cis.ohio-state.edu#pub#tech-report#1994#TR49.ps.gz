URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1994/TR49.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Email: ramachan@cs.bu.edu  
Title: Kolmogorov Complexity and Toda's Theorem  
Author: J. Ramachandran J. Ramachandran, BU 
Note: 1 Please address correspondence to  
Address: Columbus, Ohio, 43210  111 Cummington Street, Boston, MA 02215.  
Affiliation: Computer and Information Sciences Ohio State University  CS Dept,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Allender, E., and Hemachandra, L. </author> <title> Lower bounds for the low hierarchy. </title> <journal> J. ACM 39, </journal> <volume> 1 (1992), </volume> <pages> 234-251. </pages>
Reference-contexts: They showed P (P) = P and P P (#P <ref> [1] </ref>). Since then, there has been considerable research on counting classes, the best known of which is Toda's seminal theorem proving that the polynomial time hierarchy (PH) is contained in BP:P (and therefore, in P (PP)).
Reference: [2] <author> Balc azar, J., and Book, R. </author> <title> Sets with small generalized Kolmogorov complexity. </title> <journal> Acta Informatica 23 (1986), </journal> <pages> 679-688. </pages>
Reference: [3] <author> Balc azar, J., Diaz, J., and Gabarr o, J. </author> <title> Structural Complexity I. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1988. </year>
Reference-contexts: The proof shows yet another interesting application of Kolmogorov complexity in structural complexity theory. 2 Definitions and Notations Recall the definitions of standard complexity classes such as P, NP, BPP, PH, #P, etc. as found in <ref> [3] </ref> and [4]. Definition 2.1 A language L is in P if there exists #P function f such that for all x 2 fl [x 2 L () f (x) 1 mod 2]. Definition 2.2 [8] 1.
Reference: [4] <author> Balc azar, J., Diaz, J., and Gabarr o, J. </author> <title> Structural Complexity II. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1990. </year>
Reference-contexts: The proof shows yet another interesting application of Kolmogorov complexity in structural complexity theory. 2 Definitions and Notations Recall the definitions of standard complexity classes such as P, NP, BPP, PH, #P, etc. as found in [3] and <ref> [4] </ref>. Definition 2.1 A language L is in P if there exists #P function f such that for all x 2 fl [x 2 L () f (x) 1 mod 2]. Definition 2.2 [8] 1.
Reference: [5] <author> Chari, S., and Rohatgi, P. </author> <title> An alternate proof of Toda's theorem. </title> <note> submitted to IPL. </note>
Reference-contexts: This seminal theorem has been proved in a number of ways (r.f. [10], [16], [14], <ref> [5] </ref>). An important lemma in the proof is the inclusion NP BP: P. 4 In this section, we provide a new viewpoint to the above proofs by proving a corollary to NP BP: P, using Kolmogorov complexity.
Reference: [6] <author> Gavald a, R. </author> <title> Bounding the complexity of advice functions. </title> <booktitle> In Proc. Seventh Annual Conference Structure in Complexity Theory (1992), </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pp. 249-254. </pages>
Reference: [7] <author> Gavald a, R. </author> <title> Kolmogorov Randomness and Its applications to Structural Complexity Theory. </title> <type> PhD thesis, </type> <institution> Universitat Politecnica de Catalunya, </institution> <month> April </month> <year> 1992. </year>
Reference: [8] <author> Karp, R., and Lipton, R. </author> <title> Some connections between nonuniform and uniform complexity classes. </title> <booktitle> In Proc. 12th ACM Symp. on Theory of Computing (1980), </booktitle> <pages> pp. 302-309. </pages>
Reference-contexts: Definition 2.1 A language L is in P if there exists #P function f such that for all x 2 fl [x 2 L () f (x) 1 mod 2]. Definition 2.2 <ref> [8] </ref> 1. A set A belongs to C=F if there exists a B in C and a function f : N ! fl in F , such that, for all x 2 fl , x 2 A if and only if hx; f (jxj)i 2 B. 2.
Reference: [9] <author> K obler, J. </author> <title> Locating P/poly optimally in the extended low hierarchy. </title> <type> Tech. Rep. Nr. 92-05, </type> <institution> Ulmer Informatik-Berichte, </institution> <year> 1992. </year>
Reference: [10] <author> K obler, J., Sch oning, U., and Toran, J. </author> <title> The Graph Isomorphism Problem: Its Structural Complexity. </title> <publisher> Birkhauser, </publisher> <year> 1993. </year>
Reference-contexts: This seminal theorem has been proved in a number of ways (r.f. <ref> [10] </ref>, [16], [14], [5]). An important lemma in the proof is the inclusion NP BP: P. 4 In this section, we provide a new viewpoint to the above proofs by proving a corollary to NP BP: P, using Kolmogorov complexity. <p> We use the well-known technique of amplifying the probability by or-ing repeated trials. For each trial we rename the variables of F , choose a new m and y, and reuse t n (amplification does not increase the advice length). The following construction is from <ref> [10] </ref>.
Reference: [11] <author> Li, M., and Vitanyi, P. </author> <title> An Introduction to Kolmogorov Complexity and its applications. </title> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Let T A , an oracle Turing machine that computes A , be a universal oracle transducer. If T A (p; y) = x then A (p; y) = x, and hp; yi is a description of x, relative to A. 3 Definition 2.4 <ref> [11] </ref> The resource bounded Kolmogorov complexity of x conditional to ; y and A, denoted C t;s (xjA; y), is the length of the shortest program p such that A (p; y) is x. The simulation of A by T A runs in time t (jxj) and space s (jxj). <p> Note that in the definition of C t;s (xjA; y) the information after the "j" is given for free. A may consist of several oracles joined together, and y may consist of several strings paired together. The Invariance Theorem in <ref> [11] </ref> states that Theorem 2.5 There exists a universal partial function 0 such that for all other partial func tions , oracles A, and all x; y 2 fl , there exists a constant c dependent only on such that C 0 (xjA; y) = C (xjA; y) + c. <p> Definition 2.7 <ref> [11] </ref> The self-delimiting code of a string x is the string xx where x = u10, where u is obtained by doubling each bit of the binary representation of jxj. <p> The following definitions and Lemma 3.1 are derived from <ref> [11] </ref>. Let h : n ! m be a linear transformation given by a given m fi n matrix R = r ij . <p> The mapping h separates C within B if it separates each x 2 C within B. The set of mappings H separates C within B if for each x 2 C some h 2 H separates x within B. We require a coding lemma from <ref> [11] </ref>: Lemma 3.1 (Coding lemma) Let B =n , where jBj = k, and let N n. Let m = 1 + dlog ke. There is a collection H of N m linear transformations n ! m such that H separates B within B. Proof. <p> exists a B 2 C and a polynomial p such that, 8n; 8x 2 =n Prob y;jyj=p (jxj) [x 2 A () hx; yi 2 B] &gt; 1 2 q (jxj) We now prove another familiar fact from structural complexity using Kolmogorov complex ity (the proof idea is by Gasarch <ref> [11] </ref>) : Lemma 3.5 If the class C is closed under positive reductions, then BP: C C=poly Proof.
Reference: [12] <author> Long, T. </author> <title> On restricting the size of oracles compared with restricting access to oracles. </title> <journal> SIAM J. of Comput. </journal> <volume> 14, 3 (1985), </volume> <pages> 585-597. </pages>
Reference: [13] <author> Papadimitriou, C., and Zachos, S. </author> <title> Two remarks on the power of counting. </title> <booktitle> In Proc. sixth GI conf. on Theoretical Comp. </booktitle> <address> Sc. </address> <year> (1982), </year> <pages> pp. 269-276. </pages> <address> Springer-Verlag,LCNS, </address> <month> #145. </month>
Reference: [14] <author> Regan, K. W., and Royer, J. S. </author> <title> A simpler proof of PH BP[P]. </title> <type> preprint. </type>
Reference-contexts: This seminal theorem has been proved in a number of ways (r.f. [10], [16], <ref> [14] </ref>, [5]). An important lemma in the proof is the inclusion NP BP: P. 4 In this section, we provide a new viewpoint to the above proofs by proving a corollary to NP BP: P, using Kolmogorov complexity.
Reference: [15] <author> Sch oning, U. </author> <title> Probabilistic complexity classes and lowness. </title> <booktitle> In Proc. Conference on Structure in Complexity Theory (1987), </booktitle> <editor> A. Selman, Ed., </editor> <publisher> Springer-Verlag, </publisher> <pages> pp. 2-8. </pages>
Reference-contexts: Thus we can boost the error probability of the above algorithm to 3=4 and by further or-ing N 2 trials, to inverse exponential probability: 1 1=2 2N 2 . 3.3 Constructing M P Recall the definition of positive reducibility from <ref> [15] </ref>: Definition 3.3 [15] For two sets A and B, we write A 2 P pos (B) if and only if A 2 P (B) is witnessed by some oracle machine M with the additional property that for all oracle sets X and Y , X Y =) L (M; X) <p> Thus we can boost the error probability of the above algorithm to 3=4 and by further or-ing N 2 trials, to inverse exponential probability: 1 1=2 2N 2 . 3.3 Constructing M P Recall the definition of positive reducibility from <ref> [15] </ref>: Definition 3.3 [15] For two sets A and B, we write A 2 P pos (B) if and only if A 2 P (B) is witnessed by some oracle machine M with the additional property that for all oracle sets X and Y , X Y =) L (M; X) L (M; Y <p> A class C is closed under P pos if A 2 P pos (B) and B 2 C then A 2 C. It is well known that P, PSPACE, NP, P, and PH closed under positive reducibility. Recall the definition of the BP operator applied to a class C <ref> [15] </ref>. Lemma 3.4 (Amplification lemma) [15] Let the class C be closed under P pos . <p> It is well known that P, PSPACE, NP, P, and PH closed under positive reducibility. Recall the definition of the BP operator applied to a class C <ref> [15] </ref>. Lemma 3.4 (Amplification lemma) [15] Let the class C be closed under P pos .
Reference: [16] <author> Toda, S. </author> <title> On the computational power of PP and P. </title> <booktitle> In Proc. 30th IEEE Symp. on Foundations of Computer Science (1989), </booktitle> <pages> pp. 514-519. </pages>
Reference-contexts: This seminal theorem has been proved in a number of ways (r.f. [10], <ref> [16] </ref>, [14], [5]). An important lemma in the proof is the inclusion NP BP: P. 4 In this section, we provide a new viewpoint to the above proofs by proving a corollary to NP BP: P, using Kolmogorov complexity.
Reference: [17] <author> Toda, S., and Ogiwara, M. </author> <title> Counting classes are at least as hard as the the polynomial-time hierarchy. </title> <type> Tech. Rep. </type> <institution> CSIM 90-09, University of Electro-Comm., Department of Computer Science and Information Mathematics, </institution> <address> Chofu-shi, Tokyo 182, Japan, </address> <year> 1990. </year>
Reference-contexts: The advice string f (jxj) depends only on the length of the input string x and is presented at no cost. Toda and Ogiwara in <ref> [17] </ref> state the following as a corollary of Lemma 1.1: Theorem 1.2 NP P/poly. We prove Theorem 1.2 using Kolmogorov complexity. The Kolmogorov complexity of a string x is the length of the shortest program p that produces x from empty input, (denoted C (x) = jpj). <p> We show that NP P=poly, a result first stated in by Toda and Ogiwara in <ref> [17] </ref>. We prove NP P=poly in three stages: 1.
Reference: [18] <author> Valiant, L., and Vazirani, V. </author> <title> NP is as easy as detecting unique solutions. </title> <booktitle> In Proc. 17th ACM Symp. Theory of Computing (1986), </booktitle> <pages> pp. 458-463. 13 </pages>
Reference-contexts: Since then, there has been considerable research on counting classes, the best known of which is Toda's seminal theorem proving that the polynomial time hierarchy (PH) is contained in BP:P (and therefore, in P (PP)). Toda's proof depends critically on an efficient randomized procedure developed by Valiant and Vazirani <ref> [18] </ref> to show that NP random reduces to USAT (the set of boolean formulae with unique satisfying assignments). Toda uses this procedure to show: Lemma 1.1 NP BP:P. Karp and Lipton ([8]) defined advice functions as a notion of nonuniform complexity.
References-found: 18

