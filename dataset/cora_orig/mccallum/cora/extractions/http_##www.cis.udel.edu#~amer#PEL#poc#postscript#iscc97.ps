URL: http://www.cis.udel.edu/~amer/PEL/poc/postscript/iscc97.ps
Refering-URL: http://www.cis.udel.edu/~amer/PEL/poc/
Root-URL: http://www.cis.udel.edu
Email: Email: fmarasli,amer,pconradg@cis.udel.edu  
Title: Partially Reliable Transport Service  
Author: Rahmi Marasli Paul D. Amer Phillip T. Conrad 
Address: 19716 USA  
Affiliation: Computer and Information Sciences Department University of Delaware, Newark, DE  
Abstract: An analytic model is presented for a partially reliable transport protocol based on retransmissions. The model illustrates tradeoffs between two QoS parameters (delay and throughput), and various levels of reliability. The model predicts that the use of reliable transport service when an application only needs a partially reliable one causes considerable throughput decreases and delay increases in lossy networks. On the other hand, over lossy networks, unreliable transport service is unable to respect an application's loss tolerance. In lossy environments, partially reliable transport service avoids the extra cost of reliable transport service, and, simultaneously, guarantees the minimal reliability that an application requires. Retransmission-based partially reliable transport service can be provided through either sender-based or receiver-based loss detection and recovery. Results show that both techniques provide almost identical reliability and delay. However, a sender-based approach provides better throughput than a receiver-based approach at high ack loss rates. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> P. Amer, C. Chassot, T. Connolly, P. Conrad, and M. Diaz. </author> <title> Partial order transport service for multimedia and other applications. </title> <journal> IEEE/ACM Trans on Networking, </journal> <volume> 2(5), </volume> <pages> 440-456, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: UDP, on the other hand, introduces virtually no increase in delay or reduction in throughput, but provides no reliability enhancement over IP. To achieve the best tradeoff between reliability and other QoS parameters, partially reliable services have been proposed <ref> [1, 3, 4] </ref>. fl This work supported, in part, by the National Science Foundation (NCR-9314056), the US Army Communication Electronics Command (CECOM), Ft. Monmouth, the US Army Research Office (DAAH04-94-G-0093, DAAL03-92-G-0070), and the US Department of the Army, Army Research Laboratory under Cooperative Agreement DAAL01-96-2-0002 Federated Laboratory ATIRP Consortium. <p> POC fills the gap between ordered and reliable (e.g., TCP) and unordered and unreliable (e.g., UDP) services <ref> [1, 2] </ref>. packet. If the corresponding ack does not arrive within its timeout period, Transport Sender assumes the packet is lost. In the study of both sender-based and receiver-based methods, we model the transport protocol's decision on recovering a lost packet via recovery probabilities.
Reference: [2] <author> T. J. Connolly, P. D. Amer, and P. T. Conrad. RFC-1693, </author> <title> An Extension to TCP: Partial Order Service. </title>
Reference-contexts: POC fills the gap between ordered and reliable (e.g., TCP) and unordered and unreliable (e.g., UDP) services <ref> [1, 2] </ref>. packet. If the corresponding ack does not arrive within its timeout period, Transport Sender assumes the packet is lost. In the study of both sender-based and receiver-based methods, we model the transport protocol's decision on recovering a lost packet via recovery probabilities.
Reference: [3] <author> B. J. Dempsey. </author> <title> Retransmission-Based Error Control For Continuous Media Traffic In Packet-Swithced Networks. </title> <type> PhD thesis, </type> <institution> University of Virginia, </institution> <year> 1994. </year>
Reference-contexts: UDP, on the other hand, introduces virtually no increase in delay or reduction in throughput, but provides no reliability enhancement over IP. To achieve the best tradeoff between reliability and other QoS parameters, partially reliable services have been proposed <ref> [1, 3, 4] </ref>. fl This work supported, in part, by the National Science Foundation (NCR-9314056), the US Army Communication Electronics Command (CECOM), Ft. Monmouth, the US Army Research Office (DAAH04-94-G-0093, DAAL03-92-G-0070), and the US Department of the Army, Army Research Laboratory under Cooperative Agreement DAAL01-96-2-0002 Federated Laboratory ATIRP Consortium. <p> Although widely rejected, the retransmission of continuous media (e.g., audio) is shown to be feasible by Dempsey <ref> [3] </ref>. Dempsey's results are encouraging in terms of providing partially reliable transport service through retransmissions for multimedia applications. Dempsey mainly uses increased control time 1 to allow timely retransmissions of the lost data. Partial reliability guarantees can be provided through transport layer retransmissions. <p> In previous work, the authors investigated the cost of not 1 Control time is the time that the first packet in a continuous media (e.g., audio) stream is artificially delayed at the receiver in order to buffer sufficient packets to provide for continuous playback in the presence of jitter <ref> [3] </ref>. using the ideal reliability service for applications [6]. This investigation uses a sender-based method called k XMIT reliability. In contrast, in this paper, we analytically study both sender-based and receiver-based methods in providing partially reliable service, and compare their performances. <p> of the three factors studied (i.e., packet loss, ack loss and an application's loss tolerance), only ack losses make a difference in the performance of the two methods, and mainly in the throughput comparisons. 4 Related Work In the literature, Application-Oriented Error Control (AOEC) [4] and Partially Error-Controlled Connections (PECC) <ref> [3] </ref> provide partially reliable service by a receiver-based approach. AOEC has the objective of satisfying an application's loss tolerance with minimum retransmission overhead. AOEC guarantees that maximum loss tolerance of the application is always respected by retransmitting lost data whenever necessary. <p> Unlike AOEC where emphasis is on loss tolerance, PECC gives priority to the delay constraints of the packets. The basic idea of PECC is applied to audio streams by Dempsey <ref> [3] </ref>. The new delay-constrained receiver-based loss detection and recovery scheme is called Slack ARQ. Dempsey shows that contrary A. B. to the conventional wisdom, it is feasible to retransmit audio packets. <p> Dempsey's results are encouraging in terms of providing partially reliable transport services through retransmissions for multimedia applications. Neither of the existing analytic models (i.e., <ref> [3] </ref> or [4]) studies the effects of ack losses on the performance of partially reliable services. In this paper, we model the effects of both packet and ack losses as well as various levels of application's loss tolerance.
Reference: [4] <author> F. Gong and G. Parulkar. </author> <title> An Application-Oriented Error Control Scheme for High-Speed Networks. </title> <type> Tech Report WUCS-92-37, </type> <institution> Department of Computer Science, Washington University in St. Louis, </institution> <month> November </month> <year> 1992. </year>
Reference-contexts: UDP, on the other hand, introduces virtually no increase in delay or reduction in throughput, but provides no reliability enhancement over IP. To achieve the best tradeoff between reliability and other QoS parameters, partially reliable services have been proposed <ref> [1, 3, 4] </ref>. fl This work supported, in part, by the National Science Foundation (NCR-9314056), the US Army Communication Electronics Command (CECOM), Ft. Monmouth, the US Army Research Office (DAAH04-94-G-0093, DAAL03-92-G-0070), and the US Department of the Army, Army Research Laboratory under Cooperative Agreement DAAL01-96-2-0002 Federated Laboratory ATIRP Consortium. <p> Once a lost packet is detected, the sender decides whether or not to retransmit it based on the loss tolerance of the applica tion. * Receiver-based loss detection and recovery: The receiver detects lost data through gap-detection and loss-timers <ref> [4] </ref>. Once a lost packet is detected and the recovery decision is made, the receiver requests retransmission of the lost packet by returning a negative ack to the sender. <p> Because of this assumption, our computations will bias in favor of a receiver-based method especially in throughput comparisons; yet, as we shall see, a sender-based method still provides better throughput at high ack loss rates and small sender buffer sizes. Real implementations of receiver-based methods (e.g., <ref> [4] </ref>) generally use cumulative, not selective, PACKs to inform Transport Sender that it is unnecessary to keep the corresponding packet in its buffers any more. <p> Conversely, a receiver-based approach achieves higher throughput with larger sender buffer sizes and smaller ack losses. 9 For example, in <ref> [4] </ref>, it is shown that for a receiver-based approach and 100% delivery guarantee (i.e., reliable service), the maximal throughput can be achieved by a buffer size equal to the pipeline size at 0:01% packet loss level, whereas the same throughput can be achieved by a buffer size equal to approximately 2:5 <p> general, Section 3.2 shows that out of the three factors studied (i.e., packet loss, ack loss and an application's loss tolerance), only ack losses make a difference in the performance of the two methods, and mainly in the throughput comparisons. 4 Related Work In the literature, Application-Oriented Error Control (AOEC) <ref> [4] </ref> and Partially Error-Controlled Connections (PECC) [3] provide partially reliable service by a receiver-based approach. AOEC has the objective of satisfying an application's loss tolerance with minimum retransmission overhead. AOEC guarantees that maximum loss tolerance of the application is always respected by retransmitting lost data whenever necessary. <p> AOEC has the objective of satisfying an application's loss tolerance with minimum retransmission overhead. AOEC guarantees that maximum loss tolerance of the application is always respected by retransmitting lost data whenever necessary. The analytic study of AOEC <ref> [4] </ref> assumes that no ack losses, no loss of retransmitted packets, and a 100% delivery guarantee (i.e., not a partially reliable service). PECC is introduced to enable limited recovery of packet losses for stream-based communications in which data completeness must be traded off for low delay service. <p> Dempsey's results are encouraging in terms of providing partially reliable transport services through retransmissions for multimedia applications. Neither of the existing analytic models (i.e., [3] or <ref> [4] </ref>) studies the effects of ack losses on the performance of partially reliable services. In this paper, we model the effects of both packet and ack losses as well as various levels of application's loss tolerance.
Reference: [5] <author> R. Marasli, P. D. Amer, and P. T. Conrad. </author> <title> An Analytic Study of Partially Ordered Transport Services. Computer Networks and ISDN Systems. </title> <note> (To appear). </note>
Reference-contexts: Related work is introduced in Section 4, and the main results are summarized in Section 5. 2 Sender-Based Loss Recovery We present an analytic model of partially reliable transport service using sender-based loss detection and recovery. This model is similar to the one presented in <ref> [5] </ref> to study the protocol Partial Order Connection (POC). 3 This model differs in that it does not require all of the transmitted objects to eventually be communicated. In [5], only full reliability is considered. <p> This model is similar to the one presented in <ref> [5] </ref> to study the protocol Partial Order Connection (POC). 3 This model differs in that it does not require all of the transmitted objects to eventually be communicated. In [5], only full reliability is considered. <p> US and UR represent the admission rate at the sender and the throughput at the receiver, respectively. For reliable (i.e., no loss) service, we have: US = UR = Reliable . In <ref> [5] </ref>, it is shown that Reliable = p succ t pack . In further sections, we use this result when comparing partially reliable service to reliable service. The transport layer delay, Delay, is the expected time for a packet to arrive at Transport Receiver once given to Transport Sender.
Reference: [6] <author> R. Marasli, P. D. Amer, and P. T. Conrad. </author> <title> Retransmission-Based Partially Reliable Transport Service: An Analytic Model. </title> <booktitle> In IEEE INFOCOM'96, </booktitle> <pages> 621-629, </pages> <address> San Fransisco, CA, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: cost of not 1 Control time is the time that the first packet in a continuous media (e.g., audio) stream is artificially delayed at the receiver in order to buffer sufficient packets to provide for continuous playback in the presence of jitter [3]. using the ideal reliability service for applications <ref> [6] </ref>. This investigation uses a sender-based method called k XMIT reliability. In contrast, in this paper, we analytically study both sender-based and receiver-based methods in providing partially reliable service, and compare their performances. <p> In this paper, we model the effects of both packet and ack losses as well as various levels of application's loss tolerance. Our results show that ack losses are more damaging to the throughput of a receiver-based approach than that of a sender-based one. Reference <ref> [6] </ref> analyzes the cost of not using ideal reliability service for applications. This reference uses a sender-based method called k XMIT reliability. A packet with k XMIT reliability can be transmitted (original plus retransmissions) at most k times.
Reference: [7] <author> R. Marasli. </author> <title> Partially Ordered and Partially Reliable Transport Protocols: Performance Analysis. </title> <type> PhD thesis, </type> <institution> University of Delaware, </institution> <year> 1997. </year>
Reference-contexts: Some applications may need certain throughput QoS guarantees. 6 Computational details can be found in <ref> [7] </ref>.
References-found: 7

