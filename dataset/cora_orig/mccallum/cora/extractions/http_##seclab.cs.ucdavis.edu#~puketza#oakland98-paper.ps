URL: http://seclab.cs.ucdavis.edu/~puketza/oakland98-paper.ps
Refering-URL: http://seclab.cs.ucdavis.edu/papers.html
Root-URL: http://www.cs.ucdavis.edu
Email: fbradley,cheung,puketza,mukherje,olssong@cs.ucdavis.edu  (e-mail: bradley@systech.sri.com).  
Title: Detecting Disruptive Routers: A Distributed Network Monitoring Approach for creating new collective works for resale
Author: Kirk A. Bradley Steven Cheung Nick Puketza Biswanath Mukherjee Ronald A. Olsson 
Note: c fl1998 IEEE. Personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or  servers or lists, or to reuse any copyrighted component of this work in other works must be obtained from the IEEE. Kirk Bradley's current affiliation is  This work has been supported by the National Security Agency INFOSEC University Research Program under Contract No. DOD-MDA904-96-1-0118, and by the Defense Advanced Research Projects Agency under grant ARMY/DAAH 04-96-1-0207.  
Web: http://www.cs.ucdavis.edu  
Address: Davis, CA 95616  Ravenswood Avenue, Menlo Park, CA 94025-3493  
Affiliation: Department of Computer Science University of California, Davis  SRI International, 333  
Abstract: An attractive target for a computer system attacker is the router. An attacker in control of a router can disrupt communication by dropping or misrout-ing packets passing through the router. We present a protocol called WATCHERS that detects and reacts to routers that drop or misroute packets. WATCHERS is based on the principle of conservation of flow in a network: all data bytes sent into a node, and not destined for that node, are expected to exit the node. WATCHERS tracks this flow, and detects routers that violate the conservation principle. We show that WATCHERS has several advantages over existing network monitoring techniques. We argue that WATCHERS' impact on router performance and WATCHERS' memory requirements are reasonable for many environments. We demonstrate that in ideal conditions WATCHERS makes no false-positive diagnoses. We also describe how WATCHERS can be tuned to perform nearly as well in realistic conditions. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. M. Bellovin. </author> <title> "Security Problems in the TCP/IP Protocol Suite". </title> <journal> ACM Computer Communication Review, </journal> <volume> 19(2) </volume> <pages> 32-48, </pages> <month> April </month> <year> 1989. </year>
Reference-contexts: A router may also alter or inspect the packets passing through it, or inject packets spuriously into the network. Detailed examples of other malicious router behaviors appear in references <ref> [1] </ref> and [11]. 2 The WATCHERS Protocol This section describes the details of WATCHERS. The goal of WATCHERS is to identify bad routers.
Reference: [2] <author> U. Black. </author> <title> Network Management Standards. </title> <publisher> McGraw-Hill, </publisher> <address> second edition, </address> <year> 1994. </year>
Reference-contexts: Unfortunately, current network management tools (e.g., implementations of SNMP) cannot be used to monitor all of the traffic in a network <ref> [2, 4, 9] </ref>, and therefore they cannot be used to detect all bad routers. 1.4.5 Recording and Tracing Routes Route recording and route tracing are often the first methods used to isolate faults in routers [5]. For the Internet Protocol (IP), route recording is optional for each packet.
Reference: [3] <author> K. A. Bradley. </author> <title> Detecting Disruptive Routers: A Distributed Network Monitoring Approach. </title> <type> Master's thesis, </type> <institution> University of California, Davis, </institution> <month> Septem-ber </month> <year> 1997. </year>
Reference-contexts: Section 2 presents the WATCHERS protocol. Section 3 describes future research tasks. The Appendix proves that WATCHERS is correct: WATCHERS does not make any false-positive diagnoses (when certain conditions hold). For more details on this work, consult the comprehensive report <ref> [3] </ref>. 1.1 Our Model and Associated Terminol ogy An internetwork is a group of networks connected so that computers in different networks can communicate. The networks are connected by routers. Each communication between two computers across a network (or internetwork) is divided into segments of data called packets.
Reference: [4] <author> J. Case, M. Fedor, M. Schoffstall, and J. Davin. </author> <title> "A Simple Network Management Protocol (SNMP)", </title> <month> May </month> <year> 1990. </year> <note> RFC 1157. </note>
Reference-contexts: WATCHERS has four significant advantages over other network monitoring techniques: * A network monitoring tool (e.g., traceroute [5] or an implementation of the Simple Network Management Protocol (SNMP) <ref> [4] </ref>) may fail to detect an attack because the attacker is able to disrupt messages sent by the tool, including messages between separate tool components. <p> can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, most network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [4, 5, 8, 13] </ref>. WATCHERS can identify the exact router (s) which are dropping or misrouting pack ets. * In ideal conditions we show that WATCHERS never identifies a good router as bad (i.e., never makes a false-positive diagnosis). <p> does have a weakness: A malicious router can avoid detection if it can distinguish testing probes from ordinary packets. 1.4.4 Network Management A network management tool monitors the routers and networks in an AS, and can be used to debug problems, control routing, and find computers that violate protocol standards <ref> [4, 7] </ref>. <p> Unfortunately, current network management tools (e.g., implementations of SNMP) cannot be used to monitor all of the traffic in a network <ref> [2, 4, 9] </ref>, and therefore they cannot be used to detect all bad routers. 1.4.5 Recording and Tracing Routes Route recording and route tracing are often the first methods used to isolate faults in routers [5]. For the Internet Protocol (IP), route recording is optional for each packet.
Reference: [5] <author> W. R. Cheswick and S. M. Bellovin. </author> <title> Firewalls and Internet Security: Repelling the Wily Hacker. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Eventually, the bad router is effectively removed from the network, because all of the bad router's neighbors stop sending packets to it. WATCHERS has four significant advantages over other network monitoring techniques: * A network monitoring tool (e.g., traceroute <ref> [5] </ref> or an implementation of the Simple Network Management Protocol (SNMP) [4]) may fail to detect an attack because the attacker is able to disrupt messages sent by the tool, including messages between separate tool components. <p> can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, most network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [4, 5, 8, 13] </ref>. WATCHERS can identify the exact router (s) which are dropping or misrouting pack ets. * In ideal conditions we show that WATCHERS never identifies a good router as bad (i.e., never makes a false-positive diagnosis). <p> implementations of SNMP) cannot be used to monitor all of the traffic in a network [2, 4, 9], and therefore they cannot be used to detect all bad routers. 1.4.5 Recording and Tracing Routes Route recording and route tracing are often the first methods used to isolate faults in routers <ref> [5] </ref>. For the Internet Protocol (IP), route recording is optional for each packet. When this option is selected, each router on the path to the packet's destination appends its IP address to a list in the packet's header. <p> Thus, route tracing reveals the routing decisions of the intermediate routers, and so the method can be used to detect a router that misroutes packets. (The traceroute program <ref> [5] </ref> is a popular implementation of route tracing.) Route tracing suffers from the same limitation as probing; a bad router might be able to identify a test packet, and thereby avoid detection.
Reference: [6] <author> S. Cheung and K. N. Levitt. </author> <title> "Protecting Routing Infrastructures from Denial of Service Using Cooperative Intrusion Detection". </title> <booktitle> In Proc. New Security Paradigms Workshop, </booktitle> <address> Cumbria, UK, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: The simplest way to defeat this method is to corrupt the packet and regenerate the checksum. Hence, it is not a realistic solution for malicious router problems. 1.4.3 A Probing Technique Another way to detect misbehaving routers is a probing technique based on peer testing of routers <ref> [6] </ref>. Using this strategy, a router (the testing router) can test its peers along a suspicious route. The testing router sends a probe to the first router on the route. A probe is a packet that will follow a pre-determined path, ending back at the testing router. <p> Thus, using this new strategy, router 1 can detect router 3's bad behavior. The ability to detect such an attack by consorting routers is an improvement over the conservation-of-flow analysis technique as it first appeared in reference <ref> [6] </ref>. 2.4 Response During a round of WATCHERS, a testing router can diagnose a neighbor as a bad router for four reasons: 1. the testing router did not receive a response mes sage from the neighbor during the RRR sub protocol; 2. the neighbor misrouted a packet; 3. the neighbor failed
Reference: [7] <author> D. E. Comer. </author> <title> Internetworking with TCP/IP: </title> <booktitle> Principles, Protocols, and Architecture, </booktitle> <volume> Vol. 1, </volume> <booktitle> Third Edition. </booktitle> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: does have a weakness: A malicious router can avoid detection if it can distinguish testing probes from ordinary packets. 1.4.4 Network Management A network management tool monitors the routers and networks in an AS, and can be used to debug problems, control routing, and find computers that violate protocol standards <ref> [4, 7] </ref>. <p> Second, the list can be altered by an intermediate router. Third, an intermediate router can simply drop the packet, so that the route list never reaches the destination <ref> [7] </ref>. Route tracing is similar to probing. The main difference is that probing tests the routers on a pre-selected path between two hosts; route tracing identifies and tests the routers in the path that a packet would actually take between the hosts. <p> In such a protocol, each router is aware of each other router and each link between pairs of routers in the AS. Also, each router periodically broadcasts an update message to indicate which of its links to other routers are "up" and which are "down" <ref> [7] </ref>. 2. Good Neighbor Condition: Every router must be directly connected to at least one good router. 3. Good Path Condition: Each pair of good routers must be connected by at least one path of good routers. <p> Three reasons why counter values may be different from the ideal or expected values are: * We have implicitly assumed that good routers never drop packets. However, typical network protocols, including several within the TCP/IP suite, drop packets due to errors in transmission or congestion in the network <ref> [7] </ref>. Routers with extremely heavy traffic may drop packets for these reasons at significant rates. * Neighbors may not be perfectly synchronized when a new round of WATCHERS begins. Assume that there are N routers in the AS, and let k = dN=2e.
Reference: [8] <author> S. Garfinkel and G. Spafford. </author> <title> Practical UNIX and Internet Security. </title> <publisher> O'Reilly & Associates, Inc., </publisher> <address> second edition, </address> <year> 1996. </year>
Reference-contexts: can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, most network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [4, 5, 8, 13] </ref>. WATCHERS can identify the exact router (s) which are dropping or misrouting pack ets. * In ideal conditions we show that WATCHERS never identifies a good router as bad (i.e., never makes a false-positive diagnosis).
Reference: [9] <author> G. </author> <title> Held. AN Management with SNMP and RMON. </title> <publisher> John Wiley & Sons, </publisher> <year> 1996. </year>
Reference-contexts: Unfortunately, current network management tools (e.g., implementations of SNMP) cannot be used to monitor all of the traffic in a network <ref> [2, 4, 9] </ref>, and therefore they cannot be used to detect all bad routers. 1.4.5 Recording and Tracing Routes Route recording and route tracing are often the first methods used to isolate faults in routers [5]. For the Internet Protocol (IP), route recording is optional for each packet.
Reference: [10] <author> C. Huitema. </author> <title> Routing in the Internet. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Since a good router sends routing updates whenever it changes its own routing table, and its good neighbors immediately change their own tables accordingly, any period of discrepancy between the routing tables of neighboring good routers should be brief <ref> [10] </ref>. Moreover, in modern link-state routing protocols, link costs are static and therefore link-state changes are infrequent [15]. Even so, a momentary disagreement over topology may cause a router to increment an M counter with the mistaken belief that a neighbor has misrouted a packet.
Reference: [11] <author> L. Joncheray. </author> <title> "A Simple Active Attack Against TCP". </title> <booktitle> In Proc. 5th USENIX UNIX Security Symposium, </booktitle> <pages> pages 7-19, </pages> <address> Salt Lake City, Utah, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: A router may also alter or inspect the packets passing through it, or inject packets spuriously into the network. Detailed examples of other malicious router behaviors appear in references [1] and <ref> [11] </ref>. 2 The WATCHERS Protocol This section describes the details of WATCHERS. The goal of WATCHERS is to identify bad routers.
Reference: [12] <author> John Moy. </author> <note> "OSPF Version 2", </note> <month> July </month> <year> 1997. </year> <title> Internet RFC 2178. </title>
Reference-contexts: However, in at least one link-state routing protocol, the Open Shortest Path First protocol, when two neighbors advertise conflicting information about the status of their shared link, the other routers treat the link as down <ref> [12] </ref>.) Also, the testing router ceases to send packets along that link, and acknowledge traffic received on that link.
Reference: [13] <author> R. Perlman. </author> <title> Network Layer Protocols with Byzantine Robustness. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, </institution> <month> October </month> <year> 1988. </year>
Reference-contexts: can detect routers that selectively drop or misroute packets, as well as routers that cooperate to conceal malicious behavior. * When they detect suspicious behavior, most network monitoring techniques are unable to locate the malicious (or faulty) routers, or they are only able to identify a list of potential suspects <ref> [4, 5, 8, 13] </ref>. WATCHERS can identify the exact router (s) which are dropping or misrouting pack ets. * In ideal conditions we show that WATCHERS never identifies a good router as bad (i.e., never makes a false-positive diagnosis). <p> A flooded transmission is one in which the data is sent over every link in the network (reaching every node). Flooding is fast and is the most robust form of communication in a network containing faulty nodes <ref> [13] </ref>. 1.2 Routing The routers in an AS communicate to update their routing tables as the network topology changes according to a routing protocol. Each router in an AS runs the same routing protocol. Many routing protocols fit the following description. <p> Here we summarize several of them and comment on their abilities to detect bad routers. 1.4.1 Hop-by-Hop Acknowledgements Perlman first proposed the idea of intermediate hop acknowledgments <ref> [13] </ref>. Under this scheme, when a host S sends a packet to host D, S receives an ac-knowledgement (ACK) from D and from each router on the path from S to D. <p> router must be either the first router on the path which did not send an ACK to S, or the router previous to that router in the path. ffifl *fi ffifl *fi However, this security mechanism can be defeated by consorting bad routers (routers that cooperate to hide malicious behavior) <ref> [13] </ref>. In Figure 1, suppose router 4 drops a packet (from S and intended for D) while router 1 covers for router 4 by dropping the ACK from router 3. <p> For example, if a packet's destination address is changed in transit, that packet will be misrouted. Such alterations can be prevented by checksums and cryptographic authentication mechanisms. However, these measures do not protect a packet from being dropped. A hop-by-hop checksum verification has been proposed <ref> [13] </ref>. The checksum is verified at each router to isolate a packet-corrupting router. This method is both time-intensive and open to attack. The simplest way to defeat this method is to corrupt the packet and regenerate the checksum.
Reference: [14] <author> B. Soh and T. Dillon. </author> <title> "Setting Optimal Intrusion-Detection Thresholds". </title> <journal> Computers and Security, </journal> <volume> 14(7) </volume> <pages> 621-31, </pages> <year> 1995. </year>
Reference-contexts: Such environments may require threshold values that change dynamically. While we have identified some of the issues involved in setting thresholds, this is an open research problem. Some related work on this problem appears in the intrusion detection literature <ref> [14] </ref>. 2.6 Memory Requirements and Perfor mance In many environments, WATCHERS' memory requirements are reasonable.
Reference: [15] <author> M. Steenstrup. </author> <title> Routing in Communications Networks. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: Moreover, in modern link-state routing protocols, link costs are static and therefore link-state changes are infrequent <ref> [15] </ref>. Even so, a momentary disagreement over topology may cause a router to increment an M counter with the mistaken belief that a neighbor has misrouted a packet. The threshold values are also dependent on the WATCHERS period (time between consecutive rounds).
References-found: 15

