URL: http://www.cs.clemson.edu/CSE/SECSE.ps
Refering-URL: http://www.cs.clemson.edu/CSE/index.html
Root-URL: http://www.cs.clemson.edu
Email: steve@cs.clemson.edu  
Phone: (803) 656-5880  
Title: Engineering  
Author: D. E. Stevenson 
Date: October 3, 1994  
Address: Clemson, SC 29634-1906  
Affiliation: Department of Computer Science Clemson University  
Note: Software Engineering Frontiers in Computational Science and  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> Enrico G. Beltrametti and Bas C. van Fraassen. </author> <booktitle> Current Issues in Quantum Logic. </booktitle> <publisher> Plenum Press, </publisher> <year> 1981. </year>
Reference-contexts: Science in the 17th century was oriented towards "reasoning" but not "experimental verification." 2 We note that analysis is not yet born. Their concept of mathematics is geometry, not analysis 3 Except for some areas like quantum logic. See <ref> [1] </ref>. 2 Perhaps the greatest impact of computational science and engineering to date is that it now allows the use of non-linear methods where non-physical assumptions were required before (see Section 1.2).
Reference: [2] <author> Errett E. Bishop. </author> <title> The crisis in contemporary mathematics. </title> <journal> Historia Mathematica, </journal> <volume> 2 </volume> <pages> 507-517, </pages> <year> 1975. </year>
Reference-contexts: Mathematical foundations have not been a bone of contention 3 . However, there are problems with differences between some areas of classical mathematics and mathematics needed for computation [18]. In general, the criticisms of the intuitionistic foundationalists, including Errett Bishop <ref> [2] </ref>, have not had as great an impact on working mathematics as it might have. However, computational science and engineering is, per force, constructive. 1.1.1 A New Paradigm for Science The standard model of scientific enquiry is the "hypotheses-test" cycle.
Reference: [3] <author> Errett J. Bishop and Douglas Bridges. </author> <title> Constructive Analysis. </title> <publisher> Springer-Verlag, </publisher> <year> 1985. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [4] <author> J. P. Cleave. </author> <title> The primitive recursive analysis of ordinary differential equations and the complexity of their solutions. </title> <journal> J. Comp. Sys. Sci., </journal> <volume> 3 </volume> <pages> 447-455, </pages> <year> 1969. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [5] <author> Edward E. David Jr. Renewing U. S. </author> <title> Mathematics: A Plan for the 1990s. </title> <publisher> National Academy Press (National Research Council), </publisher> <year> 1990. </year>
Reference: [6] <author> Harold T. Davis. </author> <title> Introduction to Nonlinear Differential and Integeral Equations. </title> <publisher> Dover, </publisher> <year> 1960. </year>
Reference-contexts: In our terminology, we would say that Equation (2) is "physically approximate but mathematically exact" while Equation (1) is more "physically exact but mathematically approximate". It is mathematically approximate because elliptic integrals are solvable only by computation of series <ref> [6] </ref>. Since we see computational science and engineering as an interdisciplinary endeavor, there is a need to merge the methods and viewpoints from the individual disciplines involved. Under the current methodologies of science, mathematics plays a role as a tool.
Reference: [7] <author> Lewis Epstein. </author> <title> Thinking Physics is Gedanken Physics. </title> <publisher> Insight Press, </publisher> <year> 1983. </year>
Reference: [8] <author> J. J. Dongarra et al. </author> <title> LINPACK: users' guide. </title> <institution> Soc. for Indust. and Appl. Math., </institution> <year> 1979. </year>
Reference-contexts: Is this a hardware, a software, or an algotecture problem? An algotecture problem is a problem arising from the attempt to put a particular algorithm on a particular (hardware-software) architecture. 1.3.1 Software For example, consider the development of the so-called Level 3 BLAS <ref> [8] </ref>. When LINPACK was originally conceived, the only model of computation was the von Neumann model. The Basic Linear Algebra Subprograms|BLAS as they came to be known|were motivated by vector operations.
Reference: [9] <institution> Federal Coordinating Council for Science, Engineering and Technology. Grand Challenges 1993: High Performance Computing and Communications. NSF, National Science Foundation, Computer and Information Science and Engineering Directorate, </institution> <address> 1800 G Street N.W., Washington, DC 20550, </address> <year> 1993. </year> <note> May be obtained via e-mail through pubsnote.nsf.gov. </note>
Reference: [10] <author> G. E. Forsythe, M. A. Malcum, and C. B. Moler. </author> <title> Computer Methods for Mathematical Computation. </title> <publisher> Prentice-Hall, </publisher> <year> 1977. </year>
Reference-contexts: Where are all the rest? The ones we usually give our students are not there since Brent is regarded as far superior to any others. Checking numerical texts does not turn up any references to a zero finder by Brent|until you run into a text Forsythe, Malcolm and Moler <ref> [10] </ref>. Routine like Brent's zeroin are often buried in the literature and there is no particular guarantee that a "classically-trained" mathematician or numerical analyst is aware 11 of such routines.
Reference: [11] <author> W. Edward Gettys, Frederick J. Keller, and Malcolm J. Skove. </author> <title> Classical and Modern Physics. </title> <publisher> McGraw-Hill, </publisher> <year> 1988. </year>
Reference-contexts: For example, consider the model of a pendulum such as one might find in an undergraduate physics book <ref> [11] </ref>. Figure 1 shows a diagram of a simple pendulum. There is a point mass m at the end of a rigid, massless rod of length L. The pendulum swings in an arc measured by the angle . At , the restoring force is mg sin , ignoring friction.
Reference: [12] <author> David Gries. </author> <title> Calculation and discrimination: a more effective curriculum. </title> <journal> C. ACM, </journal> <volume> 34(3) </volume> <pages> 45-55, </pages> <month> Mar </month> <year> 1991. </year>
Reference: [13] <author> David Gries, Raymond Miller, Robert Ritchie, and Paul Young. </author> <title> Imbalance between Growth and Funding in Academic Computer Science: Two Trends Colliding. </title> <institution> Computer Science Board, </institution> <month> April </month> <year> 1986. </year>
Reference: [14] <author> A. Grzegorczyk. </author> <title> Some approaches to constructive analysis. </title> <editor> In A. Heyting, editor, </editor> <title> Constructivity in Math., </title> <journal> Stud. Logic Found. Math., </journal> <pages> pages 43-61. </pages> <publisher> North Holland, </publisher> <year> 1959. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [15] <author> Paul Hewitt. </author> <title> Conceptual Physics: A New Introduction to Your Environment. Little, </title> <publisher> Brown, </publisher> <year> 1971. </year> <month> 14 </month>
Reference: [16] <editor> IEEE Computer Society. </editor> <booktitle> Proceedings of Supercomputing '88. IEEE Computer Society, </booktitle> <month> November 14-18 </month> <year> 1988. </year>
Reference: [17] <editor> IEEE Computer Society. </editor> <booktitle> Proceedings of Supercomputing '89. IEEE Computer Society, </booktitle> <month> November 14-18 </month> <year> 1989. </year>
Reference: [18] <author> Morris Kline. </author> <title> Mathematics: The Loss of Certainty. </title> <publisher> Oxford University Press, </publisher> <year> 1980. </year>
Reference-contexts: Mathematical foundations have not been a bone of contention 3 . However, there are problems with differences between some areas of classical mathematics and mathematics needed for computation <ref> [18] </ref>. In general, the criticisms of the intuitionistic foundationalists, including Errett Bishop [2], have not had as great an impact on working mathematics as it might have. <p> Under the current methodologies of science, mathematics plays a role as a tool. For the outsider, certain questions about the basis of mathematics are ignored <ref> [18] </ref>. The most important question for the present discussion is the question of computability. Ordinary calculus, as taught to freshmen and sophomores, assumes certain things about existence, leading to impredicative assumptions that are inherently non-computational in nature [18]. <p> For the outsider, certain questions about the basis of mathematics are ignored <ref> [18] </ref>. The most important question for the present discussion is the question of computability. Ordinary calculus, as taught to freshmen and sophomores, assumes certain things about existence, leading to impredicative assumptions that are inherently non-computational in nature [18]. The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed [3, 4, 14, 19, 21, 31, 30].
Reference: [19] <author> C. Kreitz and K. Weihrauch. </author> <title> A unified approach to constructive and recursive analysis. </title> <editor> In E. Borger, W. Oberschelp, M. M. Richter, B. Schinzel, and W. Thomas, editors, </editor> <booktitle> Computation and Proof Theory, Logic Colloq. </booktitle> <address> Aachen 2, 1983., LNM 1104. </address> <publisher> Springer-Verlag, </publisher> <year> 1983. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [20] <author> John Krommes. </author> <title> FWEB User's Guide. </title> <institution> Princeton University, </institution> <year> 1991. </year>
Reference: [21] <author> S. Mazur. </author> <title> Computable Analysis. </title> <publisher> PWN, </publisher> <year> 1963. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [22] <institution> National Science Board. Undergraduate Science, Mathematics, and Engineering Education. National Science Board, </institution> <month> March </month> <year> 1986. </year> <month> NSB 86-100. </month>
Reference: [23] <author> National Science Foundation. </author> <booktitle> Report on the National Science Foundation Disciplinary Workshops on Undergraduate Education. National Science Foundation, </booktitle> <month> April </month> <year> 1989. </year>
Reference: [24] <author> National Science Foundation. </author> <booktitle> Report on the National Science Foundation Workshop on Science, Engineering, and Mathematics Education in Two-Year Colleges. National Science Foundation, </booktitle> <month> June </month> <year> 1989. </year>
Reference: [25] <institution> Office of Science and Technology Policy. The Federal High Performance Computing Program, </institution> <year> 1989. </year> <note> as reported in Computing Research News, Fall, </note> <year> 1989. </year> <title> Includes a listing of the Grand Challenges. </title>
Reference: [26] <author> George Polya. </author> <title> Mathematical Discovery: On Understanding, Learning, and Teaching Problem Solving. </title> <publisher> Wiley, </publisher> <year> 1965. </year> <journal> 2 volumes: </journal> <volume> volume 1-1962; volume 2-1965. </volume>
Reference: [27] <author> George Polya. </author> <title> Mathematics and Plausible Reasoning. </title> <publisher> Princeton University Press, </publisher> <year> 1968. </year>
Reference: [28] <author> George Polya. </author> <title> How to solve it: a new aspect of mathematical method. </title> <publisher> Princeton University Press, </publisher> <year> 1971. </year>
Reference: [29] <author> George Polya. </author> <title> Mathematical Methods in Science. </title> <journal> Mathematical Association of America, </journal> <year> 1977. </year>
Reference: [30] <author> Marian B. Pour-El and J. Ian Richards. </author> <title> Noncomputability in analysis and physics: a complete determination of the class of non-computable linear operators. </title> <journal> Adv. Math., </journal> <volume> 48 </volume> <pages> 44-74, </pages> <year> 1983. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [31] <author> Marian B. Pour-El and J. Ian Richards. </author> <title> Computability in Analysis and Physics. Perspectives in Mathematical Logic. </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: The reliance on computation in computational science and engineering opens a very important question: How much of ordinary mathematics is usable in the computational world? The constructivity question has been addressed <ref> [3, 4, 14, 19, 21, 31, 30] </ref>. Unfortunately, constructivity is not the same thing as "compute on a workstation." As an illustration as to why this question is important, take the recent "discovery" of chaos.
Reference: [32] <author> Harold J. Raveche, Duncan H. Lawrie, and Alvin M. Despain, </author> <title> editors. A National Computing Initiative: The Agenda for Leadership. </title> <booktitle> Report of the Panel on Research Issues in Large-Scale Computational Science and Engineering, SIAM Workshop, </booktitle> <address> Leesburg, VA, </address> <month> February 2-3. </month> <institution> Society for Industrial and Applied Mathematics, </institution> <year> 1987. </year>
Reference: [33] <author> Alan H. Schoenfeld, </author> <title> editor. Problem solving in the mathematics curriculum: a report, recommendations and an annotated bibliography. </title> <booktitle> Mathematics Association of America(Committee on the Teaching of Undergraduate Mathematics), </booktitle> <year> 1983. </year>
Reference: [34] <institution> SIAM. </institution> <note> LAPACK Users' Guide, </note> <month> May </month> <year> 1992. </year>
Reference-contexts: The Basic Linear Algebra Subprograms|BLAS as they came to be known|were motivated by vector operations. The BLAS, which were originally considered absolutely primitive, have been redesigned several times as, first, vector processors, then, distributed processors became available. Designing and tuning such a project as LINPACK, or its follow-on LAPACK <ref> [34] </ref>, for a large number of incompatible architectures will be daunting, to say the least. LINPACK also points out the difference between mathematics as practiced by the computationalist and the non-computationalist.
Reference: [35] <author> Lisa M. C. Smith and Mansur H. Samadzadeh. </author> <title> An annotated bibliography of literate programming. </title> <journal> ACM SIGPLAN Notices, </journal> <volume> 26(1), </volume> <month> January </month> <year> 1991. </year>
Reference: [36] <author> D. E. Stevenson. </author> <title> A computational science manifesto. </title> <type> Technical Report 93-113, </type> <institution> Clemson University, </institution> <year> 1993. </year> <note> http://www.cs.clemson.edu/CSE/Manifesto.ps. </note>
Reference: [37] <author> D. E. Stevenson and R. M. Panoff. </author> <title> Experiences in building the Clemson computational science program. </title> <booktitle> In Proceedings of Supercomputing '90. ACM, </booktitle> <year> 1990. </year> <note> http://www.cs.clemson.edu/CSE/CACM-revised.ps. </note>
Reference: [38] <author> William J. Thompson. </author> <booktitle> Computing in Applied Science. </booktitle> <publisher> Wiley, </publisher> <year> 1984. </year> <month> 15 </month>
References-found: 38

