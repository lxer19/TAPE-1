URL: http://cairo.cs.uiuc.edu/papers/JSAC98.ps
Refering-URL: http://cairo.cs.uiuc.edu/papers.html
Root-URL: http://www.cs.uiuc.edu
Email: b-li@cs.uiuc.edu, klara@cs.uiuc.edu  
Title: A Control-Based Middleware Framework for Quality of Service Adaptations  
Author: Baochun Li, Klara Nahrstedt 
Affiliation: Department of Computer Science University of Illinois at Urbana-Champaign  
Abstract: In a heterogeneous distributed environment where multiple applications compete and share a limited amount of system resources, applications tend to suffer from variations in resource availability, and are desired to adapt their behavior to the resource variations of the system beyond a minimum Quality of Service (QoS) guarantee. On one hand, current adaptation mechanisms built within an application have the disadvantage of lacking global information to preserve fairness among all applications. On the other hand, an adaptive resource management built within the operating system ignores the data semantics of the application. Hence we believe that a proper adaptive behavior of QoS can be achieved in a middleware framework, having data semantics of the application as well as understanding underlying resource management dynamics. We present a novel control-based middleware framework to enhance QoS adaptations by dynamic control and reconfigurations to the internal functionalities of a distributed multimedia application. Based on a strict model defining QoS metrics, and the Task Flow Model describing the application structure, a Task Control Model is developed based on the control theory. The control theory is applied to the design of Adaptation Tasks to devise control policies for changes of resource requests by individual applications, hence providing graceful degradation or upgrade over a shared resource within a required QoS range, or in extreme cases enforcing reconfiguration process beyond the QoS range. Our assumptions here are that (1) a resource reservation/allocation occurs to preserve the minimal QoS requirement of an application, and (2) not all resource capacity is allocated to reserved service. The adaptation happens over the non-reserved shared capacity. Using this approach, we are able to reason about and validate analytically system attributes such as the stability, agility, fairness and equilibrium values of the control actions over shared resources. Our validation is not only analytical, but also experimental. We have developed an experimental client-server visual tracking system to evaluate our middleware framework. In order to maintain tracking precision in a specified range, the middleware framework controls the tracking application according to the current system dynamics. We show that our framework improves the adaptive abilities of the application, while the adaptive actions are stable, flexible and configurable according to the needs of individual applications. Furthermore, we show a quantitative improvement of resource utilization in comparison to over-allocation approach when QoS guarantees in range are required. fl This research was supported by the Air Force Grant under contract number F30602-97-2-0121, and National Science Foundation Career Grant under contract number NSF CCR 96-23867.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> N. Brown and C. Kindel. </author> <title> Distributed Component Object Model Protocol DCOM/1.0. </title> <note> http://www.microsoft.com/oledev/olecom/draft-brown-dcom-v1-spec-02.txt, 1998. </note>
Reference-contexts: This is made possible by building our control tasks beyond a distributed service enabling platform for heterogeneous environments, for example CORBA [22], Real-time CORBA [19] DCOM <ref> [1] </ref> or COM+ [12]. We do not intend to extend the services of these available enabling platforms, our control tasks are built to use the services provided by them. <p> We can thus define the membership function PositiveError of a fuzzy set PositiveSet as a function of: PositiveError : U + ! <ref> [0; 1] </ref>: (53) Where U + is the positive half of U . So, every element e c i (k) from U + has a membership degree Posi tiveError (e c i (k)) 2 [0; 1], where PositiveSet is completely determined by the set of tuples PositiveSet = f (e c <p> function PositiveError of a fuzzy set PositiveSet as a function of: PositiveError : U + ! <ref> [0; 1] </ref>: (53) Where U + is the positive half of U . So, every element e c i (k) from U + has a membership degree Posi tiveError (e c i (k)) 2 [0; 1], where PositiveSet is completely determined by the set of tuples PositiveSet = f (e c i (k); PositiveError (e c i (k))) j e c Similarly, we can define membership functions NegativeError and Correct for fuzzy sets NegativeSet and CorrectSet. <p> These values are originally the adapted request rate values established by the Adaptation Task, and later scaled to a predetermined linearly ordered scale, e.g. <ref> [1; 1] </ref>, [1; 10], etc., according to the maximum and minimum values in the respective domain of resource types. These scaled values will be attached to each of the objectives to quantify the influence that each objective should have on the chosen alternative. <p> These values are originally the adapted request rate values established by the Adaptation Task, and later scaled to a predetermined linearly ordered scale, e.g. [1; 1], <ref> [1; 10] </ref>, etc., according to the maximum and minimum values in the respective domain of resource types. These scaled values will be attached to each of the objectives to quantify the influence that each objective should have on the chosen alternative.
Reference: [2] <author> A. Campbell and G. Coulson. </author> <title> QoS Adaptive Transports: Delivering Scalable Media to the Desk Top. </title> <journal> IEEE Network, </journal> <year> 1997. </year> <month> 29 </month>
Reference-contexts: Various adaptive mechanisms have been proposed <ref> [2] </ref> [4] [14, 23, 15]. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms.
Reference: [3] <author> S. Cen, C. Pu, R. Staehli, C. Cowan, and J. Walpole. </author> <title> A Distributed Real-Time MPEG Video Audio Player. </title> <booktitle> Proceedings of the 5th International Workshop on Network and Operating System Support of Digital Audio and Video (NOSSDAV'95), </booktitle> <month> April </month> <year> 1995. </year>
Reference-contexts: The essence of a closed-loop control system is its feedback path. Various software and distributed systems utilize feedback information for adaptation purposes <ref> [3, 21, 7] </ref>. For example, the work presented in [3] uses software feedback mechanisms that enhance system adaptiveness by adjusting video sending rate according to on-the-fly network variations. <p> The essence of a closed-loop control system is its feedback path. Various software and distributed systems utilize feedback information for adaptation purposes [3, 21, 7]. For example, the work presented in <ref> [3] </ref> uses software feedback mechanisms that enhance system adaptiveness by adjusting video sending rate according to on-the-fly network variations. However, the algorithms used in most of the software systems are heuristic in nature, and the analysis of various adaptation properties such as stability, steady-state fairness and responsiveness is not addressed.
Reference: [4] <author> Z. Chen, S. Tan, R. Campbell, and Y. Li. </author> <title> Real Time Video and Audio in the World Wide Web. </title> <booktitle> Proceedings of Fourth International World Wide Web Conference, </booktitle> <year> 1995. </year>
Reference-contexts: Various adaptive mechanisms have been proposed [2] <ref> [4] </ref> [14, 23, 15]. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms.
Reference: [5] <editor> J. DeMeer. </editor> <booktitle> On the Specification of End-to-End QoS Control. Proceedings of 5th International Workshop on Quality of Service '97, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: In recent research, control theories have been examined for QoS adaptation. In [18], the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In <ref> [5] </ref>, a control model is proposed for adaptive QoS specification in an end-to-end scenario. In [7], the time variations along the transmission path of a telerobotics system are modeled as disturbances in the proposed perturbed plant model, in which the mobile robot is the target to be controlled.
Reference: [6] <author> G. Franklin and J. Powell. </author> <title> Digital Control of Dynamic Systems. </title> <publisher> Addison-Wesley, </publisher> <year> 1981. </year>
Reference-contexts: For example, if a standard proportional-integral-derivative (PID) control <ref> [6] </ref> 3 is engaged, then u i (k) obeys the equation u i (k) = u i (k 1) + ff [x c (k) x (k)] + fif [x c (k) x (k)] [x c (k 1) x (k 1)]g (20) where ff and fi are configurable scaling factors. <p> Thus, the transfer function F i (z) of the entire system is <ref> [6] </ref>: F i (z) = 1 + D i (z)G i (z) 1 [(ff + fi)z fi] fl i fi 2)z ( fl i (38) We then consider the discrete characteristic equation of the above: z 2 + ( fl i fi 2)z ( fl i According to theorems in the <p> = 1 + D i (z)G i (z) 1 [(ff + fi)z fi] fl i fi 2)z ( fl i (38) We then consider the discrete characteristic equation of the above: z 2 + ( fl i fi 2)z ( fl i According to theorems in the digital control theory <ref> [6] </ref>, in order for the system to be stable, all roots of Equation (39) need to be within the stability boundary, which is the unit circle. In other words, for any root z, we need jzj &lt; 1.
Reference: [7] <author> F. Goktas, J. Smith, and R. </author> <title> Bajcsy. Telerobotics over Communication Networks: Control and Networking Issues. </title> <booktitle> 36th IEEE Conference on Decision and Control, </booktitle> <year> 1997. </year>
Reference-contexts: The essence of a closed-loop control system is its feedback path. Various software and distributed systems utilize feedback information for adaptation purposes <ref> [3, 21, 7] </ref>. For example, the work presented in [3] uses software feedback mechanisms that enhance system adaptiveness by adjusting video sending rate according to on-the-fly network variations. <p> In recent research, control theories have been examined for QoS adaptation. In [18], the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In [5], a control model is proposed for adaptive QoS specification in an end-to-end scenario. In <ref> [7] </ref>, the time variations along the transmission path of a telerobotics system are modeled as disturbances in the proposed perturbed plant model, in which the mobile robot is the target to be controlled.
Reference: [8] <author> B. Graham and A. Ollero. </author> <title> An Introduction to Fuzzy Control. </title> <publisher> Springer, </publisher> <year> 1996. </year>
Reference-contexts: We also define control error values as follows: e c i (k) u c Obviously, the universe of discourse U in the fuzzy set theory <ref> [8] </ref> corresponds to the set of all possible values of e c i (k). We can thus define the membership function PositiveError of a fuzzy set PositiveSet as a function of: PositiveError : U + ! [0; 1]: (53) Where U + is the positive half of U .
Reference: [9] <author> G. Hager and K. Toyama. </author> <title> The XVision System: A General-Purpose Substrate for Portable Real-Time Vision Applications. </title> <booktitle> Computer Vision and Image Understanding, </booktitle> <year> 1997. </year>
Reference-contexts: We have built a distributed Visual Tracking system based on the XVision project <ref> [9] </ref>. We have extended the original XVision system to be a client-server model, the Task Flow Graph of which is shown in Figure 1 (b).
Reference: [10] <author> D. Hull, A. Shankar, K. Nahrstedt, and J. Liu. </author> <title> An End-to-End QoS Model and Management Architecture. </title> <booktitle> Proceedings of IEEE Workshop on Middleware for Distributed Real-time Systems and Services, </booktitle> <month> December </month> <year> 1997. </year>
Reference-contexts: Tasks are execution units that perform certain actions to deliver a result to other tasks or the end user. With the above definition of tasks, we utilize the Task Flow Model described in <ref> [10] </ref> and extend the model to address the modeling of adaptation behavior. In this model, the Task Flow Graph is a directed acyclic graph which consists of multiple tasks, and illustrates the consumer-producer dependencies among the tasks. <p> These values are originally the adapted request rate values established by the Adaptation Task, and later scaled to a predetermined linearly ordered scale, e.g. [1; 1], <ref> [1; 10] </ref>, etc., according to the maximum and minimum values in the respective domain of resource types. These scaled values will be attached to each of the objectives to quantify the influence that each objective should have on the chosen alternative.
Reference: [11] <author> D. Manolakis J. Proakis. </author> <title> Digital signal processing, </title> <booktitle> principles, algorithms, and applications. </booktitle> <publisher> Prentice Hall, </publisher> <year> 1996. </year>
Reference-contexts: Like other digital systems, Passive Adaptation Tasks can be classified with respect to time-invariance, causality, linearity and recursiveness [20]. In this paper, we only address the analysis and configuration of a subset of tasks that are time-invariant, causal, linear, and non-recursive. We characterize this subset with difference equations <ref> [11] </ref>. <p> One of the simplest approaches that works on non-recursive difference equations is the application of Discrete Fourier Transform and its inverse transform, which may be found in some references on digital filters <ref> [11] </ref>. In order to improve the quality of the generated result after Inverse Fourier Transform, we may need to use more complex windowing functions such as the well known von Hann window or the Hamming window [11]. <p> and its inverse transform, which may be found in some references on digital filters <ref> [11] </ref>. In order to improve the quality of the generated result after Inverse Fourier Transform, we may need to use more complex windowing functions such as the well known von Hann window or the Hamming window [11]. Since the configuration process operates in the frequency domain, we need to convert the result back to time domain in the form of difference equations.
Reference: [12] <author> M. Kirtland. </author> <title> Object-Oriented Software Development Made Simple with COM+ Runtime Services. </title> <note> http://www.microsoft.com/msj/1197/complus.htm, 1997. </note>
Reference-contexts: This is made possible by building our control tasks beyond a distributed service enabling platform for heterogeneous environments, for example CORBA [22], Real-time CORBA [19] DCOM [1] or COM+ <ref> [12] </ref>. We do not intend to extend the services of these available enabling platforms, our control tasks are built to use the services provided by them.
Reference: [13] <author> B. Li and K. Nahrstedt. </author> <title> A Control Theoretical Model for Quality of Service Adaptations. </title> <booktitle> Sixth International Workshop on Quality of Service, </booktitle> <year> 1998. </year>
Reference-contexts: We will discuss these problems in later sections. For easier references, we summarize the above notations and definitions in Table 1. Given the above definitions, we are able to define the common QoS metrics such as request rate, delay, loss and jitter QoS parameters <ref> [13] </ref>. We will elaborate on the definition for request rate because we will use this QoS metric as an example of input/output QoS metric when discussing passive and active adaptation control for Target Tasks.
Reference: [14] <author> S. Lu, K.-W. Lee, and V. Bharghavan. </author> <title> Adaptive Service in Mobile Computing Environments. </title> <booktitle> Proceedings of 5th International Workshop on Quality of Service '97, </booktitle> <month> May </month> <year> 1997. </year>
Reference-contexts: We conclude the paper with Section 6. 2 2 Related Work It has been widely recognized that many QoS-constrained distributed applications need to be adaptive in a certain QoS range between [QoS min ; QoS max ] <ref> [14] </ref>, in order to provide a graceful reaction to dynamic resource availability in a distributed environment. Various adaptive mechanisms have been proposed [2] [4] [14, 23, 15]. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms. <p> Various adaptive mechanisms have been proposed [2] [4] <ref> [14, 23, 15] </ref>. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms.
Reference: [15] <author> K. Nahrstedt, H. Chu, and S. Narayan. </author> <title> QoS-aware Resource Management for Distributed Multimedia Applications. </title> <note> accepted to Journal on High-Speed Networking, </note> <year> 1998. </year>
Reference-contexts: Various adaptive mechanisms have been proposed [2] [4] <ref> [14, 23, 15] </ref>. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms.
Reference: [16] <author> R. Rajkumar, C. Lee, J. Lehoczky, and D. Siewiorek. </author> <title> A Resource Allocation Model for QoS Management. </title> <booktitle> 18th IEEE Real-Time System Symposium, </booktitle> <year> 1997. </year>
Reference-contexts: Our work is closely related to and utilizes the knowledge of dynamic resource allocations. Other approaches in the adaptive resource allocation area have also been presented in <ref> [16] </ref> [17]. The work in [16] focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range. <p> Our work is closely related to and utilizes the knowledge of dynamic resource allocations. Other approaches in the adaptive resource allocation area have also been presented in <ref> [16] </ref> [17]. The work in [16] focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range. The work in [17] focuses on a multi-machine environment running a single complex application, and the objective is to dynamically change the configuration of the application to adapt to the environment.
Reference: [17] <author> D. Rosu, K. Schwan, S. Yalamanchili, and R. Jha. </author> <title> On Adaptive Resource Allocation for Complex Real-Time Applications. </title> <booktitle> 18th IEEE Real-Time System Symposium, </booktitle> <year> 1997. </year>
Reference-contexts: Our work is closely related to and utilizes the knowledge of dynamic resource allocations. Other approaches in the adaptive resource allocation area have also been presented in [16] <ref> [17] </ref>. The work in [16] focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range. The work in [17] focuses on a multi-machine environment running a single complex application, and the objective is to dynamically change the configuration of the application to adapt to <p> Other approaches in the adaptive resource allocation area have also been presented in [16] <ref> [17] </ref>. The work in [16] focuses on maximizing the utility functions, while keeping QoS received by each application within a feasible range. The work in [17] focuses on a multi-machine environment running a single complex application, and the objective is to dynamically change the configuration of the application to adapt to the environment. Our work focuses on the analysis of the actual adaptation dynamics, rather than utility factors.
Reference: [18] <author> M. Satyanarayanan. </author> <title> Fundamental Challenges in Mobile Computing. </title> <booktitle> Proceedings of the ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1996. </year>
Reference-contexts: However, the algorithms used in most of the software systems are heuristic in nature, and the analysis of various adaptation properties such as stability, steady-state fairness and responsiveness is not addressed. In recent research, control theories have been examined for QoS adaptation. In <ref> [18] </ref>, the application of control theory is suggested as a future research direction to analyze adaptation behavior in wireless environments. In [5], a control model is proposed for adaptive QoS specification in an end-to-end scenario. <p> The series of QoS metric values are modeled by discrete-time values, or signals, and the transformation can be modeled by difference equations as in Equation (18). 10 One of the important factors that should be configurable for Adaptation Tasks is adaptation agility. First introduced in <ref> [18] </ref>, it is defined as the ability of Adaptation Tasks to promptly respond to sudden and unexpected perturbations in the time domain. If the agility of an Adaptation Task is high, it means that the task frequently and promptly reacts to short term fluctuations.
Reference: [19] <author> D. Schmidt, D. Levine, and S. Mungee. </author> <title> The Design and Performance of Real-Time Object Requests. </title> <journal> Computer Communications Journal, </journal> <year> 1997. </year>
Reference-contexts: This is made possible by building our control tasks beyond a distributed service enabling platform for heterogeneous environments, for example CORBA [22], Real-time CORBA <ref> [19] </ref> DCOM [1] or COM+ [12]. We do not intend to extend the services of these available enabling platforms, our control tasks are built to use the services provided by them.
Reference: [20] <author> S. Shinners. </author> <title> Modern Control System Theory and Design. </title> <publisher> John Wiley and Sons, Inc., </publisher> <year> 1992. </year> <month> 30 </month>
Reference-contexts: Equation (17) can be treated as a generic definition for Passive Adaptation Tasks. Like other digital systems, Passive Adaptation Tasks can be classified with respect to time-invariance, causality, linearity and recursiveness <ref> [20] </ref>. In this paper, we only address the analysis and configuration of a subset of tasks that are time-invariant, causal, linear, and non-recursive. We characterize this subset with difference equations [11].
Reference: [21] <author> N. Tran and K. Nahrstedt. </author> <title> Active Adaptation by Program Delegation in VOD. </title> <booktitle> IEEE International Conference on Multimedia Computing and Systems, </booktitle> <year> 1998. </year>
Reference-contexts: The essence of a closed-loop control system is its feedback path. Various software and distributed systems utilize feedback information for adaptation purposes <ref> [3, 21, 7] </ref>. For example, the work presented in [3] uses software feedback mechanisms that enhance system adaptiveness by adjusting video sending rate according to on-the-fly network variations.
Reference: [22] <author> S. Vinoski. </author> <title> CORBA: Integrating Diverse Applications Within Distributed Heterogeneous Environments. </title> <journal> IEEE Communications Magazine, </journal> <year> 1997. </year>
Reference-contexts: This is made possible by building our control tasks beyond a distributed service enabling platform for heterogeneous environments, for example CORBA <ref> [22] </ref>, Real-time CORBA [19] DCOM [1] or COM+ [12]. We do not intend to extend the services of these available enabling platforms, our control tasks are built to use the services provided by them.
Reference: [23] <author> N. Yeadon, F. Garcia, A. Campbell, and D. Hutchison. </author> <title> QoS Adaptation and Flow Filtering in ATM Networks. </title> <booktitle> Proceedings of the Second International Workshop on Multimedia: Advanced Teleservices and High Speed Communication Architectures, </booktitle> <year> 1994. </year> <title> 31 (a) Observed Throughput (b) Observed Throughput (c) Controllable Parameter: Frame Size (d) Controllable Parameter: Frame Size (e) Frame Rate (f) Frame Rate (g) Tracking Precision (h) Tracking Precision 32 </title>
Reference-contexts: Various adaptive mechanisms have been proposed [2] [4] <ref> [14, 23, 15] </ref>. This work differs from other approaches in the sense that it concentrates on determining adaptive policies, rather than the development of adaptive mechanisms.
References-found: 23

