URL: http://robotics.eecs.berkeley.edu/~lygeros/Postscript/CTAS.ps
Refering-URL: http://robotics.eecs.berkeley.edu/~gpappas/atms/publications.html
Root-URL: 
Email: lygeros,gpappas,sastry@eecs.berkeley.edu  
Title: An Approach to the Verification of the Center-TRACON Automation System  
Author: John Lygeros, George J. Pappas and Shankar Sastry 
Address: Berkeley CA 94720  
Affiliation: Department of Electrical Engineering and Computer Sciences University of California at Berkeley  
Abstract: The Center-TRACON Automation System (CTAS) is a collection of planning and control software functions that generate landing schedules and advisories to assist air traffic controllers in handling traffic in the en-route and terminal areas. In this paper, we propose a formal safety analysis methodology to determine the correctness of CTAS with respect to safety. Four large classes of safety notions are identified for the CTAS problem: nominal, robust, structural and degraded. For nominal safety questions we seek conditions under which the system is guaranteed to be nominally safe.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> H. Erzberger, T.J. Davis, and S. Green. </author> <booktitle> Design of center-TRACON automation system. In Proceedings of the AGARD Guidance and Control Symposium on Machine Intelligence in Air Traffic Management, </booktitle> <address> Berlin, Germany, </address> <month> May </month> <year> 1993. </year>
Reference-contexts: 1 Introduction The increasing demand for air travel has spurred the development of tools to increase airspace utilization, smooth air traffic flow and reduce fuel consumption, time delays and controller workload. In an effort to meet these objectives, NASA has developed the Center-TRACON Automation System (CTAS) <ref> [1] </ref>. CTAS is a collection of planning and control functions which generate advisories to assist, but not replace, the controllers in handling traffic in the Center and TRACON areas. The structure and functionality of CTAS are briefly discussed in Section 2.
Reference: 2. <author> John Lygeros and Nancy Lynch. </author> <title> Towards the formal verification of the TCAS conflict resolution algorithms. </title> <booktitle> In IEEE Control and Decision Conference, </booktitle> <pages> pages 1829-1834, </pages> <year> 1997. </year>
Reference-contexts: Our methodology proceeds in the following steps: ? Research supported by the FAA and NASA under Research Contract DTFA03-97-D-0004 and Grant 96-C-001 and by the Army Research Office under Grant DAAH 04-95-1-0588. 2 For another example of such a system in air traffic control see <ref> [2] </ref>. System Modeling: The CTAS system is modeled in the Hybrid Input- Output Automata formalism (Section 3). Safety Specification: We identify notions of safety and determine the desired system specification. We consider four classes of safety measures: nom inal, robust, structural and degraded safety (Section 4). <p> We believe that this "system theoretic" perspective can prove very fruitful not only for the CTAS problem, but also more generally for the verification of complex, hybrid software systems (see for example <ref> [2] </ref> for the application of this methodology to the Traffic Alert and Collision Avoidance System (TCAS)). The discussion presented in this paper is only a first step in the verification process of CTAS.
Reference: 3. <author> W. Nedell and H. Erzberger. </author> <title> The traffic management advisor. </title> <booktitle> In American Control Conference, </booktitle> <address> San Diego, CA, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: The Center-TRACON Automation System provides advisories for the air traffic controllers, in an attempt to increase airspace utilization, reduce delays, fuel consumption and controller workload and improve safety. CTAS consists of three main components: Traffic Management Advisor (TMA) Descent Advisor (DA) Final Approach Spacing Tool (FAST) TMA <ref> [3] </ref> and DA [4] coexist and operate in Center airspace whereas FAST [5] operates as a stand alone in TRACON airspace.
Reference: 4. <author> Steven M. Green, Robert A. Vivona, and Beverly Sanford. </author> <title> Descent advisor preliminary field test. </title> <booktitle> In Proceedings of the AIAA Guidance, Navigation and Control Conference, </booktitle> <address> Baltimore, MD, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: CTAS consists of three main components: Traffic Management Advisor (TMA) Descent Advisor (DA) Final Approach Spacing Tool (FAST) TMA [3] and DA <ref> [4] </ref> coexist and operate in Center airspace whereas FAST [5] operates as a stand alone in TRACON airspace.
Reference: 5. <author> T.J. Davis, K.J. Krzeczowski, and C. Bergh. </author> <title> The final approach spacing tool. </title> <booktitle> In Proceedings of the 13th IFAC Symposium on Automatic Control in Aerospace, </booktitle> <address> Palo Alto, CA, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: CTAS consists of three main components: Traffic Management Advisor (TMA) Descent Advisor (DA) Final Approach Spacing Tool (FAST) TMA [3] and DA [4] coexist and operate in Center airspace whereas FAST <ref> [5] </ref> operates as a stand alone in TRACON airspace. Even though currently CTAS deals only with arrival traffic, future versions will incorporate the User Preferred Routing tool (UPR) [6] for en route traffic to support Free Flight [7] and the Expedited Departure Path tool (EDP) for departure traffic.
Reference: 6. <author> S. Green, T. Goka, and D.H. Williams. </author> <title> Enabling user preferences through data exchange. </title> <booktitle> In Proceedings of the AIAA Guidance, Navigation and Control Conference, </booktitle> <address> New Orleans, LA, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: Even though currently CTAS deals only with arrival traffic, future versions will incorporate the User Preferred Routing tool (UPR) <ref> [6] </ref> for en route traffic to support Free Flight [7] and the Expedited Departure Path tool (EDP) for departure traffic. UPR and EDP will coexist with TMA and DA in the Center Airspace whereas FAST will be in charge of all terminal area traffic.
Reference: 7. <institution> Radio Technical Commission for Aeronautics. Final report of RTCA Task Force 3: Free Flight Implementation. </institution> <type> Technical report, </type> <address> RTCA, Washington, DC, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: Even though currently CTAS deals only with arrival traffic, future versions will incorporate the User Preferred Routing tool (UPR) [6] for en route traffic to support Free Flight <ref> [7] </ref> and the Expedited Departure Path tool (EDP) for departure traffic. UPR and EDP will coexist with TMA and DA in the Center Airspace whereas FAST will be in charge of all terminal area traffic.
Reference: 8. <author> Nancy Lynch, Roberto Segala, Frits Vaandrager, and H.B. Weinberg. </author> <title> Hybrid I/O automata. In Hybrid Systems III, </title> <booktitle> number 1066 in LNCS, </booktitle> <pages> pages 496-510. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: Fig. 1. CTAS Architecture 3 Hybrid Input-Output Automata In this section we give a brief overview of a model for the CTAS system. In Section 3.1 we outline the modeling formalism (a formal discussion can be found in <ref> [8] </ref>) and discuss the features that make it ideal for modeling the CTAS system. In Section 3.2 we show how models can be constructed in this framework for one of the CTAS components, the FAST algorithm. 3.1 Overview of the Modeling Framework Based on the work of [8], we consider a <p> be found in <ref> [8] </ref>) and discuss the features that make it ideal for modeling the CTAS system. In Section 3.2 we show how models can be constructed in this framework for one of the CTAS components, the FAST algorithm. 3.1 Overview of the Modeling Framework Based on the work of [8], we consider a hybrid automaton, A, as a dynamical system that describes the evolution of a finite collection of variables, V A . Variables are typed; for each v 2 V A let type (v) denote the type of v.
Reference: 9. <author> George Pappas, John Lygeros, Shankar Sastry, and Nancy Lynch. </author> <title> Modeling, specification and safety analysis of CTAS. </title> <type> Technical Report NEXTOR Research Report RR-97-5, </type> <institution> University of California at Berkeley, Berkeley, </institution> <address> CA, </address> <month> September </month> <year> 1997. </year>
Reference-contexts: Here we will briefly discuss the operation of all the components shown in Figure 2. For the time being we restrict our attention to FAST; the remaining CTAS components can be similarly modeled. Examples of HIOA pseudo-code for FAST can be found in the appendix; for more examples see <ref> [9] </ref>. Aircraft Model: The system we consider consists of N aircraft, labeled 1; : : : ; N .
References-found: 9

