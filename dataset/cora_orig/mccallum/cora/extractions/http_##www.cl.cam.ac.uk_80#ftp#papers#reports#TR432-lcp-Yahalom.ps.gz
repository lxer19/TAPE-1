URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/TR432-lcp-Yahalom.ps.gz
Refering-URL: http://www.cl.cam.ac.uk:80/ftp/papers/reports/
Root-URL: 
Email: lcp@cl.cam.ac.uk  
Title: On Two Formal Analyses of the Yahalom Protocol  
Author: Lawrence C. Paulson 
Date: July 1997  
Address: Pembroke Street Cambridge CB2 3QG England  
Affiliation: Computer Laboratory University of Cambridge  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> Martn Abadi and Roger Needham. </author> <title> Prudent engineering practice for cryptographic protocols. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 22(1) </volume> <pages> 6-15, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: For the two methods to agree on the defects of the original Yahalom protocol and the virtues of the modified version suggests that the BAN analysis is correct. There is similar agreement with Abadi and Needham <ref> [1] </ref> concerning the Otway-Rees protocol: applying their suggestions reduces the Isabelle proof scripts by 40% [13]. Such findings add support to their explicitness principle. Of course, the BAN logic is not always right. <p> The agreement between the two analyses suggests that the underlying concepts are valid. In a frequently-cited paper, Abadi and Needham present principles for protocol design, commenting "We arrived at our principles by noticing some common features among protocols that are difficult to analyze" <ref> [1, page 6] </ref>. As new analysis methods supplant old ones, we have reason to expect that their principles will remain stable. Yahalom's complexity comes from the relation between the two secrets, Kab and N b, which are distributed separately to B.
Reference: [2] <author> Dominique Bolignano. </author> <title> Towards the formal verification of electronic commerce protocols. </title> <booktitle> In Computer Security Foundations Workshop [5], </booktitle> <pages> pages 113-147. </pages>
Reference-contexts: 1 Introduction Many methods have been developed for mechanically analyzing cryptographic protocols. Some involve enumerating reachable states [6, 7], while others involve formal proof using general-purpose logics and tools <ref> [2, 13] </ref>. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application [3]. But the BAN logic attracted criticism too|Mao and Boyd [8] is one example| and now appears to be losing favour.
Reference: [3] <author> Stephen H. Brackin. </author> <title> A HOL extension of GNY for automatically analyzing cryptographic protocols. </title> <booktitle> In 9th Computer Security Foundations Workshop, </booktitle> <pages> pages 62-75. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1996. </year>
Reference-contexts: Some involve enumerating reachable states [6, 7], while others involve formal proof using general-purpose logics and tools [2, 13]. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application <ref> [3] </ref>. But the BAN logic attracted criticism too|Mao and Boyd [8] is one example| and now appears to be losing favour. Below, we shall examine the two versions of the Yahalom protocol discussed in the original paper. Mechanized proofs performed using my inductive method confirm the BAN analysis.
Reference: [4] <author> M. Burrows, M. Abadi, and R. M. Needham. </author> <title> A logic of authentication. </title> <journal> Proceedings of the Royal Society of London, </journal> <volume> 426 </volume> <pages> 233-271, </pages> <year> 1989. </year> <booktitle> [5] 10th Computer Security Foundations Workshop. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1997. </year>
Reference-contexts: 1 Introduction Many methods have been developed for mechanically analyzing cryptographic protocols. Some involve enumerating reachable states [6, 7], while others involve formal proof using general-purpose logics and tools [2, 13]. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper <ref> [4] </ref>, numerous variants and extensions were put forward, some reaching commercial application [3]. But the BAN logic attracted criticism too|Mao and Boyd [8] is one example| and now appears to be losing favour. Below, we shall examine the two versions of the Yahalom protocol discussed in the original paper. <p> But in Yahalom, principal B receives two certificates. One contains a key but no evidence of freshness, while the other is signed using the same doubtful key. To accept the latter certificate as evidence of freshness for the key requires a convoluted argument. Burrows et al. <ref> [4] </ref> pointed out these features of Yahalom. They suggested that the protocol could be improved merely by including B's nonce in the first certificate. The protocol becomes stronger, easier to analyze, and even more efficient, for some encryption can be removed. <p> (sees Spy evs ): The impossibility of M 's appearing in traffic at all, even encrypted, is stated as M 62 parts (sees Spy evs ): More details of the inductive approach to protocol analysis are available elsewhere [13]. 3 The Yahalom Protocol This protocol, described by Burrows et al. <ref> [4, page 257] </ref>, distributes a session key Kab to parties A and B with the help of a trusted authentication server. <p> If he gets hold of N b without also learning Kab, could he really find a suitable K before B timed out? 9 Analysis of Modified Yahalom The modified version of Yahalom incorporates some suggestions from the BAN paper <ref> [4, page 259] </ref>. The new protocol is stronger and much easier to reason about. The server includes N b in the first certificate.
Reference: [6] <author> Richard Kemmerer, Catherine Meadows, and Jonathan Millen. </author> <title> Three systems for cryptographic protocol analysis. </title> <journal> Journal of Cryptology, </journal> <volume> 7(2) </volume> <pages> 79-130, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Many methods have been developed for mechanically analyzing cryptographic protocols. Some involve enumerating reachable states <ref> [6, 7] </ref>, while others involve formal proof using general-purpose logics and tools [2, 13]. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application [3].
Reference: [7] <author> Gavin Lowe. </author> <title> Breaking and fixing the Needham-Schroeder public-key protocol using CSP and FDR. </title> <editor> In T. Margaria and B. Steffen, editors, </editor> <booktitle> Tools and Algorithms for the Construction and Analysis of Systems. Second International Workshop, </booktitle> <volume> TACAS '96, LNCS 1055, </volume> <pages> pages 147-166, </pages> <year> 1996. </year> <note> 16 REFERENCES </note>
Reference-contexts: 1 Introduction Many methods have been developed for mechanically analyzing cryptographic protocols. Some involve enumerating reachable states <ref> [6, 7] </ref>, while others involve formal proof using general-purpose logics and tools [2, 13]. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application [3].
Reference: [8] <author> Wenbo Mao and Colin Boyd. </author> <title> Towards formal analysis of security protocols. </title> <booktitle> In Computer Security Foundations Workshop VI, </booktitle> <pages> pages 147-158. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1993. </year>
Reference-contexts: Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application [3]. But the BAN logic attracted criticism too|Mao and Boyd <ref> [8] </ref> is one example| and now appears to be losing favour. Below, we shall examine the two versions of the Yahalom protocol discussed in the original paper. Mechanized proofs performed using my inductive method confirm the BAN analysis. The present case study is intended to approach realistic complexity. <p> Such findings add support to their explicitness principle. Of course, the BAN logic is not always right. The original paper's advice on Otway-Rees admitted catastrophic breaches of security <ref> [8, 13] </ref>; an intruder could masquerade as other users at will. The BAN version of Ya-halom has a minor security flaw.
Reference: [9] <author> Dave Otway and Owen Rees. </author> <title> Efficient and timely mutual authentication. </title> <journal> Operating Systems Review, </journal> <volume> 21(1) </volume> <pages> 8-10, </pages> <month> January </month> <year> 1987. </year>
Reference-contexts: Even under these conditions, Yahalom provides adequate guarantees for the uncompromised parts of the system. These claims have been verified using the interactive theorem prover Isabelle [10]. What makes Yahalom subtle? Protocols such as Otway-Rees <ref> [9] </ref> distribute certificates, signed by a trusted authority, to their principals. Each principal typically receives a session key packaged with a nonce to ensure freshness. But in Yahalom, principal B receives two certificates.
Reference: [10] <author> Lawrence C. Paulson. </author> <title> Isabelle: A Generic Theorem Prover. </title> <publisher> Springer, </publisher> <year> 1994. </year> <note> LNCS 828. </note>
Reference-contexts: But it goes further: the intruder holds the long-term keys of some agents and can occasionally get hold of session keys. Even under these conditions, Yahalom provides adequate guarantees for the uncompromised parts of the system. These claims have been verified using the interactive theorem prover Isabelle <ref> [10] </ref>. What makes Yahalom subtle? Protocols such as Otway-Rees [9] distribute certificates, signed by a trusted authority, to their principals. Each principal typically receives a session key packaged with a nonce to ensure freshness. But in Yahalom, principal B receives two certificates.
Reference: [11] <author> Lawrence C. Paulson. </author> <title> Mechanized proofs for a recursive authentication protocol. </title> <booktitle> In Computer Security Foundations Workshop [5], </booktitle> <pages> pages 84-95. </pages>
Reference-contexts: The method requires mechanical support. Large expressions can arise in the course of a proof. However, the mechanical proofs are ideally suited to the tools in Isabelle. Protocols previously analyzed include versions of Otway-Rees [13], Needham-Schroeder [12] and a recursive protocol <ref> [11] </ref>. Messages may contain agent names, nonces and keys.
Reference: [12] <author> Lawrence C. Paulson. </author> <title> Mechanized proofs of security protocols: Needham-Schroeder with public keys. </title> <type> Technical Report 413, </type> <institution> Computer Laboratory, University of Cambridge, </institution> <month> January </month> <year> 1997. </year>
Reference-contexts: The method requires mechanical support. Large expressions can arise in the course of a proof. However, the mechanical proofs are ideally suited to the tools in Isabelle. Protocols previously analyzed include versions of Otway-Rees [13], Needham-Schroeder <ref> [12] </ref> and a recursive protocol [11]. Messages may contain agent names, nonces and keys.
Reference: [13] <author> Lawrence C. Paulson. </author> <title> Proving properties of security protocols by induction. </title> <booktitle> In Computer Security Foundations Workshop [5], </booktitle> <pages> pages 70-83. </pages>
Reference-contexts: 1 Introduction Many methods have been developed for mechanically analyzing cryptographic protocols. Some involve enumerating reachable states [6, 7], while others involve formal proof using general-purpose logics and tools <ref> [2, 13] </ref>. Authentication logics, designed specifically for security applications, have been popular. After the seminal BAN paper [4], numerous variants and extensions were put forward, some reaching commercial application [3]. But the BAN logic attracted criticism too|Mao and Boyd [8] is one example| and now appears to be losing favour. <p> The method requires mechanical support. Large expressions can arise in the course of a proof. However, the mechanical proofs are ideally suited to the tools in Isabelle. Protocols previously analyzed include versions of Otway-Rees <ref> [13] </ref>, Needham-Schroeder [12] and a recursive protocol [11]. Messages may contain agent names, nonces and keys. <p> or nonce M from the spy is stated as M 62 analz (sees Spy evs ): The impossibility of M 's appearing in traffic at all, even encrypted, is stated as M 62 parts (sees Spy evs ): More details of the inductive approach to protocol analysis are available elsewhere <ref> [13] </ref>. 3 The Yahalom Protocol This protocol, described by Burrows et al. [4, page 257], distributes a session key Kab to parties A and B with the help of a trusted authentication server. <p> Our guarantee to B will say that|provided the run involving N b has not been compromised in this way|the session key is both fresh and secure. Many of the protocol's properties are expressed and proved almost exactly like the analogous properties of Otway-Rees <ref> [13] </ref>. In particular, we must prove the session key compromise theorem. This conditional equation serves as a rewrite rule; it extracts session keys from the scope of the analz operator. <p> In order to take advantage of it, they require assurance that the certificates they receive originated in a recent and correct server message. Only then can they trust the session key, for otherwise there could be attacks involving reuse of certificates <ref> [13] </ref>. The relevant guarantee for A states that if A is uncompromised and fjB; Kab; N a; N bjg Ka occurs in a trace then that certificate originated with the server. <p> There is similar agreement with Abadi and Needham [1] concerning the Otway-Rees protocol: applying their suggestions reduces the Isabelle proof scripts by 40% <ref> [13] </ref>. Such findings add support to their explicitness principle. Of course, the BAN logic is not always right. The original paper's advice on Otway-Rees admitted catastrophic breaches of security [8, 13]; an intruder could masquerade as other users at will. The BAN version of Ya-halom has a minor security flaw. <p> Such findings add support to their explicitness principle. Of course, the BAN logic is not always right. The original paper's advice on Otway-Rees admitted catastrophic breaches of security <ref> [8, 13] </ref>; an intruder could masquerade as other users at will. The BAN version of Ya-halom has a minor security flaw. <p> A Original Yahalom: Proving B's Guarantee This appendix consists of theorem statements in Isabelle syntax, preceded by brief comments. Included are the more interesting theorems proved as part of B's guarantee. Omitted are the basic results mentioned in x4, for their proofs closely resemble others discussed elsewhere <ref> [13] </ref>. To save space, the authentication properties discussed in x10 are also omitted. By presenting the lemmas in Isabelle notation, this appendix conveys an impression of the formal syntax and makes the assumptions explicit. <p> Isabelle displays formulas using mathematical symbols similar to those shown below, although ASCII equivalents appear in the proof scripts. 3 Most of the primitives used below are described in my paper on the inductive method <ref> [13] </ref>. Now, here are the theorems. B knows, by the first part of A's message, that the server distributed the key for A and B.
References-found: 12

