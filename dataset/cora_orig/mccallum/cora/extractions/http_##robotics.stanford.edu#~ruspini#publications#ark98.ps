URL: http://robotics.stanford.edu/~ruspini/publications/ark98.ps
Refering-URL: http://robotics.stanford.edu/~ruspini/haptic.html
Root-URL: http://www.robotics.stanford.edu
Email: email: ruspini,khatib@cs.stanford.edu  
Title: DYNAMIC MODELS FOR HAPTIC RENDERING SYSTEMS  
Author: DIEGO RUSPINI AND OUSSAMA KHATIB 
Address: Stanford, CA 94305-9010  
Affiliation: Robotics Laboratory Department of Computer Science, Stanford University,  
Abstract: To create a compelling interactive virtual experience, haptic systems must incorporate methods to allow for the specification of and interaction with complex dynamic environments. In this paper we discuss some of the issues encountered and the solutions developed for incorporating dynamic motion in our haptic rendering library "HL." The objective in the development of this library is to provide haptic capabilities to users who may have little or no familiarity with robotics, haptics or control. 
Abstract-found: 1
Intro-found: 1
Reference: <author> D. Baraff, </author> <title> "Fast Contact Force Computation for Nonpenetrating Rigid Bodies," </title> <booktitle> SIG-GRAPH 94 Proceedings, </booktitle> <month> (August </month> <year> 1994), </year> <pages> pp. 23-34. </pages>
Reference: <author> K. Chang, </author> <title> "Efficient Dynamic Control and Simulation of Robotic Mechanisms," </title> <type> internal report. </type>
Reference: <author> J. Craig, </author> <title> "Introduction to Robotics Mechanics and Control," </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference: <author> R. Featherstone. </author> <title> Robot Dynamics Algorithms. </title> <publisher> Kluwer, </publisher> <year> 1987. </year>
Reference-contexts: A simplified set of equations that neglects the centrifugal coriolis and some dynamic coupling terms is used in our current system. We are in the process of converting the system to make use of an extremely fast variation of Featherstone's articulated body solution <ref> (Featherstone, 1987) </ref> to permit the simulation of very complex dynamic models at real-time rates (Chang, 1998). When a collision occurs, between the proxy and an object (s) in the environment, a force is applied to the user simulating a contact with the surface.
Reference: <author> H. Goldstein, </author> <title> "Classical Mechanics," </title> <publisher> Addison-Wesley Publishing Company Inc., </publisher> <year> 1980. </year>
Reference: <author> T. Kane, </author> <title> Dynamics: Theory and Applications, </title> <publisher> McGraw-Hill, </publisher> <year> 1985. </year>
Reference: <author> O. Khatib, </author> <title> "Real-Time Obstacle Avoidance for Manipulators and Mobile Robot," </title> <journal> International Journal of Robotics Research, </journal> <volume> 5(1), </volume> <pages> pp. 90-98. </pages>
Reference: <author> D. Ruspini, K. Kolarov and O. Khatib, </author> <title> "The Haptic Display of Complex Graphical Environments." </title> <booktitle> SIGGRAPH 97 Proceedings, </booktitle> <month> (August </month> <year> 1997), </year> <pages> pp. 345-352. </pages>
Reference-contexts: This paper discusses some of the techniques we have developed to incorporate dynamics into the "HL" constraint based haptic rendering library <ref> (Ruspini, 1997) </ref>. The goal of this library is to make haptic rendering capabilities available to a graphic applications developer, who may have little or no knowledge of haptics or robotics. <p> The ability to model these environments is crucial for building a library for general graphics applications, where surface representations are widely used. This concept has been also used to render a number other haptic attributes including, shading of curved objects (force shading), friction (static, dynamic, viscous), texture, and stiffness <ref> (Ruspini, 1997) </ref>. 3. Adding Motion to Virtual Environments Incorporating motion in the virtual environment substantially increases the complexity of haptic rendering over that of static scenes. <p> In our implementation the proxy is modeled as a sphere of radius r proxy . If the maximum penetration distance is guaranteed to be less than r proxy then the constraint planes <ref> (Ruspini, 1997) </ref> can be used to eliminate the detected error. The maximum velocity, therefore, of a single surface, for which the proxy can be guaranteed not to penetrate the environment, is v max = r proxy =t, where t is the amount of time required to complete one iteration. <p> In our implementation, the iteration is divided into three stages. In the first stage, the objects in the environment are moved over some time period t. In the next stage the constraint planes are found as in <ref> (Ruspini, 1997) </ref> and used to attempt to move the proxy to nearest free space configuration. In the last stage, the same distance minimization is applied to move the proxy to a closer (minimal energy) configuration. <p> A more complete solution to computing the contact forces for rigid body simulation can be found in <ref> (Ruspini, 1997) </ref>. This simplified model, however, is sufficient for simulating the interactions found in most haptic environments.
Reference: <author> D., Ruspini, and O. Khatib, </author> <title> "Collision/Contact Models for the Dynamic Simulation of Complex Environments," </title> <booktitle> Workshop on the Dynamic Simulation, IEEE/RSJ Int. Conference on Intelligent Robots and Systems, IROS '97, </booktitle> <address> Genoble, France, </address> <year> 1997. </year>
Reference-contexts: This paper discusses some of the techniques we have developed to incorporate dynamics into the "HL" constraint based haptic rendering library <ref> (Ruspini, 1997) </ref>. The goal of this library is to make haptic rendering capabilities available to a graphic applications developer, who may have little or no knowledge of haptics or robotics. <p> The ability to model these environments is crucial for building a library for general graphics applications, where surface representations are widely used. This concept has been also used to render a number other haptic attributes including, shading of curved objects (force shading), friction (static, dynamic, viscous), texture, and stiffness <ref> (Ruspini, 1997) </ref>. 3. Adding Motion to Virtual Environments Incorporating motion in the virtual environment substantially increases the complexity of haptic rendering over that of static scenes. <p> In our implementation the proxy is modeled as a sphere of radius r proxy . If the maximum penetration distance is guaranteed to be less than r proxy then the constraint planes <ref> (Ruspini, 1997) </ref> can be used to eliminate the detected error. The maximum velocity, therefore, of a single surface, for which the proxy can be guaranteed not to penetrate the environment, is v max = r proxy =t, where t is the amount of time required to complete one iteration. <p> In our implementation, the iteration is divided into three stages. In the first stage, the objects in the environment are moved over some time period t. In the next stage the constraint planes are found as in <ref> (Ruspini, 1997) </ref> and used to attempt to move the proxy to nearest free space configuration. In the last stage, the same distance minimization is applied to move the proxy to a closer (minimal energy) configuration. <p> A more complete solution to computing the contact forces for rigid body simulation can be found in <ref> (Ruspini, 1997) </ref>. This simplified model, however, is sufficient for simulating the interactions found in most haptic environments.
Reference: <author> C. Zilles, J. Salisbury, </author> <title> "Constraint-based God-object Method for Haptic Display." ASME Haptic Interfaces for Virtual Environment and Teleoperator Systems 1994, </title> <booktitle> Dynamic Systems and Control 1994, </booktitle> <volume> vol. 1, </volume> <pages> pp. 146-150. </pages>
Reference-contexts: These penalty based methods behaved poorly when the environment contained thin or overlapping obstacles. Constraint based methods, first introduced by Zilles et. al <ref> (Zilles, 1994) </ref> define a constrained point, or representative object that is prevented from penetrating the surfaces in the environment. In our approach, a finite sized, massless "proxy" substitutes in the virtual environment for the physical finger or probe.
References-found: 10

