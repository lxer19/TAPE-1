URL: ftp://ftp.cs.umass.edu/pub/lesser/whitehair-idp-int.ps
Refering-URL: http://dis.cs.umass.edu/research/idp.html
Root-URL: 
Email: Email: whitehair@cs.umass.edu  
Title: A Methodology for Modeling Sophisticated Problem Solvers  
Author: Robert C. Whitehair and Victor R. Lesser 
Keyword: mathematical foundations, problem solving architectures, control, search,  
Date: January 5, 1995  
Address: Amherst, MA 01003 413-545-3444(voice) 413-545-1249(fax)  
Affiliation: Department of Computer Science University of Massachusetts  
Abstract: This paper presents the use of the IDP formalism for analyzing the relationship between the performance of search-based interpretation problem solving systems and the inherent properties, or structure, of problem domains in which they are applied. Specifically, we show how to formally represent and statistically evaluate the effectiveness of meta-level control strategies that are based on abstractions, approximations, and reformulations of a problem domain. Experimental results are presented verifying the predictions from the formal analysis techniques. fl This work was supported by the Office of Naval Research contract N00014-92-J-1450. The content does not necessarily reflect the position or the policy of the Government and no official endorsement should be inferred. This paper has not already been accepted by and is not currently under review for a journal or another conference. Nor will it be submitted for such during IJCAI's review preiod. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Norman Carver and Victor Lesser. </author> <title> The Evolution of Blackboard Control. </title> <journal> Expert Systems with Applications, </journal> <volume> 7(1), </volume> <year> 1991. </year> <note> Special issue on The Blackboard Paradigm and Its Applications. </note>
Reference-contexts: In addition, IDP G provides a basis for defining a problem solver's architecture, as we demonstrate in this paper. This work represents an initial step needed to formalize complex search processes, such as those associated with blackboard systems <ref> [1] </ref>, that are used in sophisticated interpretation systems. The IDP formalism models interpretation domain theories 1 , in terms of four feature structures: component (or syntax), utility (or credibility) 2 , probability (or distribution), and cost. <p> An important aspect of the IDP formalism is that it supports a unified representation of both meta-operators <ref> [1] </ref> and domain processing. <p> that has a high credibility can intuitively be thought of as having a highly consistent semantic interpretation and a full or partial interpretation that has a low credibility can intuitively be thought of as having an inconsistent or incomplete semantic interpretation. 1 path's relationship with other, possibly interacting, search paths <ref> [1] </ref>. (Relationships are based on the distribution of domain events and are statistical in nature. <p> Interpretation is a form of constructive problem solving based on abductive inferencing <ref> [1] </ref>. Interpretation problems are similar to classification problems and to a more distant form of problem solving, parsing. In interpretation problems, the set I is constructed dynamically. <p> Thus, if the rating of a potential search operation is heavily dependent on non-local information, the problem solver will not be able to accurately evaluate that action. The effectiveness of preconditions has been demonstrated in many interpretation systems including Hearsay II and the DVMT <ref> [1] </ref>. To clarify the use of preconditions, consider the production rule: A ! B C D. If the problem solver has generated a search state B, the operator associated with the production rule would be eligible for execution whether or not the required states C and D had been generated. <p> Formally, this means that the set OP (! p ;! p ) is empty. 2.3 Representing Goal Processing Another form of meta-operator that can be represented in the IDP formalism is the mechanism of goal processing developed in the DVMT blackboard problem solver and testbed <ref> [1] </ref>. Goal processing is used to increase the rating of problem solving activities that are related to extending highly-rated partial results. For example, the DVMT domain is a vehicle tracking problem based on acoustic sensor data.
Reference: [2] <author> King Sun Fu. </author> <title> Syntactic Pattern Recognition and Applications. </title> <publisher> PH, </publisher> <year> 1982. </year>
Reference-contexts: Each syntactic rule of the grammar is associated with a corresponding semantic process which determines the actual meaning of an interpretation. This representation is similar to that used in the Composite Decision Process (CDP) model of Kanal and Kumar [4] and the semantic grammars used by Fu <ref> [2] </ref>. 3 In the IDP formalism, a potential solution is referred to as an SNT. The uses and advantages of the SNT representation are discussed in [5]. 3 This approach is significant because it can be used to define the component, credibility, distribution, and cost structures of a domain.
Reference: [3] <author> Gerald Gazdar, Geoffrey K. Pullum, and Ivan A. Sag. </author> <title> Auxiliaries and related phenomena in a restrictive theory of grammar. </title> <booktitle> Language, </booktitle> <volume> 58(3) </volume> <pages> 591-638, </pages> <year> 1982. </year>
Reference-contexts: Credibility is calculated dynamically and the domain characteristics that change from run to run are represented with the feature list convention <ref> [3] </ref>. Experimental results are shown in Table 1. For each experiment, the column Grammar indicates the domain and problem solver specification used. E (C) indicates the expected cost of problem solving in the domain based on an analysis of the grammar. Avg.
Reference: [4] <editor> Vipin Kumar and Laveen N. Kanal. </editor> <title> The CDP: A unifying formulation for heuristic search, dynamic programming, and branch-and-bound. </title> <editor> In L. Kanal and V. Kumar, editors, </editor> <booktitle> Search in Artificial Intelligence, Symbolic computation, chapter 1, </booktitle> <pages> pages 1-27. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Each syntactic rule of the grammar is associated with a corresponding semantic process which determines the actual meaning of an interpretation. This representation is similar to that used in the Composite Decision Process (CDP) model of Kanal and Kumar <ref> [4] </ref> and the semantic grammars used by Fu [2]. 3 In the IDP formalism, a potential solution is referred to as an SNT.
Reference: [5] <author> Robert C. Whitehair and Victor R. Lesser. </author> <title> A Framework for the Analysis of Sophisticated Control in Interpretation Systems. </title> <type> Technical Report 93-53, </type> <institution> Department of Computer and Information Science, University of Massachusetts, </institution> <address> Amherst, Massachusetts 01003, </address> <year> 1993. </year> <month> 14 </month>
Reference-contexts: This unified representation is based on viewing sophisticated control architectures as mechanisms that evaluate problem solving actions by selectively applying a process that examines a search 1 A domain theory is the computational theory that is the basis for a problem solver's functionality. 2 In <ref> [5] </ref>, credibility structures are formally linked to the semantics associated with full and partial interpretations. <p> The primary focus of this paper will be on IDP I and the details of IDP G are left to <ref> [5] </ref>. The next section presents how the IDP formalism can be used to represent interpretation meta-operators in a unified representation with domain processing. Section 3 describes the derivation of a technique for calculating the expected cost of problem solving from the resulting grammar specification. <p> In more formal terms, as defined in <ref> [5] </ref>, a problem solver is characterized by the four-tuple &lt; S; ; !; &gt;, where; S = the start state; S is defined by the input data to the problem solver and the initial values of any relevant characteristic variables, CVs. <p> The uses and advantages of the SNT representation are discussed in <ref> [5] </ref>. 3 This approach is significant because it can be used to define the component, credibility, distribution, and cost structures of a domain. The component structure is modeled directly by the rules of G. <p> From a more general perspective, focus-of-control goal processing is a mechanism that allows a problem solver to selectively rerate problem solving operators based on their relationships with other, dynamically changing operators. As discussed in <ref> [5] </ref>, one of the characteristics of sophisticated domains is that partial search paths are often related and the structure of these relationships can sometimes be exploited to increase the efficiency of problem solving. <p> This is a very general technique that is likely to have applicability in a wide range of domains. are used to generate vehicle tracks and patterns of vehicle tracks. These rules also correspond to operators in for the associated problem solving system <ref> [5] </ref>. Example goal processing operators are shown in Fig. 4. Operator G.5.1 is used to raise the ratings of operators that will generate data needed to extend the partial track forward in time. Similarly, G.5.1 is used to extend the partial track backwards in time. <p> In the case where n is a terminal symbol, its frequency corresponds to the number of occurrences in sample i. Combining functions for various meta-operators have also been defined <ref> [5] </ref> . As shown in Fig. 2, for nonterminal C, there is one production rule with two RHSs; C ! fqg j fg. <p> For each experiment, the column Grammar indicates the domain and problem solver specification used. E (C) indicates the expected cost of problem solving in the domain based on an analysis of the grammar. Avg. C shows the actual average cost of problem solving. The Sig 4 <ref> [5] </ref> discusses bounding functions with thresholds that are determined dynamically.
References-found: 5

