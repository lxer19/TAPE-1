URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/avrim/www/Papers/prizetsp.ps.gz
Refering-URL: http://www.ri.cmu.edu/afs/cs.cmu.edu/user/avrim/www/projects.html
Root-URL: 
Email: E-mail: baruch@blaze.cs.jhu.edu.  E-Mail: azar@math.tau.ac.il.  E-mail: favrim,svempalag@cs.cmu.edu.  
Title: New Approximation Guarantees for Minimum-Weight k-Trees and Prize-Collecting  
Author: Salesmen Baruch Awerbuch Yossi Azar Avrim Blum Santosh Vempala 
Keyword: Ravi et al. Keywords: Approximation, Prize Collecting Traveling Salesman Problem, k-MST.  
Address: Baltimore, MD 21218,  Science.  University.  Pittsburgh PA  
Affiliation: Johns Hopkins University,  and MIT Lab. for Computer  Department of Computer Science, Tel Aviv  Academy of Sciences. School of Computer Science, Carnegie Mellon University,  
Note: AMS subject classifications: 68Q20, 68Q25, 90C27, 90B06, 05C85 Running head: Approximation Guarantees for the k-MST and PCTSP  Supported by Air Force Contract TNDGAFOSR-86-0078, ARPA/Army contract DABT63-93-C-0038, ARO contract DAAL03-86-K-0171, NSF contract 9114440-CCR, DARPA contract N00014-J-92-1799, and a special grant from IBM.  Research supported in part by Allon Fellowship and by the Israel Science Foundation administered by the Israel  15213. Supported in part by NSF National Young Investigator grant CCR-9357793 and a Sloan Foundation Research Fellowship.  
Abstract: We consider a formalization of the following problem. A salesperson must sell some quota of brushes in order to win a trip to Hawaii. This salesperson has a map (a weighted graph) in which each city has an attached demand specifying the number of brushes that can be sold in that city. What is the best route to take to sell the quota while traveling the least distance possible? Notice that unlike the standard traveling salesman problem, not only do we need to figure out the order in which to visit the cities, but we must decide the more fundamental question: which cities do we want to visit? In this paper we give the first approximation algorithm having a poly-logarithmic performance guarantee for this problem, as well as for the slightly more general "Prize Collecting Traveling Salesman Problem" (PCTSP) of Balas, and a variation we call the "Bank-robber Problem" (also called the "Orienteering Problem" by Golden, Levi, and Vohra). We do this by providing an O(log 2 k) approximation to the somewhat cleaner k-MST problem which is defined as follows. Given an undirected graph on n nodes with non-negative edge weights and an integer k n, find the tree of least weight that spans k vertices. (If desired, one may specify in the problem a "root vertex" that must be in the tree as well.) Our result improves on the previous best bound of O( p
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Arora. </author> <title> Polynomial time approximation schemes for Euclidean TSP and other geometric problems. </title> <booktitle> In Proceedings of the 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-11, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: Most recently, Garg [9] has improved this constant factor to 3. Also very recently, for the case of points in the plane with the Euclidean distance metric, Arora <ref> [1] </ref> and Mitchell [15] (see also [14]) have independently developed a polynomial-time approximation scheme (PTAS) for the k-MST problem; that is, an algorithm that for any fixed * &gt; 0 can achieve a (1 + *) approximation in polynomial time.
Reference: [2] <author> B. Awerbuch, Y. Azar, A. Blum, and S. Vempala. </author> <title> Improved approximation guarantees for minimum-weight k-trees and prize-collecting salesmen. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 277-283, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: It is worthwhile to point out that our algorithms are easily implementable in a distributed environment, since they operate on the basis of local information. Subsequent results. Since the initial (conference) publication of this paper <ref> [2] </ref>, several results have appeared that build and improve upon those here. Rajagopalan and Vazirani [16] describe an algorithm that can be viewed as a somewhat "smoothed" version of the algorithm of this paper and prove that it achieves an O (log k) approximation to the k-MST.
Reference: [3] <author> B. Awerbuch, Y. Azar, and R. Gawlick. </author> <title> Dense trees and competitive selective multicast. </title> <type> unpublished manuscript, </type> <month> December </month> <year> 1993. </year>
Reference-contexts: The bulk of the argument will be for proving correctness of an algorithm for the following slight relaxation of our goal, which is similar to the "maximal dense" tree concept in <ref> [3] </ref>. Given k, we will find a tree on at least k=4 points whose weight is at most O (log 2 k) times the weight of the minimum k-tree. With this algorithm in place, it will be easy to remove the relaxation and solve our original problem.
Reference: [4] <author> E. Balas. </author> <title> The prize collecting traveling salesman problem. </title> <journal> Networks, </journal> <volume> 19 </volume> <pages> 621-636, </pages> <year> 1989. </year> <month> 10 </month>
Reference-contexts: Garg and Hochbaum [10] improved the ratio for the latter case to O (log k), which was then improved to a constant factor by Blum, Chalasani, and Vempala [6]. Heuristics for problems described above have been given by Balas <ref> [4] </ref> and by Cheung and A.Kumar [8]. Results of this paper. In this paper, we describe an algorithm that achieves an approximation ratio O (log 2 k) for the k-MST problem on general graphs, improving the previous bound of O ( p k) [17]. <p> Our algorithm also extends easily to a O (log 2 (min (R; n))) bound for the prize-collecting 2 traveling salesman problem (PCTSP) due to Balas <ref> [4] </ref> on undirected graphs. The PCTSP problem is just like the quota TSP problem but in addition there are non-negative penalties attached to each city and the salesperson's cost is the sum of the distance traveled plus the penalties on cities not visited. <p> Therefore, Algorithm Improved-Connect runs in polynomial time even if R is large. 3.2 Algorithms for prize-collecting salesmen As mentioned in the introduction, an approximation algorithm to the quota TSP problem can be transformed into an approximation algorithm to the PCTSP problem of <ref> [4] </ref>. The PCTSP is the following. You are given an undirected edge-weighted graph in which each vertex has a prize value and a penalty value. You are also given a quota R. <p> Theorem 4 There is a polynomial time algorithm that approximates the PCTSP problem of <ref> [4] </ref> on n-vertex undirected weighted graphs to a ratio O (log 2 (min (R; n))), where R is the required vertex weight to be visited. 3.3 The bank robber (orienteering) algorithm The bank robber (orienteering) problem [13] is much like the problem faced by our quota-driven salesperson, except that the distance
Reference: [5] <author> A. Blum, P. Chalasani, D. Coppersmith, B. Pulleyblank, P. Raghavan, and M. Sudan. </author> <title> The minimum latency problem. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 163-171, </pages> <year> 1994. </year>
Reference-contexts: We now show how to modify Algorithm Connect-Clusters to achieve an O (log 2 k) approximation. To do this, we use the following corollary to a result by Goemans and Williamson [12]. In <ref> [5] </ref> this is called a (3; 6)-TSP approximator. (Goemans and Kleinberg [11] have recently improved this to a (2; 3)-TSP approximator.) Fact 1 Given a weighted graph on n points and an * &gt; 0, let L * be the length of the shortest tour that visits at least (1 *)n
Reference: [6] <author> A. Blum, P. Chalasani, and S. Vempala. </author> <title> A constant-factor approximation for the k-MST problem in the plane. </title> <booktitle> In Proceedings of the 27th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 294-302, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Garg and Hochbaum [10] improved the ratio for the latter case to O (log k), which was then improved to a constant factor by Blum, Chalasani, and Vempala <ref> [6] </ref>. Heuristics for problems described above have been given by Balas [4] and by Cheung and A.Kumar [8]. Results of this paper.
Reference: [7] <author> A. Blum, R. Ravi, and S. Vempala. </author> <title> A constant-factor approximation algorithm for the k-MST problem. </title> <booktitle> In Proceedings of the 28th Annual ACM Symposium on Theory of Computing, </booktitle> <month> May </month> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: Rajagopalan and Vazirani [16] describe an algorithm that can be viewed as a somewhat "smoothed" version of the algorithm of this paper and prove that it achieves an O (log k) approximation to the k-MST. In a further improvement, Blum, Ravi, and Vempala <ref> [7] </ref> prove that a version of the Goemans-Williamson [12] algorithm achieves a constant-factor approximation. Most recently, Garg [9] has improved this constant factor to 3.
Reference: [8] <author> S.Y. Cheung and A. Kumar. </author> <title> Efficient quorumcast routing algorithms. </title> <booktitle> In Proceedings of INFOCOM '94, </booktitle> <volume> volume 2, </volume> <pages> pages 840-855, </pages> <address> Toronto, </address> <year> 1994. </year>
Reference-contexts: Cheung and A.Kumar <ref> [8] </ref> call this problem the "quorum-cast" problem, whose application are in the domain of communication networks. <p> Garg and Hochbaum [10] improved the ratio for the latter case to O (log k), which was then improved to a constant factor by Blum, Chalasani, and Vempala [6]. Heuristics for problems described above have been given by Balas [4] and by Cheung and A.Kumar <ref> [8] </ref>. Results of this paper. In this paper, we describe an algorithm that achieves an approximation ratio O (log 2 k) for the k-MST problem on general graphs, improving the previous bound of O ( p k) [17].
Reference: [9] <author> N. Garg. </author> <title> A 3-approximation for the minimum tree spanning k vertices. </title> <booktitle> In Proceedings of the 37th Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 302-309, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: In a further improvement, Blum, Ravi, and Vempala [7] prove that a version of the Goemans-Williamson [12] algorithm achieves a constant-factor approximation. Most recently, Garg <ref> [9] </ref> has improved this constant factor to 3.
Reference: [10] <author> N. Garg and D. Hochbaum. </author> <title> An o(log k) approximation algorithm for the k minimum spanning tree problem in the plane. </title> <booktitle> In Proceedings of the 26th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 432-438, </pages> <year> 1994. </year>
Reference-contexts: Garg and Hochbaum <ref> [10] </ref> improved the ratio for the latter case to O (log k), which was then improved to a constant factor by Blum, Chalasani, and Vempala [6]. Heuristics for problems described above have been given by Balas [4] and by Cheung and A.Kumar [8]. Results of this paper.
Reference: [11] <author> M. Goemans and J. Kleinberg. </author> <title> An improved approximation ratio for the minimum latency problem. </title> <booktitle> In Proceedings of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1996. </year> <note> to appear. </note>
Reference-contexts: We now show how to modify Algorithm Connect-Clusters to achieve an O (log 2 k) approximation. To do this, we use the following corollary to a result by Goemans and Williamson [12]. In [5] this is called a (3; 6)-TSP approximator. (Goemans and Kleinberg <ref> [11] </ref> have recently improved this to a (2; 3)-TSP approximator.) Fact 1 Given a weighted graph on n points and an * &gt; 0, let L * be the length of the shortest tour that visits at least (1 *)n points.
Reference: [12] <author> M. Goemans and D. Williamson. </author> <title> A general approximation technique for constrained forest problems. </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 307-315, </pages> <year> 1992. </year>
Reference-contexts: The O (log 2 (min (R; n))) bound for the PCTSP follows immediately by concatenating the tour found by our algorithm (which ignores the penalties) to a tour found by an algorithm of Goemans and Williamson <ref> [12] </ref> that provides a factor of 2 approximation to a relaxed version of the PCTSP in which the quota requirement is removed. (In the original PCTSP there is also a restriction that each city not be visited more than once; if this is desired and if the graph is a metric <p> In a further improvement, Blum, Ravi, and Vempala [7] prove that a version of the Goemans-Williamson <ref> [12] </ref> algorithm achieves a constant-factor approximation. Most recently, Garg [9] has improved this constant factor to 3. <p> We now show how to modify Algorithm Connect-Clusters to achieve an O (log 2 k) approximation. To do this, we use the following corollary to a result by Goemans and Williamson <ref> [12] </ref>. <p> One technical point: the algorithm of Fact 1, which is just the Prize-Collecting TSP algorithm of Goemans and Williamson <ref> [12] </ref> with an appropriate setting of the prize values, works also for the vertex-weighted case. <p> In other words, the PCTSP is the same as the quota TSP problem, but with the additional complication of vertices having penalties for not being on the tour. The Goemans-Williamson algorithm <ref> [12] </ref> provides a 2-approximation to a version of the PCTSP in which the quota requirement R is removed. That is, the goal is simply to minimize the cost of the tour as defined above.
Reference: [13] <author> B.L. Golden, L. Levy, and R. Vohra. </author> <title> The orienteering problem. </title> <journal> Naval Research Logistics, </journal> <volume> 34 </volume> <pages> 307-318, </pages> <year> 1987. </year>
Reference-contexts: This problem is also called the "orienteering problem" by Golden, Levi, and Vohra <ref> [13] </ref>. Prior work. <p> Theorem 4 There is a polynomial time algorithm that approximates the PCTSP problem of [4] on n-vertex undirected weighted graphs to a ratio O (log 2 (min (R; n))), where R is the required vertex weight to be visited. 3.3 The bank robber (orienteering) algorithm The bank robber (orienteering) problem <ref> [13] </ref> is much like the problem faced by our quota-driven salesperson, except that the distance d that may be traveled is fixed and the goal is to maximize the total value R of points visited.
Reference: [14] <author> J.S.B. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: A simple new method for the geometric k-MST problem. </title> <booktitle> In Proceedings of the 7th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 402-408, </pages> <month> January </month> <year> 1996. </year>
Reference-contexts: Most recently, Garg [9] has improved this constant factor to 3. Also very recently, for the case of points in the plane with the Euclidean distance metric, Arora [1] and Mitchell [15] (see also <ref> [14] </ref>) have independently developed a polynomial-time approximation scheme (PTAS) for the k-MST problem; that is, an algorithm that for any fixed * &gt; 0 can achieve a (1 + *) approximation in polynomial time.
Reference: [15] <author> J.S.B. Mitchell. </author> <title> Guillotine subdivisions approximate polygonal subdivisions: Part II a simple polynomial-time approximation scheme for geometric k-MST, TSP, and related problems. </title> <type> Preliminary manuscript, </type> <month> April </month> <year> 1996. </year>
Reference-contexts: Most recently, Garg [9] has improved this constant factor to 3. Also very recently, for the case of points in the plane with the Euclidean distance metric, Arora [1] and Mitchell <ref> [15] </ref> (see also [14]) have independently developed a polynomial-time approximation scheme (PTAS) for the k-MST problem; that is, an algorithm that for any fixed * &gt; 0 can achieve a (1 + *) approximation in polynomial time.
Reference: [16] <author> S. Rajagopalan and V. Vazirani. </author> <title> Logarithmic approximation of minimum weight k trees. </title> <type> Unpublished manuscript, </type> <year> 1995. </year>
Reference-contexts: Subsequent results. Since the initial (conference) publication of this paper [2], several results have appeared that build and improve upon those here. Rajagopalan and Vazirani <ref> [16] </ref> describe an algorithm that can be viewed as a somewhat "smoothed" version of the algorithm of this paper and prove that it achieves an O (log k) approximation to the k-MST.
Reference: [17] <author> R. Ravi, R. Sundaram, M.V. Marathe, D.J. Rosenkrantz, and S.S. Ravi. </author> <title> Spanning trees short and small. </title> <booktitle> In Proceedings of the 5th Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1994. </year> <month> 11 </month>
Reference-contexts: Ravi, Sundaram, Marathe, Rosenkrantz, and S.S. Ravi <ref> [17] </ref> considered the cleanest case of above problem, called the minimum-weight k-tree, or k-MST problem. <p> This problem is also called the "orienteering problem" by Golden, Levi, and Vohra [13]. Prior work. Ravi et al. <ref> [17] </ref> provide an algorithm that achieves an approximation ratio of O ( k) for the k-MST problem on general graphs (i.e., the tree found is at most O ( p times heavier than the optimal tree) and ratio O (k 1=4 ) for the special case of points in 2-dimensional Euclidean <p> Results of this paper. In this paper, we describe an algorithm that achieves an approximation ratio O (log 2 k) for the k-MST problem on general graphs, improving the previous bound of O ( p k) <ref> [17] </ref>.
References-found: 17

