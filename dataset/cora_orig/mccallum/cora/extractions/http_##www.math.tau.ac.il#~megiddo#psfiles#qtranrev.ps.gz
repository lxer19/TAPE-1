URL: http://www.math.tau.ac.il/~megiddo/psfiles/qtranrev.ps.gz
Refering-URL: http://www.math.tau.ac.il/~megiddo/pub.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Linear Time Algorithms for Some Separable Quadratic Programming Problems  
Author: Nimrod Megiddo and Arie Tamir 
Date: November 1991; revised February 1993  
Abstract: A large class of separable quadratic programming problems is presented. The problems in the class can be solved in linear time. The class includes the separable convex quadratic transportation problem with a fixed number of sources and separable convex quadratic programming with nonnegativity con straints and a fixed number of linear equality constraints.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. W. Best and R. Y. Tan, </author> <title> "An O(n 2 log n) strongly polynomial algorithm for quadratic program with two equations and lower & upper bounds," </title> <type> Research Report 90-04, </type> <institution> Department of Combinatorics and Optimization, University of Waterloo, Waterloo, </institution> <address> Ontario, Canada, </address> <year> 1990. </year>
Reference-contexts: A somewhat simpler problem is that of a separable convex quadratic programming with a fixed number of linear constraints. Best and Tan <ref> [ 1 ] </ref> gave an O (n 2 log n) algorithm for the following problem: Minimize 1 2 j=1 j + j=1 subject to n X a j x j = ff j=1 ` j x j h j (j = 1; . . . ; n) : We demonstrate in
Reference: [2] <author> P. Brucker, </author> <title> "An O(n) algorithm for quadratic knapsack problems," </title> <note> Operations Research Letters 3 (1984) 163-166. </note>
Reference-contexts: For any fixed , the latter problem is a quadratic knapsack problem (see Brucker <ref> [ 2 ] </ref> ) or a resource allocation problem (see Ibaraki and Katoh [ 8 ] ): (QRS) Minimize 1 2 i=1 i + i=1 subject to m X y i = b (where we assume, for simplicity of presentation, that c i &gt; 0; i = 1; . . .
Reference: [3] <author> K. L. Clarkson, </author> <title> "Linear programming in O(n3 d 2 ) time," </title> <note> Information Processing Letters 22 (1986) 21-24. </note>
Reference-contexts: ` j x j h j (j = 1; . . . ; n) : We demonstrate in this note how the technique of Lagrangian relaxation provides linear time algorithms for such problems based on the multidimensional search procedure of Megiddo [ 10 ] , and the improvements by Clarkson <ref> [ 3 ] </ref> and Dyer [ 5 ] . We do not describe the mulitdimensional search procedure in detail. The interested reader should consult the references. In Sections 2 and 3 we give the idea of the algorithm for the two special cases. <p> To identify a cell of j containing fl , we determine the position of fl with respect to all of its p j hyperplane equations. We apply the multidimensional search of [ 10 ] (or the improvements suggested in <ref> [ 3 ] </ref> and [ 5 ] ) for identifying the cells. Suppose there exists an oracle which accepts as input any hyperplane equation in R m and outputs the position of fl with respect to this equation. <p> The reader is referred to <ref> [ 10; 3; 5 ] </ref> for a detailed description of the multidimensional search. We note in passing that the approach is based on reducing the m-dimensional problem into a number of (m 1)-dimensional problems. This number depends on m but not on k.
Reference: [4] <author> S. Cosares and D. S. Hochbaum, </author> <title> "Strongly polynomial algorithms for the quadratic transportation problem with a fixed number of sources," </title> <type> manuscript, </type> <institution> University of California, Berkeley, </institution> <month> October </month> <year> 1990. </year>
Reference-contexts: Research supported in part by ONR under contract N00014-91-C-0026. y School of Mathematical Sciences, Tel Aviv University, Tel Aviv, Israel. 1 Cosares and Hochbaum <ref> [ 4 ] </ref> showed that for any fixed value of m, this problem can be solved in strongly polynomial time. Their algorithm runs in O (n m+1 ) arithmetic operations. <p> This problem is also used by Cosares and Hochbaum <ref> [ 4 ] </ref> . It can be solved as follows.
Reference: [5] <author> M. E. Dyer, </author> <title> "On a multidimensional search technique and its application to the Euclidean one-center problem," </title> <journal> SIAM J. Comput. </journal> <month> 15 </month> <year> (1986) </year> <month> 725-738. </month>
Reference-contexts: j (j = 1; . . . ; n) : We demonstrate in this note how the technique of Lagrangian relaxation provides linear time algorithms for such problems based on the multidimensional search procedure of Megiddo [ 10 ] , and the improvements by Clarkson [ 3 ] and Dyer <ref> [ 5 ] </ref> . We do not describe the mulitdimensional search procedure in detail. The interested reader should consult the references. In Sections 2 and 3 we give the idea of the algorithm for the two special cases. A more general treatment is given in Section 4. 2. <p> To identify a cell of j containing fl , we determine the position of fl with respect to all of its p j hyperplane equations. We apply the multidimensional search of [ 10 ] (or the improvements suggested in [ 3 ] and <ref> [ 5 ] </ref> ) for identifying the cells. Suppose there exists an oracle which accepts as input any hyperplane equation in R m and outputs the position of fl with respect to this equation. <p> The reader is referred to <ref> [ 10; 3; 5 ] </ref> for a detailed description of the multidimensional search. We note in passing that the approach is based on reducing the m-dimensional problem into a number of (m 1)-dimensional problems. This number depends on m but not on k.
Reference: [6] <author> M. E. Dyer, </author> <title> "An O(n) algorithm for the multiple-choice knapsack linear program," </title> <journal> Math. </journal> <note> Programming 29 (1984) 57-63. </note>
Reference-contexts: But this is really a special case of the d-dimensional linear multiple choice knapsack problem for which linear time algorithms based on the basic multidimensional search of [ 10 ] were given by Dyer <ref> [ 6 ] </ref> and Zemel [ 12 ] . Tokuyama and Nakano [ 11 ] proved that the linear transportation problem can be solved in O (m 2 n log 2 n) time if n &gt; m log m.
Reference: [7] <author> H. Edelsbrunner, </author> <title> Algorithms in Combinatorial Geometry, </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, Heidelberg, New York, </address> <year> 1987. </year> <title> 1 We note that instead of parallel hyperplanes we can also develop a method based on subgradients which works over the real numbers as well. </title> <type> 10 </type>
Reference-contexts: cells of the function can be found by computing intersections of the components j ; the number of such intersections is O (n m ) and they can all be computed in O (n m ) time (since the total number of hyperplanes is O (n); see chapter 7 in <ref> [ 7 ] </ref> ), so can be maximized in strongly polynomial time whenever m is fixed. Let fl be a maximizer of (). If a cell of j containing fl is known, then j can be replaced by its respective quadratic expression.
Reference: [8] <author> T. Ibaraki and N. Katoh, </author> <title> Resource allocation problems: Algorithmic approaches, </title> <editor> The M. I. T. </editor> <publisher> Press, </publisher> <address> Cambridge, Mass. </address> <year> 1988. </year>
Reference-contexts: For any fixed , the latter problem is a quadratic knapsack problem (see Brucker [ 2 ] ) or a resource allocation problem (see Ibaraki and Katoh <ref> [ 8 ] </ref> ): (QRS) Minimize 1 2 i=1 i + i=1 subject to m X y i = b (where we assume, for simplicity of presentation, that c i &gt; 0; i = 1; . . . ; m).
Reference: [9] <author> T. Matsui, </author> <title> "Linear time algorithm for the Hitchcock transportation with fixed number of supply points," </title> <note> unpublished. </note>
Reference-contexts: Their algorithm runs in O (n m+1 ) arithmetic operations. Matsui <ref> [ 9 ] </ref> gave a linear time algorithm for the linear transportation problem (i.e., with C = O) for any fixed m.
Reference: [10] <author> N. Megiddo, </author> <title> "Linear programming in linear time when the dimension is fixed," </title> <journal> J. </journal> <note> ACM 31 (1984) 114-127. </note>
Reference-contexts: But this is really a special case of the d-dimensional linear multiple choice knapsack problem for which linear time algorithms based on the basic multidimensional search of <ref> [ 10 ] </ref> were given by Dyer [ 6 ] and Zemel [ 12 ] . Tokuyama and Nakano [ 11 ] proved that the linear transportation problem can be solved in O (m 2 n log 2 n) time if n &gt; m log m. <p> n X a j x j = ff j=1 ` j x j h j (j = 1; . . . ; n) : We demonstrate in this note how the technique of Lagrangian relaxation provides linear time algorithms for such problems based on the multidimensional search procedure of Megiddo <ref> [ 10 ] </ref> , and the improvements by Clarkson [ 3 ] and Dyer [ 5 ] . We do not describe the mulitdimensional search procedure in detail. The interested reader should consult the references. <p> In order to identify such proportions, we determine the position of fl relative to a fixed proportion of hyperplanes using the technique of <ref> [ 10 ] </ref> . More details will be given in Section 4. 3 3. <p> Again, the multidimensional search of <ref> [ 10 ] </ref> can be employed to convert the functions j into quadratic functions by identifying the position of fl relative to the critical hyperplanes. This is 5 done in O (log n) phases, where in each phase a fixed proportion of the remaining functions is converted. <p> Examine for example the first phase. We start this phase by considering the cell partition induced by the collection of the O (m 2 n) hyperplane equations: d ij i = d kj k (1 j n; 1 i &lt; k m) : Using the multidimensional search in <ref> [ 10 ] </ref> , (see Section 4), we find a cell of this partition containing fl such that the order of the d i (; j) (i = 1; . . . ; m) is fixed over this cell for at least half of the indices j. <p> Next, for all indices j 2 J we define the hyperplane equations: S k () = b (k = 1; . . . ; m). Consider the cell partition induced by this collection of equations. Again, apply <ref> [ 10 ] </ref> to determine for at least one half of the indices in J an index ` (1 ` m) such that S ` &lt; b S `+1 : Thus, at least one quarter of the n original functions j can be converted into quadratic functions during the first phase. <p> To identify a cell of j containing fl , we determine the position of fl with respect to all of its p j hyperplane equations. We apply the multidimensional search of <ref> [ 10 ] </ref> (or the improvements suggested in [ 3 ] and [ 5 ] ) for identifying the cells. Suppose there exists an oracle which accepts as input any hyperplane equation in R m and outputs the position of fl with respect to this equation. <p> The reader is referred to <ref> [ 10; 3; 5 ] </ref> for a detailed description of the multidimensional search. We note in passing that the approach is based on reducing the m-dimensional problem into a number of (m 1)-dimensional problems. This number depends on m but not on k.
Reference: [11] <author> T. Tokuyama and J. Nakano, </author> <title> "Efficient algorithms for the Hitchcock transportation problem," </title> <type> IBM Research Report RT 0060, </type> <institution> Tokyo Research Laboratory, </institution> <address> Tokyo, Japan, </address> <month> July </month> <year> 1991. </year>
Reference-contexts: But this is really a special case of the d-dimensional linear multiple choice knapsack problem for which linear time algorithms based on the basic multidimensional search of [ 10 ] were given by Dyer [ 6 ] and Zemel [ 12 ] . Tokuyama and Nakano <ref> [ 11 ] </ref> proved that the linear transportation problem can be solved in O (m 2 n log 2 n) time if n &gt; m log m. A somewhat simpler problem is that of a separable convex quadratic programming with a fixed number of linear constraints.
Reference: [12] <author> E. Zemel, </author> <title> "An O(n) algorithm for the linear multiple choice knapsack problem and related problems ," Information Processing Letters 18 (1984) 123-128. </title> <type> 11 </type>
Reference-contexts: But this is really a special case of the d-dimensional linear multiple choice knapsack problem for which linear time algorithms based on the basic multidimensional search of [ 10 ] were given by Dyer [ 6 ] and Zemel <ref> [ 12 ] </ref> . Tokuyama and Nakano [ 11 ] proved that the linear transportation problem can be solved in O (m 2 n log 2 n) time if n &gt; m log m. <p> we view the objective function as a sum of O (n) concave piecewise quadratics defined over R m , where the number of hyperplanes associated with each term j is some constant p j .) For the case m = 1, we use the usual median-finding scheme as in Zemel <ref> [ 12 ] </ref> to maximize in O (n) time. 9 Turning to a general m, it follows from our solution approach, that the O (n) bound is implied if the oracle can find the position of fl with respect to a single hyperplane during Phase s in O (r s )
References-found: 12

