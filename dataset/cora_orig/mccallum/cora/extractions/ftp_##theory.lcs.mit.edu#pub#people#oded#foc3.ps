URL: ftp://theory.lcs.mit.edu/pub/people/oded/foc3.ps
Refering-URL: http://theory.lcs.mit.edu/~oded/tfoc.html
Root-URL: 
Email: Email: oded@wisdom.weizmann.ac.il  
Title: The Foundations of Modern Cryptography (Version Nr. 3.1)  
Author: Oded Goldreich 
Note: A preliminary version of this essay has appeared in the proceedings of Crypto97 (Springer's Lecture Notes in Computer Science, Vol. 1294).  
Date: May 2, 1998  
Address: Rehovot, Israel.  
Affiliation: Department of Computer Science and Applied Mathematics Weizmann Institute of Science,  
Abstract: In our opinion, the Foundations of Cryptography are the paradigms, approaches and techniques used to conceptualize, define and provide solutions to natural cryptographic problems. In this essay, we survey some of these paradigms, approaches and techniques as well as some of the fundamental results obtained using them. Special effort is made in attempt to dissolve common misconceptions regarding these paradigms and results. c flCopyright 1998 by Oded Goldreich. Permission to make copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that new copies bear this notice and the full citation on the first page. Abstracting with credit is permitted. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> W. Alexi, B. Chor, O. Goldreich and C.P. Schnorr. </author> <title> RSA/Rabin Functions: Certain Parts are As Hard As the Whole. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 17, </volume> <month> April </month> <year> 1988, </year> <pages> pages 194-209. </pages>
Reference-contexts: Furthermore, plain RSA (alike any deterministic public-key encryption scheme) is not secure (as one can easily distinguish the encryption of one predetermined message from the encryption of another). Yet, RSA can be easily transformed into a secure public-key encryption scheme by using a construction <ref> [1] </ref> which is reminiscent of a common practice (of padding the message with random noise). We stress that the resulting scheme is not merely believed to be secure but rather its security is linked to a much simpler assumption (i.e., the assumption that RSA is hard to invert). <p> We have G N (s) = lsb (s) lsb (s 2 mod N ) lsb (s 2 `(jsj)1 mod N ), where lsb (x) is the least significant bit of x (which by <ref> [1, 165] </ref> is a hard-core of the modular squaring function). We note that for any one-way permutation f 0 , the inner-product mod 2 of x and r is a hard-core of f (x; r) = (f 0 (x); r) [96]. <p> In particular, assuming the intractability of the subset sum problem (for suitable densities) or of the decoding of random linear codes, this paradigm was used in [114, 80] to construct very efficient pseudorandom generators. Alternatively, encouraged by the results in <ref> [1, 110] </ref>, we conjecture that the first n=2 least significant bits of the argument constitute a hard-core function of the modular squaring function for n-bit long moduli. <p> however, that the security of the scheme depends on the length of N (and not on n).) Assuming that factoring Blum Integers (i.e., products of two primes each congruent to 3 (mod 4)) is hard, one may use the modular squaring function in role of the trapdoor permutation above (see <ref> [25, 1, 165, 81] </ref>). <p> We only know that the O (log n) least significant bits constitute a hard-core function for n-bit moduli <ref> [1] </ref>. 11 An even stronger notion of Chosen Ciphertext Attack is investiagted in [155]. This stronger notion is related to non-malleability discussed below. 17 it should be infeasible to produce a ciphertext to the plaintext 0x. <p> The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and <ref> [25, 1] </ref>, respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51].
Reference: [2] <author> D. Beaver. </author> <title> Foundations of Secure Interactive Computing. </title> <booktitle> In Crypto91, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 576), </volume> <pages> pages 377-391. </pages>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in <ref> [132, 2, 103, 35] </ref>). However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process.
Reference: [3] <author> M. Bellare, R. Canetti and H. Krawczyk. </author> <title> Pseudorandom functions Revisited: The Cas cade Construction and its Concrete Security. </title> <booktitle> In 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 514-523, </pages> <year> 1996. </year>
Reference-contexts: Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see [92] or the more efficient constructions in <ref> [10, 9, 3] </ref>). However, as noted in [4], an extensive usage of pseudorandom functions seem an overkill for achieving message authentication, and more efficient schemes may be obtained based on other cryptographic primitives. We mention two approaches, each consisting of a two-stage process: 1. <p> In the latter term ("cost") we mean the relationship of the security of the building block to the security of the resulting solution. For further discussion the reader is referred to <ref> [3, Sec. 1.5] </ref>. Turning the table around, if we note that a specific primitive provides good security, when used as a building block in many constructions, then this may serve as incentive to focus attention on the implementation of this primitive.
Reference: [4] <author> M. Bellare, R. Canetti and H. Krawczyk. </author> <title> Keying Hash Functions for Message Authentication. </title> <booktitle> In Crypto96, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1109), </volume> <pages> pages 1-15. </pages>
Reference-contexts: Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see [92] or the more efficient constructions in [10, 9, 3]). However, as noted in <ref> [4] </ref>, an extensive usage of pseudorandom functions seem an overkill for achieving message authentication, and more efficient schemes may be obtained based on other cryptographic primitives. We mention two approaches, each consisting of a two-stage process: 1. <p> Hashing the message using a collision-free scheme (cf., [55, 56]), and authenticating the result using a mac which operates on (short) fixed-length strings <ref> [4] </ref>. Three central paradigms in the construction of signature schemes are the "refreshing" of the "ef-fective" signing-key, the usage of an "authentication tree" and the "hashing paradigm". <p> Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to <ref> [4] </ref>. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in [90].
Reference: [5] <author> M. Bellare and O. Goldreich. </author> <title> On Defining Proofs of Knowledge. </title> <booktitle> In Crypto92, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 740), </volume> <pages> pages 390-420. </pages>
Reference-contexts: Non-interactive zero-knowledge proofs are useful in applications where one of the parties may be trusted to select the abovementioned reference string (e.g., see Section 5.3). Noninteractive zero-knowledge arguments for NP were constructed using any trapdoor permutation [73, 119]. Zero-knowledge proofs of knowledge <ref> [105, 79, 5] </ref>: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72].
Reference: [6] <author> M. Bellare, O. Goldreich and S. Goldwasser. </author> <title> Incremental Cryptography: the Case of Hashing and Signing. </title> <booktitle> In Crypto94, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 839), </volume> <pages> pages 216-233, </pages> <year> 1994. </year>
Reference-contexts: Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing [69] and Incremental Cryptography <ref> [6, 7] </ref>. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> Our own preference is to refer to [35] for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography <ref> [6, 7] </ref>, Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others.
Reference: [7] <author> M. Bellare, O. Goldreich and S. Goldwasser. </author> <title> Incremental Cryptography and Application to Virus Protection. </title> <booktitle> In 27th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 45-56, </pages> <year> 1995. </year>
Reference-contexts: Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing [69] and Incremental Cryptography <ref> [6, 7] </ref>. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> Our own preference is to refer to [35] for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography <ref> [6, 7] </ref>, Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others.
Reference: [8] <author> M. Bellare, S. Goldwasser and D. Micciancio. </author> <title> "Pseudo-random" Number Generation within Cryptographic Algorithms: the DSS Case. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 277-291. </pages>
Reference-contexts: ad-hoc "pseudorandom generators" which pass some ad-hoc statistical tests may be adequate for some statistical samplings, they are certainly inadequate for use in Cryptography: For example, sequences generated by linear congruential generators are easy to predict [28, 83] 2 and endanger cryptographic applications even when not given in the clear <ref> [8] </ref>. The alternative suggested by Blum, Goldwasser, Micali and Yao [26, 104, 168] is a robust notion of pseudorandom generators such a generator produces sequences which are computationally indistinguishable from truly random sequences, and thus, can replace truly random sequences in any practical application.
Reference: [9] <author> M. Bellare, R. Guerin and P. Rogaway. </author> <title> XOR MACs: New Methods for Message Authenti cation using Finite Pseudorandom Functions. </title> <booktitle> In Crypto95, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 963), </volume> <pages> pages 15-28. </pages>
Reference-contexts: Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see [92] or the more efficient constructions in <ref> [10, 9, 3] </ref>). However, as noted in [4], an extensive usage of pseudorandom functions seem an overkill for achieving message authentication, and more efficient schemes may be obtained based on other cryptographic primitives. We mention two approaches, each consisting of a two-stage process: 1.
Reference: [10] <author> M. Bellare, J. Kilian and P. Rogaway. </author> <title> The Security of Cipher Block Chaining. </title> <booktitle> In Crypto94, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 839), </volume> <pages> pages 341-358. </pages>
Reference-contexts: (n=* 0 (n)) T 0 (n) and *(g (n)) = poly (* 0 (n))=poly (T 0 (n)). 3 The importance of explicitly relating the security of the resulting scheme to the quantified intractability assumption has been advocated (and practiced) in a sequence of recent works by Bellare and Rogaway (cf., <ref> [10, p. 343] </ref>). 6 The smaller f and g 1 , the better. <p> Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see [92] or the more efficient constructions in <ref> [10, 9, 3] </ref>). However, as noted in [4], an extensive usage of pseudorandom functions seem an overkill for achieving message authentication, and more efficient schemes may be obtained based on other cryptographic primitives. We mention two approaches, each consisting of a two-stage process: 1.
Reference: [11] <author> M. Bellare and S. Micali. </author> <title> How to Sign Given Any Trapdoor Function. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 39, </volume> <pages> pages 214-233, </pages> <year> 1992. </year>
Reference-contexts: Likewise, although plain RSA signing is vulnerable to "existential forgery" (and other attacks), RSA can be transformed into a signature scheme which is unforgeable (provided RSA is hard to invert) <ref> [106, 11] </ref>. Using the assumption that RSA is hard to invert, one can construct pseudorandom generators [26, 168], zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function [169, 98]. <p> For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in <ref> [11, 69, 66, 51] </ref>. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions.
Reference: [12] <author> M. Bellare and P. Rogaway. </author> <title> Random Oracles are Practical: a Paradigm for Designing Efficient Protocols. </title> <booktitle> In 1st Conf. on Computer and Communications Security, ACM, </booktitle> <pages> pages 62-73, </pages> <year> 1993. </year>
Reference-contexts: Such an interactive proof should allow the prover to convince the verifier of the validity of any true assertion, whereas 4 This is different from the Random Oracle Model of <ref> [12] </ref>, where the adversary has a direct access to the function. 5 Typically, the distinguisher stands for an adversary that attacks a system which uses a pseudorandom function. <p> Thus, one obtains an implementation of the ideal system in a world where random oracles do not exist. This methodology, explicitly formulated in <ref> [12] </ref>, has been used in many works (see, for example, [79, 159, 15]). Although the random oracle methodology seems to be useful in practice, it is unclear how to put it on firm grounds.
Reference: [13] <author> M. Bellare and P. Rogaway. </author> <title> Entity Authentication and Key Distribution. </title> <booktitle> In Crypto93, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 773), </volume> <pages> pages 232-249, </pages> <year> 1994. </year>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in [132, 2, 103, 35]). However, it has been employed also in different settings such as in <ref> [13, 14, 41] </ref>. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. <p> Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of [69, 66, 51], the session-key protocols of <ref> [13, 14] </ref>, and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. Unfortunately, the classification is not always stated in the paper; however, it is typically evident from the construction.
Reference: [14] <author> M. Bellare and P. Rogaway. </author> <title> Provably Secure Session Key Distribution: The Three Party Case. </title> <booktitle> In 27th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 57-66, </pages> <year> 1995. </year>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in [132, 2, 103, 35]). However, it has been employed also in different settings such as in <ref> [13, 14, 41] </ref>. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. <p> Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of [69, 66, 51], the session-key protocols of <ref> [13, 14] </ref>, and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. Unfortunately, the classification is not always stated in the paper; however, it is typically evident from the construction.
Reference: [15] <author> M. Bellare and P. Rogaway. </author> <title> The Exact Security of Digital Signatures: How to Sign with RSA and Rabin. </title> <booktitle> In EuroCrypt96, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1070), </volume> <pages> pages 399-416. </pages>
Reference-contexts: However, it may be secure if the message is "randomized" before RSA (or the other schemes) is applied (cf., <ref> [15] </ref>). Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see [92] or the more efficient constructions in [10, 9, 3]). <p> Thus, one obtains an implementation of the ideal system in a world where random oracles do not exist. This methodology, explicitly formulated in [12], has been used in many works (see, for example, <ref> [79, 159, 15] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put it on firm grounds.
Reference: [16] <author> M. Ben-Or, O. Goldreich, S. Goldwasser, J. H-astad, J. Kilian, S. Micali and P. Rogaway. </author> <title> Everything Provable is Probable in Zero-Knowledge. </title> <booktitle> In Crypto88, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 403), </volume> <pages> pages 37-56, </pages> <year> 1990 </year>
Reference: [17] <author> M. Ben-Or, S. Goldwasser, J. Kilian and A. Wigderson. </author> <title> Multi-Prover Interactive Proofs: How to Remove Intractability. </title> <booktitle> In 20th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 113-131, </pages> <year> 1988. </year>
Reference-contexts: Other activities. This essay is focused on the definitional and constructive activities mentioned above. Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities <ref> [17, 60, 131] </ref>, batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner".
Reference: [18] <author> M. Ben-Or, S. Goldwasser and A. Wigderson. </author> <title> Completeness Theorems for Non-Cryptographic Fault-Tolerant Distributed Computation. </title> <booktitle> In 20th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 1-10, </pages> <year> 1988. </year>
Reference-contexts: Analogous plausibility results were subsequently obtained in a variety of models. In particular, we mention secure computations in the private channels model <ref> [18, 45] </ref> and in the presence of mobile adversaries [145]. As stressed in the case of zero-knowledge proofs, we view these results as asserting that very wide classes of problems are solvable in principle. However, we do not recommend using the solutions derived by these general results in practice. <p> In contrast, information-theoretically secure multi-party computation is possible when assuming the existence of perfect private channels between each pair of honest users <ref> [18, 45] </ref>. 17 Consequently, it was shown how to construct commitment schemes based on any pseudorandom generator [134], and that the latter exists if one-way functions exist [109]. 23 primitive which, being well-known, typically has several candidate implementations. More on this subject below. On the meaning of asymptotic results. <p> However, these impossibility results hold only in case the adversary has full information (apart from the honest parties secret inputs and private coin tosses). For example, information-theoretically secure multi-party computation is possible (and in fact feasible) if there are perfect private channels between each pair of honest users <ref> [18, 45] </ref>. On the other hand, information-theoretically secure private channels can be implemented on top of channels to which the adversary has limited access. Channels of the latter type include 1. <p> The security and operation of such a distributed cryptographic system falls within the domain of general multi-party computation, and thus is solvable in principle <ref> [98, 18, 45] </ref>. 21 However, what one desires is efficient solutions, and in particular ones comparable in efficiency to standard "single private-key" cryptosystems. Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works).
Reference: [19] <author> G.R. Blakley. </author> <title> Safeguarding Cryptographic Keys. </title> <booktitle> In Proc. of National Computer Conf., </booktitle> <volume> Vol. 48, </volume> <publisher> AFIPS Press, </publisher> <pages> pages 313-317, </pages> <year> 1979. </year>
Reference: [20] <author> M. Blum. </author> <title> How to Exchange Secret Keys. </title> <journal> ACM Trans. Comput. Sys., </journal> <volume> Vol. 1, </volume> <pages> pages 175-193, </pages> <year> 1983. </year>
Reference-contexts: At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols. In particular, problems as coin tossing over telephone [21], exchange of secrets <ref> [20] </ref>, and Oblivious Transfer were formulated [153] (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168].
Reference: [21] <author> M. Blum. </author> <title> Coin Flipping by Phone. </title> <booktitle> IEEE Spring COMPCOM, </booktitle> <pages> pages 133-137, </pages> <month> February </month> <year> 1982. </year> <journal> See also SIGACT News, </journal> <volume> Vol. 15, No. 1, </volume> <year> 1983. </year>
Reference-contexts: At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols. In particular, problems as coin tossing over telephone <ref> [21] </ref>, exchange of secrets [20], and Oblivious Transfer were formulated [153] (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168].
Reference: [22] <author> L. Blum, M. Blum and M. Shub. </author> <title> A Simple Secure Unpredictable Pseudo-Random Number Generator. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 15, </volume> <year> 1986, </year> <pages> pages 364-383. </pages>
Reference: [23] <author> M. Blum, A. De Santis, S. Micali, and G. Persiano. </author> <title> Non-Interactive Zero-Knowledge Proof Systems. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 20, No. 6, </volume> <pages> pages 1084-1118, </pages> <year> 1991. </year> <note> (Considered the journal version of [24].) </note>
Reference: [24] <author> M. Blum, P. Feldman and S. Micali. </author> <title> Non-Interactive Zero-Knowledge and its Applications. </title> <booktitle> In 20th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 103-112, </pages> <year> 1988. </year> <note> See [23]. </note>
Reference-contexts: Perfect zero-knowledge arguments for NP were constructed using any one-way permutation [135]. Non-Interactive zero-knowledge proofs <ref> [24, 73] </ref>: Here the interaction between the prover and the verifier consists of the prover sending a single message to the verifier (as in "classical proofs"). In addition, both players have access to a "random reference string" which is postulated to be uniformly selected.
Reference: [25] <author> M. Blum and S. Goldwasser. </author> <title> An Efficient Probabilistic Public-Key Encryption Scheme which hides all partial information. </title> <booktitle> In Crypto84, Lecture Notes in Computer Science (Vol. </booktitle> <publisher> 196) Springer-Verlag, </publisher> <pages> pages 289-302. </pages>
Reference-contexts: Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser <ref> [25] </ref>, the digital signature schemes of [69, 66, 51], the session-key protocols of [13, 14], and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. <p> Specific additions include (1) actual definitions of secure encryption and unforgeable signatures; (2) a more 1 The only exception to the latter statement is Levin's observation regarding the existence of a universal one-way function (cf., [122] and [89, Sec. 2.4.1]). 4 detailed description of the Blum-Goldwasser encryption scheme <ref> [25] </ref>; (3) a historical perspective; and (4) some specific notes (added to Section 8). 5 Part I Basic Tools 2 Central Paradigms Modern Cryptography, as surveyed here, is concerned with the construction of efficient schemes for which it is infeasible to violate the security feature. <p> Then, encrypting n=2-bit messages by padding the message with n=2 random bits and applying RSA (with an n-bit moduli) on the result constitutes a secure public-key encryption system, hereafter referred to as Randomized RSA. Secondly, following <ref> [25] </ref>, we present an alternative public-key encryption scheme, which can be based on any trapdoor permutation. In contrast to the scheme presented above, the current scheme is not wasteful in bandwidth. The encryption scheme augments the construction of a pseudorandom generator, given in Section 3, as follows. <p> however, that the security of the scheme depends on the length of N (and not on n).) Assuming that factoring Blum Integers (i.e., products of two primes each congruent to 3 (mod 4)) is hard, one may use the modular squaring function in role of the trapdoor permutation above (see <ref> [25, 1, 165, 81] </ref>). <p> The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and <ref> [25, 1] </ref>, respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51].
Reference: [26] <author> M. Blum and S. Micali. </author> <title> How to Generate Cryptographically Strong Sequences of Pseudo Random Bits. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 13, </volume> <pages> pages 850-864, </pages> <year> 1984. </year> <note> Preliminary version in 23rd IEEE Symposium on Foundations of Computer Science, </note> <year> 1982. </year>
Reference-contexts: The alternative suggested by Blum, Goldwasser, Micali and Yao <ref> [26, 104, 168] </ref> is a robust notion of pseudorandom generators such a generator produces sequences which are computationally indistinguishable from truly random sequences, and thus, can replace truly random sequences in any practical application. <p> Likewise, although plain RSA signing is vulnerable to "existential forgery" (and other attacks), RSA can be transformed into a signature scheme which is unforgeable (provided RSA is hard to invert) [106, 11]. Using the assumption that RSA is hard to invert, one can construct pseudorandom generators <ref> [26, 168] </ref>, zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function [169, 98]. <p> In contrast, the above belief is an easy corollary of defining pseudorandom distributions as ones which are computationally indistinguishable from uniform distributions. 3.1 The Basics We are interested in pseudorandom sequences which can be generated and determined by short random seeds. That is, Definition 3 (pseudorandom generator <ref> [26, 168] </ref>): Let ` : N 7! N be so that `(n) &gt; n, 8n. A pseudorandom generator, with stretch function `, is an efficient (deterministic) algorithm which on 8 input a random n-bit seed outputs a `(n)-bit sequence which is computationally indistinguishable from a uniformly chosen `(n)-bit sequence. <p> Various cryptographic applications of pseudorandom generators will be presented in the sequel, but first let us consider the construction of pseudorandom generators. A key paradigm is presented next. It uses the notion of a hard-core predicate <ref> [26] </ref> of a (one-way) function: The predicate b is a hard-core of the function f if b is easy to evaluate but b (x) is hard to predict from f (x). <p> Intuitively, b "inherits in a concentrated sense" the difficulty of inverting f . (Note that if b is a hard-core of an efficiently computable 1-1 function f then f must be one-way.) The iteration paradigm <ref> [26] </ref>: Let f be a 1-1 function which is length-preserving and efficiently computable, and b be a hard-core predicate of f .
Reference: [27] <author> D. Boneh, R. DeMillo and R. Lipton. </author> <title> On the Importance of Checking Cryptographic Protocols for Faults. </title> <booktitle> In EuroCrypt97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1233), </volume> <pages> pages 37-51, </pages> <year> 1997. </year>
Reference-contexts: For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults <ref> [27] </ref>, and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft. Thanks also to Mihir Bellare, Gilles Brassard, Christian Cachin, Ran Canetti, Ronald Cramer, Cynthia Dwork, Shafi Goldwasser, Moni Naor and Birgit Pfitzmann for comments and corrections regarding previous versions. 30
Reference: [28] <author> J.B. Boyar. </author> <title> Inferring Sequences Produced by Pseudo-Random Number Generators. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 36, </volume> <pages> pages 129-141, </pages> <year> 1989. </year>
Reference-contexts: Although ad-hoc "pseudorandom generators" which pass some ad-hoc statistical tests may be adequate for some statistical samplings, they are certainly inadequate for use in Cryptography: For example, sequences generated by linear congruential generators are easy to predict <ref> [28, 83] </ref> 2 and endanger cryptographic applications even when not given in the clear [8]. <p> We stress that this is a very dangerous practice when the "pseudorandom generator" is easy to predict (such as the linear congruential generator or some modifications of it which output a constant fraction of the bits of each resulting number see <ref> [28, 83] </ref>). However, this common practice becomes sound provided one uses pseudorandom generators (as defined in Section 3).
Reference: [29] <author> G. Brassard. </author> <title> A Note on the Complexity of Cryptography. </title> <journal> IEEE Trans. on Inform. Th., </journal> <volume> Vol. 25, </volume> <pages> pages 232-233, </pages> <year> 1979. </year>
Reference-contexts: New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. Cryptography was explicitly related to complexity theory in <ref> [29, 71, 121] </ref>: It was understood that problems related to breaking a 1-1 cryptographic mapping cannot be N P -complete, and more importantly that N P-hardness of the breaking task is a poor evidence for cryptographic security.
Reference: [30] <editor> G. Brassard. </editor> <booktitle> Quantum Information Processing: The Good, the Bad and the Ugly. In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 337-341. 32 </pages>
Reference-contexts: On the other hand, information-theoretically secure private channels can be implemented on top of channels to which the adversary has limited access. Channels of the latter type include 1. Quantum Channels where an adversary is prevented from obtaining full information by the laws of quantum mechanics (cf., <ref> [30] </ref> and the references therein). 2. The noisy channel model (which generalizes the wiretap channel of [167]) where both the communication between the legitimate parties and the tapping channel of the adversary are subjected to noise (cf., [125, 54] and the references therein). 3.
Reference: [31] <author> G. Brassard, D. Chaum and C. Crepeau. </author> <title> Minimum Disclosure Proofs of Knowledge. </title> <journal> Journal of Computer and System Science, </journal> <volume> Vol. 37, No. 2, </volume> <pages> pages 156-189, </pages> <year> 1988. </year> <note> Preliminary version by Brassard and Crepeau in 27th IEEE Symposium on Foundations of Computer Science, </note> <year> 1986. </year>
Reference-contexts: This means that the zero-knowledge clause holds regardless of the computational abilities of the adversary. However, arguments (aka computationally sound proofs) differ from interactive proofs in having a weaker soundness clause: it is infeasible (rather than impossible) to fool the verifier to accept false assertion (except with negligible probability) <ref> [31] </ref>. Perfect zero-knowledge arguments for NP were constructed using any one-way permutation [135]. Non-Interactive zero-knowledge proofs [24, 73]: Here the interaction between the prover and the verifier consists of the prover sending a single message to the verifier (as in "classical proofs").
Reference: [32] <author> G. Brassard and C. Crepeau. </author> <title> Zero-Knowledge Simulation of Boolean Circuits. </title> <booktitle> In Crypto86, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 263), </volume> <pages> pages 223-233, </pages> <year> 1987. </year>
Reference: [33] <author> G. Brassard, C. Crepeau and M. Yung. </author> <title> Constant-Round Perfect Zero-Knowledge Computa tionally Convincing Protocols. </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 84, </volume> <pages> pages 23-52, </pages> <year> 1991. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [34] <author> C. Cachin and U. Maurer. </author> <title> Unconditional security against memory-bounded adversaries. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 292-306. </pages>
Reference-contexts: A model where the adversary can freely tap the communication channel but is restricted in the amount of data it can store (cf., <ref> [34] </ref>). 26 In addition, with respect to private-key cryptography (i.e., both encryption and message-authentication), the abovementioned impossibility results may be irrelevant in some applications. What these impossibility results actually establish is that the private-keys need to be at least as long as the data to which they are applied.
Reference: [35] <author> R. Canetti. </author> <title> Studies in Secure Multi-Party Computation and Applications. </title> <type> Ph.D. Thesis, </type> <institution> Department of Computer Science and Applied Mathematics, Weizmann Institute of Science, Rehovot, Israel, </institution> <month> June </month> <year> 1995. </year> <note> Available from from http : ==theory:lcs:mit:edu= ~ tcryptol=BOOKS=ran phd:html. </note>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in <ref> [132, 2, 103, 35] </ref>). However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. <p> For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to <ref> [35] </ref> for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102].
Reference: [36] <author> R. Canetti. </author> <title> Towards Realizing Random Oracles: Hash Functions that Hide All Partial In formation. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 455-469. </pages>
Reference-contexts: In fact, first steps in this alternative direction have been takin in <ref> [36, 40] </ref>. 9 Historical Perspective Work done during the 1980's plays a dominant role in our exposition. This work was in turn tremendously influenced by previous work, but these influences were not stated explicitly above. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model <ref> [36, 39, 40] </ref>, Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [37] <author> R. Canetti, C. Dwork, M. Naor and R. Ostrovsky. </author> <title> Deniable Encryption. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 90-104. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility <ref> [38, 37] </ref>, Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility <ref> [38, 37] </ref>, sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [38] <author> R. Canetti and R. Gennaro. </author> <title> Incoercible Multiparty Computation. </title> <booktitle> In 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 504-513, </pages> <year> 1996. </year>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility <ref> [38, 37] </ref>, Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility <ref> [38, 37] </ref>, sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [39] <author> R. Canetti, O. Goldreich and S. Halevi. </author> <title> The Random Oracle Model, Revisited. </title> <booktitle> To appear in 30th ACM Symposium on the Theory of Computing, </booktitle> <year> 1998. </year>
Reference-contexts: However, such a general-purpose approach will not work: There exist secure ideal encryption and signature schemes, which do not have any secure implementation (cf., <ref> [39] </ref>). Instead, we suggest that one should proceed by identifying useful (special-purpose) properties of a random oracle, which can be also provided by a fully specified function (or function ensemble), and so yield implementations of certain useful ideal systems. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model <ref> [36, 39, 40] </ref>, Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [40] <author> R. Canetti and D. Micciancio. </author> <title> Tentative title: Using one-way functions to construct Hash Functions that Hide All Partial Information. </title> <booktitle> To appear in 30th ACM Symposium on the Theory of Computing, </booktitle> <year> 1998. </year>
Reference-contexts: In fact, first steps in this alternative direction have been takin in <ref> [36, 40] </ref>. 9 Historical Perspective Work done during the 1980's plays a dominant role in our exposition. This work was in turn tremendously influenced by previous work, but these influences were not stated explicitly above. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model <ref> [36, 39, 40] </ref>, Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [41] <author> R. Canetti, S. Halevi and A. Herzberg. </author> <title> How to Maintain Authenticated Communication in the Presence of Break-Ins. </title> <booktitle> In 16th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1997. </year>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in [132, 2, 103, 35]). However, it has been employed also in different settings such as in <ref> [13, 14, 41] </ref>. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity.
Reference: [42] <author> R. Canetti and A. Herzberg. </author> <title> Maintaining Security in the Presence of Transient Faults. </title> <booktitle> In Crypto94, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 839), </volume> <pages> pages 425-439. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") <ref> [145, 42, 112] </ref>, Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. <p> Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive <ref> [145, 42, 111] </ref>. By robust we mean that proper operation is guaranteed even if some of the sites holding shares of the private-key misbehave (as may be the case when controlled by an adversary).
Reference: [43] <author> L. Carter and M. Wegman. </author> <title> Universal Hash Functions. </title> <journal> Journal of Computer and System Science, </journal> <volume> Vol. 18, </volume> <year> 1979, </year> <pages> pages 143-154. </pages>
Reference-contexts: We mention two approaches, each consisting of a two-stage process: 1. Fingerprinting the message using a scheme which is secure against forgery provided that the adversary does not have access to the scheme's outcome (e.g., using Universal Hashing <ref> [43] </ref>), and "hiding" the result using a non-malleable scheme (e.g., a private-key encryption or a pseudorandom function). (Non-malleability is not required in certain cases; see [166].) 2.
Reference: [44] <author> D. Chaum. </author> <title> Blind Signatures for Untraceable Payments. </title> <booktitle> In Crypto82, </booktitle> <publisher> Plenum Press, </publisher> <pages> pages 199-203, </pages> <year> 1983. </year>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash <ref> [44, 46, 82, 150, 162] </ref>, Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. <p> Thus, when accepting a valid signature the recipient is only guaranteed that it is infeasible for 20 "discertify" the particular verification key, or even the entire signature scheme (hence the term "fail-stop"). Loosely speaking, Blind signatures (cf., <ref> [44, 82, 149, 117] </ref>) are a variant of signature schemes in which the signer gains no knowledge about the document it has signed, but rather only knows the total number of documents signed. <p> The unforgeability condition thus requires that it is infeasible to produce more signatures than the count held by the signer (and that this count reflects the number of successfully-completed invocations of the signing protocol). Blind signatures play a central role in the design of electronic cash systems (cf., <ref> [44, 46] </ref>): They are used to make the monetary-certificates, signed by a financial institute, untraceable. 7 Cryptographic Protocols A general framework for casting cryptographic (protocol) problems consists of specifying a random process which maps n inputs to n outputs. <p> Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in <ref> [44, 82, 149, 117] </ref>. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions.
Reference: [45] <author> D. Chaum, C. Crepeau and I. Damg-ard. </author> <title> Multi-party unconditionally Secure Protocols. </title> <booktitle> In 20th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 11-19, </pages> <year> 1988. </year> <month> 33 </month>
Reference-contexts: Analogous plausibility results were subsequently obtained in a variety of models. In particular, we mention secure computations in the private channels model <ref> [18, 45] </ref> and in the presence of mobile adversaries [145]. As stressed in the case of zero-knowledge proofs, we view these results as asserting that very wide classes of problems are solvable in principle. However, we do not recommend using the solutions derived by these general results in practice. <p> In contrast, information-theoretically secure multi-party computation is possible when assuming the existence of perfect private channels between each pair of honest users <ref> [18, 45] </ref>. 17 Consequently, it was shown how to construct commitment schemes based on any pseudorandom generator [134], and that the latter exists if one-way functions exist [109]. 23 primitive which, being well-known, typically has several candidate implementations. More on this subject below. On the meaning of asymptotic results. <p> However, these impossibility results hold only in case the adversary has full information (apart from the honest parties secret inputs and private coin tosses). For example, information-theoretically secure multi-party computation is possible (and in fact feasible) if there are perfect private channels between each pair of honest users <ref> [18, 45] </ref>. On the other hand, information-theoretically secure private channels can be implemented on top of channels to which the adversary has limited access. Channels of the latter type include 1. <p> The security and operation of such a distributed cryptographic system falls within the domain of general multi-party computation, and thus is solvable in principle <ref> [98, 18, 45] </ref>. 21 However, what one desires is efficient solutions, and in particular ones comparable in efficiency to standard "single private-key" cryptosystems. Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works).
Reference: [46] <author> D. Chaum, A. Fiat and M. Naor. </author> <title> Untraceable Electronic Cash. </title> <booktitle> In Crypto88, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 403), </volume> <pages> pages 319-327. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash <ref> [44, 46, 82, 150, 162] </ref>, Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. <p> The unforgeability condition thus requires that it is infeasible to produce more signatures than the count held by the signer (and that this count reflects the number of successfully-completed invocations of the signing protocol). Blind signatures play a central role in the design of electronic cash systems (cf., <ref> [44, 46] </ref>): They are used to make the monetary-certificates, signed by a financial institute, untraceable. 7 Cryptographic Protocols A general framework for casting cryptographic (protocol) problems consists of specifying a random process which maps n inputs to n outputs.
Reference: [47] <author> B. Chor and N. Gilboa. </author> <title> Computationally Private Information Retrieval. </title> <booktitle> In 29th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 304-313, </pages> <year> 1997. </year>
Reference-contexts: The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval <ref> [48, 47, 120] </ref>, Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [48] <author> B. Chor, O. Goldreich, E. Kushilevitz and M. Sudan, </author> <title> Private Information Retrieval. </title> <booktitle> In 36th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 41-50, </pages> <year> 1995. </year>
Reference-contexts: The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval <ref> [48, 47, 120] </ref>, Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [49] <author> B. Chor, S. Goldwasser, S. Micali and B. Awerbuch. </author> <title> Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults. </title> <booktitle> In 26th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 383-395, </pages> <year> 1985. </year>
Reference-contexts: Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation [93]. * A plausibility result of [97] by which one may construct Verifiable Secret Sharing schemes (cf., <ref> [49] </ref>), using any one-way function, was replaced by an efficient construction the security of which is based on DLP [76]. In general, many concrete problems which are solvable in principle (by the plausibility results of [97, 169, 98]) were given efficient solutions. Forget the result, use its ideas.
Reference: [50] <author> R. Cleve. </author> <title> Limits on the Security of Coin Flips when Half the Processors are Faulty. </title> <booktitle> In 18th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 364-369, </pages> <year> 1986. </year>
Reference-contexts: In either case, the majority players (in the real protocol) are able to compute the output although a minority aborted the execution. This cannot be expected to happen when there is no honest majority (e.g., in a two-party computation) <ref> [50] </ref>. Another example two-party computations: In light of the above, we consider an ideal model where each of the two parties may "shut-down" the trusted (third) party at any point in time.
Reference: [51] <author> R. Cramer and I. Damg-ard. </author> <title> New Generation of Secure and Practical RSA-based Signatures. </title> <booktitle> In Crypto96, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1109), </volume> <pages> pages 173-185. </pages>
Reference-contexts: Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of <ref> [69, 66, 51] </ref>, the session-key protocols of [13, 14], and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. Unfortunately, the classification is not always stated in the paper; however, it is typically evident from the construction. <p> Using a tree of large fan-in and assuming that RSA is infeasible to invert, one may obtain a secure signature scheme <ref> [66, 51] </ref> which for reasonable parameters is only 5 times slower than plain RSA (alas uses a much bigger key). 13 We stress that plain RSA is not a secure signature scheme, whereas the security of its randomized version (mentioned above) is not known to be reducible to the assumption that <p> The scheme in [66] requires a universal set of system parameters consisting of 1000-2000 integers of the size of the moduli. In the <ref> [51] </ref> scheme this requirement is removed. 14 The above refers to the natural convention by which a proof of forgery frees the signer of any obligations implied by the document. <p> For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in <ref> [11, 69, 66, 51] </ref>. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions.
Reference: [52] <author> R. Cramer and I. Damg-ard. </author> <title> Linear Zero-Knowledge A Note on Efficient Zero-Knowledge Proofs and Arguments. </title> <booktitle> In 29th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 436-445, </pages> <year> 1997. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [53] <author> R. Cramer, I. Damg-ard, and T. Pedersen. </author> <title> Efficient and provable security amplifications. </title> <booktitle> In Proc. of 4th Cambridge Security Protocols Workshop, Springer, Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1189), </volume> <pages> pages 101-109. </pages>
Reference-contexts: An alternative and more efficient transformation, of signature schemes which are robust under a "random message attack" into general ones, has been suggested in <ref> [53] </ref>. 19 in previous signatures [86]. Employing this paradigm and assuming that the RSA function is infeasible to invert, one obtains a secure signature scheme [106, 86] in which the i th message can be signed/verified in time 2 log 2 i slower than plain RSA.
Reference: [54] <author> C. Crepeau. </author> <title> Efficient Cryptographic Protocols Based on Noisy Channels. </title> <booktitle> In EuroCrypt97, Springer, Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1233), </volume> <pages> pages 306-317. </pages>
Reference-contexts: The noisy channel model (which generalizes the wiretap channel of [167]) where both the communication between the legitimate parties and the tapping channel of the adversary are subjected to noise (cf., <ref> [125, 54] </ref> and the references therein). 3.
Reference: [55] <author> I. Damg-ard. </author> <title> Collision Free Hash Functions and Public Key Signature Schemes. </title> <booktitle> In Euro Crypt87, Springer-Verlag, Lecture Notes in Computer Science (Vol. </booktitle> <volume> 304), </volume> <pages> pages 203-216. </pages>
Reference-contexts: Hashing the message using a collision-free scheme (cf., <ref> [55, 56] </ref>), and authenticating the result using a mac which operates on (short) fixed-length strings [4]. Three central paradigms in the construction of signature schemes are the "refreshing" of the "ef-fective" signing-key, the usage of an "authentication tree" and the "hashing paradigm". <p> We note that this heuristic becomes sound provided the hashing function is collision-free (as defined in <ref> [55] </ref>). Collision-free functions can be constructed assuming the intractability of factoring [55]. One may indeed postulate that certain off-the-shelf products (as MD5 or SHA) are collision-free, but such assumptions need to be tested (and indeed may turn out false). <p> We note that this heuristic becomes sound provided the hashing function is collision-free (as defined in <ref> [55] </ref>). Collision-free functions can be constructed assuming the intractability of factoring [55]. One may indeed postulate that certain off-the-shelf products (as MD5 or SHA) are collision-free, but such assumptions need to be tested (and indeed may turn out false).
Reference: [56] <author> I. Damg-ard. </author> <title> A Design Principle for Hash Functions. </title> <booktitle> In Crypto89, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 435), </volume> <pages> pages 416-427. </pages>
Reference-contexts: Hashing the message using a collision-free scheme (cf., <ref> [55, 56] </ref>), and authenticating the result using a mac which operates on (short) fixed-length strings [4]. Three central paradigms in the construction of signature schemes are the "refreshing" of the "ef-fective" signing-key, the usage of an "authentication tree" and the "hashing paradigm".
Reference: [57] <author> I. Damg-ard, O. Goldreich, T. Okamoto and A. Wigderson. </author> <title> Honest Verifier vs Dishonest Verifier in Public Coin Zero-Knowledge Proofs. </title> <booktitle> In Crypto95, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 963), </volume> <pages> pages 325-338, </pages> <year> 1995. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [58] <author> A. De-Santis, Y. Desmedt, Y. Frankel and M. Yung. </author> <title> How to Share a Function Securely. </title> <booktitle> In 26th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 522-533, </pages> <year> 1994. </year>
Reference-contexts: Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in <ref> [60, 58, 85] </ref> (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive [145, 42, 111]. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects <ref> [60, 58, 84] </ref>, Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [59] <author> Y. Desmedt. </author> <title> Society and group oriented cryptography: A new concept. </title> <booktitle> In Crypto87, Springer Verlag, Lecture Notes in Computer Science (Vol. </booktitle> <volume> 293), </volume> <pages> pages 120-127. </pages>
Reference-contexts: Such efficient solutions, called threshold cryptosystems, were envisioned in <ref> [59, 60] </ref> and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive [145, 42, 111].
Reference: [60] <author> Y. Desmedt and Y. Frankel. </author> <title> Threshold Cryptosystems. </title> <booktitle> In Crypto89, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 435), </volume> <pages> pages 307-315. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography <ref> [60] </ref>, and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. <p> Other activities. This essay is focused on the definitional and constructive activities mentioned above. Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities <ref> [17, 60, 131] </ref>, batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> As stressed in the case of zero-knowledge proofs, we view these results as asserting that very wide classes of problems are solvable in principle. However, we do not recommend using the solutions derived by these general results in practice. For example, although Threshold Cryptography (cf., <ref> [60, 84] </ref>) is merely a special case of multi-party computation, it is indeed beneficial to focus on its specifics. 22 Part III Concluding Comments 8 Some Notes We partition the notes into two categories: General notes which refer to general themes in this essay, and specific notes which refer to specific <p> Such efficient solutions, called threshold cryptosystems, were envisioned in <ref> [59, 60] </ref> and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive [145, 42, 111]. <p> Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in <ref> [60, 58, 85] </ref> (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive [145, 42, 111]. <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects <ref> [60, 58, 84] </ref>, Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [61] <author> W. Diffie, and M.E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Trans. on Info. Theory, IT-22 (Nov. </journal> <year> 1976), </year> <pages> pages 644-654. 34 </pages>
Reference-contexts: Providing firm foundations to Cryptography has been a major research direction in the last two decades. Indeed, the pioneering paper of Diffie and Hellman <ref> [61] </ref> should be considered the initiator of this direction. Two major (interleaved) activities have been: 1. Definitional Activity: The identification, conceptualization and rigorous definition of crypto graphic tasks which capture natural security concerns; and 2. Constructive Activity: The study and design of cryptographic schemes satisfying definitions as in (1). <p> Constructive Activity: The study and design of cryptographic schemes satisfying definitions as in (1). The definitional activity provided a definition of secure encryption [104]. The reader may be surprised: what is there to define (beyond the basic setting formulated in <ref> [61] </ref>)? Let us answer with a question (posed by Goldwasser and Micali [104]): should an encryption scheme which leaks the first bit of the plaintext be considered secure? Clearly, the answer is negative and so some naive conceptions regarding secure encryption (e.g., "a scheme is secure if it is infeasible to <p> One-way functions are functions which are easy to evaluate but hard (on the average) to invert. Definition 1 (one-way functions <ref> [61] </ref>): A function f : f0; 1g fl 7! f0; 1g fl is called one-way if * easy direction: there is an efficient algorithm which on input x outputs f (x). * hard direction: given f (x), where x is uniformly selected, it is infeasible to find, with non negligible probability, <p> Following the challenge of constructing and analyzing new (private-key) encryption schemes, came new questions like how to exchange keys over an insecure channel [126]. New concepts were invented: digital signatures (cf., Diffie and Hellman <ref> [61] </ref> and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. <p> Following the challenge of constructing and analyzing new (private-key) encryption schemes, came new questions like how to exchange keys over an insecure channel [126]. New concepts were invented: digital signatures (cf., Diffie and Hellman <ref> [61] </ref> and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. <p> Following the challenge of constructing and analyzing new (private-key) encryption schemes, came new questions like how to exchange keys over an insecure channel [126]. New concepts were invented: digital signatures (cf., Diffie and Hellman <ref> [61] </ref> and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152].
Reference: [62] <author> D. Dolev, C. Dwork, and M. Naor. </author> <title> Non-Malleable Cryptography. </title> <booktitle> In 23rd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 542-552, </pages> <year> 1991. </year> <note> Full version available from authors. </note>
Reference-contexts: Public-key encryption schemes secure against Chosen Ciphertext Attacks can be constructed, assuming the existence of trapdoor permutations and utilizing non-interactive zero-knowledge proofs [142] (which can be constructed under this assumption [73]). Another issue is the non-malleability of the encryption scheme, considered in <ref> [62] </ref>. Here one requires that it should be infeasible for an adversary, given a ciphertext, to produce a valid ci-phertext for a related plaintext. <p> It is easy to turn a private-key encryption scheme into a non-malleable one, by using a message authentication scheme on top. Non-malleable public-key encryption schemes are known to exist assuming the existence of trapdoor permutation <ref> [62] </ref>. 6 Signatures Again, there are private-key and public-key versions both consisting of three efficient algorithms: key generation, signing and verification. (Private-key signature schemes are commonly referred to as message authentication schemes or codes (mac).) The difference between the two types is again reflected in the definition of security. <p> Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and [25, 1], respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see <ref> [62] </ref>. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117].
Reference: [63] <author> D. Dolev, M.J. Fischer, R. Fowler, N.A. Lynch and H.R. </author> <title> Strong. An efficient algorithm for Byzantine Agreement without authentication. </title> <journal> Information and Control, </journal> <volume> Vol. 52(3), </volume> <pages> pages 257-274, </pages> <month> March </month> <year> 1982. </year>
Reference-contexts: Such a channel can be implemented over a standard point-to-point network using a Byzantine Agreement protocol [146]. Efficient Byzantine Agreement protocols are known in a variety of models. In the information-theoretic model, we mention the deterministic protocols of <ref> [63, 164] </ref> which tolerate malicious behaviour of t &lt; m=3 parties, where n is the total number of parties. These protocols operate in O (t) rounds, which is optimal (for deterministic protocols).
Reference: [64] <author> D. Dolev and A.C. Yao. </author> <title> On the Security of Public-Key Protocols. </title> <journal> IEEE Trans. on Inform. Theory, </journal> <volume> Vol. 30, No. 2, </volume> <pages> pages 198-208, </pages> <year> 1983. </year>
Reference-contexts: Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff [105], with early versions date to March 1982). A formal approach to the security of cryptographic protocols was suggested in <ref> [64] </ref>. This approach actually identifies a subclass of insecure protocols (i.e., those which can be broken via a syntactically-restricted type of attack). Furthermore, it turned out that it is much too difficult to test whether a protocol is secure [67].
Reference: [65] <author> C. Dwork, and M. Naor. </author> <title> Pricing via Processing or Combatting Junk Mail. </title> <booktitle> In Crypto92, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 740), </volume> <pages> pages 139-147. </pages>
Reference: [66] <author> C. Dwork, and M. Naor. </author> <title> An Efficient Existentially Unforgeable Signature Scheme and its Application. </title> <note> To appear in Journal of Cryptology. Preliminary version in Crypto94. </note>
Reference-contexts: Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of <ref> [69, 66, 51] </ref>, the session-key protocols of [13, 14], and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. Unfortunately, the classification is not always stated in the paper; however, it is typically evident from the construction. <p> Using a tree of large fan-in and assuming that RSA is infeasible to invert, one may obtain a secure signature scheme <ref> [66, 51] </ref> which for reasonable parameters is only 5 times slower than plain RSA (alas uses a much bigger key). 13 We stress that plain RSA is not a secure signature scheme, whereas the security of its randomized version (mentioned above) is not known to be reducible to the assumption that <p> The scheme in <ref> [66] </ref> requires a universal set of system parameters consisting of 1000-2000 integers of the size of the moduli. In the [51] scheme this requirement is removed. 14 The above refers to the natural convention by which a proof of forgery frees the signer of any obligations implied by the document. <p> For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in <ref> [11, 69, 66, 51] </ref>. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions.
Reference: [67] <author> S. Even and O. Goldreich. </author> <title> On the Security of Multi-party Ping-Pong Protocols. </title> <booktitle> 24th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 34-39, </pages> <year> 1983. </year>
Reference-contexts: This approach actually identifies a subclass of insecure protocols (i.e., those which can be broken via a syntactically-restricted type of attack). Furthermore, it turned out that it is much too difficult to test whether a protocol is secure <ref> [67] </ref>.
Reference: [68] <author> S. Even, O. Goldreich, and A. Lempel. </author> <title> A Randomized Protocol for Signing Contracts. </title> <journal> CACM, </journal> <volume> Vol. 28, No. 6, </volume> <year> 1985, </year> <pages> pages 637-647. </pages>
Reference-contexts: At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols. In particular, problems as coin tossing over telephone [21], exchange of secrets [20], and Oblivious Transfer were formulated [153] (cf., <ref> [68] </ref>). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168].
Reference: [69] <author> S. Even, O. Goldreich and S. Micali. </author> <title> On-line/Off-line Digital signatures. </title> <journal> Journal of Cryptol ogy, </journal> <volume> Vol. 9, </volume> <year> 1996, </year> <pages> pages 35-67. </pages>
Reference-contexts: Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of <ref> [69, 66, 51] </ref>, the session-key protocols of [13, 14], and many others. Typically, it is quite easy to determine to which of the above categories a specific technical contribution belongs. Unfortunately, the classification is not always stated in the paper; however, it is typically evident from the construction. <p> This essay is focused on the definitional and constructive activities mentioned above. Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing <ref> [69] </ref> and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> follows: When a new message is to be signed, we generate a new random signing-key for the one-time signature scheme, use it to sign the message, and sign the corresponding (one-time) verification-key using the fixed signing-key of the main signature scheme 12 (which is robust against a "random message attack") <ref> [69] </ref>. We note that one-time signature schemes (as utilized here) are easy to construct (see, for example [128]). <p> Pseudorandom functions may be used to eliminate the need to store the values of intermediate vertices used 12 Alternatively, one may generate the one-time key-pair and the signature to its verification-key ahead of time, leading to an "off-line/on-line" signature scheme <ref> [69] </ref>. An alternative and more efficient transformation, of signature schemes which are robust under a "random message attack" into general ones, has been suggested in [53]. 19 in previous signatures [86]. <p> For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in <ref> [11, 69, 66, 51] </ref>. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions.
Reference: [70] <author> S. Even, A.L. Selman, and Y. Yacobi. </author> <title> The Complexity of Promise Problems with Applications to Public-Key Cryptography. </title> <journal> Inform. and Control, </journal> <volume> Vol. 61, </volume> <pages> pages 159-173, </pages> <year> 1984. </year>
Reference: [71] <author> S. Even and Y. Yacobi. </author> <title> Cryptography and NP-Completeness. </title> <booktitle> In proceedings of 7th ICALP, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 85), </volume> <pages> pages 195-207, </pages> <year> 1980. </year> <note> See [70]. </note>
Reference-contexts: New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. Cryptography was explicitly related to complexity theory in <ref> [29, 71, 121] </ref>: It was understood that problems related to breaking a 1-1 cryptographic mapping cannot be N P -complete, and more importantly that N P-hardness of the breaking task is a poor evidence for cryptographic security.
Reference: [72] <author> U. Feige, A. Fiat and A. Shamir. </author> <title> Zero-Knowledge Proofs of Identity. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 1, </volume> <year> 1988, </year> <pages> pages 77-94. </pages>
Reference-contexts: The zero-knowledge claus guarantees that interacting with u according to the protocol, does not leak knowledge which may be used to impersonate u. For more details see <ref> [105, 79, 72] </ref>. can satisfy both conflicting requirements. That is, A can prove in zero-knowledge that it took the correct steps. Note that A's claim to having taken the correct steps is an NP-assertion and that A has an NP-witness to its validity (i.e., its secret!). <p> Zero-knowledge proofs of knowledge [105, 79, 5]: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. One natural application of (zero-knowledge) proofs of knowledge is for identification <ref> [79, 72] </ref>. Figure 1 depicts the Fiat-Shamir Identification Scheme [79] (which is based on the Goldwasser-Micali-Rackoff zero-knowledge proof system for Quadratic Residuosity [105]). Relaxations of Zero-knowledge: Important relaxations of zero-knowledge were presented in [75].
Reference: [73] <author> U. Feige, D. Lapidot, and A. Shamir. </author> <title> Multiple Non-Interactive Zero-Knowledge Proofs Based on a Single Random String. </title> <booktitle> In 31th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 308-317, </pages> <year> 1990. </year> <note> To appear in SIAM Journal on Computing. </note>
Reference-contexts: Perfect zero-knowledge arguments for NP were constructed using any one-way permutation [135]. Non-Interactive zero-knowledge proofs <ref> [24, 73] </ref>: Here the interaction between the prover and the verifier consists of the prover sending a single message to the verifier (as in "classical proofs"). In addition, both players have access to a "random reference string" which is postulated to be uniformly selected. <p> Non-interactive zero-knowledge proofs are useful in applications where one of the parties may be trusted to select the abovementioned reference string (e.g., see Section 5.3). Noninteractive zero-knowledge arguments for NP were constructed using any trapdoor permutation <ref> [73, 119] </ref>. Zero-knowledge proofs of knowledge [105, 79, 5]: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. <p> Clearly, the private-key encryption scheme based on pseudorandom functions (described above) is secure also against such attacks. Public-key encryption schemes secure against Chosen Ciphertext Attacks can be constructed, assuming the existence of trapdoor permutations and utilizing non-interactive zero-knowledge proofs [142] (which can be constructed under this assumption <ref> [73] </ref>). Another issue is the non-malleability of the encryption scheme, considered in [62]. Here one requires that it should be infeasible for an adversary, given a ciphertext, to produce a valid ci-phertext for a related plaintext.
Reference: [74] <author> U. Feige and A. Shamir. </author> <title> Zero-Knowledge Proofs of Knowledge in Two Rounds. </title> <booktitle> In Crypto89, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 435), </volume> <pages> pages 526-544. </pages>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [75] <author> U. Feige and A. Shamir. </author> <title> Witness Indistinguishability and Witness Hiding Protocols. </title> <booktitle> In 22nd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 416-426, </pages> <year> 1990. </year>
Reference-contexts: One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72]. Figure 1 depicts the Fiat-Shamir Identification Scheme [79] (which is based on the Goldwasser-Micali-Rackoff zero-knowledge proof system for Quadratic Residuosity [105]). Relaxations of Zero-knowledge: Important relaxations of zero-knowledge were presented in <ref> [75] </ref>. Specifically, in witness indistinguishable proofs it is infeasible to tell which NP-witness to the assertion the prover is using. Unlike zero-knowledge proofs, this notion is closed under parallel composition.
Reference: [76] <author> P. Feldman. </author> <title> A Practical Scheme for Non-interactive Verifiable Secret Sharing. </title> <booktitle> In 28th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 427-437, </pages> <year> 1987. </year>
Reference-contexts: was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation [93]. * A plausibility result of [97] by which one may construct Verifiable Secret Sharing schemes (cf., [49]), using any one-way function, was replaced by an efficient construction the security of which is based on DLP <ref> [76] </ref>. In general, many concrete problems which are solvable in principle (by the plausibility results of [97, 169, 98]) were given efficient solutions. Forget the result, use its ideas. As stated above, some theoretical results are not directly applicable in practice.
Reference: [77] <author> P. Feldman and S. Micali. </author> <title> An optimal probabilistic protocol for synchronous Byzantine Agreement. </title> <journal> SICOMP, </journal> <volume> Vol. 26, </volume> <pages> pages 873-933, </pages> <year> 1997. </year>
Reference-contexts: These protocols operate in O (t) rounds, which is optimal (for deterministic protocols). Assuming the existence of private channels, a faster (i.e., expected constant number of rounds) randomized algorithm tolerating (n) malicious parties is known <ref> [77] </ref>. Threshold Cryptography. Cryptography relies on the user's ability to maintain the secrecy of its private-keys. However, guaranteeing the secrecy of private-keys in practice is not easy, especially when these keys belong to large organizations.
Reference: [78] <author> A. Fiat. </author> <title> Batch RSA. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 10, </volume> <year> 1997, </year> <pages> pages 75-88. 35 </pages>
Reference-contexts: Other activities. This essay is focused on the definitional and constructive activities mentioned above. Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations <ref> [78] </ref>, off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner".
Reference: [79] <author> A. Fiat and A. Shamir. </author> <title> How to Prove Yourself: Practical Solution to Identification and Signa ture Problems. </title> <booktitle> In Crypto86, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 263), </volume> <pages> pages 186-189, </pages> <year> 1987. </year>
Reference-contexts: The zero-knowledge claus guarantees that interacting with u according to the protocol, does not leak knowledge which may be used to impersonate u. For more details see <ref> [105, 79, 72] </ref>. can satisfy both conflicting requirements. That is, A can prove in zero-knowledge that it took the correct steps. Note that A's claim to having taken the correct steps is an NP-assertion and that A has an NP-witness to its validity (i.e., its secret!). <p> Non-interactive zero-knowledge proofs are useful in applications where one of the parties may be trusted to select the abovementioned reference string (e.g., see Section 5.3). Noninteractive zero-knowledge arguments for NP were constructed using any trapdoor permutation [73, 119]. Zero-knowledge proofs of knowledge <ref> [105, 79, 5] </ref>: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72]. <p> Zero-knowledge proofs of knowledge [105, 79, 5]: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. One natural application of (zero-knowledge) proofs of knowledge is for identification <ref> [79, 72] </ref>. Figure 1 depicts the Fiat-Shamir Identification Scheme [79] (which is based on the Goldwasser-Micali-Rackoff zero-knowledge proof system for Quadratic Residuosity [105]). Relaxations of Zero-knowledge: Important relaxations of zero-knowledge were presented in [75]. <p> One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72]. Figure 1 depicts the Fiat-Shamir Identification Scheme <ref> [79] </ref> (which is based on the Goldwasser-Micali-Rackoff zero-knowledge proof system for Quadratic Residuosity [105]). Relaxations of Zero-knowledge: Important relaxations of zero-knowledge were presented in [75]. Specifically, in witness indistinguishable proofs it is infeasible to tell which NP-witness to the assertion the prover is using. <p> Thus, one obtains an implementation of the ideal system in a world where random oracles do not exist. This methodology, explicitly formulated in [12], has been used in many works (see, for example, <ref> [79, 159, 15] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put it on firm grounds.
Reference: [80] <author> J.B. Fischer and J. Stern. </author> <title> An Efficient Pseudorandom Generator Provably as Secure as Syn drome Decoding. </title> <booktitle> In EuroCrypt96, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1070), </volume> <pages> pages 245-255. </pages>
Reference-contexts: In particular, assuming the intractability of the subset sum problem (for suitable densities) or of the decoding of random linear codes, this paradigm was used in <ref> [114, 80] </ref> to construct very efficient pseudorandom generators. Alternatively, encouraged by the results in [1, 110], we conjecture that the first n=2 least significant bits of the argument constitute a hard-core function of the modular squaring function for n-bit long moduli.
Reference: [81] <author> R. Fischlin and C.P. Schnorr. </author> <title> Stronger Security Proofs for RSA and Rabin Bits. </title> <booktitle> In Euro Crypt97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1233), </volume> <pages> pages 267-279, </pages> <year> 1997. </year>
Reference-contexts: however, that the security of the scheme depends on the length of N (and not on n).) Assuming that factoring Blum Integers (i.e., products of two primes each congruent to 3 (mod 4)) is hard, one may use the modular squaring function in role of the trapdoor permutation above (see <ref> [25, 1, 165, 81] </ref>).
Reference: [82] <author> M. Franklin and M. Yung. </author> <title> Secure and Efficient Off-Line Digital Money. </title> <booktitle> In 20th ICALP, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 700), </volume> <pages> pages 265-276. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash <ref> [44, 46, 82, 150, 162] </ref>, Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. <p> Thus, when accepting a valid signature the recipient is only guaranteed that it is infeasible for 20 "discertify" the particular verification key, or even the entire signature scheme (hence the term "fail-stop"). Loosely speaking, Blind signatures (cf., <ref> [44, 82, 149, 117] </ref>) are a variant of signature schemes in which the signer gains no knowledge about the document it has signed, but rather only knows the total number of documents signed. <p> Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in <ref> [44, 82, 149, 117] </ref>. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions.
Reference: [83] <author> A.M. Frieze, J. H-astad, R. Kannan, J.C. Lagarias, and A. Shamir. </author> <title> Reconstructing Truncated Integer Variables Satisfying Linear Congruences. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 17, </volume> <pages> pages 262-280, </pages> <year> 1988. </year>
Reference-contexts: Although ad-hoc "pseudorandom generators" which pass some ad-hoc statistical tests may be adequate for some statistical samplings, they are certainly inadequate for use in Cryptography: For example, sequences generated by linear congruential generators are easy to predict <ref> [28, 83] </ref> 2 and endanger cryptographic applications even when not given in the clear [8]. <p> We stress that this is a very dangerous practice when the "pseudorandom generator" is easy to predict (such as the linear congruential generator or some modifications of it which output a constant fraction of the bits of each resulting number see <ref> [28, 83] </ref>). However, this common practice becomes sound provided one uses pseudorandom generators (as defined in Section 3).
Reference: [84] <author> P.S. </author> <title> Gemmell. An Introduction to Threshold Cryptography. In CryptoBytes, RSA Lab., </title> <journal> Vol. </journal> <volume> 2, No. 3, </volume> <year> 1997. </year>
Reference-contexts: As stressed in the case of zero-knowledge proofs, we view these results as asserting that very wide classes of problems are solvable in principle. However, we do not recommend using the solutions derived by these general results in practice. For example, although Threshold Cryptography (cf., <ref> [60, 84] </ref>) is merely a special case of multi-party computation, it is indeed beneficial to focus on its specifics. 22 Part III Concluding Comments 8 Some Notes We partition the notes into two categories: General notes which refer to general themes in this essay, and specific notes which refer to specific <p> The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects <ref> [60, 58, 84] </ref>, Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [85] <author> R. Gennaro, S. Jarecki, H. Krawczyk, and T. Rabin. </author> <title> Robust Threshold DSS Signatures. </title> <booktitle> In EuroCrypt96, Springer-Verlag, Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1070), </volume> <pages> pages 354-371. </pages>
Reference-contexts: Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in <ref> [60, 58, 85] </ref> (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive [145, 42, 111]. <p> Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust <ref> [85] </ref> and proactive [145, 42, 111]. By robust we mean that proper operation is guaranteed even if some of the sites holding shares of the private-key misbehave (as may be the case when controlled by an adversary).
Reference: [86] <author> O. Goldreich. </author> <title> Two Remarks Concerning the GMR Signature Scheme. </title> <booktitle> In Crypto86, Springer Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 263), </volume> <pages> pages 104-110, </pages> <year> 1987. </year>
Reference-contexts: We stress that in the latter case the distinguisher is not given the description of the function f s (i.e., the seed s), but rather may obtain the value of f s on any n-bit string of its choice. 5 Pseudorandom functions are a very useful cryptographic tool (cf., <ref> [92, 86] </ref> and Section 5): One may first design a cryptographic scheme assuming that the legitimate users have black-box access to a random function, and next implement the random function using a pseudorandom function. <p> An alternative and more efficient transformation, of signature schemes which are robust under a "random message attack" into general ones, has been suggested in [53]. 19 in previous signatures <ref> [86] </ref>. Employing this paradigm and assuming that the RSA function is infeasible to invert, one obtains a secure signature scheme [106, 86] in which the i th message can be signed/verified in time 2 log 2 i slower than plain RSA. <p> An alternative and more efficient transformation, of signature schemes which are robust under a "random message attack" into general ones, has been suggested in [53]. 19 in previous signatures [86]. Employing this paradigm and assuming that the RSA function is infeasible to invert, one obtains a secure signature scheme <ref> [106, 86] </ref> in which the i th message can be signed/verified in time 2 log 2 i slower than plain RSA.
Reference: [87] <author> O. Goldreich. </author> <title> Lecture Notes on Encryption, Signatures and Cryptographic Protocol. </title> <note> Spring 1989. Available from http : ==theory:lcs:mit:edu= ~ oded=ln89:html. </note>
Reference-contexts: Thus, our main criteria is the readability of the text (not its novelty). The recommendations are arranged by subjects. One-Way Functions, Pseudorandom Generators and Zero-Knowledge: For these, our favorite source is our own text [89]. Encryption Schemes: A good motivating discussion appears in [104]. The definitional treatment in <ref> [87, 88] </ref> is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and [25, 1], respectively. <p> The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in <ref> [104, 87] </ref> and [25, 1], respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. <p> For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to <ref> [87] </ref> for the constructions. The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102].
Reference: [88] <author> O. Goldreich. </author> <title> A Uniform Complexity Treatment of Encryption and Zero-Knowledge. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 6, No. 1, </volume> <pages> pages 21-53, </pages> <year> 1993. </year>
Reference-contexts: Thus, our main criteria is the readability of the text (not its novelty). The recommendations are arranged by subjects. One-Way Functions, Pseudorandom Generators and Zero-Knowledge: For these, our favorite source is our own text [89]. Encryption Schemes: A good motivating discussion appears in [104]. The definitional treatment in <ref> [87, 88] </ref> is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and [25, 1], respectively.
Reference: [89] <author> O. Goldreich. </author> <title> Foundation of Cryptography Fragments of a Book. </title> <month> February </month> <year> 1995. </year> <note> Available from http : ==theory:lcs:mit:edu= ~ oded=frag:html. </note>
Reference-contexts: and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin [151], the "authentication tree" of Merkle [127, 129], the "randomized encryption" paradigm of Goldwasser and Micali [104], proof techniques as the "hybrid argument" of [104] (cf., <ref> [89, Sec. 3.2.3] </ref>), and many others. 3. Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of [69, 66, 51], the session-key protocols of [13, 14], and many others. <p> Specific additions include (1) actual definitions of secure encryption and unforgeable signatures; (2) a more 1 The only exception to the latter statement is Levin's observation regarding the existence of a universal one-way function (cf., [122] and <ref> [89, Sec. 2.4.1] </ref>). 4 detailed description of the Blum-Goldwasser encryption scheme [25]; (3) a historical perspective; and (4) some specific notes (added to Section 8). 5 Part I Basic Tools 2 Central Paradigms Modern Cryptography, as surveyed here, is concerned with the construction of efficient schemes for which it is infeasible <p> Thus, our main criteria is the readability of the text (not its novelty). The recommendations are arranged by subjects. One-Way Functions, Pseudorandom Generators and Zero-Knowledge: For these, our favorite source is our own text <ref> [89] </ref>. Encryption Schemes: A good motivating discussion appears in [104]. The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above).
Reference: [90] <author> O. Goldreich. </author> <title> Secure Multi-Party Computation. </title> <note> In preparation. </note>
Reference-contexts: General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in <ref> [90] </ref>. For a nice but brief survey, the reader is referred to [102].
Reference: [91] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to Construct Random Functions. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 33, No. 4, </volume> <pages> pages 792-807, </pages> <year> 1986. </year>
Reference-contexts: However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see <ref> [109, 91, 157, 134, 97] </ref> for positive results and [122, 157, 144] for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> application where the function is used in a black-box fashion (i.e., the adversary may obtain the value of the function at arguments of its choice, but does not have the description of the function and so is not able to evaluate the function by itself). 4 Definition 4 (pseudorandom functions <ref> [91] </ref>): A pseudorandom function is an efficient (determin-istic) algorithm which given an n-bit seed, s, and an n-bit argument, x, returns an n-bit string, denoted f s (x), so that it is infeasible to distinguish the responses of f s , for a uniformly chosen s, from the responses of a <p> From pseudorandom generators to pseudorandom functions <ref> [91] </ref>: Let G be a pseudorandom generator with stretching function `(n) = 2n, and let G 0 (s) (resp., G 1 (s)) denote the first (resp., last) n bits in G (s) where s 2 f0; 1g n .
Reference: [92] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> On the Cryptographic Applications of Random Functions. </title> <booktitle> In Crypto84, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 263), </volume> <pages> pages 276-288, </pages> <year> 1985. </year>
Reference-contexts: We stress that in the latter case the distinguisher is not given the description of the function f s (i.e., the seed s), but rather may obtain the value of f s on any n-bit string of its choice. 5 Pseudorandom functions are a very useful cryptographic tool (cf., <ref> [92, 86] </ref> and Section 5): One may first design a cryptographic scheme assuming that the legitimate users have black-box access to a random function, and next implement the random function using a pseudorandom function. <p> However, it may be secure if the message is "randomized" before RSA (or the other schemes) is applied (cf., [15]). Thus, the randomization paradigm (see Section 5) seems pivotal here too. 6.2 Constructions Message authentication schemes can be constructed using pseudorandom functions (see <ref> [92] </ref> or the more efficient constructions in [10, 9, 3]). However, as noted in [4], an extensive usage of pseudorandom functions seem an overkill for achieving message authentication, and more efficient schemes may be obtained based on other cryptographic primitives.
Reference: [93] <author> O. Goldreich, R. Impagliazzo, L.A. Levin, R. Venkatesan, and D. Zuckerman. </author> <title> Security Pre serving Amplification of Hardness. </title> <booktitle> In 31st IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 318-326, </pages> <year> 1990. </year>
Reference-contexts: by a practical construction of hard-core predicates for any one-way functions [96]. * A plausibility result of Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation <ref> [93] </ref>. * A plausibility result of [97] by which one may construct Verifiable Secret Sharing schemes (cf., [49]), using any one-way function, was replaced by an efficient construction the security of which is based on DLP [76].
Reference: [94] <author> O. Goldreich and A. Kahan. </author> <title> How to Construct Constant-Round Zero-Knowledge Proof Sys tems for NP. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 9, No. 2, </volume> <pages> pages 167-189, </pages> <year> 1996. </year> <note> Preliminary versions date to 1988. 36 </note>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [95] <author> O. Goldreich and H. Krawczyk. </author> <title> On the Composition of Zero-Knowledge Proof Systems. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 25, No. 1, </volume> <month> February </month> <year> 1996, </year> <pages> pages 169-192. </pages>
Reference-contexts: Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention <ref> [115, 95] </ref>. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> We claim that this has been the case in the past. In most cases it has been possible to construct schemes which meet the overly cautious definitions (of security), and in other cases the difficulty to construct such schemes has demonstrated an inherent problem (e.g., <ref> [115, 95] </ref>). 3 Pseudorandomness In practice "pseudorandom" sequences are used instead of truly random sequences in many applications. The underlying belief is that if an (efficient) application performs well when using a truly random sequence then it will perform essentially as well when using a "pseudorandom" sequence. <p> The above definition does not account for auxiliary information which an adversary may have prior to entering the interaction. Accounting for such auxiliary information is essential for using zero-knowledge proofs as subprotocols inside larger protocols (see <ref> [95, 99] </ref>). Another concern is that we prefer that the complexity of C fl be bounded as a function of the complexity of B fl . Both concerns are taken care of by a more strict notion of zero-knowledge presented next. <p> Another important direction is to provide results and/or develop techniques for guaranteeing that individually-secure protocols remain secure when many copies of them are run in parallel and, furthermore, obliviously of one another. Although some negative results are known <ref> [95] </ref>, they only rule out specific approaches (such as the naive false conjecture that any zero-knowledge proof maintains its security when executed twice in parallel). 11 Some Suggestions for Further Reading The intention of these suggestions is not to provide a scholarly account of the due credits but rather to provide
Reference: [96] <author> O. Goldreich and L.A. Levin. </author> <title> Hard-core Predicates for any One-Way Function. </title> <booktitle> In 21st ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 25-32, </pages> <year> 1989. </year>
Reference-contexts: We note that for any one-way permutation f 0 , the inner-product mod 2 of x and r is a hard-core of f (x; r) = (f 0 (x); r) <ref> [96] </ref>. Thus, using any one-way permutation, we can easily construct pseudorandom generators. <p> Recall that by <ref> [96] </ref>, every trapdoor permutation can be modified into one having a hard-core predicate. 16 private-key: Two primes p; q, each congruent to 3 (mod 4). public-key: Their product N def encryption of message x 2 f0; 1g n : 1. Uniformly select s 0 2 f1; :::; N g. 2. <p> Following are some examples: * A plausibility result of Yao (commonly attributed to [168]) on the existence of hard-core predicates, assuming the existence of one-way permutations, was replaced by a practical construction of hard-core predicates for any one-way functions <ref> [96] </ref>. * A plausibility result of Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation [93]. * A plausibility result of [97] by which one may construct
Reference: [97] <author> O. Goldreich, S. Micali and A. Wigderson. </author> <title> Proofs that Yield Nothing but their Validity or All Languages in NP Have Zero-Knowledge Proof Systems. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 38, No. 1, </volume> <pages> pages 691-729, </pages> <year> 1991. </year> <note> Preliminary version in 27th IEEE Symposium on Foundations of Computer Science, </note> <year> 1986. </year>
Reference-contexts: Using the assumption that RSA is hard to invert, one can construct pseudorandom generators [26, 168], zero-knowledge proofs for any NP-statement <ref> [97] </ref>, and multi-party protocols for securely computing any multi-variant function [169, 98]. A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. <p> A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. For example, the general results concerning zero-knowledge proofs <ref> [97] </ref> and multi-party protocols [169, 98], mentioned above, are merely claims of plausibility: What they say is that any problem of the above type (i.e., any protocol problem as discussed in Section 7) can be solved in principle. This is a very valuable piece of information. <p> Typically, some tools developed towards solving the general problem may be useful in solving the specific problem. Thus, we distinguish three types of results: 1. Plausibility results: Here we refer to mere statements of the type "any NP-language has a 3 zero-knowledge proof system" (cf., Goldreich, Micali, and Wigderson <ref> [97] </ref>). 2. <p> However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see <ref> [109, 91, 157, 134, 97] </ref> for positive results and [122, 157, 144] for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> Actually, the first term may be replaced by the number of times U invokes the subroutine. All known zero-knowledge proofs are in fact black-box zero-knowledge. A general plausibility result <ref> [97] </ref>: Assuming the existence of commitment schemes, there exist (black-box) zero-knowledge proofs for membership in any NP-language. 7 Furthermore, the prescribed prover strategy is efficient provided it is given an NP-witness to the assertion to be proven. <p> The non-triviality of the notion was demonstrated in [105] by presenting a zero-knowledge proof system for statements, regarding Quadratic Residuosity, which are believed to be hard to verify (without extra information). Furthermore, in contrary to prior beliefs, it was shown in <ref> [97] </ref> that the existence of commitment schemes 17 implies that any NP-statement can be proven in zero-knowledge. <p> predicates for any one-way functions [96]. * A plausibility result of Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation [93]. * A plausibility result of <ref> [97] </ref> by which one may construct Verifiable Secret Sharing schemes (cf., [49]), using any one-way function, was replaced by an efficient construction the security of which is based on DLP [76]. <p> In general, many concrete problems which are solvable in principle (by the plausibility results of <ref> [97, 169, 98] </ref>) were given efficient solutions. Forget the result, use its ideas. As stated above, some theoretical results are not directly applicable in practice. Still, in many cases these results utilize ideas which may be of value in practice. <p> As for the latter general plausibility results (i.e., the construction of zero-knowledge proofs and multi-party protocols), here there seem to be little hope for a result which may both maintain the generality of the results in <ref> [97, 169, 98] </ref> and yield practical solutions for each specific task. However, we believe that there is work to be done towards the development of additional paradigms and techniques which may be useful in the construction of schemes for specific tasks.
Reference: [98] <author> O. Goldreich, S. Micali and A. Wigderson. </author> <title> How to Play any Mental Game A Completeness Theorem for Protocols with Honest Majority. </title> <booktitle> In 19th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 218-229, </pages> <year> 1987. </year>
Reference-contexts: Using the assumption that RSA is hard to invert, one can construct pseudorandom generators [26, 168], zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function <ref> [169, 98] </ref>. A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. <p> <ref> [169, 98] </ref>. A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. For example, the general results concerning zero-knowledge proofs [97] and multi-party protocols [169, 98], mentioned above, are merely claims of plausibility: What they say is that any problem of the above type (i.e., any protocol problem as discussed in Section 7) can be solved in principle. This is a very valuable piece of information. <p> of the initial input of each party may not depend on the input of the other party. 7.2 Constructions General plausibility results: Assuming the existence of trapdoor permutations, one may provide secure protocols for any two-party computation (allowing abort) [169] as well as for any multi-party computations with honest majority <ref> [98] </ref>. Thus, a host of cryptographic problems are solvable assuming the existence of trapdoor permutations. Specifically, any desired (input-output) functionality can be enforced, provided we are either willing to tolerate "early abort" (as defined above) or can rely on a majority of the parties to follow the protocol. <p> In general, many concrete problems which are solvable in principle (by the plausibility results of <ref> [97, 169, 98] </ref>) were given efficient solutions. Forget the result, use its ideas. As stated above, some theoretical results are not directly applicable in practice. Still, in many cases these results utilize ideas which may be of value in practice. <p> The security and operation of such a distributed cryptographic system falls within the domain of general multi-party computation, and thus is solvable in principle <ref> [98, 18, 45] </ref>. 21 However, what one desires is efficient solutions, and in particular ones comparable in efficiency to standard "single private-key" cryptosystems. Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works). <p> As for the latter general plausibility results (i.e., the construction of zero-knowledge proofs and multi-party protocols), here there seem to be little hope for a result which may both maintain the generality of the results in <ref> [97, 169, 98] </ref> and yield practical solutions for each specific task. However, we believe that there is work to be done towards the development of additional paradigms and techniques which may be useful in the construction of schemes for specific tasks.
Reference: [99] <author> O. Goldreich and Y. Oren. </author> <title> Definitions and Properties of Zero-Knowledge Proof Systems. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 7, No. 1, </volume> <pages> pages 1-32, </pages> <year> 1994. </year>
Reference-contexts: The above definition does not account for auxiliary information which an adversary may have prior to entering the interaction. Accounting for such auxiliary information is essential for using zero-knowledge proofs as subprotocols inside larger protocols (see <ref> [95, 99] </ref>). Another concern is that we prefer that the complexity of C fl be bounded as a function of the complexity of B fl . Both concerns are taken care of by a more strict notion of zero-knowledge presented next. <p> Another concern is that we prefer that the complexity of C fl be bounded as a function of the complexity of B fl . Both concerns are taken care of by a more strict notion of zero-knowledge presented next. Definition 6 (zero-knowledge, revisited <ref> [99] </ref>): A strategy A is black-box zero-knowledge on inputs from S if there exists an efficient (universal) subroutine-calling algorithm U so that for every feasible strategy B fl , the probability ensembles f (A; B fl )(x)g x2S and fU B fl (x)g x2S are computationally indistinguishable, where U B fl
Reference: [100] <author> O. Goldreich and R. Ostrovsky. </author> <title> Software Protection and Simulation on Oblivious RAMs. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 43, </volume> <year> 1996, </year> <pages> pages 431-473. </pages>
Reference: [101] <author> O. Goldreich, A. Sahai, and S. Vadhan. </author> <title> Honest-Verifier Statistical Zero-Knowledge equals general Statistical Zero-Knowledge. </title> <type> Manuscript, </type> <year> 1997. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [102] <author> S. Goldwasser. </author> <title> Fault Tolerant Multi Party Computations: Past and Present. </title> <booktitle> In 16th ACM Symposium on Principles of Distributed Computing, </booktitle> <year> 1997. </year> <note> Also available from http : ==www:cs:cornell:edu=Info=People=chandra=podc97=newProgram:html. </note>
Reference-contexts: Our own preference is to refer to [35] for the definitions, and to [87] for the constructions. The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to <ref> [102] </ref>. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval [48, 47, 120], Cryptanalysis by induced faults [27], and many others.
Reference: [103] <author> S. Goldwasser and L.A. Levin. </author> <title> Fair Computation of General Functions in Presence of Immoral Majority. </title> <booktitle> In Crypto90, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 537), </volume> <pages> pages 77-93. </pages>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in <ref> [132, 2, 103, 35] </ref>). However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process.
Reference: [104] <author> S. Goldwasser and S. Micali. </author> <title> Probabilistic Encryption. </title> <journal> Journal of Computer and System Science, </journal> <volume> Vol. 28, No. 2, </volume> <pages> pages 270-299, </pages> <year> 1984. </year> <note> Preliminary version in 14th ACM Symposium on the Theory of Computing, </note> <year> 1982. </year>
Reference-contexts: Two major (interleaved) activities have been: 1. Definitional Activity: The identification, conceptualization and rigorous definition of crypto graphic tasks which capture natural security concerns; and 2. Constructive Activity: The study and design of cryptographic schemes satisfying definitions as in (1). The definitional activity provided a definition of secure encryption <ref> [104] </ref>. The reader may be surprised: what is there to define (beyond the basic setting formulated in [61])? Let us answer with a question (posed by Goldwasser and Micali [104]): should an encryption scheme which leaks the first bit of the plaintext be considered secure? Clearly, the answer is negative and <p> The definitional activity provided a definition of secure encryption <ref> [104] </ref>. The reader may be surprised: what is there to define (beyond the basic setting formulated in [61])? Let us answer with a question (posed by Goldwasser and Micali [104]): should an encryption scheme which leaks the first bit of the plaintext be considered secure? Clearly, the answer is negative and so some naive conceptions regarding secure encryption (e.g., "a scheme is secure if it is infeasible to obtain the plaintext from the ciphertext when not given the decryption key") <p> The alternative suggested by Blum, Goldwasser, Micali and Yao <ref> [26, 104, 168] </ref> is a robust notion of pseudorandom generators such a generator produces sequences which are computationally indistinguishable from truly random sequences, and thus, can replace truly random sequences in any practical application. <p> Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. Thus, standard assumptions such as that the RSA is hard to invert were used to construct secure public-key encryption schemes <ref> [104, 168] </ref> and unforgeable digital schemes [106]. We stress that assuming that RSA is hard to invert is different from assuming that RSA is a secure encryption scheme. <p> Introduction of paradigms and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin [151], the "authentication tree" of Merkle [127, 129], the "randomized encryption" paradigm of Goldwasser and Micali <ref> [104] </ref>, proof techniques as the "hybrid argument" of [104] (cf., [89, Sec. 3.2.3]), and many others. 3. <p> of paradigms and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin [151], the "authentication tree" of Merkle [127, 129], the "randomized encryption" paradigm of Goldwasser and Micali <ref> [104] </ref>, proof techniques as the "hybrid argument" of [104] (cf., [89, Sec. 3.2.3]), and many others. 3. Presentation of schemes which are suitable for practical applications: Typical examples in clude the public-key encryption schemes of Blum Goldwasser [25], the digital signature schemes of [69, 66, 51], the session-key protocols of [13, 14], and many others. <p> In case the answer is negative, we may say that the two objects are equivalent as far as any practical application is concerned. Indeed, it will be our common practice to interchange such (computationally indistinguishable) objects. Definition 2 (computational indistinguishability <ref> [104, 168] </ref>): Let X = fX n g n2N and Y = fY n g n2N be probability ensembles such that each X n and Y n ranges over strings of length n. <p> The approach initiated in <ref> [104, 105] </ref> is that the adversary gains nothing if whatever it can obtain by deviating from the prescribed honest behavior can also be obtained in an appropriately defined "ideal model". <p> To simplify the exposition, let us assume that on security parameter n the key generation produces a key of length n, whereas the scheme is used to encrypt messages of length n 2 . Definition 7 (semantic security (following <ref> [104] </ref>)): An encryption scheme is semantically secure if for every feasible algorithm, A, there exists a feasible algorithm B so that for every two functions f; h : f0; 1g fl 7! f0; 1g fl and all sequences of pairs, (X n ; z n ) n2N , where X n <p> In particular, the ciphertext does not help in (feasibly) computing the least significant bit of the plaintext or any other information regarding the plaintext. This holds for any distribution of plaintexts (captured by the random variable X n ). Definition 8 (indistinguishability of encryptions (following <ref> [104] </ref>)): An encryption scheme has indistinguishable encryptions if for every feasible algorithm, A, and all sequences of triples, (x n ; y n ; z n ) n2N , where jx n j = jy n j = n 2 and jz n j is of feasible (in n) length, the <p> Furthermore, if the encryption scheme is used for fifo communication between the parties and both can maintain the counter value then there is no need for the sender to send the counter value. The randomization paradigm <ref> [104] </ref>: We demonstrate this paradigm by presenting several constructions of public-key encryption schemes. <p> In particular, problems as coin tossing over telephone [21], exchange of secrets [20], and Oblivious Transfer were formulated [153] (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali <ref> [104] </ref>, and to concepts as computational indistinguishability [104, 168]. Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff [105], with early versions date to March 1982). <p> Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability <ref> [104, 168] </ref>. Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff [105], with early versions date to March 1982). A formal approach to the security of cryptographic protocols was suggested in [64]. <p> Thus, our main criteria is the readability of the text (not its novelty). The recommendations are arranged by subjects. One-Way Functions, Pseudorandom Generators and Zero-Knowledge: For these, our favorite source is our own text [89]. Encryption Schemes: A good motivating discussion appears in <ref> [104] </ref>. The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and [25, 1], respectively. <p> The definitional treatment in [87, 88] is the one we prefer, although it can be substantially simplified if one adopts non-uniform complexity measures (as done above). Further details on the constructions of public-key encryption schemes (sketched above) can be found in <ref> [104, 87] </ref> and [25, 1], respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51].
Reference: [105] <author> S. Goldwasser, S. Micali and C. Rackoff. </author> <title> The Knowledge Complexity of Interactive Proof Systems. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 18, </volume> <pages> pages 186-208, </pages> <year> 1989. </year> <note> Preliminary version in 17th ACM Symposium on the Theory of Computing, </note> <year> 1985. </year>
Reference-contexts: The definitional activity has identified concepts which were not known before. One well-known example is the introduction of zero-knowledge proofs by Goldwasser, Micali and Rackoff <ref> [105] </ref>. A key paradigm crystallized in making the latter definition is the simulation paradigm: A party is said to have gained nothing from some extra information given to it if it can generate (i.e., simulate the receipt of) essentially the same information by itself (i.e., without being given this information). <p> The approach initiated in <ref> [104, 105] </ref> is that the adversary gains nothing if whatever it can obtain by deviating from the prescribed honest behavior can also be obtained in an appropriately defined "ideal model". <p> Zero-knowledge is a property of some prover-strategies. More generally, we consider interactive machines which yield no knowledge while interacting with an arbitrary feasible adversary on a common input taken from a predetermined set (in our case the set of valid assertions). Definition 5 (zero-knowledge <ref> [105] </ref>): A strategy A is zero-knowledge on inputs from S if, for every feasible strategy B fl , there exists a feasible computation C fl so that the following two probability ensembles are computationally indistinguishable: 1. f (A; B fl )(x)g x2S = the output of B fl when interacting with <p> The zero-knowledge claus guarantees that interacting with u according to the protocol, does not leak knowledge which may be used to impersonate u. For more details see <ref> [105, 79, 72] </ref>. can satisfy both conflicting requirements. That is, A can prove in zero-knowledge that it took the correct steps. Note that A's claim to having taken the correct steps is an NP-assertion and that A has an NP-witness to its validity (i.e., its secret!). <p> Non-interactive zero-knowledge proofs are useful in applications where one of the parties may be trusted to select the abovementioned reference string (e.g., see Section 5.3). Noninteractive zero-knowledge arguments for NP were constructed using any trapdoor permutation [73, 119]. Zero-knowledge proofs of knowledge <ref> [105, 79, 5] </ref>: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy. One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72]. <p> One natural application of (zero-knowledge) proofs of knowledge is for identification [79, 72]. Figure 1 depicts the Fiat-Shamir Identification Scheme [79] (which is based on the Goldwasser-Micali-Rackoff zero-knowledge proof system for Quadratic Residuosity <ref> [105] </ref>). Relaxations of Zero-knowledge: Important relaxations of zero-knowledge were presented in [75]. Specifically, in witness indistinguishable proofs it is infeasible to tell which NP-witness to the assertion the prover is using. Unlike zero-knowledge proofs, this notion is closed under parallel composition. <p> For example, looking at the definition of zero-knowledge proofs <ref> [105] </ref>, it is not a-priori clear that such proofs exists in a non-trivial sense. The non-triviality of the notion was demonstrated in [105] by presenting a zero-knowledge proof system for statements, regarding Quadratic Residuosity, which are believed to be hard to verify (without extra information). <p> For example, looking at the definition of zero-knowledge proofs <ref> [105] </ref>, it is not a-priori clear that such proofs exists in a non-trivial sense. The non-triviality of the notion was demonstrated in [105] by presenting a zero-knowledge proof system for statements, regarding Quadratic Residuosity, which are believed to be hard to verify (without extra information). Furthermore, in contrary to prior beliefs, it was shown in [97] that the existence of commitment schemes 17 implies that any NP-statement can be proven in zero-knowledge. <p> Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff <ref> [105] </ref>, with early versions date to March 1982). A formal approach to the security of cryptographic protocols was suggested in [64]. This approach actually identifies a subclass of insecure protocols (i.e., those which can be broken via a syntactically-restricted type of attack).
Reference: [106] <author> S. Goldwasser, S. Micali, and R.L. Rivest. </author> <title> A Digital Signature Scheme Secure Against Adap tive Chosen-Message Attacks. </title> <journal> SIAM Journal on Computing, </journal> <month> April </month> <year> 1988, </year> <pages> pages 281-308. </pages>
Reference-contexts: The lesson is that even when a natural concern (e.g., "secure communication over insecure channels") has been identified, work still needs to be done towards a satisfactory (rigorous) definition of the underlying concept. The definitional activity also undertook the treatment of unforgeable signature schemes <ref> [106] </ref>: One result of the treatment was the refutation of a "folklore theorem" (attributed to Ron Rivest ) by which "a signature scheme that is robust against chosen message attack cannot have a proof of security". <p> Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. Thus, standard assumptions such as that the RSA is hard to invert were used to construct secure public-key encryption schemes [104, 168] and unforgeable digital schemes <ref> [106] </ref>. We stress that assuming that RSA is hard to invert is different from assuming that RSA is a secure encryption scheme. Furthermore, plain RSA (alike any deterministic public-key encryption scheme) is not secure (as one can easily distinguish the encryption of one predetermined message from the encryption of another). <p> Likewise, although plain RSA signing is vulnerable to "existential forgery" (and other attacks), RSA can be transformed into a signature scheme which is unforgeable (provided RSA is hard to invert) <ref> [106, 11] </ref>. Using the assumption that RSA is hard to invert, one can construct pseudorandom generators [26, 168], zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function [169, 98]. <p> Yet, again, we see no way to have a general (i.e., application-independent) notion of "meaningful" messages (so that only forging signatures to them will be consider a breaking of the scheme). Definition 9 (unforgeable signatures <ref> [106] </ref>): * A chosen message attack is a process which on input a verification-key can obtain signatures (relative to the corresponding signing-key) to messages of its choice. * Such an attack is said to succeeds (in existential forgery) if it outputs a valid signature to a message for which it has <p> Three central paradigms in the construction of signature schemes are the "refreshing" of the "ef-fective" signing-key, the usage of an "authentication tree" and the "hashing paradigm". The refreshing paradigm <ref> [106] </ref>: To demonstrate this paradigm, suppose we have a signature scheme which is robust against a "random message attack" (i.e., an attack in which the adversary only obtains signatures to uniformly distributed messages). <p> We note that one-time signature schemes (as utilized here) are easy to construct (see, for example [128]). The tree paradigm <ref> [127, 106] </ref>: To demonstrate this paradigm, we show how to construct a general signature scheme using only a one-time signature scheme (alas one where an 2n-bit string can be signed w.r.t an n-bit long verification-key). <p> An alternative and more efficient transformation, of signature schemes which are robust under a "random message attack" into general ones, has been suggested in [53]. 19 in previous signatures [86]. Employing this paradigm and assuming that the RSA function is infeasible to invert, one obtains a secure signature scheme <ref> [106, 86] </ref> in which the i th message can be signed/verified in time 2 log 2 i slower than plain RSA. <p> Further details on the constructions of public-key encryption schemes (sketched above) can be found in [104, 87] and [25, 1], respectively. For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to <ref> [106] </ref> and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4].
Reference: [107] <author> S. Goldwasser, S. Micali and P. Tong. </author> <title> Why and How to Establish a Private Code in a Public Network. </title> <booktitle> In 23rd IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1982, </year> <pages> pages 134-144. </pages>
Reference: [108] <author> S. Goldwasser, S. Micali and A.C. Yao. </author> <title> Strong Signature Schemes. </title> <booktitle> In 15th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 431-439, </pages> <year> 1983. </year> <month> 37 </month>
Reference: [109] <author> J. H-astad, R. Impagliazzo, L.A. Levin and M. Luby. </author> <title> Construction of Pseudorandom Generator from any One-Way Function. </title> <note> To appear in SIAM Journal on Computing. Preliminary versions by Impagliazzo et. </note> <editor> al. </editor> <booktitle> in 21st ACM Symposium on the Theory of Computing (1989) and H-astad in 22nd ACM Symposium on the Theory of Computing (1990). </booktitle>
Reference-contexts: However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see <ref> [109, 91, 157, 134, 97] </ref> for positive results and [122, 157, 144] for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> This conjecture yields an efficient pseudorandom generator: G 0 N (s) = lsb N (s) lsb N (s 2 mod N ) lsb N (s 4 mod N ) , where lsb N (x) denotes the 0:5 log 2 N least significant bits of x. A plausibility result <ref> [109] </ref>: Pseudorandom generators exist if (and only if ) one-way functions exist. Unlike the construction of pseudorandom generators from one-way permutations, the known construction of pseudorandom generators from arbitrary one-way functions has no practical significance. <p> In contrast, information-theoretically secure multi-party computation is possible when assuming the existence of perfect private channels between each pair of honest users [18, 45]. 17 Consequently, it was shown how to construct commitment schemes based on any pseudorandom generator [134], and that the latter exists if one-way functions exist <ref> [109] </ref>. 23 primitive which, being well-known, typically has several candidate implementations. More on this subject below. On the meaning of asymptotic results. Asymptotic analysis is a major simplifying convention. It allows to disregard specifics like the model of computation and to focus on the essentials of the problem at hand.
Reference: [110] <author> J. H-astad, A. Schrift and A. Shamir. </author> <title> The Discrete Logarithm Modulo a Composite Hides O(n) Bits. </title> <journal> Journal of Computer and System Science, </journal> <volume> Vol. 47, </volume> <pages> pages 376-404, </pages> <year> 1993. </year>
Reference-contexts: In particular, assuming the intractability of the subset sum problem (for suitable densities) or of the decoding of random linear codes, this paradigm was used in [114, 80] to construct very efficient pseudorandom generators. Alternatively, encouraged by the results in <ref> [1, 110] </ref>, we conjecture that the first n=2 least significant bits of the argument constitute a hard-core function of the modular squaring function for n-bit long moduli.
Reference: [111] <author> A. Herzberg, M. Jakobsson, S. Jarecki, H. Krawczyk and M. Yung. </author> <title> Proactive public key and signature systems. </title> <booktitle> In 1997 ACM Conference on Computers and Communication Security, </booktitle> <pages> pages 100-110, </pages> <year> 1997. </year>
Reference-contexts: Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive <ref> [145, 42, 111] </ref>. By robust we mean that proper operation is guaranteed even if some of the sites holding shares of the private-key misbehave (as may be the case when controlled by an adversary).
Reference: [112] <author> A. Herzberg, S. Jarecki, H. Krawczyk and M. Yu. </author> <title> Proactive Secret Sharing, or How to Cope with Perpetual Leakage. </title> <booktitle> In Crypto95, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 963), </volume> <pages> pages 339-352. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") <ref> [145, 42, 112] </ref>, Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved.
Reference: [113] <author> R. Impagliazzo and M. Luby. </author> <title> One-Way Functions are Essential for Complexity Based Cryp tography. </title> <booktitle> In 30th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 230-235, </pages> <year> 1989. </year>
Reference-contexts: Intuitively, this is an immediate consequence of the fact that Modern Cryptography wish to capitalize on the difference between feasible attacks and possible-but-infeasible attacks. Formally, the existence of one-way functions has been shown to be a necessary condition for the existence of secure private-key encryption <ref> [113] </ref>, pseudorandom generators [122], digital signatures [157], "non-trivial" zero-knowledge proofs [144], and various basic protocols [113]. As we need assumptions anyhow, why not assume what we want? Well, first we need to know what we want. <p> Formally, the existence of one-way functions has been shown to be a necessary condition for the existence of secure private-key encryption <ref> [113] </ref>, pseudorandom generators [122], digital signatures [157], "non-trivial" zero-knowledge proofs [144], and various basic protocols [113]. As we need assumptions anyhow, why not assume what we want? Well, first we need to know what we want. This calls for a clear definition of complex security concerns an non-trivial issue which is discussed at length in previous sections.
Reference: [114] <author> R. Impagliazzo and M. Naor. </author> <title> Efficient Cryptographic Schemes Provable as Secure as Subset Sum. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 9, </volume> <year> 1996, </year> <pages> pages 199-216. </pages>
Reference-contexts: In particular, assuming the intractability of the subset sum problem (for suitable densities) or of the decoding of random linear codes, this paradigm was used in <ref> [114, 80] </ref> to construct very efficient pseudorandom generators. Alternatively, encouraged by the results in [1, 110], we conjecture that the first n=2 least significant bits of the argument constitute a hard-core function of the modular squaring function for n-bit long moduli.
Reference: [115] <author> R. Impagliazzo and S. Rudich. </author> <title> Limits on the Provable Consequences of One-Way Permuta tions. </title> <booktitle> In 21st ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 44-61, </pages> <year> 1989. </year>
Reference-contexts: Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention <ref> [115, 95] </ref>. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> For example, we mention novel modes of operation such as split-entities [17, 60, 131], batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, <ref> [115] </ref> indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner". <p> We claim that this has been the case in the past. In most cases it has been possible to construct schemes which meet the overly cautious definitions (of security), and in other cases the difficulty to construct such schemes has demonstrated an inherent problem (e.g., <ref> [115, 95] </ref>). 3 Pseudorandomness In practice "pseudorandom" sequences are used instead of truly random sequences in many applications. The underlying belief is that if an (efficient) application performs well when using a truly random sequence then it will perform essentially as well when using a "pseudorandom" sequence.
Reference: [116] <author> R. Impagliazzo and M. Yung. </author> <title> Direct Zero-Knowledge Computations. </title> <booktitle> In Crypto87, Springer Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 293), </volume> <pages> pages 40-51, </pages> <year> 1987. </year>
Reference: [117] <author> A. Juels, M. Luby and R. Ostrovsky. </author> <title> Security of Blind Digital Signatures. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 150-164. </pages>
Reference-contexts: Thus, when accepting a valid signature the recipient is only guaranteed that it is infeasible for 20 "discertify" the particular verification key, or even the entire signature scheme (hence the term "fail-stop"). Loosely speaking, Blind signatures (cf., <ref> [44, 82, 149, 117] </ref>) are a variant of signature schemes in which the signer gains no knowledge about the document it has signed, but rather only knows the total number of documents signed. <p> Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in <ref> [44, 82, 149, 117] </ref>. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions.
Reference: [118] <author> J. Kilian. </author> <title> A Note on Efficient Zero-Knowledge Proofs and Arguments. </title> <booktitle> In 24th ACM Sympo sium on the Theory of Computing, </booktitle> <pages> pages 723-732, </pages> <year> 1992. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [119] <author> J. Kilian and E. Petrank. </author> <title> An Efficient Non-Interactive Zero-Knowledge Proof System for NP with General Assumptions. </title> <note> To appear in Journal of Cryptology. </note>
Reference-contexts: Non-interactive zero-knowledge proofs are useful in applications where one of the parties may be trusted to select the abovementioned reference string (e.g., see Section 5.3). Noninteractive zero-knowledge arguments for NP were constructed using any trapdoor permutation <ref> [73, 119] </ref>. Zero-knowledge proofs of knowledge [105, 79, 5]: Loosely speaking, a system for proofs of knowledge guarantees that whenever the verifier is convinced that the prover knows X , this X can be efficiently extracted from the prover's strategy.
Reference: [120] <author> E. Kushilevitz and R. Ostrovsky. </author> <title> Replication is not Needed: A Single Database, Computa tional PIR. </title> <type> TR CS0906, </type> <institution> Department of Computer Science, Technion, </institution> <month> May </month> <year> 1997. </year> <note> To appear in 38th IEEE Symposium on Foundations of Computer Science, </note> <year> 1997. </year>
Reference-contexts: The situation will hopefully be redeemed in [90]. For a nice but brief survey, the reader is referred to [102]. New Directions: These include Incremental Cryptography [6, 7], Realizing the Random Oracle Model [36, 39, 40], Coercibility [38, 37], sharing of cryptographic objects [60, 58, 84], Private Information Retrieval <ref> [48, 47, 120] </ref>, Cryptanalysis by induced faults [27], and many others. Acknowledgments I am most grateful to Hugo Krawczyk for carefully reading and commenting on an early draft.
Reference: [121] <author> A. Lempel. </author> <title> Cryptography in Transition. </title> <journal> Computing Surveys, </journal> <month> Dec. </month> <year> 1979. </year>
Reference-contexts: New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. Cryptography was explicitly related to complexity theory in <ref> [29, 71, 121] </ref>: It was understood that problems related to breaking a 1-1 cryptographic mapping cannot be N P -complete, and more importantly that N P-hardness of the breaking task is a poor evidence for cryptographic security.
Reference: [122] <author> L.A. Levin. </author> <title> One-Way Function and Pseudorandom Generators. </title> <journal> Combinatorica, </journal> <volume> Vol. 7, </volume> <pages> pages 357-363, </pages> <year> 1987. </year>
Reference-contexts: Specific additions include (1) actual definitions of secure encryption and unforgeable signatures; (2) a more 1 The only exception to the latter statement is Levin's observation regarding the existence of a universal one-way function (cf., <ref> [122] </ref> and [89, Sec. 2.4.1]). 4 detailed description of the Blum-Goldwasser encryption scheme [25]; (3) a historical perspective; and (4) some specific notes (added to Section 8). 5 Part I Basic Tools 2 Central Paradigms Modern Cryptography, as surveyed here, is concerned with the construction of efficient schemes for which it <p> However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see [109, 91, 157, 134, 97] for positive results and <ref> [122, 157, 144] </ref> for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> Intuitively, this is an immediate consequence of the fact that Modern Cryptography wish to capitalize on the difference between feasible attacks and possible-but-infeasible attacks. Formally, the existence of one-way functions has been shown to be a necessary condition for the existence of secure private-key encryption [113], pseudorandom generators <ref> [122] </ref>, digital signatures [157], "non-trivial" zero-knowledge proofs [144], and various basic protocols [113]. As we need assumptions anyhow, why not assume what we want? Well, first we need to know what we want.
Reference: [123] <author> M. Luby. </author> <title> Pseudorandomness and Cryptographic Applications. </title> <publisher> Princeton University Press, </publisher> <year> 1996. </year>
Reference-contexts: In the rest of this essay we adopt the simpler convention of defining infeasible computations as ones which cannot be conducted in polynomial-time. (However, we explicitly state the level of practicality of each of the results presented.) The interested reader is referred to <ref> [123] </ref> for a more general treatment. 2.1 Computational Difficulty Modern Cryptography is concerned with the construction of schemes which are easy to operate (properly) but hard to foil.
Reference: [124] <author> M. Luby and C. Rackoff. </author> <title> How to Construct Pseudorandom Permutations from Pseudorandom Functions. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 17, </volume> <year> 1988, </year> <pages> pages 373-386. 38 </pages>
Reference-contexts: This view is wrong: A technical claim must always be well-defined, and it must always have a proof (otherwise it is a conjecture not a 19 Not to mention that the latter can be efficiently constructed from the former <ref> [124, 138] </ref>. 20 We refer to theorems, lemmas, propositions and such. 25 claim). There is room for non-technical claims, but these claims should be stated as opinions and such.
Reference: [125] <author> U. Maurer. </author> <title> Secret key agreement by public discussion from common information. </title> <journal> IEEE Trans. on Inform. Th. </journal> , <volume> Vol. 39 (No. 3), </volume> <pages> pages 733-742, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The noisy channel model (which generalizes the wiretap channel of [167]) where both the communication between the legitimate parties and the tapping channel of the adversary are subjected to noise (cf., <ref> [125, 54] </ref> and the references therein). 3.
Reference: [126] <author> R.C. Merkle. </author> <title> Secure Communication over Insecure Channels. </title> <journal> CACM, </journal> <volume> Vol. 21, No. 4, </volume> <pages> pages 294-299, </pages> <year> 1978. </year>
Reference-contexts: The DES designed in the early 70's has adopted the new paradigm: It is clearly possible, but supposely infeasible to break it. Following the challenge of constructing and analyzing new (private-key) encryption schemes, came new questions like how to exchange keys over an insecure channel <ref> [126] </ref>. New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152].
Reference: [127] <author> R.C. Merkle. </author> <title> Protocols for public key cryptosystems. </title> <booktitle> In Proc. of the 1980 Symposium on Security and Privacy. </booktitle>
Reference-contexts: Introduction of paradigms and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin [151], the "authentication tree" of Merkle <ref> [127, 129] </ref>, the "randomized encryption" paradigm of Goldwasser and Micali [104], proof techniques as the "hybrid argument" of [104] (cf., [89, Sec. 3.2.3]), and many others. 3. <p> We note that one-time signature schemes (as utilized here) are easy to construct (see, for example [128]). The tree paradigm <ref> [127, 106] </ref>: To demonstrate this paradigm, we show how to construct a general signature scheme using only a one-time signature scheme (alas one where an 2n-bit string can be signed w.r.t an n-bit long verification-key).
Reference: [128] <author> R.C. Merkle. </author> <title> A Digital Signature Based on a Conventional Encryption Function. </title> <booktitle> In Crypto87, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 293), </volume> <year> 1987, </year> <pages> pages 369-378. </pages>
Reference-contexts: We note that one-time signature schemes (as utilized here) are easy to construct (see, for example <ref> [128] </ref>). The tree paradigm [127, 106]: To demonstrate this paradigm, we show how to construct a general signature scheme using only a one-time signature scheme (alas one where an 2n-bit string can be signed w.r.t an n-bit long verification-key).
Reference: [129] <author> R.C. Merkle. </author> <title> A Certified Digital Signature Scheme. </title> <booktitle> In Crypto89, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 435), </volume> <pages> pages 218-238. </pages>
Reference-contexts: Introduction of paradigms and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin [151], the "authentication tree" of Merkle <ref> [127, 129] </ref>, the "randomized encryption" paradigm of Goldwasser and Micali [104], proof techniques as the "hybrid argument" of [104] (cf., [89, Sec. 3.2.3]), and many others. 3.
Reference: [130] <author> R.C. Merkle and M.E. Hellman. </author> <title> Hiding Information and Signatures in Trapdoor Knapsacks. </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> Vol. 24, </volume> <pages> pages 525-530, </pages> <year> 1978. </year>
Reference-contexts: New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman <ref> [130] </ref>, Rivest, Shamir and Adleman [156], and Rabin [152].
Reference: [131] <author> S. Micali. </author> <title> Fair Public-Key Cryptosystems. </title> <booktitle> In Crypto92, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 740), </volume> <pages> pages 113-138. </pages>
Reference-contexts: Other activities. This essay is focused on the definitional and constructive activities mentioned above. Other activities in the foundations of cryptography include the exploration of new directions and the marking of limitations. For example, we mention novel modes of operation such as split-entities <ref> [17, 60, 131] </ref>, batching operations [78], off-line/on-line signing [69] and Incremental Cryptography [6, 7]. On the limitation side, we mention [115, 95]. In particular, [115] indicates that certain tasks (e.g., secret key exchange) are unlikely to be achieved by using a one-way function in a "black-box manner".
Reference: [132] <author> S. Micali and P. Rogaway. </author> <title> Secure Computation. </title> <booktitle> In Crypto91, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 576), </volume> <pages> pages 392-404. </pages>
Reference-contexts: The simulation paradigm plays a central role in the related definitions of secure multi-party computations (with respect to varying settings such as in <ref> [132, 2, 103, 35] </ref>). However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process.
Reference: [133] <author> National Institute for Standards and Technology. </author> <title> Digital Signature Standard (dss), </title> <journal> Federal Register, </journal> <volume> Vol. 56, No. 169, </volume> <month> August </month> <year> 1991. </year>
Reference-contexts: signature to a message for which it has not requested a signature during the attack. * A signature scheme is secure (or unforgeable) if every feasible chosen message attack succeeds with at most negligible probability. 18 We stress that plain RSA (alike plain versions of Rabin's scheme [152] and DSS <ref> [133] </ref>) is not secure under the above definition. However, it may be secure if the message is "randomized" before RSA (or the other schemes) is applied (cf., [15]).
Reference: [134] <author> M. Naor. </author> <title> Bit Commitment using Pseudorandom Generators. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 4, </volume> <pages> pages 151-158, </pages> <year> 1991. </year>
Reference-contexts: However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see <ref> [109, 91, 157, 134, 97] </ref> for positive results and [122, 157, 144] for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> In contrast, information-theoretically secure multi-party computation is possible when assuming the existence of perfect private channels between each pair of honest users [18, 45]. 17 Consequently, it was shown how to construct commitment schemes based on any pseudorandom generator <ref> [134] </ref>, and that the latter exists if one-way functions exist [109]. 23 primitive which, being well-known, typically has several candidate implementations. More on this subject below. On the meaning of asymptotic results. Asymptotic analysis is a major simplifying convention.
Reference: [135] <author> M. Naor, R. Ostrovsky, R. Venkatesan and M. Yung. </author> <title> Zero-Knowledge Arguments for NP can be Based on General Assumptions. </title> <booktitle> In Crypto92, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 740), </volume> <pages> pages 196-214. </pages>
Reference-contexts: However, arguments (aka computationally sound proofs) differ from interactive proofs in having a weaker soundness clause: it is infeasible (rather than impossible) to fool the verifier to accept false assertion (except with negligible probability) [31]. Perfect zero-knowledge arguments for NP were constructed using any one-way permutation <ref> [135] </ref>. Non-Interactive zero-knowledge proofs [24, 73]: Here the interaction between the prover and the verifier consists of the prover sending a single message to the verifier (as in "classical proofs"). In addition, both players have access to a "random reference string" which is postulated to be uniformly selected.
Reference: [136] <author> M. Naor and B. Pinkas. </author> <title> Visual Authentication and Identification. </title> <booktitle> In Crypto97, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1294), </volume> <pages> pages 322-336. </pages>
Reference: [137] <author> M. Naor and O. Reingold. </author> <title> Synthesizers and their Application to the Parallel Construction of Pseudo-Random Functions. </title> <booktitle> In 36th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 170-181, </pages> <year> 1995. </year>
Reference-contexts: We define the function ensemble ff s : f0; 1g jsj 7! f0; 1g jsj g, where f s ( jsj 2 1 ) = G jsj ( G 2 (G 1 (s)) ). This ensemble is pseudorandom. Alternative constructions of pseudorandom functions have been suggested in <ref> [137, 139] </ref>. 4 Zero-Knowledge Loosely speaking, zero-knowledge proofs are proofs which yield nothing beyond the validity of the assertion. That is, a verifier obtaining such a proof only gains conviction in the validity of the assertion.
Reference: [138] <author> M. Naor and O. Reingold. </author> <title> On the Construction of Pseudo-Random Permutations: Luby Rackoff Revisited. </title> <booktitle> In 29th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 189-199, </pages> <year> 1997. </year>
Reference-contexts: This view is wrong: A technical claim must always be well-defined, and it must always have a proof (otherwise it is a conjecture not a 19 Not to mention that the latter can be efficiently constructed from the former <ref> [124, 138] </ref>. 20 We refer to theorems, lemmas, propositions and such. 25 claim). There is room for non-technical claims, but these claims should be stated as opinions and such.
Reference: [139] <author> M. Naor and O. Reingold. </author> <title> Number-theoretic constructions of efficient pseudo-random func tions and other cryptographic primitives. </title> <booktitle> To appear in 38th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1997. </year>
Reference-contexts: We define the function ensemble ff s : f0; 1g jsj 7! f0; 1g jsj g, where f s ( jsj 2 1 ) = G jsj ( G 2 (G 1 (s)) ). This ensemble is pseudorandom. Alternative constructions of pseudorandom functions have been suggested in <ref> [137, 139] </ref>. 4 Zero-Knowledge Loosely speaking, zero-knowledge proofs are proofs which yield nothing beyond the validity of the assertion. That is, a verifier obtaining such a proof only gains conviction in the validity of the assertion.
Reference: [140] <author> M. Naor and A. Shamir. </author> <title> Visual Cryptography. </title> <booktitle> In EuroCrypt94, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 950), </volume> <year> 1995, </year> <pages> pages 1-12. 39 </pages>
Reference: [141] <author> M. Naor and M. Yung. </author> <title> Universal One-Way Hash Functions and their Cryptographic Appli cation. </title> <booktitle> 21st ACM Symposium on the Theory of Computing, </booktitle> <year> 1989, </year> <pages> pages 33-43. </pages>
Reference-contexts: We stress that using a hashing scheme in the above two-stage process without evaluating whether it is collision-free is a very dangerous practice. A useful variant on the above paradigm is the use of Universal One-Way Hash Functions (as defined in <ref> [141] </ref>), rather than the collision-free hashing used above. <p> A plausibility result <ref> [141, 157] </ref>: Signature schemes exist if (and only if ) one-way functions exist. Unlike the constructions of signature schemes described above, the known construction of signature schemes from arbitrary one-way functions has no practical significance [157].
Reference: [142] <author> M. Naor and M. Yung. </author> <title> Public-Key Cryptosystems Provably Secure Against Chosen Cipher text Attacks. </title> <booktitle> In 22nd ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 427-437, </pages> <year> 1990. </year>
Reference-contexts: Clearly, the private-key encryption scheme based on pseudorandom functions (described above) is secure also against such attacks. Public-key encryption schemes secure against Chosen Ciphertext Attacks can be constructed, assuming the existence of trapdoor permutations and utilizing non-interactive zero-knowledge proofs <ref> [142] </ref> (which can be constructed under this assumption [73]). Another issue is the non-malleability of the encryption scheme, considered in [62]. Here one requires that it should be infeasible for an adversary, given a ciphertext, to produce a valid ci-phertext for a related plaintext.
Reference: [143] <author> T. Okamoto. </author> <title> On relationships between statistical zero-knowledge proofs. </title> <booktitle> In 28th ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 649-658, </pages> <year> 1996. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [144] <author> R. Ostrovsky and A. Wigderson. </author> <title> One-Way Functions are essential for Non-Trivial Zero Knowledge. </title> <booktitle> In 2nd Israel Symp. on Theory of Computing and Systems (ISTCS93), </booktitle> <publisher> IEEE Computer Society Press, </publisher> <pages> pages 3-17, </pages> <year> 1993. </year>
Reference-contexts: However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see [109, 91, 157, 134, 97] for positive results and <ref> [122, 157, 144] </ref> for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> Formally, the existence of one-way functions has been shown to be a necessary condition for the existence of secure private-key encryption [113], pseudorandom generators [122], digital signatures [157], "non-trivial" zero-knowledge proofs <ref> [144] </ref>, and various basic protocols [113]. As we need assumptions anyhow, why not assume what we want? Well, first we need to know what we want. This calls for a clear definition of complex security concerns an non-trivial issue which is discussed at length in previous sections.
Reference: [145] <author> R. Ostrovsky and M. Yung. </author> <title> How to Withstand Mobile Virus Attacks. </title> <booktitle> In 10th ACM Sympo sium on Principles of Distributed Computing, </booktitle> <pages> pages 51-59, </pages> <year> 1991. </year>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") <ref> [145, 42, 112] </ref>, Electronic Cash [44, 46, 82, 150, 162], Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved. <p> Analogous plausibility results were subsequently obtained in a variety of models. In particular, we mention secure computations in the private channels model [18, 45] and in the presence of mobile adversaries <ref> [145] </ref>. As stressed in the case of zero-knowledge proofs, we view these results as asserting that very wide classes of problems are solvable in principle. However, we do not recommend using the solutions derived by these general results in practice. <p> Such efficient solutions, called threshold cryptosystems, were envisioned in [59, 60] and provided in [60, 58, 85] (and many other works). In addition to the conditions informally described above, it is desired that the threshold system be robust [85] and proactive <ref> [145, 42, 111] </ref>. By robust we mean that proper operation is guaranteed even if some of the sites holding shares of the private-key misbehave (as may be the case when controlled by an adversary).
Reference: [146] <author> M. Pease, R. Shostak and L. Lamport. </author> <title> Reaching agreement in the presence of faults. </title> <journal> Journal of the ACM, </journal> <volume> Vol. 27(2), </volume> <pages> pages 228-234, </pages> <year> 1980. </year>
Reference-contexts: Such a channel can be implemented over a standard point-to-point network using a Byzantine Agreement protocol <ref> [146] </ref>. Efficient Byzantine Agreement protocols are known in a variety of models. In the information-theoretic model, we mention the deterministic protocols of [63, 164] which tolerate malicious behaviour of t &lt; m=3 parties, where n is the total number of parties.
Reference: [147] <author> T.P. Pedersen and B. Pfitzmann. </author> <title> Fail-Stop Signatures. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 26/2, </volume> <pages> pages 291-330, </pages> <year> 1997. </year> <note> Based on several earlier work (see first footnote in the paper). </note>
Reference-contexts: It is indeed an important open problem to provide an alternative construction which may be practical and still utilize an arbitrary one-way function. 6.3 Two variants of signature schemes Loosely speaking, Fail-stop signatures (cf., <ref> [147] </ref>) are signature schemes augmented by a proof system which allows the signer to prove that a particular (document,signature)-pair was not generated by him/her.
Reference: [148] <author> B. Pfitzmann. </author> <title> Digital Signature Schemes (General Framework and Fail-Stop Signatures). </title> <booktitle> Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1100), </volume> <year> 1996. </year>
Reference-contexts: For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and <ref> [148] </ref>. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. <p> For discussion of Non-Malleable Cryptography, which actually transcends the domain of encryption, see [62]. Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and <ref> [148] </ref>. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in [44, 82, 149, 117]. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions.
Reference: [149] <author> B. Pfitzmann and M. Waidner. </author> <title> How to break and repair a "provably secure" untraceable payment system. </title> <booktitle> In Crypto91, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 576), </volume> <pages> pages 338-350. </pages>
Reference-contexts: Thus, when accepting a valid signature the recipient is only guaranteed that it is infeasible for 20 "discertify" the particular verification key, or even the entire signature scheme (hence the term "fail-stop"). Loosely speaking, Blind signatures (cf., <ref> [44, 82, 149, 117] </ref>) are a variant of signature schemes in which the signer gains no knowledge about the document it has signed, but rather only knows the total number of documents signed. <p> Signature Schemes: For a definitional treatment of signature schemes the reader is referred to [106] and [148]. Easy to understand constructions appear in [11, 69, 66, 51]. Variants on the basic model are discussed in [148] and in <ref> [44, 82, 149, 117] </ref>. For discussion of message authentication schemes (macs) the reader in referred to [4]. General Cryptographic Protocols: This area is both most complex and most lacking of good expositions. Our own preference is to refer to [35] for the definitions, and to [87] for the constructions.
Reference: [150] <author> B. Pfitzmann and M. Waidner. </author> <title> Properties of Payment Systems: General Definition Sketch and Classification. </title> <institution> IBM Research Report RZ2823 (#90126), IBM Research Division, </institution> <address> Zurich, </address> <month> May </month> <year> 1996. </year>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash <ref> [44, 46, 82, 150, 162] </ref>, Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved.
Reference: [151] <author> M.O. Rabin. </author> <title> Digitalized Signatures. In Foundations of Secure Computation (R.A. </title> <editor> DeMillo et. al. eds.), </editor> <publisher> Academic Press, </publisher> <year> 1977. </year>
Reference-contexts: Introduction of paradigms and techniques which may be applicable in practice: Typical exam ples include construction paradigms as the "choose n out of 2n technique" of Rabin <ref> [151] </ref>, the "authentication tree" of Merkle [127, 129], the "randomized encryption" paradigm of Goldwasser and Micali [104], proof techniques as the "hybrid argument" of [104] (cf., [89, Sec. 3.2.3]), and many others. 3. <p> Following the challenge of constructing and analyzing new (private-key) encryption schemes, came new questions like how to exchange keys over an insecure channel [126]. New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin <ref> [151] </ref>), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin [152]. <p> Techniques such as "n-out-of-2n verification" <ref> [151] </ref> and secret sharing [161] were introduced (and indeed were used extensively in subsequent research). At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols.
Reference: [152] <author> M.O. Rabin. </author> <title> Digitalized Signatures and Public Key Functions as Intractable as Factoring. </title> <address> MIT/LCS/TR-212, </address> <year> 1979. </year>
Reference-contexts: outputs a valid signature to a message for which it has not requested a signature during the attack. * A signature scheme is secure (or unforgeable) if every feasible chosen message attack succeeds with at most negligible probability. 18 We stress that plain RSA (alike plain versions of Rabin's scheme <ref> [152] </ref> and DSS [133]) is not secure under the above definition. However, it may be secure if the message is "randomized" before RSA (or the other schemes) is applied (cf., [15]). <p> New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman [156], and Rabin <ref> [152] </ref>. Cryptography was explicitly related to complexity theory in [29, 71, 121]: It was understood that problems related to breaking a 1-1 cryptographic mapping cannot be N P -complete, and more importantly that N P-hardness of the breaking task is a poor evidence for cryptographic security.
Reference: [153] <author> M.O. Rabin. </author> <title> How to Exchange Secrets by Oblivious Transfer. </title> <type> Tech. </type> <institution> Memo TR-81, Aiken Computation Laboratory, Harvard U., </institution> <year> 1981. </year>
Reference-contexts: At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols. In particular, problems as coin tossing over telephone [21], exchange of secrets [20], and Oblivious Transfer were formulated <ref> [153] </ref> (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168]. Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led <p> formulated <ref> [153] </ref> (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168]. Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff [105], with early versions date to March 1982). A formal approach to the security of cryptographic protocols was suggested in [64].
Reference: [154] <author> T. Rabin and M. Ben-Or. </author> <title> Verifiable Secret Sharing and Multi-party Protocols with Honest Majority. </title> <booktitle> In 21st ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 73-85, </pages> <year> 1989. </year>
Reference: [155] <author> C. Rackoff and D.R. Simon. </author> <title> Non-Interactive Zero-Knowledge Proof of Knowledge and Cho sen Ciphertext Attack. </title> <booktitle> In Crypto91, Springer-Verlag Lecture Notes in Computer Science (Vol. </booktitle> <volume> 576), </volume> <pages> pages 433-444. </pages>
Reference-contexts: We only know that the O (log n) least significant bits constitute a hard-core function for n-bit moduli [1]. 11 An even stronger notion of Chosen Ciphertext Attack is investiagted in <ref> [155] </ref>. This stronger notion is related to non-malleability discussed below. 17 it should be infeasible to produce a ciphertext to the plaintext 0x. It is easy to turn a private-key encryption scheme into a non-malleable one, by using a message authentication scheme on top.
Reference: [156] <author> R. Rivest, A. Shamir and L. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems. </title> <journal> CACM, </journal> <volume> Vol. 21, </volume> <month> Feb. </month> <year> 1978, </year> <pages> pages 120-126. 40 </pages>
Reference-contexts: New concepts were invented: digital signatures (cf., Diffie and Hellman [61] and Rabin [151]), public-key cryptosystems [61], and one-way functions [61]. First implementations of these concepts were suggested by Merkle and Hellman [130], Rivest, Shamir and Adleman <ref> [156] </ref>, and Rabin [152]. Cryptography was explicitly related to complexity theory in [29, 71, 121]: It was understood that problems related to breaking a 1-1 cryptographic mapping cannot be N P -complete, and more importantly that N P-hardness of the breaking task is a poor evidence for cryptographic security.
Reference: [157] <author> J. Rompel. </author> <title> One-way Functions are Necessary and Sufficient for Secure Signatures. </title> <booktitle> In 22nd ACM Symposium on the Theory of Computing, </booktitle> <year> 1990, </year> <pages> pages 387-394. </pages>
Reference-contexts: However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see <ref> [109, 91, 157, 134, 97] </ref> for positive results and [122, 157, 144] for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> However, gaps as required for Modern Cryptography are not known to exist they are only widely believed to exist. Indeed, almost all of Modern Cryptography rises or falls with the question of whether one-way functions exist (e.g., see [109, 91, 157, 134, 97] for positive results and <ref> [122, 157, 144] </ref> for negative ones). One-way functions are functions which are easy to evaluate but hard (on the average) to invert. <p> collision-free hashing function, the same function the description of which is part of the signer's public-key is used in all applications.) The advantage of using Universal One-Way Hash Functions is that their security requirement seems weaker than the collision-free condition (e.g., the former may be constructed using any one-way function <ref> [157] </ref>, whereas this is not known for the latter). A plausibility result [141, 157]: Signature schemes exist if (and only if ) one-way functions exist. Unlike the constructions of signature schemes described above, the known construction of signature schemes from arbitrary one-way functions has no practical significance [157]. <p> A plausibility result <ref> [141, 157] </ref>: Signature schemes exist if (and only if ) one-way functions exist. Unlike the constructions of signature schemes described above, the known construction of signature schemes from arbitrary one-way functions has no practical significance [157]. <p> any one-way function <ref> [157] </ref>, whereas this is not known for the latter). A plausibility result [141, 157]: Signature schemes exist if (and only if ) one-way functions exist. Unlike the constructions of signature schemes described above, the known construction of signature schemes from arbitrary one-way functions has no practical significance [157]. <p> Formally, the existence of one-way functions has been shown to be a necessary condition for the existence of secure private-key encryption [113], pseudorandom generators [122], digital signatures <ref> [157] </ref>, "non-trivial" zero-knowledge proofs [144], and various basic protocols [113]. As we need assumptions anyhow, why not assume what we want? Well, first we need to know what we want.
Reference: [158] <author> A. Sahai and S. Vadhan. </author> <title> A Complete Promise Problem for Statistical Zero-Knowledge. </title> <booktitle> In 38th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 448-457, </pages> <year> 1997. </year>
Reference-contexts: Thus, the development of techniques for the construction of efficient zero-knowledge proof systems is still of interest see, for example, <ref> [94, 33, 74, 118, 57, 52, 143, 158, 101] </ref>.) 4.2 Some Variants Perfect zero-knowledge arguments: This term captures two deviations from the above definition; the first being a strengthening and the second being a weakening.
Reference: [159] <author> C.P. Schnorr. </author> <title> Efficient Signature Generation by Smart Cards. </title> <journal> Journal of Cryptology, </journal> <volume> Vol. 4, </volume> <pages> pages 161-174, </pages> <year> 1991. </year>
Reference-contexts: Thus, one obtains an implementation of the ideal system in a world where random oracles do not exist. This methodology, explicitly formulated in [12], has been used in many works (see, for example, <ref> [79, 159, 15] </ref>). Although the random oracle methodology seems to be useful in practice, it is unclear how to put it on firm grounds.
Reference: [160] <author> C.E. Shannon. </author> <title> Communication Theory of Secrecy Systems. </title> <journal> Bell Sys. Tech. J., </journal> <volume> Vol. 28, </volume> <pages> pages 656-715, </pages> <year> 1949. </year>
Reference-contexts: additional input. (For private-key encryption schemes we may assume, without loss of generality, that the encryption key is identical to the decryption key.) 5.1 Definitions For simplicity we consider only the encryption of a single message; however this message may be longer than the key (which rules out information-theoretic secrecy <ref> [160] </ref>). We present two equivalent definitions of security. The first, called semantic security, is a computational analogue of Shannon's definition of perfect secrecy [160]. <p> 5.1 Definitions For simplicity we consider only the encryption of a single message; however this message may be longer than the key (which rules out information-theoretic secrecy <ref> [160] </ref>). We present two equivalent definitions of security. The first, called semantic security, is a computational analogue of Shannon's definition of perfect secrecy [160]. The second definition views secure encryption schemes as ones for which it is infeasible to distinguish encryptions of any (known) pair of messages (e.g., the all-zeros message and the all-ones message). The latter definition is technical in nature and is referred to as indistinguishability of encryptions. <p> Most of Modern Cryptography aims at achieving computational security; that is, making it infeasible (rather than impossible) for an adversary to break the system. The departure from information theoretic secrecy was suggested by Shannon in the very paper which introduced the notion <ref> [160] </ref>: In an information theoretic secure encryption scheme the private-key must be longer than the total entropy of the plaintexts to be sent using this key. This drastically restricts the applicability of (information-theoretic secure) private-key encryption schemes. <p> In this section, we try to trace some of these influences. Classic Cryptography. Answering the fundamental question of classic cryptography in a gloomy way (i.e., it is impossible to design a code that cannot be broken), Shannon also suggested a modification to the question <ref> [160] </ref>: Rather than asking whether it is possible to break the code, one should ask whether it is feasible to break it.
Reference: [161] <author> A. Shamir. </author> <title> How to Share a Secret. </title> <journal> CACM, </journal> <volume> Vol. 22, </volume> <month> Nov. </month> <year> 1979, </year> <pages> pages 612-613. </pages>
Reference-contexts: Techniques such as "n-out-of-2n verification" [151] and secret sharing <ref> [161] </ref> were introduced (and indeed were used extensively in subsequent research). At the Dawn of a New Era. Early investigations of cryptographic protocols revealed the inadequacy of imprecise notions of security and the subtleties involved in designing cryptographic protocols.
Reference: [162] <author> D. Simon. Anonymous Communication and Anonymous Cash. </author> <booktitle> In Crypto96, Springer Lecture Notes in Computer Science (Vol. </booktitle> <volume> 1109), </volume> <pages> pages 61-73. </pages>
Reference-contexts: However, it has been employed also in different settings such as in [13, 14, 41]. The definitional activity is an on-going process. Its more recent targets have included mobile adversaries (aka "proactive security") [145, 42, 112], Electronic Cash <ref> [44, 46, 82, 150, 162] </ref>, Coercibility [38, 37], Threshold Cryptography [60], and more. The constructive activity. As new definitions of cryptographic tasks emerged, the first challenge was to demonstrate that they can be achieved.
Reference: [163] <author> A. Shamir, R.L. Rivest, and L. Adleman. </author> <title> Mental Poker. </title> <note> MIT/LCS Report TM-125, </note> <year> 1979. </year>
Reference-contexts: In particular, problems as coin tossing over telephone [21], exchange of secrets [20], and Oblivious Transfer were formulated [153] (cf., [68]). Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of <ref> [163] </ref> led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability [104, 168].
Reference: [164] <author> S. Toueg, K.J. Perry and T.K. Srikanth. </author> <title> Fast distributed agreement. </title> <journal> SIAM Journal on Computing, </journal> <volume> Vol. 16(3), </volume> <pages> pages 445-457, </pages> <year> 1987. </year>
Reference-contexts: Such a channel can be implemented over a standard point-to-point network using a Byzantine Agreement protocol [146]. Efficient Byzantine Agreement protocols are known in a variety of models. In the information-theoretic model, we mention the deterministic protocols of <ref> [63, 164] </ref> which tolerate malicious behaviour of t &lt; m=3 parties, where n is the total number of parties. These protocols operate in O (t) rounds, which is optimal (for deterministic protocols).
Reference: [165] <author> U.V. Vazirani and V.V. Vazirani. </author> <title> Efficient and Secure Pseudo-Random Number Generation. </title> <booktitle> 25th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 458-463, </pages> <year> 1984. </year>
Reference-contexts: We have G N (s) = lsb (s) lsb (s 2 mod N ) lsb (s 2 `(jsj)1 mod N ), where lsb (x) is the least significant bit of x (which by <ref> [1, 165] </ref> is a hard-core of the modular squaring function). We note that for any one-way permutation f 0 , the inner-product mod 2 of x and r is a hard-core of f (x; r) = (f 0 (x); r) [96]. <p> however, that the security of the scheme depends on the length of N (and not on n).) Assuming that factoring Blum Integers (i.e., products of two primes each congruent to 3 (mod 4)) is hard, one may use the modular squaring function in role of the trapdoor permutation above (see <ref> [25, 1, 165, 81] </ref>).
Reference: [166] <author> M. Wegman and L. Carter. </author> <title> New Hash Functions and their Use in Authentication and Set Equality. </title> <journal> Journal of Computer and System Science, </journal> <volume> Vol. 22, </volume> <year> 1981, </year> <pages> pages 265-279. </pages>
Reference-contexts: message using a scheme which is secure against forgery provided that the adversary does not have access to the scheme's outcome (e.g., using Universal Hashing [43]), and "hiding" the result using a non-malleable scheme (e.g., a private-key encryption or a pseudorandom function). (Non-malleability is not required in certain cases; see <ref> [166] </ref>.) 2. Hashing the message using a collision-free scheme (cf., [55, 56]), and authenticating the result using a mac which operates on (short) fixed-length strings [4].
Reference: [167] <author> A. D. Wyner. </author> <title> The wire-tap channel. </title> <journal> Bell System Technical Journal, </journal> <volume> Vol. 54 (No. 8), </volume> <pages> pages 1355-1387, </pages> <month> Oct. </month> <year> 1975. </year>
Reference-contexts: Channels of the latter type include 1. Quantum Channels where an adversary is prevented from obtaining full information by the laws of quantum mechanics (cf., [30] and the references therein). 2. The noisy channel model (which generalizes the wiretap channel of <ref> [167] </ref>) where both the communication between the legitimate parties and the tapping channel of the adversary are subjected to noise (cf., [125, 54] and the references therein). 3.
Reference: [168] <author> A.C. Yao. </author> <title> Theory and Application of Trapdoor Functions. </title> <booktitle> In 23rd IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 80-91, </pages> <year> 1982. </year>
Reference-contexts: The alternative suggested by Blum, Goldwasser, Micali and Yao <ref> [26, 104, 168] </ref> is a robust notion of pseudorandom generators such a generator produces sequences which are computationally indistinguishable from truly random sequences, and thus, can replace truly random sequences in any practical application. <p> Thus, the first goal of the constructive activity is to demonstrate the plausibility of obtaining certain goals. Thus, standard assumptions such as that the RSA is hard to invert were used to construct secure public-key encryption schemes <ref> [104, 168] </ref> and unforgeable digital schemes [106]. We stress that assuming that RSA is hard to invert is different from assuming that RSA is a secure encryption scheme. <p> Likewise, although plain RSA signing is vulnerable to "existential forgery" (and other attacks), RSA can be transformed into a signature scheme which is unforgeable (provided RSA is hard to invert) [106, 11]. Using the assumption that RSA is hard to invert, one can construct pseudorandom generators <ref> [26, 168] </ref>, zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function [169, 98]. <p> In case the answer is negative, we may say that the two objects are equivalent as far as any practical application is concerned. Indeed, it will be our common practice to interchange such (computationally indistinguishable) objects. Definition 2 (computational indistinguishability <ref> [104, 168] </ref>): Let X = fX n g n2N and Y = fY n g n2N be probability ensembles such that each X n and Y n ranges over strings of length n. <p> In contrast, the above belief is an easy corollary of defining pseudorandom distributions as ones which are computationally indistinguishable from uniform distributions. 3.1 The Basics We are interested in pseudorandom sequences which can be generated and determined by short random seeds. That is, Definition 3 (pseudorandom generator <ref> [26, 168] </ref>): Let ` : N 7! N be so that `(n) &gt; n, 8n. A pseudorandom generator, with stretch function `, is an efficient (deterministic) algorithm which on 8 input a random n-bit seed outputs a `(n)-bit sequence which is computationally indistinguishable from a uniformly chosen `(n)-bit sequence. <p> In fact, many improvements of this type have been achieved in the past (and we hope to see more in the future). Following are some examples: * A plausibility result of Yao (commonly attributed to <ref> [168] </ref>) on the existence of hard-core predicates, assuming the existence of one-way permutations, was replaced by a practical construction of hard-core predicates for any one-way functions [96]. * A plausibility result of Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation <p> Following are some examples: * A plausibility result of Yao (commonly attributed to <ref> [168] </ref>) on the existence of hard-core predicates, assuming the existence of one-way permutations, was replaced by a practical construction of hard-core predicates for any one-way functions [96]. * A plausibility result of Yao (commonly attributed to [168]) by which any weak one-way permutation can be transformed into an ordinary one-way permutation was replaced by an efficient transformation of weak one-way permutation into ordinary one-way permutation [93]. * A plausibility result of [97] by which one may construct Verifiable Secret Sharing schemes (cf., [49]), using any one-way function, <p> Doubts (raised by Lipton) concerning the security of the "mental poker" protocol of [163] led to the current notion of secure encryption, due to Goldwasser and Micali [104], and to concepts as computational indistinguishability <ref> [104, 168] </ref>. Doubts (raised by Fischer) concerning the Oblivious Transfer protocol of [153] led to the concept 28 of zero-knowledge (suggested by Goldwasser, Micali, and Rackoff [105], with early versions date to March 1982). A formal approach to the security of cryptographic protocols was suggested in [64].
Reference: [169] <author> A.C. Yao. </author> <title> How to Generate and Exchange Secrets. </title> <booktitle> In 27th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 162-167, </pages> <year> 1986. </year> <month> 41 </month>
Reference-contexts: Using the assumption that RSA is hard to invert, one can construct pseudorandom generators [26, 168], zero-knowledge proofs for any NP-statement [97], and multi-party protocols for securely computing any multi-variant function <ref> [169, 98] </ref>. A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. <p> <ref> [169, 98] </ref>. A major misconception regarding theoretical work in Cryptography stems from not distinguishing work aimed at demonstrating the plausibility of obtaining certain goals from work aimed at suggesting paradigms and/or constructions which can be used in practice. For example, the general results concerning zero-knowledge proofs [97] and multi-party protocols [169, 98], mentioned above, are merely claims of plausibility: What they say is that any problem of the above type (i.e., any protocol problem as discussed in Section 7) can be solved in principle. This is a very valuable piece of information. <p> We stress that, as above, the choice of the initial input of each party may not depend on the input of the other party. 7.2 Constructions General plausibility results: Assuming the existence of trapdoor permutations, one may provide secure protocols for any two-party computation (allowing abort) <ref> [169] </ref> as well as for any multi-party computations with honest majority [98]. Thus, a host of cryptographic problems are solvable assuming the existence of trapdoor permutations. <p> In general, many concrete problems which are solvable in principle (by the plausibility results of <ref> [97, 169, 98] </ref>) were given efficient solutions. Forget the result, use its ideas. As stated above, some theoretical results are not directly applicable in practice. Still, in many cases these results utilize ideas which may be of value in practice. <p> As for the latter general plausibility results (i.e., the construction of zero-knowledge proofs and multi-party protocols), here there seem to be little hope for a result which may both maintain the generality of the results in <ref> [97, 169, 98] </ref> and yield practical solutions for each specific task. However, we believe that there is work to be done towards the development of additional paradigms and techniques which may be useful in the construction of schemes for specific tasks.
References-found: 169

