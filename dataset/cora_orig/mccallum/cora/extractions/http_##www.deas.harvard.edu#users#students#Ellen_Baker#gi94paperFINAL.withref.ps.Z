URL: http://www.deas.harvard.edu/users/students/Ellen_Baker/gi94paperFINAL.withref.ps.Z
Refering-URL: http://www.deas.harvard.edu/users/students/Ellen_Baker/papers.html
Root-URL: 
Email: e-mail: ellie@das.harvard.edu  
Title: Evolving Line Drawings  
Author: Wayne Davis Barry Joe Ellie Baker Margo Seltzer 
Keyword: Genetic Algorithm, Interactive Evolution, Interactive Graphics.  
Address: 33 Oxford Street Cambridge, MA 02139  
Affiliation: Aiken Computation Laboratory Harvard University  
Note: From Graphics Interface 94 Proceedings  Editors, Morgan Kaufmann Publishers 1  
Abstract: This paper explores the application of interactive genetic algorithms to the creation of line drawings. We have built a system that mates or mutates drawings selected by the user to create a new generation of drawings. The initial population from which the user makes selections may be generated randomly or input manually. The process of selection and procreation is repeated many times to evolve a drawing. A wide variety of complex sketches with highlighting and shading can be evolved from very simple drawings. This technique has potential for augmenting and enhancing the power of traditional computer-aided drawing tools, and for expanding the repertoire of the computer-assisted artist. 
Abstract-found: 1
Intro-found: 1
Reference: [Ba93] <author> E. Baker. </author> <title> Summary: Evolving Line Drawings, </title> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms, 1993. </booktitle> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], [Sth91], [BS93], <ref> [Ba93] </ref>). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]).
Reference: [BS93] <author> E. Baker and M. Seltzer. </author> <title> Evolving Line Drawings. </title> <institution> Harvard University Center for Research in Computing Technology, Technical Report-21-93, </institution> <year> 1993. </year>
Reference-contexts: This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], [Sth91], <ref> [BS93] </ref>, [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]).
Reference: [Bre85] <author> S. Brennan. </author> <title> Caricature Generator: The Dynamic Exaggeration of Faces by Computer. </title> <journal> Leonardo, </journal> <volume> Vol. 18, No.3, </volume> <pages> pp. 170-178, </pages> <year> 1985. </year>
Reference-contexts: They were typically evolved in fifteen to one hundred generations, usually taking five to thirty min 1. Brennan calculated average features from a large set of face drawings of real people, and constructed this average face for use in work on automating the creation of facial caricatures <ref> [Bre85] </ref>. The face drawings are related to each other (i.e., they were evolved during the same session), as are the butter y forms. drawings were produced automatically, with random choices made for the number of strokes, the stroke points, and stroke parameters.
Reference: [Bre86] <author> S. Brennan. </author> <title> Cited in Computer Recreations by A. K. Dewdney. </title> <journal> Scientific American, </journal> <volume> Vol. 225, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: Since one can produce new sets of children from the same parent (s) repeatedly, the population size at any generation may be as large as the user desires. The computed average face (from <ref> [Bre86] </ref>) shown at the top of Figure 4 was used in experiments as an initial input drawing and is the sole original ancestor of all drawings presented in the remainder of this paper. 1 An average face is a useful initial input drawing because it provides a central point for evolving
Reference: [CJ91] <author> C. Caldwell and V. S. Johnston. </author> <title> Tracking a Criminal Suspect Through Face Space With a Genetic Algorithm. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 416-421, </pages> <address> 1991. </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: The new generation is again subjected to the aesthetic selection criteria of the user to produce the following generation. This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], <ref> [CJ91] </ref>, [TL92], [Sth91], [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. <p> This feature of interactive evolution is used very effectively in a system by Caldwell and Johnston for allowing a crime victim to produce a facial composite of a criminal suspect <ref> [CJ91] </ref>. This system takes advantage of the remarkable human ability to recognize faces. A database of face parts (e.g., eyes, noses, mouths) is used to construct candidate faces, which are then rated by a human operator for their degree of likeness to the suspect. <p> This rating and procreation process is repeated until a likeness to the suspect is achieved. Caldwell and Johnston state that, while humans have excellent facial recognition ability, they have great difficulty in recalling facial characteristics with sufficient detail to provide an accurate composite <ref> [CJ91] </ref>. This is a perfect example of the ability to apply a complex fitness test without consciously understanding it. Since computers have historically performed poorly at face recognition (compared to humans), the system employs a particularly suitable division of labor between human and computer. <p> there are only two possible values (on or off) for every pixel in the drawing frame, and we use a 250 by 250 pixel square frame, there are a total of distinct phenotypes (over 18000 orders of magnitude larger than Caldwell and Johnstons search space of 34 billion possible composites <ref> [CJ91] </ref>). Figure 1 illus 2 1 O H S 107 146 12 45 2 S N B 110 157 5 43 has three separate marks, it consists of only two strokes. <p> The representation used in the Drawing Evolver is very general (i.e., it can represent any drawing at all) compared to Caldwell and Johnstons (whose genotype represents faces only) From Graphics Interface 94 Proceedings , Wayne Davis & Barry Joe Editors, Morgan Kaufmann Publishers 10 <ref> [CJ91] </ref>. But to limit our search to faces, the user must filter out the drawings that dont look face-like, while Caldwell and Johnstons users always see only valid faces.
Reference: [Daw87] <author> R. Dawkins. </author> <title> The Blind Watchmaker. W.W. </title> <publisher> Norton and Company, </publisher> <address> New York, London, </address> <year> 1987. </year>
Reference-contexts: 1 Introduction Interactive fitness evaluation for genetic algorithms was introduced by zoologist Richard Dawkins in his book, The Blind Watchmaker. The book describes a computer program for evolving images of creatures Dawkins calls biomorphs <ref> [Daw87] </ref>. Each biomorph is produced from a compact genetic code that specifies the creatures particular characteristics. Contained in the code is the essential information necessary to create a bit-mapped image of the creature on the computer screen. <p> This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins <ref> [Daw87] </ref>). An initial population of drawings, either generated randomly by the computer or input by the user, is displayed on the screen. From the displayed set the user selects one drawing for mutation or two drawings for mating. <p> Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth [Sim91] [LP89]. Other interactive evolution systems of note include: Dawkins, which uses a recursive genetic structure that produces varied, but highly characteristic insect-like forms <ref> [Daw87] </ref>; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms [Sth91]; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins [Opp89].
Reference: [Gol89] <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search Optimization and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Since humans are often very good at processing and assessing pictures quickly, interactive evolution is particularly well suited to search problems whose candidate solutions can be represented visually. Traditionally a genetic algorithm (GA) requires the specification of survival fitness criteria to be evaluated by the computer <ref> [Gol89] </ref>. This is typically one of the most difficult tasks in designing a GA. With interactive From Graphics Interface 94 Proceedings , Wayne Davis & Barry Joe Editors, Morgan Kaufmann Publishers 2 evolution the user performs this step, applying whatever complicated measure of fitness is desired.
Reference: [LP89] <author> A. Lindenmeyer and P. Prusinkiewicz. </author> <title> Developmental Models of Multicellular Organisms: A Computer Graphics Perspective. In Artificial Life, edited by C. </title> <editor> G. Langton, </editor> <booktitle> Proc. </booktitle> <volume> Vol. VI, </volume> <pages> pages 221-250. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The mutation and mating operators restructure or modify the Lisp expressions and make random parameter changes. Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth [Sim91] <ref> [LP89] </ref>.
Reference: [Opp89] <author> P. </author> <title> Oppenheimer, </title> <booktitle> The Artificial Menagerie. In Artificial Life, </booktitle> <editor> edited by C. G. Langton, </editor> <booktitle> Proc. </booktitle> <volume> Vol. VI, </volume> <pages> pages 221-250. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: varied, but highly characteristic insect-like forms [Daw87]; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms [Sth91]; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins <ref> [Opp89] </ref>. These systems use a variety of genetic representations to explore both infinite and large finite spaces. Each system relies on the ability to represent candidate solutions visually and on the human ability to evaluate these solutions quickly and in parallel.
Reference: [Sim91] <author> K. Sims. </author> <title> Artificial Evolution for Computer Graphics. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 319-328, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: (<ref> [Sim91] </ref>, [CJ91], [TL92], [Sth91], [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]). An initial population of drawings, either generated randomly by the computer or input by the user, is displayed on the screen. From the displayed set the user selects one drawing for mutation or two drawings for mating. <p> Despite this drawback, interactive evolution has been used to produce some astounding results that could not have been achieved easily by any other known method <ref> [Sim91] </ref>, [TL92]. The beauty of interactive evolution is that the user need only apply personal fitness criteria, not state or even understand them. <p> Since computers have historically performed poorly at face recognition (compared to humans), the system employs a particularly suitable division of labor between human and computer. Sims system uses interactive evolution to create beautiful, abstract color images <ref> [Sim91] </ref>. The genetic code for an image is a Lisp expression representing a sequence of image-processing functions (i.e., functions that take as input a set of pixel values and associated coordinates, and produce new pixel values as output). <p> The mutation and mating operators restructure or modify the Lisp expressions and make random parameter changes. Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth <ref> [Sim91] </ref> [LP89].
Reference: [Sth91] <author> J. R. Smith. </author> <title> Designing Biomorphs with an Interactive Genetic Algorithm, </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 535-538, </pages> <address> 1991. </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: The new generation is again subjected to the aesthetic selection criteria of the user to produce the following generation. This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], <ref> [Sth91] </ref>, [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. <p> Other interactive evolution systems of note include: Dawkins, which uses a recursive genetic structure that produces varied, but highly characteristic insect-like forms [Daw87]; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms <ref> [Sth91] </ref>; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins [Opp89]. These systems use a variety of genetic representations to explore both infinite and large finite spaces.

Reference: [Ba93] <author> E. Baker. </author> <title> Summary: Evolving Line Drawings, </title> <booktitle> Proceedings of the Fifth International Conference on Genetic Algorithms, 1993. </booktitle> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], [Sth91], [BS93], <ref> [Ba93] </ref>). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]).
Reference: [BS93] <author> E. Baker and M. Seltzer. </author> <title> Evolving Line Drawings. </title> <institution> Harvard University Center for Research in Computing Technology, Technical Report-21-93, </institution> <year> 1993. </year>
Reference-contexts: This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], [Sth91], <ref> [BS93] </ref>, [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]).
Reference: [Bre85] <author> S. Brennan. </author> <title> Caricature Generator: The Dynamic Exaggeration of Faces by Computer. </title> <journal> Leonardo, </journal> <volume> Vol. 18, No.3, </volume> <pages> pp. 170-178, </pages> <year> 1985. </year>
Reference-contexts: They were typically evolved in fifteen to one hundred generations, usually taking five to thirty min 1. Brennan calculated average features from a large set of face drawings of real people, and constructed this average face for use in work on automating the creation of facial caricatures <ref> [Bre85] </ref>. The face drawings are related to each other (i.e., they were evolved during the same session), as are the butter y forms. drawings were produced automatically, with random choices made for the number of strokes, the stroke points, and stroke parameters.
Reference: [Bre86] <author> S. Brennan. </author> <title> Cited in Computer Recreations by A. K. Dewdney. </title> <journal> Scientific American, </journal> <volume> Vol. 225, </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: Since one can produce new sets of children from the same parent (s) repeatedly, the population size at any generation may be as large as the user desires. The computed average face (from <ref> [Bre86] </ref>) shown at the top of Figure 4 was used in experiments as an initial input drawing and is the sole original ancestor of all drawings presented in the remainder of this paper. 1 An average face is a useful initial input drawing because it provides a central point for evolving
Reference: [CJ91] <author> C. Caldwell and V. S. Johnston. </author> <title> Tracking a Criminal Suspect Through Face Space With a Genetic Algorithm. </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 416-421, </pages> <address> 1991. </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: The new generation is again subjected to the aesthetic selection criteria of the user to produce the following generation. This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], <ref> [CJ91] </ref>, [TL92], [Sth91], [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. <p> This feature of interactive evolution is used very effectively in a system by Caldwell and Johnston for allowing a crime victim to produce a facial composite of a criminal suspect <ref> [CJ91] </ref>. This system takes advantage of the remarkable human ability to recognize faces. A database of face parts (e.g., eyes, noses, mouths) is used to construct candidate faces, which are then rated by a human operator for their degree of likeness to the suspect. <p> This rating and procreation process is repeated until a likeness to the suspect is achieved. Caldwell and Johnston state that, while humans have excellent facial recognition ability, they have great difficulty in recalling facial characteristics with sufficient detail to provide an accurate composite <ref> [CJ91] </ref>. This is a perfect example of the ability to apply a complex fitness test without consciously understanding it. Since computers have historically performed poorly at face recognition (compared to humans), the system employs a particularly suitable division of labor between human and computer. <p> there are only two possible values (on or off) for every pixel in the drawing frame, and we use a 250 by 250 pixel square frame, there are a total of distinct phenotypes (over 18000 orders of magnitude larger than Caldwell and Johnstons search space of 34 billion possible composites <ref> [CJ91] </ref>). Figure 1 illus 2 1 O H S 107 146 12 45 2 S N B 110 157 5 43 has three separate marks, it consists of only two strokes. <p> The representation used in the Drawing Evolver is very general (i.e., it can represent any drawing at all) compared to Caldwell and Johnstons (whose genotype represents faces only) From Graphics Interface 94 Proceedings , Wayne Davis & Barry Joe Editors, Morgan Kaufmann Publishers 10 <ref> [CJ91] </ref>. But to limit our search to faces, the user must filter out the drawings that dont look face-like, while Caldwell and Johnstons users always see only valid faces.
Reference: [Daw87] <author> R. Dawkins. </author> <title> The Blind Watchmaker. W.W. </title> <publisher> Norton and Company, </publisher> <address> New York, London, </address> <year> 1987. </year>
Reference-contexts: 1 Introduction Interactive fitness evaluation for genetic algorithms was introduced by zoologist Richard Dawkins in his book, The Blind Watchmaker. The book describes a computer program for evolving images of creatures Dawkins calls biomorphs <ref> [Daw87] </ref>. Each biomorph is produced from a compact genetic code that specifies the creatures particular characteristics. Contained in the code is the essential information necessary to create a bit-mapped image of the creature on the computer screen. <p> This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins <ref> [Daw87] </ref>). An initial population of drawings, either generated randomly by the computer or input by the user, is displayed on the screen. From the displayed set the user selects one drawing for mutation or two drawings for mating. <p> Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth [Sim91] [LP89]. Other interactive evolution systems of note include: Dawkins, which uses a recursive genetic structure that produces varied, but highly characteristic insect-like forms <ref> [Daw87] </ref>; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms [Sth91]; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins [Opp89].
Reference: [Gol89] <author> D. E. Goldberg. </author> <title> Genetic Algorithms in Search Optimization and Machine Learning. </title> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: Since humans are often very good at processing and assessing pictures quickly, interactive evolution is particularly well suited to search problems whose candidate solutions can be represented visually. Traditionally a genetic algorithm (GA) requires the specification of survival fitness criteria to be evaluated by the computer <ref> [Gol89] </ref>. This is typically one of the most difficult tasks in designing a GA. With interactive From Graphics Interface 94 Proceedings , Wayne Davis & Barry Joe Editors, Morgan Kaufmann Publishers 2 evolution the user performs this step, applying whatever complicated measure of fitness is desired.
Reference: [LP89] <author> A. Lindenmeyer and P. Prusinkiewicz. </author> <title> Developmental Models of Multicellular Organisms: A Computer Graphics Perspective. In Artificial Life, edited by C. </title> <editor> G. Langton, </editor> <booktitle> Proc. </booktitle> <volume> Vol. VI, </volume> <pages> pages 221-250. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: The mutation and mating operators restructure or modify the Lisp expressions and make random parameter changes. Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth [Sim91] <ref> [LP89] </ref>.
Reference: [Opp89] <author> P. </author> <title> Oppenheimer, </title> <booktitle> The Artificial Menagerie. In Artificial Life, </booktitle> <editor> edited by C. G. Langton, </editor> <booktitle> Proc. </booktitle> <volume> Vol. VI, </volume> <pages> pages 221-250. </pages> <publisher> Addison-Wesley, </publisher> <year> 1989. </year>
Reference-contexts: varied, but highly characteristic insect-like forms [Daw87]; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms [Sth91]; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins <ref> [Opp89] </ref>. These systems use a variety of genetic representations to explore both infinite and large finite spaces. Each system relies on the ability to represent candidate solutions visually and on the human ability to evaluate these solutions quickly and in parallel.
Reference: [Sim91] <author> K. Sims. </author> <title> Artificial Evolution for Computer Graphics. </title> <journal> Computer Graphics, </journal> <volume> 25(4) </volume> <pages> 319-328, </pages> <month> July </month> <year> 1991. </year>
Reference-contexts: (<ref> [Sim91] </ref>, [CJ91], [TL92], [Sth91], [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. The user interface is similar to other systems (especially Sims [Sim91] and Dawkins [Daw87]). An initial population of drawings, either generated randomly by the computer or input by the user, is displayed on the screen. From the displayed set the user selects one drawing for mutation or two drawings for mating. <p> Despite this drawback, interactive evolution has been used to produce some astounding results that could not have been achieved easily by any other known method <ref> [Sim91] </ref>, [TL92]. The beauty of interactive evolution is that the user need only apply personal fitness criteria, not state or even understand them. <p> Since computers have historically performed poorly at face recognition (compared to humans), the system employs a particularly suitable division of labor between human and computer. Sims system uses interactive evolution to create beautiful, abstract color images <ref> [Sim91] </ref>. The genetic code for an image is a Lisp expression representing a sequence of image-processing functions (i.e., functions that take as input a set of pixel values and associated coordinates, and produce new pixel values as output). <p> The mutation and mating operators restructure or modify the Lisp expressions and make random parameter changes. Sims also evolves plant forms by applying interactive evolution to L-Systems, grammars that describe biological models of plant growth <ref> [Sim91] </ref> [LP89].
Reference: [Sth91] <author> J. R. Smith. </author> <title> Designing Biomorphs with an Interactive Genetic Algorithm, </title> <booktitle> Proceedings of the Fourth International Conference on Genetic Algorithms, </booktitle> <pages> pages 535-538, </pages> <address> 1991. </address> <publisher> Morgan Kaufmann Publishers. </publisher>
Reference-contexts: The new generation is again subjected to the aesthetic selection criteria of the user to produce the following generation. This cycle continues until the user evolves a pleasing creature. Dawkins idea has spawned several successful applications of interactive evolution to other image design and construction problems ([Sim91], [CJ91], [TL92], <ref> [Sth91] </ref>, [BS93], [Ba93]). This paper presents an interactive evolution system for creating line drawings. The genetic representation and definition of the genetic operators are substantially different from previous interactive evolution systems, and it produces correspondingly unique results. <p> Other interactive evolution systems of note include: Dawkins, which uses a recursive genetic structure that produces varied, but highly characteristic insect-like forms [Daw87]; Todd and Lathams, which uses constructive solid geometry techniques to evolve virtual sculptures [TL92]; Smiths, which uses a Fourier-series-based representation to produce bug-like curved line forms <ref> [Sth91] </ref>; and Oppenheimers, which produces life-like 3D tree forms using a recursive fractal representation similar to Dawkins [Opp89]. These systems use a variety of genetic representations to explore both infinite and large finite spaces.
Reference: [[TL92] <author> S. Todd and W. Latham. </author> <title> Evolutionary Art and Computers. </title> <publisher> Academic Press: Harcourt, Brace, </publisher> <address> Jovanov-ich, </address> <year> 1992. </year>
References-found: 23

