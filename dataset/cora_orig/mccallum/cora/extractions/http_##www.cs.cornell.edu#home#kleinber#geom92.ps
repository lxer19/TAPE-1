URL: http://www.cs.cornell.edu/home/kleinber/geom92.ps
Refering-URL: http://www.cs.cornell.edu/home/kleinber/kleinber.html
Root-URL: 
Phone: (2)  
Title: On Dynamic Voronoi Diagrams and the Minimum Hausdorff Distance for Point Sets Under Euclidean Motion
Author: Daniel P. Huttenlocher () Klara Kedem (;) and Jon M. Kleinberg () 
Note: This work was supported in part by NSF grant IRI-9057928 and matching funds from General Electric and Kodak, and in part by AFOSR under contract AFOSR-91-0328. The second author was also supported by the Eshkol grant 04601-90 from The Israeli Ministry of Science and Technology.  
Address: Ithaca, NY 14853, U.S.A.  Tel-Aviv University, Tel-Aviv 69978, Israel  
Affiliation: (1) Department of Computer Science Cornell University,  Department of Computer Science  
Abstract: We show that the dynamic Voronoi diagram of k sets of points in the plane, where each set consists of n points moving rigidly, has complexity O(n 2 k 2 s (k)) for some fixed s, where s (n) is the maximum length of a (n; s) Davenport-Schinzel sequence. This improves the result of Aonuma et. al., who show an upper bound of O(n 3 k 4 log fl k) for the complexity of such Voronoi diagrams. We then apply this result to the problem of finding the minimum Hausdorff distance between two point sets in the plane under Euclidean motion. We show that this distance can be computed in time O((m + n) 6 log(mn)), where the two sets contain m and n points respectively. 
Abstract-found: 1
Intro-found: 1
Reference: [AIIT] <author> Aonuma, H., Imai, H., Imai, K., and Tokuyama, T., </author> <title> "Maximin location of convex objects in a polygon and related dynamic Voronoi diagrams", </title> <booktitle> Sixth ACM Symposium on Computational Geometry, </booktitle> <year> 1990, </year> <pages> pp. 225-234. </pages>
Reference-contexts: This improves a result by Aonuma, Imai, Imai and Tokuyama <ref> [AIIT] </ref> who show an upper bound of O (n 3 k 4 log fl k) for the complexity of such Voronoi diagrams. When k is bounded by a constant then we get a bound of O (n 2 ), whereas [AIIT] get 2 O (n 3 ). <p> This improves a result by Aonuma, Imai, Imai and Tokuyama <ref> [AIIT] </ref> who show an upper bound of O (n 3 k 4 log fl k) for the complexity of such Voronoi diagrams. When k is bounded by a constant then we get a bound of O (n 2 ), whereas [AIIT] get 2 O (n 3 ). If there are n sets each with one point (which corresponds to the general dynamic Voronoi diagram problem) then our bound becomes O (n 2 s (n)), which is the same as that attained by [FL, GMR]. <p> In each of these cases we show that the complexity of the dynamic Voronoi diagram is O (n 2 ). (The same bounds for these cases were obtained by <ref> [AIIT] </ref>; however, we present our proofs because they are helpful in understanding the general case of k 4 moving sets.) 7 Claim 1 Given two sets of points in the plane T 1 and T 2 , jT 1 j; jT 2 j = n, each set moving rigidly in a <p> this case does not increase the above bound. (It is bounded by the total number of topological events in unions of three sets, which is at most 3 O (n 2 ), by Claim 2.) This improves the bound of O (n 3 k 4 log fl n) given in <ref> [AIIT] </ref>. Moreover, if k is bounded by a constant then we get a bound of O (n 2 ), whereas [AIIT] get O (n 3 ). <p> of three sets, which is at most 3 O (n 2 ), by Claim 2.) This improves the bound of O (n 3 k 4 log fl n) given in <ref> [AIIT] </ref>. Moreover, if k is bounded by a constant then we get a bound of O (n 2 ), whereas [AIIT] get O (n 3 ). For constant k, this bound is tight, in the sense that a lower bound of (n 2 ) can be demonstrated with just two rigidly moving point sets. <p> We showed that the number of topological changes to such a diagram is O (n 2 k 2 s (k)) for some fixed s, improving on the previous known bound of O (n 3 k 4 log fl k) <ref> [AIIT] </ref>. This involved proving a Lemma that is interesting in itself, on the complexity of Davenport-Schinzel sequences in which the alphabet is divided into `active' and `inactive' subsets. Our method for computing the minimum Hausdorff distance under rigid motion does not generalize easily to sets of segments in the plane.
Reference: [ASS] <author> Agarwal, P.K., Sharir, M., and Shor, P., </author> <title> "Sharp upper and lower bounds for the length of general Davenport-Schinzel sequences", </title> <journal> J. Combinatorial Theory, Series A, </journal> <volume> 52(1989), </volume> <pages> pp. 228274. </pages>
Reference-contexts: We show that the complexity of the dynamic Voronoi diagram of T = [ k i=1 T i is O (n 2 k 2 s (k)) for some fixed s, where s (n) is the maximum length of a (n; s) Davenport-Schinzel sequence <ref> [ASS, HS] </ref>). This improves a result by Aonuma, Imai, Imai and Tokuyama [AIIT] who show an upper bound of O (n 3 k 4 log fl k) for the complexity of such Voronoi diagrams. <p> We first prove a general lemma which is interesting in itself. We denote by DS (n; s) the (n; s) Davenport-Schinzel sequence with n symbols, a 1 ; : : : ; a n , where each pair of symbols can interchange at most s times (see <ref> [ASS, HS] </ref> for an overview of these sequences including bounds on their lengths). We note that the length of a DS (n; s) sequence is s (n). Let be a DS (n; s) sequence and let (j) denote the 9 jth entry in the sequence .
Reference: [AST] <author> Agarwal, P.K., Sharir, M., and Toledo, S., </author> <title> "Applications of parametric searching in geometric optimization", </title> <booktitle> to appear in Third ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1992. </year>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> If the sets contain line segments as well as points, then the difference between two sets under translation can be computed in time O (m 2 n 2 log 3 (mn)) <ref> [AST] </ref> for L 2 as the underlying metric, and in time O (m 2 n 2 ff (mn)) [HKS], for L 1 and L 1 as the underlying metrics (where ff (n) is the extremely slowly growing inverse Ackermann function). <p> Our method for computing the minimum Hausdorff distance under rigid motion does not generalize easily to sets of segments in the plane. One interesting question is thus whether the parametric search methods of <ref> [AST] </ref> that were used for solving the minimum Hausdorff distance for segments under translation will be useful for solving this problem as well.
Reference: [ABB] <author> Alt, H., Behrends, B. and Blomer, J., </author> <title> "Measuring the resemblance of polygonal shapes", </title> <type> manuscript. 19 </type>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> Under rigid body motion, the minimum Hausdorff distance between two polygons can be computed in time O ((mn) 4 (m + n) log (m + n)) <ref> [ABB] </ref>. In [HKS] the problem of computing the minimum Hausdorff distance under translation between sets A and B with m and n points respectively, is reduced to that of computing the upper envelope of m + n Voronoi surfaces of O (m + n) source points each. <p> The Hausdorff distance, H (A; B), can be trivially computed in time O (mn) for two point sets of size m and n respectively; with some care, this can be improved to O ((m + n) log (m + n)) <ref> [ABB] </ref>. Given two point sets A and B in the plane, we note that all relative configurations of these two sets under rigid motion can be obtained by the composition of a rotation about the origin and a translation.
Reference: [AMWW] <author> Alt, H., Mehlhorn, K., Wagener, H., and Welzl, E., </author> <title> "Congruence, similarity, and sym--metries of geometric objects", </title> <journal> Discrete and Computational Geometry, </journal> <volume> 3(1988), </volume> <pages> pp. 237-256. </pages>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> A problem closely related to computing D (A; B) is that of determining whether there exists an approximate congruence between two sets of points under rigid body motion <ref> [AMWW] </ref>. Formally, the problem is to determine whether there is a Euclidean motion E of B, a bijection l : B ! A, and a distance d = max (E (b); l (b)); (4) such that the distance d is less than some specified value *. <p> For two point sets in the plane with p points each, it can be determined in time O (p 8 ) whether there exists a motion E and a bijection l such that d &lt; * <ref> [AMWW] </ref>. In our method we measure the difference between two sets by minimizing the maximal mismatch between two point sets under Euclidean motion. The key difference is that the distance computation is not concerned with matching pairs of points.
Reference: [ACHKM] <author> Arkin, E., Chew, L.P., Huttenlocher, D.P., Kedem, K., and Mitchell, J.S.B., </author> <title> "An effi-ciently computable metric for comparing polygonal shapes", </title> <booktitle> Proc. First ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1990, </year> <pages> pp. 129-137. </pages>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> For applications in pattern matching and model-based recognition, it is important that a shape comparison function obey the metric properties (non-negativity, identity, symmetry and the triangle inequality) <ref> [ACHKM, Mu] </ref>. These properties correspond to our intuitive notions of shape resemblance. than they are to one another. For example, without the triangle inequality two highly 3 dissimilar `model' shapes can both be judged similar to some unknown shape, which is highly counter-intuitive.
Reference: [FL] <author> Fu, J-J., and Lee, R.C.T., </author> <title> "Voronoi Diagrams of Moving Points in the Plane", </title> <journal> Int. Journal of Computational Geometry & Applications, </journal> <volume> Vol 1(1), </volume> <month> March </month> <year> 1991, </year> <pages> pp. 23-32. </pages>
Reference-contexts: If there are n sets each with one point (which corresponds to the general dynamic Voronoi diagram problem) then our bound becomes O (n 2 s (n)), which is the same as that attained by <ref> [FL, GMR] </ref>. Our results on dynamic Voronoi diagrams depend on a new bound on the length of a special Davenport-Schinzel sequence (see Lemma 1 below), a result which is interesting in itself. This paper is organized as follows. <p> In what follows we take I to be [0; 1], without loss of generality. As in <ref> [FL, GMR] </ref> the motion is constrained by the following property, Property 1 Four points can become cocircular or collinear at most s times, where s is a constant. This property is achieved, for example, by motions that are low-degree polynomials. <p> The creation or destruction of an unbounded edge corresponds to three points becoming collinear on the convex hull of T . As in <ref> [FL, GMR] </ref>, we discuss only the changes in the bounded edges of the Voronoi diagram. The analysis of the unbounded edges follows analogously. First we consider two special cases, where T consists of either two or three subsets, each of which moves rigidly as just described.
Reference: [GMR] <author> Guibas, L.J., Mitchell, J.S.B., and Roos, T., </author> <title> "Voronoi diagrams of moving points in the plane", </title> <booktitle> 17th International Workshop on Graph-Theoretic Concepts in Computer Science, </booktitle> <month> June 17-19, </month> <year> 1991, </year> <note> Richterheim/Fischbachau (Germany), Lecture Notes in Computer Science, SpringerVerlag. </note>
Reference-contexts: If there are n sets each with one point (which corresponds to the general dynamic Voronoi diagram problem) then our bound becomes O (n 2 s (n)), which is the same as that attained by <ref> [FL, GMR] </ref>. Our results on dynamic Voronoi diagrams depend on a new bound on the length of a special Davenport-Schinzel sequence (see Lemma 1 below), a result which is interesting in itself. This paper is organized as follows. <p> In what follows we take I to be [0; 1], without loss of generality. As in <ref> [FL, GMR] </ref> the motion is constrained by the following property, Property 1 Four points can become cocircular or collinear at most s times, where s is a constant. This property is achieved, for example, by motions that are low-degree polynomials. <p> The creation or destruction of an unbounded edge corresponds to three points becoming collinear on the convex hull of T . As in <ref> [FL, GMR] </ref>, we discuss only the changes in the bounded edges of the Voronoi diagram. The analysis of the unbounded edges follows analogously. First we consider two special cases, where T consists of either two or three subsets, each of which moves rigidly as just described. <p> Step 2 involves computing dynamic Voronoi diagrams, for all the pairs, triples and quadruples of the sets S i . Each diagram can be computed in O (n 2 log n) time by using the method of <ref> [GMR] </ref>, which computes the dynamic Voronoi diagram of k points in time O (k log k) plus O (log k) time per a topological change. The topological changes (cocircularity events) are computed on the fly.
Reference: [GS] <author> Guibas, L.J.and Stolfi, J., </author> <title> "Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams", </title> <journal> ACM Transactions on Graphics, </journal> <volume> Vol 4(2), </volume> <month> April </month> <year> 1985, </year> <pages> pp. 74 - 123. </pages>
Reference: [HS] <author> Hart, S., and Sharir, M., </author> <title> "Non-linearity of Davenport-Schinzel sequences and of generalized path compression schemes", </title> <journal> Combinatorica 6(1986) pp. </journal> <pages> 151-177. </pages>
Reference-contexts: We show that the complexity of the dynamic Voronoi diagram of T = [ k i=1 T i is O (n 2 k 2 s (k)) for some fixed s, where s (n) is the maximum length of a (n; s) Davenport-Schinzel sequence <ref> [ASS, HS] </ref>). This improves a result by Aonuma, Imai, Imai and Tokuyama [AIIT] who show an upper bound of O (n 3 k 4 log fl k) for the complexity of such Voronoi diagrams. <p> We first prove a general lemma which is interesting in itself. We denote by DS (n; s) the (n; s) Davenport-Schinzel sequence with n symbols, a 1 ; : : : ; a n , where each pair of symbols can interchange at most s times (see <ref> [ASS, HS] </ref> for an overview of these sequences including bounds on their lengths). We note that the length of a DS (n; s) sequence is s (n). Let be a DS (n; s) sequence and let (j) denote the 9 jth entry in the sequence .
Reference: [HK] <author> Huttenlocher, D.P., and Kedem, K., </author> <title> "Efficiently computing the Hausdorff distance for point sets under translation", </title> <booktitle> Sixth ACM Symposium on Computational Geometry, </booktitle> <year> 1990, </year> <pages> pp. 340-349. </pages>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> The minimum distance between sets of points under translation in the plane can be computed in time O (mn (m + n)ff (mn) log (mn)) where m and n are, as above, the numbers of points in the two sets being compared <ref> [HK, HKS] </ref>. <p> That is, the set A is (temporarily) at some fixed orientation, and the set B is allowed to translate. This is thus the problem of computing the Hausdorff distance under translation, as considered by <ref> [HK, HKS] </ref>.
Reference: [HKS] <author> Huttenlocher, D.P., Kedem, K. and Sharir, M. </author> <title> "The upper envelope of Voronoi surfaces and its applications", </title> <booktitle> Proceedings of the Seventh ACM Symposium on Computational Geometry, </booktitle> <year> 1991, </year> <pages> pp 194-203. </pages>
Reference-contexts: 1. Introduction Determining the degree to which two shapes differ from one another is a central problem in pattern recognition and machine vision. Recently a number of papers in computational geometry have investigated various aspects of the problem of measuring the difference between shapes (e.g., <ref> [ABB, AMWW, AST, ACHKM, HK, HKS] </ref>). In general, two geometric objects A and B are considered to have the same shape if there exists a transformation g 2 G such that g (A) = B, where G is a given transformation group. <p> The minimum distance between sets of points under translation in the plane can be computed in time O (mn (m + n)ff (mn) log (mn)) where m and n are, as above, the numbers of points in the two sets being compared <ref> [HK, HKS] </ref>. <p> If the sets contain line segments as well as points, then the difference between two sets under translation can be computed in time O (m 2 n 2 log 3 (mn)) [AST] for L 2 as the underlying metric, and in time O (m 2 n 2 ff (mn)) <ref> [HKS] </ref>, for L 1 and L 1 as the underlying metrics (where ff (n) is the extremely slowly growing inverse Ackermann function). Under rigid body motion, the minimum Hausdorff distance between two polygons can be computed in time O ((mn) 4 (m + n) log (m + n)) [ABB]. In [HKS] <p> <ref> [HKS] </ref>, for L 1 and L 1 as the underlying metrics (where ff (n) is the extremely slowly growing inverse Ackermann function). Under rigid body motion, the minimum Hausdorff distance between two polygons can be computed in time O ((mn) 4 (m + n) log (m + n)) [ABB]. In [HKS] the problem of computing the minimum Hausdorff distance under translation between sets A and B with m and n points respectively, is reduced to that of computing the upper envelope of m + n Voronoi surfaces of O (m + n) source points each. <p> For example, without the triangle inequality two highly 3 dissimilar `model' shapes can both be judged similar to some unknown shape, which is highly counter-intuitive. We note that D (A; B) obeys the metric properties, and this can be shown by straightforward substitution arguments analogous to those in <ref> [HKS] </ref> where it is shown that the minimum Hausdorff distance under translation obeys metric properties. A problem closely related to computing D (A; B) is that of determining whether there exists an approximate congruence between two sets of points under rigid body motion [AMWW]. <p> That is, the set A is (temporarily) at some fixed orientation, and the set B is allowed to translate. This is thus the problem of computing the Hausdorff distance under translation, as considered by <ref> [HK, HKS] </ref>. <p> That is, the set A is (temporarily) at some fixed orientation, and the set B is allowed to translate. This is thus the problem of computing the Hausdorff distance under translation, as considered by [HK, HKS]. Following <ref> [HKS] </ref>, we note that if the set R a i B is denoted by S i; (i.e., S i; = fR a i b j jb j 2 Bg) then d i; (x) = min (p; x); where we use the notation d i; (x) rather than d i (x; ) <p> The local maxima of this surface (where x is equidistant from two or more points of S i; ) occur by definition for values of x that lie along the edges of the Voronoi diagram of S i; . The basic observation of <ref> [HKS] </ref> was that the upper envelope of a set of d i; (x) functions could be completely described by the pairwise Voronoi diagrams Vor (S i; [ S j; ) for all i 6= j. <p> Fact 1 Using the above notation, the upper envelope, max i d i; (x) is equal to d i; (x) for x 2 F if and only if x 2 F Q. Moreover, the minima of the upper envelope are all attained along @Q. <ref> [HKS] </ref>. q Q j Q l Thus for any fixed , the local minima of f A (x; ) (and hence the global minimum) can be determined by simply computing the pairwise Voronoi diagrams of the sets S i; for all i 6= j, and then computing @Q (the boundary of <p> In <ref> [HKS] </ref> it was shown that the total complexity of @Q over all the source points is O (m 2 nff (mn)), where there are m sets S i; each with n points. Moreover, the computation of the minimum can be done in time O (m 2 nff (mn) log (mn)). <p> The algorithm consists of two stages. The first stage is an initialization step, in which we compute the boundaries of the cells Q for the initial orientation = 0 and sort the edges of each boundary @Q in a clockwise order. This part of the initialization was done in <ref> [HKS] </ref> and we use their algorithm for it. For each source point q we maintain the boundary @Q as a clockwise ordered list of edges. Each edge is labeled by a quintuple (p; q; r; s; 0) as described in Section 4. <p> Each edge is labeled by a quintuple (p; q; r; s; 0) as described in Section 4. It is clear that each boundary @Q is star-shaped with respect to its source q, at any given orientation (cf. <ref> [HKS] </ref>). Hence, maintaining the edges of @Q in a clockwise order, gives also an angularly sorted list of the vertices of @Q around q. This is crucial for the updating stage of the algorithm where we will need a fast (logarithmic time) insertion and deletion of edges of @Q. <p> We outline the algorithm schematically: Stage 1: Initialization. 1. Compute the boundary of Q = [ j Q j for each source q in each set S i at = 0, using the method of <ref> [HKS] </ref>. For each source, store the boundary as a clockwise ordered list of edges and vertices. Each edge is stored as the quintuple (p; q; r; s; ), where = 0 for these initial edges. 2. <p> Time and Space Complexity Analysis. Recall that we are computing the directed Hausdorff distance h (R A; B x), where jAj = m and jBj = n. The initialization stage is straightforward to analyze. In step 1 we use the method of <ref> [HKS] </ref> to compute the initial cell boundaries @Q of the cells around all the points q (for all the points q 2 S i , where S i = a i B, i = 1; : : : ; m) in time O (m 2 nff (mn) log (mn)).
Reference: [Mu] <author> Mumford, D., </author> <title> "The problem of robust shape descriptors", </title> <booktitle> First Intl. Conf. on Computer Vision, </booktitle> <publisher> IEEE Computer Soc. Press, </publisher> <year> 1987, </year> <pages> pp. 602-606. 20 </pages>
Reference-contexts: For applications in pattern matching and model-based recognition, it is important that a shape comparison function obey the metric properties (non-negativity, identity, symmetry and the triangle inequality) <ref> [ACHKM, Mu] </ref>. These properties correspond to our intuitive notions of shape resemblance. than they are to one another. For example, without the triangle inequality two highly 3 dissimilar `model' shapes can both be judged similar to some unknown shape, which is highly counter-intuitive.
References-found: 13

