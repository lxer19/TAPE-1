URL: http://mml.cs.ucla.edu/~santos/mm98.ps
Refering-URL: http://mml.cs.ucla.edu/~santos/
Root-URL: http://www.cs.ucla.edu
Email: fsantos,muntzg@cs.ucla.edu  
Title: Performance Analysis of the RIO Multimedia Storage System with Heterogeneous Disk Configurations  
Author: Jose Renato Santos Richard Muntz 
Affiliation: UCLA Computer Science Department Multimedia Laboratory  
Abstract: RIO is a multimedia object server which manages a set of parallel disks and supports real-time data delivery with statistical delay guarantees. RIO uses random data allocation on disks combined with partial replication to achieve load balance and high performance. In this paper we analyze the performance of RIO when the set of disks used to store data blocks is not homogeneous, having both different bandwidths and different storage capacities. The basic problem to be addressed for heterogeneous configurations is that, on average, the fraction of the load directed to each disk is proportional to the amount of data stored on it, which may not be proportional to the disk bandwidth. This may cause some disks to be overloaded, with long queues and delays, even though bandwidth is available on other disks. This reduces the system throughput or increases the delay bound that can be guaranteed. This problem arises whenever the bandwidth to space ratio (BSR) is not uniform across all disks. In RIO this problem is addressed by replicating a fraction of data blocks. Replication allows some of the load of the disks with smaller BSR to be redirected to the disks with higher BSR, reducing or eliminating the long range load imbalance, depending on the amount of replication. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Berson, R. Muntz, S. Ghandeharizadeh, X. </author> <title> Ju "Staggered Striping in Multimedia Information Systems", </title> <booktitle> SIGMOD 94, </booktitle> <address> p.79-90, </address> <month> May </month> <year> 1994. </year>
Reference: [2] <author> S. Berson, R. Muntz, W. Wong, </author> <title> "Randomized Data Alloca tion for Real-time Disk I/O", </title> <booktitle> Compcon 96, </booktitle> <address> p.286-90, </address> <year> 1996. </year>
Reference-contexts: The most widely used scheme is data stripping [1][4]. We, on other hand, have proposed a random allocation of data to disks as a means to support more general work-loads <ref> [2] </ref> [12]. Nevertheless, we have shown in [12] that even for predictable workloads such as video playback, despite the randomness of data allocation, our system has performance equivalent to, and in some cases even better than, conventional stripping schemes if replication is combined with random allocation.
Reference: [3] <author> Birk, Y., </author> <title> "Random RAIDs with Selective Exploitation of Re dundancy for High Performance Video Servers", </title> <address> NOSSDAV 97 , St. Louis MO, p. 13-23, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: allocations for supporting video playback [14]<ref> [3] </ref>[10]. However, none of them considers heterogeneous disks. Tewari et all [14] analyze the performance of a clustered video server with random allocation of data blocks. However, they do not consider data replication and do not address the problem of short term load imbalances. Birk [3] describe a high performance video server that uses random distribution of blocks on RAID systems. The major difference with our work, is that he explores redundancy of parity groups for load balancing, as opposed to replication.
Reference: [4] <author> A.L. Chervenak, A.A. Patterson, R.H. Katz, </author> <title> "Choosing the Best Storage System for Video Service", </title> <booktitle> ACM Multimedia 95, </booktitle> <address> p.109-119, </address> <year> 1995. </year>
Reference: [5] <author> A. Dan, D. Sitaram,, </author> <title> "An Online Video Placement Policy based on Bandwidth to Space Ratio (BSR)" SIGMOD 95, </title> <address> San Jose CA, p.376-85, </address> <year> 1995. </year>
Reference-contexts: In general, some of the disks may operate at a higher utilization than others, having longer queues and delays. This problem arises whenever the ratio of disk bandwidth and storage capacity of each disk, called BSR (Bandwidth to Space Ratio) <ref> [5] </ref>, is not the same in all disks. In this paper we investigate the effectiveness of addressing this problem using data replication. <p> In particular, most of the improvement is obtained when customers only have two choices. Heterogeneous disks on video servers is considered in [15] and <ref> [5] </ref>. In [15], the authors consider the problem of using heterogeneous disks to support video on demand on systems based on conventional striping techniques, which are known to require a homogeneous set of disks. <p> However, their approach assumes that the disks have similar bandwidth to space ratios (BSR), and if that is not the case some storage space or disk bandwidth has to be wasted. In <ref> [5] </ref> the authors exploit the relative frequency of access to data objects to deal with different BSR. The authors place a higher percentage of "hot" data on disks with higher BSR than on disks with lower BSR, such that the predicted load on a disk is proportional to its bandwidth. <p> We have shown that RIO can be effectively used with heterogeneous disk configurations, without considering popularity of data objects, which is the approach used by other multimedia storage servers <ref> [5] </ref>. Our approach thus avoids all problems involved in accurately predicting object popularity and avoids the cost of reconfiguring the system when data popularity changes. In summary, RIO provides a simple but effective way of dealing with heterogeneous disks.
Reference: [6] <author> A. Dan, M. Kienzle, D. Sitaram, </author> <title> "A Dynamic Policy of Seg ment Replication for Load-Balancing in Video-on-Demand Servers", Multimedia Systems, </title> <type> vol.3, no.3, </type> <institution> p.93-103, </institution> <month> July </month> <year> 1995. </year>
Reference-contexts: Moreover, the actual load fluctuates over time and the predicted load can at best estimate the average load, but not the actual load from one minute to the next. Dynamically replicating objects based on current demand has been proposed as a way to reduce this problem <ref> [6] </ref>, but this requires additional disk bandwidth for copying data online, and can not deal with high frequency variations. Our approach avoids these problems, since it does not rely on data popularity.
Reference: [7] <author> D.L. Eager, E.D. Lazowska, J. Zahorjan, </author> <title> "Adaptive Load Sharing in Homogeneous Distributed Systems", </title> <journal> IEEE Trans. on Software Engineering, </journal> <pages> pp. 662-675, </pages> <year> 1986. </year>
Reference-contexts: The routing of requests for replicated blocks to the least loaded disk is easily mapped to a problem that has been studied in the computer science literature for load balancing in distributed systems <ref> [7] </ref>, that is often referred to as "random probing".
Reference: [8] <author> F. Fabbrocino, J.R. Santos, and R. Muntz, </author> <title> "An Implicitly Scalable Real-Time Multimedia Storage Server" UCLA Com puter Science Dept. </title> <type> Technical Report #980009, </type> <month> March </month> <year> 1998. </year>
Reference-contexts: Our current prototype is implemented on a SUN E4000 SMP. We are currently porting RIO to a distributed architecture implemented on a cluster of Pentium based workstations <ref> [8] </ref>. We have previously assumed a homogeneous set of disks, It's reasonable to assume that a new system will be configured with a set of homogeneous disks.
Reference: [9] <author> E. Grochowski, </author> <title> R.F. Hoyt "Future Trends in Hard Disk Drives", </title> <journal> IEEE Transactions on Magnetics, </journal> <volume> Vol. 32, No. 3, </volume> <month> May </month> <year> 1996. </year>
Reference-contexts: Storage capacity in disk drives has been increasing at a rate of approximately 60% a year, while disk bandwidth has been increasing at a rate of only approximately 40% a year <ref> [9] </ref>. Assuming that this trend will continue in the next few years, we can predict the bandwidth and storage capacity of the new disks at the time of an eventual upgrade.
Reference: [10] <author> J. Korst, </author> <title> "Random Duplicated Assignment: An Alternative to Striping in Video Servers" ACM Multimedia 97, </title> <address> Seattle WA, p.219-26, </address> <year> 1997. </year>
Reference-contexts: Birk [3] describe a high performance video server that uses random distribution of blocks on RAID systems. The major difference with our work, is that he explores redundancy of parity groups for load balancing, as opposed to replication. Korst <ref> [10] </ref> compares different static algorithms for optimally distributing requests to randomly replicated data blocks.
Reference: [11] <author> M.D. Mitzenmacher, </author> <title> "The Power of Two Choices in Ran domized Load Balancing", </title> <type> PhD Dissertation, </type> <institution> University of California at Berkeley, Computer Science Department, </institution> <year> 1996. </year>
Reference-contexts: The most recent work related to this problem is that of Mitzenmacher <ref> [11] </ref> which has a detailed analysis of several variations of a multi-server queuing model in which customers can randomly probe d servers and join the one with the shortest queue.
Reference: [12] <author> R. Muntz, J.R. Santos, S. Berson, </author> <title> "A Parallel Disk Storage System for Real-time Multimedia Applications", </title> <note> To appear in the Special Issue on Multimedia Computing Systems of the International Journal of Intelligent Systems, </note> <year> 1998. </year>
Reference-contexts: The system, named RIO (Randomized I/O), supports high data rates and many simultaneous data streams by using the aggregate bandwidth of a collection of parallel disks <ref> [12] </ref>. <p> Finally in section 5 we present our conclusion. 2 The RIO Storage System 2.1 System Overview In this section we describe the principal characteristics of RIO. For a more detailed description of RIO the reader is referred to <ref> [12] </ref>. Although RIO supports both read and write operations, we assume that most of the time users are reading data, while writing is done infrequently and when it is done it is usually a non real-time operation (e.g., loading a new object). <p> The most widely used scheme is data stripping [1][4]. We, on other hand, have proposed a random allocation of data to disks as a means to support more general work-loads [2] <ref> [12] </ref>. Nevertheless, we have shown in [12] that even for predictable workloads such as video playback, despite the randomness of data allocation, our system has performance equivalent to, and in some cases even better than, conventional stripping schemes if replication is combined with random allocation. <p> The most widely used scheme is data stripping [1][4]. We, on other hand, have proposed a random allocation of data to disks as a means to support more general work-loads [2] <ref> [12] </ref>. Nevertheless, we have shown in [12] that even for predictable workloads such as video playback, despite the randomness of data allocation, our system has performance equivalent to, and in some cases even better than, conventional stripping schemes if replication is combined with random allocation.
Reference: [13] <author> J.R. Santos, R. Muntz, </author> <title> "Using Heterogeneous Disks in RIO Multimedia Storage System" UCLA Computer Science De partment Technical Report #980011, </title> <month> March </month> <year> 1998. </year>
Reference-contexts: Configurations with more than two disk types are studied in <ref> [13] </ref>. Assume the disks are divided in two sets of homogeneous disks, i.e., each set contains disks of only one type. Let S 1 and S 2 be the aggregate storage space available on each disk set, and B 1 and B 2 their respective aggregate bandwidths (blocks/sec). <p> We are interested in the region of this space where it is possible to use replication to balance the long range load, and what is the minimum replication required for each point in this region to achieve a given maximum disk utilization . In <ref> [13] </ref>, we derive the minimum amount of replication r necessary to achieve a disk utilization , in all points of space (ff; fi). The final result is summarized below.
Reference: [14] <author> R. Tewari, R. Mukherjee, </author> <title> D.M. Dias, H.M. Vin, "Design and Performance Tradeoffs in Clustered Video Servers" Proceed ings of the International Conference on Multimedia Comput ing and Systems,Los Alamitos, </title> <address> CA, p.144-50, </address> <year> 1996. </year>
Reference-contexts: More recently, other authors have also adopted random data allocations for supporting video playback <ref> [14] </ref>[3][10]. However, none of them considers heterogeneous disks. Tewari et all [14] analyze the performance of a clustered video server with random allocation of data blocks. However, they do not consider data replication and do not address the problem of short term load imbalances. Birk [3] describe a high performance video server that uses random distribution of blocks on RAID systems.
Reference: [15] <author> R. Zimmermann, S. Ghandeharizadeh, </author> <title> "Continuous Display Using Heterogeneous Disk-Subsystems". </title> <booktitle> ACM Multimedia 97), </booktitle> <address> Seattle, WA, </address> <pages> pp. 227-238, </pages> <month> Nov. </month> <year> 1997. </year> <month> 6 </month>
Reference-contexts: In particular, most of the improvement is obtained when customers only have two choices. Heterogeneous disks on video servers is considered in <ref> [15] </ref> and [5]. In [15], the authors consider the problem of using heterogeneous disks to support video on demand on systems based on conventional striping techniques, which are known to require a homogeneous set of disks. <p> In particular, most of the improvement is obtained when customers only have two choices. Heterogeneous disks on video servers is considered in <ref> [15] </ref> and [5]. In [15], the authors consider the problem of using heterogeneous disks to support video on demand on systems based on conventional striping techniques, which are known to require a homogeneous set of disks.
References-found: 15

