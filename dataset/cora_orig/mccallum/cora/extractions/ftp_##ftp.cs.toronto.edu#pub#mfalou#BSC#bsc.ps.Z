URL: ftp://ftp.cs.toronto.edu/pub/mfalou/BSC/bsc.ps.Z
Refering-URL: http://www.cs.toronto.edu/~mfalou/papers.html
Root-URL: http://www.cs.toronto.edu
Email: mfalou@cs.toronto.edu pankaj@comm.toronto.edu kcs@cs.toronto.edu  
Title: Multicasting in Directed Graphs  
Author: Michalis Faloutsos Rajesh Pankaj Kenneth C. Sevcik 
Affiliation: University of Toronto Dept. of Computer Science Dept. of Electrical Eng. Dept. of Computer Science  
Abstract: The multicast problem is a significant problem for the efficient use of networks. Although it has been studied extensively, most previous work assumes undirected graphs. In this paper, we study the multicast problem on directed graphs. We show that even the best heuristics of the undirected case do not perform well on directed graphs. Namely, they can perform as bad as if we would route every participant separately in oblivion of the others. Finally, we extend the algorithms for directed graphs, and study their performance. 
Abstract-found: 1
Intro-found: 1
Reference: [DL93] <author> Matthew Doar and Ian Leslie. </author> <title> How bad is naive multicast routing? Proc. </title> <journal> IEEE INFO-COM, </journal> <pages> pages 82-89, </pages> <year> 1993. </year>
Reference-contexts: Ev--ery point corresponds to a node, and the edges are introduced by considering all possible node pairs and favoring probabilistically the pairs whose euclidean distance is small. A detailed description of the creation of such graphs can be found in a work by Doar and Leslie <ref> [DL93] </ref>. We choose the weights of an edge to be a uniformly distributed number. Finally, in order to make the graph directed, we transform every edges to two opposite (directed) edges.
Reference: [DW72] <author> S.E. Dreyfus and R.A. Wagner. </author> <title> The Steiner problem in graphs. </title> <journal> Networks, </journal> <volume> 1 </volume> <pages> 195-207, </pages> <year> 1972. </year>
Reference-contexts: Given an undirected weighted graph G (V; E) and a subset of participant nodes S V , we want to find the minimum weight tree that spans the participants. The problem is NP-complete and algorithms for the accurate solution have at least O (N 3 M ) computational complexity <ref> [DW72] </ref>, which raises the need for good polynomial complexity approximations. A common measure of how good such an approximation is the worst-case inefficiency (WCI) of a mul-ticast algorithm that is defined as the maximum ratio of the cost of the tree of the algorithm over the optimal one.
Reference: [KMB81] <author> L. Kou, G. Markowsky, and L. Berman. </author> <title> A fast algorithm for steiner trees. </title> <journal> Acta Infor-matica, Springer-Verlag, </journal> <volume> 15 </volume> <pages> 141-145, </pages> <year> 1981. </year>
Reference-contexts: A number of algorithms exist with a WCI bounded by 2 [TM80] <ref> [KMB81] </ref> [RSC86] [Meh88]. A comprehensive survey of the algorithms can be found by Winter [Win87]. The union of the shortest paths between source and destination forms also a solution with a WCI of O (M ). <p> At each step we connect the participant that is nearest to the partial multicast tree. We call this algorithm Nearest Participant First (N P F ). Another greedy heuristic was proposed by Kou et al. in <ref> [KMB81] </ref>. This algorithm finds the minimum spanning tree on graph G 0 (S; E 0 ), which is the complete graph that has only the participants of the original graph and the weights of the edges are equal to the weight of the shortest path between the participants. <p> We can notice the following special cases: 1. k = 1. It is the unidirectional case for which we get: T 2 (1 1 M )OP T . Note that this is the tight theoretical bound for the undirected problem as proven by Kou et al. <ref> [KMB81] </ref>. In this case M is the number of leaves in the optimal tree, as required in the bound for the undirected case. 2. k ! 1. It is the case where we have one way links, for which we get T M OP T .
Reference: [Meh88] <author> Kurt Mehlhorn. </author> <title> A faster approximation algorithm for the Steiner problem in graphs. </title> <journal> Information Processing Letters, </journal> <pages> pages 125-128, </pages> <year> 1988. </year>
Reference-contexts: A number of algorithms exist with a WCI bounded by 2 [TM80] [KMB81] [RSC86] <ref> [Meh88] </ref>. A comprehensive survey of the algorithms can be found by Winter [Win87]. The union of the shortest paths between source and destination forms also a solution with a WCI of O (M ).
Reference: [Ram96] <author> S. Ramanathan. </author> <title> An algorithms for multicast tree generation in networks with asummetric links. </title> <booktitle> Proc. IEEE INFOCOM '96, </booktitle> <pages> pages 337-344, </pages> <year> 1996. </year>
Reference-contexts: Furthermore, communication links are not necessarily bidirectional. Without loss of generality, we can assume that for every pair of nodes we have at most one directed edge for each direction. Recently, Ramanathan <ref> [Ram96] </ref> studied the directed multicast problem (DMP) and proved that a constant-factor approximation algorithm is highly unlikely. The proof is an elegant and short reduction of the DMP from the Minimum Set Cover. In this paper, we study the performance of the algorithms by offering lower and upper bounds. <p> Thus, T v2S d (s; v) M The proof that T OP T 2 k (T OP T ) can be found in an article by Ramanathan <ref> [Ram96] </ref>. It is worth noting that P d max is bounded by M . We show how bad the WCI of the algorithms can be by constructing a family of graphs. <p> We also introduce a metric for the asymmetry of the edges between nodes that we call K (G), which is defined as the maximum ratio between the directed-edge weights between a pair of nodes. Recall that it is highly improbable <ref> [Ram96] </ref> that there exists a constant-factor approximation algorithm with polynomial run-time complexity. We extend two greedy approximation algorithms of the undirected case to the directed one.
Reference: [RSC86] <author> V. J. Rayward-Smith and A. Clare. </author> <title> On finding steiner vertices. </title> <journal> Networks, </journal> <volume> 16 </volume> <pages> 283-294, </pages> <year> 1986. </year>
Reference-contexts: A number of algorithms exist with a WCI bounded by 2 [TM80] [KMB81] <ref> [RSC86] </ref> [Meh88]. A comprehensive survey of the algorithms can be found by Winter [Win87]. The union of the shortest paths between source and destination forms also a solution with a WCI of O (M ).
Reference: [TM80] <author> H. Takahashi and A. </author> <title> Matsuyama. An ap-proxiamte solution for the Steiner problem in graphs. </title> <journal> Math. Japonica, </journal> <volume> 24(6) </volume> <pages> 573-577, </pages> <year> 1980. </year>
Reference-contexts: A common measure of how good such an approximation is the worst-case inefficiency (WCI) of a mul-ticast algorithm that is defined as the maximum ratio of the cost of the tree of the algorithm over the optimal one. A number of algorithms exist with a WCI bounded by 2 <ref> [TM80] </ref> [KMB81] [RSC86] [Meh88]. A comprehensive survey of the algorithms can be found by Winter [Win87]. The union of the shortest paths between source and destination forms also a solution with a WCI of O (M ). <p> We call this algorithm Shortest Paths Note that Shortest Paths routes every destination separately in oblivion of the other destinations. A greedy and intuitive algorithm for the multicast problem was suggested by Takahashi and Matsuyama <ref> [TM80] </ref>. We start from the root and construct the mul ticast tree, that we denote as MT, by adding one participant at a time. At each step we connect the participant that is nearest to the partial multicast tree. We call this algorithm Nearest Participant First (N P F ).
Reference: [Win87] <author> P. Winter. </author> <title> Steiner problem in networks: a survey. </title> <journal> Networks, </journal> <volume> 17 </volume> <pages> 129-167, </pages> <year> 1987. </year>
Reference-contexts: A number of algorithms exist with a WCI bounded by 2 [TM80] [KMB81] [RSC86] [Meh88]. A comprehensive survey of the algorithms can be found by Winter <ref> [Win87] </ref>. The union of the shortest paths between source and destination forms also a solution with a WCI of O (M ). We call this algorithm Shortest Paths Note that Shortest Paths routes every destination separately in oblivion of the other destinations.
References-found: 8

