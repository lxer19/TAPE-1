URL: http://www-db.stanford.edu/~sergey/ddm.ps
Refering-URL: http://google.stanford.edu/google_papers.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: fsergey,pageg@cs.stanford.edu  
Title: Dynamic Data Mining: Exploring Large Rule Spaces by Sampling  
Author: Sergey Brin and Lawrence Page 
Date: February 23, 1998  
Address: Stanford University  
Affiliation: Department of Computer Science  
Note: Paper number 261  
Abstract: A great challenge for data mining techniques is the huge space of potential rules which can be generated. If there are tens of thousands of items, then potential rules involving three items number in the trillions. Traditional data mining techniques rely on downward-closed measures such as support to prune the space of rules. However, in many applications, such pruning techniques either do not sufficiently reduce the space of rules, or they are overly restrictive. We propose a new solution to this problem, called Dynamic Data Mining (DDM). DDM foregoes the completeness offered by traditional techniques based on downward-closed measures in favor of the ability to drill deep into the space of rules and provide the user with a better view of the structure present in a data set. Instead of a single determinstic run, DDM runs continuously, exploring more and more of the rule space. Instead of using a downward-closed measure such as support to guide its exploration, DDM uses a user-defined measure called weight, which is not restricted to be downward closed. The exploration is guided by a heuristic called the Heavy Edge Property. The system incorporates user feedback by allowing weight to be redefined dynamically. We test the system on a particularly difficult data set theword usage in a large subset of the World Wide Web. We find that Dynamic Data Mining is an effective tool for mining such difficult data sets.
Abstract-found: 1
Intro-found: 1
Reference: [AIS93] <author> R. Agrawal, T. Imilienski, and A. Swami. </author> <title> Mining Association Rules between Sets of Items in Large Databases. </title> <booktitle> Proc. of the ACM SIGMOD Int'l Conf. on Management of Data, </booktitle> <pages> pages 207-216, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
Reference: [AS94] <author> R. Agrawal and R. Srikant. </author> <title> Fast algorithms for mining association rules. </title> <booktitle> In Proceedings of the 20th VLDB Conference, </booktitle> <address> Santiago, Chile, </address> <year> 1994. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced. <p> If curbasketnum since ever reaches the total number of baskets, we mark the itemset done and stop counting it. The support of an itemset may be calculated as count/(curbasketnum-since). * For efficient counting, the itemsets are kept in a hash tree <ref> [AS94] </ref>. * The AddItemset function adds a new itemset to the hash tree and setting its count to 0 and its since value to curbasketnum. * The DeleteItemset function removes the itemset from the hash tree, making sure to clear out all of its memory so new itemsets can be added.
Reference: [AS96a] <author> R. Agrawal and J. Shafer. </author> <title> Parallel Mining of Association Rules: Design Implementation and Experience. </title> <type> Technical report, </type> <institution> IBM Research Division, Almaden, California, </institution> <month> February </month> <year> 1996. </year>
Reference-contexts: Recent papers dealing with supermarket or supermarket-like data report tens of thousands of items with an average of 5 to 20 items per basket in a database of millions of transactions <ref> [AS96a] </ref>. Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95]. <p> Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
Reference: [AS96b] <author> R. Agrawal and J. C. Shafer. </author> <title> Parallel mining of association rules. </title> <journal> Ieee Trans. On Knowledge And Data Engineering, </journal> <volume> 8 </volume> <pages> 962-969, </pages> <year> 1996. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
Reference: [AY] <author> Charu Aggarwal and Phillip Yu. </author> <title> A new framework for itemset generation. </title> <note> In PODS 1998, to appear. </note>
Reference-contexts: This is usually the biggest cost of the data mining operation. 3 niques. However, they are invariably either measures which are downward closed or are bounded by a downward-closed measure. These measures include support, 2 [BMS97], 6 and collective strength <ref> [AY] </ref>. However, what users in practice find interesting may not be bounded by any downward-closed measure, at least not one that is tight enough to make exhaustive search feasible. Many current definitions of interestingness are motivated by the desire to incorporate some kind of downward closedness.
Reference: [Bea96] <author> David M. Beazley. SWIG: </author> <title> An easy to use tool for integrating scripting languages with C and C++. </title> <booktitle> In USENIX Association, editor, 4th Annual Tcl/Tk Workshop '96, </booktitle> <address> July 10-13, 1996. Monterey, CA, </address> <pages> pages 129-139, </pages> <address> Berkeley, CA, USA, </address> <month> July </month> <year> 1996. </year> <booktitle> USENIX. </booktitle>
Reference-contexts: The Dynamic Itemset Counting Engine (DICE) is implemented in C++, since it is performance critical. The Itemset Manager is considerably more complex but less performance critical so it is implemented in Python. The DICE is wrapped into a python module using SWIG <ref> [Bea96] </ref> so the Itemset Manager can access its functions and variables. 11 4.1 The User Interface For the user interface, the Itemset Manager runs as an HTTP server. This way many users can interact with the Itemset Manager at the same time, making collaborative data mining possible.
Reference: [BMS97] <author> Sergey Brin, Rajeev Motwani, and Craig Silverstein. </author> <title> Beyond market baskets: Generalizing association rules to correlations. </title> <booktitle> SIGMOD Record (ACM Special Interest Group on Management of Data), </booktitle> <address> 26(2):265, </address> <year> 1997. </year>
Reference-contexts: This is usually the biggest cost of the data mining operation. 3 niques. However, they are invariably either measures which are downward closed or are bounded by a downward-closed measure. These measures include support, 2 <ref> [BMS97] </ref>, 6 and collective strength [AY]. However, what users in practice find interesting may not be bounded by any downward-closed measure, at least not one that is tight enough to make exhaustive search feasible.
Reference: [BMUT97] <author> Sergey Brin, Rajeev Motwani, Jeffrey D. Ullman, and Shalom Tsur. </author> <title> Dynamic itemset counting and implication rules for market basket data. </title> <booktitle> SIGMOD Record (ACM Special Interest Group on Management of Data), </booktitle> <address> 26(2):255, </address> <year> 1997. </year>
Reference-contexts: This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95]. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction <ref> [BMUT97] </ref> and rules that meet a number of constraints are produced. The resulting list of rules can then be queried, visualized, and browsed using a variety of user interfaces [KMR + 94]. <p> However, each basket (person) has many distinct attributes (e.g. female, drives to work, ...), and they are highly correlated, making it a difficult data set to mine (see <ref> [BMUT97] </ref>). 4 There are some generalizations such as hierarchical data mining where classes of items can be used. 5 We must also check all the itemsets immediately below the boundary in order to find the boundary to begin with. <p> Therefore, it is unlikely that a borderline edge would be heavy for long and make a significant contribution to the mining process. An itemset are also pruned away if the system has discovered a superset of the itemset with higher weight. 3.3 DICE the Dynamic Itemset Counting Engine In <ref> [BMUT97] </ref>, Brin, Tsur, Ullman, and Motwani present an algorithm for counting large itemsets called DIC Dynamic Itemset Counting. A traditional large itemset counting algorithm proceeds level-wise; it makes one pass over the data for each size of itemsets it is counting. <p> Interested readers should take a look at <ref> [BMUT97] </ref>. 10 * We assume that the Itemset Manager does not know about all the items that may be in the data ahead of time. Therefore, the DICE adds counters for any new items it may run across. <p> Wrobel et al. suggest an architecture for user interaction during data mining in the KESO system [WWV + 96]. Sampling market basket databases has been explored by [Toi96]. Our use of sampling to dynamically better estimate itemset counts was presented in <ref> [BMUT97] </ref>. However, the technique of sampling the space of itemsets has not been presented before. Also, there has been work studying itemset lattices as hypergraphs but not in the context of heuristics such as the heavy edge property. There has also been considerable work regarding the mining of text data.
Reference: [CNFF96] <author> D. W. Cheung, V. T. Ng, A. W. Fu, and Y. J. Fu. </author> <title> Efficient mining of association rules in distributed databases. </title> <journal> Ieee Trans. On Knowledge And Data Engineering, </journal> <volume> 8 </volume> <pages> 911-922, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
Reference: [FKZ97] <author> Ronen Feldman, Willi Klosgen, and Amir Zilberstein. </author> <title> Visualization techniques to explore data mining results for document collections. </title> <editor> In David Heckerman, Heikki 20 Mannila, Daryl Pregibon, and Ramasamy Uthurusamy, editors, </editor> <booktitle> Proceedings of the Third International Conference on Knowledge Discovery and Data Mining (KDD-97), </booktitle> <pages> page 16. </pages> <publisher> AAAI Press, </publisher> <year> 1997. </year>
Reference-contexts: There is a considerable amount of work on user interfaces for data mining. Most work has focussed on postprocessing data mining results so the user can query them and be presented different views [KMR + 94]. Feldman et al. demonstrate techniques to visualize text mining results in <ref> [FKZ97] </ref>. Agrawal et al. allow the user to specify interests in advance of the mining process [SVA]. There has also been work allowing the user to specify beliefs and determining how the data deviates from these beliefs [ST96].
Reference: [KMR + 94] <author> Mika Klemettinen, Heikki Mannila, Pirjo Ronkainen, Hannu Toivonen, and A. Inkeri Verkamo. </author> <title> Finding interesting rules from large sets of discovered association rules. </title> <editor> In Nabil R. Adam, Bharat K. Bhargava, and Yelena Yesha, editors, </editor> <booktitle> Third International Conference on Information and Knowledge Management (CIKM'94), </booktitle> <pages> pages 401-407. </pages> <publisher> ACM Press, </publisher> <month> November </month> <year> 1994. </year>
Reference-contexts: Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced. The resulting list of rules can then be queried, visualized, and browsed using a variety of user interfaces <ref> [KMR + 94] </ref>. However, when standard market basket data analysis is applied to data sets other than market baskets, producing useful output in a reasonable amount of time is very difficult. <p> There is a considerable amount of work on user interfaces for data mining. Most work has focussed on postprocessing data mining results so the user can query them and be presented different views <ref> [KMR + 94] </ref>. Feldman et al. demonstrate techniques to visualize text mining results in [FKZ97]. Agrawal et al. allow the user to specify interests in advance of the mining process [SVA].
Reference: [Mue95] <author> Andreas Mueller. </author> <title> Fast sequential and parallel algorithms for association rule mining: A comparison. </title> <type> Technical Report CS-TR-3515, </type> <institution> Dept. of Computer Science, Univ. of Maryland, College Park, MD, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
Reference: [ST96] <author> A. Silberschatz and A. Tuzhilin. </author> <title> What makes patterns interesting in knowledge discovery systems. </title> <journal> Ieee Trans. On Knowledge And Data Engineering, </journal> <volume> 8 </volume> <pages> 970-974, </pages> <year> 1996. </year>
Reference-contexts: Feldman et al. demonstrate techniques to visualize text mining results in [FKZ97]. Agrawal et al. allow the user to specify interests in advance of the mining process [SVA]. There has also been work allowing the user to specify beliefs and determining how the data deviates from these beliefs <ref> [ST96] </ref>. However, there has been very little work on interacting with the user throughout the mining process. Wrobel et al. suggest an architecture for user interaction during data mining in the KESO system [WWV + 96]. Sampling market basket databases has been explored by [Toi96].
Reference: [SVA] <author> Ramakrishnan Srikant, Quoc Vu, and Rakesh Agrawal. </author> <title> Mining association rules with item constraints. </title> <note> page 67. </note>
Reference-contexts: Feldman et al. demonstrate techniques to visualize text mining results in [FKZ97]. Agrawal et al. allow the user to specify interests in advance of the mining process <ref> [SVA] </ref>. There has also been work allowing the user to specify beliefs and determining how the data deviates from these beliefs [ST96]. However, there has been very little work on interacting with the user throughout the mining process.
Reference: [Toi96] <author> H. Toivonen. </author> <title> Sampling large databases for association rules. </title> <booktitle> Proc. of the Int'l Conf. on Very Large Data Bases (VLDB), </booktitle> <year> 1996. </year>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced. <p> However, there has been very little work on interacting with the user throughout the mining process. Wrobel et al. suggest an architecture for user interaction during data mining in the KESO system [WWV + 96]. Sampling market basket databases has been explored by <ref> [Toi96] </ref>. Our use of sampling to dynamically better estimate itemset counts was presented in [BMUT97]. However, the technique of sampling the space of itemsets has not been presented before.
Reference: [WWV + 96] <author> Stefan Wrobel, Dietrich Wettschereck, A. Inkeri Verkamo, Arno Siebes, Heikki Man-nila, Fred Kwakkel, and Willi Klosgen. </author> <title> User interactivity in very large scale data mining. </title> <editor> In W. Dilger, M. Schlosser, J. Zeidler, and A. Ittner, editors, </editor> <booktitle> Proc. FGML-96 (Annual Meeting of the GI Special Interest Group Machine Learning), </booktitle> <pages> pages 125-130, </pages> <address> 09111 Chemnitz, </address> <month> August </month> <year> 1996. </year> <note> TU Chemnitz-Zwickau. Computer Science Technical Report No. CSR-96-06. </note>
Reference-contexts: However, there has been very little work on interacting with the user throughout the mining process. Wrobel et al. suggest an architecture for user interaction during data mining in the KESO system <ref> [WWV + 96] </ref>. Sampling market basket databases has been explored by [Toi96]. Our use of sampling to dynamically better estimate itemset counts was presented in [BMUT97]. However, the technique of sampling the space of itemsets has not been presented before.
Reference: [ZPOL97] <author> M. J. Zaki, S. Parthasarathy, M. Ogihara, and W. Li. </author> <title> New algorithms for fast discovery of association rules. </title> <editor> In David Heckerman, Heikki Mannila, Daryl Pregibon, and Ramasamy Uthurusamy, editors, </editor> <booktitle> Proceedings of the Third International Conference on Knowledge Discovery and Data Mining (KDD-97), </booktitle> <pages> page 283. </pages> <publisher> AAAI Press, </publisher> <year> 1997. </year> <month> 21 </month>
Reference-contexts: Such data sets generate hundreds of thousands of large itemsets and require several million itemsets to be tested for support. This mining task can be difficult but with recent algorithmic advances it is manageable in reasonable time <ref> [AIS93, AS94, Toi96, AS96b, CNFF96, AS96a, ZPOL97, Mue95] </ref>. Once the large itemsets are known, a pass is made over them, testing for properties like confidence, interest, and conviction [BMUT97] and rules that meet a number of constraints are produced.
References-found: 17

