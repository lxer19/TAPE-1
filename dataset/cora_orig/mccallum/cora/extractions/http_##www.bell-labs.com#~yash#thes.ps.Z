URL: http://www.bell-labs.com/~yash/thes.ps.Z
Refering-URL: http://www.bell-labs.com/~yash/
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Abstract-found: 0
Intro-found: 1
Reference: [AAC91] <author> M. Ahamad, M. H. Ammar, and S. Y. Cheung. </author> <title> Multidimensional voting. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 9(4) </volume> <pages> 399-431, </pages> <year> 1991. </year>
Reference-contexts: failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [ACC + 83] <author> M. Aizenman, J. T. Chayes, L. Chayes, J. Frohlich, and L. Russo. </author> <title> On a sharp transition from area law to perimeter law in a system of random surfaces. </title> <journal> Comm. Mathematical Physics, </journal> <volume> 92 </volume> <pages> 19-69, </pages> <year> 1983. </year>
Reference-contexts: If LR is the event "there exists an open left-right path in a rectangle D", then by flow considerations it follows that I r (LR) is the event "there are at least r + 1 edge disjoint open left-right paths in D". Theorem C.3 <ref> [ACC + 83] </ref> Let E be an increasing event and let r be a positive integer. Then 1 P p (I r (E)) q r whenever 0 p &lt; p 0 1.
Reference: [ADKM92] <author> Y. Amir, D. Dolev, S. Kramer, and D. Malki. Transis: </author> <title> A communication subsystem for high availability. </title> <booktitle> In Proc. 22nd IEEE Symp. Fault-Tolerant Computing (FTCS), </booktitle> <pages> pages 76-84, </pages> <year> 1992. </year>
Reference-contexts: Thus PickBalanced is appropriate in systems with broadcast communication capabilities in which the current configuration is available to the processors (e.g., the Transis system 70 CWh1; 2; 2; 3; 3; 3; 3i with 17 elements and 7 rows, as a function of the element failure probability p. <ref> [ADKM92] </ref>), or in point-to-point systems in which the configuration changes are infrequent, where we can assume that the configuration is known for long periods of time.
Reference: [AE91] <author> D. Agrawal and A. El-Abbadi. </author> <title> An efficient and fault-tolerant solution for distributed mutual exclusion. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 9(1) </volume> <pages> 1-20, </pages> <year> 1991. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), <ref> [AE91] </ref> (the Tree system), [CAA92, KRS93] (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> Triang In the triangular system [Lov73, EL75], the elements are arranged in d rows, with row i containing i elements. A quorum is any set composed of one complete row i, and a representative from every row j &gt; i (see Figure 2.2-a). Tree In the Tree system <ref> [AE91] </ref> the elements are organized in a complete rooted binary tree. <p> Here we discuss the shortcomings of some alternatives. Several authors (e.g., <ref> [Mae85, AE91] </ref> have emphasized the criterion of having small quorums. This is an important parameter since it captures the message complexity of a protocol using the quorum system. 1 However it does not tell us how to use the quorums so each element is used as infrequently as possible. <p> Over an odd-sized universe, all the quorums of the simple majority system Maj are of size (n + 1)=2, therefore by Proposition 4.3.1, L (Maj) (n + 1)=2n &gt; 1 2 . 2. In the Tree system <ref> [AE91] </ref>, the smallest quorums have cardinality log (n+1). Therefore by Proposition 4.3.2, L (Tree) 1= log (n + 1). <p> In particular, this means that CWlog is asymptotically superior to the FPP [Mae85] and the Grid [CAA92], both of which have failure probabilities tending to 1 (see [KC91, RST92]). The CWlog has asymptotic availability similar to that of the Tree system of <ref> [AE91] </ref> (as analyzed in Section 6.5). The CWlog has worse asymptotic availability than the constructions of [Kum91, KC91] and the constructions of Chapter 4, and also than the Maj system [Tho79], which has the optimal availability [BG87]. <p> Then in Sections 6.3-6.10 we analyze some specific quorum systems which are not defined by voting. We show that some of these have Condorcet failure probabilities (e.g., the constructions of <ref> [EL75, AE91, Kum91] </ref>), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. <p> Since Triang is a d-uniform quorum system we can use Proposition 4.3.10 and conclude that L (Triang) = 2 2 : 6.5 The Tree System The Tree system was first described and proved to be a coterie in <ref> [AE91] </ref>. In [IK93, NM92] it is shown that Tree 2 NDC. The elements are organized in a complete rooted binary tree (we assume that n = 2 h 1 for some h &gt; 0). <p> Hence P (jl r) = P (jl r). 7.6.2 The HQS and Tree Systems In this section we describe two schemes, for the hierarchical quorum system (HQS) of [Kum91] and for the Tree system of <ref> [AE91] </ref>. We have analyzed the availability and load of these systems in Sections 6.5 and 6.10, respectively. The building block for both the Tree and HQS systems is the 2-of-3 majority gate, which is a threshold function. As such, it has an SSS, which is Shamir's scheme [Sha79]. <p> Proof: An adversary strategy A (ff) which forces the user Alice to probe all n inputs is the following: Answer the first k 1 probes by "1". Answer the next n k probes by "0". Answer the n'th probe by ff. Corollary 8.3.10 The Tree <ref> [AE91] </ref> and HQS [Kum91] quorum systems are evasive. Proof: By Proposition 8.3.9 the 2-of-3 majority function is evasive. The HQS system is a complete ternary tree of 2-of-3 majorities, so by induction on the tree height and using Theorem 8.3.7 at each level it follows that HQS is evasive. <p> Remarks: This lower bound is tight (up to additive constants) for the Maj and Nuc systems, and is trivially exact for the singleton system. However it is sometimes better than that of Proposition 8.4.1, as the following examples show. * In the Tree system <ref> [AE91] </ref>, c (Tree) log n and m (Tree) 2 n=2 , so Proposition 8.4.2 gives a linear lower bound of PC (Tree) n=2, much better than that of Proposi tion 8.4.1, but still short of the truth which is PC (Tree) = n by Corollary 8.3.10. * The Triang system [Lov73],
Reference: [AEL85] <author> R. Aharoni, P. Erd-os, and N. Linial. </author> <title> Dual integer linear programs and the relationship between their optima. </title> <booktitle> In Proc. 17th ACM Symp. Theory of Computing, </booktitle> <pages> pages 476-483, </pages> <year> 1985. </year>
Reference-contexts: As a corollary of Propositions 4.3.1 and 4.3.2 we obtain that L (S) maxf 1 c (S) ; n g, thus L (S) 1= p n. However a sharper lower bound is the following, which is a restatement of a result of <ref> [AEL85] </ref> in quorum system terminology (see Proposition A.7). Proposition 4.3.3 Let m (S) be the number of quorums in S. <p> Proposition A.6 [Fur88, p. 150] If S is (s; d)-fair, with m (S) edges then -fl (S) = s m (S) : A more delicate bound on -fl is the following result of <ref> [AEL85] </ref>. Proposition A.7 [Fur88, p. 170] Let m (S) and c (S) be as before. Then -fl (S) n m (S) : Appendix B Total Positivity We now introduce some definitions and results from [Kar68] that are used in Section 3.4.
Reference: [Ami95] <author> Y. Amir. </author> <title> Replication Using Group Communication Over a Dynamic Network. </title> <type> PhD thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel. </institution> <note> Also available at http://www.cs.jhu.edu/yairamir, 1995. </note>
Reference-contexts: The processors on a distributed system are indeed autonomous, however some cooperation must exist between them. This raises the need for various control mechanisms. Two typical mechanisms are mutual exclusion (cf. [Ray86]) and data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>). The need for mutual exclusion arises when there is some resource on the network (e.g., a printer) that may be allocated to a single processor at a time. A mutual exclusion protocol guarantees that no processor will access the resource while it is allocated to another.
Reference: [AS92] <author> N. Alon and J. Spencer. </author> <title> The Probabilistic Method. </title> <publisher> John Wiley & Sons, </publisher> <address> Chichester, </address> <year> 1992. </year>
Reference-contexts: This extremal question has been addressed before in a slightly more general setting, i.e., lower bounds on the number of hyperedges of a non 2-colorable hypergraph (NDC's are 3-colorable hypergraphs [GB85]). 19 Two results are presented in <ref> [AS92] </ref>, a simple bound due to Erd-os [Erd63] which gives m 2 c1 , and a more delicate asymptotic bound due to Beck [Bec78] of m (2 c c 1=3 ).
Reference: [AW96a] <author> Y. Amir and A. Wool. </author> <title> Evaluating quorum systems over the Internet. </title> <booktitle> In Proc. 26'th IEEE Symp. Fault-Tolerant Computing (FTCS), </booktitle> <pages> pages 26-35, </pages> <address> Sendai, Japan, </address> <year> 1996. </year>
Reference-contexts: Note that this model implicitly assumes that the communication links are perfect, and that the network is fully connected, hence the network never partitions into disconnected components. In general this is an over-simplification of real communication networks (see <ref> [AW96a] </ref> for an empirical evaluation of network connectivity). However we believe that such a model is reasonable for some important cases, and especially for a well maintained local area network (LAN). The points of our probability space are called configurations. <p> Therefore (3.6) guarantees that the final weights calculated for reliable elements will be in the range v i 2 0; : : : ; bM log 2 1 " Remark: In <ref> [AW96a] </ref>, for a 14 processor system we used a value of " = 0:0001. The value for the scaling factor M was chosen using (3.7) so that the computed weights are all in the range f0; : : :; 10000g. <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [AW96b] <author> Y. Amir and A. Wool. </author> <title> Optimal availability quorum systems: Theory and practice. </title> <type> Technical Report CS96-02, </type> <institution> The Weizmann Institute of Science, Rehovot, Israel, </institution> <year> 1996. </year>
Reference-contexts: In Section 3.5 we handle the case of different failure probabilities. In Section 3.6 we discuss the practical issues. The results described in this chapter can be found in [PW95] and <ref> [AW96b] </ref>. 3.2 The Probabilistic Failure Model 3.2.1 The Failure Probability Function We use a simple probabilistic model of the failures in the system. We assume that the elements (processors) fail independently with a fixed uniform probability p. We assume that the failures are transient.
Reference: [Baz96] <author> R. Bazzi. </author> <title> Planar quorums. </title> <booktitle> In Proc. 10'th Inter. Workshop on Dist. Algorithms (WDAG), </booktitle> <address> Bologna, Italy, </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. A recent construction of <ref> [Baz96] </ref>, which develops ideas presented in this work, is based on triangulated planar graphs. Descriptions of these constructions can be found in Section 2.2, and their properties are analyzed in Chapter 6. The first paper to explicitly consider mutual exclusion protocols in the context of intersecting set systems is [GB85].
Reference: [BC92] <author> A. Beimel and B. Chor. </author> <title> Universally ideal secret sharing schemes. </title> <booktitle> In Advances in Cryptology - CRYPTO'92, </booktitle> <volume> LNCS 740, </volume> <pages> pages 183-195. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely [Sha79, Bla79]. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. <ref> [BD90, BDGV92, BC92] </ref>). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category.
Reference: [BD90] <author> E. F. Brickell and D. M. Davenport. </author> <title> On the classification of ideal secret sharing schemes. </title> <booktitle> In Advances in Cryptology - CRYPTO'89, </booktitle> <volume> LNCS 435, </volume> <pages> pages 278-285. </pages> <publisher> Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely [Sha79, Bla79]. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. <ref> [BD90, BDGV92, BC92] </ref>). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category.
Reference: [BDGV92] <author> C. Blundo, A. De Santis, L. Gargano, and U. Vaccaro. </author> <title> On the information rate of secret sharing schemes. </title> <booktitle> In Advances in Cryptology - CRYPTO'92, </booktitle> <volume> LNCS 740, </volume> <pages> pages 148-167. </pages> <publisher> Springer-Verlag, </publisher> <year> 1992. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely [Sha79, Bla79]. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. <ref> [BD90, BDGV92, BC92] </ref>). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category.
Reference: [Bec78] <author> J. Beck. </author> <title> On 3-chromatic hypergraphs. </title> <journal> Discrete Math., </journal> <volume> 24 </volume> <pages> 127-137, </pages> <year> 1978. </year>
Reference-contexts: more general setting, i.e., lower bounds on the number of hyperedges of a non 2-colorable hypergraph (NDC's are 3-colorable hypergraphs [GB85]). 19 Two results are presented in [AS92], a simple bound due to Erd-os [Erd63] which gives m 2 c1 , and a more delicate asymptotic bound due to Beck <ref> [Bec78] </ref> of m (2 c c 1=3 ). We show, by a new proof, a bound that is somewhat better than the simple one yet is inferior to Beck's result.
Reference: [BG86] <author> D. Barbara and H. Garcia-Molina. </author> <title> The vulnerability of vote assignments. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 4(3) </volume> <pages> 187-213, </pages> <year> 1986. </year>
Reference-contexts: The availability of k-coteries is studied in [KFYA93]. A performance analysis using queueing theory can be found in [MYK94]. A related criterion, called the fault-tolerance of a quorum system, is introduced in <ref> [BG86] </ref> and studied further in [KS93]. The fault tolerance of a quorum system is measured by the maximal number of processors that can fail before all the quorums are "hit", in the worst possible configuration of failures. A quorum is "hit" if at least one of its members has failed. <p> As will be shown in the sequel, it turns out that the property of non-domination has a strong effect on the failure probability F p (S). It is known that the NDC's are "the most available" quorum systems (e.g., <ref> [BG86, INK95] </ref>). We show that over the NDC's, the behavior of the failure probability F p depends on the exact value of p. For any S 2 NDC, F p (S) is symmetric, i.e., F p (S) = 1 F 1p (S). <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [BG87] <author> D. Barbara and H. Garcia-Molina. </author> <title> The reliability of vote mechanisms. </title> <journal> IEEE Trans. Comput., </journal> <volume> C-36:1197-1208, </volume> <month> October </month> <year> 1987. </year>
Reference-contexts: In this work the term coterie and the concept of domination are introduced. Several basic properties of dominated and non-dominated coteries are proved. The failure probability F p , or equivalent notions such as reliability or availability, are well known in reliability theory [BP75]. In <ref> [BG87] </ref> the availability of voting systems is studied. It is shown that in a complete network the optimal availability quorum system is the majority system if p &lt; 1 2 . <p> We show that for 0 &lt; p &lt; 1 2 , the least available NDC (highest F p (S)) is the "monarchy" (the singleton system Sngl). By the same proof we get almost for free a new proof for the result of <ref> [BG87] </ref>, that the most available NDC is the "democracy" (the majority system Maj). By the above mentioned symmetry of F p , when 1 2 &lt; p &lt; 1 the situation is reversed. <p> The following theorem establishes the extremal-availability quorum systems to be the singleton (Sngl) and majority (Maj). The left hand side inequality of claim 1 of the theorem is due to <ref> [BG87] </ref>. The left hand side inequality of claim 2 has been proved independently in [DKK + 94]. The proof below proves all four inequalities at once. Theorem 3.4.5 Let S 2 NDC be given. <p> , and F p (S) = F p (Wheel). 3.5 Availability with Different Failure Probabilities In the previous sections we have shown that when all of the processors have the same failure probability p then the optimal availability quorum system is either the majority system (Maj) if p &lt; 1=2 <ref> [BG87] </ref>, or the monarchy (Sngl) if p &gt; 1=2. If the failure probabilities p i are different and are all less than 1/2, then the optimal availability quorum system is known to be defined by voting. <p> The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). The CWlog has worse asymptotic availability than the constructions of [Kum91, KC91] and the constructions of Chapter 4, and also than the Maj system [Tho79], which has the optimal availability <ref> [BG87] </ref>. However all these construction have relatively large quorums, of size ( p Unlike the constructions of Chapter 4, the availability of CWlog is high not only for very large n.
Reference: [BI87] <author> M. Blum and R. Impagliazzo. </author> <title> Generic oracles and oracle classes. </title> <booktitle> In Proc. 28th IEEE Symp. Foundations of Comp. Sci. (FOCS), </booktitle> <pages> pages 118-126, </pages> <year> 1987. </year>
Reference-contexts: systems, Theorem 8.5.6 is not tight: the bound is c 2 , while in fact 2c probes suffice by Proposition 8.3.19. 8.5.2 The White Strategy The following strategy, which we call the white strategy, is an adaptation of a procedure that has been used in a very different context in <ref> [BI87] </ref>, as part of the argument for proving that if P 6= NP " co-NP then P 6= NP " co-NP with a generic oracle. The exposition in [BI87] treats infinite languages, and thus does not include the combinatorial analysis of the number of probes that we have here. <p> which we call the white strategy, is an adaptation of a procedure that has been used in a very different context in <ref> [BI87] </ref>, as part of the argument for proving that if P 6= NP " co-NP then P 6= NP " co-NP with a generic oracle. The exposition in [BI87] treats infinite languages, and thus does not include the combinatorial analysis of the number of probes that we have here.
Reference: [BI95a] <author> J. C. Bioch and T. Ibaraki. </author> <title> Decompositions of positive self-dual boolean functions. </title> <journal> Discrete Math., </journal> <volume> 140 </volume> <pages> 23-46, </pages> <year> 1995. </year>
Reference-contexts: A quorum is "hit" if at least one of its members has failed. A characterization of non-dominated coteries in terms of boolean functions appears in <ref> [IK93, Loe94, BI95a] </ref>. It is shown that the characteristic function of any non-dominated coterie can be decomposed into a tree of "2-of-3" majority gates. 3 In [HMP95], the question of how evenly balanced the work load can be is studied.
Reference: [BI95b] <author> J. C. Bioch and T. Ibaraki. </author> <title> Generating and approximating nondominated coteries. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 6(9) </volume> <pages> 905-914, </pages> <year> 1995. </year>
Reference-contexts: Finally we state some estimates on the number of NDC's over a universe of size n. See <ref> [BI95b] </ref> for exact numbers when n 7. Fact 2.3.7 The number of ND coteries over a universe of size n is 2 2 (n) (Yannakakis, cf. [GB85]).
Reference: [BL88] <author> J. Benaloh and J. Leichter. </author> <title> Generalized secret sharing and monotone functions. </title> <booktitle> In Advances in Cryptology - CRYPTO'88, </booktitle> <volume> LNCS 403, </volume> <pages> pages 27-36. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. [BD90, BDGV92, BC92]). Schemes suggested in <ref> [BL88] </ref> for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category. <p> Since the AndOr system has a very simple description in terms of boolean functions, we can apply the scheme of <ref> [BL88] </ref>. The basic secret unit is a single bit. <p> A secret s is (recursively) split over an OR gate by assigning each input a copy of s, and over an AND gate by assigning the inputs with random values s 1 ; s 2 such that s 1 s 2 = s. In <ref> [BL88] </ref> it is proved that this is an SSS for any monotone boolean function.
Reference: [Bla79] <author> G. R. Blakely. </author> <title> Safeguarding cryptographic keys. </title> <booktitle> Proc. AFIPS, NCC, </booktitle> <volume> 48 </volume> <pages> 313-317, </pages> <year> 1979. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely <ref> [Sha79, Bla79] </ref>. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. [BD90, BDGV92, BC92]). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems.
Reference: [Bol86] <author> B. Bollobas. </author> <title> Combinatorics. </title> <publisher> Cambridge University Press, </publisher> <year> 1986. </year>
Reference-contexts: Recall that a hypergraph is precisely a set system, an intersecting hypergraph is equivalent to a quorum system, and an edge corresponds to a quorum. The following is the celebrated Erd-os-Ko-Rado theorem [EKR61] (cf. <ref> [Bol86] </ref>), also known as the Sunflower Theorem. Theorem A.1 (Sunflower) [EKR61] Let U be a universe of size n, and let U (i) be the collection of all subsets containing i elements for some 2 i &lt; n 2 . Consider an intersecting hypergraph A U (i) .
Reference: [BP75] <author> R. E. Barlow and F. Proschan. </author> <title> Statistical Theory of Reliability and Life Testing. </title> <publisher> Holt, Rinehart and Winston, Inc., </publisher> <year> 1975. </year>
Reference-contexts: In this work the term coterie and the concept of domination are introduced. Several basic properties of dominated and non-dominated coteries are proved. The failure probability F p , or equivalent notions such as reliability or availability, are well known in reliability theory <ref> [BP75] </ref>. In [BG87] the availability of voting systems is studied. It is shown that in a complete network the optimal availability quorum system is the majority system if p &lt; 1 2 . <p> Below we introduce a more general definition of the failure probability, and a basic theorem which will be useful to us. The definitions are rephrased using our terminology. A good reference to reliability theory is <ref> [BP75] </ref>. Notation: We use q i = 1 p i to denote the probability of survival of element i. Definition 3.2.11 For a quorum system S, let T = fT U : T " S 6= ? for all S 2 Sg be the collection of transversals of S. <p> Let p = (p 1 ; : : : ; p n ) denote the failure probabilities of the elements. Then h S (p) = T 2T i2T Y (1 p i ) is the failure probability of S. Theorem 3.2.12 <ref> [BP75] </ref> Let a quorum system S be given. Then h S (p) is strictly increasing in p i for every non-redundant element i (i.e., i 2 S for some minimal S 2 S).
Reference: [BPT89] <author> P. J. Borland, F. Proschan, and Y. L. Tong. </author> <title> Modelling dependence in simple and indirect majority systems. </title> <journal> J. Appl. Prob., </journal> <volume> 26 </volume> <pages> 81-88, </pages> <year> 1989. </year>
Reference-contexts: The function F p (S) for dominated coteries might also lie in the zone marked "Dom". Our proof generalizes the method of <ref> [BPT89] </ref>. Their work compares two specific quorum systems, namely the simple majority and a system called indirect majority, that models the 20 election of the USA president. The proof has two conceptual stages.
Reference: [CAA92] <author> S. Y. Cheung, M. H. Ammar, and M. Ahamad. </author> <title> The grid protocol: A high performance scheme for maintaining replicated data. </title> <journal> IEEE Trans. Knowledge and Data Eng., </journal> <volume> 4(6) </volume> <pages> 582-592, </pages> <year> 1992. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), <ref> [CAA92, KRS93] </ref> (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> P i2S v i &gt; V =2. Note that this definition is of an acceptance set. The majority system Maj over an odd-sized universe is the simplest voting system: v i = 1 for all i. Grid In the Grid <ref> [CAA92] </ref> the n = d 2 elements are arranged in a d fi d grid, and a quorum in the system consists of one complete row and a representative element from all the other rows (see Figure 2.1). <p> The FPP system [Mae85] is a (t + 1)-fair quorum system over n = t 2 + t + 1 elements, so L (FPP) = t+1 n . In fact equality holds in the tighter lower bound of Proposition 4.3.3 for this system. 3. The Grid system <ref> [CAA92] </ref> is a (2h1)-fair system over n = h 2 elements, so L (Grid) = 2h1 n . 4.3.4 Effective Calculation of the Load If a quorum system S is given explicitly, as a list of all m quorums, then program LP of Definition 4.2.3 can be solved in poly (n; <p> In this chapter we introduce a new class of quorum system constructions, which we call Crumbling Walls (or simply walls). The crumbling walls are a generalization of the 57 triangular construction of [Lov73, EL75], the Grid of <ref> [CAA92] </ref>, the hollow grids of [KRS93], the Wheel of [MP92] and the Lovasz coteries of [Nei92]. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> By Proposition 4.3.5 we have: Theorem 5.3.1 The availability of CWlog is optimal up to a constant factor for quorum systems with c (S) = O (lg n). In particular, this means that CWlog is asymptotically superior to the FPP [Mae85] and the Grid <ref> [CAA92] </ref>, both of which have failure probabilities tending to 1 (see [KC91, RST92]). The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). <p> We show that some of these have Condorcet failure probabilities (e.g., the constructions of [EL75, AE91, Kum91]), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction [Mae85] and grid construction <ref> [CAA92] </ref> have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. We also present novel balancing strategies which induce the optimal load for some of the systems (e.g., the Tree and Triang). <p> Therefore, the FPP quorum system has poor availability in all but very small systems. We have already seen that L (FPP) = t+1 t 2 +t+1 1 p n in Example 4.3.13. 6.9 The Grid Quorum System The Grid quorum system appears in <ref> [CAA92, MP92] </ref>. The n = d 2 elements are arranged in a d fi d grid, and a quorum in the system consists of one complete row and a representative element from all the other rows.
Reference: [Che52] <author> H. Chernoff. </author> <title> A measure of asymptotic efficiency for tests of a hypothesis based on the sum of observations. </title> <journal> Annals of Math. Stat., </journal> <volume> 23 </volume> <pages> 493-509, </pages> <year> 1952. </year>
Reference-contexts: Therefore F p (Nuc) P (at least r 1 failures in U 1 ): 89 The expected number of failures in U 1 is (2r 2)p. If p &lt; 1 2 we can write r 1 = (1 + ffi)(2r 2)p and use the standard Chernoff bound <ref> [Che52] </ref> to get F p (Nuc) e (2r2)pffi 2 3 n "(p) for some constant "(p) &gt; 0, so F p (Nuc) is Condorcet. 6.6.2 Load Consider a strategy which uses only the type B quorums with equal frequencies.
Reference: [Con] <author> N. </author> <month> Condorcet. </month> <institution> Essai sur l'application de l'analyse a la probabilite des decisions rendues a la pluralite des voix. Paris, </institution> <month> 1785. </month>
Reference-contexts: When we consider the asymptotic behavior of F p (S n ) for a sequence S n of quorum system over a universe with an increasing size n, we find that for many constructions it is similar to the behavior described by the Condorcet Jury Theorem <ref> [Con] </ref>. Hence, the following definition. <p> smallest set size is c (S 0 ) = r 1, so by Proposition 4.3.1 (which holds for any set system) we obtain that L (Nuc) L (S 0 ) 2r 2 1 ; Hence L (Nuc) = 1 2 . 6.7 The Maj Quorum System The Condorcet Jury Theorem <ref> [Con] </ref> is in fact about the asymptotic behavior of the Maj quorum system, so naturally F p (Maj) is Condorcet.
Reference: [CY94] <author> H.-K. Chang and S.-M. Yuan. </author> <title> Message complexity of hierarchical quorum consensus algorithm. </title> <journal> Inf. Proc. Letters, </journal> <volume> 50 </volume> <pages> 69-73, </pages> <year> 1994. </year>
Reference-contexts: For larger values of p, we can use the weaker analysis of <ref> [CY94] </ref>, which in our notation gives that f (h) p (3p 2p 2 ) h : When p &lt; 1 2 then 3p 2p 2 &lt; 1, and since h = log 3 n we obtain the polynomial decay of F p n ff (p) . 6.10.2 Load Proposition 6.10.3 L
Reference: [DDFY94] <author> A. De Santis, Y. Desmet, Y. Frankel, and M. Yung. </author> <title> How to share a function securely. </title> <booktitle> In Proc. 26th ACM Symp. Theory of Computing, </booktitle> <pages> pages 522-533, </pages> <year> 1994. </year>
Reference-contexts: Therefore if we replace the k-of-n scheme by our quorum secret sharing schemes, the protocol would then gain their efficiency, high availability and low load. A related line of research is that of group signatures [DF91] and function sharing <ref> [DDFY94] </ref>: for processors to share a function F means that only a group of k processors can evaluate F (x), and no information is transferred about F from the shares related to x. Hence, the issue of granularity is dealt with.
Reference: [DF91] <author> Y. Desmet and Y. Frankel. </author> <title> Shared generation of authenticators and signatures. </title> <booktitle> In Advances in Cryptology - CRYPTO'91, </booktitle> <volume> LNCS 576, </volume> <pages> pages 457-469. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: Therefore if we replace the k-of-n scheme by our quorum secret sharing schemes, the protocol would then gain their efficiency, high availability and low load. A related line of research is that of group signatures <ref> [DF91] </ref> and function sharing [DDFY94]: for processors to share a function F means that only a group of k processors can evaluate F (x), and no information is transferred about F from the shares related to x. Hence, the issue of granularity is dealt with. <p> The model of the user interacting with the servers is identical to that of Section 7.3, except that there are no data servers. Let us stress that unlike <ref> [DF91] </ref>, the faults we allow in the servers are all benign, and therefore our scheme has a high level of trust in them. A server in our scheme that "turns traitor" can generate a complete signature for any message. There are signature servers, which form the universe U .
Reference: [DGS85] <author> S. B. Davidson, H. Garcia-Molina, and D. Skeen. </author> <title> Consistency in partitioned networks. </title> <journal> ACM Computing Surveys, </journal> <volume> 17(3) </volume> <pages> 341-370, </pages> <year> 1985. </year> <month> 139 </month>
Reference-contexts: The processors on a distributed system are indeed autonomous, however some cooperation must exist between them. This raises the need for various control mechanisms. Two typical mechanisms are mutual exclusion (cf. [Ray86]) and data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>). The need for mutual exclusion arises when there is some resource on the network (e.g., a printer) that may be allocated to a single processor at a time. A mutual exclusion protocol guarantees that no processor will access the resource while it is allocated to another.
Reference: [DKK + 94] <author> K. Diks, E. Kranakis, D. Krizanc, B. Mans, and A. Pelc. </author> <title> Optimal coteries and voting schemes. </title> <journal> Inf. Proc. Letters, </journal> <volume> 51 </volume> <pages> 1-6, </pages> <year> 1994. </year>
Reference-contexts: We have very recently learned that the optimality of the monarchy when p &gt; 1 2 has been obtained independently by Diks et al. <ref> [DKK + 94] </ref>. We also show that if we require all the elements to appear in some quorum, then the Wheel system of [MP92] replaces the singleton as the extremal system. 14 Then we consider the case where the failure probabilities p i are different. <p> The following theorem establishes the extremal-availability quorum systems to be the singleton (Sngl) and majority (Maj). The left hand side inequality of claim 1 of the theorem is due to [BG87]. The left hand side inequality of claim 2 has been proved independently in <ref> [DKK + 94] </ref>. The proof below proves all four inequalities at once. Theorem 3.4.5 Let S 2 NDC be given.
Reference: [DN94] <author> C. Dwork and M. Naor. </author> <title> An efficient existentially unforgeable signature scheme and its applications. </title> <editor> In Yvo G. Desmedt, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO'94, </booktitle> <volume> LNCS 839, </volume> <pages> pages 234-246. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: As a heuristic, it is possible to replace the pseudo-random function with a private-key encryption function, such as DES. Signatures: Digital signatures have been investigated extensively (cf. <ref> [GMR88, DN94] </ref> and the references therein). Our scheme can take any signature scheme and transform it into a distributed quorum based scheme, without altering its security. The notion of security we consider is that of existential unforgeability.
Reference: [EKR61] <author> P. Erd-os, C. Ko, and R. </author> <title> Rado. Intersection theorems for systems of finite sets. </title> <journal> Quart. J. Math. Oxford, </journal> <volume> 12(2) </volume> <pages> 313-320, </pages> <year> 1961. </year>
Reference-contexts: As a by-product, we obtain another proof to one of the four inequalities of Theorem 3.4.5: that when p i = p &gt; 1 2 for all i, the monarchy is optimal. This proof is completely elementary, and does not require the use of the Erd-os-Ko-Rado theorem <ref> [EKR61] </ref>. In our proofs we use the following condition, due to [SB94], characterizing the acceptance set of a quorum system with optimal availability (recall Definition 2.1.8). Proposition 3.5.1 [SB94] An acceptance set A has optimal availability iff the following two conditions hold: 27 1. <p> Recall that a hypergraph is precisely a set system, an intersecting hypergraph is equivalent to a quorum system, and an edge corresponds to a quorum. The following is the celebrated Erd-os-Ko-Rado theorem <ref> [EKR61] </ref> (cf. [Bol86]), also known as the Sunflower Theorem. Theorem A.1 (Sunflower) [EKR61] Let U be a universe of size n, and let U (i) be the collection of all subsets containing i elements for some 2 i &lt; n 2 . Consider an intersecting hypergraph A U (i) . <p> Recall that a hypergraph is precisely a set system, an intersecting hypergraph is equivalent to a quorum system, and an edge corresponds to a quorum. The following is the celebrated Erd-os-Ko-Rado theorem <ref> [EKR61] </ref> (cf. [Bol86]), also known as the Sunflower Theorem. Theorem A.1 (Sunflower) [EKR61] Let U be a universe of size n, and let U (i) be the collection of all subsets containing i elements for some 2 i &lt; n 2 . Consider an intersecting hypergraph A U (i) .
Reference: [EL75] <author> P. Erd-os and L. Lovasz. </author> <title> Problems and results on 3-chromatic hypergraphs and some related questions. In Infinite and Finite Sets, pages 609-627. Colloq. </title> <journal> Math. Soc. Janos Bolyai 10, </journal> <year> 1975. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to <ref> [Lov73, EL75] </ref>. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. A recent construction of [Baz96], which develops ideas presented in this work, is based on triangulated planar graphs. <p> Grid In the Grid [CAA92] the n = d 2 elements are arranged in a d fi d grid, and a quorum in the system consists of one complete row and a representative element from all the other rows (see Figure 2.1). Triang In the triangular system <ref> [Lov73, EL75] </ref>, the elements are arranged in d rows, with row i containing i elements. A quorum is any set composed of one complete row i, and a representative from every row j &gt; i (see Figure 2.2-a). <p> A quorum in the system is defined as in the Triang. 10 quorum shaded in each. Quorums of type A: 123, 124, 134, 234 Quorums of type B: 125, 345, 136, 246, 147, 237 11 Nuc The nucleus system of <ref> [EL75] </ref> is built in two stages. First consider a nucleus universe U 1 of size 2r 2 for some r &gt; 1, and add to S all the subsets of U 1 of size r (call these quorums of type A). <p> In this chapter we introduce a new class of quorum system constructions, which we call Crumbling Walls (or simply walls). The crumbling walls are a generalization of the 57 triangular construction of <ref> [Lov73, EL75] </ref>, the Grid of [CAA92], the hollow grids of [KRS93], the Wheel of [MP92] and the Lovasz coteries of [Nei92]. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> The main claim in this section (Theorem 5.5.3) is that walls with super-logarithmic row widths do not have Condorcet failure probabilities. The Triang system <ref> [Lov73, EL75] </ref> is an example of a wall family with super-logarithmic row widths. 75 We start by looking at the behavior of F p for a fixed value of p. <p> Then in Sections 6.3-6.10 we analyze some specific quorum systems which are not defined by voting. We show that some of these have Condorcet failure probabilities (e.g., the constructions of <ref> [EL75, AE91, Kum91] </ref>), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. <p> It is easy to see that this is a balancing strategy which induces a load of (n 1)=(2n 3) on each element, and that this is the lowest possible value. Thus L (Wheel) = (n 1)=(2n 3). 6.4 The Triang Quorum System The Triang system was first described in <ref> [Lov73, EL75] </ref> and proved to be ND in [Nei92, MP92]. The elements are organized in a triangular grid of d rows, with the i'th row containing i elements (we assume n = d (d+1) 2 ). <p> the root of the tree we obtain y (S) = 2 h+2 1 0 2 h+2 : Therefore (y; 2 h+2 ) is feasible for program DLP so the claim follows from the weak duality of linear programming. 6.6 The Nuc Quorum System The nucleus (Nuc) system appears first in <ref> [EL75] </ref>, and a variation appears in [Tuz85]. The system is built in two stages. First consider a nucleus universe U 1 of size 2r 2 for some r &gt; 1, and add to S all the subsets of U 1 of size r (call these "type A" quorums). <p> After both steps, the universe size is n = 2r 2 + 1 2 r1 . Therefore c (Nuc) 1 2 log 2 n. The number of quorums is m (Nuc) = 2r 2 ! r 1 = 2 2r ! The Nuc system has some interesting extremal properties <ref> [EL75] </ref>. <p> We prove that large classes of quorum systems are evasive, including voting systems, crumbling walls, the finite projective plane, and compositions of these. However, and somewhat surprisingly, we show that not all quorum systems are evasive. We do this by demonstrating that the Nuc system of <ref> [EL75] </ref> requires only O (log n) probes in the worst case. Next we prove two general lower bounds on the probe complexity of a quorum system in terms of combinatorial parameters of the system S. <p> However for the class of non-dominated quorum systems this is not the case. Below we show a non-dominated uniform quorum system, that has no dummy elements (i.e., every element belongs to some minimal quorum), which is not evasive. 122 Consider the Nuc system of <ref> [EL75] </ref>, described in Sections 2.2 and 6.6. All its quorums are of size c (Nuc) = r, and it has n = 2r 2 + 1 2 r1 elements, so c (Nuc) 1 2 log 2 n.
Reference: [Erd63] <author> P. Erd-os. </author> <title> On a combinatorial problem I. </title> <journal> Nordisk Mat. Tidskrift, </journal> <volume> 11 </volume> <pages> 5-10, </pages> <year> 1963. </year>
Reference-contexts: In particular, F 1=2 (S) = 1 2 for any S 2 NDC. The converse is also true, i.e., if F 1=2 (S) = 1 2 then S 2 NDC. As a consequence, we also obtain a new proof for the lower bound of <ref> [Erd63] </ref> on the number of quorums in an NDC. Next we consider the quorum system constructions that have the extremal failure probabilities. We show that for 0 &lt; p &lt; 1 2 , the least available NDC (highest F p (S)) is the "monarchy" (the singleton system Sngl). <p> This extremal question has been addressed before in a slightly more general setting, i.e., lower bounds on the number of hyperedges of a non 2-colorable hypergraph (NDC's are 3-colorable hypergraphs [GB85]). 19 Two results are presented in [AS92], a simple bound due to Erd-os <ref> [Erd63] </ref> which gives m 2 c1 , and a more delicate asymptotic bound due to Beck [Bec78] of m (2 c c 1=3 ). We show, by a new proof, a bound that is somewhat better than the simple one yet is inferior to Beck's result.
Reference: [FKG71] <author> C. M. Fortuin, P. W. Kasteleyn, and J. Ginibre. </author> <title> Correlation inequalities on some partially ordered sets. </title> <journal> Comm. Mathematical Physics, </journal> <volume> 22 </volume> <pages> 89-103, </pages> <year> 1971. </year>
Reference-contexts: Clearly E S is a monotone increasing property (i.e., if a configuration X hits S then any configuration X 0 X hits S). Therefore we can use the FKG inequality <ref> [FKG71] </ref> to obtain P S2S Y P (E S ) = S2S 1 2 jSj 1 2 c : Since (1 1=2 c ) 2 c ! e 1 then for large enough c we have F 1=2 (S) (1 ")e m 2 c and thus m (S) 2 c ln <p> From the above discussion and the proof of Corollary 4.4.6 it follows that P 1=2 (LR) = P 1=2 (T B) = 1 2 . For the upper bound, note that both LR and T B are increasing events, so we can use the FKG inequality <ref> [FKG71] </ref>. Therefore F 1=2 = 1 P 1=2 (LR " T B) 1 P 1=2 (LR)P 1=2 (T B) = 4 For the lower bound, note that Paths is a dominated quorum system. Therefore F 1=2 (Paths) &gt; 1 2 by corollary 3.3.9.
Reference: [Fre87] <author> G. N. Frederickson. </author> <title> Fast algorithms for shortest paths in planar graphs, with applications. </title> <journal> SIAM J. Computing, </journal> <volume> 16 </volume> <pages> 1004-1022, </pages> <year> 1987. </year>
Reference-contexts: Since the network is planar we can find the flow in time O (n log n) using the algorithm of [IS79], or in time O (n p log n) by [Has81] using the methods of <ref> [Fre87] </ref>. Given these path collections, the strategy w is the following: If either k LR = 0 or k T B = 0 then no live quorums exist in configuration x.
Reference: [Fu90] <author> A. Fu. </author> <title> Enhancing Concurrency and Availability for Database Systems. </title> <type> PhD thesis, </type> <institution> Simon Fraser University, Burnaby, B.C., Canada, </institution> <year> 1990. </year>
Reference-contexts: FPP The FPP system [Mae85] is based on a finite projective plane of order t, where the elements correspond to the n = t 2 + t + 1 points and quorums correspond to the lines, of size t + 1. It has been shown in <ref> [Fu90] </ref> that for all t 3, the FPP of order t is dominated. The only non-dominated FPP is of order 2, i.e., the 7 point Fano plane. 2.3 Basic Theorems The following theorems will be our basic tools throughout this work. <p> Then the finite projective plane of order t is a quorum system with m (FPP) = t 2 + t + 1 quorums, each of size c (FPP) = t + 1. It has been shown in <ref> [Fu90] </ref> that for all t 3, the FPP of order t is dominated. The only non-dominated FPP is of order 2, i.e., the 7 point Fano plane. The asymptotic behavior of the FPP's availability has been shown in [RST92], and we include it for completeness. <p> record is semantically secure.) * Instead of a quorum system as in Definition 2.1.1, we can use it's standard generalization to a read/write system, i.e., a pair of set systems (R; W) such that R " W 6= ? for any sets R 2 R and W 2 W (cf., <ref> [Her84, Fu90] </ref>). With this formulation, the basic paradigm is that to gain access a user must obtain permission from a read-quorum R 2 R. To revoke a user's access, a write-quorum W 2 W must be informed. <p> If i even a S P a S i then PC (S) = n, i.e., S is evasive. Example 8.3.2 The only finite projective plane (FPP) system [Mae85] that is ND is the 7-point Fano plane <ref> [Fu90] </ref>. For this system we have a FPP = (0; 0; 0; 7; 28; 21; 7; 1) by inspection, so the sum on the even indices is 35 while on the odd indices it is 29. Therefore by Proposition 8.3.1 the FPP system with n = 7 is evasive.
Reference: [Fur88] <author> Z. Furedi. </author> <title> Matchings and covers in hypergraphs. </title> <booktitle> Graphs and Combinatorics, </booktitle> <volume> 4 </volume> <pages> 115-206, </pages> <year> 1988. </year>
Reference-contexts: Remark: The theorem is trivially true for i = 1 as well. Next we define the fractional matching number and the k-matching number of a hyper graph. Definition A.2 <ref> [Fur88, p. 149] </ref> The fractional matching number of a hypergraph S, denoted by -fl , is m X f j ; s:t: S j 3i f j 1; for all i 2 U; Definition A.3 [Fur88, p. 154] Let S be a hypergraph. <p> Definition A.2 [Fur88, p. 149] The fractional matching number of a hypergraph S, denoted by -fl , is m X f j ; s:t: S j 3i f j 1; for all i 2 U; Definition A.3 <ref> [Fur88, p. 154] </ref> Let S be a hypergraph. <p> The maximum cardinality of a k-matching is the k-matching number, denoted by -k . The following proposition describes the connection between -fl and -k . Proposition A.4 <ref> [Fur88, p. 154] </ref> For every hypergraph S, lim -k (S) = -fl (S) : If c (S) is the cardinality of the smallest edge in a hypergraph S, then we have the following bound: Proposition A.5 [Fur88, p. 150] For every hypergraph S over a universe of n elements, -fl (S) <p> The following proposition describes the connection between -fl and -k . Proposition A.4 [Fur88, p. 154] For every hypergraph S, lim -k (S) = -fl (S) : If c (S) is the cardinality of the smallest edge in a hypergraph S, then we have the following bound: Proposition A.5 <ref> [Fur88, p. 150] </ref> For every hypergraph S over a universe of n elements, -fl (S) c (S) If S is fair (recall Definition 2.1.3) then the exact value of -fl (S) is known. Proposition A.6 [Fur88, p. 150] If S is (s; d)-fair, with m (S) edges then -fl (S) = <p> the smallest edge in a hypergraph S, then we have the following bound: Proposition A.5 <ref> [Fur88, p. 150] </ref> For every hypergraph S over a universe of n elements, -fl (S) c (S) If S is fair (recall Definition 2.1.3) then the exact value of -fl (S) is known. Proposition A.6 [Fur88, p. 150] If S is (s; d)-fair, with m (S) edges then -fl (S) = s m (S) : A more delicate bound on -fl is the following result of [AEL85]. Proposition A.7 [Fur88, p. 170] Let m (S) and c (S) be as before. <p> Proposition A.6 [Fur88, p. 150] If S is (s; d)-fair, with m (S) edges then -fl (S) = s m (S) : A more delicate bound on -fl is the following result of [AEL85]. Proposition A.7 <ref> [Fur88, p. 170] </ref> Let m (S) and c (S) be as before. Then -fl (S) n m (S) : Appendix B Total Positivity We now introduce some definitions and results from [Kar68] that are used in Section 3.4.
Reference: [GB85] <author> H. Garcia-Molina and D. Barbara. </author> <title> How to assign votes in a distributed system. </title> <journal> J. ACM, </journal> <volume> 32(4) </volume> <pages> 841-860, </pages> <year> 1985. </year>
Reference-contexts: Descriptions of these constructions can be found in Section 2.2, and their properties are analyzed in Chapter 6. The first paper to explicitly consider mutual exclusion protocols in the context of intersecting set systems is <ref> [GB85] </ref>. In this work the term coterie and the concept of domination are introduced. Several basic properties of dominated and non-dominated coteries are proved. The failure probability F p , or equivalent notions such as reliability or availability, are well known in reliability theory [BP75]. <p> The only non-dominated FPP is of order 2, i.e., the 7 point Fano plane. 2.3 Basic Theorems The following theorems will be our basic tools throughout this work. The first results are properties of the domination relation and of non-dominated quorum systems. Lemma 2.3.1 <ref> [GB85] </ref> Let S 2 NDC and let T be a transversal of S. Then there exists a quorum S 2 S s.t. S T . Lemma 2.3.2 [IK93] Let S be a coterie. <p> Then there exists a quorum S 2 S s.t. S T . Lemma 2.3.2 [IK93] Let S be a coterie. Then S 2 NDC iff for all X U , exactly one of X and U n X is a transversal of S. Theorem 2.3.3 <ref> [GB85] </ref> Let S; R be coteries. Then R S iff there exists a quorum R 0 2 R such that R 0 is a transversal of S and R 0 6 S for every S 2 S. The next two theorems characterize which voting systems are in fact non dominated. <p> The next two theorems characterize which voting systems are in fact non dominated. The important parameter turns out to be the parity of the sum of all the votes. Theorem 2.3.4 <ref> [GB85] </ref> Let v be an integer vote assignment with a total vote V . If V is odd then the voting system defined by v is non-dominated. Theorem 2.3.5 [GB85] Let v be an integer vote assignment with an even total vote V . <p> The important parameter turns out to be the parity of the sum of all the votes. Theorem 2.3.4 <ref> [GB85] </ref> Let v be an integer vote assignment with a total vote V . If V is odd then the voting system defined by v is non-dominated. Theorem 2.3.5 [GB85] Let v be an integer vote assignment with an even total vote V . Let w be a vote assignment with w i = v i + 1 for some i and w j = v j for all j 6= i. <p> Finally we state some estimates on the number of NDC's over a universe of size n. See [BI95b] for exact numbers when n 7. Fact 2.3.7 The number of ND coteries over a universe of size n is 2 2 (n) (Yannakakis, cf. <ref> [GB85] </ref>). Of these, roughly 2 n 2 are voting coteries ([GB85, IK93] and the references therein). 13 Chapter 3 Availability 3.1 Overview In this chapter we consider the fault-tolerance properties of quorum systems, and of distributed protocols based on them. <p> This extremal question has been addressed before in a slightly more general setting, i.e., lower bounds on the number of hyperedges of a non 2-colorable hypergraph (NDC's are 3-colorable hypergraphs <ref> [GB85] </ref>). 19 Two results are presented in [AS92], a simple bound due to Erd-os [Erd63] which gives m 2 c1 , and a more delicate asymptotic bound due to Beck [Bec78] of m (2 c c 1=3 ). <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [GGM86] <author> O. Goldreich, S. Goldwasser, and S. Micali. </author> <title> How to construct random functions. </title> <journal> J. ACM, </journal> <volume> 33 </volume> <pages> 792-807, </pages> <year> 1986. </year>
Reference-contexts: The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category. Krawczyk [Kra94] suggested the notion of computational secret sharing which we adopt for our purposes. Pseudo-random functions: Our constructions employ pseudo-random functions (cf. <ref> [GGM86, Lub96] </ref>) for two purposes: encrypting the database and generating coin flips for the secret sharing schemes we use. As a heuristic, it is possible to replace the pseudo-random function with a private-key encryption function, such as DES. <p> Therefore we assume that Alice cannot masquerade as Bob and obtain access permission by this. The protocol ACP of figure 7.1 shows how to transform an SSS to an access control mechanism. We use the standard notion of a pseudo-random function (PRF), cf. <ref> [GGM86, Lub96] </ref>. 7.3.2 The Notion of Security To specify the security of a cryptographic scheme we should describe (i) the type of attack assumed, i.e., the power of the adversary, and (ii) what is meant by breaking the system, i.e., what tasks the adversary can perform as a result of the
Reference: [Gif79] <author> D. K. Gifford. </author> <title> Weighted voting for replicated data. </title> <booktitle> In Proc. 7th Symp. Oper. Sys. Princip., </booktitle> <pages> pages 150-159, </pages> <year> 1979. </year>
Reference-contexts: a distributed protocol that uses a quorum system. (ii) To construct new quorum systems that optimize these quality criteria, and (iii) To find new distributed applications that benefit from the use of quorum systems. 1.2 Related Work 1.2.1 Quorum Systems in General The first distributed control protocols using quorum systems <ref> [Tho79, Gif79] </ref> use voting to define the quorums. Each processor has a number of votes, and a quorum is any set of processors with a combined number of votes exceeding half of the system's total number of votes. The simple majority system is the most obvious voting system. <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [GLS81] <author> M. Grotschel, L. Lovasz, and A. Schrijver. </author> <title> The ellipsoid method and its consequences in combinatorial optimization. </title> <journal> Combinatorica, </journal> <volume> 1 </volume> <pages> 169-197, </pages> <year> 1981. </year>
Reference-contexts: In some cases the linear program 32 formulation of load also allows us to efficiently compute the load of a given quorum system, even if the quorums are not represented explicitly, using the Ellipsoid algorithm adaptation of <ref> [GLS81] </ref>. The behavior of the load when the elements may fail is also studied. We assume the common model that the elements fail independently with probability p. The load then becomes a random variable L p (S). <p> Using the dual program DLP allows us in some cases to compute L (S) even when S is given implicitly, using the Ellipsoid algorithm of <ref> [GLS81, Lov86] </ref> (see Section 4.3.4). 4.2.3 The Capacity of a Quorum System Each time that a distributed protocol generates an access to a quorum S 2 S, it causes work to be done by the elements of S. <p> Calculating the load quickly is especially important when failures may occur, since the computation needs to be done repeatedly after each configuration change. Instead we make use of the adaptation of the Ellipsoid algorithm of <ref> [GLS81] </ref>. Let d denote the dimension of the problem at hand.
Reference: [GMR88] <author> S. Goldwasser, S. Micali, and R. Rivest. </author> <title> A digital signature scheme secure against adaptive chosen-message attacks. </title> <journal> SIAM J. Computing, </journal> <volume> 17(2), </volume> <year> 1988. </year>
Reference-contexts: As a heuristic, it is possible to replace the pseudo-random function with a private-key encryption function, such as DES. Signatures: Digital signatures have been investigated extensively (cf. <ref> [GMR88, DN94] </ref> and the references therein). Our scheme can take any signature scheme and transform it into a distributed quorum based scheme, without altering its security. The notion of security we consider is that of existential unforgeability. <p> Our protocol can be based on any signature scheme, without altering the security properties of the scheme. Specifically, consider the "existentially unforgeable against adaptive chosen message attacks" definition of security, as defined by <ref> [GMR88] </ref>. Let Sig (m) be a signature scheme obeying this requirement 2 . Suppose that a user Alice was authorized to get signatures for a while and then this authorization was revoked.
Reference: [Gol87] <author> O. Goldreich. </author> <title> Two remarks concerning the Goldwasser-Micali-Rivest signature scheme. </title> <editor> In A.M. Odlyzko, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO'86, </booktitle> <volume> LNCS 263, </volume> <pages> pages 104-110. </pages> <publisher> Springer-Verlag, </publisher> <year> 1987. </year>
Reference-contexts: The secret sharing scheme is based on the construction of Rudich for s t connectivity that was generalized in [KW93] for span programs. Recall that the system elements in the Paths system are 2 Note that using <ref> [Gol87] </ref> we can convert any signature scheme into one where each message has a unique signature. 106 the edges of the grid (see Figure 4.2). However we first assign intermediate values to the vertices, from which we compute the shares. The basic secret unit s is a single bit.
Reference: [Gol95] <author> O. Goldreich. </author> <title> Foundations of cryptography (fragments of a book). </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year> <note> Electronic Publication: http: //www.eccc.uni-trier.de/eccc/info/ECCC-Books/eccc-books.html </note> . 
Reference-contexts: To the best of our knowledge, the common definition of 1 We can show that any quorum system has such a scheme, but the key sizes are, in general, exponential in the number of elements. 130 security of encryption (semantic, see <ref> [Gol95, Lub96] </ref>) does not allow us to conclude the following: if the keys for decrypting 50 out of the 100 files (say) are given, then nothing can be learned about the remaining 50 files.
Reference: [Gon93] <author> L. Gong. </author> <title> Increasing availability and security of an authentication service. </title> <journal> IEEE J. Selected Areas Comm., </journal> <volume> 11(5) </volume> <pages> 657-662, </pages> <year> 1993. </year>
Reference-contexts: A recent paper [MR97] makes finer distinctions between the types of processor failures that may be tolerated, and their effect on the requirements from a quorum system. The issue of availability is addressed by Gong <ref> [Gon93] </ref>, in the context of a secure authentication service. The suggested protocol uses a k-of-n threshold scheme, however in fact any secret sharing scheme could be used instead.
Reference: [Gri89] <author> G. R. Grimmett. </author> <title> Percolation. </title> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: A moment's reflection shows that an open left-right path exists in G (d) iff no closed top-bottom path exists in G fl (d), since a dual pair of edges e and e fl have the same state (see discussion in <ref> [Gri89] </ref>, pp. 198-199). Therefore the events LR and T BC are complementary. Since G (d) and G fl (d) are isomorphic, then T B and LRC are also complementary events. <p> kernel K (p; i) = p i (1 p) ni defined over [0; 1] fi f0; : : : ; ng is T P . 135 Appendix C Percolation Theory In this section we list the definitions and results that are used in our analysis of the Paths system, following <ref> [Gri89] </ref>. The percolation model we are interested in is as follows. Let Z 2 be the graph of the square lattice in the plane. <p> For example, Z 2 with p &lt; p c has a single connected (open) component of infinite size. When p &gt; p c there is no such component (see <ref> [Gri89] </ref>, p. 110). For bond percolation in the plane p c = 1 Notation: Let B (d) be the ball of radius d (in the L 1 norm) with center at the origin; B (d) = fv 2 Z 2 : jv 1 j + jv 2 j dg.
Reference: [Has81] <author> R. Hassin. </author> <title> Maximum flow in (s; t) planar networks. </title> <journal> Inf. Proc. Letters, </journal> <volume> 13:107, </volume> <year> 1981. </year> <month> 140 </month>
Reference-contexts: Since the network is planar we can find the flow in time O (n log n) using the algorithm of [IS79], or in time O (n p log n) by <ref> [Has81] </ref> using the methods of [Fre87]. Given these path collections, the strategy w is the following: If either k LR = 0 or k T B = 0 then no live quorums exist in configuration x.
Reference: [Her84] <author> M. P. Herlihy. </author> <title> Replication Methods for Abstract Data Types. </title> <type> PhD thesis, </type> <institution> Massachusetts Institute of Technology, MIT/LCS/TR-319, </institution> <year> 1984. </year>
Reference-contexts: The processors on a distributed system are indeed autonomous, however some cooperation must exist between them. This raises the need for various control mechanisms. Two typical mechanisms are mutual exclusion (cf. [Ray86]) and data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>). The need for mutual exclusion arises when there is some resource on the network (e.g., a printer) that may be allocated to a single processor at a time. A mutual exclusion protocol guarantees that no processor will access the resource while it is allocated to another. <p> record is semantically secure.) * Instead of a quorum system as in Definition 2.1.1, we can use it's standard generalization to a read/write system, i.e., a pair of set systems (R; W) such that R " W 6= ? for any sets R 2 R and W 2 W (cf., <ref> [Her84, Fu90] </ref>). With this formulation, the basic paradigm is that to gain access a user must obtain permission from a read-quorum R 2 R. To revoke a user's access, a write-quorum W 2 W must be informed.
Reference: [HMP95] <author> R. Holzman, Y. Marcus, and D. Peleg. </author> <title> Load balancing in quorum systems. </title> <booktitle> In Proc. 4th Workshop on Algorithms and Data Structures, </booktitle> <pages> pages 38-49, </pages> <address> Kingston, Ont., Canada, </address> <year> 1995. </year> <note> To appear in SIAM J. Discrete Math. </note>
Reference-contexts: A characterization of non-dominated coteries in terms of boolean functions appears in [IK93, Loe94, BI95a]. It is shown that the characteristic function of any non-dominated coterie can be decomposed into a tree of "2-of-3" majority gates. 3 In <ref> [HMP95] </ref>, the question of how evenly balanced the work load can be is studied. <p> BLP : &gt; &lt; P m j=1 w j = 1; (viii) P w j 0; L 0: (x) The program BLP is not always feasible, since finding a solution would imply that S can be perfectly balanced, which cannot be done for all quorum systems <ref> [HMP95] </ref>. Nevertheless, one could hope that such a balancing strategy (if found) would induce the optimal load. The next proposition shows that this is true for a certain subclass of quorum systems. Proposition 4.3.10 Let S be an s-uniform quorum system. <p> In particular, it serves as an extreme case for a quorum system for which it is hard to balance the load among the processors <ref> [HMP95] </ref>. 6.6.1 Availability In order to compute F p (Nuc), note that any transversal T of the system has jT "U 1 j r 1, since Nuc 2 NDC.
Reference: [Hol93] <author> R. Holzman, </author> <year> 1993. </year> <type> Personal communication. </type>
Reference-contexts: Corollary 3.3.4 For any S 2 NDC, F 1=2 (S) = 1 2 . Remark: An alternative proof for Theorem 3.3.3 has been suggested to us <ref> [Hol93] </ref>. This proof is based on the fact that the failure probability of an ND coterie can be viewed as the multi-linear extension (MLE) of a constant-sum game. Consequently, Theorem X.2.6 of [Owe82, pp. 201-202] can be used to obtain the claim. <p> Repeating the same argument using f S Maj completes the proof. Remark: An alternative proof for Theorem 3.4.5 has been suggested to us <ref> [Hol93] </ref>.
Reference: [HR90] <author> T. Hagerup and C. Rub. </author> <title> A guided tour of Chernoff bounds. </title> <journal> Inf. Proc. Letters, </journal> <volume> 33 </volume> <pages> 305-308, </pages> <year> 1990. </year>
Reference-contexts: Consider a row of width k and let #good count the number of live elements in it. Then E [#good ] = kq &gt; k=2 when q &gt; 1 2 . Using the strong type of Chernoff bound for the binomial 71 distribution (see <ref> [HR90] </ref>), P (#good k ) 1 kq k=a h i k Let fi = (qa) 1=a e 1=aq . Then P (#good k a ) 1 fi k . fi .
Reference: [HT88] <author> M. P. Herlihy and J. D. Tygar. </author> <title> How to make replicated data secure. </title> <booktitle> In Advances in Cryptology - CRYPTO'87, </booktitle> <volume> LNCS 293, </volume> <pages> pages 379-391. </pages> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: A concept of capacity in voting systems is defined in [JRT93] and some voting systems are compared. The analysis does not distinguish between properties of the quorum system and properties of the strategy that chooses which quorum to access. 1.2.2 Quorum Systems and Security Herlihy and Tygar <ref> [HT88] </ref> have suggested a scheme to protect quorum based replicated databases.
Reference: [IK93] <author> T. Ibaraki and T. Kameda. </author> <title> A theory of coteries: Mutual exclusion in distributed systems. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 4(7) </volume> <pages> 779-794, </pages> <year> 1993. </year>
Reference-contexts: A quorum is "hit" if at least one of its members has failed. A characterization of non-dominated coteries in terms of boolean functions appears in <ref> [IK93, Loe94, BI95a] </ref>. It is shown that the characteristic function of any non-dominated coterie can be decomposed into a tree of "2-of-3" majority gates. 3 In [HMP95], the question of how evenly balanced the work load can be is studied. <p> Properties of characteristic functions of quorum systems are discussed extensively in <ref> [Ram90, IK93] </ref>. 2.2 Some Examples Let us illustrate the concept of quorum systems by giving a number of examples, which play an important role in the results of this work. All the following constructions, except the Grid and FPP systems, are known to be non-dominated coteries. <p> The first results are properties of the domination relation and of non-dominated quorum systems. Lemma 2.3.1 [GB85] Let S 2 NDC and let T be a transversal of S. Then there exists a quorum S 2 S s.t. S T . Lemma 2.3.2 <ref> [IK93] </ref> Let S be a coterie. Then S 2 NDC iff for all X U , exactly one of X and U n X is a transversal of S. Theorem 2.3.3 [GB85] Let S; R be coteries. <p> This theorem has been discovered by researchers in game theory and combinatorics (Monjardet, and later Loeb) and independently by researchers in the field of Boolean functions and distributed computing (Ibaraki and Kameda). Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> Let S 2 NDC and let f S be its characteristic function. <p> Consequently, Theorem X.2.6 of [Owe82, pp. 201-202] can be used to obtain the claim. Theorem 3.3.3 can also be derived from the self-duality of NDC's, cf. <ref> [IK93] </ref>. 18 3.3.2 Conditions for Non-Domination We now present two consequences of the symmetry theorem. The first is a characterization of NDC's in terms of the failure probability F 1=2 . This characterization (Corollary 3.3.9) gives another method of proving coterie non-domination which is sometimes easier than a direct proof. <p> Since Triang is a d-uniform quorum system we can use Proposition 4.3.10 and conclude that L (Triang) = 2 2 : 6.5 The Tree System The Tree system was first described and proved to be a coterie in [AE91]. In <ref> [IK93, NM92] </ref> it is shown that Tree 2 NDC. The elements are organized in a complete rooted binary tree (we assume that n = 2 h 1 for some h &gt; 0). <p> However only two input lines of each internal majority gate are connected to lower level gates; the middle input line is directly labeled with a system element. This is the description given in <ref> [IK93] </ref>. To calculate m (Tree), define m (h) to be the number of quorums in a Tree system of height h. Then m (h) obeys the recurrence m (h) = 2m (h 1) + (m (h 1)) 2 ; and m (1) = 1. <p> Remark: The above scheme works for any quorum system having a description in the form of a tree of 2-of-3 majority gates, with the system elements labeling the input lines. By Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> we know that every non-dominated quorum system has such a description. <p> The HQS system is a complete ternary tree of 2-of-3 majorities, so by induction on the tree height and using Theorem 8.3.7 at each level it follows that HQS is evasive. A description of the Tree system as another tree of 2-of-3 majorities appears in <ref> [IK93] </ref> so a similar inductive proof shows its evasiveness. Remark: In fact Theorem 2.3.6 shows that any NDC can be decomposed into a tree of 2-of-3 majorities.
Reference: [INK95] <author> T. Ibaraki, H. Nagamochi, and T. Kameda. </author> <title> Optimal coteries for rings and related networks. </title> <journal> Distributed Computing, </journal> <volume> 8 </volume> <pages> 191-201, </pages> <year> 1995. </year>
Reference-contexts: As will be shown in the sequel, it turns out that the property of non-domination has a strong effect on the failure probability F p (S). It is known that the NDC's are "the most available" quorum systems (e.g., <ref> [BG86, INK95] </ref>). We show that over the NDC's, the behavior of the failure probability F p depends on the exact value of p. For any S 2 NDC, F p (S) is symmetric, i.e., F p (S) = 1 F 1p (S). <p> The second consequence we obtain from the symmetry theorem is a lower bound on m (S), the number of quorums in a system S 2 NDC, in terms of c (S), the cardinality of the smallest quorum. The following lemma of <ref> [INK95] </ref> shows that NDC's are "better" (i.e., have higher availability) than dominated coteries. Lemma 3.3.5 [INK95] Let S; R be coteries such that R S, and let 0 &lt; p &lt; 1. Then F p (R) F p (S). <p> The following lemma of <ref> [INK95] </ref> shows that NDC's are "better" (i.e., have higher availability) than dominated coteries. Lemma 3.3.5 [INK95] Let S; R be coteries such that R S, and let 0 &lt; p &lt; 1. Then F p (R) F p (S). We improve this result slightly by showing that NDC's are strictly better. This is necessary for the proof of Corollary 3.3.9.
Reference: [IS79] <author> A. Itai and Y. Shiloach. </author> <title> Maximum flow in planar networks. </title> <journal> SIAM J. Computing, </journal> <volume> 8 </volume> <pages> 135-150, </pages> <year> 1979. </year>
Reference-contexts: Since the network is planar we can find the flow in time O (n log n) using the algorithm of <ref> [IS79] </ref>, or in time O (n p log n) by [Has81] using the methods of [Fre87]. Given these path collections, the strategy w is the following: If either k LR = 0 or k T B = 0 then no live quorums exist in configuration x.
Reference: [ISN87] <author> M. Ito, A. Saito, and T. Nishizeki. </author> <title> Secret sharing schemes realizing general access structure. </title> <booktitle> In Proc. IEEE Global Telecommunication Conf. </booktitle> <volume> (Globecomm 87), </volume> <pages> pages 99-102, </pages> <year> 1987. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely [Sha79, Bla79]. It was extended to arbitrary access structures in <ref> [ISN87] </ref>. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. [BD90, BDGV92, BC92]). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems.
Reference: [JRT93] <author> P. Jalote, S. Rangarajan, and S. K. Tripathi. </author> <title> Capacity of voting systems. </title> <journal> IEEE Trans. Software Eng., </journal> <volume> 19(7) </volume> <pages> 698-706, </pages> <year> 1993. </year>
Reference-contexts: A concept of capacity in voting systems is defined in <ref> [JRT93] </ref> and some voting systems are compared. The analysis does not distinguish between properties of the quorum system and properties of the strategy that chooses which quorum to access. 1.2.2 Quorum Systems and Security Herlihy and Tygar [HT88] have suggested a scheme to protect quorum based replicated databases.
Reference: [Kar68] <author> S. Karlin. </author> <title> Total Positivity, volume 1. </title> <publisher> Stanford University Press, </publisher> <year> 1968. </year>
Reference-contexts: Then in Section 3.4.2 these properties are transferred to the difference between the respective failure probabilities using the Variation Diminishing Property (VDP) of totally positive kernels <ref> [Kar68] </ref>. The background material needed for the proofs appears in Appendix A (hypergraph combinatorics) and Appendix B (total positivity). In Section 3.4.3 we show the uniqueness of the extremal NDC's. <p> Proposition A.7 [Fur88, p. 170] Let m (S) and c (S) be as before. Then -fl (S) n m (S) : Appendix B Total Positivity We now introduce some definitions and results from <ref> [Kar68] </ref> that are used in Section 3.4. The results are not presented in their most general formulation, but rather in a form suited to their intended use in our proof. <p> Let X be a closed interval. Let K (x; i) be defined on X fi I. Consider the transformation T (of f ) defined by (T f )(x) = i2I Theorem B.3 (Variation Diminishing Property) <ref> [Kar68] </ref> If a kernel K is T P and g (x) = (T f )(x) then S (g) S (f ). Furthermore, the values of the functions f and g exhibit the 134 same sequence of signs when their respective arguments traverse the domain of definition from left to right.
Reference: [KC91] <author> A. Kumar and S. Y. Cheung. </author> <title> A high availability p n hierarchical grid algorithm for replicated data. </title> <journal> Inf. Proc. Letters, </journal> <volume> 40 </volume> <pages> 311-316, </pages> <year> 1991. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and <ref> [Kum91, KC91, RT91, RST92] </ref> (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> The proof of Lemma 4.4.22 would still hold for such a system. However the load and failure probability would depend on the specific structure of the function used. * The AndOr system is isomorphic to the hierarchical grid construction of <ref> [KC91] </ref>, when the grids at all the levels are 2 fi 2 grids. The read-quorum and write-quorum procedures of [KC91] correspond to our top level activations of the ANDset and ORset procedures, respectively. <p> However the load and failure probability would depend on the specific structure of the function used. * The AndOr system is isomorphic to the hierarchical grid construction of <ref> [KC91] </ref>, when the grids at all the levels are 2 fi 2 grids. The read-quorum and write-quorum procedures of [KC91] correspond to our top level activations of the ANDset and ORset procedures, respectively. <p> In particular, this means that CWlog is asymptotically superior to the FPP [Mae85] and the Grid [CAA92], both of which have failure probabilities tending to 1 (see <ref> [KC91, RST92] </ref>). The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). <p> The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). The CWlog has worse asymptotic availability than the constructions of <ref> [Kum91, KC91] </ref> and the constructions of Chapter 4, and also than the Maj system [Tho79], which has the optimal availability [BG87]. <p> We show that some of these have Condorcet failure probabilities (e.g., the constructions of [EL75, AE91, Kum91]), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in <ref> [RST92, KC91] </ref>, the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. We also present novel balancing strategies which induce the optimal load for some of the systems (e.g., the Tree and Triang). <p> Let F p (d) denote F p (Grid) for a d fi d grid. To bound F p (d) from below, note that for the system to fail it is enough to have at least one failure per row. Therefore, as shown in <ref> [KC91] </ref>, F p (d) P (at least one failure per row) = (1 q d ) d ! d!1 We have already seen that L (Grid) = 2d1 d 2 2 p n in Example 4.3.13. 6.10 The Hierarchical Quorum System In this section we analyze the load and availability of
Reference: [Kei94] <author> I. Keidar. </author> <title> A highly available paradigm for consistent object replication. </title> <type> Master's thesis, </type> <institution> Institute of Computer Science, The Hebrew University of Jerusalem, Israel, </institution> <year> 1994. </year>
Reference-contexts: The processors on a distributed system are indeed autonomous, however some cooperation must exist between them. This raises the need for various control mechanisms. Two typical mechanisms are mutual exclusion (cf. [Ray86]) and data replication protocols (cf. <ref> [DGS85, Her84, Ami95, Kei94] </ref>). The need for mutual exclusion arises when there is some resource on the network (e.g., a printer) that may be allocated to a single processor at a time. A mutual exclusion protocol guarantees that no processor will access the resource while it is allocated to another.
Reference: [Kes80] <author> H. Kesten. </author> <title> The critical probability of bond percolation on the square lattice equals 1 2 . Comm. </title> <journal> Mathematical Physics, </journal> <volume> 71 </volume> <pages> 41-59, </pages> <year> 1980. </year>
Reference: [KFYA93] <author> H. Kakugawa, S. Fujita, M. Yamashita, and T. Ae. </author> <title> Availability of k-coterie. </title> <journal> IEEE Trans. Comput., </journal> <volume> 42(5) </volume> <pages> 553-558, </pages> <year> 1993. </year>
Reference-contexts: The case in which the elements fail with different probabilities p i , all less than 1 2 , is addressed in [SB94]. The availability of k-coteries is studied in <ref> [KFYA93] </ref>. A performance analysis using queueing theory can be found in [MYK94]. A related criterion, called the fault-tolerance of a quorum system, is introduced in [BG86] and studied further in [KS93].
Reference: [Knu68] <author> D. E. Knuth. </author> <booktitle> The Art of Computer Programming, Vol. 1|Fundamental Algorithms. </booktitle> <publisher> Addison-Wesley, </publisher> <year> 1968. </year>
Reference-contexts: There are (d 1) 1 = n d 1 ! ways to do so. Therefore #Walls = X d 2 = j n 3 j ! where the summations are over all the values giving nonzero binomial coefficients. Using a combinatorial identity <ref> [Knu68, p. 84] </ref> we get #Walls = Fib (n 3). Remark: In order for this result to be comparable to the numbers of ND coteries and voting systems cited in Fact 2.3.7, we must also take into account the number of ways of mapping n elements onto a wall. <p> Then X i even a S X a S Proof: Assume that k is odd. Note that since n is even, if i is even then so is n i. Then using Lemma 3.3.1 and a combinatorial identity (cf. <ref> [Knu68] </ref>) we obtain X i even a S X i even i + a S X i even i = 2 0in i even i = 2 n2 : However a direct consequence of Lemma 3.3.1 is that P i = 2 n1 .
Reference: [Kra94] <author> H. Krawczyk. </author> <title> Secret sharing made short. </title> <booktitle> In Advances in Cryptology - CRYPTO'93, </booktitle> <volume> LNCS 773, </volume> <pages> pages 136-146. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category. Krawczyk <ref> [Kra94] </ref> suggested the notion of computational secret sharing which we adopt for our purposes. Pseudo-random functions: Our constructions employ pseudo-random functions (cf. [GGM86, Lub96]) for two purposes: encrypting the database and generating coin flips for the secret sharing schemes we use. <p> It seems that using Key ff (x) as the (short) seed for some other PRF whose (long) output then encrypts the data would yield an equally secure protocol (this is an adaptation of Krawczyk's <ref> [Kra94] </ref> computational secret sharing). <p> This makes the protocol ridiculous if we make the assumptions of protocol ACP, namely, that the key is as long as the data item itself, since the database size increases by a factor of n + 1. However if the key is much shorter than the data (cf. <ref> [Kra94] </ref>), then this overhead can be tolerated. * The protocol is not flexible, in that it requires the number of servers n and their private functions E i to be fixed when the database is created. * The protocol cannot be used as a group signature scheme, since this would require
Reference: [KRS93] <author> A. Kumar, M. Rabinovich, and R. K. Sinha. </author> <title> A performance study of general grid structures for replicated data. </title> <booktitle> In Proc. 13th Inter. Conf. Dist. Comp. Sys., </booktitle> <pages> pages 178 185, </pages> <year> 1993. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), <ref> [CAA92, KRS93] </ref> (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> In this chapter we introduce a new class of quorum system constructions, which we call Crumbling Walls (or simply walls). The crumbling walls are a generalization of the 57 triangular construction of [Lov73, EL75], the Grid of [CAA92], the hollow grids of <ref> [KRS93] </ref>, the Wheel of [MP92] and the Lovasz coteries of [Nei92]. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> For comparison we show F p (Tree) and F p (Grid) alongside. The comparison with the Tree system is relevant because currently it is the only alternative to CWlog when log-sized quorums are required. The comparison with the Grid is relevant since the Grid is sometimes proposed (cf. <ref> [KRS93] </ref>) as a viable choice for small systems with reliable elements (small p), despite its poor asymptotic availability.
Reference: [KS93] <author> A. Kumar and A. Segev. </author> <title> Cost and availability tradeoffs in replicated data concurrency control. </title> <journal> ACM Trans. Database Sys., </journal> <volume> 18(1) </volume> <pages> 102-131, </pages> <year> 1993. </year> <month> 141 </month>
Reference-contexts: The availability of k-coteries is studied in [KFYA93]. A performance analysis using queueing theory can be found in [MYK94]. A related criterion, called the fault-tolerance of a quorum system, is introduced in [BG86] and studied further in <ref> [KS93] </ref>. The fault tolerance of a quorum system is measured by the maximal number of processors that can fail before all the quorums are "hit", in the worst possible configuration of failures. A quorum is "hit" if at least one of its members has failed.
Reference: [KSS84] <author> J. Kahn, M. Saks, and D. Sturtevant. </author> <title> A topological approach to evasiveness. </title> <journal> Combina--torica, </journal> <volume> 4 </volume> <pages> 297-306, </pages> <year> 1984. </year>
Reference-contexts: Karp conjectured that in fact every such property is evasive, i.e., requires that all n arguments be tested. The Aanderaa-Rosenberg conjecture was proved by [RV76], who also showed that almost every boolean function is evasive for large n. Karp's stronger conjecture was later proved by <ref> [KSS84] </ref>. To our knowledge, the probe complexity of quorum systems, or equivalently, the argument complexity of boolean functions characterizing a quorum system, has not been studied before. In fact, most of the techniques of [RV76] and [KSS84] are not applicable in our case. <p> Karp's stronger conjecture was later proved by <ref> [KSS84] </ref>. To our knowledge, the probe complexity of quorum systems, or equivalently, the argument complexity of boolean functions characterizing a quorum system, has not been studied before. In fact, most of the techniques of [RV76] and [KSS84] are not applicable in our case. This is since both proofs rely on the fact that a graph property P has a nice algebraic structure: the group of permutations of the k vertices acts transitively on the n = k edges while preserving P . <p> Therefore it is reasonable to expect that in a class of functions that has a "nice" structure, all the functions are evasive. This indeed is the case for graph-property functions, as shown by <ref> [RV76, KSS84] </ref>. However for the class of non-dominated quorum systems this is not the case.
Reference: [Kum91] <author> A. Kumar. </author> <title> Hierarchical quorum consensus: A new algorithm for managing replicated data. </title> <journal> IEEE Trans. Comput., </journal> <volume> 40(9) </volume> <pages> 996-1004, </pages> <year> 1991. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and <ref> [Kum91, KC91, RT91, RST92] </ref> (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). The CWlog has worse asymptotic availability than the constructions of <ref> [Kum91, KC91] </ref> and the constructions of Chapter 4, and also than the Maj system [Tho79], which has the optimal availability [BG87]. <p> Then in Sections 6.3-6.10 we analyze some specific quorum systems which are not defined by voting. We show that some of these have Condorcet failure probabilities (e.g., the constructions of <ref> [EL75, AE91, Kum91] </ref>), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. <p> (at least one failure per row) = (1 q d ) d ! d!1 We have already seen that L (Grid) = 2d1 d 2 2 p n in Example 4.3.13. 6.10 The Hierarchical Quorum System In this section we analyze the load and availability of the hierarchical system of <ref> [Kum91] </ref>. In this system the elements are the leaves of a complete ternary tree. The internal nodes are 2-of-3 majority gates. <p> Hence P (jl r) = P (jl r). 7.6.2 The HQS and Tree Systems In this section we describe two schemes, for the hierarchical quorum system (HQS) of <ref> [Kum91] </ref> and for the Tree system of [AE91]. We have analyzed the availability and load of these systems in Sections 6.5 and 6.10, respectively. The building block for both the Tree and HQS systems is the 2-of-3 majority gate, which is a threshold function. <p> Proof: An adversary strategy A (ff) which forces the user Alice to probe all n inputs is the following: Answer the first k 1 probes by "1". Answer the next n k probes by "0". Answer the n'th probe by ff. Corollary 8.3.10 The Tree [AE91] and HQS <ref> [Kum91] </ref> quorum systems are evasive. Proof: By Proposition 8.3.9 the 2-of-3 majority function is evasive. The HQS system is a complete ternary tree of 2-of-3 majorities, so by induction on the tree height and using Theorem 8.3.7 at each level it follows that HQS is evasive.
Reference: [KW93] <author> M. Karchmer and A. Wigderson. </author> <title> On span programs. </title> <booktitle> In Proc. Structures in Complexity Theory, </booktitle> <pages> pages 102-111, </pages> <year> 1993. </year>
Reference-contexts: Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. The most general access structures for which efficient secret sharing schemes are known is that of span programs <ref> [KW93] </ref>. All our schemes fall into this category. Krawczyk [Kra94] suggested the notion of computational secret sharing which we adopt for our purposes. Pseudo-random functions: Our constructions employ pseudo-random functions (cf. [GGM86, Lub96]) for two purposes: encrypting the database and generating coin flips for the secret sharing schemes we use. <p> The secret sharing scheme is based on the construction of Rudich for s t connectivity that was generalized in <ref> [KW93] </ref> for span programs. Recall that the system elements in the Paths system are 2 Note that using [Gol87] we can convert any signature scheme into one where each message has a unique signature. 106 the edges of the grid (see Figure 4.2).
Reference: [Loe94] <author> D. E. Loeb. </author> <title> A new proof of Monjardet's median theorem, 1994. </title> <type> Manuscript, </type> <note> to appear in J. Comb. Theory, Series A. </note>
Reference-contexts: A quorum is "hit" if at least one of its members has failed. A characterization of non-dominated coteries in terms of boolean functions appears in <ref> [IK93, Loe94, BI95a] </ref>. It is shown that the characteristic function of any non-dominated coterie can be decomposed into a tree of "2-of-3" majority gates. 3 In [HMP95], the question of how evenly balanced the work load can be is studied. <p> This theorem has been discovered by researchers in game theory and combinatorics (Monjardet, and later Loeb) and independently by researchers in the field of Boolean functions and distributed computing (Ibaraki and Kameda). Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> Let S 2 NDC and let f S be its characteristic function. <p> Remark: The above scheme works for any quorum system having a description in the form of a tree of 2-of-3 majority gates, with the system elements labeling the input lines. By Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> we know that every non-dominated quorum system has such a description.
Reference: [Lov73] <author> L. Lovasz. </author> <title> Coverings and colorings of hypergraphs. </title> <booktitle> In Proc. 4th Southeastern Conf. Combinatorics, Graph Theory and Computing, </booktitle> <pages> pages 3-12, </pages> <year> 1973. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to <ref> [Lov73, EL75] </ref>. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. A recent construction of [Baz96], which develops ideas presented in this work, is based on triangulated planar graphs. <p> Grid In the Grid [CAA92] the n = d 2 elements are arranged in a d fi d grid, and a quorum in the system consists of one complete row and a representative element from all the other rows (see Figure 2.1). Triang In the triangular system <ref> [Lov73, EL75] </ref>, the elements are arranged in d rows, with row i containing i elements. A quorum is any set composed of one complete row i, and a representative from every row j &gt; i (see Figure 2.2-a). <p> In this chapter we introduce a new class of quorum system constructions, which we call Crumbling Walls (or simply walls). The crumbling walls are a generalization of the 57 triangular construction of <ref> [Lov73, EL75] </ref>, the Grid of [CAA92], the hollow grids of [KRS93], the Wheel of [MP92] and the Lovasz coteries of [Nei92]. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> The main claim in this section (Theorem 5.5.3) is that walls with super-logarithmic row widths do not have Condorcet failure probabilities. The Triang system <ref> [Lov73, EL75] </ref> is an example of a wall family with super-logarithmic row widths. 75 We start by looking at the behavior of F p for a fixed value of p. <p> Then in Sections 6.3-6.10 we analyze some specific quorum systems which are not defined by voting. We show that some of these have Condorcet failure probabilities (e.g., the constructions of [EL75, AE91, Kum91]), while others (e.g., <ref> [Lov73] </ref>) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. <p> It is easy to see that this is a balancing strategy which induces a load of (n 1)=(2n 3) on each element, and that this is the lowest possible value. Thus L (Wheel) = (n 1)=(2n 3). 6.4 The Triang Quorum System The Triang system was first described in <ref> [Lov73, EL75] </ref> and proved to be ND in [Nei92, MP92]. The elements are organized in a triangular grid of d rows, with the i'th row containing i elements (we assume n = d (d+1) 2 ). <p> It is obvious that c (Triang) = d, and not hard to see that m (Triang) = b (e 1)d!c where e = 2:718 : : : (cf. <ref> [Lov73] </ref>). 6.4.1 Availability Let F p (d) denote F p of a Triang of d rows. <p> [AE91], c (Tree) log n and m (Tree) 2 n=2 , so Proposition 8.4.2 gives a linear lower bound of PC (Tree) n=2, much better than that of Proposi tion 8.4.1, but still short of the truth which is PC (Tree) = n by Corollary 8.3.10. * The Triang system <ref> [Lov73] </ref>, is uniform with c (Triang) = O ( p n) and m (Triang) = ( n!).
Reference: [Lov86] <author> L. Lovasz. </author> <title> An Algorithmic Theory of Numbers, Graphs and Convexity. </title> <publisher> SIAM, </publisher> <address> Philadel-phia, </address> <year> 1986. </year>
Reference-contexts: Using the dual program DLP allows us in some cases to compute L (S) even when S is given implicitly, using the Ellipsoid algorithm of <ref> [GLS81, Lov86] </ref> (see Section 4.3.4). 4.2.3 The Capacity of a Quorum System Each time that a distributed protocol generates an access to a quorum S 2 S, it causes work to be done by the elements of S.
Reference: [Lub96] <author> M. Luby. </author> <title> Pseudorandomenss and Cryptographic Applications. </title> <publisher> Princeton Universtity Press, </publisher> <address> Princeton, New Jersey, </address> <year> 1996. </year>
Reference-contexts: The most general access structures for which efficient secret sharing schemes are known is that of span programs [KW93]. All our schemes fall into this category. Krawczyk [Kra94] suggested the notion of computational secret sharing which we adopt for our purposes. Pseudo-random functions: Our constructions employ pseudo-random functions (cf. <ref> [GGM86, Lub96] </ref>) for two purposes: encrypting the database and generating coin flips for the secret sharing schemes we use. As a heuristic, it is possible to replace the pseudo-random function with a private-key encryption function, such as DES. <p> Therefore we assume that Alice cannot masquerade as Bob and obtain access permission by this. The protocol ACP of figure 7.1 shows how to transform an SSS to an access control mechanism. We use the standard notion of a pseudo-random function (PRF), cf. <ref> [GGM86, Lub96] </ref>. 7.3.2 The Notion of Security To specify the security of a cryptographic scheme we should describe (i) the type of attack assumed, i.e., the power of the adversary, and (ii) what is meant by breaking the system, i.e., what tasks the adversary can perform as a result of the <p> To the best of our knowledge, the common definition of 1 We can show that any quorum system has such a scheme, but the key sizes are, in general, exponential in the number of elements. 130 security of encryption (semantic, see <ref> [Gol95, Lub96] </ref>) does not allow us to conclude the following: if the keys for decrypting 50 out of the 100 files (say) are given, then nothing can be learned about the remaining 50 files.
Reference: [Mae85] <author> M. Maekawa. </author> <title> A p n algorithm for mutual exclusion in decentralized systems. </title> <journal> ACM Trans. Comp. Sys., </journal> <volume> 3(2) </volume> <pages> 145-159, </pages> <year> 1985. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in <ref> [Mae85] </ref> (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> FPP The FPP system <ref> [Mae85] </ref> is based on a finite projective plane of order t, where the elements correspond to the n = t 2 + t + 1 points and quorums correspond to the lines, of size t + 1. <p> Here we discuss the shortcomings of some alternatives. Several authors (e.g., <ref> [Mae85, AE91] </ref> have emphasized the criterion of having small quorums. This is an important parameter since it captures the message complexity of a protocol using the quorum system. 1 However it does not tell us how to use the quorums so each element is used as infrequently as possible. <p> Over an odd-sized universe, Maj is an n+1 2 -fair quorum system, so L (Maj) = n+1 2n 1 2. The FPP system <ref> [Mae85] </ref> is a (t + 1)-fair quorum system over n = t 2 + t + 1 elements, so L (FPP) = t+1 n . In fact equality holds in the tighter lower bound of Proposition 4.3.3 for this system. 3. <p> By Proposition 4.3.5 we have: Theorem 5.3.1 The availability of CWlog is optimal up to a constant factor for quorum systems with c (S) = O (lg n). In particular, this means that CWlog is asymptotically superior to the FPP <ref> [Mae85] </ref> and the Grid [CAA92], both of which have failure probabilities tending to 1 (see [KC91, RST92]). The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). <p> We show that some of these have Condorcet failure probabilities (e.g., the constructions of [EL75, AE91, Kum91]), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in [RST92, KC91], the finite projective plane construction <ref> [Mae85] </ref> and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. We also present novel balancing strategies which induce the optimal load for some of the systems (e.g., the Tree and Triang). <p> As for the load, we have already seen that L (Maj) = n+1 2n in Example 4.3.13. 90 6.8 The FPP Quorum System The FPP quorum system is based on finite projective planes, and appears first in a mutual exclusion protocol in <ref> [Mae85] </ref>. For a prime r let t = r k for some integer k. Then the finite projective plane of order t is a quorum system with m (FPP) = t 2 + t + 1 quorums, each of size c (FPP) = t + 1. <p> Note that not all quorum systems enjoy these properties. For instance, the majority system [Tho79], i.e., the n+1 2 -of-n threshold system, has optimal availability but induces a high load and has large quorums. At the other extreme, the finite projective plane <ref> [Mae85] </ref> has optimal load but very poor availability. We suggest using some recent constructions of quorum systems that have optimal performance according to the above criteria. We show how to convert secret sharing schemes for access structures corresponding to these quorum systems into solutions for our problems. <p> Proposition 8.3.1 [RV76] Let a S be the availability profile of a quorum system S 2 NDC. If i even a S P a S i then PC (S) = n, i.e., S is evasive. Example 8.3.2 The only finite projective plane (FPP) system <ref> [Mae85] </ref> that is ND is the 7-point Fano plane [Fu90]. For this system we have a FPP = (0; 0; 0; 7; 28; 21; 7; 1) by inspection, so the sum on the even indices is 35 while on the odd indices it is 29. <p> system (assuming that each processor becomes faulty independently with probability p). * We have found secret sharing schemes for many interesting quorum systems (falling into the category of span programs), however there are some for which it is not clear whether a good scheme exists, for example the projective plane <ref> [Mae85] </ref>.
Reference: [Men86] <author> M. V. Menshikov. </author> <title> Coincidence of critical points in percolation problems. </title> <journal> Soviet Mathematics Doklady, </journal> <volume> 33 </volume> <pages> 856-859, </pages> <year> 1986. </year>
Reference-contexts: The following theorem shows that when the probability p for a closed edge is above the critical probability, the probability of having long open paths decays exponentially fast. Theorem C.1 <ref> [Men86] </ref> If p &gt; 1 2 then there exists (p) &gt; 0 such that P p (0 $ @B (d)) &lt; e (p)d for all d: Definition C.2 Let E be an event defined in the percolation model.
Reference: [MNSS88] <author> S. P. Miller, B. C. Neuman, J. L. Schiller, and J. H. Saltzer. </author> <title> Kerberos authentication and authorization system. Project Athena Technical Plan, Section E.2.1, </title> <publisher> MIT, </publisher> <year> 1988. </year>
Reference-contexts: If a quorum of access servers authorizes 101 the gateway to honor Bob's request, the gateway sends the key to Bob, in one piece. This can be done since the gateway knows all the keys. The second variant of this protocol works in the "Kerberos model" <ref> [MNSS88] </ref>. Here again there are gateways which hold all the database keys. In addition, the access servers have a signature scheme 1 which the gateways can verify. In this variant, Bob requests permission from the access servers directly.
Reference: [MO79] <author> A. W. Marshall and I. Olkin. </author> <title> Inequalities: Theory of Majorization and its Application. </title> <publisher> Academic Press, </publisher> <year> 1979. </year>
Reference-contexts: Repeating the same argument using f S Maj completes the proof. Remark: An alternative proof for Theorem 3.4.5 has been suggested to us [Hol93]. The proof uses the notion of majorization <ref> [MO79] </ref> and the fact that k i = p i (1 p) ni is a decreasing sequence for i = 0; : : : ; n when p &lt; 1 2 . 3.4.3 Uniqueness of the Extremal NDC's In this section we show the uniqueness of the failure probability of the
Reference: [Mon72] <author> B. Monjardet. </author> <title> Characterisation des elements ipsoduaux du treillis distributif libre. </title> <editor> C. R. </editor> <publisher> Acad. </publisher> <address> Sc. Paris, </address> <booktitle> serie A, </booktitle> <volume> 274 </volume> <pages> 12-15, </pages> <year> 1972. </year>
Reference-contexts: This theorem has been discovered by researchers in game theory and combinatorics (Monjardet, and later Loeb) and independently by researchers in the field of Boolean functions and distributed computing (Ibaraki and Kameda). Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> Let S 2 NDC and let f S be its characteristic function. <p> Remark: The above scheme works for any quorum system having a description in the form of a tree of 2-of-3 majority gates, with the system elements labeling the input lines. By Theorem 2.3.6 <ref> [Mon72, IK93, Loe94] </ref> we know that every non-dominated quorum system has such a description.
Reference: [MP92] <author> Y. Marcus and D. Peleg. </author> <title> Construction methods for quorum systems. </title> <type> Technical Report CS92-33, </type> <institution> The Weizmann Institute of Science, Rehovot, Israel, </institution> <year> 1992. </year>
Reference-contexts: The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in <ref> [MP92] </ref>. A recent construction of [Baz96], which develops ideas presented in this work, is based on triangulated planar graphs. Descriptions of these constructions can be found in Section 2.2, and their properties are analyzed in Chapter 6. <p> These and other examples are described in detail and analyzed in Chapter 6. Sngl The singleton system, is the set system Sngl = ffugg. Alternatively, we call this quorum system a monarchy of element u, and the element u is called the king. Wheel The Wheel <ref> [MP92] </ref> contains n 1 "spoke" quorums of the form f1; ig for i = 2; : : : ; n, and one "rim" quorum, f2; : : : ; ng. <p> We have very recently learned that the optimality of the monarchy when p &gt; 1 2 has been obtained independently by Diks et al. [DKK + 94]. We also show that if we require all the elements to appear in some quorum, then the Wheel system of <ref> [MP92] </ref> replaces the singleton as the extremal system. 14 Then we consider the case where the failure probabilities p i are different. <p> Having a small quorum size does not give us the whole picture. Looking for systems with small average quorum size can also be misleading. For instance, the average quorum size in the Wheel system <ref> [MP92] </ref> is very small ( 3) but the load is high: L (Wheel) 1=2. Another tempting definition is that of an average load, rather than the maximum, i.e., AvL (S) = min w n i2U S j 3i w j ; minimizing over strategies w. <p> In this chapter we introduce a new class of quorum system constructions, which we call Crumbling Walls (or simply walls). The crumbling walls are a generalization of the 57 triangular construction of [Lov73, EL75], the Grid of [CAA92], the hollow grids of [KRS93], the Wheel of <ref> [MP92] </ref> and the Lovasz coteries of [Nei92]. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> This is the only part of the asymptotic analysis where the wall sequence obeys Assumptions 5.4.1-5.4.2 but not Assumption 5.4.3, and rows' widths do in fact increase. The Wheel system <ref> [MP92] </ref> is an example of such a family, in which there are precisely 2 rows in every wall, and as the universe size increases so does the width of the second row. The following proposition characterizes the asymptotics of F p in this case. <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight. <p> Thus L (Wheel) = (n 1)=(2n 3). 6.4 The Triang Quorum System The Triang system was first described in [Lov73, EL75] and proved to be ND in <ref> [Nei92, MP92] </ref>. The elements are organized in a triangular grid of d rows, with the i'th row containing i elements (we assume n = d (d+1) 2 ). <p> Therefore, the FPP quorum system has poor availability in all but very small systems. We have already seen that L (FPP) = t+1 t 2 +t+1 1 p n in Example 4.3.13. 6.9 The Grid Quorum System The Grid quorum system appears in <ref> [CAA92, MP92] </ref>. The n = d 2 elements are arranged in a d fi d grid, and a quorum in the system consists of one complete row and a representative element from all the other rows.
Reference: [MR97] <author> D. Malkhi and M. Reiter. </author> <title> Byzantine quorum systems. </title> <booktitle> In Proc. 29th ACM Symp. Theory of Computing, </booktitle> <month> May </month> <year> 1997. </year> <note> To appear. </note>
Reference-contexts: In their scheme it is the responsibility of the users to verify that the the data sent by the servers is genuine. They too rely on a k-of-n threshold scheme, and do not separate between the data servers and the access servers. A recent paper <ref> [MR97] </ref> makes finer distinctions between the types of processor failures that may be tolerated, and their effect on the requirements from a quorum system. The issue of availability is addressed by Gong [Gon93], in the context of a secure authentication service.
Reference: [MS95] <author> S. Micali and R. Sidney. </author> <title> A simple method for generating and sharing pseudo-random functions for applications to clipper-like key escrow systems. </title> <editor> In D. Coppersmith, editor, </editor> <booktitle> Advances in Cryptology - CRYPTO'95, </booktitle> <volume> LNCS 963, </volume> <pages> pages 185-196. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: The next criteria we introduce are the load L (S) and the capacity, Cap (S). Our main contributions here are a proof that Cap (S) = 1=L (S), a tradeoff between the availability 1 We have recently made some progress regarding this question. See also <ref> [MS95] </ref>. 5 and the load, and four novel quorum system constructions, all of which have optimal or near optimal load, and high availability. Then we consider a new class of quorum system constructions which we call Crumbling Walls. This class considerably generalizes a number of known quorum system constructions.
Reference: [MV88] <author> S. J. Mullender and P. M. B. Vitanyi. </author> <title> Distributed match-making. </title> <journal> Algorithmica, </journal> <volume> 3 </volume> <pages> 367-391, </pages> <year> 1988. </year>
Reference-contexts: So again we see that the intersection property ensures the correctness of the protocol. Apart from data replication and mutual exclusion, quorum systems have also been used in the study of distributed control and management problems such as name servers (cf. <ref> [MV88] </ref>), and selective dissemination of information (cf. [YG94]). Many methods of constructing quorum systems appear in the literature (see the next section). It turns out that the best constructions belong to a class called non-dominated quorum systems, which will be defined later on.
Reference: [MYK94] <author> D. A. Menasce, Y. Yesha, and K. Kalpakis. </author> <title> On a unified framework for the evaluation of distributed quorum attainment protocols. </title> <journal> IEEE Trans. Software Eng., </journal> 20(11) 868-884, 1994. 
Reference-contexts: The case in which the elements fail with different probabilities p i , all less than 1 2 , is addressed in [SB94]. The availability of k-coteries is studied in [KFYA93]. A performance analysis using queueing theory can be found in <ref> [MYK94] </ref>. A related criterion, called the fault-tolerance of a quorum system, is introduced in [BG86] and studied further in [KS93].
Reference: [Nei92] <author> M. L. Neilsen. </author> <title> Quorum Structures in Distributed Systems. </title> <type> PhD thesis, </type> <institution> Dept. Computing and Information Sciences, Kansas State University, </institution> <year> 1992. </year> <month> 142 </month>
Reference-contexts: Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and [Kum91, KC91, RT91, RST92] (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in <ref> [Nei92] </ref> under the name Lovasz coteries. The Wheel system appears in [MP92]. A recent construction of [Baz96], which develops ideas presented in this work, is based on triangulated planar graphs. Descriptions of these constructions can be found in Section 2.2, and their properties are analyzed in Chapter 6. <p> A quorum in the system is defined recursively to be either (i) the union of the root and a quorum in one of the two subtrees, or (ii) the union of two quorums, one in each subtree (see Figure 2.2-b). Lovasz coteries The Lovasz coteries of <ref> [Nei92] </ref> are a generalization of the Triang, in which the first row contains a single element, and all the other rows contain at least 2 element each. A quorum in the system is defined as in the Triang. 10 quorum shaded in each. <p> The crumbling walls are a generalization of the 57 triangular construction of [Lov73, EL75], the Grid of [CAA92], the hollow grids of [KRS93], the Wheel of [MP92] and the Lovasz coteries of <ref> [Nei92] </ref>. The elements are arranged in rows, and a quorum is the union of one full row and a single representative from every row below the full row. <p> The following proposition of <ref> [Nei92] </ref> shows that Lovasz coteries are ND. Proposition 5.2.2 [Nei92] If n 1 = 1 and n i 2 for all i 2 then CWhni 2 NDC. In Proposition 5.2.5 we extend this result, showing that these are in fact the only ND walls. <p> The following proposition of <ref> [Nei92] </ref> shows that Lovasz coteries are ND. Proposition 5.2.2 [Nei92] If n 1 = 1 and n i 2 for all i 2 then CWhni 2 NDC. In Proposition 5.2.5 we extend this result, showing that these are in fact the only ND walls. We do this via two simple lemmas. <p> Thus L (Wheel) = (n 1)=(2n 3). 6.4 The Triang Quorum System The Triang system was first described in [Lov73, EL75] and proved to be ND in <ref> [Nei92, MP92] </ref>. The elements are organized in a triangular grid of d rows, with the i'th row containing i elements (we assume n = d (d+1) 2 ). <p> The rest of this chapter uses the terminology of quorum systems. A good reference to game theory is [Owe82]. Simple games, and their interpretations in reliability theory, are the subject of [Ram90]. A discussion of the connection between strong and simple games and quorum systems can be found in <ref> [Nei92] </ref>. 8.1.2 Contents This chapter addresses the question of how to quickly search for a live quorum in a distributed system when failures may occur. As a first step, we consider the worst case model.
Reference: [NM92] <author> M. L. Neilsen and M. Mizuno. </author> <title> Coterie join algorithm. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 3(5) </volume> <pages> 582-590, </pages> <year> 1992. </year>
Reference-contexts: Since Triang is a d-uniform quorum system we can use Proposition 4.3.10 and conclude that L (Triang) = 2 2 : 6.5 The Tree System The Tree system was first described and proved to be a coterie in [AE91]. In <ref> [IK93, NM92] </ref> it is shown that Tree 2 NDC. The elements are organized in a complete rooted binary tree (we assume that n = 2 h 1 for some h &gt; 0).
Reference: [NW94] <author> M. Naor and A. Wool. </author> <title> The load, capacity and availability of quorum systems. </title> <booktitle> In Proc. 35th IEEE Symp. Foundations of Comp. Sci. (FOCS), </booktitle> <pages> pages 214-225, </pages> <year> 1994. </year> <note> To appear in SIAM J. Computing 1998. </note>
Reference-contexts: In Section 4.2 we define the load and the capacity, their linear programs, and the relationship between them. In Section 4.3 we prove the basic properties of the load. In Section 4.4 we present the new constructions. The results described in this chapter can be found in <ref> [NW94] </ref>. 4.2 Load and Capacity 4.2.1 Strategies and Load A protocol using a quorum system (for mutual exclusion, say) occasionally needs to access quorums during its run. A strategy is a probabilistic rule that governs which quorum is chosen each time. <p> Furthermore, Proposition A.4 shows that lim k!1 -k =k = -fl , hence by the definition of the capacity and Lemma 4.2.4 we obtain: Corollary 4.2.8 Cap (S)= 1/L (S). Therefore all the information regarding the capacity is captured by L (S). In <ref> [NW94] </ref> we gave a direct proof of Corollary 4.2.8 (without using the hypergraph machinery), which indicates how to schedule the quorum accesses so the capacity tends to 1=L (S): select the quorums independently at random using a strategy w which optimizes the load. 4.2.4 The Load with Failures In this section
Reference: [NW96] <author> M. Naor and A. Wool. </author> <title> Access control and signatures via quorum secret sharing. </title> <booktitle> In Proc. 3rd ACM Conf. Comp. and Comm. Security, </booktitle> <pages> pages 157-168, </pages> <address> New Delhi, In-dia, </address> <year> 1996. </year> <note> Also available as Theory of Cryptography Library record 96-08, http: //theory.lcs.mit.edu/~tcryptol/1996.html. </note>
Reference-contexts: Section 7.6 gives efficient secret sharing schemes for various quorum systems, that may be used in the methods of Section 7.3 and 7.5. Section 7.7 describes two protocol variants which require less trust in the servers. The results described in this chapter can be found in <ref> [NW96] </ref>. 7.2 Secret Sharing Definition 7.2.1 A set system A 2 U such that ? 62 A is called an access structure if it is monotone increasing: if A 2 A then B 2 A for every B A.
Reference: [Owe82] <author> G. Owen. </author> <title> Game Theory. </title> <publisher> Academic Press, </publisher> <address> second edition, </address> <year> 1982. </year>
Reference-contexts: Remark: An alternative proof for Theorem 3.3.3 has been suggested to us [Hol93]. This proof is based on the fact that the failure probability of an ND coterie can be viewed as the multi-linear extension (MLE) of a constant-sum game. Consequently, Theorem X.2.6 of <ref> [Owe82, pp. 201-202] </ref> can be used to obtain the claim. Theorem 3.3.3 can also be derived from the self-duality of NDC's, cf. [IK93]. 18 3.3.2 Conditions for Non-Domination We now present two consequences of the symmetry theorem. <p> The rest of this chapter uses the terminology of quorum systems. A good reference to game theory is <ref> [Owe82] </ref>. Simple games, and their interpretations in reliability theory, are the subject of [Ram90].
Reference: [PW95] <author> D. Peleg and A. Wool. </author> <title> The availability of quorum systems. </title> <journal> Information and Computation, </journal> <volume> 123(2) </volume> <pages> 210-223, </pages> <year> 1995. </year>
Reference-contexts: In Section 3.4 we prove that the majority and singleton are the extremal NDC's in terms of F p (S). In Section 3.5 we handle the case of different failure probabilities. In Section 3.6 we discuss the practical issues. The results described in this chapter can be found in <ref> [PW95] </ref> and [AW96b]. 3.2 The Probabilistic Failure Model 3.2.1 The Failure Probability Function We use a simple probabilistic model of the failures in the system. We assume that the elements (processors) fail independently with a fixed uniform probability p. We assume that the failures are transient.
Reference: [PW96] <author> D. Peleg and A. Wool. </author> <title> How to be an efficient snoop, or the probe complexity of quorum systems. </title> <booktitle> In Proc. 15th ACM Symp. Princip. Distributed Computing (PODC), </booktitle> <pages> pages 290-299, </pages> <address> Philadelphia, </address> <year> 1996. </year>
Reference-contexts: The two lower bounds we prove on the probe complexity appear in Section 8.4. The universal probing strategies and 114 their analyses are in Section 8.5. An extended abstract of the results described in this chapter can be found in <ref> [PW96] </ref>. 8.2 The Probe Model We assume that the elements (processors) of the system may fail occasionally. We assume that these failures are transient, are crash failures, and that they are detectable. In other words, we do not consider "lying" processors (Byzantine failures), or asynchronous communication with unbounded message delay. <p> We shall see in Section 8.5 that every uniform quorum system with c (S) p evasive. But is this condition sufficient? In fact the question "do all non-evasive quorum systems have c (S) p n" was left open in <ref> [PW96] </ref>. Here we answer this question in the negative, by showing a family of uniform non-dominated quorum system constructions, with c (S) ranging from O (log n) up to n=2, which are all non-evasive. The systems are a modification of the Nuc system, and are parameterized by a number k.
Reference: [PW97a] <author> D. Peleg and A. Wool. </author> <title> The availability of crumbling wall quorum systems. </title> <journal> Discrete Applied Math., </journal> <volume> 74(1) </volume> <pages> 69-83, </pages> <month> April </month> <year> 1997. </year>
Reference-contexts: Section 5.5 contains the analysis of unbounded walls, and of 1 We use lg to denote log 2 . 58 the CWlog wall in particular. The results described in this chapter can be found in <ref> [PW97b, PW97a] </ref>. 5.2 Basic Properties 5.2.1 What Are Crumbling Walls Definition 5.2.1 (Crumbling Wall) Let n = (n 1 ; : : : ; n d ) be such that P d U 1 ; : : : ; U d be nonempty disjoint subsets of the universe U with jU
Reference: [PW97b] <author> D. Peleg and A. Wool. Crumbling walls: </author> <title> A class of practical and efficient quorum systems. </title> <journal> Distributed Computing, </journal> <volume> 10(2) </volume> <pages> 87-98, </pages> <year> 1997. </year>
Reference-contexts: Section 5.5 contains the analysis of unbounded walls, and of 1 We use lg to denote log 2 . 58 the CWlog wall in particular. The results described in this chapter can be found in <ref> [PW97b, PW97a] </ref>. 5.2 Basic Properties 5.2.1 What Are Crumbling Walls Definition 5.2.1 (Crumbling Wall) Let n = (n 1 ; : : : ; n d ) be such that P d U 1 ; : : : ; U d be nonempty disjoint subsets of the universe U with jU
Reference: [Rag88] <author> P. Raghavan. </author> <title> Probabilistic construction of deterministic algorithms: Approximating packing integer programs. </title> <journal> J. Computer System Sci., </journal> <volume> 37 </volume> <pages> 130-143, </pages> <year> 1988. </year>
Reference-contexts: Then X i ~ B (p). Let the total weight of the failed elements be Z = P n The system fails exactly when Z V 2 . We want to bound the probability of this event using the Chernoff-type bound for weighted sums, due to Raghavan and Spencer <ref> [Rag88] </ref>. For this bound to be applicable, the weights need to be at most 1. Therefore we scale the weights by a factor of v max , defining ^v i = v max Clearly 0 &lt; ^v i 1.
Reference: [Ram90] <author> K. G. Ramamurthy. </author> <title> Coherent Structures and Simple Games. </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Dordrecht, The Netherlands, </address> <year> 1990. </year>
Reference-contexts: Properties of characteristic functions of quorum systems are discussed extensively in <ref> [Ram90, IK93] </ref>. 2.2 Some Examples Let us illustrate the concept of quorum systems by giving a number of examples, which play an important role in the results of this work. All the following constructions, except the Grid and FPP systems, are known to be non-dominated coteries. <p> The rest of this chapter uses the terminology of quorum systems. A good reference to game theory is [Owe82]. Simple games, and their interpretations in reliability theory, are the subject of <ref> [Ram90] </ref>. A discussion of the connection between strong and simple games and quorum systems can be found in [Nei92]. 8.1.2 Contents This chapter addresses the question of how to quickly search for a live quorum in a distributed system when failures may occur.
Reference: [Ray86] <author> M. Raynal. </author> <title> Algorithms for Mutual Exclusion. </title> <publisher> MIT press, </publisher> <year> 1986. </year>
Reference-contexts: The processors on a distributed system are indeed autonomous, however some cooperation must exist between them. This raises the need for various control mechanisms. Two typical mechanisms are mutual exclusion (cf. <ref> [Ray86] </ref>) and data replication protocols (cf. [DGS85, Her84, Ami95, Kei94]). The need for mutual exclusion arises when there is some resource on the network (e.g., a printer) that may be allocated to a single processor at a time.
Reference: [RB94] <author> M. K. Reiter and K. P. Birman. </author> <title> How to securely replicate services. </title> <journal> ACM Trans. Prog. Lang. Sys., </journal> <volume> 16(3) </volume> <pages> 986-1009, </pages> <year> 1994. </year>
Reference-contexts: Reiter and Birman <ref> [RB94] </ref> considered a database protection scheme in a scenario which is the reverse of ours, namely against servers being corrupted (rather then the users, as is the underlining assumption in our paper).
Reference: [Ros73] <author> A. L. Rosenberg. </author> <title> On the time required to recognize properties of graphs: A problem. </title> <journal> SIGACT News, </journal> <volume> 5 </volume> <pages> 15-16, </pages> <year> 1973. </year>
Reference-contexts: Aanderaa and Rosenberg <ref> [Ros73] </ref> conjectured that every non-trivial, monotone boolean function over n variables, describing a graph property, requires (n) arguments to be tested in the worst case. Karp conjectured that in fact every such property is evasive, i.e., requires that all n arguments be tested.
Reference: [RST92] <author> S. Rangarajan, S. Setia, and S. K. Tripathi. </author> <title> A fault-tolerant algorithm for replicated data management. </title> <booktitle> In Proc. 8th IEEE Int. Conf. Data Engineering, </booktitle> <pages> pages 230-237, </pages> <year> 1992. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and <ref> [Kum91, KC91, RT91, RST92] </ref> (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> In particular, this means that CWlog is asymptotically superior to the FPP [Mae85] and the Grid [CAA92], both of which have failure probabilities tending to 1 (see <ref> [KC91, RST92] </ref>). The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). <p> We show that some of these have Condorcet failure probabilities (e.g., the constructions of [EL75, AE91, Kum91]), while others (e.g., [Lov73]) have a nonzero limit function when p &lt; 1 2 . Moreover, as shown in <ref> [RST92, KC91] </ref>, the finite projective plane construction [Mae85] and grid construction [CAA92] have failure probabilities tending to 1 for all values 0 &lt; p &lt; 1. We also present novel balancing strategies which induce the optimal load for some of the systems (e.g., the Tree and Triang). <p> It has been shown in [Fu90] that for all t 3, the FPP of order t is dominated. The only non-dominated FPP is of order 2, i.e., the 7 point Fano plane. The asymptotic behavior of the FPP's availability has been shown in <ref> [RST92] </ref>, and we include it for completeness. Let F p (t) denote F p (FPP) for a finite projective plane of order t. To bound F p (t) from below, we apply the same argument as in the proof of Proposition 3.3.10 and use the FKG inequality.
Reference: [RT91] <author> S. Rangarajan and S. K. Tripathi. </author> <title> A robust distributed mutual exclusion algorithm. </title> <booktitle> In Proc. 5th Inter. Workshop on Dist. Algorithms (WDAG), </booktitle> <volume> LNCS 579, </volume> <pages> pages 295-308. </pages> <publisher> Springer-Verlag, </publisher> <year> 1991. </year>
Reference-contexts: The simple majority system is the most obvious voting system. Alternative quorum system constructions which are not based on voting appear in [Mae85] (using finite projective planes), [AE91] (the Tree system), [CAA92, KRS93] (using a grid) and <ref> [Kum91, KC91, RT91, RST92] </ref> (hierarchical systems). The triangular system is due to [Lov73, EL75]. A generalization of the triangular system appears in [Nei92] under the name Lovasz coteries. The Wheel system appears in [MP92]. <p> A quorum in the system is a set of elements that are a majority in one cell of every row and a majority in every cell of one row (see Figure 4.4). This system is somewhat similar to that of <ref> [RT91] </ref>, in which each grid cell contains a distinct set of elements. For simplicity assume that both d and r are odd. r = 3 elements per cell.
Reference: [RV76] <author> R. L. Rivest and J. Vuillemin. </author> <title> On recognizing graph properties from adjacency matrices. </title> <journal> Theoretical Comp. Science, </journal> <volume> 3 </volume> <pages> 371-384, </pages> <year> 1976. </year>
Reference-contexts: Karp conjectured that in fact every such property is evasive, i.e., requires that all n arguments be tested. The Aanderaa-Rosenberg conjecture was proved by <ref> [RV76] </ref>, who also showed that almost every boolean function is evasive for large n. Karp's stronger conjecture was later proved by [KSS84]. To our knowledge, the probe complexity of quorum systems, or equivalently, the argument complexity of boolean functions characterizing a quorum system, has not been studied before. <p> Karp's stronger conjecture was later proved by [KSS84]. To our knowledge, the probe complexity of quorum systems, or equivalently, the argument complexity of boolean functions characterizing a quorum system, has not been studied before. In fact, most of the techniques of <ref> [RV76] </ref> and [KSS84] are not applicable in our case. This is since both proofs rely on the fact that a graph property P has a nice algebraic structure: the group of permutations of the k vertices acts transitively on the n = k edges while preserving P . <p> a quorum system S is evasive (as in Definition 8.2.2) is equivalent to saying that its characteristic function f S is evasive as a boolean function (recall Definition 2.1.10). 116 8.3 Evasiveness 8.3.1 The Algebraic Approach As part of their work on the evasiveness of graph properties, Rivest and Vuillemin <ref> [RV76] </ref> give in their Corollary 3.3 a sufficient condition for the evasiveness of a general monotone boolean function. Below we rephrase their result using our terminology, to obtain a condition for quorum system evasiveness based on the availability profile (recall Definition 3.2.8). Proposition 8.3.1 [RV76] Let a S be the availability <p> of graph properties, Rivest and Vuillemin <ref> [RV76] </ref> give in their Corollary 3.3 a sufficient condition for the evasiveness of a general monotone boolean function. Below we rephrase their result using our terminology, to obtain a condition for quorum system evasiveness based on the availability profile (recall Definition 3.2.8). Proposition 8.3.1 [RV76] Let a S be the availability profile of a quorum system S 2 NDC. If i even a S P a S i then PC (S) = n, i.e., S is evasive. <p> Therefore by Proposition 8.3.1 the FPP system with n = 7 is evasive. In their proof that almost all n-argument boolean functions f are evasive for large n, <ref> [RV76] </ref> in fact shows that the condition of Proposition 8.3.1 holds for all but an exponentially small fraction of the boolean functions. However, when we consider only the class NDC, the next proposition shows that Proposition 8.3.1 has limited usefulness. <p> Remark: Finding the critical partition in step 2 is an NP-hard problem, but we assumed that the adversary has unbounded power. 8.3.6 Non Evasive Examples All the examples we have seen so far are of evasive quorum systems. Furthermore, in <ref> [RV76] </ref> it is shown that almost every boolean function on n variables is evasive for large n. Therefore it is reasonable to expect that in a class of functions that has a "nice" structure, all the functions are evasive. <p> Therefore it is reasonable to expect that in a class of functions that has a "nice" structure, all the functions are evasive. This indeed is the case for graph-property functions, as shown by <ref> [RV76, KSS84] </ref>. However for the class of non-dominated quorum systems this is not the case.
Reference: [SB94] <author> M. Spasojevic and P. Berman. </author> <title> Voting as the optimal static pessimistic scheme for managing replicated data. </title> <journal> IEEE Trans. Par. Dist. Sys., </journal> <volume> 5(1) </volume> <pages> 64-73, </pages> <year> 1994. </year>
Reference-contexts: It is shown that in a complete network the optimal availability quorum system is the majority system if p &lt; 1 2 . The case in which the elements fail with different probabilities p i , all less than 1 2 , is addressed in <ref> [SB94] </ref>. The availability of k-coteries is studied in [KFYA93]. A performance analysis using queueing theory can be found in [MYK94]. A related criterion, called the fault-tolerance of a quorum system, is introduced in [BG86] and studied further in [KS93]. <p> If they are all less than 1 2 , then the optimal availability quorum system is known to be defined by voting, with weights which depend on the failure probabilities <ref> [TK88, SB94] </ref>. We complete this line of research by allowing for unreliable elements, with p i 1 2 . We prove that any element i with p i 1 2 must be a dummy, i.e., w.l.o.g. we can set w i = 0 for such an element. <p> If the failure probabilities p i are different and are all less than 1/2, then the optimal availability quorum system is known to be defined by voting. If 0 &lt; p i &lt; 1 2 for all i then [TK88] and <ref> [SB94] </ref> show that the optimal weights are defined by the formula: w i = log 2 1 p i followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. <p> 0 &lt; p i &lt; 1 2 for all i then [TK88] and <ref> [SB94] </ref> show that the optimal weights are defined by the formula: w i = log 2 1 p i followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. Here we handle the general case, where some or all of the elements may be unreliable, with p i 1 2 . <p> This proof is completely elementary, and does not require the use of the Erd-os-Ko-Rado theorem [EKR61]. In our proofs we use the following condition, due to <ref> [SB94] </ref>, characterizing the acceptance set of a quorum system with optimal availability (recall Definition 2.1.8). Proposition 3.5.1 [SB94] An acceptance set A has optimal availability iff the following two conditions hold: 27 1. For every S U , either S 2 A or S 2 A. 2. <p> This proof is completely elementary, and does not require the use of the Erd-os-Ko-Rado theorem [EKR61]. In our proofs we use the following condition, due to <ref> [SB94] </ref>, characterizing the acceptance set of a quorum system with optimal availability (recall Definition 2.1.8). Proposition 3.5.1 [SB94] An acceptance set A has optimal availability iff the following two conditions hold: 27 1. For every S U , either S 2 A or S 2 A. 2. If S 2 A then P (S) P ( S). <p> If U 0 = ? then the only candidates to have optimal availability are all the monarchies, none of which is better than ff`gg. Remarks: * Inside the set U 0 we can apply the results of <ref> [TK88, SB94] </ref> so formula (3.3) gives the optimal weights. * In Theorem 3.5.4 we treat elements with p i = 1 2 as unreliable. <p> Therefore its weight calculated by formula (3.3) using ^p will obey 0 &lt; w i log 2 1 " Since the probabilities ^p i are inherently imprecise, we lose no accuracy if we break ties using the method of <ref> [SB94] </ref>: pick a suitably large constant M , calculate v i = bM w i c, and if P i2U v i is even 1 then set v 1 v 1 + 1. <p> If i v i is even then v 1 v 1 + 1. Finally, we summarize our results in the algorithm of Figure 3.2. Based on Theo rem 3.5.4, the discussion above and the results of <ref> [TK88, SB94] </ref>, this algorithm calculates integer weights v i which define a quorum system with near optimal availability, for all possible values of p i . 31 Chapter 4 Load, Capacity and Availability 4.1 Overview In this chapter we consider two more criteria of measuring how good a quorum system is: <p> failure probability F p of some of the constructions is "almost" Condorcet, by which we mean that F p ! 0 when 0 p fi for some fi &lt; 1 2 . 6.2 Weighted Voting A simple and popular method to define and implement quorum systems is by weighted voting <ref> [Gif79, GB85, BG86, AAC91, MP92, SB94, AW96a] </ref>. In a voting system, each 82 element is assigned a number of votes, and a quorum is any subset of elements with a weight exceeding half of the total weight.
Reference: [Sch86] <author> A. Schrijver. </author> <title> Theory of Linear and Integer Programming. </title> <publisher> John Wiley & Sons, </publisher> <address> Chich-ester, </address> <year> 1986. </year> <month> 143 </month>
Reference-contexts: This formulation shows that the load L (S) can be computed in polynomial time using Linear Programming algorithms (cf. <ref> [Sch86] </ref>) if S is given explicitly. Definition 4.2.3 Let a quorum system S = (S 1 ; : : : ; S m ) be given over a universe U of size n. Define a variable w j for each quorum S j 2 S and an additional variable L. <p> = h 2 elements, so L (Grid) = 2h1 n . 4.3.4 Effective Calculation of the Load If a quorum system S is given explicitly, as a list of all m quorums, then program LP of Definition 4.2.3 can be solved in poly (n; m) time using Linear Programming (cf. <ref> [Sch86] </ref>). However often S is given implicitly, say, via some data structure containing the elements coupled with a polynomial-time procedure to produce a quorum on demand. In such a case just writing program LP could be an exponential task since typically m = 2 (n) .
Reference: [Sha79] <author> A. Shamir. </author> <title> How to share a secret. </title> <journal> Comm. ACM, </journal> <volume> 22(11) </volume> <pages> 612-613, </pages> <year> 1979. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. [Sim92]) was originally suggested for threshold access structures by Shamir and Blakely <ref> [Sha79, Bla79] </ref>. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. [BD90, BDGV92, BC92]). Schemes suggested in [BL88] for structures represented by monotone formulas turn out to be important for our quorum systems. <p> We have analyzed the availability and load of these systems in Sections 6.5 and 6.10, respectively. The building block for both the Tree and HQS systems is the 2-of-3 majority gate, which is a threshold function. As such, it has an SSS, which is Shamir's scheme <ref> [Sha79] </ref>. However a 2-of-3 majority gate is a very simple case of the general scheme. The underlying field is the GF (4) field, i.e., the basic secret unit is a pair of bits. The random polynomials of the scheme are simply lines (of degree 1).
Reference: [Sim92] <author> G. J. Simmons. </author> <title> An introduction to shared secret and/or shared control schemes and their application. </title> <booktitle> In Contemporary Cryptology, The Science of Information Integrity, </booktitle> <pages> pages 441-497. </pages> <publisher> IEEE Press, </publisher> <year> 1992. </year>
Reference-contexts: Secret sharing: Secret sharing (cf. <ref> [Sim92] </ref>) was originally suggested for threshold access structures by Shamir and Blakely [Sha79, Bla79]. It was extended to arbitrary access structures in [ISN87]. The issue of efficiency (i.e., share sizes) of such schemes has been considered in several papers (cf. [BD90, BDGV92, BC92]).
Reference: [SWL90] <author> B. Simons, J. L. Welch, and N. Lynch. </author> <title> An overview of clock synchronization. </title> <editor> In B. Simons and A. Spector, editors, </editor> <booktitle> Fault-Tolerant Distrib. Comp., </booktitle> <publisher> LNCS 448. Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: Note that the servers must all use the same time value otherwise the key cannot be reconstructed. However, maintaining synchronized clocks is a non-trivial and costly task (cf., <ref> [SWL90] </ref>) which we prefer to avoid. Instead, in our modified protocol ACP 00 (see Figure 7.3) the user attaches a timestamp t to the request for item x, which is then used by the servers in the share generation.
Reference: [Tho79] <author> R. H. Thomas. </author> <title> A majority consensus approach to concurrency control for multiple copy databases. </title> <journal> ACM Trans. Database Sys., </journal> <volume> 4(2) </volume> <pages> 180-209, </pages> <year> 1979. </year>
Reference-contexts: a distributed protocol that uses a quorum system. (ii) To construct new quorum systems that optimize these quality criteria, and (iii) To find new distributed applications that benefit from the use of quorum systems. 1.2 Related Work 1.2.1 Quorum Systems in General The first distributed control protocols using quorum systems <ref> [Tho79, Gif79] </ref> use voting to define the quorums. Each processor has a number of votes, and a quorum is any set of processors with a combined number of votes exceeding half of the system's total number of votes. The simple majority system is the most obvious voting system. <p> The CWlog has asymptotic availability similar to that of the Tree system of [AE91] (as analyzed in Section 6.5). The CWlog has worse asymptotic availability than the constructions of [Kum91, KC91] and the constructions of Chapter 4, and also than the Maj system <ref> [Tho79] </ref>, which has the optimal availability [BG87]. However all these construction have relatively large quorums, of size ( p Unlike the constructions of Chapter 4, the availability of CWlog is high not only for very large n. <p> As before, the properties that interest us in a quorum system are low load (and high capacity), high availability, and small quorum sizes. Note that not all quorum systems enjoy these properties. For instance, the majority system <ref> [Tho79] </ref>, i.e., the n+1 2 -of-n threshold system, has optimal availability but induces a high load and has large quorums. At the other extreme, the finite projective plane [Mae85] has optimal load but very poor availability.
Reference: [TK88] <author> Z. Tong and R. Y. Kain. </author> <title> Vote assignments in weighted voting mechanisms. </title> <booktitle> In Proc. 7th IEEE Symp. on Reliable Dist. Sys., </booktitle> <pages> pages 138-143, </pages> <year> 1988. </year>
Reference-contexts: If they are all less than 1 2 , then the optimal availability quorum system is known to be defined by voting, with weights which depend on the failure probabilities <ref> [TK88, SB94] </ref>. We complete this line of research by allowing for unreliable elements, with p i 1 2 . We prove that any element i with p i 1 2 must be a dummy, i.e., w.l.o.g. we can set w i = 0 for such an element. <p> If the failure probabilities p i are different and are all less than 1/2, then the optimal availability quorum system is known to be defined by voting. If 0 &lt; p i &lt; 1 2 for all i then <ref> [TK88] </ref> and [SB94] show that the optimal weights are defined by the formula: w i = log 2 1 p i followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. <p> If 0 &lt; p i &lt; 1 2 for all i then <ref> [TK88] </ref> and [SB94] show that the optimal weights are defined by the formula: w i = log 2 1 p i followed by a tie-breaking procedure. An exponential algorithm is suggested in [TK88] to find the optimal tie-breaking, while [SB94] shows that a simple scale-and-truncate rule is near optimal. Here we handle the general case, where some or all of the elements may be unreliable, with p i 1 2 . <p> If U 0 = ? then the only candidates to have optimal availability are all the monarchies, none of which is better than ff`gg. Remarks: * Inside the set U 0 we can apply the results of <ref> [TK88, SB94] </ref> so formula (3.3) gives the optimal weights. * In Theorem 3.5.4 we treat elements with p i = 1 2 as unreliable. <p> If i v i is even then v 1 v 1 + 1. Finally, we summarize our results in the algorithm of Figure 3.2. Based on Theo rem 3.5.4, the discussion above and the results of <ref> [TK88, SB94] </ref>, this algorithm calculates integer weights v i which define a quorum system with near optimal availability, for all possible values of p i . 31 Chapter 4 Load, Capacity and Availability 4.1 Overview In this chapter we consider two more criteria of measuring how good a quorum system is:
Reference: [Tuz85] <author> Zs. Tuza. </author> <title> Critical hypergraphs and intersecting set-pair systems. </title> <journal> J. Comb. Theory, Series B, </journal> <volume> 39 </volume> <pages> 134-145, </pages> <year> 1985. </year>
Reference-contexts: obtain y (S) = 2 h+2 1 0 2 h+2 : Therefore (y; 2 h+2 ) is feasible for program DLP so the claim follows from the weak duality of linear programming. 6.6 The Nuc Quorum System The nucleus (Nuc) system appears first in [EL75], and a variation appears in <ref> [Tuz85] </ref>. The system is built in two stages. First consider a nucleus universe U 1 of size 2r 2 for some r &gt; 1, and add to S all the subsets of U 1 of size r (call these "type A" quorums).
Reference: [Val84] <author> L. G. Valiant. </author> <title> Short monotone formulae for the majority function. </title> <journal> J. Algorithms, </journal> <volume> 5 </volume> <pages> 363-366, </pages> <year> 1984. </year>
Reference-contexts: The SC-Grid system has L (SC-Grid) = O ( q n ), and 2 ffi for some ffi &gt; 0 then F p (SC-Grid) exp (( p n ln n)). The AndOr system uses the AND/OR trees of <ref> [Val84] </ref>. It has L (AndOr) = O (1= p n), F p (AndOr) exp (( p when p &lt; 1 4 , and F p exp ((n 0:19 )) if p 0:38 (n 0:19 ). <p> Proof: Follows from Lemma 4.4.25 and Lemma 4.4.26 by checking the cases of even and odd h and plugging n = 2 h . The following proposition shows the high availability of the AndOr system. The proof is an adaptation of the proof in <ref> [Val84] </ref>. We include it here for completeness, omitting some of the technical details. Proposition 4.4.28 Let ff = 3 p 2 0:38. F p (AndOr) exp (( p n)) when p &lt; 1 4 and F p exp ((n 0:19 )) when p ff (n 0:19 ). <p> So when p &lt; 1 4 it follows that F p (AndOr) exp (( p When h is odd the bound is similar. Now f O has a stable point at p = ff and f A has a stable point at p = 1 ff. As shown by <ref> [Val84] </ref>, if there are n = O (d 5:3 ) leaves in the tree and p &lt; ff (d 1 ) &lt; 1 ff (d 1 ), then f A (h) &lt; 2 d1 and the same for f O .
Reference: [WB92] <author> C. Wu and G. G. Belford. </author> <title> The triangular lattice protocol: A highly fault tolerant protocol for replicated data. </title> <booktitle> In Proc. 11th IEEE Symp. on Reliable Dist. Sys., </booktitle> <pages> pages 66-73, </pages> <year> 1992. </year>
Reference-contexts: Remark: A related construction, using paths on a triangular lattice with elements corresponding to the nodes, was suggested in <ref> [WB92] </ref> (see [Wu93]). They show that their construction has asymptotically high availability (F p ! 0 when p &lt; 1 2 in our notation). The rate of convergence is not analyzed, and neither is the load (with or without failures).
Reference: [Wu93] <author> C. Wu. </author> <title> Replica control protocols that guarantee high availability and low access cost. </title> <type> Technical Report 1817, </type> <institution> Dept. Computer Science, U. Illinois Urbana-Champaign, Ur-bana, Illinois, </institution> <year> 1993. </year>
Reference-contexts: Remark: A related construction, using paths on a triangular lattice with elements corresponding to the nodes, was suggested in [WB92] (see <ref> [Wu93] </ref>). They show that their construction has asymptotically high availability (F p ! 0 when p &lt; 1 2 in our notation). The rate of convergence is not analyzed, and neither is the load (with or without failures).
Reference: [YG94] <author> T. W. Yan and H. Garcia-Molina. </author> <title> Distributed selective dissemination of information. </title> <booktitle> In Proc. 3rd Inter. Conf. Par. Dist. Info. Sys., </booktitle> <pages> pages 89-98, </pages> <year> 1994. </year> <month> 144 </month>
Reference-contexts: So again we see that the intersection property ensures the correctness of the protocol. Apart from data replication and mutual exclusion, quorum systems have also been used in the study of distributed control and management problems such as name servers (cf. [MV88]), and selective dissemination of information (cf. <ref> [YG94] </ref>). Many methods of constructing quorum systems appear in the literature (see the next section). It turns out that the best constructions belong to a class called non-dominated quorum systems, which will be defined later on.
References-found: 115

