URL: ftp://ftp.gvu.gatech.edu/pub/gvu/tr/1997/97-24.ps.Z
Refering-URL: http://www.cs.gatech.edu/gvu/reports/1997/
Root-URL: 
Email: fdfj,staskog@cc.gatech.edu  
Title: The Information Mural: A Technique for Displaying and Navigating Large Information Spaces  
Author: Dean F. Jerding and John T. Stasko 
Keyword: information visualization, software visualization, data visualization, focus+context, navigation, browsers  
Address: Atlanta, GA 30332-0280  
Affiliation: Graphics, Visualization, and Usability Center College of Computing Georgia Institute of Technology  
Abstract: Technical Report GIT-GVU-97-24 (Replaces Technical Report GIT-GVU-96-25) Abstract Information visualizations must allow users to browse information spaces and focus quickly on items of interest. Being able to see some representation of the entire information space provides an initial gestalt overview and gives context to support browsing and search tasks. However, the limited number of pixels on the screen constrain the information bandwidth and make it difficult to completely display large information spaces. The Information Mural is a two-dimensional, reduced representation of an entire information space that fits entirely within a display window or screen. The mural creates a miniature version of the information space using visual attributes such as grayscale shading, intensity, color, and pixel size, along with anti-aliased compression techniques. Information Murals can be used as stand-alone visualizations or in global navigational views. We have built several prototypes to demonstrate the use of Information Murals in visualization applications; subject matter for these views includes computer software, scientific data, text documents, and geographic information. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Barros and H. Fuchs. </author> <title> Generating smooth 2-d monocolor line drawings on video displays. </title> <booktitle> In Proceedings of the 1979 SIGGRAPH Conference, </booktitle> <volume> volume 13, </volume> <pages> pages 260-269, </pages> <month> Aug. </month> <year> 1979. </year>
Reference-contexts: Fig. 16 shows the computation for a pixel at (m,n) in the original image. Note that the algorithm does not consider the physical location of the area contributions to correctly render sub-pixel geometries, as in some polygon rendering algorithms <ref> [1] </ref>. We feel this approach is not required given that Murals are typically of 2D synthetic, abstract images where geometry of overlapping or intersecting polygons is not as important as in rendering 3D scenes. <p> Other related work One area of related work on which the Information Mural is based is the fundamental antialiasing research of computer graphics <ref> [1, 9] </ref>. The same ideas that help reduce "jaggies" in realistic scenes allow us to combine many data values and display an image that captures data density and distribution. As discussed earlier, we are able to utilize simple antialiasing, area sampling, and filtering techniques and still gain powerful results.
Reference: [2] <author> D. V. Beard and J. Q. Walker. </author> <title> Navigational techniques to improve the display of large twodimensional spaces. </title> <journal> Behaviour and Information Technology, </journal> <volume> 9(6) </volume> <pages> 451-466, </pages> <year> 1990. </year>
Reference-contexts: One or more regions are "expanded" to show more detail, while surrounding regions are "de-emphasized" or made smaller. Fisheye views typically involve some distortion, however. The Mural is better suited for separate focus and context regions, similar to that done in <ref> [2] </ref>. One could envision placing a focus filter or lens on top of a Mural, much as done in the Movable Filter or Magic Lens [37] techniques, as a way of providing an integrated focus + context view. Other information visualization techniques exist for presenting large data sets.
Reference: [3] <author> R. A. Becker and W. S. Cleveland. </author> <title> Brushing scatterplots. </title> <journal> Technometrics, </journal> <volume> 29(2) </volume> <pages> 127-142, </pages> <year> 1987. </year>
Reference-contexts: The end-user of the Execution Mural can interact with it in a number of ways. First, the focus rectangle in the lower region can be moved around to change the focus display above. Also, the viewer can utilize simple brushing techniques <ref> [3] </ref> through accompanying user interface actions: the user can select a class or classes, assign them a particular color, and then view the resulting display. This allows the user to view class involvement at different stages of the program execution.
Reference: [4] <author> L. D. Bergman, B. E. Rogowitz, and L. A. Treinish. </author> <title> A rule-based tool for assisting colormap selection. </title> <booktitle> In Proceedings of the IEEE Visulaization '95, </booktitle> <pages> pages 118-125, </pages> <year> 1995. </year>
Reference-contexts: Cleveland has suggested color scales that may be more appropriate, such as varying intensity of two hues [7]. Additionally, the work of Bergman, Rogowitz, and Treinish has attempted to automate the selection of appropriate colormaps based on date type, data range, spatial frequency, and visualization task <ref> [4] </ref>. Their recommendations confirm our selection of a grayscale colormap but also suggest other viable alternatives. Furthermore, the context of color, i.e. what other colors adjoin or surround a particular color, strongly influences a person's perception of the color [40].
Reference: [5] <author> R. </author> <title> Chimera. Value Bars: An information visualization and navigation tool for multiattribute listings (demo summary). </title> <booktitle> In Proceedings of the ACM SIGCHI '92 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 293-294, </pages> <year> 1992. </year>
Reference-contexts: Chimera's Value Bars have a similar problem when trying to display attributes of lists with more members than there are rows of pixels in the display <ref> [5] </ref>. Information Murals can also be used to visualize the distribution of keywords in a set of documents retrieved from a search. Fig. 15a-c show the distribution of keywords in three papers after a search for visualization (yellow), object-oriented (green), and OO (cyan) was performed.
Reference: [6] <author> W. S. Cleveland. </author> <title> The Elements of Graphing Data. </title> <publisher> Wadsworth and Brooks/Cole, </publisher> <address> Pacific Grove, CA, </address> <year> 1985. </year>
Reference-contexts: One such aspect, as just described above, is the Mural's use of grayscale shading or density, and then the potential addition of color. Density is low in the ordering of elementary graphical perception tasks <ref> [6] </ref>. Distinguishing fine variations or levels of detail in grayscale is difficult for people. Shading and density are better suited for illustrating strong patterns or providing a stimulus for an impression of data, tasks for which the Mural is useful. When color is added, this situation is confounded.
Reference: [7] <author> W. S. Cleveland. </author> <title> Visualizing Data. </title> <publisher> Hobart Press, Summit, </publisher> <address> NJ, </address> <year> 1993. </year>
Reference-contexts: It does not convey other aspects of the data as well as other techniques. For example, time series data such as this is often depicted via loess 8 focus area and global overview created using the Information Mural technique. processor benchmark. 9 10 area. curve fitting <ref> [7] </ref>. This technique better conveys the relative slopes of segments of the data. <p> For a more thorough discussion of the variety of visualization techniques available for charting bivariate and trivariate data, see <ref> [7] </ref>. 3.2.2 River Flow Data Another interesting large data set is the mean daily Saugeen river flows, from Jan 1, 1915 to Dec 31, 1979. The anti-aliased mural of this data shows a periodic pattern, with concentrations at the lower values. <p> While this is clearly a problem with the equalized intensity color scale in Murals, we have observed that it is easier to spot low-intensity outliers using color rather than grayscale. Cleveland has suggested color scales that may be more appropriate, such as varying intensity of two hues <ref> [7] </ref>. Additionally, the work of Bergman, Rogowitz, and Treinish has attempted to automate the selection of appropriate colormaps based on date type, data range, spatial frequency, and visualization task [4]. Their recommendations confirm our selection of a grayscale colormap but also suggest other viable alternatives. <p> Many other data graphing or visualization techniques do exist, such as averaging, aggregation, box plots, level plots, curve smoothing, and so on. Some, such as parallel coordinates, have even been combined with a Mural, as shown earlier. See <ref> [7] </ref> for an introduction to many of these techniques. For discovering particular attributes or relationships of data, Information Murals will be inferior to specific instances of these existing techniques.
Reference: [8] <author> S. G. Eick, J. L. Steffen, and E. E. S. Jr. </author> <title> SeeSoft|A tool for visualizing line oriented software statistics. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 18(11) </volume> <pages> 957-968, </pages> <month> Nov. </month> <year> 1992. </year> <month> 26 </month>
Reference-contexts: Figure 13 is simply one particular mapping we chose. It would be easy to configure a Mural so that the viewer could interactively specify classification/mapping parameters, thus experimenting with different renderings. 3.3.2 Text Documents While SeeSoft <ref> [8] </ref> from AT&T's Bell Laboratories introduced a revolutionary miniature representation for text documents, it did have a limit. One row of pixels (or part of a row in later versions) is required for every line in the file. <p> The Cone Trees and Perspective Wall of the Information Visualization system [33] use natural 3-D perspective to generate a form of focus + context view. Treemaps [23] use a "slice- and-dice" rectangular region technique for visualizing information. The Table Lens [32] and SeeSoft <ref> [8] </ref> systems mentioned earlier in this article also introduce innovative visualization techniques. Fundamentally, however, all these information visualization techniques are best suited for structured, hierarchical data such files in a directory structure or text items in a large database.
Reference: [9] <author> J. D. Foley, A. Van Dam, S. K. Feiner, and J. F. Hughes. </author> <title> Computer Graphics Principles and Practice. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1990. </year>
Reference-contexts: A destination pixel will look the same (be turned on) if one pixel from the original image happens to map to that screen location or if 100 or more pixels happened to fall there. This effect is known as aliasing <ref> [9] </ref>. The idea of the Information Mural technique is to make the density of overlap visually apparent. It draws on strategies for anti-aliasing in computer graphics by varying intensity of the screen pixels to convey the underlying density of pixels from the original sample. <p> Mural widget at the scale of the original image and the Mural widget translates these points and lines into a Mural of the appropriate size. 4.1 Original Algorithm The original algorithm listed below creates an Information Mural in a manner very similar to weighted area sampling with overlapping weighting functions <ref> [9] </ref>. In this version, a pixel from the original image contributes proportionally to the intensity of the four surrounding screen pixels that it covers when scaled into the I x J Mural. <p> Other related work One area of related work on which the Information Mural is based is the fundamental antialiasing research of computer graphics <ref> [1, 9] </ref>. The same ideas that help reduce "jaggies" in realistic scenes allow us to combine many data values and display an image that captures data density and distribution. As discussed earlier, we are able to utilize simple antialiasing, area sampling, and filtering techniques and still gain powerful results.
Reference: [10] <author> G. W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> In Proceedings of the ACM SIGCHI '86 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 16-23, </pages> <address> Boston, MA, </address> <month> Apr. </month> <year> 1986. </year>
Reference-contexts: The Mural is well suited for conveying an overview, global view or the context aspect in the focus + context visualization paradigm common in the research community currently. One of the best known focus + context techniques is the fisheye lens <ref> [10, 34] </ref>. In a fisheye view, one area serves to enclose both the focus and context components. One or more regions are "expanded" to show more detail, while surrounding regions are "de-emphasized" or made smaller. Fisheye views typically involve some distortion, however.
Reference: [11] <author> P. Haeberli and K. Akeley. </author> <title> The Accumulation Buffer: Hardware support for high-quality rendering. </title> <booktitle> In Proceedings of SIGGRAPH '90, </booktitle> <pages> pages 309-318, </pages> <year> 1990. </year>
Reference-contexts: Such abstraction makes it easy for an application to use a Mural widget to implement a resizeable global overview. This feature emphasizes the value of the Mural widget versus an application using rendering hardware such as the Open GL accumulation buffer <ref> [11] </ref> to do anti-aliasing of a scene as it is drawn. 1 Vz is a proprietary cross-platform visualization framework developed by Bell Laboratories, Naperville, IL. Several other parameters of the Mural widget can be changed by the client application.
Reference: [12] <author> C. G. Healey. </author> <title> Choosing effective colours for data visualization. </title> <booktitle> In Proceedings of the IEEE Visualization '96, </booktitle> <pages> pages 263-270, </pages> <address> San Francisco, CA, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: For a good summary of the potential dangers of using color in visualizations, see chapter 11 of [29]. Other related work in the choice of color for data visualizations includes <ref> [12] </ref>. Another potential liability for the Mural technique concerns the type of data set or image that it is capturing.
Reference: [13] <author> M. A. Hearst. TileBars: </author> <title> Visualization of term distribution in full text information access. </title> <booktitle> In Proceedings of ACM SIGCHI '95 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 59-66, </pages> <address> Denver, CO, </address> <year> 1995. </year>
Reference-contexts: This information would aid a user in determining document relevance, in addition to a simple numerical ranking. The TileBar visualization technique uses grayscale tile images that correspond to a thematic breakdown of a document to visually display relevance information to a keyword search <ref> [13] </ref>. This technique is more complicated and can require more space than just visually depicting the location of the keywords using an Information Mural.
Reference: [14] <author> M. T. Heath and J. A. Etheridge. </author> <title> Visualizing the performance of parallel programs. </title> <journal> IEEE Software, </journal> <volume> 8(5) </volume> <pages> 29-39, </pages> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: The global overview provided by the mural gives an immediate indication of the phases and sub-phases of the algorithm, as well as showing anomalies such as network blockage or processors waiting for others to complete. The space-time view of the PVM kernel integer sort benchmark shown using ParaGraph <ref> [14] </ref>, a parallel program visualization system, is included as Fig. 6. When the entire run is compressed into the view, messages blur together and make overall patterns less clear.
Reference: [15] <author> M. T. Heath, A. Malony, and D. </author> <title> Rover. Parallel performance visualization: From practice to theory. </title> <journal> IEEE Parallel and Distributed Technology, </journal> <volume> 3(4) </volume> <pages> 44-60, </pages> <month> Winter </month> <year> 1995. </year>
Reference-contexts: Both debugging and performance optimization can benefit from helpful visualizations of a program's execution <ref> [26, 15, 16] </ref>. Unfortunately, visualizations of the message passing during executions of programs on parallel architectures become very unclear when long durations of time are shown. Typically, scrolling displays are used to capture an entire program execution. An Information Mural provides a way of illustrating more data without scrolling.
Reference: [16] <author> M. T. Heath, A. Malony, and D. </author> <title> Rover. The visual display of parallel performance data. </title> <journal> Computer, </journal> <volume> 28(11) </volume> <pages> 21-28, </pages> <month> Nov. </month> <year> 1995. </year>
Reference-contexts: Both debugging and performance optimization can benefit from helpful visualizations of a program's execution <ref> [26, 15, 16] </ref>. Unfortunately, visualizations of the message passing during executions of programs on parallel architectures become very unclear when long durations of time are shown. Typically, scrolling displays are used to capture an entire program execution. An Information Mural provides a way of illustrating more data without scrolling.
Reference: [17] <author> W. C. Hill, J. D. Hollan, D. Wroblewski, and T. McCandless. Edit wear and read wear. </author> <booktitle> In Proceedings of the Conference on Human Factors in Computing Systems (CHI), </booktitle> <pages> pages 3-9, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: Several previous visualization systems have used the background of a scrollbar to display information about textual documents. The Edit Wear and Read Wear technique colored lines in a scrollbar to represent the reading and writing history of lines in a text file <ref> [17] </ref>. It is not clear how attributes of lines in large files would be displayed, as one attribute could occlude another. The Information Mural technique would help an application such as this display attributes for files that have more lines than there are rows of pixels in the scrollbar.
Reference: [18] <author> A. Inselberg and B. Dimsdale. </author> <title> Parallel coordinates: A tool for visualizing multi-dimensional geometry. </title> <booktitle> In Proceedings of the 1990 IEEE Visualization Conference, </booktitle> <pages> pages 361-370, </pages> <address> San Francisco, CA, </address> <year> 1990. </year>
Reference-contexts: Here the mural technique gives us some quick insight into the structure of the data. 3.2.3 Automobile Data Another data visualization technique valuable for presenting multivariate data sets is parallel coordinates <ref> [18] </ref>. The Information Mural technique can be used to assist parallel coordinate data displays.
Reference: [19] <author> D. F. Jerding and J. T. Stasko. </author> <title> Using visualization to foster object-oriented program under-standing. </title> <type> Technical Report GIT-GVU-94-33, </type> <institution> Georgia Institute of Technology, </institution> <month> July </month> <year> 1994. </year>
Reference-contexts: The examples are broken down here by data domain. Section 4 that follows then characterizes the examples according to the fundamental task they are facilitating. 3.1 Software Visualization The Information Mural technique originated in our software visualization research into visualization of object-oriented (OO) program executions <ref> [19, 20] </ref>.
Reference: [20] <author> D. F. Jerding and J. T. Stasko. </author> <title> The Information Mural: A technique for displaying and navigating large information spaces. </title> <booktitle> In Proceedings of the IEEE Visualization `95 Symposium on Information Visualization, </booktitle> <pages> pages 43-50, </pages> <address> Atlanta, GA, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: The examples are broken down here by data domain. Section 4 that follows then characterizes the examples according to the fundamental task they are facilitating. 3.1 Software Visualization The Information Mural technique originated in our software visualization research into visualization of object-oriented (OO) program executions <ref> [19, 20] </ref>. <p> One of the views from our prototype OO program visualization suite is called the Ex- ecution Mural (Fig. 2). This view is used to examine message traces from object-oriented programs <ref> [20] </ref>. Again, time runs from the left to right in the mural, and classes are laid out along the y-axis. Classes can be listed vertically according to their alphabetical order, by their appearance order in source files, or by viewer specification.
Reference: [21] <author> D. F. Jerding and J. T. Stasko. </author> <title> Using Information Murals in visualization applications. </title> <booktitle> In Proceedings of the 1995 Symposium on User Interface Software and Technology (Demonstration), </booktitle> <pages> pages 73-74, </pages> <address> Pittsburgh, PA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: Below are some snapshots from visualization applications we have built using Informa- tion Murals. These applications contain many different forms of information, from software to data to text documents, some of which were mentioned in <ref> [21] </ref>. The examples are broken down here by data domain. Section 4 that follows then characterizes the examples according to the fundamental task they are facilitating. 3.1 Software Visualization The Information Mural technique originated in our software visualization research into visualization of object-oriented (OO) program executions [19, 20].
Reference: [22] <author> D. F. Jerding, J. T. Stasko, and T. Ball. </author> <title> Visualizing message patterns in object-oriented program executions. </title> <type> Technical Report GIT-GVU-96-15, </type> <institution> Georgia Institute of Technology, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: Murals are currently being used in a suite of views to support program understanding during design recovery, validation, and reengineering tasks <ref> [22] </ref>. 3.1.1 Object-Oriented Message Traces Imagine an event trace diagram for object-oriented message sequences turned on its side, such that classes are assigned rows on the vertical axis and a message from one class to another is drawn as a vertical line connecting the source and destination classes. <p> In fact, being able to construct and observe global views of various message traces gave us insight into the existence of message patterns and sub-patterns in object-oriented programs. It was this observation that motivated the work described in <ref> [22] </ref> where we treat repeated sequences of messages as higher-level abstractions that correspond to design-level scenarios or language-level idioms.
Reference: [23] <author> B. Johnson and B. Shneiderman. </author> <title> Tree-maps: A space filling approach to the visualization of hierarchical information structures. </title> <booktitle> In Proceedings of the IEEE Visualization '91, </booktitle> <pages> pages 284-291, </pages> <address> San Diego, CA, </address> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: Other information visualization techniques exist for presenting large data sets. The Cone Trees and Perspective Wall of the Information Visualization system [33] use natural 3-D perspective to generate a form of focus + context view. Treemaps <ref> [23] </ref> use a "slice- and-dice" rectangular region technique for visualizing information. The Table Lens [32] and SeeSoft [8] systems mentioned earlier in this article also introduce innovative visualization techniques.
Reference: [24] <author> D. A. Keim, H.-P. Kriegel, and M. Ankerst. </author> <title> Recursive Pattern: A technique fo visualizing very large amounts of data. </title> <booktitle> In Proceedings of IEEE Visualization '95 Conference, </booktitle> <pages> pages 279-286, </pages> <address> Atlanta, GA, </address> <month> October </month> <year> 1995. </year>
Reference-contexts: A number of alternative data visualization techniques exist for illustrating the kind of data shown here with the Information Mural. Mentioned earlier were traditional averaging, aggregation and box plot techniques. Keim's "recursive structure" technique <ref> [24] </ref> uses similar screen real estate to portray data sets of similar magnitude to those with the Mural. Keim's technique, however, does not preserve the gestalt natural form of the plotted data. It is a visualization technique that must be learned to be understood.
Reference: [25] <author> D. Kimelman and B. Rosenburg. Strata-Various: </author> <title> Multi-layer visualization of dynamics in software system behavior. </title> <booktitle> In Proceedings of the IEEE Visualization '94 Conference, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Illustrating a program execution via the mural allows the viewer to perceive phases in the execution as well as the classes participating in each phase, which can be an important factor in software analysis <ref> [25] </ref>. Essentially, it provides an overview of the entire run that serves as context for various program understanding tasks. As will be mentioned in the following example, this type of mural of a program execution is valuable for navigation and focus operations. <p> A recording strip view is used to portray instance activation over time. The Information Mural technique could be utilized to increase the amount of historical information that can be displayed. As another example, the PV program visualization system provides concurrent, coordinated, and multi-layered views of program behavior <ref> [25] </ref>. The time-oriented system and process state information views use pixel-level color strips that extend over time to present state history. These views scroll to the right as the program executes, and can be zoomed in to decrease the scale of the strips.
Reference: [26] <author> E. Kraemer and J. T. Stasko. </author> <title> The visualization of parallel systems: An overview. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 18(2) </volume> <pages> 105-117, </pages> <month> June </month> <year> 1993. </year> <month> 27 </month>
Reference-contexts: Both debugging and performance optimization can benefit from helpful visualizations of a program's execution <ref> [26, 15, 16] </ref>. Unfortunately, visualizations of the message passing during executions of programs on parallel architectures become very unclear when long durations of time are shown. Typically, scrolling displays are used to capture an entire program execution. An Information Mural provides a way of illustrating more data without scrolling.
Reference: [27] <author> J. Lamping and R. Rao. </author> <title> Laying out and visualizing large trees using a hyperbolic space. </title> <booktitle> In Proceedings of the 1994 ACM Symposium on User Interface Software and Technology, </booktitle> <pages> pages 13-14, </pages> <address> Marina del Rey, CA, </address> <month> November </month> <year> 1994. </year>
Reference-contexts: In the larger version, each matrix entry is allocated 4 pixels, while in the smaller version, more than one entry occupies a single pixel. and a scripting language to create simple program visualizations <ref> [27] </ref>. A recording strip view is used to portray instance activation over time. The Information Mural technique could be utilized to increase the amount of historical information that can be displayed. As another example, the PV program visualization system provides concurrent, coordinated, and multi-layered views of program behavior [25].
Reference: [28] <author> A. R. Martin and M. O. Ward. </author> <title> High dimensional brushing for interactive exploration of multivariate data. </title> <booktitle> In Proceedings of the 1995 IEEE Visualization Conference, </booktitle> <pages> pages 271-278, </pages> <address> Atlanta, GA, </address> <month> Oct. </month> <year> 1995. </year>
Reference-contexts: Alternatively, Murals that cyclically render pixels according to all colors contained are possible. For a more general discussion of a variety of these potential interactive brushing techniques, see <ref> [28] </ref>. This is simply a challenging problem in which the particular task being performed should dictate the approach to be followed. 4.4 Implementation While the previous subsections on the Information Mural algorithm mentioned many implementation considerations, this subsection will discuss how Information Murals are actually included in visualization applications.
Reference: [29] <author> M. Monmonier. </author> <title> How to Lie with Maps. </title> <publisher> University of Chicago Press, </publisher> <address> Chicago, IL, 2 edition, </address> <year> 1996. </year>
Reference-contexts: Two such applications, geographic data and text documents, are described below. 3.3.1 Geographic Information Many organizations such as the U.S. Census Bureau create maps of various census statistics such as population distributions. A common technique used to illustrate geographic data like this is the chloropleth map <ref> [29] </ref>. A chloropleth map breaks down a geographic area into smaller regions that are then given a grayscale shade or color to indicate some value over that region. How to do this areal breakdown is one of the challenges of map-making. <p> How population values are then classified or mapped to the resulting images shades or colors is still the critical issue, however. <ref> [29] </ref> describes how varying that mapping can result in markedly different presentations. Figure 13 is simply one particular mapping we chose. <p> Because Murals rely on pixel-level detail, it can be difficult if not impossible to notice a single yellow pixel in a sea of gray, for example. For a good summary of the potential dangers of using color in visualizations, see chapter 11 of <ref> [29] </ref>. Other related work in the choice of color for data visualizations includes [12]. Another potential liability for the Mural technique concerns the type of data set or image that it is capturing.
Reference: [30] <author> C. Plaisant, D. Carr, and B. Shneiderman. </author> <title> Image-browser taxonomy and guidelines for design-ers. </title> <journal> IEEE Software, </journal> <volume> 12(2) </volume> <pages> 21-32, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: The design of a particular information visualization is very much dependent on the task (s) it is intended to support. Plaisant, Carr, and Shneiderman have categorized different types of tasks, including image generation, open-ended exploration, diagnostic, navigation, and monitoring <ref> [30] </ref>. For many of these applications, particularly within the context of a browser, a global view of the information is important as a navigational aid or as an analysis tool. <p> The first task involves browsing large information spaces. The Information Mural technique itself is not a solution to this problem. Rather, a Mural can be used as the global overview in a larger browser system. For example, Plaisant, Carr and Shneiderman describe many different styles of information browsers <ref> [30] </ref>. Some of these browser categories, notably the Single Coordinated Pair, Tiled Multilevel, Free zoom and multiple overlap, and the Bifocal view, utilize global overviews.
Reference: [31] <author> B. A. Price, R. M. Baecker, and I. S. </author> <title> Small. A principled taxonomy of software visualization. </title> <journal> Journal of Visual Languages and Computing, </journal> <volume> 4(3) </volume> <pages> 211-266, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: However, there are several different types of information spaces that can be represented using information murals: 1 * Time-oriented visualizations often span many computer screens if laid out completely. These types of views are particularly prevalent in software visualization <ref> [31] </ref> and mon <br>- itoring applications. * Visualizations that contain miniature representations of information are forced to make tradeoffs in deciding what visual attributes of the information can be included at small scales. * A text file or document usually does not fit entirely on the screen, because its vertical dimension
Reference: [32] <author> R. Rao and S. K. Card. </author> <title> The Table Lens: Merging graphical and symbolic representations in an interactive focus+context visualization for tabluar information. </title> <booktitle> In Proceedings of the ACM SIGCHI '94 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 318-322, </pages> <address> Boston, MA, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: Fig. 3 shows the same Pattern Matrix view at two different sizes. An information visualization that could take advantage of Information Murals in a 6 similar way is the Table Lens <ref> [32] </ref>. The Table Lens is a visualization technique for illustrating tabular data. It can present relatively large tables using a fish-eye technique: some rows or columns can be expanded (focus), while others are collapsed to their minimum size, a single row or column of pixels. <p> The Cone Trees and Perspective Wall of the Information Visualization system [33] use natural 3-D perspective to generate a form of focus + context view. Treemaps [23] use a "slice- and-dice" rectangular region technique for visualizing information. The Table Lens <ref> [32] </ref> and SeeSoft [8] systems mentioned earlier in this article also introduce innovative visualization techniques. Fundamentally, however, all these information visualization techniques are best suited for structured, hierarchical data such files in a directory structure or text items in a large database.
Reference: [33] <author> G. G. Robertson, S. K. Card, and J. D. Mackinlay. </author> <title> Information visualization using 3D interac-tive animation. </title> <journal> Communications of the ACM, </journal> <volume> 36(4) </volume> <pages> 57-71, </pages> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Other information visualization techniques exist for presenting large data sets. The Cone Trees and Perspective Wall of the Information Visualization system <ref> [33] </ref> use natural 3-D perspective to generate a form of focus + context view. Treemaps [23] use a "slice- and-dice" rectangular region technique for visualizing information. The Table Lens [32] and SeeSoft [8] systems mentioned earlier in this article also introduce innovative visualization techniques.
Reference: [34] <author> M. Sarkar and M. H. Brown. </author> <title> Graphical fisheye views of graphs. </title> <booktitle> In Proceedings of ACM SIGCHI '92 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 83-91, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: The Mural is well suited for conveying an overview, global view or the context aspect in the focus + context visualization paradigm common in the research community currently. One of the best known focus + context techniques is the fisheye lens <ref> [10, 34] </ref>. In a fisheye view, one area serves to enclose both the focus and context components. One or more regions are "expanded" to show more detail, while surrounding regions are "de-emphasized" or made smaller. Fisheye views typically involve some distortion, however.
Reference: [35] <author> J. T. Stasko and E. Kraemer. </author> <title> A methodology for building application-specific visualizations of parallel programs. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 18(2) </volume> <pages> 258-264, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Fig. 1a shows a grayscale, aliased Information Mural of a message trace from a bubble sort algorithm animation built using the Polka toolkit <ref> [35] </ref>, containing around 20 classes on the vertical axis and over 90,000 messages on the horizontal. Drawing this image in a window 500 pixels wide results in a horizontal information compression ratio of over 180:1.
Reference: [36] <author> J. T. Stasko and J. Muthukumarasamy. </author> <title> Visualizing program executions on large data sets. </title> <booktitle> In Proceedings of the 1996 IEEE Symposium on Visual Languages, </booktitle> <pages> pages 166-173, </pages> <address> Boulder, CO, </address> <month> Sept. </month> <year> 1996. </year>
Reference-contexts: Its advantage over the Mural is that it can scale up to data sets of higher dimensionality and is, in a sense, more "information dense." Stasko and Muthukumarasamy introduce a visualization technique for illustrating extremely large bivariate data sets <ref> [36] </ref>. Their technique is similar to box plots in aggregating consecutive regions of data values into a rectangle. The horizontal position of the rectangle defines its data set position, and the top and bottom height of the rectangle denote the relative maximum and minimum values within the region.
Reference: [37] <author> M. C. Stone, K. Fishkin, and E. A. Bier. </author> <title> The movable filter as a user interface tool. </title> <booktitle> In Proceedings of the ACM SIGCHI '94 Conference on Human Factors in Computing Systems, </booktitle> <pages> pages 306-312, </pages> <address> Boston, MA, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: Fisheye views typically involve some distortion, however. The Mural is better suited for separate focus and context regions, similar to that done in [2]. One could envision placing a focus filter or lens on top of a Mural, much as done in the Movable Filter or Magic Lens <ref> [37] </ref> techniques, as a way of providing an integrated focus + context view. Other information visualization techniques exist for presenting large data sets. The Cone Trees and Perspective Wall of the Information Visualization system [33] use natural 3-D perspective to generate a form of focus + context view.
Reference: [38] <author> B. Topol, J. T. Stasko, and V. S. Sunderam. </author> <title> Monitoring and visualization in cluster environ-ments. </title> <type> Technical Report GIT-GVU-96-10, </type> <institution> Georgia Institute of Technology, </institution> <month> March </month> <year> 1996. </year>
Reference-contexts: An Information Mural provides a way of illustrating more data without scrolling. The aliased mural of Fig. 4a shows the kernel integer sort benchmark executing on 16 processors using the PVM distributed system, generated using the PVaniM system built at Georgia Tech <ref> [38] </ref>. Each processor is assigned a row on the vertical axis, and a message is drawn as a line from one processor to another at the appropriate time coordinates. This particular view uses wall clock timestamps.
Reference: [39] <author> E. R. Tufte. </author> <title> The Visual Display of Quantitative Information. </title> <publisher> Graphics Press, </publisher> <address> Cheshire, CT, </address> <year> 1983. </year>
Reference-contexts: When color is added, this situation is confounded. Color is better suited for portraying categorical data rather than continuous values. Using attribute colors to categorize information in a Mural follows this paradigm. The use of color to illustrate numerical ordering and values can be problematic <ref> [39] </ref>. While this is clearly a problem with the equalized intensity color scale in Murals, we have observed that it is easier to spot low-intensity outliers using color rather than grayscale. Cleveland has suggested color scales that may be more appropriate, such as varying intensity of two hues [7].
Reference: [40] <author> E. R. Tufte. </author> <title> Envisioning Information. </title> <publisher> Graphics Press, </publisher> <address> Cheshire, CT, </address> <year> 1990. </year> <month> 28 </month>
Reference-contexts: Their recommendations confirm our selection of a grayscale colormap but also suggest other viable alternatives. Furthermore, the context of color, i.e. what other colors adjoin or surround a particular color, strongly influences a person's perception of the color <ref> [40] </ref>. The use of many different color hues and lightnesses may result in a perceived merging of adjacent colors. Because Murals rely on pixel-level detail, it can be difficult if not impossible to notice a single yellow pixel in a sea of gray, for example.
References-found: 40

