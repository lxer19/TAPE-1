URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-94-1185/CS-TR-94-1185.ps.Z
Refering-URL: http://www.cs.wisc.edu/~fischer/ftp/pub/tech-reports/ncstrl.uwmadison/CS-TR-94-1185/
Root-URL: http://www.cs.wisc.edu
Email: raghug@cs.wisc.edu  
Title: Schema Intension Graphs: A Formal Model for the Study of Schema Equivalence  
Author: R. J. Miller Y. E. Ioannidis R. Ramakrishnan frmiller, yannis, 
Note: R. J. Miller has been partially supported by the National Science Foundation (NSF) under Grant IRI-9157368. Y. Ioannidis has been partially supported by the NSF under Grants IRI-9113736, IRI-9224741, and IRI-9157368 (PYI Award), and by grants from DEC, IBM, HP, AT&T, and Informix. R. Ramakrishnan has been partially supported by a David and Lucile Packard Foundation Fellowship in Science and Engineering, by the NSF under a PYI Award and under grant IRI-9011563, and by grants from DEC, Tandem, and Xerox.  
Affiliation: Department of Computer Sciences University of Wisconsin-Madison  
Abstract: Technical Report 1185 Abstract We develop a formal data model, the Schema Intension Graph (SIG) model, to aid in understanding the relative information capacity of schemas containing constraints. The basic building blocks of the SIG model are sets that may be combined by the nested application of union and product constructors. The model also permits the expression of binary relations on sets and simple integrity constraints on these relations. We discuss the motivation used in designing the model and establish some fundamental results on the model. We consider the problem of constraint implication in the SIG model and give a sound and complete set of implication rules for a subclass of SIG schemas, called simple SIG schemas. The general constraint implication problem is shown to be undecidable. Finally, we consider information capacity preserving translations of a subclass of relational schemas with functional and inclusion dependencies into simple SIG schemas. These translations assist in determining the relative information capacity of relational schemas. 
Abstract-found: 1
Intro-found: 1
Reference: [AH88] <author> S. Abiteboul and R. Hull. </author> <title> Restructuring Hierarchical Database Objects. </title> <journal> Theoretical Computer Science, </journal> <volume> 62 </volume> <pages> 3-38, </pages> <year> 1988. </year>
Reference-contexts: In order to address questions such as this, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [Hul86] or models based on complex types <ref> [AH88, Hul87, HY84, OY82] </ref>. Instead of extending complex types with constraints, we use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further in Section 3. <p> Information capacity has also been applied to a number of translation and integration problems <ref> [AH88, HY84, MS92, OY82, RR87, and others] </ref>. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. For schemas in most common data models (including the SIG model), the set I Y (Si) is finite if Y is finite. <p> The restructuring operators are used to define a normal form for these schemas such that two schemas are absolutely equivalent if and only if their normal forms are isomorphic. This result has been generalized to schemas that include finite as well as infinite base types <ref> [AH88] </ref>. Again, a (decidable) characterization of absolute equivalence for the extended set of schemas is given that is based on a set of restructuring operators. Characterizations of absolute dominance for complex types are not known.
Reference: [AP82] <author> P. Atzeni and D. S. Parker. </author> <title> Assumptions in Relational Database Theory. </title> <booktitle> In Proc. of the ACM Sym. on Principles of Database Systems, </booktitle> <pages> pages 1-9, </pages> <address> Los Angeles, CA, </address> <month> March </month> <year> 1982. </year>
Reference-contexts: These practical requirements also led us to design a model that is not subject to assumptions such as the relationship uniqueness assumption <ref> [AP82] </ref> that requires there be only one relationship expressed between any two sets. Additionally, to simplify our task, we include in the model only a minimum set of constructs and constraints necessary to model a large class of commonly occurring schemas. <p> As noted above, a single relation in the relational model (or a set of relations to which the universal relation assumption is applied) can only model a single relationship between a given set of attributes. This property has been called the relationship uniqueness assumption or RUA <ref> [AP82] </ref>. Hence, the two functional dependencies expressed on the relational schema of Figure 4 are not independent. A pair of city-state values (c1,s1) functionally determines a single zip code value z1. This zip code in turn functionally determines a single state value.
Reference: [BW90] <author> M. Barr and C. Wells. </author> <title> Category Theory for Computing Science. </title> <publisher> Prentice Hall, </publisher> <address> New York, NY, </address> <year> 1990. </year>
Reference-contexts: first or the second set may appear at most once in an instance of the binary relation, respectively. 3 3 For those familiar with category theory, SIG schemas form a simple class of categories where the nodes are finite sets and the arrows are binary relations on pairs of sets <ref> [BW90] </ref>. TR 1185 - Dept. of Computer Sciences, Univ. of Wisconsin-Madison 5 4.1 Schema Intension Graphs Let fl be an infinite set of symbols that will serve as labels for schema constructs. Let T be an infinite set of simple abstract types.
Reference: [Dav73] <author> M. Davis. </author> <title> Hilbert's Tenth Problem is Unsolvable. </title> <journal> American Mathematical Monthly, </journal> <volume> 8(3) </volume> <pages> 233-269, </pages> <month> March </month> <year> 1973. </year>
Reference-contexts: The equation fi (~x) = (~x) is referred to as a Diophantine equation and the problem of determining whether there exists a solution in the natural numbers is undecidable <ref> [Dav73] </ref>. The next lemma states that Diophantine equations without constant terms may be "encoded" by a SIG schema. Specifically, given a Diophantine equation fi (~x) = (~x), we construct a schema S such that every valid instance of S corresponds to a solution to the Diophantine equation and vice versa.
Reference: [DF92] <author> C. J. Date and R. Fagin. </author> <title> Simple Conditions for Guaranteeing Higher Normal Forms in Relational Databases. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 465-476, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Hence, the functional dependencies in these tables are fully characterized by the key dependencies. Date and Fagin showed that such relational schemas have a number of desirable properties <ref> [DF92] </ref>. 6 They recommend the use of this class of relational schemas as a simple, easily understood way to ensure that a schema is free of commonly occurring anomalies. 6.2 Representing Relational Schemas in 3NF with Simple Keys In this section, we consider the class of relational schemas where each relational
Reference: [Hul86] <author> R. Hull. </author> <title> Relative Information Capacity of Simple Relational Database Schemata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 15(3) </volume> <pages> 856-886, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: As a result, solutions are motivated by the needs of specific classes of examples and often do not generalize. Our previous work has highlighted the need for a formal notion of equivalence [MIR93a]. Specifically, we examined the notion of relative information capacity <ref> [Hul86] </ref> and identified anomalies that can arise when using transformations that do not guarantee that information capacity is preserved. Some recent work on schema translation has successfully used information capacity equivalence as a basis for judging the correctness of translation algorithms [MS92, RR87]. <p> In order to address questions such as this, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model <ref> [Hul86] </ref> or models based on complex types [AH88, Hul87, HY84, OY82]. Instead of extending complex types with constraints, we use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. <p> S1~ abs S2, if there is a finite Z U such that for each Y Z there exists an equivalence preserving mapping f : I Y (S1) ! I Y (S2) (or equivalently jI Y (S1)j = jI Y (S2)j). * 1 Relative information capacity was first studied by Hull <ref> [Hul86] </ref>. Information capacity has also been applied to a number of translation and integration problems [AH88, HY84, MS92, OY82, RR87, and others]. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. <p> TR 1185 - Dept. of Computer Sciences, Univ. of Wisconsin-Madison 3 3 Motivation for the SIG Model Studies of absolute equivalence have focused on schemas without constraints. For the relational model without dependencies, two schemas are equivalent iff they are identical (up to renaming of attributes and relations) <ref> [Hul86] </ref>. Additional work has considered the relative information capacity of complex types formed by the recursive application of product, set or union constructors on both infinite and finite base types. <p> It is known that the relational model, without dependencies, permits no data relativism in that two relational schemas are equivalent if and only if they are identical (up to renaming of attributes and relations) <ref> [Hul86] </ref>. We use an example that shows this is not the case for the class of relational schemas considered in Section 6.2. In Schema R1 of Figure 2, each of the three attributes is a key. Schema R2 is a decomposition of R1 representing similar information.
Reference: [Hul87] <author> R. Hull. </author> <title> A Survey of Theoretical Research on Typed Complex Database Objects. </title> <editor> In J. Paredaens, editor, </editor> <booktitle> Databases, chapter 5, </booktitle> <pages> pages 193-256. </pages> <publisher> Academic Press, </publisher> <address> London, U.K., </address> <year> 1987. </year>
Reference-contexts: In order to address questions such as this, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [Hul86] or models based on complex types <ref> [AH88, Hul87, HY84, OY82] </ref>. Instead of extending complex types with constraints, we use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further in Section 3. <p> These requirements are discussed below. 3.1 Data-centricity By attaching a set of type definitions to an entity set, one can express constraints on the structure of individual entities. For example, in many complex type (or object) models constraints are placed on the internal structure of entities <ref> [Hul87] </ref>. Similarly, within the relational model, data dependencies express constraints on the structure of individual entities (where the entities are subsets of n-way products of sets). In such models, the interpretation of constraints are tied closely to the types or structures over which they are expressed.
Reference: [HY84] <author> R. Hull and C. K. Yap. </author> <title> The Format Model: A Theory of Database Organization. </title> <journal> Journal of the ACM, </journal> <volume> 31(3) </volume> <pages> 518-537, </pages> <year> 1984. </year>
Reference-contexts: In order to address questions such as this, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [Hul86] or models based on complex types <ref> [AH88, Hul87, HY84, OY82] </ref>. Instead of extending complex types with constraints, we use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further in Section 3. <p> Information capacity has also been applied to a number of translation and integration problems <ref> [AH88, HY84, MS92, OY82, RR87, and others] </ref>. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. For schemas in most common data models (including the SIG model), the set I Y (Si) is finite if Y is finite. <p> Additional work has considered the relative information capacity of complex types formed by the recursive application of product, set or union constructors on both infinite and finite base types. For complex types containing only infinite base types, absolute equivalence can be characterized by a set of natural restructuring operators <ref> [HY84] </ref>. The restructuring operators are used to define a normal form for these schemas such that two schemas are absolutely equivalent if and only if their normal forms are isomorphic. This result has been generalized to schemas that include finite as well as infinite base types [AH88]. <p> These transformations are essentially the transformations discussed elsewhere for hierarchical types (without the use of the set constructor) <ref> [HY84] </ref>. The SIG formalism may be extended to permit types to be assigned to edges as well as nodes.
Reference: [MIR93a] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> The Use of Information Capacity in Schema Integration and Translation. </title> <booktitle> In Proc. of the Int'l Conf. on Very Large Data Bases, </booktitle> <pages> pages 120-133, </pages> <address> Dublin, Ireland, </address> <month> August </month> <year> 1993. </year>
Reference-contexts: As a result, solutions are motivated by the needs of specific classes of examples and often do not generalize. Our previous work has highlighted the need for a formal notion of equivalence <ref> [MIR93a] </ref>. Specifically, we examined the notion of relative information capacity [Hul86] and identified anomalies that can arise when using transformations that do not guarantee that information capacity is preserved. <p> Additionally, we will develop equivalence preserving translations from existing data models into the SIG model and use our dominance and equivalence testing algorithms to understand the relative information capacity of schemas expressed in different data models <ref> [MIR93a, MIR93b] </ref>. Finally, the ultimate goal of our research is to develop a useful tool based on formal principles that aids in schema translation and integration.
Reference: [MIR93b] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Understanding Schemas. </title> <booktitle> In Proceedings on Research Issues on Data Engineering: Interoperability in Multidatabase Systems, </booktitle> <pages> pages 170-173, </pages> <address> Vienna, Austria, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: Additionally, we will develop equivalence preserving translations from existing data models into the SIG model and use our dominance and equivalence testing algorithms to understand the relative information capacity of schemas expressed in different data models <ref> [MIR93a, MIR93b] </ref>. Finally, the ultimate goal of our research is to develop a useful tool based on formal principles that aids in schema translation and integration.
Reference: [MIR94] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema Equivalence in Heterogeneous Systems: Bridging Theory and Practice. </title> <journal> Information Systems, </journal> <volume> 19(1) </volume> <pages> 3-31, </pages> <year> 1994. </year>
Reference-contexts: A central theme of our work is the development of efficient algorithms to test for the information capacity dominance and equivalence of SIG schemas <ref> [MIR94] </ref>. Additionally, we will develop equivalence preserving translations from existing data models into the SIG model and use our dominance and equivalence testing algorithms to understand the relative information capacity of schemas expressed in different data models [MIR93a, MIR93b].
Reference: [MS92] <author> V. M. Markowitz and A. Shoshani. </author> <title> Representing Extended Entity-Relationship Structures in Relational Databases: A Modular Approach. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 423-464, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: Some recent work on schema translation has successfully used information capacity equivalence as a basis for judging the correctness of translation algorithms <ref> [MS92, RR87] </ref>. However, there are only limited results on testing for information capacity equivalence and dominance of arbitrary schemas. To be usable in a practical context, a characterization of both information capacity equivalence and dominance of schemas is needed. <p> Information capacity has also been applied to a number of translation and integration problems <ref> [AH88, HY84, MS92, OY82, RR87, and others] </ref>. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. For schemas in most common data models (including the SIG model), the set I Y (Si) is finite if Y is finite.
Reference: [OY82] <author> C. O'Dunlaing and C. K. Yap. </author> <title> Generic Transformation of Data Structures. </title> <booktitle> In Sym. on Foundations of Computer Science, </booktitle> <pages> pages 186-195, </pages> <address> Chicago, IL, </address> <month> November </month> <year> 1982. </year>
Reference-contexts: In order to address questions such as this, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [Hul86] or models based on complex types <ref> [AH88, Hul87, HY84, OY82] </ref>. Instead of extending complex types with constraints, we use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further in Section 3. <p> Information capacity has also been applied to a number of translation and integration problems <ref> [AH88, HY84, MS92, OY82, RR87, and others] </ref>. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. For schemas in most common data models (including the SIG model), the set I Y (Si) is finite if Y is finite.
Reference: [RR87] <author> A. Rosenthal and D. Reiner. </author> <title> Theoretically Sound Transformations for Practical Database Design. </title> <booktitle> In Proc. of the Int'l Conf. on Entity-Relationship Approach, </booktitle> <pages> pages 115-131, </pages> <address> New York, NY, </address> <month> November </month> <year> 1987. </year>
Reference-contexts: Some recent work on schema translation has successfully used information capacity equivalence as a basis for judging the correctness of translation algorithms <ref> [MS92, RR87] </ref>. However, there are only limited results on testing for information capacity equivalence and dominance of arbitrary schemas. To be usable in a practical context, a characterization of both information capacity equivalence and dominance of schemas is needed. <p> Information capacity has also been applied to a number of translation and integration problems <ref> [AH88, HY84, MS92, OY82, RR87, and others] </ref>. 2 Dominance is most interesting when the sets I Y (S1) and I Y (S2) are finite. For schemas in most common data models (including the SIG model), the set I Y (Si) is finite if Y is finite.
Reference: [RR93] <author> A. Rosenthal and D. Reiner. </author> <title> Tools and Transformations Rigorous and Otherwise For Practical Database Design. </title> <type> Technical report, </type> <institution> MITRE Corp., </institution> <month> February </month> <year> 1993. </year>
Reference-contexts: Furthermore, we require that any reasoning about schema equivalence be done in a form that is easily conveyed back to a schema designer. To aid in this goal, we strive to meet requirements laid out by practitioners in this field <ref> [RR93] </ref>. Specifically, the constraints we include in the model are local (that is, they are robust to schema changes), comprehensible (easily understood and used by a database designer), and not based on unrealistic assumptions about the set of valid instances of a schema. <p> We therefore require that any reasoning about schema equivalence be done in a form that is easily conveyed back to a schema designer. To aid in this goal, we strive to meet requirements laid out by practitioners in this field <ref> [RR93] </ref>. Specifically, the constraints we include in the model are local (that is, they are robust to schema changes), comprehensible (easily understood and used by a database designer), and not based on unrealistic assumptions about the set of valid instances of a schema.
Reference: [Tar72] <author> R. E. Tarjan. </author> <title> Depth First Search and Linear Graph Algorithms. </title> <journal> SIAM Journal of Computing, </journal> <volume> 1(2) </volume> <pages> 146-160, </pages> <year> 1972. </year>
Reference-contexts: Furthermore, there are no other annotations in A fl that are not in A. The strongly connected components of a graph can be computed in time linear in the size of the graph <ref> [Tar72] </ref>.
References-found: 16

