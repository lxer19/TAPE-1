URL: http://www.cs.utexas.edu/users/ccp/iscas96.ps.gz
Refering-URL: http://www.cs.utexas.edu/users/ccp/
Root-URL: 
Title: A Fast Algorithm for Optimal Wire-Sizing Under Elmore Delay Model  
Author: Chung-Ping Chen and D. F. Wong 
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences University of Texas at Austin  
Abstract: In this paper, we present a fast algorithm for continuous wire-sizing under the distributed Elmore delay model. Our algorithm GWSA-C is an extension of the GWSA algorithm (for discrete wire-sizing) in [CL93a]. GWSA-C is an iterative algorithm with guaranteed convergence to optimal wire-sizing solutions. When specialized to discrete wire-sizing problems, GWSA-C is an improved implementation of GWSA, both in terms of runtime and memory usage. GWSA-C is extremely fast even on very large problems. For example, we can solve a 1,000,000 wire-segment problem in less than 3 minutes runtime on an IBM RS/6000 workstation. This kind of efficiency in wire-sizing has never been reported in the literature. 
Abstract-found: 1
Intro-found: 1
Reference: [CL93a] <author> Jason Jingsheng Cong, Kwok-Shing Leung. </author> <title> "Optimal wiresizing under the distributed elmore delay model," </title> <booktitle> IEEE Int'l. Conf. on Computer-Aided Design, </booktitle> <month> July </month> <year> 1993. </year>
Reference-contexts: As a result, wire-sizing for performance optimization is currently a very active research area (<ref> [CL93a] </ref> [ZDX93] [MBP95] [SP94]). The wire-sizing optimization problem was first introduced in [CL93a] [CL93b]. The authors in [CL93a] use the mono-tonicity, separability, and dominance properties under the Elmore delay model to determine an optimal solution for the discrete wire-sizing problem. (By discrete wire-sizing, we mean that each wire has only a finite number of possible widths.) Most of the other wire-sizing algorithms in <p> As a result, wire-sizing for performance optimization is currently a very active research area (<ref> [CL93a] </ref> [ZDX93] [MBP95] [SP94]). The wire-sizing optimization problem was first introduced in [CL93a] [CL93b]. The authors in [CL93a] use the mono-tonicity, separability, and dominance properties under the Elmore delay model to determine an optimal solution for the discrete wire-sizing problem. (By discrete wire-sizing, we mean that each wire has only a finite number of possible widths.) Most of the other wire-sizing algorithms in the literature (e.g. [ZDX93] [MBP95] <p> GWSA-C is an extension of the GWSA algorithm (for discrete wire-sizing) in <ref> [CL93a] </ref>. Basically, GWSA-C is a greedy algorithm based on iteratively re-sizing the wire segments. <p> It is not hard to see that the optimal local re-sizing of w i is obtained by checking the delay costs G (s j ) and G (s j+1 ) and pick the smaller one. For discrete wire-sizing problems, GWSA-C is an improved implementation of GWSA in <ref> [CL93a] </ref>, both in terms of runtime and memory usage. 4 Experimental Results We implemented and tested our algorithm on an IBM/RS6000 workstation. We first compare the run time of GWSA-C with GWSA in [CL93a] on a single wire with 100 to 10 6 segments. <p> For discrete wire-sizing problems, GWSA-C is an improved implementation of GWSA in <ref> [CL93a] </ref>, both in terms of runtime and memory usage. 4 Experimental Results We implemented and tested our algorithm on an IBM/RS6000 workstation. We first compare the run time of GWSA-C with GWSA in [CL93a] on a single wire with 100 to 10 6 segments. The GWSA packages we used was obtained from the authors of [CL93a] in July 1995. The parameters used are shown in Table 1. Table 2 shows the runtime and memory usage comparisons between GWSA and GWSA-C. <p> We first compare the run time of GWSA-C with GWSA in <ref> [CL93a] </ref> on a single wire with 100 to 10 6 segments. The GWSA packages we used was obtained from the authors of [CL93a] in July 1995. The parameters used are shown in Table 1. Table 2 shows the runtime and memory usage comparisons between GWSA and GWSA-C. It shows that GWSA-C runs much more efficiently than GWSA, and that the number of iterations grows very slowly. <p> The lower bound was obtained by using the continuous version of GWSA-C. Unit Resistance: 0:003 =m Unit Capacitance: 2 fi 10 17 F=m Minimum Wire Width: 1 m Maximum Wire Width: 20 m Table 1: RC Parameters. # of wire GWSA <ref> [CL93a] </ref> GWSA-C No of segments Time Memory Time Memory Iters 100 0.15 1968 0.01 32 9 1000 22.50 17464 0.08 40 10 10000 - 1.12 108 15 100000 - 13.52 812 18 Table 2: Runtime and memory usage comparisons between GWSA and GWSA-C. (Unit:Runtime (second), Memory (kbytes), Step Width (1m) Circuit
Reference: [CL93b] <author> Jason Jingsheng Cong, Kwok-Shing Leung, Zian Zhou. </author> <title> "Performance-Driven Interconnect design based on distributed rc delay model," </title> <booktitle> 30th ACM/IEEE Design Automation Confirence, </booktitle> <month> June </month> <year> 1993. </year>
Reference-contexts: As a result, wire-sizing for performance optimization is currently a very active research area ([CL93a] [ZDX93] [MBP95] [SP94]). The wire-sizing optimization problem was first introduced in [CL93a] <ref> [CL93b] </ref>.
Reference: [DPZ67] <author> R. J. Duffin, E. L. Peterson, Clarence Zener, </author> <title> Geometric programming-theory and application, </title> <publisher> John Wiley & Sons, Inc. </publisher> <year> 1967. </year>
Reference-contexts: that under the transformation x i = e z i ; 1 i n; G (z) = F (e z 1 ; : : : ; e z n ) is convex over z = f z j L i e z i U i ; 1 i ng (see <ref> [DPZ67] </ref>).
Reference: [E48] <author> W. C. </author> <title> Elmore "The transient response of damped linear networks with particular regard to wide band amplifiers" J. </title> <journal> Applied Physics, </journal> <volume> 19(1), </volume> <year> 1948. </year>
Reference-contexts: We use the Elmore delay model <ref> [E48] </ref> to estimate the delay. The signal delay at sink N i is computed by: D i = w j 2P i c j ); (1) where P i is the set of wire segments that lie on the path from the root to sink N i .
Reference: [L84] <author> D. G. </author> <title> Luenberger Linear and Nonlinear Probramming Addison-Wesley Publishing Company. </title> <publisher> Inc. </publisher> <year> 1984. </year>
Reference-contexts: Hence @G (z fl )(z i z fl @F (x fl )e z fl i ) 0; 8z 2 z : Combining the three cases, we get @G @z i (z fl )(z i z fl 0; 8z 2 z . Since G is convex (see <ref> [L84] </ref>), we have, for all z 2 z , = i=1 @z i i ) Thus F (x) F (x fl ) = G (z) G (z fl ) 0; 8x 2 x . Therefore x fl is a global minimum point. 2 We now describe our algorithm GWSA-C.
Reference: [MBP95] <author> N. Menezes, Ross Baldick and L. T. Pillage, </author> <title> "A sequential quardratic programming approach to concurrent gate and wire sizing" Proc. </title> <booktitle> ACM/IEEE Intl, Conf. on Computer-Aided Design,1995. </booktitle>
Reference-contexts: 1 Introduction Since interconnect delay has become the dominant factor of circuit delay in deep sub-micron fabrication technology, it is clear that sizing the gates alone is not enough to achieve desirable circuit performance. As a result, wire-sizing for performance optimization is currently a very active research area ([CL93a] [ZDX93] <ref> [MBP95] </ref> [SP94]). The wire-sizing optimization problem was first introduced in [CL93a] [CL93b]. <p> [CL93a] use the mono-tonicity, separability, and dominance properties under the Elmore delay model to determine an optimal solution for the discrete wire-sizing problem. (By discrete wire-sizing, we mean that each wire has only a finite number of possible widths.) Most of the other wire-sizing algorithms in the literature (e.g. [ZDX93] <ref> [MBP95] </ref> [SP94]) are designed for continuous wire-sizing (i.e., each wire size can be any real number within a given range), but none of them are efficient when the number of segments is in the thousands. (Note that in practice it is possible to have "large" problems.
Reference: [SP94] <author> Sachin S. </author> <title> Sapatnekar "RC Interconnect Optimization under the Elmore Delay Model" 31st ACM/IEEE Design Automation Conference, </title> <year> 1994. </year>
Reference-contexts: As a result, wire-sizing for performance optimization is currently a very active research area ([CL93a] [ZDX93] [MBP95] <ref> [SP94] </ref>). The wire-sizing optimization problem was first introduced in [CL93a] [CL93b]. <p> use the mono-tonicity, separability, and dominance properties under the Elmore delay model to determine an optimal solution for the discrete wire-sizing problem. (By discrete wire-sizing, we mean that each wire has only a finite number of possible widths.) Most of the other wire-sizing algorithms in the literature (e.g. [ZDX93] [MBP95] <ref> [SP94] </ref>) are designed for continuous wire-sizing (i.e., each wire size can be any real number within a given range), but none of them are efficient when the number of segments is in the thousands. (Note that in practice it is possible to have "large" problems.
Reference: [T93] <author> R. S. Tsay, </author> <title> "An exact zero-skew clock routing algorithm" IEEE Trans. </title> <booktitle> Computer-Aided Design, </booktitle> <volume> vol. 12, no. 2, pp.242-249, </volume> <month> February </month> <year> 1993. </year>
Reference-contexts: Figures 3 and 4 show that the runtime and memory usage of GWSA-C are close to linear. Table 3 shows that GWSA-C improved the delay in the clock tree r1-r5 <ref> [T93] </ref> by up to 89%. Table 4 showsthat GWSA-C produced near-optimal results for discrete wire-sizing problems. The lower bound was obtained by using the continuous version of GWSA-C.
Reference: [ZDX93] <author> Qing Zhu, Wayne W.-M. Dai,Joe G.Xi. </author> <title> "Optimal sizing of high-speed clock networks based on distributedrc and lossy transmission line models," </title> <booktitle> Proc. IEEE Intl. Conference on Computer-Aided Design, </booktitle> <address> pp.628-633, </address> <year> 1993. </year>
Reference-contexts: 1 Introduction Since interconnect delay has become the dominant factor of circuit delay in deep sub-micron fabrication technology, it is clear that sizing the gates alone is not enough to achieve desirable circuit performance. As a result, wire-sizing for performance optimization is currently a very active research area ([CL93a] <ref> [ZDX93] </ref> [MBP95] [SP94]). The wire-sizing optimization problem was first introduced in [CL93a] [CL93b]. <p> in [CL93a] use the mono-tonicity, separability, and dominance properties under the Elmore delay model to determine an optimal solution for the discrete wire-sizing problem. (By discrete wire-sizing, we mean that each wire has only a finite number of possible widths.) Most of the other wire-sizing algorithms in the literature (e.g. <ref> [ZDX93] </ref> [MBP95] [SP94]) are designed for continuous wire-sizing (i.e., each wire size can be any real number within a given range), but none of them are efficient when the number of segments is in the thousands. (Note that in practice it is possible to have "large" problems.
References-found: 9

