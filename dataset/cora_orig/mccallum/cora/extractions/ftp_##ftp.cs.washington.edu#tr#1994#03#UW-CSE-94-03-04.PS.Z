URL: ftp://ftp.cs.washington.edu/tr/1994/03/UW-CSE-94-03-04.PS.Z
Refering-URL: http://www.cs.washington.edu/research/tr/tr-by-title.html
Root-URL: 
Title: Interface Timing Verification with Combined Max and Linear Constraints  
Author: Elizabeth Walkup, Gaetano Borriello 
Address: Seattle, WA 98195  
Affiliation: Department of Computer Science and Engineering University of Washington  
Abstract: Technical Report 94-03-04 June 3, 1994 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Francois Louis Baccelli, Guy Cohen, Geert Jan Olsder, and Jean-Pierre Quadrat. </author> <title> Synchronization and Linearity: an algebra for discrete event systems. </title> <publisher> John Wiley & Sons, </publisher> <year> 1992. </year>
Reference: [2] <author> Gaetano Borriello. </author> <title> A New Interface Specification Methodology and its Applica tion to Transducer Synthesis. </title> <type> PhD thesis, </type> <institution> University of California, </institution> <month> May </month> <year> 1988. </year> <note> Report No. UCB/CSD 88/430. 12 </note>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events. <p> The basic subproblems of both these tasks can be phrased in terms of bounds on the skew between pairs of events. Previous work on the interface verification problem has suffered from a combination of two deficiencies. First, existing verification algorithms are inefficient. The method in <ref> [2] </ref> relies on exponential search, while the method of [3] does not produce the tightest possible skew bounds and has a running time which depends intimately upon the time bounds of the constraints. <p> Performance guarantees and propagation delays ought not to be removed since they determine how the circuit and its environment will react. 3.2 Previous Work Algorithms for determining the maximum inter-event timing separations have been proposed by Borriello <ref> [2] </ref> and McMillan and Dill [3]. The algorithm of [2] is exponential in the number of nodes with propagation delays and can quickly become too costly for large composed graphs. The implementation is straightforward and uses backtracking to determine which causal relationships determine the occurrence time of an event. <p> Performance guarantees and propagation delays ought not to be removed since they determine how the circuit and its environment will react. 3.2 Previous Work Algorithms for determining the maximum inter-event timing separations have been proposed by Borriello <ref> [2] </ref> and McMillan and Dill [3]. The algorithm of [2] is exponential in the number of nodes with propagation delays and can quickly become too costly for large composed graphs. The implementation is straightforward and uses backtracking to determine which causal relationships determine the occurrence time of an event.
Reference: [3] <author> Kenneth McMillan and David Dill. </author> <title> Algorithms for interface timing verifica tion. </title> <booktitle> In Proceedings of the IEEE International Conference on Computer Design: VLSI in Computers and Processors, </booktitle> <year> 1992. </year>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events. <p> Previous work on the interface verification problem has suffered from a combination of two deficiencies. First, existing verification algorithms are inefficient. The method in [2] relies on exponential search, while the method of <ref> [3] </ref> does not produce the tightest possible skew bounds and has a running time which depends intimately upon the time bounds of the constraints. <p> Performance guarantees and propagation delays ought not to be removed since they determine how the circuit and its environment will react. 3.2 Previous Work Algorithms for determining the maximum inter-event timing separations have been proposed by Borriello [2] and McMillan and Dill <ref> [3] </ref>. The algorithm of [2] is exponential in the number of nodes with propagation delays and can quickly become too costly for large composed graphs. The implementation is straightforward and uses backtracking to determine which causal relationships determine the occurrence time of an event. The algorithm of McMillan and Dill ([3], <p> In the MD algorithm, initial infinite upper bounds on node separations are refined by successive applications of appropriate constraints from the input set. The problem with this approach, as noted in <ref> [3] </ref>, is that the running time of the algorithm can depend on the values of the constraints, giving a worst case complexity of O (n 3 P j i;j j). <p> This behavior occurs precisely when there is a "negative cycle" in the induced constraint graph with at least one arc of the cycle belonging to a propagation 7 delay. When applied to the SRAM example of Figure 4, the number of times the algorithm of <ref> [3] </ref> applies the constraints DV Max (AV + 20; CS + 20) and CS DV 30 is dependent upon on the value of the 300 ns constraint from AV to CS. Increase the 300ns constraint to 600ns and the algorithm takes twice as long to converge. <p> We have implemented the algorithm and run both practical examples <ref> [8, 3] </ref> and randomly generated larger examples built to look like practical examples (i.e. similar constraint sizes and constraint type ratio). In these cases no more than three short circuiting phases were required to find maximum skews relative to a single event. <p> This algorithm improves upon the previous work of McMillan and Dill <ref> [3] </ref> in two ways: it robustly handles infinite delay bounds, and its worst case running time is not dependent on the individual delay values of the constraints. In the appendix which follows, we prove the algorithm correct, and relate the interface verification problem in terms of the fMax; +g algebra.
Reference: [4] <author> Thomas Gahlinger. </author> <title> Coherence and Satisfiability of Waveform Timing Specifi cations. </title> <type> PhD thesis, </type> <institution> University of Waterloo, </institution> <year> 1990. </year> <note> Research Report CS-90-11. </note>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events.
Reference: [5] <author> Peter Vanbekbergen, Gert Goossens, and Hugo De Man. </author> <title> Specification and analysis of timing constraints in signal transition graphs. </title> <booktitle> In Proceedings of the European Design Automation Conference, </booktitle> <month> March </month> <year> 1992. </year>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events.
Reference: [6] <author> Peter Vanbekbergen. </author> <title> Synthesis of Asynchronous Controllers from Graph Theoretic Specifications. </title> <type> PhD thesis, </type> <institution> Katholieke Universiteit Leuven, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events.
Reference: [7] <author> Bruce Gladstone. </author> <title> Specification of timing in a digital system. </title> <booktitle> ASIC and EDA, </booktitle> <pages> pages 46-52, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Temporal behavior of interface circuitry is frequently described using event-based representations that relate the occurrence times of events with timing constraints and propagation delays <ref> [2, 4, 3, 5, 6, 7] </ref>. In this paper, we present an efficient solution to a key problem in the verification and synthesis of interface glue logic, namely, the determination of tight bounds on the temporal separations between events.
Reference: [8] <author> Chris Myers. </author> <title> Synthesis of timed asynchronous circuits. </title> <journal> IEEE Transactions on VLSI Systems, </journal> <month> June </month> <year> 1993. </year>
Reference-contexts: We have implemented the algorithm and run both practical examples <ref> [8, 3] </ref> and randomly generated larger examples built to look like practical examples (i.e. similar constraint sizes and constraint type ratio). In these cases no more than three short circuiting phases were required to find maximum skews relative to a single event.
Reference: [9] <author> Elizabeth Walkup and Gaetano Borriello. </author> <title> Interface timing verification with ap plication to synthesis. </title> <booktitle> In Proceedings of the 31st Design Automation Conference, </booktitle> <month> June </month> <year> 1994. </year>
Reference-contexts: Currently we are working on determining the verification algorithm's theoretical time performance bounds, as well as exploring ways to expand the algorithm to handle interface timing synthesis tasks. The reader is referred to <ref> [9] </ref> for a preliminary exploration of this topic. Acknowledgments The authors wish to thank David Dill, Peter Vanbekbergen, Martin Tompa, and Paul Beame for many useful discussions of material contained herein.
References-found: 9

