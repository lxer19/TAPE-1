URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/misc/Eiter-Gottlob-93.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Email: (eiterjgottlob)@vexpert.dbai.tuwien.ac.at  
Title: Complexity Aspects of Various Semantics for Disjunctive Databases  
Author: Thomas Eiter and Georg Gottlob 
Address: Paniglgasse 16, A-1040 Wien, Austria  
Affiliation: Information Systems Department, Vienna University of Technology  
Note: In: Proceedings of the Twelth ACM SIGACT SIGMOD-SIGART Symposium on Principles of Database Systems (PODS-93), 1993, pp. 158-167.  Christian Doppler Laboratory for Expert Systems  
Abstract: This paper addresses complexity issues for important problems arising with disjunctive databases. In particular, the complexity of inference of a literal and a formula from a propositional disjunctive database under a variety of well-known disjunctive database semantics is investigated, as well deciding whether a disjunctive database has as model under a particular semantics. The problems are located in appropriate slots of the polynomial hierarchy. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> K. Apt, H. Blair, and A. Walker. </author> <title> Towards a Theory of Declarative Knowledge. </title> <booktitle> In Minker [17], </booktitle> <pages> pages 89-148. </pages>
Reference-contexts: (DB; P ; Z) such that M 6j= F can be verified in polynomial time with an NP oracle. 2 4 Disjunctive stratified databases The concept of stratification of DNDBs, which has been discussed by Chandra and Harel [6], was independently introduced for logic programs by Apt, Blair, and Walker <ref> [1] </ref> and van Gelder [28]; Przymusinski generalized it to DDB [19].
Reference: [2] <author> N. Bidoit and C. Froidevaux. </author> <title> Negation by default and unstratifiable programs. </title> <journal> Theoretical Computer Science, </journal> <volume> 78 </volume> <pages> 85-112, </pages> <year> 1991. </year>
Reference-contexts: Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7]. Marek and Truszczynski [15] and Bidoit and Froidevaux <ref> [2] </ref> independently showed that deciding whether a nondisjunctive database has a stable model is NP-complete. Chan [5] considered the complexity of inference of a literal under GCWA, DDR and PWS.
Reference: [3] <author> M. Cadoli and M. Lenzerini. </author> <title> The Complexity of Closed World Reasoning and Circumscription. </title> <booktitle> In Proceedings AAAI-90, </booktitle> <pages> pages 550-555, </pages> <year> 1990. </year>
Reference-contexts: Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. [4, 27]. Cadoli and Lenzerini present in <ref> [3] </ref> a careful complexity analysis of inference from a propositional database under several semantics from above (GCWA, EGCWA, CCWA, ECWA, CIRC) for syntactically restricted cases. Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7].
Reference: [4] <author> M. Cadoli and M. Schaerf. </author> <title> A Survey on Complexity Results for Non-monotonic Logics. </title> <type> Technical report, </type> <institution> Dipartimento di Informatica e Sistemistica, Universita di Roma "La Sapienza", </institution> <year> 1992. </year> <note> Journal of Logic Programming, to appear. </note>
Reference-contexts: Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. <ref> [4, 27] </ref>. Cadoli and Lenzerini present in [3] a careful complexity analysis of inference from a propositional database under several semantics from above (GCWA, EGCWA, CCWA, ECWA, CIRC) for syntactically restricted cases. Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7].
Reference: [5] <author> E. Chan. </author> <title> A Possible Worlds Semantics for Disjunctive Databases. </title> <journal> IEEE Transactions on Data and Knowledge Engineering, </journal> <note> 1991. To appear. </note>
Reference-contexts: ACM-PODS-5/93/Washington, D.C. c fl 1993 ACM 0-89791-593-3/93/0005/0158...$1.50 * The Extended Closed World Assumption (ECWA) by Gelfond, Przymusinska, and Przymusinski [12], which is in the finite propositional case equivalent to McCarthy's circumscription as defined by Lifschitz in [14] (CIRC). * The Possible Worlds Semantics (PWS) by Chan <ref> [5] </ref>, which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model <p> Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7]. Marek and Truszczynski [15] and Bidoit and Froidevaux [2] independently showed that deciding whether a nondisjunctive database has a stable model is NP-complete. Chan <ref> [5] </ref> considered the complexity of inference of a literal under GCWA, DDR and PWS. He proved that inferring a literal from a propositional database in which no integrity clauses (i.e. clauses with 158 empty heads) occur is coNP-hard under GCWA, but polynomial under DDR and PWS. <p> In this paper, we present complexity results for inference tasks under the above mentioned semantics for disjunctive databases. As in <ref> [5] </ref>, we limit our analysis to propositional (i.e. grounded) databases. Some of the results concerning GCWA, EGCWA, CCWA, CCWA, and CIRC appear in weaker form in [7]; note that the results in the present paper constitute a substantial improvement as they are derived for databases without integrity clauses. <p> Besides the inference problem, we address the problem of deciding whether the database has a model. As <ref> [5] </ref>, we consider both problems also for databases without integrity clauses. The results of this paper, together with previous results and results by other authors (marked by fl ), are summarized in Tables 1 and 2. They may be interpreted as follows. <p> Literal inference under GCWA is in P 2 , as it suffices to check a restricted set of DB models. Chan <ref> [5] </ref> shows that inference under DDR and PWS (which exclude ":") is tractable if integrity clauses are not allowed; this in fact constitutes the only cases of tractability for one of the considered semantics. <p> , and a disjunctive stratified database (DSDB) 159 Table 1: Complexity results for positive propositional DDBs (i.e. without integrity clauses and negation) Semantics Inference of literal Inference of formula 9 model GCWA P 2 -complete P 2 -hard, in P P 2 [O (log n)] DDR (jWGCA) in P fl <ref> [5] </ref> coNP-complete PWS (jPMS) in P fl [5] coNP-complete EGCWA P 2 -complete O (1) CCWA P 2 -hard, in P P 2 [O (log n)] ECWA (jCIRC) P 2 -complete ICWA P 2 -complete PERF P 2 -complete DSM, PDSM P 2 -complete Table 2: Complexity results for propositional DDBs <p> 159 Table 1: Complexity results for positive propositional DDBs (i.e. without integrity clauses and negation) Semantics Inference of literal Inference of formula 9 model GCWA P 2 -complete P 2 -hard, in P P 2 [O (log n)] DDR (jWGCA) in P fl <ref> [5] </ref> coNP-complete PWS (jPMS) in P fl [5] coNP-complete EGCWA P 2 -complete O (1) CCWA P 2 -hard, in P P 2 [O (log n)] ECWA (jCIRC) P 2 -complete ICWA P 2 -complete PERF P 2 -complete DSM, PDSM P 2 -complete Table 2: Complexity results for propositional DDBs (with integrity clauses) Semantics Inference of literal <p> ICWA P 2 -complete PERF P 2 -complete DSM, PDSM P 2 -complete Table 2: Complexity results for propositional DDBs (with integrity clauses) Semantics Inference of literal Inference of formula 9 model GCWA P 2 -complete P 2 -hard, in P P 2 [O (log n)] DDR (jWGCA) coNP-complete fl <ref> [5] </ref> coNP-complete PWS (jPMS) coNP-complete fl [5] coNP-complete EGCWA P 2 -complete NP-complete CCWA P 2 -hard, in P P 2 [O (log n)] ECWA (jCIRC) P 2 -complete ICWA P 2 -complete O (1) PERF P 2 -complete P 2 -complete DSM, PDSM P 2 -complete P 2 -complete defined <p> 2 -complete DSM, PDSM P 2 -complete Table 2: Complexity results for propositional DDBs (with integrity clauses) Semantics Inference of literal Inference of formula 9 model GCWA P 2 -complete P 2 -hard, in P P 2 [O (log n)] DDR (jWGCA) coNP-complete fl <ref> [5] </ref> coNP-complete PWS (jPMS) coNP-complete fl [5] coNP-complete EGCWA P 2 -complete NP-complete CCWA P 2 -hard, in P P 2 [O (log n)] ECWA (jCIRC) P 2 -complete ICWA P 2 -complete O (1) PERF P 2 -complete P 2 -complete DSM, PDSM P 2 -complete P 2 -complete defined here without integrity clauses if negation <p> The DDR semantics is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21]. Since T DB " ! can be computed efficiently, the complexity results on formula inference in Tables 1 and 2 are obvious; the entries on literal inference were proven by Chan <ref> [5] </ref>. Chan improved the DDR semantics by taking care of integrity clauses in DB, which are not respected by DDR. Example 3.1 Let DB = fa _ b ; a ^ b; c a ^ bg: Then DDR (DB) 6j= :c. <p> If M 0 = M and M 6j= F , then PWS (DB) 6j= F . 1 Hardness follows from Chan's result on literal inference <ref> [5] </ref>. 2 3.3 EGCWA, ECWA, and CIRC The Extended GCWA (EGCWA) was introduced by Yahya and Henschen [30] for inferring integrity clauses. DB is augmented by each integrity clause a 1 ^ ^a n that is true in every minimal model of DB.
Reference: [6] <author> A. Chandra and D. Harel. </author> <title> Horn Clause Queries and Generalizations. </title> <journal> Journal of Logic Programming, </journal> <volume> 2 </volume> <pages> 1-15, </pages> <year> 1985. </year>
Reference-contexts: Thus a guess for M 2 MM (DB; P ; Z) such that M 6j= F can be verified in polynomial time with an NP oracle. 2 4 Disjunctive stratified databases The concept of stratification of DNDBs, which has been discussed by Chandra and Harel <ref> [6] </ref>, was independently introduced for logic programs by Apt, Blair, and Walker [1] and van Gelder [28]; Przymusinski generalized it to DDB [19].
Reference: [7] <author> T. Eiter and G. Gottlob. </author> <title> Propositional Circumscription and Extended Closed World Reasoning are P 2 - complete. </title> <type> Technical Report CD-TR 91/20, </type> <institution> Christian Doppler Laboratory for Expert Systems, Vienna University of Technology, Austria, </institution> <month> May </month> <year> 1991. </year> <note> To appear in Theoretical Computer Science. </note>
Reference-contexts: Cadoli and Lenzerini present in [3] a careful complexity analysis of inference from a propositional database under several semantics from above (GCWA, EGCWA, CCWA, ECWA, CIRC) for syntactically restricted cases. Eiter and Gottlob complemented their work with results for arbitrary propositional databases <ref> [7] </ref>. Marek and Truszczynski [15] and Bidoit and Froidevaux [2] independently showed that deciding whether a nondisjunctive database has a stable model is NP-complete. Chan [5] considered the complexity of inference of a literal under GCWA, DDR and PWS. <p> Chan proved that if integrity clauses are present, the problem becomes coNP-complete for DDR as well as PWS. In recent papers, Schaerf derived complexity results for non-Horn logic programs [25, 26]. In [25], using results in <ref> [7] </ref> he derived P 2 and P 2 -completeness results for positivistic models and minimally-supported models. <p> In this paper, we present complexity results for inference tasks under the above mentioned semantics for disjunctive databases. As in [5], we limit our analysis to propositional (i.e. grounded) databases. Some of the results concerning GCWA, EGCWA, CCWA, CCWA, and CIRC appear in weaker form in <ref> [7] </ref>; note that the results in the present paper constitute a substantial improvement as they are derived for databases without integrity clauses. The proofs given in [7] do not apply to the cases we consider here. <p> Some of the results concerning GCWA, EGCWA, CCWA, CCWA, and CIRC appear in weaker form in <ref> [7] </ref>; note that the results in the present paper constitute a substantial improvement as they are derived for databases without integrity clauses. The proofs given in [7] do not apply to the cases we consider here. <p> enforces a unique model of the DB if the result is consistent. (It is interesting to note that deciding whether CWA (DB) is nonempty is coNP-hard and in P NP [O (log n)] , but not in coD P [18] (coD P NP [ coNP) unless the polynomial hierarchy collapses <ref> [7] </ref>.) Minker adapted the CWA for disjunctive databases by introducing the Generalized CWA (GCWA) in [16], which adds all literals :x to DB such that atom x is false in all minimal models of DB. The respective models of DB can be characterized as follows. <p> O (log jV j)) calls to a P 2 oracle; thus the problem is in P P 2 [O (log n)] . Proof. (Sketch) We outline a polynomial-time algorithm that makes only O (log jP j) calls to a P 2 oracle for CCWA (cf. <ref> [7] </ref> for this method). Notice that GCWA coincides with CCWA for Q = Z = ;, hence P = V . The basic idea is to proceed in two steps. <p> The following has been shown in <ref> [7] </ref>. Proposition 5.4 UMINSAT is coNP-hard and, unless the polynomial hierarchy collapses, UMINSAT does not belong to coD P . coD P is a complexity class [18] that contains -most likely properly- NP [ coNP.
Reference: [8] <author> T. Eiter and G. Gottlob. </author> <title> On the Computational Cost of Disjunctive Logic Programming: Propositional Case. </title> <type> Manuscript, </type> <month> March </month> <year> 1993. </year>
Reference-contexts: The various semantics can be alternatively characterized proof-theoretically, by fixpoints, or in terms of models, cf. [9]. We refer here only to model theoretic characterizations, which are heavily used for deriving the results. Full proofs of the results can be collected from <ref> [8] </ref>, which extends on the material of this paper in the context of logic programming. 2 Preliminaries and Notation We consider propositional databases over a finite set V of propositional variables. <p> The results in the general case remain unchanged <ref> [8] </ref>. 163 (i) a i &lt; c j , for all 1 i n; 1 j m, (iii) a i a j for all 1 i; j n. <p> We do not define partial stable models here, and only outline in the sequel how the results in Tables 1 and 2 are derived. The interested reader is referred to <ref> [8] </ref> for the details. Przymusinski shows that PDSM coincides with DSM if DB is positive; thus the P 2 lower bound on literal inference of DSM carries over to PDSM. <p> However, integrity clauses are not crucial for proving P 2 -hardness of PDSM-model existence. It can be shown that this lower bound holds if no integrity clauses are present <ref> [8] </ref>. Summarizing, we obtain the same complexity results for PDSM as for DSM.
Reference: [9] <author> J. Fernandez and J. Minker. </author> <title> Semantics of Disjunctive Deductive Databases. </title> <booktitle> In Proceedings ICDT-92, </booktitle> <pages> pages 21-50, </pages> <address> Berlin, </address> <month> October </month> <year> 1992. </year>
Reference-contexts: Accordingly, the meaning of a disjunctive database is expressed by a set of models instead of a single model as in case of nondisjunctive databases. A variety of different semantics for disjunctive databases has been proposed in the literature; see <ref> [9] </ref> for a comprehensive overview. <p> The rest of the paper is organized as follows. Section 2 provides definitions and notation. All further sections are devoted to justify the remaining entries in the tables. Following the classification in <ref> [9] </ref>, we deal in Sections 3-5 with semantics for disjunctive deductive DBs, disjunctive stratified DBs, and disjunctive normal DBs. The various semantics can be alternatively characterized proof-theoretically, by fixpoints, or in terms of models, cf. [9]. <p> Following the classification in <ref> [9] </ref>, we deal in Sections 3-5 with semantics for disjunctive deductive DBs, disjunctive stratified DBs, and disjunctive normal DBs. The various semantics can be alternatively characterized proof-theoretically, by fixpoints, or in terms of models, cf. [9]. We refer here only to model theoretic characterizations, which are heavily used for deriving the results. <p> The set of clauses in which ":" does not occur is denoted by C + . A disjunctive database (DDB) DB is a finite set of clauses from C. According to the classification of <ref> [9] </ref>, any such DB is a disjunctive normal database (DNDB) in general; it is a disjunctive deductive database (DDDB) if DB C + , and a disjunctive stratified database (DSDB) 159 Table 1: Complexity results for positive propositional DDBs (i.e. without integrity clauses and negation) Semantics Inference of literal Inference of
Reference: [10] <author> M. Gelfond and V. Lifschitz. </author> <title> The Stable Model Semantics for Logic Programming. </title> <booktitle> In Proceedings Fifth Logic Programming Symposium, </booktitle> <pages> pages 1070-1080, </pages> <address> Cambridge Mass., 1988. </address> <publisher> MIT Press. </publisher>
Reference-contexts: * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski [20] to extend Gelfond and Lifschitz's Stable Semantics <ref> [10] </ref> and the Well-Founded Semantics of van Gelder, Ross, and Schlipf [29]. Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. [4, 27]. <p> Hence, it can be shown that M 0 is a perfect model of DB if and only if DB 0 has no model. 2 5.2 DSM, PDSM Generalizing the Stable Model Semantics <ref> [10] </ref>, Przy-musinski [20] defined the meaning of a DNDB DB by disjunctive stable models (DSM), which are a subset of the minimal models of DB as follows.
Reference: [11] <author> M. Gelfond and H. Przymusinska. </author> <title> Negation as Failure: Careful Closure Procedure. </title> <journal> Artificial Intelligence, </journal> <volume> 30 </volume> <pages> 273-287, </pages> <year> 1986. </year>
Reference-contexts: We will deal with the following ones. * The Generalized Closed World Assumption (GCWA) by Minker [16]. * The Extended Generalized Closed World Assump tion (EGCWA) by Yahya and Henschen [30]. * The Careful Closed World Assumption (CCWA) by Gelfond and Przymusinska <ref> [11] </ref>. * The Disjunctive Database Rule (DDR) by Ross and Topor [23], which is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21]. <p> The respective models of DB can be characterized as follows. GCWA (DB) = fM 2 M (DB) : 8x 2 V: MM (DB) j= :x ) M j= :xg The Careful Closed World Assumption (CCWA) of Gelfond and Przymusinska <ref> [11] </ref> generalizes the GCWA as follows. For a partition hP ; Q; Zi of V , each literal :x, x 2 P , is added to DB such that MM (DB; P ; Z) j= :x.
Reference: [12] <author> M. Gelfond, H. Przymusinska, and T. Przymusinski. </author> <title> On the Relationship Between Circumscription and Negation as Failure. </title> <journal> Artificial Intelligence, </journal> <volume> 38 </volume> <pages> 75-94, </pages> <year> 1989. </year>
Reference-contexts: To copy otherwise, or to republish, requires a fee and/or a specific permission. ACM-PODS-5/93/Washington, D.C. c fl 1993 ACM 0-89791-593-3/93/0005/0158...$1.50 * The Extended Closed World Assumption (ECWA) by Gelfond, Przymusinska, and Przymusinski <ref> [12] </ref>, which is in the finite propositional case equivalent to McCarthy's circumscription as defined by Lifschitz in [14] (CIRC). * The Possible Worlds Semantics (PWS) by Chan [5], which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski <p> by Lifschitz in [14] (CIRC). * The Possible Worlds Semantics (PWS) by Chan [5], which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski <ref> [12] </ref> introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski [20] to extend Gelfond and Lifschitz's Stable Semantics [10] and the Well-Founded Semantics of van Gelder, Ross, and Schlipf [29]. <p> DB is augmented by each integrity clause a 1 ^ ^a n that is true in every minimal model of DB. It holds that EGCWA (DB) = MM (DB): The EGCWA is generalized by the Extended CWA (ECWA) of Gelfond, Przymusinska, and Przymusinski <ref> [12] </ref> in the following way. For a partition hP ; Q; Zi of V , ECWA P ;Z (DB) = MM (DB; P ; Z): 1 Chan follows a different proof. 162 EGCWA results if Q = Z = ;. <p> Then CIRC P ;Z (DB) = M (Circ (DB; P ; Z)): It holds that CIRC P ;Z (DB) = MM (DB; P ; Z) [14], hence CIRC P ;Z (DB) = ECWA P ;Z (DB). Notice that this holds as we have propositional databases, cf. <ref> [12] </ref>. Theorem 3.6 Literal inference from a positive DDB DB is P 2 -hard under EGCWA, ECWA, and CIRC. Proof. Immediate from Theorem 3.1 2 Theorem 3.7 Formula inference under EGCWA, ECWA, and CIRC is in P 2 . <p> Any such hS 1 ; : : : ; S r i is a stratification of DB. 2 Notice that a stratification of DB can be efficiently found. Gelfond, Przymusinska, and Przymusinski <ref> [12] </ref> defined the Iterated CWA (ICWA) as iterated application of ECWA to a DSDB. <p> Hence, we do not consider such an extension. moving each :x in the body to the head. The ICWA of DB can be characterized as follows (cf. <ref> [12] </ref>). <p> Stratifiability asserts consistency; if DB is stratified by S, then ICWA is consistent for any hP ; Q; Zi <ref> [12] </ref>. For inference, we have the following upper bound. Theorem 4.1 Given hP ; Q; Zi and S, formula inference under ICWA is in P 2 . Proof. <p> For inference, we have the following upper bound. Theorem 4.1 Given hP ; Q; Zi and S, formula inference under ICWA is in P 2 . Proof. By results in <ref> [12, Section 6] </ref>, ICWA is given by the following intersection of ECWAs: ICWA P 1 &gt;&gt;P r ;Z (DB) = r " ECWA P i ;P i+1 [[P r [Z (DB 1 [ [ DB r ): Since for each P 0 ; Z 0 , and DB 0 a guess
Reference: [13] <author> D. S. Johnson. </author> <title> A Catalog of Complexity Classes. </title> <editor> In J. van Leeuwen, editor, </editor> <booktitle> Handbook of Theoretical Computer Science, volume A, chapter 2. </booktitle> <publisher> Elsevier Science Publishers B.V. (North-Holland), </publisher> <year> 1990. </year>
Reference-contexts: Then, M (DB) = ffbg; fag; fa; bg; fa; cg; fb; cg; fa; b; cgg. Furthermore MM (DB) = ffag; fbgg, and for the partition hfag; fbg; fcgi of V , we have MM (P ; fag; fcg) = ffbg; fb; cg; fag; fa; cgg. Refer to <ref> [13] </ref> for concepts and notation of complexity theory. Recall that the classes P k , P polynomial hierarchy are defined by P 0 = P and for k 0, P k , P k+1 .
Reference: [14] <author> V. Lifschitz. </author> <title> Computing Circumscription. </title> <booktitle> In Procee dings IJCAI-85, </booktitle> <pages> pages 121-127, </pages> <year> 1985. </year>
Reference-contexts: To copy otherwise, or to republish, requires a fee and/or a specific permission. ACM-PODS-5/93/Washington, D.C. c fl 1993 ACM 0-89791-593-3/93/0005/0158...$1.50 * The Extended Closed World Assumption (ECWA) by Gelfond, Przymusinska, and Przymusinski [12], which is in the finite propositional case equivalent to McCarthy's circumscription as defined by Lifschitz in <ref> [14] </ref> (CIRC). * The Possible Worlds Semantics (PWS) by Chan [5], which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing <p> For a partition hP ; Q; Zi of V , ECWA P ;Z (DB) = MM (DB; P ; Z): 1 Chan follows a different proof. 162 EGCWA results if Q = Z = ;. ECWA is equivalent to circumscription (CIRC) as defined by Lifschitz in <ref> [14] </ref>. For hP ; Q; Zi, let Circ (DB; P ; Z) = DB [P ; Z] ^ :9P 0 Z 0 (DB [P 0 ; Z 0 ] ^ (P 0 &lt; P )) (cf. [14] for details). <p> ECWA is equivalent to circumscription (CIRC) as defined by Lifschitz in <ref> [14] </ref>. For hP ; Q; Zi, let Circ (DB; P ; Z) = DB [P ; Z] ^ :9P 0 Z 0 (DB [P 0 ; Z 0 ] ^ (P 0 &lt; P )) (cf. [14] for details). Then CIRC P ;Z (DB) = M (Circ (DB; P ; Z)): It holds that CIRC P ;Z (DB) = MM (DB; P ; Z) [14], hence CIRC P ;Z (DB) = ECWA P ;Z (DB). Notice that this holds as we have propositional databases, cf. [12]. <p> [P ; Z] ^ :9P 0 Z 0 (DB [P 0 ; Z 0 ] ^ (P 0 &lt; P )) (cf. <ref> [14] </ref> for details). Then CIRC P ;Z (DB) = M (Circ (DB; P ; Z)): It holds that CIRC P ;Z (DB) = MM (DB; P ; Z) [14], hence CIRC P ;Z (DB) = ECWA P ;Z (DB). Notice that this holds as we have propositional databases, cf. [12]. Theorem 3.6 Literal inference from a positive DDB DB is P 2 -hard under EGCWA, ECWA, and CIRC. Proof.
Reference: [15] <author> W. Marek and M. Truszczynski. </author> <title> Autoepistemic Logic. </title> <journal> Journal of the ACM, </journal> <volume> 38(3) </volume> <pages> 588-619, </pages> <year> 1991. </year>
Reference-contexts: Cadoli and Lenzerini present in [3] a careful complexity analysis of inference from a propositional database under several semantics from above (GCWA, EGCWA, CCWA, ECWA, CIRC) for syntactically restricted cases. Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7]. Marek and Truszczynski <ref> [15] </ref> and Bidoit and Froidevaux [2] independently showed that deciding whether a nondisjunctive database has a stable model is NP-complete. Chan [5] considered the complexity of inference of a literal under GCWA, DDR and PWS.
Reference: [16] <author> J. Minker. </author> <title> On Indefinite Data Bases and the Closed World Assumption. </title> <booktitle> In Proceedings of the 6 th Conference on Automated Deduction (CADE), </booktitle> <pages> pages 292-308, </pages> <year> 1982. </year>
Reference-contexts: A variety of different semantics for disjunctive databases has been proposed in the literature; see [9] for a comprehensive overview. We will deal with the following ones. * The Generalized Closed World Assumption (GCWA) by Minker <ref> [16] </ref>. * The Extended Generalized Closed World Assump tion (EGCWA) by Yahya and Henschen [30]. * The Careful Closed World Assumption (CCWA) by Gelfond and Przymusinska [11]. * The Disjunctive Database Rule (DDR) by Ross and Topor [23], which is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21]. <p> to note that deciding whether CWA (DB) is nonempty is coNP-hard and in P NP [O (log n)] , but not in coD P [18] (coD P NP [ coNP) unless the polynomial hierarchy collapses [7].) Minker adapted the CWA for disjunctive databases by introducing the Generalized CWA (GCWA) in <ref> [16] </ref>, which adds all literals :x to DB such that atom x is false in all minimal models of DB. The respective models of DB can be characterized as follows.
Reference: [17] <editor> J. Minker, editor. </editor> <booktitle> Foundations of Deductive Databases and Logic Programming. </booktitle> <publisher> Morgan Kaufman, </publisher> <address> Washing-ton DC, </address> <year> 1988. </year>
Reference: [18] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> The Complexity of Facets (And Some Facets of Complexity). </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 28 </volume> <pages> 244-259, </pages> <year> 1984. </year>
Reference-contexts: This is not suitable for disjunctive databases since it enforces a unique model of the DB if the result is consistent. (It is interesting to note that deciding whether CWA (DB) is nonempty is coNP-hard and in P NP [O (log n)] , but not in coD P <ref> [18] </ref> (coD P NP [ coNP) unless the polynomial hierarchy collapses [7].) Minker adapted the CWA for disjunctive databases by introducing the Generalized CWA (GCWA) in [16], which adds all literals :x to DB such that atom x is false in all minimal models of DB. <p> The following has been shown in [7]. Proposition 5.4 UMINSAT is coNP-hard and, unless the polynomial hierarchy collapses, UMINSAT does not belong to coD P . coD P is a complexity class <ref> [18] </ref> that contains -most likely properly- NP [ coNP. Lemma 5.5 UMINSAT is polynomially transformable to deciding whether a NLP DB has a unique minimal model. 164 Proof. (Sketch) Let a; b, and c be new atoms not occurring in C.
Reference: [19] <author> T. Przymusinski. </author> <title> On the Declarative and Procedural Semantics of Stratified Deductive Databases. </title> <booktitle> In Minker [17], </booktitle> <pages> pages 193-216. </pages>
Reference-contexts: which is in the finite propositional case equivalent to McCarthy's circumscription as defined by Lifschitz in [14] (CIRC). * The Possible Worlds Semantics (PWS) by Chan [5], which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski <ref> [19] </ref> and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski [20] to extend Gelfond and Lifschitz's Stable Semantics [10] and the Well-Founded Semantics of van Gelder, Ross, <p> be verified in polynomial time with an NP oracle. 2 4 Disjunctive stratified databases The concept of stratification of DNDBs, which has been discussed by Chandra and Harel [6], was independently introduced for logic programs by Apt, Blair, and Walker [1] and van Gelder [28]; Przymusinski generalized it to DDB <ref> [19] </ref>. <p> (DB) such that M 6j= F . 2 From Theorem 3.1 immediately follows (set S = hV i) Theorem 4.2 Given a stratification S, literal inference from a DSDB DB under ICWA is P 2 -hard, even if DB is positive. 5 Disjunctive normal databases 5.1 PERF Przymusinski introduced in <ref> [19] </ref> the Perfect Models Semantics (PERF) for DNDBs without integrity clauses. 3 The priority relation &lt; on atoms [19], which is similar to stratification, is defined from the structure of DB using an auxiliary relation as follows. (Intuitively, x &lt; y means that y has higher priority than x.) For each <p> Theorem 4.2 Given a stratification S, literal inference from a DSDB DB under ICWA is P 2 -hard, even if DB is positive. 5 Disjunctive normal databases 5.1 PERF Przymusinski introduced in <ref> [19] </ref> the Perfect Models Semantics (PERF) for DNDBs without integrity clauses. 3 The priority relation &lt; on atoms [19], which is similar to stratification, is defined from the structure of DB using an auxiliary relation as follows. (Intuitively, x &lt; y means that y has higher priority than x.) For each clause a 1 _ _ a n b 1 ^ ^ b k ^ :c 1 ^ ^
Reference: [20] <author> T. Przymusinski. </author> <title> Stable Semantics for Disjunctive Programs. </title> <journal> New Generation Computing, </journal> <volume> 9 </volume> <pages> 401-424, </pages> <year> 1991. </year>
Reference-contexts: developed Possible Models Semantics (PMS) of Sakama [24]. * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski <ref> [20] </ref> to extend Gelfond and Lifschitz's Stable Semantics [10] and the Well-Founded Semantics of van Gelder, Ross, and Schlipf [29]. Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. [4, 27]. <p> Hence, it can be shown that M 0 is a perfect model of DB if and only if DB 0 has no model. 2 5.2 DSM, PDSM Generalizing the Stable Model Semantics [10], Przy-musinski <ref> [20] </ref> defined the meaning of a DNDB DB by disjunctive stable models (DSM), which are a subset of the minimal models of DB as follows. <p> Then, DSM (DB) = fM : M 2 MM (DB M )g In fact, disjunctive stable models of DB are minimal models of DB, i.e. DSM (DB) MM (DB) <ref> [20] </ref>. Notice that if DB C + , (i.e. ":" does not occur in DB), then DB I = DB for every I; hence DSM (DB) = MM (DB). Thus if DB is positive, deciding model existence is trivial. <p> Theorem 5.11 Formula inference from a DNDB DB under DSM is in P 2 . Proof. (Sketch) A guess for M 2 DSM (DB) such that M 6j= F can be verified with an NP oracle in polynomial time (DB M is efficiently computable). 2 In <ref> [20] </ref> also the Partial Disjunctive Stable Model Semantics (PDSM) is introduced, which extends the Well-Founded Semantics of van Gelder, Ross, and Schlipf [29]. It is defined like DSM but using partial (i.e. 3-valued) models, in which true, false, and undefined variables have respective truth values 1; 0; and 0:5.
Reference: [21] <author> A. Rajasekar, J. Lobo, and J. Minker. </author> <title> Weak Generalized Closed World Assumption. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 5 </volume> <pages> 293-307, </pages> <year> 1989. </year>
Reference-contexts: [16]. * The Extended Generalized Closed World Assump tion (EGCWA) by Yahya and Henschen [30]. * The Careful Closed World Assumption (CCWA) by Gelfond and Przymusinska [11]. * The Disjunctive Database Rule (DDR) by Ross and Topor [23], which is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker <ref> [21] </ref>. <p> DDR (DB) = fM 2 M (DB) : i.e. the DDR adds to DB all literals :x where atom x does not occur in T " !. The DDR semantics is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker <ref> [21] </ref>. Since T DB " ! can be computed efficiently, the complexity results on formula inference in Tables 1 and 2 are obvious; the entries on literal inference were proven by Chan [5].
Reference: [22] <author> R. Reiter. </author> <title> On Closed-World Databases. </title> <editor> In H. Gallaire and J. Minker, editors, </editor> <booktitle> Logic and Data Bases, </booktitle> <pages> pages 55-76. </pages> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1978. </year>
Reference-contexts: It can be shown that is valid iff MM (T ) j= :w. 2 3.1 GCWA and CCWA Reiter's CWA <ref> [22] </ref> adds to DB each literal :x, x 2 V , such that M (DB) 6j= x.
Reference: [23] <author> K. Ross and R. Topor. </author> <title> Inferring Negative Information From Disjunctive Databases. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 4(2) </volume> <pages> 397-424, </pages> <year> 1988. </year>
Reference-contexts: with the following ones. * The Generalized Closed World Assumption (GCWA) by Minker [16]. * The Extended Generalized Closed World Assump tion (EGCWA) by Yahya and Henschen [30]. * The Careful Closed World Assumption (CCWA) by Gelfond and Przymusinska [11]. * The Disjunctive Database Rule (DDR) by Ross and Topor <ref> [23] </ref>, which is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21]. <p> a n b 1 ^ ^ b k andb j 2 I; for all j = 1; : : :kg; and T DB " n + 1 = T DB (T DB " n); and 1 [ T DB " n: The Disjunctive Database Rule (DDR) of Ross and Topor <ref> [23] </ref> can be characterized as follows. DDR (DB) = fM 2 M (DB) : i.e. the DDR adds to DB all literals :x where atom x does not occur in T " !. The DDR semantics is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21].
Reference: [24] <author> C. Sakama. </author> <title> Possible Model Semantics for Disjunctive Databases. </title> <booktitle> In Proceedings 1st Intl. Conf. DOOD-89, </booktitle> <pages> pages 337-351, </pages> <address> Kyoto Japan, </address> <year> 1989. </year>
Reference-contexts: World Assumption (ECWA) by Gelfond, Przymusinska, and Przymusinski [12], which is in the finite propositional case equivalent to McCarthy's circumscription as defined by Lifschitz in [14] (CIRC). * The Possible Worlds Semantics (PWS) by Chan [5], which turned out equivalent to the independently developed Possible Models Semantics (PMS) of Sakama <ref> [24] </ref>. * The Perfect Models Semantics (PERF) by Przy-musinski [19] and the Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski [20] to extend Gelfond and Lifschitz's Stable Semantics <p> Informally, PWS augments DB by all literals :x such that x is false in all possible worlds of DB. We use Chan's characterization of PWS in terms of the equivalent Possible Models Semantics of Sakama <ref> [24] </ref>.
Reference: [25] <author> M. Schaerf. </author> <title> Logic Programming and Autoepistemic Logics: New Relations and Complexity Results. </title> <note> Submitted, </note> <month> December </month> <year> 1992. </year>
Reference-contexts: Chan proved that if integrity clauses are present, the problem becomes coNP-complete for DDR as well as PWS. In recent papers, Schaerf derived complexity results for non-Horn logic programs <ref> [25, 26] </ref>. In [25], using results in [7] he derived P 2 and P 2 -completeness results for positivistic models and minimally-supported models. <p> Chan proved that if integrity clauses are present, the problem becomes coNP-complete for DDR as well as PWS. In recent papers, Schaerf derived complexity results for non-Horn logic programs [25, 26]. In <ref> [25] </ref>, using results in [7] he derived P 2 and P 2 -completeness results for positivistic models and minimally-supported models.
Reference: [26] <author> M. Schaerf. </author> <title> Negation and Minimality in Non-Horn Databases. </title> <booktitle> In Proceedings PODS-93, </booktitle> <year> 1993. </year>
Reference-contexts: Chan proved that if integrity clauses are present, the problem becomes coNP-complete for DDR as well as PWS. In recent papers, Schaerf derived complexity results for non-Horn logic programs <ref> [25, 26] </ref>. In [25], using results in [7] he derived P 2 and P 2 -completeness results for positivistic models and minimally-supported models. <p> In recent papers, Schaerf derived complexity results for non-Horn logic programs [25, 26]. In [25], using results in [7] he derived P 2 and P 2 -completeness results for positivistic models and minimally-supported models. In <ref> [26] </ref> he analyzed the complexity of weakly-stable and weakly-supported models of non-Horn programs, showing that in both cases deciding whether a formula is true in at least one such model is NP-complete and that deciding whether a formula is true in all such models is coNP-complete.
Reference: [27] <author> J. Schlipf. </author> <title> A Survey of Complexity and Undecidability Results in Logic Programming. </title> <editor> In H. Blair, W. Marek, A. Nerode, and J. Remmel, editors, </editor> <booktitle> Informal Proceedings of the Workshop on Structural Complexity and Recursion-Theoretic Methods in Logic Programming, </booktitle> <pages> pages 93-102, </pages> <address> Washington DC, </address> <month> November 13 </month> <year> 1992. </year> <institution> Cornell University, Mathematical Sciences Institute. </institution>
Reference-contexts: Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. <ref> [4, 27] </ref>. Cadoli and Lenzerini present in [3] a careful complexity analysis of inference from a propositional database under several semantics from above (GCWA, EGCWA, CCWA, ECWA, CIRC) for syntactically restricted cases. Eiter and Gottlob complemented their work with results for arbitrary propositional databases [7].
Reference: [28] <author> A. van Gelder. </author> <title> Negation as Failure Using Tight Derivations for General Logic Programs. </title> <booktitle> In Minker [17], </booktitle> <pages> pages 1149-1176. </pages>
Reference-contexts: such that M 6j= F can be verified in polynomial time with an NP oracle. 2 4 Disjunctive stratified databases The concept of stratification of DNDBs, which has been discussed by Chandra and Harel [6], was independently introduced for logic programs by Apt, Blair, and Walker [1] and van Gelder <ref> [28] </ref>; Przymusinski generalized it to DDB [19].
Reference: [29] <author> A. van Gelder, K. Ross, and J. Schlipf. </author> <title> The Well-Founded Semantics for General Logic Programs. </title> <journal> Journal of the ACM, </journal> <volume> 38(3) </volume> <pages> 620-650, </pages> <year> 1991. </year>
Reference-contexts: Iterated Closed World Assumption (ICWA) by Gelfond, Przymusinska, and Przymusinski [12] introduced for capturing PERF under stratified negations. * The (Partial) Disjunctive Stable Model Semantics (DSM, PDSM) as defined by Przymusinski [20] to extend Gelfond and Lifschitz's Stable Semantics [10] and the Well-Founded Semantics of van Gelder, Ross, and Schlipf <ref> [29] </ref>. Much work has been spent on studying the logical properties of these semantics, but less on complexity issues and tractability in the propositional case, cf. [4, 27]. <p> guess for M 2 DSM (DB) such that M 6j= F can be verified with an NP oracle in polynomial time (DB M is efficiently computable). 2 In [20] also the Partial Disjunctive Stable Model Semantics (PDSM) is introduced, which extends the Well-Founded Semantics of van Gelder, Ross, and Schlipf <ref> [29] </ref>. It is defined like DSM but using partial (i.e. 3-valued) models, in which true, false, and undefined variables have respective truth values 1; 0; and 0:5.
Reference: [30] <author> A. Yahya and L. Henschen. </author> <title> Deduction in Non-Horn Databases. </title> <journal> Journal of Automated Reasoning, </journal> <volume> 1(2) </volume> <pages> 141-160, </pages> <year> 1985. </year>
Reference-contexts: We will deal with the following ones. * The Generalized Closed World Assumption (GCWA) by Minker [16]. * The Extended Generalized Closed World Assump tion (EGCWA) by Yahya and Henschen <ref> [30] </ref>. * The Careful Closed World Assumption (CCWA) by Gelfond and Przymusinska [11]. * The Disjunctive Database Rule (DDR) by Ross and Topor [23], which is equivalent to the Weak GCWA of Rajasekar, Lobo, and Minker [21]. <p> If M 0 = M and M 6j= F , then PWS (DB) 6j= F . 1 Hardness follows from Chan's result on literal inference [5]. 2 3.3 EGCWA, ECWA, and CIRC The Extended GCWA (EGCWA) was introduced by Yahya and Henschen <ref> [30] </ref> for inferring integrity clauses. DB is augmented by each integrity clause a 1 ^ ^a n that is true in every minimal model of DB.
References-found: 30

