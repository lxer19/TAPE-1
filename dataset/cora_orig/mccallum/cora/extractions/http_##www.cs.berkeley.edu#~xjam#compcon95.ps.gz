URL: http://www.cs.berkeley.edu/~xjam/compcon95.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~xjam/personal.htm
Root-URL: 
Title: Extended Abstract: Technical Issues in Hypermedia Scripting Languages  
Author: Brian M. Dennis and Michael A. Harrison 
Address: Berkeley  
Affiliation: University of California,  
Abstract: We present key issues that hypermedia scripting languages must address to be succesful. Rapid growth in consumer interest and computer capabilities have increased the expectations from hypermedia software. Meanwhile, hypermedia authors are scrambling to make the best use of new media, new authoring metaphors, new interaction techniques, and new delivery concepts. Only extensible systems designed to accomodate hypermedia scripting issues will survive. Towards this end, we discuss a number of technical concerns important to hypermedia authoring. We compare and contrast a number currently available authoring systems. This analysis will help in the design of future systems. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Apple Computer Inc. </author> <title> HyperCard Script Language Guide: The HyperTalk Language. </title> <publisher> Addison Wes-ley, </publisher> <address> Reading, MA, </address> <year> 1988. </year>
Reference-contexts: The original Hypercard was a fairly closed object oriented system only allowing users to create objects, alter some of their data attributes, and send messages to objects. The scripting languages for all of these systems descends from Hypertalk <ref> [1, 19] </ref>. 3.2 GainMomentum GainMomentum [9] is a hypermedia authoring system which runs on a variety of platforms; its scripting language is called GEL for the Gain Extension Language. GEL differs from HyperTalk in that the underlying metaphor is much richer.
Reference: [2] <author> Hilary Beech and Susan Renner. </author> <title> GainMomentum an analysis of the software architecture and concepts. SQL Forum, </title> <month> September </month> <year> 1993. </year>
Reference-contexts: While many aspects of GEL are similar to HyperTalk, there are differences. Because GainMomentum provides access to the major commercial data base systems, there are aspects of GEL that are similar to Fourth Generation Language and the system is so described in <ref> [2] </ref>. As is typical of successors of Hypercard, GEL keeps the same Hypertalk scripting base but extends the language to accomdate new datatypes and more complex scripting demands. GEL is a complete multimedia database application programming environment.
Reference: [3] <author> Jeff Burger. </author> <title> The Desktop Multimedia Bible. </title> <publisher> Ad-dison Wesley, </publisher> <year> 1993. </year>
Reference-contexts: Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors. There are a host of technical and economic issues that an authoring system influences, over and above the final hypermedia product <ref> [16, 7, 20, 3, 13] </ref>. Authoring systems are generally composed of an authoring environment and a scripting language.
Reference: [4] <author> William Clinger and Jonathan Rees. </author> <title> Revised 4 report on the algorithmic language scheme, </title> <month> Novem-ber </month> <year> 1991. </year>
Reference-contexts: Authoring environments and scripting languages are highly co-dependent but we believe that they are not inseparable. Indeed, it is useful to make a distinction between the environement and the responsibilities of the scripting language. The CommonLisp [15] and Scheme <ref> [4] </ref> languages illustrate the ends of the spectrum for this tradeoff. We are exploring how this tradeoff applies to hypermedia authoring systems. 2.1 Scripting Language Issues 2.1.1 Media Types There is a fundamental set of media types that define the content that appears in a hypermedia title.
Reference: [5] <author> Adele Goldberg. </author> <title> Smalltalk-80, the Interactive Programming Environment. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1984. </year>
Reference-contexts: Application specific semantics are specified by the system's scripting language Hypertalk. Hypertalk code is incorporated almost exclusively as handlers for events. These events can be generated by the user or Hyper-talk code and are analagous to SmallTalk <ref> [6, 5] </ref> messages. Hypertalk syntax attempts to be English like in nature with English verbs representing actions and language objects such as buttons, graphics, and integers standing in for nouns. Hypertalk semantics are much like that of SmallTalk with communicating objects sending messages to each other to execute a program.
Reference: [6] <author> Adele Goldberg and David Robson. </author> <title> Smalltalk-80, the Language and its Implementation. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1983. </year>
Reference-contexts: Application specific semantics are specified by the system's scripting language Hypertalk. Hypertalk code is incorporated almost exclusively as handlers for events. These events can be generated by the user or Hyper-talk code and are analagous to SmallTalk <ref> [6, 5] </ref> messages. Hypertalk syntax attempts to be English like in nature with English verbs representing actions and language objects such as buttons, graphics, and integers standing in for nouns. Hypertalk semantics are much like that of SmallTalk with communicating objects sending messages to each other to execute a program.
Reference: [7] <author> Michael A. Harrison. </author> <title> Defining hypermedia: The essential elements. </title> <type> Technical Report UCB/CSD-92-671, </type> <institution> University of California, Berkeley, </institution> <address> Berke-ley, CA 94720, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors. There are a host of technical and economic issues that an authoring system influences, over and above the final hypermedia product <ref> [16, 7, 20, 3, 13] </ref>. Authoring systems are generally composed of an authoring environment and a scripting language.
Reference: [8] <author> GISTICS Inc. </author> <title> Interactive index. </title> <booktitle> Morph's Outpost on the Digital Frontier, Ongoing 1994. </booktitle> <pages> 6 </pages>
Reference-contexts: 1 Introduction There has been a tremendous explosion in interest in multimedia <ref> [8] </ref>. While by some measures, not a new field, this area of research has recently been energized by recent breakthroughs in media capture, computer storage, and networking connectivity. Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors.
Reference: [9] <author> Daniel D. </author> <title> McCracken. Introduction to Gain--Momentum Tutorial and Cookbook. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1992. </year>
Reference-contexts: The original Hypercard was a fairly closed object oriented system only allowing users to create objects, alter some of their data attributes, and send messages to objects. The scripting languages for all of these systems descends from Hypertalk [1, 19]. 3.2 GainMomentum GainMomentum <ref> [9] </ref> is a hypermedia authoring system which runs on a variety of platforms; its scripting language is called GEL for the Gain Extension Language. GEL differs from HyperTalk in that the underlying metaphor is much richer. Instead of stacks, cards, and fields, etc, GEL employs applications, pages, and other objects.
Reference: [10] <institution> Microsoft Corporation, Redmond, WA. Microsoft Visual Basic: </institution> <note> Programmer's Guide, version 3.0 edition, </note> <year> 1993. </year>
Reference-contexts: The ScriptX specification however guarantees that a title developed in the language will be executable on any platform that the Kaleida Media Player runs on. 3.5 Visual Basic At this point, we discuss Visual Basic <ref> [10] </ref> as an example of a popular general purpose development tool that is being turned to hypermedia purposes. Many other languages can and have filled this gap including C, C++, and Lisp. However, Visual Basic's ease of use and rapid application development provide some interesting lessons.
Reference: [11] <author> Ike Nassi, </author> <title> editor. Dylan Interim Reference Manual. </title> <institution> Apple Advanced Technology Group, </institution> <year> 1994. </year>
Reference-contexts: While Kaleida it-self, along with third party developers, are creating authoring environments based on the ScriptX scripting language there is no complete authoring system currently available. At the core of ScriptX is an object oriented dynamic language influenced by Dylan <ref> [11] </ref> which is itself influenced by SmallTalk, CommonLisp, Scheme, and C++. The syntax is much like that of traditional Pas-cal programs. Meanwhile, ScriptX semantics are once again similar to that of SmallTalk involving a message passing paradigm from the ground up.
Reference: [12] <author> Steven R. Newcomb, Neil A. Kipp, and Victo-ria T. Newcomb. </author> <title> The "hytime" hypermedia time-based document structuring language. </title> <journal> Communications of the ACM, </journal> <volume> 34(11) </volume> <pages> 67-83, </pages> <month> November </month> <year> 1991. </year>
Reference-contexts: Along similar lines, there was little to no support for collaborative work and delivery specific presentation. If we discount ScriptX which has just recently been released multithreading and multiple authoring metaphors are ignored. 4.2 Scripting Language Standards? There have been some attempts <ref> [16, 12] </ref> to develop standards for hypermedia scripting languages. While we find these standards useful in guiding our research, they uniformly fall into the trap of defining portions of an authoring environment as well. This is natural as the authoring environment is such a crucial part of the authoring process.
Reference: [13] <author> William T. Park. </author> <title> The future of authoring. </title> <journal> New-Media, </journal> <volume> 4(5) </volume> <pages> 52-54, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors. There are a host of technical and economic issues that an authoring system influences, over and above the final hypermedia product <ref> [16, 7, 20, 3, 13] </ref>. Authoring systems are generally composed of an authoring environment and a scripting language.
Reference: [14] <author> Assaf Reznik. </author> <title> Character simulation with ScriptX. </title> <journal> Dr. Dobb's Journal, </journal> <pages> pages 76-82, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: The system provides for external functions, XCMDs, like HyperTalk. The authoring metaphor is displayed in the score window as a sequence of time lines and facilities for controlling the presentations. There are new types of objects such as sprites and puppets. 3.4 ScriptX ScriptX <ref> [14, 18, 17] </ref> is an effort by Kaleida Labs to develop a platform independent multimedia script 4 ing language and runtime player. While Kaleida it-self, along with third party developers, are creating authoring environments based on the ScriptX scripting language there is no complete authoring system currently available.
Reference: [15] <author> Guy L. Steele Jr. CommonLisp, </author> <title> The Language; Second Edition. </title> <publisher> Digital Press, </publisher> <year> 1990. </year>
Reference-contexts: Authoring environments and scripting languages are highly co-dependent but we believe that they are not inseparable. Indeed, it is useful to make a distinction between the environement and the responsibilities of the scripting language. The CommonLisp <ref> [15] </ref> and Scheme [4] languages illustrate the ends of the spectrum for this tradeoff. We are exploring how this tradeoff applies to hypermedia authoring systems. 2.1 Scripting Language Issues 2.1.1 Media Types There is a fundamental set of media types that define the content that appears in a hypermedia title.
Reference: [16] <institution> IMA Scripting Language Evaluation Team. </institution> <type> Scripting language interim report. Technical report, IMA, </type> <year> 1994. </year>
Reference-contexts: Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors. There are a host of technical and economic issues that an authoring system influences, over and above the final hypermedia product <ref> [16, 7, 20, 3, 13] </ref>. Authoring systems are generally composed of an authoring environment and a scripting language. <p> Along similar lines, there was little to no support for collaborative work and delivery specific presentation. If we discount ScriptX which has just recently been released multithreading and multiple authoring metaphors are ignored. 4.2 Scripting Language Standards? There have been some attempts <ref> [16, 12] </ref> to develop standards for hypermedia scripting languages. While we find these standards useful in guiding our research, they uniformly fall into the trap of defining portions of an authoring environment as well. This is natural as the authoring environment is such a crucial part of the authoring process.
Reference: [17] <author> Ray Valdes. </author> <title> Introducing scriptx. </title> <journal> Dr. Dobb's Journal, </journal> <pages> page 76, </pages> <month> November </month> <year> 1994. </year>
Reference-contexts: The system provides for external functions, XCMDs, like HyperTalk. The authoring metaphor is displayed in the score window as a sequence of time lines and facilities for controlling the presentations. There are new types of objects such as sprites and puppets. 3.4 ScriptX ScriptX <ref> [14, 18, 17] </ref> is an effort by Kaleida Labs to develop a platform independent multimedia script 4 ing language and runtime player. While Kaleida it-self, along with third party developers, are creating authoring environments based on the ScriptX scripting language there is no complete authoring system currently available.
Reference: [18] <author> Ray Valdes. </author> <title> What's up at Kaleida. </title> <journal> Dr. Dobb's Developer Update, </journal> <pages> pages 1-7, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: The system provides for external functions, XCMDs, like HyperTalk. The authoring metaphor is displayed in the score window as a sequence of time lines and facilities for controlling the presentations. There are new types of objects such as sprites and puppets. 3.4 ScriptX ScriptX <ref> [14, 18, 17] </ref> is an effort by Kaleida Labs to develop a platform independent multimedia script 4 ing language and runtime player. While Kaleida it-self, along with third party developers, are creating authoring environments based on the ScriptX scripting language there is no complete authoring system currently available.
Reference: [19] <author> Dan Winkler and Scot Kamins. HYPERTALK 2.0: </author> <title> The Book. </title> <publisher> Bantam Books, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: The original Hypercard was a fairly closed object oriented system only allowing users to create objects, alter some of their data attributes, and send messages to objects. The scripting languages for all of these systems descends from Hypertalk <ref> [1, 19] </ref>. 3.2 GainMomentum GainMomentum [9] is a hypermedia authoring system which runs on a variety of platforms; its scripting language is called GEL for the Gain Extension Language. GEL differs from HyperTalk in that the underlying metaphor is much richer.
Reference: [20] <author> Amanda Wise. </author> <title> Rapid prototyping. </title> <booktitle> Morph's Outpost on the Digital Frontier, </booktitle> <month> September </month> <year> 1994. </year> <month> 7 </month>
Reference-contexts: Meanwhile, commercial authoring tools have been developing more slowly. The focus of this paper is on the needs of title authors. There are a host of technical and economic issues that an authoring system influences, over and above the final hypermedia product <ref> [16, 7, 20, 3, 13] </ref>. Authoring systems are generally composed of an authoring environment and a scripting language.
References-found: 20

