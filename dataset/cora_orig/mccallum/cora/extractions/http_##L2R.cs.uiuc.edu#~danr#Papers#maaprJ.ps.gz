URL: http://L2R.cs.uiuc.edu/~danr/Papers/maaprJ.ps.gz
Refering-URL: http://L2R.cs.uiuc.edu/~danr/publications.html
Root-URL: http://www.cs.uiuc.edu
Title: Finding the Maximum Area Axis-Parallel Rectangle in a Polygon  
Author: Karen Daniels Victor Milenkovic Dan Roth 
Date: October 1993  
Address: Cambridge, MA 02138.  
Affiliation: Harvard University Division of Applied Sciences, Center for Research in Computing Technology,  
Note: Submitted for publication  
Abstract: fl An earlier version of this paper appeared in the proceedings of the Fifth Annual Canadian Conference on Computational Geometry, 1993. y This research was funded by the Textile/Clothing Technology Corporation from funds awarded to them by the Alfred P. Sloan Foundation. z This research was funded by the Textile/Clothing Technology Corporation from funds awarded to them by the Alfred P. Sloan Foundation and by NSF grants CCR-91-157993 and CCR-90-09272. x Supported by NSF grants CCR-89-02500 and CCR-92-00884 and by DARPA AFOSR-F4962-92-J-0466. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Aggarwal and M. M. Klawe. </author> <title> Applications of Generalized Matrix Searching to Geometric Algorithms. </title> <journal> Discrete Applied Mathematics, </journal> <volume> 27 </volume> <pages> 3-23, </pages> <year> 1990. </year>
Reference-contexts: In Section 4 we summarize the results of <ref> [2, 12, 1, 3] </ref> relating to efficient solutions for all of the monotone matrix searching problems associated with the LAECR algorithms of Section 3. This leads to the algorithmic results of Section 5. <p> Implementation Note: The set of illegal entries in the matrix is bounded by falling staircases. Aggarwal and Klawe <ref> [1] </ref> show that such a monotone matrix can be completed so that its maximum can be found in linear time. Using negative entries is our practical alternative to using completion here. <p> Lemma 4.3 ([12]) If any entry of a totally monotone single staircase matrix of size n fi m can be computed in constant time, then the row-maximum problem for this matrix can be solved in O (nff (m) + m) time. 11 Aggarwal and Klawe <ref> [1] </ref> distinguish between rising (which we call upper) and reverse rising (lower) staircase matrices. 29 Implementation Note: Aggarwal and Suri note that the constants are large here. They recom-mend in practice a theoretically slower algorithm. <p> They recom-mend in practice a theoretically slower algorithm. One such algorithm is the O ((m + n) log log n) algorithm of Aggarwal and Klawe <ref> [1] </ref>. Lemma 4.4 ([4]) Given a totally monotone rising double staircase matrix M for which the staircase boundaries are known, the row-maximum problem for M can be solved in O (nff (m) + m) time. The proof of this is based on the following claim and Lemma 4.3. <p> in O (n + m) time using an xy-monotone chain into a set of at most 2k single staircase matrices, each of dimension n i fi m i , such that P 2k1 P 2k1 Aggarwal and Klawe provide an alternate partitioning of a totally monotone rising double staircase matrix <ref> [1] </ref>. Their partitioning holds for the more general totally monotone partial matrix , which contains two sets of illegal entries whose boundaries are unimodal sequences. Klawe [11] extends the definition of a totally monotone partial matrix to any matrix whose set of legal entries is orthogonally convex.
Reference: [2] <author> A. Aggarwal, M.M. Klawe, S. Moran, P. Shor, and R. Wilber. </author> <title> Geometric applications of a matrix-searching algorithm. </title> <journal> Algorithmica, </journal> <volume> 2 </volume> <pages> 195-208, </pages> <year> 1987. </year>
Reference-contexts: In Section 4 we summarize the results of <ref> [2, 12, 1, 3] </ref> relating to efficient solutions for all of the monotone matrix searching problems associated with the LAECR algorithms of Section 3. This leads to the algorithmic results of Section 5. <p> It is well-known that if all points u i lie below-left of all points v j , then the area matrix m ij = area (rect (u i v j )) is not only totally monotone, but, in addition, every 2 fi 2 minor is legal <ref> [2] </ref>. If any u i lies either above-left or below-right of any v j (u i v j has negative slope), then we give the area the same magnitude but negative sign.
Reference: [3] <author> A. Aggarwal and S. Suri. </author> <title> Fast Algorithms for Computing the Largest Empty Rectangle. </title> <booktitle> In Proceedings of the 3rd ACM Symposium on Computational Geometry, </booktitle> <pages> pages 278 - 290, </pages> <year> 1987. </year> <month> 42 </month>
Reference-contexts: The fastest solution to LAECR is Aggarwal and Suri's O (n log n) time algorithm, which they present as part of an O (n log 2 n) time solution to LER <ref> [3] </ref>. This LAECR algorithm relies on fast searching of area matrices. <p> This yields O (n log 2 n) time for finding the MAAPR in a rectilinear polygon. The O (n log 3 n) time algorithm of [13] for rectilinear orthogonally convex polygons can also be improved by applying recent results in fast matrix searching. Aggarwal and Suri <ref> [3] </ref> note that, for the LAECR problem which can be associated with the vertices of this type of polygon, there is a corresponding area matrix whose maximum can be found in O (n log n) time by decomposing it 2 A vertically separated, horizontally convex polygon has left and right chains <p> In Section 4 we summarize the results of <ref> [2, 12, 1, 3] </ref> relating to efficient solutions for all of the monotone matrix searching problems associated with the LAECR algorithms of Section 3. This leads to the algorithmic results of Section 5. <p> However, we give a faster O (n log 2 n) divide-and-conquer algorithm rfor general polygons based on an O (n log n) time algorithm for the vertically separated, horizontally convex polygon. The O (n log n) algorithm uses the results of Aggarwal and Suri <ref> [3, 4] </ref> for LAECR. Figure 2 summarizes our algorithmic results. In Section 6 we prove a lower bound of time in (n log n) for finding the MAAPR in both self-intersecting polygons and general polygons with holes. <p> For the set of vertices of P 0 we then consider the problem of finding the largest-area empty corner rectangle (LAECR). The LAECR for a set of points is well-known in the literature as a subproblem of the largest empty rectangle problem <ref> [8, 3] </ref>. <p> Proof: It suffices to assume that the two edge chain vertices are special vertices, since we can consider an ordinary vertex to represent an edge of zero length with a special vertex equal to the ordinary vertex. The first step follows the argument in <ref> [3] </ref>. By assumption m ij , m ij 0 , m i 0 j , and m i 0 j 0 are all empty rectangles. <p> edge cannot cross the vertical line separating L and R, so it must cross either the upper-right or lower-left corner, contradicting the y-montonicity of one of the chains. 3.4.2 LAECR Algorithm Aggarwal and Suri have an O (n log 2 n) algorithm for the Largest Empty Corner Rectangle (LAECR) problem <ref> [3, 4] </ref> for points. They use a divide-and-conquer approach which partitions the set of points into two subsets L and R about a vertical line V , and recursively finds the LAECR in L and R. <p> Aggarwal and Suri <ref> [3] </ref> have given the same lower bound for LER. Using symbolic perturbation [9, 21], both of these can be extended to lower bounds on the computation of the MAAPR in a general polygon.
Reference: [4] <author> A. Aggarwal and S. Suri. </author> <title> Fast Algorithms for Computing the Largest Empty Rectangle. </title> <type> Personal communica-tion, </type> <year> 1992. </year>
Reference-contexts: This class contains the class of convex polygons. 5 into a set of simpler area matrices. They note in <ref> [4] </ref> that Klawe and Kleitman's results [12] for this simpler type of matrix imply O (nff (n)) time for the more complex matrix, where ff (n) is the slowly growing inverse of Ackermann's function. This, we observe, yields O (nff (n)) time for the rectilinear orthogonally convex polygon. <p> However, we give a faster O (n log 2 n) divide-and-conquer algorithm rfor general polygons based on an O (n log n) time algorithm for the vertically separated, horizontally convex polygon. The O (n log n) algorithm uses the results of Aggarwal and Suri <ref> [3, 4] </ref> for LAECR. Figure 2 summarizes our algorithmic results. In Section 6 we prove a lower bound of time in (n log n) for finding the MAAPR in both self-intersecting polygons and general polygons with holes. <p> edge cannot cross the vertical line separating L and R, so it must cross either the upper-right or lower-left corner, contradicting the y-montonicity of one of the chains. 3.4.2 LAECR Algorithm Aggarwal and Suri have an O (n log 2 n) algorithm for the Largest Empty Corner Rectangle (LAECR) problem <ref> [3, 4] </ref> for points. They use a divide-and-conquer approach which partitions the set of points into two subsets L and R about a vertical line V , and recursively finds the LAECR in L and R.
Reference: [5] <author> A. Aggarwal and J. </author> <title> Wein. </title> <booktitle> Computational Geometry Lecture Notes for MIT 18.409. </booktitle> <year> 1988. </year>
Reference-contexts: It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste [14, 15] (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons <ref> [5, 13, 20] </ref> and, recently, convex polygons [6] (see Figure 1). Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem. <p> Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem. For a constrained type of rectilinear polygon, Aggarwal and Wein <ref> [5] </ref> give a fi (n) time algorithm for finding the MAAPR using the monotonicity of an area matrix associated with the polygon. McKenna et.al. [13] use a divide-and-conquer approach to find the MAAPR in a rectilinear polygon in O (n log 5 n) time. <p> Proof: We reduce the MAX-GAP problem 14 <ref> [5] </ref> to the MAAPR problem for self-intersecting rectilinear polygons. Consider an instance of MAX-GAP: given a set of n real numbers x 1 ; x 2 ; :::; x n , we must find the maximum difference between two consecutive numbers in the sorted list .
Reference: [6] <author> N. Amenta. </author> <title> Largest Volume Box is Convex Programming. </title> <type> Personal communication, </type> <year> 1992. </year>
Reference-contexts: It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste [14, 15] (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons [5, 13, 20] and, recently, convex polygons <ref> [6] </ref> (see Figure 1). Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem. <p> Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons [5, 13, 20] and, recently, convex polygons <ref> [6] </ref> (see Figure 1). Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem.
Reference: [7] <author> B. Chazelle. </author> <title> Triangulating a Simple Polygon in Linear Time. </title> <booktitle> In Proceedings of the Thirty-First Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 220-230, </pages> <year> 1990. </year>
Reference-contexts: These can be identified using an algorithm with four nested loops; one for each side of the MAAPR. With fi (n) preprocessing time to build horizontal and vertical visibility maps <ref> [7] </ref>, we can determine in O (1) time, given a set of edges for a case, the pieces of those edges which are candidates for determining the MAAPR. We conclude: Theorem 2.6 The MAAPR of an n-vertex general polygon can be found in O (n 4 ) time.
Reference: [8] <author> B. Chazelle, R.L. Drysdale III, and D.T. Lee. </author> <title> Computing the largest empty rectangle. </title> <journal> SIAM J. Comput., </journal> <volume> 15 </volume> <pages> 300-315, </pages> <year> 1986. </year>
Reference-contexts: For the set of vertices of P 0 we then consider the problem of finding the largest-area empty corner rectangle (LAECR). The LAECR for a set of points is well-known in the literature as a subproblem of the largest empty rectangle problem <ref> [8, 3] </ref>.
Reference: [9] <author> H. Edelsbrunner and E.P. Mucke. </author> <title> Simulation of Simplicity: A technique to cope with degenerate cases in geometric algorithms. </title> <journal> ACM Transactions on Graphics, </journal> <volume> 9 </volume> <pages> 66-104, </pages> <year> 1990. </year>
Reference-contexts: Aggarwal and Suri [3] have given the same lower bound for LER. Using symbolic perturbation <ref> [9, 21] </ref>, both of these can be extended to lower bounds on the computation of the MAAPR in a general polygon.
Reference: [10] <author> J.S.Chang and C.K. Yap. </author> <title> A Polynomial Solution for the Potato-peeling Problem. </title> <journal> Discrete Computational Geometry, </journal> <volume> 1 </volume> <pages> 155-182, </pages> <year> 1986. </year>
Reference-contexts: 1 Introduction The problem of finding the maximum area axis-parallel rectangle (MAAPR) inside a general polygon 1 of n vertices is a geometric optimization problem in the class of polygon inclusion problems <ref> [10] </ref>: Inc (P; Q; ): Given P 2 P, find the -largest Q 2 Q inside P , where P and Q are families of polygons, and is a real function on polygons such that: 8P 2 P; Q 2 Q; P Q ) (P ) (Q) Our problem is an
Reference: [11] <author> M. M. Klawe. </author> <title> Superlinear Bounds on Matrix Searching. </title> <booktitle> In Proceedings of the First ACM Symposium on Discrete Algorithms, </booktitle> <pages> pages 485-493, </pages> <year> 1990. </year>
Reference-contexts: Their partitioning holds for the more general totally monotone partial matrix , which contains two sets of illegal entries whose boundaries are unimodal sequences. Klawe <ref> [11] </ref> extends the definition of a totally monotone partial matrix to any matrix whose set of legal entries is orthogonally convex. Without giving the details, she notes that the algorithm leading to Lemma 4.3 can be trivially extended to handle this type of matrix.
Reference: [12] <author> M. M. Klawe and D. J. Kleitman. </author> <title> An Almost Linear Time Algorithm for Generalized Matrix Searching. </title> <journal> SIAM Journal of Discrete Mathematics, </journal> <volume> 3(1) </volume> <pages> 81-97, </pages> <year> 1990. </year>
Reference-contexts: This class contains the class of convex polygons. 5 into a set of simpler area matrices. They note in [4] that Klawe and Kleitman's results <ref> [12] </ref> for this simpler type of matrix imply O (nff (n)) time for the more complex matrix, where ff (n) is the slowly growing inverse of Ackermann's function. This, we observe, yields O (nff (n)) time for the rectilinear orthogonally convex polygon. <p> In Section 4 we summarize the results of <ref> [2, 12, 1, 3] </ref> relating to efficient solutions for all of the monotone matrix searching problems associated with the LAECR algorithms of Section 3. This leads to the algorithmic results of Section 5.
Reference: [13] <author> M. McKenna, J. O'Rourke, and S. Suri. </author> <title> Finding the largest rectangle in an orthogonal polygon. </title> <booktitle> In Proceedings of the 23rd Allerton Conference on Communication, Control, and Computing, </booktitle> <pages> pages 486-495, </pages> <year> 1985. </year>
Reference-contexts: It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste [14, 15] (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons <ref> [5, 13, 20] </ref> and, recently, convex polygons [6] (see Figure 1). Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem. <p> For a constrained type of rectilinear polygon, Aggarwal and Wein [5] give a fi (n) time algorithm for finding the MAAPR using the monotonicity of an area matrix associated with the polygon. McKenna et.al. <ref> [13] </ref> use a divide-and-conquer approach to find the MAAPR in a rectilinear polygon in O (n log 5 n) time. <p> This yields O (n log 2 n) time for finding the MAAPR in a rectilinear polygon. The O (n log 3 n) time algorithm of <ref> [13] </ref> for rectilinear orthogonally convex polygons can also be improved by applying recent results in fast matrix searching. <p> If used in the divide-and-conquer algorithm of McKenna et. al. <ref> [13] </ref>, this immediately gives O (nff (n) log 2 n) time for general polygons. However, we give a faster O (n log 2 n) divide-and-conquer algorithm rfor general polygons based on an O (n log n) time algorithm for the vertically separated, horizontally convex polygon. <p> This construction results in a self-intersecting polygon, with the property that the area of the MAAPR included in it is the solution to the corresponding MAX-GAP problem, thus proving the theorem. 6.2 General Polygons with Holes McKenna et. al. <ref> [13] </ref> have given a lower bound of time in (n log n) for finding the MAAPR in a general polygon with degenerate (zero area) holes. Aggarwal and Suri [3] have given the same lower bound for LER.
Reference: [14] <author> V. Milenkovic, K. Daniels, and Z. Li. </author> <title> Automatic Marker Making. </title> <booktitle> In Proceedings of the Third Canadian Conference on Computational Geometry, </booktitle> <year> 1991. </year>
Reference-contexts: This rectangle problem arises naturally in applications where a quick internal approximation to a polygon is useful. It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste <ref> [14, 15] </ref> (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons [5, 13, 20] and, recently, convex polygons [6] (see Figure 1). <p> We briefly describe two of them in this section. The goal of our marker-making project is to automate the task of laying out apparel pattern pieces on a rectangular strip of cloth while minimizing cloth waste <ref> [14, 15] </ref>. Figure 14 shows an example of the marker-making 39 task for pants, where the large pieces are panels and the small pieces placed among the panels are trim pieces. The first application is related to a global layout strategy we are experimenting with.
Reference: [15] <author> V. Milenkovic, K. Daniels, and Z. Li. </author> <title> Placement and Compaction of Nonconvex Polygons for Clothing Manufacture. </title> <booktitle> In Proceedings of the Fourth Canadian Conference on Computational Geometry, </booktitle> <year> 1992. </year>
Reference-contexts: This rectangle problem arises naturally in applications where a quick internal approximation to a polygon is useful. It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste <ref> [14, 15] </ref> (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons [5, 13, 20] and, recently, convex polygons [6] (see Figure 1). <p> We briefly describe two of them in this section. The goal of our marker-making project is to automate the task of laying out apparel pattern pieces on a rectangular strip of cloth while minimizing cloth waste <ref> [14, 15] </ref>. Figure 14 shows an example of the marker-making 39 task for pants, where the large pieces are panels and the small pieces placed among the panels are trim pieces. The first application is related to a global layout strategy we are experimenting with.
Reference: [16] <author> A. Naamad, W.L. Hsu, and D.T. Lee. </author> <title> On the maximum empty rectangle problem. </title> <journal> Discrete Appl. Math., </journal> <volume> 8 </volume> <pages> 267-277, </pages> <year> 1984. </year>
Reference: [17] <author> M.H. Overmars and D. Wood. </author> <title> On rectangular visibility. </title> <journal> J. Algorithms, </journal> <volume> 9 </volume> <pages> 372-390, </pages> <year> 1988. </year>
Reference-contexts: If v is a special vertex, the oracle returns the area of the MAAPR for vertex u and the edge whose upper endpoint is v. The MAAPR area oracle clearly runs in constant time (see Lemma 2.1). 6 Two points p and q have rectangular visibility <ref> [17] </ref> if the interior of the axis-parallel rectangle with diagonal pq does not intersect the polygon. 7 rect (uv) is the rectangle with lower left corner at u and upper right corner at v. 18 Theorem 3.1 (Meta-Theorem) Assume the notion of an area is the one defined by the MAAPR
Reference: [18] <author> F. Preparata and M. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: The largest empty circle can be constructed in fi (n log n) time, and the smallest enclosing circle can be found in fi (n) time <ref> [18] </ref>. 37 Theorem 6.1 Finding the MAAPR in an n-vertex self-intersecting polygon requires time in (n log n) in both the linear and algebraic decision tree models. Proof: We reduce the MAX-GAP problem 14 [5] to the MAAPR problem for self-intersecting rectilinear polygons.
Reference: [19] <author> S. Schuierer, G.J. E. Rawlins, and D. Wood. </author> <title> A generalization of staircase visibility. </title> <booktitle> In Proceedings of the 3rd Canadian Conf. Comput. Geom., </booktitle> <pages> pages 96-99, </pages> <year> 1991. </year>
Reference-contexts: In order to discuss the first type, we require the notion of a reflex extreme vertex, introduced in <ref> [19] </ref>. Definition 2.1 A reflex vertex v of P is a reflex extreme if there exists a vertical or horizontal line of support of v that is interior to P .
Reference: [20] <author> D. Wood and C. K. Yap. </author> <title> The orthogonal convex skull problem. </title> <journal> Discrete Computational Geometry, </journal> <volume> 3 </volume> <pages> 349-365, </pages> <year> 1988. </year>
Reference-contexts: It is needed, for example, in the industrial problem of laying out apparel pattern pieces on clothing "markers" with minimal cloth waste [14, 15] (see Section 7). Despite its practical importance, work on finding the MAAPR has been restricted to rectilinear polygons <ref> [5, 13, 20] </ref> and, recently, convex polygons [6] (see Figure 1). Amenta [6] has shown that the MAAPR in a convex polygon can be found in linear time by phrasing it as a convex programming problem.
Reference: [21] <author> C.K. Yap. </author> <title> A geometric consistency theorem for a symbolic perturbation scheme. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 40 </volume> <pages> 2-18, </pages> <year> 1990. </year> <month> 43 </month>
Reference-contexts: Aggarwal and Suri [3] have given the same lower bound for LER. Using symbolic perturbation <ref> [9, 21] </ref>, both of these can be extended to lower bounds on the computation of the MAAPR in a general polygon.
References-found: 21

