URL: http://www.cs.berkeley.edu/~jforbes/papers/mou130-new.ps.gz
Refering-URL: http://www.cs.berkeley.edu/~jforbes/
Root-URL: 
Author: Jeffrey Forbes, Nikunj Oza, Ronald Parr, Stuart Russell 
Affiliation: Computer Science Division University of California, Berkeley  
Abstract: MOU 130: Feasibility study of fully autonomous vehicles using decision-theoretic control Final Report 
Abstract-found: 1
Intro-found: 1
Reference: [ Benz, 1993 ] <author> Thomas Benz. </author> <title> The microscopic traffic simulator as (autobahn simulator). </title> <booktitle> In Proceedings of the 1993 European Simulation Multiconference, </booktitle> <address> Lyon, France, </address> <year> 1993. </year>
Reference-contexts: these are deterministic models in which the acceleration of a vehicle is assumed to be some function of (at a minimum) its own velocity, its relative velocity with respect to the car in front, and the distance to the car in front (a good summary of these is given in <ref> [ Benz, 1993 ] </ref> ). However, traffic flow is stochastic in nature (e.g., drivers often behave differently even in similar situations); therefore, a stochastic model is more appropriate.
Reference: [ Binder et al., 1997 ] <author> John Binder, Daphne Koller, Stuart Russell, and Keiji Kanazawa. </author> <title> Adaptive probabilistic networks with hidden variables. </title> <journal> Machine Learning, </journal> <note> to appear, 1997. 43 </note>
Reference-contexts: This is particularly relevant in the BAT project, since the numbers will be used for life-and-death decisions. For this reason, we developed learning algorithms for probabilistic networks [ Russell et al., 1994 ] and extended them to handle dynamic probabilistic networks <ref> [ Russell et al., 1995; Binder et al., 1997 ] </ref> . This section describes preliminary work on the problem of learning DPNs that will serve as driver models for monitoring the behaviour of other vehicles.
Reference: [ Dean and Kanazawa, 1988 ] <author> Thomas Dean and Keiji Kanazawa. </author> <title> Probabilistic temporal reasoning. </title> <booktitle> In Pro--ceedings of the Seventh National Conference on Artificial Intelligence (AAAI-88), </booktitle> <pages> pages 524-528, </pages> <address> St. Paul, Minnesota, </address> <year> 1988. </year> <journal> American Association for Artificial Intelligence. </journal>
Reference-contexts: DPNs allow for reasoning in domains where variables take on different values over time <ref> [ Dean and Kanazawa, 1988 ] </ref> . Figure 4 shows the general structure of a DPN. Typically, observations are taken at regular `time slices,' and a given network structure is replicated for each slice.
Reference: [ Eskafi and Khorramabadi, 1994 ] <author> Farokh Eskafi and Delnaz Khorramabadi. </author> <title> Smartpath user's manual. </title> <type> Technical Report 94-02, </type> <institution> California PATH/UC Berkeley, </institution> <year> 1994. </year>
Reference-contexts: The highway configuration files are compatible with SmartPATH version 2.0 (without the extensions for AHS, such as automated versus manual lanes). Appendix A.4 describes our configuration file format, and the SmartPATH User's Manual also gives details <ref> [ Eskafi and Khorramabadi, 1994 ] </ref> . 2.1.4 Scenario Generation Scenario generation and incident detection facilitate the development and testing of controllers. The simulation can be instrumented so that when a particular "incident" occurs, the state of the simulator is rolled back a specified amount of time and saved.
Reference: [ Forbes et al., 1995a ] <author> J. Forbes, T. Huang, K. Kanazawa, and Stuart Russell. </author> <title> The batmobile: Towards a bayesian automated taxi. </title> <booktitle> In International Joint Conference on Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference: [ Forbes et al., 1995b ] <author> J. Forbes, T. Huang, K. Kanazawa, and Stuart Russell. </author> <title> The batmobile: Towards a bayesian automated taxi. </title> <booktitle> In International Joint Conference, </booktitle> <year> 1995. </year>
Reference: [ Forbes et al., 1995c ] <author> Jeff Forbes, Tim Huang, Keiji Kanazawa, and Stuart Russell. </author> <title> The BATmobile: Towards a Bayesian automated taxi. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <address> Montreal, Canada, August 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A set of discrete variables was defined for describing vehicle behaviours [ Huang et al., 1994 ] . 3. Develop sensing architecture , incorporating multiple sensors and Bayesian data fusion using the HUGIN probabilistic inference system. A sensing architecture was developed and demonstrated using dynamic probabilistic networks (DPNs) <ref> [ Huang et al., 1994; Forbes et al., 1995c ] </ref> . The HUGIN inference package turned out to be inadequate for real-time inference. We developed and implemented new probabilistic inference algorithms for DPNs (Section 3.4 and [ Kanazawa et al., 1995b ] ). 4. <p> Both were able to follow and change lanes accurately and safely over a wide range of speeds and curvatures. 7. Demonstrate control system operation driving in simulated passive traffic. The first demonstrations took place in 1994 <ref> [ Forbes et al., 1995c ] </ref> . Since then, we have made steady progress on both low-level and high-level control, yielding good driving behaviour even in dense, active traffic (Section 6). 8. Incorporate route-planning algorithms with interface to local (lane-change, turn) decision-making.
Reference: [ Hedrick et al., 1993 ] <author> J. Hedrick, D. McMahon, and D. Swaroop. </author> <title> Vehicle modeling and control for automated highway systems. </title> <type> Technical Report UCB-ITS-PRR-93-24, </type> <institution> California PATH/UC Berkeley, </institution> <year> 1993. </year>
Reference: [ Huang et al., 1994 ] <author> T. Huang, D. Koller, J. Malik, G. Ogasawara, B. Rao, S. Russell, and J. Weber. </author> <title> Automatic symbolic traffic scene analysis using belief networks. </title> <booktitle> In Proceedings of the Twelfth National Conference on Artificial Intelligence (AAAI-94), </booktitle> <pages> pages 966-972, </pages> <address> Seattle, Washington, </address> <month> August </month> <year> 1994. </year> <note> AAAI Press. </note>
Reference-contexts: An interface between the vision subsystem and the controller was defined in which the vision system provides positions and velocities of all visible vehicles (as might be obtained from a Kalman filter tracking system). A set of discrete variables was defined for describing vehicle behaviours <ref> [ Huang et al., 1994 ] </ref> . 3. Develop sensing architecture , incorporating multiple sensors and Bayesian data fusion using the HUGIN probabilistic inference system. A sensing architecture was developed and demonstrated using dynamic probabilistic networks (DPNs) [ Huang et al., 1994; Forbes et al., 1995c ] . <p> A set of discrete variables was defined for describing vehicle behaviours [ Huang et al., 1994 ] . 3. Develop sensing architecture , incorporating multiple sensors and Bayesian data fusion using the HUGIN probabilistic inference system. A sensing architecture was developed and demonstrated using dynamic probabilistic networks (DPNs) <ref> [ Huang et al., 1994; Forbes et al., 1995c ] </ref> . The HUGIN inference package turned out to be inadequate for real-time inference. We developed and implemented new probabilistic inference algorithms for DPNs (Section 3.4 and [ Kanazawa et al., 1995b ] ). 4. <p> Creating driver models involves identifying the variables essential to predicting human driver behavior, using a learning algorithm to automatically construct a DPN model from data, and assessing how well the model 18 predicts drivers' actions. The data might come from simulator cameras, video surveillance cameras <ref> [ Huang et al., 1994 ] </ref> , or onboard cameras. In this case, as discussed above, we used data from simulator cameras. The type of model we are constructing is considered to be a microscopic model in that it models the behavior of individual vehicles.
Reference: [ Kanazawa et al., 1995a ] <author> K. Kanazawa, D. Koller, and S. Russell. </author> <title> Stochastic simulation algorithms for dynamic probabilistic networls. </title> <booktitle> In Uncertainty in Artificial Intelligence, </booktitle> <year> 1995. </year>
Reference: [ Kanazawa et al., 1995b ] <author> Keiji Kanazawa, Daphne Koller, and Stuart Russell. </author> <title> Stochastic simulation algorithms for dynamic probabilistic networks. </title> <booktitle> In Proceedings of the Eleventh Conference on Uncertainty in Artificial Intelligence (UAI-95), </booktitle> <address> Montreal, 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: A sensing architecture was developed and demonstrated using dynamic probabilistic networks (DPNs) [ Huang et al., 1994; Forbes et al., 1995c ] . The HUGIN inference package turned out to be inadequate for real-time inference. We developed and implemented new probabilistic inference algorithms for DPNs (Section 3.4 and <ref> [ Kanazawa et al., 1995b ] </ref> ). 4. Demonstrate data fusion, sensor failure detection, graceful degradation, integration with low-level vision component. The sensing architecture was shown to be capable of sensor fusion over time, and also capable of automated sensor failure detection based on deviation from predicted sensor inputs.
Reference: [ Koza, 1992a ] <author> John R. Koza. </author> <title> A genetic approach to finding a controller to back up a tractor-trailer truck. </title> <booktitle> In Proceedings of the 1992 American Control Conference, volume III, </booktitle> <pages> pages 2307-2311, </pages> <address> Evanston, IL, </address> <year> 1992. </year> <title> American Automatic Control Council. </title>
Reference-contexts: Genetic programming has had success in developing control laws for (nonlinear?) systems [ Koza, 1992b ] . For example, genetic programming was used to induce a control for backing a tractor-trailer truck into a spot in simulation <ref> [ Koza, 1992a ] </ref> . The program which we would be trying to induce would have as an input the same error variables as before and the output would be the control decision.
Reference: [ Koza, 1992b ] <author> John R. Koza. </author> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <publisher> The MIT Press, </publisher> <year> 1992. </year>
Reference-contexts: This will allow us to more accurately model aspects of the driver state that are continuous such as velocity and distance to a neighboring car. * Use genetic programming to generate better low-level controllers. Genetic programming has had success in developing control laws for (nonlinear?) systems <ref> [ Koza, 1992b ] </ref> . For example, genetic programming was used to induce a control for backing a tractor-trailer truck into a spot in simulation [ Koza, 1992a ] .
Reference: [ Lehner and Sadigh, 1993 ] <author> Paul E. Lehner and Azar Sadigh. </author> <title> Two procedures for compiling influence diagrams. </title> <booktitle> In Proceedings of the Ninth Conference on Uncertainty in Artificial Intelligence (UAI-93), </booktitle> <address> Wash-ington, D. C., 1993. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Each leaf of the tree is a decision. This obviously yields an effective, real-time policy, but constructing the decision tree is a difficult task. Other researchers, for example Lehner and Sadigh <ref> [ Lehner and Sadigh, 1993 ] </ref> , have examined the creation of decision trees from influence diagrams, but only for static problems. In such cases, the decision tree nodes test fully determined evidence variables.
Reference: [ Niehaus and Stengel, 1994 ] <author> A. Niehaus and R. F. Stengel. </author> <title> Probability-based decision making for automated highway driving. </title> <journal> IEEE Transactions on Vehicular Technology, </journal> <volume> 43(3), </volume> <year> 1994. </year>
Reference-contexts: However, traffic flow is stochastic in nature (e.g., drivers often behave differently even in similar situations); therefore, a stochastic model is more appropriate. There has been some work on creating probabilistic models <ref> [ Niehaus and Stengel, 1994 ] </ref> ;however, this work does not incorporate percepts over time to assess unobservable aspects of the current state, and the models have not been validated.
Reference: [ Parr and Russell, 1995 ] <author> R. Parr and S. Russell. </author> <title> Approximating optimal policies for partially observable stochastic domains. </title> <booktitle> In IJCAI, </booktitle> <year> 1995. </year>
Reference: [ Pearl, 1988 ] <author> Judea Pearl. </author> <title> Probabilistic Reasoning in Intelligent Systems: Networks of Plausible Inference. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, California, </address> <year> 1988. </year>
Reference-contexts: Probabilistic networks are directed acyclic graphs in which nodes represent random variables (typically discrete) and arcs represent causal connections among the variables <ref> [ Pearl, 1988 ] </ref> . Associated with each node is a CPT (conditional probability table) that provides conditional probabilities of the node's possible states given each possible state of its parents (or the prior probabilities if the node has no parents). <p> When specific values are observed for some of the nodes in a probabilistic network, posterior probability distributions can be computed efficiently for any of the other nodes using a variety of inference algorithms <ref> [ Pearl, 1988 ] </ref> . DPNs allow for reasoning in domains where variables take on different values over time [ Dean and Kanazawa, 1988 ] . Figure 4 shows the general structure of a DPN.
Reference: [ Peng, 1992 ] <author> Huei Peng. </author> <title> Vehicle Lateral Control for Highway Automation. </title> <type> PhD thesis, </type> <institution> UC Berkeley, </institution> <year> 1992. </year>
Reference: [ Russell et al., 1994 ] <author> Stuart J. Russell, John Binder, and Daphne Koller. </author> <title> Adaptive probabilistic networks. </title> <type> Technical Report UCB/CSD-94-824, </type> <institution> Computer Science Division, University of California at Berkeley, </institution> <month> July 24 </month> <year> 1994. </year> <month> 44 </month>
Reference-contexts: This is particularly relevant in the BAT project, since the numbers will be used for life-and-death decisions. For this reason, we developed learning algorithms for probabilistic networks <ref> [ Russell et al., 1994 ] </ref> and extended them to handle dynamic probabilistic networks [ Russell et al., 1995; Binder et al., 1997 ] . This section describes preliminary work on the problem of learning DPNs that will serve as driver models for monitoring the behaviour of other vehicles.
Reference: [ Russell et al., 1995 ] <author> Stuart Russell, John Binder, Daphne Koller, and Keiji Kanazawa. </author> <title> Local learning in probabilistic networks with hidden variables. </title> <booktitle> In Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence (IJCAI-95), </booktitle> <pages> pages 1146-52, </pages> <address> Montreal, Canada, August 1995. </address> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: Existing driver behaviour models turned out to be completely inadequate, and we were forced to develop models from scratch. We developed DPN models by hand, and also developed and implemented an automated DPN learning algorithm <ref> [ Russell et al., 1995 ] </ref> to learn models from observed behaviours. Experiments with this learning system are ongoing (Section 4) using simulated vision data from our traffic simulator. <p> This is particularly relevant in the BAT project, since the numbers will be used for life-and-death decisions. For this reason, we developed learning algorithms for probabilistic networks [ Russell et al., 1994 ] and extended them to handle dynamic probabilistic networks <ref> [ Russell et al., 1995; Binder et al., 1997 ] </ref> . This section describes preliminary work on the problem of learning DPNs that will serve as driver models for monitoring the behaviour of other vehicles.
Reference: [ Tomizuka et al., 1995 ] <author> M. Tomizuka, J.K. Hedrick, and H. Pham. </author> <title> Integrated manuevering control for automated highway system based on a magnetic reference/sensing system. </title> <type> Technical Report UCB-ITS-PRR-95-12, </type> <institution> California PATH/UC Berkeley, </institution> <year> 1995. </year> <month> 45 </month>
References-found: 21

