URL: http://graphics.stanford.edu/~slusallek/Papers/rw98-canned.ps.gz
Refering-URL: http://graphics.stanford.edu/~slusallek/cv.html
Root-URL: http://www.cs.stanford.edu
Email: Email: fheidrich,jnkautz,slusallek,seidelg@immd9.informatik.uni-erlangen.de  
Title: Canned Lightsources  
Author: Wolfgang Heidrich, Jan Kautz, Philipp Slusallek, Hans-Peter Seidel 
Address: Am Weichselgarten 9, D-91058 Erlangen, Germany  
Affiliation: University of Erlangen, Computer Graphics Group  
Abstract: Complex luminaries and lamp geometries can greatly increase the realism of synthetic images. Unfortunately, the correct rendering of illumination from complex lamps requires costly global illumination algorithms to simulate the indirect illumination reflected or refracted by parts of the lamp. Currently, this simulation has to be repeated for every scene in which a lamp is to be used, and even for multiple instances of a lamp within a single scene. In this paper, we separate the global illumination simulation of the interior lamp geometry from the actual scene rendering. The lightfield produced by a given lamp is computed using any of the known global illumination algorithms. Afterwards, a discretized version of this lightfield is stored away for later use as a lightsource. We describe how this data can be efficiently utilized to illuminate a given scene using a number of different rendering algorithms, such as ray-tracing and hardware-based rendering.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> B. Arnaldi, X. Pueyo, and J. Vilaplana. </author> <title> On the division of environments by virtual walls for radiosity computation. </title> <booktitle> In Photorealistic Rendering in Computer Graphics, </booktitle> <pages> pages 198205, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: Thus, they cannot deal with large numbers of changing objects or moving light-sources. Furthermore, the methods are not capable of storing away partial solutions for future use in different environments. Methods more closely related to our approach include virtual walls <ref> [1] </ref> for speeding up radiosity computations, and the Lucifer algorithm [5, 10], which computes the radiance distribution on a virtual surface in the environment. Radiance [16] allows the user to replace geometry seen through small openings such as windows by dense radiance samples. <p> Consider the geometry of a light slab as shown on the right side of written as P = O + (n u + u)~u + (n v + v)~v, where the vectors ~u and ~v determine the dimensions of a 2D grid cell, and u; v 2 <ref> [0; 1] </ref> describe the coordinates of P within the cell. In analogy we can describe a point P 0 on the (s; t) plane, where we assume that the vectors ~s and ~ t are parallel to ~u and ~v, respectively. <p> v; s; t) passing through Q is characterized by u = (1 x)u 0 + xu 1 , v = (1 y)v 0 + yv 1 , s = (1 x)s 0 + xs 1 , and t = (1 y)t 0 + yt 1 for some x; y 2 <ref> [0; 1] </ref>.
Reference: 2. <author> I. Ashdown. </author> <title> Near-Field Photometry: A New Approach. </title> <journal> Journal of the Illuminating Engineering Society, </journal> <volume> 22(1):163180, </volume> <month> Winter </month> <year> 1993. </year>
Reference-contexts: Later the lightfield can be used to illuminate a given scene while abstracting from the original lamp geometry. We call a light source stored and used in this fashion a Canned Lightsource. Instead of simulating the lightfield with global illumination methods, Canned Light-sources could also be measured <ref> [2] </ref>, or even provided by lamp manufacturers in much the same way far field information is provided today. Thus, a database of luminaries and lamps stored as Canned Lightsources becomes possible. <p> For the global illumination step, we can use any kind of algorithm, such as radiosity, Monte-Carlo ray-tracing, Photon Maps, or composite methods [13]. Alternatively, Canned Lightsources could be generated by resampling measured data <ref> [2] </ref> much in the same way described in [6]. Finally, it is also possible to generate non-physical lightsources for special effects. One issue is the storage of Canned Lightsources.
Reference: 3. <author> R. Bastos. </author> <title> Efficient radiosity rendering using textures and bicubic reconstruction. In Symposium on Interactive 3D Graphics. </title> <booktitle> ACM Siggraph, </booktitle> <year> 1997. </year>
Reference-contexts: A common technique is to use Gouraud shading and texture mapping to render radiosity solutions of diffuse environments from any perspective <ref> [12, 3] </ref>. Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes [7]. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed [14, 15].
Reference: 4. <author> G. Drettakis and F. Sillion. </author> <title> Intaractive update of global illumination using a line-space hierarchy. </title> <booktitle> Computer Graphics (SIGGRAPH '97 Proceedings), </booktitle> <pages> pages 5764, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: A common technique is to use Gouraud shading and texture mapping to render radiosity solutions of diffuse environments from any perspective [12, 3]. Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes [7]. Interactive radiosity methods such as <ref> [4] </ref> incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed [14, 15]. All of the above methods require a full global illumination solution for the complete scene.
Reference: 5. <author> A. Fournier. </author> <title> From local to global and back. </title> <booktitle> In Rendering Techniques '95, </booktitle> <pages> pages 127136, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Furthermore, the methods are not capable of storing away partial solutions for future use in different environments. Methods more closely related to our approach include virtual walls [1] for speeding up radiosity computations, and the Lucifer algorithm <ref> [5, 10] </ref>, which computes the radiance distribution on a virtual surface in the environment. Radiance [16] allows the user to replace geometry seen through small openings such as windows by dense radiance samples. None of these methods reuses illumination information in different environments.
Reference: 6. <author> S. J. Gortler, R. Grzeszczuk, R. Szelinski, and M. F. Cohen. </author> <booktitle> The Lumigraph. In Computer Graphics (SIGGRAPH '96 Proceedings), </booktitle> <pages> pages 4354, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In this paper we propose a new method for using realistic lightsources for image synthesis. For a given lamp geometry and luminary, the outgoing lightfield is computed using standard global illumination methods, and stored away in a Lumigraph <ref> [6, 9] </ref> data structure. Later the lightfield can be used to illuminate a given scene while abstracting from the original lamp geometry. We call a light source stored and used in this fashion a Canned Lightsource. <p> To this end, the method presented here relies on a dense sampling of the radiance emitted by a lightsource. The Lumigraph data structure 1 used to store this information has been developed by Levoy and Hanrahan [9], and Gortler et al. <ref> [6] </ref>. 3 Simulating and Sampling the Lightfield of a Lightsource As mentioned above, we store the lightfield in a Lumigraph data structure. From this data structure the radiance values can be extracted efficiently. <p> Despite these disadvantages, we think that the Lumigraph is well suited for our purposes. The top of Figure 1 shows the geometry of a single light slab. Every grid point corresponds to a sample location. As in <ref> [6] </ref> the (u; v) plane is the plane close to the object (lamp), while the (s; t) plane is further away, potentially at infinity. 1 In this paper, we use the term lightfield for the continuous 5D function that describes the radiance at every point in space in every direction. <p> For the global illumination step, we can use any kind of algorithm, such as radiosity, Monte-Carlo ray-tracing, Photon Maps, or composite methods [13]. Alternatively, Canned Lightsources could be generated by resampling measured data [2] much in the same way described in <ref> [6] </ref>. Finally, it is also possible to generate non-physical lightsources for special effects. One issue is the storage of Canned Lightsources. Due to the large dynamic range required to faithfully represent the lightfield of a lightsource, one of the commonly used 24 bit true color file formats is not sufficient. <p> Like in <ref> [6] </ref> and [9], we use quadrilinear interpolation between the samples stored in the light slabs. For a ray-tracer, we could simply obtain a large number of radiance samples from the Lumigraph. However, the challenge is to obtain a good reconstruction with the smallest number of samples possible.
Reference: 7. <author> G. Greger, P. Shirley, P. Hubbard, and D. P. Greenberg. </author> <title> The irradiance volume. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 18(2):3243, </volume> <month> March </month> <year> 1998. </year>
Reference-contexts: A common technique is to use Gouraud shading and texture mapping to render radiosity solutions of diffuse environments from any perspective [12, 3]. Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes <ref> [7] </ref>. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed [14, 15]. All of the above methods require a full global illumination solution for the complete scene.
Reference: 8. <author> A. Keller. </author> <title> Instant radiosity. </title> <booktitle> Computer Graphics (SIGGRAPH '97 Proceedings), </booktitle> <pages> pages 49 56, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: A common technique is to use Gouraud shading and texture mapping to render radiosity solutions of diffuse environments from any perspective [12, 3]. Other approaches for diffuse scenes include Instant Radiosity <ref> [8] </ref> and Irradiance Volumes [7]. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed [14, 15].
Reference: 9. <author> M. Levoy and P. Hanrahan. </author> <title> Light field rendering. </title> <booktitle> Computer Graphics (SIGGRAPH '96 Proceedings), </booktitle> <pages> pages 3145, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: In this paper we propose a new method for using realistic lightsources for image synthesis. For a given lamp geometry and luminary, the outgoing lightfield is computed using standard global illumination methods, and stored away in a Lumigraph <ref> [6, 9] </ref> data structure. Later the lightfield can be used to illuminate a given scene while abstracting from the original lamp geometry. We call a light source stored and used in this fashion a Canned Lightsource. <p> To this end, the method presented here relies on a dense sampling of the radiance emitted by a lightsource. The Lumigraph data structure 1 used to store this information has been developed by Levoy and Hanrahan <ref> [9] </ref>, and Gortler et al. [6]. 3 Simulating and Sampling the Lightfield of a Lightsource As mentioned above, we store the lightfield in a Lumigraph data structure. From this data structure the radiance values can be extracted efficiently. <p> Like in [6] and <ref> [9] </ref>, we use quadrilinear interpolation between the samples stored in the light slabs. For a ray-tracer, we could simply obtain a large number of radiance samples from the Lumigraph. However, the challenge is to obtain a good reconstruction with the smallest number of samples possible.
Reference: 10. <author> R. Lewis and A. Fournier. </author> <title> Light-driven global illumination with a wavelet representation of light transport. </title> <booktitle> In Rendering Techniques '96, </booktitle> <pages> pages 1120, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Furthermore, the methods are not capable of storing away partial solutions for future use in different environments. Methods more closely related to our approach include virtual walls [1] for speeding up radiosity computations, and the Lucifer algorithm <ref> [5, 10] </ref>, which computes the radiance distribution on a virtual surface in the environment. Radiance [16] allows the user to replace geometry seen through small openings such as windows by dense radiance samples. None of these methods reuses illumination information in different environments.
Reference: 11. <author> M. Segal, C. Korobkin, R. van Widenfelt, J. Foran, and P. Haeberli. </author> <title> Fast shadow and lighting effects using texture mapping. </title> <booktitle> Computer Graphics (SIGGRAPH '92 Proceedings), </booktitle> <address> 26(2):249252, </address> <month> July </month> <year> 1992. </year>
Reference-contexts: We numerically integrate Equation 3 by evaluating the integrand at the grid points on the (u; v) plane. For these points, the quadrilinear interpolation reduces to a bilinear interpolation on the (s; t) plane, which can be done in hardware. <ref> [11] </ref> describes how projective textures can be used to simulate lightsources such as high-quality spotlights and slide projectors. Our method is an extension of this approach, which also accounts for the quadratic falloff and the cosine terms in Equation 3. <p> Finally, the third factor is the texture value looked up from the slice of the light slab corresponding to point P on the (u; v) plane. In other words, the integrand of Equation 4 can be evaluated by combining projective textures as in <ref> [11] </ref> with the illumination from a spotlight using the standard OpenGL lighting model. The results from texturing and lighting are combined using the modulate texture environment of OpenGL. The integral from Equation 3 is approximated by the sum of the contributions from all grid points on the (u; v) plane.
Reference: 12. <author> F. Sillion and C. Puech. </author> <title> Radiosity & Global Illumination. </title> <publisher> Morgan Kaufmann, </publisher> <year> 1994. </year>
Reference-contexts: A common technique is to use Gouraud shading and texture mapping to render radiosity solutions of diffuse environments from any perspective <ref> [12, 3] </ref>. Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes [7]. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed [14, 15].
Reference: 13. <author> P. Slusallek, M. Stamminger, W. Heidrich, J.-C. Popp, and H.-P. Seidel. </author> <title> Composite lighting simulations with lighting networks. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 18(2):22 31, </volume> <month> March </month> <year> 1998. </year>
Reference-contexts: For the global illumination step, we can use any kind of algorithm, such as radiosity, Monte-Carlo ray-tracing, Photon Maps, or composite methods <ref> [13] </ref>. Alternatively, Canned Lightsources could be generated by resampling measured data [2] much in the same way described in [6]. Finally, it is also possible to generate non-physical lightsources for special effects. One issue is the storage of Canned Lightsources.
Reference: 14. <author> W. Sturzlinger and R. Bastos. </author> <title> Interactive rendering of globally illuminated glossy scenes. </title> <booktitle> In Rendering Techniques '97, </booktitle> <pages> pages 93102, </pages> <year> 1997. </year>
Reference-contexts: Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes [7]. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed <ref> [14, 15] </ref>. All of the above methods require a full global illumination solution for the complete scene. Thus, they cannot deal with large numbers of changing objects or moving light-sources. Furthermore, the methods are not capable of storing away partial solutions for future use in different environments.
Reference: 15. <author> B. Walter, G. Alppay, E. Lafortune, S. Fernandez, and D. P. Greenberg. </author> <title> Fitting virtual lights for non-diffuse walkthroughs. </title> <booktitle> Computer Graphics (SIGGRAPH '97 Proceedings), </booktitle> <pages> pages 4548, </pages> <month> August </month> <year> 1997. </year>
Reference-contexts: Other approaches for diffuse scenes include Instant Radiosity [8] and Irradiance Volumes [7]. Interactive radiosity methods such as [4] incrementally update the illumination in scenes with small numbers of moving objects. Recently, algorithms for walkthroughs of scenes containing specular surfaces have been developed <ref> [14, 15] </ref>. All of the above methods require a full global illumination solution for the complete scene. Thus, they cannot deal with large numbers of changing objects or moving light-sources. Furthermore, the methods are not capable of storing away partial solutions for future use in different environments.
Reference: 16. <author> G. Ward. </author> <title> The RADIANCE lighting simulation and rendering system. </title> <booktitle> Computer Graphics (SIGGRAPH '94 Proceedings), </booktitle> <pages> pages 459472, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: Methods more closely related to our approach include virtual walls [1] for speeding up radiosity computations, and the Lucifer algorithm [5, 10], which computes the radiance distribution on a virtual surface in the environment. Radiance <ref> [16] </ref> allows the user to replace geometry seen through small openings such as windows by dense radiance samples. None of these methods reuses illumination information in different environments. In this paper, we encapsulate the lightfield emitted by a lightsource and store it away for future use.
Reference: 17. <author> G. Ward Larson. </author> <title> LogLuv encoding for TIFF images. </title> <type> Technical report, </type> <institution> Silicon Graphics, </institution> <year> 1997. </year> <title> www.sgi.com/Technology/pixformat/tiffluv.html. Fig. 6. Office scene rendered with two different Canned Lightsources based on different lamp sizes. The blurring due to nearfield effects is very prominent in both images. </title>
Reference-contexts: On the other hand, Lumigraphs can be quite large, and so a memory-efficient representation is mandatory. A good compromise is Larson's LogLuv extension to the TIFF file format <ref> [17] </ref>, which uses 32 bit/sample to store high dynamic range images. 4 Reconstruction of Illumination from Lightfields Given one or more Canned Lightsources, we can use them to illuminate a scene by reconstructing the radiance emitted by the lightsource at every point and in every direction.
References-found: 17

