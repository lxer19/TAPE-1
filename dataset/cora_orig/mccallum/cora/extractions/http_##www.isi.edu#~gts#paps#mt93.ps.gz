URL: http://www.isi.edu/~gts/paps/mt93.ps.gz
Refering-URL: http://www.isi.edu/~gts/pubs.html
Root-URL: http://www.isi.edu
Email: molva@eurecom.fr  gts@zurich.ibm.com  
Title: Authentication Method with Impersonal Token Cards  
Author: Refik Molva Gene Tsudik 
Address: 06560 Valbonne, France  CH-8803 Ruschlikon, Switzerland  
Affiliation: EURECOM Institute Sophia Antipolis,  IBM Zurich Research Laboratory  
Abstract: Traditional methods of user authentication in distributed systems suffer from an important weakness which is due to the low degree of randomness in secrets that human beings can use for identification. Even though weak secrets (passwords and PINs) are typically not exposed in the clear over the communication lines, they can be discovered with off-line brute force attacks based on exhaustive trials. Since such secrets are chosen from a relatively small key space, a determined adversary can try all possible values until a match is found between the trial value and the message recorded from a genuine authentication session. Authentication devices like smartcards and token cards offer an attractive solution by providing a user with a cryptographically strong key for authentication. In contrast to passwords and PINs, the device's key can be chosen from a much larger key space thus making a brute force attack computationally infeasible or, at least, difficult. In this paper we present a novel authentication method whereby the authentication device (a token card) is used solely to provide a secure channel between a human user and an authentication server (AS). Since the communication channel is secured by the card, the user can still utilize weak secrets for authentication purposes, but, without any risk of exposure. Furthermore, the card's and the user's secrets are mutually independent, i.e., the card is not associated with any particular user. Since the card is impersonal, it can be freely shared by several users. This eliminates the high cost of administration which is typical of existing designs requiring fixed user-device relationship. Moreover, our method does not require any coupling between the token card and the workstation (e.g., a galvanic connection) which would be difficult to implement on a global scale and retrofit onto existing equipment. y In Proceedings of 1993 IEEE Symposium on Research in Security and Privacy.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abadi, M. Burrows, C. Kaufman, B. Lampson, </author> <title> Authentication and Delegation with Smart-cards, </title> <type> DEC SRC Technical Report #67, </type> <month> October </month> <year> 1990. </year>
Reference-contexts: Many contemporary authentication designs involve a trusted hardware device called a smartcard or a token that addresses this weakness by giving a user the ability to authenticate using a strong cryptographic key. Many existing designs based on such devices use a delegation technique (e.g., <ref> [1] </ref>) whereby the device acts on behalf of the user by deploying its strong cryptographic capability. However, before the device can act on user's behalf, the user has to authenticate himself to the device. <p> A practical mechanism for recovering strong cryptographic keys using weak secrets without exposure is provided by additional authentication devices like smartcards and token cards <ref> [1, 4] </ref>. 4 Device-based Authentication Some current approaches address the exposure described above by using an authentication device with limited processing capability that contains a cryptographically strong key. The purpose of the key is to aid user authentication in a hostile environment. <p> With electronic coupling, however, a workstation's display may be utilized as described in <ref> [1] </ref>. * Non-volatile Storage (ROM) Stable, non-volatile read-only storage is needed to store the device's secrets, e.g., a key or a nonce generator seed. It may also be needed to store public key (s) of the Certification Authority (CA) or the Authentication Server (AS). <p> One possibility is to restrict the device's computation power to perform only secret one-way function (i.e., encryption but no decryption). Some recent smartcard schemes employ asymmetrical (public key) cryptography (e.g., <ref> [1, 11] </ref>). This has two main drawbacks: 3 Public key encryption remains quite expen-sive in terms of both implementation and performance. Most public key cryptosystems are covered by patents, e.g., Diffie-Hellman [2] and RSA [8].
Reference: [2] <author> W. Diffie and M. Hellman, </author> <title> New Directions in Cryptography, </title> <journal> IEEE Transactions on Information Theory, </journal> <month> November </month> <year> 1976. </year>
Reference-contexts: Some recent smartcard schemes employ asymmetrical (public key) cryptography (e.g., [1, 11]). This has two main drawbacks: 3 Public key encryption remains quite expen-sive in terms of both implementation and performance. Most public key cryptosystems are covered by patents, e.g., Diffie-Hellman <ref> [2] </ref> and RSA [8]. Traditional smartcard techniques employing more conventional, symmetrical encryption do not suffer from these problems but, instead, suffer from heavy administrative burden owing to the need to maintain a per card record at the AS (in addition to user records containing pass words).
Reference: [3] <institution> National Bureau of Standards, Federal Information Processing Standards, National Bureau of Standards, </institution> <note> Publication 46, </note> <year> 1977. </year>
Reference-contexts: Usually, 2 the secret is a password chosen from a dictionary the size of which (at most 10 5 ) is several orders of magnitude smaller than, for example, the one required by the Data Encryption Standard (DES <ref> [3] </ref>) (2 56 ). 2 Cryptographic keys derived from such weak secrets can be easily broken by brute force attacks with an exhaustive search in the relatively small key space from which the secret is chosen. <p> The clock does not need to have high resolution; second precision is sufficient for reasons explained below. * Cryptographic ability: The token card implements a strong secret one-way function, such as DES encryption (but no decryption) <ref> [3] </ref> or MD5 with secret suffix [7, 10]. * Card's secret key: Every token card, C, possesses a secret, K c which is computed as 4 : K c = E (K as ; SN c ) where SN c is the unique Serial Number of C and K as is
Reference: [4] <author> H. Konigs, </author> <title> Cryptographic Identification Methods for Smart Cards in the Process of Standardization, </title> <journal> IEEE Communications Magazine, </journal> <month> June </month> <year> 1991. </year>
Reference-contexts: A practical mechanism for recovering strong cryptographic keys using weak secrets without exposure is provided by additional authentication devices like smartcards and token cards <ref> [1, 4] </ref>. 4 Device-based Authentication Some current approaches address the exposure described above by using an authentication device with limited processing capability that contains a cryptographically strong key. The purpose of the key is to aid user authentication in a hostile environment. <p> Even the means for generation of SN c 's is not necessarily kept secret; it may simply be a monotonically increasing 32-bit (ten-digit) number. This method for generating K c is an application of a well-known approach usually referred to as name-based (or id-based) scheme <ref> [4] </ref>. <p> This feature is conducive to a low-cost design. * The token card's secret key is not stored in the AS. This offers the following advantage: Minimum key management requirement: Since we use a well-known name-based scheme for generating token card keys <ref> [4] </ref>, no per card records ever need to be maintained. The AS has to keep only one key to be able to retrieve all the token card keys. The management of the token card keys has therefore a minimal complexity.
Reference: [5] <author> T. Lomas, L. Gong, J. Saltzer, R. Needham, </author> <title> Reducing Risks from Poorly Chosen Keys, </title> <booktitle> Proceedings of ACM Symposium on Operating System Principles, </booktitle> <year> 1989. </year>
Reference-contexts: Not only the methods whereby the password or PIN value is transmitted in plaintext are vulnerable but also the ones limiting the exposure of the password or PIN to their utilization as an encryption key are subject to verifiable plaintext attacks as described in <ref> [5] </ref>. In [13] an authentication scheme based on passwords and public-key cryptography is presented. <p> More recent protocols (e..g, Kerberos which is based on Needham-Schroeder protocols [6, 9]) use the user's secret as an encryption key or a seed from which an encryption key is derived. This measure is not very effective because, as described in <ref> [5] </ref>, such an encryption key is still weak and can be easily broken by wiretappers. The weakness is due to the lack of randomness in the way human users choose their secrets and to the humans' difficulty of remembering truly random numbers.
Reference: [6] <author> R. Needham and M. Schroeder, </author> <title> Using Encryption for Authentication in Large Networks of Computers, </title> <journal> Communications of the ACM, </journal> <month> December </month> <year> 1978. </year>
Reference-contexts: In older protocols where the user's secret is sent in cleart-ext simple spoofing and replay is sufficient to break the protocol. More recent protocols (e..g, Kerberos which is based on Needham-Schroeder protocols <ref> [6, 9] </ref>) use the user's secret as an encryption key or a seed from which an encryption key is derived. This measure is not very effective because, as described in [5], such an encryption key is still weak and can be easily broken by wiretappers. <p> If a device is not equipped with an electronic interface, other information may need to be entered via the device's keypad. * Clock A clock may be required for generating timeli ness indicators and, possibly, nonces <ref> [6] </ref>. * Display A display is imperative when there is no coupling between a device and a workstation.
Reference: [7] <author> R. Rivest, </author> <title> The MD5 Message Digest Algorithm, </title> <type> Internet DRAFT, </type> <month> July </month> <year> 1991. </year>
Reference-contexts: The clock does not need to have high resolution; second precision is sufficient for reasons explained below. * Cryptographic ability: The token card implements a strong secret one-way function, such as DES encryption (but no decryption) [3] or MD5 with secret suffix <ref> [7, 10] </ref>. * Card's secret key: Every token card, C, possesses a secret, K c which is computed as 4 : K c = E (K as ; SN c ) where SN c is the unique Serial Number of C and K as is the Card Key Generation Key, a <p> In that case, instead of comparing E [K c ; f (T IM E)], it will suffice to compare shorter values, e.g., 6-digit truncation of E [K c ; f (T IM E)] or even a digest of it (using MD5 <ref> [7] </ref>, for example). It is important to clarify the meaning of the last step. Most (if not all) existing authentication protocols based on token cards only provide for the authentication of user-to-AS but not AS-to-user. The protocol above provides for bidirectional authentication.
Reference: [8] <author> R. Rivest, A. Shamir and L. Adleman, </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryp-tosystems, </title> <journal> Communications of the ACM, </journal> <month> February </month> <year> 1978. </year>
Reference-contexts: Some recent smartcard schemes employ asymmetrical (public key) cryptography (e.g., [1, 11]). This has two main drawbacks: 3 Public key encryption remains quite expen-sive in terms of both implementation and performance. Most public key cryptosystems are covered by patents, e.g., Diffie-Hellman [2] and RSA <ref> [8] </ref>. Traditional smartcard techniques employing more conventional, symmetrical encryption do not suffer from these problems but, instead, suffer from heavy administrative burden owing to the need to maintain a per card record at the AS (in addition to user records containing pass words).
Reference: [9] <author> J. Steiner, C. Neuman, J. Schiller, </author> <title> Kerberos: An Authentication Service for Open Network Systems, </title> <booktitle> Proceedings of USENIX Winter Conference, </booktitle> <month> February </month> <year> 1988. </year>
Reference-contexts: There are a number of generally trusted, highly-secure ASs situated throughout the internetwork. An AS has two main duties: 1) to maintain a database of user records, and, 2) to act as a certification authority (TGS, a la Kerberos <ref> [9] </ref>) for its constituent users Every workstation is assumed to know of at least one (perhaps, nearest) AS and every human user is registered with at least one AS. <p> In older protocols where the user's secret is sent in cleart-ext simple spoofing and replay is sufficient to break the protocol. More recent protocols (e..g, Kerberos which is based on Needham-Schroeder protocols <ref> [6, 9] </ref>) use the user's secret as an encryption key or a seed from which an encryption key is derived. This measure is not very effective because, as described in [5], such an encryption key is still weak and can be easily broken by wiretappers.
Reference: [10] <author> G. Tsudik, </author> <title> Message Authentication with One-Way Hash Functions, </title> <booktitle> Proceedings of IEEE INFOCOM 1992. </booktitle> <month> May </month> <year> 1992. </year>
Reference-contexts: The clock does not need to have high resolution; second precision is sufficient for reasons explained below. * Cryptographic ability: The token card implements a strong secret one-way function, such as DES encryption (but no decryption) [3] or MD5 with secret suffix <ref> [7, 10] </ref>. * Card's secret key: Every token card, C, possesses a secret, K c which is computed as 4 : K c = E (K as ; SN c ) where SN c is the unique Serial Number of C and K as is the Card Key Generation Key, a
Reference: [11] <author> T. Woo and S. Lam, </author> <booktitle> Authentication Protocols Proceedings of ACM SIGCOMM 92, </booktitle> <month> September </month> <year> 1992. </year>
Reference-contexts: One possibility is to restrict the device's computation power to perform only secret one-way function (i.e., encryption but no decryption). Some recent smartcard schemes employ asymmetrical (public key) cryptography (e.g., <ref> [1, 11] </ref>). This has two main drawbacks: 3 Public key encryption remains quite expen-sive in terms of both implementation and performance. Most public key cryptosystems are covered by patents, e.g., Diffie-Hellman [2] and RSA [8].
Reference: [12] <author> Security Dynamics, </author> <title> The ACE System Access Control Encryption Product Information, </title> <year> 1992. </year>
Reference-contexts: Besides, practical solutions based on token cards like the SecureID card <ref> [12] </ref> suffer from the exposure of plaintext password or PIN to trojan horse programs residing in the workstation. 5 Authentication Method with Impersonal Token Cards We begin with the discussion of the salient characteristics of the token card as required by the new authentication method. 5.1 Card Features The token card
Reference: [13] <author> J. </author> <title> Linn, </title> <booktitle> Practical Authentication for Distributed Computing Proceedings of the IEEE Symposium on Security and Privacy, </booktitle> <month> May </month> <year> 1990. </year> <month> 10 </month>
Reference-contexts: Not only the methods whereby the password or PIN value is transmitted in plaintext are vulnerable but also the ones limiting the exposure of the password or PIN to their utilization as an encryption key are subject to verifiable plaintext attacks as described in [5]. In <ref> [13] </ref> an authentication scheme based on passwords and public-key cryptography is presented.
References-found: 13

