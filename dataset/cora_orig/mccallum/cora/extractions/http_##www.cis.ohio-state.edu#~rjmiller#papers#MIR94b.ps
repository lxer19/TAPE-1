URL: http://www.cis.ohio-state.edu/~rjmiller/papers/MIR94b.ps
Refering-URL: http://www.cis.ohio-state.edu/~rjmiller/Research/pub.html
Root-URL: 
Email: raghug@cs.wisc.edu  
Title: Schema Equivalence in Heterogeneous Systems: Bridging Theory and Practice  
Author: R. J. Miller Y. E. Ioannidis R. Ramakrishnan frmiller, yannis, 
Date: December 1, 1993  
Affiliation: Department of Computer Sciences University of Wisconsin-Madison  
Abstract: Current theoretical work offers measures of schema equivalence based on the information capacity of schemas. This work is based on the existence of abstract functions satisfying various restrictions between the sets of all instances of two schemas. In considering schemas that arise in practice, however, it is not clear how to reason about the existence of such abstract functions. Further, these notions of equivalence tend to be too liberal in that schemas are often considered equivalent when a practitioner would consider them to be different. As a result, practical integration methodologies have not utilized this theoretical foundation and most of them have relied on ad-hoc approaches. We present results that seek to bridge this gap. First, we consider the problem of deciding information capacity equivalence and dominance of schemas that occur in practice, i.e., those that can express inheritance and simple integrity constraints. We show that this problem is undecidable. This undecidability suggests that in addition to the overly liberal nature of information capacity equivalence, we should look for alternative, more restrictive notions of equivalence that can be effectively tested. To this end, we develop several tests that each serve as sufficient conditions for information capacity equivalence or dominance. Each test is characterized by a set of schema transformations in the following sense: a test declares that Schema S1 is dominated by schema S2 if and only if there is a sequence of transformations that converts S1 to S2. Thus, each test can be understood essentially by understanding the individual transformations used to characterize it. Each of the transformations we consider is a local, structural schema change with a clear underlying intuition. We demonstrate the power of these tests by showing that one can reason about the equivalence and dominance of quite complex schemas. Because our work is based on structural transformations, the same characterizations that underly our tests can be used to guide designers in modifying a schema to meet their equivalence or dominance goals. fl This paper appears in: Information Systems, 19(1):3-31, 1994. An extended abstract appears in: Extending Database Technology (EDBT), Cambridge, U.K., March 1994. y R. J. Miller has been partially supported by the National Science Foundation (NSF) under Grant IRI-9157368. z Y. Ioannidis has been partially supported by the NSF under Grants IRI-9113736, IRI-9224741, and IRI-9157368 (PYI Award), and by grants from DEC, IBM, HP, AT&T, and Informix. x R. Ramakrishnan has been partially supported by a David and Lucile Packard Foundation Fellowship in Science and Engineering, by the NSF under a PYI Award and under grant IRI-9011563, and by grants from DEC, Tandem, and Xerox. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Abiteboul and R. Hull. </author> <title> Restructuring Hierarchical Database Objects. </title> <journal> Theoretical Computer Science, </journal> <volume> 62 </volume> <pages> 3-38, </pages> <year> 1988. </year>
Reference-contexts: In order to address questions such as the one above, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [8] or models based on complex types <ref> [1, 9, 10, 15] </ref>. Instead of extending complex types with constraints, we chose to use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further after we have presented our model. <p> The restructuring operators are used to define a normal form for these schemas such that two schemas are absolutely equivalent iff their normal forms are isomorphic. This result has been generalized to schemas that include finite as well as infinite base types <ref> [1] </ref>. Again, a (decidable) characterization of absolute equivalence for the extended set of schemas is given that is based on a set of restructuring operators. Characterization of absolute dominance for complex types are not known. We now consider the problem of testing for absolute equivalence (or dominance) of SIGs. <p> The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and [10]. Information capacity has also been applied to a number of translation and integration problems <ref> [1, 12, 15, 16, and others] </ref>. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. The details of the encoding and proof of the lemma are contained in Appendix A. <p> For the classes of complex types considered in Section 4.1, internal equivalence is identical to absolute equivalence <ref> [1, 10] </ref>. Hence, the characterizations of absolute equivalence can be applied to determine if two schemas are internally equivalent. Decidable characterization of internal dominance for complex types are not known. The use of internal mappings ensures that instances are only associated with instances containing the same symbols. <p> This is actually a stronger condition than general internal dominance. Information Systems, 19 (1):3-31, 1994 11 information capacity (that is, transformations that only preserve dominance) <ref> [1, 10, and others] </ref>. 8 We define measures of dominance that are complete with respect to these transformations and form sufficient conditions for internal dominance. <p> The edge g in Schema S2 from Workstation to Grant, can be populated with instances of the path e ffi p from Schema S1. 8 Work on hierarchical data structures includes some consideration of transformations that increase information capacity, but only characterizes equivalence (and not dominance), under these transformations <ref> [1] </ref>. 9 We use this notation when the transformations in X commute so that there is a unique schema S2 such that S1 ~ X 10 SIG isomorphism is defined precisely in Appendix B. 11 When the edge e is understood from context (or not relevant to the discussion) it may
Reference: [2] <author> J. Albert, R. Ahmed, M. A. Ketabchi, W. Kent, and M. C. Shan. </author> <title> Automatic Importation of Relational Schemas in Pegasus. </title> <booktitle> In Proc. of the 3rd Int'l Workshop on Research Issues in Data Eng.: Interoperability in Multidatabase Systems, </booktitle> <pages> pp. 105-113, </pages> <address> Vienna, Austria, </address> <month> Apr. </month> <year> 1993. </year>
Reference-contexts: Within such tools, the translation process produces not only the translated schema, but an instance mapping between the schemas. For example, the Pegasus import tool <ref> [2] </ref> translates relational schemas to Iris schemas (Iris is a functional object model). For each Iris type, the result of translation includes a rule over a collection of relations in the original schema that defines the instances of the type. Such translation tools fully automate the production of instance mappings.
Reference: [3] <author> M. Barr and C. Wells. </author> <title> Category Theory for Computing Science. </title> <publisher> Prentice Hall, </publisher> <address> New York, NY, </address> <year> 1990. </year>
Reference-contexts: Namely, =[ B A ] = f ((b; c); b) j (b; c) 2 =[A] and b 2 =[B]g. 3 For those familiar with category theory, SIG schemas form a simple class of categories where the nodes are finite sets and the arrows are binary relations on pairs of sets <ref> [3] </ref>. Information Systems, 19 (1):3-31, 1994 6 3.1.2 Annotations Each edge of a SIG is annotated with a (possibly empty) set of properties. Each property is a constraint that restricts the set of valid binary relations that may be assigned to an edge by an instance.
Reference: [4] <author> C. Batini, M. Lenzerini, and S. B. Navathe. </author> <title> A Comparative Analysis of Methodologies for Database Schema Integration. </title> <journal> ACM Computing Surveys, </journal> <volume> 18(4) </volume> <pages> 323-364, </pages> <month> Dec. </month> <year> 1986. </year>
Reference-contexts: The resolution strategy for type conflicts may be a fixed choice of one construct over another or may be left up to the schema designer <ref> [4, 20] </ref>. However, certain choices are simply wrong in certain situations and may cause errors if the integrated view is used to retrieve or store data in the underlying schemas [14]. If the integration methodology makes use of information about the equivalence of schemas, such wrong choices can be avoided. <p> Consider the integration of two complex relational schemas, R1 and R2. These schemas contain (among other tables) the Project and Workstation tables depicted in Figure 2. The integrated schema is to be 1 These steps are outlined in a 1986 survey of integration methodologies <ref> [4] </ref> and continue to be used in more recent work [19, 20]. We have only presented them in outline form for brevity.
Reference: [5] <author> J. L. Bell. </author> <title> Toposes and Local Set Theories An Introduction. </title> <publisher> Oxford Science Publications, Oxford, </publisher> <address> U.K., </address> <year> 1988. </year>
Reference-contexts: These equivalences can be proven directly by viewing SIG schemas as algebraic categories. Many of the properties of SIGs that we use in this paper are derived from the categorical structure of SIGs <ref> [5] </ref>.
Reference: [6] <author> M. Davis. </author> <title> Hilbert's Tenth Problem is Unsolvable. </title> <journal> American Mathematical Monthly, </journal> <volume> 8(3) </volume> <pages> 233-269, </pages> <month> Mar. </month> <year> 1973. </year>
Reference-contexts: Let fi (~x) and (~x) be two polynomials with natural number coefficients over n variables (represented by ~x). The equation fi (~x) = (~x) is referred to as a Diophantine equation and the problem of determining whether there exists a solution in the natural numbers is undecidable <ref> [6] </ref>. The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and [10]. Information capacity has also been applied to a number of translation and integration problems [1, 12, 15, 16, and others].
Reference: [7] <author> C. F. Eick. </author> <title> A Methodology for the Design and Transformation of Conceptual Schemas. </title> <booktitle> In Proc. of the Int'l Conf. on Very Large Data Bases, </booktitle> <pages> pp. 25-34, </pages> <address> Barcelona, Spain, </address> <month> Sep. </month> <year> 1991. </year>
Reference-contexts: Our response is motivated by what practitioners currently do. Specifically, the more rigorous of the integration methodologies propose sets of equivalence preserving transformations that may be used in translating schemas between or within data models <ref> [7, 11, 12, 16, and others] </ref>. These transformations have proven to be successful in automating the translation of both schemas and instances. <p> The notation ffffi ! indicates an arbitrary sequence of ff-transformations or ffi-transformations. Corollary 5.5 If S1 ffffi ! S2 then S1 int S2. * Several researchers have made use of information or equivalence preserving transformations that move or copy attributes between entities or classes within other data models <ref> [7, 17] </ref>. These transformations are special cases of ffi-transformations. However, no complete characterization of dominance under these transformations has been given. <p> Many of the equivalence preserving transformations in the literature are due to redundancies in the data model considered and others are specific sequences of structural transformations that we have considered <ref> [7, 17, and others] </ref>. For example, the key copying transformation proposed in a methodology based on the ER+ model is composed of a single ffi-transformation followed by an edge &-transformation to copy a set of key attributes across a functional relationship [17].
Reference: [8] <author> R. Hull. </author> <title> Relative Information Capacity of Simple Relational Database Schemata. </title> <journal> SIAM Journal of Computing, </journal> <volume> 15(3) </volume> <pages> 856-886, </pages> <month> Aug. </month> <year> 1986. </year>
Reference-contexts: In this paper, we present formal results that provide a basis for developing practical schema integration and translation techniques. Our previous work has highlighted the need for a formal notion of equivalence [14]. Specifically, we examined the notion of relative information capacity <ref> [8] </ref> and identified anomalies that can arise when using transformations that do not guarantee that information capacity is preserved. However, there are only limited theoretical results on information capacity equivalence and dominance. <p> In order to address questions such as the one above, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model <ref> [8] </ref> or models based on complex types [1, 9, 10, 15]. Instead of extending complex types with constraints, we chose to use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. <p> Characterizations of absolute dominance are known for relational schemas with only (primary) key dependencies <ref> [8] </ref>. For more complex static schemas, namely types formed by the recursive application of product, set or union constructors on infinite base types, absolute equivalence can be characterized by a set of natural restructuring operators [10]. <p> The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in <ref> [8] </ref> and [10]. Information capacity has also been applied to a number of translation and integration problems [1, 12, 15, 16, and others]. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. <p> Clearly, such mappings are of little use in a practical system. Furthermore, there exist very simple schemas with no "natural" correspondence between them that satisfy the definition of absolute dominance through a very complex instance level mapping <ref> [8] </ref>. <p> with our undecidability result, show that absolute equivalence and dominance do not provide a sufficient foundation for analyzing practical integration problems. 4.2 Internal Equivalence In an effort to overcome some of the limitations of absolute equivalence, various abstract properties have been proposed that restrict the class of allowable instance mappings <ref> [8] </ref>. Such restrictions include mappings that only reorganize and do not invent arbitrary values (termed internal mappings) and mappings that are queries in some query language. For internal equivalence and dominance, if two instances are associated via an instance mapping then they must contain (almost) the same set of symbols. <p> there exists a Z-internal information preserving mapping f : I (S1) ! I (S2). 6 The schemas S1 and S2 are internally equivalent, denoted S1~ int S2, if S1 int S2 and S2 int S1. * Characterizations of internal dominance are known for relational schemas with only (primary) key dependencies <ref> [8] </ref>. For the classes of complex types considered in Section 4.1, internal equivalence is identical to absolute equivalence [1, 10]. Hence, the characterizations of absolute equivalence can be applied to determine if two schemas are internally equivalent. Decidable characterization of internal dominance for complex types are not known. <p> The use of internal mappings ensures that instances are only associated with instances containing the same symbols. However, this property is not sufficient to guarantee that internal mappings are well behaved. Schema instances with no intuitive relationship between them may still be associated under internal mappings <ref> [8] </ref>. Furthermore, internal equivalence suffers from the same problem as absolute equivalence in that testing for both internal equivalence and dominance of schemas is undecidable. 7 Theorem 4.4 Testing for internal equivalence of SIGs is undecidable. * Proof Consider S1 and S2 as defined in the proof of Theorem 4.3. <p> Hence, S1~ abs S2. (In fact, this argument does not depend on the form of the schemas S1 and S2 so S1~ int S2 ) S1~ abs S2 for arbitrary schemas <ref> [8] </ref>.) Conversely, suppose that S1~ abs S2. By the definition of S1 and S2, every instance of S2 is an instance of S1. So, for any Y U , I Y (S2) I Y (S1). <p> However, the proof that these two notions are equivalent for relational schemas can be extended to SIGs <ref> [8] </ref>. 7 Our result shows that even testing for internal dominance through an internal mapping (where Z = ;) is undecidable. This is actually a stronger condition than general internal dominance.
Reference: [9] <author> R. Hull. </author> <title> A Survey of Theoretical Research on Typed Complex Database Objects. </title> <editor> In J. Paredaens, editor, </editor> <booktitle> Databases, chapter 5, </booktitle> <pages> pp. 193-256. </pages> <publisher> Academic Press, </publisher> <address> London, U.K., </address> <year> 1987. </year>
Reference-contexts: In order to address questions such as the one above, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [8] or models based on complex types <ref> [1, 9, 10, 15] </ref>. Instead of extending complex types with constraints, we chose to use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further after we have presented our model. <p> The SIG model also allows the definition of new sets that are only constrained to be subsets of existing sets, and so it can represent complex types built using union and cross-product (viewed as type constructors) <ref> [9] </ref>. While there is thus a connection between SIGs and complex types, there are important differences, as noted above. 4 Information Capacity Formal notions of correctness for schema transformations are typically based on the preservation of the information content of schemas.
Reference: [10] <author> R. Hull and C. K. Yap. </author> <title> The Format Model: A Theory of Database Organization. </title> <journal> Journal of the ACM, </journal> <volume> 31(3) </volume> <pages> 518-537, </pages> <year> 1984. </year>
Reference-contexts: In order to address questions such as the one above, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [8] or models based on complex types <ref> [1, 9, 10, 15] </ref>. Instead of extending complex types with constraints, we chose to use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further after we have presented our model. <p> Characterizations of absolute dominance are known for relational schemas with only (primary) key dependencies [8]. For more complex static schemas, namely types formed by the recursive application of product, set or union constructors on infinite base types, absolute equivalence can be characterized by a set of natural restructuring operators <ref> [10] </ref>. The restructuring operators are used to define a normal form for these schemas such that two schemas are absolutely equivalent iff their normal forms are isomorphic. This result has been generalized to schemas that include finite as well as infinite base types [1]. <p> The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and <ref> [10] </ref>. Information capacity has also been applied to a number of translation and integration problems [1, 12, 15, 16, and others]. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. <p> For the classes of complex types considered in Section 4.1, internal equivalence is identical to absolute equivalence <ref> [1, 10] </ref>. Hence, the characterizations of absolute equivalence can be applied to determine if two schemas are internally equivalent. Decidable characterization of internal dominance for complex types are not known. The use of internal mappings ensures that instances are only associated with instances containing the same symbols. <p> This is actually a stronger condition than general internal dominance. Information Systems, 19 (1):3-31, 1994 11 information capacity (that is, transformations that only preserve dominance) <ref> [1, 10, and others] </ref>. 8 We define measures of dominance that are complete with respect to these transformations and form sufficient conditions for internal dominance. <p> These transformations are essentially the transformations discussed elsewhere for hierarchical types (without the use of the set constructor) <ref> [10] </ref>. These equivalences can be proven directly by viewing SIG schemas as algebraic categories. Many of the properties of SIGs that we use in this paper are derived from the categorical structure of SIGs [5].
Reference: [11] <author> L. A. Kalinichenko. </author> <title> Methods and Tools for Equivalent Data Model Mapping Construction. </title> <booktitle> In Proc. of the Int'l Conf. on Extending Database Technology, </booktitle> <pages> pp. 92-119, </pages> <address> Venice, Italy, </address> <month> Mar. </month> <year> 1990. </year>
Reference-contexts: Our response is motivated by what practitioners currently do. Specifically, the more rigorous of the integration methodologies propose sets of equivalence preserving transformations that may be used in translating schemas between or within data models <ref> [7, 11, 12, 16, and others] </ref>. These transformations have proven to be successful in automating the translation of both schemas and instances.
Reference: [12] <author> V. M. Markowitz and A. Shoshani. </author> <title> Representing Extended Entity-Relationship Structures in Relational Databases: A Modular Approach. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 17(3) </volume> <pages> 423-464, </pages> <month> Sep. </month> <year> 1992. </year>
Reference-contexts: The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and [10]. Information capacity has also been applied to a number of translation and integration problems <ref> [1, 12, 15, 16, and others] </ref>. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. The details of the encoding and proof of the lemma are contained in Appendix A. <p> Our response is motivated by what practitioners currently do. Specifically, the more rigorous of the integration methodologies propose sets of equivalence preserving transformations that may be used in translating schemas between or within data models <ref> [7, 11, 12, 16, and others] </ref>. These transformations have proven to be successful in automating the translation of both schemas and instances.
Reference: [13] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> Schema Intension Graphs: A Formal Model for the Study of Schema Equivalence. </title> <type> Technical Report 1185, </type> <institution> Dept. of Computer Sciences, U. of Wisconsin, Madison, WI, </institution> <year> 1993. </year>
Reference-contexts: The problem of annotation implication is undecidable for SIGs <ref> [13] </ref>. Hence, it may be the case that A1 (p) ff; i; s; tg and yet the only valid instances of p are bijections. In this case, the ffi-transformation could still be equivalence preserving. We now consider sequences of simple ffi-transformations. <p> A designer may not be able to detect (or keep 15 In this discussion, T-dominance will refer to any of the forms of dominance defined for different sets of transformations considered in this work. 16 The proof of this requires some inference rules on annotations that are presented elsewhere <ref> [13] </ref>. Information Systems, 19 (1):3-31, 1994 21 track of) a long trail of correspondences between components that might be used to define information preserving mappings. Our characterizations allow this process to be automated. <p> In this paper, we assume that the schemas considered are the closures under known inference rules. A discussion of sound inference rules for SIGs and the proof of undecidability of annotation implication are given elsewhere <ref> [13] </ref>. Information Systems, 19 (1):3-31, 1994 25 The SIG formalism may be extended to permit types to be assigned to edges as well as nodes.
Reference: [14] <author> R. J. Miller, Y. E. Ioannidis, and R. Ramakrishnan. </author> <title> The Use of Information Capacity in Schema Integration and Translation. </title> <booktitle> In Proc. of the Int'l Conf. on Very Large Data Bases, </booktitle> <pages> pp. 120-133, </pages> <address> Dublin, Ireland, </address> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: Solutions are motivated by the needs of specific classes of examples and often do not generalize. In this paper, we present formal results that provide a basis for developing practical schema integration and translation techniques. Our previous work has highlighted the need for a formal notion of equivalence <ref> [14] </ref>. Specifically, we examined the notion of relative information capacity [8] and identified anomalies that can arise when using transformations that do not guarantee that information capacity is preserved. However, there are only limited theoretical results on information capacity equivalence and dominance. <p> Each of the transformations we consider is a local, structural schema change with a clear underlying intuition. Our earlier work showed that for many practical tasks, it is sufficient to ensure the information capacity dominance of schemas <ref> [14] </ref>. We therefore consider transformations that preserve the information capacity of a schema and transformations that augment it. Our transformations are presented formally in terms of the Schema Intension Graph (SIG) data model, which is defined in Section 3. <p> However, certain choices are simply wrong in certain situations and may cause errors if the integrated view is used to retrieve or store data in the underlying schemas <ref> [14] </ref>. If the integration methodology makes use of information about the equivalence of schemas, such wrong choices can be avoided. We illustrate this point using a simple relational example. Consider the integration of two complex relational schemas, R1 and R2. <p> Since determining this latter property is undecidable <ref> [14] </ref>, we restrict our transformations to use only the first property. We now examine if it is possible to encode the edge e in an edge g : C D with two different end points.
Reference: [15] <author> C. O'Dunlaing and C. K. Yap. </author> <title> Generic Transformation of Data Structures. </title> <booktitle> In Sym. on Foundations of Computer Science, </booktitle> <pages> pp. 186-195, </pages> <address> Chicago, IL, </address> <month> Nov. </month> <year> 1982. </year>
Reference-contexts: In order to address questions such as the one above, we need a way to reason about possible schema instances given a set of constraints over them. Other formal studies of information capacity have typically used the relational model [8] or models based on complex types <ref> [1, 9, 10, 15] </ref>. Instead of extending complex types with constraints, we chose to use a model in which constraints are expressed on collections of entities of an instance rather than on the internal structure of a single entity. We explore this point further after we have presented our model. <p> The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and [10]. Information capacity has also been applied to a number of translation and integration problems <ref> [1, 12, 15, 16, and others] </ref>. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. The details of the encoding and proof of the lemma are contained in Appendix A.
Reference: [16] <author> A. Rosenthal and D. Reiner. </author> <title> Theoretically Sound Transformations for Practical Database Design. </title> <booktitle> In Proc. of the Int'l Conf. on Entity-Relationship Approach, </booktitle> <pages> pp. 115-131, </pages> <address> New York, NY, </address> <month> Nov. </month> <year> 1987. </year>
Reference-contexts: The next lemma states that Diophantine equations 5 The form of relative information capacity we use in this work was first studied in [8] and [10]. Information capacity has also been applied to a number of translation and integration problems <ref> [1, 12, 15, 16, and others] </ref>. Information Systems, 19 (1):3-31, 1994 9 without constant terms may be "encoded" in annotated schema intension graphs. The details of the encoding and proof of the lemma are contained in Appendix A. <p> Our response is motivated by what practitioners currently do. Specifically, the more rigorous of the integration methodologies propose sets of equivalence preserving transformations that may be used in translating schemas between or within data models <ref> [7, 11, 12, 16, and others] </ref>. These transformations have proven to be successful in automating the translation of both schemas and instances.
Reference: [17] <author> A. Rosenthal and D. Reiner. </author> <title> Tools and Transformations Rigorous and Otherwise For Practical Database Design. </title> <type> Technical report, </type> <institution> MITRE Corp., </institution> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Furthermore, we require that any reasoning about schema equivalence be done in a form that is easily conveyed back to a schema designer. To aid in this goal, we strive to meet requirements laid out by practitioners in this field <ref> [17] </ref>. Specifically, the constraints we include in the model are local (that is, they are robust to schemas changes), comprehensible (easily understood and used by a database designer), and not based on unrealistic assumptions about the set of valid instances of a schema. <p> The notation ffffi ! indicates an arbitrary sequence of ff-transformations or ffi-transformations. Corollary 5.5 If S1 ffffi ! S2 then S1 int S2. * Several researchers have made use of information or equivalence preserving transformations that move or copy attributes between entities or classes within other data models <ref> [7, 17] </ref>. These transformations are special cases of ffi-transformations. However, no complete characterization of dominance under these transformations has been given. <p> Many of the equivalence preserving transformations in the literature are due to redundancies in the data model considered and others are specific sequences of structural transformations that we have considered <ref> [7, 17, and others] </ref>. For example, the key copying transformation proposed in a methodology based on the ER+ model is composed of a single ffi-transformation followed by an edge &-transformation to copy a set of key attributes across a functional relationship [17]. <p> For example, the key copying transformation proposed in a methodology based on the ER+ model is composed of a single ffi-transformation followed by an edge &-transformation to copy a set of key attributes across a functional relationship <ref> [17] </ref>. We are currently examining other transformations proposed in the literature to understand the basic set theoretic properties they use and develop additional fundamental transformations.
Reference: [18] <author> A. P. Sheth and J. A. Larson. </author> <title> Federated Database Systems for Managing Distributed, Heterogeneous, and Autonomous Databases. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 183-236, </pages> <year> 1990. </year>
Reference-contexts: This problem is clearly not restricted to translation and applies to a number of applications in heterogeneous databases in which one schema is maintained as a view over other schema (s) <ref> [18, 21, 22] </ref>. 2.3 Discussion Several requirements on our study of schema equivalence can be identified from these motivating examples. First, for the applications we are considering, the notion of equivalence must be based on the ability or capacity of schemas to store information.
Reference: [19] <author> A. P. Sheth and H. Marcus. </author> <title> Schema Analysis and Integration: Methodology, Techniques, and Prototype Toolkit. </title> <type> Technical Report TM-STS-019981/1, </type> <institution> Bellcore, </institution> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: These schemas contain (among other tables) the Project and Workstation tables depicted in Figure 2. The integrated schema is to be 1 These steps are outlined in a 1986 survey of integration methodologies [4] and continue to be used in more recent work <ref> [19, 20] </ref>. We have only presented them in outline form for brevity. Information Systems, 19 (1):3-31, 1994 3 used as a view for accessing information in both schemas, so we want to ensure that the integrated view can express all the data in the original schemas.
Reference: [20] <author> P. Shoval and S. Zohn. </author> <title> Binary-Relationship Integration Methodology. </title> <journal> Data and Knowledge Engineering, </journal> <volume> 6 </volume> <pages> 225-250, </pages> <year> 1991. </year>
Reference-contexts: The resolution strategy for type conflicts may be a fixed choice of one construct over another or may be left up to the schema designer <ref> [4, 20] </ref>. However, certain choices are simply wrong in certain situations and may cause errors if the integrated view is used to retrieve or store data in the underlying schemas [14]. If the integration methodology makes use of information about the equivalence of schemas, such wrong choices can be avoided. <p> These schemas contain (among other tables) the Project and Workstation tables depicted in Figure 2. The integrated schema is to be 1 These steps are outlined in a 1986 survey of integration methodologies [4] and continue to be used in more recent work <ref> [19, 20] </ref>. We have only presented them in outline form for brevity. Information Systems, 19 (1):3-31, 1994 3 used as a view for accessing information in both schemas, so we want to ensure that the integrated view can express all the data in the original schemas.
Reference: [21] <editor> M. Templeton, H. Henley, E. Maros, and D. J. Van Buer. InterViso: </editor> <title> Dealing with the Complexity of Federated Database Access. </title> <type> Technical report, </type> <institution> Data Integration Inc., </institution> <address> Los Angeles, CA, </address> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: This problem is clearly not restricted to translation and applies to a number of applications in heterogeneous databases in which one schema is maintained as a view over other schema (s) <ref> [18, 21, 22] </ref>. 2.3 Discussion Several requirements on our study of schema equivalence can be identified from these motivating examples. First, for the applications we are considering, the notion of equivalence must be based on the ability or capacity of schemas to store information.
Reference: [22] <author> G. Thomas, G. R. Thompson, C.-W. Chung, E. Barkmeyer, F. Carter, M. Templeton, S. Fox, and B. Hartman. </author> <title> Heterogeneous Distributed Database Systems for Production Use. </title> <journal> ACM Computing Surveys, </journal> <volume> 22(3) </volume> <pages> 237-266, </pages> <month> Sep. </month> <year> 1990. </year>
Reference-contexts: This problem is clearly not restricted to translation and applies to a number of applications in heterogeneous databases in which one schema is maintained as a view over other schema (s) <ref> [18, 21, 22] </ref>. 2.3 Discussion Several requirements on our study of schema equivalence can be identified from these motivating examples. First, for the applications we are considering, the notion of equivalence must be based on the ability or capacity of schemas to store information.
References-found: 22

