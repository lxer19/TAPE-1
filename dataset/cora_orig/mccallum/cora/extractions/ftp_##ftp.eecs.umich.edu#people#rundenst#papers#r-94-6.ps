URL: ftp://ftp.eecs.umich.edu/people/rundenst/papers/r-94-6.ps
Refering-URL: http://www.eecs.umich.edu/~rundenst/group/papers.html
Root-URL: http://www.cs.umich.edu
Email: e-mail: rundenst@eecs.umich.edu e-mail: spencer@eecs.umich.edu  
Title: Physical Map Assembler: An Active OODB System for Human Genome Applications  
Author: A. J. Lee E. A. Rundensteiner and S. Thomas 
Address: Ann Arbor  
Affiliation: Software Systems Research Laboratory Information Technology and Networking Dept. of EECS, U of Michigan,  Human Genome Center, U of Michigan Medical Center  
Abstract: We describe the design and implementation of a scientific database for the map assembly tasks performed by the geneticists at the University of Michi-gan Human Genome Center. Our system manages complex genomic data and supports the automation of the associated map assembly tasks. For the former, we present a genomic object model that integrates both experimental and derived data. For the latter, we describe operators to automate some of the analysis steps. To develop a framework for implementing our rule-based approach to physical mapping, we have designed and implemented an active object-oriented database (OODB) system, called Crystal, on GemStone. Crystal seamlessly integrates inference capabilities with complex object modeling and other typical database capabilities as required for physical mapping. We also discuss the implementation of a physical map assembly tool on top of Crystal. In conclusion, we provide a walk-through example that demonstrates how our approach can be used to effectively support physical contig assembly. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Allen, J. F., </author> <title> "Maintaining Knowledge About Temporal Intervals", </title> <journal> CACM, Nov 1983, </journal> <volume> Vol 26, </volume> <pages> pp 832-843. </pages>
Reference-contexts: We find the work of Allen <ref> [1] </ref> and Letovsky and Berlyn [17] closely related to ours. Allen [1] lists all possible relationships between temporal inter vals assuming complete information about their du rations, and presents a transitivity table for these relationships. <p> We find the work of Allen <ref> [1] </ref> and Letovsky and Berlyn [17] closely related to ours. Allen [1] lists all possible relationships between temporal inter vals assuming complete information about their du rations, and presents a transitivity table for these relationships. <p> Letovsky and Berlyn [17] use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept <ref> [1] </ref> and the `window' idea [17] to solve the DNA fragment ordering prob lem. To the best of our knowledge, PMA is the first work in applying active OODB technology to genomic appli cations.
Reference: [2] <author> Anwar, E., Maugis, L., and Chakravarthy, S., </author> <title> "A New Perspective on Rule Support for Object-Oriented Databases", </title> <booktitle> SIGMOD, </booktitle> <year> 1993, </year> <pages> pp. 99-108. </pages>
Reference-contexts: The fundamental design decisions underlying Crystal can be summarized as follows: Rule integration with object modeling. There are several alternative design choices for rules, namely rules can be (1) declared within class definitions, (2) specified as data member values, or (3) treated as independent objects <ref> [2] </ref>. The main disadvantage of the first and second alternative is that the rule's existence is dependent on the existence of other objects. Therefore, rules cannot be created, modified, and deleted at runtime. Furthermore, they could not continue to exist if changes on the class definition became necessary. <p> This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process [3] to further improve performance. 6 Related work 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM [5] and Sentinel <ref> [2] </ref> are the systems probably most closely related to Crystal. All three systems treat events and rules as first class objects. ADAM only supports a rule scope of classes, Sentinel and Crystal support both class and instance-level rule scopes, but with different meanings.
Reference: [3] <author> Brant, D. A. </author> <title> et al; "Effects of Database Size on Rule System Performance: Five Case Studies," </title> <booktitle> Proc. of VLDB, </booktitle> <month> Sept. </month> <year> 1991, </year> <pages> pp. 287-296. </pages>
Reference-contexts: This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process <ref> [3] </ref> to further improve performance. 6 Related work 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM [5] and Sentinel [2] are the systems probably most closely related to Crystal.
Reference: [4] <author> Carrano, A. V. et al., </author> <title> "Constructing Chromosome- And Region-Specific Cosmid Maps Of The Human Genome", </title> <journal> Genome, </journal> <volume> 31, </volume> <pages> pp. 1059-1065, </pages> <year> 1989. </year>
Reference: [5] <author> Diaz, O., Paton, N., and Gray, P., </author> <title> "Rule Management in Object-Oriented Databases: A Unified Approach," </title> <booktitle> Proc. of VLDB, </booktitle> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: This will considerably improve the performance of Crystal. We also are exploring mechanisms for relaxing the pattern matching process [3] to further improve performance. 6 Related work 6.1 Active OODBs Active database research has become an increasingly important research area in the last few years. ADAM <ref> [5] </ref> and Sentinel [2] are the systems probably most closely related to Crystal. All three systems treat events and rules as first class objects. ADAM only supports a rule scope of classes, Sentinel and Crystal support both class and instance-level rule scopes, but with different meanings.
Reference: [6] <author> Durbin, R. and Tierry-Mieg, J., </author> <title> "A C Elegans Database," </title> <note> FTP document NCBI. </note>
Reference-contexts: Unlike rules, these methods and their re spective interactions cannot be as easily added, modi fied, and deleted dynamically. Other systems for stor ing and displaying genomic information are mostly, or completely, oriented towards display of generally static data. ACEDB <ref> [6] </ref>, for example, has very good display modes for map information, but with no map analysis capabilities. 7 Conclusion and future work We have developed a genomic object model that captures both experimental and derived data for support of the physical map assembly task. <p> We have also defined an ordering refinement hierarchy and an associated set of inferencing rules for deriving new ordering information from the initial data set. A key characteristic that distinguishes our physical map assembler (PMA) from other approaches, such as <ref> [6] </ref> and [19], is its use of a rule-based mechanism and its smooth integration with OODB capabilities. We have demonstrated that our approach is feasible by building a physical mapping tool using an active object-oriented database, Crystal.
Reference: [7] <author> Evans, G. A., </author> <title> "Combinatoric Strategies For Genome Mapping", </title> <journal> BioEssays, </journal> <volume> Vol. 13, No. 1, </volume> <month> January </month> <year> 1991. </year>
Reference: [8] <author> Forgy C. L., </author> <title> "Rete: A Fast Algorithm For The Many Pattern/Many Object Pattern Match Problem", </title> <journal> Artificial intelligence, </journal> <year> 1982, </year> <pages> pp 17-37. </pages>
Reference-contexts: There are several alternatives [18] that can make the overall matching process more efficient, such as providing condition membership (i.e., alpha memory size), memory support (i.e., alpha memory), and condition relationship (i.e., beta memory). Among the different incremental matching algorithms, Rete <ref> [8] </ref> offers memory support and condition relationship aids. A major disadvantage of the Rete algorithm is that it uses a lot of memory space to store the partial match information.
Reference: [9] <author> Freksa, C., </author> <title> "Temporal Reasoning Based On Semi-Intervals", </title> <booktitle> AI 54, </booktitle> <pages> pp 199-227, </pages> <year> 1992. </year>
Reference: [10] <author> French, J. C. Jones, A. K., and Pfaltz, J. L., </author> <title> "Scientific Database Management", </title> <institution> Univ of Virginia, </institution> <type> Tech Rep 90-21, </type> <institution> Dept. of Comp Sci, </institution> <month> Aug. </month> <year> 1990. </year>
Reference-contexts: Given that the database is in control of both rule and data management, it can effectively optimize 3 GemStone is a registered trademark of Servio Corporation. rule processing for all applications. This is an increas-ingly critical issue given the expected size of genomic databases <ref> [10] </ref>. 3.1 Active OODB model of Crystal Because the classical Condition-Action (CA) rules are sufficient for handling the data-driven task described in Section 2.2, we focus on building an active OODB system, Crystal, that supports such CA rules.
Reference: [11] <author> Frenkel, K. A., </author> <title> "The Human Genome Project and Infor-matics", </title> <journal> CACM, Nov. </journal> <volume> 91, Vol. 34, No. 11, </volume> <pages> pp 41-51. </pages>
Reference: [12] <author> Guidi, J. N. and T. H. Roderick, </author> <title> "Inference of Order in Genetic Systems," </title> <booktitle> The First Int Conf on Intelligent Sys. for Molecular Biology, </booktitle> <month> July </month> <year> 1993. </year>
Reference: [13] <author> Harley, E. and A. Bonner, </author> <title> "Genome Map Assembly Using the Hy+ Visualization System," </title> <booktitle> accepted in Int Conf On Intelligent Sys. in Molecular Biology, </booktitle> <year> 1994. </year>
Reference-contexts: They generally get and store their data in special-purpose data files, rather that directly integrating with an OODB [19]. One example is the Hy-Graph system <ref> [13] </ref>, that uses a graph-based visual interface to describe and imple ment ordering inference rules similarly to our PMA as graph-pattern queries. Hy-Graph system focuses on STS-based orderings, while our tools can effectively deal with hybridization experiments, as well.
Reference: [14] <author> Kotz-Dittrich, A., </author> <title> "Adding Active Functionality to an Object-Oriented Database System aLayered Approach," </title> <booktitle> Proc. GI Fachtagung, BTW 1993, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: For this purpose, we have developed a generic mechanism called ac-tiveCompileAccessingMethodsFor: that creates active versions of all attribute access methods for ActiveOb-ject subclasses (Section 3.2). On the other hand, in Sentinel begin-of-message and end-of-message must be embedded in each class definition by the application developer. Kotz-Dittrich <ref> [14] </ref> has also done experimental work on adding active functionality to GemStone. However, while our emphasis is on production rules, i.e., the processing of complex rule conditions, she has not addressed this issue.
Reference: [15] <author> Lee, A. J., Rundensteiner, E. A., Thomas, S., and Lafor-tune S., </author> <title> "An Information Model for Genome Map Representation and Assembly." </title> <booktitle> ACM 2nd Int. Conf. on Information and Knowledge Management (CIKM '93), </booktitle> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: In order to support the task of assembling overlapping DNA fragments into a contiguous stretch, we have developed: (1) an ordering refinement hierarchy that captures the different types of ordering relationships between DNA fragments, and (2) inference rules to automate map construction steps over the hierarchy <ref> [15] </ref>. We first developed a system composed of a separate expert system and database system to implement this map inferencing model. However, this has led to several problems including the potential mismatch of data in both systems and the overhead in moving the data between the systems. <p> A LOF composition rule combines two LOFs with the same direction into one bigger LOF. Transitivity rules are used to infer additional ordering information about intervals in a single LOF by pairwise combining two relationships. Full details on these rules can be found in <ref> [15] </ref>. 2.3 Contig map construction Our system will derive the maximal information about the ordering relationships stored in the database. While this forms the foundation of discovering further relationships, it would be too confusing to present the fully elaborated information to the user. <p> We thus simplify information via minimal contig construction with the goals: 1) to cover the largest possible contiguous regions of the chromosome and 2) to use the minimal number of intervals needed to construct the map. We have designed a simple algorithm for minimal contig construction <ref> [15] </ref> based on graph traversal. An example of applying the map construction algorithm is described in Section 5. 3 Crystal: active gem Based on the discussion in previous sections, we have identified powerful data modeling technology and in-ferencing functionality as two important requirements for supporting physical map assembly. <p> That is to say a map may contain more than one contig. To build the con-tig (s), we consider only relationships with known connectivity. In this example, we build the contig (s) using the following overlapping relationships: ND&lt;(y3,y2), O (y4,y3), O (y3,y1), ND&gt;(y2,y1). Using the algorithm described in <ref> [15] </ref>, we construct the contig "y4-y3-y1" depicted in Figure 7. The figure shows the final contig (the boldface lines) as well as the set of overlapping relationships generated by our system. The fragment y2 is not used in the contig, because it is covered by y1 [ y3.
Reference: [16] <author> Lee, A. J., Rundensteiner, E. A., and Thomas, S., </author> <title> "An Active OODB System for Genome Physical Map Assembly." </title> <institution> Univ of Mich, Tech Rep CSE-TR-214-94, Dept. of EECS, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: Each rule thus corresponds to a separate rule object in Crystal. Due to the space limitation, the translated Crystal rules are not shown in this paper. We refer the interested reader to <ref> [16] </ref> for a more detailed description. The input to PMA is an incidence matrix with the rows representing clones in a library and columns representing probes used in the experiments. The entries in the matrix indicate the reactions of the probes to the clones.
Reference: [17] <author> Letovsky, S. and Berlyn, M. B., "CPROP: </author> <title> A Rule-Based Program For Constructing Genetic Maps", </title> <booktitle> Genomics 12, </booktitle> <pages> pp 435-446, </pages> <year> 1992. </year>
Reference-contexts: The overlap and ordering relationships of DNA fragments are specified with some local orientation, called the local orientation frame (LOF). The LOF concept is similar in spirit to the orientation windows introduced in CPROP <ref> [17] </ref> for orderings between points. <p> We find the work of Allen [1] and Letovsky and Berlyn <ref> [17] </ref> closely related to ours. Allen [1] lists all possible relationships between temporal inter vals assuming complete information about their du rations, and presents a transitivity table for these relationships. <p> The main difference between Allen's work and our work is that the ordering of tempo ral intervals is always global, while the ordering in our genome domain is relative to some local reference point. Letovsky and Berlyn <ref> [17] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [17] to solve the DNA fragment ordering prob lem. <p> Letovsky and Berlyn <ref> [17] </ref> use local ordering windows to represent such relative orderings. Their work deals only with points rather than intervals. We combine the `interval' concept [1] and the `window' idea [17] to solve the DNA fragment ordering prob lem. To the best of our knowledge, PMA is the first work in applying active OODB technology to genomic appli cations.
Reference: [18] <author> Miranker, D. P., </author> <title> "TREAT: A New And Efficient Match Algorithm For AI Production Systems", </title> <publisher> Pitman Publishing, </publisher> <pages> pp 13-47, </pages> <year> 1990. </year>
Reference-contexts: The incremental rule evaluation. If only a small percentage of rules are affected by the changes in the database from cycle to cycle (called temporal redundancy), then incremental rule processing becomes efficient. There are several alternatives <ref> [18] </ref> that can make the overall matching process more efficient, such as providing condition membership (i.e., alpha memory size), memory support (i.e., alpha memory), and condition relationship (i.e., beta memory). Among the different incremental matching algorithms, Rete [8] offers memory support and condition relationship aids. <p> Among the different incremental matching algorithms, Rete [8] offers memory support and condition relationship aids. A major disadvantage of the Rete algorithm is that it uses a lot of memory space to store the partial match information. TREAT <ref> [18] </ref> is another incremental matching algorithm without the space storage penalty, because not all partial match information, in particular partial join results, are stored. In this project, we have adopted a TREAT-like algorithm in the context of OODBs. The subscription and notification mechanisms.
Reference: [19] <author> Mott, R., et al., </author> <title> "Algorithms and Software Tools for Ordering Clone Libraries: Application to the Mapping of the Genome of Schizosaccharomyces Pombe", </title> <journal> Nucleic Acids Research, 1993, </journal> <volume> Vol. 21, No. 8, </volume> <pages> pp. 1965-1974. </pages>
Reference-contexts: Other researchers use heuristic or optimization approaches <ref> [19, 21] </ref>. The rule-based approach is appropriate for physical mapping, because the mapping process is data-driven and the experimental data is often uncertain and ambiguous. It is known that the rule-based approach can deal with uncertain data, i.e., it is straightforward to incorporate certainty factors into the rule-based system. <p> They generally get and store their data in special-purpose data files, rather that directly integrating with an OODB <ref> [19] </ref>. One example is the Hy-Graph system [13], that uses a graph-based visual interface to describe and imple ment ordering inference rules similarly to our PMA as graph-pattern queries. Hy-Graph system focuses on STS-based orderings, while our tools can effectively deal with hybridization experiments, as well. <p> Hy-Graph system focuses on STS-based orderings, while our tools can effectively deal with hybridization experiments, as well. Instead of using the rule-based approach, ICRF contig pro grams <ref> [19] </ref> have used an optimization approach for ordering clone libraries. Since the mapping process is not yet well-understood, it appears more natural to incremental build up a rule base as new technol ogy for generating maps evolves. <p> We have also defined an ordering refinement hierarchy and an associated set of inferencing rules for deriving new ordering information from the initial data set. A key characteristic that distinguishes our physical map assembler (PMA) from other approaches, such as [6] and <ref> [19] </ref>, is its use of a rule-based mechanism and its smooth integration with OODB capabilities. We have demonstrated that our approach is feasible by building a physical mapping tool using an active object-oriented database, Crystal.
Reference: [20] <author> Rumbaugh, J., Blaha, M., Premerlani, W., Eddy, F., and Lorensen, W., </author> <title> "Object-Oriented Modeling and Design", </title> <publisher> Prentice Hall, </publisher> <year> 1991. </year>
Reference: [21] <institution> SIGMA System for Integrated Genome Map Assembly, </institution> <note> Version 0.70 User Manual, </note> <institution> Theoretical Biololgy and Biophysics Group, Center for Human Genome Studies, </institution> <address> Los Alamos NL 92. </address>
Reference-contexts: Other researchers use heuristic or optimization approaches <ref> [19, 21] </ref>. The rule-based approach is appropriate for physical mapping, because the mapping process is data-driven and the experimental data is often uncertain and ambiguous. It is known that the rule-based approach can deal with uncertain data, i.e., it is straightforward to incorporate certainty factors into the rule-based system. <p> Since the mapping process is not yet well-understood, it appears more natural to incremental build up a rule base as new technol ogy for generating maps evolves. SIGMA from LANL <ref> [21] </ref> is a system for generalized genome map assembly built using ObjectStore. The system uses compiled-in methods, thus changes to the algorithm require code rewriting. Unlike rules, these methods and their re spective interactions cannot be as easily added, modi fied, and deleted dynamically.
References-found: 21

