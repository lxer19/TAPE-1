URL: http://www.cs.unc.edu/~stotts/COMP145/Polylith/Manual/manual.ps.Z
Refering-URL: http://www.cs.unc.edu/~stotts/COMP145/Polylith/Manual/
Root-URL: http://www.cs.unc.edu
Title: ered comment text. CSC is rumored to behave unsociably if given C-style comment  
Author: delimiters. 
Note: As the saying goes, "Fixed in version two 68  
Abstract: We have implmented many busses for evaluation and testing. Recently, an bus based upon capabilities | thought of as pointers to objects or specific interfaces to objects | was completed and found to be efficient. This bus is a superset of the original bus intended for this manual, and hence is what you find in the current distribution. We have updated the syntax of all examples and all text in this manual to match the accessors to the new bus, but we have not yet written a chapter on how to utilize the added functionality. You will find some of this in the examples, but we recognize the need for another chapter or three in the manual. * The current class of network busses have a poor protocol for `direct connection' | an option where, for purposes of increased performance, the bus invokes all application processes, introduces them to one another, and then allows all processes to communicate directly with one another. At this time, processes that intend to participate in such an application must have additional data structures provided to the bus initialization call. We know this is unnecessary, and will be improving it. * In response to popular demand | yes, we plan a data dictionary of all bus structures, plus a manual for how to write new presentations of an abstract bus to particular language implementations. 
Abstract-found: 1
Intro-found: 1
Reference: [Purt90] <institution> The Polylith Software Bus. J. Purtilo. University of Maryland CSD Technical Report 2469, </institution> <year> (1990). </year>
Reference: [CaPu90] <institution> A packaging system for heterogeneous execution environments. J. Callahan and J. Purtilo. University of Maryland CSD Technical Report 2542, </institution> <year> (1990). </year>
Reference: [PuRG88] <institution> Environments for prototyping parallel algorithms. </institution> <note> J. </note> <author> Purtilo, D. Reed and D. </author> <title> Grun-wald. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> vol. 5, </volume> <year> (1988), </year> <pages> pp. 421-437. </pages>
Reference: [PuCa89] <author> Parse tree annotations. J. Purtilo and J. </author> <title> Callahan. </title> <journal> Communications of the ACM, </journal> <volume> vol. 32, </volume> <year> (1989), </year> <pages> pp. 1467-1477. </pages>
Reference: [PuJa91] <institution> An environment for developing fault tolerant software. </institution> <note> J. </note> <author> Purtilo and P. </author> <title> Jalote. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> vol. 17, </volume> <year> (1991), </year> <pages> pp. 1-7. </pages>
Reference: [PuJa91] <institution> An environment for prototyping distributed applications. </institution> <note> J. </note> <author> Purtilo and P. Jalote. </author> <note> To appear, Computer Languages. </note>

References-found: 6

