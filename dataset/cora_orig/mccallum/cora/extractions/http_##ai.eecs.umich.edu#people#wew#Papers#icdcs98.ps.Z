URL: http://ai.eecs.umich.edu/people/wew/Papers/icdcs98.ps.Z
Refering-URL: http://ai.eecs.umich.edu/people/wew/research.html
Root-URL: http://www.cs.umich.edu
Email: g@umich.edu  
Title: Some Economics of Market-Based Distributed Scheduling  
Author: William E. Walsh Michael P. Wellman Peter R. Wurman Jeffrey K. MacKie-Mason f wew, wellman, pwurman, jmm 
Address: Ann Arbor, MI 48109-2110 USA  
Affiliation: University of Michigan,  
Date: May 1998  
Note: In Proceedings of the Eighteenth International Conference on Distributed Computing Systems (ICDCS-98), Amsterdam, The Netherlands,  
Abstract: Market mechanisms solve distributed scheduling problems by allocating the scheduled resources according to market prices. We model distributed scheduling as a discrete resource allocation problem, and demonstrate the applicability of economic analysis to this framework. Drawing on results from the literature, we discuss the existence of equilibrium prices for some general classes of scheduling problems, and the quality of equilibrium solutions. We then present two auction protocols for implementing solutions, and analyze their computational and economic properties. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> The Michigan Internet AuctionBot web site: </institution> <note> http://auction.eecs.umich.edu. </note>
Reference-contexts: The above sequence may be performed once or iterated any number of times. Auctions can be differentiated by parameterized values including, but not limited to: matching algorithm, price determination algorithm, event timing, bid restrictions, and intermediate price revelation [26]. We have implemented the Michigan Internet AuctionBot <ref> [1, 26] </ref>, an online parameterized auction server that operates as a research and development platform for creating and experimenting with auction-based economies. The AuctionBot provides interfaces for human and software agents to easily create and bid in auctions.
Reference: [2] <author> Albert D. Baker. </author> <title> Metaphor or reality: A case study where agents bid with actual costs to schedule a factory. </title> <booktitle> In Clearwater [4]. </booktitle>
Reference-contexts: Of course, all of these benefits do not automatically accrue as a result of setting up a market-like environment. Prior work applying market-inspired mechanisms to scheduling <ref> [2, 18, 21, 22] </ref> and other distributed computing problems [4] has produced promising empirical results. Understanding the scope of these methods, and developing a general design methodology for computational markets, however, requires an analytical characterization of their properties.
Reference: [3] <author> Sushil Bikhchandani and John W. Mamer. </author> <title> Competitive equilibrium in an exchange economy with indivisibilities. </title> <journal> Journal of Economic Theory, </journal> <volume> 74 </volume> <pages> 385-413, </pages> <year> 1997. </year>
Reference-contexts: Theorem 1 For the general discrete resource allocation problem, if there exists a p such that f is in equi librium at p, then f is an optimal solution. Proof. Bikhchandani and Mamer provide a proof for an exchange economy without reserve prices <ref> [3] </ref>. The extension to account for reserve values is straightforward [23]. 2 This result confirms the usual consequence of competitive equilibrium: that no further gains from trade Name Job Length Deadline Value Agent 1 2 2 $3 Agent 2 1 2 $2 Table 1: A problem with no equilibrium. <p> Proof. By Lemma 2, the single-unit scheduling problem always has at least one price equilibrium p. By Theorem 1, p supports an optimal solution. Since p supports an optimal solution, it can be shown that all optimal solutions must be supported by p <ref> [3, 7] </ref>. 2 Together, Theorems 1 and 3 establish that a solution to the single-unit scheduling problem is optimal iff it is supported by a price equilibrium. Example 2 demonstrates that relaxing the single-unit restriction immediately leads to the possibility that an equilibrium will not exist. <p> Bikhchandani and Mamer <ref> [3] </ref> present some other technical conditions for existence of equilibrium, which do not seem to be immediately expressible in scheduling terms. 5 Auction Protocols We use the term protocol to refer to a mechanism, along with agent bidding policies. The mechanisms we consider are generically called auctions. <p> This bidding strategy is quite simple, involving no anticipation of other agents' strategies. For the single-unit problem, such anticipation is unnecessary, as the agent would not wish to change its bid even after observing what the other agents did. This is called the no regret property <ref> [3] </ref>, and means that from the agent's perspective, no bidding policy would have been a better response to the other agents' bids. The no-regret property does not hold, however, for the ascending auction in the multi-unit scheduling problem, regardless of the bidding strategy [3]. <p> This is called the no regret property <ref> [3] </ref>, and means that from the agent's perspective, no bidding policy would have been a better response to the other agents' bids. The no-regret property does not hold, however, for the ascending auction in the multi-unit scheduling problem, regardless of the bidding strategy [3]. In general, an agent might perform better, for example, through accurate prediction of the other agents' behavior. In the absence of a basis for prediction, however, the simple strategy proposed may indeed be reasonable. 6.3 Analysis of the Ascending Auction Let p i denote the price paid for i.
Reference: [4] <editor> Scott Clearwater, editor. </editor> <booktitle> Market-Based Control: </booktitle>
Reference-contexts: If self-interested agents are free to set their own priorities, then without some incentive to the contrary, they will specify maximum priority for whatever they are interested in. Citing such limitations, several have proposed that distributed resource allocation problems be solved via market mechanisms <ref> [4] </ref>, an approach we have called market-oriented programming (MOP) [24]. In MOP, we define agent activities in terms of resources required and produced, reducing an agent's decision problem to evaluating the tradeoffs of acquiring different resources. <p> Of course, all of these benefits do not automatically accrue as a result of setting up a market-like environment. Prior work applying market-inspired mechanisms to scheduling [2, 18, 21, 22] and other distributed computing problems <ref> [4] </ref> has produced promising empirical results. Understanding the scope of these methods, and developing a general design methodology for computational markets, however, requires an analytical characterization of their properties.
References-found: 4

