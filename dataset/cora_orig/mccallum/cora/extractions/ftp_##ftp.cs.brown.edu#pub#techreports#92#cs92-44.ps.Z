URL: ftp://ftp.cs.brown.edu/pub/techreports/92/cs92-44.ps.Z
Refering-URL: http://www.cs.brown.edu/publications/techreports/reports/CS-92-44.html
Root-URL: http://www.cs.brown.edu/
Abstract-found: 0
Intro-found: 1
Reference: [AgP] <author> Alok Aggarwal and James Park, </author> <title> "Notes on Searching in Multidimensional 36 Monotone Arrays," </title> <booktitle> Proceedings of 29th Annual IEEE Symposium on Founda--tions of Computer Science (October 1988), </booktitle> <pages> 497-512. </pages>
Reference-contexts: There are many applications for using blocks efficiently in external graph searching. These include A.I. searching in constraint networks, robot motion planning, the simulation of large Deterministic Finite Automata (DFA), browsing in hypertext applications, accesses in object-oriented databases, and some matrix algorithms such as searching in monotone arrays <ref> [AgP] </ref>. Sometimes the graphs are well-structured, as in the case of matrix searches and robot motion planning in a space discretized in a grid (which gives rise to grid graphs). At other times the graphs are unstructured, as in A.I. searching and DFA simulation.
Reference: [AlR] <author> Romas Aleliunas and Arnold L. Rosenberg, </author> <title> "On Embedding Rectangular Grids in Square Grids," </title> <journal> IEEE Transactions on Computers C-31 (1982), </journal> <pages> 907-913. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph.
Reference: [Ber] <author> Claude Berge, </author> <title> Graphs and Hypergraphs (second edition), </title> <publisher> North-Holland Publishing Company, </publisher> <address> Amsterdam, </address> <year> 1976. </year>
Reference-contexts: The following lemma gives such a bound with some restrictions on the blocking. We later generalize the lemma to remove any such restrictions. Before presenting the lemma, however, we want to make some observations about hypergraphs <ref> [Ber] </ref>. First, a hypergraph is a pair G = (V; H), where V is a set of vertices and H is a set of subsets of V called edges. If each set H 2 H has cardinality 2, then G is an ordinary graph.
Reference: [BIR] <author> Allan Borodin, Sandy Irani, Prabhakar Raghavan, and Baruch Schieber, </author> <title> "Competitive Paging with Locality of Reference," </title> <booktitle> Proc. of the 23rd ACM Symposium on Theory of Computing (May 1991), </booktitle> <pages> 249-259. </pages>
Reference-contexts: We know of no previous work for this problem, but there is considerable related work. Borodin et al. considered a similar problem where they were traversing an access graph, but they considered only block size B = 1 and worked on developing an efficient paging algorithm <ref> [BIR] </ref>.
Reference: [CRS] <author> F.R.K. Chung, A. L. Rosenberg, and Lawrence Snyder, </author> <title> "Perfect Storage Representations for Families of Data Structures," </title> <booktitle> SIAM J. Algorithms and Discrete Methods 4 (1983), </booktitle> <pages> 548-565. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph.
Reference: [DEL] <author> Richard A. DeMillo, Stanley C. Eisenstat, and Richard J. Lipton, </author> <title> "Preserving Average Proximity in Arrays," </title> <booktitle> Communication of the ACM 21 (1978), </booktitle> <pages> 228-231. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph. <p> Rosenberg showed that there is no linear mapping scheme that preserves proximity globally in arrays that are extendible in more than one dimension. DeMillo et al. considered the same problem and showed that proximity could be maintained if the storage mechanism was a binary tree <ref> [DEL] </ref>. Both concluded that the standard row-major (or column-major) way of storing arrays was asymptotically optimal for preserving locality in arrays. We find, however, that our earlier hypothesis concerning blocking does not hold even for finite arrays, as long as the array structure is much larger than the memory size.
Reference: [GaJ] <author> Michael R. Garey and David S. Johnson, </author> <title> Computers and Intractability: A Guide to the Theory of NP-Completeness, </title> <editor> W. H. </editor> <publisher> Freeman & Co., </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: But then the edge (v; u) has no representative in V 0 , so V 0 was not a vertex cover. 2 VERTEX COVER is an NP-complete problem <ref> [GaJ] </ref>, but there is a well-known polynomial algorithm that approximates the optimal vertex cover within a factor of 2. Take any maximal matching of G.
Reference: [Ihl] <author> Edmund Ihler, </author> <title> "Bounds on the Quality of Approximate Solutions to the Group Steiner Problem," </title> <booktitle> in Graph-Theoretic Concepts in Computer Science, Proceedings of the 16th International Workshop WG '90 , G. </booktitle> <editor> Goos and J. Hartmanis, eds., </editor> <booktitle> Lecture Notes in Computer Science #484, </booktitle> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1991, </year> <pages> 109-118. </pages>
Reference-contexts: Ihler has shown the problem to be NP-hard, even if the graph is a tree, and gave a trivial algorithm to approximate the optimal tree within a factor of g 1, where g is the number of groups <ref> [Ihl] </ref>. The problem with applying Lemma 11 to blockings where there are not dN=Be strongly stable vertices is that we are not guaranteed that each of the "must-visit" vertices will cause a page fault.
Reference: [Knu] <author> Donald E. Knuth, </author> <title> in The Art of Computer Programming, Volume 3: Sorting and Searching, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <year> 1973. </year>
Reference-contexts: 1 Introduction Searching is a fundamental topic in computer science <ref> [Knu] </ref>. In external searching, the records to be searched cannot fit simultaneously in the internal memory. In this report, we consider searching in graphs.
Reference: [LED] <author> R. J. Lipton, S. C. Eisenstat, and R. A. DeMillo, </author> <title> "Space and Time Hierarchies for Classes of Control Structures and Data Structures," </title> <editor> J. </editor> <booktitle> Association for Computing Machinery 23 (1976), </booktitle> <pages> 720-732. </pages>
Reference-contexts: taken by Lipton et al., who consider hierarchies of embeddings of graphs, where they do allow a given vertex to be replicated up to S times in going from one level of the hierarchy to the next, as well as a factor of T expansion in the distance between vertices <ref> [LED] </ref>. Their paper, however, focuses on lower bounds for general graphs, and does not deal with the issue of how to find optimal embeddings. It is also not clear what the relevance of any optimal embeddings is to blocking.
Reference: [ReW] <author> Gabriele Reich and Peter Widmayer, </author> <title> "Beyond Steiner's Problem: A VLSI Oriented Generalization," </title> <booktitle> in Graph-Theoretic Comcepts in Computer Science: Proceedings of the 15th International Workshop WG '89 , G. </booktitle> <editor> Goos and J. Hartmanis, eds., </editor> <booktitle> Lecture Notes in Computer Science #411, </booktitle> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1990, </year> <pages> 196-210. </pages>
Reference-contexts: Reich and Widmayer gave an approximation algorithm for the minimum group Steiner tree problem, but did not give any guarantees on how much worse than optimal their results could be <ref> [ReW] </ref>. Ihler has shown the problem to be NP-hard, even if the graph is a tree, and gave a trivial algorithm to approximate the optimal tree within a factor of g 1, where g is the number of groups [Ihl].
Reference: [Rosa] <author> Arnold L. Rosenberg, </author> <title> "Preserving Proximity in Arrays," </title> <journal> SIAM J. Comput. </journal> <volume> 4 (1975), </volume> <pages> 443-460. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph. <p> Of course, this is only a heuristic, and local references in the target graph do not always get translated into local references in the host. For example, Rosenberg considered the problem of preserving proximity in arrays <ref> [Rosa] </ref> when mapping onto a linear access structure. A grid graph describes the proximity properties of arrays, so the embedding problem here is to map a grid graph into a semi-infinite number line. <p> The problem of computing how large the neighborhoods of radius r in d-dimensional grid graphs was considered by Rosenberg <ref> [Rosa] </ref>, where he derived the answer O (r d ). In the following derivation, we find the exact coefficient of the r d term.
Reference: [Rosb] <author> Arnold L. Rosenberg, </author> <title> "Data Encodings and Their Costs," </title> <journal> Acta Informatica 9 (1978), </journal> <pages> 273-292. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph.
Reference: [Rosc] <author> Arnold L. Rosenberg, </author> <title> "Encoding Data Structures in Trees," </title> <editor> J. </editor> <booktitle> Association for Computing Machinery 26 (1979), </booktitle> <pages> 668-689. 37 </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph.
Reference: [RoS] <author> Arnold L. Rosenberg and Lawrence Snyder, </author> <title> "Bounds on the Costs of Data Encodings," Math. </title> <booktitle> Systems Theory 12 (1978), </booktitle> <pages> 9-39. </pages>
Reference-contexts: Alternatively, all the work done in the database community on B-trees could be viewed as a solution to our problem for complete trees with s = 1. 1 There is considerable previous work on embedding of one type of data structure into another <ref> [AlR, CRS, DEL, Rosa, Rosb, Rosc, RoS] </ref>. This work is relevant because if we view the data structures as graphs, the goal of the embedding is to maintain locality in the original graph when accesses are done according to the target graph.
Reference: [Ull] <author> Jeffrey D. Ullman, </author> <title> in Principles of Database and Knowledge-Base Systems, </title> <publisher> Computer Science Press, </publisher> <address> Rockville, MD, </address> <year> 1988. </year> <month> 38 </month>
Reference-contexts: This is a stronger assumption than that used, for example, by external B-trees, where a record of data may be pointed to from several places, although the data (exclusive of the key being indexed) exist in only one block <ref> [Ull] </ref>. We allow actual replication of the data and define the storage blow-up s to be the ratio between the actual number of blocks used to represent the data and the minimum number that could be used.
References-found: 16

