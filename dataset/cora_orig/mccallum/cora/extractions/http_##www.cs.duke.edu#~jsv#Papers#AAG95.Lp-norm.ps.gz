URL: http://www.cs.duke.edu/~jsv/Papers/AAG95.Lp-norm.ps.gz
Refering-URL: http://www.cs.duke.edu/~jsv/Papers/catalog/node80.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: baruch@cs.jhu.edu azar@math.tau.ac.il efg@cs.duke.edu  
Title: Load Balancing in the L p Norm  
Author: Baruch Awerbuch Yossi Azar Edward F. Grove Ming-Yang Kao P. Krishnan Jeffrey Scott Vitter k 
Note: Also affiliated with MIT Lab. for Computer Science. Supported by ARPA/Army contract DABT63-93-C-0038, NSF grant CCR-9114440, and ARPA contract N00014-J-92-1799. Supported in part by Allon Fellowship and by the Israel Science Foundation. Supported in part by ARO grant DAAH04-93-G-0076. Supported in part by NSF grant CCR-9101385. Supported in part by an IBM Fellowship, by NSF grant CCR-9007851, by ARO grant DAAH04-93-G-0076, and by AFOSR grant F49620-94-1-0217. This work was done while the author was visiting Duke University from Brown University. k Supported in part by NSF grant CCR-9007851 and by ARO grant DAAH04-93-G-0076.  
Address: Baltimore, MD 21218 Tel-Aviv 69978, Israel Durham, NC 27708-0129  Durham, NC 27708-0129 Holmdel, NJ 07733-3030 Durham, NC 27708-0129  
Affiliation: Dept. of Computer Science Dept. of Computer Science Dept. of Computer Science Johns Hopkins University Tel-Aviv University Duke University  Dept. of Computer Science Computing Systems Res. Lab. Dept. of Computer Science Duke University AT&T Bell Laboratories Duke University  
Abstract: kao@cs.duke.edu pk@research.att.com jsv@cs.duke.edu Abstract. In the load balancing problem, there is a set of servers, and jobs arrive sequentially. Each job can be run on some subset of the servers, and must be assigned to one of them in an online fashion. Traditionally, the assignment of jobs to servers is measured by the L 1 norm; in other words, an assignment of jobs to servers is quantified by the maximum load assigned to any server. In this measure the performance of the greedy load balancing algorithm may be a logarithmic factor higher than the o*ine optimal [3]. In many applications, the L 1 norm is not a suitable way to measure how well the jobs are balanced. If each job sees a delay that is proportional to the number of jobs on its server, then the average delay among all jobs is proportional to the sum of the squares of the numbers of jobs assigned to the servers. Minimizing the average delay is equivalent to minimizing the Eu-clidean (or L 2 ) norm. For any fixed p, 1 p &lt; 1, we show that the greedy algorithm performs within a constant factor of the o*ine optimal with respect to the L p norm. The constant grows linearly with p, which is best possible, but does not depend on the number of servers and jobs.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin, and O. Waarts. </author> <title> On-line machine scheduling with applications to load balancing and virtual circuit routing. </title> <booktitle> In Proc. 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 623-631, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: For the general case that the load due to a job depends upon the server to which it is assigned a competitive ratio of fi (log n) is achieved by somewhat more complicated algorithm <ref> [1] </ref>. The work in [4] and [5] deals with the case in which customers are allowed to disconnect. But is the maximum load the right cost to minimize? This measure focuses on the worst server, and ignores how well the remaining servers are balanced.
Reference: [2] <author> B. Awerbuch, Y. Azar, S. Plotkin, and O. Waarts. </author> <title> Competitive routing of virtual circuits with unknown duration. </title> <booktitle> In Proc. 5th ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 321-327, </pages> <month> Jan-uary </month> <year> 1994. </year>
Reference-contexts: If the duration is unknown until the job departs it appears that by using some of the techniques of <ref> [2] </ref> one could achieve similar results by allowing reroutings. In Section 2, we examine the case in which all jobs have a load of 1 on every permissible server. We start by considering how optimal adversaries behave. We classify jobs according to how they are processed by Greedy.
Reference: [3] <author> Y. Azar, J. Naor, and R. </author> <title> Rom, "The Competitiveness of On-Line Assignments," </title> <booktitle> Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms (January 1992). </booktitle>
Reference-contexts: Online load balancing has been considered by many researchers [7, 8, 9, 11, 6, 10]. Azar et al. <ref> [3, 4, 5] </ref> studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server. <p> Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server. That is, Cost X () is the maximum number of customers assigned to any server by algorithm X on input sequence . In <ref> [3] </ref>, the authors assume that customers do not disconnect, and show that the greedy algorithm is optimal with a competitive ratio of fi (log n).
Reference: [4] <author> Y. Azar, A. Y. Broder, and A. R. Karlin, </author> <title> "On-line Load Balancing," </title> <booktitle> Proceedings of the 33rd Symposium on Foundations of Computer Science (Octo-ber 1992), </booktitle> <pages> 218-225. </pages>
Reference-contexts: Online load balancing has been considered by many researchers [7, 8, 9, 11, 6, 10]. Azar et al. <ref> [3, 4, 5] </ref> studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server. <p> For the general case that the load due to a job depends upon the server to which it is assigned a competitive ratio of fi (log n) is achieved by somewhat more complicated algorithm [1]. The work in <ref> [4] </ref> and [5] deals with the case in which customers are allowed to disconnect. But is the maximum load the right cost to minimize? This measure focuses on the worst server, and ignores how well the remaining servers are balanced.
Reference: [5] <author> Y. Azar, B. Kalyanasundaram, S. Plotkin, K. R. Pruhs, and O. Waarts, </author> <title> "Online Load Balancing of Temporary Tasks," </title> <booktitle> Proceedings of the 1993 Workshop on Algorithms and Data Structures (August 1993). </booktitle>
Reference-contexts: Online load balancing has been considered by many researchers [7, 8, 9, 11, 6, 10]. Azar et al. <ref> [3, 4, 5] </ref> studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server. <p> For the general case that the load due to a job depends upon the server to which it is assigned a competitive ratio of fi (log n) is achieved by somewhat more complicated algorithm [1]. The work in [4] and <ref> [5] </ref> deals with the case in which customers are allowed to disconnect. But is the maximum load the right cost to minimize? This measure focuses on the worst server, and ignores how well the remaining servers are balanced. <p> Here the goal is to minimize the L p norm of the vector of size nT of the load of each server on each unit of time (where T is the duration of the whole process). Using the techniques in <ref> [5] </ref> we can get a constant (O (p)) competitive algorithm for the L p norm assuming that the duration of each job is known once it appears in the system.
Reference: [6] <author> Y. Bartal, A. Fiat, H. Karloff, and R. Vohra. </author> <title> New algorithms for an ancient scheduling problem. </title> <booktitle> In Proc. 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 51-58, </pages> <year> 1992. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [7] <author> R.L. Graham. </author> <title> Bounds for certain multiprocessing anomalies. </title> <journal> Bell System Technical Journal, </journal> <volume> 45 </volume> <pages> 1563-1581, </pages> <year> 1966. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [8] <author> R.L. Graham, E.L. Lawler, J.K Lenstra, and A.H.G. Rinnooy Kan. </author> <title> Optimization and approximation in deterministic sequencing and scheduling: a survey. </title> <journal> Annals of Discrete Mathematics, </journal> <volume> 5 </volume> <pages> 287-326, </pages> <year> 1979. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [9] <author> R. Karp, U. Vazirani, and V. Vazirani. </author> <title> An optimal algorithm for on-line bipartite matching. </title> <booktitle> In Proc. 22nd Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 352-358, </pages> <year> 1990. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [10] <author> S. Phillips and J. Westbrook. </author> <title> Online load balancing and network flow. </title> <booktitle> In Proc. 25th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 402-411, </pages> <year> 1993. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [11] <author> D. Shmoys, J. Wein, and D.P. Williamson. </author> <title> Scheduling parallel machines on-line. </title> <booktitle> In Proc. 32nd IEEE Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 131-140, </pages> <year> 1991. </year>
Reference-contexts: Online load balancing has been considered by many researchers <ref> [7, 8, 9, 11, 6, 10] </ref>. Azar et al. [3, 4, 5] studied the problem of load balancing, motivated by the cellular phone system. Customers arrive and wish to be connected to a server. The goal is to minimize the maximum number of customers assigned to any one server.
Reference: [12] <author> F. Yao, A. Demers, and S. Shenker, </author> <title> "A Scheduling Model for Reduced CPU Energy," </title> <booktitle> in these Proceedings of the 36th Symposium on Foundations of Computer Science (October 1995). </booktitle>
Reference-contexts: We relate this problem to finding the norm of a certain matrix. This is a rather intuitive approach, and is particularly interesting because the matrix also shows up in <ref> [12] </ref>. In Section 4, we will generalize the problem and get stronger results, but the proofs will be primarily algebraic in nature. 2.1 Partitioning the Jobs We start by analyzing the structure of a request sequence that gives rise to a particular output of Greedy. <p> In this case, Greedy puts about P n k=j s y k =k jobs onto server j. Remark 2.5 The competitive ratio of Greedy lies between jjGjj p and 2 jjGjj p . Yao et al. <ref> [12] </ref> show independently that jjGjj p p (in their Corollary to Lemma 5.7). This proves that Greedy is 2p-competitive when all jobs have the same load on all permissible servers. We improve this bound on the competitive ratio to about 1:77p in Section 4.2.
References-found: 12

