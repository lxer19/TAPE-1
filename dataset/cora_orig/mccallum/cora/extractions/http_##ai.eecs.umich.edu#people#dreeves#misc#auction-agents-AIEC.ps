URL: http://ai.eecs.umich.edu/people/dreeves/misc/auction-agents-AIEC.ps
Refering-URL: http://ai.eecs.umich.edu/people/dreeves/misc/
Root-URL: http://www.eecs.umich.edu
Title: Agents Participating in Internet Auctions  
Author: Junling Hu, Daniel Reeves, and Hock-Shan Wong 
Keyword: Web agents, internet auctions, online learning  
Address: Ann Arbor, MI 48109-2110, USA  
Affiliation: Artificial Intelligence Laboratory University of Michigan  
Email: fjunling, dreeves,hswongg@umich.edu  
Web: http://ai.eecs.umich.edu/people/fjunling,dreeves,hswongg  
Date: March 13, 1999  
Abstract: We have designed agents to participate in one of the internet auctions|Michigan AuctionBot. The agents communicate with the AuctionBot through API. For the inference mechanism underlying the agent, we use regression methods for online derivation of functional relations between other agents' actions and their internal states. The functional form of a regression model is based on an agent's assumptions of other agents' underlying behaviors. We implemented four types of agents, distinguished by their dif ferent assumptions about other agents. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Kurt Bollacker, Steve Lawrence, and C. Lee Giles. Citeseer: </author> <title> An autonomous web agent for automatic retrieval and identification of interesting publications. </title> <booktitle> In Proceedings of the Second International Conference on Autonomous Agents, </booktitle> <pages> pages 116-120, </pages> <address> Minneapolis, May 1998. </address> <publisher> ACM Press. </publisher>
Reference-contexts: 1 Introduction Intelligent agents for electronic commerce are a popular research topic. We have seen shopping agents that collect price information for users [3], and information filtering agents that collect interesting publications <ref> [1] </ref>. We are interested in designing agents for market environments where multiple buyers and sellers interact with each other. Such interactions can repeat over time, leading to dynamic changes of the systems.
Reference: [2] <author> Dave Cliff. </author> <title> Evolving parameter sets for adaptive trading agents in continuous double-auction markets. </title> <booktitle> In Agents-98 workshop on Artificial Societies and Computational Markets, </booktitle> <pages> pages 38-47, </pages> <address> Minneapolis, MN, </address> <month> May </month> <year> 1998. </year>
Reference-contexts: Gode and Sunder [7] designed zero-intelligence agents who submit random bids with the constraint that their utilities never decrease. Such agents can be viewed as one type of 0-level agent defined in this paper. To improve upon zero-intelligence agents, Cliff <ref> [2] </ref> designed zero-intelligence-plus agents who submit bids within the utility increasing range, but the bids are chosen so that their utilities will increase by a certain proportion. The proportion is adjusted over time. The adjusting process can be seen as an online learning process.
Reference: [3] <author> Robert B. Doorenbos, Oren Etzioni, and Daniel Weld. </author> <title> A scalable comparison shopping agent for the world-wide web. </title> <booktitle> In Proceedings of the First International Conference on Autonomous Agents, </booktitle> <pages> pages 39-48, </pages> <year> 1997. </year>
Reference-contexts: 1 Introduction Intelligent agents for electronic commerce are a popular research topic. We have seen shopping agents that collect price information for users <ref> [3] </ref>, and information filtering agents that collect interesting publications [1]. We are interested in designing agents for market environments where multiple buyers and sellers interact with each other. Such interactions can repeat over time, leading to dynamic changes of the systems.
Reference: [4] <author> David Easley and John Ledyard. </author> <title> Theories of price formation and exchange in double oral auctions. In Friedman and Rust [6], </title> <booktitle> chapter 3, </booktitle> <pages> pages 63-98. </pages>
Reference-contexts: Since double auctions are essentially dynamic games where agent interaction takes more than one round, 4 the static game framework fails to address the basic dynamics of the system. Other theoretical studies <ref> [4] </ref> try to explain the experimental data generated from human subjects. They assume that each buyer or seller has a reservation price and has a way to re-calculate its reservation price after trading.
Reference: [5] <author> Daniel Friedman. </author> <title> The double auction market institution: A survey. In Friedman and Rust [6], </title> <booktitle> chapter 1, </booktitle> <pages> pages 3-26. </pages>
Reference-contexts: This type of auction can be seen in a clearing house. Asynchronous double auctions are also called continuous double auctions where agents offer to buy or sell and accept other agents' offers at any moment. Continuous double auctions have been widely used in stock exchange markets <ref> [5] </ref> and internet auctions. In this paper, we are interested in the synchronized double auction. The auction process can be described as follows: At the start of the auction, each agent is endowed with designated amounts of m goods, each| except the last|associated with an auction. <p> The market continues until no agents can be matched in any auction. Agents Buyers Sellers 6 4 2 1.1 3.1 5.1 3 Agent design 3.1 Previous work The book edited by Friedman and Rust [6] collects several studies of double auctions, including both simulations and game-theoretic analyses. Game-theoretic studies <ref> [14, 5] </ref> on double auctions generally adopt the framework of static (one-shot) games with incomplete information, for which the equilibrium solution is Bayesian Nash equilibrium.
Reference: [6] <author> Daniel Friedman and John Rust, </author> <title> editors. The Double Auction Market. </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: In a double auction, both buyers and sellers submit bids. A single agent may even submit both, offering to buy or sell depending on the price. Double auctions <ref> [6] </ref> come in different forms. Most of them have the following features: (1) There are many buyers and many sellers; (2) One unit of a good is traded each time; (3) Bids are observable to all agents once they are submitted; (4) Each agent's preferences are unknown to other agents. <p> The market continues until no agents can be matched in any auction. Agents Buyers Sellers 6 4 2 1.1 3.1 5.1 3 Agent design 3.1 Previous work The book edited by Friedman and Rust <ref> [6] </ref> collects several studies of double auctions, including both simulations and game-theoretic analyses. Game-theoretic studies [14, 5] on double auctions generally adopt the framework of static (one-shot) games with incomplete information, for which the equilibrium solution is Bayesian Nash equilibrium.
Reference: [7] <author> Dhananjay Gode and Shyam Sunder. </author> <title> Lower bounds for efficiency of surplus extraction in double auctions. In Friedman and Rust [6], </title> <booktitle> chapter 7, </booktitle> <pages> pages 199-220. </pages>
Reference-contexts: While the study of human behavior is interesting, we are more interested in designing artificial agents who can bid as intelligently as possible to get maximum payoffs from the double auctions. Gode and Sunder <ref> [7] </ref> designed zero-intelligence agents who submit random bids with the constraint that their utilities never decrease. Such agents can be viewed as one type of 0-level agent defined in this paper.
Reference: [8] <author> Junling Hu and Michael P. Wellman. </author> <title> Self-fulfilling bias in multiagent learning. </title> <booktitle> In Proceedings of the Second International Conference on Mul-tiagent Systems, </booktitle> <pages> pages 118-125, </pages> <address> Kyoto, Japan, </address> <month> December </month> <year> 1996. </year> <note> AAAI Press. </note>
Reference-contexts: The online environment imposes special difficulties on learning because the environment consists of other agents who are similarly adaptive. This naturally leads to the notion of modeling other agents and their beliefs. In our previous research, we studied the general issue of learning in dynamic multiagent systems <ref> [8, 9] </ref>, and how agents learn recursive models of other agents in a simulated auction market [10]. In this paper, we take the learning agents to an actual internet auction|The Michigan AuctionBot. By implementing the agents on the internet, we address the practical issue of agent communication and agent interface.
Reference: [9] <author> Junling Hu and Michael P. Wellman. </author> <title> Multiagent reinforcement learning: Theoretical framework and an algorithm. </title> <booktitle> In Proceedings of the Fifteenth International Conference on Machine Learning, </booktitle> <pages> pages 242-250, </pages> <address> Madi-son, WI, July 1998. </address> <publisher> AAAI Press. </publisher> <pages> 11 </pages>
Reference-contexts: The online environment imposes special difficulties on learning because the environment consists of other agents who are similarly adaptive. This naturally leads to the notion of modeling other agents and their beliefs. In our previous research, we studied the general issue of learning in dynamic multiagent systems <ref> [8, 9] </ref>, and how agents learn recursive models of other agents in a simulated auction market [10]. In this paper, we take the learning agents to an actual internet auction|The Michigan AuctionBot. By implementing the agents on the internet, we address the practical issue of agent communication and agent interface. <p> This problem that agents can take advantage of the structure of the auctions would not happen in our study because the auctions we are interested in have no negotiation phases. 3.2 Modeling the auction A double auction can be modeled as a stochastic game <ref> [9] </ref>, where the state is a vector consisting of all agents' individual endowments. The action is the vector of bids submitted by all agents. At time t, agent i's local state s i t , is described by its endowment vector, e i t = (e i m (t)).
Reference: [10] <author> Junling Hu and Michael P. Wellman. </author> <title> Online learning about other agents in a dynamic multiagent system. </title> <booktitle> In Proceedings of the Second International Conference on Autonomous Agents, </booktitle> <pages> pages 239-246, </pages> <address> Minneapolis, May 1998. </address> <publisher> ACM Press. </publisher>
Reference-contexts: This naturally leads to the notion of modeling other agents and their beliefs. In our previous research, we studied the general issue of learning in dynamic multiagent systems [8, 9], and how agents learn recursive models of other agents in a simulated auction market <ref> [10] </ref>. In this paper, we take the learning agents to an actual internet auction|The Michigan AuctionBot. By implementing the agents on the internet, we address the practical issue of agent communication and agent interface. This will also allow us to test the performance of the agent in a real environment. <p> U (e g 1; e m + P s ; e g;m ) = U (e g ; e m ; e g;m ); (2) 6 3.3 Four types of agents The agents we implemented follow our previous work <ref> [10] </ref>. We designed four types of agents. Our first type of agent is a 0-level non-estimating agent, who does not attempt to model other agents. Such a agent is called competitive agent. The competitive agent always chooses its reservation price P b and P s .
Reference: [11] <author> R. Preston McAfee and John McMillan. </author> <title> Auctions and bidding. </title> <journal> Journal of Economic Literature, </journal> <volume> 25 </volume> <pages> 699-738, </pages> <year> 1987. </year>
Reference-contexts: This auction server has been operational since September 1996. Currently, Michigan AuctonBot supports many auction types including English auctions, Dutch auctions, and Vickrey auctions. These different auctions are distinguished by the way bidders submit bids and how the allocations and prices are determined <ref> [11] </ref>. As far as we know, Michigan AuctionBot is the only auction site that provides an API to enable software agents to directly talk to the server.
Reference: [12] <author> Kevin O'Malley and Terrence Kelly. </author> <title> An api for internet auctions. </title> <journal> Dr. Dobb's Journal, </journal> <volume> 289 </volume> <pages> 70-74, </pages> <month> September </month> <year> 1998. </year>
Reference-contexts: As far as we know, Michigan AuctionBot is the only auction site that provides an API to enable software agents to directly talk to the server. Client Server (AuctionBot) Agent API TCP/IP Socket Auctioneer Scheduler Database The AuctionBot API <ref> [12] </ref> is a client/server communication protocol that is straightforward to implement for client developers in any language on any platform. The AuctionBot API functions reside on a server.
Reference: [13] <author> John Rust, John Miller, and Richard Palmer. </author> <title> Behavior of trading automata in a computerized double auction market. In Friedman and Rust [6], </title> <booktitle> chapter 6, </booktitle> <pages> pages 155-198. </pages>
Reference-contexts: The training with the GA requires the agent to know the final convergence price of the whole auction. It is not clear how such GA training can be applied to online settings. Other types of intelligent agents have also been designed for double auctions. In the Santa Fe Tournament <ref> [13] </ref>, 30 different intelligent programs competed in a synchronized double auction, and a simple non-adaptive agent won. That simple strategy is as follows: wait in the background and let the others do the negotiation, but when bid and ask get sufficiently close, jump in and steal the deal.
Reference: [14] <author> Mark Satterthwaite and Steven Williams. </author> <title> The bayesian theory of the k-double auction. In Friedman and Rust [6], </title> <booktitle> chapter 4, </booktitle> <pages> pages 99-124. </pages>
Reference-contexts: The market continues until no agents can be matched in any auction. Agents Buyers Sellers 6 4 2 1.1 3.1 5.1 3 Agent design 3.1 Previous work The book edited by Friedman and Rust [6] collects several studies of double auctions, including both simulations and game-theoretic analyses. Game-theoretic studies <ref> [14, 5] </ref> on double auctions generally adopt the framework of static (one-shot) games with incomplete information, for which the equilibrium solution is Bayesian Nash equilibrium.
Reference: [15] <author> Hal R. </author> <title> Varian. Microeconomic Analysis. </title> <editor> W. W. </editor> <publisher> Norton & Company, </publisher> <address> New York, third edition, </address> <year> 1992. </year>
Reference-contexts: We choose the CES functional form for its convenience and generality|including quadratic, logarithmic, linear, and many other forms as special cases. In constructing agent strategies, we dictate that they always choose actions leading to nonnegative payoffs. We can characterize this in terms of the agents' reservation prices <ref> [15] </ref>. The reservation price is defined as the maximum (minimum) price an agent is willing to pay (accept) for the good it wants to buy (sell).
Reference: [16] <author> Peter R. Wurman, William E. Walsh, and Michael P. Wellman. </author> <title> Flexible double auctions for electronic commerce: Theory and implementation. Decision Support Systems, </title> <year> 1998. </year>
Reference-contexts: We addressed the design issues in this paper. What we plan to do next is to test the agent performance. Results will be available in the revised version. 1 2 The auction environment 2.1 Michigan Auctionbot The Michigan AuctionBot <ref> [17, 16] </ref> is a configurable auction server. It allows human agents to create auctions and submit bids via web forms, and software agents to perform the same operations via TCP/IP. This auction server has been operational since September 1996.
Reference: [17] <author> Peter R. Wurman, Michael P. Wellman, and William E. Walsh. </author> <title> The michigan internet auctionbot: A configurable auction server for human and software agents. </title> <booktitle> In Proceedings of the Second International Conference on Autonomous Agents, </booktitle> <address> Minneapolis, </address> <month> May </month> <year> 1998. </year> <note> ACM Press. 12 </note>
Reference-contexts: We addressed the design issues in this paper. What we plan to do next is to test the agent performance. Results will be available in the revised version. 1 2 The auction environment 2.1 Michigan Auctionbot The Michigan AuctionBot <ref> [17, 16] </ref> is a configurable auction server. It allows human agents to create auctions and submit bids via web forms, and software agents to perform the same operations via TCP/IP. This auction server has been operational since September 1996.
References-found: 17

