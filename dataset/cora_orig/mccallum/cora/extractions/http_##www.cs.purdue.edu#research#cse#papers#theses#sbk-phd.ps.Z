URL: http://www.cs.purdue.edu/research/cse/papers/theses/sbk-phd.ps.Z
Refering-URL: http://www.cs.purdue.edu/research/cse/pdelab/hrefs.html
Root-URL: http://www.cs.purdue.edu
Title: PARALLEL NUMERICAL METHODS FOR PARTIAL DIFFERENTIAL EQUATIONS  
Author: by Sang-Bae Kim 
Degree: A Thesis Submitted to the Faculty of  In Partial Fulfillment of the Requirements for the Degree of Doctor of Philosophy  
Date: December 1993  
Affiliation: Purdue University  
Abstract-found: 0
Intro-found: 1
Reference: <institution> 129 BIBLIOGRAPHY </institution>
Reference: [AB84] <author> O. Axelsson and V.A. Barker. </author> <title> Finite Element Solution of Boundary Value Problems : Theory and Computation. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1984. </year>
Reference-contexts: Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method [RB85]. The fourth procedure considered is a parallel implementation of the Ritz-Galerkin method in the approximation space of piecewise linear polynominals defined on triangles <ref> [AB84] </ref>, [OBC81], [Hug87], [Joh87] utilizing an partitioning of the underlying triangular mesh. This chapter is organized as follows. In Section 4.1 we describe the domain decomposition methodology employed and the parallel discretization procedures developed. <p> The global stiffness matrix (A ij ) N i;j=1 and the right hand side (b i ) N i=1 of the matrix equation are obtained by assembling the element matrices and element right hand sides using the global numbering of the mesh data (see <ref> [AB84] </ref> for details). For the description of the parallel FEM module we introduce the notation f (k) k=1 for the subdomains of a partitioning of the FEM mesh. An example of such a partitioning is given in Figure 4.6. <p> according to the global index ignod, after excluding the non-active mesh points compbc Generates Dirichlet boundary condition values tabl using id and ibnod p1c0qb Builds the submatrix of the discrete equations, i.e., coef, idco and rhs qdcshl Calculates integration-rule weights, shape functions and local derivatives for the master element (see <ref> [AB84] </ref>) qdcshg Calculates global derivatives of shape functions and Jacobian determinants for each element qdck Forms stiffness matrix for each element qdckb Forms additional stiffness matrix for mixed boundary condition points 103 5.
Reference: [BP79] <author> A. Berman and R.J. Plemmons. </author> <title> Nonnegative Matrices in the Mathematical Sciences. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: In many problems, these conditions may hold due to some further property of the matrix A; as for example, in the case of A being a positive definite matrix or a non-singular M -matrix or even a non-singular H-matrix (For corresponding definitions see, e.g., <ref> [BP79] </ref>, [Var62, p85], [You71], [FS91, p7]). <p> (fi; fi; fi ff) F 0 0 m (fi ff; fi; fi ff) E 0 0 T 1 0 T 1 3 7 7 : (1:38) Moreover, the block tridiagonal structure of f T n of (1.36) implies that f T n possesses Young's block property A (see [Var62], [You71], <ref> [BP79] </ref>, [HY81]). Thus, the convergence of the block Jacobi method implies that its Gauss-Seidel counterpart will converge asymptotically twice as fast, while its optimal SOR counterpart will converge asymptotically much faster. <p> If ( e J) is a set of real number, it is well known that the Young's optimal value of the SOR parameter is given by 2=(1 + q 1 ( e J) 2 ), (see [You54], [You71], [Var62], <ref> [BP79] </ref>, [HY81]). <p> Proof : Since S is a non-singular M-matrix, by the statement (M 35 ) in <ref> [BP79, p.137] </ref>, S has all its diagonal elements positive and there exists a positive diagonal matrix D such that SD is strictly diagonally dominant.
Reference: [Byu94] <author> Hyeran Byun. </author> <title> Neurocomputing on Distributed Memory Machine. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1994. </year>
Reference-contexts: The determination of a partitioning of a mesh (or a grid) into submeshes (subgrids) with equal size and minimum interface length is in general an NP-complete problem. Thus, several heuristics have been proposed for this problem 82 [CHH + 91], <ref> [Byu94] </ref>. Throughout we assume that this partitioning is predetermined. Furthermore, our implementation of the four discretization procedures utilizes the domain decomposition data structures adopted in Parallel (//) ELLPACK [HR92] for distributed memory machines.
Reference: [CH62] <author> R. Courant and D. </author> <title> Hilbert. </title> <journal> Methods of Mathematical Physics, </journal> <volume> vol 2. </volume> <publisher> Willey, </publisher> <address> New York, </address> <year> 1962. </year>
Reference-contexts: Under certain conditions <ref> [CH62] </ref>, [KK58], it can be proved that the sequence fu (i) (i) 2 g produced from (1.6) converges to the solutions fu 1 ; u 2 g of the pair of problems (1.4) and (1.5), from which the solution of problem (1.1) can be constructed. <p> Under certain conditions <ref> [CH62] </ref>, [KK58], the sequence fu (i) (i) ; u k g converges to the solution of problem (1.1). Classical SAM is a special case of this generalized SAM. As a more general version of SAM, multi-color SAM is presented in [Tan87].
Reference: [CHH + 91] <author> N.P. Chrisochoides, E.N. Houstis, C.E. Houstis, P.N. Papachiou, S.K. Kortesis, and J.R. Rice. </author> <title> Domain Decomposer: A software tool for mapping PDE computations to parallel architectures. </title> <editor> In R. Glowinski, Y.A. Kuznetsov, G. Meurant, J. Periaux, and O.B. Widlund, editors, </editor> <booktitle> Fourth International Symposium on Domain Decomposition Methods for Partial Differential Equations, </booktitle> <pages> pages 341-357. </pages> <publisher> SIAM, </publisher> <year> 1991. </year>
Reference-contexts: They are defined on a predetermined partitioning of a grid or mesh <ref> [CHH + 91] </ref>. Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method [RB85]. <p> The performance of the computation on a parallel machine depends on the quality of the partitioning of the corresponding geometric data structures. It has been shown <ref> [CHH + 91] </ref> that parallel finite element codes based on a mesh partitioning consisting of a set of convex balanced subdomains (i.e, the subdomains are almost of equal size) with minimum interface length achieve close to optimal performance on various distributed machines. <p> The determination of a partitioning of a mesh (or a grid) into submeshes (subgrids) with equal size and minimum interface length is in general an NP-complete problem. Thus, several heuristics have been proposed for this problem 82 <ref> [CHH + 91] </ref>, [Byu94]. Throughout we assume that this partitioning is predetermined. Furthermore, our implementation of the four discretization procedures utilizes the domain decomposition data structures adopted in Parallel (//) ELLPACK [HR92] for distributed memory machines. <p> The last two parts are needed for the finite difference scheme with general two-dimensional domains. For the realization of step 2, we currently adopt the simple SHIFT mapping scheme (i.e., subdomain k is mapped to processor (k 1)). It has been shown in <ref> [CHH + 91] </ref> that this simple mapping is equally effective as some more sophisticated schemes, at least for two-dimensional problems. However, any mapping scheme can be easily implemented with the four discretization procedures. <p> The data in Table 4.3 indicate that the best partitioning for the encapsulated 5-point parallel solution is the p fi p (tensor product decomposition with p subdomains in x/y-direction, respectively <ref> [CHH + 91] </ref>) with respect to its overhead and the timing of the corresponding PDE solution. From the data in Table 4.3a we conclude that the time for the encapsulated solution is about 25% higher than the parallel general 5-point solution.
Reference: [CHK + 92] <editor> N.P. Chrisochoides, E.N. Houstis, S.B. Kim, M.K. Samartzis, and J.R. Rice. </editor> <title> Parallel Iterative Methods. </title> <editor> In R. Vichnevetsky, D. Knight, and G. Richter, editors, </editor> <booktitle> Advances in Computer Methods for Partial Differential Equations VII, </booktitle> <pages> pages 134-141. IMACS, </pages> <year> 1992. </year>
Reference-contexts: The parallel ITPACK modules are based on the sequential ones, thus their theoretical behavior has not been altered. In this section, we discuss the paralleliza-tion methodology adopted for their implementation within the parallel ELLPACK environment. The //ITPACK library reported on here is a generalization of the one presented in <ref> [CHK + 92] </ref> which is based on p fi q tensor product decomposition of an orthogonal grid and using 5-point finite difference discretization schemes.
Reference: [Chr92] <author> Nikos P. Chrisochoides. </author> <title> On The Mapping of Partial Differential Equation Computations onto Distributed Memory MIMD Parallel Machines. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Purdue University, </institution> <year> 1992. </year>
Reference-contexts: However, it has been observed that the cost of even nearly optimal partitioning can be very substantial for large grids <ref> [Chr92] </ref>. In order to reduce this cost, we have considered extending the discrete PDE problem to the rectangular domain that contains the original PDE domain. Then the grid of the rectangular domain encapsulates a grid on the original domain. Specifically, we assign identity equations at the exterior grid points.
Reference: [Dry89] <author> M. Dryja. </author> <title> An additive Schwarz algorithm for two- and three-dimensional finite element elliptic problems. </title> <editor> In T. Chan, R. Glowinski, J. Periaux, and O. Widlund, editors, </editor> <booktitle> Domain Decomposition Methods, </booktitle> <pages> pages 168-172. </pages> <publisher> SIAM, </publisher> <year> 1989. </year>
Reference-contexts: Another important result is the relation of the rate of convergence of the numerical SAM method to the mesh size of the discretization scheme. It is known (see <ref> [Dry89] </ref>, [OST86], [Tan87]) that for model problems with Dirichlet interface conditions and a 51 fixed aspect ratio of the overlapping area over the subdomains, the rate of convergence of numerical SAM does not depend on the mesh size. This is not true when mixed interface conditions are used [Tan92].
Reference: [DW87] <author> M. Dryja and Olof B. Widlund. </author> <title> An additive variant of the Schwarz alternating method for the case of many subregions. </title> <type> Technical Report 339, </type> <institution> Department of Computer Science, Courant Institute, </institution> <year> 1987. </year> <month> 130 </month>
Reference-contexts: This is so-called Multiplicative Schwarz Scheme which has been recently developed further with a variational framework [Lio88]. This Gauss-Seidel type scheme is inherently a sequential process. So the Additive Schwarz Scheme was designed by Dryja and Widlund <ref> [DW87] </ref> to exploit a parallelism. In fact, the Additive Schwarz Scheme can be considered as a continuous analog of the Jacobi type scheme for matrix equation problems.
Reference: [EKCS87] <author> D.J. Evans, L.-S. Kang, Y.-P. Chen, and J.-P. Shao. </author> <title> The convergence rate of the Schwarz alternating procedure (iv) : With pseudo-boundary relaxation factor. </title> <journal> Intern. J. Computer Math., </journal> <volume> 21 </volume> <pages> 185-203, </pages> <year> 1987. </year>
Reference-contexts: It appears that these results are among a few that study SAM at the discrete matrix equation level. However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. Our work is related to that of <ref> [EKCS87] </ref>, [RKL89], [RS89], [Kan89], and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. Specifically, paper [EKCS87] deals with 1-D and 2-D boundary value problems assuming a 2-way domain decomposition (k = 2), where the values of <p> Our work is related to that of <ref> [EKCS87] </ref>, [RKL89], [RS89], [Kan89], and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. Specifically, paper [EKCS87] deals with 1-D and 2-D boundary value problems assuming a 2-way domain decomposition (k = 2), where the values of the approximate solution along the two artificial boundaries are linear combinations of the two previous available ones (iterations). The theoretical and experimental results obtained in [EKCS87] are weaker than ours. <p> Specifically, paper <ref> [EKCS87] </ref> deals with 1-D and 2-D boundary value problems assuming a 2-way domain decomposition (k = 2), where the values of the approximate solution along the two artificial boundaries are linear combinations of the two previous available ones (iterations). The theoretical and experimental results obtained in [EKCS87] are weaker than ours. This is readily seen by simply comparing the values of the optimal convergence factor ranging from 0.339 to 0.887 (third column of Table 1 in [EKCS87]) against ours. In our case this factor is zero (spectral radius of the block Jacobi iteration matrix). <p> The theoretical and experimental results obtained in <ref> [EKCS87] </ref> are weaker than ours. This is readily seen by simply comparing the values of the optimal convergence factor ranging from 0.339 to 0.887 (third column of Table 1 in [EKCS87]) against ours. In our case this factor is zero (spectral radius of the block Jacobi iteration matrix). Paper [RKL89] deals with k-way (k 2) decompositions of 2-D boundary value problems with Dirichlet boundary conditions along the artificial boundaries.
Reference: [FS91] <author> A. Frommer and D. Szyld. </author> <title> H-splitting and Two-stage interative methods. </title> <type> Technical Report 92-71, </type> <institution> Department of Mathematics, Temple University, Philadelphia,PA, </institution> <year> 1991. </year>
Reference-contexts: In many problems, these conditions may hold due to some further property of the matrix A; as for example, in the case of A being a positive definite matrix or a non-singular M -matrix or even a non-singular H-matrix (For corresponding definitions see, e.g., [BP79], [Var62, p85], [You71], <ref> [FS91, p7] </ref>).
Reference: [FU69] <author> L. W. Fischer and R. A. Usmani. </author> <title> Properties of some tridiagonal matrices and their application to boundary value problem. </title> <journal> SIAM J. Numer. Anal., </journal> <volume> 6 </volume> <pages> 127-142, </pages> <year> 1969. </year>
Reference-contexts: A technique for computing these vectors is suggested in [Tan92] (see also <ref> [FU69] </ref>). Moreover, 27 they can be derived from the analysis of a more general case which is formulated and treated in Section 1.3. The following lemma states the analytic expressions of g 1 ; g 2 ; g 3 while its proof contains an outline of their derivation. <p> ( m1 2 )cosh ( m+1 2 )) (1:47) On the other hand, if fi = 2, then g 1 = (m) ff (m+1) ; (ml) (ff1) g 3 = (m1) ff (m+1) : Proof : As we mentioned before, the expressions of t (1) (2) obtained from [Tan92] or <ref> [FU69] </ref> and as a special case from Proposition 1.3 in Section 1.3.
Reference: [GLR82] <author> I. Gohberg, P. Lancaster, and L. Rodman. </author> <title> Matrix Polynomials. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1982. </year>
Reference-contexts: The matrix difference equations in (1.55) can be solved by the nonmonic matrix polynomial theory <ref> [GLR82] </ref>. The nonmonic matrix polynomial () = U 2 + (D I) + L 2 4 g 2 g 3 2 7 (1:56) is the characteristic equation corresponding to the matrix difference equation (1.55). If (X; J ) is the finite Jordan pair of (1.56), Theorem 8.3 in [GLR82] gives the <p> polynomial theory <ref> [GLR82] </ref>. The nonmonic matrix polynomial () = U 2 + (D I) + L 2 4 g 2 g 3 2 7 (1:56) is the characteristic equation corresponding to the matrix difference equation (1.55). If (X; J ) is the finite Jordan pair of (1.56), Theorem 8.3 in [GLR82] gives the general solution of the homogeneous finite difference equations in (1.55) by the expressions Z i = XJ i C; i = 0; 1; 2; ; (1:57) where C = [c 0 ; c 1 ; c 2 ] T is a constant vector to be determined by the
Reference: [Hal58] <author> P.R. Halmos. </author> <title> Finite-dimensional Vector Spaces. </title> <publisher> Van Nostrand, </publisher> <address> Prince-ton, N.J., </address> <year> 1958. </year>
Reference-contexts: Using tensor product notation (see <ref> [Hal58] </ref> and also [LRT64] in which tensor products in connection with BVP's were used for the first time), the matrix A in (2.2) can be written as A = T n (fi) I n + I n T n (2) (2:3) where fi = 2 + qh 2 and the T
Reference: [HR92] <author> E.N. Houstis and J.R. Rice. </author> <title> Parallel ELLPACK: A development and problem solving environment for high performance computing machines. </title> <editor> In P.W. Gaffney and E.N. Houstis, editors, </editor> <booktitle> Programming Environments for High-Level Scientific Problem Solving, </booktitle> <pages> pages 229-241, </pages> <address> Amsterdam, 1992. </address> <publisher> North-Holland. </publisher>
Reference-contexts: Thus, several heuristics have been proposed for this problem 82 [CHH + 91], [Byu94]. Throughout we assume that this partitioning is predetermined. Furthermore, our implementation of the four discretization procedures utilizes the domain decomposition data structures adopted in Parallel (//) ELLPACK <ref> [HR92] </ref> for distributed memory machines. We describe the data structures used for 2-D grid and finite element mesh decompositions later on in Tables 4.1 and 4.2. Note that Table 4.1 consists of three parts. The first two parts are needed for the finite difference scheme with rectangular domains. <p> PARALLEL STATIONARY ITERATIVE METHODS FOR DISTRIBUTED MEMORY MACHINES In this chapter we discuss the implementation of the ITPACK library [KRDG82] in the parallel (//)ELLPACK environment <ref> [HR92] </ref> and report on its performance on the nCUBE II parallel machine. In this study, we are concerned with the solution of the algebraic equations obtained from the discretization of second order elliptic PDEs on rectangles and general domains with mixed boundary conditions using finite difference and finite element approximations.
Reference: [Hug87] <author> Thomas J.R. Hughes. </author> <title> The Finite Element Method : Linear Static and Dynamic Finite Element Analysis. </title> <publisher> Prentice-Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1987. </year>
Reference-contexts: Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method [RB85]. The fourth procedure considered is a parallel implementation of the Ritz-Galerkin method in the approximation space of piecewise linear polynominals defined on triangles [AB84], [OBC81], <ref> [Hug87] </ref>, [Joh87] utilizing an partitioning of the underlying triangular mesh. This chapter is organized as follows. In Section 4.1 we describe the domain decomposition methodology employed and the parallel discretization procedures developed.
Reference: [HY81] <author> Louis A. Hageman and David M. Young. </author> <title> Applied Iterative Methods. </title> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1981. </year>
Reference-contexts: fi; fi ff) F 0 0 m (fi ff; fi; fi ff) E 0 0 T 1 0 T 1 3 7 7 : (1:38) Moreover, the block tridiagonal structure of f T n of (1.36) implies that f T n possesses Young's block property A (see [Var62], [You71], [BP79], <ref> [HY81] </ref>). Thus, the convergence of the block Jacobi method implies that its Gauss-Seidel counterpart will converge asymptotically twice as fast, while its optimal SOR counterpart will converge asymptotically much faster. <p> If ( e J) is a set of real number, it is well known that the Young's optimal value of the SOR parameter is given by 2=(1 + q 1 ( e J) 2 ), (see [You54], [You71], [Var62], [BP79], <ref> [HY81] </ref>).
Reference: [Joh87] <author> Clae Johnson. </author> <title> The Numerical Solution of Partial Differential Equations by the Finite Element Method. </title> <publisher> Cambridge University Press, </publisher> <year> 1987. </year>
Reference-contexts: Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method [RB85]. The fourth procedure considered is a parallel implementation of the Ritz-Galerkin method in the approximation space of piecewise linear polynominals defined on triangles [AB84], [OBC81], [Hug87], <ref> [Joh87] </ref> utilizing an partitioning of the underlying triangular mesh. This chapter is organized as follows. In Section 4.1 we describe the domain decomposition methodology employed and the parallel discretization procedures developed.
Reference: [Kan89] <author> L.-S. Kang. </author> <title> Domain decomposition methods and parallel algorithms. </title> <editor> In Tony F. Chan, Roland Glowinski, Jacques Periaux, and Olof B. Wid-lund, editors, </editor> <booktitle> Second International Symposium on Domain Decomposition Methods for Partial Differential Equations, </booktitle> <pages> pages 207-218, </pages> <address> Philadelphia, PA, </address> <year> 1989. </year> <note> SIAM. </note>
Reference-contexts: However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. Our work is related to that of [EKCS87], [RKL89], [RS89], <ref> [Kan89] </ref>, and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. <p> Although mixed boundary conditions on the artificial boundaries are allowed, they are restricted to cases of Dirichlet/Dirichlet, Dirichlet/Neumann and Neumann/Neumann only. In our work general mixed interface conditions without restrictions are allowed. Finally, paper <ref> [Kan89] </ref> presents a survey of author's previous works on SAM approach. The results of Theorem 3.6 and 3.7 in [Kan89] seem to be close to our result of Theorem 1.2 in Section 1.3.3. The main difference is that the results in [Kan89] are obtained at a functional equation level, i.e. they <p> In our work general mixed interface conditions without restrictions are allowed. Finally, paper <ref> [Kan89] </ref> presents a survey of author's previous works on SAM approach. The results of Theorem 3.6 and 3.7 in [Kan89] seem to be close to our result of Theorem 1.2 in Section 1.3.3. The main difference is that the results in [Kan89] are obtained at a functional equation level, i.e. they use Fourier analysis to determine a set of parameters to make the convergence factor of SAM be zero, while <p> Finally, paper <ref> [Kan89] </ref> presents a survey of author's previous works on SAM approach. The results of Theorem 3.6 and 3.7 in [Kan89] seem to be close to our result of Theorem 1.2 in Section 1.3.3. The main difference is that the results in [Kan89] are obtained at a functional equation level, i.e. they use Fourier analysis to determine a set of parameters to make the convergence factor of SAM be zero, while we determine the corresponding set of parameters by examining the spectral radius of the Jacobi iteration matrix of MPSS. 53 2.
Reference: [KHHR92] <author> S.-B. Kim, A. Hadjidimos, E.N. Houstis, and J.R. Rice. </author> <title> Multi-parametrized schwarz splittings. </title> <type> Technical Report CSD-TR 92-073, </type> <institution> Department of Computer Sciences, Purdue University, </institution> <year> 1992. </year>
Reference-contexts: This is given in the Theorem 1.1. In the proof of the theorem, we refer to Proposition 1.2 which uses the matrix polynomial theory to solve a system of difference equations with vectors as unknowns and matrices as coefficients. Similar techniques are also found in [Tan87], <ref> [KHHR92] </ref>, [LHHR92]. 29 Proposition 1.2 Let G k (k 3) be the (k 1) fi (k 1) block matrix G k = 6 6 6 6 6 6 6 6 E U 0 0 0 0 L D U 0 . . . . . . . . . 0 0
Reference: [KK58] <author> L. V. Kantorovich and V. I. </author> <title> Krylov. Approximate Methods of Higher Analysis. </title> <editor> P. </editor> <publisher> Noordhoff Ltd, </publisher> <address> Groningen, The Netherlands, 4th edition, </address> <year> 1958. </year> <month> 131 </month>
Reference-contexts: Under certain conditions [CH62], <ref> [KK58] </ref>, it can be proved that the sequence fu (i) (i) 2 g produced from (1.6) converges to the solutions fu 1 ; u 2 g of the pair of problems (1.4) and (1.5), from which the solution of problem (1.1) can be constructed. <p> Under certain conditions [CH62], <ref> [KK58] </ref>, the sequence fu (i) (i) ; u k g converges to the solution of problem (1.1). Classical SAM is a special case of this generalized SAM. As a more general version of SAM, multi-color SAM is presented in [Tan87].
Reference: [KRDG82] <author> D.J. Kincaid, J. Respess, Young D.M., and R. Grimes. </author> <title> Algorithm 586: ITPACK 2c: A Fortran package for solving large sparse linear systems by adaptive accelerated iterative methods. </title> <journal> ACM Trans. Math. Soft., </journal> <volume> 8 </volume> <pages> 302-322, </pages> <year> 1982. </year>
Reference-contexts: PARALLEL STATIONARY ITERATIVE METHODS FOR DISTRIBUTED MEMORY MACHINES In this chapter we discuss the implementation of the ITPACK library <ref> [KRDG82] </ref> in the parallel (//)ELLPACK environment [HR92] and report on its performance on the nCUBE II parallel machine. <p> A detailed description of each ITPACK module can be found in <ref> [KRDG82] </ref> and 104 Table 5.1 The names of the parallelized ITPACK modules, the orderings scheme assumed, and the iteration method implemented.
Reference: [LHHR92] <author> Y.-L. Lai, A. Hadjidimos, E.N. Houstis, and J.R. Rice. </author> <title> On the iterative solution of Hermite collocation equations. </title> <type> Technical Report CSD-TR 92-026, </type> <institution> Department of Computer Sciences, Purdue University, </institution> <year> 1992. </year>
Reference-contexts: This is given in the Theorem 1.1. In the proof of the theorem, we refer to Proposition 1.2 which uses the matrix polynomial theory to solve a system of difference equations with vectors as unknowns and matrices as coefficients. Similar techniques are also found in [Tan87], [KHHR92], <ref> [LHHR92] </ref>. 29 Proposition 1.2 Let G k (k 3) be the (k 1) fi (k 1) block matrix G k = 6 6 6 6 6 6 6 6 E U 0 0 0 0 L D U 0 . . . . . . . . . 0 0 0
Reference: [Lio88] <author> Pierre L. Lions. </author> <title> On the Schwarz alternating method. </title> <editor> I. In Roland Glowin-ski, Gene H. Golub, Gerard A. Meurant, and Jacques Periaux, editors, </editor> <booktitle> First International Symposium on Domain Decomposition Methods for Partial Differential Equations, </booktitle> <pages> pages 1-42, </pages> <address> Philadelphia, PA, </address> <year> 1988. </year> <note> SIAM. </note>
Reference-contexts: As in Section 1.1.1, note again that this method of solving a continuous problem is in complete analogy with the Gauss-Seidel idea when applied for the solution of matrix equation problems. This is so-called Multiplicative Schwarz Scheme which has been recently developed further with a variational framework <ref> [Lio88] </ref>. This Gauss-Seidel type scheme is inherently a sequential process. So the Additive Schwarz Scheme was designed by Dryja and Widlund [DW87] to exploit a parallelism. In fact, the Additive Schwarz Scheme can be considered as a continuous analog of the Jacobi type scheme for matrix equation problems.
Reference: [LRT64] <author> R.E. Lynch, J.R. Rice, and D.H. Thomas. </author> <title> Direct solution of partial difference equations by tensor products. </title> <journal> Numer. Math., </journal> <volume> 6 </volume> <pages> 185-189, </pages> <year> 1964. </year>
Reference-contexts: Using tensor product notation (see [Hal58] and also <ref> [LRT64] </ref> in which tensor products in connection with BVP's were used for the first time), the matrix A in (2.2) can be written as A = T n (fi) I n + I n T n (2) (2:3) where fi = 2 + qh 2 and the T j (x) is
Reference: [Lyn89] <author> Robert E. Lynch. </author> <title> Increasing the efficiency of vector ITPACK. </title> <type> Technical Report CSD-TR-866, </type> <institution> Department of Computer Sciences, Purdue University, </institution> <year> 1989. </year>
Reference-contexts: Then the grid of the rectangular domain encapsulates a grid on the original domain. Specifically, we assign identity equations at the exterior grid points. These artificial equations are uncoupled from the active ones. This approach is similar to the one devised by Lynch <ref> [Lyn89] </ref> to implement the ITPACK routines on vector machines. Its advantage is that the partitioning of the larger grid is rather trivial. This third module for 5-point star difference discretization is called encapsulated 5-point star.
Reference: [Mil65] <author> K. Miller. </author> <title> Numerical analogs to the Schwarz alternating procedure. </title> <journal> Nu-mer. Math., </journal> <volume> 7 </volume> <pages> 91-103, </pages> <year> 1965. </year>
Reference-contexts: SAM has a high potential of parallelism, so it has been generalized in many respects. Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. <ref> [Mil65] </ref>, [Rod85], [RS84a], [RS84b], [RS85]). <p> Miller <ref> [Mil65] </ref> first intro duced a numerical analog of the SAM. Rodrigue and Simon's work [RS84a] is among the very first ones that studied SAM and its properties at the discrete matrix equation level. <p> 21 A 22 0 A 23 A 31 0 A 32 A 33 7 7 7 7 5 6 6 6 6 4 e x 2 2 3 7 7 7 7 = 6 6 6 6 4 f 2 f 3 7 7 7 7 5 Under certain conditions <ref> [RS84a, Mil65, Tan87] </ref>, the procedure in (1.9) will converge to the solution of equation (1.10) with e x 2 = e x 0 2 ,where [ e x T 1 ; e x T 3 ] T is a solution of the matrix equation (1.8).
Reference: [OBC81] <author> J.T. Oden, E. B. Becker, and G. F. Carey. </author> <title> Finite Elements (I). </title> <publisher> Prentice-Hall,, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1981. </year>
Reference-contexts: Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method [RB85]. The fourth procedure considered is a parallel implementation of the Ritz-Galerkin method in the approximation space of piecewise linear polynominals defined on triangles [AB84], <ref> [OBC81] </ref>, [Hug87], [Joh87] utilizing an partitioning of the underlying triangular mesh. This chapter is organized as follows. In Section 4.1 we describe the domain decomposition methodology employed and the parallel discretization procedures developed.
Reference: [OST86] <author> J. Oliger, W. Skamarock, and W.P. Tang. </author> <title> Schwarz alternating methods and its SOR accelerations. </title> <type> Technical report, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1986. </year>
Reference-contexts: Another important result is the relation of the rate of convergence of the numerical SAM method to the mesh size of the discretization scheme. It is known (see [Dry89], <ref> [OST86] </ref>, [Tan87]) that for model problems with Dirichlet interface conditions and a 51 fixed aspect ratio of the overlapping area over the subdomains, the rate of convergence of numerical SAM does not depend on the mesh size. This is not true when mixed interface conditions are used [Tan92].
Reference: [RB85] <author> J.R. Rice and R.F. Boisvert. </author> <title> Solving Elliptic Problems using ELLPACK. </title> <publisher> Springer-Verlag, </publisher> <address> New York, </address> <year> 1985. </year>
Reference-contexts: They are defined on a predetermined partitioning of a grid or mesh [CHH + 91]. Three of these procedures are based on the ELLPACK implementation of 5-point finite difference method <ref> [RB85] </ref>. The fourth procedure considered is a parallel implementation of the Ritz-Galerkin method in the approximation space of piecewise linear polynominals defined on triangles [AB84], [OBC81], [Hug87], [Joh87] utilizing an partitioning of the underlying triangular mesh. This chapter is organized as follows. <p> (i),iconn (i+ 1)1 ) are the (local) indices of the adjacent elements of i-th (lo cal index) mesh point iconn numnp+1 See the description for the array nconn 86 4.1.1 Parallel 5-point Star This procedure is a generalization of the sequential 5-point star procedure implemented in the sequential ELLPACK library <ref> [RB85] </ref>. Both the sequential and parallel codes have almost the same structure and are implemented in two modules. One (q35pmn) is for rectangular domains and the other (q35gmn) is for general two-dimensional domains. <p> A 150 fi 150 grid on the encapsulated L-shaped domain is used and single precision arithmetic. The Jacobi-CG solver is terminated when the convergence test is taken to be 5:96 fi 10 5 (see <ref> [RB85] </ref>). The L-shaped domain is selected so that the partitioning of the grid is optimal for the general parallel 5-point star module for the machine configuration used. <p> A 150 fi 150 grid on the encapsulated L-shaped domain is used and single precision arithmetic. The Jacobi-CG solver is terminated when the convergence test is taken to be 5:96 fi 10 5 (see <ref> [RB85] </ref>). The L-shaped domain is selected so that the partitioning of the grid is optimal for the encapsulated parallel 5-point star module for the machine configuration used. <p> and RB stand for natural and red/black ordering, respectively. //ITPACK module Indexing Method SOR RB Successive Over-Relaxation Jacobi-CG N/RB Jacobi conjugate gradient (CG) Jacobi-SI N/RB Jacobi with Chebyshev acceleration (SI) RSCG RB Reduced system CG RSSI RB Reduced system SI SSOR-CG RB Symmetric SOR CG SSOR-SI RB Symmetric SOR SI <ref> [RB85] </ref>. The parallel ITPACK modules are based on the sequential ones, thus their theoretical behavior has not been altered. In this section, we discuss the paralleliza-tion methodology adopted for their implementation within the parallel ELLPACK environment. <p> A 100 fi 100 grid is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. <p> A mesh of 13780 elements is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. The error is the maximum of the absolute values of the estimated solution value minus the true solution value over all grid points. <p> A 100 fi 100 grid is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. <p> A mesh of 13780 elements is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. The error is the maximum of the absolute values of the estimated solution value minus the true solution value over all grid points. <p> A 100 fi 100 grid is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. <p> A mesh of 13780 elements is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. The error is the maximum of the absolute values of the estimated solution value minus the true solution value over all grid points. <p> A 100 fi 100 grid is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. <p> A mesh of 13780 elements is used and single precision arithmetic. The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. The speedup is given in parenthesis after the time in 64 processors. The error is the maximum of the absolute values of the estimated solution value minus the true solution value over all grid points. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations. <p> The iteration process is terminated when the ITPACK convergence test is taken to be 5:96 fi 10 5 <ref> [RB85] </ref> or after 1000 iterations.
Reference: [Rib90] <author> C.J. Ribbens. </author> <type> Personal communication. </type> <year> 1990. </year>
Reference-contexts: basic theorems for SEM and SEE in [Tan87] to the symmetric cases SSEM and SSEE. 3.1 Symmetric Schwarz Enhanced Matrix (SSEM) and Equation (SSEE) To preserve possible symmetry of the original matrix, we give the following defini tion of a Symmetric Schwarz Enhanced Matrix, using an idea suggested by Ribbens <ref> [Rib90] </ref>. Consider the matrix equation in (1.11) where we assume that the matrix A is real symmetric. <p> Since any regular splitting of an M-matrix is a convergent splitting (see Theorem 3.13 in [Var62, p84] ), the conclusion follows. In this section we have presented the basic theoretical analysis mainly for the real symmetric positive definite case. Before our theory was developed, Ribbens <ref> [Rib90] </ref> reported that preliminary experiments carried out by him had produced numerical result that seemed to be worth being investigated further.
Reference: [RKL89] <author> G. Rodrigue, L.-S. Kang, and Y.-H. Liu. </author> <title> Convergence and comparison analysis of some numerical Schwarz methods. </title> <journal> Numer. Math., </journal> <volume> 56 </volume> <pages> 123-138, </pages> <year> 1989. </year>
Reference-contexts: It appears that these results are among a few that study SAM at the discrete matrix equation level. However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. Our work is related to that of [EKCS87], <ref> [RKL89] </ref>, [RS89], [Kan89], and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. <p> However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. Our work is related to that of [EKCS87], <ref> [RKL89] </ref>, [RS89], [Kan89], and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. <p> This is readily seen by simply comparing the values of the optimal convergence factor ranging from 0.339 to 0.887 (third column of Table 1 in [EKCS87]) against ours. In our case this factor is zero (spectral radius of the block Jacobi iteration matrix). Paper <ref> [RKL89] </ref> deals with k-way (k 2) decompositions of 2-D boundary value problems with Dirichlet boundary conditions along the artificial boundaries. General convergence results (not explicit formulas) are given for Jacobi and/or Gauss-Seidel inner/outer iterative methods. Unfortunately, for mixed boundary value conditions on the artificial boundaries, the regular splitting theory of [RKL89] <p> <ref> [RKL89] </ref> deals with k-way (k 2) decompositions of 2-D boundary value problems with Dirichlet boundary conditions along the artificial boundaries. General convergence results (not explicit formulas) are given for Jacobi and/or Gauss-Seidel inner/outer iterative methods. Unfortunately, for mixed boundary value conditions on the artificial boundaries, the regular splitting theory of [RKL89] is not applicable to our case. This is mainly due to the fact that the corresponding N matrices in the 52 M N regular splittings are not nonnegative matrices as the regular splitting theory requires.
Reference: [Rod85] <author> G. Rodrigue. </author> <title> Inner/outer iterative methods and numerical Schwarz algorithms. </title> <journal> J. Parallel Computing, </journal> <volume> 2 </volume> <pages> 205-218, </pages> <year> 1985. </year>
Reference-contexts: SAM has a high potential of parallelism, so it has been generalized in many respects. Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. [Mil65], <ref> [Rod85] </ref>, [RS84a], [RS84b], [RS85]).
Reference: [RS84a] <author> G. Rodrigue and J. Simon. </author> <title> A generalization of the numerical Schwarz algorithm. </title> <editor> In R. Glowinski and J. Lions, editors, </editor> <booktitle> Computing Methods in Applied Sciences and Engineering VI, </booktitle> <pages> pages 273-281, </pages> <address> Amsterdam,New York,Oxford, 1984. </address> <publisher> North-Holland. </publisher> <pages> 132 </pages>
Reference-contexts: SAM has a high potential of parallelism, so it has been generalized in many respects. Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. [Mil65], [Rod85], <ref> [RS84a] </ref>, [RS84b], [RS85]). <p> Miller [Mil65] first intro duced a numerical analog of the SAM. Rodrigue and Simon's work <ref> [RS84a] </ref> is among the very first ones that studied SAM and its properties at the discrete matrix equation level. Further studies revealed that many results of the classical analysis in numerical linear algebra [Var62, You71] could be applied. <p> 21 A 22 0 A 23 A 31 0 A 32 A 33 7 7 7 7 5 6 6 6 6 4 e x 2 2 3 7 7 7 7 = 6 6 6 6 4 f 2 f 3 7 7 7 7 5 Under certain conditions <ref> [RS84a, Mil65, Tan87] </ref>, the procedure in (1.9) will converge to the solution of equation (1.10) with e x 2 = e x 0 2 ,where [ e x T 1 ; e x T 3 ] T is a solution of the matrix equation (1.8). <p> Therefore if e A 1 exists, the (unique) solution e x of e A e x = e f is the augmented vector of x. Rodrigue and Simon <ref> [RS84a] </ref> proved that the necessary and sufficient condition for the existence of e A 1 is that all A 1 2i;2i ; i = 1; ; k 1, exist. <p> As a modern extension of SAM Rodrigue and Simon <ref> [RS84a] </ref> suggested the following splitting.
Reference: [RS84b] <author> G. Rodrigue and J. Simon. </author> <title> Jacobi splitting and the method of overlapping domains for solving elliptic PDE's. </title> <editor> In R. Vichnevetsky and R. Stepleman, editors, </editor> <booktitle> Advances in Computer Methods for Partial Differential Equations V, </booktitle> <pages> pages 383-386. IMACS, </pages> <year> 1984. </year>
Reference-contexts: SAM has a high potential of parallelism, so it has been generalized in many respects. Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. [Mil65], [Rod85], [RS84a], <ref> [RS84b] </ref>, [RS85]).
Reference: [RS85] <author> G. Rodrigue and P. </author> <title> Saylor. Inner/outer iterative methods and numerical Schwarz algorithms-ii. </title> <booktitle> In Proceedings of the IBM Conference on Vector and Parallel Computations for Scientific Computing. IBM, </booktitle> <year> 1985. </year>
Reference-contexts: SAM has a high potential of parallelism, so it has been generalized in many respects. Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. [Mil65], [Rod85], [RS84a], [RS84b], <ref> [RS85] </ref>).
Reference: [RS89] <author> G. Rodrigue and S. Shah. </author> <title> Pseudo-boundary conditions to accelerate parallel Schwarz methods. </title> <editor> In G. Carey, editor, </editor> <booktitle> Parallel Supercomputing : Methods, Algorithms, and Applications, </booktitle> <pages> pages 77-87, </pages> <address> New York, 1989. </address> <publisher> Wiley. </publisher>
Reference-contexts: However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. Our work is related to that of [EKCS87], [RKL89], <ref> [RS89] </ref>, [Kan89], and to some of the references cited in them. With the exception of [RKL89], these papers approach the SAM analysis at a functional level. <p> It is worth noticing that in our case the non-zero elements of the N matrices are either 1 or ff i with ff i 2 [0; 1). Obviously, only for ff i = 0 (Dirichlet boundary conditions on the artificial boundaries) the N matrices above are nonnegative. Paper <ref> [RS89] </ref> applies SAM on 2 and 3-way (k = 2; 3) decompositions of 2-D boundary value problems. Although mixed boundary conditions on the artificial boundaries are allowed, they are restricted to cases of Dirichlet/Dirichlet, Dirichlet/Neumann and Neumann/Neumann only. In our work general mixed interface conditions without restrictions are allowed.
Reference: [Sch69] <author> H.A. Schwarz. </author> <title> Uber einige abbildungsaufgaben. </title> <journal> J. Reine Angew. Math., </journal> <volume> 70 </volume> <pages> 105-120, 1869. </pages>
Reference-contexts: Among them, there is the so-called Schwarz Splitting as a discrete version of SAM (see, e.g. [Mil65], [Rod85], [RS84a], [RS84b], [RS85]). We introduce the original SAM in Section 1.1.1, its generalization in Section 1.1.2, and its numerical version (Schwarz Splitting) in Section 1.1.3. 1.1.1 Schwarz Alternating Method (SAM) Schwarz <ref> [Sch69] </ref> showed that, for a domain consisting of the union of two rectangular domains or disks, one could construct a sequence of solutions of the Laplace equation in the two subdomains which would converge to the solution of the Laplace equation in their union.
Reference: [Tan87] <author> W.P. Tang. </author> <title> Schwarz Splitting and Template Operators. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Stanford University, </institution> <year> 1987. </year>
Reference-contexts: Under certain conditions [CH62], [KK58], the sequence fu (i) (i) ; u k g converges to the solution of problem (1.1). Classical SAM is a special case of this generalized SAM. As a more general version of SAM, multi-color SAM is presented in <ref> [Tan87] </ref>. As in Section 1.1.1, note again that this method of solving a continuous problem is in complete analogy with the Gauss-Seidel idea when applied for the solution of matrix equation problems. This is so-called Multiplicative Schwarz Scheme which has been recently developed further with a variational framework [Lio88]. <p> Further studies revealed that many results of the classical analysis in numerical linear algebra [Var62, You71] could be applied. In the following we basically use the notation and adopt the terminology in <ref> [Tan87] </ref>. <p> 21 A 22 0 A 23 A 31 0 A 32 A 33 7 7 7 7 5 6 6 6 6 4 e x 2 2 3 7 7 7 7 = 6 6 6 6 4 f 2 f 3 7 7 7 7 5 Under certain conditions <ref> [RS84a, Mil65, Tan87] </ref>, the procedure in (1.9) will converge to the solution of equation (1.10) with e x 2 = e x 0 2 ,where [ e x T 1 ; e x T 3 ] T is a solution of the matrix equation (1.8). <p> Following Tang <ref> [Tan87] </ref>, we call the equation (1.10) the Schwarz Enhanced Equation (SEE) of the original equation (1.8) and the corresponding matrix e A in (1.10) the Schwarz Enhanced Matrix (SEM) of the matrix A in (1.8). <p> It turns out that these conditions imply the equivalence of the linear systems (1.33) and (1.35) ( <ref> [Tan87, Tan92] </ref> ). <p> This is given in the Theorem 1.1. In the proof of the theorem, we refer to Proposition 1.2 which uses the matrix polynomial theory to solve a system of difference equations with vectors as unknowns and matrices as coefficients. Similar techniques are also found in <ref> [Tan87] </ref>, [KHHR92], [LHHR92]. 29 Proposition 1.2 Let G k (k 3) be the (k 1) fi (k 1) block matrix G k = 6 6 6 6 6 6 6 6 E U 0 0 0 0 L D U 0 . . . . . . . . . 0 <p> Another important result is the relation of the rate of convergence of the numerical SAM method to the mesh size of the discretization scheme. It is known (see [Dry89], [OST86], <ref> [Tan87] </ref>) that for model problems with Dirichlet interface conditions and a 51 fixed aspect ratio of the overlapping area over the subdomains, the rate of convergence of numerical SAM does not depend on the mesh size. This is not true when mixed interface conditions are used [Tan92]. <p> So far we have studied SAM at a discrete algebraic level for a class of multi-parameter boundary value problems and finite difference discretization schemes. Our study generalizes, extends and improves the recent results presented in <ref> [Tan87] </ref> and [Tan92]. It appears that these results are among a few that study SAM at the discrete matrix equation level. However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. <p> SSEM and SSEE have much in common with SEM and SEE. In this chapter, we extend some of the basic theorems for SEM and SEE in <ref> [Tan87] </ref> to the symmetric cases SSEM and SSEE. 3.1 Symmetric Schwarz Enhanced Matrix (SSEM) and Equation (SSEE) To preserve possible symmetry of the original matrix, we give the following defini tion of a Symmetric Schwarz Enhanced Matrix, using an idea suggested by Ribbens [Rib90].
Reference: [Tan92] <author> W.P. Tang. </author> <title> Generalized Schwarz splittings. </title> <journal> SIAM J. Sci. Stat. Comput., </journal> <volume> 13 </volume> <pages> 573-595, </pages> <year> 1992. </year>
Reference-contexts: In Sections 1.2 and 1.3, we consider the convergence properties of Schwarz Splitting with Jacobi-type iteration and parameterized mixed (Dirichlet and Neumann) interface conditions with one and several parameters. The One-Parameter (!) Schwarz Splitting with Jacobi iterations was considered in <ref> [Tan92] </ref>. In Section 1.2 we review this One-Parameter case and then derive explicit and implicit analytic expressions for the optimal value of ff involved. In Section 1.3 we formulate and analyze a Multi-Parameterized Numerical SAM framework whose mixed interface conditions in each subdomain are controlled by different parameters. <p> Tang <ref> [Tan92] </ref>, among others, proposed a successful coupling on the artificial boundary. Let us introduce his generalized version of SAM and Generalized Schwarz Splitting. Consider again the Dirichlet boundary value problem (1.1). The classical SAM uses the Dirichlet boundary conditions on the artificial boundary, but G. <p> Let us introduce his generalized version of SAM and Generalized Schwarz Splitting. Consider again the Dirichlet boundary value problem (1.1). The classical SAM uses the Dirichlet boundary conditions on the artificial boundary, but G. Rodrigue suggested the use of mixed boundary condition and Tang <ref> [Tan92] </ref> used the following coupling g (u 1 )j 1;2 = g (u 2 ); (1:15) on the artificial boundaries 1;2 , 2;1 in (1.2), respectively, where g (u) = !u + (1 !) @n with @u @n denoting the outwardly directed normal derivative on the artificial boundaries. <p> In <ref> [Tan92] </ref>, it is shown that a good choice of the splitting of A 22 can significantly improve the convergence of SAM. <p> The relation between ! and ff will be explained in Section 1.2.1. The Parameterized Schwarz Splitting is a special case of the Generalized Schwarz Splitting. Tang <ref> [Tan92] </ref> applied a single parameter ! on the mixed interface conditions in (1.16). Tang noted that ! is a function of the parameter ff and h where h is the discretization size. <p> For the general case k 4, a 2 (k 1) fi 2 (k 1) matrix was derived whose eigenvalue spectrum definitely includes all the non-zero eigenvalues of the Jacobi matrix. In Sections 1.2.1 and 1.2.2, we summarize the results in <ref> [Tan92] </ref>. In Section 1.2.3 we determine analytically the exact value, if possible, of the parameter ff that minimizes the spectral radius of the block Jacobi iteration matrix of the Generalized Schwarz Splitting. <p> circled points in Figure 1.3 represent the artificial boundaries (interfaces) of the subdomains on which we force the solutions of the local BVP to satisfy the parameterized mixed interface conditions (1.16) with ! = 1 ff + ffh 18 The derivation of this formula for ! is not included in <ref> [Tan92] </ref>. We derive it in the following proposition which gives a standard equal-spaced discretization. <p> It turns out that these conditions imply the equivalence of the linear systems (1.33) and (1.35) ( <ref> [Tan87, Tan92] </ref> ). <p> More generally, if ( e J) is a set of complex number satisfying some conditions, the optimal SOR parameter can be found by the Young-Eidson's algorithm (see [YE70]. [You71]). 23 In the following we summarize the observations of <ref> [Tan92] </ref> in two Lemmas 1.1 and 1.2 and derive the optimal values of the parameter ff explicitly for the special cases k = 2; 3 and show the conditions that ff satisfies in the general case. <p> Here we present the derivation of G 3 from W since it was not included in <ref> [Tan92] </ref>. 25 For this derivation we let e P be the permutation matrix that moves the columns 1; 4; 5; 8 to the columns 5; 6; 7; 8, respectively, and define the matrix Q = 6 6 6 6 6 6 6 6 6 6 6 6 1 ff 0 0 <p> The corresponding result is given in <ref> [Tan92] </ref> and is stated here in the following lemma. 26 Lemma 1.2 For k ( 3) overlapping subdomains, the non-zero eigenvalues of the Jacobi matrix ~ J are included in those of the following (k 1) fi (k 1) block matrix G k = 6 6 6 6 6 6 6 <p> f0g: (1:45) Remark 1.1 For k = 2 overlapping subdomains, it can be seen that the matrix G 2 is given by G 2 = 6 0 g 1 3 5 : (1:46) 1.2.3 Determination of the Optimal Parameter In Section 1.2.2 we summarized the results derived by Tang in <ref> [Tan92] </ref>. In this subsection we address the open problem of determining analytically the exact optimal values of ff: This problem can be formulated as follows. <p> A technique for computing these vectors is suggested in <ref> [Tan92] </ref> (see also [FU69]). Moreover, 27 they can be derived from the analysis of a more general case which is formulated and treated in Section 1.3. <p> (ff cosh ( m1 2 )cosh ( m+1 2 )) (1:47) On the other hand, if fi = 2, then g 1 = (m) ff (m+1) ; (ml) (ff1) g 3 = (m1) ff (m+1) : Proof : As we mentioned before, the expressions of t (1) (2) obtained from <ref> [Tan92] </ref> or [FU69] and as a special case from Proposition 1.3 in Section 1.3. <p> Although we do not present the results here, we have verified Tang's numerical results in <ref> [Tan92] </ref> using his two-point BVP example in the 1PSS. For the numerical results presented in this thesis we have selected a different two-point BVP (His example does not have a first order term "4u"). <p> First, in Table 1.1 we show the convergence factor of SS computed after 3; 4 and 8 iterations for different domain splittings, overlaps, and local grid sizes. The results indicate slow convergence. Second, we present the convergence factor for the 1PSS method. It is worth recalling that Tang <ref> [Tan92] </ref> found experimentally the optimal value of the parameter 49 of this method for k = 3. As we have seen in Section 1.2, we have found the simple equations (1.66), (1.67) that the optimal values of 1PSS satisfy for any value of k. <p> Table 1.2 indicates the computed single parameter value and the convergence factor of the method computed after k iterations where k is the number of subdomains. Notice that in case k = 3 our theoretical value of ff coincides with the numerical value found by Tang in <ref> [Tan92] </ref>. Finally, our experiments indicate that MPSS achieves a convergence to relative ` 2 norm of 2 fi 10 15 after k iterations where k is the number of splittings. This is consistent for all k tried up to k = 64. <p> This is not true when mixed interface conditions are used <ref> [Tan92] </ref>. However, our investigation has shown that there are one-dimensional BV problems where the rate of convergence does not change with the mesh size even for mixed type interface conditions with appropriately chosen convex combinations of Dirichlet and Neumann boundary conditions. <p> So far we have studied SAM at a discrete algebraic level for a class of multi-parameter boundary value problems and finite difference discretization schemes. Our study generalizes, extends and improves the recent results presented in [Tan87] and <ref> [Tan92] </ref>. It appears that these results are among a few that study SAM at the discrete matrix equation level. However, there is plethora of studies (see the proceedings of the SIAM conferences on Domain Decomposition Methods) about SAM at various functional levels. <p> MULTI-PARAMETERIZED SCHWARZ SPLITTING FOR MULTI-DIMENSIONAL PROBLEMS The basic analysis of the Parameterized Schwarz Splitting with the one parameter case for two-dimensional problems was presented in <ref> [Tan92] </ref>. In this chapter, we develop a similar analysis for two-dimensional problems using a set of parameters ff i ; i = 1; 2; ; k 1, with k being the number of subdomains.
Reference: [Var62] <author> R.S. Varga. </author> <title> Matrix Iterative Analysis. </title> <publisher> Prentice-Hall, </publisher> <year> 1962. </year>
Reference-contexts: Miller [Mil65] first intro duced a numerical analog of the SAM. Rodrigue and Simon's work [RS84a] is among the very first ones that studied SAM and its properties at the discrete matrix equation level. Further studies revealed that many results of the classical analysis in numerical linear algebra <ref> [Var62, You71] </ref> could be applied. In the following we basically use the notation and adopt the terminology in [Tan87]. <p> In many problems, these conditions may hold due to some further property of the matrix A; as for example, in the case of A being a positive definite matrix or a non-singular M -matrix or even a non-singular H-matrix (For corresponding definitions see, e.g., [BP79], <ref> [Var62, p85] </ref>, [You71], [FS91, p7]). <p> It is not difficult to show that for fi 2, (B i C 0 i ) = T l (fi ff; fi; fi ff) is non-singular ( see Corollary 1 in <ref> [Var62, p.85] </ref>). It turns out that these conditions imply the equivalence of the linear systems (1.33) and (1.35) ( [Tan87, Tan92] ). <p> 4 m (fi; fi; fi ff) F 0 0 m (fi ff; fi; fi ff) E 0 0 T 1 0 T 1 3 7 7 : (1:38) Moreover, the block tridiagonal structure of f T n of (1.36) implies that f T n possesses Young's block property A (see <ref> [Var62] </ref>, [You71], [BP79], [HY81]). Thus, the convergence of the block Jacobi method implies that its Gauss-Seidel counterpart will converge asymptotically twice as fast, while its optimal SOR counterpart will converge asymptotically much faster. <p> If ( e J) is a set of real number, it is well known that the Young's optimal value of the SOR parameter is given by 2=(1 + q 1 ( e J) 2 ), (see [You54], [You71], <ref> [Var62] </ref>, [BP79], [HY81]). <p> Therefore by Lemma 3.2, zero cannot be an eigenvalue of b A, i.e., b A is invertible. Since A is a principal submatrix of A and any principal submatrix of a positive definite matrix or an M -matrix <ref> [Var62, p.85] </ref> is also a positive definite matrix or an M-matrix, respectively, we have the following corollaries. Corollary 3.1 The SSEM of any real symmetric positive definite matrix A is equivalent to A. <p> If A is an M-matrix, then D is a positive diagonal matrix and D 1 (D A) is non-negative and (D 1 (D A)) &lt; 1 (see Theorem 3.10 in <ref> [Var62, p.84] </ref>). Since A is a principal submatrix of A, A is an M-matrix, too. Similarly we have that ((D) 1 (D A)) &lt; 1, where D A = D A. <p> Therefore b A = c M c N is a regular splitting. Since any regular splitting of an M-matrix is a convergent splitting (see Theorem 3.13 in <ref> [Var62, p84] </ref> ), the conclusion follows. In this section we have presented the basic theoretical analysis mainly for the real symmetric positive definite case.
Reference: [Wu93] <author> Po-ting Wu. </author> <title> Parallel dynamic mesh generation and domain decomposition. </title> <type> Technical Report CSD-TR 93-075, </type> <institution> Department of Computer Sciences, Purdue University, </institution> <year> 1993. </year>
Reference-contexts: This is expected since the encapsulation approach utilizes 25% fewer processors. However, if we include the decomposition time then the encapsulation solution is more efficient by a factor 2 to 18 compared to optimal and MRSB ( multilevel recursive spectral bisection algorithm <ref> [Wu93] </ref>) general parallel 5-point star solutions. Note that Sun4-workstation used for 89 the decomposition is even faster than one processor of the nCUBE II. After a similar analysis of the data in Table 4.4, we conclude that the encapsulation technique coupled with pfip decomposition produces a more efficient solution. <p> The L-shaped domain is selected so that the partitioning of the grid is optimal for the general parallel 5-point star module for the machine configuration used. Encapsulated 5-point star General 5-point star Processors p fi p 1 fi p p fi 1 MRSB <ref> [Wu93] </ref> Optimal t s t s t s t s t s 4 129.98 2.71 126.46 2.78 133.66 2.63 89.23 3.94 89.21 3.95 64 11.26 31.27 13.62 25.83 13.61 25.86 8.84 39.80 8.61 40.88 (a) Timing (sec) and speedup of the two parallel finite difference discretization modules for different partitionings. <p> Encapsulated 5-point star General 5-point star Processors p fi p 1 fi p p fi 1 MRSB <ref> [Wu93] </ref> Optimal 1 2.67 2.67 2.67 7.19 2.87 16 1.51 2.93 2.84 171.69 4.44 (b) The cost of the partitions used. Time (sec) is measured on a Sun4-workstation. <p> Time (sec) is measured on a Sun4-workstation. Processors 4 16 64 Partitioning t s t s t s p fi p 1.46 0.69 1.46 0.69 1.31 0.76 p fi 1 1.50 0.67 1.50 0.67 1.58 0.63 MRSB <ref> [Wu93] </ref> 1.00 1.00 1.01 0.99 1.03 0.97 (c) Ratios of encapsulated to general (optimal) performance in solving the linear sys tem of equations. 92 Table 4.4 The discretization and solution timings (t) in second and speedups (s), the cost of the partitioning heuristics used, and the ratios of time ( t <p> The Jacobi-CG solver is terminated when the convergence test is taken to be 5:96 fi 10 5 (see [RB85]). The L-shaped domain is selected so that the partitioning of the grid is optimal for the encapsulated parallel 5-point star module for the machine configuration used. General Encapsulated Processors MRSB <ref> [Wu93] </ref> p fi p 1 fi p Optimal t s t s t s t s 4 157.83 3.84 156.17 3.88 159.31 3.81 204.23 2.97 64 15.12 40.12 14.89 40.74 14.89 40.72 17.60 34.47 (a) Timing (sec) and speedups of the two parallel finite difference discretization mod ules for different partitionings. <p> General Encap. Processors MRSB <ref> [Wu93] </ref> p fi p 1 fi p Optimal 1 22.87 10.40 10.52 3.29 16 251.03 20.19 18.79 1.44 (b) The cost of the partitions used. Time (sec) is measured on a Sun4-workstation. Processors 4 16 64 General partitioning t s t s t s MRSB [Wu93] 0.77 1.29 0.76 1.31 0.86 <p> General Encap. Processors MRSB <ref> [Wu93] </ref> p fi p 1 fi p Optimal 1 22.87 10.40 10.52 3.29 16 251.03 20.19 18.79 1.44 (b) The cost of the partitions used. Time (sec) is measured on a Sun4-workstation. Processors 4 16 64 General partitioning t s t s t s MRSB [Wu93] 0.77 1.29 0.76 1.31 0.86 1.16 p fi p 0.76 1.31 0.77 1.29 0.85 1.18 (c) Ratios of general to encapsulated performance in solving the linear system of equations. 93 4.1.3 Parallel Linear Triangular Finite Element Method In this section we describe the parallel implementation of the Ritz-Galerkin method based
Reference: [YE70] <author> D.M. Young and H.E. Eidson. </author> <title> On the determination of the optimum relaxation factor for the SOR method when the eigenvalues of the Jacobi matrix are complex. </title> <type> Technical Report Rep. </type> <institution> CNA-1, Center for Numerical Analysis, University of Texas, </institution> <year> 1970. </year>
Reference-contexts: More generally, if ( e J) is a set of complex number satisfying some conditions, the optimal SOR parameter can be found by the Young-Eidson's algorithm (see <ref> [YE70] </ref>. [You71]). 23 In the following we summarize the observations of [Tan92] in two Lemmas 1.1 and 1.2 and derive the optimal values of the parameter ff explicitly for the special cases k = 2; 3 and show the conditions that ff satisfies in the general case.
Reference: [You54] <author> D.M. Young. </author> <title> Iterative methods for solving partial difference equations of elliptic type. </title> <journal> Trans. Amer. Math. Soc., </journal> <volume> 76 </volume> <pages> 92-111, </pages> <year> 1954. </year>
Reference-contexts: If ( e J) is a set of real number, it is well known that the Young's optimal value of the SOR parameter is given by 2=(1 + q 1 ( e J) 2 ), (see <ref> [You54] </ref>, [You71], [Var62], [BP79], [HY81]).

References-found: 45

