URL: http://www.cs.cornell.edu/Info/People/kguo/papers/t1297.ps
Refering-URL: http://www.cs.cornell.edu/Info/People/kguo/home.html
Root-URL: http://www.cs.brown.edu/
Email: fkguo,hayden,rvr,vogels,keng@cs.cornell.edu  
Title: GSGC: An Efficient Gossip-Style Garbage Collection Scheme for Scalable Reliable Multicast  
Author: Katherine Guo, Mark Hayden, Robbert van Renesse, Werner Vogels and Kenneth P. Birman 
Keyword: Message stability, fault-tolerance, scalability, reliable multicast, simulation.  
Note: This work was supported by the ARPA/ONR grant N00014-96-1-1014 and the GTE graduate student grant to Horus research group.  
Address: Ithaca NY, 14853  
Affiliation: Department of Computer Science Cornell University  
Abstract: To deliver multicast messages reliably in a group, each member maintains copies of all messages it sends and receives in a buffer for potential local retransmission. The storage of these messages is costly and buffers may grow out of bound. Garbage collection is needed to address this issue. Garbage collection occurs once a process learns that a message in its buffer has been received by every process in the group. The message is declared stable and is released from the process's buffer. This paper proposes a gossip-style garbage collection scheme called GSGC for scalable reliable multicast protocols. This scheme achieves fault-tolerance and scalability without relying on the underlying multicast protocols. It collects and disseminates information in the multicast group by making each group member periodically gossip information to a random subset of the group. Extending the global gossip protocol further, this paper also investigates a local gossip scheme that achieves improved scalability and significantly better performance. Simulations conducted in a WAN environment are used to evaluate the performance of both schemes. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Ahuja, S. Keshav, and H. Saran. </author> <title> Design, implementation, and performance of a native mode ATM transport layer. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 4(4) </volume> <pages> 502-515, </pages> <month> August </month> <year> 1996. </year>
Reference-contexts: The router processing time for a message is 1 millisecond. The time needed for a host to send a message follows the formula t s (u) = 100 + 2 (94 + 35u=4000 + 50u=1000) + 50 = 338 + 47u=400 (microseconds) <ref> [1, 11] </ref>. The time needed for a host to receive a message is normally about 10% higher than the sending time since interrupts need to be handled [1]. It is set to t r (u) = 1:1 fi t s (u). <p> The time needed for a host to receive a message is normally about 10% higher than the sending time since interrupts need to be handled <ref> [1] </ref>. It is set to t r (u) = 1:1 fi t s (u). The queuing delays 10 incurred at the hosts and routers are also simulated by ns. The message header size is set to h = 32 bytes which is enough for most transport protocols [1, 16]. <p> It is set to t r (u) = 1:1 fi t s (u). The queuing delays 10 incurred at the hosts and routers are also simulated by ns. The message header size is set to h = 32 bytes which is enough for most transport protocols <ref> [1, 16] </ref>. Separate simulations are conducted for the stability and failure detection protocol.
Reference: [2] <author> K. Birman. </author> <title> The process group approach to reliable distributed computing. </title> <journal> Communications of the ACM, </journal> <volume> 9(12) </volume> <pages> 36-53, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: The message stability detection mechanism can also support atomic message ordering. For example, this research was triggered by a problem that a Swiss bank faced when using the Isis group communication system <ref> [2] </ref>. In their set-up, they had two server machines and about a 2 hundred PC workstations organized in a group. The servers broadcast updates to replicated data maintained at each of the workstations. The updates had to be delivered atomically, in spite of server failures. <p> In case of network partition, garbage collection is conducted in separate partitions. When the partitions merge into a whole group again, mechanisms in various reliable multicast protocols will allow members to catch up, for example, using state transfer to conduct repairs at the application level <ref> [2, 5] </ref>. GSGC is based on common assumptions about reliable multicast protocols. One assumption is that a multicast group of size n consists of a set of processes named from 1 to n. Each member of the group can be a sender multicasting data messages to the entire group.
Reference: [3] <author> J. E. Dennis, Jr. and R. B. Schnabel. </author> <title> Numerical Methods for Unconstrained Optimization and Nonlinear Equations. </title> <publisher> Prentice Hall Series in Computational Mathematics. Prentice-Hall, Inc., </publisher> <year> 1993. </year>
Reference-contexts: The process of finding the flat portion has two parts. The first part finds a step interval that achieves a near-minimum TPR, and the second part finds a window around that step interval. If TPR can be expressed as an analytical function, then Newton's method <ref> [3] </ref> can find its minimum. Otherwise, better approaches exist in experimental optimization. One such approach is the golden-ratio method [9]. Figures 10 and 11 present the two-part algorithm for finding the window of optimal step intervals. Different groups and network topology require different input values for the algorithm.
Reference: [4] <author> M. Doar and I. Leslie. </author> <booktitle> How bad is nave multicast routing? In Proceedings of IEEE INFOCOM'93, </booktitle> <pages> pages 82-89, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: To see the effect of the sub-group size on the protocol, the sub-group size is varied from 1 to 5. In a WAN, IP-multicast is not efficient in sending messages to small groups that are constantly changing <ref> [4] </ref>, thus b unicasts are used to send gossip messages to each sub-group of size b. For the fixed group size n = 200 with m = 50 senders, tests are conducted in two categories: the dense test and the sparse test.
Reference: [5] <author> D. Dolev, D. Malki, and R. </author> <title> Strong. An asynchronous membership protocol that tolerates partitions. </title> <type> Research report, </type> <institution> The Hebrew University of Jerusalem, </institution> <year> 1993. </year>
Reference-contexts: In case of network partition, garbage collection is conducted in separate partitions. When the partitions merge into a whole group again, mechanisms in various reliable multicast protocols will allow members to catch up, for example, using state transfer to conduct repairs at the application level <ref> [2, 5] </ref>. GSGC is based on common assumptions about reliable multicast protocols. One assumption is that a multicast group of size n consists of a set of processes named from 1 to n. Each member of the group can be a sender multicasting data messages to the entire group.
Reference: [6] <author> A. Erramili and R. P. Singh. </author> <title> A reliable and efficient multicast protocol for broadband broadcast networks. </title> <booktitle> In Proceedings of ACM SIGCOMM'87, </booktitle> <pages> pages 343-352, </pages> <address> Stowe, VT, </address> <month> August </month> <year> 1987. </year>
Reference-contexts: Also a failure detection mechanism is needed to report the current group membership, otherwise a failed member could prevent garbage collection altogether. We propose an efficient method for garbage collection at the transport level by using session messages <ref> [6, 7, 10] </ref>. It is called the Gossip-Style Garbage Collection (GSGC) service. At minimum cost, the GSGC service offers failure detection and buffer management to existing large scale reliable multicast protocols. The message stability detection mechanism can also support atomic message ordering.
Reference: [7] <author> S. Floyd, V. Jacobson, C. Liu, S. McCanne, and L. Zhang. </author> <title> A reliable multicast framework for light weight sessions and application level framing. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <month> November </month> <year> 1996. </year>
Reference-contexts: For example, reliable multicast is used in Distributed Interactive Simulations (DIS) for dynamic terrain updates [10]. It is used for dissemination of stock quotes to a large number of clients, and by web servers to send updates of web pages to their proxies. In scalable reliable multicast protocols <ref> [7, 15] </ref>, it is efficient to use the local repair scheme, that is, for each group member to retransmit messages in response to requests by other members that have detected message losses. <p> Also a failure detection mechanism is needed to report the current group membership, otherwise a failed member could prevent garbage collection altogether. We propose an efficient method for garbage collection at the transport level by using session messages <ref> [6, 7, 10] </ref>. It is called the Gossip-Style Garbage Collection (GSGC) service. At minimum cost, the GSGC service offers failure detection and buffer management to existing large scale reliable multicast protocols. The message stability detection mechanism can also support atomic message ordering. <p> The network topologies are based on some generic network simulation schemes used in <ref> [7] </ref>. To gain insight on scalability of the GSGC protocol, the simulations are conducted in a set of wide-area networks. Each network in the simulations consists of nodes and links.
Reference: [8] <author> K. Guo, R. van Renesse, W. Vogels, and K. Birman. </author> <title> Hierarchical message stability tracking protocols. </title> <type> Technical Report CS-TR 97-1647, </type> <institution> Department of Computer Science, Cornell University, </institution> <month> September </month> <year> 1997. </year>
Reference-contexts: One such problem appears when some interior nodes in the hierarchy crash. The chance for member crashes increases as the group size increases. In a large multicast group, membership change is frequent, requiring the hierarchy to be rebuilt 4 frequently. This fact makes the pure hierarchical approach not scalable <ref> [8] </ref>. On the other hand, for reliable multicast protocols like LBRM [10] and RMTP [15] with built-in hierarchical structures, these structures can also be used for garbage collection. <p> Since the management of group membership hierarchies is already provided by the multicast protocols, the hierarchical extensions of the nave method can be used to improve scalability <ref> [8] </ref>. The goal is to make the stability detection protocol robust and scalable. A robust protocol tolerates message losses and process crashes. A scalable protocol handles a large multicast group with frequent membership changes. <p> Since there is a limit on buffer space at multicast group members, a round of the stability protocol should start whenever the buffers reach some threshold. An analytical model for determination of this threshold is discussed in <ref> [8] </ref>. During a round of the stability detection protocol, a steady stream of new member joins creates new sequence number arrays needed for the calculation of the stability array. Message stability will not be reached unless new members stop joining the multicast group.
Reference: [9] <institution> Handbook of Mathematics. High Education Publishing House, Beijing, </institution> <year> 1979. </year>
Reference-contexts: If TPR can be expressed as an analytical function, then Newton's method [3] can find its minimum. Otherwise, better approaches exist in experimental optimization. One such approach is the golden-ratio method <ref> [9] </ref>. Figures 10 and 11 present the two-part algorithm for finding the window of optimal step intervals. Different groups and network topology require different input values for the algorithm.
Reference: [10] <author> H. Holbrook, S. Singhal, and D. Cheriton. </author> <title> Log-based receiver-reliable multicast for distributed interactive simulation. </title> <booktitle> In Proceedings of ACM SIGCOMM'95, </booktitle> <pages> pages 28-341, </pages> <address> Cambridge, MA, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: 1 Introduction Multicast communication is an efficient method for disseminating data in a multicast group with a sender and a set of receivers. Many multicast applications require reliable delivery of data to all the receivers. For example, reliable multicast is used in Distributed Interactive Simulations (DIS) for dynamic terrain updates <ref> [10] </ref>. It is used for dissemination of stock quotes to a large number of clients, and by web servers to send updates of web pages to their proxies. <p> Also a failure detection mechanism is needed to report the current group membership, otherwise a failed member could prevent garbage collection altogether. We propose an efficient method for garbage collection at the transport level by using session messages <ref> [6, 7, 10] </ref>. It is called the Gossip-Style Garbage Collection (GSGC) service. At minimum cost, the GSGC service offers failure detection and buffer management to existing large scale reliable multicast protocols. The message stability detection mechanism can also support atomic message ordering. <p> The chance for member crashes increases as the group size increases. In a large multicast group, membership change is frequent, requiring the hierarchy to be rebuilt 4 frequently. This fact makes the pure hierarchical approach not scalable [8]. On the other hand, for reliable multicast protocols like LBRM <ref> [10] </ref> and RMTP [15] with built-in hierarchical structures, these structures can also be used for garbage collection. Since the management of group membership hierarchies is already provided by the multicast protocols, the hierarchical extensions of the nave method can be used to improve scalability [8]. <p> We propose a hierarchical scheme to apply the GSGC protocol. The multicast group is divided into a number of local groups according to their location on the network. Since many reliable multicast protocols employ built-in local groups <ref> [10, 15] </ref>, their group division can be used by the GSGC protocol. Each local group has G Stability Controllers (SCs) where G is a user-defined parameter which determines how robust the protocol is in case of SC failures. The protocol proceeds in two phases.
Reference: [11] <author> J. Kay and J. Pasquale. </author> <title> The importance of non-data touching processing overheads in TCP/IP. </title> <booktitle> In Proceedings of ACM SIGCOMM'93, </booktitle> <address> San Francisco, CA, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: The router processing time for a message is 1 millisecond. The time needed for a host to send a message follows the formula t s (u) = 100 + 2 (94 + 35u=4000 + 50u=1000) + 50 = 338 + 47u=400 (microseconds) <ref> [1, 11] </ref>. The time needed for a host to receive a message is normally about 10% higher than the sending time since interrupts need to be handled [1]. It is set to t r (u) = 1:1 fi t s (u).
Reference: [12] <author> S. McCanne and S. Floyd. </author> <title> Ns (network simulator). </title> <note> Available via http://www-nrg.ee.lbl.gov/ns, 1995. </note>
Reference-contexts: However, interest lies in the performance of the GSGC algorithm across a wide range of network topologies and scenarios. For this, we conducted simulations using the ns <ref> [12] </ref> simulator. For a large group size, the probability that a particular node in a randomly labeled tree has a degree of at most four approaches 0.98 [13], therefore, the underlying network used in the simulation is a balanced bounded-degree tree where interior nodes all have degree four.
Reference: [13] <author> E. Palmer. </author> <title> Graphical Evolution: An Introduction to the Theory of Random Graphs. </title> <publisher> John Wiley & Sons, </publisher> <year> 1985. </year>
Reference-contexts: For this, we conducted simulations using the ns [12] simulator. For a large group size, the probability that a particular node in a randomly labeled tree has a degree of at most four approaches 0.98 <ref> [13] </ref>, therefore, the underlying network used in the simulation is a balanced bounded-degree tree where interior nodes all have degree four. The network topologies are based on some generic network simulation schemes used in [7].
Reference: [14] <institution> Transmission control protocol. RFC 793, </institution> <month> September </month> <year> 1981. </year>
Reference-contexts: In the simulation, n ranges from 50 to 500; and the packet size ranges from 243 to 299 bytes. Since a typical WAN can handle packets shorter than 500 bytes without fragmentation <ref> [14] </ref>, packet fragmentation is not considered in the simulations. 4.2 Simulations with a fixed group size For a given group size and a given number of senders, there are two control parameters in the stability detection protocol the step interval and the sub-group size for each gossip.
Reference: [15] <author> K. Sabnani, J.C. Lin, S. Paul, and S. Bhattacharyya. </author> <title> Reliable Multicast Transport Protocol(RMTP). </title> <journal> IEEE Journal on Selected Areas in Communication, </journal> <month> April </month> <year> 1997. </year>
Reference-contexts: For example, reliable multicast is used in Distributed Interactive Simulations (DIS) for dynamic terrain updates [10]. It is used for dissemination of stock quotes to a large number of clients, and by web servers to send updates of web pages to their proxies. In scalable reliable multicast protocols <ref> [7, 15] </ref>, it is efficient to use the local repair scheme, that is, for each group member to retransmit messages in response to requests by other members that have detected message losses. <p> In a large multicast group, membership change is frequent, requiring the hierarchy to be rebuilt 4 frequently. This fact makes the pure hierarchical approach not scalable [8]. On the other hand, for reliable multicast protocols like LBRM [10] and RMTP <ref> [15] </ref> with built-in hierarchical structures, these structures can also be used for garbage collection. Since the management of group membership hierarchies is already provided by the multicast protocols, the hierarchical extensions of the nave method can be used to improve scalability [8]. <p> We propose a hierarchical scheme to apply the GSGC protocol. The multicast group is divided into a number of local groups according to their location on the network. Since many reliable multicast protocols employ built-in local groups <ref> [10, 15] </ref>, their group division can be used by the GSGC protocol. Each local group has G Stability Controllers (SCs) where G is a user-defined parameter which determines how robust the protocol is in case of SC failures. The protocol proceeds in two phases.
Reference: [16] <author> R. van Renesse. </author> <title> Masking the overhead of protocol layering. </title> <booktitle> In Proceedings of ACM SIGCOMM'96, </booktitle> <pages> pages 96-104, </pages> <month> August </month> <year> 1996. </year> <month> 25 </month>
Reference-contexts: It is set to t r (u) = 1:1 fi t s (u). The queuing delays 10 incurred at the hosts and routers are also simulated by ns. The message header size is set to h = 32 bytes which is enough for most transport protocols <ref> [1, 16] </ref>. Separate simulations are conducted for the stability and failure detection protocol.
References-found: 16

