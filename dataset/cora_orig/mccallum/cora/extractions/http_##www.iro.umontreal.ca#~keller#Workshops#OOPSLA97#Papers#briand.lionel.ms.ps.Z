URL: http://www.iro.umontreal.ca/~keller/Workshops/OOPSLA97/Papers/briand.lionel.ms.ps.Z
Refering-URL: http://www.iro.umontreal.ca/~keller/Workshops/OOPSLA97/index.html
Root-URL: http://www.iro.umontreal.ca
Email: e-mail: -briand,daly,porter,wuest-@iese.fhg.de  
Title: The Dimensions of Coupling in ObjectOriented Design  
Author: L. Briand, J. Daly, V. Porter, and J. Wuest 
Address: IESE, Kaiserslautern, Germany  
Affiliation: Fraunhofer  
Abstract-found: 0
Intro-found: 1
Reference: [BBM96] <author> V. Basili, L. Briand, W. Melo, </author> <title> A Validation of ObjectOriented Design Metrics as Quality Indicators. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 22(10):751761, </volume> <year> 1996. </year>
Reference-contexts: This was performed in the context of a controlled study with C++ systems developed by student subjects at the University of Maryland. More information regarding the experimental setting can be found in <ref> [BBM96] </ref>. The 23 measures we investigated are: n CBO and RFC [CK94]. CBO is the number of classes a given class c uses or is used by.
Reference: [BDW96] <author> L. Briand, J. Daly, J. Wuest, </author> <title> A Unified Framework for Coupling Measurement in Object-Oriented Systems. </title> <type> Technical Report ISERN-96-14, </type> <year> 1996. </year>
Reference-contexts: Introduction Many coupling measures exist in the objectoriented literature <ref> [BDW96] </ref>. However, since current theory regarding coupling on objectoriented (OO) systems is weak, it is difficult to assess what underlying attributes (or factors) the measures capture and whether these attributes are different. In [BDM97], a three-faceted classification yielding 18 different types of coupling has been proposed. <p> Formal definitions of all measures, using a uniform formalism, and a discussion of their theoretical properties can be found in <ref> [BDW96] </ref>. In the following, we describe an exploratory analysis (based on the technique of principal componenet analysis [D89]) to determine what are the dimensions of coupling based on our data set.
Reference: [BDM97] <author> L. Briand, P. Devanbu, W. Melo, </author> <title> An Investigation of Coupling Metrics for C++, </title> <booktitle> Proceedings of the IEEE International Conference on Software Engineering (ICSE97). </booktitle>
Reference-contexts: Introduction Many coupling measures exist in the objectoriented literature [BDW96]. However, since current theory regarding coupling on objectoriented (OO) systems is weak, it is difficult to assess what underlying attributes (or factors) the measures capture and whether these attributes are different. In <ref> [BDM97] </ref>, a three-faceted classification yielding 18 different types of coupling has been proposed. However, we do not know whether this classification is (1) consistent with the real (unknown) underlying attributes that constitute OO coupling, (2) complete or (3) at an adequate level of granularity. <p> We also consider a second version of this measure, DAC, which counts the number of different classes used as types of attributes for a given class (instead of the number of such attributes). n A suite of 18 coupling measures defined in <ref> [BDM97] </ref> characterizing coupling according to three facets: import vs. export coupling, the type of class with which coupling occurs (i.e., ancestor, descendent, friend, and all other cases, referred to as others), and the type of interdependencies involved in the coupling (i.e., method invocation, aggregation, parameter types). <p> In the following, we describe an exploratory analysis (based on the technique of principal componenet analysis [D89]) to determine what are the dimensions of coupling based on our data set. In particular, we wish to determine whether the three-faceted classification of coupling described above <ref> [BDM97] </ref> is (partially) supported by the data. Principal Component Analysis Principal Component Analysis (PCA) is a standard analysis technique to identify the underlying, orthogonal dimensions in a data set. <p> Based on the above analysis, we interpret PC6 as import coupling through method invocations. The results show that some coupling categories (or combinations of thereof) in the classification briefly presented above and detailed in <ref> [BDM97] </ref> seem to correspond to actual coupling dimensions or attributes, i.e., they match with a PC. However, the original classification contained 18 classes whereas we have only 6 orthogonal dimensions here.
Reference: [CK94] <author> S. Chidamber and C. Kemerer, </author> <title> A metrics suite for objectoriented design. </title> <journal> IEEE Trans. on Software Engineering, </journal> <volume> 20(6):476493, </volume> <year> 1994. </year>
Reference-contexts: This was performed in the context of a controlled study with C++ systems developed by student subjects at the University of Maryland. More information regarding the experimental setting can be found in [BBM96]. The 23 measures we investigated are: n CBO and RFC <ref> [CK94] </ref>. CBO is the number of classes a given class c uses or is used by. RFC is the cardinality of the response set of a class, i.e., the set of its methods and the methods invoked by these. n MPC and DAC [LH93].
Reference: [D89] <author> G. Dunteman. </author> <title> Principal Component Analysis, </title> <note> Sage University Paper 69, </note> <year> 1989. </year>
Reference-contexts: Formal definitions of all measures, using a uniform formalism, and a discussion of their theoretical properties can be found in [BDW96]. In the following, we describe an exploratory analysis (based on the technique of principal componenet analysis <ref> [D89] </ref>) to determine what are the dimensions of coupling based on our data set. In particular, we wish to determine whether the three-faceted classification of coupling described above [BDM97] is (partially) supported by the data. <p> This can be used in the context of regression analysis to eliminate multicollinearity in the data set and reduce the number of explanatory variables to a necessary minimum. A detailed description of this technique can be found in <ref> [D89] </ref>.
Reference: [LH93] <author> W. Li and S. Henry. </author> <title> Objectoriented metrics that predict maintainability. </title> <journal> Journal of Systems and Software, </journal> <volume> 23(2):111122, </volume> <year> 1993. </year>
Reference-contexts: CBO is the number of classes a given class c uses or is used by. RFC is the cardinality of the response set of a class, i.e., the set of its methods and the methods invoked by these. n MPC and DAC <ref> [LH93] </ref>. MPC is the number of method invocation statements in a class. DAC is the number of attributes in a class that have a class as their type.
References-found: 6

