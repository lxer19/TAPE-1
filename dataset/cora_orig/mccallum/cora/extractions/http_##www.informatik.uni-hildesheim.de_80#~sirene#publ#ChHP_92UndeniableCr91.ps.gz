URL: http://www.informatik.uni-hildesheim.de:80/~sirene/publ/ChHP_92UndeniableCr91.ps.gz
Refering-URL: http://www.informatik.uni-hildesheim.de:80/~sirene/lit/sirene.lit.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Title: Cryptographically Strong Undeniable Signatures, Unconditionally Secure for the Signer (Extended Abstract) one hand, the efficient
Author: David Chaum Eugne van Heijst Birgit Pfitzmann 
Date: 1992, 470-484.  
Note: Proceedings of Crypto '91, Santa Barbara, LNCS 576, Springer-Verlag, Berlin  Besides, on the  
Abstract: We present the first undeniable signature schemes where signers are unconditionally secure. In the efficient variants, the security for the recipients relies on a discrete logarithm assumption or on factoring; and in a theoretical version, on claw-free permutation pairs. Interesting new subprotocols are efficient collision-free hash functions based on a discrete logarithm assumption, efficient perfectly hiding commitments for elements of ZZ p ( p prime), and fairly practical perfect zero-knowledge proofs for arithmetic formulas in ZZ p or ZZ 2 s. 
Abstract-found: 1
Intro-found: 1
Reference: <editor> (All references can, </editor> <title> if nowhere else, be obtained from the third author.) </title>
Reference: [BCC] <editor> Gilles Brassard, David Chaum, Claude Crpeau: </editor> <title> Minimum Disclosure Proofs of Knowledge; Journal of Computer and System Sciences 37 (1988) 156-189. </title>
Reference-contexts: The message space is GF (2 s ), and sign (SK, m) = a + bm in GF (2 s ). Verification and disavowal are perfect zero-knowledge proofs of knowledge for the relations defined by Formulas (1) and (2). The three required ZKPs exist on our assumption (e.g., <ref> [GMW, BCC, D1] </ref>).
Reference: [BCDP] <author> Joan Boyar, David Chaum, Ivan Damgfird, Torben Pedersen: </author> <title> Convertible Undeniable Signatures; Crypto '90, </title> <booktitle> Abstracts, </booktitle> <pages> 195-208. </pages>
Reference-contexts: be hashed). (But note that for some important situations, protocols with one-bit messages exist [PW2].) Unconditional signatures have a complicated precomputation phase and grow linearly with the number of possible recipients. 1.2 Undeniable signatures: Invisibility Undeniable (or perhaps rather "invisible") signatures were introduced in [CA] and further developed, e.g., in <ref> [C2, BCDP] </ref>. These are digital signatures providing more privacy: A recipient of a signature cannot show it to others without the help of the signer. <p> In particular, no security against active attacks has been shown (cf. [GMR]). There is, however, a cryptographically strong theoretical construction from any one-way function in <ref> [BCDP] </ref>. 1.3 The new schemes We present the first three undeniable signature schemes were signers are unconditionally secure. The security of the recipients is cryptographically strong. In the two efficient variants, this means provably as secure as factoring or a discrete logarithm assumption, resp. <p> A definition of computational invisibility (developed independently of the abstract-version of this paper, and probably earlier) ought to appear before this in the final version of <ref> [BCDP] </ref>, a newer one is contained in [CBDP]. Here, however, we need perfect invisibility, corresponding to the unconditional security of the signer. (Note that the zero-knowledge property in [C2] concerns just verification and disavowal, not the act of issuing the signature. <p> for all probabilistic polynomial interactive TMs V*, there is a simulator M V* so that M V* (x , s ) is polynomial in |x|, and for all x with R x and all s, z: (A computational analogue of this definition can be identified in the final version of <ref> [BCDP] </ref> if one omits the active attacks by the distinguisher and notices that the probabilities there must also be taken over the key choice.) For the most basic part of invisibility, i.e., defining that the protocol of just issuing one signature is invisible, we can directly apply this definition: P is <p> In the definition of invisibility, one must include that both the recipient and the (partial) outsider to whom the signature is shown can have received more signatures. (For the computational variant, one can see this in detail in the future versions of <ref> [BCDP] </ref>.
Reference: [BCLL] <author> Gilles Brassard, Claude Crpeau, Sophie Laplante, Christian Lger: </author> <title> Computationally Convincing Proofs of Knowledge; STACS '91, </title> <publisher> LNCS 480, Springer-Verlag, </publisher> <address> Berlin 1991, </address> <pages> 251-262. </pages>
Reference-contexts: = (pub p (SK), sign p (, m)) is a homo morphism for all p, m, and con struct a similar protocol to prove the knowledge of a preimage under any efficient homomorphism.) One can add verifier-commitments on the challenges b like in the protocol in [Br] (also sketched in <ref> [BCLL] </ref>), in order to achieve the same robustness against cooperating verifiers as other undeniable signatures have (see 3.4), and probably also to parallelize the rounds. (One would base the commitments on g 1 , and a simulator could use a cheating verifier to compute a, b, and g from Lemma 1
Reference: [Be] <author> Donald Beaver: </author> <title> Multiparty Protocols Tolerating Half Faulty Processors; Crypto '89, </title> <publisher> LNCS 435, Springer-Verlag, </publisher> <address> Berlin 1990, </address> <pages> 560-572. </pages>
Reference-contexts: Thus we finally need a protocol to prove that the product of the contents a and b of two commitments is c. We adapt an idea for shared secrets from <ref> [Be] </ref>: The factors are blinded as a' = a + y , b' = b + z, and either a multiplication a'b' = d is opened, or the correct connection between the original and the blinded multiplication must be shown. <p> to see that the proof of Theorem 2 is not much changed by the occurrence of the commitment scheme in Lemma 5. 481 Remark: The multiplication protocol can easily be adapted to the case where c is hidden in a commitment, too (actually, this is closer to the protocol from <ref> [Be] </ref>). Thus we can compute arbitrary arithmetic terms of commitments, i.e., we can build perfect ZKPs of atomic formulas in ZZ p or ZZ 2 s.
Reference: [BP] <author> Joan Boyar, Ren Peralta: </author> <title> On the concrete complexity of zero-knowledge proofs; Crypto '89, </title> <publisher> LNCS 435, Springer-Verlag, </publisher> <address> Heidelberg 1990, </address> <pages> 507-525. </pages>
Reference-contexts: Protocol 2 Efficient disavowal Lemma 5: Protocol 2 is a perfect zero-knowledge interactive proof of knowledge that Sibyl either knows a satisfying assignment for the disavowal formula or can break the commitment scheme (cf. <ref> [BP] </ref>). Proof: Omitted in this extended abstract.
Reference: [BPW] <author> Gerrit Bleumer, Birgit Pfitzmann, Michael Waidner: </author> <title> A Remark on a Signature Scheme where Forgery can be Proved; Eurocrypt '90, </title> <publisher> LNCS 473, Springer-Verlag, </publisher> <address> Berlin 1991, </address> <pages> 441-445. 484 </pages>
Reference-contexts: Also, if any forgery ever occurs, the organization itself is sure about this and can stop the scheme or increase the security parameters, in contrast to the case where a client's signature is forged in a conventional scheme. Previous schemes: In <ref> [WP, BPW, PW2] </ref>, failstop signatures were introduced. They are cryptographically secure against forgeries in the sense of [GMR]. <p> The commitment is only as long as the message. So far, perfectly hiding commitments where normally made bitwise, which induces a large message expansion. The only efficient version for larger messages was based on factoring <ref> [BPW] </ref>. The commitments can be added and subtracted locally, like those of [BPW]. We present efficient inequality proofs and procedures to multiply them. <p> The commitment is only as long as the message. So far, perfectly hiding commitments where normally made bitwise, which induces a large message expansion. The only efficient version for larger messages was based on factoring <ref> [BPW] </ref>. The commitments can be added and subtracted locally, like those of [BPW]. We present efficient inequality proofs and procedures to multiply them. This makes fairly practical perfect zero-knowledge proofs (computationally convincing) for arithmetic formulas in ZZ p or ZZ 2 s possible. 1.5 Overview We first present the basic idea in an informal way (2). <p> Verification and disavowal are perfect zero-knowledge proofs of knowledge for the relations defined by Formulas (1) and (2). The three required ZKPs exist on our assumption (e.g., [GMW, BCC, D1]). Security (Sketch) : We use that h is cryptographically collision-free and hides its first argument unconditionally <ref> [BPW, PW1] </ref>, and that for each PK, the family ( sign (SK, )) SK pub 1 (PK) is strongly universal 2 [WC]. 482 5 A Practical Scheme Based on Factoring An inefficient scheme based on factoring can be obtained as a special case of 4 by using the special claw-free permutation <p> Given a, choose a := (a, x ) with random x H n . Proof: The main parts follow from <ref> [BPW] </ref>. It only remains to show that the GMR claw-free pairs are still permutations when n is not a Blum-integer, but of the form that Sibyl checks. This is quite easy. 6 Efficient Extension to Many Long Messages Everything in this section is only sketched in this extended abstract.
Reference: [Br] <author> Gilles Brassard: </author> <title> Efficient constant-round perfect zero-knowledge; Dpartement d'informatique et de R.O., </title> <institution> Universit de Montral, C.P. 6128, Succ. "A", Montral, Qubec Canada H3C 3J7, </institution> <month> Dec. </month> <year> 1990. </year> <note> (Manuscript available from the author.) </note>
Reference-contexts: for f p,m (SK) = (pub p (SK), sign p (, m)) is a homo morphism for all p, m, and con struct a similar protocol to prove the knowledge of a preimage under any efficient homomorphism.) One can add verifier-commitments on the challenges b like in the protocol in <ref> [Br] </ref> (also sketched in [BCLL]), in order to achieve the same robustness against cooperating verifiers as other undeniable signatures have (see 3.4), and probably also to parallelize the rounds. (One would base the commitments on g 1 , and a simulator could use a cheating verifier to compute a, b, and
Reference: [C1] <author> David Chaum: </author> <title> Zero-Knowledge Undeniable Signatures; Eurocrypt '90, </title> <booktitle> Abstracts, rhus 1990, </booktitle> <pages> 419-426. </pages>
Reference-contexts: also to parallelize the rounds. (One would base the commitments on g 1 , and a simulator could use a cheating verifier to compute a, b, and g from Lemma 1 in order to cheat, too.) 3.7 Efficient disavowal The basic structure of our disavowal is similar to that in <ref> [C1] </ref>: In an ideal version, there would be a number L' of rounds, with Rick allowed to choose one of three challenges in each round. <p> commitments. (If they were both opened, Rick could compute the correct signature s.) PK' C3: C2: Open both commitments and reveal SK' C1: Open both commitments and reveal R Fig. 1 Idea of the disavowal protocol; enclosures represent commitments 479 This idea can be implemented with bit commitments, similar to <ref> [C1] </ref>. However, bit commitments make the protocol far less efficient than verification. Thus we present a new variant, almost as efficient as the verification, using commitments on complete numbers instead of bits. The main problem will be the inequality proof.
Reference: [C2] <author> David Chaum: </author> <title> Zero-Knowledge Undeniable Signatures; Eurocrypt '90, </title> <publisher> LNCS 473, Springer-Verlag, </publisher> <address> Berlin 1991, </address> <pages> 458-464. </pages>
Reference-contexts: be hashed). (But note that for some important situations, protocols with one-bit messages exist [PW2].) Unconditional signatures have a complicated precomputation phase and grow linearly with the number of possible recipients. 1.2 Undeniable signatures: Invisibility Undeniable (or perhaps rather "invisible") signatures were introduced in [CA] and further developed, e.g., in <ref> [C2, BCDP] </ref>. These are digital signatures providing more privacy: A recipient of a signature cannot show it to others without the help of the signer. <p> an infinite sequence of groups G p of known prime orders p, where one can perform the group operations and choose random elements efficiently, but the discrete logarithm is hard. (The security of both signers and recipients depends on the primality of p.) This is the same assumption as in <ref> [CA, C2] </ref>. An efficient proposal from [CA] is G p = ZZ q * /-1- where q = 2p+1 and both p and q are prime. G p can be represented by -1,, p-. <p> Here, however, we need perfect invisibility, corresponding to the unconditional security of the signer. (Note that the zero-knowledge property in <ref> [C2] </ref> concerns just verification and disavowal, not the act of issuing the signature. Issuing the signature cannot be zero-knowledge, since it enables the 476 recipient to do something that he could not have done before, i.e., show a signature that Sibyl cannot disavow. <p> In the simple case considered in this 3, I can only be the little information from disavowals. This definition, like its computational counterpart, does not consider cooperating verifiers who try to get a signature verified simultaneously, as described in <ref> [C2, DY] </ref>. (That is, practical cases covered by this model are that a cheating recipient tries to show a signature on private information to third parties who are fairly honest, but might not look away when being shown a conventional signature, or tries to sell a received signature afterwards.) Measures against <p> practical cases covered by this model are that a cheating recipient tries to show a signature on private information to third parties who are fairly honest, but might not look away when being shown a conventional signature, or tries to sell a received signature afterwards.) Measures against cooperating verifiers exist <ref> [C2, CBDP] </ref>: Firstly, the verification protocol should not only be zero-knowledge, but start with verifier-commitments. This is the case in all previous undeniable signature schemes and excludes the practical attack described in [DY], where the verifiers just use a coin-flipping protocol 477 to choose their challenges.
Reference: [CA] <author> David Chaum, Hans van Antwerpen: </author> <title> Undeniable signatures; Crypto '89, </title> <publisher> LNCS 435, Springer-Verlag, </publisher> <address> Heidelberg 1990, </address> <pages> 212-216. </pages>
Reference-contexts: a certain point, since messages can be hashed). (But note that for some important situations, protocols with one-bit messages exist [PW2].) Unconditional signatures have a complicated precomputation phase and grow linearly with the number of possible recipients. 1.2 Undeniable signatures: Invisibility Undeniable (or perhaps rather "invisible") signatures were introduced in <ref> [CA] </ref> and further developed, e.g., in [C2, BCDP]. These are digital signatures providing more privacy: A recipient of a signature cannot show it to others without the help of the signer. <p> an infinite sequence of groups G p of known prime orders p, where one can perform the group operations and choose random elements efficiently, but the discrete logarithm is hard. (The security of both signers and recipients depends on the primality of p.) This is the same assumption as in <ref> [CA, C2] </ref>. An efficient proposal from [CA] is G p = ZZ q * /-1- where q = 2p+1 and both p and q are prime. G p can be represented by -1,, p-. <p> An efficient proposal from <ref> [CA] </ref> is G p = ZZ q * /-1- where q = 2p+1 and both p and q are prime. G p can be represented by -1,, p-.
Reference: [CBDP] <author> David Chaum, Joan Boyar, Ivan Damgfird, Torben Pedersen: </author> <title> Undeniable Signatures: </title> <note> Applications and Theory; July 1, 1991. (Manuscript available from Ivan Damgfird.) </note>
Reference-contexts: A definition of computational invisibility (developed independently of the abstract-version of this paper, and probably earlier) ought to appear before this in the final version of [BCDP], a newer one is contained in <ref> [CBDP] </ref>. Here, however, we need perfect invisibility, corresponding to the unconditional security of the signer. (Note that the zero-knowledge property in [C2] concerns just verification and disavowal, not the act of issuing the signature. <p> practical cases covered by this model are that a cheating recipient tries to show a signature on private information to third parties who are fairly honest, but might not look away when being shown a conventional signature, or tries to sell a received signature afterwards.) Measures against cooperating verifiers exist <ref> [C2, CBDP] </ref>: Firstly, the verification protocol should not only be zero-knowledge, but start with verifier-commitments. This is the case in all previous undeniable signature schemes and excludes the practical attack described in [DY], where the verifiers just use a coin-flipping protocol 477 to choose their challenges.
Reference: [CHP] <author> David Chaum, Eugne van Heijst, Birgit Pfitzmann: </author> <title> Cryptographically Strong Undeniable Signatures, Unconditionally Secure for the Signer; Fakultt f. </title> <institution> Informatik, Univ. Karlsruhe, </institution> <type> Internal Report 1/91, </type> <month> February </month> <year> 1991. </year>
Reference-contexts: Thus this scheme has no failstop property.) 3 The Discrete Logarithm Scheme Most things described in 3.1-3.3 and 3.5-3.6 can be found in more detail in <ref> [CHP] </ref>. 3.1 Assumption and notation The cryptographic assumption, needed for the security of the recipients, is that we have an infinite sequence of groups G p of known prime orders p, where one can perform the group operations and choose random elements efficiently, but the discrete logarithm is hard. (The security <p> The main problem will be the inequality proof. We present the protocol in a generalized version, so that it can also be used in the factoring case. (A different and slightly simpler protocol, with a complete proof, can be found in <ref> [CHP] </ref>, but it is slightly less efficient and could not be generalized to the factoring case.) Definition (Sketch): A homomorphic perfectly hiding commitment scheme for a family of abelian groups consists of an algorithm to choose a key K, a test that is passed by all correctly chosen keys, sequences ( <p> The two security requirements are: If K passes the test, then for each commitment, all contents are equally probable. If K is chosen correctly, then h is cryptographically collision-free. For the concrete system, we keep the commitment scheme from <ref> [CHP] </ref>, which has independently been proposed in [Pe], too (but without the inequality proof): Lemma 4 (Commitments): The following parameters define a homomorphic perfectly hiding commitment scheme for a family of abelian groups: K consists of a group G p and two generators g 1 and g 2 of G p
Reference: [CR] <author> David Chaum, Sandra Roijakkers: </author> <title> Unconditionally secure digital signatures; Crypto '90 Abstracts, </title> <type> 209-217. </type>
Reference-contexts: In particular, if signatures become invalid once a proof of forgery has been shown, signers are unconditionally secure, and recipients cryptographically. In <ref> [CR] </ref>, a signature-like scheme where all parties are unconditionally secure was introduced.
Reference: [D1] <author> Ivan Damgfird: </author> <title> Collision free hash functions and public key signature schemes; Eurocrypt '87, </title> <publisher> LNCS 304, Springer-Verlag, </publisher> <address> Berlin 1988, </address> <pages> 203-216. </pages>
Reference-contexts: So far, this was only possible on the factoring assumption, whereas in the discrete logarithm case, about one exponentiation per bit was needed <ref> [D1] </ref>. We also construct efficient perfectly hiding commitments for elements of ZZ p , where the unchangeability relies on a discrete logarithm assumption. The commitment is only as long as the message. So far, perfectly hiding commitments where normally made bitwise, which induces a large message expansion. <p> Since logical operations can be substituted by arithmetic ones, we can generalize this to all arithmetic formulas in these rings. 4 A Theoretical Construction from Claw-free Permutation Pairs For theoretical purposes, we sketch a construction based on an arbitrary family of claw-free permutation pairs (not necessarily with a trapdoor) <ref> [GMR, D1] </ref>. This seems a sensible assumption, since it is the same one on which collision-free hash functions can be constructed, and we require a similar property from our function pub. Key exchange: 0. <p> The message space is GF (2 s ), and sign (SK, m) = a + bm in GF (2 s ). Verification and disavowal are perfect zero-knowledge proofs of knowledge for the relations defined by Formulas (1) and (2). The three required ZKPs exist on our assumption (e.g., <ref> [GMW, BCC, D1] </ref>). <p> There are such functions based on claw-free permutation pairs, and an efficient one based on factoring <ref> [D1] </ref>. For an efficient hash based on the discrete logarithm, we can use Lemma 2 directly, since we only need to hash messages of fixed length.
Reference: [D2] <author> Ivan Damgfird: </author> <title> A design principle for hash functions; Crypto '89, </title> <publisher> LNCS 435, Springer-Verlag, </publisher> <address> Heidelberg 1990, </address> <pages> 416-427. </pages>
Reference-contexts: Message hashing: Similarly, long messages can be hashed before signing. For this, we can use the general construction of computationally collision-free hash functions hash* for messages of arbitrary length from hash functions hash for messages of fixed length from <ref> [D2] </ref>, starting with hash from the previous paragraph. Hence, public keys and signatures are as short as in conventional signature schemes, such as GMR. The information exchanged during verification or disavowal is about L times the length of a signature.
Reference: [DH] <author> Whitfield Diffie, Martin Hellman: </author> <booktitle> New Directions in Cryptography; IEEE Transactions on Information Theory 22/6 (1976) 644-654. </booktitle>
Reference-contexts: of interest, we mention how the new schemes compare with the previous schemes realizing just this one feature. 1.4 lists interesting new subprotocols, 1.5 gives an overview over the rest of the paper. 1.1 Unconditional security for signers In conventional digital signature schemes, i.e., those according to the idea in <ref> [DH] </ref>, signers can be cheated with forged signatures if a cryptographic assumption, such as the hardness of factoring, turns out to be wrong.
Reference: [DY] <author> Yvo Desmedt, Moti Yung: </author> <title> Weaknesses of Undeniable Signature Schemes; Eurocrypt '91, </title> <address> Brighton, </address> <month> 8-11 April </month> <year> 1991, </year> <pages> Abstracts, 111-116. </pages>
Reference-contexts: In the simple case considered in this 3, I can only be the little information from disavowals. This definition, like its computational counterpart, does not consider cooperating verifiers who try to get a signature verified simultaneously, as described in <ref> [C2, DY] </ref>. (That is, practical cases covered by this model are that a cheating recipient tries to show a signature on private information to third parties who are fairly honest, but might not look away when being shown a conventional signature, or tries to sell a received signature afterwards.) Measures against <p> This is the case in all previous undeniable signature schemes and excludes the practical attack described in <ref> [DY] </ref>, where the verifiers just use a coin-flipping protocol 477 to choose their challenges. Secondly, against more complicated uses of multiparty computations, one can take measures involving timing.
Reference: [GMR] <author> Shafi Goldwasser, Silvio Micali, Ronald L. Rivest: </author> <title> A Digital Signature Scheme Secure Against Adaptive Chosen-Message Attacks; SIAM J. </title> <institution> Comput. </institution> <month> 17/2 </month> <year> (1988) </year> <month> 281-308. </month>
Reference-contexts: This holds even for provably secure signature schemes such as GMR <ref> [GMR] </ref>. (Recipients, however, are unconditionally secure.) In contrast, symmetric authentication systems with unconditional, i.e., information-theoretical security for senders of messages (and for recipients, too) have existed for quite a while, e.g., [GMS, WC]. <p> Previous schemes: In [WP, BPW, PW2], failstop signatures were introduced. They are cryptographically secure against forgeries in the sense of <ref> [GMR] </ref>. In addition, if a forgery occurs nevertheless, the signer can prove this (more precisely: the fact that the cryptograpic assumption has been broken) unconditionally (in the sense described above) to everyone, e.g., by showing the factors of a number that she was assumed not to be able to factor. <p> In particular, no security against active attacks has been shown (cf. <ref> [GMR] </ref>). There is, however, a cryptographically strong theoretical construction from any one-way function in [BCDP]. 1.3 The new schemes We present the first three undeniable signature schemes were signers are unconditionally secure. The security of the recipients is cryptographically strong. <p> Since logical operations can be substituted by arithmetic ones, we can generalize this to all arithmetic formulas in these rings. 4 A Theoretical Construction from Claw-free Permutation Pairs For theoretical purposes, we sketch a construction based on an arbitrary family of claw-free permutation pairs (not necessarily with a trapdoor) <ref> [GMR, D1] </ref>. This seems a sensible assumption, since it is the same one on which collision-free hash functions can be constructed, and we require a similar property from our function pub. Key exchange: 0. <p> Key exchange: 0. All participants agree on a family of claw-free permutation pairs and parameters k for cryptographic security, s for information-theoretical security, and L for the ZKPs. 1. Rick chooses a claw-free pair ( d , f 0 , f 1 ) and publishes it (cf. <ref> [GMR] </ref>). ( f 0 , f 1 are the permutations; d is an algorithm to choose a random element from their common domain D.) He proves Sibyl in (computational) zero-knowledge that his choice is correct. <p> that for each PK, the family ( sign (SK, )) SK pub 1 (PK) is strongly universal 2 [WC]. 482 5 A Practical Scheme Based on Factoring An inefficient scheme based on factoring can be obtained as a special case of 4 by using the special claw-free permutation pairs from <ref> [GMR] </ref>. However, to make the scheme efficient, we need special zero-knowledge proofs. We only sketch this scheme in this extended abstract. <p> sign to need memory, and a real adaptive chosen message attack, i.e., an additional "" m 1 , m 2 : assume Sibyl signed m 1 , m 2 in this order ". (Thus an active attack by an unrestricted attacker is easier to formalize than a normal one, see <ref> [GMR] </ref>.) The security of the recipient can still be defined as in Theorem 2.
Reference: [GMS] <author> E. N. Gilbert, F. J. Mac Williams, N. J. A. Sloane: </author> <title> Codes which detect deception; The Bell System Technical Journal 53/3 (1974) 405-424. </title>
Reference-contexts: This holds even for provably secure signature schemes such as GMR [GMR]. (Recipients, however, are unconditionally secure.) In contrast, symmetric authentication systems with unconditional, i.e., information-theoretical security for senders of messages (and for recipients, too) have existed for quite a while, e.g., <ref> [GMS, WC] </ref>.
Reference: [GMW] <author> Oded Goldreich, Silvio Micali, Avi Wigderson: </author> <title> Proofs that Yield Nothing But their Validity and a Methodology of Cryptographic Protocol Design; 27th FOCS, </title> <publisher> IEEE Computer Society, </publisher> <year> 1986, </year> <pages> 174-187. </pages>
Reference-contexts: The message space is GF (2 s ), and sign (SK, m) = a + bm in GF (2 s ). Verification and disavowal are perfect zero-knowledge proofs of knowledge for the relations defined by Formulas (1) and (2). The three required ZKPs exist on our assumption (e.g., <ref> [GMW, BCC, D1] </ref>).
Reference: [GP] <author> Jeroen van de Graaf, Ren Peralta: </author> <title> A simple and secure way to show the validity of your public key; Crypto '87, </title> <publisher> LNCS 293, Springer-Verlag, </publisher> <address> Berlin 1988, </address> <pages> 128-134. </pages>
Reference-contexts: perfectly hiding commitment scheme for a family of abelian groups: K should be a Blum-integer n. (This defines a GMR claw-free pair.) The test checks n 5 mod 8 and n = p s q t with p 3 mod 4 for odd s, t, using the efficient proofsystem from <ref> [GP] </ref>. 2 s , H n = - QR n /-1-, G n = ZZ 2 s H n with an operation defined by (a, x ) (b, y) := ((a + b) mod 2 s , |x y 4 (a + b ) div 2 s If a = (a,
Reference: [M1] <author> Ralph Merkle: </author> <title> Protocols for Public Key Cryptosystems; Proceedings of the 1980 Symposium on Security and Privacy, </title> <address> April 14-16, 1980 Oakland, California, </address> <pages> 122-134. </pages>
Reference-contexts: In the following, we consider the case of one g only. Tree-authentication: As usual, one can extend the scheme to many signatures, without augmenting the public key, by two versions of tree-authentication. First, the previous public keys can be used as leaves of a hash tree <ref> [M1] </ref>.
Reference: [M2] <author> Ralph Merkle: </author> <title> A digital signature based on a conventional encryption function; Crypto '87, </title> <publisher> LNCS 293, Springer-Verlag, </publisher> <address> Berlin 1988, </address> <pages> 369-378. </pages>
Reference-contexts: Generating the complete secret key in advance is the most efficient possibility; however, if one wants the scheme to go on "polynomially forever", one can use some signatures to sign new "public" keys in a treelike fashion <ref> [M2, NY] </ref>. Message hashing: Similarly, long messages can be hashed before signing. For this, we can use the general construction of computationally collision-free hash functions hash* for messages of arbitrary length from hash functions hash for messages of fixed length from [D2], starting with hash from the previous paragraph.
Reference: [NY] <author> Moni Naor, Moti Yung: </author> <title> Universal One-way Hash Functions and their Cryptographic Applications; 21st STOC, </title> <publisher> ACM, </publisher> <address> New York 1989, </address> <pages> 33-43. </pages>
Reference-contexts: Generating the complete secret key in advance is the most efficient possibility; however, if one wants the scheme to go on "polynomially forever", one can use some signatures to sign new "public" keys in a treelike fashion <ref> [M2, NY] </ref>. Message hashing: Similarly, long messages can be hashed before signing. For this, we can use the general construction of computationally collision-free hash functions hash* for messages of arbitrary length from hash functions hash for messages of fixed length from [D2], starting with hash from the previous paragraph.
Reference: [O] <author> Yair Oren: </author> <title> On the cunning power of cheating verifiers: some observations about zero-knowledge proofs; 28th FOCS, </title> <publisher> IEEE Computer Society, </publisher> <year> 1987, </year> <pages> 462-471. </pages>
Reference-contexts: If P additionally carries out perfect zero-knowledge verifications, one can show that it is still pZKO by proving that the concatenation of a pZKO and pZKPs is always pZKO. (Although intuitively clear, this is not trivial formally, but there should be no other difficulties than in similar proofs for ZKPs <ref> [O, TW] </ref>.) For adding disavowals, one may generally relax the requirement to statistical zero-knowledge against outsiders (since before each disavowal, the public information x is slightly increased by revealing sign (SK, m i ) sf i ).
Reference: [Pe] <author> Torben Pedersen: </author> <title> NonInteractive and Information-Theoretic Secure Verifiable Secret Sharing; Crypto '91, </title> <address> Santa Barbara, CA, 11.-15. </address> <month> August </month> <year> 1991, </year> <note> Abstracts 3.12-3.17. </note>
Reference-contexts: The two security requirements are: If K passes the test, then for each commitment, all contents are equally probable. If K is chosen correctly, then h is cryptographically collision-free. For the concrete system, we keep the commitment scheme from [CHP], which has independently been proposed in <ref> [Pe] </ref>, too (but without the inequality proof): Lemma 4 (Commitments): The following parameters define a homomorphic perfectly hiding commitment scheme for a family of abelian groups: K consists of a group G p and two generators g 1 and g 2 of G p , with g 1 g 2 .
Reference: [Pf] <author> Birgit Pfitzmann: </author> <title> Failstop Signatures: Making Signers Unconditionally Secure; invited for Compsec, </title> <address> London 30.10.-1.11.1991, </address> <note> Proc. to be published by Elsevier. </note>
Reference-contexts: However, if one relaxes the requirements on failstop signatures like they are in the schemes presented here, i.e., omits the failstop property and allows interaction between signer and recipient, one can construct variants of those which are even more efficient <ref> [PW2, Pf] </ref>. 1.4 Interesting new subprotocols Several subprotocols may be interesting in their own right: We present cryptographically collision-free hash functions based on a discrete logarithm assumption, which need about one multiplication per message bit only.
Reference: [PW1] <author> Birgit Pfitzmann, Michael Waidner: </author> <title> Formal Aspects of Failstop Signatures; Fakultt f. </title> <institution> Informatik, Univ. Karlsruhe, </institution> <type> Internal Report 22/90, </type> <year> 1990. </year>
Reference-contexts: Verification and disavowal are perfect zero-knowledge proofs of knowledge for the relations defined by Formulas (1) and (2). The three required ZKPs exist on our assumption (e.g., [GMW, BCC, D1]). Security (Sketch) : We use that h is cryptographically collision-free and hides its first argument unconditionally <ref> [BPW, PW1] </ref>, and that for each PK, the family ( sign (SK, )) SK pub 1 (PK) is strongly universal 2 [WC]. 482 5 A Practical Scheme Based on Factoring An inefficient scheme based on factoring can be obtained as a special case of 4 by using the special claw-free permutation
Reference: [PW2] <author> Birgit Pfitzmann, Michael Waidner: </author> <title> Failstop Signatures and their Application; Securicom 91, </title> <booktitle> Paris 1991, </booktitle> <pages> 145-160. </pages>
Reference-contexts: However, with symmetric authentication, disputes between a sender and a recipient cannot be solved. Recently, unconditional security for signers has been considered with "non-undeniable" signature schemes. This feature is interesting in practice, even if it is only combined with cryptographic security for recipients <ref> [PW2] </ref>. In particular, if two parties exchange signed messages, both were only computationally secure before. Now, if one party uses signatures unconditionally secure for the signer, and the other party conventional ones, the former party is unconditionally secure. <p> Also, if any forgery ever occurs, the organization itself is sure about this and can stop the scheme or increase the security parameters, in contrast to the case where a client's signature is forged in a conventional scheme. Previous schemes: In <ref> [WP, BPW, PW2] </ref>, failstop signatures were introduced. They are cryptographically secure against forgeries in the sense of [GMR]. <p> far, none of these schemes is efficient in all cases: Failstop signatures are efficient for one-bit messages, but their length grows linearly with the length of the message (up to a certain point, since messages can be hashed). (But note that for some important situations, protocols with one-bit messages exist <ref> [PW2] </ref>.) Unconditional signatures have a complicated precomputation phase and grow linearly with the number of possible recipients. 1.2 Undeniable signatures: Invisibility Undeniable (or perhaps rather "invisible") signatures were introduced in [CA] and further developed, e.g., in [C2, BCDP]. <p> However, if one relaxes the requirements on failstop signatures like they are in the schemes presented here, i.e., omits the failstop property and allows interaction between signer and recipient, one can construct variants of those which are even more efficient <ref> [PW2, Pf] </ref>. 1.4 Interesting new subprotocols Several subprotocols may be interesting in their own right: We present cryptographically collision-free hash functions based on a discrete logarithm assumption, which need about one multiplication per message bit only.
Reference: [TW] <author> Martin Tompa, Heather Woll: </author> <title> Random self-reducibility and zero knowledge proofs of possession of information; 28th FOCS, </title> <publisher> IEEE Computer Society, </publisher> <year> 1987, </year> <pages> 472-482. </pages>
Reference-contexts: The information that these outsiders have about Sibyl's secret knowledge is modelled by a probability distribution. Thus, as a basic weaker version of perfect zero-knowledge, we define (in the notation of <ref> [TW] </ref>): Definition: Let R be a relation, and for each x with R x := - y | ( x , y)R - , let p x (y) denote a probability distribution on R x . <p> If P additionally carries out perfect zero-knowledge verifications, one can show that it is still pZKO by proving that the concatenation of a pZKO and pZKPs is always pZKO. (Although intuitively clear, this is not trivial formally, but there should be no other difficulties than in similar proofs for ZKPs <ref> [O, TW] </ref>.) For adding disavowals, one may generally relax the requirement to statistical zero-knowledge against outsiders (since before each disavowal, the public information x is slightly increased by revealing sign (SK, m i ) sf i ). <p> Proof (Sketch): One can easily show that this is a special case of the proof system for random self - reducible relations of <ref> [TW, Th. 4] </ref>; the self-reduction is just the addition of a random R to S K. (More systematically, one can see that for f p,m (SK) = (pub p (SK), sign p (, m)) is a homo morphism for all p, m, and con struct a similar protocol to prove the
Reference: [WC] <author> Mark Wegman, Lawrence Carter: </author> <title> New Hash Functions and Their Use in Authentication and Set Equality; Journal of Computer and System Sciences 22 (1981) 265-279. </title>
Reference-contexts: This holds even for provably secure signature schemes such as GMR [GMR]. (Recipients, however, are unconditionally secure.) In contrast, symmetric authentication systems with unconditional, i.e., information-theoretical security for senders of messages (and for recipients, too) have existed for quite a while, e.g., <ref> [GMS, WC] </ref>. <p> The three required ZKPs exist on our assumption (e.g., [GMW, BCC, D1]). Security (Sketch) : We use that h is cryptographically collision-free and hides its first argument unconditionally [BPW, PW1], and that for each PK, the family ( sign (SK, )) SK pub 1 (PK) is strongly universal 2 <ref> [WC] </ref>. 482 5 A Practical Scheme Based on Factoring An inefficient scheme based on factoring can be obtained as a special case of 4 by using the special claw-free permutation pairs from [GMR]. However, to make the scheme efficient, we need special zero-knowledge proofs.
Reference: [WP] <author> Michael Waidner, Birgit Pfitzmann: </author> <title> Unconditional Sender and Recipient Untraceability in spite of Active Attacks Some Remarks; Fakultt f. </title> <institution> Informatik, Univ. Karlsruhe, Interner Bericht 5/89, </institution> <year> 1989. </year>
Reference-contexts: Also, if any forgery ever occurs, the organization itself is sure about this and can stop the scheme or increase the security parameters, in contrast to the case where a client's signature is forged in a conventional scheme. Previous schemes: In <ref> [WP, BPW, PW2] </ref>, failstop signatures were introduced. They are cryptographically secure against forgeries in the sense of [GMR].
References-found: 33

