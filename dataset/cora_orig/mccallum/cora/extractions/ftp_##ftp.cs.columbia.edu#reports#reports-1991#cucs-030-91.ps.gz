URL: ftp://ftp.cs.columbia.edu/reports/reports-1991/cucs-030-91.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1991.html
Root-URL: http://www.cs.columbia.edu
Email: tushar@cs.columbia.edu  
Title: Real-time Portfolio Management and Automatic Extensions:  CUCS-030-91  
Author: Tushar M. Patel 
Degree: MS Thesis  Thesis Committee: Gail E. Kaiser,  
Note: and Dan Schutzer, Citicorp Copyright 1991 Tushar Patel. All rights reserved.  
Date: 7 October 1991  
Address: Neighborhood Road Kingston NY 12401  New York, NY 10027  
Affiliation: IBM  Columbia University Department of Computer Science  Columbia University  
Abstract-found: 0
Intro-found: 1
Reference: [Bernstein 90] <author> David B. Bernstein and Rodney Farrow. </author> <title> Automatic Maintenance of Routine Programming Tasks Based on a Declarative Description. </title> <booktitle> In 12th International Conference on Software Engineering, </booktitle> <pages> pages 310-315. </pages> <address> Nice, France, </address> <month> March, </month> <year> 1990. </year>
Reference-contexts: Carefully distinguishing between trading and investment strategies could also help. 43 Chapter 9 Related work The work in this thesis relates to the following topics: Real time portfolio management Application-specific application generators <ref> [Bernstein 90] </ref> Generic software entities (such as strategies, daemons, etc.) There is a plethora of software that claims to be portfolio management software. Most of this, however, addresses a specific area of portfolio management - security selection. <p> In effect, SPLENDORS generates code much like an application generator. However, it is very specific to a particular application. Thus it is essentially an application specific application generator. Igor <ref> [Bernstein 90] </ref> is another example of an application specific application generator created to translate VIF specifications into declarations which are then subsequently used by the VHDL analyzer.
Reference: [Brennan 90] <author> Peter J. Brennan. </author> <title> Portfolio Managers' Software Wish List. Wall Street Computer Review , February, </title> <year> 1990. </year>
Reference-contexts: Most of this, however, addresses a specific area of portfolio management - security selection. While security selection is an important aspect of portfolio management, the two are by no means the same <ref> [Brennan 90] </ref>. Many of these portfolio managers do not have any real time characteristics. They allow the user to input the current price along with other parameters to do an analysis of the merit of the particular security.
Reference: [Chakravarthy 90] <author> Sharma Chakravarthy and Susan Nesson. </author> <title> Making an Ojbect-Oriented DBMS Active: Design, Implementation, and Evaluation of a Prototype. </title> <booktitle> In International Conference on Extending Database Technology, </booktitle> <pages> pages 393-406. </pages> <address> Venice, Italy, </address> <month> March, </month> <year> 1990. </year>
Reference-contexts: SPLENDORS will raise the alarm only for the appropriate investors. The underlying motivation behind PROFIT (and SPLENDORS) is to take an intermediate approach between polling and active value propagation. Chakravarthy <ref> [Chakravarthy 90] </ref> does some performance analysis 44 between the two approaches and concludes that while the active value approach might be better in general, this is not always the case.
Reference: [Chan 88] <author> Y. Y. Chan, E. G. Saw and T. S. Dillon. </author> <title> An Expert System For Portfolio Management Using Both Frames and Production Rules. </title> <booktitle> In 8th International Workshop on Expert Systems and their Applications, </booktitle> <pages> pages 463-481. </pages> <address> Avignon, France, May-June, </address> <year> 1988. </year>
Reference-contexts: Many of these portfolio managers do not have any real time characteristics. They allow the user to input the current price along with other parameters to do an analysis of the merit of the particular security. PORT-MAN <ref> [Chan 88] </ref> in an investment consultation system created with the banking industry in mind. While not limited to securities, it describes the use of frames to represent individual investor goals, specific instruments not unlike the way facets are used to represent strategies and securities.
Reference: [Hailpern 91] <author> Brent Hailpern and Gail E. Kaiser. </author> <title> Dynamic Reconfiguration in an Object-Based Programming Language with Distributed Shared Data. </title> <booktitle> In 11th International Conference on Distributed Computing Systems, </booktitle> <pages> pages 73-80. </pages> <address> Arlington TX, </address> <month> May, </month> <year> 1991. </year>
Reference-contexts: It is reacquired when it wakes up. The facet goes on to process some other pending request. As SPLENDORS was developed, it became evident that a way to dynamically change the portfolio objects was needed. While an elaborate dynamic reconfiguration methodology had been designed <ref> [Hailpern 91] </ref>, it was decided that it would be expedient to use a simpler, limited dynamic reconfiguration method until the 9 more elaborate and complete methodology can be incorporated in PROFIT. <p> To integrate such dynamic actions, it is essential that PROFIT provide a way to add facets and objects dynamically. A general, elaborate scheme to do this has been partially designed <ref> [Hailpern 91] </ref>. However, due to time constraints, it has not yet been implemented in CAPITAL. To accommodate the needs of SPLENDORS, a simplified version of dynamic reconfiguration is provided by CAPITAL. <p> capability to perform such conversions in other applications in the financial applications domain as well as other domains. 39 Chapter 8 Future Work Major areas for future work in CAPITAL/SPLENDORS are in the following areas: Replacing the limited dynamic reconfiguration in CAPITAL with a more complete design already partially completed <ref> [Hailpern 91] </ref>. Extending CAPITAL to incorporate the multi-processing features of PROFIT. Extending PROFIT and CAPITAL to handle distributed systems. Extending SPLENDORS (or creating some other sample application) to be a multi-process, distributed system capable of handling many brokers (possibly in the hundreds) and clients (possibly in the thousands). <p> The interpretive method of adding components dynamically is clearly limited and inconsistent with the PROFIT design of not allowing the programmer to get control of arbitrary handles. It should be replaced by the more elaborate method of handling dynamic updates already partly designed <ref> [Hailpern 91] </ref>. Finally, SPLENDORS illustrates the use of libraries of pre-defined generic components created to conform to the SPLENDORS architecture. Since such conformance is the only requirement, this shows how one can create such generic reusable components for other PROFIT applications.
Reference: [Kaiser 90] <author> Gail E. Kaiser and Brent Hailpern. </author> <title> An Object-Based Programming Model for Shared Data. </title> <booktitle> In 1990 International Conference on Computer Languages, </booktitle> <pages> pages 136-144. </pages> <address> New Orleans LA, </address> <month> March, </month> <year> 1990. </year>
Reference-contexts: Introduction The PROFIT language <ref> [Kaiser 90, Kaiser 91] </ref> is motivated by applications driven by large quantities of rapidly changing data. An example of such an application is the portfolio management application that seeks to take advantage of the market conditions to optimize portfolios. <p> This involves real time monitoring of market conditions, execution of strategies using up-to-date market conditions information, and updating portfolios on a real time basis to take advantage of the market conditions. This section contains a brief description of PROFIT. For a more detailed description, see <ref> [Kaiser 90, Kaiser 91] </ref>. There are three main concepts in PROFIT facets, objects and processes (see figure 2-1) A facet is a minimal unit of data and control. It is made up of slots. Each such slot contains either data or code.
Reference: [Kaiser 91] <author> Gail E. Kaiser and Brent Hailpern. </author> <title> An Object-Based Programming Model for Shared Data. </title> <journal> ACM Transactions on Programming Languages and Systems , 1991. </journal> <note> In press. </note> <institution> Available as IBM Research Report RC 16442 or Columbia University Department of Computer Science CUCS-046-90. </institution>
Reference-contexts: Introduction The PROFIT language <ref> [Kaiser 90, Kaiser 91] </ref> is motivated by applications driven by large quantities of rapidly changing data. An example of such an application is the portfolio management application that seeks to take advantage of the market conditions to optimize portfolios. <p> This involves real time monitoring of market conditions, execution of strategies using up-to-date market conditions information, and updating portfolios on a real time basis to take advantage of the market conditions. This section contains a brief description of PROFIT. For a more detailed description, see <ref> [Kaiser 90, Kaiser 91] </ref>. There are three main concepts in PROFIT facets, objects and processes (see figure 2-1) A facet is a minimal unit of data and control. It is made up of slots. Each such slot contains either data or code.
Reference: [Leffler 86] <author> Samuel J. Leffler, Robert S. Fabry, William N. Joy, Phil Lapsley, Steve Miller and Chris Torek. </author> <title> An Advanced 4.3BSD Interprocess Communication Tutorial. UNIX Programmer's Manual Supplementary Documents. </title> <institution> University of California, Berkeley, </institution> <address> 1986, pages PS1:8-1 - PS1:8-41. </address>
Reference-contexts: The simulated feed runs as a separate UNIX process and communicates with the main SPLENDORS and the SPLENDORS user interface UNIX processes using the standard socket <ref> [Sechrest 86, Leffler 86] </ref> mechanism. The feed process generates on a real-time basis, updated prices for individual securities simulated news messages and attempts to co-relate the two.
Reference: [Leinweber 88] <author> David Leinweber. </author> <title> Knowledge-Based Systems for Financial Applications. </title> <journal> IEEE Expert :18-31, </journal> <month> Fall, </month> <year> 1988. </year>
Reference-contexts: However, PORT-MAN is primarily a goal decomposition system and not a portfolio management system. It has no real-time content at all. Instead, it is designed as a consultation system. Leinweber <ref> [Leinweber 88] </ref> describes a software system that incorporates real-time characteristics and an "alarm window" that displays securities whose alarms have been triggered due to the violation of some threshold. However, unlike SPLENDORS, this system is geared to traders.
Reference: [Patel 91] <author> Tushar M. Patel and Gail E. Kaiser. </author> <title> The SPLENDORS Real Time Portfolio Management System. </title> <booktitle> In First International Conference on Artificial Intelligence Applications on Wall Street. </booktitle> <address> New York NY, </address> <month> October, </month> <year> 1991. </year> <note> In press. </note> <institution> Available as Columbia University Department of Computer Science, CUCS-011-91, </institution> <month> April </month> <year> 1991. </year>
Reference-contexts: This thesis has been motivated by the problem of real-time portfolio management. The primary work is the creation of a real-time portfolio management application SPLENDORS <ref> [Patel 91] </ref>.
Reference: [Sechrest 86] <author> Stuart Sechrest. </author> <title> An Introductory 4.3BSD Interprocess Communication Tutorial. UNIX Programmer's Manual Supplementary Documents. </title> <institution> University of California, Berkeley, </institution> <address> 1986, pages PS1:7-1 - PS1:7-25. </address> <month> 52 </month>
Reference-contexts: The simulated feed runs as a separate UNIX process and communicates with the main SPLENDORS and the SPLENDORS user interface UNIX processes using the standard socket <ref> [Sechrest 86, Leffler 86] </ref> mechanism. The feed process generates on a real-time basis, updated prices for individual securities simulated news messages and attempts to co-relate the two.

References-found: 11

