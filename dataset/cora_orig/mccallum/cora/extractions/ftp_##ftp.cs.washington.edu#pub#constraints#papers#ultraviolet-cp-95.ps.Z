URL: ftp://ftp.cs.washington.edu/pub/constraints/papers/ultraviolet-cp-95.ps.Z
Refering-URL: http://www.cs.washington.edu/research/constraints/solvers/ultraviolet-cp-95.html
Root-URL: 
Email: borning@cs.washington.edu  bnfb@oti.on.ca  
Title: The OTI Constraint Solver: A Constraint Library for Constructing Interactive Graphical User Interfaces  
Author: Alan Borning Bjorn N. Freeman-Benson R. Buckminster Fuller 
Address: Box 352350 Seattle, Washington 98195-2350, USA  201 506 Fort St., Victoria, B.C., Canada V8W 1E6  
Affiliation: Department of Computer Science and Engineering University of Washington  Object Technology International Inc.  Laboratory  
Abstract: ENVY/Constraints is an IBM/Smalltalk library that provides a constraint satisfier and a collection of useful constraints, targeted at developing interactive graphical user interfaces. The solver supports multi-way constraints and constraint hierarchies. It uses a hybrid algorithm, combining local propagation with pluggable cycle solvers, allowing constraints to range over arbitrary objects, while at the same time satisfying constraints representing simultaneous equations over the reals.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Alan Borning. </author> <title> The programming language aspects of ThingLab, a constraint-oriented simulation laboratory. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 3(4) </volume> <pages> 353-387, </pages> <month> October </month> <year> 1981. </year>
Reference-contexts: Early examples of such research projects include Sketchpad [10] and ThingLab <ref> [1] </ref>. More recent projects include Garnet [7], TRIP II [6], and many others. (See e.g. [8] for many additional references.) In this project, we wanted to provide a commercial-quality constraint library, written in Smalltalk, to support writing interactive graphical applications.
Reference: [2] <author> Alan Borning, Bjorn Freeman-Benson, and Molly Wilson. </author> <title> Constraint hierarchies. </title> <journal> Lisp and Symbolic Computation, </journal> <volume> 5(3) </volume> <pages> 223-270, </pages> <month> September </month> <year> 1992. </year>
Reference-contexts: We wanted to support multi-way as well as one-way constraints, since multi-way constraints are more expressive, particularly for such uses as layout and geometric constraints. 3. We wanted to support constraint hierarchies <ref> [2] </ref>, which allow soft or preferential constraints as well as required constraints. Such constraints are particularly useful in an interactive graphical environment to express the desire for stability in a figure|that some part shouldn't move unless some stronger constraint forces it to.
Reference: [3] <author> Bjorn Freeman-Benson, John Maloney, and Alan Borning. </author> <title> An incremental constraint solver. </title> <journal> Communications of the ACM, </journal> <volume> 33(1) </volume> <pages> 54-63, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: Within a connected subgraph, the constraints and variables are partitioned into cycles and acyclic local propagation regions, based on the topology of the constraint graph. The local propagation regions are solved using the DeltaBlue algorithm <ref> [3, 9] </ref>.
Reference: [4] <author> Joxan Jaffar, Spiro Michaylov, Peter Stuckey, and Roland Yap. </author> <title> The CLP(R) language and system. </title> <journal> ACM Transactions on Programming Languages and Systems, </journal> <volume> 14(3) </volume> <pages> 339-395, </pages> <month> July </month> <year> 1992. </year>
Reference-contexts: it at its current value, so if the variable isn't given a value by some stronger constraint the weakest stay will cause it to remain at its current value.) The design of the linear equation cycle solver is adapted from that of the linear equation solver used in CLP (R) <ref> [4] </ref>.
Reference: [5] <author> Gus Lopez, Bjorn Freeman-Benson, and Alan Borning. </author> <title> Implementing constraint imperative programming languages: The Kaleidoscope'93 virtual machine. </title> <booktitle> In Proceedings of the 1994 ACM Conference on Object-Oriented Programming Systems, Languages, and Applications, </booktitle> <pages> pages 259-271, </pages> <month> October </month> <year> 1994. </year> <month> 4 </month>
Reference-contexts: However, as the project has progressed, it has become a research endeavor in its own right. The work has also fed back into academia; for example, the ENVY/Constraints solver is now used as the constraint engine underlying our current implementation of the Kaleidoscope'93 constraint imperative language <ref> [5] </ref>. There has been much industrial work in applying constraints to planning, scheduling, and optimization problems, which has already achieved excellent results. The techniques required for such applications are rather different, however, than those needed for interactive user interfaces. We need low latency response for interactivity.
Reference: [6] <author> Satoshi Matsuoka, Shin Takahashi, Tomihisa Kamada, and Akinori Yonezawa. </author> <title> A general framework for bidirectional translation between abstract and pictorial data. </title> <journal> ACM Transactions on Information Systems, </journal> <volume> 10(4) </volume> <pages> 408-437, </pages> <month> October </month> <year> 1992. </year>
Reference-contexts: Early examples of such research projects include Sketchpad [10] and ThingLab [1]. More recent projects include Garnet [7], TRIP II <ref> [6] </ref>, and many others. (See e.g. [8] for many additional references.) In this project, we wanted to provide a commercial-quality constraint library, written in Smalltalk, to support writing interactive graphical applications.
Reference: [7] <author> Brad A. Myers, Dario A. Giuse, Roger B. Dannenberg, Brad Vander Zanden, David S. Kosbie, Ed Per-vin, Andrew Mickish, and Philippe Marchal. Garnet: </author> <title> Comprehensive support for graphical, highly-interactive user interfaces. </title> <journal> IEEE Computer, </journal> <volume> 23(11) </volume> <pages> 71-85, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: Early examples of such research projects include Sketchpad [10] and ThingLab [1]. More recent projects include Garnet <ref> [7] </ref>, TRIP II [6], and many others. (See e.g. [8] for many additional references.) In this project, we wanted to provide a commercial-quality constraint library, written in Smalltalk, to support writing interactive graphical applications.
Reference: [8] <author> Michael Sannella. </author> <title> Constraint Satisfaction and Debugging for Interactive User Interfaces. </title> <type> PhD thesis, </type> <institution> Department of Computer Science and Engineering, University of Washington, </institution> <year> 1994. </year>
Reference-contexts: Early examples of such research projects include Sketchpad [10] and ThingLab [1]. More recent projects include Garnet [7], TRIP II [6], and many others. (See e.g. <ref> [8] </ref> for many additional references.) In this project, we wanted to provide a commercial-quality constraint library, written in Smalltalk, to support writing interactive graphical applications.
Reference: [9] <author> Michael Sannella, John Maloney, Bjorn Freeman-Benson, and Alan Borning. </author> <title> Multi-way versus one-way constraints in user interfaces: Experience with the DeltaBlue algorithm. </title> <journal> Software|Practice and Experience, </journal> <volume> 23(5) </volume> <pages> 529-566, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: Within a connected subgraph, the constraints and variables are partitioned into cycles and acyclic local propagation regions, based on the topology of the constraint graph. The local propagation regions are solved using the DeltaBlue algorithm <ref> [3, 9] </ref>.
Reference: [10] <author> Ivan Sutherland. </author> <title> Sketchpad: A Man-Machine Graphical Communication System. </title> <type> PhD thesis, </type> <institution> Department of Electrical Engineering, MIT, </institution> <month> January </month> <year> 1963. </year> <month> 5 </month>
Reference-contexts: Early examples of such research projects include Sketchpad <ref> [10] </ref> and ThingLab [1]. More recent projects include Garnet [7], TRIP II [6], and many others. (See e.g. [8] for many additional references.) In this project, we wanted to provide a commercial-quality constraint library, written in Smalltalk, to support writing interactive graphical applications.
References-found: 10

