URL: http://www.icsi.berkeley.edu/~yairb/pubs/AAB-online-GST.ps
Refering-URL: http://www.icsi.berkeley.edu/~yairb/
Root-URL: http://www.icsi.berkeley.edu
Title: On-line Generalized Steiner Problem  
Author: Baruch Awerbuch Yossi Azar Yair Bartal 
Keyword: Off-line generalized Steiner problem approximation algorithms  
Web: [AKR91, GW92].  
Note: were given in  
Abstract: The Generalized Steiner Problem (GSP) is defined as follows. We are given a graph with non-negative weights and a set of pairs of vertices. The algorithm has to construct minimum weight subgraph such that the two nodes of each pair are connected by a path. We consider the on-line generalized Steiner problem, in which pairs of vertices arrive on-line and are needed to be connected immediately. We give a simple O(log 2 n) competitive deterministic on-line algorithm. The previous best algorithm was O( p n log n) competitive [WY93]. We also consider the network connectivity leasing problem which is a generalization of the GSP. Here edges of the graph can be either bought or leased for different costs. We provide simple randomized O(log 2 n) competitive algorithm based on the on-line generalized Steiner problem result. 
Abstract-found: 1
Intro-found: 1
Reference: [AA93] <author> N. Alon and Y. Azar. </author> <title> On-line steiner trees in the euclidean plane. </title> <booktitle> In Discrete and Computational Geometry, </booktitle> <volume> volume 10, </volume> <pages> pages 113-121, </pages> <year> 1993. </year>
Reference-contexts: The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including <ref> [IW91, CV93, AA93, ABF93, WY93] </ref>. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc.
Reference: [ABF93] <author> Baruch Awerbuch, Yair Bartal, and Amos Fiat. </author> <title> Competitive distributed file allocation. </title> <booktitle> In Proc. 25th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 164-173, </pages> <month> May </month> <year> 1993. </year>
Reference-contexts: The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including <ref> [IW91, CV93, AA93, ABF93, WY93] </ref>. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. <p> The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation <ref> [BFR92, ABF93, WY93, LRWY94] </ref>, etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. <p> Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work. <p> Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work. Optimally-competitive algorithms are known for both ski rental problem [Kar92] and tree leasing problem <ref> [BFR92, ABF93] </ref>. This work does not apply to the general case of network connectivity leasing. We give a randomized connectivity leasing algorithm that follows as application of Theorem 1.1, using a general technique ([Bar94]) that applies to a large set of on-line problems.
Reference: [AK94] <author> S. Albers and H. Koga. </author> <title> New on-line algorithms for the page replication problem. </title> <booktitle> In Proc. 4th Scandinavian Workshop on Algorithmic Theory, </booktitle> <month> July </month> <year> 1994. </year>
Reference-contexts: Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work.
Reference: [AKR91] <author> A. Agrawal, P. Klein, and R. Ravi. </author> <title> When trees collide: An approximation algorithm for the generalized Steiner problem in networks. </title> <booktitle> In Proceedings of the 23rd ACM Symposium on Theory of Computing, </booktitle> <pages> pages 134-144, </pages> <year> 1991. </year>
Reference-contexts: The Generalized Steiner Problem (GSP) is defined as follows. We are given a graph with non-negative weights and a set of pairs of vertices. The algorithm has to construct minimum weight subgraph such that the two nodes of each pair are connected by a path. This problem <ref> [AKR91, GW92] </ref> has recently received a lot of attention in combinatorial optimization, networking, and distributed computing communities. Agrawal et al and Goemans et al [AKR91, GW92] have shown a polynomial-time 2 (1 1 n )-approximation algorithm. However, these algorithms are inapplicable in either on-line or distributed environments. <p> The algorithm has to construct minimum weight subgraph such that the two nodes of each pair are connected by a path. This problem <ref> [AKR91, GW92] </ref> has recently received a lot of attention in combinatorial optimization, networking, and distributed computing communities. Agrawal et al and Goemans et al [AKR91, GW92] have shown a polynomial-time 2 (1 1 n )-approximation algorithm. However, these algorithms are inapplicable in either on-line or distributed environments. The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. <p> On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. As pointed out in <ref> [AKR91] </ref>, the on-line generalized Steiner problem can be viewed as the problem of minimizing the cost of building a network satisfying certain connectivity requirements, where new such requirements appear over time.
Reference: [AP90] <author> Baruch Awerbuch and David Peleg. </author> <title> Network synchronization with polylog-arithmic overhead. </title> <booktitle> In Proc. 31st IEEE Symp. on Found. of Comp. Science, </booktitle> <pages> pages 514-522, </pages> <year> 1990. </year>
Reference-contexts: It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization <ref> [AP90] </ref>, mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary.
Reference: [AP91] <author> Baruch Awerbuch and David Peleg. </author> <title> Concurrent online tracing of mobile users. </title> <booktitle> In Proc. of the Annual ACM SIGCOMM Symposium on Communication Architectures and Protocols, </booktitle> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year> <month> 8 </month>
Reference-contexts: It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking <ref> [AP91] </ref>, distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary.
Reference: [Bar94] <author> Yair Bartal. </author> <title> Competitive Analysis of Distributed On-line Problems | Dis--tributed Paging, </title> <type> Ph.D. Thesis. </type> <institution> Tel-Aviv University. Dept. of Computer Science. </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: However changing configurations is F times more expensive. Thus, the network connectivity leasing problem is the F -relaxed version of GSP. Theorem 3.1 is a corollary of the following theorem of <ref> [Bar94] </ref> which is based on the natural potential function [BFR92]: Theorem 3.2 Given a c-competitive algorithm for a forcing metrical task system, there exists a (3 1 F ) c-competitive algorithm for the associated F -relaxed task system.
Reference: [BFR92] <author> Yair Bartal, Amos Fiat, and Yuval Rabani. </author> <title> Competitive algorithms for distributed data management. </title> <booktitle> In Proc. 24th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 39-50, </pages> <year> 1992. </year>
Reference-contexts: The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation <ref> [BFR92, ABF93, WY93, LRWY94] </ref>, etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. <p> Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work. <p> Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work. Optimally-competitive algorithms are known for both ski rental problem [Kar92] and tree leasing problem <ref> [BFR92, ABF93] </ref>. This work does not apply to the general case of network connectivity leasing. We give a randomized connectivity leasing algorithm that follows as application of Theorem 1.1, using a general technique ([Bar94]) that applies to a large set of on-line problems. <p> However changing configurations is F times more expensive. Thus, the network connectivity leasing problem is the F -relaxed version of GSP. Theorem 3.1 is a corollary of the following theorem of [Bar94] which is based on the natural potential function <ref> [BFR92] </ref>: Theorem 3.2 Given a c-competitive algorithm for a forcing metrical task system, there exists a (3 1 F ) c-competitive algorithm for the associated F -relaxed task system.
Reference: [BLS87] <author> A. Borodin, N. Linial, and M. Saks. </author> <title> An optimal on-line algorithm for metrical task systems. </title> <booktitle> In Proc. of the 19th Ann. ACM Symp on Theory of Computing, </booktitle> <pages> pages 373-382, </pages> <month> may </month> <year> 1987. </year>
Reference-contexts: With probability 1=2F buy all non-bought edges in the path and otherwise lease. Theorem 3.1 The GSP-based randomized network connectivity leasing algorithm is O (log 2 n) competitive against adaptive on-line adversaries. The theorem is a consequence of a more general theorem for task systems <ref> [BLS87] </ref>. A metrical forcing task system [MMS88] is an on-line problem composed by a configurations metric space and a set of tasks.
Reference: [Bol78] <author> B. Bollobas. </author> <title> Extremal Graph Theory. </title> <publisher> Academic Press, </publisher> <year> 1978. </year>
Reference-contexts: Since these nodes are d-separated, these spheres are disjoint, and the total cost sums up to jV d jd=2. This cost cannot exceed the total weight of C, weight (C), and thus jV d j weight (C) d=2 5 Proof: (of Lemma 2.4): The girth <ref> [Bol78] </ref> of a graph is the length of a shortest cycle. It is proved in [Bol78] that the number of edges in G `;d can be upper-bounded as jE `;d j = O (jV d j g (G `;d ) ) (5) where g (G `;d ) denotes the girth of <p> This cost cannot exceed the total weight of C, weight (C), and thus jV d j weight (C) d=2 5 Proof: (of Lemma 2.4): The girth <ref> [Bol78] </ref> of a graph is the length of a shortest cycle. It is proved in [Bol78] that the number of edges in G `;d can be upper-bounded as jE `;d j = O (jV d j g (G `;d ) ) (5) where g (G `;d ) denotes the girth of G `;d . <p> To see that the Lemma is almost tight we construct a graph of girth g = log n= log log n and has m = n log n edges. Such a graph exists follows from <ref> [Bol78] </ref>. Then we replace each edge in the graph by three serial edges. We associate a weight of 1 to the first and the last edges in each triplet and a weight of g to middle one.
Reference: [BS89] <author> D.L. Black and D.D. Sleator. </author> <title> Competitive algorithms for replication and migration problems. </title> <type> Technical Report CMU-CS-89-201, </type> <institution> Carnegie-Mellon, </institution> <year> 1989. </year>
Reference-contexts: Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work.
Reference: [CV93] <author> B. Chandra and S. Vishwanathan. </author> <title> Constructing reliable communication networks of small wight online. </title> <type> unpublished manuscript, </type> <month> Nov </month> <year> 1993. </year>
Reference-contexts: The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including <ref> [IW91, CV93, AA93, ABF93, WY93] </ref>. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc.
Reference: [GW92] <author> M. Goemans and D. Williamson. </author> <title> General approximation technique for constrained forest problems. </title> <booktitle> In Proceedings of the 3rd Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 307-315, </pages> <year> 1992. </year>
Reference-contexts: The Generalized Steiner Problem (GSP) is defined as follows. We are given a graph with non-negative weights and a set of pairs of vertices. The algorithm has to construct minimum weight subgraph such that the two nodes of each pair are connected by a path. This problem <ref> [AKR91, GW92] </ref> has recently received a lot of attention in combinatorial optimization, networking, and distributed computing communities. Agrawal et al and Goemans et al [AKR91, GW92] have shown a polynomial-time 2 (1 1 n )-approximation algorithm. However, these algorithms are inapplicable in either on-line or distributed environments. <p> The algorithm has to construct minimum weight subgraph such that the two nodes of each pair are connected by a path. This problem <ref> [AKR91, GW92] </ref> has recently received a lot of attention in combinatorial optimization, networking, and distributed computing communities. Agrawal et al and Goemans et al [AKR91, GW92] have shown a polynomial-time 2 (1 1 n )-approximation algorithm. However, these algorithms are inapplicable in either on-line or distributed environments. The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem.
Reference: [IW91] <author> M. Imaze and B.M. Waxman. </author> <title> Dynamic steiner tree problem. </title> <journal> SIAM Journal on Discrete Mathematics, </journal> <volume> 4(3) </volume> <pages> 369-384, </pages> <month> august </month> <year> 1991. </year>
Reference-contexts: The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including <ref> [IW91, CV93, AA93, ABF93, WY93] </ref>. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. <p> An (log n) lower bound on the competitiveness of any on-line alorithm for the generalized Steiner problem follows from the lower bound on-line Steiner tree, shown by Imaze and Waxman <ref> [IW91] </ref>. 1.2 Network Connectivity Leasing Problem The GSP problem can be generalized to Network Connectivity Leasing problem below. Imagine we can either buy or lease network edges. The cost of purchasing an edge is F times more expensive than the cost of renting that edge.
Reference: [Kar72] <author> R.M. Karp. </author> <title> Reducibility among Combinatorial Problems. R.E. </title> <editor> Miller and J.W. Thatcher (eds.), </editor> <title> Complexity of Computer Computations, </title> <publisher> Plenum Press, </publisher> <address> New York, </address> <year> 1972. </year>
Reference-contexts: However, these algorithms are inapplicable in either on-line or distributed environments. The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems <ref> [Kar72, Win92] </ref>. The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc.
Reference: [Kar92] <author> R.M. Karp. </author> <title> "on-line algorithms bersus off-line algorithms: how much is it worth to know the future?,". </title> <booktitle> In Proc. World Computer Congress, </booktitle> <year> 1992. </year>
Reference-contexts: We comment this special case is essentially the file replication problem [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94]. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see <ref> [Kar92] </ref>). Our result versus previous work. Optimally-competitive algorithms are known for both ski rental problem [Kar92] and tree leasing problem [BFR92, ABF93]. This work does not apply to the general case of network connectivity leasing. <p> Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see <ref> [Kar92] </ref>). Our result versus previous work. Optimally-competitive algorithms are known for both ski rental problem [Kar92] and tree leasing problem [BFR92, ABF93]. This work does not apply to the general case of network connectivity leasing. We give a randomized connectivity leasing algorithm that follows as application of Theorem 1.1, using a general technique ([Bar94]) that applies to a large set of on-line problems.
Reference: [Kog93] <author> H. Koga. </author> <title> Randomized on-line algorithms for the page replication problem. </title> <booktitle> In Proc. of the 4th International Symp. on Algorithms and Computation, </booktitle> <year> 1993. </year>
Reference-contexts: Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work.
Reference: [LRWY94] <author> C. Lund, N. Reingold, J. Westbrook, and D. Yan. </author> <title> On-line distributed data management. </title> <booktitle> In Proc. of European Symp. on Algorithms, </booktitle> <year> 1994. </year>
Reference-contexts: The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation <ref> [BFR92, ABF93, WY93, LRWY94] </ref>, etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. <p> Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work.
Reference: [MMS88] <author> M.S. Manasse, L.A. McGeoch, and D.D. Sleator. </author> <title> Competitive algorithms or on-line problems. </title> <booktitle> In Proc. 20th ACM Symp. on Theory of Computing, </booktitle> <pages> pages 322-333. </pages> <publisher> ACM SIGACT, ACM, </publisher> <month> May </month> <year> 1988. </year>
Reference-contexts: Theorem 3.1 The GSP-based randomized network connectivity leasing algorithm is O (log 2 n) competitive against adaptive on-line adversaries. The theorem is a consequence of a more general theorem for task systems [BLS87]. A metrical forcing task system <ref> [MMS88] </ref> is an on-line problem composed by a configurations metric space and a set of tasks. At every time the algorithm is associated with a configuration, and each task defines a set of allowable tasks, that may be associated with the algorithm after the arrival of that task.
Reference: [Win92] <author> P. Winter. </author> <title> Steiner problem in networks: A survey. </title> <journal> Networks, </journal> <volume> 17(6) </volume> <pages> 129-167, </pages> <month> June </month> <year> 1992. </year> <month> 9 </month>
Reference-contexts: However, these algorithms are inapplicable in either on-line or distributed environments. The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems <ref> [Kar72, Win92] </ref>. The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc.
Reference: [WY93] <author> J. Westbrook and D.K. Yan. </author> <title> Greedy algorithms for the on-line steiner tree and generalized steiner problems. </title> <booktitle> In Workshop on Algorithms and Data Structures, </booktitle> <year> 1993. </year>
Reference-contexts: The special case of the GSP problem where all pairs of some subset of vertices have to be connected is the Steiner Tree problem. It is one of the most notorious NP-hard problems [Kar72, Win92]. The problem has been studies in a series of papers including <ref> [IW91, CV93, AA93, ABF93, WY93] </ref>. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. <p> The problem has been studies in a series of papers including [IW91, CV93, AA93, ABF93, WY93]. On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation <ref> [BFR92, ABF93, WY93, LRWY94] </ref>, etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem [WY93] captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. <p> On-line version of the problem. On-line Steiner tree problem comes up in the context of network synchronization [AP90], mobile users tracking [AP91], distributed paging and file allocation [BFR92, ABF93, WY93, LRWY94], etc. On-line Generalized Steiner Problem (in contrast to on-line Steiner Tree) problem <ref> [WY93] </ref> captures more refined communication requirements, e.g., situations where only partial (rather than global) synchronization is necessary. <p> The algorithm 2 has to add v to the j'th group, so that all the vertices which belong to group j are connected. Our result versus previous work. Westbrook and Yan <ref> [WY93] </ref> gave an algorithm for on-line GSP that achieves O ( p n log n) competitive ratio. In contrast, we show Theorem 1.1 The Min-Cost algorithm for the on-line generalized Steiner problem is O (log 2 n) competitive. <p> Once an edge is bought, it can be used for free to accommodate future requests. The special case of Connectivity Leasing problem, in which all edges bought must form a tree, is called Tree Leasing Problem. We comment this special case is essentially the file replication problem <ref> [BS89, BFR92, ABF93, WY93, Kog93, AK94, LRWY94] </ref>. Picking F = 1, the problem reduces to the generalized Steiner problem. Note that for a single link network, this is exactly the ski rental problem (due to L. Rudolph, see [Kar92]). Our result versus previous work.
References-found: 21

