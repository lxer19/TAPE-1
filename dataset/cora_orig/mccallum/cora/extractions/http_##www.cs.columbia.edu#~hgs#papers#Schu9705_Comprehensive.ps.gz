URL: http://www.cs.columbia.edu/~hgs/papers/Schu9705_Comprehensive.ps.gz
Refering-URL: http://www.cs.columbia.edu/~hgs/research/talks.html
Root-URL: http://www.cs.columbia.edu
Email: schulzrinne@cs.columbia.edu  
Phone: +1 212 939 7042  
Title: A comprehensive multimedia control architecture for the Internet  
Author: Henning Schulzrinne 
Address: New York, NY 10027  
Affiliation: Dept. of Computer Science Columbia University  
Abstract: The Internet and intranets have been used to deliver continuous media, both stored and live, for a number of years. Most of the attention has focused on providing guaranteed quality of service (RSVP) and end-to-end data transport (RTP), with every application using its own control protocol. In this paper, we describe a control architecture that offers most standard advanced telephony features and integrates stored and conference multimedia. The protocol re-uses much of the infrastructure of HTTP, including its security and proxy mechanisms. The architecture is instantiated by two related, but independent protocols: the Session Initiation Protocol (SIP) for inviting participants to a multimedia session and the Real-Time Stream Protocol (RTSP) to control playback and recording for stored continuous media. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Schulzrinne, </author> <title> RTP profile for audio and video conferences with minimal control, Request for Comments (Proposed Standard) RFC 1890, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: Stored, live and conferencing multimedia services require a number of new Internet services for both data transport and control. Protocols for transporting real-time data <ref> [1] </ref> and for reserving resources to guarantee quality of service [2] have been developed, standardized and are beginning to be widely used in products. However, protocols to initiate and control multimedia sessions are less well developed.
Reference: [2] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zap-pala, RSVP: </author> <title> a new resource ReSerVation protocol, </title> <journal> IEEE Network, </journal> <volume> vol. 7, </volume> <pages> pp. 818, </pages> <month> Sept. </month> <year> 1993. </year>
Reference-contexts: Stored, live and conferencing multimedia services require a number of new Internet services for both data transport and control. Protocols for transporting real-time data [1] and for reserving resources to guarantee quality of service <ref> [2] </ref> have been developed, standardized and are beginning to be widely used in products. However, protocols to initiate and control multimedia sessions are less well developed. In this paper, we present two independent, but interacting protocols that initiate and control stored, live and interactive multimedia sessions in the Internet.
Reference: [3] <author> M. Handley, SDP: </author> <title> Session description protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: The protocols support the following scenarios: Phone call: Two-party and multi-party multimedia calls with standard telephone services such as call forwarding, automatic call distribution, third-party signaling and answering services. Invitation to a multi-party conference: It is possible to invite users to sessions announced through a multicast session directory <ref> [3] </ref> or a web page. Near video-on-demand: Popular movies are shown staggered in time across a set of multicast groups and may be controlled by a teacher, for example. Video-on-demand: Movies are requested by individual viewers and can be controlled in VCR-like fashion. <p> Access control is through encryption. This session model is often called the light-weight session model [32]; unlike central-registry models, it scales to very large conferences and survives network partitions. Currently, these sessions and their attributes are announced using a well-known multicast address and a simple textual description (SDP) <ref> [3] </ref>, which is also used to arbitrate use of the dynamically assigned multicast addresses. This directory model is well suited for public and private pre-planned group events, but does not support telephone calls or inviting participants to a session, nor does it deal with controlling multimedia streams. <p> The current session description protocol <ref> [3] </ref> works well when describing live multimedia sessions as found on the Mbone. However, it is not as well suited for describing stored sessions where a user can, for example, piece together a movie from different sound tracks and video versions.
Reference: [4] <author> M. Handley, H. Schulzrinne, and E. Schooler, SIP: </author> <title> session initiation protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: There are many applications for this, such as a group of people watching a movie or training video together. 1 We describe two protocols that support the scenarios de-scribed above, namely the Session Initiation Protocol (SIP) <ref> [4] </ref> in Section 4 to establish and control multimedia conferences and the Real-Time Stream Protocol (RTSP) [5] in Section 5 to control delivery of stored and live streaming multimedia content. In addition, we briefly mention efforts towards an improved description format in Section 6. Section 2 motivates the protocol design.
Reference: [5] <author> H. Schulzrinne, A. Rao, and R. Lanphier, </author> <title> Real time streaming protocol (RTSP), </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: many applications for this, such as a group of people watching a movie or training video together. 1 We describe two protocols that support the scenarios de-scribed above, namely the Session Initiation Protocol (SIP) [4] in Section 4 to establish and control multimedia conferences and the Real-Time Stream Protocol (RTSP) <ref> [5] </ref> in Section 5 to control delivery of stored and live streaming multimedia content. In addition, we briefly mention efforts towards an improved description format in Section 6. Section 2 motivates the protocol design.
Reference: [6] <author> D. T. Magill, </author> <title> Adaptive speech compression for packet communication systems, </title> <booktitle> in Conference record of the IEEE National Telecommunications Conference, </booktitle> <pages> pp. </pages> <address> 29D1 29D5, </address> <year> 1973. </year>
Reference-contexts: Section 2 motivates the protocol design. While this set of protocols enables interoperable deployment of a wide variety of Internet multimedia services, Section 8 alludes to some pieces which are still missing. 1.1 Related Work Efforts to design multimedia applications and protocols for packet-switched networks <ref> [6, 7] </ref> date back to the early days of the Internet; systems have been developed for various combinations of packet-switched and circuit-switched networks [8, 9]. In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use.
Reference: [7] <author> Anonymous, </author> <title> Special issue on packet switched voice and data communication, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. SAC-1, </volume> <month> Dec. </month> <year> 1983. </year>
Reference-contexts: Section 2 motivates the protocol design. While this set of protocols enables interoperable deployment of a wide variety of Internet multimedia services, Section 8 alludes to some pieces which are still missing. 1.1 Related Work Efforts to design multimedia applications and protocols for packet-switched networks <ref> [6, 7] </ref> date back to the early days of the Internet; systems have been developed for various combinations of packet-switched and circuit-switched networks [8, 9]. In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use.
Reference: [8] <author> Arango et al., </author> <title> Touring machine system, </title> <journal> Communications ACM, </journal> <volume> vol. 36, </volume> <pages> pp. 6877, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: of Internet multimedia services, Section 8 alludes to some pieces which are still missing. 1.1 Related Work Efforts to design multimedia applications and protocols for packet-switched networks [6, 7] date back to the early days of the Internet; systems have been developed for various combinations of packet-switched and circuit-switched networks <ref> [8, 9] </ref>. In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [9] <author> E. M. Schooler and S. L. Casner, </author> <title> A packet-switched multimedia conferencing system, </title> <journal> SIGOIS (ACM Special Interest Group on Office Information Systems) Bulletin, </journal> <volume> vol. 10, </volume> <pages> pp. 1222, </pages> <month> Jan. </month> <year> 1989. </year>
Reference-contexts: of Internet multimedia services, Section 8 alludes to some pieces which are still missing. 1.1 Related Work Efforts to design multimedia applications and protocols for packet-switched networks [6, 7] date back to the early days of the Internet; systems have been developed for various combinations of packet-switched and circuit-switched networks <ref> [8, 9] </ref>. In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [10] <author> H. Eriksson, MBONE: </author> <title> The multicast backbone, </title> <journal> Communications ACM, </journal> <volume> vol. 37, </volume> <pages> pp. 5460, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools <ref> [10, 11, 12, 13] </ref> has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [11] <author> V. Jacobson, </author> <title> Multimedia conferencing on the Internet, </title> <booktitle> in SIGCOMM Symposium on Communications Architectures and Protocols, </booktitle> <address> (London, England), </address> <month> Aug. </month> <year> 1994. </year> <note> Tutorial slides. </note>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools <ref> [10, 11, 12, 13] </ref> has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [12] <author> R. Frederick, </author> <title> Experiences with real-time software video compression, </title> <booktitle> in Sixth International Workshop on Packet Video, </booktitle> <address> (Portland, Oregon), </address> <month> Sept. </month> <year> 1994. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools <ref> [10, 11, 12, 13] </ref> has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [13] <author> H. Schulzrinne, </author> <title> Voice communication across the Internet: A network voice terminal, </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools <ref> [10, 11, 12, 13] </ref> has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC [16, 17].
Reference: [14] <author> P. V. Rangan and D. C. Swinehart, </author> <title> Software architecture for integration of video services in the Etherphone environment, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 13951404, </pages> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone <ref> [14] </ref>, Rapport [15] and MMCC [16, 17]. Delivery of stored multimedia content in a streaming mode, that is, playing back the multimedia content as it arrives rather than downloading the whole presentation, has been commercialized successfully by a number of companies, however with proprietary and limited control functionality.
Reference: [15] <author> S. R. Ahuja and J. R. </author> <title> Ensor, Call and connection management: making desktop conferencing systems a real service, </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 1011, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport <ref> [15] </ref> and MMCC [16, 17]. Delivery of stored multimedia content in a streaming mode, that is, playing back the multimedia content as it arrives rather than downloading the whole presentation, has been commercialized successfully by a number of companies, however with proprietary and limited control functionality.
Reference: [16] <author> E. M. Schooler, S. L. Casner, and J. Postel, </author> <title> Multimedia conferencing: Has it come of age?, </title> <booktitle> in Proceedings of the 24th Hawaii International Conference on System Science, </booktitle> <volume> vol. 3, </volume> <booktitle> (Hawaii), </booktitle> <pages> pp. 707716, </pages> <publisher> IEEE, </publisher> <month> Jan. </month> <year> 1991. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC <ref> [16, 17] </ref>. Delivery of stored multimedia content in a streaming mode, that is, playing back the multimedia content as it arrives rather than downloading the whole presentation, has been commercialized successfully by a number of companies, however with proprietary and limited control functionality.
Reference: [17] <author> E. Schooler and S. L. Casner, </author> <title> An architecture for multimedia connection management, </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 22, </volume> <pages> pp. 7374, </pages> <month> Mar. </month> <year> 1992. </year>
Reference-contexts: In particular, the set of tools commonly known as the Mbone conferencing tools [10, 11, 12, 13] has achieved widespread use. Examples of multimedia control include Etherphone [14], Rapport [15] and MMCC <ref> [16, 17] </ref>. Delivery of stored multimedia content in a streaming mode, that is, playing back the multimedia content as it arrives rather than downloading the whole presentation, has been commercialized successfully by a number of companies, however with proprietary and limited control functionality.
Reference: [18] <author> V. Balabanian, L. Casey, N. Greene, and C. Adams, </author> <title> An introduction to digital storage media command and control, </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 34, </volume> <pages> pp. 122 127, </pages> <month> Nov. </month> <year> 1996. </year>
Reference-contexts: In the telecom-oriented version of video-on-demand, a control protocol called DSM-CC <ref> [18] </ref> has been specified by the DAVIC consortium for transport of MPEG streams over a broad range of ATM and CATV networks. RTSP borrows one of the time concepts from DSM-CC, but, in the tradition of Internet protocols, does not depend on a whole set of supporting protocols.
Reference: [19] <author> International Telecommunication Union, </author> <title> Visual telephone systems and equipment for local area networks which provide a non-guaranteed quality of service, Recommendation H.323, </title> <institution> Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: Unlike DSM-CC, RTSP also offers recording and device control and, due to its state machine, is more suited for remote digital editing. For conferencing and telephony, H.323 <ref> [19, 20] </ref> offers a basic two-party signaling protocol built on top of the Q.931 ISDN call signaling protocol. However, it is complex, requiring about 300 pages of specifications, not including ASN.1.
Reference: [20] <author> P. Lantz, </author> <title> Usage of H.323 on the Internet, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: Unlike DSM-CC, RTSP also offers recording and device control and, due to its state machine, is more suited for remote digital editing. For conferencing and telephony, H.323 <ref> [19, 20] </ref> offers a basic two-party signaling protocol built on top of the Q.931 ISDN call signaling protocol. However, it is complex, requiring about 300 pages of specifications, not including ASN.1.
Reference: [21] <author> C. Rigney, </author> <title> RADIUS accounting, Request for Comments (Informational) RFC 2059, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Here, Internet-style binary refers to C-like structures with elements aligned on word size multiples or type-length-value tuples. In addition to the core Internet protocols, RTP, RSVP and the RADIUS accounting protocol <ref> [21] </ref> are examples of this approach. This works well as long as protocol requests are flat lists of integers, with few optional parameters and variable-sized structures. ASN.1 allows the specification of nested data structures with optional elements and a wide variety of basic data types.
Reference: [22] <author> F. Yergeau, UTF-8, </author> <title> a transformation format of unicode and ISO 10646, Request for Comments (Informational) RFC 2044, </title> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: In the past, text-based protocols were restricted to US-ASCII or, at best, ISO 8859-1 (for HTTP); SIP and RTSP are not burdened by this legacy and can express any ISO 10646 (Unicode) character in the UTF-8 encoding <ref> [22] </ref>. (UTF-8 is a variable-length character set encoding that is upward compatible with US-ASCII.) The final design alternative is to recognize that most control functionality can be modeled as remote-procedure calls.
Reference: [23] <author> D. E. </author> <title> Eastlake, Universal payment preamble, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: Rather than inventing a new protocol representation from whole cloth, reusing the most successful Internet protocol, HTTP, seemed the more appropriate choice. By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce <ref> [23] </ref>, authentication [24], content labels and client-side access control [25], protocol extensions [26], state management [27] and content negotiation [28]. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols.
Reference: [24] <author> J. Franks, P. Hallam-Baker, J. Hostetler, P. A. Luotonen, and E. L. Stewart, </author> <title> An extension to HTTP: digest access authentication, Request for Comments (Proposed Standard) RFC 2069, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: Rather than inventing a new protocol representation from whole cloth, reusing the most successful Internet protocol, HTTP, seemed the more appropriate choice. By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce [23], authentication <ref> [24] </ref>, content labels and client-side access control [25], protocol extensions [26], state management [27] and content negotiation [28]. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols.
Reference: [25] <author> T. Krauskopf, J. Miller, P. Resnick, and W. Treese, </author> <title> PICS label distribution label syntax and communication protocols, version 1.1, W3C Recommendation REC-PICS-labels-961031, World Wide Web Consortium, </title> <address> Cambridge, Massachusetts, </address> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce [23], authentication [24], content labels and client-side access control <ref> [25] </ref>, protocol extensions [26], state management [27] and content negotiation [28]. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols.
Reference: [26] <author> D. Connolly, </author> <title> PEP: an extension mechanism for HTTP, Internet Draft, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce [23], authentication [24], content labels and client-side access control [25], protocol extensions <ref> [26] </ref>, state management [27] and content negotiation [28]. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols. <p> A client may inquire via the OPTIONS request as to which requests the server supports for a particular RTSP URL. In connection with the HTTP protocol extension protocol (PEP) <ref> [26] </ref>, this facilitates future protocol extensions. Authentication, encryption, content labeling and payment are handled by standard HTTP mechanisms. If forced to by ill-designed firewalls, the control stream may be interleaved with the audio or video data.
Reference: [27] <author> D. Kristol and L. Montulli, </author> <title> HTTP state management mechanism, Request for Comments (Proposed Standard) RFC 2109, </title> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1997. </year>
Reference-contexts: By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce [23], authentication [24], content labels and client-side access control [25], protocol extensions [26], state management <ref> [27] </ref> and content negotiation [28]. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols.
Reference: [28] <author> K. Holtman and A. Muntz, </author> <title> Transparent Content Negotiation in HTTP, Internet Draft, </title> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1997. </year> <title> Work in progress. </title>
Reference-contexts: By using HTTP as a base, the protocols can immediately re-use a number of evolving protocols for electronic commerce [23], authentication [24], content labels and client-side access control [25], protocol extensions [26], state management [27] and content negotiation <ref> [28] </ref>. Also, servers, proxies and firewalls, all already tuned for high performance, manageability and reliability, can be easily modified to accommodate these new protocols. <p> Borrowing the concept of HTTP transparent content negotiation <ref> [28] </ref>, a SIP server can return a descriptive list of alternative terminals, their capabilities and addresses. In a local area, a person may move around from terminal to terminal, e.g., from lab to office to meeting room.
Reference: [29] <author> R. Fielding, J. Gettys, J. Mogul, H. Frystyk, and T. Berners-Lee, </author> <title> Hypertext transfer protocol HTTP/1.1, Request for Comments (Proposed Standard) RFC 2068, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1997. </year>
Reference-contexts: The commonality between SIP and RTSP also simplifies implementations as many clients and servers can be expected to implement both, given the scenarios described in Section 1. It has been suggested that one could just extend HTTP/1.1 <ref> [29] </ref> by adding new headers to existing methods. However, none of the existing methods fit particularly well with the out-of-band control of streaming media.
Reference: [30] <author> P. Karn and C. Partridge, </author> <title> Improving round-trip time estimates in reliable transport protocols, </title> <journal> ACM Computer Communication Review, </journal> <volume> vol. 17, </volume> <month> Aug. </month> <year> 1987. </year> <note> SIGCOMM '87 Workshop. </note>
Reference-contexts: Also, an RTSP or SIP response is needed for each request in any event. Thus, acknowledgments are for one request 1 Adding a timestamp avoids the need for Karn's algorithm <ref> [30] </ref> in estimating round-trip times. While almost all requests are idempotent, some like RTSP PLAY are not, so that a per-message sequence number is not sufficient. only rather than a window of data. HTTP is asymmetric, with clients issuing requests to servers.
Reference: [31] <author> H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, RTP: </author> <title> a transport protocol for real-time applications, Request for Comments (Proposed Standard) RFC 1889, </title> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: A media session is defined by the membership in a multicast group or a two-party UDP port/address association. Members are identified by their RTP CNAME <ref> [31] </ref>. A session consists of several media sessions and exists only as a common abstraction in each participant, not in a central registry. A conference is an example of a session. Not all participants in a conference need to be in every media session. Access control is through encryption.
Reference: [32] <author> V. Jacobson, S. McCanne, and S. Floyd, </author> <title> A conferencing architecture for light-weight sessions, Nov. </title> <booktitle> 1993. MICE seminar series (transparencies). </booktitle>
Reference-contexts: A conference is an example of a session. Not all participants in a conference need to be in every media session. Access control is through encryption. This session model is often called the light-weight session model <ref> [32] </ref>; unlike central-registry models, it scales to very large conferences and survives network partitions. Currently, these sessions and their attributes are announced using a well-known multicast address and a simple textual description (SDP) [3], which is also used to arbitrate use of the dynamically assigned multicast addresses.
Reference: [33] <author> W. Yeong, T. Howes, and S. Kille, </author> <title> Lightweight directory access protocol, Request for Comments (Draft Standard) RFC 1777, </title> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1995. </year> <note> (Obsoletes RFC1487). </note>
Reference-contexts: A single externally visible address may well lead to a different host depending on time of day, media to be used, and any number of other factors. In many cases, the address will be derived through a directory service such as LDAP <ref> [33] </ref>, but it may well be a click on a mailto URL. The name resolution mechanism is shown in Fig. 1.
Reference: [34] <author> A. Gulbrandsen and P. Vixie, </author> <title> A DNS RR for specifying the location of services (DNS SRV), Request for Comments (Experimental) RFC 2052, </title> <institution> Internet Engineering Task Force, </institution> <month> Oct. </month> <year> 1996. </year>
Reference-contexts: The name resolution mechanism is shown in Fig. 1. At every step, the client attempts to resolve the host name via the DNS service (SRV) records <ref> [34] </ref> first, then checks whether the domain name refers to a physical host and finally checks whether it is a mail exchange host.
Reference: [35] <author> R. Pandya, </author> <title> Emerging mobile and personal communication systems, </title> <journal> IEEE Communications Magazine, </journal> <volume> vol. 33, </volume> <pages> pp. 4452, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: The call handling intelligence can be located at either a service provider in the network offering a permanent address, at a corporate gateway or at the user's workstation or some combination of the three. Compared to advanced intelligent networks (AIN) <ref> [35] </ref>, this offers greater flexibility, privacy and user control. <p> Personal mobility is based on the use of a unique personal identity (i.e., 'personal number'). <ref> [35, p. 44] </ref>. Calls are identified by a globally unique conference identifier, consisting of a timestamp and host name, which is created by the conference originator. Every signaling message contains such an identifier, so that proxies maintain state only for a single request, not the whole call or conference.
Reference: [36] <author> R. Williams, </author> <title> User location service, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: The latter case is particularly appropriate for firewalled intranets. This naming mechanism, combined with redirection, readily supports personal mobility 2 . It has been argued that this functionality should reside with directory services, e.g., X.500, ULS <ref> [36] </ref> or some other LDAP-accessed directory. While SIP does not preclude doing all user location through a directory service, using SIP has a number of advantages.
Reference: [37] <author> S. Petrack, </author> <title> The call management agent system requirements and architecture, </title> <month> Feb. </month> <year> 1997. </year> <type> Unpublished manuscript. </type>
Reference-contexts: does not address other aspects of conference control, such as floor control, but it can be used to introduce these protocols. 4.1 Choosing Terminals and Locating Callees Many people have several ways of being reached, including a telephone, email, fax, or a pager, each with widely differing media handling capabilities <ref> [37] </ref>. Borrowing the concept of HTTP transparent content negotiation [28], a SIP server can return a descriptive list of alternative terminals, their capabilities and addresses. In a local area, a person may move around from terminal to terminal, e.g., from lab to office to meeting room.
Reference: [38] <author> S. Shenker, A. Weinrib, and E. Schooler, </author> <title> Managing shared ephemeral state: Policy and mechanism, </title> <booktitle> in Proc. of the International Workshop on Multimedia Transport and Tele-services (COST237), </booktitle> <address> (Vienna, Austria), </address> <month> Nov. </month> <year> 1994. </year>
Reference-contexts: The latter case may occur if capability sets correspond to different multimedia applications or they may express CPU or screen real-estate limitations. With software codecs, the likelihood that elaborate capability descriptions and negotiation protocols <ref> [38] </ref> are needed, however, appears to be much lower. 4.3 In-Call Signaling Currently, SIP methods only support call initiation and a limited form of media negotiation, described above. Even so, the standard telephony services of call forwarding, call waiting, caller ID, camp-on, call park and call pickup can be supported.
Reference: [39] <author> H. Schulzrinne, </author> <title> Dynamic configuration of conferencing applications using pattern-matching multicast, </title> <booktitle> in Proc. International Workshop on Network and Operating System Support for Digital Audio and Video (NOSSDAV), Lecture Notes in Computer Science (LNCS), </booktitle> <address> (Durham, New Hamp-shire), </address> <pages> pp. 231242, </pages> <publisher> Springer, </publisher> <month> Apr. </month> <year> 1995. </year>
Reference-contexts: An outline is shown in Fig. 7. The same media agents are used by all three applications. Each media agent has only a minimum user interface to achieve maximum reusability. Media agents and controllers communicate through a host-local conference control bus <ref> [39] </ref> implemented as either a central server or multicast with a time-to-live value of zero. This is a generalization of the conference bus employed by vat and vic. The session directory shown in Fig. 7 listens to Mbone-style conference announcements formatted as SDP carried in SAP messages [40].
Reference: [40] <author> M. Handley, </author> <title> SAP: Session announcement protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: This is a generalization of the conference bus employed by vat and vic. The session directory shown in Fig. 7 listens to Mbone-style conference announcements formatted as SDP carried in SAP messages <ref> [40] </ref>. Rather than maintaining its own calendar, the session directory client communicates with the user's general calendar using a subset of SIP. Only the invitation message is needed here, indicated by the protocol designation SIP*. The calendar notes Mbone conferences along with the user's other appointments.
Reference: [41] <author> D. Sisalem, H. Schulzrinne, and C. Sieckmeyer, </author> <title> The network video terminal, </title> <booktitle> in HPDC Focus Workshop on Multimedia and Collaborative Environments (Fifth IEEE International Symposium on High Performance Distributed Computing), </booktitle> <address> (Syracuse, New York), </address> <publisher> IEEE Computer Society, </publisher> <month> Aug. </month> <year> 1996. </year>
Reference-contexts: The functionality of the common resource reservation agent and the floor controller are discussed elsewhere <ref> [41] </ref>. 8 Status and Future Work We are currently completing an ISDN gateway through which POTS callers can reach those connected through SIP and RTP and vice versa [42].
Reference: [42] <author> C. Zahl, </author> <title> Aufbau und Konfiguration von Internet-Multimedia-Konferenzen ber Verbindungen niedriger Bandbreite (setup and configuration of internet multimedia conferences using low-bandwidth links), </title> <type> Master's thesis, </type> <institution> Berlin University of Technology, </institution> <address> Berlin, Germany, </address> <month> Feb. </month> <year> 1997. </year> <month> Diplomarbeit. </month>
Reference-contexts: The functionality of the common resource reservation agent and the floor controller are discussed elsewhere [41]. 8 Status and Future Work We are currently completing an ISDN gateway through which POTS callers can reach those connected through SIP and RTP and vice versa <ref> [42] </ref>. This gateway uses a new call processing language, CPL, to handle both ISDN and SIP calls and can connect the two [43].
Reference: [43] <author> F. Oertel, </author> <title> Integration von ISDN-Teilnehmern in Internet-Multimedia-Konferenzen (integration of ISDN subscribers into internet multimedia conferences), </title> <type> Master's thesis, </type> <institution> Berlin University of Technology, </institution> <address> Berlin, Germany, </address> <month> Feb. </month> <year> 1997. </year> <month> Diplomarbeit. </month>
Reference-contexts: This gateway uses a new call processing language, CPL, to handle both ISDN and SIP calls and can connect the two <ref> [43] </ref>. CPL combines the features of a Tcl-like scripting language with a state-based language to reflect the nature of ISDN calls as well as to simplify implementations of voice response systems. <p> RTSP is based on the merger of a proposal by Anup Rao, Robert Lanphier et al. [45] and RTSP' [46] by the author. The call processing language CPL has been developed by Frank Oertel <ref> [43] </ref>. An initial version of the Sun 'cm' calendar interface was developed by Yuwen Tu, Rui-Gang Yang and Chaomei Long. Stefan Hoffmann is implementing SIP in the daemon and isc. The comments of Jonathan Rosenberg are gratefully acknowledged.
Reference: [44] <author> M. Handley and E. Schooler, </author> <title> Session invitation protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Feb. </month> <year> 1996. </year> <title> Work in progress (expired). </title>
Reference-contexts: For example, approaching an object in VRML space may well trigger, via RTSP, delivery of a Foley sound. 9 Acknowledgments The current version of SIP is also based on work of Mark Handley and Eve Schooler <ref> [44] </ref>. RTSP is based on the merger of a proposal by Anup Rao, Robert Lanphier et al. [45] and RTSP' [46] by the author. The call processing language CPL has been developed by Frank Oertel [43].
Reference: [45] <author> A. Rao and R. Lanphier, </author> <title> Real time streaming protocol (RTSP), </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: RTSP is based on the merger of a proposal by Anup Rao, Robert Lanphier et al. <ref> [45] </ref> and RTSP' [46] by the author. The call processing language CPL has been developed by Frank Oertel [43]. An initial version of the Sun 'cm' calendar interface was developed by Yuwen Tu, Rui-Gang Yang and Chaomei Long. Stefan Hoffmann is implementing SIP in the daemon and isc.
Reference: [46] <author> H. Schulzrinne, </author> <title> A real-time stream control protocol (RTSP'), </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1996. </year> <title> Work in progress. </title>
Reference-contexts: RTSP is based on the merger of a proposal by Anup Rao, Robert Lanphier et al. [45] and RTSP' <ref> [46] </ref> by the author. The call processing language CPL has been developed by Frank Oertel [43]. An initial version of the Sun 'cm' calendar interface was developed by Yuwen Tu, Rui-Gang Yang and Chaomei Long. Stefan Hoffmann is implementing SIP in the daemon and isc.
References-found: 46

