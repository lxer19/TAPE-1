URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1994/1994-12.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Phone: Tel. 31 30 531454  
Title: On Lazy Randomized Incremental Construction  
Author: Mark de Berg Katrin Dobrindt Otfried Schwarzkopf 
Address: Padualaan 14, P.O. Box 80.089, 3508 TB Utrecht, The Netherlands,  
Affiliation: Utrecht University Department of Computer Science  
Date: February 1994  
Pubnum: UU-CS-1994-12  
Abstract-found: 0
Intro-found: 1
Reference: [AS90] <author> B. Aronov and M. Sharir. </author> <title> Triangles in space or building (and analyzing) castles in the air. </title> <journal> Combinatorica, </journal> <volume> 10(2) </volume> <pages> 137-173, </pages> <year> 1990. </year>
Reference-contexts: We thus achieve a running time of O (n 2+" ). Aronov and Sharir <ref> [AS90] </ref> give a different algorithm for the single cell problem with the same running time. The best known lower bound on (n), however, is (n 2 ff 2 (n)), and we believe that this bound is closer to the truth than the O (n 2+" ) upper bound. <p> We believe that our technique can be useful for a number of other problems as well. For example, the best known algorithm for computing all non-convex cells in an arrangement of triangles in 3-space runs in O (n 8=3 log 14=3 n) time <ref> [AS90] </ref>, although the total complexity of these cells is known to be O (n 7=3 log n).
Reference: [AS92] <author> B. Aronov and M. Sharir. </author> <title> Castles in the air revisited. </title> <booktitle> In Proc. 8th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 146-156, </pages> <year> 1992. </year>
Reference-contexts: Again we denote the complexity of the (6k)-cell of S by L k (S). For a set R of n triangles in space we have L 1 (R) = O (r 2 log r) <ref> [AS92] </ref>. tion of a single cell. Our proof technique requires a decomposition scheme for single cells. For an arrangement of line segments in the plane we use the vertical decomposition, or trapezoidation.
Reference: [BD92] <author> J. D. Boissonnat and K. Dobrindt. </author> <title> Randomized construction of the upper envelope of triangles in R 3 . In Proc. </title> <booktitle> 4th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 311-315, </pages> <year> 1992. </year>
Reference-contexts: In other words, we are not allowed to link an old box to all the boxes in the new vertical decomposition that it intersects. Fortunately, this problem can be solved using a trick proposed by Boissonnat and Dobrindt <ref> [BD92] </ref>. The idea is to `encode' the links from an old box to all the new boxes it intersects in a rooted graph|the secondary history graph. The leaves of the secondary history graph correspond to the new boxes. <p> The nodes of G which are not in this component are deleted from G and the corresponding leaves of the history graph are colored red. 6.3 Analysis of the single cell algorithm The analysis combines the analysis of Boissonnat and Dobrindt <ref> [BD92] </ref> with the results of Section 5.1. We distinguish principal nodes of the history graph, corresponding to boxes that have been created during the incremental construction, and secondary nodes, which are inner nodes of the secondary history graphs.
Reference: [BDS + 92] <author> J.-D. Boissonnat, O. Devillers, R. Schott, M. Teillaud, and M. Yvinec. </author> <title> Applications of random sampling to on-line algorithms in computational geometry. </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 </volume> <pages> 51-71, </pages> <year> 1992. </year>
Reference-contexts: We wish to compute the face C (S) in the arrangement of S which contains the origin. Actually, we shall compute the vertical decomposition of this face. Our basic algorithm follows the general framework for randomized incremental algorithms described by Boissonnat et al. <ref> [BDS + 92] </ref>, which was also followed by Chazelle et al. These algorithms maintain a data-structure, the so-called history graph. <p> Now, in order to obtain a correct vertical decomposition we have to compute a (two-dimensional) trapezoidation of A (S b ), and extend the extra segments thus created vertically upward to obtain the new secondary walls. This trapezoidation is computed using a two-dimensional randomized incremental algorithm described in <ref> [BDS + 92] </ref>. The history graph that results from this construction is our secondary history graph for the set B b . We also store the adjacency graph for the trapezoidal decomposition of A (S b ). <p> Recall that the secondary history graphs are constructed on a set of non-intersecting line segments. This implies that the total number of trapezoids that are created for the secondary history graphs is linear in the number of line segments <ref> [BDS + 92] </ref>. It remains to observe that this number is linear in the number of boxes of the vertical decomposition that are destroyed. Since a destroyed box has to be created first, the total number of secondary nodes is bounded by O ( (n)).
Reference: [BT93] <author> J.-D. Boissonnat and M. Teillaud. </author> <title> On the randomized construction of the Delaunay tree. </title> <journal> Theoret. Comput. Sci., </journal> <volume> 112 </volume> <pages> 339-354, </pages> <year> 1993. </year> <month> 24 </month>
Reference-contexts: Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams <ref> [GKS92, BT93, MM O91] </ref>, and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems.
Reference: [CEG + 90] <author> K. Clarkson, H. Edelsbrunner, L. Guibas, M. Sharir, and E. Welzl. </author> <title> Combi--natorial complexity bounds for arrangements of curves and spheres. </title> <journal> Discrete Comput. Geom., </journal> <volume> 5 </volume> <pages> 99-160, </pages> <year> 1990. </year>
Reference-contexts: Therefore we first recall the notion of vertical decompositions in three-space introduced by Clarkson et al. <ref> [CEG + 90] </ref>, before we present our algorithm and its analysis. Let S = fs 1 ; : : : ; s n g be a set of n possibly intersecting triangles in three-space.
Reference: [CEG + 91] <author> B. Chazelle, H. Edelsbrunner, L. Guibas, M. Sharir, and J. Snoeyink. </author> <title> Computing a face in an arrangement of line segments. </title> <booktitle> In Proc. 2nd ACM-SIAM Sympos. Discrete Algorithms, </booktitle> <pages> pages 441-448, </pages> <year> 1991. </year>
Reference-contexts: First of all, the analysis of Mulmuley, and of Clarkson and Shor does not apply. Second, because it cannot be decided locally whether a region is part of the structure, it is difficult to maintain the structure efficiently. Chazelle et al. <ref> [CEG + 91] </ref> overcame these problems for the computation of a single face in an arrangement of line segments in the plane. They have extended part of Clarkson and Shor's analysis to that case (in fact, our more general analysis borrows several ideas from theirs). <p> In the two-dimensional case our algorithm for computing a single face runs in time O (nff (n) log n). (Here and in the rest of the paper ff (n) denotes the extremely slowly growing functional inverse of Ackermann's function.) Thus we achieve the same running time as Chazelle et al. <ref> [CEG + 91] </ref>, but with a simpler algorithm. Our technique extends to various other problems. We illustrate this by giving a simple algorithm for computing zones in arrangements of hyperplanes in d-dimensional space. <p> 0 4 6 n a P S 0 = t a n a P S 0 (valid since a 6 b 6 t) = t a P 2 C t 6 t b P 2 C t Before we proceed we need a few definitions, motivated by Chazelle et al. <ref> [CEG + 91] </ref>. We define the following events. <p> The two-dimensional problem has already been solved quite satisfactorily by Chazelle et al. <ref> [CEG + 91] </ref>. The algorithm that we present has the same running time as theirs and is slightly simpler. More importantly, it introduces a new technique called lazy randomized incremental construction, which can be used to solve a variety of other problems|see Section 6.
Reference: [Che85] <author> L. P. Chew. </author> <title> Building Voronoi diagrams for convex polygons in linear expected time. </title> <type> Report, </type> <institution> Dept. Math. Comput. Sci., Dartmouth College, </institution> <address> Hanover, NH, </address> <year> 1985. </year>
Reference-contexts: Hence, we have P X t = P X t fi X fl fi t = P s t 2 D () P X fl b P X fl Here we used a technique called backwards analysis, introduced by Chew <ref> [Che85] </ref> and made popular by Seidel [Sei91, Sei93]. Putting everything together, we have B X P Y fl fi A + t=A+1 fi t1 " X fl fi A + A t=A+1 fi t : (4) We can now prove the main theorem of this section.
Reference: [CMS93] <author> K. L. Clarkson, K. Mehlhorn, and R. Seidel. </author> <title> Four results on randomized incremental constructions. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 3(4) </volume> <pages> 185-212, </pages> <year> 1993. </year>
Reference-contexts: Here a geometric structure induced by a set S of certain geometric objects is computed by adding the objects in S in random order, meanwhile maintaining the structure induced by the current subset. Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls <ref> [Sei91, CMS93] </ref>, Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89].
Reference: [CS89] <author> K. L. Clarkson and P. W. Shor. </author> <title> Applications of random sampling in computational geometry, II. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 387-421, </pages> <year> 1989. </year>
Reference-contexts: Here a geometric structure induced by a set S of certain geometric objects is computed by adding the objects in S in random order, meanwhile maintaining the structure induced by the current subset. Examples are algorithms for computing arrangements of line segments <ref> [CS89, Mul88] </ref>, convex hulls [Sei91, CMS93], Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. <p> Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor <ref> [CS89] </ref>. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems. Although the settings by Mulmuley and by Clarkson and Shor are formulated in a different way, they both rely on the same basic framework. <p> The result extends to 3-space, where we obtain an almost optimal bound on complexity of the (6k)-cell in an arrangement of triangles. 2 Random sampling with non-local definition We present our analysis of random sampling with non-local definition in an abstract framework, following the spirit of Clarkson and Shor <ref> [CS89] </ref>. This will permit us to apply it to different situations. Let S be a set of n objects. (To keep some life in the following presentation, the reader would be well advised to imagine a concrete example. <p> Clarkson and Shor <ref> [CS89] </ref> first prove a lemma on random sampling, based on the probability that a certain region with a given number of conflicts appears in a sample. They use this to give a bound on the complexity of (6k)-levels in arrangements of lines.
Reference: [dBGH94] <author> M. de Berg, L. J. Guibas, and D. Halperin. </author> <title> Vertical decompositions for triangles in 3-space. </title> <booktitle> In Proc. 10th Annu. ACM Sympos. </booktitle> <institution> Comput. Geom., </institution> <year> 1994. </year>
Reference-contexts: Recently 1 We recently learned that Clarkson and Matousek independently from each other or us proved similar generalisations of Clarkson and Shor's random sampling results. 2 de Berg et al. <ref> [dBGH94] </ref> proved that, for any fixed " &gt; 0, (n) = O (n 2+" ). We thus achieve a running time of O (n 2+" ). Aronov and Sharir [AS90] give a different algorithm for the single cell problem with the same running time. <p> The vertical decomposition scheme that we use for arrangements of triangles in 3-space is defined analogously to its planar counterpart|see Section 6.1 for details. We denote the maximum complexity of the vertical decomposition of a single cell in an arrangement of m triangles by (m). De Berg et al. <ref> [dBGH94] </ref> proved that (n) is lower bounded by O (n 2 ff 2 (n)) and upper bounded by O (n 2+" ), for any constant " &gt; 0. <p> Each cell of the vertical decomposition is now a box with a trapezoidal base and top|which may degenerate to a triangle|that are connected by vertical walls. De Berg et al. <ref> [dBGH94] </ref> proved the following bounds on the complexity of vertical decompositions. Theorem 6 [dBGH94] (i) The maximum combinatorial complexity of the vertical decomposition of an arrangement of n triangles with complexity A is lower bounded by (n 2 ff 2 (n) + A) and upper bounded by O (n 2+" + <p> Each cell of the vertical decomposition is now a box with a trapezoidal base and top|which may degenerate to a triangle|that are connected by vertical walls. De Berg et al. <ref> [dBGH94] </ref> proved the following bounds on the complexity of vertical decompositions. Theorem 6 [dBGH94] (i) The maximum combinatorial complexity of the vertical decomposition of an arrangement of n triangles with complexity A is lower bounded by (n 2 ff 2 (n) + A) and upper bounded by O (n 2+" + A). (ii) The maximum combinatorial complexity (n) of the vertical decomposition of a
Reference: [ESS93] <author> H. Edelsbrunner, R. Seidel, and M. Sharir. </author> <title> On the zone theorem for hyperplane arrangements. </title> <journal> SIAM J. Comput., </journal> <volume> 22(2) </volume> <pages> 418-429, </pages> <year> 1993. </year>
Reference-contexts: When fl is a hyperplane then tight bounds are known on the maximum zone complexity: the famous Zone Theorem <ref> [ESS93] </ref> states that in d-dimensional space the complexity is is O (n d1 ). In this case we obtain an optimal algorithm.
Reference: [GKS92] <author> L. J. Guibas, D. E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 381-413, </pages> <year> 1992. </year>
Reference-contexts: Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams <ref> [GKS92, BT93, MM O91] </ref>, and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems.
Reference: [GSS89] <author> L. J. Guibas, M. Sharir, and S. Sifrony. </author> <title> On the general motion planning problem with two degrees of freedom. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 491-521, </pages> <year> 1989. </year>
Reference-contexts: We denote the complexity of the (6k)-cell of S by L k (S). Notice that the (61)-cell is the boundary of the single cell defined by S containing the origin. Hence, for any set R of r segments we have L 1 (R) = O (rff (r)) <ref> [GSS89, PSS87] </ref>. The (6k)-cell of a set S of triangles in space is defined similarly: it is the set of points on the triangles in S that can reach the origin with a path whose interior intersects at most k 1 triangles in S. <p> As an example, consider a set of n arcs of bounded degree in the plane such that any pair intersects at most s times. The complexity of a single cell in such an arrangement is O ( s+2 (n)) <ref> [GSS89] </ref>, where q (m) is the maximum length of a (m; q)-Davenport-Schinzel sequence. <p> Then it is easy to see that the number of vertices we have to consider is bounded by O 2C (S q ;S q ) To bound the expected value of this sum we note that the complexity of the single face is O (qff (q)) <ref> [GSS89, PSS87] </ref>, and we use that S q is a random sample of S t of size q with 14 q &gt; t=4. We have seen in Section 2 that the set C (S q ; S q ) fulfills conditions (i), (ii), (iii), and (iv).
Reference: [MM O91] <author> K. Mehlhorn, S. Meiser, and C. O'Dunlaing. </author> <title> On the construction of abstract Voronoi diagrams. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 211-224, </pages> <year> 1991. </year>
Reference-contexts: Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams <ref> [GKS92, BT93, MM O91] </ref>, and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems.
Reference: [MS91] <author> N. Miller and M. Sharir. </author> <title> Efficient randomized algorithm for constructing the union of fat triangles and of pseudodiscs. </title> <type> Manuscript, </type> <year> 1991. </year>
Reference-contexts: Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs <ref> [MS91] </ref>. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems.
Reference: [Mul88] <author> K. Mulmuley. </author> <title> A fast planar partition algorithm, I. </title> <booktitle> In Proc. 29th Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 580-589, </pages> <year> 1988. </year>
Reference-contexts: Here a geometric structure induced by a set S of certain geometric objects is computed by adding the objects in S in random order, meanwhile maintaining the structure induced by the current subset. Examples are algorithms for computing arrangements of line segments <ref> [CS89, Mul88] </ref>, convex hulls [Sei91, CMS93], Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. <p> Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls [Sei91, CMS93], Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley <ref> [Mul88] </ref> and by Clarkson and Shor [CS89]. They have analyzed random sampling in an abstract setting that applies to a number of geometric problems. Although the settings by Mulmuley and by Clarkson and Shor are formulated in a different way, they both rely on the same basic framework.
Reference: [Mul93] <author> K. Mulmuley. </author> <title> Computational Geometry: An Introduction Through Randomized Algorithms. </title> <publisher> Prentice Hall, </publisher> <address> New York, </address> <year> 1993. </year>
Reference-contexts: We assume that fl has constant description complexity. Our algorithm follows the lazy incremental construction paradigm outlined in Section 4. Thus we add the hyperplanes of the set S in random order, meanwhile maintaining the bottom-vertex decomposition of the arrangement A (S) (see for instance Mulmuley's book <ref> [Mul93, Chapter 6.3] </ref> for a definition of the bottom-vertex triangulation). After inserting the hyperplane number 2 i , for i = 1; : : :; blog nc, we do a clean-up step and we discard all cells that are no longer in the zone.
Reference: [PSS87] <author> R. Pollack, M. Sharir, and S. Sifrony. </author> <title> Separating two simple polygons by a sequence of translations. </title> <journal> Discrete Comput. Geom., </journal> <volume> 3 </volume> <pages> 123-136, </pages> <year> 1987. </year>
Reference-contexts: We denote the complexity of the (6k)-cell of S by L k (S). Notice that the (61)-cell is the boundary of the single cell defined by S containing the origin. Hence, for any set R of r segments we have L 1 (R) = O (rff (r)) <ref> [GSS89, PSS87] </ref>. The (6k)-cell of a set S of triangles in space is defined similarly: it is the set of points on the triangles in S that can reach the origin with a path whose interior intersects at most k 1 triangles in S. <p> Then it is easy to see that the number of vertices we have to consider is bounded by O 2C (S q ;S q ) To bound the expected value of this sum we note that the complexity of the single face is O (qff (q)) <ref> [GSS89, PSS87] </ref>, and we use that S q is a random sample of S t of size q with 14 q &gt; t=4. We have seen in Section 2 that the set C (S q ; S q ) fulfills conditions (i), (ii), (iii), and (iv).
Reference: [Sch92] <author> O. Schwarzkopf. </author> <title> Dynamic Maintenance of Convex Polytopes and Related Structures. </title> <type> Ph.D. thesis, </type> <institution> Fachbereich Mathematik, Freie Universitat Berlin, </institution> <address> Berlin, Germany, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: From that vertex we perform a graph search on the boundary of the cell. It is not difficult to show that the total time for this operation is proportional to the total length of the conflict lists of all destroyed and created simplices. Details can be found in Schwarzkopf <ref> [Sch92] </ref>. The clean-up step. First, we test every simplex of the current arrangement to find those intersected by the surface fl. Then we traverse the triangulation, starting from these simplices, to identify the cells in the zone of fl.
Reference: [Sei91] <author> R. Seidel. </author> <title> Small-dimensional linear programming and convex hulls made easy. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 423-434, </pages> <year> 1991. </year> <month> 25 </month>
Reference-contexts: Here a geometric structure induced by a set S of certain geometric objects is computed by adding the objects in S in random order, meanwhile maintaining the structure induced by the current subset. Examples are algorithms for computing arrangements of line segments [CS89, Mul88], convex hulls <ref> [Sei91, CMS93] </ref>, Voronoi diagrams [GKS92, BT93, MM O91], and the union of fat triangles or pseudo-discs [MS91]. Most of these algorithms are based on the theory by Mulmuley [Mul88] and by Clarkson and Shor [CS89]. <p> Hence, we have P X t = P X t fi X fl fi t = P s t 2 D () P X fl b P X fl Here we used a technique called backwards analysis, introduced by Chew [Che85] and made popular by Seidel <ref> [Sei91, Sei93] </ref>. Putting everything together, we have B X P Y fl fi A + t=A+1 fi t1 " X fl fi A + A t=A+1 fi t : (4) We can now prove the main theorem of this section.
Reference: [Sei93] <author> R. Seidel. </author> <title> Backwards analysis of randomized geometric algorithms. </title> <editor> In J. Pach, editor, </editor> <booktitle> New Trends in Discrete and Computational Geometry, volume 10 of Algorithms and Combinatorics, </booktitle> <pages> pages 37-68. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Hence, we have P X t = P X t fi X fl fi t = P s t 2 D () P X fl b P X fl Here we used a technique called backwards analysis, introduced by Chew [Che85] and made popular by Seidel <ref> [Sei91, Sei93] </ref>. Putting everything together, we have B X P Y fl fi A + t=A+1 fi t1 " X fl fi A + A t=A+1 fi t : (4) We can now prove the main theorem of this section.
Reference: [Sha91] <author> M. Sharir. </author> <title> On k-sets in arrangements of curves and surfaces. </title> <journal> Discrete Comput. Geom., </journal> <volume> 6 </volume> <pages> 593-613, </pages> <year> 1991. </year> <month> 26 </month>
Reference-contexts: For the lower bound we use an example from Sharir <ref> [Sha91] </ref>. Let S 0 be a set of n=(k=2 + 1) segments that define a single cell of complexity fi ( n k ff ( n k )). <p> Remark. Sharir <ref> [Sha91] </ref> proved bounds on (6k)-sets in arrangements of curves and surfaces. When the curves are infinite then his (6k)-sets are the same as our (6k)-cells. Sharir's proof is based on the theory of Clarkson and Shor, so it cannot deal with (6k)- cells of Jordan arcs or surface patches.
References-found: 23

