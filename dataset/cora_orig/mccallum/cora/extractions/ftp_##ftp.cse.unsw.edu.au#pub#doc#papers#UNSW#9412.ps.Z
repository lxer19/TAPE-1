URL: ftp://ftp.cse.unsw.edu.au/pub/doc/papers/UNSW/9412.ps.Z
Refering-URL: http://www.cse.unsw.edu.au/school/research/tr.html
Root-URL: http://www.cse.unsw.edu.au
Email: E-mail: jacek@cse.unsw.edu.au  
Title: Representing Closed CCS Systems by Petri Nets  
Author: Jacek Olszewski 
Note: 1 on leave from the  
Date: 31 OCTOBER 1994  
Address: 65 Epping Rd, North Ryde, 2113 Australia  
Affiliation: Microsoft Institute of Advanced Software Technology  School of Computer Science and Engineering, University of New South Wales, Kensington, Australia.  
Pubnum: UNSW-CSE-TR-9412  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> R. Cleveland, J. Parrow, B. Steffen: </author> <title> The Concurrency Workbench: </title>
Reference-contexts: Petri nets are not the only modeling tool for CCS compositions. Another such tool is automata that have been used for a wider range of analysis than just deadlock detection (see for instance the Concurrency Workbench <ref> [1] </ref>). However, automata seem inferior to Petri nets with respect to one important aspect. Namely, they cannot model possible simultaneity of actions within the system. Because of their single locum of control, they necessarily represent so-called interleaving model of concurrency. <p> They may finish in any order, and then, restarted, but again in the same order as before. The scheduler has also been subject to analysis with the use of Concurrency Workbench <ref> [1] </ref>. The maximum number of tasks with which Concurrency Workbench could cope was 7. Our Example 3 is such a scheduler for 4 tasks. Its specification satisfies Assumptions 1 and 2 only, thus precluding the use of multiple firings in the reachability tree construction.
References-found: 1

