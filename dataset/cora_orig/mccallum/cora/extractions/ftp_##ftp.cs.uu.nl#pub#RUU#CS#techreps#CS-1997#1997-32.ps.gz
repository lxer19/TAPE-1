URL: ftp://ftp.cs.uu.nl/pub/RUU/CS/techreps/CS-1997/1997-32.ps.gz
Refering-URL: http://www.cs.ruu.nl/docs/research/publication/TechList1.html
Root-URL: http://www.aic.nrl.navy.mil/~aha/people.html
Email: marc@cs.ruu.nl  
Title: Algorithms for Triangulated Terrains  
Author: Marc van Kreveld 
Address: The Netherlands  
Affiliation: Dept. of Computer Science Utrecht University  
Abstract: Digital elevation models can represent many types of geographic data. One of the common digital elevation models is the triangulated irregular network (also called TIN, or polyhedral terrain, or triangulated terrain). We discuss ways to represent a TIN in a data structure, and give some of the basic algorithms that work on TINs. These include retrieving contour lines, computing perspective views, and constructing TINs from other digital elevation data. We also give a recent method to compress and decompress a TIN for storage and transmission purposes.
Abstract-found: 1
Intro-found: 1
Reference: [1] <editor> B.P. Buttenfield and W.A. Mackaness. Visualization. In D.J. Maguire, M.F. Goodchild, and D.W. Rhind, editors, </editor> <booktitle> Geographical Information Systems Principles and Applications, </booktitle> <volume> volume 1, </volume> <pages> pages 427-443. </pages> <publisher> Longman Scientific & Technical, </publisher> <year> 1991. </year>
Reference-contexts: De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also <ref> [1, 22, 30] </ref>. Algorithms for the construction of TINs from digital elevation in another form has been studied extensively. This can be the triangulation between contour lines, grid to TIN conversion as in this paper, or producing a TIN from point data, with or without an interpolation method.
Reference: [2] <institution> CGAL home page. </institution> <note> http://www.cs.ruu.nl/CGAL/. </note>
Reference: [3] <author> N. Chiba, T. Nishizeki, and N. Saito. </author> <title> A linear 5-coloring algorithm of planar graphs. </title> <journal> J. of Algorithms, </journal> <volume> 2 </volume> <pages> 317-327, </pages> <year> 1981. </year>
Reference-contexts: By the four-color theorem, any planar graph on m vertices has an independent set of size dm=4e. However, it takes quadratic time to find it [23]. Much simpler algorithms are known to compute an independent set of size m=5 <ref> [3] </ref>. However, the algorithms don't give only vertices with constant degree. The following simple algorithm determines an independent set satisfying these conditions. The idea was introduced by Kirkpatrick [17], and used for efficient planar point location. Initially, all vertices are unmarked and not chosen.
Reference: [4] <author> K. L. Clarkson and P. W. Shor. </author> <title> Applications of random sampling in computational geometry, II. </title> <journal> Discrete Comput. Geom., </journal> <volume> 4 </volume> <pages> 387-421, </pages> <year> 1989. </year>
Reference: [5] <author> M. de Berg. </author> <title> Visualization of TINs. </title> <editor> In M. van Kreveld, J. Nievergelt, T. Roos, and P. Widmayer, editors, </editor> <booktitle> Algorithmic Foundations of GIS, Lecture Notes in Comp. Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year> <note> to appear. </note>
Reference-contexts: Two simple algorithms for visualization were presented. More efficient methods are known to find contour lines of a terrain, by using preprocessing [10, 28]. De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization <ref> [5] </ref>. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also [1, 22, 30]. Algorithms for the construction of TINs from digital elevation in another form has been studied extensively.
Reference: [6] <author> M. de Berg, M. van Kreveld, M. Overmars, and O. Schwarzkopf. </author> <title> Computational Geometry Algorithms and Applications. </title> <publisher> Springer-Verlag, </publisher> <address> Berlin, </address> <year> 1997. </year>
Reference: [7] <author> H. Djidjev and A. Lingas. </author> <title> On computing Voronoi diagrams for sorted point sets. </title> <journal> Internat. J. Comput. Geom. Appl., </journal> <volume> 5 </volume> <pages> 327-337, </pages> <year> 1995. </year>
Reference-contexts: The algorithm to compute this particular order takes O (n) time as well. Interestingly, the sorted order on x-coordinate doesn't work to (re)construct the Delaunay triangulation of a point set; the (n log n) lower bound remains valid <ref> [7] </ref>. Our first algorithm produces a permutation of the data; our second takes this permutation and reconstructs the Delaunay triangulation. 6.1 Compression Let P be a set of n points in the plane, of which the Delaunay triangulation is given in some structure.
Reference: [8] <author> D. P. </author> <title> Dobkin. </title> <journal> Computational geometry and computer graphics. Proc. IEEE, </journal> <volume> 80(9) </volume> <pages> 1400-1411, </pages> <month> September </month> <year> 1992. </year>
Reference: [9] <author> P.-O. Fjallstrom. </author> <title> Polyhedral approximation of bivariate functions. </title> <booktitle> In Proc. 3rd Canad. Conf. Comput. Geom., </booktitle> <pages> pages 187-190, </pages> <year> 1991. </year>
Reference: [10] <author> L. De Floriani, D. Mirra, and E. Puppo. </author> <title> Extracting contour lines from a hierarchical surface model. </title> <booktitle> In Eurographics'93, </booktitle> <volume> volume 12, </volume> <pages> pages 249-260, </pages> <year> 1993. </year>
Reference-contexts: These algorithms were developed in the research areas of computational geometry and GIS. Both areas also have strong connections with computer graphics. Two simple algorithms for visualization were presented. More efficient methods are known to find contour lines of a terrain, by using preprocessing <ref> [10, 28] </ref>. De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also [1, 22, 30].
Reference: [11] <author> Wm Randolph Franklin. </author> <title> Compressing elevation data. </title> <booktitle> In Advances in Spatial Databases (SSD'95), number 951 in Lecture Notes in Computer Science, </booktitle> <pages> pages 385-404, </pages> <address> Berlin, 1995. </address> <publisher> Springer-Verlag. </publisher>
Reference-contexts: Surveys on digital elevation models contain many references to such methods [29, 31]. Compression of digital elevation data hasn't been studied so much yet. For gridded data, Franklin gives a number of experimental results showing how well standard image compression techniques work for elevation data <ref> [11, 12] </ref>. 14 More algorithms that operate on terrains and can be used in GIS have been described in a survey of the author of this paper [29].
Reference: [12] <author> Wm Randolph Franklin and A. Said. </author> <title> Lossy compression elevation data. </title> <booktitle> In Proc. 7th Int. Symp. on Spatial Data Handling, </booktitle> <pages> pages 8B.29-8B.41, </pages> <year> 1996. </year>
Reference-contexts: Surveys on digital elevation models contain many references to such methods [29, 31]. Compression of digital elevation data hasn't been studied so much yet. For gridded data, Franklin gives a number of experimental results showing how well standard image compression techniques work for elevation data <ref> [11, 12] </ref>. 14 More algorithms that operate on terrains and can be used in GIS have been described in a survey of the author of this paper [29].
Reference: [13] <author> L. J. Guibas, D. E. Knuth, and M. Sharir. </author> <title> Randomized incremental construction of Delaunay and Voronoi diagrams. </title> <journal> Algorithmica, </journal> <volume> 7 </volume> <pages> 381-413, </pages> <year> 1992. </year>
Reference: [14] <author> L. J. Guibas and J. Stolfi. </author> <title> Primitives for the manipulation of general subdivisions and the computation of Voronoi diagrams. </title> <journal> ACM Trans. Graph., </journal> <volume> 4 </volume> <pages> 74-123, </pages> <year> 1985. </year>
Reference: [15] <author> P. S. Heckbert and M. </author> <title> Garland. Fast polygonal approximation of terrains and height fields. </title> <type> Report CMU-CS-95-181, </type> <institution> Carnegie Mellon University, </institution> <year> 1995. </year> <month> 15 </month>
Reference: [16] <author> M. Heller. </author> <title> Triangulation algorithms for adaptive terrain modeling. </title> <booktitle> In Proc. 4th Int. Symp. on Spatial Data Handling, </booktitle> <pages> pages 163-174, </pages> <year> 1990. </year>
Reference: [17] <author> D. G. Kirkpatrick. </author> <title> Optimal search in planar subdivisions. </title> <journal> SIAM J. Comput., </journal> <volume> 12 </volume> <pages> 28-35, </pages> <year> 1983. </year>
Reference-contexts: Much simpler algorithms are known to compute an independent set of size m=5 [3]. However, the algorithms don't give only vertices with constant degree. The following simple algorithm determines an independent set satisfying these conditions. The idea was introduced by Kirkpatrick <ref> [17] </ref>, and used for efficient planar point location. Initially, all vertices are unmarked and not chosen. Traverse the vertices of the Delaunay triangulation in any order and choose a vertex if it has degree at most 10, it is not a corner, and it is unmarked.
Reference: [18] <editor> A.M. MacEachren and D.R.F. Taylor, editors. </editor> <booktitle> Visualization in Modern Cartography. </booktitle> <publisher> Elsevier Science Inc., </publisher> <address> New York, </address> <year> 1994. </year>
Reference-contexts: De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor <ref> [18] </ref>, see also [1, 22, 30]. Algorithms for the construction of TINs from digital elevation in another form has been studied extensively.
Reference: [19] <author> Atsuyuki Okabe, Barry Boots, and Kokichi Sugihara. </author> <title> Spatial Tessellations: Concepts and Applications of Voronoi Diagrams. </title> <publisher> John Wiley & Sons, </publisher> <address> Chichester, UK, </address> <year> 1992. </year>
Reference: [20] <author> J. O'Rourke. </author> <title> Computational Geometry in C. </title> <publisher> Cambridge Univ. Press, </publisher> <address> NY, </address> <year> 1994. </year>
Reference: [21] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference: [22] <author> Relief: </author> <title> depicting a surface on a map. </title> <address> http://acorn.educ.nottingham.ac.uk/ShellCent/maps/relief.html. </address>
Reference-contexts: De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also <ref> [1, 22, 30] </ref>. Algorithms for the construction of TINs from digital elevation in another form has been studied extensively. This can be the triangulation between contour lines, grid to TIN conversion as in this paper, or producing a TIN from point data, with or without an interpolation method.
Reference: [23] <author> N. Robertson, D.P. Sanders, P. Seymour, and R. Thomas. </author> <title> Efficiently four-coloring planar graphs. </title> <booktitle> In Proc. 28th ACM Symp. Theor. Comp., </booktitle> <pages> pages 571-575, </pages> <year> 1996. </year>
Reference-contexts: Thirdly, the independent set should be large, in any case at least some constant fraction of the whole set. By the four-color theorem, any planar graph on m vertices has an independent set of size dm=4e. However, it takes quadratic time to find it <ref> [23] </ref>. Much simpler algorithms are known to compute an independent set of size m=5 [3]. However, the algorithms don't give only vertices with constant degree. The following simple algorithm determines an independent set satisfying these conditions. The idea was introduced by Kirkpatrick [17], and used for efficient planar point location.
Reference: [24] <author> R. Seidel. </author> <title> Backwards analysis of randomized geometric algorithms. </title> <editor> In J. Pach, editor, </editor> <booktitle> New Trends in Discrete and Computational Geometry, volume 10 of Algorithms and Combinatorics, </booktitle> <pages> pages 37-68. </pages> <publisher> Springer-Verlag, </publisher> <year> 1993. </year>
Reference: [25] <author> J. Snoeyink and M. van Kreveld. </author> <title> Good orders for incremental (re)construction. </title> <booktitle> In Proc. 13th ACM Symp. Computational Geometry, </booktitle> <pages> pages 400-402, </pages> <year> 1997. </year>
Reference-contexts: We'll give a simple and efficient algorithm for compression and for decompression. The idea applies to some other geometric structures as well, like Voronoi diagrams, convex hulls, and vertical decompositions. It was introduced by Jack Snoeyink and the author of this paper <ref> [25, 26] </ref>. A structure like the Delaunay triangulation can be compressed by omitting all structural information (egdes and triangles), leaving only the vertices. This is true because the Delaunay triangulation is uniquely determined by its vertices. <p> Therefore we leave the four corners in until the end. Secondly, the O (log n) markers that were placed in the sequence are used in the decompression algorithm. There are a few ways to avoid them altogether, and only use the order of the points <ref> [25, 26] </ref>. 13 6.2 Decompression Decompression is done when a computer gets the data from background storage, or receives the data over a network. The data arrives in a sequence, and the algorithm can start to reconstruct the Delaunay triangulation as soon as the first points arrive.
Reference: [26] <author> J. Snoeyink and M. van Kreveld. </author> <title> Linear time reconstruction of the Delaunay triangulation with applications. </title> <booktitle> In Proc. 7th Europ. Symp. Algorithms, Lecture Notes in Comp. Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year>
Reference-contexts: We'll give a simple and efficient algorithm for compression and for decompression. The idea applies to some other geometric structures as well, like Voronoi diagrams, convex hulls, and vertical decompositions. It was introduced by Jack Snoeyink and the author of this paper <ref> [25, 26] </ref>. A structure like the Delaunay triangulation can be compressed by omitting all structural information (egdes and triangles), leaving only the vertices. This is true because the Delaunay triangulation is uniquely determined by its vertices. <p> The analysis given can be refined to get a larger constant than 5=121. A more clever linear time algorithm can guarantee choosing roughly 4=21 of the vertices, and in practice gives a fraction close to 1=3 <ref> [26] </ref>. 6.1.2 Delete the points of S. After computing the subset S of independent vertices we must delete each one, and restore the Delaunay triangulation. <p> Therefore we leave the four corners in until the end. Secondly, the O (log n) markers that were placed in the sequence are used in the decompression algorithm. There are a few ways to avoid them altogether, and only use the order of the points <ref> [25, 26] </ref>. 13 6.2 Decompression Decompression is done when a computer gets the data from background storage, or receives the data over a network. The data arrives in a sequence, and the algorithm can start to reconstruct the Delaunay triangulation as soon as the first points arrive.
Reference: [27] <author> S.S. Stevens. </author> <title> On the theory of scales of measurement. </title> <journal> Science, </journal> <volume> 103 </volume> <pages> 677-680, </pages> <year> 1946. </year>
Reference: [28] <author> M. van Kreveld. </author> <title> Efficient methods for isoline extraction from a TIN. </title> <journal> Int. J. of GIS, </journal> <volume> 10 </volume> <pages> 523-540, </pages> <year> 1996. </year>
Reference-contexts: These algorithms were developed in the research areas of computational geometry and GIS. Both areas also have strong connections with computer graphics. Two simple algorithms for visualization were presented. More efficient methods are known to find contour lines of a terrain, by using preprocessing <ref> [10, 28] </ref>. De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also [1, 22, 30].
Reference: [29] <author> M. van Kreveld. </author> <title> Digital elevation models and TIN algorithms. </title> <editor> In M. van Kreveld, J. Nievergelt, T. Roos, and P. Widmayer, editors, </editor> <booktitle> Algorithmic Foundations of GIS, Lecture Notes in Comp. Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1997. </year> <note> to appear. </note>
Reference-contexts: This can be the triangulation between contour lines, grid to TIN conversion as in this paper, or producing a TIN from point data, with or without an interpolation method. Surveys on digital elevation models contain many references to such methods <ref> [29, 31] </ref>. Compression of digital elevation data hasn't been studied so much yet. <p> For gridded data, Franklin gives a number of experimental results showing how well standard image compression techniques work for elevation data [11, 12]. 14 More algorithms that operate on terrains and can be used in GIS have been described in a survey of the author of this paper <ref> [29] </ref>.
Reference: [30] <institution> Visualization techniques for landscape evaluation, </institution> <note> literature review. http://bamboo.mluri.sari.ac.uk/ jo/litrev/chapters.html. </note>
Reference-contexts: De Berg has written a more extended survey on TIN visualization, including the use of levels of detail of terrains in visualization [5]. More generally, visualization in GIS is treated in a book edited by MacEachren and Taylor [18], see also <ref> [1, 22, 30] </ref>. Algorithms for the construction of TINs from digital elevation in another form has been studied extensively. This can be the triangulation between contour lines, grid to TIN conversion as in this paper, or producing a TIN from point data, with or without an interpolation method.
Reference: [31] <author> R. Weibel and M. Heller. </author> <title> Digital terrain modelling. </title> <editor> In D. J. Maguire, M. F. Good-child, and D. W. Rhind, editors, </editor> <booktitle> Geographical Information Systems Principles and Applications, </booktitle> <pages> pages 269-297. </pages> <publisher> Longman, </publisher> <address> London, </address> <year> 1991. </year>
Reference-contexts: This can be the triangulation between contour lines, grid to TIN conversion as in this paper, or producing a TIN from point data, with or without an interpolation method. Surveys on digital elevation models contain many references to such methods <ref> [29, 31] </ref>. Compression of digital elevation data hasn't been studied so much yet.
Reference: [32] <author> M.F. Worboys. </author> <title> GIS: A Computing Perspective. </title> <publisher> Taylor & Francis, </publisher> <address> London, </address> <year> 1995. </year> <month> 16 </month>
References-found: 32

