URL: http://www.cs.vt.edu/~irchen/ps/cj96.2.ps
Refering-URL: http://www.cs.vt.edu/~irchen/
Root-URL: http://www.cs.vt.edu
Title: Threshold-Based Admission Control Policies for Multimedia Servers  
Author: Ing-Ray Chen and Chi-Ming Chen 
Keyword: Index Terms On-demand multimedia servers, admission control, capacity reservation, performance analysis, queueing theory, threshold-based control.  
Abstract: Traditional admission control algorithms for on-demand multimedia servers concern the acceptance decisions to new clients' requests so as to guarantee continuous services to all clients being executed. These algorithms determine whether a new client can be accepted based on the consideration whether the underlying hardware can satisfy the quality of service (QoS) requirements of admitted client requests. In this paper, we consider a richer class of admission control algorithms that make acceptance/rejection decisions not only to satisfy the hardware requirements of client requests but also to optimize the reward of the system based on a performance criterion as it services clients of different priority classes. We divide the server capacity into a number of "priority threshold values" based on which the system decides whether to accept clients of different priority classes dynamically in order to maximize the system value. The resulting threshold-based admission control algorithm is developed based on the idea that admission control can be driven not only by hardware requirements, but also by knowledge regarding the workload characteristics of client requests, thus allowing the system to dynamically adjust the threshold values in response to changes in client workload characteristics. We derive a close-form expression for the value which the system can obtain when operating under the threshold-based algorithm as a function of model parameters, and discuss how the server can utilize the analytical solution at the run time so as to maximize the system value dynamically without violating clients' continuity requirements. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. Bestavros and S. Braoudakis, </author> <title> "Value-cognizant speculative concurrency control," </title> <booktitle> VLDB'95: The International Conf. on Very Large Databases, </booktitle> <month> Sept. </month> <year> 1995. </year>
Reference-contexts: address priority scheduling issues and develop admission control algorithms which make acceptance/rejection decisions not only to satisfy the QoS requirements of client requests but also to make the system benefit the most from the perspective of "reward optimization." We borrow the concept of transaction values in scheduling real-time transactions 1 <ref> [1, 7] </ref> and introduce the notions of "reward" and "penalty" associated with each client into our cost model.
Reference: [2] <author> E. Chang and A. Zakhor, </author> <title> "Cost analysis for VBR video servers," </title> <booktitle> IEEE Multimedia, Winter 1996, </booktitle> <pages> pp. 56-71. </pages>
Reference-contexts: Another design issue is an admission control policy based on which the server accepts/rejects new requests. This paper concerns with the second design issue. Existing admission control algorithms make acceptance/rejection decisions merely based on the consideration whether the underlying hardware can satisfy the QoS requirements of clients <ref> [2, 10, 11, 15] </ref>, e.g., based on the playback rate requirements of media streams. <p> It was also demonstrated that these benefits are obtained without sacrificing the QoS requirements specified by clients requesting predictive services. Another study of best-effort admission control is by Chang and Zakhor <ref> [2] </ref> who investigated a class of statistical admission control strategies for buffer management for variable bit rate (VBR) video servers. <p> A new client is accepted if the remaining capacity can accommodate it. Otherwise, the client is turned away. Consequently, there exists a maximum number of client requests that the system can service without overloading, as having been addressed in previous works in admission control <ref> [2, 15] </ref>. Note that the above argument holds for both deterministic and best-effort admission control. For ease of exposition, we first consider the case when there exist two priority classes of clients, with each class being characterized by its own arrival/departure rates as well as its reward/penalty values.
Reference: [3] <author> K. Fujikawa, et al., </author> <title> "Application level QoS modeling for a distributed multimedia system," </title> <booktitle> 1995 Pacific Workshop Dist. Multimedia Systems, </booktitle> <year> 1995, </year> <pages> pp. 44-51. </pages>
Reference-contexts: This issue may involve dynamically lowering the quality of service (QoS) levels of existing clients so as to make room for newly arriving clients and may involve the design of some negotiation protocols <ref> [3] </ref>. Another design issue is an admission control policy based on which the server accepts/rejects new requests. This paper concerns with the second design issue.
Reference: [4] <author> L. Kleinrock, </author> <title> Queueing Systems, Vol. 1: Theory, </title> <publisher> John Wiley and Sons, </publisher> <year> 1975. </year>
Reference-contexts: We will use this policy as the base policy against which other more sophisticated admission policies can be compared. Essentially, under this policy, there is no priority distinction among clients and the system behaves like a classic M/M/n/n system <ref> [4] </ref> with the arrival rate = h + l and the departure rate i when there are i clients in the system.
Reference: [5] <author> G.G. Mei, M.H. Lin, L. Hu and H. Chang, </author> <title> "A real-time multimedia system for video applications," </title> <booktitle> 26th IEEE Conf. Signals, Systems and Computers, </booktitle> <year> 1992, </year> <pages> pp. 1031-1036. </pages>
Reference-contexts: 1 INTRODUCTION Multimedia servers <ref> [5, 8, 9, 10, 14] </ref> are designed to provide continuous services to clients on demand. This can be achieved by having the server periodically execute the clients' fl This work was supported in part by the National Science Council of R.O.C. under grant NSC-86-2745-E-006-020.
Reference: [6] <author> C.W. Mercer, S. Savage, and H. Tokuda, </author> <title> "Processor capacity reserves: Operating system support for multimedia applications," </title> <booktitle> 1st IEEE Inter. Conf. on Multimedia Computing and Systems, </booktitle> <address> Boston, </address> <year> 1994, </year> <pages> pp. 90-99. </pages>
Reference-contexts: Email: irchen@iie.ncku.edu.tw. 1 tasks (e.g., for media data processing) such that the periodic deadline requirement of each client is satisfied. A promising approach for guaranteeing continuous services is based on the design concept of capacity reservation <ref> [6] </ref> with which a fraction of the server capacity is reserved for each new client, and once a reservation has been made, the client is guaranteed of the availability of the server capacity reserved till it terminates. <p> Section 5 shows some numerical examples and gives physical interpretations of the result. Finally, Section 6 summarizes the paper and outlines some future research areas. 2 SYSTEM MODEL We assume that the on-demand multimedia server adopts the capacity reservation mechanism <ref> [6] </ref> such that a server capacity reservation is made at the time a new client arrives. A new client is accepted if the remaining capacity can accommodate it. Otherwise, the client is turned away.
Reference: [7] <author> C. Locke. </author> <title> Best Effort Decision Making for Real-Time Scheduling, </title> <type> Ph.D. Thesis, </type> <institution> Carnegie-Mellon University, Department of Computer Science, </institution> <month> May </month> <year> 1986. </year>
Reference-contexts: address priority scheduling issues and develop admission control algorithms which make acceptance/rejection decisions not only to satisfy the QoS requirements of client requests but also to make the system benefit the most from the perspective of "reward optimization." We borrow the concept of transaction values in scheduling real-time transactions 1 <ref> [1, 7] </ref> and introduce the notions of "reward" and "penalty" associated with each client into our cost model.
Reference: [8] <author> E. Oomoto and K. Tanaka, "OVID: </author> <title> Design and implementation of a video-object database system," </title> <journal> IEEE Trans. Know. and Data Eng., </journal> <volume> Vol. 5, No. 4, </volume> <year> 1993, </year> <pages> pp. 629-643. </pages>
Reference-contexts: 1 INTRODUCTION Multimedia servers <ref> [5, 8, 9, 10, 14] </ref> are designed to provide continuous services to clients on demand. This can be achieved by having the server periodically execute the clients' fl This work was supported in part by the National Science Council of R.O.C. under grant NSC-86-2745-E-006-020.
Reference: [9] <author> Y.J. Oyang, C.H. Wen, C.Y. Cheng, M.H. Lee and J.T. Li, </author> <title> "A multimedia storage system for on-demand playback," </title> <journal> IEEE Trans. Consumer Electronics, </journal> <volume> Vol. 41, No. 1, </volume> <month> Feb. </month> <year> 1995, </year> <pages> pp. 53-64. </pages>
Reference-contexts: 1 INTRODUCTION Multimedia servers <ref> [5, 8, 9, 10, 14] </ref> are designed to provide continuous services to clients on demand. This can be achieved by having the server periodically execute the clients' fl This work was supported in part by the National Science Council of R.O.C. under grant NSC-86-2745-E-006-020.
Reference: [10] <author> P.V. Rangan, H.M. Vin and S. Ramanathan, </author> <title> "Designing an on-demand multimedia service," </title> <journal> IEEE Communications, </journal> <month> July </month> <year> 1992. </year> <month> 21 </month>
Reference-contexts: 1 INTRODUCTION Multimedia servers <ref> [5, 8, 9, 10, 14] </ref> are designed to provide continuous services to clients on demand. This can be achieved by having the server periodically execute the clients' fl This work was supported in part by the National Science Council of R.O.C. under grant NSC-86-2745-E-006-020. <p> For example, in designing an on-demand multimedia server <ref> [10] </ref>, the capacity reservation concept is implemented by allocating a portion of the server capacity to retrieve a specified number of disk blocks in a repeated service cycle for each admitted client so as to meet the playback rate requirements of all admitted clients. <p> Another design issue is an admission control policy based on which the server accepts/rejects new requests. This paper concerns with the second design issue. Existing admission control algorithms make acceptance/rejection decisions merely based on the consideration whether the underlying hardware can satisfy the QoS requirements of clients <ref> [2, 10, 11, 15] </ref>, e.g., based on the playback rate requirements of media streams. <p> There are two classes of admission control algorithms being considered thus far in the literature, namely, "deterministic" and "best-effort." Rangan, Vin and Ramanathan <ref> [10, 11] </ref> developed deterministic admission control algorithms by considering different ways of performing data placement and disk access scheduling. They derived a formula for the maximum number of clients which the system can admit based on the theoretical worst-case time bounds with absolute guarantees. <p> When all slots are used-up, the server rejects a newly arriving client so as to guarantee continuous services to all clients that have been admitted. An example for which this assertion is justified occurs in the design of a real-time on-demand multimedia server <ref> [10] </ref> where the parameter n corresponds to the maximum number of subscriber requests with the same playback rate that can be serviced by the server. <p> It displays the difference between the optimal pay-off rate and that without control (i.e., with free-threshold), with h varying in the range of <ref> [10, 150] </ref> in increment of 10 and l varying in the range of [50, 150] in increment of 50, and with n = 100.
Reference: [11] <author> S. Ramanathan and P.V. Rangan, </author> <title> "Architecture for personalized multimedia," </title> <booktitle> IEEE Multimedia, Spring 1994, </booktitle> <pages> pp. 37-46. </pages>
Reference-contexts: Another design issue is an admission control policy based on which the server accepts/rejects new requests. This paper concerns with the second design issue. Existing admission control algorithms make acceptance/rejection decisions merely based on the consideration whether the underlying hardware can satisfy the QoS requirements of clients <ref> [2, 10, 11, 15] </ref>, e.g., based on the playback rate requirements of media streams. <p> There are two classes of admission control algorithms being considered thus far in the literature, namely, "deterministic" and "best-effort." Rangan, Vin and Ramanathan <ref> [10, 11] </ref> developed deterministic admission control algorithms by considering different ways of performing data placement and disk access scheduling. They derived a formula for the maximum number of clients which the system can admit based on the theoretical worst-case time bounds with absolute guarantees.
Reference: [12] <author> R.A. Sahner, </author> <title> and K.S. Trivedi, SHARPE Language Description, </title> <institution> Duke University, </institution> <year> 1991. </year>
Reference-contexts: v h v l , and the penalties to the system when high-priority and low-priority clients are rejected are q h and q l , respectively, with q h q l . be able to obtain analytical solutions and also a software tool which analyzes stochastic models such as SHARPE <ref> [12] </ref> will have to be used to obtain numerical solutions on a case by case basis. 6 The performance metric being considered in the paper takes both rewards and penalties of clients into consideration.
Reference: [13] <author> R.A. Sahner, K.S. Trivedi and A. Puliafito, </author> <title> Performance and Reliability Analysis of Computer Systems, </title> <publisher> Kluwer Academic Publishers, </publisher> <year> 1996, </year> <pages> pp. 71-72. </pages>
Reference-contexts: Here, fl h and fl l denote the arrival rates of high-priority and low-priority clients after n h and n l slots have been occupied by high-priority and low-priority clients, respectively. These two arrival rates associated with the "spill-over" processes (which are Markov processes themselves <ref> [13] </ref>) can be obtained from two low-level models, one for each type of clients, like the ones we have used for the fixed-threshold admission policy.
Reference: [14] <author> A. Vina, J.L. Lerida, A. Molano and D. del Val, </author> <title> "Real-time multimedia systems," </title> <booktitle> 13th IEEE Symp. Mass Storage Systems, </booktitle> <year> 1994, </year> <pages> pp. 77-83. </pages>
Reference-contexts: 1 INTRODUCTION Multimedia servers <ref> [5, 8, 9, 10, 14] </ref> are designed to provide continuous services to clients on demand. This can be achieved by having the server periodically execute the clients' fl This work was supported in part by the National Science Council of R.O.C. under grant NSC-86-2745-E-006-020.
Reference: [15] <author> H.M. Vin, A. Goyal and P. Goyal, </author> <title> "Algorithms for designing multimedia servers," </title> <journal> Computer Communications, </journal> <volume> Vol. 18, No. 3, </volume> <year> 1995, </year> <pages> pp. 192-203. </pages>
Reference-contexts: Another design issue is an admission control policy based on which the server accepts/rejects new requests. This paper concerns with the second design issue. Existing admission control algorithms make acceptance/rejection decisions merely based on the consideration whether the underlying hardware can satisfy the QoS requirements of clients <ref> [2, 10, 11, 15] </ref>, e.g., based on the playback rate requirements of media streams. <p> They derived a formula for the maximum number of clients which the system can admit based on the theoretical worst-case time bounds with absolute guarantees. Vin, Goyal and Goyal <ref> [15] </ref> subsequently compared deterministic algorithms with predictive algorithms which allow momentary violations of the clients' QoS requirements to be tolerated, as long as the fraction of media data delivered on time is larger than a specified threshold value, say ff, specified as part of a client's QoS requirement. <p> A new client is accepted if the remaining capacity can accommodate it. Otherwise, the client is turned away. Consequently, there exists a maximum number of client requests that the system can service without overloading, as having been addressed in previous works in admission control <ref> [2, 15] </ref>. Note that the above argument holds for both deterministic and best-effort admission control. For ease of exposition, we first consider the case when there exist two priority classes of clients, with each class being characterized by its own arrival/departure rates as well as its reward/penalty values. <p> The server can continue using the old set of (n h ; n m ; n l ) values to admit users while the background process computes the new optimal set. 5 NUMERICAL EXAMPLES We use the design of an on-demand multimedia server <ref> [15] </ref> as an example to demonstrate the utility of our analysis result. One experiment reported was that an array of 128 disks each with a storage capacity of 0.5 Gbytes is used to implement the server. The playback rate is assumed to be 30 frames/second per client request. <p> The latter is different from the former in that the server admits clients based on the observed performance characteristics of the server with predictive guarantee, rather than based on theoretical worst-case time bounds with absolute guarantee 16 <ref> [15] </ref>. It should be noted that their analysis was purely based on resource capacity limitations, without considering the importance or criticality of requests.
Reference: [16] <author> S. Wolfram, </author> <title> Mathematica 3.0, </title> <publisher> Cambridge University Press, </publisher> <year> 1996. </year> <month> 22 </month>
Reference-contexts: In this case, we can evaluate optimal (n h ; n m ; n l ) sets statically for various combinations of h , l and which are likely to change dynamically. A symbolic mathematical software package such as Mathematica <ref> [16] </ref> can be used for this purpose. Figure 1 shows a three-dimensional graph generated by Mathematica.
References-found: 16

