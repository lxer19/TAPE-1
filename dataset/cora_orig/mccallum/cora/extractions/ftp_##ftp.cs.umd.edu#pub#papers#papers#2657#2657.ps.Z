URL: ftp://ftp.cs.umd.edu/pub/papers/papers/2657/2657.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: a space-filling approach to the visualization of hierarchical information structures  Sparks of Innovation in Human-Computer Interaction,  
Author: Brian Johnson Ben Shneiderman B. Shneiderman, 
Note: Proc. of the 2nd International IEEE Visualization Conference (San Diego,  Ed., Ablex Publ., Norwood, NJ (1993)  
Date: 6.3 Treemaps:  Oct. 1991) 284-291.  
Pubnum: 275  
Abstract: This paper describes a novel method for the visualization of hierarchically structured information. The treemap visualization technique makes 100% use of the available display space, mapping the full hierarchy onto a rectangular region in a space-filling manner. This efficient use of space allows very large hierarchies to be displayed in their entirety and facilitates the presentation of semantic information. 
Abstract-found: 1
Intro-found: 1
Reference: <author> References Beard, D. V., Walker II, J. Q. </author> <title> (1990) Navigational techniques to improve the display of large two-dimensional spaces. </title> <journal> Behaviour & Information Technology, </journal> <volume> Vol. 9, No. 6, </volume> <pages> 451-466. </pages>
Reference: <author> Brggemann-Klein, A., Wood.D. </author> <title> (July 1989) Drawing trees nicely with tex, </title> <journal> Electronic Publishing, </journal> <volume> Vol. 2, No. 2, </volume> <pages> 101-115. </pages>
Reference: <author> Card, S. K., Robertson, G. G., Mackinlay, J. D. </author> <title> The information visualizer, an information workspace, </title> <booktitle> Proc of ACM CHI91, Conference on Human Factors in Computing Systems, Information Visualization, </booktitle> <pages> 181-188. </pages>
Reference: <author> Chimera, R., Wolman, K., Mark S., Shneiderman, B. </author> <month> (Feb. </month> <title> 1991) Evaluation of three interfaces for browsing hierarchical tables of contents, </title> <type> Technical Report CARTR-539, </type> <institution> CS-TR-2620, University of Maryland, College ParK. </institution> <note> "Cox, </note> <editor> D. J., </editor> <booktitle> The art of scientific visualization,(March 1990) Academic Computing, </booktitle> <pages> 20. </pages>
Reference-contexts: Outline methods can explicitly provide both structural and content information, but since the structural indentation can only be viewed a few lines at a time, it is often inadequate <ref> (Chimera, Wolman, Mark, & Shneiderman, 1991) </ref>. The number of display lines required to present a hierarchy with both the listing and outline methods is linearly proportional to the number of nodes in the hierarchy. These methods are inadequate for structures containing more than a few hundred nodes.
Reference: <author> Ding, C., Mateti, P. </author> <title> (May 1990) A framework for the automated drawing of data structure diagrams, </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> Vol. 16, No. 5, </volume> <pages> 543-557. </pages>
Reference-contexts: Visual display properties such as color (hue, saturation, brightness), texture, shape, border, blinking, etc., are of primary interest, but the interface will not limit users to purely visual properties <ref> (Ding & Mateti, 1990) </ref>. Color is the most important of these visual display properties, and it can be an important aid to fast and accurate decision making (Hoadley, 1990; MacDonald, 1990; Rice, 1991). Auditory properties may also be useful in certain circumstances.
Reference: <author> Ellson, R., </author> <title> Visualization at work (March 1990) Academic Computing, </title> <type> 26. </type>
Reference: <author> Feiner, S. </author> <title> (March 1988) Seeing the forest for the trees: hierarchical display of hypertext structures, </title> <booktitle> ACM Proc. COIS'88 , Conf. on Office Information Systems (Palo Alto, </booktitle> <address> CA), </address> <pages> 205-212. </pages>
Reference: <author> Furnas, G. W. </author> <title> (1986) Generalized fisheye views, </title> <booktitle> Proc. of ACM CHI86 , Conference on Human Factors in Computing Systems, Visualizing Complex Information Spaces, </booktitle> <pages> 16-23. </pages>
Reference-contexts: A node's weight (bounding box) determines its display size and can be thought of as a measure of importance or degree of interest <ref> (Furnas, 1986) </ref>.
Reference: <author> Henry, T. R., Hudson, S. E. </author> <title> (May 1990) Viewing large graphs, </title> <type> Technical Report 90-13, </type> <institution> University of Arizona. </institution>
Reference-contexts: For small tree diagrams this poor use of space is acceptable, and traditional layout methods produce excellent results. But for large trees, traditional node and link diagrams can not be drawn adequately in a limited display space. Attempts to provide zooming and panning have only been only partially successful <ref> (Henry & Hudson, 1990) </ref>. 6.3 Treemaps: a space-filling approach 278 Section 6: Information visualization Another problem with tree diagrams is the lack of content information; typically each node has only a simple text label.
Reference: <author> Hoadley, E. D. </author> <title> (February 1990) Investigating the effects of color. </title> <journal> Communications of the ACM, </journal> <volume> Vol. 33, No. 2, </volume> <pages> 120-139. </pages>
Reference: <author> Kamada, T. </author> <month> (Dec. </month> <title> 1988) On visualization of abstract objects and relations, </title> <type> Ph.D. thesis, </type> <institution> University of Tokyo, Department of Information Science, </institution> <address> 7-3-1 Hongo, Bunkyo-ku, Tokyo, 113 JAPAN. </address>
Reference-contexts: As humans we have the ability to recognize the spatial configuration of elements in a picture and notice the relationships between elements quickly. This highly developed visual ability allows people to grasp the content of a picture much faster than they can scan and understand text <ref> (Kamada, 1988) </ref>. The treemap visualization method maps hierarchical information to a rectangular 2-D display in a space-filling manner; 100% of the designated display space is utilized. Interactive control allows users to specify the presentation of both structural (depth bounds, etc.) and content (display properties such as color mappings) information.
Reference: <author> Knuth, D. E. </author> <title> (1973) Fundamental Algorithms, </title> <booktitle> Art of Computer Programming, </booktitle> <volume> vol. 1, </volume> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, 2nd edition. </address>
Reference: <author> Kuhn, W. </author> <title> (1990) Editing spatial relations, </title> <booktitle> Proc. of the 4th International Symposium on Spatial Data Handling, </booktitle> <address> (Zurich, Switzerland) 423-432. </address>
Reference: <author> Rice, J. R. </author> <title> (March 1991) Ten rules for color coding, </title> <journal> Information Display, </journal> <volume> Vol. 7. No. 3, </volume> <pages> 12-14. </pages>
Reference: <author> Robertson, G.G., Mackinlay, J. D., Card, S. K. </author> <title> (1991) Cone trees: animated 3d visualiza 290 Section 6: Information visualization tions of hierarchical information, </title> <booktitle> Proc. of ACM CHI91, Conference on Human Factors in Computing Systems, Information Visualization, </booktitle> <pages> 189-194. </pages>
Reference: <author> Samet, H. </author> <title> (1989) Design and Analysis of Spatial Data Structures, </title> <publisher> Addison-Wesley Publishing Co., </publisher> <address> Reading, MA. </address>
Reference-contexts: Structural information: partitioning the display space Treemap displays look similar to the partition diagrams of quad-trees and k-D trees. The key difference is the direction of the transformation. Quad-trees create hierarchical structures to store 2-D images efficiently <ref> (Samet, 1989) </ref>, while 283 treemaps present hierarchical information structures efficiently on 2-D display surfaces. Treemaps require that a weight be assigned to each node; this weight is used to determine the size of a nodes bounding box.
Reference: <author> Sears, A., Shneiderman, B. </author> <title> (April 1991) High precision touchscreens: design strategies and comparisons with a mouse. </title> <journal> International Journal of Man-Machine Studies, </journal> <volume> Vol. 34, NO. 4, </volume> <pages> 593-613. </pages>
Reference: <author> Shneiderman, B. </author> <month> (Sept. </month> <year> 1990.) </year> <title> Tree visualization with tree-maps: a 2-d space-filling appoach, </title> <journal> ACM Transactions on Graphics, </journal> <volume> Vol. 11, No. 1, </volume> <pages> 92-99. </pages>
Reference-contexts: Treemaps partition the display space into a collection of rectangular bounding boxes representing the tree structure <ref> (Shneiderman, 1990) </ref>. The drawing of nodes within their bounding boxes is entirely dependent on the content of the nodes, and can be interactively controlled. Since the display size is user controlled, the drawing size of each node varies inversely with the size of the tree (i.e., number of nodes). <p> A box with 10 pixels per side (roughly 4mm 2 ) is easily selectable using a standard mouse or touchscreen device <ref> (Sears & Shneiderman, 1990) </ref>. This average case analysis is only part of the story since file sizes may vary widely. The range of file sizes on our hard disk varied from a few hundred bytes to well over one million bytes.
Reference: <author> Travers, M. </author> <title> (1989) A visual representation for knowledge structures, </title> <booktitle> ACM Hypertext89 Proc., Implementations and Interfaces, </booktitle> <pages> 147-158. </pages>
Reference-contexts: Nesting provides for the direct selection of all nodes, both internal and leaf. The space required for nesting reduces the number of nodes which can be drawn in a given display space and hence reduces the size of the trees that can be adequately displayed compared to non-nested drawings <ref> (Travers, 1989) </ref>. A non-nested display explicitly provides direct selection only for leaf nodes, but a pop-up display can provide path information as well as further selection facilities.
Reference: <author> Tufte, </author> <title> E.R. (1983) The Visual Display of Quantitative Information, </title> <publisher> Graphics Press, </publisher> <address> Cheshire, CT. </address>
Reference: <author> Vincente, K. J., Hayes, B. C., Williges, R. C. </author> <title> (1987) Assaying and isolating individual differences in searching a hierarchical file system, </title> <booktitle> Human Factors, </booktitle> <volume> Vol. 29, No. 3,:349-359. </volume> <pages> 291 References </pages>
Reference-contexts: It is difficult for people to extract information from large hierarchical information structures using these methods, as the navigation of the structure is a great burden and content information is often hidden within individual nodes <ref> (Vincente, Hayes, & Williges, 1987) </ref>. Listings are capable of providing detailed content information, but are generally very poor at presenting structural information. Listings of the entire structure with explicit paths can provide structural information, but require users to parse path information to arrive at a mental model of the structure.
References-found: 21

