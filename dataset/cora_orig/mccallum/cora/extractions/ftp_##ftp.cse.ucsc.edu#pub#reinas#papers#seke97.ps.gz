URL: ftp://ftp.cse.ucsc.edu/pub/reinas/papers/seke97.ps.gz
Refering-URL: http://csl.cse.ucsc.edu/projects/reinas/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: REINAS: A Real-time System for Managing Environmental Data  
Author: Eric C. Rosen, Theodore R. Haining, Darrell D. E. Long, Patrick E. Mantey Craig M. Wittenbrink 
Address: Santa Cruz, CA  Palo Alto, CA  
Affiliation: Baskin Center for Computer Engineering Computer Science University of California  Hewlett Packard Laboratories  
Abstract: Managing scientific data is a challenging task, and many of the problems it presents have yet to be adequately solved. The Real-time Environmental Information Network and Analysis System (REINAS) is an operational solution to the problem of collecting and distributing environmental data in a real-time context, as well as supporting data acquisition, retrieval, visualization and long-term data maintenance. The system is built around one or more databases and has been developed to support both real-time and retrospective regional scale environmental science. Continuous real-time data is acquired from dispersed sensors and input to a logically integrated but physically distributed system. The database engine provides a powerful structure to handle data management, but current database technology can have difficulty meeting the performance requirements that a large real-time environmental system demands. The REINAS architecture and current status is described in detail, including the challenges that were addressed in the construction of an operational system which includes a regional wireless instrumentation network comprised of over 200 instrument platforms and 1500 sensor streams producing real-time data of interest to thousands of users. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> H. Balakrishnan, S. Seshan, E. Amir, and R. Katz. </author> <title> Improving TCP/IP performance over wireless networks. </title> <booktitle> In Proceedings of the First ACM International Conference on Mobile Computing and Networking, </booktitle> <address> San Jose, CA, </address> <month> November </month> <year> 1995. </year>
Reference-contexts: To achieve satisfactory reliability and performance tuning over wireless links, it has been necessary to implement new wireless-aware protocols. Because wireless links are both lossy and exhibit high latency, congestion based error-correction protocols such as TCP are not appropriate for transmitting real-time data from remote instruments to database nodes <ref> [1, 16] </ref>. However, since reliable transport must still be guaranteed to insure that all data eventually migrates from remote instrument logs into a stream log, some form of retransmission protocol is necessary.
Reference: [2] <author> T. Bernath. </author> <title> Distributed GIS visualization system. </title> <booktitle> In Proceedings of GIS/LIS, </booktitle> <volume> Vol. 1, </volume> <pages> pages 5158, </pages> <address> San Jose, CA, </address> <month> Nov. </month> <year> 1992. </year> <booktitle> American Society for Photogrammetry and Remote Sensing. </booktitle>
Reference-contexts: The NEONS project [17] did employ a relational database engine for environmental data, but unlike REINAS, NEONS did not emphasize real-time access to instrumentation. Some previous Geographic Information Systems employ structures similar to those used by the REINAS database schema <ref> [2, 3] </ref>, while some recent data visualization work [10] is similar to that developed within REINAS.
Reference: [3] <author> A. Berrill and G. Moon. </author> <title> An object oriented approach to an integrated GIS system. </title> <booktitle> In Proceedings of GIS/LIS, </booktitle> <volume> Vol. 1, </volume> <pages> pages 5963, </pages> <address> San Jose, CA, </address> <month> Nov. </month> <year> 1992. </year> <booktitle> American Society for Photogrammetry and Remote Sensing. </booktitle>
Reference-contexts: The NEONS project [17] did employ a relational database engine for environmental data, but unlike REINAS, NEONS did not emphasize real-time access to instrumentation. Some previous Geographic Information Systems employ structures similar to those used by the REINAS database schema <ref> [2, 3] </ref>, while some recent data visualization work [10] is similar to that developed within REINAS.
Reference: [4] <author> R. S. Cerveny et al. </author> <title> Development of a real-time interactive storm-monitoring program in Phonenix, Arizona. </title> <journal> Bulletin of the American Meteorological Society, </journal> <volume> 73(6):773779, </volume> <month> June </month> <year> 1992. </year>
Reference-contexts: Like REINAS, Sequoia 2000 was built around a relational database [20, 22]. Real-time systems employing less sophisticated database technologies have also been developed <ref> [4, 8, 21] </ref>, as well as others that run at much lower data rates [7]. One such system, StormCast, collects and archives environmental data primarily for current and forecast use, as well as supporting operating system technologies research [9].
Reference: [5] <author> T. D. Crum, R. L. Alberty, and D. W. Burgess. </author> <title> Recording, Archiving, and Using WSR-88D Data. </title> <journal> Bulletin of the American Meteorological Society, </journal> <volume> 74(4):645652, </volume> <month> April </month> <year> 1993. </year> <note> Accepted for publication in JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, Special Issue, 1997 / Page 18 </note>
Reference-contexts: A set of CODAR vector maps collected over time can be used to produce an animation illustrating ocean surface-current trends. Weather surveillance Doppler radars such as the Next Generation Weather Radar (NEXRAD) produce a series of high resolution three-dimensional volume scans of the basic Doppler meteorological radar measurements <ref> [5] </ref>. Like wind-profilers and CODARs, NEXRAD systems produce Accepted for publication in JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, Special Issue, 1997 / Page 10 data whose underlying structure is critically important to the dataset's effective use.
Reference: [6] <author> C. J. Date. </author> <title> A guide to the SQL Standard: a user's guide to the standard relational language SQL. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, third edition, </address> <year> 1993. </year>
Reference-contexts: Although queries for current-conditions tend to dominate, fairly complex queries are also possible. For some purposes, a Structured Query Language (SQL) <ref> [6, 13] </ref> interface for submitting queries is sufficient. In general, however, users and user-level applications require a more abstract interface for requesting and receiving data from REINAS. 6.1 Query Types The most popular type of query issued by users is a request for current or real-time sensor values.
Reference: [7] <author> S. Howes. </author> <title> Use of satellite and radar images in operational precipitation nowcasting. </title> <journal> Journal of the British Interplanetary Society, </journal> <volume> 41(10):455460, </volume> <month> Oct. </month> <year> 1988. </year>
Reference-contexts: Like REINAS, Sequoia 2000 was built around a relational database [20, 22]. Real-time systems employing less sophisticated database technologies have also been developed [4, 8, 21], as well as others that run at much lower data rates <ref> [7] </ref>. One such system, StormCast, collects and archives environmental data primarily for current and forecast use, as well as supporting operating system technologies research [9].
Reference: [8] <author> J. Intriery, C. Little, W. Shaw, R. Banta, P. Durkee, and R. Hardesty. </author> <title> The land/sea breeze experiment (LASBEX). </title> <journal> Bulletin of the American Meteorological Society, </journal> <volume> 71(5):656, </volume> <month> May </month> <year> 1990. </year>
Reference-contexts: Like REINAS, Sequoia 2000 was built around a relational database [20, 22]. Real-time systems employing less sophisticated database technologies have also been developed <ref> [4, 8, 21] </ref>, as well as others that run at much lower data rates [7]. One such system, StormCast, collects and archives environmental data primarily for current and forecast use, as well as supporting operating system technologies research [9].
Reference: [9] <author> D. Johansen. StormCast: </author> <title> Yet another exercise in distributed computing. Distributed Open Systems in Perspective, </title> <month> Feb. </month> <year> 1993. </year>
Reference-contexts: Real-time systems employing less sophisticated database technologies have also been developed [4, 8, 21], as well as others that run at much lower data rates [7]. One such system, StormCast, collects and archives environmental data primarily for current and forecast use, as well as supporting operating system technologies research <ref> [9] </ref>. Unlike REINAS, StormCast does not address the long-term data management problem, the issues involved in overlaying different types of structured scientific data, or the advantages of treating instruments as active Internet nodes instead of passive data-streams.
Reference: [10] <author> J. P. Lee and G. G. Grinstein, </author> <title> editors. Database Issues for Data Visualization, </title> <booktitle> IEEE Visualization '93 Workshop. </booktitle> <address> SpringerVerlag, </address> <year> 1994. </year>
Reference-contexts: The NEONS project [17] did employ a relational database engine for environmental data, but unlike REINAS, NEONS did not emphasize real-time access to instrumentation. Some previous Geographic Information Systems employ structures similar to those used by the REINAS database schema [2, 3], while some recent data visualization work <ref> [10] </ref> is similar to that developed within REINAS. REINAS differs from these previous works in that it stresses very short time-scale real-time access to environmental data through a robust and highly structured database system, supporting regional three-dimensional visualization products as well as custom user-level applications through a generalized query interface.
Reference: [11] <author> D. Long, P. Mantey, C. M. Wittenbrink, T. Haining, and B. Montague. </author> <title> REINAS the real-time environmental information network and analysis system. </title> <booktitle> In Proceedings of COMPCON, </booktitle> <pages> pages 482487, </pages> <address> San Francisco, CA, </address> <month> Mar. </month> <year> 1995. </year> <note> IEEE. </note>
Reference-contexts: 1 Introduction The Real-Time Environmental Information Network and Analysis System (REINAS) (described at earlier stages of development in <ref> [11, 12, 14] </ref>) supports regional-scale environmental science, monitoring, and forecasting through a distributed y Supported by the Office of Naval Research under grant N00014-92-J-1807 and by the National Science Foundation under grant IRI-9423881.
Reference: [12] <author> D. D. E. Long, P. E. Mantey, E. C. Rosen, C. M. Wittenbrink, and B. Gritton. REINAS: </author> <title> A real-time system for managing environmental data. </title> <booktitle> In Proceedings of Eighth International Conference on Software Engineering and Knowledge Engineering, </booktitle> <pages> pages 293300. </pages> <institution> Knowledge Systems Institute, </institution> <year> 1996. </year>
Reference-contexts: 1 Introduction The Real-Time Environmental Information Network and Analysis System (REINAS) (described at earlier stages of development in <ref> [11, 12, 14] </ref>) supports regional-scale environmental science, monitoring, and forecasting through a distributed y Supported by the Office of Naval Research under grant N00014-92-J-1807 and by the National Science Foundation under grant IRI-9423881. <p> The initial design to meet these requirements was based on the MBARI Scientific Information Model (MSIM) schema used to store environmental data for retrospective analysis at MBARI <ref> [12] </ref>. Since REINAS seeks to store metadata about instrument configuration and maintenance as well as store data required for retrospective analysis, MSIM was expanded to include a richer description of some metadata concepts.
Reference: [13] <author> R. A. Lorie. </author> <title> SQL and its applications. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, New Jersey, </address> <year> 1991. </year>
Reference-contexts: Although queries for current-conditions tend to dominate, fairly complex queries are also possible. For some purposes, a Structured Query Language (SQL) <ref> [6, 13] </ref> interface for submitting queries is sufficient. In general, however, users and user-level applications require a more abstract interface for requesting and receiving data from REINAS. 6.1 Query Types The most popular type of query issued by users is a request for current or real-time sensor values.
Reference: [14] <author> P. E. Mantey and et al. REINAS: </author> <title> Real-time Environmental Information Network and Analysis System: Phase IV - Experimentation. </title> <type> Technical report UCSC-CRL-94-43, </type> <institution> University of California, </institution> <address> Santa Cruz, Santa Cruz, CA 95064, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: 1 Introduction The Real-Time Environmental Information Network and Analysis System (REINAS) (described at earlier stages of development in <ref> [11, 12, 14] </ref>) supports regional-scale environmental science, monitoring, and forecasting through a distributed y Supported by the Office of Naval Research under grant N00014-92-J-1807 and by the National Science Foundation under grant IRI-9423881.
Reference: [15] <author> A. Pang. </author> <title> Spray rendering. </title> <journal> IEEE Computer Graphics and Applications, </journal> <volume> 14(5):57 63, </volume> <year> 1994. </year>
Reference-contexts: The three-dimensional rendered visualizations have provided a new insight into various aspects of the environmental data being archived in REINAS, and have also been the stimulus for several novel visualization methods <ref> [15, 25] </ref>. These visualizations are not used by the majority of REINAS users, as few REINAS users have direct access to Silicon Graphics or other accelerated rendering platforms necessary for supporting advanced visualization applications.
Reference: [16] <author> J. B. Postel. </author> <title> Transmission Control Protocol. </title> <booktitle> SRI International, </booktitle> <address> RFC-793, </address> <year> 1981. </year>
Reference-contexts: To achieve satisfactory reliability and performance tuning over wireless links, it has been necessary to implement new wireless-aware protocols. Because wireless links are both lossy and exhibit high latency, congestion based error-correction protocols such as TCP are not appropriate for transmitting real-time data from remote instruments to database nodes <ref> [1, 16] </ref>. However, since reliable transport must still be guaranteed to insure that all data eventually migrates from remote instrument logs into a stream log, some form of retransmission protocol is necessary.
Reference: [17] <author> C. Ramanathan. </author> <title> Providing object-oriented access to a relational database. </title> <booktitle> In Proceedings of the 32nd Annual Southeast Conference, </booktitle> <pages> pages 162165, </pages> <address> New York, NY, </address> <month> Mar. </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: Unlike REINAS, StormCast does not address the long-term data management problem, the issues involved in overlaying different types of structured scientific data, or the advantages of treating instruments as active Internet nodes instead of passive data-streams. The NEONS project <ref> [17] </ref> did employ a relational database engine for environmental data, but unlike REINAS, NEONS did not emphasize real-time access to instrumentation.
Reference: [18] <author> E. C. Rosen. </author> <note> REINAS home page. URL: http://www.cse.ucsc.edu/research/reinas, 1995. </note> <institution> Computer Engineering, University of California, Santa Cruz. </institution>
Reference-contexts: In addition, the general public (especially the local community of sailors and wind surfers) form an ever-growing group that has come to depend on real-time access to REINAS environmental data via the World Wide Web <ref> [18, 19, 26] </ref>. Interactive real-time measurement, real-time monitoring, and retrospective data management using REINAS provide forecasters and experimental scientists with a framework to plan their experiments, expeditions, and monitoring activities. <p> WWW, REINAS has developed a following of thousands of users worldwide, many of whom have come to depend on the Accepted for publication in JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, Special Issue, 1997 / Page 16 simple time-series and vector plots that provide real-time regional meteorological and oceanographic conditions <ref> [18] </ref>. To date, over 2.4 million separate visits have been recorded to the prototype video platform interface [19] which also displays real-time conditions from a nearby REINAS weather station.
Reference: [19] <author> E. C. Rosen. </author> <note> SlugVideo Home Page. URL: http://sapphire.cse.ucsc.edu/SlugVideo/, 1995. </note> <institution> Computer Engineering, University of California, Santa Cruz. </institution> <note> Accepted for publication in JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, Special Issue, 1997 / Page 19 </note>
Reference-contexts: In addition, the general public (especially the local community of sailors and wind surfers) form an ever-growing group that has come to depend on real-time access to REINAS environmental data via the World Wide Web <ref> [18, 19, 26] </ref>. Interactive real-time measurement, real-time monitoring, and retrospective data management using REINAS provide forecasters and experimental scientists with a framework to plan their experiments, expeditions, and monitoring activities. <p> In addition, work in progress will extend the system to include video streams from remote camera instruments (the prototype of which is already a popular feature on the World Wide Web <ref> [19] </ref>). <p> To date, over 2.4 million separate visits have been recorded to the prototype video platform interface <ref> [19] </ref> which also displays real-time conditions from a nearby REINAS weather station.
Reference: [20] <author> L. Rowe and M. Stonebraker. </author> <title> The Postgres data model. </title> <booktitle> In Proceedings of the 13th Conference on Very Large Data Bases, </booktitle> <pages> pages 8396, </pages> <address> Brighton, England, </address> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: Sequoia 2000 differs significantly from REINAS in that while REINAS is driven by real-time constraints, Sequoia 2000 was primarily designed for retrospective access with little real-time emphasis. Like REINAS, Sequoia 2000 was built around a relational database <ref> [20, 22] </ref>. Real-time systems employing less sophisticated database technologies have also been developed [4, 8, 21], as well as others that run at much lower data rates [7].
Reference: [21] <author> D. Schwab and K. </author> <title> Bedford. Initial implementation of the great lakes forecasting system: A real-time system for predicting lake circulation and thermal structure. </title> <type> Water Poll. </type> <institution> Res. J., 29(2/3):203220, </institution> <year> 1994. </year>
Reference-contexts: Like REINAS, Sequoia 2000 was built around a relational database [20, 22]. Real-time systems employing less sophisticated database technologies have also been developed <ref> [4, 8, 21] </ref>, as well as others that run at much lower data rates [7]. One such system, StormCast, collects and archives environmental data primarily for current and forecast use, as well as supporting operating system technologies research [9].
Reference: [22] <author> M. Stonebraker. </author> <title> The design of the Postgres storage system. </title> <booktitle> In Proceedings of the 13th Conference on Very Large Data Bases, </booktitle> <pages> pages 289300, </pages> <address> Brighton, England, </address> <month> Sept. </month> <year> 1987. </year>
Reference-contexts: Sequoia 2000 differs significantly from REINAS in that while REINAS is driven by real-time constraints, Sequoia 2000 was primarily designed for retrospective access with little real-time emphasis. Like REINAS, Sequoia 2000 was built around a relational database <ref> [20, 22] </ref>. Real-time systems employing less sophisticated database technologies have also been developed [4, 8, 21], as well as others that run at much lower data rates [7].
Reference: [23] <author> M. Stonebraker. </author> <title> An overview of the SEQUOIA 2000 project. </title> <booktitle> In Digest of Papers: COMPCON Spring 1992, 37th IEEE Computer Society International Conference. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Sequoia 2000 was a large multi-year development project which focused on global environmental science <ref> [23, 24] </ref>. Sequoia 2000 differs significantly from REINAS in that while REINAS is driven by real-time constraints, Sequoia 2000 was primarily designed for retrospective access with little real-time emphasis. Like REINAS, Sequoia 2000 was built around a relational database [20, 22].
Reference: [24] <author> M. Stonebraker. </author> <title> Sequoia 2000: A reflection on the first three years. </title> <journal> IEEE Computational Science and Engineering, </journal> <volume> 1(4):6372, </volume> <month> Winter </month> <year> 1994. </year>
Reference-contexts: Sequoia 2000 was a large multi-year development project which focused on global environmental science <ref> [23, 24] </ref>. Sequoia 2000 differs significantly from REINAS in that while REINAS is driven by real-time constraints, Sequoia 2000 was primarily designed for retrospective access with little real-time emphasis. Like REINAS, Sequoia 2000 was built around a relational database [20, 22].
Reference: [25] <author> C. M. Wittenbrink, G. Fernandez-Ubiergo, and J. Glen Langdon. </author> <title> Feature extraction of clouds from GOES satellite data for integrated model measurement visualization. </title> <booktitle> In IS&T/SPIE Symposium on Electronic Imaging: Image and Video Processing 1996, </booktitle> <address> San Jose, CA, </address> <month> Jan. </month> <year> 1996. </year>
Reference-contexts: The three-dimensional rendered visualizations have provided a new insight into various aspects of the environmental data being archived in REINAS, and have also been the stimulus for several novel visualization methods <ref> [15, 25] </ref>. These visualizations are not used by the majority of REINAS users, as few REINAS users have direct access to Silicon Graphics or other accelerated rendering platforms necessary for supporting advanced visualization applications.
Reference: [26] <author> C. M. Wittenbrink, E. Rosen, A. Pang, S. Lodha, and P. Mantey. </author> <title> Realtime database support for environmental visualization. </title> <editor> In G. Grinstein, U. Lang, and A. Wierse, editors, </editor> <booktitle> Lecture Notes in Computer Science, Second Workshop on Database Issues for Data Visualization, </booktitle> <volume> volume 1183, </volume> <pages> pages 111130. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year>
Reference-contexts: In addition, the general public (especially the local community of sailors and wind surfers) form an ever-growing group that has come to depend on real-time access to REINAS environmental data via the World Wide Web <ref> [18, 19, 26] </ref>. Interactive real-time measurement, real-time monitoring, and retrospective data management using REINAS provide forecasters and experimental scientists with a framework to plan their experiments, expeditions, and monitoring activities. <p> RSObjects is an object oriented API implemented within the C programming language that has been developed to provide such an interface to C and FORTRAN programmers <ref> [26] </ref>. RSObjects was developed following several other API development efforts with earlier prototype systems. These APIs were difficult to extend, failed to isolate client applications from changes within the dispatcher and database, and were unable to support large objects (among other failures).
References-found: 26

