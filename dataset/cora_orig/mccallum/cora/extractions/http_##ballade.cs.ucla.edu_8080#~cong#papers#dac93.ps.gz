URL: http://ballade.cs.ucla.edu:8080/~cong/papers/dac93.ps.gz
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: On Area/Depth Trade-off in LUT-Based FPGA Technology Mapping  
Author: Jason Cong and Yuzheng Ding 
Address: Los Angeles, CA 90024  
Affiliation: Department of Computer Science University of California,  
Abstract: In this paper we study the area and depth trade-off in LUT based FPGA technology mapping. Starting from a depth-optimal mapping solution, we perform a number of depth relaxation operations to obtain a new network with bounded increase in depth and advantageous to subsequent re-mapping for area minimization. We then re-map the resulting network to obtain an area-minimized mapping solution. By gradually increasing the depth bound, for each design we are able to produce a set of mapping solutions with smooth area and depth trade-off. For the area minimization step, we have developed an optimal algorithm for computing an area-minimum mapping solution without node duplication. Experimental results show that our solution sets outperform the solutions produced by many existing mapping algorithms in terms of both area and depth minimization. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Bhat, N. and D. Hill, </author> <title> ``Routable Technology Mapping for FPGAs,'' </title> <booktitle> First Int'l ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 143-148, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability <ref> [14, 1] </ref>. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently.
Reference: [2] <author> Chen, K. C., J. Cong, Y. Ding, A. B. Kahng, and P. Trajmar, ``DAG-Map: </author> <title> Graph-based FPGA Technology Mapping for Delay Optimization,'' </title> <booktitle> IEEE Design and Test of Computers, </booktitle> <month> Sep. </month> <year> 1992. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms <ref> [7, 11, 13, 2, 3] </ref>, and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently. <p> The level (or depth) of a node v is the number of edges on the longest path from any PI node to v. The depth of a network is the largest node level in the Depth # of 5-LUTs 200 300250 6 10 Chortle-crf [6] FlowMap [3] DAG-Map <ref> [2] </ref> MIS-pga (delay) [11] Chortle-d [7] 0 9 network. A Boolean network is K-bounded if | input (v ) | K for each node v. <p> (b) by decomposing LUT v to u v w x y (a) original network (b) mapping with node v duplicated (6 LUTs, 2 levels) (c) mapping without node duplication (4 LUTs, 3 levels) u v w y u v w x y x hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 1 We use the DMIG algorithm <ref> [2] </ref> to transforms a network which is not K-bounded into a K-bounded one with minimum depth. u w w wu (a) original network (b) FlowMap solution (d) after remapping (c) after depth relaxation LUT v 1 1 2 1 3 1 1 1 2 1 3 1 5 u w u <p> First, we use the DF-Map procedure to compute an area-optimal mapping solution without node duplication. Then, we carry out two post-processing procedures which allow necessary node duplications for further area minimization. The two procedures are MP-Pack, a matching-based multi-fanout predecessor packing procedure from the DAG-Map package <ref> [2] </ref>, and Flow-Pack, a flow-based area minimization procedure from the FlowMap package [3]. To generate a set of mapping solutions, we gradually increase the depth bound for the mapping solution and repeat the two-phase process for each depth bound. <p> The subsequent DF-mapping minimizes area without introducing new node duplication. After applying the DF-Map algorithm, we carry out the two post-processing procedures, the MP-Pack <ref> [2] </ref> and the Flow-Pack [3], which explore necessary node duplications for further area reduction. 2000 250 Depth alu4 14 12 10 8 6 # of 5-LUTs Depth # of 5-LUTs 900 110010000 9 7 5 iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii FlowMap-r Mapping Results for 5-LUT FPGAs iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii Optimal No. of 5-LUTs For Different Depths <p> Experimental Results We have implemented the FlowMap-r algorithm on SUN Sparc workstations and tested it on the benchmark circuits used in <ref> [7, 2, 3] </ref>. Table 1 shows some of the mapping solution sets computed by FlowMap-r. In general, larger networks have more room for area and depth trade-off, as shown in the first a few steps of depth bound increase.
Reference: [3] <author> Cong, J. and Y. Ding, </author> <title> ``An Optimal Technology Mapping Algorithm fo Delay Optimization in Lookup-Table Based FPGA Designs,'' </title> <booktitle> IEEE Int'l Conf. on Computer Aided Design, </booktitle> <month> Nov. </month> <year> 1992. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms <ref> [7, 11, 13, 2, 3] </ref>, and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently. <p> Most of these mapping algorithms are based on heuristic techniques, except FlowMap <ref> [3] </ref> which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently. <p> To satisfy such a need, our algorithm produces a set of area-minimized mapping solutions under various depth bounds. The basic approach of our algorithm is as follows. Starting from a depth-optimal mapping solution (computed by the FlowMap algorithm <ref> [3] </ref>), we perform a number of depth relaxation operations to obtain a new network with bounded increase in depth so that it is advantageous to subsequent remapping for area minimization. We then re-map the resulting network to obtain an area-minimized mapping solution with bounded depth. <p> The level (or depth) of a node v is the number of edges on the longest path from any PI node to v. The depth of a network is the largest node level in the Depth # of 5-LUTs 200 300250 6 10 Chortle-crf [6] FlowMap <ref> [3] </ref> DAG-Map [2] MIS-pga (delay) [11] Chortle-d [7] 0 9 network. A Boolean network is K-bounded if | input (v ) | K for each node v. <p> Basic Operations and Outline of the Algorithm In this section we discuss the effect of depth relaxation and node duplication which are important in area/depth trade-off, and give an overview of our algorithm. FlowMap <ref> [3] </ref> produces depth-optimal LUT-based FPGA mapping solutions for general Boolean networks. It worths noticing that in a FlowMap mapping solution, every node (LUT) has the minimum possible depth. Insisting minimum depth for every node, including the non-critical ones, may lead to inefficient use of LUTs. <p> Then, we carry out two post-processing procedures which allow necessary node duplications for further area minimization. The two procedures are MP-Pack, a matching-based multi-fanout predecessor packing procedure from the DAG-Map package [2], and Flow-Pack, a flow-based area minimization procedure from the FlowMap package <ref> [3] </ref>. To generate a set of mapping solutions, we gradually increase the depth bound for the mapping solution and repeat the two-phase process for each depth bound. The algorithm stops when no improvement on area is available by further increase of the depth bound. <p> The subsequent DF-mapping minimizes area without introducing new node duplication. After applying the DF-Map algorithm, we carry out the two post-processing procedures, the MP-Pack [2] and the Flow-Pack <ref> [3] </ref>, which explore necessary node duplications for further area reduction. 2000 250 Depth alu4 14 12 10 8 6 # of 5-LUTs Depth # of 5-LUTs 900 110010000 9 7 5 iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii FlowMap-r Mapping Results for 5-LUT FPGAs iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii Optimal No. of 5-LUTs For Different Depths Circuit Depth iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii d <p> Experimental Results We have implemented the FlowMap-r algorithm on SUN Sparc workstations and tested it on the benchmark circuits used in <ref> [7, 2, 3] </ref>. Table 1 shows some of the mapping solution sets computed by FlowMap-r. In general, larger networks have more room for area and depth trade-off, as shown in the first a few steps of depth bound increase. <p> We also compared the area- and depth-minimization solutions generated by FlowMap-r with those generated by some existing mapping algorithms. The data for these algorithms are quoted from <ref> [7, 3, 11] </ref>. Table 2 compares the area-minimum solutions generated by FlowMap-r with those generated by area minimization mapping algorithms, including Chortle-crf and MIS-pga.
Reference: [4] <author> Cong, J. and Y. Ding, </author> <title> ``On Area/Depth Trade-off in LUT-Based FPGA Technology Mapping,'' </title> <institution> UCLA Computer Science Department Tech. Report CSD-920053, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: Due to page limitation, detailed algorithm descriptions and the proofs of the theorems are not included in this paper. They can be found in <ref> [4] </ref>. 2. Problem Formulation A general Boolean network is represented as a DAG where a node represents a logic gate and a directed edge &lt;i, j &gt; exists if the output of gate i is an input of gate j. <p> A generalized cut in a subtree of the spanning tree of an MFFC is a combination of a cut with some escape nodes. In Figure 7, -s,u,v is a generalized cut of the left subtree. It can be shown (see <ref> [4] </ref> for details) that the generalized cuts of tree T can be generated from the combinations of the generalized cuts of its subtrees T 1 , T 2 , . . . , T f , and the combinations of the the root with the escape nodes.
Reference: [5] <author> Cong, J., Y. Ding, T. Gao, and K. Chen, </author> <title> ``An Optimal Performance-Driven Technology Mapping Algorithm for LUT based FPGAs under Arbitrary Net-Delay Models,'' </title> <booktitle> Proc. 1993 Int'l Conf. on Computer Graphics and CAD, </booktitle> <month> August </month> <year> 1991. </year>
Reference-contexts: The solution sets generated by our algorithm outperform the solutions by many existing algorithms in terms of area and depth. Although the algorithm is presented under unit delay model, it can be generalized to the case where an arbitrary delay is assigned to a net <ref> [5] </ref>. During depth relaxation, we only use structural information to decompose the LUTs. It is also possible to use Boolean optimization techniques to re-synthesize the LUT network locally to explore more possibilities, at the expense of longer computation time.
Reference: [6] <author> Francis, R. J., J. Rose, and Z. Vranesic, ``Chortle-crf: </author> <title> Fast Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proceedings 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 613-619, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. <p> The level (or depth) of a node v is the number of edges on the longest path from any PI node to v. The depth of a network is the largest node level in the Depth # of 5-LUTs 200 300250 6 10 Chortle-crf <ref> [6] </ref> FlowMap [3] DAG-Map [2] MIS-pga (delay) [11] Chortle-d [7] 0 9 network. A Boolean network is K-bounded if | input (v ) | K for each node v.
Reference: [7] <author> Francis, R. J., J. Rose, and Z. Vranesic, </author> <title> ``Technology Mapping for Delay Optimization of Lookup Table-Based FPGAs,'' </title> <booktitle> MCNC Logic Synthesis Workshop, </booktitle> <year> 1991. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms <ref> [7, 11, 13, 2, 3] </ref>, and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently. <p> The depth of a network is the largest node level in the Depth # of 5-LUTs 200 300250 6 10 Chortle-crf [6] FlowMap [3] DAG-Map [2] MIS-pga (delay) [11] Chortle-d <ref> [7] </ref> 0 9 network. A Boolean network is K-bounded if | input (v ) | K for each node v. <p> Experimental Results We have implemented the FlowMap-r algorithm on SUN Sparc workstations and tested it on the benchmark circuits used in <ref> [7, 2, 3] </ref>. Table 1 shows some of the mapping solution sets computed by FlowMap-r. In general, larger networks have more room for area and depth trade-off, as shown in the first a few steps of depth bound increase. <p> We also compared the area- and depth-minimization solutions generated by FlowMap-r with those generated by some existing mapping algorithms. The data for these algorithms are quoted from <ref> [7, 3, 11] </ref>. Table 2 compares the area-minimum solutions generated by FlowMap-r with those generated by area minimization mapping algorithms, including Chortle-crf and MIS-pga.
Reference: [8] <author> Hill, D., </author> <title> ``A CAD System for the Design of Field Programmable Gate Arrays,'' </title> <booktitle> Proc. ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 187-192, </pages> <year> 1991. </year>
Reference-contexts: 1. Introduction The Field programmable gate array (FPGA) has become a very popular technology in VLSI ASIC design and system prototyping. The lookup table (LUT) based FPGAs are produced by several FPGA manufacturers <ref> [16, 8] </ref>, in which the basic programmable logic block is a K-input lookup table that can implement any Boolean function of up to K variables. The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network.
Reference: [9] <author> Karplus, K., ``Xmap: </author> <title> A Technology Mapper for Table-lookup Field-Programmable Gate Arrays,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 240-243, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions.
Reference: [10] <author> Murgai, R., et al, </author> <title> ``Logic Synthesis Algorithms for Programmable Gate Arrays,'' </title> <booktitle> Proc. 27th ACM/IEEE Design Automation Conf., </booktitle> <pages> pp. 620-625, </pages> <year> 1990. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions.
Reference: [11] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Performance Directed Synthesis for Table Look Up Programmable Gate Arrays,'' </title> <booktitle> Proc. Int'l Conf. Computer-Aided Design, </booktitle> <pages> pp. 572-575, </pages> <month> Nov., </month> <year> 1991. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms <ref> [7, 11, 13, 2, 3] </ref>, and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently. <p> The depth of a network is the largest node level in the Depth # of 5-LUTs 200 300250 6 10 Chortle-crf [6] FlowMap [3] DAG-Map [2] MIS-pga (delay) <ref> [11] </ref> Chortle-d [7] 0 9 network. A Boolean network is K-bounded if | input (v ) | K for each node v. <p> We also compared the area- and depth-minimization solutions generated by FlowMap-r with those generated by some existing mapping algorithms. The data for these algorithms are quoted from <ref> [7, 3, 11] </ref>. Table 2 compares the area-minimum solutions generated by FlowMap-r with those generated by area minimization mapping algorithms, including Chortle-crf and MIS-pga.
Reference: [12] <author> Murgai, R., N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli, </author> <title> ``Improved Logic Synthesis Algorithms for Table Look Up Architectures ,'' Proc. </title> <booktitle> Int'l Conf. Computer-Aided Design, </booktitle> <pages> pp. 564-567, </pages> <month> Nov., </month> <year> 1991. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. <p> c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c c Table 2 Comparison with Chortle-crf and MIS-pga. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 2 The improved version of MIS-pga program, MIS-pga (new) <ref> [12] </ref>, outperforms FlowMap-r in terms of area. The depths of their solutions are not re ported in [12]. iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 5-LUT Mapping Result Comparison: FlowMap-r vs. <p> c c c c c c c c c c c c c c c c Table 2 Comparison with Chortle-crf and MIS-pga. hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh 2 The improved version of MIS-pga program, MIS-pga (new) <ref> [12] </ref>, outperforms FlowMap-r in terms of area. The depths of their solutions are not re ported in [12]. iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii 5-LUT Mapping Result Comparison: FlowMap-r vs.
Reference: [13] <author> Sawkar, P. and D. Thomas, </author> <title> ``Technology Mapping for Table-Look-Up Based Field Programmable Gate Arrays,'' </title> <booktitle> ACM/SIGDA Workshop on Field Programmable Gate Arrays, </booktitle> <pages> pp. 83-88, </pages> <month> Feb. </month> <year> 1992. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. <p> Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms <ref> [7, 11, 13, 2, 3] </ref>, and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently.
Reference: [14] <author> Schlag, M., J. Kong, and P. K. Chan, </author> <title> ``Routability-Driven Technology Mapping for Lookup Table-Based FPGAs,'' </title> <booktitle> Proc. 1992 IEEE International Conference on Computer Design, </booktitle> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms [6, 10, 12, 9, 15, 13], the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability <ref> [14, 1] </ref>. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions. It remains open if the area-optimal mapping problem for LUT-based FPGAs can be solved efficiently.
Reference: [15] <author> Woo, N.-S., </author> <title> ``A Heuristic Method for FPGA Technology Mapping Based on the Edge Visibility,'' </title> <booktitle> Proc. 28th ACM/IEEE Design Automation Conference, </booktitle> <pages> pp. 248-251, </pages> <year> 1991. </year>
Reference-contexts: The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network. Previous technology mapping algorithms for LUT-based FPGA designs can be roughly divided into three categories according to their optimization objectives: the area minimization algorithms <ref> [6, 10, 12, 9, 15, 13] </ref>, the depth minimization algorithms [7, 11, 13, 2, 3], and the algorithms that maximize routability [14, 1]. Most of these mapping algorithms are based on heuristic techniques, except FlowMap [3] which guarantees to produce depth-optimal mapping solutions.
Reference: [16] <author> Xilinx, </author> <title> The Programmable Gate Array Data Book, </title> <address> Xilinx, San Jose (1992). </address>
Reference-contexts: 1. Introduction The Field programmable gate array (FPGA) has become a very popular technology in VLSI ASIC design and system prototyping. The lookup table (LUT) based FPGAs are produced by several FPGA manufacturers <ref> [16, 8] </ref>, in which the basic programmable logic block is a K-input lookup table that can implement any Boolean function of up to K variables. The technology mapping problem for LUT-based FPGA designs is to convert a general Boolean network into a functionally equivalent K-LUT network.
References-found: 16

