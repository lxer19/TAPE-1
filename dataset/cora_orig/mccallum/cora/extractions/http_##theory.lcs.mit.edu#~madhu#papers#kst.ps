URL: http://theory.lcs.mit.edu/~madhu/papers/kst.ps
Refering-URL: http://theory.lcs.mit.edu/~madhu/papers.html
Root-URL: 
Email: madhu@watson.ibm.com.  trevisan@cui.unige.ch.  
Title: Constraint Satisfaction: The Approximability of Minimization Problems  
Author: Sanjeev Khanna Madhu Sudan Luca Trevisan 
Address: 700 Mountain Avenue, NJ 07974.  P.O. Box 218, Yorktown Heights, NY 10598.  Geneve, Rue General-Dufour 24, CH-1211, Geneve, Switzerland.  
Affiliation: Mathematics Research Department, Bell Labs,  Watson Research Center,  d'Informatique, Universite de  University of Rome "La Sapienza".  
Note: sanjeev@research.bell-labs.com. Fundamental  IBM Thomas J.  Centre Universitaire  Work done at the  
Date: December 11, 1996  
Abstract: This paper continues the work initiated by Creignou [Cre95] and Khanna, Sudan and Williamson [KSW96] who classify maximization problems derived from boolean constraint satisfaction. Here we study the approximability of minimization problems derived thence. A problem in this framework is characterized by a collection F of "constraints" (i.e., functions f : f0; 1g k ! f0; 1g) and an instance of a problem is constraints drawn from F applied to specified subsets of n boolean variables. We study the two minimization analogs of classes studied in [KSW96]: in one variant, namely Min CSP (F), the objective is to find an assignment to minimize the number of unsatisfied constraints, while in the other, namely Min Ones (F), the goal is to find a satisfying assignment with minimum number of ones. These two classes together capture an entire spectrum of important minimization problems including s-t Min Cut, vertex cover, hitting set with bounded size sets, integer programs with two variables per inequality, deleting minimum number of edges to make a graph bipartite, deleting minimum number of clauses to make a 2CNF formula satisfiable, and nearest codeword. Our main result is that there exists a finite partition of the space of all constraint sets such that for any given F , the approximability of Min CSP (F) and Min Ones (F) is completely determined by the partition containing it. Furthermore we present a compact set of rules which, given F, determine which partition contains it. On the one hand, our classification underscores central elements governing the approximability of problems in these classes, while on the other hand, it unifies a large number of algorithmic and hardness of approximation results. When contrasted with the work of [KSW96], our results serve to formally highlight inherent differences between maximization and minization problems. 
Abstract-found: 1
Intro-found: 1
Reference: [ABSS93] <author> S. Arora, L. Babai, J. Stern, and Z. Sweedyk. </author> <title> The hardness of approximate optima in lattices, codes, and systems of linear equations. </title> <booktitle> In Proceedings of the 34th IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pages 724-733, </pages> <year> 1993. </year>
Reference-contexts: The exact approximability of both problems remains open. At a higher level of approximability is the Nearest Codeword problem <ref> [ABSS93] </ref> which is known to be approx-imable to within polynomial factors but is hard to approximate to within 2 log * n factors. <p> Nearest Codeword = Min CSP (fx y z = 0; x y z = 1g). This is a classical problem for which hardness of approximation results have been shown by Arora et al. <ref> [ABSS93] </ref>. The Min Ones version of this problem is essentially identical to this problem. For both problems, the hardness result of Arora et al. [ABSS93] says that approximating this problem to within a factor of 2 log * n is hard, unless NP QP. <p> This is a classical problem for which hardness of approximation results have been shown by Arora et al. <ref> [ABSS93] </ref>. The Min Ones version of this problem is essentially identical to this problem. For both problems, the hardness result of Arora et al. [ABSS93] says that approximating this problem to within a factor of 2 log * n is hard, unless NP QP. <p> can use Lemma 21 to conlude that Min Weight CSP (F ) is Nearest Codeword-hard. 2 Lemma 35 (<ref> [ABSS93] </ref>) Nearest Codeword is hard to approximate to within a factor of 2 log 1* n . Proof: The required hardness of the nearest codeword problem is shown by Arora et al. [ABSS93]. The nearest codeword problem, as defined in Arora et al., works with the following problem: Given a n fi m matrix A and a m-dimensional vector b, find an n-dimensional vector x which minimizes the Hamming distance between Ax and b. <p> Proof: Reduction from the Min Label-Cover problem <ref> [ABSS93] </ref>. <p> (q 2 (r)) such that V (r; a 1 ; a 2 ) = 1. 16 The objective function to be minimized is P P For any * &gt; 0, the existence of a 2 log 1* n -approximate algorithm for Min Label-Cover implies that NP has sub-exponential time algorithms <ref> [LY94, ABSS93] </ref>. Let (q 1 ; q 2 ; V ) be an instance of Min Label-Cover, where q 1 : [R] ! [Q 1 ], q 2 : [R] ! [Q 2 ] and V : [R] fi [A 1 ] ! f0; 1g.
Reference: [BC93] <author> D.P. Bovet and P. Crescenzi. </author> <title> Introduction to the Theory of Complexity. </title> <publisher> Prentice Hall, </publisher> <year> 1993. </year>
Reference-contexts: The optimum value is the largest one for maximization problems and the smallest one for minimization problems. A combinatorial optimization problem is said to be an NPO problem if instances and solutions are easy to recognize, solutions are short, and the objective function is easy to compute. See e.g. <ref> [BC93] </ref> for formal definitions.
Reference: [BGS95] <author> M. Bellare, O. Goldreich, and M. Sudan. </author> <title> Free bits, PCP's and non-approximability - towards tight results (3rd version). Technical Report TR95-24, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1995. </year> <note> Preliminary version in Proc. of FOCS'95. </note>
Reference-contexts: Techniques As in the work of Khanna et al. [KSW96] two simple ideas play an important role in this paper. (1) The notion of implementations from [KSW96] (also known as gadgets <ref> [BGS95, TSSW96] </ref>) which shows how to use the constraints of a family F to enforce constraints of a different family F 0 , thereby laying the groundwork of a reduction from Min CSP (F 0 ) to Min CSP (F ). (2) The idea of working with weighted versions of minimization <p> Then (1) If F contains a function that is not C-closed, then F perfectly implements the unary con straints x and (:x). (2) Otherwise, F perfectly implements the binary constraints (x y = 1) and (x = y). One relevant consequence (that also uses an idea from <ref> [BGS95] </ref>) is the following. Lemma 21 Let F be a family that contains a not 0-valid and a not 1-valid function. Then Min Weight CSP (F [ fx; (:x)g) is A-reducible to Min Weight CSP (F).
Reference: [CKST95] <author> P. Crescenzi, V. Kann, R. Silvestri, and L. Trevisan. </author> <title> Structure in approximation classes. </title> <booktitle> In Proceedings of the 1st Combinatorics and Computing Conference, </booktitle> <pages> pages 539-548. </pages> <publisher> LNCS 959, Springer Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Fortunately, results showing APX-hardness follow directly from [KSW96] and so the new reductions of this paper are all A-reductions. Definition 5 (AP-reducibility <ref> [CKST95] </ref>) For a constant ff &gt; 0 and two NPO problems A and B, we say that A is AP-reducible to B if two polynomial-time computable functions f and g exist such that the following holds: (1) For any instance I of A, f (I) is an instance of B. (2)
Reference: [CP91] <author> P. Crescenzi and A. Panconesi. </author> <title> Completeness in approximation classes. </title> <journal> Information and Computation, </journal> <volume> 93 </volume> <pages> 241-262, </pages> <year> 1991. </year> <note> Preliminary version in Proc. of FCT'89. </note>
Reference-contexts: We say that A is AP-reducible to B if a constant ff &gt; 0 exists such that A is ff-AP-reducible to B. Definition 6 (A-reducibility <ref> [CP91] </ref>) An NPO problem A is said to be A-reducible to an NPO problem B if two polynomial time computable functions f and g and a constant ff exist such that: (1) For any instance I of A, f (I) is an instance of B. (2) For any instance I of
Reference: [Cre95] <author> N. Creignou. </author> <title> A dichotomy theorem for maximum generalized satisfiability problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 51(3) </volume> <pages> 511-522, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction In this paper we present a complete classification of the approximability of minimization problems derived from "boolean constraint satisfaction". Our work follows the work of Creignou <ref> [Cre95] </ref> and Khanna, Sudan and Williamson [KSW96] who obtained such a classification for maximization problems. This line of research is motivated by an attempt to unify the many known positive and negative results on the approximability of combinatorial optimization problems. <p> Schaefer describes six classes of function families, such that if F is a subset of one of these classes, then the decision problem is in P, else he shows that the decision problem is NP-hard. Creignou <ref> [Cre95] </ref> and Khanna et al. [KSW96] extend the study above, in a natural way, to optimization problems. They define two classes of optimization problems: Max CSP (F ) and Max Ones (F ) (Actually the work of Creignou's studies only the class Max CSP (F ).). <p> A constraint f is C-closed if for all assignments s, f (s) = f (s). The above properties, along with Schaefer's original set of properties suffice for <ref> [Cre95] </ref> and [KSW96] to classify the approximability of the maximization problems Max CSP (F ) and Max Ones (F ). A statement of their results is included in Appendix B. Lastly we need one definition of our own, before we can state our results. <p> Lemma 22 If F F 0 , for some F 0 2 fF 0 ; F 1 ; F 2M g, then Min Weight CSP (F ) is solvable exactly in P. Proof: Creignou <ref> [Cre95] </ref> and Khanna et al. [KSW96] show that the corresponding maximization problem is solvable exactly in P. Our lemma follows immediately (since the exact problems are interreducible). 2 Lemma 23 If F F HS , then Min Weight CSP (F ) 2 APX.
Reference: [CST96] <author> P. Crescenzi, R. Silvestri, and L. Trevisan. </author> <title> To weight or not to weight: </title> <booktitle> Where is the question? In Proceedings of the 4th IEEE Israel Symposium on Theory of Computing and Systems, </booktitle> <pages> pages 68-77, </pages> <year> 1996. </year> <month> 20 </month>
Reference-contexts: As a side-effect we also show (in Section 3.2) that the unweighted and weighted problems are equally hard to approximate in all the 7 relevant cases of Min CSP and Min Ones problems. This extends to minimization problems the results of Crescenzi et al. <ref> [CST96] </ref>. A more detailed look at implementations and weighted problems follows in Section 3. In Section 4 we show the containment results for the Min CSP result. The new element here is the constant factor approximation algorithm for IHS-B families. In Section 5 we show the hardness results. <p> If F perfectly implements (x = y), then Min Weight CSP (F) A-reduces to Min CSP (F). As a first step towards establishing this result, we recall that from the results of <ref> [CST96] </ref>, it follows that whenever Min Weight CSP (F) (resp.
Reference: [Gav74] <editor> F. Gavril. Manuscript cited in [GJ79], </editor> <year> 1974. </year>
Reference-contexts: For starters, the s-t Min Cut problem is one of the problems captured by Min CSP which is well known to be computable exactly in P. (This was already shown and used by Khanna et al. [KSW96].) At the constant level of approximability we see problems such as Vertex Cover <ref> [Gav74, NT75] </ref>, Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut [GVY96] and Min 2CNF Deletion [KPRT96] both of which
Reference: [GJ79] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractability: a Guide to the Theory of NP-Completeness. </title> <publisher> Freeman, </publisher> <year> 1979. </year>
Reference-contexts: For k = 3, the implementation of (x W W is f (a x); (:a y z)g (the constraint (a W x) has in turn to be implemented with the already shown method). For k 4, we use the textbook reduction from Sat to 3Sat (see e.g. <ref> [GJ79, Page 49] </ref>) and we observe that when applied to k-ary weakly positive constraints it yields a perfect implementation using only 3-ary weakly positive constraints. 2 5 Hardness Results (Reductions) for Min CSP Lemma 29 (The APX-hard Case) If F 6 F 0 , for F 0 2 fF 0 ;
Reference: [GVY96] <author> N. Garg, V.V. Vazirani, and M. Yannakakis. </author> <title> Approximate max-flow min-(multi)cut theorems and their applications. </title> <journal> SIAM Journal on Computing, </journal> <volume> 25(2) </volume> <pages> 235-251, </pages> <year> 1996. </year> <note> Preliminary version in Proc. of STOC'93. </note>
Reference-contexts: approximability we see problems such as Vertex Cover [Gav74, NT75], Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut <ref> [GVY96] </ref> and Min 2CNF Deletion [KPRT96] both of which are known to be ap-proximable to within polylogarithmic factors and known to be hard to approximate to within some constant factor. The exact approximability of both problems remains open. <p> Our positive results highlight once more the utility of the linear programming (LP) relaxation followed by rounding approach to devising approximation al 2 gorithms. This approach, which plays a significant role in all the above mentioned results of <ref> [NT75, Joh74, HMNT93, GVY96, KPRT96] </ref>, also plays a crucial role in obtaining constant factor approximation algorithms for one of the partitions of the Min CSP (F ) problems and one partition of the Min Ones (F ) problems. <p> We show that, in fact Min IHS-B is approximable to within a factor of B + 1. Min UnCut = Min CSP (fx y = 1g). This problem has been studied previously by Klein et al. [KARR90] and Garg et al. <ref> [GVY96] </ref>. The problem is known to be MAX SNP-hard and hence not approximable to within a constant factor. On the other hand, the problem is known to be approximable to within a factor of O (log n) [GVY96]. Min 2CNF Deletion = Min CSP (fx W W :yg). <p> has been studied previously by Klein et al. [KARR90] and Garg et al. <ref> [GVY96] </ref>. The problem is known to be MAX SNP-hard and hence not approximable to within a constant factor. On the other hand, the problem is known to be approximable to within a factor of O (log n) [GVY96]. Min 2CNF Deletion = Min CSP (fx W W :yg). This problem has been studied by Klein et al. [KPRT96]. They show that the problem is MAX SNP-hard and that it is approx-imable to within a factor of O (log n log log n).
Reference: [HMNT93] <author> D.S. Hochbaum, N. Megiddo, J. Naor, and A. Tamir. </author> <title> Tight bounds and 2-approximation algorithms for integer programs with two variables per inequality. </title> <journal> Mathematical Programming, </journal> <volume> 62 </volume> <pages> 69-83, </pages> <year> 1993. </year>
Reference-contexts: which is well known to be computable exactly in P. (This was already shown and used by Khanna et al. [KSW96].) At the constant level of approximability we see problems such as Vertex Cover [Gav74, NT75], Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality <ref> [HMNT93] </ref>. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut [GVY96] and Min 2CNF Deletion [KPRT96] both of which are known to be ap-proximable to within polylogarithmic factors and known to be hard to approximate <p> Our positive results highlight once more the utility of the linear programming (LP) relaxation followed by rounding approach to devising approximation al 2 gorithms. This approach, which plays a significant role in all the above mentioned results of <ref> [NT75, Joh74, HMNT93, GVY96, KPRT96] </ref>, also plays a crucial role in obtaining constant factor approximation algorithms for one of the partitions of the Min CSP (F ) problems and one partition of the Min Ones (F ) problems. <p> Proof: For the case F F 2CNF , a 2-approximate algorithm is given by Hochbaum et al. <ref> [HMNT93] </ref>. Consider now the case F F HS . From Theorem 15 it is sufficiento to consider only basic IHS-B constraints. Since IHS-B constraints are weakly negative, we will restrict to basic IHS-B+ constraints. We use linear-programming relaxations and deterministic rounding.
Reference: [Joh74] <author> D.S. Johnson. </author> <title> Approximation algorithms for combinatorial problems. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 9 </volume> <pages> 256-278, </pages> <year> 1974. </year>
Reference-contexts: one of the problems captured by Min CSP which is well known to be computable exactly in P. (This was already shown and used by Khanna et al. [KSW96].) At the constant level of approximability we see problems such as Vertex Cover [Gav74, NT75], Hitting Set with bounded size sets <ref> [Joh74] </ref>, Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut [GVY96] and Min 2CNF Deletion [KPRT96] both of which are known to be ap-proximable to within polylogarithmic <p> Our positive results highlight once more the utility of the linear programming (LP) relaxation followed by rounding approach to devising approximation al 2 gorithms. This approach, which plays a significant role in all the above mentioned results of <ref> [NT75, Joh74, HMNT93, GVY96, KPRT96] </ref>, also plays a crucial role in obtaining constant factor approximation algorithms for one of the partitions of the Min CSP (F ) problems and one partition of the Min Ones (F ) problems.
Reference: [KARR90] <author> P. Klein, A. Agarwal, R. Ravi and S. Rao. </author> <title> Approximation through multicommodity flow. </title> <booktitle> In Proceedings of the 31st Annual IEEE Symposium on Foundations of Computer Science, </booktitle> <pages> pp. 726-737, </pages> <year> 1990. </year>
Reference-contexts: We show that, in fact Min IHS-B is approximable to within a factor of B + 1. Min UnCut = Min CSP (fx y = 1g). This problem has been studied previously by Klein et al. <ref> [KARR90] </ref> and Garg et al. [GVY96]. The problem is known to be MAX SNP-hard and hence not approximable to within a constant factor. On the other hand, the problem is known to be approximable to within a factor of O (log n) [GVY96].
Reference: [KM96] <author> S. Khanna and R. Motwani. </author> <title> Towards a syntactic characterization of PTAS. </title> <booktitle> In Proceedings of the 28th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 329-337, </pages> <year> 1996. </year>
Reference-contexts: Sometimes significant insight may be gleaned from restricting the problem instances. A widely prescribed condition is that the incidence graph on the variables and the constraints should form a planar graph. This restriction has been recently studied by Khanna and Motwani <ref> [KM96] </ref> and they show that it leads to polynomial time approximation schemes for a general class of constraint satisfaction problems. Another input restriction of interest could be that variables are allowed to participate only in a bounded number of constraints. We are unaware of any work on this front.
Reference: [KPRT96] <author> P.N. Klein, S.A. Plotkin, S. Rao, and E. Tardos. </author> <title> Approximation Algorithms for Steiner and Directed Multicuts. </title> <note> To appear Journal of Algorithms, 1996. Available from URL http://www.cs.cornell.edu/Info/People/eva/eva.html. </note>
Reference-contexts: as Vertex Cover [Gav74, NT75], Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut [GVY96] and Min 2CNF Deletion <ref> [KPRT96] </ref> both of which are known to be ap-proximable to within polylogarithmic factors and known to be hard to approximate to within some constant factor. The exact approximability of both problems remains open. <p> Our positive results highlight once more the utility of the linear programming (LP) relaxation followed by rounding approach to devising approximation al 2 gorithms. This approach, which plays a significant role in all the above mentioned results of <ref> [NT75, Joh74, HMNT93, GVY96, KPRT96] </ref>, also plays a crucial role in obtaining constant factor approximation algorithms for one of the partitions of the Min CSP (F ) problems and one partition of the Min Ones (F ) problems. <p> On the other hand, the problem is known to be approximable to within a factor of O (log n) [GVY96]. Min 2CNF Deletion = Min CSP (fx W W :yg). This problem has been studied by Klein et al. <ref> [KPRT96] </ref>. They show that the problem is MAX SNP-hard and that it is approx-imable to within a factor of O (log n log log n). Nearest Codeword = Min CSP (fx y z = 0; x y z = 1g).
Reference: [KS96] <author> S. Khanna and M. Sudan. </author> <title> The optimization complexity of constraint satisfaction problems. Technical Report TR96-028, </title> <booktitle> Electronic Colloquium on Computational Complexity, </booktitle> <year> 1996. </year>
Reference: [KSW96] <author> S. Khanna, M. Sudan, and D.P. Williamson. </author> <title> The optimization complexity of structure maximization problems. </title> <type> Manuscript, </type> <year> 1996. </year>
Reference-contexts: 1 Introduction In this paper we present a complete classification of the approximability of minimization problems derived from "boolean constraint satisfaction". Our work follows the work of Creignou [Cre95] and Khanna, Sudan and Williamson <ref> [KSW96] </ref> who obtained such a classification for maximization problems. This line of research is motivated by an attempt to unify the many known positive and negative results on the approximability of combinatorial optimization problems. <p> As a result many interesting questions about hard problems tend to remain unresolved. Khanna et al. <ref> [KSW96] </ref> describe a number of such interesting questions: (1) Are there any NP-hard problems in MAX SNP which are not MAX SNP-hard? (2) Are there any "natural" maximization problems which are approximable to within polylogarithmic factors, but no better? (3) Is there some inherent difference between maximization and minimization problems among <p> Schaefer describes six classes of function families, such that if F is a subset of one of these classes, then the decision problem is in P, else he shows that the decision problem is NP-hard. Creignou [Cre95] and Khanna et al. <ref> [KSW96] </ref> extend the study above, in a natural way, to optimization problems. They define two classes of optimization problems: Max CSP (F ) and Max Ones (F ) (Actually the work of Creignou's studies only the class Max CSP (F ).). <p> For starters, the s-t Min Cut problem is one of the problems captured by Min CSP which is well known to be computable exactly in P. (This was already shown and used by Khanna et al. <ref> [KSW96] </ref>.) At the constant level of approximability we see problems such as Vertex Cover [Gav74, NT75], Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to <p> Some more properties were defined by Khanna et al. <ref> [KSW96] </ref> to describe the approximability of the problems they considered. <p> A constraint f is C-closed if for all assignments s, f (s) = f (s). The above properties, along with Schaefer's original set of properties suffice for [Cre95] and <ref> [KSW96] </ref> to classify the approximability of the maximization problems Max CSP (F ) and Max Ones (F ). A statement of their results is included in Appendix B. Lastly we need one definition of our own, before we can state our results. <p> Unfortunately neither one of these reducibilities alone suffices for our purposes | we need to use the more stringent reducibility to show APX-hardness of problems and we need the flexibility of the weaker reducibility to provide the other hardness results. Fortunately, results showing APX-hardness follow directly from <ref> [KSW96] </ref> and so the new reductions of this paper are all A-reductions. <p> Techniques As in the work of Khanna et al. <ref> [KSW96] </ref> two simple ideas play an important role in this paper. (1) The notion of implementations from [KSW96] (also known as gadgets [BGS95, TSSW96]) which shows how to use the constraints of a family F to enforce constraints of a different family F 0 , thereby laying the groundwork of a <p> Techniques As in the work of Khanna et al. <ref> [KSW96] </ref> two simple ideas play an important role in this paper. (1) The notion of implementations from [KSW96] (also known as gadgets [BGS95, TSSW96]) which shows how to use the constraints of a family F to enforce constraints of a different family F 0 , thereby laying the groundwork of a reduction from Min CSP (F 0 ) to Min CSP (F ). (2) The idea of working <p> The main technique we use to do this is to "implement" the constraint x W y using constraints from the constraint set F . The following definition shows how to formalize this notion. (The definition is part of a more general definition of Khanna et al <ref> [KSW96] </ref>. In fact, their definition is needed for AP-reductions, but since we don't provide any new AP-reductions, we don't need their full definition here.) Definition 11 (Perfect Implementation [KSW96]) A collection of constraint applications C 1 ; : : : ; C ff over a set of variables ~x = fx <p> The following definition shows how to formalize this notion. (The definition is part of a more general definition of Khanna et al <ref> [KSW96] </ref>. In fact, their definition is needed for AP-reductions, but since we don't provide any new AP-reductions, we don't need their full definition here.) Definition 11 (Perfect Implementation [KSW96]) A collection of constraint applications C 1 ; : : : ; C ff over a set of variables ~x = fx 1 ; x 2 ; :::; x p g and ~y = fy 1 ; y 2 ; :::; y q g is called a perfect ff-implementation of <p> A solution for the latter problem is converted into a solution for the former one by complementing the value of each variable. The transformation preserves the cost of the solution. 2 A technical result by Khanna et al. <ref> [KSW96] </ref> will be used extensively. Lemma 20 ([KSW96]) Let F be a family that contains a not 0-valid and a not 1-valid function. <p> Lemma 22 If F F 0 , for some F 0 2 fF 0 ; F 1 ; F 2M g, then Min Weight CSP (F ) is solvable exactly in P. Proof: Creignou [Cre95] and Khanna et al. <ref> [KSW96] </ref> show that the corresponding maximization problem is solvable exactly in P. Our lemma follows immediately (since the exact problems are interreducible). 2 Lemma 23 If F F HS , then Min Weight CSP (F ) 2 APX. <p> Proof: Follows immediately from the results of <ref> [KSW96] </ref>. 2 Lemma 30 (The Min UnCut-hard Case) If F 6 F 0 , for F 0 2 fF 0 ; F 1 ; F 2M ; F HS g, and F F 2A then Min Weight CSP (F ) is Min UnCut-hard. <p> Proof: Khanna et al. <ref> [KSW96] </ref> show that in this case F perfectly implements the constraint x 1 x p = b for some p 3 and some b 2 f0; 1g. Thus the family F [ fT; F g implements the functions x y z = 0; x y z = 1. <p> 17 7 Containment Results for Min Ones Lemma 42 (Poly-time Solvable Cases) If F F 0 for F 0 2 fF 0 ; F WN ; F 2A g, then Min Weight Ones (F ) is solvable exactly in polynomial time Proof: Follows from the results of Khanna et al. <ref> [KSW96] </ref> and from the observation that for a family F, solving to optimality Min Weight Ones (F ) reduces to solving to optimality Max Weight Ones (F ). 2 Lemma 43 If F F 0 for F 0 2 fF 2CNF ; F HS g, then Min Weight Ones (F ) <p> Proof: Follows from Lemma 28, Proposition 17, and Proposition 40. 2 8 Hardness Results for Min Ones Lemma 46 (APX-hard Cases) If F does not satisfy the hypothesis of Lemma 42, then Min Weight Ones (F ) is APX-hard. 18 Proof: This part essentially follows from the proof of <ref> [KSW96] </ref>. The major steps are as follows: We first argue that either F implements some function of the form x 1 W W W x k , or the functions x 1 x 2 x 3 = 0=1 or the function x 1 W :x 2 . <p> Lemma 47 If F is affine but not width-2 affine nor 0-valid then Min Weight Ones (fx y z = 0; x y z = 1g) is AP-reducible to Min Weight Ones (F ). Proof: From <ref> [KSW96] </ref> we have that F implements the function x 1 x p = b for some p 3 and some b 2 f0; 1g. Also the existence of non 0-valid function implies we can either (essentially) implement the function T or the function x y = 1.
Reference: [KT94] <author> P.G. Kolaitis and M.N. Thakur. </author> <title> Logical definability of NP optimization problems. </title> <journal> Information and Computation, </journal> <volume> 115(2) </volume> <pages> 321-353, </pages> <year> 1994. </year>
Reference-contexts: The traditional approach to deal with zero/one problem has been to restrict the syntax using which the predicate within the SNP construct is used thereby ruling out the hardness of the zero/one problem (see e.g. <ref> [KT94, KT95] </ref>). Our approach, via constraint satisfaction, however does not place any such restrictions. We simply characterize all the problems for which the 0/1 problem is hard, and then having done so, move to the rest of the problems. All the different levels of approximability that are seen emerge naturally.
Reference: [KT95] <author> P.G. Kolaitis and M.N. Thakur. </author> <title> Approximation properties of NP minimization classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 50 </volume> <pages> 391-411, </pages> <year> 1995. </year> <note> Preliminary version in Proc. of Structures91. </note>
Reference-contexts: The traditional approach to deal with zero/one problem has been to restrict the syntax using which the predicate within the SNP construct is used thereby ruling out the hardness of the zero/one problem (see e.g. <ref> [KT94, KT95] </ref>). Our approach, via constraint satisfaction, however does not place any such restrictions. We simply characterize all the problems for which the 0/1 problem is hard, and then having done so, move to the rest of the problems. All the different levels of approximability that are seen emerge naturally.
Reference: [Lad75] <author> R. Ladner. </author> <title> On the structure of polynomial time reducibility. </title> <journal> Journal of the ACM, </journal> <volume> 22(1) </volume> <pages> 155-171, </pages> <year> 1975. </year>
Reference-contexts: Unfortunately, barriers such as Rice's theorem (which says this question may not in general be decidable) or Ladner's theorem (which says problems may not be just easy or hard <ref> [Lad75] </ref>) force us to severely restrict the class of problems which can be studied. A work of Schaefer [Sch78] from 1978 isolates one class of decision problems which can actually be classified completely. He obtains this classification by restricting his attention to "boolean constraint problems".
Reference: [LY94] <author> C. Lund and M. Yannakakis. </author> <title> On the hardness of approximating minimization problems. </title> <journal> Journal of the ACM, </journal> <volume> 41 </volume> <pages> 960-981, </pages> <year> 1994. </year> <note> Preliminary version in Proc. of STOC'93. </note>
Reference-contexts: (q 2 (r)) such that V (r; a 1 ; a 2 ) = 1. 16 The objective function to be minimized is P P For any * &gt; 0, the existence of a 2 log 1* n -approximate algorithm for Min Label-Cover implies that NP has sub-exponential time algorithms <ref> [LY94, ABSS93] </ref>. Let (q 1 ; q 2 ; V ) be an instance of Min Label-Cover, where q 1 : [R] ! [Q 1 ], q 2 : [R] ! [Q 2 ] and V : [R] fi [A 1 ] ! f0; 1g.
Reference: [NT75] <author> G.L. Nemhauser and L.E. Trotter. </author> <title> Vertex packing: structural properties and algorithms. </title> <journal> Mathematical Programming, </journal> <volume> 8 </volume> <pages> 232-248, </pages> <year> 1975. </year>
Reference-contexts: For starters, the s-t Min Cut problem is one of the problems captured by Min CSP which is well known to be computable exactly in P. (This was already shown and used by Khanna et al. [KSW96].) At the constant level of approximability we see problems such as Vertex Cover <ref> [Gav74, NT75] </ref>, Hitting Set with bounded size sets [Joh74], Integer programs with two variables per inequality [HMNT93]. (The references cited after the problems show that the problem is approximable to within constant factors.) Then we come to two open problems: Min UnCut [GVY96] and Min 2CNF Deletion [KPRT96] both of which <p> Our positive results highlight once more the utility of the linear programming (LP) relaxation followed by rounding approach to devising approximation al 2 gorithms. This approach, which plays a significant role in all the above mentioned results of <ref> [NT75, Joh74, HMNT93, GVY96, KPRT96] </ref>, also plays a crucial role in obtaining constant factor approximation algorithms for one of the partitions of the Min CSP (F ) problems and one partition of the Min Ones (F ) problems.
Reference: [PY91] <author> C. H. Papadimitriou and M. Yannakakis. </author> <title> Optimization, approximation, and complexity classes. </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 43 </volume> <pages> 425-440, </pages> <year> 1991. </year> <note> Preliminary version in Proc. of STOC'88. 21 </note>
Reference-contexts: This is formalized below. Proof of Theorem 13: We begin by showing that for any family F , Min Weight CSP (F) AP-reduces to Min CSP (F [ f (x = y)g). For this, we use an argument similar to the reduction from Max 3Sat to Max 3SatB (see <ref> [PY91] </ref>), however we don't need to use expanders. Let I be an instance of Min Weight CSP (F) over variable set X = fx 1 ; : : : ; x n g.
Reference: [Sch78] <author> T.J. Schaefer. </author> <title> The complexity of satisfiability problems. </title> <booktitle> In Proceedings of the 10th ACM Symposium on Theory of Computing, </booktitle> <pages> pages 216-226, </pages> <year> 1978. </year>
Reference-contexts: Unfortunately, barriers such as Rice's theorem (which says this question may not in general be decidable) or Ladner's theorem (which says problems may not be just easy or hard [Lad75]) force us to severely restrict the class of problems which can be studied. A work of Schaefer <ref> [Sch78] </ref> from 1978 isolates one class of decision problems which can actually be classified completely. He obtains this classification by restricting his attention to "boolean constraint problems". A typical problem in this class is defined by a finite set F of finite boolean constraints (specified by, say, a truth table). <p> Then f 0 is a satisfiable function which is not 1-valid. We can now apply Schaefer's theorem <ref> [Sch78] </ref> to conclude that Sat (F [ ff 0 g) is hard to decide. We now reduce an instance of deciding Sat (F [ ff 0 g) to approximating Min Weight CSP (F ).
Reference: [TSSW96] <author> L. Trevisan, G.B. Sorkin, M. Sudan, and D.P. Williamson. Gadgets, </author> <title> approximation, and linear programming. </title> <booktitle> In Proceedings of the 37th IEEE Symposium on Foundations of Computer Science, </booktitle> <year> 1996. </year> <month> 22 </month>
Reference-contexts: Techniques As in the work of Khanna et al. [KSW96] two simple ideas play an important role in this paper. (1) The notion of implementations from [KSW96] (also known as gadgets <ref> [BGS95, TSSW96] </ref>) which shows how to use the constraints of a family F to enforce constraints of a different family F 0 , thereby laying the groundwork of a reduction from Min CSP (F 0 ) to Min CSP (F ). (2) The idea of working with weighted versions of minimization
References-found: 25

