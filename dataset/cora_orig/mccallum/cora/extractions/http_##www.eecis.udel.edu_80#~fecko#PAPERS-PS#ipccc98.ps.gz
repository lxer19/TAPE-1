URL: http://www.eecis.udel.edu:80/~fecko/PAPERS-PS/ipccc98.ps.gz
Refering-URL: http://www.eecis.udel.edu:80/~fecko/mf-research.html
Root-URL: http://www.cis.udel.edu
Title: MINIMUM-COST SOLUTIONS FOR TESTING PROTOCOLS WITH TIMERS  
Author: M. Umit Uyar Mariusz A. Fecko, Adarshpal S. Sethi Paul D. Amer 
Date: 346-354, Feb. 1998)  
Note: (IEEE Int'l Performance, Computing, and Communications Conf., pp  
Address: City College of New York, New York, NY  
Affiliation: Department of Electrical Engineering  Computer and Information Science Department University of Delaware, Newark, DE  
Abstract: A method to generate a minimum-cost test sequence for a protocol with timers is presented. The protocol timers limit the number of consecutive self-loops that can be realized in a given state. The solution presented is applicable to test sequences that use any state identification method such as UIO sequences, distinguishing sequences, and characterizing sequences. If valid and inopportune transition testing are combined, or if only valid transitions are considered, a minimum-cost solution exists. In the case of testing inopportune transitions separately, however, finding a minimum-cost solution is shown to be NP-hard. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> A. V. Aho, A. T. Dahbura, D. Lee, and M. U. Uyar, </author> <title> "An optimization technique for protocol conformance test generation based on UIO sequences and rural Chi-nese postman tours," </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 39, </volume> <pages> pp. 1604-1615, </pages> <month> Nov </month> <year> 1991. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification. <p> Aho et al. <ref> [1] </ref> introduced an optimization for the test sequence length (and cost) using UIO sequences to perform the last step of the above single transition test. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> Aho et al. <ref> [1] </ref> presented an efficient solution to this problem for FSMs with either a self-loop prop erty or a reset capability. We now apply a similar approach to the problem of minimizing the test sequence with the above self-loop repetition con straints.
Reference: [2] <author> B. S. Bosik and M. U. Uyar, </author> <title> "FSM-based formal methods in protocol conformance testing: from theory to implementation," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 22, </volume> <pages> pp. 7-34, </pages> <month> Sep </month> <year> 1991. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [3] <author> W. Y. Chan and S. T. Vuong, </author> <title> "An improved protocol test generation procedure based on UIOs," </title> <booktitle> in Proc. ACM SIGCOMM, </booktitle> <month> Sep </month> <year> 1989. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [4] <author> D. Lee and M. Yannakakis, </author> <title> "Principles and methods of testing finite state machines a survey," </title> <journal> Proc. of the IEEE, </journal> <volume> vol. 84, </volume> <pages> pp. 1090-1123, </pages> <month> Aug </month> <year> 1996. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [5] <author> R. J. Linn, </author> <title> "Conformance testing for OSI protocols," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 18, no. 3, </volume> <pages> pp. 203-219, </pages> <year> 1990. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification. <p> Therefore, an optimization technique for generating realizable tests must consider the additional restriction that there is a limit on the number of self-loop transitions traversed consecutively. In general, the majority of tests defined for an IUT are classified into two categories: valid and inopportune tests <ref> [5, 14] </ref>. Valid tests correspond to the "normal" or expected behavior of a protocol entity. Inopportune tests have inputs that are semantically and syntactically correct, but arrive at unexpected states (or, out of sequence).
Reference: [6] <author> R. E. Miller and S. Paul, </author> <title> "Generating maximal fault coverage conformance test sequences of reduced length for communication protocols," </title> <booktitle> in Proc. Int'l Conference on Network Protocols, </booktitle> <address> (San Francisco, CA), </address> <month> Oct </month> <year> 1993. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The test length can be further shortened by the segment overlapping techniques of Chen et al. [23, 24], Yang and Ural [25], and Miller and Paul <ref> [6, 7] </ref>. The solution presented in this paper is applicable to test sequences that use various state identification methods such as UIO sequences, distinguishing sequences, and characterizing sequences. If the valid and inopportune transition testing are combined, or only the valid transitions are considered, a minimum-cost solution exists.
Reference: [7] <author> R. E. Miller and S. Paul, </author> <title> "On the generation of minimal-length conformance tests for communication protocols," </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 116-129, </pages> <month> Feb </month> <year> 1993. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The test length can be further shortened by the segment overlapping techniques of Chen et al. [23, 24], Yang and Ural [25], and Miller and Paul <ref> [6, 7] </ref>. The solution presented in this paper is applicable to test sequences that use various state identification methods such as UIO sequences, distinguishing sequences, and characterizing sequences. If the valid and inopportune transition testing are combined, or only the valid transitions are considered, a minimum-cost solution exists.
Reference: [8] <author> R. E. Miller and S. Paul, </author> <title> "Structural analysis of protocol specifications and generation of maximal fault coverage conformance test sequences," </title> <journal> IEEE/ACM Trans. on Networking, </journal> <volume> vol. 2, </volume> <pages> pp. 457-470, </pages> <month> Oct </month> <year> 1994. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [9] <author> B. Sarikaya, G. von Bochmann, and E. Cerny, </author> <title> "A test design methodology for protocol testing," </title> <journal> IEEE Trans. Software Engineering, </journal> <volume> vol. 13, </volume> <pages> pp. 518-531, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [10] <author> H. Ural, </author> <title> "Formal methods for test sequence generation," </title> <journal> Computer Communications, </journal> <volume> vol. 15, </volume> <pages> pp. 311-325, </pages> <month> Jun </month> <year> 1992. </year>
Reference-contexts: Without the help of formal methods in protocol testing, the interoperability of devices is questionable. Various methods for automated test generation from protocol specifications have been proposed <ref> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] </ref>, based on a deterministic finite-state machine (FSM) model of the specification.
Reference: [11] <author> K. K. Sabnani and A. T. Dahbura, </author> <title> "A protocol test generation procedure," </title> <journal> Computer Networks and ISDN Systems, </journal> <volume> vol. 15, </volume> <pages> pp. 285-297, </pages> <year> 1988. </year>
Reference-contexts: This paper presents a solution to optimize test sequence length (and cost) under the constraint that an IUT can remain only for a limited amount of time in a given state during testing. UIO sequences <ref> [11] </ref> are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences [12, 13]. Two different test suites are considered. The first suite combines the testing of valid and inopportune transitions [14]. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [12] <author> A. Bhattacharyya, </author> <title> Checking Experiments in Sequential Machines. </title> <address> New York, N.Y.: </address> <publisher> John Wiley & Sons, </publisher> <year> 1989. </year>
Reference-contexts: UIO sequences [11] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences <ref> [12, 13] </ref>. Two different test suites are considered. The first suite combines the testing of valid and inopportune transitions [14]. An inopportune transition occurs when an IUT receives an input not expected in its current state. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [13] <author> Z. Kohavi, </author> <title> Switching and Finite Automata Theory. </title> <address> New York, N.Y.: McGraw Hill, </address> <year> 1978. </year>
Reference-contexts: UIO sequences [11] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences <ref> [12, 13] </ref>. Two different test suites are considered. The first suite combines the testing of valid and inopportune transitions [14]. An inopportune transition occurs when an IUT receives an input not expected in its current state. <p> If the constraint is not considered, all valid implementations will fail the test sequence, which is not what the tester desires. 3 Preliminaries and practical re strictions on the test sequences A protocol can be specified as a deterministic FSM <ref> [13, 20] </ref>, which can be represented by a directed graph G = (V; E). The set V = fv 1 ; : : : ; v n g of vertices correspond to the set of states S of the FSM. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [14] <author> ISO, </author> <title> Information Technology - OSI, Geneva, Switzer-land, ISO International Standard 9646: Conformance Testing Methodology and Framework, </title> <year> 1991. </year>
Reference-contexts: UIO sequences [11] are used for state verification throughout the paper. However, the results presented also are applicable to test generation that uses the distinguishing or characterizing sequences [12, 13]. Two different test suites are considered. The first suite combines the testing of valid and inopportune transitions <ref> [14] </ref>. An inopportune transition occurs when an IUT receives an input not expected in its current state. In general, an inopportune transition is modeled as a self-loop, the unexpected input is simply ignored. The second suite considers testing the valid and inopportune transitions separately. <p> Therefore, an optimization technique for generating realizable tests must consider the additional restriction that there is a limit on the number of self-loop transitions traversed consecutively. In general, the majority of tests defined for an IUT are classified into two categories: valid and inopportune tests <ref> [5, 14] </ref>. Valid tests correspond to the "normal" or expected behavior of a protocol entity. Inopportune tests have inputs that are semantically and syntactically correct, but arrive at unexpected states (or, out of sequence).
Reference: [15] <author> J. K. Lenstra and A. H. G. R. Kan, </author> <title> "On general routing problems," </title> <journal> Networks, </journal> <volume> vol. 6, </volume> <pages> pp. 273-280, </pages> <year> 1976. </year>
Reference-contexts: Optimizing the cost of a test sequence for the inopportune transition testing part of the second suite is NP-hard. A heuristic solution based on the Rural Postman Problem <ref> [15] </ref> is introduced. This paper is organized as follows. Section 2 presents the motivation behind the optimization problem formulated in the paper. The basics of test sequence generation and the practical restrictions due to the timers are addressed in Section 3. <p> The so-called Chinese Postman Problem is defined as finding a minimum-cost tour of G that traverses every edge at least once [21]. The Rural (Chinese) Postman Problem is finding a (minimum-cost) tour for a subset of edges in G <ref> [15] </ref>. During conformance testing of a protocol implementation, the IUT is viewed as a black box, where only the inputs applied to the IUT and the outputs generated by the IUT can be controlled and observed, respectively. <p> We show [26] by reduction from the Rural Chi-nese Postman Problem (RCPP), which is known to be NP-complete for the general case <ref> [15] </ref>, that the above defined problem is NP-hard.
Reference: [16] <institution> Military Standard Interoperability Standard for Digital Message Device Subsystems (MIL-STD 188-220A), 27Jul95, </institution> <year> 1995. </year>
Reference-contexts: The problem of limiting the number of consecutive self-loop traversals in a test sequence becomes an important issue for protocols that have many self-loops such as MIL-STD 188-220A <ref> [16] </ref> and LAPD [17], and for protocols with self-loop state verification sequences such as ISDN Q.931 for supplementary voice services (uses status feature which is a self-loop) [18] and LAPD (uses UIO sequences) [17]. <p> The minimum-cost test sequence generation for testing the inopportune transitions separately is shown to be NP-hard. As future work, this method will be implemented as a software tool and be applied to MIL-STD 188-220A <ref> [16] </ref>.
Reference: [17] <author> M. U. Uyar and M. H. Sherif, </author> <title> "Protocol modeling for conformance testing: Case study for the ISDN LAPD protocol," </title> <journal> AT&T Technical Journal, </journal> <volume> vol. 69, </volume> <month> Jan </month> <year> 1990. </year>
Reference-contexts: The problem of limiting the number of consecutive self-loop traversals in a test sequence becomes an important issue for protocols that have many self-loops such as MIL-STD 188-220A [16] and LAPD <ref> [17] </ref>, and for protocols with self-loop state verification sequences such as ISDN Q.931 for supplementary voice services (uses status feature which is a self-loop) [18] and LAPD (uses UIO sequences) [17]. <p> a test sequence becomes an important issue for protocols that have many self-loops such as MIL-STD 188-220A [16] and LAPD <ref> [17] </ref>, and for protocols with self-loop state verification sequences such as ISDN Q.931 for supplementary voice services (uses status feature which is a self-loop) [18] and LAPD (uses UIO sequences) [17]. For example, in ISDN Q.931 protocol (Basic voice services, for the user side), each state has an average of 9 inopportune transitions, which requires the traversal of 18 self-loop transitions during testing.
Reference: [18] <institution> AT&T 5E4 Generic Program, AT&T 5ESS T M Switch - ISDN Basic Rate Interface Specification, </institution> <month> Sep </month> <year> 1985. </year>
Reference-contexts: number of consecutive self-loop traversals in a test sequence becomes an important issue for protocols that have many self-loops such as MIL-STD 188-220A [16] and LAPD [17], and for protocols with self-loop state verification sequences such as ISDN Q.931 for supplementary voice services (uses status feature which is a self-loop) <ref> [18] </ref> and LAPD (uses UIO sequences) [17]. For example, in ISDN Q.931 protocol (Basic voice services, for the user side), each state has an average of 9 inopportune transitions, which requires the traversal of 18 self-loop transitions during testing.
Reference: [19] <author> M. A. Fecko, P. D. Amer, A. S. Sethi, M. U. Uyar, T. Dzik, R. Menell, and M. McMahon, </author> <title> "Formal design and testing of MIL-STD 188-220A based on Estelle," </title> <booktitle> in Proc. MILCOM'97: IEEE Military Communications Conf., </booktitle> <address> (Monterey, California), </address> <month> Nov </month> <year> 1997. </year>
Reference-contexts: The tests are derived from an EFSM model of the protocol. An EFSM modeling the Topology Update (TU) functionality of the Intranet Layer is shown in Figure 1 <ref> [19] </ref>. There are 5 states and 86 transitions in the EFSM. The four active states are defined based on the status of two timers: Topol 2 ogy Update and Topology Update Request. The former is started after a topology update message is sent by a station.
Reference: [20] <author> Y. N. Shen, F. Lombardi, and A. T. Dahbura, </author> <title> "Protocol conformance testing using multiple UIO sequences," </title> <journal> IEEE Trans. on Communications, </journal> <volume> vol. 40, </volume> <pages> pp. 1282-1287, </pages> <month> Aug </month> <year> 1992. </year>
Reference-contexts: If the constraint is not considered, all valid implementations will fail the test sequence, which is not what the tester desires. 3 Preliminaries and practical re strictions on the test sequences A protocol can be specified as a deterministic FSM <ref> [13, 20] </ref>, which can be represented by a directed graph G = (V; E). The set V = fv 1 ; : : : ; v n g of vertices correspond to the set of states S of the FSM. <p> A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [21] <author> M. U. Uyar and A. T. Dahbura, </author> <title> "Optimal test sequence generation for protocols: the Chinese postman algorithm applied to Q.931," </title> <booktitle> in Proc. IEEE GLOBECOM, </booktitle> <pages> pp. 68-72, </pages> <month> Dec </month> <year> 1986. </year>
Reference-contexts: An Euler tour is a tour that contains every edge of G exactly once. The so-called Chinese Postman Problem is defined as finding a minimum-cost tour of G that traverses every edge at least once <ref> [21] </ref>. The Rural (Chinese) Postman Problem is finding a (minimum-cost) tour for a subset of edges in G [15]. <p> ver and d min self for vertices v 0 ; v 1 ; v 2 ; and v 3 are as fol lows: 6 Vertex UIO max self d state ver d min self v 0 e0 3 1 2 v 2 e6,e7 3 2 4 The Chinese postman method <ref> [21] </ref> when applied to the graph without self-loop repetition constraint results in the test sequence e0; e0; e1; e2; e2; e2; e10; e9; e9; e9; e12; e0; e12; e1; e4; e7; e6; e7; e8; e6; e7; e5; e0 (16) containing 34 edges (the edges used for the purpose of state verification
Reference: [22] <author> H. Ural and Y. Lu, </author> <title> "An improved method for test sequence generation," </title> <type> Tech. Rep. TR-90-12, </type> <institution> Dept. of CSI, University of Ottawa, </institution> <month> Mar </month> <year> 1990. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT.
Reference: [23] <author> M. S. Chen, Y. Choi, and A. Kershenbaum, </author> <title> "Minimal length test sequences for protocol conformance," </title> <booktitle> in Proc. First Network Management and Control Workshop, </booktitle> <address> (New York, NY), </address> <year> 1989. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The final test sequence is longer than the absolute minimum length due 8 to the additional constraints imposed on the opti-mization problem by the timers. The test length can be further shortened by the segment overlapping techniques of Chen et al. <ref> [23, 24] </ref>, Yang and Ural [25], and Miller and Paul [6, 7]. The solution presented in this paper is applicable to test sequences that use various state identification methods such as UIO sequences, distinguishing sequences, and characterizing sequences.
Reference: [24] <author> M. S. Chen, Y. Choi, and A. Kershenbaum, </author> <title> "Approaches utilizing segment overlap to minimize test sequences," </title> <booktitle> in Proc. PSTV X, </booktitle> <pages> pp. 85-98, </pages> <year> 1990. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The final test sequence is longer than the absolute minimum length due 8 to the additional constraints imposed on the opti-mization problem by the timers. The test length can be further shortened by the segment overlapping techniques of Chen et al. <ref> [23, 24] </ref>, Yang and Ural [25], and Miller and Paul [6, 7]. The solution presented in this paper is applicable to test sequences that use various state identification methods such as UIO sequences, distinguishing sequences, and characterizing sequences.
Reference: [25] <author> B. Yang and H. Ural, </author> <title> "Protocol conformance test generation using multiple UIO sequences with overlapping," </title> <booktitle> in Proc. ACM SIGCOMM'90, </booktitle> <pages> pp. 118-125, </pages> <year> 1990. </year>
Reference-contexts: A UIO sequence of a state s i is a sequence of edges starting at v i such that the output sequence generated by these edges is unique for v i . The existing methods for conformance test generation <ref> [1, 6, 7, 11, 12, 13, 20, 22, 23, 24, 25] </ref> emphasize optimizing the test sequence length and its cost, without considering any restrictions on the order in which the tests can be applied to an IUT. <p> The final test sequence is longer than the absolute minimum length due 8 to the additional constraints imposed on the opti-mization problem by the timers. The test length can be further shortened by the segment overlapping techniques of Chen et al. [23, 24], Yang and Ural <ref> [25] </ref>, and Miller and Paul [6, 7]. The solution presented in this paper is applicable to test sequences that use various state identification methods such as UIO sequences, distinguishing sequences, and characterizing sequences.
Reference: [26] <author> M. U. Uyar, M. A. Fecko, A. S. Sethi, and P. D. Amer, </author> <title> "Minimum-cost solutions for testing protocols with timers," </title> <type> Tech. Rep. </type> <institution> TR-97-17, CIS Dept., University of Delaware, Newark, DE, </institution> <year> 1997. </year>
Reference-contexts: Testing a self-loop transition involves traversing the self-loop transition followed by applying the state verification self-loop sequence, which contains d state ver (v i ) transitions. Due to space limitations, we are unable to include the detailed derivation of d min self (v i ). In <ref> [26] </ref>, we prove that the minimum number of times vertex v i must be visited in a test sequence is as follows: d min self (v i ) def d in (v i ) if d self (v i ) (d in (v i ) fl 1 (v i )) (v <p> Let d min inop (v i ) &gt; 0 be the minimum number of times that the test sequence must visit v i 2 V self (see <ref> [26] </ref> for derivation) . <p> We show <ref> [26] </ref> by reduction from the Rural Chi-nese Postman Problem (RCPP), which is known to be NP-complete for the general case [15], that the above defined problem is NP-hard.
Reference: [27] <author> L. R. Ford and D. R. Fulkerson, </author> <title> Flows in Networks. </title> <publisher> Princeton University Press, </publisher> <year> 1962. </year>
Reference-contexts: ; v fl fi (s; v fl i ) i ; t) = f (v fl The function f satisfying the above conditions ex ists iff X i 2V fl fs;tg i ) = v fl fi (v fl which holds true for capacity assignments defined by (8) through (11) <ref> [27] </ref>. Aho et al. show that the maximum-flow minimum-cost function on a strongly-connected graph define its optimal symmetric augmentation. Let us first prove that the symmetric augmentation of G 0 5 0 0 (part (b)) and to v fl (1) fl (2) i in G fl (part (c)).
Reference: [28] <author> M. U. Uyar, M. A. Fecko, A. S. Sethi, and P. D. Amer, </author> <title> "Test generation for protocols with timing constraints," </title> <type> Tech. Rep. </type> <institution> TR-98-07, CIS Dept., University of Delaware, Newark, DE, </institution> <year> 1997. </year> <note> (Submitted for publication). 9 </note>
Reference-contexts: A subsequence of uio (v j k1 ; v j k ) is a path of non-self-loop edges starting at v j k1 and ending at v j k . Based on this definition, there are three possible forms that a UIO sequence can have <ref> [28] </ref>. The optimization method presented in this paper was generalized in our further work to account for different forms of UIO sequences. The results are available in [28]. 6 Testing of inopportune transi tions separately We now consider the case where the valid and inopportune transitions are to be tested separately. <p> Based on this definition, there are three possible forms that a UIO sequence can have <ref> [28] </ref>. The optimization method presented in this paper was generalized in our further work to account for different forms of UIO sequences. The results are available in [28]. 6 Testing of inopportune transi tions separately We now consider the case where the valid and inopportune transitions are to be tested separately. The solution presented in the previous section is directly applicable to the valid transitions of this test suite.
References-found: 28

