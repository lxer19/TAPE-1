URL: ftp://ftp.cs.umd.edu/pub/papers/papers/3361.1/3361.1.ps.Z
Refering-URL: http://www.cs.umd.edu/TRs/TR.html
Root-URL: 
Title: Z-Iteration: Efficient Estimation of Instantaneous Measures in Time-Dependent Multi-Class Systems  
Author: Ibrahim Matta, A. Udaya Shankar 
Note: Preliminary version appeared in ACM SIGMETRICS/PERFORMANCE '95.  
Date: July 1995  
Address: College Park, Maryland 20742  
Affiliation: Institute for Advanced Computer Studies and Department of Computer Science University of Maryland  
Pubnum: CS-TR-3361.1 UMIACS-TR-94-116.1  
Abstract: Multiple-class multiple-resource (MCMR) systems, where each class of customers requires a particular set of resources, are common. These systems are often analyzed under steady-state conditions. We describe a simple numerical-analytical method, referred to as Z-iteration, to estimate instantaneous (and steady-state) probability measures of time-dependent systems. The key idea is to approximate the relationship between certain instantaneous measures by the relationship between their steady-state counterparts, and use this approximation to solve dynamic flow equations. We show the generality of the Z-iteration by applying it to an integrated communication network, a parallel database server, and a distributed batch system. Validations against exact numerical solutions and discrete-event simulations show the accuracy and computational advantages of the Z-iteration. fl This work is supported in part by ARPA and Philips Labs under contract DASG60-92-0055 to Department of Computer Science at the University of Maryland, and by NSF grant NCR 89-04590. The views, opinions, and/or findings contained in this report are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of ARPA, PL, NSF, or the U.S. Government. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J-C. Bolot and A.U. Shankar. </author> <title> Analysis of a Fluid Approximation to Flow Control Dynamics. </title> <booktitle> In Proc. IEEE INFOCOM '92, </booktitle> <address> Florence, Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Such models involve partial differential equations and are usually intractable. A third method is that of fluid models, which utilize average quantities only <ref> [1] </ref>. Such models involve ordinary differential equations and are usually tractable.
Reference: [2] <author> H. Chen and A. Mandelbaum. </author> <title> Discrete Flow Networks: Diffusion Approximations and Bottlenecks. </title> <journal> Annals of Probability, </journal> <volume> 19(4) </volume> <pages> 1463-1519, </pages> <month> October </month> <year> 1991. </year>
Reference-contexts: One such method is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [28], and computationally expensive to solve numerically [27]; A second method is that of diffusion models, which utilize averages and variances <ref> [2, 24] </ref>. Such models involve partial differential equations and are usually intractable. A third method is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable.
Reference: [3] <author> S-P. Chung and K. Ross. </author> <title> Reduced Load Approximations for Multirate Loss Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 41(8) </volume> <pages> 1222-1231, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> There is no simple way to determine whether there exists a solution to such a nonlinear system. Even if the physical nature of the system suggests that a solution exists, the iteration may oscillate between different solutions, which can alert one to the instability of the system <ref> [3] </ref>. Obviously, such oscillations can also occur under transient conditions arising, for example, from dynamic control. Observe that it is easy to realize parallel implementations of our method by mapping the computations for different resources onto different processors, and we would expect almost linear speedup. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [4] <author> D. DeWitt and J. Gray. </author> <title> Parallel Database Systems: The Future of High Performance Database Systems. </title> <journal> CACM, </journal> <volume> 35(6) </volume> <pages> 85-98, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The multi-link network is used by several multi-hop connections representing main traffic, and several one-hop connections representing cross-traffic. 5 Application: Parallel Database Server Consider a system of multiple disks on which data is partitioned according to some scheme, e.g. round-robin, range partitioning, etc. <ref> [4] </ref>. Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. (See Figure 9.) This parallelism typically leads to reduction in data access time [4, 14]. <p> Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. (See Figure 9.) This parallelism typically leads to reduction in data access time <ref> [4, 14] </ref>. The collection of disks needed by a query is defined by the query's class. We assume an arriving query requires one unit of space in the queue of each disk it needs to access. Other classes require data retrieval from only one disk. <p> blocking, we have 1 T r N r 1 + c 0 2C r N r Therefore, in the transient regime, we have T r N r 1 + c 0 2C r N r The above model can be used to study various data partitioning schemes for high-performance indexing <ref> [4] </ref>. Systems with single-server resources are validated (against discrete-event simulations) in Section 8. 6 Application: Distributed Batch System Consider a distributed batch system such as Condor [20]. Batch jobs (user programs) are submitted to a central manager (CM).
Reference: [5] <author> Z. Dziong and J. Roberts. </author> <title> Congestion Probabilities in a Circuit-Switched Integrated Services Network. Performance Evaluation, </title> <booktitle> 7 </booktitle> <pages> 267-284, </pages> <year> 1987. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> M=M=50=50 system. N (0) = 0; = 0:01; = 0:5 for t 2 <ref> [0; 5] </ref>, = 1 for t 2 (5; 10], and = 0:1 for t 2 (10; 15]. M=M=50=50 system. N (0) = 0; = 0:0001; = 1:5 for t 2 [0; 5] [ (10; 15] and = 1 for t 2 (5; 10]. 6 2.3 M=M=1=50 Consider an M=M=1=50 system with <p> M=M=50=50 system. N (0) = 0; = 0:01; = 0:5 for t 2 <ref> [0; 5] </ref>, = 1 for t 2 (5; 10], and = 0:1 for t 2 (10; 15]. M=M=50=50 system. N (0) = 0; = 0:0001; = 1:5 for t 2 [0; 5] [ (10; 15] and = 1 for t 2 (5; 10]. 6 2.3 M=M=1=50 Consider an M=M=1=50 system with constant and varying . Figure 5 shows the average number of customers in the system obtained by the Z-iteration and the numerical solution of the C-K differential equations. <p> Again, this is a significant savings in computation. Again, NDSolve often encountered numerical instability with the C-K equations, but not with our solution method. required only around 64 seconds. M=M=1=50 system. N (0) = 0; = 1; = 0:4 for t 2 <ref> [0; 5] </ref> [ (10; 20], and = 1:2 for t 2 (5; 10]. M=M=1=50 system. N (0) = 0; = 0:01; = 1:4 for t 2 [0; 5] [ (10; 20] and = 0:8 for t 2 (5; 10]. 7 3 The Z-Iteration for Multiple-Class Muliple-Resource Systems In this section, we <p> M=M=1=50 system. N (0) = 0; = 1; = 0:4 for t 2 <ref> [0; 5] </ref> [ (10; 20], and = 1:2 for t 2 (5; 10]. M=M=1=50 system. N (0) = 0; = 0:01; = 1:4 for t 2 [0; 5] [ (10; 20] and = 0:8 for t 2 (5; 10]. 7 3 The Z-Iteration for Multiple-Class Muliple-Resource Systems In this section, we present our solution method to the general MCMR model introduced in Section 1. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [6] <author> J. Filipiak. </author> <title> Modeling and Control of Dynamic Flows in Communication Networks. </title> <address> New York: </address> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: This reduces the complexity of the problem, but a straightforward numerical solution of individual MCSR systems is still too expensive. To solve an MCSR system, we use a standard flow equation (e.g. <ref> [6] </ref>) that expresses the time evolution of the instantaneous average number of customers N r c (t) by a differential equation involving the instantaneous arrival and service rates (which are known), and the instantaneous blocking probabilities B r c (t) and utilizations U r c (t). <p> These two steady-state expressions are available for a variety of MCSR systems, including self-service systems where the customer is also the server, and single- or multiple-server queueing systems <ref> [18, 6] </ref>. We point out that the expressions do not have to be closed form and can be implicit. The rest of the paper is organized as follows. Section 2 describes the Z-iteration for single-class single-resource systems, and validates against exact solutions for M=M=K=K and M=M=1=K systems. <p> To illustrate the accuracy of approximating the instantaneous relationship between B (t) and N (t) by the steady-state relationship between B and N , we consider the evolution for = = 1 and t 2 <ref> [0; 6] </ref> starting with an empty system at t = 0. Let B exact (t) and N exact (t) denote the exact solutions; they are derived in the Appendix. <p> Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique [17, 9]; the dynamic flow technique <ref> [7, 6, 27, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]).
Reference: [7] <author> F. Le Gall and J. Bernussou. </author> <title> An Analytical Formulation for Grade of Service Determination in Telephone Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-31(3):420-424, </volume> <month> March </month> <year> 1983. </year>
Reference-contexts: Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique [17, 9]; the dynamic flow technique <ref> [7, 6, 27, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]). <p> To obtain the instantaneous admission rates, we adapt steady-state queueing formulas to yield the instantaneous blocking probability of each class in terms of the instantaneous average numbers of customers waiting or in service. This technique was originally introduced in <ref> [7] </ref>, where it was used to obtain steady-state blocking probability and carried load for a specific call routing and network topology. Reference [7] considered a network of source nodes, destination nodes, and intermediate nodes, with a link from every source node to every intermediate node, and a link from every intermediate <p> This technique was originally introduced in <ref> [7] </ref>, where it was used to obtain steady-state blocking probability and carried load for a specific call routing and network topology. Reference [7] considered a network of source nodes, destination nodes, and intermediate nodes, with a link from every source node to every intermediate node, and a link from every intermediate node to every destination node. Each link can carry a fixed total number of calls. <p> The blocking probability of a link is given by the Erlang-B formula expressed in terms of combined offered load. The system is solved for steady-state average number of calls on each link by equating the call departure rate to the call admission rate. Our model extends the one in <ref> [7] </ref> to any system where the steady-state blocking probabilities can be expressed in terms of offered loads. This allows us to consider general multi-class systems, where, for example, each class has different resource and service needs, and resources have different scheduling disciplines.
Reference: [8] <author> M.R. </author> <title> Garzia and C.M. Lockhart. Nonhierarchical Communications Networks: An Application of Compartmental Modeling. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 37 </volume> <pages> 555-564, </pages> <month> June </month> <year> 1989. </year> <month> 21 </month>
Reference-contexts: This is not, in general, true since the composite traffic contains blocked batch jobs returned immediately at the next time step to the system for retry. This assumption is less restrictive if blocked batch jobs are returned to the system after waiting an independent random period <ref> [23, 8] </ref>. This waiting effect can be easily incorporated into the above model. <p> Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique [17, 9]; the dynamic flow technique <ref> [7, 6, 27, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]).
Reference: [9] <author> A. Girard. </author> <title> Routing and Dimensioning in Circuit-Switched Networks. </title> <publisher> Addison-Wesley Publishing Com--pany, </publisher> <year> 1990. </year>
Reference-contexts: Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique <ref> [17, 9] </ref>; the dynamic flow technique [7, 6, 27, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]).
Reference: [10] <author> A. Girard and M. Bell. </author> <title> Blocking Evaluation for Networks with Residual Capacity Adaptive Routing. </title> <journal> IEEE Transactions on Communications, </journal> <volume> COM-37:1372-1380, </volume> <year> 1989. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable.
Reference: [11] <author> A. Greenberg and P. Wright. </author> <title> Design and Analysis of Master/Slave Multiprocessors. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 40(8) </volume> <pages> 963-976, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [12] <author> R. Guerin, H. Ahmadi, and M. Naghshineh. </author> <title> Equivalent Capacity and its Application to Bandwidth Allocation in High-Speed Networks. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> SAC-9(7):968-981, </volume> <month> September </month> <year> 1991. </year>
Reference-contexts: This reservation amount can be thought of as either the peak transmission rate of the connection or its "effective bandwidth" <ref> [12] </ref> varying between its peak and average transmission rates. The set R c of a class-c connection would thus contain the links along the route of class c. The instantaneous arrival rate of class-c connections of service s, c (t), is a function of s and the routing algorithm.
Reference: [13] <author> S. Jordan and P. Varaiya. </author> <title> Throughput in Multiple Service, Multiple Resource Communication Networks. </title> <journal> IEEE Transactions on Communications, </journal> <volume> 39(8) </volume> <pages> 1216-1222, </pages> <month> August </month> <year> 1991. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [14] <author> I. Kamel and C. Faloutsos. </author> <title> Parallel R-Trees. </title> <booktitle> In Proc. ACM SIGMOD, </booktitle> <pages> pages 195-204, </pages> <address> San Diego, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Each disk has a finite first-come-first-served (FCFS) queue where queries of different classes wait to be served. A query requests data retrieval from one or more disks in parallel. (See Figure 9.) This parallelism typically leads to reduction in data access time <ref> [4, 14] </ref>. The collection of disks needed by a query is defined by the query's class. We assume an arriving query requires one unit of space in the queue of each disk it needs to access. Other classes require data retrieval from only one disk.
Reference: [15] <author> F.P. Kelly. </author> <title> Blocking Probabilities in Large Circuit-Switched Networks. </title> <journal> Adv. Appl. Prob., </journal> <volume> 18 </volume> <pages> 473-505, </pages> <year> 1986. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> M=M=50=50 system. N (0) = 0; = 0:01; = 0:5 for t 2 [0; 5], = 1 for t 2 (5; 10], and = 0:1 for t 2 (10; 15]. M=M=50=50 system. N (0) = 0; = 0:0001; = 1:5 for t 2 [0; 5] <ref> [ (10; 15] </ref> and = 1 for t 2 (5; 10]. 6 2.3 M=M=1=50 Consider an M=M=1=50 system with constant and varying . Figure 5 shows the average number of customers in the system obtained by the Z-iteration and the numerical solution of the C-K differential equations. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system. <p> The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system. We use the well-known decomposition technique <ref> [17, 15] </ref> to approximate the system as a collection of MCSR systems. For each MCSR system, we describe the evolution of the instantaneous average number of customers of each class by relating its instantaneous admission rate to its instantaneous departure rate.
Reference: [16] <author> D. Kincaid and W. </author> <title> Cheney. Numerical Analysis: Mathematics of Scientific Computing. </title> <publisher> Brooks/Cole Publishing Company, </publisher> <year> 1991. </year>
Reference-contexts: Figure 2 shows a graphical example of the mapping F . It illustrates that F is a contractive mapping of [0; 1) into [0; 1) and hence it converges to a unique fixed point <ref> [16] </ref>. 5 2.2 M=M=50=50 Consider an M=M=50=50 system with constant and varying . Figure 3 shows the average number of customers in the system obtained by the Z-iteration and by numerical solution of the C-K differential equations. Both solutions practically coincide illustrating the accuracy of our method. <p> However, it can be shown in simple situations that the approximation is accurate when compared to the exact instantaneous solution, and that the iteration is a contractive mapping of [0; 1) into [0; 1) and hence it converges to a unique fixed point <ref> [16] </ref> (cf. Section 2). Furthermore, our experience indicates that our method yields accurate performance measures when compared to discrete-event simulation and that the iteration converges quickly (see Sections 7 and 8). <p> It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique [17, 9]; the dynamic flow technique [7, 6, 27, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations <ref> [16] </ref>. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [17] <author> L. Kleinrock. </author> <title> Communication Nets: Stochastic Message Flow and Delay. </title> <address> New York: McGraw Hill, </address> <year> 1964. </year>
Reference-contexts: Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique <ref> [17, 9] </ref>; the dynamic flow technique [7, 6, 27, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]). <p> The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system. We use the well-known decomposition technique <ref> [17, 15] </ref> to approximate the system as a collection of MCSR systems. For each MCSR system, we describe the evolution of the instantaneous average number of customers of each class by relating its instantaneous admission rate to its instantaneous departure rate.
Reference: [18] <author> L. Kleinrock. </author> <title> Queueing Systems, volume I and II. </title> <address> New York: </address> <publisher> Wiley, </publisher> <year> 1976. </year>
Reference-contexts: These two steady-state expressions are available for a variety of MCSR systems, including self-service systems where the customer is also the server, and single- or multiple-server queueing systems <ref> [18, 6] </ref>. We point out that the expressions do not have to be closed form and can be implicit. The rest of the paper is organized as follows. Section 2 describes the Z-iteration for single-class single-resource systems, and validates against exact solutions for M=M=K=K and M=M=1=K systems. <p> We obtain B in terms of N as the fixed-point of equations (2) and (3), where N is fixed and U is replaced by the expression in (1). 3 For the self-service M=M=K=K system, the equations corresponding to (1, 2, 3) are <ref> [18] </ref>: U = N K =K! j=0 j =j! N where = =. Note that the first equation, which was obtained assuming nonblocking (K = 1) happens to be also valid with blocking. For the single-server M=M=1=K system, the equations corresponding to (1, 2, 3) are [18]: U = N + <p> (1, 2, 3) are <ref> [18] </ref>: U = N K =K! j=0 j =j! N where = =. Note that the first equation, which was obtained assuming nonblocking (K = 1) happens to be also valid with blocking. For the single-server M=M=1=K system, the equations corresponding to (1, 2, 3) are [18]: U = N + 1 K j=0 j N 1 The first equation follows from U = and N = =(1 )). Note that it is not valid for the blocking case. <p> Let each admitted customer be served by one of the K servers for an average duration of 1= r c . Then S r c is the Erlang-B formula, i.e. S r c = E ( c ; K) = r c P K r c <ref> [18] </ref>: We obtain the steady-state expression defining c r c in terms of the N r c 0 and B r c as follows. Equat ing the rates of departure and admission of class-c customers at resource r, we have r c U r c [1 B r c ]. <p> Assuming steady-state and no blocking, we can treat the M=M=1=r.max system of r as an M=M=1=1 system. At steady-state, we know that <ref> [18] </ref> N r c P (14) From this and T r c (:) = c r , which holds assuming no blocking, we have 1 T r N r 1 + c 0 2C r N r Therefore, in the transient regime, we have T r N r 1 + c <p> Figures 22 and 23 show the instantaneous total throughput and blocking probability, respectively. Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques <ref> [18] </ref>; the resource decomposition technique [17, 9]; the dynamic flow technique [7, 6, 27, 8]; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]).
Reference: [19] <author> S. Leutenegger and X-H. Sun. </author> <title> Distributed Computing Feasibility in a Non-Dedicated Homogeneous Distributed System. </title> <booktitle> In Proc. Supercomputing '93, </booktitle> <month> November </month> <year> 1993. </year>
Reference-contexts: Otherwise, it is admitted for processing with mean processing time of 1= r c (t). This processing time includes the time during which the batch job is suspended due to owner processes <ref> [19] </ref>.
Reference: [20] <author> M. Litzkow, M. Livny, and M. </author> <title> Mutka. Condor A Hunter of Idle Workstations. </title> <booktitle> In Proc. 8th International Conference on Distributed Computing Systems, </booktitle> <address> San Jose, CA, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Again, this is a significant savings in computation. Again, NDSolve often encountered numerical instability with the C-K equations, but not with our solution method. required only around 64 seconds. M=M=1=50 system. N (0) = 0; = 1; = 0:4 for t 2 [0; 5] <ref> [ (10; 20] </ref>, and = 1:2 for t 2 (5; 10]. M=M=1=50 system. N (0) = 0; = 0:01; = 1:4 for t 2 [0; 5] [ (10; 20] and = 0:8 for t 2 (5; 10]. 7 3 The Z-Iteration for Multiple-Class Muliple-Resource Systems In this section, we present our <p> M=M=1=50 system. N (0) = 0; = 1; = 0:4 for t 2 [0; 5] <ref> [ (10; 20] </ref>, and = 1:2 for t 2 (5; 10]. M=M=1=50 system. N (0) = 0; = 0:01; = 1:4 for t 2 [0; 5] [ (10; 20] and = 0:8 for t 2 (5; 10]. 7 3 The Z-Iteration for Multiple-Class Muliple-Resource Systems In this section, we present our solution method to the general MCMR model introduced in Section 1. <p> Systems with single-server resources are validated (against discrete-event simulations) in Section 8. 6 Application: Distributed Batch System Consider a distributed batch system such as Condor <ref> [20] </ref>. Batch jobs (user programs) are submitted to a central manager (CM). Assume batch jobs of type i arrive to the CM according to a Poisson process of rate i .
Reference: [21] <author> G. Louth, M. Mitzenmacher, and F.P. Kelly. </author> <title> Computational Complexity of Loss Networks. </title> <journal> Theoretical Computer Science, </journal> <volume> 125 </volume> <pages> 45-59, </pages> <year> 1994. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [22] <author> W. Lovegrove, J. Hammond, and D. Tipper. </author> <title> Simulation Methods for Studying Nonstationary Behavior of Computer Networks. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> 8(9) </volume> <pages> 1696-1708, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Then, the mean value of this measure at particular time instant t k is estimated as P N i=1 X (i) (t k )=N , where N is the total number of replications. The larger N is, the more accurate the simulation estimates are <ref> [22] </ref>. In our simulations, the performance measures are computed for t = 1; 2; 3; . The measures considered are precisely defined as they are introduced below. In all experiments, we start with empty systems.
Reference: [23] <author> D. Mitra and P. Weinberger. </author> <title> Probabilistic Models of Database Locking: Solutions, Computational Algorithms, and Asymptotics. </title> <journal> J. ACM, </journal> <volume> 31(4) </volume> <pages> 855-878, </pages> <month> October </month> <year> 1984. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> This is not, in general, true since the composite traffic contains blocked batch jobs returned immediately at the next time step to the system for retry. This assumption is less restrictive if blocked batch jobs are returned to the system after waiting an independent random period <ref> [23, 8] </ref>. This waiting effect can be easily incorporated into the above model. <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [24] <author> A. Mukherjee and J.C. Strikwerda. </author> <title> Analysis of Dynamic Congestion Control Protocols: A Fokker-Plank Approach. </title> <booktitle> In Proc. ACM SIGCOMM '91, </booktitle> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: One such method is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [28], and computationally expensive to solve numerically [27]; A second method is that of diffusion models, which utilize averages and variances <ref> [2, 24] </ref>. Such models involve partial differential equations and are usually intractable. A third method is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable.
Reference: [25] <author> J. Roberts. </author> <title> A Service System with Heterogeneous User Requirements Application to Multi-Services Telecommunications Systems. </title> <booktitle> In Performance of Data Communications Systems and Their Applications, </booktitle> <pages> pages 423-431. </pages> <editor> G. Pujolle (Editor). </editor> <publisher> North-Holland Publishing Company, </publisher> <year> 1981. </year>
Reference-contexts: Because the class of a customer can be assigned when the customer arrives, it is straightforward to model state-dependent control policies such as assigning jobs to processors with the least workload. MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11, 10] </ref>). Obtaining instantaneous measures for general time-dependent MCMR systems is 1 another matter. Analytical solutions would seem to be intractable. <p> Let the state of r indicate the amount of bandwidth allocated. Thus, F r = f0; 1; ; r.maxg. Let P r (j) denote the steady-state probability of r being in state j. Then the P r (:) satisfy the following recurrence relation <ref> [25] </ref>: j P r (j) = c 0 2C r r c 0 :r:req P r (j c 0 :r:req) where P r.max The steady-state blocking probability for class-c connections at r, B r c , is given by B r r.max X j=r.maxc.r.req+1 P r (j) This steady-state solution, which <p> MCMR systems have often been analyzed under steady-state conditions (e.g. <ref> [13, 15, 21, 5, 25, 3, 23, 11] </ref>). The Z-iteration differs from iterations commonly used in steady-state analysis, which only solve for steady-state measures. Our model yields the time-varying behavior of a general MCMR system.
Reference: [26] <author> L. Takacs. </author> <title> Introduction to the Theory of Queues, </title> <address> pages 174-187. </address> <publisher> Greenwood Press, </publisher> <address> Westport, Con-necticut, </address> <year> 1961. </year>
Reference-contexts: Such models involve ordinary differential equations and are usually tractable. However, dynamic flow models appear more accurate since they include detailed probabilistic descriptions manifested in our model in the computation of both the instantaneous blocking probabilities and the instantaneous utilizations. 20 A Derivations for M=M=2=2 From <ref> [26] </ref>, we have the following exact instantaneous solution. Consider the M=M=2=2 system initially empty with customer arrival rate (t) = and service rate (t) = for all t 0.
Reference: [27] <editor> D. Tipper and M.K. Sundareshan. </editor> <title> Numerical Methods for Modeling Computer Networks Under Non stationary Conditions. </title> <journal> IEEE J. Select. Areas Commun., </journal> <volume> 8(9) </volume> <pages> 1682-1695, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: We will use the notation introduced in the Introduction but 2 without any resource superscript r or class subscript c. In general, obtaining the instantaneous probability measures is analytically intractable [28] and numerically very expensive due usually to the large state space <ref> [27] </ref>. <p> Our method accurately reproduces the behavior obtained by simulation. 9 Conclusions The Z-iteration computes instantaneous probability measures of general time-dependent MCMR systems. It integrates techniques from several areas, including standard queueing theory techniques [18]; the resource decomposition technique [17, 9]; the dynamic flow technique <ref> [7, 6, 27, 8] </ref>; and the technique of repeated substitutions used in numerical analysis to solve nonlinear equations [16]. MCMR systems have often been analyzed under steady-state conditions (e.g. [13, 15, 21, 5, 25, 3, 23, 11]). <p> To obtain the instantaneous departure rates, we again adapt steady-state queueing formulas to yield the instantaneous utilization of each class in terms of the instantaneous average numbers of 19 customers waiting or in service. The same technique was used in <ref> [27] </ref>, where feedforward queueing networks were considered. Each service center is an M=M=1 infinite FCFS queue with the same average service time for all classes. The routing of each class is a time-dependent Bernoulli process. <p> Our method has advantages over other methods that might be used to analyze transient behaviors. One such method is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically [28], and computationally expensive to solve numerically <ref> [27] </ref>; A second method is that of diffusion models, which utilize averages and variances [2, 24]. Such models involve partial differential equations and are usually intractable. A third method is that of fluid models, which utilize average quantities only [1]. Such models involve ordinary differential equations and are usually tractable.
Reference: [28] <author> S. Tripathi and A. Duda. </author> <title> Time-Dependent Analysis of Queueing Systems. </title> <journal> INFOR, </journal> <volume> 24(3) </volume> <pages> 199-219, </pages> <year> 1986. </year>
Reference-contexts: We will use the notation introduced in the Introduction but 2 without any resource superscript r or class subscript c. In general, obtaining the instantaneous probability measures is analytically intractable <ref> [28] </ref> and numerically very expensive due usually to the large state space [27]. <p> Our method has advantages over other methods that might be used to analyze transient behaviors. One such method is that of time-dependent queueing models, which involve probability distributions for all events. However, such models are extremely difficult to solve analytically <ref> [28] </ref>, and computationally expensive to solve numerically [27]; A second method is that of diffusion models, which utilize averages and variances [2, 24]. Such models involve partial differential equations and are usually intractable. A third method is that of fluid models, which utilize average quantities only [1].
Reference: [29] <author> S. Wolfram. </author> <title> Mathematica: A System for Doing Mathematics by Computer. </title> <publisher> Addison-Wesley, </publisher> <year> 1991. </year> <type> 22 23 24 arrivals. 25 arrivals. 26 27 </type>
Reference-contexts: Figure 3 shows the average number of customers in the system obtained by the Z-iteration and by numerical solution of the C-K differential equations. Both solutions practically coincide illustrating the accuracy of our method. Both were both coded in Mathematica using the differential equation solver NDSolve <ref> [29] </ref>. On a DECal-pha 3000 workstation, the C-K solution required 340 seconds of execution time, while our method required only 28 seconds. This is a significant savings in computation. <p> In particular, we use Mathematica <ref> [29] </ref> to obtain the inverse Laplace trans forms of the following: B exact (s) = P 2 (s) = fi 2 (s) = 2 N exact (s) = P 1 (s) + 2P 2 (s) = fi 2 (s)
References-found: 29

