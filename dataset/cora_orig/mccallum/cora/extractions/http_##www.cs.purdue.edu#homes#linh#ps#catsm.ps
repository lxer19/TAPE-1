URL: http://www.cs.purdue.edu/homes/linh/ps/catsm.ps
Refering-URL: http://www.cs.purdue.edu/homes/linh/pubs.htm
Root-URL: http://www.cs.purdue.edu
Title: Categorical semantics of Gamma objects and transitions between states denoted by morphisms. Semantics of compositional
Author: Hong Lin, Yiyun Chen Min Wang 
Keyword: Key words: Semantics, Chemical reaction model, Gamma, Category theory, Parallelism  
Note: states of the program denoted by  also interpreted in categorical framework.  
Address: P.O. Box 4, Hefei, Anhui 230027, PRC  USTC, P.O. Box 4, Hefei, Anhui 230027, PRC  
Affiliation: Department of Computer Science, USTC  Department of Electronic Engineering and Information Science  
Abstract:  
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J.-P. Ban^atre, and D. Le Metayer, </author> <title> The Gamma model and its discipline of programming, </title> <booktitle> Science of Computer Programming, </booktitle> <volume> Vol. 15, </volume> <pages> pp. 55-77, </pages> <year> 1990. </year>
Reference-contexts: 1 Introduction Gamma <ref> [1, 2, 3] </ref> is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7].
Reference: [2] <author> J.-P. Ban^atre, and D. Le Metayer, </author> <title> Programming by multiset transformation, </title> <journal> Communications of the ACM, </journal> <volume> Vol. </volume> <pages> 36-1, pp. 98-111, </pages> <month> Jan. </month> <year> 1993. </year>
Reference-contexts: 1 Introduction Gamma <ref> [1, 2, 3] </ref> is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7].
Reference: [3] <author> J.-P. Ban^atre, and D. Le Metayer, </author> <title> Gamma and the chemical reaction model: ten years after, </title> <editor> in: J.M. Andresli, and C. Hankin (eds.), </editor> <title> Coordination Programming: Mechanisms, Models and Semantics, </title> <publisher> Imperial College Press, </publisher> <year> 1996, </year> <note> to appear. </note>
Reference-contexts: 1 Introduction Gamma <ref> [1, 2, 3] </ref> is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7].
Reference: [4] <author> G. Berry, and G. Boudol, </author> <title> The Chemical Abstract Machine, </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 96, </volume> <pages> pp. 217-248, </pages> <year> 1992. </year>
Reference-contexts: 1 Introduction Gamma [1, 2, 3] is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham <ref> [4] </ref>, higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. <p> This approach will lead to a new style categorical semantics. We do not adopt this approach because we try to establish a general semantic framework and avoid involving operational concepts. Cham <ref> [4] </ref>, Higher-order Gamma [5], and Structured Gamma [6] are elaborations on basic Gamma. Their semantics are fields deserving of more deeply research.
Reference: [5] <author> D. Le Metayer, </author> <title> Higher-order multiset processing, </title> <booktitle> DIMACS Series in Discrete Mathematical and Theoretical Computer Science, </booktitle> <volume> Vol. 18, </volume> <pages> pp. 179-200, </pages> <year> 1994. </year>
Reference-contexts: 1 Introduction Gamma [1, 2, 3] is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma <ref> [5] </ref>, Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. <p> This approach will lead to a new style categorical semantics. We do not adopt this approach because we try to establish a general semantic framework and avoid involving operational concepts. Cham [4], Higher-order Gamma <ref> [5] </ref>, and Structured Gamma [6] are elaborations on basic Gamma. Their semantics are fields deserving of more deeply research.
Reference: [6] <author> P. Fradet, and D. Le Metayer, </author> <title> Structured Gamma, </title> <note> Inria Research Report, </note> <year> 1995. </year>
Reference-contexts: 1 Introduction Gamma [1, 2, 3] is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma <ref> [6] </ref>, and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. <p> This approach will lead to a new style categorical semantics. We do not adopt this approach because we try to establish a general semantic framework and avoid involving operational concepts. Cham [4], Higher-order Gamma [5], and Structured Gamma <ref> [6] </ref> are elaborations on basic Gamma. Their semantics are fields deserving of more deeply research.
Reference: [7] <author> W. Ma, V.K. Murthy, and E.V. Krishnamurthy, </author> <title> Multran|a coordination programming language using multiset and transactions, </title> <editor> in: S.K. Aityan et al. (eds.), </editor> <booktitle> Proc. the 1st Int'l Conf. on Neural, Parallel, and Scientific Computations (ICNPSC), </booktitle> <pages> pp. 301-304, </pages> <year> 1995. </year>
Reference-contexts: 1 Introduction Gamma [1, 2, 3] is a multiset based high-level programming language catering to problem description and program constructions. It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran <ref> [7] </ref>. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13].
Reference: [8] <author> C. Hankin, D. Le Metayer, and D. Sands, </author> <title> A calculus of Gamma programs, </title> <booktitle> in: Proc. 5th Workshop on Languages and Compilers for Parallel Computing, Yale, 1992, </booktitle> <publisher> Springer Verlag, LNCS 757. </publisher>
Reference-contexts: It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics <ref> [8, 9] </ref> and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. <p> Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible <ref> [8, 9, 14, 13] </ref>, we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed. <p> written &lt; g; M &gt;# must ) if any ! fl rewrite terminates, i.e. there is a state N for any ! fl rewrite such that &lt; g; M &gt;! fl N . g terminates (or the relation ! is strongly normalising with respect to g, written g # must <ref> [8, 9] </ref>) if g terminates on any state M , i.e. 8M: &lt; g; M &gt;# must . <p> Therefore, if C is a final cluster of D g , Hom (C; A) = for any A of D g and A6=C, and Hom (C; C) = fS C 2 This definition is different from that in <ref> [8, 9] </ref>.
Reference: [9] <author> C. Hankin, D. Le Metayer, and D. Sands, </author> <title> A parallel programming style and its algebra of programs, </title> <booktitle> in: Proc. of PARLE'93, </booktitle> <volume> LNCS 694, </volume> <pages> pp: 367-378, </pages> <publisher> Springer-Verlag. </publisher>
Reference-contexts: It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics <ref> [8, 9] </ref> and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. <p> Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible <ref> [8, 9, 14, 13] </ref>, we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed. <p> written &lt; g; M &gt;# must ) if any ! fl rewrite terminates, i.e. there is a state N for any ! fl rewrite such that &lt; g; M &gt;! fl N . g terminates (or the relation ! is strongly normalising with respect to g, written g # must <ref> [8, 9] </ref>) if g terminates on any state M , i.e. 8M: &lt; g; M &gt;# must . <p> Therefore, if C is a final cluster of D g , Hom (C; A) = for any A of D g and A6=C, and Hom (C; C) = fS C 2 This definition is different from that in <ref> [8, 9] </ref>. <p> This is the corollary of 2 and Proposition 2.4-2. 2 2.3 Confluence A program g is conf luent on state M (or Church Rosser on state M , written Con (g; M ) <ref> [9] </ref>) if for any M 1 ; M 2 2T g 9 &lt; g 3 ; M 3 &gt; :(&lt; g 1 ; M 1 &gt;! fl &lt; g 3 ; M 3 &gt; ^ &lt; g 2 ; M 2 &gt;! fl &lt; g 3 ; M 3 &gt;) And <p> Con (g; M ) , 8C; C 0 2 (D g ) 0 :(CR (fM g)^C 0 R (fM g) ! R (C) R (C 0 6= ). T 2.4 Operational equivalence In <ref> [9] </ref>, an ordering v on programs is defined. g 1 vg 2 , 8M: ((: &lt; g 1 ; M &gt;# must ) &lt; g 2 ; M &gt; # must )^ 8N:(&lt; g 1 ; M &gt; ! fl N ) &lt; g 2 ; M &gt; ! fl N <p> D g 1 ffi (D g 2 + D g 3 ) v (D g 1 ffi D g 2 ) + (D g 1 ffi D g 3 ). 2 4 Related and future work The computation model of Gamma is closely related to conditional term rewriting <ref> [9, 18, 19] </ref>. In [18, 19], Gamma is considered as a speciality of concurrent rewriting logic. Therefore, categorical semantics for rewriting logic can be specialized to Gamma.
Reference: [10] <author> M. Reynolds, </author> <title> Temporal semantics for Gamma, </title> <editor> in: J.M. Andresli, and C. Hankin (eds.), </editor> <title> Coordination Programming: Mechanisms, Models and Semantics, </title> <publisher> Imperial College Press, </publisher> <year> 1996, </year> <note> to appear. </note>
Reference-contexts: It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics <ref> [10, 11, 12] </ref>. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions.
Reference: [11] <author> W. Ma, E.V. Krishnamurthy, and M.A. Orgun, </author> <title> On providing temporal semantics for the Gamma programming model, </title> <editor> in: C. Barry Jay (ed.), CATS: </editor> <booktitle> Proc. Computing: the Australian Theory Seminar, </booktitle> <pages> pp. 121-132, </pages> <year> 1994. </year>
Reference-contexts: It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics <ref> [10, 11, 12] </ref>. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions.
Reference: [12] <author> H. Lin, G. Chen, and M. Wang, </author> <title> Program transformation from Unity to Gamma based on temporal semantics, Neural, Parallel, and Scientific Computations, </title> <note> to appear. </note>
Reference-contexts: It has issued follow-up elaborations on chemical reaction model, such as Cham [4], higher-order Gamma [5], Structured Gamma [6], and Multran [7]. Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics <ref> [10, 11, 12] </ref>. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. <p> Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in <ref> [12, 13] </ref>. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed.
Reference: [13] <author> H. Lin, and M. Wang, </author> <title> Axiomatizing semantics of Gamma programs, </title> <booktitle> Proc. Hongkong-Chengdu Int'l Computer Conf., </booktitle> <year> 1996, </year> <note> to appear. </note>
Reference-contexts: Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in <ref> [12, 13] </ref>. Although these semantics make reasoning about properties of Gamma programs feasible [8, 9, 14, 13], we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed. <p> Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible <ref> [8, 9, 14, 13] </ref>, we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed.
Reference: [14] <author> W. Ma, and M. Orgun, </author> <title> Verifying Multran programs with temporal logic, </title> <booktitle> Proc. the 8th Int'l Symposium on Languages for Intensional Programming (ISLIP'95), World-Scientific, </booktitle> <pages> pp. 120-134, </pages> <year> 1995. </year>
Reference-contexts: Studies in semantics of Gamma are currently in themes of operational semantics [8, 9] and temporal semantics [10, 11, 12]. Relationships between these semantics have been discussed in [12, 13]. Although these semantics make reasoning about properties of Gamma programs feasible <ref> [8, 9, 14, 13] </ref>, we still are lack of a unified model of Gamma semantics with sought-after succinct and expressive notions. In this paper, categorical semantics of Gamma programs are proposed.
Reference: [15] <author> Y. Chen, </author> <booktitle> Category theory in Computer Science, </booktitle> <publisher> USTC Press, </publisher> <year> 1993. </year> <month> 14 </month>
Reference: [16] <author> N. Carriero, and D. Gelernter, </author> <title> Linda in context, </title> <journal> CACM, </journal> <volume> Vol. </volume> <pages> 32-4, pp. 444-458, </pages> <month> Apr. </month> <year> 1989. </year>
Reference-contexts: In practical programming, the program is assigned an initial multiset. In this paper, however, we assume the program can begin its execution from any multiset in a proper type. We call elements of the multiset tuples (This terminology is borrowed from Linda <ref> [16] </ref>). Tuples are typed and the type is call tuple space. Any multiset whose tuples are in the tuple space is called a state. Any Gamma program can be viewed as a specification of some desired properties.
Reference: [17] <author> J.W. Klop, </author> <title> Term rewriting systems, </title> <editor> in: S. Abramsky, D. Gabbay, and T. Maibaum (eds.), </editor> <booktitle> Handbook of Logic in Computer Science, </booktitle> <volume> Vol. 1, </volume> <publisher> Oxford University Press, </publisher> <year> 1990. </year>
Reference-contexts: In other words, g is confluent if given any state ! fl satisfies the diamond property <ref> [17] </ref>. The diamond property is quite strong and will not hold in general. <p> By appealing to Newman's Lemma <ref> [17] </ref>, we have W cr (g; M ) ^ &lt; g; M &gt;# must ) Con (g; M ) or W cr (g) ^ g # must ) Con (g) Proposition 2.6 (Properties of confluence) 1.
Reference: [18] <author> J. Meseguer, </author> <title> Conditional rewriting logic as a unified model of concurrency, </title> <journal> Theoretical Computer Science, </journal> <volume> Vol. 96, </volume> <pages> pp. 73-155, </pages> <year> 1992. </year>
Reference-contexts: D g 1 ffi (D g 2 + D g 3 ) v (D g 1 ffi D g 2 ) + (D g 1 ffi D g 3 ). 2 4 Related and future work The computation model of Gamma is closely related to conditional term rewriting <ref> [9, 18, 19] </ref>. In [18, 19], Gamma is considered as a speciality of concurrent rewriting logic. Therefore, categorical semantics for rewriting logic can be specialized to Gamma. <p> In <ref> [18, 19] </ref>, Gamma is considered as a speciality of concurrent rewriting logic. Therefore, categorical semantics for rewriting logic can be specialized to Gamma.
Reference: [19] <author> J. Meseguer, and T. Winkler, </author> <title> Parallel programming in Maude, </title> <editor> in: J.-P. Ban^atre, and D. Le Metayer (eds.), </editor> <booktitle> Proc. of the Workshop on Research Directions in High-level Parallel Programming Languages, </booktitle> <address> Mont Saint-Michel, France, June 1991, </address> <publisher> Springer-Verlag, </publisher> <pages> pp. 253-293. 15 </pages>
Reference-contexts: D g 1 ffi (D g 2 + D g 3 ) v (D g 1 ffi D g 2 ) + (D g 1 ffi D g 3 ). 2 4 Related and future work The computation model of Gamma is closely related to conditional term rewriting <ref> [9, 18, 19] </ref>. In [18, 19], Gamma is considered as a speciality of concurrent rewriting logic. Therefore, categorical semantics for rewriting logic can be specialized to Gamma. <p> In <ref> [18, 19] </ref>, Gamma is considered as a speciality of concurrent rewriting logic. Therefore, categorical semantics for rewriting logic can be specialized to Gamma.
References-found: 19

