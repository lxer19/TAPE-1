URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/SharedMulticastTrees.ps.Z
Refering-URL: http://www.csc.ncsu.edu/eos/service/ece/project/rtcomm/WWW/routing.html
Root-URL: http://www.csc.ncsu.edu
Email: hfsalama@eos.ncsu.edu  reeves@eos.ncsu.edu  candice@eos.ncsu.edu  
Phone: Phone: (919) 515-5348 Fax: (919) 515-2285  Phone: (919) 515-2044 Fax: (919) 515-7896  Phone: (919) 515-5148 Fax: (919) 515-2285  
Title: Delay-Constrained Shared Multicast Trees selecting a multicast center, and then constructs a shared tree experiments
Author: Hussein F. Salama Douglas S. Reeves Yannis Viniotis 
Keyword: shared multicast trees starts  
Note: by  method. These  This work was supported in part by the Center for Advanced Computing and Communication  and by AFOSR grant F49620-96-1-0061.  
Address: Box 7911, Raleigh, NC 27695  Box 8206, Raleigh, NC 27695  Box 7911, Raleigh, NC 27695  
Affiliation: ECE Department North Carolina State University  CSC ECE Departments North Carolina State University  ECE Department North Carolina State University  at North Carolina State University,  
Abstract: We study the problem of constructing delay-constrained shared multicast trees for real time applications in connection-oriented high-speed networks. We formulate the problem as a we propose distributed, dynamic heuristics for solving this problem. Most previous work on around it. One of the heuristics we propose eliminates the need for a separate center selection phase. We use simulation to compare the performance of the heuristics, and of the optimal diameter-constrained minimum Steiner tree problem, and prove that it is NP-complete. Then
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. de Prycker, </author> <title> Asynchronous Tranfer Mode, Solution for Broadband ISDN. </title> <publisher> Prentice Hall, 3rd ed., </publisher> <year> 1995. </year>
Reference-contexts: 1 Introduction Broadband Integrated Services Digital Networks (B-ISDN) <ref> [1] </ref> are evolving at a fast pace. B-ISDNs use the Asynchronous Transfer Mode (ATM) [1] which is based on high-speed cell-switching technology. A major purpose of these networks will be to support real-time applications, such as voice and video transmission. <p> 1 Introduction Broadband Integrated Services Digital Networks (B-ISDN) <ref> [1] </ref> are evolving at a fast pace. B-ISDNs use the Asynchronous Transfer Mode (ATM) [1] which is based on high-speed cell-switching technology. A major purpose of these networks will be to support real-time applications, such as voice and video transmission. <p> A multicast tree for a real-time application should guarantee an upper bound on the end-to-end delay from any source to any destination. For wide-area high-speed networks, the network delay is dominated by link propagation delays, which are fixed <ref> [1] </ref>. There are two alternate approaches for constructing multicast trees. One approach is called source-specific trees. In this approach, a tree is constructed from each source to every receiver; for an application with n sources, there will be n trees.
Reference: [2] <author> H. Salama, D. Reeves, and Y. Viniotis, </author> <title> Evaluation of Multicast Routing Algorithms for Real-Time Communication on High-Speed Networks. </title> <journal> accepted for publication in the IEEE Journal on Selected Areas in Communications. </journal>
Reference-contexts: Another approach is to use a single shared multicast tree to transport the traffic from all sources to all receivers. Previous research on delay-constrained multicast trees considered only source-specific trees. A detailed discussion of this research can be found in <ref> [2] </ref>. In this paper, we focus on delay-constrained shared multicast trees. Shared trees have several advantages over source-specific trees. The effort to construct and maintain one shared tree per multicast session is significantly less than the effort of constructing n source-specific trees.
Reference: [3] <author> L. Wei and D. Estrin, </author> <title> A Comparison of Multicast Trees and Algorithms, </title> <type> Tech. Rep. </type> <institution> USC-CS-93-560, Computer Science Department, University of Southern California, </institution> <month> September </month> <year> 1993. </year>
Reference-contexts: For these and other reasons, multicast routing protocols 2 being developed for the Internet and ATM assume the use of shared multicast trees. However, simulation results presented in <ref> [3] </ref>, and analysis by D. Wall [4] show that the end-to-end delays along shared trees can be longer than the corresponding delays when source-specific trees are used instead. This makes the problem of constructing delay-constrained shared trees more challenging. <p> This node is the center of the shared tree. Calvert et al. [11] compared different center selection algorithms with respect to their effect on bandwidth and delay. Their results confirm the Wei and Estrin's results <ref> [3] </ref>. Wei and Estrin showed that center selection algorithms tend to favor nodes that are close to the center of the network. When many shared multicast trees exist, this results in high traffic concentration on the links attached to these central nodes.
Reference: [4] <author> D. Wall, </author> <title> Mechanisms for Broadcast and Selective Broadcast. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> June </month> <year> 1980. </year>
Reference-contexts: For these and other reasons, multicast routing protocols 2 being developed for the Internet and ATM assume the use of shared multicast trees. However, simulation results presented in [3], and analysis by D. Wall <ref> [4] </ref> show that the end-to-end delays along shared trees can be longer than the corresponding delays when source-specific trees are used instead. This makes the problem of constructing delay-constrained shared trees more challenging. <p> Such a shortest path does not necessarily have to pass through the center. D. Wall's work was the first on shared trees <ref> [4] </ref>. His focus was mainly on shared broadcast trees, a special case of the shared multicast trees. In his work, he considered only link delays. He presented several variations of the problem, and proved that finding the optimal shared broadcast tree is NP-complete. <p> After all broadcast operations are complete, all nodes will have the same minimum criterion value saved. The node which advertized that value, i.e., the node with minimal maximum delay to any multicast group member, is the selected center. This approach for distributed center selection has been proposed by Wall <ref> [4] </ref>. The same heuristic can be implemented using different criteria such as the average delay to the multicast group members, the average path cost to the group members, or the maximum path cost to any group member.
Reference: [5] <author> R. Karp, </author> <title> Reducibility among Combinatorial Problems, in Complexity of Computer Computations (R. </title> <editor> Miller and J. Thatcher, </editor> <booktitle> eds.), </booktitle> <pages> pp. 85-103, </pages> <publisher> Plenum Press, </publisher> <year> 1972. </year>
Reference-contexts: For the restricted case, a solution to the unconstrained minimum Steiner tree decision problem is a solution to the DCMST decision problem, i.e., the unconstrained minimum Steiner tree decision problem is a restricted version of the DCMST decision problem. Since the restricted problem is NP-complete <ref> [5] </ref>, it follows that the DCMST decision problem is also NP-complete. 2 We implemented an optimal algorithm for the DCMST problem using a branch and bound technique. We denote this optimal algorithm as DiamOPT. However, this algorithm has excessive execution times, and we could apply it only to small networks.
Reference: [6] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C.-G. Liu, and L. Wei, </author> <title> The PIM Architecture for Wide-Area Multicast Routing, </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> vol. 4, no. 2, </volume> <pages> pp. 153-162, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: However, two multicast routing protocols, currently being developed for the Internet, define unconstrained shared multicast trees as part of their specifications. The two protocols are Protocol Independent Multi-casting (PIM) <ref> [6] </ref> and Core Based Trees (CBT) [7]. This motivated some research groups to work on unconstrained shared trees. All schemes proposed for constructing unconstrained shared trees consist of two phases. <p> This approach does not require any message 8 overhead, because each node selects the center independently. A similar approach is used to choose the RPs in PIM <ref> [6] </ref>. In addition, Calvert et al. [11] have shown that selecting the center of an unconstrained shared tree randomly reduces the traffic concentration on few links in the network. Another heuristic for selecting a center is the MinMaxD heuristic. Each node v computes a criterion value.
Reference: [7] <author> A. Ballardie, P. Francis, and J. Crowcroft, </author> <title> Core Based Trees (CBT): An Architecture for Scalable Inter-Domain Multicast Routing, </title> <booktitle> in Proceedings of ACM SIGCOMM '93, </booktitle> <pages> pp. 85-95, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: However, two multicast routing protocols, currently being developed for the Internet, define unconstrained shared multicast trees as part of their specifications. The two protocols are Protocol Independent Multi-casting (PIM) [6] and Core Based Trees (CBT) <ref> [7] </ref>. This motivated some research groups to work on unconstrained shared trees. All schemes proposed for constructing unconstrained shared trees consist of two phases.
Reference: [8] <author> D. Bertsekas and R. Gallager, </author> <title> Data Networks. </title> <booktitle> Prentice-Hall, 2nd ed., </booktitle> <year> 1992. </year>
Reference-contexts: Thus the first phase is a center selection phase while the second phase is a route selection phase. Routing algorithms applied during the route selection phase are variations of the popular shortest path algorithms <ref> [8] </ref> similar to those used for constructing source-specific trees. Therefore, research on shared multicast trees focused on the center selection phase. In PIM, the center of a shared tree is denoted as the Rendezvous Point (RP), and it is selected randomly from a list of candidate RPs.
Reference: [9] <author> L. Wei and D. Estrin, </author> <title> The Trade-offs of Multicast Trees and Algorithms, </title> <booktitle> in Proceedings of the Third International Conference on Computer Communications and Networking (IC 3 N '94), </booktitle> <pages> pp. 17-24, </pages> <year> 1994. </year>
Reference-contexts: Wei and Estrin <ref> [9] </ref> evaluated the tradeoffs between source-specific multicast trees and shared multicast trees using simulation. They also showed that restricting the center to be one of the multicast group members does not significantly affect the performance of the shared tree.
Reference: [10] <author> S. Shukla, E. Boyer, and J. Klinker, </author> <title> Multicast Tree Construction in Network Topologies with Asymmetric Link Loads, </title> <type> Tech. Rep. </type> <institution> NPS-EC-94-012, Naval Postgraduate School, Department of Electrical and Computer Engineering, </institution> <month> September </month> <year> 1994. </year>
Reference-contexts: Wei and Estrin [9] evaluated the tradeoffs between source-specific multicast trees and shared multicast trees using simulation. They also showed that restricting the center to be one of the multicast group members does not significantly affect the performance of the shared tree. Shukla et al. <ref> [10] </ref> proposed a protocol for constructing both source-specific and shared multicast trees. They proposed a center selection protocol for shared multicast trees based on a tournament. A simplified version of the tournament works as follows. Each receiver is paired with a source in decreasing order of distance.
Reference: [11] <author> K. Calvert, E. Zegura, and M. Donahoo, </author> <title> Core Selection Methods for Multicast Routing, </title> <booktitle> in Proceedings of the Fourth International Conference on Computer Communications and Networking (IC 3 N '95), </booktitle> <year> 1995. </year>
Reference-contexts: All winners are then paired together, and the next group of winners is computed, and so on until only one winning node remains. This node is the center of the shared tree. Calvert et al. <ref> [11] </ref> compared different center selection algorithms with respect to their effect on bandwidth and delay. Their results confirm the Wei and Estrin's results [3]. Wei and Estrin showed that center selection algorithms tend to favor nodes that are close to the center of the network. <p> This approach does not require any message 8 overhead, because each node selects the center independently. A similar approach is used to choose the RPs in PIM [6]. In addition, Calvert et al. <ref> [11] </ref> have shown that selecting the center of an unconstrained shared tree randomly reduces the traffic concentration on few links in the network. Another heuristic for selecting a center is the MinMaxD heuristic. Each node v computes a criterion value. <p> These cases occur more frequently when the multicast group size is small. That is why RAND-DCSHARED's performance is not as good as DCINITIAL-DCSHARED's performance for small group sizes. The results given above for RAND-DCINITIAL confirm the results given in <ref> [11] </ref> for unconstrained shared multicast trees. Random center selection results in good load balancing and reduces the traffic concentration on any particular links.
Reference: [12] <author> D. Thaler and C. Ravishankar, </author> <title> Distributed Center-Location Algorithms: Proposals and Comparisons, </title> <booktitle> in Proceedings of IEEE INFOCOM '96, </booktitle> <pages> pp. 75-84, </pages> <year> 1996. </year>
Reference-contexts: Calvert et al. proposed to distribute the centers uniformly (randomly) over all network nodes to reduce traffic concentration. They showed that the resulting traffic concentration is as low as that resulting from source-specific trees. Thaler and Ravishankar <ref> [12] </ref> proposed two distributed center selection protocols. These protocols permit the center of multicast session to migrate dynamically. The authors evaluated their protocols and most of the previously proposed center selection mechanisms. All the work reviewed above considered best-effort datagram networks.
Reference: [13] <author> H. Salama, D. Reeves, and Y. Viniotis, </author> <title> A Distributed Algorithm for Delay-Constrained Unicast Routing. </title> <note> accepted for IEEE INFOCOM '97, April 1997. Available via anonymous ftp from ftp://ftp.csc.ncsu.edu/pub/rtcomm/DCUnicastRouting.ps. </note>
Reference-contexts: We denote the algorithm used by nodes to join or leave a shared tree as the Delay-Constrained Shared Routing (DCSHARED) algorithm. It is a variation of the delay-constrained unicast routing (DCUR) algorithm proposed in <ref> [13] </ref>. Both DCUR and DCSHARED are distributed and have a worst case message complexity of O (jV j 3 ), but simulation results have shown that on the average much fewer messages are needed.
Reference: [14] <author> C. Hedrick, </author> <title> Routing Information Protocol. Internet RFC 1058, </title> <note> http://ds.internic.net/rfc/rfc1058.txt, June 1988. </note>
Reference-contexts: In addition, both algorithms require limited network state information to be kept at each node in the form of a delay vector and cost vector. These vectors are similar to the distance vectors used for routing purposes in current networks <ref> [14, 15] </ref>. The delay vector at a node contains information about the least-delay paths to all other nodes. Similarly, the cost vector contains information about the least-cost paths to all other nodes. Both DCUR and DCSHARED scale well to large network sizes.
Reference: [15] <author> D. Waitzman, C. Partridge, and S. Deering, </author> <title> Distance Vector Multicast Routing Protocol. Internet RFC 1075, </title> <note> http://ds.internic.net/rfc/rfc1075.txt, November 1988. </note>
Reference-contexts: In addition, both algorithms require limited network state information to be kept at each node in the form of a delay vector and cost vector. These vectors are similar to the distance vectors used for routing purposes in current networks <ref> [14, 15] </ref>. The delay vector at a node contains information about the least-delay paths to all other nodes. Similarly, the cost vector contains information about the least-cost paths to all other nodes. Both DCUR and DCSHARED scale well to large network sizes.
Reference: [16] <author> H. Salama, </author> <title> Multicast Routing for Real-time Communication on High-Speed Networks. </title> <type> PhD thesis, </type> <institution> North Carolina State University, Department of Electrical and Computer Engineering, </institution> <year> 1996. </year> <note> In Preparation. </note>
Reference-contexts: When a node leaves a multicast group, it simply prunes itself from the corresponding shared tree. Complete descriptions, and pseudo code, of the algorithms used for both the join and leave operations of DCSHARED are given in <ref> [16] </ref>. In the remainder of this section, we present algorithms for the first phase of shared tree construction. <p> More detailed description of DCINITIAL is given in <ref> [16] </ref>. DCINITIAL makes better use of the first phase of the problem than RAND and MinMaxD, because the initial shared tree it constructs includes at least two multicast group members. On the other hand, the initial trees constructed by RAND and MinMaxD consist of the center only. <p> The probability of member success is independent of the group size, because the success of a member's attempt to join a shared tree, i.e., the success of the DCSHARED routing algorithm, depends only on the least-delay value between that member and the center <ref> [16] </ref>. MinMaxD chooses the node with least maximum delay to any group member to be the center, thus increasing the probability that DCSHARED succeeds.
Reference: [17] <author> B. Waxman, </author> <title> Routing of Multipoint Connections, </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 6, no. 9, </volume> <pages> pp. 1617-1622, </pages> <month> December </month> <year> 1988. </year>
Reference-contexts: The node positions were fixed for each network size and the links interconnecting these nodes were generated using a random link generator which is based on Waxman's random generator <ref> [17] </ref>. The networks spanned an area of 3000 fl 2400 Km 2 (0.015fl0.012 seconds 2 in terms of propagation delay), and 155 Mbps links were used. Figure 1 shows an example of a randomly generated 20-node network. In such wide-area high-speed networks, propagation components dominate the link delays.
Reference: [18] <author> R. Braden et al., </author> <title> Resource Reservation Protocol (RSVP) Version 1 Functional Specification. </title> <type> Internet Draft, </type> <month> August </month> <year> 1996. </year> <month> 23 </month>
Reference-contexts: For each run of the experiment we generated a random set of links to interconnect the fixed nodes, we generated random 3 This resource reservation scheme resembles the shared reservation style of RSVP <ref> [18] </ref>. It is suitable mainly for applications involving voice traffic only. 11 background traffic for each link to obtain nonzero link costs, and we selected a random multicast group. Each link's background traffic was a random variable uniformly distributed between B min and B max .
References-found: 18

