URL: ftp://ftp.cs.indiana.edu/pub/tloos/emily/postscript/paper.ps.Z
Refering-URL: http://www.cs.indiana.edu/scicomp/papers.html
Root-URL: http://www.cs.indiana.edu
Title: EMILY: A VISUALIZATION TOOL FOR LARGE SPARSE MATRICES  
Author: T. LOOS AND R. BRAMLEY 
Keyword: Key words. sparse matrices, visualization, iterative methods, domain decomposition  
Abstract: A visualization tool for large sparse matrices and its usage is described. Because such matrices come from a wide variety of computational science and engineering areas, the tool must be able to use a standard sparse matrix input format, to handle quantities spanning hundreds of orders of magnitude, and to map matrices with millions of rows and columns to display devices with only hundreds of pixels per side. Application examples are given, including viewing the effect of preconditioning for iterative methods for linear systems and providing a more informative view of domain partitioning for parallel processing. 
Abstract-found: 1
Intro-found: 1
Reference: <institution> 12 </institution>
Reference-contexts: The ability to read matrices that conform to a standard file format provides the benefit of sharing results via common files. A matrix viewer that works both from a Unix command line and from within a matrix manipulation environment such as Matlab <ref> [12] </ref> provides significant user convenience. Implementing a large, sparse unstructured matrix viewer may seem straightforward, but determining and implementing the important features has proven a challenge. The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. <p> The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. It has been used to interactively explore coefficient matrices with ten million rows and columns, and roughly seven million nonzero entries. Previous work <ref> [12, 13, 2] </ref> has shown the utility of being able to visualize the location and magnitude of the nonzero entries of a matrix. <p> As with most scientific visualization tasks, the most important benefits are probably the unforeseen ones: can something be seen that was not anticipated in advance? Although there are systems for viewing dense matrices (MatVu and DotPlot)[13], or for viewing the nonzero structure of sparse systems (MatVu, spy in Matlab <ref> [12] </ref>, pltmt in Sparskit [11], and showmap in SMMS [2]), none of these are targeted towards extremely large linear systems, and only MatVu can indicate the magnitude of the matrix entries. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary.
Reference: [1] <author> Adobe Systems Incorporated, </author> <title> Postscript Language Reference Manual, </title> <publisher> Addison-Wesley, </publisher> <address> Reading, MA, </address> <publisher> eighteenth ed., </publisher> <year> 1990. </year>
Reference-contexts: For a sparse matrix, the number of non-zero entries in the whole matrix is given. Five menus provide options at the top of the main window: File, Colors, Background, Scaling, and Help. The File Menu controls matrix input, printing via PostScript <ref> [1] </ref>, and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot [12], cool [12], copper [12], weather, sunrise and sunset.
Reference: [2] <author> F. L. Alvarado, </author> <title> "The Sparse Matrix Manipulation System: User and Reference Manual", </title> <type> tech. rep., </type> <institution> The University of Wisconsin, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. It has been used to interactively explore coefficient matrices with ten million rows and columns, and roughly seven million nonzero entries. Previous work <ref> [12, 13, 2] </ref> has shown the utility of being able to visualize the location and magnitude of the nonzero entries of a matrix. <p> important benefits are probably the unforeseen ones: can something be seen that was not anticipated in advance? Although there are systems for viewing dense matrices (MatVu and DotPlot)[13], or for viewing the nonzero structure of sparse systems (MatVu, spy in Matlab [12], pltmt in Sparskit [11], and showmap in SMMS <ref> [2] </ref>), none of these are targeted towards extremely large linear systems, and only MatVu can indicate the magnitude of the matrix entries.
Reference: [3] <author> P. K. M.M. Keller, </author> <title> Visual Cues, </title> <publisher> IEEE Computer Society Press, </publisher> <address> Washington, D.C., </address> <year> 1992. </year>
Reference-contexts: Multiple colormaps (palettes of displayable colors) are critical since linear systems come from a wide range of applications, and the tool must be able to provide the appropriate visual cues to match a user's acquired reactions <ref> [3] </ref>. Providing multiple colormaps also helps focus the eye on different features and structures in the same view. The disparate sources of linear systems also means the matrix entries can have arbitrarily large variations in magnitude.
Reference: [4] <author> K. W. Church and J. I. Helfman, Dotplot: </author> <title> A program for exploring self-simliarity in millions of lines of text and code, </title> <journal> Journal of Computational and Graphical Statistics, </journal> <volume> 2 (1993), </volume> <pages> pp. 153-174. </pages>
Reference-contexts: Dotplot <ref> [4] </ref> displays similarity patterns of large scale (O (10 6 )) numbers of strings by displaying an internally formed matrix, but was not designed to explore arbitrary or sparse matrices. MATPLO [9] is part of the IBM GDDM system, which runs under VM and MVS/TSO.
Reference: [5] <author> H. V. der Vorst, </author> <title> Bi-CGSTAB: A fast and smoothly converging variant of Bi-CG for the solution of nonsymmetric linear systems, </title> <journal> SIAM Journal of Scientific and Statistical Computing, </journal> <volume> 13 (1992), </volume> <pages> pp. 631-644. </pages>
Reference-contexts: This counter-intuitive result is borne out by the convergence history of the iterative method stabilized biconjugate gradients (BiCGS) <ref> [5] </ref>, as shown in Fig. 14. The Figure plots the norm of the preconditioned residual vector r k = (LU ) 1 (b Ax k ) versus iteration number k. The extra curve corresponds to using no preconditioning, for which BiCGS fails to converge.
Reference: [6] <author> I. Duff, R. Grimes, and J. Lewis, </author> <title> Sparse matrix test problems, </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 15 (1989), </volume> <pages> pp. 1-14. </pages>
Reference-contexts: The windows opened up also display the matrix coordinates (in terms of row and column numbers) of the region being viewed, allowing the user to identify individual entries if desired. The visualization program, called emily, reads matrices stored in standard Harwell/Boeing <ref> [6, 7] </ref> format files. It can also be used from within Matlab, allowing users to scale, reorder, and manipulate the matrices at a high level and quickly view the results. <p> These were chosen to give an idea of the range of applications for sparse matrix viewing, and its advantages. 4.1. Migration Matrix Example. The image in Fig. 6 shows a matrix from the Harwell/Boeing collection of test matrices <ref> [6, 7] </ref>. The matrix, psmigr 1 was contributed by Paul Slater and shows the pattern of migration within the U.S. between 1965 and 1970, by county. Entry (i; j) gives the number of people who moved from county i in 1965 to county j in 1970.
Reference: [7] <author> I. S. Duff, R. G. Grimes, and J. G. Lewis, </author> <title> "Users Guide for the Harwell-Boeing Sparse Matrix Collection (Release I)", </title> <type> tech. rep., </type> <institution> Cedex and Boeing Computer Services, </institution> <month> October </month> <year> 1992. </year>
Reference-contexts: The windows opened up also display the matrix coordinates (in terms of row and column numbers) of the region being viewed, allowing the user to identify individual entries if desired. The visualization program, called emily, reads matrices stored in standard Harwell/Boeing <ref> [6, 7] </ref> format files. It can also be used from within Matlab, allowing users to scale, reorder, and manipulate the matrices at a high level and quickly view the results. <p> These were chosen to give an idea of the range of applications for sparse matrix viewing, and its advantages. 4.1. Migration Matrix Example. The image in Fig. 6 shows a matrix from the Harwell/Boeing collection of test matrices <ref> [6, 7] </ref>. The matrix, psmigr 1 was contributed by Paul Slater and shows the pattern of migration within the U.S. between 1965 and 1970, by county. Entry (i; j) gives the number of people who moved from county i in 1965 to county j in 1970.
Reference: [8] <author> J. Meijerink and H. van der Vorst, </author> <title> An iterative solution method for linear systems of which the coefficient matrix is a symmetric M-matrix, </title> <journal> Math. Comp., </journal> <volume> 31 (1977), </volume> <pages> pp. 148-162. </pages>
Reference-contexts: Incomplete Factorization Preconditioners. Iterative methods for solving linear systems Ax = b usually rely on preconditioning to accelerate their convergence. A common class of preconditioners, ILU (s) <ref> [8] </ref>, approximately factors A LU with lower triangular L and upper triangular U ; the iterative method is then applied to the system 1 Matlab is a registered trademark of MathWorks, Inc. 8 (LU ) 1 Ax = (LU ) 1 b.
Reference: [9] <author> G. V. Paolini and P. Santangelo, </author> <title> An Interactive Graphic Tool to Plot the Structure of Large Sparse Matrices, </title> <journal> IBM Journal of Research and Development, </journal> <volume> 35 (1991), </volume> <pages> pp. 231-237. </pages>
Reference-contexts: Dotplot [4] displays similarity patterns of large scale (O (10 6 )) numbers of strings by displaying an internally formed matrix, but was not designed to explore arbitrary or sparse matrices. MATPLO <ref> [9] </ref> is part of the IBM GDDM system, which runs under VM and MVS/TSO. It 2 also interactively displays large sparse matrices in color, and allowing the user to interactively zoom and change the thickness of the displayed rows.
Reference: [10] <author> D. Pelletier and J.-F. H etu, </author> <title> An adaptive finite element methodology for incompressible viscous flow, in Advances in Finite Element Analysis in Fluid Dynamics II, </title> <booktitle> ASME Winter Annual Meeting, ASME, </booktitle> <year> 1992. </year>
Reference-contexts: As the second example application of emily, we examine ILU (s) preconditioning on a test matrix extracted from a computational fluid dynamics code. The matrix is of order 1128, and occurs in using an augmented Lagrangian method to solve the 2D backward facing step problem <ref> [10] </ref>. It is still an active area of research to determine how effective ILU (s) is, both in terms of the amount of storage needed and how "close" the preconditioned system is to the identity matrix.
Reference: [11] <author> Y. Saad, SPARSKIT: </author> <title> a basic tool kit for sparse matrix computations, </title> <type> tech. rep., </type> <institution> Center for Supercomputing Research and Development, University of Illinois, Urbana, Illinois, </institution> <year> 1990. </year>
Reference-contexts: scientific visualization tasks, the most important benefits are probably the unforeseen ones: can something be seen that was not anticipated in advance? Although there are systems for viewing dense matrices (MatVu and DotPlot)[13], or for viewing the nonzero structure of sparse systems (MatVu, spy in Matlab [12], pltmt in Sparskit <ref> [11] </ref>, and showmap in SMMS [2]), none of these are targeted towards extremely large linear systems, and only MatVu can indicate the magnitude of the matrix entries.
Reference: [12] <author> The MathWorks Inc., </author> <title> Matlab User's Guide. General purpose guide to Matlab, </title> <month> August </month> <year> 1992. </year>
Reference-contexts: The ability to read matrices that conform to a standard file format provides the benefit of sharing results via common files. A matrix viewer that works both from a Unix command line and from within a matrix manipulation environment such as Matlab <ref> [12] </ref> provides significant user convenience. Implementing a large, sparse unstructured matrix viewer may seem straightforward, but determining and implementing the important features has proven a challenge. The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. <p> The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. It has been used to interactively explore coefficient matrices with ten million rows and columns, and roughly seven million nonzero entries. Previous work <ref> [12, 13, 2] </ref> has shown the utility of being able to visualize the location and magnitude of the nonzero entries of a matrix. <p> As with most scientific visualization tasks, the most important benefits are probably the unforeseen ones: can something be seen that was not anticipated in advance? Although there are systems for viewing dense matrices (MatVu and DotPlot)[13], or for viewing the nonzero structure of sparse systems (MatVu, spy in Matlab <ref> [12] </ref>, pltmt in Sparskit [11], and showmap in SMMS [2]), none of these are targeted towards extremely large linear systems, and only MatVu can indicate the magnitude of the matrix entries. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary. <p> The File Menu controls matrix input, printing via PostScript [1], and window closing. The Colors Menu allows selection of a colormap, which will affect the view of all the currently displayed windows instantaneously. Available colormaps are grayscale, spectral [14], Ware's [14], hot <ref> [12] </ref>, cool [12], copper [12], weather, sunrise and sunset. This collection was chosen incrementally as applications users requested additional mappings. Because the applications varied widely with different interpretations of the elements of the matrices, a large selection of colormaps allowing user-defined visual cues was necessary.
Reference: [13] <author> A. M. Tuchman and M. W. Berry, </author> <title> "Matrix Visualization in the Design of Numerical Algorithms", </title> <journal> ORSA Journal on Computing, </journal> <volume> 2 (1990), </volume> <pages> pp. 84-92. </pages>
Reference-contexts: The tool described in this paper has already provided useful insights in computational science, three examples of which are given in the Section 4. It has been used to interactively explore coefficient matrices with ten million rows and columns, and roughly seven million nonzero entries. Previous work <ref> [12, 13, 2] </ref> has shown the utility of being able to visualize the location and magnitude of the nonzero entries of a matrix.

References-found: 14

