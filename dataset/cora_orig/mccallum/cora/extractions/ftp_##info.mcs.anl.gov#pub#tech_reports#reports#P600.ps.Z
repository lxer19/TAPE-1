URL: ftp://info.mcs.anl.gov/pub/tech_reports/reports/P600.ps.Z
Refering-URL: http://www.mcs.anl.gov/publications/abstracts/abstracts96.htm
Root-URL: http://www.mcs.anl.gov
Title: MODIFIED CHOLESKY FACTORIZATIONS IN INTERIOR-POINT ALGORITHMS FOR LINEAR PROGRAMMING  
Author: STEPHEN WRIGHT 
Keyword: Key words. Interior-point algorithms and software, Cholesky factorization, Matrix perturbations, Error analysis.  
Address: ARGONNE, IL 60439, USA.  
Affiliation: MATHEMATICS AND COMPUTER SCIENCE DIVISION, AR-GONNE NATIONAL LABORATORY,  
Date: MAY, 1996,  
Note: PREPRINT ANL/MCS-P600-0596,  
Abstract: We investigate a modified Cholesky algorithm similar to those used in current interior-point codes for linear programming. Cholesky-based interior-point codes are popular for three reasons: their implementation requires only minimal changes to standard sparse Cholesky codes (allowing us to take full advantage of software written by specialists in that area); they tend to be more efficient than competing approaches that use different factorizations; and they perform robustly on most practical problems, yielding good interior-point steps even when the coefficient matrix is ill conditioned. We explain the surprisingly good performance of the Cholesky-based approach by using analytical tools from matrix perturbation theory and error analysis, illustrating our results with computational experiments. Finally, we point out the limitations of this approach. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Czyzyk, S. Mehrotra, and S. J. Wright, </author> <title> PCx User Guide, </title> <type> Technical Report OTC 96/01, </type> <institution> Optimization Technology Center, Argonne National Laboratory and Northwestern University, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: Instead of crashing, most codes apply a "patch" to the algorithm to handle such pivots. The offending pivot element is sometimes replaced by a huge number, as in LIPSOL [17] or PCx <ref> [1] </ref>. In other codes such as IPMOS [16], the pivot is replaced by a moderate number, but the corresponding right-hand side element is set to zero, as are the off-diagonal elements in the corresponding column of the Cholesky factor. <p> This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38. 1 <ref> [1] </ref> make explicit use of the freely available sparse Cholesky code of Ng and Peyton [8]. <p> In a path following method, we have r xs = XS1 i1;(10) where is the duality gap defined by = x T s=n;(11) and i 2 <ref> [0; 1] </ref> is a centering parameter. <p> Hence, for all sufficiently small and all ff 2 <ref> [0; 1] </ref>, we have x i + ffx aff i &gt; 0. Similar logic can be applied to the remaining indices i 2 N , thereby completing our verification of (82). <p> The criterion for identifying a small pivot is not explained in the reference [16], but otherwise this strategy is equivalent to Algorithm modchol. Zhang's LIPSOL code [17] and the PCx code of Czyzyk, Mehrotra, and Wright <ref> [1] </ref> replace small pivots by a huge number|10 128 |but otherwise leave the Cholesky algorithm unchanged. The net effect is, however, almost equivalent to Algorithm modchol and the triangular substitution procedure (25). The advantage of this approach is that it involves minimal changes to a standard sparse Cholesky code. <p> The matrix A is fully dense, with elements (o 1 :5)10 6 (o 2 :5) , where o 1 and o 2 are random variables drawn from a uniform distribution on the interval <ref> [0; 1] </ref>. (Of course, the values of o 1 and o 2 are different for each element of the matrix.) We can reasonably expect this matrix A to satisfy the well-conditioning assumptions of Section 5. <p> The user specifies the number of indices to appear in B, and we set A primal solution x fl is constructed with x fl i = 10 3 (o:5) (i = jN j + 1; ; n); where o is randomly drawn from the uniform distribution on <ref> [0; 1] </ref>. We choose the dual solution fl to be the vector (1; 1; ; 1) T , and fix an optimal dual slack vector s fl to be i = 10 4 (o:5) (i = 1; 2; ; jN j); s fl where o is random as above.
Reference: [2] <author> A. Forsgren, P. Gill, and J. Shinnerl, </author> <title> Stability of symmetric ill-conditioned systems arising in interior methods for constrained optimization, </title> <journal> SIAM Journal on Matrix Analysis and Applications, </journal> <volume> 17 (1996), </volume> <pages> pp. 187-211. </pages>
Reference-contexts: We showed that, despite the ill-conditioning of the coefficient matrix, the steps obtained by this approach are good search directions for the interior-point method. Forsgren, Gill, and Shinnerl <ref> [2] </ref> perform a similar analysis in the context of logarithmic barrier methods. The remainder of this paper is organized as follows. In Section 2, we introduce primal-dual interior-point methods and derive the linear equations to be solved at each 2 iteration of these methods.
Reference: [3] <author> A. George and J. W.-H. Liu, </author> <title> Computer Solution of Large Sparse Positive Definite Systems, </title> <publisher> Prentice-Hall, </publisher> <year> 1981. </year>
Reference-contexts: Department of Energy, under Contract W-31-109-Eng-38. 1 [1] make explicit use of the freely available sparse Cholesky code of Ng and Peyton [8]. Other codes either modify the well-known SPARSPAK routines of George and Liu <ref> [3] </ref> or include customized linear algebra routines that implement well established algorithmic ideas. (At least one author has experimented with modifications to the standard heuristics: Meszaros [7] describes an inexact version of the minimum local fill ordering.) One possible remedy for small pivots is diagonal pivoting.
Reference: [4] <author> N. J. Higham, </author> <title> Accuracy and Stability of Numerical Algorithms, </title> <publisher> SIAM Publications, </publisher> <address> Philadel-phia, </address> <year> 1996. </year>
Reference-contexts: The algorithm is terminated when none of the remaining diagonal elements is sufficiently large, and an approximate solution is computed with the partial factors. (See Higham <ref> [4, Chapter 10] </ref> for details and error analysis.) This strategy is not particularly appealing in the context of interior-point linear programming codes because of the loss of efficiency due to shifting of data during the numerical factorization. <p> The ith column of M is denoted by M i , and the column submatrix consisting of columns j 2 J is denoted by M J . Unit roundoff error is denoted by u. Higham <ref> [4, Chapter 1] </ref> defines u implicitly by the statement that when ff and i are any two floating-point numbers, op denotes +, , fi, and =, and fl () denotes the floating-point representation of a real number, we have fl (ff op i) = (ff op i)(1 + ffi) for some <p> For any positive integer m with mu &lt; 1, we define fl m = 1 mu (see Higham <ref> [4, Lemma 2.1] </ref>). The notation k k denotes the Euclidean vector norm k k 2 and also its induced matrix norm, unless otherwise noted. For any matrix A, the matrix consisting of the absolute values of each element is denoted by jAj. <p> Proof. Algorithm modchol operates as a standard Cholesky factorization on the submatrix M J J , so we can apply a standard perturbation theorem to bound the error in the subvector ^z J . From Higham <ref> [4, Theorem 10.4] </ref>, we find that ^z J satisfies (M J J + E u where kE u 2mfl m+1 kM J J k:(67) Comparing (66) with (61), we find that M J J (~z J ^z J ) = E u 15 Manipulating in the usual way, we obtain k~z

Reference: [6] <author> I. J. Lustig, R. E. Marsten, and D. F. Shanno, </author> <title> Computational experience with a primal--dual interior point method for linear programming, Linear Algebra and Its Applications, </title> <booktitle> 152 (1991), </booktitle> <pages> pp. 191-222. </pages>
Reference-contexts: In other codes such as IPMOS [16], the pivot is replaced by a moderate number, but the corresponding right-hand side element is set to zero, as are the off-diagonal elements in the corresponding column of the Cholesky factor. The first practical interior-point code, OB1 <ref> [6] </ref>, explicitly zeroes the components of the solution vector that correspond to small pivots. All these strategies are essentially equivalent to the algorithm we describe in this paper. To date, there has been little investigation of them from a numerical analysis viewpoint.
Reference: [7] <author> C. M esz aros, </author> <title> The inexact minimum local fill-in ordering algorithm, </title> <type> Working Paper 95-7, </type> <institution> Computer and Automation Institute, Hungarian Academy of Sciences, </institution> <address> Budapest, </address> <year> 1995. </year>
Reference-contexts: Other codes either modify the well-known SPARSPAK routines of George and Liu [3] or include customized linear algebra routines that implement well established algorithmic ideas. (At least one author has experimented with modifications to the standard heuristics: Meszaros <ref> [7] </ref> describes an inexact version of the minimum local fill ordering.) One possible remedy for small pivots is diagonal pivoting. At each iteration, a "large" diagonal element is selected from the unreduced portion of the matrix and moved to the pivot position by symmetric row and column pivoting.
Reference: [8] <author> E. Ng and B. W. Peyton, </author> <title> Block sparse Cholesky algorithms on advanced uniprocessor computers, </title> <journal> SIAM Journal on Scientific Computing, </journal> <volume> 14 (1993), </volume> <pages> pp. 1034-1056. </pages>
Reference-contexts: This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. Department of Energy, under Contract W-31-109-Eng-38. 1 [1] make explicit use of the freely available sparse Cholesky code of Ng and Peyton <ref> [8] </ref>.
Reference: [9] <author> G. W. Stewart, </author> <title> On scaled projections and pseudoinverses, Linear Algebra and Its Applications, </title> <booktitle> 112 (1989), </booktitle> <pages> pp. 189-193. </pages>
Reference-contexts: assume full rank of A, and since the diagonal elements of D are all strictly positive, the coefficient matrix is invertible, and we have k cc k k (AD 2 A T ) 1 AD 2 k kX 1 k ki1 X aff S aff 1k: A result of Stewart <ref> [9] </ref> and Todd [11] states that the norm k (AD 2 A T ) 1 AD 2 k is bounded independently of D over the set of all positive definite diagonal matrices D (and therefore independently of x and s with (x; s) &gt; 0).
Reference: [10] <author> G. W. Stewart and J. Sun, </author> <title> Matrix Perturbation Theory, </title> <booktitle> Computer Science and Scientific Computing, </booktitle> <publisher> Academic Press, </publisher> <address> New York, </address> <year> 1990. </year>
Reference-contexts: matrices ~ U and ~ Q such that ~ L T = ~ U ~ ~ Q T ;(38) where ~ = diag (~oe 1 ; ~oe 2 ; : : : ; ~oe m ): It is an immediate consequence of an eigenvalue perturbation result of Stewart and Sun <ref> [10, Corollary IV.4.13] </ref> and Lemma 3.2 that ( m X [oe 2 i ] 2 kEk F = * 1=2 :(39) The main assumption of this section is that j J j = p; that is, Algorithm modchol correctly identifies the numerical rank of the matrix M . <p> We assign them specific values only to avoid an excess of notation.) Proof. The result is a straightforward consequence of Theorem V.2.8 of Stewart and Sun <ref> [10, p. 238] </ref>.
Reference: [11] <author> M. J. Todd, </author> <title> A Dantzig-Wolfe-like variant of Karmarkar's interior-point linear programming algorithm, </title> <journal> Operations Research, </journal> <volume> 38 (1990), </volume> <pages> pp. 1006-1018. </pages>
Reference-contexts: of A, and since the diagonal elements of D are all strictly positive, the coefficient matrix is invertible, and we have k cc k k (AD 2 A T ) 1 AD 2 k kX 1 k ki1 X aff S aff 1k: A result of Stewart [9] and Todd <ref> [11] </ref> states that the norm k (AD 2 A T ) 1 AD 2 k is bounded independently of D over the set of all positive definite diagonal matrices D (and therefore independently of x and s with (x; s) &gt; 0).
Reference: [12] <author> M. H. Wright, </author> <title> Some properties of the Hessian of the logarithmic barrier function, </title> <journal> Mathematical Programming, </journal> <volume> 67 (1994), </volume> <pages> pp. 265-295. </pages>
Reference-contexts: The informal analysis yields adequate insight into the typical performance of the algorithm, as our computational results in Section 6 demonstrate. A number of other papers on linear algebra operations in barrier and interior-point methods have appeared in recent years. Wright <ref> [12] </ref> has considered the Newton-logarithmic barrier method for general constrained optimization, in which the linear system to be solved for the Newton step is positive semidefinite and ill conditioned during later iterations. She uses a Cholesky factorization with diagonal pivoting to identify the subspace spanned by the active constraint Jacobian.
Reference: [13] <author> S. J. Wright, </author> <title> A path-following interior-point algorithm for linear and quadratic optimization problems, </title> <type> Preprint MCS-P401-1293, </type> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <month> December </month> <year> 1993. </year> <note> To appear in Annals of Operations Research. [14] , Stability of augmented system factorizations in interior-point methods, Preprint MCS-P446-0694, </note> <institution> Mathematics and Computer Science Division, Argonne National Laboratory, Argonne, Ill., </institution> <month> June </month> <year> 1994. </year> <note> Revised, July 1995. To appear in SIAM Journal of Matrix Analysis and Applications. [15] , Primal-Dual Interior-Point Methods, SIAM, </note> <institution> Philadelphia, </institution> <address> Pa, </address> <year> 1996. </year> <note> To appear. </note>
Reference-contexts: Finally, we set b = Ax fl and c = A T fl + s fl . The code was an implementation of the infeasible-interior-point algorithm described by Wright <ref> [13] </ref>. The details of this algorithm are unimportant; we need note only that its iterates satisfy the estimates (72) in exact arithmetic and that the algorithm takes steps along the affine scaling direction during its later iterations.
Reference: [16] <author> X. Xu, P. Hung, and Y. Ye, </author> <title> A simplified homogeneous and self-dual linear programming algorithm and its implementation. </title> <note> To appear in Annals of Operations Research, </note> <month> September </month> <year> 1993. </year>
Reference-contexts: Instead of crashing, most codes apply a "patch" to the algorithm to handle such pivots. The offending pivot element is sometimes replaced by a huge number, as in LIPSOL [17] or PCx [1]. In other codes such as IPMOS <ref> [16] </ref>, the pivot is replaced by a moderate number, but the corresponding right-hand side element is set to zero, as are the off-diagonal elements in the corresponding column of the Cholesky factor. <p> Implementation and Computational Results. Most interior-point codes use modified Cholesky algorithms with essentially the same properties as Algorithm modchol. They differ slightly, however, in the implementation. The IPMOS code of Xu, Hung, and Ye <ref> [16] </ref> replaces small pivot elements by 1 and fills out the corresponding column of the Cholesky factor with zeros and also inserts a zero in the right-hand side. The criterion for identifying a small pivot is not explained in the reference [16], but otherwise this strategy is equivalent to Algorithm modchol. <p> The IPMOS code of Xu, Hung, and Ye <ref> [16] </ref> replaces small pivot elements by 1 and fills out the corresponding column of the Cholesky factor with zeros and also inserts a zero in the right-hand side. The criterion for identifying a small pivot is not explained in the reference [16], but otherwise this strategy is equivalent to Algorithm modchol. Zhang's LIPSOL code [17] and the PCx code of Czyzyk, Mehrotra, and Wright [1] replace small pivots by a huge number|10 128 |but otherwise leave the Cholesky algorithm unchanged.
Reference: [17] <author> Y. Zhang, </author> <title> Solving large-scale linear programs by interior-point methods under the MATLAB enviroment, </title> <type> Technical Report TR96-01, </type> <institution> Department of Mathematics and Statistics, University of Maryland Baltimore County, Baltimore, Md, </institution> <year> 1996. </year> <month> 28 </month>
Reference-contexts: Instead of crashing, most codes apply a "patch" to the algorithm to handle such pivots. The offending pivot element is sometimes replaced by a huge number, as in LIPSOL <ref> [17] </ref> or PCx [1]. In other codes such as IPMOS [16], the pivot is replaced by a moderate number, but the corresponding right-hand side element is set to zero, as are the off-diagonal elements in the corresponding column of the Cholesky factor. <p> It is therefore possible to take advantage of the long-term development effort that has gone into designing such codes and their underlying algorithms. The recent codes LIPSOL <ref> [17] </ref> and PCx fl Mathematics and Computer Science Division, Argonne National Laboratory, 9700 South Cass Avenue, Argonne, IL 60439. This work was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Computational and Technology Research, U.S. <p> The criterion for identifying a small pivot is not explained in the reference [16], but otherwise this strategy is equivalent to Algorithm modchol. Zhang's LIPSOL code <ref> [17] </ref> and the PCx code of Czyzyk, Mehrotra, and Wright [1] replace small pivots by a huge number|10 128 |but otherwise leave the Cholesky algorithm unchanged. The net effect is, however, almost equivalent to Algorithm modchol and the triangular substitution procedure (25).
References-found: 14

