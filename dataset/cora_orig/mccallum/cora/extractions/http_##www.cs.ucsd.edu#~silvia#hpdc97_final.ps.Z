URL: http://www.cs.ucsd.edu/~silvia/hpdc97_final.ps.Z
Refering-URL: http://www.cs.ucsd.edu/~silvia/
Root-URL: http://www.cs.ucsd.edu
Pubnum: HPDC97  
Abstract: Most applications share the resources of networked workstations with other applications. Since system load can vary dramatically, allocation strategies that assume that resources have a constant availability and/or capability are unlikely to promote performance-efficient allocations in practice. In order to best allocate application tasks to machines, it is critical to provide a realistic model of the effects of contention on application performance. In this paper, we present a model that provides an estimate of the slowdown imposed by competing load on applications targeted to high-performance clusters and networks of workstations. The model provides a basis for predicting realistic communication and computation costs and is shown to achieve good accuracy for a set of scientific benchmarks commonly found in high-performance applications. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Atallah, C. Black, D. Marinescu, H. Siegel, and T. Casa-vant, </author> <title> Models and Algorithms for Coscheduling Compute-Intensive Tasks on a Network of Workstations, </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> vol. 16, </volume> <pages> pp. 319327, </pages> <year> 1992. </year>
Reference-contexts: In recent literature, machine workload has been used to parameterize the allocation of tasks to workstations in a network. However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., <ref> [1, 2, 4, 6] </ref>). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles [10, 15].
Reference: [2] <author> A. Beguelin, J. Dongarra, G. Geist, R. Manchek, and V. Sunderam, </author> <title> Graphical Development Tools for Network-Based Concurrent Supercomputing, </title> <booktitle> Proceedings of Supercomputing 91, </booktitle> <pages> pp. 435444. </pages>
Reference-contexts: In recent literature, machine workload has been used to parameterize the allocation of tasks to workstations in a network. However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., <ref> [1, 2, 4, 6] </ref>). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles [10, 15].
Reference: [3] <author> F. Berman, R. Wolski, S. Figueira, J. Schopf, and G. Shao, </author> <title> Application-Level Scheduling on Distributed Heterogeneous Networks, </title> <booktitle> in Proceedings of Supercomputing96 November 1996. </booktitle>
Reference-contexts: The benchmark measures the delay imposed on a CPU-bound application by i communication-bound applications that communicate with other nodes under decreasing bandwidth. At run time, the value for the average bandwidth available on the links used by competing applications can be predicted with statistical methods (the Network Weather Service <ref> [3, 14] </ref>, for example) and used to determine . Graph of for = 2. Each curve in the graph provides the value for the respective delay, which varies with the bandwidth ( w hen i = 1 and i = 2. <p> The benchmark sends 1024 messages with 1024 words each from one node to another and waits for the answer. The value for can be obtained at run-time with statistical methods employed by performance prediction tools, such as the Network Weather Service <ref> [3, 14] </ref>.
Reference: [4] <author> A. Bricker, M. Litzkow, and M. Livny, </author> <title> Condor Technical Summary, </title> <type> Technical Report #1069, </type> <institution> University of Wiscon-sin, Computer Science Department, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: In recent literature, machine workload has been used to parameterize the allocation of tasks to workstations in a network. However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., <ref> [1, 2, 4, 6] </ref>). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles [10, 15].
Reference: [5] <author> W. L. Briggs, </author> <title> A Multigrid Tutorial, </title> <institution> Society for Industrial and Applied Mathematics, </institution> <address> Philadelphia, Pennsylvania, </address> <year> 1987. </year>
Reference-contexts: I n t h i s p a p e r, w e de monstr ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark <ref> [5] </ref>, which solves Laplaces equation and was developed using PVM [13], a Matrix Multiplication benchmark [11], which was developed using KeLP [9] and MPI [12], and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions. <p> ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark <ref> [5] </ref>, which solves Laplaces equation and was developed using PVM [13], a Matrix Multiplication benchmark [11], which was developed using KeLP [9] and MPI [12], and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions. In the experiments performed, contention was generated by a synthetic load generator in which computation and communication cycles alternate.
Reference: [6] <author> H. Dietz, W. Cohen, and B. Grant, </author> <title> Would you run it here...or there? (AHS: Automatic Heterogeneous Supercomputing), </title> <booktitle> Proceedings of the International Conference on Parallel Processing, </booktitle> <volume> vol. II, </volume> <pages> pp. 217221, </pages> <month> August </month> <year> 1993. </year>
Reference-contexts: In recent literature, machine workload has been used to parameterize the allocation of tasks to workstations in a network. However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., <ref> [1, 2, 4, 6] </ref>). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles [10, 15].
Reference: [7] <author> A. C. Dusseau, R. H. Arpaci, and D. E. Culler, </author> <title> Effective Distributed Scheduling of Parallel Workloads, </title> <booktitle> in Proceedings of ACM SIGMETRICS96 , pp. </booktitle> <volume> 2536, </volume> <month> May </month> <year> 1996. </year>
Reference-contexts: , m o s t o p e r a t i n g s y s t e m s e x e c u t i n g o n workstations employ a priority-based scheduling strategy that reduces to a round-robin policy when the executing applications are CPU-bound <ref> [7] </ref>. Since we assume the applications to be coarse-grained, considering a round-robin loc al sche duler for timeshared systems is a reasonable assumption. We assume that communication between machines involves the transference of large bursts of data, requires data conversion, and uses TCP/IP via sockets.
Reference: [8] <author> S. M. Figueira and F. Berman, </author> <title> Modeling the Effects of Contention on the Performance of Heterogeneous Applications, </title> <booktitle> in Proceedings of the Fifth IEEE International Symposium on High Performance Distributed Computing August 1996. </booktitle>
Reference-contexts: The dependence on w orkload b ehav ior re e cts the f ac t tha t diff ere nt applications utilize different types of resources, and the requirements for these resources vary during the execution of each application. In <ref> [8] </ref>, we proposed a contention model based on system characteristics and workload behavior for two-machine networks. In this paper, we develop a contention model for application performance on high-performance clusters and networked workstations.
Reference: [9] <author> S. J. Fink, S. B. Baden, and S. R. Kohn, </author> <title> Flexible Communication Mechanisms for Dynamic Structured Applications, </title> <booktitle> in Proceedings of the Third International Workshop on Parallel Algorithms for Irregularly Structured Problems Santa Barbara, </booktitle> <address> CA, </address> <month> August </month> <year> 1996. </year>
Reference-contexts: a p e r, w e de monstr ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark [5], which solves Laplaces equation and was developed using PVM [13], a Matrix Multiplication benchmark [11], which was developed using KeLP <ref> [9] </ref> and MPI [12], and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions. In the experiments performed, contention was generated by a synthetic load generator in which computation and communication cycles alternate.
Reference: [10] <author> S. Leutenegger and X. Sun, </author> <title> Distributed Computing Feasibility in a Non-Dedicated Homogeneous Distributed System, </title> <type> NASA - ICASE Technical Report 93-65, </type> <month> September </month> <year> 1993. </year>
Reference-contexts: However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., [1, 2, 4, 6]). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles <ref> [10, 15] </ref>. We believe that a model to predict contention effects on application performance must reect both system characteristics and workload behavior.
Reference: [11] <editor> Matrix Multiply, </editor> <address> http://HTTP.CS.Berkeley.EDU/~demmel/ cs267. </address>
Reference-contexts: n t h i s p a p e r, w e de monstr ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark [5], which solves Laplaces equation and was developed using PVM [13], a Matrix Multiplication benchmark <ref> [11] </ref>, which was developed using KeLP [9] and MPI [12], and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions.
Reference: [12] <author> Message-Passing Interface Forum, </author> <title> MPI: A Message-Passing Interface Standard, </title> <institution> University of Tennessee, Knox-ville, TN, </institution> <month> June </month> <year> 1995. </year>
Reference-contexts: r, w e de monstr ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark [5], which solves Laplaces equation and was developed using PVM [13], a Matrix Multiplication benchmark [11], which was developed using KeLP [9] and MPI <ref> [12] </ref>, and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions. In the experiments performed, contention was generated by a synthetic load generator in which computation and communication cycles alternate.
Reference: [13] <author> V. Sunderam, </author> <title> PVM: A Framework for Parallel Distributed Computing, </title> <journal> Concurrency: Practice and Experience, </journal> <volume> vol. 2, </volume> <editor> n. </editor> <volume> 4, </volume> <pages> pp. 315339, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: I n t h i s p a p e r, w e de monstr ate our mode l on se rial ver sions of thr ee benchmarks commonly used in scientific applications: an SOR benchmark [5], which solves Laplaces equation and was developed using PVM <ref> [13] </ref>, a Matrix Multiplication benchmark [11], which was developed using KeLP [9] and MPI [12], and a Multigrid benchmark [5], which was also developed using KeLP and MPI. We have verified the model with various load conditions.
Reference: [14] <author> R. Wolski, </author> <title> Dynamically Forecasting Network Performance Using the Network Weather Service, </title> <type> UCSD CS Technical Report #CS96-494. </type>
Reference-contexts: The benchmark measures the delay imposed on a CPU-bound application by i communication-bound applications that communicate with other nodes under decreasing bandwidth. At run time, the value for the average bandwidth available on the links used by competing applications can be predicted with statistical methods (the Network Weather Service <ref> [3, 14] </ref>, for example) and used to determine . Graph of for = 2. Each curve in the graph provides the value for the respective delay, which varies with the bandwidth ( w hen i = 1 and i = 2. <p> The benchmark sends 1024 messages with 1024 words each from one node to another and waits for the answer. The value for can be obtained at run-time with statistical methods employed by performance prediction tools, such as the Network Weather Service <ref> [3, 14] </ref>.
Reference: [15] <author> X. Zhang and Y. Yan, </author> <title> A Framework of Performance Prediction of Parallel Computing on Non-dedicated Heterogeneous Networks of Workstations, </title> <booktitle> Proceedings of 1995 International Conference of Parallel Processing, </booktitle> <volume> vol. I, </volume> <pages> pp. 163167, </pages> <year> 1995. </year>
Reference-contexts: However, many allocation strategies do not consider load characteristics in the measurement of workload (e.g., [1, 2, 4, 6]). When load characteristics are considered, the system environment for each workstation is frequently limited to at most one compute-intensive task and local tasks, which alternate idle with compute intensive cycles <ref> [10, 15] </ref>. We believe that a model to predict contention effects on application performance must reect both system characteristics and workload behavior.
References-found: 15

