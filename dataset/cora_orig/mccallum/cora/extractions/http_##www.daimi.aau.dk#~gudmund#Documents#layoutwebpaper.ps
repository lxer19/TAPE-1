URL: http://www.daimi.aau.dk/~gudmund/Documents/layoutwebpaper.ps
Refering-URL: http://www.daimi.aau.dk/~gudmund/
Root-URL: http://www.daimi.aau.dk
Title: Layout Construction: A Case Study In Algorithm Engineering 1  
Author: Gudmund Skovbjerg Frandsen Jens Palsberg Erik Meineche Schmidt Steen Sjogaard 
Note: This version has no figures. While not out of print, complete version available as DAIMI PB-450, August 1993 from  
Affiliation: Computer Science Department, Aarhus University  Computer Science Department, Aarhus University  
Abstract: We design a system for generating newspaper layout proposals. The input to the system consists of editorial information (text, pictures, etc) and style information (non-editorial information that specifies the aesthetic appearance of a layout). We consider the automation of layout construction to pose two main problems. One problem consists in optimizing the layout with respect to the constraints and preferences specified in the style information. Another problem consists in finding a representation of the style information that both supports its use in the combinatorial optimization and supports its modification through high level user interaction and automatic inference from a database of examples. We propose a solution that combines heuristic search, randomization and neural networks. We have implemented a first version based on the bisection strategy a page is bisected recursively until the number of sub-divisions matches the number of articles to be placed. 
Abstract-found: 1
Intro-found: 1
Reference: [HAI-1] <institution> The Handbook of Artificial Intelligence, </institution> <note> Vol 1, </note> <editor> editors: A. Barr and E. A. Feigenbaum, </editor> <publisher> Pitman, </publisher> <year> 1981. </year>
Reference-contexts: The implementation is based on a specific strategy, bisection, for dividing a layout problem into sub-problems. We present various experimental results. 1.1 Abstract Algorithmic Solution 1. Optimization: We describe a kernel algorithm for the optimization. It is based on a standard heuristic state space search <ref> [HAI-1, ch. II.C3a] </ref>, which we augment with randomization and time distribution. The randomization is used as a way of getting nondeterministic behavior, i.e. the layout proposals generated by the system are independent of idiosyncrasies of the implementation, and multiple runs may result in several distinct layout proposals.
Reference: [PaSt82] <author> Papadimitriou, C. H. and Steiglitz, K., </author> <title> Algorithms and Complexity, </title> <publisher> Prentice Hall, </publisher> <year> 1982. </year>
Reference-contexts: The optimization problem consists in finding a high quality layout in L x within a specified time limit. In the standard search terminology, our term quality would be multiplied by 1 and called cost. Hence, we would be looking for a low cost feasible solution <ref> [PaSt82] </ref> 2 2. Handling of style information: The chosen representation of style in-formation must support its use as feasibility constraints and quality preferences for the optimization part.
Reference: [San91] <author> Sangiovanni-Vincentelli, A., </author> <title> Editors Foreword (Special issue on Simulated Annealing). </title> <note> Algorithmica 6 (1991) 295-301. </note>
Reference-contexts: However, the randomization may just as well have the reverse effect and produce a worse solution. Simulated annealing offers a theoretical framework for using randomization when transferring an initially poor solution into a final good solution <ref> [San91] </ref>. A future search kernel may use simulated annealing. 2.2 Time Distribution The time usage during the search is bounded by a search parameter s.
Reference: [SeRo86] <author> Sejnowski, T. J. and Rosenberg, C. R., </author> <title> 'Parallel networks that learn to pronounce English text,' in Complex Systems I (1987) 145-168. </title>
Reference-contexts: The bit was set precisely when more than one article was visible in the corresponding subfield. This representation is a 2-dimensional version of the representation that Sejnowski and Rosenberg applied in the NETtalk experiment <ref> [SeRo86] </ref>. A large series of experiments were conducted which resulted in one hundred different networks. The training set consisted of 732 layout examples, while another 208 randomly generated layouts comprised the test set.
Reference: [WaDa92] <author> Watkins, C.J.C.H. and Dayan P., Q-Learning. </author> <title> Technical note. </title> <booktitle> Machine Learning 8 (1992) 279-292. </booktitle> <volume> 16 17 18 19 20 21 22 23 24 25 26 27 28 29 </volume>
Reference-contexts: But we can not expect to have any examples of partial layouts together with their prophesied quality values at our disposal. Q-learning offers a model for learning behavior from delayed rewards, which may be appropriate in this case <ref> [WaDa92] </ref>. 3 Bisection, a Restricted Make Up Case To illustrate the working of the conceptual framework, including the search kernel that we have described so far, we have chosen a sub-case of page make up. We use the bisection search strategy.
References-found: 5

