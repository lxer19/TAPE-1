URL: http://www.eecs.umich.edu/~bnoble/papers/mobile95.ps
Refering-URL: http://www.eecs.umich.edu/~bnoble/papers/papers.html
Root-URL: http://www.eecs.umich.edu
Email: fbnoble,mprice,satyag@cs.cmu.edu  
Title: A Programming Interface for Application-Aware Adaptation in Mobile Computing  
Author: Brian D. Noble, Morgan Price, and M. Satyanarayanan 
Affiliation: School of Computer Science Carnegie Mellon University  
Abstract: Mobile clients face wide variations in network conditions and local resource availability when accessing remote data. Coping with this uncertainty requires the ability to retrieve and present data at varying degrees of fidelity. In this paper we present applicaton-aware adaptation as a solution to this problem. The essence of our solution is a collaborative partnership between applications and the operating system. We describe the Odyssey API for application-aware adaptation and demonstrate its use in accessing two types of data: video and maps. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <institution> APPLE COMPUTER, INC. Inside Macintosh: </institution> <address> QuickTime. </address> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1993. </year>
Reference-contexts: First, we wanted to code applications that might benefit from application-aware adaptation to the Odyssey API to test the efficacy of the interface. Second, we wished to explore the practical implications of the division between viceroy and warden. The two data types we have explored are QuickTime <ref> [1] </ref> and GRASS [7]. QuickTime is a multimedia encoding standard proposed by Apple Computer. GRASS is a public domain geographical information system. Along with some basic applications using these data types, we provide a simple control program to a user of the prototype.
Reference: [2] <author> DUCHAMP, D. </author> <title> Issues in Wireless Mobile Computing. </title> <booktitle> In Proceedings of the Third Workshop on Workstation Operating Systems (Key Biscayne, </booktitle> <address> FL, </address> <month> April </month> <year> 1992). </year>
Reference-contexts: As was discussed early in this paper, the constraints of mobile computing lead inevitably to the recognition that adaptivity is essential in any system that provides mobile data access. But although the general importance of adaptivity has been recognized by many researchers <ref> [2, 3, 6, 12, 13] </ref>, we are not aware of specific system designs, much less implementations, that support application aware adaptation. The work reported here thus represents a journey into uncharted waters.
Reference: [3] <author> FORMAN, G. H., AND ZAHORJAN, J. </author> <booktitle> The Challenges of Mobile Computing. IEEE Computer 27, </booktitle> <month> 4 (April </month> <year> 1994). </year>
Reference-contexts: As was discussed early in this paper, the constraints of mobile computing lead inevitably to the recognition that adaptivity is essential in any system that provides mobile data access. But although the general importance of adaptivity has been recognized by many researchers <ref> [2, 3, 6, 12, 13] </ref>, we are not aware of specific system designs, much less implementations, that support application aware adaptation. The work reported here thus represents a journey into uncharted waters.
Reference: [4] <author> HOWARD, J. H., KAZAR, M. L., MENEES, S. G., NICHOLS, D. A., SATYANARAYANAN, M., SIDEBOTHAM, R. N., AND WEST, M. J. </author> <title> Scale and Performance in a Distributed File System. </title> <journal> ACM Transactions on Computer Systems 6, </journal> <month> 1 (February </month> <year> 1988). </year>
Reference-contexts: Adding Types to the Operating System Odyssey provides a single, global namespace to its clients. A simple example of such a namespace is shown in Figure 6. This namespace is broken into subspaces called tomes, or typed volumes. Tomes are similar to volumes in AFS and Coda <ref> [11, 4, 9] </ref>. A tome carries with it a notion of type; all items in a tome are of the same type. A tome's type determines type-specific resources, operations, and dimensions of fidelity for items in that tome.
Reference: [5] <author> KISTLER, J. J., AND SATYANARAYANAN, M. </author> <title> Disconnected Operation in the Coda File System. </title> <journal> ACM Transactions on Computer Systems 10, </journal> <month> 1 (February </month> <year> 1992). </year>
Reference-contexts: It also means that there is no way to enforce limits on resource usage. At the other extreme, adaptivity is completely subsumed by the system. Although the feasibility of this approach has been demonstrated in systems such as Coda <ref> [5, 9] </ref>, there are limits to its applicability. In particular, the end-to-end argument [8] suggests that there will be circumstances where only an application can determine the best form of adaptation.
Reference: [6] <author> KULKARNI, D. C., BANERJI, A., CASEY, M. R., AND COHN, D. L. </author> <title> Information Access in Mobile Computing Environments. </title> <type> Tech. Rep. </type> <institution> TR-93-11, University of Notre Dame, Notre Dame, </institution> <year> 1993. </year>
Reference-contexts: As was discussed early in this paper, the constraints of mobile computing lead inevitably to the recognition that adaptivity is essential in any system that provides mobile data access. But although the general importance of adaptivity has been recognized by many researchers <ref> [2, 3, 6, 12, 13] </ref>, we are not aware of specific system designs, much less implementations, that support application aware adaptation. The work reported here thus represents a journey into uncharted waters.
Reference: [7] <author> MADRY, S. </author> <title> Geographical Resources Analysis Support System (GRASS), an Integrated Public Domain GIS and Image Processing System. </title> <booktitle> In GIS/LIS 1989 Proceedings (Orlando, </booktitle> <address> FL, </address> <month> November </month> <year> 1989). </year>
Reference-contexts: Second, we wished to explore the practical implications of the division between viceroy and warden. The two data types we have explored are QuickTime [1] and GRASS <ref> [7] </ref>. QuickTime is a multimedia encoding standard proposed by Apple Computer. GRASS is a public domain geographical information system. Along with some basic applications using these data types, we provide a simple control program to a user of the prototype.
Reference: [8] <author> SALTZER, J., REED, D., AND CLARK, D. </author> <title> End-To-End Arguments in System Design. </title> <journal> ACM Transactions on Computer Systems 2, </journal> <month> 4 (November </month> <year> 1984). </year>
Reference-contexts: At the other extreme, adaptivity is completely subsumed by the system. Although the feasibility of this approach has been demonstrated in systems such as Coda [5, 9], there are limits to its applicability. In particular, the end-to-end argument <ref> [8] </ref> suggests that there will be circumstances where only an application can determine the best form of adaptation. Unless the system is extended to incorporate specific knowledge about every application, there will be situations where adaptation by the system will be inadequate or even counter-productive.
Reference: [9] <author> SATYANARAYANAN, M., KISTLER, J. J., KUMAR, P., OKASAKI, M. E., SIEGEL, E. H., AND STEERE, D. C. Coda: </author> <title> A Highly Available File System for a Distributed Workstation Environment. </title> <journal> IEEE Transactions on Computers 39, </journal> <month> 4 (April </month> <year> 1990). </year>
Reference-contexts: It also means that there is no way to enforce limits on resource usage. At the other extreme, adaptivity is completely subsumed by the system. Although the feasibility of this approach has been demonstrated in systems such as Coda <ref> [5, 9] </ref>, there are limits to its applicability. In particular, the end-to-end argument [8] suggests that there will be circumstances where only an application can determine the best form of adaptation. <p> Adding Types to the Operating System Odyssey provides a single, global namespace to its clients. A simple example of such a namespace is shown in Figure 6. This namespace is broken into subspaces called tomes, or typed volumes. Tomes are similar to volumes in AFS and Coda <ref> [11, 4, 9] </ref>. A tome carries with it a notion of type; all items in a tome are of the same type. A tome's type determines type-specific resources, operations, and dimensions of fidelity for items in that tome.
Reference: [10] <author> SATYANARAYANAN, M., NOBLE, B., KUMAR, P., AND PRICE, M. </author> <title> Application-Aware Adaptation for Mobile Computing. Operating Systems Review 29, </title> <note> 1 (January 1995). Also available as Tech. Rep. </note> <institution> CMU-CS-94-183, Carnegie Mellon University, School of Computer Science. </institution>
Reference-contexts: We believe that such adaptation can best be performed by a collaborative partnership between the operating system and individual applications. We refer to this strategy as application-aware adaptation <ref> [10] </ref>. Application-aware adaptation characterizes the design space between two extremes. At one extreme, adaptivity is entirely the responsibility of individual applications. This means that there is no focal point in the system to resolve the potentially incompatible resource demands of individual applications.
Reference: [11] <author> SIDEBOTHAM, R. </author> <title> Volumes: The Andrew File System Data Structuring Primitive. In European Unix User Group Conference Proceedings (August 1986). </title> <note> Also available as Tech. Rep. </note> <institution> CMU-ITC-053, Carnegie Mel-lon University, Information Technology Center. </institution>
Reference-contexts: Adding Types to the Operating System Odyssey provides a single, global namespace to its clients. A simple example of such a namespace is shown in Figure 6. This namespace is broken into subspaces called tomes, or typed volumes. Tomes are similar to volumes in AFS and Coda <ref> [11, 4, 9] </ref>. A tome carries with it a notion of type; all items in a tome are of the same type. A tome's type determines type-specific resources, operations, and dimensions of fidelity for items in that tome.
Reference: [12] <author> THEIMER, M., DEMERS, A., AND WELCH, B. </author> <title> Operating System Issues for PDAs. </title> <booktitle> In Proceedings of the Fourth Workshop on Workstation Operating Systems (October 1993), IEEE. </booktitle>
Reference-contexts: As was discussed early in this paper, the constraints of mobile computing lead inevitably to the recognition that adaptivity is essential in any system that provides mobile data access. But although the general importance of adaptivity has been recognized by many researchers <ref> [2, 3, 6, 12, 13] </ref>, we are not aware of specific system designs, much less implementations, that support application aware adaptation. The work reported here thus represents a journey into uncharted waters.
Reference: [13] <author> WEISER, M. </author> <title> Some Computer Science Issues in Ubiquitous Computing. </title> <booktitle> Communictions of the ACM 36, </booktitle> <month> 7 (July </month> <year> 1993), </year> <pages> 75-84. </pages>
Reference-contexts: As was discussed early in this paper, the constraints of mobile computing lead inevitably to the recognition that adaptivity is essential in any system that provides mobile data access. But although the general importance of adaptivity has been recognized by many researchers <ref> [2, 3, 6, 12, 13] </ref>, we are not aware of specific system designs, much less implementations, that support application aware adaptation. The work reported here thus represents a journey into uncharted waters.
References-found: 13

