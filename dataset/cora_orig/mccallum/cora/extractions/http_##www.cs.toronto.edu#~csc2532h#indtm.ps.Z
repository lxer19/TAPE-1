URL: http://www.cs.toronto.edu/~csc2532h/indtm.ps.Z
Refering-URL: http://www.cs.toronto.edu/~csc2532h/
Root-URL: http://www.cs.toronto.edu
Email: email: @ai.toronto.edu  
Title: Embracing Causality in Specifying the Indeterminate Effects of Actions  
Author: Fangzhen Lin 
Address: Toronto, Canada M5S 3H5  
Affiliation: Department of Computer Science University of Toronto  
Note: Copyright c 1996 American Association for Artificial Intelligence. All rights reserved.  
Abstract: This paper makes the following two contributions to formal theories of actions: Showing that a causal minimization framework can be used effectively to specify the effects of indeterminate actions; and showing that for certain classes of such actions, regression, an effective computational mechanism, can be used to reason about them.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. Barel. </author> <title> Reasoning about actions: nondeterministic effects, constraints, and qualification. </title> <booktitle> In Proc. of IJCAI'95, </booktitle> <pages> pp. 2017-2023. </pages>
Reference-contexts: Related Work and Discussions Epistemologically, we have shown how the causal minimization framework of [5] can be used to specify the indeterminate effects of actions. Computationally, we have shown how goal regression can be used to reason about them. There have been other proposals in the literature (e.g. <ref> [1, 2, 3, 12] </ref>) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in [3] and [1] seem closest to ours. <p> There have been other proposals in the literature (e.g. [1, 2, 3, 12]) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in [3] and <ref> [1] </ref> seem closest to ours. As we mentioned in Section , the releases propositions of [3]: A releases F corresponds to the following axiom in our language: P oss (A; s) oe Caused (F; true; do (A; s)) _ Caused (F; false; do (A; s)): Regarding the work of [1], the <p> and <ref> [1] </ref> seem closest to ours. As we mentioned in Section , the releases propositions of [3]: A releases F corresponds to the following axiom in our language: P oss (A; s) oe Caused (F; true; do (A; s)) _ Caused (F; false; do (A; s)): Regarding the work of [1], the In (F ) and Out (F ) pred-icates there correspond to Caused (F; true; do (a; s)) and Caused (F; false; do (a; s)), respectively, in our language. However, the formalism of [3] is limited because no complex releases propositions are allowed. <p> However, the formalism of [3] is limited because no complex releases propositions are allowed. For instance, one cannot write expressions like (8a):a releases F $ a releases F 0 : The formalism of <ref> [1] </ref> is also limited because the action parameters of its In and Out predicates are not made explicit, thus cannot be quantified over. Finally, we want to remark on the auxiliary predicate Case. In this paper, we have used it entirely for computational purposes.
Reference: [2] <author> C. Boutilier and N. Friedman. </author> <title> Nondeterministic actions and the frame problem. </title> <booktitle> In Workign Notes of the AAAI Spring Symposium on Extending Theories of Action, </booktitle> <pages> pages 39-44, </pages> <year> 1995. </year>
Reference-contexts: Related Work and Discussions Epistemologically, we have shown how the causal minimization framework of [5] can be used to specify the indeterminate effects of actions. Computationally, we have shown how goal regression can be used to reason about them. There have been other proposals in the literature (e.g. <ref> [1, 2, 3, 12] </ref>) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in [3] and [1] seem closest to ours.
Reference: [3] <author> G. N. Kartha and V. Lifschitz. </author> <title> Action with indirect effects (preliminary report). </title> <booktitle> In Proc. of KR'94, </booktitle> <pages> pp. 341-350. </pages>
Reference-contexts: (black; f alse; do (drop; s))g: Notice that under the domain closure and unique names axiom (3) for truth values, the last axiom is equivalent to P oss (drop; s) oe (9v)Caused (black; v; do (drop; s)): This axiom is like the releases propositions in the action description language of <ref> [3] </ref>. Notice here the necessity of something like the predicate Caused. The corresponding sentence in terms of H: P oss (drop; s) oe fH (black; do (drop; s)) _ :H (black; do (drop; s))g is just a tautology. <p> Related Work and Discussions Epistemologically, we have shown how the causal minimization framework of [5] can be used to specify the indeterminate effects of actions. Computationally, we have shown how goal regression can be used to reason about them. There have been other proposals in the literature (e.g. <ref> [1, 2, 3, 12] </ref>) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in [3] and [1] seem closest to ours. <p> There have been other proposals in the literature (e.g. [1, 2, 3, 12]) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in <ref> [3] </ref> and [1] seem closest to ours. As we mentioned in Section , the releases propositions of [3]: A releases F corresponds to the following axiom in our language: P oss (A; s) oe Caused (F; true; do (A; s)) _ Caused (F; false; do (A; s)): Regarding the work of <p> To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in <ref> [3] </ref> and [1] seem closest to ours. As we mentioned in Section , the releases propositions of [3]: A releases F corresponds to the following axiom in our language: P oss (A; s) oe Caused (F; true; do (A; s)) _ Caused (F; false; do (A; s)): Regarding the work of [1], the In (F ) and Out (F ) pred-icates there correspond to Caused (F; true; do <p> However, the formalism of <ref> [3] </ref> is limited because no complex releases propositions are allowed.
Reference: [4] <author> V. Lifschitz. </author> <title> Computing circumscription. </title> <booktitle> In Proc. of IJCAI'85, </booktitle> <pages> pp. 121-127. </pages>
Reference-contexts: Let T ea be a given set of the effect axioms of the forms (10) and (11). Then the conjunction of the sentences in T ea is separable (Lifschtz <ref> [4] </ref>) w.r.t. Caused. Therefore, according to a result in [4], Circum (T ea ; Caused), the circumscription of Caused in T ea , is computable by a first-order sentence. <p> Let T ea be a given set of the effect axioms of the forms (10) and (11). Then the conjunction of the sentences in T ea is separable (Lifschtz <ref> [4] </ref>) w.r.t. Caused. Therefore, according to a result in [4], Circum (T ea ; Caused), the circumscription of Caused in T ea , is computable by a first-order sentence. In general, this sentence, together with D una , will yield a disjunction of successor state axioms, which is often large and cumbersome to reason with.
Reference: [5] <author> F. Lin. </author> <title> Embracing causality in specifying the indirect effects of actions. </title> <booktitle> In Proc. of IJCAI'95, </booktitle> <pages> pp. 1985-1993. </pages>
Reference-contexts: For instance, these specifications may be part of the inputs to a program synthesizer. Our contributions in this paper are two folds. We first show that the causal minimization framework of (Lin <ref> [5] </ref>) can be used effectively to specify the effects of indeterminate actions. <p> So if white is a fluent, then white (s) is a shorthand for H (white; s). Minimizing Causation The approach of (Lin <ref> [5] </ref>) to specifying the effects of actions can be summarized as follows: 1. Formalize the causal laws and constraints of the do main by a set T of axioms. 2. Circumscribe (minimize) Caused in T [ [ D una [ f1; 2; 3g with all other predicates fixed. 3. <p> Lin <ref> [5] </ref> also discusses how the action preconditions can be generated. <p> Finally, notice that Theorem 3 and Theorem 4 can be generalized to temporal projections with sequences of actions. The Ramification Problem Although the framework of <ref> [5] </ref> was introduced for handling the ramification problem, we have so far ignore this problem in this paper. We now show how the indirect effects of actions can be represented. Consider again our checkerboard example. <p> Related Work and Discussions Epistemologically, we have shown how the causal minimization framework of <ref> [5] </ref> can be used to specify the indeterminate effects of actions. Computationally, we have shown how goal regression can be used to reason about them. There have been other proposals in the literature (e.g. [1, 2, 3, 12]) for specifying the effects of indeterminate actions.
Reference: [6] <author> F. Lin and R. Reiter. </author> <title> State constraints revisited. </title> <journal> J. of Logic and Computation, </journal> <volume> 4(5) </volume> <pages> 655-678, </pages> <year> 1994. </year>
Reference-contexts: In the following, we shall denote this set of unique names axioms by D una . * The set of foundational axioms in <ref> [6] </ref> for the discrete situation calculus. These axioms characterize the structure of the space of situations.
Reference: [7] <editor> F. Lin and R. Reiter. Forget it! In R. Greiner and D. Subramanian, editors, </editor> <booktitle> Working Notes of AAAI Fall Symposium on Relevance, </booktitle> <pages> pp. 154-159, </pages> <year> 1994. </year>
Reference-contexts: As it turns out, this is the same as saying that T 2 is the result of forgetting P in T 1 according to (Lin and Reiter <ref> [7] </ref>), and according to a result there, when T 1 is finite, this is the same as saying that T 2 is logically equivalent to the sentence (9P ): V T 1 , where V T 1 is the conjunction of the sentences in T 1 5 .
Reference: [8] <author> J. McCarthy and P. Hayes. </author> <title> Some philosophical problems from the standpoint of artificial intelligence. </title> <editor> In B. Meltzer and D. Michie, editors, </editor> <booktitle> Machine Intelligence 4, </booktitle> <pages> pages 463-502. </pages> <publisher> Edinburgh University Press, Edinburgh, </publisher> <year> 1969. </year>
Reference-contexts: Logical Preliminaries We shall investigate the problem in the framework of the situation calculus <ref> [8] </ref>. Our version of it employs a many sorted second-order language. We assume the following sorts: situation for situations, action for actions, fluent for propositional fluents, truth-value for truth values true and f alse, and object for everything else.
Reference: [9] <author> E. P. Pednault. </author> <title> Synthesizing plans that contain actions with context-dependent effects. </title> <journal> Computational Intelligence, </journal> <volume> 4 </volume> <pages> 356-372, </pages> <year> 1988. </year>
Reference-contexts: In general, this sentence, together with D una , will yield a disjunction of successor state axioms, which is often large and cumbersome to reason with. In particular, it is not clear how to compute regression, a computa-tionally effective mechanism for tasks such as planning and temporal projection <ref> [11, 9, 10] </ref>, w.r.t. such disjunctions. A Transformation To overcome this, we introduce a new ternary predicate Case of the arity object fi action fi situation, and a distinguished constant 0 and a unary function succ over sort object.
Reference: [10] <author> R. Reiter. </author> <title> The frame problem in the situation calculus: a simple solution (sometimes) and a completeness result for goal regression. </title> <editor> In V. Lifschitz, editor, </editor> <booktitle> Artificial Intelligence and Mathematical Theory of Computation: Papers in Honor of John McCarthy, </booktitle> <pages> pages 418-420. </pages> <publisher> Academic Press, </publisher> <address> San Diego, CA, </address> <year> 1991. </year>
Reference-contexts: Lin [5] also discusses how the action preconditions can be generated. However, in this paper we shall not concern us with this problem, but assume, following (Re-iter <ref> [10] </ref>), that for each action A (~x), we are given an action precondition axiom of the form: P oss (A (~x); s) j A (~x; s); where A is a formula that does not quantify over situation variables, and does not mention any situation dependent atomic formulas except those of the <p> = f alse) _ (p = black ^ v = f alse)] _ a = drop ^ [(p = holding ^ v = f alse) _ p = white _ p = black]: From this and the generic frame axiom (4), we can deduce the following successor state axiom (Reiter <ref> [10] </ref>) for holding: P oss (a; s) oe holding (do (a; s)) j a = pickup _ (holding (s) ^ a 6= drop): We don't get successor state axioms for white and black. <p> In general, this sentence, together with D una , will yield a disjunction of successor state axioms, which is often large and cumbersome to reason with. In particular, it is not clear how to compute regression, a computa-tionally effective mechanism for tasks such as planning and temporal projection <ref> [11, 9, 10] </ref>, w.r.t. such disjunctions. A Transformation To overcome this, we introduce a new ternary predicate Case of the arity object fi action fi situation, and a distinguished constant 0 and a unary function succ over sort object. <p> Our claim is that, un der some reasonable conditions, D ss captures all the information about the truth values of the fluents in Cirum (T 0 ea ; Caused) [ f1; 2; 4g. More precisely, we have: Theorem 2 Under the assumption that the following consistency condition <ref> [10] </ref> is satisfied for each fluent F : D una [ D ap [ D case j= (8~x; a; s):P oss (a; s) oe :(fl + F (~x; a; s)); the theory [ D una [ D ap [ fCircum (T 0 ea ; Casued)g [ D case [ f1; 2; <p> So the following is the only nontrivial constraint about Case: Case (1; drop; s) _ _ Case (2; drop; 2) _ _ Case (3; drop; 3): Regression and Some of Its Properties Once we have a successor state axiom for each fluent, regression becomes syntactic substitutions <ref> [10] </ref>: for any formula '(s) that does not quantify over situation, and action ff, the regression of a formula '(s) over ff, written R ('(s); ff), is the result of replacing in '(s) every atomic formula of the form H (F ( ~ t); s) by F ( ~ t; ff;
Reference: [11] <author> R. Waldinger. </author> <title> Achieving several goals simultaneously. </title> <editor> In E. Elcock and D. Michie, editors, </editor> <booktitle> Machine Intelligence, </booktitle> <pages> pages 94-136. </pages> <publisher> Ellis Horwood, Edinburgh, </publisher> <address> Scot-land, </address> <year> 1977. </year>
Reference-contexts: In general, this sentence, together with D una , will yield a disjunction of successor state axioms, which is often large and cumbersome to reason with. In particular, it is not clear how to compute regression, a computa-tionally effective mechanism for tasks such as planning and temporal projection <ref> [11, 9, 10] </ref>, w.r.t. such disjunctions. A Transformation To overcome this, we introduce a new ternary predicate Case of the arity object fi action fi situation, and a distinguished constant 0 and a unary function succ over sort object.
Reference: [12] <author> Y. Zhang. </author> <title> Reasoning About Persistence: A Unified Principle for State Change. </title> <type> PhD thesis, </type> <institution> Department of Computer Science, Sydney University, </institution> <address> Sydney, Aus-tralia, </address> <year> 1994. </year>
Reference-contexts: Related Work and Discussions Epistemologically, we have shown how the causal minimization framework of [5] can be used to specify the indeterminate effects of actions. Computationally, we have shown how goal regression can be used to reason about them. There have been other proposals in the literature (e.g. <ref> [1, 2, 3, 12] </ref>) for specifying the effects of indeterminate actions. To the best of our knowledge, the computational contribution of this work is novel. Among the extant approaches, the ones in [3] and [1] seem closest to ours.
References-found: 12

