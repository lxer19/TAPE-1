URL: ftp://ftp.cs.washington.edu/pub/ai/sgp-aaai98.ps
Refering-URL: http://www.cs.washington.edu/homes/corin/resume.html
Root-URL: 
Email: fweld, coring@cs.washington.edu  de2smith@ptolemy.arc.nasa.gov  
Title: Extending Graphplan to Handle Uncertainty Sensing Actions  
Author: Daniel S. Weld Corin R. Anderson David E. Smith 
Address: Box 352350 Seattle, WA 98195-2350 USA  Mail Stop 269-2 Moffett Field, CA 94035 USA  
Affiliation: Department of Computer Science Engineering University of Washington,  Nasa Ames Research Center  
Note: To appear in AAAI-98 1  Furthermore, SGP is relatively fast.  
Abstract: If an agent does not have complete information about the world-state, it must reason about alternative possible states of the world and consider whether any of its actions can reduce the uncertainty. Agents controlled by a contingent planner seek to generate a robust plan, that accounts for and handles all eventualities, in advance of execution. Thus a contingent plan may include sensing actions which gather information that is later used to select between different plan branches. Unfortunately, previous contingent planners suffered defects such as confused semantics, incompleteness, and inefficiency. In this paper we describe SGP, a descendant of Graphplan that solves contingent planning problems. SGP distinguishes between actions that sense the value of an unknown proposition from those that change its value. SGP does not suffer from the forms of incompleteness displayed by CNLP and Cassandra. 
Abstract-found: 1
Intro-found: 1
Reference: [ Blum & Furst, 1997 ] <author> Blum, A., and Furst, M. </author> <year> 1997. </year> <title> Fast planning through planning graph analysis. </title> <journal> J. Artificial Intelligence 90(1-2):281-300. </journal>
Reference: [ Draper, Hanks, & Weld, 1994 ] <author> Draper, D., Hanks, S., and Weld, D. </author> <year> 1994. </year> <title> Probabilistic planning with information gathering and contingent execution. </title> <booktitle> In Proc. 2nd Intl. Conf. AI Planning Systems. </booktitle>
Reference-contexts: PLINTH [ Goldman & Boddy, 1994 ] is a total-order planner akin to CNLP. None of these systems could cope with uncertainty if sensing actions were unavailable | even if a working (conformant) plan existed. The probabilistic C-Buridan planner <ref> [ Draper, Hanks, & Weld, 1994 ] </ref> overcame this limitation and in addition incorporated an elegant sensor model which accounted for noisy sensors.
Reference: [ Etzioni et al., 1992 ] <author> Etzioni, O., Hanks, S., Weld, D., Draper, D., Lesh, N., and Williamson, M. </author> <year> 1992. </year> <title> An approach to planning with incomplete information. </title> <booktitle> In Proc. 3rd Int. Conf. on Principles of Knowledge Representation and Reasoning, </booktitle> <pages> 115-125. </pages>
Reference-contexts: introduction of conditioning, but it assumed free sensing (i.e., it assumed the agent always knew the result of nondeterministic actions once they were performed). UWL <ref> [ Etzioni et al., 1992 ] </ref> formalized the notion of observational actions using runtime variables, and provided an algorithm for generating contingent plans. [ Gene-sereth & Nourbakhsh, 1993 ] described techniques for speeding world-space search given incomplete information. <p> We would also like to model noisy sensors ala C-Buridan. A different thread would be to extend SGP to handle sensory actions that use runtime variables <ref> [ Etzioni et al., 1992 ] </ref> . There are many optimizations to be explored, and we seek to run more experiments.
Reference: [ Fagin et al., 1995 ] <author> Fagin, R., Halpern, J., Moses, Y., and Vardi, M. </author> <year> 1995. </year> <title> Reasoning about Knowledge. </title> <address> Cambridge, Mass.: </address> <publisher> MIT Press. </publisher>
Reference: [ Gazen & Knoblock, 1997 ] <author> Gazen, B., and Knoblock, C. </author> <year> 1997. </year> <title> Combining the expressivity of UCPOP with the efficiency of Graphplan. </title> <booktitle> In Proc. 4th European Conference on Planning. </booktitle>
Reference: [ Genesereth & Nourbakhsh, 1993 ] <author> Genesereth, M., and Nourbakhsh, I. </author> <year> 1993. </year> <title> Time-saving tips for problem solving with incomplete information. </title> <booktitle> In Proc. 11th Nat. Conf. AI, </booktitle> <pages> 724-730. </pages>
Reference: [ Goldman & Boddy, 1994 ] <author> Goldman, R. P., and Boddy, M. S. </author> <year> 1994. </year> <title> Conditional Linear Planning. </title> <booktitle> In Proc. 2nd Intl. Conf. AI Planning Systems, </booktitle> <pages> 80-85. </pages>
Reference-contexts: Cassandra [ Pryor & Collins, 1996 ] was a fully-implemented contingent planner that distinguished between sensing actions and actions that have uncertain outcomes; in addition Cassandra allowed operators with conditional effects. PLINTH <ref> [ Goldman & Boddy, 1994 ] </ref> is a total-order planner akin to CNLP. None of these systems could cope with uncertainty if sensing actions were unavailable | even if a working (conformant) plan existed.
Reference: [ Kaelbling, 1988 ] <author> Kaelbling, L. P. </author> <year> 1988. </year> <title> Goals as parallel program specifications. </title> <booktitle> In Proc. 7th Nat. Conf. AI. </booktitle> <publisher> Mor-gan Kaufmann. </publisher>
Reference: [ Koehler et al., 1997 ] <author> Koehler, J., Nebel, B., Hoffmann, J., and Dimopoulos, Y. </author> <year> 1997. </year> <title> Extending planning graphs to an ADL subset. </title> <booktitle> In Proc. 4th European Conference on Planning. </booktitle>
Reference: [ McDermott, 1987 ] <author> McDermott, D. </author> <year> 1987. </year> <title> A critique of pure reason. </title> <booktitle> Computational Intelligence 3 </booktitle> <pages> 151-160. </pages>
Reference: [ Mittal & Falkenhainer, 1990 ] <author> Mittal, S., and Falkenhainer, B. </author> <year> 1990. </year> <title> Dynamic constraint satisfaction problems. </title> <booktitle> In Proc. 8th Nat. Conf. AI, </booktitle> <pages> 25-32. </pages>
Reference: [ Peot & Smith, 1992 ] <author> Peot, M., and Smith, D. </author> <year> 1992. </year> <title> Conditional Nonlinear Planning. </title> <booktitle> In Proc. 1st Intl. Conf. AI Planning Systems, </booktitle> <pages> 189-197. </pages>
Reference: [ Pryor & Collins, 1996 ] <author> Pryor, L., and Collins, G. </author> <year> 1996. </year> <title> Planning for contingencies: A decision-based approach. </title> <journal> J. Artificial Intelligence Research. </journal>
Reference-contexts: UWL [ Etzioni et al., 1992 ] formalized the notion of observational actions using runtime variables, and provided an algorithm for generating contingent plans. [ Gene-sereth & Nourbakhsh, 1993 ] described techniques for speeding world-space search given incomplete information. Cassandra <ref> [ Pryor & Collins, 1996 ] </ref> was a fully-implemented contingent planner that distinguished between sensing actions and actions that have uncertain outcomes; in addition Cassandra allowed operators with conditional effects. PLINTH [ Goldman & Boddy, 1994 ] is a total-order planner akin to CNLP.
Reference: [ Schoppers, 1987 ] <author> Schoppers, M. </author> <year> 1987. </year> <title> Universal plans for reactive robots in unpredictable environments. </title> <booktitle> In Proc. 10th Int. Joint Conf. AI, </booktitle> <pages> 1039-1046. </pages>
Reference: [ Smith & Weld, 1998 ] <author> Smith, D., and Weld, D. </author> <year> 1998. </year> <title> Con-formant Graphplan. </title> <booktitle> In Proc. 15th Nat. Conf. AI. </booktitle>
Reference: [ Warren, 1976 ] <author> Warren, D. </author> <year> 1976. </year> <title> Generating Conditional Plans and Programs. </title> <booktitle> In Proceedings of AISB Summer Conference, </booktitle> <pages> 344-354. </pages>
References-found: 16

