URL: http://www.csl.sri.com/~gong/papers/optimal-password.ps.gz
Refering-URL: http://www.csl.sri.com/~gong/papers/pubs95.html
Root-URL: 
Email: (gong@csl.sri.com)  
Title: Optimal Authentication Protocols Resistant to Password Guessing Attacks  
Author: Li Gong 
Address: Menlo Park, California 94025, U.S.A.  
Affiliation: SRI International Computer Science Laboratory  
Abstract: Users are typically authenticated by their passwords. Because people are known to choose convenient passwords, which tend to be easy to guess, authentication protocols have been developed that protect user passwords from guessing attacks. These proposed protocols, however, use more messages and rounds than those protocols that are not resistant to guessing attacks. This paper gives new protocols that are resistant to guessing attacks and also optimal in both messages and rounds, thus refuting the previous belief that protection against guessing attacks makes an authentication protocol inherently more expensive. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Bellovin and M. Merritt. </author> <title> Encrypted Key Exchange: Password-Based Protocols Secure Against Dictionary Attacks. </title> <booktitle> In Proceedings of the IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 72-84, </pages> <address> Oakland, California, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks <ref> [8, 6, 1, 2] </ref>, although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5]. <p> Finally, A completes the handshake by sending message 3. The security argument is similar to those for the three-party protocol in Section 3. This protocol is more efficient than those previously proposed that use five messages <ref> [1, 6] </ref>. Our protocol is in fact optimal because three messages and three rounds are lower bounds proven for nonce-based protocols that carry out only handshakes [4]. It is easy to modify the protocol so that both clients contribute to the selection of the session key. <p> To use timestamps in later stages of the protocol does not increase protocol efficiency either, because by then all parties will have the chance to exchange nonces (piggybacked on earlier messages). Moreover, current techniques for protecting passwords <ref> [1, 6] </ref> all require that a client, before receiving the session key, must either generate and send a public key (to the other client) or send a message to the server encrypted with the server's public key. <p> party, if either (or both) client, instead of the server, chooses the session key, then it is not difficult to check that using timestamps can reduce the numbers of messages and rounds to the theoretical lower bounds [4]. 8 Related Work Gong et al. [6, 8] and Bellovin and Merritt <ref> [1, 2] </ref> developed the first authentication protocols that are resistant to password guessing attacks. Gong [4, 5] and Yahalom [11], among others, have investigated the design of optimal authentication protocols. Tsudik and Van Herreweghen suggested protocol modifications in order to reduce the amount of encryption [10].
Reference: [2] <author> S. Bellovin and M. Merritt. </author> <title> Augmented Encrypted Key Exchange: A Password-Based Protocol Secure Against Dictionary Attacks and Password File Compromise. </title> <booktitle> In Proceedings of the 1st ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 244-250, </pages> <address> Fairfax, Vir-ginia, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks <ref> [8, 6, 1, 2] </ref>, although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5]. <p> party, if either (or both) client, instead of the server, chooses the session key, then it is not difficult to check that using timestamps can reduce the numbers of messages and rounds to the theoretical lower bounds [4]. 8 Related Work Gong et al. [6, 8] and Bellovin and Merritt <ref> [1, 2] </ref> developed the first authentication protocols that are resistant to password guessing attacks. Gong [4, 5] and Yahalom [11], among others, have investigated the design of optimal authentication protocols. Tsudik and Van Herreweghen suggested protocol modifications in order to reduce the amount of encryption [10].
Reference: [3] <author> D.C. Feldmeier and P.R. Karn. </author> <title> UNIX Password Security Ten Years Later. </title> <booktitle> In Proceedings of Crypto'89, volume 435 of Lecture Notes in Computer Science, </booktitle> <pages> pages 44-63. </pages> <publisher> Springer-Verlag, </publisher> <year> 1989. </year>
Reference-contexts: passwords that are vulnerable to dictionary attacks or guessing attacks [9], while all available evidence suggests that forcing people to choose and remember good passwords those that tend to be long character strings including both Roman letters and digits - is unworkable because such well-chosen passwords are also quite unmemorable <ref> [3, 7] </ref>. Authentication protocols have been proposed that are resistant to password guessing attacks [8, 6, 1, 2], although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5].
Reference: [4] <author> L. Gong. </author> <title> Lower Bounds on Messages and Rounds for Network Authentication Protocols. </title> <booktitle> In Proceedings of the 1st ACM Conference on Computer and Communications Security, </booktitle> <pages> pages 26-37, </pages> <address> Fair-fax, Virginia, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks [8, 6, 1, 2], although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords <ref> [4, 5] </ref>. For example, it is proven that the optimal mutual authentication (with handshake and using nonces for challenge and response) uses five messages [4], while the Nonce Protocol uses seven messages [6]. <p> For example, it is proven that the optimal mutual authentication (with handshake and using nonces for challenge and response) uses five messages <ref> [4] </ref>, while the Nonce Protocol uses seven messages [6]. It was thought that such increased cost is inherent, and in particular, is because the server must decide if a client request is fresh before giving a reply otherwise, guessing attack can materialize [6]. <p> These do not help him in compromising a future session key k 00 or in guessing the password Ka. The optimality of the protocol is easier to see it uses five messages, reaching the proven lower bound <ref> [4] </ref>. (More detailed definitions and terminologies related to optimality can be found in our previous publications [4, 5].) It is also simple to re-arrange the messages so that it uses four rounds, again a proven lower bound, as shown in Table 4. 1. <p> The optimality of the protocol is easier to see it uses five messages, reaching the proven lower bound [4]. (More detailed definitions and terminologies related to optimality can be found in our previous publications <ref> [4, 5] </ref>.) It is also simple to re-arrange the messages so that it uses four rounds, again a proven lower bound, as shown in Table 4. 1. <p> This protocol is more efficient than those previously proposed that use five messages [1, 6]. Our protocol is in fact optimal because three messages and three rounds are lower bounds proven for nonce-based protocols that carry out only handshakes <ref> [4] </ref>. It is easy to modify the protocol so that both clients contribute to the selection of the session key. <p> Rearranging the messages can yield a four-round protocol, as done in Section 3. These protocols are thus optimal because they meet the lower bounds of the numbers of messages and rounds <ref> [4] </ref>. 7 Do Timestamps Improve Protocol Efficiency? In this section, we discuss why the use of times-tamps may not help to make the protocols more efficient. In general, the availability of synchronized clocks and the use of timestamps often can reduce the numbers of messages and rounds for authentication protocols. <p> In general, the availability of synchronized clocks and the use of timestamps often can reduce the numbers of messages and rounds for authentication protocols. For example, an optimal mutual authentication protocol assuming synchronized clocks uses four messages or three rounds, cheaper than nonce-based protocols <ref> [4] </ref>. Thus, a question remains as to whether the efficiency of the protocols in Sections 3, 5, and 6 can be further improved if timestamps are used. <p> We can further argue for this conjecture from another angle. Suppose timestamps do help, and because the difference in lower bounds between timestamp-based and nonce-based protocols is only one message or one round <ref> [4, 5] </ref>, then we can deduce that three messages are sufficient for both A and B to receive the session key from the server. <p> Nevertheless, in the case with a trusted third party, if either (or both) client, instead of the server, chooses the session key, then it is not difficult to check that using timestamps can reduce the numbers of messages and rounds to the theoretical lower bounds <ref> [4] </ref>. 8 Related Work Gong et al. [6, 8] and Bellovin and Merritt [1, 2] developed the first authentication protocols that are resistant to password guessing attacks. Gong [4, 5] and Yahalom [11], among others, have investigated the design of optimal authentication protocols. <p> Gong <ref> [4, 5] </ref> and Yahalom [11], among others, have investigated the design of optimal authentication protocols. Tsudik and Van Herreweghen suggested protocol modifications in order to reduce the amount of encryption [10]. Their techniques, including their use of user-generated encryption keys, potentially can also reduce the number of messages.
Reference: [5] <author> L. Gong. </author> <title> Efficient Network Authentication Protocols: Lower Bounds and Optimal Implementations. </title> <type> Technical Report SRI-CSL-94-15, </type> <institution> Computer Science Laboratory, SRI International, </institution> <address> Menlo Park, California, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks [8, 6, 1, 2], although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords <ref> [4, 5] </ref>. For example, it is proven that the optimal mutual authentication (with handshake and using nonces for challenge and response) uses five messages [4], while the Nonce Protocol uses seven messages [6]. <p> The optimality of the protocol is easier to see it uses five messages, reaching the proven lower bound [4]. (More detailed definitions and terminologies related to optimality can be found in our previous publications <ref> [4, 5] </ref>.) It is also simple to re-arrange the messages so that it uses four rounds, again a proven lower bound, as shown in Table 4. 1. <p> Note that the server relays B's nonce rb to A in message 3. An earlier proof (Case 8, NB+AH+SO <ref> [5] </ref>) applies, which shows that it is impossible to design a protocol with five messages and four rounds. Note that a lot of replayed messages may overload the authentication server. This does not necessarily pose a security threat, unless we consider cryptanalysis (on the server's responses) a significant problem. <p> We can further argue for this conjecture from another angle. Suppose timestamps do help, and because the difference in lower bounds between timestamp-based and nonce-based protocols is only one message or one round <ref> [4, 5] </ref>, then we can deduce that three messages are sufficient for both A and B to receive the session key from the server. <p> Gong <ref> [4, 5] </ref> and Yahalom [11], among others, have investigated the design of optimal authentication protocols. Tsudik and Van Herreweghen suggested protocol modifications in order to reduce the amount of encryption [10]. Their techniques, including their use of user-generated encryption keys, potentially can also reduce the number of messages.
Reference: [6] <author> L. Gong, T.M.A. Lomas, R.M. Needham, and J.H. Saltzer. </author> <title> Protecting Poorly Chosen Secrets from Guessing Attacks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5) </volume> <pages> 648-656, </pages> <month> June </month> <year> 1993. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks <ref> [8, 6, 1, 2] </ref>, although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5]. <p> For example, it is proven that the optimal mutual authentication (with handshake and using nonces for challenge and response) uses five messages [4], while the Nonce Protocol uses seven messages <ref> [6] </ref>. It was thought that such increased cost is inherent, and in particular, is because the server must decide if a client request is fresh before giving a reply otherwise, guessing attack can materialize [6]. <p> nonces for challenge and response) uses five messages [4], while the Nonce Protocol uses seven messages <ref> [6] </ref>. It was thought that such increased cost is inherent, and in particular, is because the server must decide if a client request is fresh before giving a reply otherwise, guessing attack can materialize [6]. <p> We now summarize the basic techniques for protecting passwords from guessing attacks. (More technical details can be found in an earlier paper <ref> [6] </ref>.) Suppose A registers a password k2 at server S, and A knows the public key of S, k1. (The case of A not knowing S's public key can be handled easily by a simple extension [6].) Then, suppose that A asks S a question represented by the number n, and <p> passwords from guessing attacks. (More technical details can be found in an earlier paper <ref> [6] </ref>.) Suppose A registers a password k2 at server S, and A knows the public key of S, k1. (The case of A not knowing S's public key can be handled easily by a simple extension [6].) Then, suppose that A asks S a question represented by the number n, and expects to get an answer in the form of f (n), where f () can be a well known function. The protocol is shown in Table 1. 1. <p> If the attacker attempts to use a guessed password in an online transaction, then a failed guess can be detected and logged. Based on these basic techniques, a protocol using nonces has been developed <ref> [6] </ref>, as shown in Table 2. Here, Ka and Kb are A's and B's passwords respectively. Ks is server's public key. This protocol is adapted from the Compact Protocol that uses times tamps [6]. <p> Based on these basic techniques, a protocol using nonces has been developed <ref> [6] </ref>, as shown in Table 2. Here, Ka and Kb are A's and B's passwords respectively. Ks is server's public key. This protocol is adapted from the Compact Protocol that uses times tamps [6]. The modification is to let A (and also B) obtain a freshness identifier ns (a nonce in this case) from the server S (messages 1 and 2). <p> However, to reconstruct message 1, he must also guess the value of ca (the confounder <ref> [6] </ref>), which is assumed to be chosen at random from a large space and thus infeasible to guess by exhaustive search. <p> Finally, A completes the handshake by sending message 3. The security argument is similar to those for the three-party protocol in Section 3. This protocol is more efficient than those previously proposed that use five messages <ref> [1, 6] </ref>. Our protocol is in fact optimal because three messages and three rounds are lower bounds proven for nonce-based protocols that carry out only handshakes [4]. It is easy to modify the protocol so that both clients contribute to the selection of the session key. <p> If the clients cannot be assumed to have this knowledge, we can add an extra round of initial exchange to obtain a "secret public key" protocol <ref> [6] </ref>. 2. S ! A : fKsg Ka Alternatively, if the clients can generate public keys in real time, then we can use the technique in Section 5 to obtain a more efficient "secret public key" protocol, as shown in Table 7. 1. <p> To use timestamps in later stages of the protocol does not increase protocol efficiency either, because by then all parties will have the chance to exchange nonces (piggybacked on earlier messages). Moreover, current techniques for protecting passwords <ref> [1, 6] </ref> all require that a client, before receiving the session key, must either generate and send a public key (to the other client) or send a message to the server encrypted with the server's public key. <p> the case with a trusted third party, if either (or both) client, instead of the server, chooses the session key, then it is not difficult to check that using timestamps can reduce the numbers of messages and rounds to the theoretical lower bounds [4]. 8 Related Work Gong et al. <ref> [6, 8] </ref> and Bellovin and Merritt [1, 2] developed the first authentication protocols that are resistant to password guessing attacks. Gong [4, 5] and Yahalom [11], among others, have investigated the design of optimal authentication protocols.
Reference: [7] <author> D.V. Klein. </author> <title> Foiling the Cracker: A Survey of, and Improvements to Password Security. </title> <booktitle> In Proceedings of the 2nd USENIX Unix Security Workshop, </booktitle> <pages> pages 5-14, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: passwords that are vulnerable to dictionary attacks or guessing attacks [9], while all available evidence suggests that forcing people to choose and remember good passwords those that tend to be long character strings including both Roman letters and digits - is unworkable because such well-chosen passwords are also quite unmemorable <ref> [3, 7] </ref>. Authentication protocols have been proposed that are resistant to password guessing attacks [8, 6, 1, 2], although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5].
Reference: [8] <author> T.M.A. Lomas, L. Gong, J.H. Saltzer, and R.M. Needham. </author> <title> Reducing Risks from Poorly Chosen Keys. </title> <booktitle> In Proceedings of the 12th ACM Symposium on Operating System Principles, volume 23(5) of ACM Operating Systems Review, </booktitle> <pages> pages 14-18, </pages> <address> Litchfield Park, Arizona, </address> <month> December </month> <year> 1989. </year>
Reference-contexts: Authentication protocols have been proposed that are resistant to password guessing attacks <ref> [8, 6, 1, 2] </ref>, although they are more expensive in terms of the numbers of messages and rounds than those authentication protocols without the additional requirement to pro tect weak passwords [4, 5]. <p> the case with a trusted third party, if either (or both) client, instead of the server, chooses the session key, then it is not difficult to check that using timestamps can reduce the numbers of messages and rounds to the theoretical lower bounds [4]. 8 Related Work Gong et al. <ref> [6, 8] </ref> and Bellovin and Merritt [1, 2] developed the first authentication protocols that are resistant to password guessing attacks. Gong [4, 5] and Yahalom [11], among others, have investigated the design of optimal authentication protocols.
Reference: [9] <author> R. Morris and K. Thompson. </author> <title> Password Security: </title>
Reference-contexts: such as smart-card are not likely to be ubiquitous in the foreseeable future, users have to be authenticated through their passwords. (We do not discuss authentication methods based on physical or biological technologies.) People are known to use poorly chosen passwords that are vulnerable to dictionary attacks or guessing attacks <ref> [9] </ref>, while all available evidence suggests that forcing people to choose and remember good passwords those that tend to be long character strings including both Roman letters and digits - is unworkable because such well-chosen passwords are also quite unmemorable [3, 7].
References-found: 9

