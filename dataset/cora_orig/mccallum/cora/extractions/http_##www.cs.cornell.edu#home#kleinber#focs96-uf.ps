URL: http://www.cs.cornell.edu/home/kleinber/focs96-uf.ps
Refering-URL: http://www.cs.cornell.edu/home/kleinber/kleinber.html
Root-URL: 
Email: Email: kleinber@cs.cornell.edu.  
Title: Single-Source Unsplittable Flow  
Author: Jon M. Kleinberg 
Note: 02139. Author supported by an ONR Graduate Fellowship. Present address:  On leave  
Address: Cambridge MA  Ithaca NY 14853.  San Jose CA 95120.  
Affiliation: Laboratory for Computer Science, MIT,  Department of Computer Science, Cornell University,  at IBM Almaden Research Center,  
Abstract: The max-flow min-cut theorem of Ford and Fulkerson is based on an even more foundational result, namely Menger's theorem on graph connectivity. Menger's theorem provides a good characterization for the following single-source disjoint paths problem: given a graph G, with a source vertex s and terminals t 1 ; : : :; t k , decide whether there exist edge-disjoint s-t i paths, for i = 1; : : :; k. We consider a natural, NP-hard generalization of this problem, which we call the single-source unsplittable flow problem. We are given a source and terminals as before; but now each terminal t i has a demand i 1, and each edge e of G has a capacity c e 1. The problem is to decide whether one can choose a single s-t i path, for each i, so that the resulting set of paths respects the capacity constraints | the total amount of demand routed across any edge e must be bounded by the capacity c e . The main results of this paper are constant-factor approximation algorithms for three natural optimization versions of this problem, in arbitrary directed and undi-rected graphs. The development of these algorithms requires a number of new techniques for rounding fractional solutions to network flow problems; for two of the three problems we consider, there were no previous techniques capable of providing an approximation in the general case, and for the third, the randomized rounding algorithm of Raghavan and Thompson provides a logarithmic approximation. Our techniques are also of interest from the perspective of a family of NP-hard load balancing and machine scheduling problems that can be reduced to the single-source unsplittable flow problem. Our basic approximation algorithms can be used to provide a constant-factor approximation for the general unsplittable flow problem, without the single-source restriction, on the family of unit-capacity, densely embedded graphs introduced by the author and Eva Tardos. Our work also presents an interesting parallel with recent work of Schrijver, Seymour, and Winkler, which deals with "unsplittability" constraints in the context of SONET ring routing. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. Aspnes, Y. Azar, A. Fiat, S. Plotkin and O. Waarts, </author> <title> "On-line load balancing with applications to machine scheduling and virtual circuit routing" Proc 25th ACM Symp. </title> <booktitle> on Theory of Computing, </booktitle> <year> 1993. </year> <pages> pp. 623-631. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand.
Reference: [2] <author> Y. Aumann, Y. Rabani, </author> <title> "Improved bounds for all-optical routing," </title> <booktitle> Proc. 6th ACM-SIAM Symp. on Discrete Algorithms, </booktitle> <year> 1995, </year> <pages> pp. 567-576. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Approximations for (1) and (2), in the case of disjoint paths, have been obtained for restricted classes of graphs <ref> [11, 24, 2, 15, 16] </ref>.
Reference: [3] <author> B. Awerbuch, Y. Azar, S. Plotkin, </author> <title> "Throughput-competitive online routing," </title> <booktitle> Proc. 34th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1993, </year> <pages> pp. 32-40. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand.
Reference: [4] <author> B. Awerbuch, R. Gawlick, F.T. Leighton, Y. Rabani, </author> <title> "On-line admission control and circuit routing for high performance computing and communication," </title> <booktitle> Proc. 35th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1994, </year> <pages> pp. 412-423. </pages>
Reference-contexts: Certain pairs of physically separated nodes in the network, which we will call terminal pairs, wish to establish a connection on which they can transmit data at a given rate. Now, in most models of virtual-circuit routing (see e.g. <ref> [21, 10, 4] </ref>), bandwidth for each connection must be explicitly reserved on a single path; thus, our goal is to find a path for each terminal pair, so that the cumulative rate of transmission crossing any link does not exceed the link's capacity.
Reference: [5] <author> S. Cosares, I. Saniee, </author> <title> "An optimization problem related to balancing loads on SONET rings," </title> <journal> Telecommunications Systems, </journal> <volume> 3(1994), </volume> <pages> pp. 165-181. </pages>
Reference-contexts: As we mentioned above, randomized rounding only provides an O (log jEj)-approximation for the minimum congestion in our case, and it cannot be applied at all for ff and unless fl 1= log jEj: A line of work related to ours was introduced by Cosares and Saniee <ref> [5] </ref> in the context of SONET ring routing. The problem considered there is the unsplittable flow problem for arbitrary sources and sinks on the n-node cycle. Working from a fractional flow solution, they provide a 2-approximation for the minimum congestion of an unsplittable routing.
Reference: [6] <author> J. Edmonds, </author> <title> "Minimum partition of a matroid into independent subsets,", </title> <journal> J. Res. Nat. Bur. Standards B, </journal> <volume> 69(1965), </volume> <pages> pp. 67-72. </pages>
Reference-contexts: We will be 15 primarily interested in the following covering problem: for a matroid M = (U; M), what is the minimum cardinality cover of U by members of M? This question is addressed by the following result of Edmonds <ref> [6] </ref>. Theorem 5.1 (Edmonds) There is a polynomial-time algorithm to find a minimum car-dinality cover of the ground set of a matroid M = (U; M) by independent sets. Moreover, if this minimum is greater than j, then there is some X U for which j r (X) &lt; jXj.
Reference: [7] <author> L.R. Ford, D.R. Fulkerson, </author> <title> "Maximal flow through a network," </title> <journal> Canadian J. Math, </journal> <volume> 8(1956), </volume> <pages> pp. 399-404. </pages>
Reference-contexts: This is a basic problem in combinatorial optimization and algorithmic graph theory. A special case of it is the focus of Menger's foundational theorem on graph connectivity [19], generalized into the max-flow min-cut theorem of Ford and Fulkerson <ref> [7, 8] </ref>. <p> The cut condition is the following criterion: For all X V n fsg, we have c (X) (X). Clearly it is a necessary condition for the existence of a fractional routing from s to D. For our purposes, we can state the max-flow min-cut theorem of Ford and Fulkerson <ref> [7, 8] </ref> as follows.
Reference: [8] <author> L.R. Ford, D.R. Fulkerson, </author> <title> Flows in Networks, </title> <publisher> Princeton University Press, </publisher> <year> 1962. </year>
Reference-contexts: This is a basic problem in combinatorial optimization and algorithmic graph theory. A special case of it is the focus of Menger's foundational theorem on graph connectivity [19], generalized into the max-flow min-cut theorem of Ford and Fulkerson <ref> [7, 8] </ref>. <p> The cut condition is the following criterion: For all X V n fsg, we have c (X) (X). Clearly it is a necessary condition for the existence of a fractional routing from s to D. For our purposes, we can state the max-flow min-cut theorem of Ford and Fulkerson <ref> [7, 8] </ref> as follows.
Reference: [9] <author> A. Frank, </author> <title> "Packing paths, cuts, and circuits | a survey," in Paths, Flows, </title> <editor> and VLSI-Layout, B. Korte, L. Lovasz, H.J. Promel, A. Schrijver, Eds., </editor> <publisher> Berlin: Springer-Verlag, </publisher> <year> 1990, </year> <pages> pp. 49-100. </pages>
Reference-contexts: It is one of Karp's original NP-complete problems [13]; and there has since been a large amount of work done to characterize exactly solvable special cases of the problem. (See e.g. the surveys by Frank <ref> [9] </ref>, Schrijver [26], and Robertson and Seymour [25].) The relation to routing problems in networks is quite direct. A communication network is modeled as a graph (either directed or undirected), and each link has some bounded capacity.
Reference: [10] <author> R. Gawlick, C. Kalmanek, K.G. Ramakrishnan, </author> <title> "On-line routing for permanent virtual circuits," </title> <booktitle> Proc. INFOCOM, </booktitle> <year> 1995, </year> <pages> pp. 278-288. </pages>
Reference-contexts: Certain pairs of physically separated nodes in the network, which we will call terminal pairs, wish to establish a connection on which they can transmit data at a given rate. Now, in most models of virtual-circuit routing (see e.g. <ref> [21, 10, 4] </ref>), bandwidth for each connection must be explicitly reserved on a single path; thus, our goal is to find a path for each terminal pair, so that the cumulative rate of transmission crossing any link does not exceed the link's capacity.
Reference: [11] <author> N. Garg, V. Vazirani, M. Yannakakis, </author> <title> "Primal-dual approximation algorithms for integral flow and multicut in trees, with applications to matching and set cover," </title> <booktitle> Proc. International Colloq. on Automata, Languages, and Programming, </booktitle> <year> 1993, </year> <pages> pp. 64-75. 34 </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Approximations for (1) and (2), in the case of disjoint paths, have been obtained for restricted classes of graphs <ref> [11, 24, 2, 15, 16] </ref>.
Reference: [12] <author> D. Hochbaum, D. Shmoys, </author> <title> "Using dual approximation algorithms for scheduling prob-lems: theoretical and practical results," </title> <journal> Journal of the ACM, </journal> <volume> 34(1987), </volume> <pages> pp. 144-162. </pages>
Reference-contexts: In the case in which all S i are equal to M , this is just the classical minimum makespan problem, for which a (1 + ")-approximation can be found in polynomial time for any fixed " &gt; 0 <ref> [12] </ref>. But when the S i are arbitrary sets, Lenstra, Shmoys, and Tardos show that no polynomial-time algorithm can approximate the optimum load to within a factor better than 4 3 [18]; and they provide a 2-approximation algorithm for a class of problems that includes this one.
Reference: [13] <author> R.M. Karp, </author> <title> "On the computational complexity of combinatorial problems," </title> <booktitle> Networks 5(1975), </booktitle> <pages> pp. 43-68. </pages>
Reference-contexts: This is a basic problem in combinatorial optimization and algorithmic graph theory. A special case of it is the focus of Menger's foundational theorem on graph connectivity [19], generalized into the max-flow min-cut theorem of Ford and Fulkerson [7, 8]. It is one of Karp's original NP-complete problems <ref> [13] </ref>; and there has since been a large amount of work done to characterize exactly solvable special cases of the problem. (See e.g. the surveys by Frank [9], Schrijver [26], and Robertson and Seymour [25].) The relation to routing problems in networks is quite direct. <p> | deciding whether the given set of terminal pairs is routable in G is still NP-complete; it is equivalent to a bin-packing problem with m bins of capacity 1, and weights 1 ; : : : ; k . (Bin-packing, with two bins, is another of Karp's original NP-complete problems <ref> [13] </ref>.) Motivated by these considerations, one can formulate the unsplittable flow problem (ufp), a generalization of the disjoint paths problem.
Reference: [14] <author> R.M. Karp, F.T. Leighton, R. Rivest, C. Thompson, U. Vazirani, V. Vazirani, </author> <title> "Global wire routing in two-dimensional arrays," </title> <journal> Algorithmica, </journal> <volume> 2(1987), </volume> <pages> pp. 113-129. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand.
Reference: [15] <author> J. Kleinberg, E. Tardos, </author> <title> "Approximations for the Disjoint Paths Problem in High-Diameter Planar Networks," </title> <booktitle> Proc. 27th ACM Symp. on Theory of Computing, </booktitle> <year> 1995, </year> <pages> pp. 26-35. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Approximations for (1) and (2), in the case of disjoint paths, have been obtained for restricted classes of graphs <ref> [11, 24, 2, 15, 16] </ref>.
Reference: [16] <author> J. Kleinberg, E. Tardos, </author> <title> "Disjoint Paths in Densely Embedded Graphs," </title> <booktitle> Proc. 36th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1995, </year> <pages> pp. 52-61. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Approximations for (1) and (2), in the case of disjoint paths, have been obtained for restricted classes of graphs <ref> [11, 24, 2, 15, 16] </ref>. <p> But it turns out that we can also use our single-source algorithm to attack the general unsplittable flow problem, with arbitrary sources and sinks, in the class of densely embedded graphs introduced by the author and Eva Tardos <ref> [16] </ref>. The algorithm we developed there [16] decomposes the graph into clusters, and runs a maximum flow algorithm within each cluster; and the bottleneck in adapting this algorithm to the case of arbitrary unsplittable demands was the lack of a suitable substitute for these maximum flow algorithms. <p> But it turns out that we can also use our single-source algorithm to attack the general unsplittable flow problem, with arbitrary sources and sinks, in the class of densely embedded graphs introduced by the author and Eva Tardos <ref> [16] </ref>. The algorithm we developed there [16] decomposes the graph into clusters, and runs a maximum flow algorithm within each cluster; and the bottleneck in adapting this algorithm to the case of arbitrary unsplittable demands was the lack of a suitable substitute for these maximum flow algorithms. <p> The result will essentially be obtained by incorporating the algorithm of Corollary 3.2 into a disjoint paths approximation algorithm due to the author and Eva Tardos <ref> [16] </ref> We assume a fair amount of familiarity with the arguments in [16]. As in that paper, we consider long and short connections separately. Short connections are handled recursively. We call a long connection (s i ; t i ) heavy if i 1 16 and light otherwise. <p> The result will essentially be obtained by incorporating the algorithm of Corollary 3.2 into a disjoint paths approximation algorithm due to the author and Eva Tardos <ref> [16] </ref> We assume a fair amount of familiarity with the arguments in [16]. As in that paper, we consider long and short connections separately. Short connections are handled recursively. We call a long connection (s i ; t i ) heavy if i 1 16 and light otherwise. Since the approximation ratio for long connections in [16] holds relative to the fractional optimum, <p> of familiarity with the arguments in <ref> [16] </ref>. As in that paper, we consider long and short connections separately. Short connections are handled recursively. We call a long connection (s i ; t i ) heavy if i 1 16 and light otherwise. Since the approximation ratio for long connections in [16] holds relative to the fractional optimum, we can run the basic algorithm of [16] on the heavy connections, assuming that all of them have demand 1. This loses only a constant factor in the approximation ratio. Hence we are left with the problem of routing the long, light connections. <p> Short connections are handled recursively. We call a long connection (s i ; t i ) heavy if i 1 16 and light otherwise. Since the approximation ratio for long connections in <ref> [16] </ref> holds relative to the fractional optimum, we can run the basic algorithm of [16] on the heavy connections, assuming that all of them have demand 1. This loses only a constant factor in the approximation ratio. Hence we are left with the problem of routing the long, light connections. Following the algorithm of [16], we cover the mesh with a set of clusters fC <p> the fractional optimum, we can run the basic algorithm of <ref> [16] </ref> on the heavy connections, assuming that all of them have demand 1. This loses only a constant factor in the approximation ratio. Hence we are left with the problem of routing the long, light connections. Following the algorithm of [16], we cover the mesh with a set of clusters fC i g and construct a simulated network N on this set of clusters. We use an algorithm of Raghavan [22] to produce "global routes" in this network. As in [16], these can be converted into paths in the mesh; if <p> Following the algorithm of <ref> [16] </ref>, we cover the mesh with a set of clusters fC i g and construct a simulated network N on this set of clusters. We use an algorithm of Raghavan [22] to produce "global routes" in this network. As in [16], these can be converted into paths in the mesh; if (s i ; t i ) is a terminal pair, then the resulting path has its ends on the boundaries of the clusters containing s i and t i . <p> Thus, what we need is to develop an analogue of Lemma 3.14 of <ref> [16] </ref>, to deal with the "unsplittable escape problem" that arises in trying to route the terminals contained in a cluster C i to the boundary of C i . We do this as follows. <p> We delete any terminal pair with one end in an overfull rectangle. As in the argument from <ref> [16] </ref>, there is a constant probability that a given terminal pair is not deleted, if we set the scaling factor small enough in Raghavan's algorithm. Following this deletion step, the cut condition for all rectangular subsets of C i is met by a factor of 4. As in [16], this implies <p> argument from <ref> [16] </ref>, there is a constant probability that a given terminal pair is not deleted, if we set the scaling factor small enough in Raghavan's algorithm. Following this deletion step, the cut condition for all rectangular subsets of C i is met by a factor of 4. As in [16], this implies that the cut condition for all subsets of C i is met by a factor 4.
Reference: [17] <author> J. Kleinberg, S. Rao, E. Tardos, </author> <title> "Routing with low congestion in densely embedded graphs," </title> <type> manuscript. </type>
Reference-contexts: One can also obtain a constant-factor approximation for -(T ) in densely embedded graphs, using Corollary 3.3 together with an algorithm of the author, Satish Rao, and Eva Tardos. Details will appear in <ref> [17] </ref>. 33 Acknowledgements We thank Eva Tardos for valuable discussions on these problems. We thank Michel Goemans for suggesting the use of center nodes as a way to improve the constants, and for suggesting the proof of Lemma 2.4 that we have presented in this version of the paper.
Reference: [18] <author> J.K. Lenstra, D.B. Shmoys, E. Tardos, </author> <title> "Approximation algorithms for scheduling unrelated parallel machines," </title> <booktitle> Proc. 28th IEEE Symp. on Foundations of Computer Science, </booktitle> <year> 1987. </year>
Reference-contexts: In addition to simple variants of the bin-packing and minimum-makespan problems, one can reduce to the single-source ufp a variety of more complex NP-hard load balancing and machine scheduling problems, analogous to those considered by Lenstra, Shmoys, and Tardos <ref> [18] </ref> and others. We will discuss this further in Section 6. Definitions and Background We now introduce some terminology and notation that will be used throughout the paper, and then introduce the notion of fractional flow at a precise level. <p> But when the S i are arbitrary sets, Lenstra, Shmoys, and Tardos show that no polynomial-time algorithm can approximate the optimum load to within a factor better than 4 3 <ref> [18] </ref>; and they provide a 2-approximation algorithm for a class of problems that includes this one. Here, we observe that this load balancing problem can be easily formulated as a single-source unsplittable flow problem on a three-level directed graph, as in Figure 2.
Reference: [19] <author> K. Menger, "Zur allgemeinen Kurventheorie," </author> <title> Fundam. </title> <journal> Math., </journal> <volume> 19(1927), </volume> <pages> pp. 96-115. </pages>
Reference-contexts: If this is possible, we say that the set of pairs is routable. This is a basic problem in combinatorial optimization and algorithmic graph theory. A special case of it is the focus of Menger's foundational theorem on graph connectivity <ref> [19] </ref>, generalized into the max-flow min-cut theorem of Ford and Fulkerson [7, 8]. <p> By the bin-packing reduction described above, the single-source ufp is NP-complete even on a two-node graph. The single-source ufp is tightly connected with several foundational problems in combinatorial optimization | it is a generalization of the single-source disjoint paths problem, which is the subject of Menger's theorem <ref> [19] </ref>, and its fractional relaxation (when the flow from s to each t i can be split over several paths) is simply the maximum flow problem. As such, we are dealing with a very basic, NP-hard, variant of maximum flow.
Reference: [20] <author> H. </author> <title> Perfect, "Applications of Menger's graph theorem," </title> <journal> J. Math. Analysis Appl. </journal> <volume> 22(1968), </volume> <pages> pp. 96-111. </pages>
Reference-contexts: taking the one of greater value gives us Corollary 4.4 There is a constant-factor approximation algorithm for ff (G; D; s). 5 Routing in Rounds In order to obtain a constant-factor approximation for the problem of routing in rounds, we make use of a classical connection between flows and matroids <ref> [20, 28] </ref>. <p> Recall that by Theorem 1.1, such integral un-splittable problems are well-characterized by the max-flow min-cut theorem. The relevance of matroids to such problems is a consequence of the following result, due to Perfect <ref> [20] </ref>. Theorem 5.2 (Perfect) Let (G; D; s) be an integral single-source ufp. The collection of realizable subsets of D forms a matroid over the ground set D. The following fact is immediate.
Reference: [21] <author> M. de Prycker, </author> <title> Asynchronous Transfer Mode: Solution for Broadband ISDN, </title> <publisher> Ellis Hor-wood Ltd., </publisher> <year> 1993. </year>
Reference-contexts: Certain pairs of physically separated nodes in the network, which we will call terminal pairs, wish to establish a connection on which they can transmit data at a given rate. Now, in most models of virtual-circuit routing (see e.g. <ref> [21, 10, 4] </ref>), bandwidth for each connection must be explicitly reserved on a single path; thus, our goal is to find a path for each terminal pair, so that the cumulative rate of transmission crossing any link does not exceed the link's capacity.
Reference: [22] <author> P. Raghavan, </author> <title> "Probabilistic construction of deterministic algorithms: approximating packing integer programs," </title> <journal> J. Computer and System Sciences, </journal> <volume> 37(1988), </volume> <pages> pp. 130-143. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Hence we are left with the problem of routing the long, light connections. Following the algorithm of [16], we cover the mesh with a set of clusters fC i g and construct a simulated network N on this set of clusters. We use an algorithm of Raghavan <ref> [22] </ref> to produce "global routes" in this network.
Reference: [23] <author> P. Raghavan, </author> <title> C.D. Thompson, "Randomized rounding: a technique for provably good algorithms and algorithmic proofs," </title> <journal> Combinatorica, </journal> <volume> 7(1987), </volume> <pages> pp. 365-374. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Of course, designing approximations for the more general unsplittable flow problem can only be more difficult. (We note that for problem (3), the general randomized rounding technique of Raghavan and Thompson <ref> [23] </ref> provides a logarithmic approximation to -(T ) in any graph, and this extends to the general setting of unsplittable flow.) In this paper, we develop approximation algorithms, in arbitrary graphs, for the single-source unsplittable flow problem. <p> We will introduce fractional flows in the following subsection; we observed 4 earlier that the fractional version of the single-source ufp is precisely the maximum flow problem. Our rounding techniques are fundamentally different from the randomized rounding method of Raghavan and Thompson <ref> [23] </ref>. <p> In terms of other methods, a straightforward randomized rounding of the fractional flow, as in <ref> [23] </ref>, is well-known to incur an unavoidable logarithmic blow-up in the amount of flow crossing some edge, in very simple examples.
Reference: [24] <author> P. Raghavan, E. Upfal, </author> <title> "Efficient all-optical routing," </title> <booktitle> Proc. 26th ACM Symp. on Theory of Computing, </booktitle> <year> 1994, </year> <pages> pp. 134-143. </pages>
Reference-contexts: In the literature on the disjoint paths problem and its applications, one can identify three main optimization versions of the problem that have been extensively studied <ref> [23, 22, 11, 2, 15, 16, 3, 24, 1, 14] </ref>. Adapting these to the setting of the unsplittable flow problem, let us state them as follows. (1) Maximization. Find a routable subset of the terminals of maximum total demand. <p> Approximations for (1) and (2), in the case of disjoint paths, have been obtained for restricted classes of graphs <ref> [11, 24, 2, 15, 16] </ref>.
Reference: [25] <author> N. Robertson, </author> <title> P.D. Seymour, "Outline of a disjoint paths algorithm," in Paths, Flows, </title> <editor> and VLSI-Layout, B. Korte, L. Lovasz, H.J. Promel, A. Schrijver, Eds., </editor> <publisher> Berlin: Springer-Verlag, </publisher> <year> 1990 </year>
Reference-contexts: It is one of Karp's original NP-complete problems [13]; and there has since been a large amount of work done to characterize exactly solvable special cases of the problem. (See e.g. the surveys by Frank [9], Schrijver [26], and Robertson and Seymour <ref> [25] </ref>.) The relation to routing problems in networks is quite direct. A communication network is modeled as a graph (either directed or undirected), and each link has some bounded capacity.
Reference: [26] <author> A. Schrijver, </author> <title> "Homotopic routing methods," in Paths, Flows, </title> <editor> and VLSI-Layout, B. Korte, L. Lovasz, H.J. Promel, A. Schrijver, Eds., </editor> <publisher> Berlin: Springer-Verlag, </publisher> <year> 1990. </year>
Reference-contexts: It is one of Karp's original NP-complete problems [13]; and there has since been a large amount of work done to characterize exactly solvable special cases of the problem. (See e.g. the surveys by Frank [9], Schrijver <ref> [26] </ref>, and Robertson and Seymour [25].) The relation to routing problems in networks is quite direct. A communication network is modeled as a graph (either directed or undirected), and each link has some bounded capacity.
Reference: [27] <author> A. Schrijver, P.D. Seymour, P. Winkler, </author> <title> "The ring loading problem," </title> <note> submitted for publication. </note>
Reference-contexts: Working from a fractional flow solution, they provide a 2-approximation for the minimum congestion of an unsplittable routing. This bound was subsequently strengthened in very recent work of Schrijver, Seymour, and Winkler <ref> [27] </ref>, who were able to parametrize the performance guarantee for the minimum congestion in terms of the maximum demand fl .
Reference: [28] <author> D.J.A. Welsh, </author> <title> Matroid Theory, </title> <publisher> London: Academic Press, </publisher> <year> 1976. </year> <month> 35 </month>
Reference-contexts: taking the one of greater value gives us Corollary 4.4 There is a constant-factor approximation algorithm for ff (G; D; s). 5 Routing in Rounds In order to obtain a constant-factor approximation for the problem of routing in rounds, we make use of a classical connection between flows and matroids <ref> [20, 28] </ref>. <p> Note that the exchange property ensures that all bases have the same cardinality. If X U , we define the rank of X, denoted r (X), to be the maximum cardinality of an independent subset of X. We refer the reader to a book such as <ref> [28] </ref> for further background on matroids. There are a number of basic problems that are computationally intractable for set systems in general, but which are tractable when the set system is a matroid.
References-found: 28

