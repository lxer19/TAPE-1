URL: http://cobar.cs.umass.edu/pubfiles/UM-CS-1991-020.ps
Refering-URL: http://cobar.cs.umass.edu/pubfiles/
Root-URL: 
Title: CYCLES IN NETWORKS  
Author: Arnold L. Rosenberg 
Date: May 14, 1993  
Address: Amherst, Massachusetts 01003  
Affiliation: Computer Information Science University of Massachusetts  
Abstract: We study the presence of cycles and long paths in graphs that have been proposed as interconnection networks for parallel architectures. The study surveys and complements known results. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> F.S. Annexstein and M. </author> <title> Baumslag (1988): Hamiltonian circuits in Cayley digraphs. </title> <type> Tech. </type> <institution> Rpt. 88-40, Univ. Massachusetts. </institution> <month> 32 </month>
Reference-contexts: It is worth mentioning what we do not try to cover in this study. First, we do not survey the many results that guarantee the presence of hamiltonian cycles in particular families of graphs (defined, e.g., by structure or by density), although such results abound <ref> [1] </ref>, [9], [38], [41], [42]. Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist [16]. <p> The special case of this result that establishes the hamiltonianicity of B n is strengthened in <ref> [1] </ref>, where it is shown that B n , when viewed as a digraph, contains a directed hamiltonian cycle. (c) Any such short cycle would, in fact, be embedded in a leveled|hence, bipartite| subgraph B of B n comprising some n 1 levels of B n .
Reference: [2] <editor> F.S. Annexstein, M. Baumslag, A.L. </editor> <title> Rosenberg (1990): Group action graphs and parallel architectures. </title> <journal> SIAM J. Comput. </journal> <volume> 19, </volume> <pages> 544-569. </pages>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations <ref> [2] </ref>, [39]; hence, these graphs have been widely proposed as interconnection networks for parallel architectures [6], [31], [33], [36]. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [3] <author> M.J. Atallah and S.E. </author> <title> Hambrusch (1986): Solving tree problems on a mesh-connected processor array. </title> <journal> Inform. </journal> <volume> Computation 69, </volume> <pages> 168-187. </pages>
Reference-contexts: than 2 min (m; n) nodes. 2 4 Meshes and Toroidal Meshes We continue our study with two families of graphs whose attractiveness as interconnection networks derive from a combination of their amenability to efficient layout in the plane and their regular structure that simplifies the development of algorithms; cf. <ref> [3] </ref>, [12]. 4.1 Meshes The 2-dimensional m fi n rectangular mesh M m;n is the product graph P m fi P n . Therefore, M m;n has node-set Nodes (M m;n ) = Z m fi Z n ; its edges come in two classes.
Reference: [4] <author> M. Baumslag and F.S. </author> <month> Annexstein </month> <year> (1991): </year> <title> A unified approach to global permutation routing on parallel networks. </title> <journal> Math. Syst. Th. </journal> <volume> 24, </volume> <pages> 233-251. </pages>
Reference-contexts: However, it has been shown to combine important 27 structural characteristics of both "butterfly-oriented" and "shu*e-oriented" graphs [27], while simultaneously enjoying the direct-product structure that has been shown to have significant algorithmic consequences <ref> [4] </ref>, [23]. For our purposes the importance of the family is that it demonstrates how pancyclicity interacts with the direct-product operation. The mfin product-shu*e graph is the direct product of de Bruijn graphs PS m;n = D m fi D n .
Reference: [5] <author> C. </author> <title> Berge (1979): Graphs and Hypergraphs. </title> <publisher> North-Holland, Amsterdam. </publisher>
Reference-contexts: Fact 9.3 Given any length-2 path in D n whose removal does not disconnect D n , one can construct an eulerian cycle in D n which contains . Fact 9.3 follows from the algorithm for constructing an eulerian cycle in an eulerian graph (cf. <ref> [5] </ref>); the algorithm allows one to choose any not-yet used edge leaving a node, whenever the chosen edge is not a cut-edge of the remaining graph.
Reference: [6] <author> J.-C. Bermond and C. </author> <month> Peyrat </month> <year> (1989): </year> <title> The de Bruijn and Kautz networks: a competitor for the hypercube? In Hypercube and Distributed Computers (F. </title> <editor> Andre and J.P. Verjus, eds.) </editor> <publisher> North-Holland, Amsterdam, </publisher> <pages> 279-293. </pages>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations [2], [39]; hence, these graphs have been widely proposed as interconnection networks for parallel architectures <ref> [6] </ref>, [31], [33], [36]. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [7] <author> S.N. Bhatt, F.R.K. Chung, J.-W. Hong, F.T. Leighton, B. Obrenic, A.L. Rosenberg, E.J. </author> <title> Schwabe (1993): Optimal emulations by butterfly-like networks. </title> <journal> J. ACM, </journal> <note> to appear. </note>
Reference-contexts: A valid 2-coloring of Q n results from labeling each node of Q n with the parity of the number of 1s in its string-name. 2 14 6 Butterflies and Cube-Connected Cycles This section studies the cycle structure of two of the benchmark bounded-degree "approximations" of the hypercube <ref> [7] </ref>, [24], [25], [32]. The order-n butterfly graph B n and the order-n cube-connected cycles graph CCC n both have node-set Nodes (B n ) = Nodes (CCC n ) = Z n fi Z n 2 .
Reference: [8] <author> S.N. Bhatt, F.R.K. Chung, F.T. Leighton, A.L. </author> <title> Rosenberg (1992): Efficient embed-dings of trees in hypercubes. </title> <journal> SIAM J. Comput. </journal> <volume> 21, </volume> <pages> 151-162. </pages>
Reference-contexts: f M m;n is also an even-length cycle, this procedure yields a valid 2-coloring of f M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks <ref> [8] </ref>, [10], [18], [29] and in terms of their ability to support efficient interprocessor communication [14], [19], [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [9] <author> J.A. Bondy and U.S.R. </author> <title> Murty (1976): Graph Theory with Applications. </title> <publisher> North-Holland, </publisher> <address> New York. </address>
Reference-contexts: It is worth mentioning what we do not try to cover in this study. First, we do not survey the many results that guarantee the presence of hamiltonian cycles in particular families of graphs (defined, e.g., by structure or by density), although such results abound [1], <ref> [9] </ref>, [38], [41], [42]. Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist [16].
Reference: [10] <author> M.Y. </author> <title> Chan (1989): Embedding of d-dimensional grids into optimal hypercubes. </title> <booktitle> 1st ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> 52-57. </pages>
Reference-contexts: M m;n is also an even-length cycle, this procedure yields a valid 2-coloring of f M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], <ref> [10] </ref>, [18], [29] and in terms of their ability to support efficient interprocessor communication [14], [19], [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [11] <author> T. Cormen, C.E. Leiserson, </author> <title> R.L. Rivest (1990): Introduction to Algorithms. </title> <publisher> MIT Press, </publisher> <address> Cambridge, Mass. </address>
Reference-contexts: To accommodate a cycle of length M &lt; N, one just applies this algorithm to any connected M -node subgraph of G. Step 1. Construct, in any way, a rooted, oriented 1 spanning tree T for G <ref> [11] </ref>. Step 2. Traverse T in preorder: 1. Visit the root r of T ; say that r has k children, numbered 0; 1; : : : ; k 1. 2.
Reference: [12] <author> W.J. Dally and C.L. </author> <title> Seitz (1986): The torus routing chip. </title> <editor> J. </editor> <booktitle> Distributed Systems 1, </booktitle> <pages> 187-196. </pages>
Reference-contexts: 2 min (m; n) nodes. 2 4 Meshes and Toroidal Meshes We continue our study with two families of graphs whose attractiveness as interconnection networks derive from a combination of their amenability to efficient layout in the plane and their regular structure that simplifies the development of algorithms; cf. [3], <ref> [12] </ref>. 4.1 Meshes The 2-dimensional m fi n rectangular mesh M m;n is the product graph P m fi P n . Therefore, M m;n has node-set Nodes (M m;n ) = Z m fi Z n ; its edges come in two classes.
Reference: [13] <author> A.M. Despain and D.A. </author> <title> Patterson (1978): X-tree a tree structured multiprocessor architecture. </title> <booktitle> 5th Symp. on Computer Architecture, </booktitle> <pages> 144-151. </pages>
Reference-contexts: node of B n with the parity of its level. 2 7 X-Trees We turn now to a family of graphs that can be viewed as a compromise between the logarithmic diameter, yet excessively sparse structure, of trees, and the rich interconnections with efficient layout, yet large diameter, of meshes <ref> [13] </ref>, [22].
Reference: [14] <author> V. </author> <title> Faber (1993): Global communication algorithms for hypercubes and other Cayley coset graphs. </title> <journal> SIAM J. Discr. Math., </journal> <note> to appear. </note>
Reference-contexts: f M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], [18], [29] and in terms of their ability to support efficient interprocessor communication <ref> [14] </ref>, [19], [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [15] <author> R. Feldmann and W. </author> <title> Unger (1992): The cube-connected cycles network is a subgraph of the butterfly network. </title> <booktitle> Parallel Proc. Let. </booktitle> <volume> 2, </volume> <pages> 13-19. </pages>
Reference-contexts: The strong quasi-isometry exposed in part (a) of the following Proposition originates in <ref> [15] </ref>. Proposition 6.1 (Quasi-isometry of B n and CCC n ) (a) For all n, the undirected order-n butterfly graph B n contains the undirected order-n cube-connected cycles graph CCC n . (b) For all n, one can embed B n in CCC n , with dilation 2.
Reference: [16] <author> H. </author> <month> Fleischner </month> <year> (1974): </year> <title> The square of every two-connected graph is hamiltonian. </title> <journal> J. Comb. Th. </journal> <volume> (B) 16, </volume> <pages> 29-34. 33 </pages>
Reference-contexts: Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist <ref> [16] </ref>. Finally, we do not discuss the computational difficulty of detecting various classes of cycles in various classes of host graphs.
Reference: [17] <author> M.R. Garey and D.S. </author> <title> Johnson (1979): Computers and Intractability. W.H. </title> <publisher> Freeman and Co., </publisher> <address> San Francisco. </address>
Reference-contexts: For instance, detecting either cycle- or path-hamiltonianicity in graphs is NP-complete [20], even for graphs with restricted structure <ref> [17] </ref>, [40]. 2 General Graphs Rather than embark immediately on our study of what cycles and paths a graph contains, we begin with two results that place the question of cycles in graphs in perspective.
Reference: [18] <editor> D.S. Greenberg, L.S. Heath and A.L. </editor> <title> Rosenberg (1990): Optimal embeddings of butterfly-like graphs in the hypercube. </title> <journal> Math. Syst. Th. </journal> <volume> 23, </volume> <pages> 61-77. </pages>
Reference-contexts: m;n is also an even-length cycle, this procedure yields a valid 2-coloring of f M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], <ref> [18] </ref>, [29] and in terms of their ability to support efficient interprocessor communication [14], [19], [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 . <p> Because Q n has 2 n nodes, each of degree n, it has n2 n1 edges. Our proof of part (a) of the following theorem derives from <ref> [18] </ref>. Theorem 5.1 (Cycle-Embeddings for Q n ) For all n: (a) The n-dimensional hypercube Q n is even-pancyclic; in particular, Q n is hamiltonian. (b) Q n contains no odd-length cycle.
Reference: [19] <author> S.L. Johnsson and C.-T. </author> <title> Ho (1989): Optimum broadcasting and personalized communication in hypercubes. </title> <journal> IEEE Trans. Comp. </journal> <volume> 38, </volume> <pages> 1249-1268. </pages>
Reference-contexts: M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], [18], [29] and in terms of their ability to support efficient interprocessor communication [14], <ref> [19] </ref>, [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [20] <author> R.M. </author> <title> Karp (1975): On the computational complexity of combinatorial problems. </title> <booktitle> Networks 5, </booktitle> <pages> 45-68. </pages>
Reference-contexts: We do remark, however, that the general problem of deciding the containment of cycles in graphs is as computationally intractable as the general question of deciding the embeddability of one arbitrary graph in another. For instance, detecting either cycle- or path-hamiltonianicity in graphs is NP-complete <ref> [20] </ref>, even for graphs with restricted structure [17], [40]. 2 General Graphs Rather than embark immediately on our study of what cycles and paths a graph contains, we begin with two results that place the question of cycles in graphs in perspective.
Reference: [21] <author> A. </author> <title> Lempel (1971): m-ary closed sequences. </title> <journal> J. Comb. Th. </journal> <volume> (A) 10, </volume> <pages> 253-258. </pages>
Reference-contexts: De Bruijn graphs enjoy the strongest cycle structure of any of the sparse graphs we consider here in that their pancyclicity persists even when they are viewed as directed graphs. The following theorem originates in [43]; the proof we present is patterned after the one in <ref> [21] </ref>, wherein the result is generalized to de Bruijn graphs of arbitrary base. Theorem 8.1 (Cycle-Embeddings for D n ) For all n, the order-n de Bruijn digraph D n is di-pancyclic. Proof. We remark that the result remains true for de Bruijn digraphs of arbitrary bases [21]. <p> the one in <ref> [21] </ref>, wherein the result is generalized to de Bruijn graphs of arbitrary base. Theorem 8.1 (Cycle-Embeddings for D n ) For all n, the order-n de Bruijn digraph D n is di-pancyclic. Proof. We remark that the result remains true for de Bruijn digraphs of arbitrary bases [21]. We restrict attention here to the base 2 case, because this case exposes all of the ideas essential to prove the stronger result, in a clerically simpler setting. We proceed by induction on the order n of D n .
Reference: [22] <author> B. </author> <title> Monien (1991): Simulating binary trees on X-trees. </title> <booktitle> 3rd ACM Symp. on Parallel Algorithms and Architectures, </booktitle> <pages> 147-158. </pages>
Reference-contexts: of B n with the parity of its level. 2 7 X-Trees We turn now to a family of graphs that can be viewed as a compromise between the logarithmic diameter, yet excessively sparse structure, of trees, and the rich interconnections with efficient layout, yet large diameter, of meshes [13], <ref> [22] </ref>.
Reference: [23] <author> B. Obrenic, M.C. Herbordt, A.L. Rosenberg, C.C. Weems, F.S. Annexstein, M. </author> <title> Baumslag (1991): Using emulations to construct high-performance virtual parallel architectures. </title> <type> Tech. </type> <institution> Rpt. 91-40, Univ. Massachusetts. </institution> <note> See also, Achieving multi-gauge behavior in bit-serial SIMD architectures via emulation. 3rd IEEE Symp. on Frontiers of Massively Parallel Computation (1990) 186-195. </note>
Reference-contexts: However, it has been shown to combine important 27 structural characteristics of both "butterfly-oriented" and "shu*e-oriented" graphs [27], while simultaneously enjoying the direct-product structure that has been shown to have significant algorithmic consequences [4], <ref> [23] </ref>. For our purposes the importance of the family is that it demonstrates how pancyclicity interacts with the direct-product operation. The mfin product-shu*e graph is the direct product of de Bruijn graphs PS m;n = D m fi D n .
Reference: [24] <author> F.P. Preparata and J.E. </author> <title> Vuillemin (1981): The cube-connected cycles: a versatile network for parallel computation. </title> <editor> C. </editor> <booktitle> ACM 24, </booktitle> <pages> 300-309. </pages>
Reference-contexts: A valid 2-coloring of Q n results from labeling each node of Q n with the parity of the number of 1s in its string-name. 2 14 6 Butterflies and Cube-Connected Cycles This section studies the cycle structure of two of the benchmark bounded-degree "approximations" of the hypercube [7], <ref> [24] </ref>, [25], [32]. The order-n butterfly graph B n and the order-n cube-connected cycles graph CCC n both have node-set Nodes (B n ) = Nodes (CCC n ) = Z n fi Z n 2 .
Reference: [25] <author> R.D. </author> <month> Rettberg </month> <year> (1986): </year> <title> Shared memory parallel processors: the Butterfly and the Monarch. </title> <booktitle> 4th MIT Conf. on Advanced Research in VLSI. </booktitle>
Reference-contexts: A valid 2-coloring of Q n results from labeling each node of Q n with the parity of the number of 1s in its string-name. 2 14 6 Butterflies and Cube-Connected Cycles This section studies the cycle structure of two of the benchmark bounded-degree "approximations" of the hypercube [7], [24], <ref> [25] </ref>, [32]. The order-n butterfly graph B n and the order-n cube-connected cycles graph CCC n both have node-set Nodes (B n ) = Nodes (CCC n ) = Z n fi Z n 2 .
Reference: [26] <author> A.L. </author> <title> Rosenberg (1981): Issues in the study of graph embeddings. </title> <booktitle> In Graph-Theoretic Concepts in Computer Science: Proceedings of the International Workshop WG80, Bad Honnef, </booktitle> <editor> Germany (H. Noltemeier, ed.) </editor> <booktitle> Lecture Notes in Computer Science 100, </booktitle> <publisher> Springer-Verlag, NY, </publisher> <pages> 150-176. </pages>
Reference-contexts: Formally, the dilation of the embedding (ff; ) of the graph G in the graph H is given by dilation (ff; ) = max fu;vg2Edges (G) Length ((u; v)) Although other cost measures are also of interest <ref> [26] </ref> in general embeddings, when the guest graphs are as simple as paths and cycles, the other measures are usually favorable and can be safely ignored. 1.2 The Focus of Our Study The main emphasis of our study is on two strong versions of the question of how efficiently paths and
Reference: [27] <author> A.L. </author> <title> Rosenberg (1992): Product-shu*e networks: toward reconciling shu*es and butterflies. </title> <journal> Discr. Appl. Math. </journal> <volume> 37/38, </volume> <pages> 465-488. </pages>
Reference-contexts: However, it has been shown to combine important 27 structural characteristics of both "butterfly-oriented" and "shu*e-oriented" graphs <ref> [27] </ref>, while simultaneously enjoying the direct-product structure that has been shown to have significant algorithmic consequences [4], [23]. For our purposes the importance of the family is that it demonstrates how pancyclicity interacts with the direct-product operation. <p> The following theorem originates in <ref> [27] </ref>. Theorem 9.1 For all m; n except for m = n = 1, the product-shu*e graph PS m;n is pancyclic. Proof. Let us begin by noting that PS 1;1 is (essentially) a 4-cycle, whence its exclusion from the Theorem.
Reference: [28] <author> A.L. Rosenberg and L. </author> <title> Snyder (1978): Bounds on the costs of data encodings. </title> <journal> Math. Syst. Th. </journal> <volume> 12, </volume> <pages> 9-39. </pages>
Reference-contexts: For obvious reasons, we restrict attention to connected graphs G. The following theorem has been proved many times in the literature. As far as we know, its first appearance was in [34]. The algorithmic proof we present originates in <ref> [28] </ref>. Theorem 2.1 (Cycle-Embeddings for General Graphs) (a) For all N and M N , one can embed the M -node cycle C M in any N-node connected graph G, with dilation 3. (b) No smaller dilation works in general. Proof.
Reference: [29] <author> Y. Saad and M.H. </author> <title> Schultz (1988): Topological properties of hypercubes. </title> <journal> IEEE Trans. Comp. </journal> <volume> 37, </volume> <pages> 867-872. </pages>
Reference-contexts: is also an even-length cycle, this procedure yields a valid 2-coloring of f M m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], [18], <ref> [29] </ref> and in terms of their ability to support efficient interprocessor communication [14], [19], [30], [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [30] <author> Y. Saad and M.H. </author> <title> Schultz (1989): Data communication in hypercubes. </title> <journal> J. Parallel Distr. Comput. </journal> <volume> 6, </volume> <pages> 115-135. 34 </pages>
Reference-contexts: m;n . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], [18], [29] and in terms of their ability to support efficient interprocessor communication [14], [19], <ref> [30] </ref>, [35]. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [31] <author> M.R. Samatham and D.K. </author> <title> Pradhan (1989): The de Bruijn multiprocessor network: a versatile parallel processing and sorting network for VLSI. </title> <journal> IEEE Trans. Comp. </journal> <volume> 38, </volume> <pages> 567-581. </pages>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations [2], [39]; hence, these graphs have been widely proposed as interconnection networks for parallel architectures [6], <ref> [31] </ref>, [33], [36]. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [32] <author> E.J. </author> <title> Schwabe (1989): Normal hypercube algorithms can be simulated on a butterfly with only constant slowdown. </title> <journal> Inform. </journal> <note> Proc. Let. </note>
Reference-contexts: valid 2-coloring of Q n results from labeling each node of Q n with the parity of the number of 1s in its string-name. 2 14 6 Butterflies and Cube-Connected Cycles This section studies the cycle structure of two of the benchmark bounded-degree "approximations" of the hypercube [7], [24], [25], <ref> [32] </ref>. The order-n butterfly graph B n and the order-n cube-connected cycles graph CCC n both have node-set Nodes (B n ) = Nodes (CCC n ) = Z n fi Z n 2 .
Reference: [33] <author> J.T. </author> <title> Schwartz (1980): Ultracomputers. </title> <journal> ACM Trans. Prog. Lang. </journal> <volume> 2, </volume> <pages> 484-521. </pages>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations [2], [39]; hence, these graphs have been widely proposed as interconnection networks for parallel architectures [6], [31], <ref> [33] </ref>, [36]. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [34] <author> M. </author> <month> Sekanina </month> <year> (1960): </year> <title> On an ordering of the set of vertices of a connected graph. </title> <journal> Publ. Fac. Sci. Univ. Brno, </journal> <volume> No. 412, </volume> <pages> 137-142. </pages>
Reference-contexts: For obvious reasons, we restrict attention to connected graphs G. The following theorem has been proved many times in the literature. As far as we know, its first appearance was in <ref> [34] </ref>. The algorithmic proof we present originates in [28]. Theorem 2.1 (Cycle-Embeddings for General Graphs) (a) For all N and M N , one can embed the M -node cycle C M in any N-node connected graph G, with dilation 3. (b) No smaller dilation works in general. Proof.
Reference: [35] <author> C. </author> <title> Stanfill (1987): Communications architecture in the Connection Machine system. </title> <type> Tech. </type> <institution> Rpt. HA87-3, Thinking Machines Corp. </institution>
Reference-contexts: . 2 5 Hypercubes The next family in our study produces some of the most versatile interconnection networks, both in terms of their ability to emulate a large variety of other networks [8], [10], [18], [29] and in terms of their ability to support efficient interprocessor communication [14], [19], [30], <ref> [35] </ref>. The n-dimensional (boolean) hypercube Q n is the n-fold product graph K 2 fi K 2 fi fi K 2 = def K n 2 .
Reference: [36] <author> H. </author> <title> Stone (1971): Parallel processing with the perfect shu*e. </title> <journal> IEEE Trans. Comp., </journal> <volume> C-20, </volume> <pages> 153-161. </pages>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations [2], [39]; hence, these graphs have been widely proposed as interconnection networks for parallel architectures [6], [31], [33], <ref> [36] </ref>. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [37] <author> R. </author> <month> Stong </month> <year> (1987): </year> <title> On Hamiltonian cycles in Cayley graphs of wreath products. </title> <journal> Discr. Math. </journal> <volume> 65, </volume> <pages> 75-80. </pages>
Reference-contexts: Hence, we wish to establish the containment in CCC n of cycles of lengths n2 k for all k 2 Z n+1 f1g. We adapt the proof from <ref> [37] </ref> that establishes the hamiltonianicity of CCC n , by establishing the hamiltonianicity of every graph in the following family of subgraphs of CCC n .
Reference: [38] <author> W.T. Trotter, Jr., and P. </author> <month> Erdos </month> <year> (1978): </year> <title> When the cartesian product of directed cycles is hamiltonian. </title> <journal> J. Graph Th. </journal> <volume> 2, </volume> <pages> 137-142. </pages>
Reference-contexts: It is worth mentioning what we do not try to cover in this study. First, we do not survey the many results that guarantee the presence of hamiltonian cycles in particular families of graphs (defined, e.g., by structure or by density), although such results abound [1], [9], <ref> [38] </ref>, [41], [42]. Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist [16].
Reference: [39] <author> J.D. </author> <title> Ullman (1984): Computational Aspects of VLSI. </title> <publisher> Computer Science Press, </publisher> <address> Rockville, Md. </address>
Reference-contexts: These graphs are known to be able to emulate the much larger butterfly graph and its "butterfly-oriented" relatives efficiently on a large class of computations [2], <ref> [39] </ref>; hence, these graphs have been widely proposed as interconnection networks for parallel architectures [6], [31], [33], [36]. The order-n de Bruijn graph D n is usually presented as a directed graph.
Reference: [40] <author> A. </author> <title> Wigderson (1982): The complexity of the hamiltonian circuit problem for maximal planar graphs. </title> <institution> Princeton Univ. EECS Dept. </institution> <type> Report 298. </type>
Reference-contexts: For instance, detecting either cycle- or path-hamiltonianicity in graphs is NP-complete [20], even for graphs with restricted structure [17], <ref> [40] </ref>. 2 General Graphs Rather than embark immediately on our study of what cycles and paths a graph contains, we begin with two results that place the question of cycles in graphs in perspective.
Reference: [41] <author> D. </author> <title> Witte (1982): On Hamiltonian circuits in Cayley diagrams. </title> <journal> Discrete Math. </journal> <volume> 38, </volume> <pages> 99-108. </pages>
Reference-contexts: It is worth mentioning what we do not try to cover in this study. First, we do not survey the many results that guarantee the presence of hamiltonian cycles in particular families of graphs (defined, e.g., by structure or by density), although such results abound [1], [9], [38], <ref> [41] </ref>, [42]. Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist [16].
Reference: [42] <author> D. Witte and D. </author> <month> Gallian </month> <year> (1984): </year> <title> A survey: Hamiltonian cycles in Cayley graphs. </title> <journal> Discrete Math. </journal> <volume> 51, </volume> <pages> 293-304. </pages>
Reference-contexts: It is worth mentioning what we do not try to cover in this study. First, we do not survey the many results that guarantee the presence of hamiltonian cycles in particular families of graphs (defined, e.g., by structure or by density), although such results abound [1], [9], [38], [41], <ref> [42] </ref>. Similarly, excepting Theorem 2.1, which indicates how "close" general graphs come to being pancyclic, we do not discuss results concerning small-dilation embeddings of cycles in graphs, although such results exist [16].
Reference: [43] <author> M. </author> <month> Yoeli </month> <year> (1962): </year> <title> Binary ring sequences. </title> <journal> Amer. Math. </journal> <volume> Monthly 69, </volume> <pages> 852-855. 35 </pages>
Reference-contexts: De Bruijn graphs enjoy the strongest cycle structure of any of the sparse graphs we consider here in that their pancyclicity persists even when they are viewed as directed graphs. The following theorem originates in <ref> [43] </ref>; the proof we present is patterned after the one in [21], wherein the result is generalized to de Bruijn graphs of arbitrary base. Theorem 8.1 (Cycle-Embeddings for D n ) For all n, the order-n de Bruijn digraph D n is di-pancyclic. Proof.
References-found: 43

