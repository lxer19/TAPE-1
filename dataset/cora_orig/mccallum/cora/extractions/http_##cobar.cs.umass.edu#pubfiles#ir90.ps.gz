URL: http://cobar.cs.umass.edu/pubfiles/ir90.ps.gz
Refering-URL: http://cobar.cs.umass.edu/pubfiles/
Root-URL: 
Email: nagendra@cs.umass.edu  enric@iiia.csic.es  
Title: Corporate Memories as Distributed Case Libraries  MEMORY ENTERPRISE MODELING track in KAW'96  
Author: M.V. Nagendra Prasad Enric Plaza 
Note: Submitted to: CORPORATE  
Address: Amherst, MA 01002, USA  Campus UAB, 08193, Bellaterra Catalonia, Spain  
Affiliation: Dept. of Computer Science University of Massachusetts  IIIA Artificial Intelligence Research Institute CSIC Spanish Council for Scientific Research  
Abstract: Rising operating costs and structural transformations such as resizing and global-ization of companies all over the world have brought into focus the emerging discipline of knowledge management that is concerned with making knowledge pay off. Corporate memories form an important part of such knowledge management initiatives in a company. In this paper, we discuss how, viewing corporate memories as distributed case libraries can benefit from existing techniques for distributed case-based reasoning for resource discovery and exploitation of previous expertise. We present two techniques developed in the context of multi-agent case-based reasoning for accessing and exploiting past experience from corporate memory resources. The first approach, called Negotiated Retrieval, deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. The second approach, based on Federated Peer Learning, deals with two modes of cooperation called DistCBR and ColCBR that let an agent exploit the experience and expertise of peer agents to achieve a local task. fl The first author would like to acknowledge the support by the National Science Foundation under Grant Nos. IRI-9523419 and EEC-9209623. The second author's research reported in this paper has been developed at the IIIA inside the ANALOG Project funded by Spanish CICYT grant 122/93. The content of this paper does not necessarily reflect the position or the policy of the US Government, the Kingdom of Spain Government, or the Catalonia Government, and no official endorsement should be inferred. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Partnet: </author> <title> The Distributed Component Information System. </title> <publisher> &lt;http://part.net&gt;. </publisher>
Reference-contexts: Perhaps some of the most important sources of distributed case bases available to a corporation beyond its organizational boundaries are the distributed digital libraries with mutually related information, like PARTNET <ref> [1] </ref> on the Internet. PARTNET is WWW-accessible distributed electro-mechanical component library developed by the University of Utah's Mechanical Engineering Department as a resource to connect designers and engineers with parts suppliers.
Reference: [2] <author> Agnar Aamodt and Enric Plaza. </author> <title> Case-based reasoning: Foundational issues, method ological variations, and system approaches. </title> <journal> Artificial Intelligence Communications, </journal> <volume> 7(1) </volume> <pages> 39-59, </pages> <year> 1994. </year> <note> &lt;http://www.iiia.csic.es/People/enric/AICom ToC.html&gt;. </note>
Reference-contexts: In the recent times, CBR techniques have enjoyed an immense popularity among researchers and practitioners of AI, building intelligent tools for a number of applications <ref> [2] </ref>. Techniques for distributed case-based reasoning are being developed with the aim of leveraging the insights gained from building and using such applications but at the same time coping with the distributed nature of the knowledge available in many applications. <p> A method can be elementary or can be decomposed into subtasks. These new (sub)tasks can be achieved by their corresponding methods in the same way. For a given task there may be multiple alternative methods (alternative ways to solve the task). For instance, a CBR method <ref> [2] </ref> is decomposed into retrieve, select and reuse subtasks and there are several possible methods to to access stored cases, select one of them according to some criteria, and finally reuse the solution. Retrieval methods allow Noos to inspect and analyze previous specific situations in the episodic memory.
Reference: [3] <author> Hassan At-Kaci and Andreas Podelski. </author> <title> Towards a meaning of LIFE. </title> <journal> J. Logic Program ming, </journal> <volume> 16 </volume> <pages> 195-234, </pages> <year> 1993. </year>
Reference-contexts: Noos is a representation language based on descriptions. A description is formed by a collection of features. The values of features are constants or other descriptions. This approach is close to the -term formalism <ref> [3] </ref>. Domain knowledge is represented in Noos by descriptions of the concepts in that domain.
Reference: [4] <author> Josep Llus Arcos and Enric Plaza. </author> <title> Integration of learning into a knowledge modelling framework. </title> <editor> In Luc Steels, Guss Schreiber, and Walter Van de Velde, editors, </editor> <title> A Future for Knowledge Acquisition, </title> <booktitle> number 867 in Lecture Notes in Artificial Intelligence, </booktitle> <pages> pages 355-373. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year> <month> 14 </month>
Reference-contexts: In this section we first present some basic notions of the language, and later the Plural extension that supports communication and cooperation among CBR agents using Noos. Noos is a reflective object-centered representation language designed to support knowledge modeling of problem solving and learning <ref> [4, 5] </ref>. Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS [23] or components of expertise [20]. A method models a way to solve a task.
Reference: [5] <author> Josep Llus Arcos and Enric Plaza. </author> <title> Inference and reflection in the object-centered rep resentation language Noos. </title> <journal> Journal of Future Generation Computer Systems, </journal> <note> 1996. To appear. </note>
Reference-contexts: Cooperative problem solving in such a system can result in bringing wide range of experience to bear on a task at hand in an agent. The approach taken here to achieve cooperation is through communication using the Noos representation language developed at IIIA for integrating learning and problem solving <ref> [5] </ref>. Plural Noos is an extension of Noos that allows communication and mobile (or "migrating") tasks and methods (to achieve these tasks) among agents that use Noos as representation language. <p> In this section we first present some basic notions of the language, and later the Plural extension that supports communication and cooperation among CBR agents using Noos. Noos is a reflective object-centered representation language designed to support knowledge modeling of problem solving and learning <ref> [4, 5] </ref>. Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS [23] or components of expertise [20]. A method models a way to solve a task.
Reference: [6] <author> Y. Arens, C. Y. Chee, C. Hsu, and C. A. Knoblock. </author> <title> Retrieving and integrating data from multiple information sources. </title> <journal> International Journal of Intelligent and Cooperative Information Systems, </journal> <volume> 2 </volume> <pages> 127-158, </pages> <year> 1993. </year>
Reference-contexts: the agent is an active case-based reasoning entity that can reason about its local case knowledge. 4.2 Negotiated Retrieval 4.2.1 Overview Most of the literature on information gathering deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different data repositories <ref> [6, 7, 16] </ref>. Nagendra Prasad, Lesser and Lander [14, 15] introduced a different model of response to a query where no single source of information may contain the complete response to a query; necessitating piecing together mutually related partial responses from disparate and possibly heterogeneous sources.
Reference: [7] <author> M. C. Bowman, P. B. Danzig, U. Manber, and M. F. Schwartz. </author> <title> Scalable internet resource discovery: Research problems and approaches. </title> <journal> Communications of the ACM, </journal> <year> 1994. </year>
Reference-contexts: the agent is an active case-based reasoning entity that can reason about its local case knowledge. 4.2 Negotiated Retrieval 4.2.1 Overview Most of the literature on information gathering deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different data repositories <ref> [6, 7, 16] </ref>. Nagendra Prasad, Lesser and Lander [14, 15] introduced a different model of response to a query where no single source of information may contain the complete response to a query; necessitating piecing together mutually related partial responses from disparate and possibly heterogeneous sources.
Reference: [8] <author> Michael R Genesereth, , and Steven P Ketchpel. </author> <title> Software agents. </title> <journal> Communications of the ACM, </journal> <volume> 37(7), </volume> <month> July </month> <year> 1994. </year>
Reference: [9] <author> Minh Huynh, Laird Popkin, and Matthew Stecker. </author> <title> Constructing a corporate memory infrastructure from internet discovery technologies. White paper, </title> <publisher> Marble Associates, Inc., </publisher> <year> 1994. </year> <month> &lt;http://www.marble.com/cgi-bin/list-whitepapers&gt;. </month>
Reference-contexts: A corporate memory facility that promotes an organization to leverage its existing information and knowledge assets through effective reuse can be crucial to handling internal and external pressures in an information-driven economy <ref> [9] </ref>. A number of benefits can arise out of a well thought out and implemented corporate memory infrastructure (CMI)[9]: * Competitive pressures require quick and effective reactions to the ever changing mar ket situations. <p> Enablement of effective management of the know-how within a company mandates that a CMI incorporate characteristics like <ref> [9] </ref>: * Semantically rich and flexible access mechanisms * Automated management of potentially large-scale resource sets * Efficient management of change and reuse given the dynamic nature of corporate infor mation and knowledge resources * Adaptability entailing learning from past experiences by recording them along with their context and re-instantiating them
Reference: [10] <author> Susan E. Lander. </author> <title> Distributed Search in Heterogeneous and Reusable Multi-Agent Sys tems. </title> <type> PhD thesis, </type> <institution> Dept. of Computer Sceince, University of Massachusetts, Amherst, </institution> <year> 1994. </year>
Reference-contexts: Some of the agents may have capabilities to analyze particular features of the solu tion space that lead them to recognize opportunities for more efficient customized search strategies. They can together decide to play out specific roles in this kind of customized search. Lander <ref> [10] </ref> presents a good example of a customized search called linear compromise where agents, upon recognizing the linear nature of their solution space, decide to exchange end points and extrapolate between them to find the intersection point as a mutual compromise solution.
Reference: [11] <author> W. Lehnert, C. Cardie, D. Fisher, J. McCarthy, E. Riloff, and S. Soderland. </author> <title> University of massachusetts: Description of the circus system as used for muc-4. </title> <booktitle> In Proceedings of the Fourth Message Understanding Conference (MUC-4), </booktitle> <pages> pages 282-288, </pages> <year> 1992. </year>
Reference-contexts: Certain unstructured databases like text databases can also be converted to case bases by generating semantic descriptors characterizing each of its documents. Much of the work in information extraction and text summarization concentrates on generating such descriptors <ref> [11] </ref>. Given such descriptor generating capabilities, any set of databases with inter-related data can be treated as distributed case bases. Another promising alternative involves creation of metadata [22] that is an informative record attached to a document (structured or unstructured).
Reference: [12] <author> Victor R. Lesser. </author> <title> An Overview of DAI: Distributed AI as Distributed Search. </title> <journal> Journal of the Japanese Society for Artificial Intelligence, </journal> <volume> 5(4) </volume> <pages> 392-400, </pages> <year> 1990. </year>
Reference-contexts: In spite of this deficiency in information, they may arrive at partial and tentative results that may be exchanged by the agents working on subproblems that are interdependent, to reduce the uncertainty that surrounds local problem solving. That is, agents may exploit the interdependencies between subproblems to their benefit <ref> [12, 13] </ref>. In this paper, the information and knowledge resources comprising a corporate memory of an organization are viewed as distributed case bases.
Reference: [13] <author> Victor R. Lesser. </author> <title> A retrospective view of FA/C distributed problem solving. </title> <journal> IEEE Transactions on Systems, Man, and Cybernetics, </journal> <volume> 21(6) </volume> <pages> 1347-1362, </pages> <year> 1991. </year>
Reference-contexts: In spite of this deficiency in information, they may arrive at partial and tentative results that may be exchanged by the agents working on subproblems that are interdependent, to reduce the uncertainty that surrounds local problem solving. That is, agents may exploit the interdependencies between subproblems to their benefit <ref> [12, 13] </ref>. In this paper, the information and knowledge resources comprising a corporate memory of an organization are viewed as distributed case bases. <p> This method can be seen as an instan-tiation of aspects of the cooperative information gathering (CIG)[16] approach to intelligent information gathering from networked information resources. This approach relies on the "FA/C" paradigm <ref> [13] </ref> previously developed as a framework for distributed problem solving. Oates, Nagendra Prasad and Lesser [16] provide an extensive discussion as to why it is better to treat information gathering in a networked environment as distributed problem solving.
Reference: [14] <author> M. V. Nagendra Prasad, Victor R. Lesser, and Susan E. Lander. </author> <title> On retrieval and reasoning in distributed case bases. </title> <booktitle> In 1995 IEEE International Conference on Systems Man and Cybernetics, </booktitle> <address> Vancouver, Canada., </address> <month> October </month> <year> 1995. </year>
Reference-contexts: We present two techniques developed in the context of multi-agent case-based reasoning for accessing and exploiting past experience from corporate memory resources, that by their very nature are distributed. The first approach, called Negotiated Retrieval <ref> [14, 15] </ref>, deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. <p> Nagendra Prasad, Lesser and Lander <ref> [14, 15] </ref> introduced a different model of response to a query where no single source of information may contain the complete response to a query; necessitating piecing together mutually related partial responses from disparate and possibly heterogeneous sources. <p> This 1 Metadata Workshop held on March 1-3, 1995, in Dublin, Ohio addressed the issue of appropriate meta-data elements for document-like objects and identified an initial set of thirteen elements called the Dublin Core [22]. 5 type of retrieval, defined as Negotiated Retrieval <ref> [14, 15] </ref>, adopts the above view of a query to a set of distributed case bases in the corporate memory context. More specifically, a response to a query involves assembling related pieces of information from different case bases to form a composite case. <p> Interested reader is referred to <ref> [14, 15] </ref> for a more formal treatment and empirical studies. Negotiated Retrieval is viewed as a distributed constraint optimization problem where each agent has a set of subcase consistency constraints in addition to the local case base.
Reference: [15] <author> M. V. Nagendra Prasad, Victor R. Lesser, and Susan E. Lander. </author> <title> Retrieval and reasoning in distributed case bases. Journal of Visual Communication and Image Representation, </title> <journal> Special Issue on Digital Libraries, </journal> <volume> 7(1) </volume> <pages> 74-87, </pages> <month> March </month> <year> 1996. </year>
Reference-contexts: We present two techniques developed in the context of multi-agent case-based reasoning for accessing and exploiting past experience from corporate memory resources, that by their very nature are distributed. The first approach, called Negotiated Retrieval <ref> [14, 15] </ref>, deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. <p> Doing so lets us map techniques for distributed problem solving into tools for knowledge manipulation in corporate memories. 3 The first technique is based on a method proposed by Nagendra Prasad, Lesser and Lander <ref> [15] </ref> for retrieval from distributed case bases. This method can be seen as an instan-tiation of aspects of the cooperative information gathering (CIG)[16] approach to intelligent information gathering from networked information resources. This approach relies on the "FA/C" paradigm [13] previously developed as a framework for distributed problem solving. <p> In the following section, we first discuss why some of the resources comprising a corporate memory can be viewed as case bases. We then briefly discuss the Negotiated Retrieval Algorithm and the Federated Peer Learning-based cooperative Case-based Reasoning modes. Readers interested in further details are urged to refer to <ref> [15, 18] </ref>. 4 Retrieval and Reasoning in Distributed Cases-bases A Case-based Reasoning (CBR) system uses lazy "generalization" from past similar cases to the present task. Past similar cases are retrieved through similarity estimates between the current problem P and the precedent cases CB that the system has access to. <p> Nagendra Prasad, Lesser and Lander <ref> [14, 15] </ref> introduced a different model of response to a query where no single source of information may contain the complete response to a query; necessitating piecing together mutually related partial responses from disparate and possibly heterogeneous sources. <p> This 1 Metadata Workshop held on March 1-3, 1995, in Dublin, Ohio addressed the issue of appropriate meta-data elements for document-like objects and identified an initial set of thirteen elements called the Dublin Core [22]. 5 type of retrieval, defined as Negotiated Retrieval <ref> [14, 15] </ref>, adopts the above view of a query to a set of distributed case bases in the corporate memory context. More specifically, a response to a query involves assembling related pieces of information from different case bases to form a composite case. <p> Interested reader is referred to <ref> [14, 15] </ref> for a more formal treatment and empirical studies. Negotiated Retrieval is viewed as a distributed constraint optimization problem where each agent has a set of subcase consistency constraints in addition to the local case base. <p> Projection information alone is sufficient for Agent A 2 to check for the consistency of that partial case with respect to its 7 constraints (more details can be found in <ref> [15] </ref>). If constraints are not violated then the subcases are considered "merged" due to their mutual consistency. Those agents who could not retrieve subcases due to insufficient information in Phase I, try to extend these partial cases by adding their subcases. <p> The set of advice could range from domain independent strategies to highly domain specific ones <ref> [15] </ref>: 1. Some of the agents may do their local retrieval using similarity measures based on "closeness" of the retrieval requirements to the cases in the archive. Such agents can be advised to broaden their search by obtaining cases with poorer similarity values or different similarity measures. 2.
Reference: [16] <author> Tim Oates, M. V. Nagendra Prasad, and Victor R. Lesser. </author> <title> Cooperative information gathering: A distributed problem solving approach. </title> <institution> Computer Science Technical Report 94-66, University of Massachusetts, </institution> <year> 1994. </year>
Reference-contexts: This method can be seen as an instan-tiation of aspects of the cooperative information gathering (CIG)<ref> [16] </ref> approach to intelligent information gathering from networked information resources. This approach relies on the "FA/C" paradigm [13] previously developed as a framework for distributed problem solving. Oates, Nagendra Prasad and Lesser [16] provide an extensive discussion as to why it is better to treat information gathering in a networked environment as distributed problem solving. In a CIG task, potentially useful constraints may exist between different pieces of information. <p> the agent is an active case-based reasoning entity that can reason about its local case knowledge. 4.2 Negotiated Retrieval 4.2.1 Overview Most of the literature on information gathering deals with locating, gathering and selecting the best response to a query from among a multitude of responses from different data repositories <ref> [6, 7, 16] </ref>. Nagendra Prasad, Lesser and Lander [14, 15] introduced a different model of response to a query where no single source of information may contain the complete response to a query; necessitating piecing together mutually related partial responses from disparate and possibly heterogeneous sources.
Reference: [17] <author> Edward Pasahow. </author> <title> Insider's viewpoint. </title> <booktitle> Computer Industry Daily, </booktitle> <month> 19 April </month> <year> 1996. </year>
Reference: [18] <author> Enric Plaza, Josep Llus Arcos, and Francisco Martn. </author> <title> Cooperation Modes among Case-based Reasoning Agents. </title> <booktitle> In Proc. ECAI'96 Workshop on Learning in Distributed Artificial Intelligence Systems, 1996. &lt;http://www.iiia.csic.es/Projects/ FedLearn/CoopCBR.html&gt;. </booktitle> <pages> 15 </pages>
Reference-contexts: The first approach, called Negotiated Retrieval [14, 15], deals with retrieving and assembling "case pieces" from different resources in a corporate memory to form a good overall case. The second approach, based on Federated Peer Learning <ref> [18] </ref>, deals with two modes of cooperation called DistCBR and ColCBR that let an agent exploit the experience and expertise of peer agents to achieve a local task. 2 Corporate Memory Corporate memory consists of the sum total of the information and knowledge resources within an organization. <p> Another aspect of CIG is the explicit recognition and exploitation or avoidance of redundancy, leading to increased robustness or decreased resource demands depending on the context and the structure of the domain. The second technique is the Federated Peer Learning-based cooperative Case-based Reasoning <ref> [18] </ref>. Two modes of cooperative case-based reasoning are discussed: DistCBR where an agent can delegate its authority to another peer agent to solve a problem and ColCBR where an agent maintains authority while exploiting the experience of a peer agent. <p> In the following section, we first discuss why some of the resources comprising a corporate memory can be viewed as case bases. We then briefly discuss the Negotiated Retrieval Algorithm and the Federated Peer Learning-based cooperative Case-based Reasoning modes. Readers interested in further details are urged to refer to <ref> [15, 18] </ref>. 4 Retrieval and Reasoning in Distributed Cases-bases A Case-based Reasoning (CBR) system uses lazy "generalization" from past similar cases to the present task. Past similar cases are retrieved through similarity estimates between the current problem P and the precedent cases CB that the system has access to. <p> Federated Peer Learning Plaza et al.<ref> [18] </ref> discuss two modes of cooperation among case-based reasoning (CBR) agents where an agent can leverage the learning capabilities or past experience of peer agents 2 to achieve a task or solve a problem. These modes are developed within the Federated Peer Learning (FPL) framework [18] that aims to study cooperative problem solving among agents possessing either same or different capabilities and incorporating potentially different knowledge and problem solving behaviors based on their individual learning and experience. <p> This approach is close to the -term formalism [3]. Domain knowledge is represented in Noos by descriptions of the concepts in that domain. Descriptions have a correspondence to labeled graph representations as shown in Figure 1 that is a description of an experiment in the chromatography domain <ref> [18] </ref>. name for this mode of cooperation was introduced in [18] where cooperative CBR was used for agents more generally doing case-based reasoning in a distributed manner. <p> Domain knowledge is represented in Noos by descriptions of the concepts in that domain. Descriptions have a correspondence to labeled graph representations as shown in Figure 1 that is a description of an experiment in the chromatography domain <ref> [18] </ref>. name for this mode of cooperation was introduced in [18] where cooperative CBR was used for agents more generally doing case-based reasoning in a distributed manner.
Reference: [19] <author> Colin Sharp and Neil Lewis. </author> <title> Information Systems and Corporate Memory: Design for Staff Turn-over. </title> <journal> Australian Journal of Information systems, </journal> <volume> 1(1). </volume>
Reference-contexts: Timely availability of relevant information from resources accessible to an organization can lead to more informed decisions on the part of individuals (managers, project leaders etc), thereby promoting the effectiveness and viability of decentralized decision making. 2 * Promotes organizations to become learning systems and avoid repeating the same mistakes <ref> [19] </ref>. Information about past projects protocols, design specifications, documentation of experiences: both failures and successes, alternatives explored can all serve as stimulants for learning, leading to "expertise transfer" and "cross-project fertilizations"[21] within and across organizations.
Reference: [20] <author> Luc Steels. </author> <title> Components of expertise. </title> <journal> AI Magazine, </journal> <volume> 11(2) </volume> <pages> 28-49, </pages> <year> 1990. </year>
Reference-contexts: Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS [23] or components of expertise <ref> [20] </ref>. A method models a way to solve a task. A method can be elementary or can be decomposed into subtasks. These new (sub)tasks can be achieved by their corresponding methods in the same way.
Reference: [21] <author> Johan Vanwelkenhuysen. </author> <title> Corporate Memory, </title> <month> February </month> <year> 1996. </year> <note> &lt;http://www.inria.fr/ acacia/personnel/jvanwelk/projects/cm-project.html&gt;. </note>
Reference: [22] <author> Stuart Weibel. </author> <title> Metadata: The Foundations of Resource Description. </title> <journal> D-lib Mag azine: The Magazine of the Digital Library Forum, </journal> <month> July </month> <year> 1995. </year> <note> &lt;http://www. dlib.org/dlib/July95/07weibel.html&gt;. </note>
Reference-contexts: Much of the work in information extraction and text summarization concentrates on generating such descriptors [11]. Given such descriptor generating capabilities, any set of databases with inter-related data can be treated as distributed case bases. Another promising alternative involves creation of metadata <ref> [22] </ref> that is an informative record attached to a document (structured or unstructured). A typical metadata record could contain elements like subject, author, title, object type, relationship to other elements, coverage etc [22] 1 . <p> Another promising alternative involves creation of metadata <ref> [22] </ref> that is an informative record attached to a document (structured or unstructured). A typical metadata record could contain elements like subject, author, title, object type, relationship to other elements, coverage etc [22] 1 . Development of metadata becomes especially feasible if the authors of a resource or a document could be encouraged to create such a description. <p> The agents negotiate to piece together a mutually acceptable response to the query. This 1 Metadata Workshop held on March 1-3, 1995, in Dublin, Ohio addressed the issue of appropriate meta-data elements for document-like objects and identified an initial set of thirteen elements called the Dublin Core <ref> [22] </ref>. 5 type of retrieval, defined as Negotiated Retrieval [14, 15], adopts the above view of a query to a set of distributed case bases in the corporate memory context.
Reference: [23] <author> Bob Wielinga, Walter van de Velde, Guss Schreiber, and H. Akkermans. </author> <title> Towards a unification of knowledge modelling approaches. </title> <editor> In J. M. David, J. P. Krivine, and R. Simmons, editors, </editor> <booktitle> Second generation Expert Systems, </booktitle> <pages> pages 299-335. </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year>
Reference-contexts: Noos is a reflective object-centered representation language designed to support knowledge modeling of problem solving and learning [4, 5]. Noos is based on the task/method decomposition principle and an analysis of knowledge requirements for methods | and it is related to knowledge modeling frameworks like KADS <ref> [23] </ref> or components of expertise [20]. A method models a way to solve a task. A method can be elementary or can be decomposed into subtasks. These new (sub)tasks can be achieved by their corresponding methods in the same way.
References-found: 23

