URL: file://ftp.cis.ohio-state.edu/pub/tech-report/1996/TR59.ps.gz
Refering-URL: ftp://ftp.cis.ohio-state.edu/pub/tech-report/TRList.html
Root-URL: 
Title: Implementing Multidestination Worms in Switch Based Parallel Systems: Architectural Alternatives and their Impact  
Author: Craig B. Stunkely Rajeev Sivaram Dhabaleswar K. Panda yI.B.M. T. J. P. O. Craig B. Stunkel 
Keyword: Parallel computer architecture, wormhole routing, cut-through routing, multicast, broadcast, collective communication, multistage interconnection networks, performance evaluation.  
Note: Contact Author:  This research is supported in part by NSF Grant MIP-9309627, NSF Career Award MIP-9502294 and an IBM Cooperative Fellowship.  
Address: Yorktown Heights, NY 10598 Columbus, OH 43210  
Affiliation: Watson Research Center Dept. of Computer and Information Science  Box 218 The Ohio State University  
Email: Email: stunkel@watson.ibm.com Email: fsivaram,pandag@cis.ohio-state.edu  
Phone: Phone: (914)-945-3090 Phone: (614)-292-5199, Fax: (614)-292-2911  
Abstract: Multidestination message passing has been proposed as an attractive mechanism for efficiently implementing multicast and other collective operations on direct networks. However, applying this mechanism to switch based parallel systems is non-trivial. In this paper we propose alternative switch architectures with differing buffer organizations to implement multidestination worms on switch based parallel systems. First we discuss issues related to such implementation (deadlock-freedom, replication mechanisms, header encoding, and routing). Next, we demonstrate how an existing central queue based switch architecture supporting unicast message passing can be enhanced fairly easily to accommodate multidestination message passing. Similarly, implementing multidestination worms on an input buffer based switch architecture is discussed. Both these implementations are evaluated against each other as well as against a software-based scheme using the central queue organization. Simulation experiments under a range of traffic (multiple mul-ticast, bimodal, varying degree of multicast, and message length) and system size are used for evaluation. The study demonstrates the superiority of the central queue based switch architecture for efficient implementation of multidestination worms. Such an implementation can perform well without saturating for applied loads of 0.8 or greater. It also indicates that under bimodal traffic the central-queue based hardware multicast implementation affects background unicast traffic less adversely compared to a software-based multicast implementation. Thus, multidestination message passing can easily be applied to switch-based parallel systems to deliver good collective communication performance. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> J. B. Andrews, C. J. Beckmann, and D. K.Poulsen. </author> <title> Notification and multicast networks for synchronization and coherence. </title> <journal> Journal of Parallel and Distributed Computing, </journal> <volume> 15 </volume> <pages> 332-350, </pages> <month> Aug. </month> <year> 1992. </year>
Reference-contexts: The architectures proposed in the current paper allow multicast for packets as large as the buffer size at the switches and the technique works well for both long and short messages. Andrews et al <ref> [1] </ref> have proposed a method for tree based multicast using bit-string encoding in the context of dance-hall architectures. However this work only focuses on store and forward networks and short message lengths. Some parallel systems like the CM-5 [19], Meiko CS2 [4] etc. provide facilities for multicasting.
Reference: [2] <author> V. Bala, J. Bruck, R. Cypher, P. Elustondo, A. Ho, C.-T. Ho, S. Kipnis, and M. Snir. </author> <note> CCL: </note>
Reference-contexts: All of these systems are being used to support either the distributed-memory or distributed-shared memory programming paradigms. For efficient support of either paradigm, these systems require fast collective communication <ref> [2, 24] </ref> support, as defined by the Message Passing Interface (MPI) Standard, from the underlying communication subsystem. Among the set of collective communication operations, broadcast and multicast are quite fundamental and they get used in several other operations like barrier synchronization and reduction [30].
References-found: 2

