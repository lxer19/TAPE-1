URL: ftp://ftp.cs.utexas.edu/pub/psp/unity/new_unity/composition.ps.Z
Refering-URL: http://www.cs.utexas.edu/users/psp/newunity.html
Root-URL: http://www.cs.utexas.edu
Email: misra@cs.utexas.edu  
Phone: (512) 471-9547  
Title: Chapter 5 Asynchronous Compositions of Programs  
Author: Jayadev Misra 
Note: 1 This material is based in part upon work supported by the Texas Advanced Research Program under Grant No. 003658-219 and by the National Science Foundation Award CCR-9111912.  
Date: April 5, 1994  
Address: Austin, Texas 78712  
Affiliation: Department of Computer Sciences The University of Texas at Austin  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> K. M. Chandy and J. Misra. </author> <title> Systolic algorithms as programs. </title> <journal> Distributed Computing, </journal> <volume> 1 </volume> <pages> 177-183, </pages> <year> 1986. </year>
Reference-contexts: CONDITIONAL PROPERTIES 45 Linear Networks Properties of a regular network|a systolic array <ref> [7, 1] </ref>, for instance|can often be established easily if each component of the network is specified by a suitable conditional property.
Reference: [2] <author> K. Mani Chandy and Jayadev Misra. </author> <title> Proofs of networks of processes. </title> <publisher> IEEE, </publisher> <address> SE,7(4):417-426, </address> <month> July </month> <year> 1981. </year>
Reference-contexts: In the example below, program F i communicates with both F i1 and F i+1 , 0 &lt; i &lt; N ; yet, the apparent circularity is resolved by judicious use of conditional properties. Example (Factorial Network): This example is from Misra and Chan-dy <ref> [2] </ref>. A network to compute factorials of a sequence of natural numbers is shown in Figure 5.5.
Reference: [3] <author> K. Mani Chandy and Jayadev Misra. </author> <title> Parallel Program Design: A Foundation. </title> <publisher> Addison Wesley, </publisher> <year> 1988. </year>
Reference-contexts: Programs CM and SM can be specified independently. Bibliographic Notes The notion of union is from Chandy and Misra <ref> [3] </ref>; similar operators had been introduced earlier in CSP [5] and CCS [8]. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp [6] and Misra [10]. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1.
Reference: [4] <author> John Guttag. </author> <title> Abstract data types and the development of data structures. </title> <journal> C.ACM, </journal> <volume> 20(6) </volume> <pages> 396-404, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: It may be useful to hide the internal structure of the data object in its specification; thus "full" or "empty" may not appear in a specification of a queue. A data object can be specified succinctly <ref> [4] </ref> by writing a set of equations that relate the effects of the various operations on this object. <p> Discussion Equational notation, as in <ref> [4] </ref>, is attractive for specifying data objects because it separates the concern of implementation from deductions of properties of the object. Concurrently accessed objects do not seem amenable to equational specification. We have proposed to specify such objects using traditional safety and progress properties.
Reference: [5] <author> C. A. R. Hoare. </author> <title> Communicating Sequential Processes. </title> <booktitle> Prentice-Hall International, </booktitle> <address> London, </address> <year> 1984. </year>
Reference-contexts: N 7! sh =F , cancellation on (above, s11) rf ^ :rg ^ sh = N 7! sh = F , cancellation on (s12, above) rf ^ sh = N 7! sh = F , disjunction of the above two 2 5.3.4 Vending Machine This example is inspired by Hoare <ref> [5] </ref>. A vending machine has a coin slot that accepts either a small coin or a large coin from a user. The vending machine has two buttons, one for requesting a small chocolate and the other for a large chocolate. <p> Synchronous message communication, where the send and the receive happen simultaneously <ref> [5] </ref>, cannot be easily modelled using the union operator on the sending and receiving processes. A more elaborate example of message communication is treated next. <p> Programs CM and SM can be specified independently. Bibliographic Notes The notion of union is from Chandy and Misra [3]; similar operators had been introduced earlier in CSP <ref> [5] </ref> and CCS [8]. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp [6] and Misra [10]. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1.
Reference: [6] <author> E. Knapp. </author> <title> Refinement as a Basis for Concurrent Program Design. </title> <type> PhD thesis, </type> <institution> The University of Texas at Austin, </institution> <month> May </month> <year> 1992. </year>
Reference-contexts: A more general approach is to permit "data refinements" in which a group of variables is replaced by another group; the relation between the two groups of variables could be given by an invariant relation. See Knapp <ref> [6] </ref> for a discussion of refinement along these lines. 2 5.5.3 Alternative Definition of Refinement We propose an alternative definition of refinement that is weaker (more general) than the previous one. <p> Programs CM and SM can be specified independently. Bibliographic Notes The notion of union is from Chandy and Misra [3]; similar operators had been introduced earlier in CSP [5] and CCS [8]. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp <ref> [6] </ref> and Misra [10]. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1. A program F consists of the following statements x := 0 if b 5.7. EXERCISES 55 where x is local to F .
Reference: [7] <author> H. T. Kung and C. E. Leiserson. </author> <title> Systolic arrays (for vlsi). </title> <editor> In I. S. Duff and G. W. Stewart, editors, </editor> <title> Sparse Matrix Proc., </title> <booktitle> 1978, </booktitle> <pages> pages 256-282. </pages> <address> Philadelphia, Pennsylvania: </address> <publisher> SIAM, </publisher> <year> 1979. </year>
Reference-contexts: CONDITIONAL PROPERTIES 45 Linear Networks Properties of a regular network|a systolic array <ref> [7, 1] </ref>, for instance|can often be established easily if each component of the network is specified by a suitable conditional property.
Reference: [8] <author> R. Milner. </author> <title> Communication and Concurrency. </title> <booktitle> International Series in Computer Science, </booktitle> <editor> C. A. R. Hoare, Series Editor. </editor> <publisher> Prentice-Hall, </publisher> <year> 1989. </year>
Reference-contexts: Programs CM and SM can be specified independently. Bibliographic Notes The notion of union is from Chandy and Misra [3]; similar operators had been introduced earlier in CSP [5] and CCS <ref> [8] </ref>. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp [6] and Misra [10]. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1. A program F consists of the following statements x := 0 if b 5.7.
Reference: [9] <author> J. Misra. </author> <title> The importance of ensuring. </title> <booktitle> Notes on UNITY: </booktitle> <pages> 11-90, </pages> <month> Jan-uary </month> <year> 1990. </year>
Reference-contexts: Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp [6] and Misra [10]. The example in Section 5.5.3 is based on Misra <ref> [9] </ref>. 5.7 Exercises 1. A program F consists of the following statements x := 0 if b 5.7. EXERCISES 55 where x is local to F .
Reference: [10] <author> J. Misra. </author> <title> Soundness of the substitution axiom. </title> <booktitle> Notes on UNITY: </booktitle> <pages> 14-90, </pages> <month> March </month> <year> 1990. </year>
Reference-contexts: Bibliographic Notes The notion of union is from Chandy and Misra [3]; similar operators had been introduced earlier in CSP [5] and CCS [8]. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders [12], Knapp [6] and Misra <ref> [10] </ref>. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1. A program F consists of the following statements x := 0 if b 5.7. EXERCISES 55 where x is local to F .
Reference: [11] <author> J. Misra. </author> <title> Specifying concurrent objects as communicating processes. </title> <booktitle> Science of Computer Programming, </booktitle> <volume> 14(10) </volume> <pages> 159-184, </pages> <month> October </month> <year> 1990. </year> <note> 69 70 BIBLIOGRAPHY </note>
Reference-contexts: jx i j = m 7! jy i j m in G : i We conclude, for any m, m 0 jx N j = m 7! jy N j m in h [] i : 0 i N : F i i Concurrent Data Objects A concurrent data object <ref> [11] </ref> is, merely, a global variable shared among several programs. Sometimes, it is useful to focus attention on a single variable (or a group of variables) and specify the manner in which it may be accessed (read or written).
Reference: [12] <author> B. A. Sanders. </author> <title> Eliminating the substitution axiom from unity logic. </title> <journal> Formal Aspects of Computing, </journal> <volume> 3 </volume> <pages> 189-205, </pages> <year> 1991. </year>
Reference-contexts: Programs CM and SM can be specified independently. Bibliographic Notes The notion of union is from Chandy and Misra [3]; similar operators had been introduced earlier in CSP [5] and CCS [8]. Some of the difficulties regarding application of the substitution axiom have been noted in Sanders <ref> [12] </ref>, Knapp [6] and Misra [10]. The example in Section 5.5.3 is based on Misra [9]. 5.7 Exercises 1. A program F consists of the following statements x := 0 if b 5.7. EXERCISES 55 where x is local to F .
References-found: 12

