URL: http://www.daimi.aau.dk/~tamtoft/cv/cv.ps.Z
Refering-URL: http://www.daimi.aau.dk/~tamtoft/
Root-URL: http://www.daimi.aau.dk
Email: internet: tamtoft@daimi.au.dk  
Title: Curriculum vitae Marital status: Single. Languages: Danish, English, working German, a bit of Russian and
Author: Torben Amtoft Neil D. Jones. Hanne Riis Nielson and Flemming Nielson 
Affiliation: Computer Science at DIKU, Copenhagen.  Computer Science at DAIMI, University of Aarhus.  associate at DAIMI, University of Aarhus,  
Note: 1 Personal Record Birth: the 6th of June 1963 in Copenhagen. Nationality: Danish citizen.  2 Academic Record 1982 Enrolled at the University of Copenhagen. 1985 Completed "bifag" (corresponding to a Bachelor's degree) in Com puter Science as well as in Mathematics. 1989 August 18th: Graduated as "cand.scient" (corresponding to a M.Sc.) in  Advisor:  21th: Awarded the Ph.D. degree in  Advisor: Brian H. Mayoh. From October 1992 I have had positions as research assistant and as research  working for  on the projects  funded by the Danish Research Councils; and  
Date: October 13, 1998  1993 June  
Abstract-found: 0
Intro-found: 0
Reference: [1] <author> Torben Amtoft, Thomas Nikolajsen, Jesper Larsson Traff, and Neil D. Jones. </author> <title> Experiments with implementations of two theoretical constructions. </title> <booktitle> In Logic at Botik, USSR, </booktitle> <pages> pages 119-133, </pages> <address> SLNCS 363, </address> <month> July </month> <year> 1989. </year>
Reference-contexts: and Flemming Nielson on the projects * DART (Design, Analysis and Reasoning about Tools), funded by the Danish Research Councils; and 1 * LOMAPS (Logical and Operational Methods in the Analysis of Pro- grams and Systems), an ESPRIT Basic Research Action. 2.1 Overview of research Memoization and theory of computation. <ref> [1] </ref> investigates the meaning and practical use of the 2nd recursion theorems by Kleene and Rogers.
Reference: [2] <author> Torben Amtoft and Jesper Larsson Traff. </author> <title> Memoization and its use in lazy and incremental program generation. </title> <type> Master's thesis, </type> <institution> DIKU, University of Copenhagen, Denmark, </institution> <month> August </month> <year> 1989. </year> <note> No. 89-8-1. </note>
Reference-contexts: My M.Sc. thesis <ref> [2] </ref> is about how to improve efficiency of program execution by means of a generalized form of memoization, resembling partial evaluation; as reported in [4] Cook's ingenious linear-time simulation of 2DPDAs can be thought of as an instance of this technique. Models for program optimisation.
Reference: [3] <author> Torben Amtoft. </author> <title> Properties of unfolding-based meta-level systems. In Partial Evaluation and Semantics-Based Program Manipulation (PEPM'91), New Haven, Connecticut. </title> <journal> Sigplan Notices, </journal> <volume> vol. 26, no. 9, </volume> <pages> pages 243-254, </pages> <year> 1991. </year>
Reference-contexts: Models for program optimisation. The main purpose of my Ph.D. thesis [6] is to develop a model enabling one to reason about various techniques for program optimisation, in particular wrt. speedup and correctness. Concerning speedup, some of the results are presented in <ref> [3] </ref>; in particular the reasons why a program transformation may yield more than a constant speedup are factored out. Concerning correctness, some results (generalising previous approaches from the literature) about preservation of termination properties (for a logic language) are presented in [5]. Specification of analysis and transformation.
Reference: [4] <author> Torben Amtoft and Jesper Larsson Traff. </author> <title> Partial memoization for obtaining linear time behavior of a 2DPDA. </title> <journal> Theoretical Computer Science, </journal> <volume> 98(2) </volume> <pages> 347-356, </pages> <month> May </month> <year> 1992. </year>
Reference-contexts: My M.Sc. thesis [2] is about how to improve efficiency of program execution by means of a generalized form of memoization, resembling partial evaluation; as reported in <ref> [4] </ref> Cook's ingenious linear-time simulation of 2DPDAs can be thought of as an instance of this technique. Models for program optimisation. The main purpose of my Ph.D. thesis [6] is to develop a model enabling one to reason about various techniques for program optimisation, in particular wrt. speedup and correctness.
Reference: [5] <author> Torben Amtoft. </author> <title> Unfold/fold transformations preserving termination properties. </title> <booktitle> In Proc. PLILP'92, </booktitle> <pages> pages 187-201, </pages> <address> SLNCS 631, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Concerning correctness, some results (generalising previous approaches from the literature) about preservation of termination properties (for a logic language) are presented in <ref> [5] </ref>. Specification of analysis and transformation. In [7], strictness analysis is formulated in terms of type inference. A type reconstruction algorithm is presented, and the strictness information is used to avoid some superfluous "thunkifications" when translating from call-by-name into call-by-value.
Reference: [6] <author> Torben Amtoft. </author> <title> Sharing of Computations. </title> <type> PhD thesis, DAIMI, </type> <institution> University of Aarhus, Denmark, </institution> <year> 1993. </year> <note> Technical report PB-453. Available by WWW from http://www.daimi.au.dk/~tamtoft/Papers/thesis.ps.Z. 6 </note>
Reference-contexts: Models for program optimisation. The main purpose of my Ph.D. thesis <ref> [6] </ref> is to develop a model enabling one to reason about various techniques for program optimisation, in particular wrt. speedup and correctness. Concerning speedup, some of the results are presented in [3]; in particular the reasons why a program transformation may yield more than a constant speedup are factored out.
Reference: [7] <author> Torben Amtoft. </author> <title> Strictness types: An inference algorithm and an appli-cation. </title> <type> Technical Report PB-448, DAIMI, </type> <institution> University of Aarhus, Den-mark, </institution> <month> August </month> <year> 1993. </year>
Reference-contexts: Concerning correctness, some results (generalising previous approaches from the literature) about preservation of termination properties (for a logic language) are presented in [5]. Specification of analysis and transformation. In <ref> [7] </ref>, strictness analysis is formulated in terms of type inference. A type reconstruction algorithm is presented, and the strictness information is used to avoid some superfluous "thunkifications" when translating from call-by-name into call-by-value.
Reference: [8] <author> Torben Amtoft. </author> <title> Minimal thunkification. </title> <booktitle> In Proc. WSA'93, </booktitle> <pages> pages 218-229, </pages> <address> SLNCS 724, </address> <year> 1993. </year>
Reference-contexts: Of particular interest is the proof technique: the correctness of the translation is proved simultaneously with the correctness of the analysis. The part concerning type reconstruction is published in [9]; the part concerning translation is published in <ref> [8] </ref>. Effect analysis for concurrent systems. [10] develops a sound and complete type and behaviour reconstruction algorithm for a fragment of CML, the starting point being the inference system presented by Hanne Riis Nielson and Flemming Nielson at POPL'94.
Reference: [9] <author> Torben Amtoft. </author> <title> Local type reconstruction by means of symbolic fixed point iteration. </title> <booktitle> In Proc. ESOP'94, </booktitle> <pages> pages 43-57, </pages> <address> SLNCS 788, </address> <year> 1994. </year>
Reference-contexts: Of particular interest is the proof technique: the correctness of the translation is proved simultaneously with the correctness of the analysis. The part concerning type reconstruction is published in <ref> [9] </ref>; the part concerning translation is published in [8]. Effect analysis for concurrent systems. [10] develops a sound and complete type and behaviour reconstruction algorithm for a fragment of CML, the starting point being the inference system presented by Hanne Riis Nielson and Flemming Nielson at POPL'94.
Reference: [10] <author> Torben Amtoft, Flemming Nielson, and Hanne Riis Nielson. </author> <title> Type and behaviour reconstruction for higher-order concurrent programs. </title> <journal> Journal of Functional Programming, </journal> <volume> 7(3) </volume> <pages> 321-347, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: Of particular interest is the proof technique: the correctness of the translation is proved simultaneously with the correctness of the analysis. The part concerning type reconstruction is published in [9]; the part concerning translation is published in [8]. Effect analysis for concurrent systems. <ref> [10] </ref> develops a sound and complete type and behaviour reconstruction algorithm for a fragment of CML, the starting point being the inference system presented by Hanne Riis Nielson and Flemming Nielson at POPL'94.
Reference: [11] <author> Hanne Riis Nielson, Flemming Nielson, and Torben Amtoft. </author> <title> Polymorphic subtyping for effect analysis: the static semantics. </title> <booktitle> In Analysis and Verification of Multiple-Agent Languages, </booktitle> <pages> pages 141-171, </pages> <address> SLNCS 1192, </address> <year> 1997. </year>
Reference-contexts: The algorithm returns a set of constraints; and we show how to solve these in the monomorphic case (but not in general). [16] (that improves upon <ref> [11] </ref>, [12] og [13]) develops an annotated type and effect system for a fragment of CML; the system uses constraints on the left hand side of the turnstile and integrates let-polymorphism, subtyping and effects.
Reference: [12] <author> Torben Amtoft, Flemming Nielson, Hanne Riis Nielson, and Jurgen Ammann. </author> <title> Polymorphic subtyping for effect analysis: the dynamic semantics. </title> <booktitle> In Analysis and Verification of Multiple-Agent Languages, </booktitle> <pages> pages 172-206, </pages> <address> SLNCS 1192, </address> <year> 1997. </year>
Reference-contexts: The algorithm returns a set of constraints; and we show how to solve these in the monomorphic case (but not in general). [16] (that improves upon [11], <ref> [12] </ref> og [13]) develops an annotated type and effect system for a fragment of CML; the system uses constraints on the left hand side of the turnstile and integrates let-polymorphism, subtyping and effects.
Reference: [13] <author> Flemming Nielson, Hanne Riis Nielson, and Torben Amtoft. </author> <title> Polymorphic subtyping for effect analysis: the algorithm. </title> <booktitle> In Analysis and Verification of Multiple-Agent Languages, </booktitle> <pages> pages 207-243, </pages> <address> SLNCS 1192, </address> <year> 1997. </year>
Reference-contexts: The algorithm returns a set of constraints; and we show how to solve these in the monomorphic case (but not in general). [16] (that improves upon [11], [12] og <ref> [13] </ref>) develops an annotated type and effect system for a fragment of CML; the system uses constraints on the left hand side of the turnstile and integrates let-polymorphism, subtyping and effects.
Reference: [14] <author> Torben Amtoft, Hanne Riis Nielson, and Flemming Nielson. </author> <title> Behaviour analysis for validating communication patterns. </title> <journal> Springer International Journal on Software Tools for Technology Transfer, </journal> <note> vol 2. To appear, 1998. A preliminary version appeared as DAIMI Technical Report PB-527, </note> <month> September </month> <year> 1997. </year>
Reference-contexts: We show that the system is semantically sound; and develop a 2 reconstruction algorithm that is sound and also complete. This algorithm has been used as the basis of a prototype implementation, available for experimentation on the WWW, cf. Sect. 2.7. <ref> [14] </ref> contains a description of the system, illustrated by several examples, as well as a brief account of the underlying theory. [15] shows that the system greatly assists in validating a number of safety properties for "realistic" concurrent systems. 2.2 Teaching experience 1985-89 I was a teaching assistant at DIKU on
Reference: [15] <author> Hanne Riis Nielson, Torben Amtoft, and Flemming Nielson. </author> <title> Behaviour analysis and safety conditions: a case study in CML. </title> <booktitle> In Proc. FASE'98 (part of ETAPS'98 ), pages 255-269, </booktitle> <volume> SLNCS 1382, </volume> <year> 1998. </year>
Reference-contexts: This algorithm has been used as the basis of a prototype implementation, available for experimentation on the WWW, cf. Sect. 2.7. [14] contains a description of the system, illustrated by several examples, as well as a brief account of the underlying theory. <ref> [15] </ref> shows that the system greatly assists in validating a number of safety properties for "realistic" concurrent systems. 2.2 Teaching experience 1985-89 I was a teaching assistant at DIKU on the third-year course "Dat2".
Reference: [16] <author> Torben Amtoft, Flemming Nielson, and Hanne Riis Nielson. </author> <title> Polymorphic subtyping for side effects. </title> <type> Technical Report PB-529, DAIMI, </type> <institution> University of Aarhus, Denmark, </institution> <month> October </month> <year> 1997. </year> <note> A book based on this manuscript will be published by Imperial College Press. 7 </note>
Reference-contexts: The algorithm returns a set of constraints; and we show how to solve these in the monomorphic case (but not in general). <ref> [16] </ref> (that improves upon [11], [12] og [13]) develops an annotated type and effect system for a fragment of CML; the system uses constraints on the left hand side of the turnstile and integrates let-polymorphism, subtyping and effects. <p> On a somewhat larger scale, Spring 1997 I (assisted by Kirsten Gasser) implemented a system for behaviour analysis of CML (based on <ref> [16] </ref>); the system is programmed in Moscow ML and makes use of the "compilation unit" system (to gain modularity) and a selection of efficient data structures (to achieve satisfying response times). It is accessible at http://www.daimi.au.dk/~bra8130/TBAcml/TBA CML.html.
References-found: 16

