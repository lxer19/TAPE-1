URL: http://www.eecs.umich.edu/~anica/proposal/proposal.ps
Refering-URL: http://www.eecs.umich.edu/~anica/
Root-URL: http://www.cs.umich.edu
Email: anica@eecs.umich.edu  
Title: Information Integration of Dynamic Heterogeneous Information Sources: Loosely-Specified Query Processing and View Evolution Support  
Author: Associate Professor Edmund H. Durfee Anisoara Nica Adviser: Elke A. Rundensteiner 
Degree: A Thesis Proposal Presented to the Following Committee: Assistant Professor Elke A. Rundensteiner, Chair  Associate Professor Atul Prakash Professor Daniel Teichroew Professor Toby Teorey by  
Date: November, 1997  
Web: http://www.eecs.umich.edu/~anica  
Address: 1301 Beal Avenue, Ann Arbor, MI 48109-2122  
Affiliation: Department of Electrical Engineering and Computer Science University of Michigan  
Abstract-found: 0
Intro-found: 0
Reference: [ABD + 96] <author> D.E. Atkins, W.P. Birmingham, E.H. Durfee, E. Glover, T. Mullen, E.A. Rundensteiner, E. Soloway, J. Vidal, R. Wallace, and M. Wellman. </author> <title> Toward Inquiry-Based Education Through Interacting Software Agents. </title> <booktitle> IEEE Computer, </booktitle> <month> May </month> <year> 1996. </year>
Reference-contexts: In my dissertation, I propose the Dynamic Information Integration Model (DIIM) (Section 7) as overall approach for tackling these problems. Similar to other large-scale systems <ref> [ABD + 96] </ref>, it is assumed that all information sources, may they be fully structured like an SQL database management system, partially structured like SGML files [Gol91], or even an application program like "finger", register their existence as well as a description of their content and capabilities with a knowledge base <p> + 96], it is assumed that all information sources, may they be fully structured like an SQL database management system, partially structured like SGML files [Gol91], or even an application program like "finger", register their existence as well as a description of their content and capabilities with a knowledge base <ref> [ABD + 96] </ref>. <p> The filled-in form would contain the ontology of terms as well as built-in predicates (see <ref> [ABD + 96] </ref>). 8 This option could come from the past experience with the same kind of query. 27 11 Formal Basis for Query Refinement 11.1 Steps of Query Processing The DIIM query language permits loosely-specified queries which in general cannot be evaluated given the permissible adornments for the external relations <p> constraints are used, then the smaller the number of join constraints, the smaller the number of plans will be. 15 Related Work This research was started in the general context of a large, interdisciplinary project of constructing a distributed agent-based architecture for UMDL, the University of Michigan Digital Library System <ref> [ABD + 96] </ref>. UMDL assumes a large, decentralized environment of independent agents, including task planners, mediators, and thousands of information sources.
Reference: [AKS96] <author> Y. Arens, C. A. Knoblock, and W.-M. Shen. </author> <title> Query Reformulation for Dynamic Information Integration. </title> <journal> Journal of Intelligent Information Systems, </journal> <volume> 6 </volume> (2/3):99-130, 1996. 
Reference-contexts: The approaches to information search and retrieval ranges from one-information-source-at-a-time keyword search such as on-line search engines - e.g., Lycos, Yahoo! to highly integrated federated multidatabase systems. Lately, new approaches that combine these two extremes, such as Information Manifold [KLSS95], SIMS <ref> [AKS96] </ref>, GARLIC [HKWY97] and TSIMMIS [GMHI + 95] are based on apriori defined global schemas or unified world views that allow heterogeneous information sources to join such systems by uniformly describing their capabilities against these schemas. <p> However, the query reformulation process itself is similar to our planning algorithm in that they also consider the query templates of the external information sources. Other related work that addresses the problem of information integration are the SIMS <ref> [AKS96] </ref> and SoftBot [EW94] projects. In the SIMS project, every information source maps to a class in the description logic system LOOM and the user interaction with the system is via queries posed against the class schema. <p> On this venue, related work that addresses the problem of information integration are among others the SIMS <ref> [AKS96] </ref> and SoftBot [EW94] projects. In the SIMS project, a unified schema is apriori defined and the user interaction with the system is via queries posed against the unified schema.
Reference: [BDMS94] <author> C.M. Bowman, P.B. Danzig, U. Manber, and M.F. Schwartz. </author> <title> Scalable Internet Resource Discovery: Research Problems and Approaches. </title> <journal> Communications of the ACM, </journal> <volume> 37(8), </volume> <month> August </month> <year> 1994. </year>
Reference: [BS93] <editor> C. Backstrom and E. Sandewall, editors. </editor> <booktitle> Current Trends in AI Planning- EWSO'93. </booktitle> <publisher> IOS Press, </publisher> <year> 1993. </year>
Reference: [Cat94] <author> R.G.G. Cattell. </author> <title> Object Data Management - Object-Oriented and Extended Relational Database Systems. </title> <year> 1994. </year>
Reference: [CKP95] <author> S. Chaudhuri, R. Krishnamurthy, and S. Potamianos. </author> <title> Optimizing Query with Materialized Views. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <year> 1995. </year>
Reference-contexts: In fact, most of the smarts of the query planning and optimization is being pushed into the traditional query planner technology, such as one available in DB2 system, by developing rules to be associated with wrappers of an IS that encapsulate the capabilities of each IS. Chaudhuri et al. <ref> [CKP95] </ref> relates to our DIIM approach in as much as our information source descriptions, in particular, the query templates along with the source descriptions, can be regarded as view definitions. Our planning algorithm thus effectively constructs and optimizes queries across these `views' as done in [CKP95]. <p> Chaudhuri et al. <ref> [CKP95] </ref> relates to our DIIM approach in as much as our information source descriptions, in particular, the query templates along with the source descriptions, can be regarded as view definitions. Our planning algorithm thus effectively constructs and optimizes queries across these `views' as done in [CKP95]. However, our query planning is more sophisticated because we also incorporate join and integrity constraints. In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction.
Reference: [EN94] <author> R. Elmasri and S. B. Navathe. </author> <title> Fundamentals of Database Systems. </title> <publisher> The Ben-jamin/Cummings Publishing Company, Inc., </publisher> <year> 1994. </year>
Reference: [EW94] <author> O. Etzioni and D. Weld. </author> <title> A Softbot-Based Interface to the Internet. </title> <journal> Communication of ACM, </journal> <year> 1994. </year>
Reference-contexts: However, the query reformulation process itself is similar to our planning algorithm in that they also consider the query templates of the external information sources. Other related work that addresses the problem of information integration are the SIMS [AKS96] and SoftBot <ref> [EW94] </ref> projects. In the SIMS project, every information source maps to a class in the description logic system LOOM and the user interaction with the system is via queries posed against the class schema. <p> On this venue, related work that addresses the problem of information integration are among others the SIMS [AKS96] and SoftBot <ref> [EW94] </ref> projects. In the SIMS project, a unified schema is apriori defined and the user interaction with the system is via queries posed against the unified schema.
Reference: [GJM96] <author> A. Gupta, H.V. Jagadish, </author> <title> and I.S. Mumick. Data Integration using Self-Maintainable Views. </title> <booktitle> In Proceedings of International Conference on Extending Database Technology (EDBT), </booktitle> <year> 1996. </year>
Reference-contexts: While no one has addressed the view synchronization problem as such, there are several issues we address for EVE that relate to work done before in other contexts as outlined below. Gupta et al. <ref> [GJM96] </ref> and Mohania et al. [MD96] address the problem of how most efficiently to maintain a materialized view after a view redefinition explicitly initiated by the user takes place. They study under which conditions this view maintenance can take place without requiring access to base relations, i.e., the self-maintainability issue.
Reference: [GL94] <author> C. </author> <title> Galindo-Legaria. </title> <booktitle> Outerjoins as disjunctions . In Proceedings of SIGMOD, </booktitle> <year> 1994. </year>
Reference-contexts: A refined query uses join consistencies among sources and at the same time is in agreement with their query interfaces. I introduce the notion of connected relation as a natural extension of the concept of full disjunction <ref> [GL94] </ref>. In the default case when only natural joins are defined in DIIM, the semantics of the two concepts (connected relation and full disjunction) are equivalent.
Reference: [GM95] <author> A. Gupta and I.S. Mumick. </author> <title> Maintenance of Materialized Views: Problems, Techniques, </title> <journal> and Applications. IEEE Data Engineering Bulletin, Special Issue on Materialized Views and Warehousing, </journal> <volume> 18(2) </volume> <pages> 3-19, </pages> <year> 1995. </year>
Reference-contexts: This taxonomy represents a suitable 5 classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance <ref> [GM95, Wid95] </ref>, view redefinition [GMR95, MD96], etc. We also use the taxonomy to identify a new view adaptation problem, called view synchronization, that corresponds to the process of view definition adaptation triggered by capability changes of ISs. <p> the problem spaces depicted in Figure 3 are defined by a common view adaptability preference: maintaining the extent of the materialized view up-to-date as indicated on the Willingness to Adapt dimension. (a) The problem of materialized view maintenance after base relation updates is well studied in the database literature (see <ref> [GM95, Wid95] </ref> for an overview of problems and solutions). Its coordinates are marked by black squares in Figure 3. <p> problem (which makes it different than any other view maintenance problem (see Section 2)) is that an IS capability change affects not only its schema but its data as well, thus the old data is generally no longer available for the view maintenance as assume in other view maintenance problems <ref> [GM95, GMR95, MD96] </ref>. The characteristics of this problem space as 63 well as what subproblems we want to tackle under this task are described in Section 16.2.
Reference: [GMHI + 95] <author> H. Garcia-Molina, J. Hammer, K. Ireland, Y. Papakonstantinou, J. Ullman, and J. Widom. </author> <title> Integrating and Accessing Heterogeneous Information Sources in TSIMMIS. </title> <booktitle> In Proc. of the AAAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments, </booktitle> <address> Stanford, California, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: The approaches to information search and retrieval ranges from one-information-source-at-a-time keyword search such as on-line search engines - e.g., Lycos, Yahoo! to highly integrated federated multidatabase systems. Lately, new approaches that combine these two extremes, such as Information Manifold [KLSS95], SIMS [AKS96], GARLIC [HKWY97] and TSIMMIS <ref> [GMHI + 95] </ref> are based on apriori defined global schemas or unified world views that allow heterogeneous information sources to join such systems by uniformly describing their capabilities against these schemas. <p> In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU96, PGMW95, GMHI + 95] </ref>. <p> The queries in Information Manifold are expressed in terms of world-view relations and loosely-specified queries are not supported. The work related to the TSIMMIS system <ref> [PGMW95, PGMU96, GMHI + 95] </ref> is pursuing a similar goal of information gathering across multiple heterogeneous sources. However, their proposed query 49 language assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [GMR95] <author> A. Gupta, I.S. Mumick, and K.A. Ross. </author> <title> Adapting Materialized Views after Redefinition. </title> <booktitle> In Proceedings of SIGMOD, </booktitle> <pages> pages 211-222, </pages> <year> 1995. </year> <month> 66 </month>
Reference-contexts: This taxonomy represents a suitable 5 classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance [GM95, Wid95], view redefinition <ref> [GMR95, MD96] </ref>, etc. We also use the taxonomy to identify a new view adaptation problem, called view synchronization, that corresponds to the process of view definition adaptation triggered by capability changes of ISs. <p> the view has no explicit apriori changes, (2) the IS changes its data extent, (3) the view user wants the view extent up-to-date, and (4) the IS doesn't preserve its old data. (b) The problem of materialized view maintenance after view redefinition has been recently studied by Gupta et al. <ref> [GMR95] </ref> and by Mohania et al. [MD96]. Its coordinates are marked by triangles in Figure 3. <p> problem (which makes it different than any other view maintenance problem (see Section 2)) is that an IS capability change affects not only its schema but its data as well, thus the old data is generally no longer available for the view maintenance as assume in other view maintenance problems <ref> [GM95, GMR95, MD96] </ref>. The characteristics of this problem space as 63 well as what subproblems we want to tackle under this task are described in Section 16.2.
Reference: [Gol91] <author> C.F. Goldfarb. </author> <title> The SGML Handbook. </title> <publisher> Clarendon Press, Oxford, </publisher> <year> 1991. </year>
Reference-contexts: Similar to other large-scale systems [ABD + 96], it is assumed that all information sources, may they be fully structured like an SQL database management system, partially structured like SGML files <ref> [Gol91] </ref>, or even an application program like "finger", register their existence as well as a description of their content and capabilities with a knowledge base [ABD + 96].
Reference: [HKWY97] <author> L.M. Haas, D. Kossmann, E.L. Wimmers, and J. Yang. </author> <title> Optimizing Queries across Diverse Data Sources. </title> <booktitle> In International Conference on Very Large Data Bases, </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: The approaches to information search and retrieval ranges from one-information-source-at-a-time keyword search such as on-line search engines - e.g., Lycos, Yahoo! to highly integrated federated multidatabase systems. Lately, new approaches that combine these two extremes, such as Information Manifold [KLSS95], SIMS [AKS96], GARLIC <ref> [HKWY97] </ref> and TSIMMIS [GMHI + 95] are based on apriori defined global schemas or unified world views that allow heterogeneous information sources to join such systems by uniformly describing their capabilities against these schemas. <p> While related to our planning techniques for finding connected query rules, in the SoftBot system a very different information source description language is used and there is no attempt for restricting the search space for a given query. The data model used by the Garlic <ref> [HKWY97] </ref> system is very distinct from ours in the sense that in Garlic [HKWY97] data in an IS is viewed as objects and the system refers to these objects using its own manufactured OIDs. <p> The data model used by the Garlic <ref> [HKWY97] </ref> system is very distinct from ours in the sense that in Garlic [HKWY97] data in an IS is viewed as objects and the system refers to these objects using its own manufactured OIDs.
Reference: [KLSS95] <author> T. Kirk, A. Y. Levy, Y. Sagiv, and D. Srivastava. </author> <title> The Information Manifold. </title> <booktitle> In Proceedings of the AAAI Spring Symposium on Information Gathering in Distributed Heterogeneous Environments, </booktitle> <address> Stanford, California, </address> <month> March </month> <year> 1995. </year>
Reference-contexts: The approaches to information search and retrieval ranges from one-information-source-at-a-time keyword search such as on-line search engines - e.g., Lycos, Yahoo! to highly integrated federated multidatabase systems. Lately, new approaches that combine these two extremes, such as Information Manifold <ref> [KLSS95] </ref>, SIMS [AKS96], GARLIC [HKWY97] and TSIMMIS [GMHI + 95] are based on apriori defined global schemas or unified world views that allow heterogeneous information sources to join such systems by uniformly describing their capabilities against these schemas.
Reference: [KS91] <author> H. Korth and A. Silberschatz. </author> <title> Database System Concepts. </title> <publisher> McGraw-Hill, Inc., </publisher> <year> 1991. </year>
Reference: [LNR97a] <author> A. J. Lee, A. Nica, and E. A. Rundensteiner. </author> <title> Keeping Virtual Information Resources Up and Running. In Proceedings of IBM Centre for Advanced Studies Conference CAS-CON97, </title> <type> Best Paper Award, </type> <month> November </month> <year> 1997. </year>
Reference-contexts: In [RLN97], we establish a taxonomy of view adaptation problems that identifies alternate dimensions of the problem space, and hence serves as a framework for characterizing and hence distinguishing our view synchronization problem from other (previously studied) view adaptation problems. In <ref> [LNR97a] </ref>, we then lay the basis for the solutions presented in this current paper by introducing the overall EVE solution framework, in particular the idea of associating evolution preferences with view specifications.
Reference: [LNR97b] <author> A. J. Lee, A. Nica, and E. A. Rundensteiner. </author> <title> The EVE Framework: View Evolution in an Evolving Environment. </title> <type> Technical Report WPI-CS-TR-97-4, </type> <institution> Worcester Polytechnic Institute, Dept. of Computer Science, </institution> <year> 1997. </year>
Reference-contexts: management systems would have to declare existing views to be undefined. 19 Due to space limitations we discuss the substitution of one type of view component, namely, the attributes in the SELECT clause, while the treatment of all other types of view components can be found in our technical report <ref> [LNR97b] </ref>. When an attribute A used in the SELECT clause of a view definition V is deleted from its relation R in IS 1 , our system may in some cases attempt to find an "appropriate" counterpart S:B in IS 2 to replace the removed attribute R:A. <p> We show algorithms for view synchronization which serve as proof of concept that adaptability of views can be achieved within our proposed EVE framework. Below we treat the delete-attribute (IS 1 :R, A) change, while a description of all other capability changes can be found in our technical report <ref> [LNR97b] </ref>. Deleting the attribute A from IS 1 :R could potentially affect a view definition VD in three ways: 1. A appears in the SELECT clause of VD only. 2. A appears in the WHERE clause of VD only. 3. <p> A appears in the SELECT clause of VD only. 2. A appears in the WHERE clause of VD only. 3. A appears in both the SELECT and WHERE clauses of VD. Below, we now provide solutions to the first case, while the other cases can be handled similarly <ref> [LNR97b] </ref>. When an attribute is deleted from the SELECT clause, our system takes the attribute's attribute-dispensable and attribute-replaceable parameters, and the view-extent parameter into account to decide whether the affected view can be evolved into a valid view definition. view extent parameter, if the view definition could be synchronized.
Reference: [LS93] <author> G. F. Luger and W. A. Stubblefield. </author> <title> AI: Structures and Strategies for Complex Problem Solving . Benjamin/Cummings Publishing Co., </title> <publisher> Inc., </publisher> <year> 1993. </year>
Reference-contexts: As a first step, we must transform our given information source descriptions kept in the capability knowledge base MKB (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], <ref> [LS93] </ref>) 14 . We start by making the observation that the act of obtaining data from an information source corresponds to a sensing action as defined in [RN95], i.e., we cannot know at the planning time what will be the output at the execution time.
Reference: [LSK95] <author> A. Y. Levy, D. Srivastava, and T. Kirk. </author> <title> Data Model and Query Evaluation in Global Information Systems. </title> <journal> Journal of Intelligent Information Systems. </journal> <note> Special Issue on Net-worked Information Discovery and Retrieval, </note> <year> 1995. </year>
Reference-contexts: Information Manifold system (Levy et al. <ref> [LSK95] </ref>) is a global information integration system where the external ISs are described against a unified world-view by query expressions that can use classes and roles defined in CLASSIC description language. <p> Their algorithms could potentially be applied in the context of our overall framework, once EVE has determined an acceptable view redefinition. Their results are thus complimentary to our work. In the work of Levy et al. <ref> [LSK95] </ref>, a global information system is designed using the world-view approach where the external information sources are described relative to the unified world-view relations. <p> The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in <ref> [LSK95] </ref>. Papakonstantinou et al. [PGMW95, PGMU96] are pursuing the goal of information gathering across multiple sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [MD96] <author> M. Mohania and G. Dong. </author> <title> Algorithms for Adapting Materialized Views in Data Warehouses. </title> <booktitle> In Proceedings of International Symposium on Cooperative Database Systems for Advanced Applications, </booktitle> <month> December </month> <year> 1996. </year>
Reference-contexts: This taxonomy represents a suitable 5 classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance [GM95, Wid95], view redefinition <ref> [GMR95, MD96] </ref>, etc. We also use the taxonomy to identify a new view adaptation problem, called view synchronization, that corresponds to the process of view definition adaptation triggered by capability changes of ISs. <p> changes, (2) the IS changes its data extent, (3) the view user wants the view extent up-to-date, and (4) the IS doesn't preserve its old data. (b) The problem of materialized view maintenance after view redefinition has been recently studied by Gupta et al. [GMR95] and by Mohania et al. <ref> [MD96] </ref>. Its coordinates are marked by triangles in Figure 3. <p> problem (which makes it different than any other view maintenance problem (see Section 2)) is that an IS capability change affects not only its schema but its data as well, thus the old data is generally no longer available for the view maintenance as assume in other view maintenance problems <ref> [GM95, GMR95, MD96] </ref>. The characteristics of this problem space as 63 well as what subproblems we want to tackle under this task are described in Section 16.2. <p> While no one has addressed the view synchronization problem as such, there are several issues we address for EVE that relate to work done before in other contexts as outlined below. Gupta et al. [GJM96] and Mohania et al. <ref> [MD96] </ref> address the problem of how most efficiently to maintain a materialized view after a view redefinition explicitly initiated by the user takes place. They study under which conditions this view maintenance can take place without requiring access to base relations, i.e., the self-maintainability issue.
Reference: [NR95] <author> A. Nica and E. A. Rundensteiner. </author> <title> Uniform Structured Document Handling Using a Constraint-based Object Approach. </title> <booktitle> Advances in Digital Libraries (ADL'95), A Forum on Research and Technology Advances in Digital Libraries, Virginia, book chapter in ADL'95, </booktitle> <publisher> Springer Verlag, </publisher> <month> May </month> <year> 1995. </year>
Reference: [NR96] <author> A. Nica and E. A. Rundensteiner. </author> <title> The Dynamic Information Integration Model. </title> <type> Technical Report CSE-TR-311-96, </type> <institution> University of Michigan, Ann Arbor, EECS Dept. CSE Division, </institution> <year> 1996. </year>
Reference-contexts: Tasks completed in <ref> [NR98, NR97, NR96] </ref> tasks related to loosely-specified query processing approach. Works include: 1. Define an information description language (see Section 7). 2. Define a query language for specifying loosely-specified queries (see Section 10). 3. Define the translation semantics for loosely-specified queries (see Section 11). 4. <p> Our proposed planning algorithm <ref> [NR96] </ref> is then guaranteed to generate a set of plans that corresponds to the set of connected rules for the given user query. <p> For obvious reasons, we developed in this paper the tightened hence more practical definition of combining data from disparate sources to construct answers to a query. For the proofs for Theorems 1 and 2 the readers are referred to our technical report <ref> [NR96] </ref> due to the space limitations. Theorem 2 Let E contain a set of relations fR 1 ; : : :; R n g over a set of primitive attribute types fE 1 ; : : : ; E m g. <p> Theorem 3 Necessary Condition for Existence of a Connected Query Rule. If the Query Capability Graph G r for a query r is disconnected there exists no connected rule for the query, i.e., r =E = ;. The proof of the Theorem 3 is given in our technical report <ref> [NR96] </ref>. Example 15 Let's consider in our example the query requesting the on-line collection addresses that have topics "greenhouse effect" and their authors. <p> The dashed lines represent the outputs for the parameterized actions. The connected rules r 1 and r 2 are the rules corresponding to plan 1 and 2, respectively. The following theorem establishes the correctness of our approach. The proof can be found in <ref> [NR96] </ref>. Theorem 5 Let r be a query rule with r =E not empty. Let r plans be the set of plans obtained by the Algorithm DynamicQueryPlanning and r plans the set of rules corresponding one by one to the set r plans .
Reference: [NR97] <author> A. Nica and E. A. Rundensteiner. </author> <title> On Translating Loosely-Specified Queries into Executable Plans in Large-Scale Information Systems. </title> <booktitle> In Proceedings of Second IFCIS International Conference on Cooperative Information Systems CoopIS'97, </booktitle> <pages> pages 213-222, </pages> <month> June </month> <year> 1997. </year> <month> 67 </month>
Reference-contexts: Tasks completed in <ref> [NR98, NR97, NR96] </ref> tasks related to loosely-specified query processing approach. Works include: 1. Define an information description language (see Section 7). 2. Define a query language for specifying loosely-specified queries (see Section 10). 3. Define the translation semantics for loosely-specified queries (see Section 11). 4. <p> Further, we introduce the concept of a join constraint in our model that allows expressing default conditions among external relations that should be used by the system to attempt to integrate information instead of evaluating (blindly) all possible Cartesian combinations based on value matches (full disjunction) <ref> [NR97] </ref>. The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. [PGMW95, PGMU96] are pursuing the goal of information gathering across multiple sources.
Reference: [NR98] <author> A. Nica and E. A. Rundensteiner. </author> <title> Loosely-Specified Query Processing in Large-Scale Information Systems. </title> <note> Accepted for publication in International Journal of Cooperative Information Systems, </note> <year> 1998. </year>
Reference-contexts: Tasks completed in <ref> [NR98, NR97, NR96] </ref> tasks related to loosely-specified query processing approach. Works include: 1. Define an information description language (see Section 7). 2. Define a query language for specifying loosely-specified queries (see Section 10). 3. Define the translation semantics for loosely-specified queries (see Section 11). 4.
Reference: [PGMU96] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Ullman. Medmaker: </author> <title> A Mediation System Based on Declarative Specifications. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <year> 1996. </year>
Reference-contexts: In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU96, PGMW95, GMHI + 95] </ref>. <p> The queries in Information Manifold are expressed in terms of world-view relations and loosely-specified queries are not supported. The work related to the TSIMMIS system <ref> [PGMW95, PGMU96, GMHI + 95] </ref> is pursuing a similar goal of information gathering across multiple heterogeneous sources. However, their proposed query 49 language assumes queries that explicitly list the source identifiers of the database from which the data is to be taken. <p> The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. <ref> [PGMW95, PGMU96] </ref> are pursuing the goal of information gathering across multiple sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [PGMW95] <author> Y. Papakonstantinou, H. Garcia-Molina, and J. Widom. </author> <title> Object Exchange Across Heterogeneous Information Sources. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <pages> pages 251-260, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: In other systems, the user is typically required to specify his queries directly in the connected rule format and the system just executes them <ref> [PGMU96, PGMW95, GMHI + 95] </ref>. <p> The queries in Information Manifold are expressed in terms of world-view relations and loosely-specified queries are not supported. The work related to the TSIMMIS system <ref> [PGMW95, PGMU96, GMHI + 95] </ref> is pursuing a similar goal of information gathering across multiple heterogeneous sources. However, their proposed query 49 language assumes queries that explicitly list the source identifiers of the database from which the data is to be taken. <p> The problem of view evolution as posed by our work, i.e., that the world view itself may evolve, is not discussed in [LSK95]. Papakonstantinou et al. <ref> [PGMW95, PGMU96] </ref> are pursuing the goal of information gathering across multiple sources. Their proposed language OEM assumes queries that explicitly list the source identifiers of the database from which the data is to be taken.
Reference: [RLN97] <author> Elke A. Rundensteiner, Amy L. Lee, and Anisoara Nica. </author> <title> On Preserving Views in Evolving Environments. </title> <booktitle> In Proceedings of 4th Int. Workshop on Knowledge Representation Meets Databases (KRDB'97): Intelligent Access to Heterogeneous Information, </booktitle> <address> Athens, Greece, pages 13.1-13.11, </address> <month> August </month> <year> 1997. </year>
Reference-contexts: In order to define the view synchronization problem and to differentiate it from the others view adaptation problems, we give here <ref> [RLN97] </ref> a taxonomy of view adaptation problems based upon the types of changes to the view and base information, and the desired level of view adaptability in the context of changes. <p> In <ref> [RLN97] </ref>, we establish a taxonomy of view adaptation problems that identifies alternate dimensions of the problem space, and hence serves as a framework for characterizing and hence distinguishing our view synchronization problem from other (previously studied) view adaptation problems.
Reference: [RN95] <author> S. Russell and P. Norvig. </author> <title> Artificial Intelligence: A Modern Approach. </title> <publisher> Prentice Hall, </publisher> <year> 1995. </year>
Reference-contexts: The query refinement planning algorithm exploits DIIM proposed semantics for query refinement to rewrite a loosely-specified user query into well-defined fully-specified queries that can be evaluated in the current system configuration. The algorithm based on regression planning <ref> [RN95] </ref> incrementally finds possible plans (corresponding to refined queries) for the given query. 4.3 Approach: View Evolution The purpose of goals 2 and 3 from the dissertation goals defined in Section 3 is to provide solutions for view adaptation when underlying information sources change their capabilities. <p> For the process of finding the set of connected query rules for a user query in the DIIM system we thus use an extension of the regression planning algorithm based on the conditional partial-order planning algorithm (CPOP) <ref> [RN95] </ref> which is described in Section 13.2. As a first step, we must transform our given information source descriptions kept in the capability knowledge base MKB (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], [LS93]) 14 <p> algorithm (CPOP) <ref> [RN95] </ref> which is described in Section 13.2. As a first step, we must transform our given information source descriptions kept in the capability knowledge base MKB (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see [RN95], [LS93]) 14 . We start by making the observation that the act of obtaining data from an information source corresponds to a sensing action as defined in [RN95], i.e., we cannot know at the planning time what will be the output at the execution time. <p> (see Figure 1) expressed in DIIM model into a set of parameterized actions that can be used by the planning agent (see <ref> [RN95] </ref>, [LS93]) 14 . We start by making the observation that the act of obtaining data from an information source corresponds to a sensing action as defined in [RN95], i.e., we cannot know at the planning time what will be the output at the execution time. <p> The algorithm is a regression planning algorithm (<ref> [RN95] </ref>) that incrementally finds possible plans (corresponding to refined queries) for the given query. We have made several modifications to CPOP defined in [RN95] as required for our problem at hand. First, our algorithm performs a breadth-first search with the goal of finding all the plans ordered by the number of total steps 15 . <p> The initial plan consists of the two special steps START and FINISH and the sets S; O; B; C; L defined using the algorithm MakeInitialPlan. The planning algorithm obtains only complete and consistent plans in the sense defined in <ref> [RN95] </ref>. A complete plan is one in which every precondition of every step is achieved by some other step, and no other step can possibly cancel out the condition. <p> A contradiction occurs when both S i S j and S j S i hold or both v = x and v = y hold with x and y different constants. We have extended the basic CPOP algorithm as described in <ref> [RN95] </ref> to handle the built-in predicate set C that permits query language and information source descriptions to include the conjunctions of built-in predicates. <p> Step 4 of the algorithm verifies that the set of bindings and the set of built-in predicates are consistent and discards the plans that do not have this property. 15 In the AI literature, typically finding one single plan is considered sufficient, hence depth-first search is utilized <ref> [RN95] </ref>. For future work we plan to have more efficient ways of finding the set of query plans based on a real cost reflecting the information source transaction costs. <p> This concept of what constitutes a well-defined query given a loosely-specified one, now termed connected query rule concept, is not considered by previous query template-based work [Ull89, RSU95]. Our proposed techniques of query planning are based on AI planning techniques <ref> [RN95] </ref>. However, we make several extensions to this previous work in order to handle the DIIM model, e.g., we take care of join constraints for defining what constitutes an acceptable solution plan.
Reference: [RR95] <author> Y. G. Ra and E. A. Rundensteiner. </author> <title> A Transparent Object-Oriented Schema Change Approach Using View Sch ma Evolution. </title> <booktitle> In Proceedings of IEEE International Conference on Data Engineering, </booktitle> <pages> pages 165-172, </pages> <month> March </month> <year> 1995. </year>
Reference-contexts: None of the two projects address the particular problem of evolution under capability changes of participating external information sources. A solution for a related problem is given in transparent schema evolution (TSE) project <ref> [RR95, RR97] </ref>, namely, to use view technology to handle schema changes transparently. However, this TSE work is all done in a centralized environment. In the TSE framework, a user specifies schema changes against her special-tailored view schema defined over one common base schema.
Reference: [RR97] <author> Y. G. Ra and E. A. Rundensteiner. </author> <title> A transparent schema-evolution system based on object-oriented view technology. </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <month> September </month> <year> 1997. </year>
Reference-contexts: None of the two projects address the particular problem of evolution under capability changes of participating external information sources. A solution for a related problem is given in transparent schema evolution (TSE) project <ref> [RR95, RR97] </ref>, namely, to use view technology to handle schema changes transparently. However, this TSE work is all done in a centralized environment. In the TSE framework, a user specifies schema changes against her special-tailored view schema defined over one common base schema.
Reference: [RSU95] <author> A. Rajaraman, Y. Sagiv, and J.D. Ullman. </author> <title> Answering Queries Using Templates With Binding Patterns. </title> <booktitle> In Proceedings of ACM Symposium on Principles of Database Systems, </booktitle> <pages> pages 105-112, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction. The notion of using query templates we adopt in our work as part of an information source description is based on <ref> [Ull89, RSU95] </ref>. In DIIM, we utilize these query templates as one of the basic building blocks for constructing the parameterized action set and then to generate `good' executable plans given our semantic of query refinement, i.e., connected query rule concept. <p> This concept of what constitutes a well-defined query given a loosely-specified one, now termed connected query rule concept, is not considered by previous query template-based work <ref> [Ull89, RSU95] </ref>. Our proposed techniques of query planning are based on AI planning techniques [RN95]. However, we make several extensions to this previous work in order to handle the DIIM model, e.g., we take care of join constraints for defining what constitutes an acceptable solution plan.
Reference: [RU96] <author> A. Rajaraman and J.D. Ullman. </author> <title> Integrating Information by Outerjoins and Full Disjunctions. </title> <booktitle> In Proceedings of ACM Symposium on Principles of Database Systems, </booktitle> <year> 1996. </year>
Reference-contexts: The relations accept any adornment and the set of join constraints is defined to be all the natural joins. Let R be the "natural" full disjunction ([GL94], <ref> [RU96] </ref>) of the relations R 1 ; R 2 ; : : : ; R n .
Reference: [Ull89] <author> J.D. Ullman. </author> <title> Principle of Database and Knowledge-Base Systems. </title> <publisher> Computer Science Press, </publisher> <year> 1989. </year>
Reference-contexts: is to be taken, or the join to be performed to combine data from different sources); * define query semantics that specify the notion of the "correct" meaning and hence "correct" answers for such type of vague queries (clearly, performing pairwise natural joins between all sources ala universal relation semantics <ref> [Ull89] </ref> is neither too meaningful nor too practical in the context of modern information spaces with hundreds of information sources); * develop algorithms that map a loosely-specified query into precise well-specified query plans based on defined query refinement semantics (so that the later can be evaluated against the set of available <p> A base relation R is an n-ary relation (n 2), with attributes of either primitive or complex types. The model used is a combination of the nested relational data model and the logic-based data model <ref> [Ull89] </ref>. A relation has a unique name and fixed arity where the attributes have explicit names but they are also ordered so that their values is determined by their positions. <p> n-ary relation, the query templates for E are denoted by a set A E = fff E 2 ; : : :ff E n g of adornments (or binding patterns) with ff E k [i] 2 fb; f g for all i 2 f1; 2; : : :; ng (see <ref> [Ull89] </ref>). If the ith symbol of the adornment ff E k is b then the ith argument of the relation must be bound when a query is asked. <p> the connected relation is a natural generalization of the notion of the relation defined by a feasible query rule and we generalize the well-known containment theorem for loosely-specified queries. 11.2 Extended Notion of Containment The definition of containment for two conjunctive queries r 1 and r 2 given in Ullman <ref> [Ull89] </ref> applies to two queries that can be evaluated given their definitions, i.e., precisely-specified queries. <p> If queries r 1 and r 2 could be evaluated over E and r 1 is a restriction of r 2 then r 1 is contained in r 2 by the theorem of containment given in Ullman <ref> [Ull89] </ref>. Our purpose here is to extend the containment definition for two queries that cannot be directly evaluated against E, i.e., those high-level queries permitted in our system. <p> The following theorem is our generalization of the containment theorem given in Ullman <ref> [Ull89] </ref> for relations defined by two loosely-specified queries. Theorem 1 Let r 1 and r 2 be two conjunctive queries. <p> In this case the extended definition of containment is equivalent to the original containment definition as given in Ullman <ref> [Ull89] </ref>. The following theorem shows that the full disjunction is the default case for our concept of connected relation when all (arbitrary) natural joins are permitted between sources. <p> X n ) E 1 (X 1 ); : : :; E n (X n ) and for all ~ fi 2 ~ A E and j such that ~ fi [j] = b, we add an edge (E j ; [bf ]) j;C E (j) 12 Ullman defines in <ref> [Ull89] </ref> the adornment set and the partial order relation "" over it as follows: if A is an adornment set and ff; fi 2 A two adornments, we say that ff fi iff fi has b in every position where ff has b. <p> In addition, we establish what constitutes a fully-specified refined query and give necessary conditions for query construction. The notion of using query templates we adopt in our work as part of an information source description is based on <ref> [Ull89, RSU95] </ref>. In DIIM, we utilize these query templates as one of the basic building blocks for constructing the parameterized action set and then to generate `good' executable plans given our semantic of query refinement, i.e., connected query rule concept. <p> This concept of what constitutes a well-defined query given a loosely-specified one, now termed connected query rule concept, is not considered by previous query template-based work <ref> [Ull89, RSU95] </ref>. Our proposed techniques of query planning are based on AI planning techniques [RN95]. However, we make several extensions to this previous work in order to handle the DIIM model, e.g., we take care of join constraints for defining what constitutes an acceptable solution plan.
Reference: [Wid95] <author> J. Widom. </author> <title> Research Problems in Data Warehousing. </title> <booktitle> In Proceedings of International Conference on Information and Knowledge Management, </booktitle> <pages> pages 25-30, </pages> <month> November </month> <year> 1995. </year> <month> 68 </month>
Reference-contexts: Often, such views are materialized -i.e., the integrated data is kept at the view site <ref> [Wid95] </ref>. We refer to any process that changes the view definition or the view extent (in the case of materialized view data) as view adaptation process. <p> This taxonomy represents a suitable 5 classification based on which we can define as well as differentiate between different view adaption problems, such as materialized view maintenance <ref> [GM95, Wid95] </ref>, view redefinition [GMR95, MD96], etc. We also use the taxonomy to identify a new view adaptation problem, called view synchronization, that corresponds to the process of view definition adaptation triggered by capability changes of ISs. <p> the problem spaces depicted in Figure 3 are defined by a common view adaptability preference: maintaining the extent of the materialized view up-to-date as indicated on the Willingness to Adapt dimension. (a) The problem of materialized view maintenance after base relation updates is well studied in the database literature (see <ref> [GM95, Wid95] </ref> for an overview of problems and solutions). Its coordinates are marked by black squares in Figure 3.
References-found: 36

