URL: http://ballade.cs.ucla.edu:8080/~cong/papers/iccad94_sdws.ps.Z
Refering-URL: http://ballade.cs.ucla.edu/~cong/publications.html
Root-URL: http://www.cs.ucla.edu
Title: Simultaneous Driver and Wire Sizing for Performance and Power Optimization  
Author: Jason Cong and Cheng-Kok Koh 
Address: Los Angeles, CA 90024  
Affiliation: Department of Computer Science University of California,  
Abstract: In this paper, we study the simultaneousdriver and wire sizing (SDWS) problem under two objective functions: (i) delay minimization only, or (ii) combined delay and power dissipation minimization. We present general formulations of the SDWS problem under these two objectives based on the distributed Elmore delay model with consideration of both capacitive power dissipation and short-circuit power dissipation. We show several interesting properties of the optimal SDWS solutions under the two objectives, including an important result (Theorem 3) which reveals the relationship between driver sizing and optimal wire sizing. These results lead to polynomial time algorithms for computing the lower and upper bounds of optimal SDWS solutions under the two objectives, and efficient algorithms for computing optimal SDWS solutions under the two objectives. We have implemented these algorithms and compared them with existing design methods for driver sizing only or independent driver and wire sizing. Accurate SPICE simulation shows that our methods reduce the delay by up to 11%-47% and power dissipation by 26%-63% compared with existing design methods. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> C. J. Alpert, T. C. Hu, J. H. Huang, and A. B. Kahng, </author> <title> A Direct Combination of the Prim and Dijkstra Constructions for Improved Performance-Driven Routing, </title> <booktitle> Proc. IEEE Int'l Symp. on Circuits and Systems, </booktitle> <month> May </month> <year> 1993, </year> <pages> pp. 1869-1872. </pages>
Reference-contexts: Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees <ref> [1] </ref>, maximum performance trees [5], A-trees [9], low-delay trees [3], and IDW/CFD trees [12].
Reference: [2] <author> H. B. Bakoglu, </author> <title> Circuits, Interconnections, and Packaging for VLSI, </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference-contexts: In the past, two methods are commonly used to improve the performance of long interconnect lines. One method is driver sizing, which uses a large driver or a series of cascaded drivers of increasing sizes to drive long interconnect lines <ref> [2] </ref>. Another method is to break long interconnect lines into shorter segments by inserting repeaters. These repeaters can also be sized properly for further reduction in interconnect delay [2]. Both methods are effective for interconnect delay reduction but with substantial increase in power consumption. <p> is driver sizing, which uses a large driver or a series of cascaded drivers of increasing sizes to drive long interconnect lines <ref> [2] </ref>. Another method is to break long interconnect lines into shorter segments by inserting repeaters. These repeaters can also be sized properly for further reduction in interconnect delay [2]. Both methods are effective for interconnect delay reduction but with substantial increase in power consumption. Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization.
Reference: [3] <author> K. D. Boese, A. B. Kahng, and G. Robins, </author> <title> High-Performance Routing Trees With Identified Critical Sinks, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 182-187. </pages>
Reference-contexts: Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees [5], A-trees [9], low-delay trees <ref> [3] </ref>, and IDW/CFD trees [12]. <p> sinks of different priorities in the routing tree, the previous formulation can be generalized as follows: t (T; R d ; W) = N i 2sink (T ) i t i (T; R d ; W) (4) where i is the weight of the delay penalty to sink N i <ref> [3, 10] </ref>. The larger i is, the more critical sink N i is. We normalize i 's such that P N i 2sink (T ) i = 1.
Reference: [4] <author> J. B. Burr, J. R. Burnham, and A. M. Peterson, </author> <title> System-wide Energy Optimization in the MCM Environment, </title> <booktitle> Proc. IEEE MCM Conf., </booktitle> <year> 1991, </year> <pages> pp. 66-83. </pages>
Reference-contexts: Parameters MCM IC Min Loading Capacitance (f F ): 1000 2.6802 Wire Resistance (=2): 0.02 0.044 Wire Capacitance (area) (aF=m 2 ): 3.46 41.3 Fringing Capacitance (2 sides) (aF=m): 50.4 150 Table 3: Interconnect parameters based on (a) MCM10 technology <ref> [4] </ref> and (b) CAZM 0:5m CMOS model [13]. on an IC chip is the minimum gate capacitance. The interconnect parameters are obtained from MCM10 model [4] and CAZM 0:5m CMOS process model [13]. 5.1 Performance of SDWS/D Algorithm In our experiments, we compare our SDWS/D wiresizing solutions with the solutions obtained <p> 0.044 Wire Capacitance (area) (aF=m 2 ): 3.46 41.3 Fringing Capacitance (2 sides) (aF=m): 50.4 150 Table 3: Interconnect parameters based on (a) MCM10 technology <ref> [4] </ref> and (b) CAZM 0:5m CMOS model [13]. on an IC chip is the minimum gate capacitance. The interconnect parameters are obtained from MCM10 model [4] and CAZM 0:5m CMOS process model [13]. 5.1 Performance of SDWS/D Algorithm In our experiments, we compare our SDWS/D wiresizing solutions with the solutions obtained using (a) driver sizing with constant stage ratio s = e and minimum-wire-width (CDSMIN), (b) optimal driver sizing based on Theorem 1 and minimum-wire-width (ODSMIN),
Reference: [5] <author> J. P. Cohoon and L. J. Randall, </author> <title> Critical Net Routing, </title> <booktitle> Proc. IEEE Int'l. Conf. on Computer Design, </booktitle> <year> 1991, </year> <pages> pp. 174-177. </pages>
Reference-contexts: Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees <ref> [5] </ref>, A-trees [9], low-delay trees [3], and IDW/CFD trees [12].
Reference: [6] <author> J. Cong, A. B. Kahng, G. Robins, M. Sarrafzadeh, and C. K. Wong, </author> <title> Provably Good Performance-Driven Global Routing, </title> <journal> IEEE Trans. on CAD, </journal> <volume> 11(6), </volume> <month> June </month> <year> 1992, </year> <pages> pp. 739-752. </pages>
Reference-contexts: Both methods are effective for interconnect delay reduction but with substantial increase in power consumption. Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees <ref> [6] </ref>, AHHK trees [1], maximum performance trees [5], A-trees [9], low-delay trees [3], and IDW/CFD trees [12].
Reference: [7] <author> J. Cong, C.-K. Koh, and K. S. Leung, </author> <title> Wiresizing with Driver Sizing for Performance and Power Optimization, </title> <booktitle> Proc. 1994 Int'l Workshop on Lower Power Design, </booktitle> <year> 1994, </year> <pages> pp. 81-86. </pages>
Reference-contexts: Very recently, Cong, Koh and Leung <ref> [7] </ref> explored the possibility of both driver sizing and wire sizing. A simple heuristic algorithm was used to size drivers according to a fixed constant ratio, and an independent wire sizing optimization is performed for each driver sizing solution. <p> obtained using (a) driver sizing with constant stage ratio s = e and minimum-wire-width (CDSMIN), (b) optimal driver sizing based on Theorem 1 and minimum-wire-width (ODSMIN), and (c) independent driver and wire sizing algorithm (DWSA), i.e. it performs driver sizing with constant stage ratio s = e and optimal wiresizing <ref> [7] </ref>. The set of wire width allowed is fW 1 ; 2W 1 ; 3W 1 ; 4W 1 g, where W 1 is the minimum width (10m in MCM10 technology and 0:95m in IC technology). Hence, every wire segment in CDSMIN and ODSMIN has width W 1 .
Reference: [8] <author> J. Cong and C.-K. Koh, </author> <title> Simultaneous Driver and Wire Sizing for Performance and Power Optimization, </title> <institution> UCLA Computer Science Department Tech. Report CSD-940020, </institution> <address> Los Angeles, CA 90024, </address> <month> May </month> <year> 1994. </year>
Reference-contexts: Section 5 shows the experimental results obtained by our SDWS algorithms and the comparative study with other existing methods. Section 6 concludes the paper. Due to page limitation, proofs of the results are omitted. Details are available in technical report <ref> [8] </ref>.
Reference: [9] <author> J. Cong, K. S. Leung, and D. Zhou, </author> <title> Performance-Driven Interconnect Design Based on Distributed RC Delay Model, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 606-611. </pages>
Reference-contexts: Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees [5], A-trees <ref> [9] </ref>, low-delay trees [3], and IDW/CFD trees [12]. <p> A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees [5], A-trees [9], low-delay trees [3], and IDW/CFD trees [12]. Moreover, the wiresizing algorithm in <ref> [9, 10] </ref> can further minimize interconnect delay fl This work is partially supported by ARPA/CSTO under Contract J-FBI-93-112, the National Science Foundation Young Investigator Award MIP9357582, and by a grant from Intel Corporation. by optimally assigning different wire width to each wire segment in the interconnect design.
Reference: [10] <author> J. Cong and K. S. Leung, </author> <title> Optimal Wiresizing Under the Distributed Elmore Delay Model, </title> <booktitle> Proc. IEEE Int'l. Conf. on Computer-Aided Design, </booktitle> <year> 1993, </year> <pages> pp. </pages> <note> 634-639 (full version accepted for publication in IEEE Trans. on CAD and available as UCLA Computer Science Department Tech. Report CSD-930012, </note> <institution> Los Angeles, </institution> <address> CA 90024, </address> <month> April </month> <year> 1993). </year>
Reference-contexts: A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees [5], A-trees [9], low-delay trees [3], and IDW/CFD trees [12]. Moreover, the wiresizing algorithm in <ref> [9, 10] </ref> can further minimize interconnect delay fl This work is partially supported by ARPA/CSTO under Contract J-FBI-93-112, the National Science Foundation Young Investigator Award MIP9357582, and by a grant from Intel Corporation. by optimally assigning different wire width to each wire segment in the interconnect design. <p> Section 6 concludes the paper. Due to page limitation, proofs of the results are omitted. Details are available in technical report [8]. The reader is also strongly recommended to be familiar with the results in <ref> [10] </ref>, which are referred to several times in this paper. 2 Problem Formulation 2.1 Performance Optimization Assume that we are given a routing tree T implementing a signal net which consists of a source N + , and a set of m sinks fN 1 ; N 2 ; ; N <p> Notice that delay through the k-th driver will be counted as part of interconnect delay in Section 2.1.2. 2.1.2 Distributed Elmore Delay Model for Interconnect We use the distributed Elmore delay model [11] for interconnect delay measure. The formulations used in this section are based on those in <ref> [10] </ref>. The reader is strongly recommended to be familiar with the notations defined in [10]. In order to model a routing tree as a distributed RC circuit accurately, each wire segment in the routing plane is divided into a sequence of wires of unit length. <p> The formulations used in this section are based on those in <ref> [10] </ref>. The reader is strongly recommended to be familiar with the notations defined in [10]. In order to model a routing tree as a distributed RC circuit accurately, each wire segment in the routing plane is divided into a sequence of wires of unit length. In this case, T consists of a set of unit-length wire segments, each may have a different width. <p> Let R d and C DR be the resistance and diffusion capacitance of the last driver in the driver chain respectively, i.e. R d = R min =d k , C DR = C d d k . Following a similar derivations in <ref> [10] </ref>, the distributed Elmore delay t i (T; R d ; W ) at N i under a given wiresizing solution W is: = K 0 + K 1 E2T X f i (E; E ) w E K 3 E;E 0 2T 0 1 + K 4 E2T 1 + <p> sinks of different priorities in the routing tree, the previous formulation can be generalized as follows: t (T; R d ; W) = N i 2sink (T ) i t i (T; R d ; W) (4) where i is the weight of the delay penalty to sink N i <ref> [3, 10] </ref>. The larger i is, the more critical sink N i is. We normalize i 's such that P N i 2sink (T ) i = 1. <p> Theorem 1 [14] Given the loading capacitance C L , the number of stages k and the minimum gate capacitance C g , the optimal stage ratio is s = ( C L ) 1=k . 2 Theorem 2 <ref> [10] </ref> Given a routing tree, the optimal wiresizing solution satisfies the separability, the monotone property and the dominance property. 2 The three properties still hold after we model the driver capacitance and fringing capacitance in interconnect delay formulation. Given a routing tree T with one or more critical sinks. <p> Based on Theorem 1, the optimal stage ratio, denoted by s, of the cascaded driver of k stage can be computed and a driver sizing solution is obtained. Now, we perform delay optimal wiresizing <ref> [10] </ref> on the routing tree T based on the resistance of the k-th driver. If the wire width assignment changes, the capacitive load changes. A new driver stage ratio is computed to yield a new optimal driver sizing solution. <p> In the case where the bounds do not meet, we can obtain a set of discrete driver sizes defined by the bounds computed by the k-SDWS/D LU-Bound algorithm for the k-th driver. For each driver size, we can compute the optimal wiresizing solution using the algorithm in <ref> [10] </ref> and use Theorem 1 to compute the sizes of driver D 2 D k1 using d k C g as the capacitive load that the (k 1)-stage drivers have to drive. <p> The factor O (n r ) is the worst case complexity of optimal wiresizing algorithm which in fact run in O (n 3 r) time based on effective lower and upper bound computation using the dominance property (Details of the optimal wiresizing algorithm can be found in <ref> [10] </ref>). Therefore, the k-SDWS/D Optimal algorithm runs in O (n 3 r) time in practice. Our SDWS/D Optimal algorithm for SDWS-D problem performs a linear search for the number of stages k required, starting with k = 1. <p> Therefore, the same optimal wiresizing solution algorithm in <ref> [10] </ref> can be used to optimize obj T;k;D (W) in Eqn. (10). 4.2 Bound Computation and Optimal Algorithm for SDWS-DP Problem For a given stage number k, we take the same approach as in solving the k-SDWS-D problem to compute the optimal solutions to the k-SDWS-DP problem: we first compute the <p> In our implementation, these equations are solved using MAPLE, a mathematical software for symbolic computation developed by University of Waterloo. Then, the optimal wiresizing solution based on the current driver sizing solution is computed using the algorithm in <ref> [10] </ref>. The process of alternative driver sizing and wiresizing is repeated until the wire sizing solutions do not change in consecutive iterations. The upper bound is computed similarly by starting with maximum wire width assignment. <p> For each possible d k , the optimal wiresizing solution can still be computed using the algorithm in <ref> [10] </ref>.
Reference: [11] <author> W. C. </author> <title> Elmore, The Transient Response of Damped Linear Network with Particular Regard to Wideband Amplifier, </title> <journal> J. Applied Physics, </journal> <volume> 19(1948), </volume> <pages> pp. 55-63. </pages>
Reference-contexts: We estimate t D (k; D) based on a switch-level RC model of drivers. The interconnect delay t I (T; k; D; W) is measured by the distributed Elmore delay model <ref> [11] </ref>. 2.1.1 RC Delay Model for Drivers We estimate the delay of a driver based on a switch-level RC model of driver. Figure 2 (a) shows a minimum-size inverter (driver) with a p-transistor resistance R p and a n-transistor resistance R n . <p> Notice that delay through the k-th driver will be counted as part of interconnect delay in Section 2.1.2. 2.1.2 Distributed Elmore Delay Model for Interconnect We use the distributed Elmore delay model <ref> [11] </ref> for interconnect delay measure. The formulations used in this section are based on those in [10]. The reader is strongly recommended to be familiar with the notations defined in [10].
Reference: [12] <author> X. Hong, T. Xue, E. S. Kuh, C. K. Cheng, and J. Huang, </author> <title> Performance-Driven Steiner Tree Algorithms For Global Routing, </title> <booktitle> Proc. ACM/IEEE Design Automation Conf., </booktitle> <year> 1993, </year> <pages> pp. 177-181. </pages>
Reference-contexts: Recent studies show that interconnect delay can also be reduced by interconnect topology optimization and wiresizing optimization. A number of interconnect topologies have been proposed for interconnect performance optimization, including bounded-radius bounded-cost trees [6], AHHK trees [1], maximum performance trees [5], A-trees [9], low-delay trees [3], and IDW/CFD trees <ref> [12] </ref>.
Reference: [13] <author> MCNC Designers' Manual, </author> <month> MCNC. </month>
Reference-contexts: HSPICE is used to simulate the circuit for accurate timing and power simulation to verify both our models and algorithms. The technology parameters used by HSPICE are summarized in Table 2 and 3. The parameters for the driver are based on the CAZM 0:5m CMOS process model <ref> [13] </ref>. The minimum driver resistance is obtained for a minimum size transistor (width = 1:0m, length = 0:5m) through HSPICE simulation of the drain-to-source current available when the drain-to-source voltage for a n-device is 0:95 fi V dd (V dd = 5:0V ). <p> The minimum loading capacitanceon a MCM substrate, which is the pad capacitance, is 1000f F whereas the minimum loading capacitance Min Driver Resistance (): 13598 Min Gate Capacitance (f F ): 2.6802 Min Diffusion Capacitance (f F ): 1.0403 Table 2: Driver parameters for CAZM 0:5m CMOS <ref> [13] </ref>. Parameters MCM IC Min Loading Capacitance (f F ): 1000 2.6802 Wire Resistance (=2): 0.02 0.044 Wire Capacitance (area) (aF=m 2 ): 3.46 41.3 Fringing Capacitance (2 sides) (aF=m): 50.4 150 Table 3: Interconnect parameters based on (a) MCM10 technology [4] and (b) CAZM 0:5m CMOS model [13]. on an <p> 0:5m CMOS <ref> [13] </ref>. Parameters MCM IC Min Loading Capacitance (f F ): 1000 2.6802 Wire Resistance (=2): 0.02 0.044 Wire Capacitance (area) (aF=m 2 ): 3.46 41.3 Fringing Capacitance (2 sides) (aF=m): 50.4 150 Table 3: Interconnect parameters based on (a) MCM10 technology [4] and (b) CAZM 0:5m CMOS model [13]. on an IC chip is the minimum gate capacitance. The interconnect parameters are obtained from MCM10 model [4] and CAZM 0:5m CMOS process model [13]. 5.1 Performance of SDWS/D Algorithm In our experiments, we compare our SDWS/D wiresizing solutions with the solutions obtained using (a) driver sizing with constant stage <p> 3.46 41.3 Fringing Capacitance (2 sides) (aF=m): 50.4 150 Table 3: Interconnect parameters based on (a) MCM10 technology [4] and (b) CAZM 0:5m CMOS model <ref> [13] </ref>. on an IC chip is the minimum gate capacitance. The interconnect parameters are obtained from MCM10 model [4] and CAZM 0:5m CMOS process model [13]. 5.1 Performance of SDWS/D Algorithm In our experiments, we compare our SDWS/D wiresizing solutions with the solutions obtained using (a) driver sizing with constant stage ratio s = e and minimum-wire-width (CDSMIN), (b) optimal driver sizing based on Theorem 1 and minimum-wire-width (ODSMIN), and (c) independent driver and wire sizing
Reference: [14] <author> N. H. E. Weste and K. Eshraghian, </author> <title> Principles of CMOS VLSI Design: a Systems Perspective 2nd ed, </title> <publisher> Addison-Wesley, </publisher> <year> 1993. </year>
Reference-contexts: the number of stages k. 2.2.1 Power Dissipation Formulation There are two components that determine the amount of power dissipated in a CMOS circuit, namely, static dissipation due to leakage current, and dynamic dissipation due to switching transient current (short-circuit dissipation) and charging and discharging of load capacitances (capacitive dissipation) <ref> [14] </ref>. We consider only dynamic dissipation in our formulation since static dissipation is usually 2 to 3 order of magnitude smaller. Given a loading capacitance C L , we can write the capacitive and short-circuit dissipation of a single driver as follows [14]: P ower cap = f C L V <p> charging and discharging of load capacitances (capacitive dissipation) <ref> [14] </ref>. We consider only dynamic dissipation in our formulation since static dissipation is usually 2 to 3 order of magnitude smaller. Given a loading capacitance C L , we can write the capacitive and short-circuit dissipation of a single driver as follows [14]: P ower cap = f C L V 2 P ower sc = f fi (V dd 2V t ) t rf where f is the switching frequency of the input signal, fi is the MOS transistor gain factor, V t is the threshold voltage and t rf is the <p> The gain factor of a driver of size d can be defined as d fi min . Hence, we can write the short-circuit power of the cascaded drivers as follows <ref> [14] </ref>: P ower sc (k; D; C IL (T; W)) = L 2 + L 2 k X d i where L 2 = f fi min Summing up the capacitive and short-circuit power, the dynamic power dissipation of the circuit can be written as: P ower (T; k; D; W) <p> Theorem 1 <ref> [14] </ref> Given the loading capacitance C L , the number of stages k and the minimum gate capacitance C g , the optimal stage ratio is s = ( C L ) 1=k . 2 Theorem 2 [10] Given a routing tree, the optimal wiresizing solution satisfies the separability, the monotone
References-found: 14

