URL: http://www.cse.unsw.edu.au/~achim/PostScripts/Hoffmann-EDAC91.ps
Refering-URL: http://www.cse.unsw.edu.au/~achim/index.html
Root-URL: http://www.cse.unsw.edu.au
Email: e-mail: achim@opal.cs.tu-berlin.de  
Title: Towards Optimizing Global MinCut Partitioning  
Author: Achim G. Hoffmann 
Address: FR 5-11, Franklinstr. 28/29, D-1000 Berlin 10  
Affiliation: Technische Universitat Berlin Department of Computer Science  
Abstract: MinCut algorithms have received much attention in the past for treating the placement problem in layout synthesis. The paper introduces a new class of MinCut partitioning algorithms (SQP) meeting global minimization requirements. The new class of algorithms in its different variations is empirically compared with the classical MinCut procedures as well as with recent extensions. The new algorithms have shown a significant (10 to 40%) improvement in the overall netlength compared with known algorithms. Moreover, the new class of algorithms is proved to have a linear time complexity. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> I. Bhandari, M. Hirsch, and D. Siewlorek. </author> <title> The min-cut shu*e: Toward a solution for the global effect problem of min-cut placement. </title> <booktitle> In Proceedings of the 25 th Design Automation Conference, </booktitle> <pages> pages 681-685, </pages> <year> 1988. </year>
Reference-contexts: Actually, the objective in placement is rather minimizing the overall netlength than minimizing the cuts of a particular cutline. However, recently different approaches have been made in order to find a global minimum of the sum of all cut-lines <ref> [1, 7] </ref>. In [1] entire partitions are shifted around in order to achieve an improved overall netlength. In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. <p> Actually, the objective in placement is rather minimizing the overall netlength than minimizing the cuts of a particular cutline. However, recently different approaches have been made in order to find a global minimum of the sum of all cut-lines [1, 7]. In <ref> [1] </ref> entire partitions are shifted around in order to achieve an improved overall netlength. In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure.
Reference: [2] <author> M. A. Breuer. </author> <title> Min-cut placement. Design Automation & Fault Tolerant Computing, </title> <booktitle> 4(1) </booktitle> <pages> 343-362, </pages> <month> October </month> <year> 1977. </year>
Reference-contexts: However, the placement stage is heavily responsible for allowing the routing stage to find a complete routing in a reasonable amount of time. One of the most popular placement algorithms have been the class of MinCut algorithms as introduced in <ref> [2] </ref>. This paper introduces the Simultaneous QuadriParti-tioning (in short SQP), that is a new class of MinCut partitioning algorithms meeting global minimization requirements. The classical MinCut approach [2, 6] aims to partition a given netlist into two subparti-tions such that the number of nets between both sub-partitions is minimized. <p> One of the most popular placement algorithms have been the class of MinCut algorithms as introduced in [2]. This paper introduces the Simultaneous QuadriParti-tioning (in short SQP), that is a new class of MinCut partitioning algorithms meeting global minimization requirements. The classical MinCut approach <ref> [2, 6] </ref> aims to partition a given netlist into two subparti-tions such that the number of nets between both sub-partitions is minimized. Subsequently, each emerging subpartition is partitioned again into two subsubpar-titions etc. where the number of nets between both subsubpartitions is minimized.
Reference: [3] <author> A. E. Dunlop and B. W. Kernighan. </author> <title> A procedure for placement of standard-cell VLSI circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <volume> 1(CAD-4):92-98, </volume> <month> January </month> <year> 1985. </year>
Reference-contexts: For the subsequent runs of FM on the subblocks the nets crossing the first cutline (Cut 1 in figure 2) have been considered in computing the gains for particular moves. This idea (the so-called pin propagation) has been introduced in <ref> [3] </ref>. FM runs for each bipar-titioning step through its iterative improvement loop the indicated number of times. As may be expected the benefits of SQP decrease when the average number of pins per net increases. <p> Finally, in table 3 SQP rec is compared with ShxP flat for the partitioning problem of figure 3. SQP rec recursively partitions the initial block into four equally sized sections using SQP and subsequently partitions each of these subblocks using again SQP and considering pin propagation <ref> [3] </ref>. In contrast to that ShxP flat partitions the initial block simultaneously into 16 concatenated sections. Since ShxP performed better than MTCPS as shown in table 2 only the adaptation ShxP flat of SQP has been implemented for comparison with SQP rec.
Reference: [4] <author> C. M. Fiduccia and R. M. Mattheyses. </author> <title> A linear-time heuristic for improving network partitions. </title> <booktitle> In Proceedings of the 19 th Design Automation Conference, </booktitle> <pages> pages 175-181, </pages> <year> 1982. </year>
Reference-contexts: In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning <ref> [5, 4] </ref>. In [7] basically the algorithm of Fiduccia and Mattheyses [4] (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results. <p> In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning [5, 4]. In [7] basically the algorithm of Fiduccia and Mattheyses <ref> [4] </ref> (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results. The paper is organized as follows. <p> Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning [5, 4]. In [7] basically the algorithm of Fiduccia and Mattheyses <ref> [4] </ref> (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results. The paper is organized as follows. In the next section the global partitioning problem is stated more precisely. Section 3 introduces the SQP algorithms. <p> Each run of the iterative improvement loop starts from a randomly generated initial partitioning. For comparison in the columns FM the obtained results from the original FM algorithm <ref> [4] </ref> applied recursively first to the initial block and subsequently to both of the emerging subblocks are given. For the subsequent runs of FM on the subblocks the nets crossing the first cutline (Cut 1 in figure 2) have been considered in computing the gains for particular moves.
Reference: [5] <author> B. W. Kernighan and S. Lin. </author> <title> An efficient heuristic procedure for partitioning graphs. </title> <journal> Bell Systems Technical Journal, </journal> <volume> 49(2) </volume> <pages> 291-297, </pages> <month> February </month> <year> 1970. </year>
Reference-contexts: In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning <ref> [5, 4] </ref>. In [7] basically the algorithm of Fiduccia and Mattheyses [4] (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results.
Reference: [6] <author> U. Lauther. </author> <title> A min-cut placement algorithm for general cell assemblies based on a graph representation. </title> <booktitle> In Proceedings of the 16 th Design Automation Conference, </booktitle> <pages> pages 1-10, </pages> <year> 1979. </year>
Reference-contexts: One of the most popular placement algorithms have been the class of MinCut algorithms as introduced in [2]. This paper introduces the Simultaneous QuadriParti-tioning (in short SQP), that is a new class of MinCut partitioning algorithms meeting global minimization requirements. The classical MinCut approach <ref> [2, 6] </ref> aims to partition a given netlist into two subparti-tions such that the number of nets between both sub-partitions is minimized. Subsequently, each emerging subpartition is partitioned again into two subsubpar-titions etc. where the number of nets between both subsubpartitions is minimized.
Reference: [7] <author> G. Vijayan. </author> <title> Min-cost partitioning on a tree structure and applications. </title> <booktitle> In Proceedings of the 26 th Design Automation Conference, </booktitle> <pages> pages 771-774, </pages> <year> 1989. </year>
Reference-contexts: Actually, the objective in placement is rather minimizing the overall netlength than minimizing the cuts of a particular cutline. However, recently different approaches have been made in order to find a global minimum of the sum of all cut-lines <ref> [1, 7] </ref>. In [1] entire partitions are shifted around in order to achieve an improved overall netlength. In contrast to that in [7] partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. <p> However, recently different approaches have been made in order to find a global minimum of the sum of all cut-lines [1, 7]. In [1] entire partitions are shifted around in order to achieve an improved overall netlength. In contrast to that in <ref> [7] </ref> partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning [5, 4]. In [7] basically the algorithm of Fiduccia and Mattheyses [4] (we will refer to it by `FM') has <p> In contrast to that in <ref> [7] </ref> partitioning into two partitions is generalized to partitioning into multiple partitions that are arranged in a tree structure. Fast heuristic algorithms have been developed for find ing a min-cut bipartitioning [5, 4]. In [7] basically the algorithm of Fiduccia and Mattheyses [4] (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results. The paper is organized as follows. <p> In <ref> [7] </ref> basically the algorithm of Fiduccia and Mattheyses [4] (we will refer to it by `FM') has been extended from bipartitioning to multipartitioning. For SQP the algorithm of [4] is generalized in a somewhat different way than in [7] leading to significantly better results. The paper is organized as follows. In the next section the global partitioning problem is stated more precisely. Section 3 introduces the SQP algorithms. <p> Three moves per node appears to be best for quadripartitioning. In contrast to that FM moves each node at most once for bipartitioning 168 in order to suppress nodes moving back to their ini-tial block. Similar the heuristic of <ref> [7] </ref> simply excludes moving a node back to a block to which it has already been assigned. The partition of the complete sequence with the smallest cutnumber is stored. The next run of the procedure described above starts with the best partition stored through the preceding run. <p> In table 2, applying the new algorithm for partitioning the initial block into 4 fi 4 squares (figure 4) has been compared with the Min-Cost Partitioning algorithm for Tree Structures MCPTS of <ref> [7] </ref>. Since MCPTS is described for tree structures it has been adapted to the graph structure representing an array of 4 fi 4 sections. In table 2 the partitioning results are given. The overall netlength has been estimated as the half perimeter of the smallest enclosing rectangle.
References-found: 7

