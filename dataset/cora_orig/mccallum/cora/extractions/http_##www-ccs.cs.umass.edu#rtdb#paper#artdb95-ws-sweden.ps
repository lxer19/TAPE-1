URL: http://www-ccs.cs.umass.edu/rtdb/paper/artdb95-ws-sweden.ps
Refering-URL: http://www-ccs.cs.umass.edu/rtdb/publications.html
Root-URL: 
Email: stankovic@cs.umass.edu  
Phone: 413-545-0720 FAX 413-545-1249  
Title: Data Placement, Logging and Recovery in Real-Time Active Databases 1  
Author: Rajendran M. Sivasankaran, Krithi Ramamritham, John A. Stankovic Don Towsley 
Address: Amherst, MA 01003  
Affiliation: Department of Computer Science University of Massachusetts,  
Abstract: In the past, real-time transaction processing systems have largely considered transaction characteristics such as deadlines and criticality to schedule/abort transactions, and to perform concurrency control and buffer management. Active database researchers have been involved in the development of system models that incorporate the Event-Condition-Action paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions. Given the need to provide for both active and real-time capabilities, novel techniques, combining the two areas must be developed. Also, existing techniques have several deficiencies. Data characteristics have not been explicitly considered to do transaction processing. The impact of data characteristics on data placement, logging and recovery issues have not been studied. We show that exploiting the characteristics of data for transaction processing, placing the data at the appropriate level of the memory hierarchy, and performing logging and recovery of data appropriate for each type of data is crucial to achieve high performance in real-time active database systems.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Abbott and H. Garcia-Molina, </author> <title> "Scheduling Real-Time Transactions with Disk Resident Data", </title> <booktitle> Proceedings of the 15th International Conference on Very Large Databases, </booktitle> <year> 1989. </year>
Reference-contexts: Proper logging techniques and the proper placement of logs in the appropriate level of storage. The transaction scheduling and concurrency control aspects of real-time databases have been studied in detail in <ref> [1, 9, 10, 11] </ref>. Most investigations have focused on the processing of transactions with soft deadlines by adopting priority-assignment policies and conflict resolution mechanisms that explicitly take time into account.
Reference: [2] <author> S. Chakravarthy, </author> <title> "A Comparative Evaluation of Active Relational Databases", </title> <type> Tech. Report UF-CIS-TR-93-002, </type> <institution> Computer and Information Sciences, University of Florida, Gainesville, </institution> <month> Jan., </month> <year> 1993. </year>
Reference: [3] <author> P. K. Chrysanthis, </author> <title> "ACTA, A Framework for Modeling and Reasoning About Extended Transactions", </title> <type> COINS Technical Report 91-90, </type> <address> UMass, Amherst, </address> <month> Sept., </month> <year> 1991. </year>
Reference: [4] <author> P. K. Chrysanthis and K. Ramamritham, </author> <title> "Synthesis of Extended Transaction Models using ACTA", </title> <journal> ACM Transactions on Database Systems, </journal> <month> Sept. </month> <year> 1994, </year> <pages> pp. </pages> <month> 450-191. </month> <title> 5 Isolation of the Atomicity, Consistency, Isolation and Durability (ACID) properties of transactions. </title> <type> 14 </type>
Reference: [5] <author> U. Dayal et. al., </author> <title> "The HIPAC Project: Combining Active Databases and Timing Con--straints", </title> <booktitle> SIGMOD Record, </booktitle> <volume> 17, 1, </volume> <month> March </month> <year> 1988. </year>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the Event-Condition-Action paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions <ref> [6, 5] </ref>. Transaction scheduling in active databases [7] and recently in real-time active databases [13] has been studied. Little, if any attention has been paid to data-characteristic-dependent transaction processing, placement of data and logs, and logging and recovery techniques. These are crucial to meet the performance requirements of ARTDBs.
Reference: [6] <institution> Special Issue on Active Databases, Data Engineering, </institution> <month> Dec. </month> <year> 1992. </year>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the Event-Condition-Action paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions <ref> [6, 5] </ref>. Transaction scheduling in active databases [7] and recently in real-time active databases [13] has been studied. Little, if any attention has been paid to data-characteristic-dependent transaction processing, placement of data and logs, and logging and recovery techniques. These are crucial to meet the performance requirements of ARTDBs.
Reference: [7] <author> U. Dayal, M. Hsu, and R. Ladin, </author> <title> "Organizing Long-Running Activities with Triggers and Transactions", </title> <booktitle> ACM 1990. </booktitle>
Reference-contexts: Active database researchers have been involved in the development of system models that incorporate the Event-Condition-Action paradigm, examining issues related to the specification and recognition of different types of events and conditions and the relationships of triggering and triggered actions [6, 5]. Transaction scheduling in active databases <ref> [7] </ref> and recently in real-time active databases [13] has been studied. Little, if any attention has been paid to data-characteristic-dependent transaction processing, placement of data and logs, and logging and recovery techniques. These are crucial to meet the performance requirements of ARTDBs.
Reference: [8] <editor> A. K. Elmagarmid, Editor, </editor> <title> "Database Transaction Models for Advanced Applications", </title> <publisher> Morgan Kaffman Publishers, </publisher> <year> 1993. </year>
Reference-contexts: What we need is a new kind of semantics where the actions affecting the environment have to be made persistent (committed), but will be compensated (if necessary) if the parent transaction aborts. Extended transaction models such as Sagas can be helpful here <ref> [8] </ref>. Distinguishing between the two kinds of actions, i.e., one kind that affects the database and the other that affects the controlled system (environment), can be helpful in exploring the logging and recovery semantics that are associated with such actions.
Reference: [9] <author> J.R. Haritsa, M.J. Carey, and M. Livny, </author> " <title> Earliest Deadline Scheduling for Real-Time Database Systems", </title> <booktitle> Proceedings of the Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <year> 1991. </year>
Reference-contexts: Proper logging techniques and the proper placement of logs in the appropriate level of storage. The transaction scheduling and concurrency control aspects of real-time databases have been studied in detail in <ref> [1, 9, 10, 11] </ref>. Most investigations have focused on the processing of transactions with soft deadlines by adopting priority-assignment policies and conflict resolution mechanisms that explicitly take time into account.
Reference: [10] <author> J. Huang, J.A. Stankovic, K. Ramamritham, and D. Towsley, </author> <title> "Experimental Evaluation of Real-Time Optimistic Concurrency Control Schemes", </title> <booktitle> Proceedings of the 17th Conference on Very Large Databases, </booktitle> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: Proper logging techniques and the proper placement of logs in the appropriate level of storage. The transaction scheduling and concurrency control aspects of real-time databases have been studied in detail in <ref> [1, 9, 10, 11] </ref>. Most investigations have focused on the processing of transactions with soft deadlines by adopting priority-assignment policies and conflict resolution mechanisms that explicitly take time into account.
Reference: [11] <author> Y. Lin and S.H. Son, </author> <title> "Concurrency Control in Real-Time Databases by Dynamic Adjustment of Serialization Order", </title> <booktitle> In Proceedings of the Real-Time Systems Symposium, </booktitle> <month> Dec. </month> <year> 1990. </year>
Reference-contexts: Proper logging techniques and the proper placement of logs in the appropriate level of storage. The transaction scheduling and concurrency control aspects of real-time databases have been studied in detail in <ref> [1, 9, 10, 11] </ref>. Most investigations have focused on the processing of transactions with soft deadlines by adopting priority-assignment policies and conflict resolution mechanisms that explicitly take time into account.
Reference: [12] <author> B. Purimetla, R. M. Sivasankaran and J.Stankovic, </author> <title> "A Study of Distributed Real-Time Active Database Applications", </title> <booktitle> IEEE Workshop on Parallel and Distributed Real-time Systems, </booktitle> <month> April </month> <year> 1993. </year>
Reference-contexts: The applicability of ARTDB in applications such as cooperative distributed navigation systems and Network Services databases was studied in detail in <ref> [12, 17] </ref>. There is a number of other applications such as air-traffic control, stock-trading, banking, office work-flow management sysems, and nuclear plant management systems where ARTDB might be applicable. <p> It is obvious that a main memory database system is ideal for a real-time active database. But, the size of the database of the real-time applications that we consider might be too large to fit in main memory. For instance, in the automated co-operative navigation system <ref> [12] </ref>, large maps and images have to be stored in the database, making it either impractical or too expensive to maintain the whole database in main memory. The second level NV-RAM is similar to the extended storage discussed in [14] which could be extended memory, solid-state disks or disk-caches. <p> Hence, the placement, logging and recovery and concurrency control technique would depend on the other attributes of the data. Customer records in a Network Service Database application <ref> [12] </ref> are examples of non-temporal data. 3 The semantics of the term temporal is different from the notion used in temporal database literature. 5 Temporal Data Data with this attribute has temporal validity intervals attached to it. Data is valid only within this interval.
Reference: [13] <author> B. Purimetla, R. Sivasankaran, J.A. Stankovic, K. Ramamritham and D. Towsley, </author> <title> "Priority Assignment in Real-Time Active Databases", </title> <booktitle> Conference on Parallel and Distributed Information Systems, </booktitle> <month> Oct. </month> <year> 1994. </year>
Reference-contexts: Transaction scheduling in active databases [7] and recently in real-time active databases <ref> [13] </ref> has been studied. Little, if any attention has been paid to data-characteristic-dependent transaction processing, placement of data and logs, and logging and recovery techniques. These are crucial to meet the performance requirements of ARTDBs.
Reference: [14] <author> E. </author> <title> Rahm "Use of Global Extended Memory for Distributed Transaction Processing", </title> <booktitle> Proc. 4th Int'l Workshop on High Performance Transaction Systems, </booktitle> <month> Sept. </month> <year> 1991. </year>
Reference-contexts: For instance, in the automated co-operative navigation system [12], large maps and images have to be stored in the database, making it either impractical or too expensive to maintain the whole database in main memory. The second level NV-RAM is similar to the extended storage discussed in <ref> [14] </ref> which could be extended memory, solid-state disks or disk-caches. In spite of the differences in the access speeds between different extended storages they have one thing in common, i.e., they all provide much better I/O speeds than disks.
Reference: [15] <author> K. Ramamritham, </author> <title> "Real-Time Databases", </title> <journal> International Journal of Distributed and Parallel Databases, </journal> <year> 1993. </year>
Reference-contexts: This specified time is the absolute validity interval (avi). There are other dimensions of temporality such as the data being primary or derived <ref> [15] </ref> and periodic or aperiodic. But these attributes may not affect the data placement, logging and recovery as much as the avi associated with the data. We divide the temporal data into two categories, low avi, and high avi depending on the avi associated with the data 4 .
Reference: [16] <author> K. Ramamritham and Chrysanthis, P. K. </author> <title> "A Taxonomy of Correctness Criteria in Database Applications", VLDB (Very Large Data Bases) Journal, </title> <note> (to appear) 1995. </note>
Reference-contexts: There are other issues such as media recovery and checkpointing that have to be looked at in future. Another important property of ARTDB transactions that is worth exploiting relates to the consistency of data. For instance, for many applications, it is possible to relax the isolation 5 property <ref> [16] </ref>. If we know that some inconsistency can be tolerated or that a certain data needs to be consistent only at specific points in time then we could allow more concurrency and also avoid expensive logging procedures.
Reference: [17] <author> R. M. Sivasankaran, B. Purimetla, J. Stankovic, and K. Ramamritham, </author> <title> "Network Services Databases A Distributed Active Real-Time Database (DARTDB) Application", </title> <booktitle> IEEE Workshop on Real-Time Applications, </booktitle> <month> May </month> <year> 1993. </year> <month> 15 </month>
Reference-contexts: The applicability of ARTDB in applications such as cooperative distributed navigation systems and Network Services databases was studied in detail in <ref> [12, 17] </ref>. There is a number of other applications such as air-traffic control, stock-trading, banking, office work-flow management sysems, and nuclear plant management systems where ARTDB might be applicable.
References-found: 17

