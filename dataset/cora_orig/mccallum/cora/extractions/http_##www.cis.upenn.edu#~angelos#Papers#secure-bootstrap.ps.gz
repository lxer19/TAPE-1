URL: http://www.cis.upenn.edu/~angelos/Papers/secure-bootstrap.ps.gz
Refering-URL: http://www.cis.upenn.edu/~switchware/home.html
Root-URL: 
Email: jmsg@dsl.cis.upenn.edu  
Title: Automated Recovery in a Secure Bootstrap Process  
Author: William A. Arbaugh Angelos D. Keromytis David J. Farber Jonathan M. Smith fwaa, angelos, farber, 
Note: Smith and Farber's work is supported by DARPA under Contracts #DABT63-95-C-0073, #N66001-96-C-852, and #MDA972-95-1-0013 with additional support from the Hewlett-Packard and Intel Corporations.  
Date: November 21, 1997  
Address: Philadelphia, PA. 19104-6389  
Affiliation: University of Pennsylvania Distributed Systems Laboratory  
Abstract: Integrity is rarely a valid presupposition in many systems architectures, yet it is necessary to make any security guarantees. To address this problem, we have designed a secure bootstrap process, AEGIS, which presumes a minimal amount of integrity, and which we have prototyped on the Intel x86 architecture. The basic principle is sequencing the bootstrap process as a chain of progressively higher levels of abstraction, and requiring each layer to check a digital signature of the next layer before control is passed to it. A major design decision is the consequence of a failed integrity check. A simplistic strategy is to simply halt the bootstrap process. However, as we show in this paper, the AEGIS bootstrap process can be augmented with automated recovery procedures which preserve the security properties of AEGIS under the additional assumption of the availability of a trusted repository. We describe two means by which such a repository can be implemented, and focus our attention on a network-accessible repository. 
Abstract-found: 1
Intro-found: 1
Reference: [AAKS97] <author> D. Scott Alexander, William A. Arbaugh, Ange-los D. Keromytis, and Jonathan M. Smith. </author> <title> A Secure Active Network Environment Architecture. </title> <type> Technical Report MS-CIS-97-17, </type> <institution> University of Pennsyl-vania, </institution> <month> November </month> <year> 1997. </year>
Reference-contexts: This has many practical uses, including desktop management in LAN-attached PCs (where integrity failures might be stimulated by viruses or user-inserted cards), as well as secure, recoverable bootstrap for network elements with processors, such as bridges, IP routers, and Active Networks <ref> [AAKS97] </ref>. The recovery protocol itself will be fully incorporated into the DHCP model, and we intend to propose it as an authentication RFC standard. We also intend to propose the DHCP option continuation as a standard.
Reference: [AD97] <author> S. Alexander and R. Droms. </author> <title> DHCP Options and BOOTP Vendor Extensions. Internet RFC 2132, </title> <month> March </month> <year> 1997. </year>
Reference-contexts: The typical parameters are the IP addresses of the client, gateways, and DNS server. DHCP, however, supports up to 255 configuration parameters, or options. Currently approximately one hundred options are defined for DHCP <ref> [AD97] </ref>. One of these options is an authentication option which is described in Section 4.1. The format of a DHCP message is shown in Figure 9 [Dro97b]. The first field in the DHCP message is the opcode. <p> We conclude the section by providing performance information, and discussing related work. 4.1 DHCP Authentication Option DHCP is extensible through the use of the variable length options field at the end of each DHCP message. The format and use of this field is currently defined by an Internet RFC <ref> [AD97] </ref>. An option for authentication is also defined by a draft RFC [Dro97a]. The format of the authentication option is shown in Figure 12. The DHCP authentication option was designed to support a wide variety of authentication schemes by using single byte protocol and length fields.
Reference: [AFS97] <author> William A. Arbaugh, David J. Farber, and Jonathan M. Smith. </author> <title> A Secure and Reliable Bootstrap Architecture. </title> <booktitle> In Proceedings 1997 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 6571, </pages> <month> May </month> <year> 1997. </year>
Reference-contexts: We believe that designing trusted systems by explicitly trusting the boot components provides a false sense of security to the users of the operating system, and more important, is unnecessary. We have previously reported <ref> [AFS97] </ref> the design and preliminary implementation results for AEGIS, a secure bootstrap process. AEGIS increases the security of the boot process by ensuring the integrity of bootstrap code.
Reference: [Alm96] <author> Werner Almesberger. </author> <note> LILO Technical Overview, version 19 edition, </note> <month> May </month> <year> 1996. </year>
Reference-contexts: Once it finds a bootable disk, it loads the primary boot sector into memory and passes control to it. The code contained in the boot block proceeds to load the operating system, or a secondary boot sector depending on the operating system [Gri93] [Eli96] or boot loader <ref> [Alm96] </ref>. Ideally, the boot process would proceed in a series of levels with each level passing control to the next until the operating system kernel is running.
Reference: [AMP] <author> Ashar Aziz, Tom Markson, and Hemma Pra-fullchandra. </author> <title> Assigned Numbers for SKIP Protocols. </title> <address> http://skip.incog.com/spec/numbers.html. </address>
Reference-contexts: If the DH parameters are not identified in the certificate, then default values for g and p are used. Currently, we are using the same default values as those used in SKIP <ref> [AMP] </ref>. The server's nonce, snonce, and the client's nonce, cnonce, are also included in the message.
Reference: [CCP + 97] <institution> Compaq Computer, Dell Computer, Hewlett Packard, Intel, and Microsoft Corporations. Network PC System Design Guidelines, </institution> <address> 1.0b edition, </address> <month> July </month> <year> 1997. </year>
Reference-contexts: We leverage this fact by adding authentication to the well known network protocols supporting Remote Program Loading (RPL) DHCP [Dro97b], and TFTP [Fin84] and using them as our recovery protocol. As a result, our approach is sim ilar to that proposed in the NetPC specification <ref> [CCP + 97] </ref>. The biggest difference, however, between our approach and the NetPC approach, in addition to that noted above, is the addition of security. Currently, the NetPC specification does not contain any form of security.
Reference: [Com88] <author> Consultation Committee. </author> <title> Recommendation X.209: Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1), </title> <year> 1988. </year>
Reference: [Com89] <author> Consultation Committee. </author> <title> X.509: The Directory Authentication Framework. International Telephone and Telegraph, International Telecommunications Union, </title> <address> Geneva, </address> <year> 1989. </year>
Reference-contexts: While this binding is essential for strong authentication, it severely limits the potential of certificates, e.g. anonymous transactions. The most widely used certificate standard, the X.509 <ref> [Com89] </ref> and its variants, provide only this binding. The X.509 standard, also, suffers from other serious problems. The most significant is ambiguity in the parsing of compliant certificates because of its use of the Basic Encoding Rules (BER)[Com88].
Reference: [DH76] <author> W. Diffie and M.E. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> IT22(6):644654, </volume> <month> Nov </month> <year> 1976. </year>
Reference-contexts: Since the client must connect to the server on a regular basis to update the component certificates, the server can, at the same time, update the actual component as well if a new version is available. 3.2 Diffie Hellman Key Agreement The Diffie Hellman Key Agreement (DH) <ref> [DH76] </ref> permits two parties to establish a shared secret between them. Unfortunately, the algorithm as originally proposed is susceptible to a man-in-the-middle attack. The attack can be defeated, however, by combining DH with a public key algorithm such as DSA as proposed in the Station to Station Protocol (StS)[DvOW92].
Reference: [Dro97a] <author> R. Droms. </author> <title> Authentication for DHCP Messages. </title> <booktitle> Work in Progress, </booktitle> <month> August </month> <year> 1997. </year>
Reference-contexts: The format and use of this field is currently defined by an Internet RFC [AD97]. An option for authentication is also defined by a draft RFC <ref> [Dro97a] </ref>. The format of the authentication option is shown in Figure 12. The DHCP authentication option was designed to support a wide variety of authentication schemes by using single byte protocol and length fields. <p> While an early draft of this paper was provided to members of that group, the group has not revealed their draft architecture yet. There are also two draft RFCs. The first effort <ref> [Dro97a] </ref> involves the use of a shared secret between the DHCP client and server. While this approach is secure, it severely limits the mobility of clients to only those domains where a shared secret was previously established. Furthermore, the maintenance and protection of the shared secrets is a difficult process.
Reference: [Dro97b] <author> R. Droms. </author> <title> Dynamic Host Configuration Protocol, </title> <type> RFC 2131, </type> <month> March </month> <year> 1997. </year>
Reference-contexts: We leverage this fact by adding authentication to the well known network protocols supporting Remote Program Loading (RPL) DHCP <ref> [Dro97b] </ref>, and TFTP [Fin84] and using them as our recovery protocol. As a result, our approach is sim ilar to that proposed in the NetPC specification [CCP + 97]. <p> The result of this MAC is the 160-bit SHA1 digest which is truncated to the first ninety six bits. These bits are used as the MAC. 3.6 Dynamic Host Configuration Protocol The DHCP protocol <ref> [Dro97b] </ref> provides clients the ability to configure their networking and host specific parameters dynamically during the boot process. The typical parameters are the IP addresses of the client, gateways, and DNS server. DHCP, however, supports up to 255 configuration parameters, or options. <p> DHCP, however, supports up to 255 configuration parameters, or options. Currently approximately one hundred options are defined for DHCP [AD97]. One of these options is an authentication option which is described in Section 4.1. The format of a DHCP message is shown in Figure 9 <ref> [Dro97b] </ref>. The first field in the DHCP message is the opcode. The opcode can have one of two values, 1 for a BOOTREQUEST message, and 2 for a BOOTREPLY message.
Reference: [DvOW92] <author> W. Diffie, P.C. van Oorschot, and M.J. Wiener. </author> <title> Authentication and Authenticated Key Exchanges. Designs, Codes and Cryptography, </title> <address> 2:107125, </address> <year> 1992. </year>
Reference: [EFRT97] <author> Carl M. Ellison, Bill Frantz, Ron Rivest, and Brian M. Thomas. </author> <title> Simple Public Key Certificate. </title> <booktitle> Work in Progress, </booktitle> <month> April </month> <year> 1997. </year>
Reference: [EK97] <author> D. Eastlake and C. Kaufman. </author> <title> Dynamic Name Service and Security. Internet RFC 2065, </title> <month> January </month> <year> 1997. </year>
Reference-contexts: Furthermore, the maintenance and protection of the shared secrets is a difficult process. Another effort at incorporating authentication into DHCP is by TIS. This proposal combines DHCP with DNSSEC <ref> [EK97] </ref>. This approach provides for the mobility of DHCP clients, but at a significant increase in cost in terms of complexity. The client implementation, in order to support this approach, must also include an implementation of DNSSEC.
Reference: [Eli96] <author> Julian Elischer. </author> <type> 386 boot. </type> <institution> /sys/i386/boot/biosboot/README.386, </institution> <month> July </month> <year> 1996. </year> <note> 2.1.5 FreeBSD. </note>
Reference-contexts: Once it finds a bootable disk, it loads the primary boot sector into memory and passes control to it. The code contained in the boot block proceeds to load the operating system, or a secondary boot sector depending on the operating system [Gri93] <ref> [Eli96] </ref> or boot loader [Alm96]. Ideally, the boot process would proceed in a series of levels with each level passing control to the next until the operating system kernel is running.
Reference: [Ell97] <author> Carl M. Ellison. SDSI/SPKI BNF. </author> <title> Private Email, </title> <month> July </month> <year> 1997. </year>
Reference: [Fin84] <author> Ross Finlayson. </author> <title> Bootstrap Loading using TFTP. Internet RFC 906, </title> <month> June </month> <year> 1984. </year>
Reference-contexts: We leverage this fact by adding authentication to the well known network protocols supporting Remote Program Loading (RPL) DHCP [Dro97b], and TFTP <ref> [Fin84] </ref> and using them as our recovery protocol. As a result, our approach is sim ilar to that proposed in the NetPC specification [CCP + 97]. The biggest difference, however, between our approach and the NetPC approach, in addition to that noted above, is the addition of security.
Reference: [GDM89] <author> Y. Desmedt G. Davida and B. Matt. </author> <title> Defending Systems Against Viruses through Cryptographic Authentication. </title> <booktitle> In 1989 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 312318. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: This is accomplished through modifications and additions to the BIOS. The BIOS contains the verification code, and public key certificate (s). In essence, the trusted software serves as the root of an authentication chain that extends to the operating system and potentially beyond to application software [PG89] <ref> [GDM89] </ref> [Mic]. In the AEGIS boot process, either the operating system kernel is started, or a recovery process is entered to repair any integrity failure detected. Once the repair is completed, the system is warm booted to ensure that the system starts. This entire process occurs without user intervention.
Reference: [Gol97] <author> Joe Goldmeer. Re: Re: </author> <title> Pentium pro floating point patch. USENET Posting to in-tel.motherboards.pentium pro, </title> <month> November </month> <year> 1997. </year>
Reference: [Gra96] <author> Torbjorn Granlund. </author> <title> The GNU Multiple Precision Arithmetic Library. </title> <address> TMG Datakonsult, 2.0.2 edition, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: is completed and the shared secret established, the AEGIS client contacts the trusted repository using TFTP with authentication and downloads the new component. 4.4 Prototype Information We are currently in the process of completing this work using the Internet Software Consortium's DHCP server [Lem97], the GNU Multi-Precision Arithmetic package (GnuMP) <ref> [Gra96] </ref>, the Etherboot package [GY97], and portions of AT&T's Cryptolib [LMB95]. Currently, the prototype ROM image is approximately 41 KB. This includes a subset of the DHCP protocol and all of the cryptographic code described in this paper. It currently does not contain the BTF certificate parsing code.
Reference: [Gri93] <author> R. Grimes. </author> <title> AT386 Protected Mode Bootstrap Loader. </title> <address> /sys/i386/boot/biosboot/README.MACH, Octo-ber 1993. 2.1.5 FreeBSD. </address>
Reference-contexts: Once it finds a bootable disk, it loads the primary boot sector into memory and passes control to it. The code contained in the boot block proceeds to load the operating system, or a secondary boot sector depending on the operating system <ref> [Gri93] </ref> [Eli96] or boot loader [Alm96]. Ideally, the boot process would proceed in a series of levels with each level passing control to the next until the operating system kernel is running.
Reference: [GS95] <author> Li Gong and Paul Syverson. </author> <title> Fail-Stop Protocols: An Approach to Designing Secure Protocols. </title> <booktitle> In Proceedings of IFIP DCCA-5, </booktitle> <month> September </month> <year> 1995. </year>
Reference-contexts: The authentication certificate demonstrates that the client or server actually hold the private key corresponding to the public key identified in the authentication certificate. A nonce field is used along with a corresponding nonce in the server authentication certificate to ensure that the authentication protocol is Fail Stop <ref> [GS95] </ref> detecting and preventing active attacks such as a maninthemiddle. The msg-hash field ensures that the entire message containing the certificates has not been modified. Using the msg-hash in the authentication certificate eliminates a signature and verification operation since the entire message no longer needs to be signed.
Reference: [GY97] <author> Markus Gutschke and Ken Yap. Etherboot 3.2. </author> <note> http://www.syd.dit.csiro.au/staff/ken/personal/etherboot/, July 1997. </note>
Reference-contexts: shared secret established, the AEGIS client contacts the trusted repository using TFTP with authentication and downloads the new component. 4.4 Prototype Information We are currently in the process of completing this work using the Internet Software Consortium's DHCP server [Lem97], the GNU Multi-Precision Arithmetic package (GnuMP) [Gra96], the Etherboot package <ref> [GY97] </ref>, and portions of AT&T's Cryptolib [LMB95]. Currently, the prototype ROM image is approximately 41 KB. This includes a subset of the DHCP protocol and all of the cryptographic code described in this paper. It currently does not contain the BTF certificate parsing code.
Reference: [HB96] <author> L.T. Heberlein and M. Bishop. </author> <title> Attack Class: Address Spoofing. </title> <booktitle> In Proceedings of the 19th National Information Systems Security Conference, </booktitle> <pages> pages 371377, </pages> <month> October </month> <year> 1996. </year>
Reference-contexts: The use of snonce also permits the Server to reuse Y over a limited period. This reduces the computational overhead on the server during high activity periods. The potential for a TCPSYN like denial of service attack <ref> [HB96] </ref> is mitigated in the same manner by the authentication certificate. The authorization certificate also prevents clients from masquerading as a server because of the client/server capability tag.
Reference: [KA97] <author> Stephen Kent and Randall Atkinson. </author> <title> Work in Progress, </title> <month> October </month> <year> 1997. </year>
Reference-contexts: If they are equal, then the signature is valid. 3.4 IPSEC Authentication Header The IPSEC Authentication Header (AH) provides authentication and integrity of an IP datagram <ref> [KA97] </ref>. The format for the IPSEC Authentication Header is shown in Figure 8. The next header field describes the type of header following AH. The Length field indicates the size of the header in 4-byte units minus 2. <p> This permits the use of X.509v3 certificates if desired. 4.2 Trivial File Transfer Protocol Authenti cation As we discussed earlier, adding authentication to TFTP packets within the currently defined protocol is problematic. Rather than suffer the potential interoperability problems, we use the IPSEC Authentication header <ref> [KA97] </ref>. This approach has several benefits. The foremost is that it doesn't require any changes to the TFTP protocol itself, and it uses a proposed standard for authentication.
Reference: [KBC97] <author> H. Krawczyk, M. Bellare, and R. Canetti. </author> <title> HMAC:KeyedHashing for Message Authentication. Internet RFC 2104, </title> <month> February </month> <year> 1997. </year>
Reference-contexts: In the case of AEGIS, this is a 96 bit MAC. 3.5 SHA1 Message Authentication Code Message Authentication Codes (MAC) utilize a secret, k, shared between the communicating parties and a message digest. We use the Secure Hash Algorithm (SHA1), and the HMAC described in RFC 2104 <ref> [KBC97] </ref> and a draft RFC [MG97].
Reference: [Lem97] <author> Ted Lemon. </author> <title> Dynamic Host Configuration Server. </title> <address> ftp://ftp.fugue.com/pub/, </address> <year> 1997. </year>
Reference-contexts: Once the DHCP protocol is completed and the shared secret established, the AEGIS client contacts the trusted repository using TFTP with authentication and downloads the new component. 4.4 Prototype Information We are currently in the process of completing this work using the Internet Software Consortium's DHCP server <ref> [Lem97] </ref>, the GNU Multi-Precision Arithmetic package (GnuMP) [Gra96], the Etherboot package [GY97], and portions of AT&T's Cryptolib [LMB95]. Currently, the prototype ROM image is approximately 41 KB. This includes a subset of the DHCP protocol and all of the cryptographic code described in this paper.
Reference: [Lev84] <author> H.M. Levy. </author> <title> Capability Based Computer Systems. </title> <publisher> Digital Press, </publisher> <year> 1984. </year>
Reference-contexts: Identity based certificates require the existence of an Access Control List (ACL) which describe the access rights of an entity. Maintaining such lists in a distributed environment is a complex and difficult task. In contrast, SDSI/SPKI provides for the notion of a capability <ref> [Lev84] </ref>. In a capability based model, the certificate carries the authorizations of the holder eliminating the need for an identity infrastructure and access control lists. In AEGIS, we use two capabilities: SERVER, and CLIENT with the obvious meanings. In AEGIS we only use three types of certificates.
Reference: [LMB95] <author> Jack Lacy, Don Mitchell, and Matt Blaze. Cryp-tolib 2.0beta. </author> <note> Email to cryptolib@research.att.com, </note> <year> 1995. </year>
Reference-contexts: contacts the trusted repository using TFTP with authentication and downloads the new component. 4.4 Prototype Information We are currently in the process of completing this work using the Internet Software Consortium's DHCP server [Lem97], the GNU Multi-Precision Arithmetic package (GnuMP) [Gra96], the Etherboot package [GY97], and portions of AT&T's Cryptolib <ref> [LMB95] </ref>. Currently, the prototype ROM image is approximately 41 KB. This includes a subset of the DHCP protocol and all of the cryptographic code described in this paper. It currently does not contain the BTF certificate parsing code.
Reference: [Ltd91] <institution> Phoenix Technologies Ltd. System BIOS for IBM PCs, </institution> <address> Compatibles, </address> <publisher> and EISA Computers. Addison Wesley, </publisher> <address> 2nd edition, </address> <year> 1991. </year>
Reference-contexts: We have divided this process into four levels of abstraction (see Figure 1), which correspond to phases of the bootstrap operation. The first phase is the Power on Self Test or POST <ref> [Ltd91] </ref>. POST is invoked in one of four ways: 1. Applying power to the computer automatically invokes POST causing the processor to jump to the en try point indicated by the processor reset vector. 2.
Reference: [MG97] <author> C. Madson and R. Glenn. </author> <title> The Use of HMAC-SHA1-1-96 within ESP and AH. </title> <booktitle> Work in Progress, </booktitle> <month> November </month> <year> 1997. </year>
Reference-contexts: We use the Secure Hash Algorithm (SHA1), and the HMAC described in RFC 2104 [KBC97] and a draft RFC <ref> [MG97] </ref>.
Reference: [MH95] <author> G. Malkin and A. Harkin. </author> <title> TFTP Option Extension. Internet RFC 1782, </title> <month> March </month> <year> 1995. </year>
Reference-contexts: TFTP has five unique messages that are identified by a two byte opcode value at the beginning of the packet. The Read Request (RRQ) and the Write Request (WRQ) packets share the same format and have an options capability <ref> [MH95] </ref>. Unfortunately, the option capability does not apply to the remaining three packet types (DATA, ACK, and ERROR).
Reference: [Mic] <author> Microsoft. Authenticode Techonology. </author> <title> Microsoft's Developer Network Library, </title> <month> October </month> <year> 1996. </year>
Reference-contexts: This is accomplished through modifications and additions to the BIOS. The BIOS contains the verification code, and public key certificate (s). In essence, the trusted software serves as the root of an authentication chain that extends to the operating system and potentially beyond to application software [PG89] [GDM89] <ref> [Mic] </ref>. In the AEGIS boot process, either the operating system kernel is started, or a recovery process is entered to repair any integrity failure detected. Once the repair is completed, the system is warm booted to ensure that the system starts. This entire process occurs without user intervention.
Reference: [MSST96] <author> Douglas Maughan, Mark Schertler, Mark Schnei-der, and Jeff Turner. </author> <title> Internet Security Association and Key Management Protocol (ISAKMP). </title> <institution> Internetdraft, IPSEC Working Group, </institution> <month> June </month> <year> 1996. </year>
Reference-contexts: Recently, Intel has proposed authentication support for DHCP [Pat97]. Their proposal uses a two phase approach. In the first phase, the computer system boots normally using DHCP. The second phase begins after the system completes the DHCP process and uses ISAKMP <ref> [MSST96] </ref> to exchange a security association. This security association is then used to once again obtain the configuration information from the DHCP server using a secure channel, if such a channel can be established. This information is then compared to that obtained in the first phase.
Reference: [oS94] <institution> National Institute of Standards. Digital Signature Standard. </institution> <type> Technical Report FIPS-186, U.S. </type> <institution> Department of Commerce, </institution> <month> May </month> <year> 1994. </year>
Reference-contexts: She then sends Y to Bob. Bob and Alice can now each compute a shared secret, k, by computing k = Y x mod p and k = X y mod p, respectively. 3.3 Digital Signature Standard The Digital Signature Standard (DSS) includes a digital signature algorithm (DSA) <ref> [oS94] </ref> and a cryptographic hash algorithm (SHA1) [oS95]. DSA produces a 320 bit signature using the following parameters: A prime, p, between 512 and 1024 bits in length. The size of the prime must also be a multiple of 64.
Reference: [oS95] <institution> National Institute of Standards. </institution> <type> Secure Hash Standard. Technical Report FIPS-180-1, U.S. </type> <institution> Department of Commerce, </institution> <month> April </month> <year> 1995. </year> <note> Also known as: 59 Fed Reg 35317 (1994). </note>
Reference-contexts: Bob and Alice can now each compute a shared secret, k, by computing k = Y x mod p and k = X y mod p, respectively. 3.3 Digital Signature Standard The Digital Signature Standard (DSS) includes a digital signature algorithm (DSA) [oS94] and a cryptographic hash algorithm (SHA1) <ref> [oS95] </ref>. DSA produces a 320 bit signature using the following parameters: A prime, p, between 512 and 1024 bits in length. The size of the prime must also be a multiple of 64.
Reference: [Pat97] <author> Baiju V. Patel. </author> <title> Securing DHCP. </title> <booktitle> Work in Progress, </booktitle> <month> July </month> <year> 1997. </year>
Reference-contexts: The client implementation, in order to support this approach, must also include an implementation of DNSSEC. This will significantly increase the size of client code- possibly beyond the ROM size available to the client. Recently, Intel has proposed authentication support for DHCP <ref> [Pat97] </ref>. Their proposal uses a two phase approach. In the first phase, the computer system boots normally using DHCP. The second phase begins after the system completes the DHCP process and uses ISAKMP [MSST96] to exchange a security association.
Reference: [PG89] <author> Maria M. Pozzo and Terrence E. Gray. </author> <title> A Model for the Containment of Computer Viruses. </title> <booktitle> In 1989 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 312318. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: This is accomplished through modifications and additions to the BIOS. The BIOS contains the verification code, and public key certificate (s). In essence, the trusted software serves as the root of an authentication chain that extends to the operating system and potentially beyond to application software <ref> [PG89] </ref> [GDM89] [Mic]. In the AEGIS boot process, either the operating system kernel is started, or a recovery process is entered to repair any integrity failure detected. Once the repair is completed, the system is warm booted to ensure that the system starts. This entire process occurs without user intervention.
Reference: [RP94] <author> J. Reynolds and J. Postel. </author> <title> Assigned Numbers. Internet RFC 1700, </title> <month> October </month> <year> 1994. </year>
Reference-contexts: The first field in the DHCP message is the opcode. The opcode can have one of two values, 1 for a BOOTREQUEST message, and 2 for a BOOTREPLY message. The next field, htype, is the hardware address type defined by the Assigned Numbers RFC <ref> [RP94] </ref>. hlen indicates the length of the hardware address. hops is set to zero by the client and used by BOOTP relay agents to determine if they should forward the message. xid is a random number chosen by the client.
Reference: [Sol92] <author> K. R. Sollins. </author> <title> The TFTP Protocol (revision 2). Internet RFC 1350, </title> <month> July </month> <year> 1992. </year>
Reference-contexts: In addition to providing networking and host specific parameters, DHCP can provide the name and server location of a bootstrap program to support diskless clients. After the client receives the IP address of the boot server and the name of the bootstrap program, the client uses TFTP <ref> [Sol92] </ref> to contact the server and transfer the file. 3.7 Trivial File Transfer Protocol TFTP was designed to be simple and small enough to fit into a ROM on a diskless client. Because of this, TFTP uses UDP rather than TCP with no authentication included in the protocol.
References-found: 40

