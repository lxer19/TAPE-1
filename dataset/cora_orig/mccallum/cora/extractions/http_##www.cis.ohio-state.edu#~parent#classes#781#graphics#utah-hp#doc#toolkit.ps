URL: http://www.cis.ohio-state.edu/~parent/classes/781/graphics/utah-hp/doc/toolkit.ps
Refering-URL: http://www.cis.ohio-state.edu/~parent/classes/781/graphics/utah-hp/doc/
Root-URL: 
Title: The Utah Raster Toolkit  
Author: John W. Peterson Rod G. Bogart and Spencer W. Thomas 
Address: Salt Lake City, Utah  
Affiliation: 1 University of Utah, Department of Computer Science  
Abstract: The Utah Raster Toolkit is a set of programs for manipulating and composing raster images. These tools are based on the Unix concepts of pipes and filters, and operate on images in much the same way as the standard Unix tools operate on textual data. The Toolkit uses a special run length encoding (RLE) format for storing images and interfacing between the various programs. This reduces the disk space requirements for picture storage and provides a standard header containing descriptive information about an image. Some of the tools are able to work directly with the compressed picture data, increasing their efficiency. A library of C routines is provided for reading and writing the RLE image format, making the toolkit easy to extend. This paper describes the individual tools, and gives several examples of their use and how they work together. Additional topics that arise in combining images, such as how to combine color table information from multiple sources, are also discussed. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Burt, Peter J, </author> <title> and Adelson, </title> <publisher> Edward H. </publisher>
Reference-contexts: For example, most of the tools we have developed to date deal with image synthesis and composition, primarily because that is our research orientation. Additional tools could be added to assist work in areas such as vision research or image processing (for examples, see <ref> [1, 7] </ref>). Another interesting application would be a visual "shell" for invoking the tools. Currently, arguments to programs like crop and repos are specified by tediously finding the numbers with the frame buffer cursor and then typing them into a shell.
References-found: 1

