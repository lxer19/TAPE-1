URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/bjorkman.ps.gz
Refering-URL: http://www.cs.ucl.ac.uk/staff/jon/hipparch/program.html
Root-URL: http://www.cs.ucl.ac.uk
Email: (Bjorn.Knutsson@DoCS.UU.SE)  (Mats.Bjorkman@DoCS.UU.SE)  
Title: Adaptive End-to-End Compression for Variable-bandwidth Communication  
Author: Bjorn Knutsson Mats Bjorkman 
Date: May 27, 1998  
Address: Box 325, S-751 05 Uppsala, Sweden.  
Affiliation: Uppsala University, Dept. of Computer Systems,  
Abstract: In this paper, we present a model for transport level compression with dynamic compression level adaptation, and we present an implementation of this model in Linux TCP, together with measurements showing what performance to expect when using adaptable end-to-end compression over wireless radio links and over an Ethernet. Measurements from our implementation show that for link speeds up to 10 Mbps, employing compression yields a throughput gain for most types of data. For slower speeds (e.g. 1 - 2 Mbps wireless radio links) this gain is significant (for the Calgary Compression Corpus files, the throughput increase is typically in the range of 50 - 200 %, depending on link speed and data characteristics). Furthermore, additional delay is only introduced for small data amounts (in our measurements, typically less than 4 KB). For larger amounts of data, delay is actually reduced, since the reduction (because of compression) in the amount of data traversing the wireless radio link outweighs the overhead of compression. We also show that, for most data types, our adaptive compression scheme rivals the best fixed compression level for that data type for the given radio link speed. 
Abstract-found: 1
Intro-found: 1
Reference: [ABG98] <author> Bengt Ahlgren, Mats Bjorkman, and Per Gunningberg. </author> <title> The applicability of integrated layer processing. </title> <journal> Accepted for publication in Journal of Selected Areas of Communication, </journal> <year> 1998. </year>
Reference-contexts: Compression is furthermore one of the data-touching functions often mentioned as a suitable component in Integrated Layer Processing (ILP) <ref> [ABG98] </ref>. Integration of compression with e.g. Forward Error Correction (FEC) or encryption can improve communication performance, and this could be another argument for end-to-end compression. The adaptation model as such will work equally well for hop-by-hop compression, and could be used by e.g.
Reference: [BCW90] <author> T. C. Bell, J. G. Cleary, and I. H. Witten. </author> <title> Text compression. </title> <publisher> Prentice Hall, </publisher> <year> 1990. </year>
Reference-contexts: Contents of files used are described in the text. The file pic.gz is a gzip -9 compressed version of the pic file. For basic measurements, we have used a selection from the Calgary/Canterbury text compression corpus <ref> [BCW90] </ref> of compression benchmark files. For mixed-type data, we have concatenated files from the corpus to the file called mixtest as seen in the table.
Reference: [Bre] <author> BreezeCOM. </author> <title> Breezenet product line. http://www.breezecom.com/. Description of BreezeNET products. </title>
Reference-contexts: Our wireless radio link measurements have been performed using a BreezeNET wireless LAN <ref> [Bre] </ref> connected to the same Ethernet network as above. BreezeNET can operate at 1, 2 or 3 Mbps raw link rate, and will dynamically adjust to the conditions. We have measured using the 1 and 3 Mbps raw data rate.
Reference: [CCI] <author> CCITT. </author> <title> Recommendation V.42 bis, </title> <address> F ITU 1990 edition. </address>
Reference-contexts: A related question is what will happen if there is a compression mechanism active below ours. We can expect a mechanism like compressed PPP or a V.42 bis modem. In the V.42 bis recommendation <ref> [CCI] </ref> one of the first (section 1.1c) things mentioned is that it should go into an automatic transparent mode of operation when incompressible data is detected. The different PPP compressors also handle incompressible data in different ways.
Reference: [CNN] <author> CNN. </author> <note> CNN front web page. http://www.cnn.com/. </note>
Reference-contexts: Hence, the concatenation does not cause any "fake" hits in the compression string matching. For files representing "typical" Web traffic, we have used the CNN front page at www.cnn.com <ref> [CNN] </ref> (as captured on November 27th 1997). One of the top stories that day related to the Una-bomber trial. Following the Una-bomber links, we downloaded the Una-bomber manifesto page from www.pathfinder.com [Pat].
Reference: [CT90] <author> D. D. Clark and D. L. Tennenhouse. </author> <title> Architectural considerations for a new generation of protocols. </title> <booktitle> In SIGCOMM '90, </booktitle> <pages> pages 200-208. </pages> <publisher> ACM, </publisher> <year> 1990. </year>
Reference-contexts: We agree | but not completely. The end-to-end argument [SRC84] and the arguments for Application Level Framing (ALF) <ref> [CT90] </ref> suggest that data compression should be made in, or at least close to, the application.
Reference: [DG96] <author> P. Deutsch and J-L. Gailly. RFC1950: </author> <title> ZLIB Compressed Data Format Specification version 3.3, </title> <year> 1996. </year>
Reference-contexts: This decision has made us abandon some obvious optimizations that would require more extensive changes, but we believe that the performance demonstrated by our current implementation is enough to validate our claims. 3.1 Zlib compression algorithm We have used zlib <ref> [DG96] </ref> for the compression in our test implementation. Zlib supports compression levels between 0 and 9, The compression complexity and thus the possibility of increasing compression ratio grows with increasing numbers. <p> Optimization of these algorithms is a subject of future work. The current model only includes one set of compression algorithms, those found in zlib <ref> [DG96] </ref>. It should also be noted that the algorithms in zlib were not optimized for stream compression.
Reference: [Jac90] <author> Van Jacobsen. RFC1144: </author> <title> Compressing TCP/IP Headers for Low-Speed Serial Links, </title> <year> 1990. </year>
Reference-contexts: Our model is payload-only and not dependent on the underlying transport protocol. An implementation could and should take transport protocol issues into account, but the model as such does not depend on a certain protocol or implementation, i.e. it cannot be compared to the TCP/IP header compression <ref> [Jac90] </ref>. However our model could certainly benefit from being combined with such a scheme. fl Funded by the EU CEC DG III Esprit LTR project 21.926 HIPPARCH 1 For speeds in the Mbps range, we get a significant throughput increase as compared to no compression for most types of data.
Reference: [Pat] <author> Pathfinder. </author> <note> UNA-bomber manifesto. http://www.pathfinder.com/pathfinder/features/ unabomber/wholemanifesto.html. </note>
Reference-contexts: For files representing "typical" Web traffic, we have used the CNN front page at www.cnn.com [CNN] (as captured on November 27th 1997). One of the top stories that day related to the Una-bomber trial. Following the Una-bomber links, we downloaded the Una-bomber manifesto page from www.pathfinder.com <ref> [Pat] </ref>. For both these pages, we have constructed test files containing the original html sources concatenated with the embedded images. The transmission of one of these files thus corresponds to the network traffic caused by clicking the respective link when using a typical Web browser.
Reference: [SRC84] <author> J. H. Saltzer, D. P. Reed, and D. D. Clark. </author> <title> End-to-end arguments in system design. </title> <journal> In ACM Transactions on Computer Systems. ACM, </journal> <year> 1984. </year> <month> 15 </month>
Reference-contexts: We agree | but not completely. The end-to-end argument <ref> [SRC84] </ref> and the arguments for Application Level Framing (ALF) [CT90] suggest that data compression should be made in, or at least close to, the application.
References-found: 10

