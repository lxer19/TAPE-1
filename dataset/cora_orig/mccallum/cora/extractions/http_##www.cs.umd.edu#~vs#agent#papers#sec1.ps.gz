URL: http://www.cs.umd.edu/~vs/agent/papers/sec1.ps.gz
Refering-URL: http://www.cs.umd.edu/~vs/agent/pubs.html
Root-URL: 
Email: E-mail bonatti@di.unito.it  E-mail sarit@umiacs.umd.edu  E-mail salinas@arl.mil  E-mail vs@cs.umd.edu  
Phone: 4  
Title: Data-Security in Heterogeneous Agent Systems  
Author: Piero A. Bonatti Sarit Kraus Jose Salinas V.S. Subrahmanian 
Note: 2 Bar-Ilan University,  3 Army Research Lab,  
Address: Torino,  Maryland,  
Affiliation: 1 Universita di  University of  
Abstract: In this paper, we describe: (i) how agents can protect information from other agents and (ii) how servers that support agent cooperation can help in this process. We show that agents' data security policies can be encoded through three structures called metaknowledge, history and agent security tables. We develop a framework that allows arbitrary metalanguages and history maintenance policies to be "plugged in", and develop complexity results, including polynomial (efficiently computable) approximations. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Adali, K.S. Candan, Y. Papakonstantinou and V.S. Subrahmanian. </author> <title> (1996) Query Processing in Distributed Mediated Systems, </title> <booktitle> in: Proc. 1996 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> Montreal, Canada, </address> <month> June </month> <year> 1996. </year>
Reference-contexts: operations. 5 This flexibility in allowing the language L to vary is particularly useful, as in most real-world applications, we expect different agents to reason differently. 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see <ref> [7, 1, 24, 21, 22] </ref> for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL [10]. <p> A service 10 The current implementation, based on our HERMES platform <ref> [24, 7, 21, 8, 1] </ref>, supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols [23] that we do not address here for space reasons. name consists
Reference: 2. <author> K.Apt, H. Blair and9 A. Walker. </author> <title> (1988) Towards a theory of declarative knowledge, </title> <editor> in J. Minker (ed.) </editor> <booktitle> "Foundations of Deductive Databases and Logic Programming", </booktitle> <address> pps 89-148, </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Theorem 13. Suppose P is an HSL program. Then P + is guaranteed to have at least one stable model. In general, the reader will easily note that P + is not a stratified (nor a locally stratified) logic program <ref> [2, 29] </ref>. Not much is known about existence of stable models for non-stratified programs yet the above result guarantees existence of stable models for logic programs produced by the above transformation.
Reference: 3. <author> K. Arisha, S. Kraus, F. Ozcan, R. </author> <title> Ross and V.S. Subrahmanian (1998). IMPACT: The Interactive Maryland Platform for Agents Collaborating Together (submitted). </title>
Reference-contexts: An agent is built on top of S by adding: (1) a service description (in a special language described in <ref> [3] </ref>) which describes the services provided by the agent, (2) a message box that handles messages to other agents, (3) a decision layer (described in [14]) specifying how the agent takes actions, and (4) a security layer that describes the security policies associated with the agent. <p> Due to space reasons we are unable to go into the full details of these layers the interested reader is referred to <ref> [3] </ref>. The IMPACT architecture contains a set of replicated, mirrored servers that provide a variety of services, including agent yellow-pages (to find agents that provide a requested service), an agent ontology service, as well as type/thesaurus services. Notation. <p> See <ref> [3] </ref> for more details. The IMPACT Server maintains a Verb Hierarchy and a Noun-Hierarchy that are weighted directed acyclic graphs. Each node in the graph is labeled by a set of synonymous words. The edges denote ISA relationships. <p> Then it may return agents which provide services within a given distance from v Q : nt Q in the hierarchies. The IMPACT servers' data structures and algorithms (cf. <ref> [3] </ref>) can be easily extended to incorporate security paradigms. When an agent A registers a service named v : nt with the IMPACT Server, it also provides a set of conditions specifying to whom the fact that agent A offers this service may be released. <p> Any code-call condition over the Oracle software system maintained by the IMPACT Server is an STC. 3. If A 1 ; A 2 are STCs, then so is (A 1 & A 2 ). The IMPACT's algorithms for k-nearest neighbor and -range search presented in <ref> [3] </ref> may be easily modified to incorporate security checks such as those represented above (we do not go into details of these algorithms here). <p> To maintain security, a new argument an agent name U- should be added to search agent table. U is the name of agent that requested the k nearestneighbor information. In addition, the SQL query executed by search agent table (see <ref> [3] </ref>) should be modified as follows: SELECT agents FROM AgentServiceTable WHERE Verb=V AND NounTerm=NT AND Eval (Condition,U). Eval (Condition,U) will return True if the STC Condition is satisfied. 3.2 Security in IMPACT Agents We are now ready to go to the heart of this paper.
Reference: 4. <author> E. Bertino, C. Bettini, E. Ferrari and P. Samarati. </author> <title> (1996) A Temporal Access Control Mechanism for Database Systems, </title> <journal> IEEE Trans. on Knowledge and Data Engineering, </journal> <volume> Vol. 8, Nr. 1, </volume> <pages> pps 67-80. </pages>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 5. <author> E. Bertino, P. Samarati and S. Jajodia. </author> <title> Authorizations in relational database management systems, </title> <booktitle> Proc. 1st ACM Conf. on Computer and Comm. Security, </booktitle> <address> Fairfax, VA, </address> <month> Nov. </month> <year> 1993. </year>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 6. <author> P. Bonatti, S. Kraus and V.S. Subrahmanian. </author> <title> Foundations of Secure Deductive Databases, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 7,3, </volume> <month> June </month> <year> 1995. </year>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 7. <author> A. Brink, S. Marcus and V.S. Subrahmanian. </author> <title> Heterogeneous Multimedia Reasoning. </title> <journal> IEEE Computer, </journal> <volume> 28(9) </volume> <pages> 33-39, </pages> <month> Sep. </month> <year> 1995. </year>
Reference-contexts: operations. 5 This flexibility in allowing the language L to vary is particularly useful, as in most real-world applications, we expect different agents to reason differently. 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see <ref> [7, 1, 24, 21, 22] </ref> for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL [10]. <p> A service 10 The current implementation, based on our HERMES platform <ref> [24, 7, 21, 8, 1] </ref>, supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols [23] that we do not address here for space reasons. name consists
Reference: 8. <author> K.S. Candan, S. Jajodia and V.S. Subrahmanian. </author> <title> (1996) Secure Mediated Databases, </title> <booktitle> in: Proc. 1996 Intl. Conf. on Data Engineering, </booktitle> <address> Feb. 1996, New Or-leans, LA. </address>
Reference-contexts: A service 10 The current implementation, based on our HERMES platform <ref> [24, 7, 21, 8, 1] </ref>, supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols [23] that we do not address here for space reasons. name consists
Reference: 9. <author> S. Castano, M.G. Fugini, G. Martella, and P. Samarati, </author> <title> Database Security, </title> <publisher> Addison-Wesley, </publisher> <year> 1995. </year>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 10. <author> R.G.G. Cattell. (ed.) </author> <title> (1993) The Object Database Standard: ODMG-93, </title> <publisher> Morgan Kaufmann. </publisher>
Reference-contexts: heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see [7, 1, 24, 21, 22] for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL <ref> [10] </ref>.
Reference: 11. <author> D. M. </author> <title> Chess (1996). Security in Agents Systems, </title> <address> http://www.av.ibm.com/InsideTheLab/Bookshelf/ScientificPapers/. </address>
Reference-contexts: Some researchers try to answer questions such as, "Is it safe to click on a given hyperlink"? or "If I send this program out into the Web to find some bargain CD's, will it get cheated?" (e.g., <ref> [11] </ref>). Others try to develop methods for finding intruders who are executing programs not normally executed by "honest" users or agents [13], or deal with problems of identity verification and protecting message exchange in multi-agent environments [30]. Others tackle the problem of protecting mobile agents from their hosts [31].
Reference: 12. <author> The CORBAservices Specifications, </author> <year> 1997. </year> <note> http://www.omg.org/library/corbserv.htm </note>
Reference-contexts: 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see [7, 1, 24, 21, 22] for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE <ref> [12] </ref> and ODMG's ODL [10]. <p> Thus, IMPACT Server's security tasks are simpler. Each agent is responsible for its own data security. We believe that this approach will lead to more secure multi-agents systems. Other distributed object oriented systems provide some security services. CORBA <ref> [12] </ref>, an object request broker framework, provides security services, such as identification and authentication of human users and objects, and security of communication between objects. These services are not currently provided by IMPACT, and their implementation is left for future work. CORBA provides some simple authorization and access control.
Reference: 13. <author> M. Crosbie and E. </author> <title> Spafford (1995). Applying genetic programming to intrusion detection. </title> <booktitle> In Proceedings of the AAAI 1995 Fall Symposium series, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: Others try to develop methods for finding intruders who are executing programs not normally executed by "honest" users or agents <ref> [13] </ref>, or deal with problems of identity verification and protecting message exchange in multi-agent environments [30]. Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments.
Reference: 14. <author> T. Eiter, V.S.Subrahmanian and G. </author> <title> Pick. (1998) Heterogeneous Active Agents, </title> <type> draft manuscript, </type> <pages> 115 pages. </pages>
Reference-contexts: An agent is built on top of S by adding: (1) a service description (in a special language described in [3]) which describes the services provided by the agent, (2) a message box that handles messages to other agents, (3) a decision layer (described in <ref> [14] </ref>) specifying how the agent takes actions, and (4) a security layer that describes the security policies associated with the agent. Due to space reasons we are unable to go into the full details of these layers the interested reader is referred to [3].
Reference: 15. <author> L. N. </author> <month> Foner </month> <year> (1996). </year> <title> A Security Architecture for Multi-Agent Matchmaking, </title> <booktitle> Second International Conference on Multi-Agent Systems (ICMAS96), </booktitle> <address> Japan. </address>
Reference-contexts: We deal with this problem and present a detailed model for autonomous agents which are responsible to maintain their own data security. They can obtain some help from the IMPACT Servers. Foner <ref> [15] </ref> discusses security problems in a multi-agent matchmaker system named Yenta. The matchmaking done by the IMPACT Server is much more limited. IMPACT servers do not have access to the agents' data as Yenta's agents have. Thus, IMPACT Server's security tasks are simpler.
Reference: 16. <author> M. Gelfond and V. Lifschitz. </author> <title> (1988) The Stable Model Semantics for Logic Programming, </title> <booktitle> in: Proc. 5th International Conference and Symposium on Logic Programming, </booktitle> <editor> ed R. A. Kowalski and K. A. </editor> <booktitle> Bowen, </booktitle> <pages> pp 1070-1080. </pages>
Reference-contexts: We provide a general framework to specify and maintain historical archives. The semantics of the history specification language may be obtained through an encoding into a fragment of logic programs under the well known stable model semantics <ref> [16] </ref>. Even though the complexity of stable models is well known to be NP-hard, the fragment we identify yields polynomial time results under some simple conditions. The organization of this paper is as follows: first, we overview our IMPACT system for supporting multiple interacting software agents. <p> The set of stable models of P + coincides with the set of all possible ways of disambiguating conflicting directives. The formal definition of stable models <ref> [16] </ref> is omitted here due to space limitations. Theorem 13. Suppose P is an HSL program. Then P + is guaranteed to have at least one stable model. In general, the reader will easily note that P + is not a stratified (nor a locally stratified) logic program [2, 29].
Reference: 17. <author> G. </author> <title> Gottlob (1992). Complexity results for nonmonotonic logics, </title> <journal> Journal of Logic and Computation, </journal> <volume> 2(3) </volume> <pages> 397-425, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: We remark that this is one of the few results known on polynomial computability of stable models. Past results have proven to lead to exponential computations <ref> [17, 18] </ref>.
Reference: 18. <author> G. Gottlob. </author> <title> (1995) The complexity of default reasoning under the stationary fixed point semantics, </title> <journal> Information and Computation, </journal> <volume> 121(1) </volume> <pages> 81-92, </pages> <month> 15 August </month> <year> 1995. </year>
Reference-contexts: We remark that this is one of the few results known on polynomial computability of stable models. Past results have proven to lead to exponential computations <ref> [17, 18] </ref>.
Reference: 19. <author> S. Jajodia and R. Sandhu, </author> <title> Toward a Multilevel Relational Data Model, </title> <booktitle> in Proc. ACM-SIGMOD Conf., </booktitle> <address> Denver, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 20. <author> J.W. Lloyd. </author> <booktitle> (1987) Foundations of Logic Programming, </booktitle> <publisher> Springer. </publisher>
Reference-contexts: The generality of meta-constraints can be proved formally. Consider the following set of constraints: true ! Bel (A; true) ; Bel (A; P Q) & Bel (A; Q) ! Bel (A; P) ; These three meta-constraints are equivalent to a well-known logic program called vanilla meta-interpreter <ref> [20] </ref> which is known to be a sound and complete meta-interpreter for arbitrary logic programs. Thus, since such programs constitute a general computational mechanism, the same is true also of integrity meta-constraints. As a corollary, we obtain the following upper bound for the complexity of the MK component's deduction procedures. <p> Recall that a Datalog program is a logic program without function symbols <ref> [20] </ref>. The extensional (resp. intentional ) part of a logic program is the set of facts (resp. rules with non-empty bodies) contained in the program.
Reference: 21. <author> J. Lu, G. Moerkotte, J. Schue, </author> <title> and V.S. Subrahmanian. Efficient Maintenance of Materialized Mediated Views, </title> <booktitle> in: Proc. 1995 ACM SIGMOD Conf. on Management of Data, </booktitle> <address> San Jose, CA, </address> <month> May </month> <year> 1995. </year>
Reference-contexts: operations. 5 This flexibility in allowing the language L to vary is particularly useful, as in most real-world applications, we expect different agents to reason differently. 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see <ref> [7, 1, 24, 21, 22] </ref> for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL [10]. <p> A service 10 The current implementation, based on our HERMES platform <ref> [24, 7, 21, 8, 1] </ref>, supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols [23] that we do not address here for space reasons. name consists
Reference: 22. <author> J. Lu, A. Nerode and V.S. Subrahmanian. </author> <title> Hybrid Knowledge Bases, </title> <journal> IEEE Transactions on Knowledge and Data Engineering, </journal> <volume> 8, 5, </volume> <pages> pp 773-785, </pages> <month> Oct. </month> <year> 1996. </year> <note> Released as a University of Maryland Technical Report, </note> <month> Summer </month> <year> 1993. </year>
Reference-contexts: operations. 5 This flexibility in allowing the language L to vary is particularly useful, as in most real-world applications, we expect different agents to reason differently. 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see <ref> [7, 1, 24, 21, 22] </ref> for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL [10].
Reference: 23. <author> T. F. Lunt. </author> <title> Access control policies for database systems. </title> <editor> In C. E. Landwehr, editor, </editor> <booktitle> Database Security II: Status and Prospects, </booktitle> <pages> pages 41-52. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, </address> <year> 1989. </year>
Reference-contexts: A service 10 The current implementation, based on our HERMES platform [24, 7, 21, 8, 1], supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols <ref> [23] </ref> that we do not address here for space reasons. name consists of a verb (e.g."plan" and "sell" above) and a noun-term, defined as: (i) if n is a noun, then n is a noun term, (ii) if n 1 ; n 2 are nouns, then n 1 (n 2 )
Reference: 24. <author> S. Marcus and V.S. Subrahmanian. </author> <title> Foundations of Multimedia Database Systems, </title> <journal> Journal of the ACM, </journal> <volume> Vol. 43, 3, </volume> <pages> pp 474-523, </pages> <year> 1996. </year>
Reference-contexts: operations. 5 This flexibility in allowing the language L to vary is particularly useful, as in most real-world applications, we expect different agents to reason differently. 6 Section 3.2 the heart of this paper contains the key new technical contributions. 7 The contents of this section are not new, see <ref> [7, 1, 24, 21, 22] </ref> for more details. 8 This assumption is consistent with all well known object based software interoper ability frameworks such as CORBA/ODE [12] and ODMG's ODL [10]. <p> A service 10 The current implementation, based on our HERMES platform <ref> [24, 7, 21, 8, 1] </ref>, supports Ingres, Dbase, Paradox, packages for face recognition, nonlinear planning and terrain reasoning, operations research software, a GIS and a text indexing system. 11 Further important issues relate to access control and authentication protocols [23] that we do not address here for space reasons. name consists
Reference: 25. <author> W. Marek, A. Nerode and J.B. Remmel. </author> <title> (1990) Non-Monotonic Rule Systems 1, 2, </title> <journal> Annals of Mathematics and Artificial Intelligence, </journal> <note> pps 241-273. </note>
Reference-contexts: As is common in work on abstract entailment relations <ref> [25] </ref>, we assume that the logic has suitable notions of open/closed formulas, instantiation, and consistency .
Reference: 26. <author> A. Martelli and U. Montanari. </author> <title> (1982) An Efficient Unification Algorithm, </title> <journal> ACM Trans. on Prog. Lang. and Systems, </journal> <volume> 4, 2, </volume> <pages> pps 258-282. </pages>
Reference: 27. <author> J. Millen and T. Lunt, </author> <title> Security for Object-Oriented Database Systems, </title> <booktitle> in Proc. of the IEEE Symposium on Research in Security and Privacy, </booktitle> <address> Oakland, California, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
Reference: 28. <author> R. Moore. </author> <title> Semantical Considerations on Nonmonotonic Logics. </title> <journal> Artificial Intelligence, </journal> <volume> 25 </volume> <pages> 75-94, </pages> <year> 1985. </year>
Reference-contexts: Metaknowledge may be expressed in many languages as exemplified in the vast quantity of work in the area of knowledge and belief <ref> [28] </ref>. We show complexity results for the problem of meta-reasoning when the meta-language L is allowed to vary. 5 We identify classes of languages L that allow polynomial computations. Finally, Historical data: An agent that stores entire histories is liable to get quickly overwhelmed by physical storage requirements.
Reference: 29. <author> T. Przymusinski. </author> <title> (1988) On the declarative semantics of deductive databases and logic programs, </title> <editor> in J. Minker (ed.) </editor> <booktitle> "Foundations of Deductive Databases and Logic Programming", </booktitle> <address> pps 193-216, </address> <publisher> Morgan Kaufman. </publisher>
Reference-contexts: Theorem 13. Suppose P is an HSL program. Then P + is guaranteed to have at least one stable model. In general, the reader will easily note that P + is not a stratified (nor a locally stratified) logic program <ref> [2, 29] </ref>. Not much is known about existence of stable models for non-stratified programs yet the above result guarantees existence of stable models for logic programs produced by the above transformation.
Reference: 30. <author> C. Thirunavukkarasu, T. Finin and J. </author> <title> Mayfield (1995). Secret Agents A Security Architecture for the KQML Agent Communication Language, </title> <booktitle> Intelligent Information Agents Workshop held in conjunction with Fourth International Conference on Information and Knowledge Management CIKM'95. </booktitle>
Reference-contexts: Others try to develop methods for finding intruders who are executing programs not normally executed by "honest" users or agents [13], or deal with problems of identity verification and protecting message exchange in multi-agent environments <ref> [30] </ref>. Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. [4, 5, 6, 9, 19, 27, 32].
Reference: 31. <author> T. Sander, C. Tschudin. </author> <title> Protecting mobile agents against malicious hosts. </title> <editor> In G. Vigna (ed.) </editor> <title> Mobile Agents and Security, </title> <note> LNCS, to appear. </note>
Reference-contexts: Others try to develop methods for finding intruders who are executing programs not normally executed by "honest" users or agents [13], or deal with problems of identity verification and protecting message exchange in multi-agent environments [30]. Others tackle the problem of protecting mobile agents from their hosts <ref> [31] </ref>. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. [4, 5, 6, 9, 19, 27, 32]. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches.
Reference: 32. <author> M. Winslett, K. Smith, and X. Qian, </author> <title> Formal Query Languages for Secure Relational Databases, </title> <journal> ACM-TODS, </journal> <volume> 19, 4, </volume> <pages> pp. 626-662, </pages> <month> December </month> <year> 1994. </year> <title> This article was processed using the L A T E X macro package with LLNCS style </title>
Reference-contexts: Others tackle the problem of protecting mobile agents from their hosts [31]. In contrast, we focus on data security in multi-agent environments. The problem of security in databases has been studied intensively, e.g. <ref> [4, 5, 6, 9, 19, 27, 32] </ref>. While this work is significant, none of it has focused on agents. We attempt to build on top of existing approaches. However, data security in autonomous agents environments raises new problems.
References-found: 32

