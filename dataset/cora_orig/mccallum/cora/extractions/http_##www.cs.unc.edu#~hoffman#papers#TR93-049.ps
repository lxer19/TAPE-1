URL: http://www.cs.unc.edu/~hoffman/papers/TR93-049.ps
Refering-URL: http://www.cs.unc.edu/~hoffman/publications.html
Root-URL: http://www.cs.unc.edu
Email: hoffman@cs.unc.edu  
Title: Design of the BioSCAN Server Software  
Author: Doug L. Hoffman 
Address: Campus Box 3175, Sitterson Hall Chapel Hill, North Carolina 27599-3175  
Affiliation: fi Department of Computer Science University of North Carolina at Chapel Hill  
Date: 14 April, 1993  
Note: Version 3.0  
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> S. F. Altschul. </author> <title> Amino acid substitution matrices from an information theoretic perspective. </title> <journal> Journal of Molecular Biology, </journal> <volume> 219 </volume> <pages> 555-565, </pages> <year> 1991. </year>
Reference-contexts: T. White in 1991 [17] and later expanded on by W. D. Dettloff, R. K. Singh, C. T. White and B. W. Erickson [6]. The foundation of the BioSCAN hardware is an algorithm based on work done by S. Karlin and S. F. Altschul <ref> [10, 1] </ref>. The BioSCAN project is a cooperative venture combining the efforts of the Department of Computer Science, the Department of Chemistry, and the Program in Molecular Biology and Biotechnology at the University of North Carolina at Chapel Hill with those of MCNC (formerly the Microelectronics Center of North Carolina).
Reference: [2] <author> S. F. Altschul, W. Gish, W. Miller, E. W. Myers, and D. J. Lipman. </author> <title> Basic local alignment search tool. </title> <journal> Journal of Molecular Biology, </journal> <volume> 215 </volume> <pages> 403-410, </pages> <year> 1990. </year>
Reference-contexts: Though efficient algorithms for exact pattern 2 matching are well known there are no inexact matching algorithms with similar performance. There are several very different approaches to this problem [12]. Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST <ref> [2] </ref> algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs [13, 14, 7, 9] .
Reference: [3] <author> R. S. Boyer and J. S. Moore. </author> <title> A fast string search algorithm. </title> <journal> Communications of the ACM, </journal> <volume> 20 </volume> <pages> 762-772, </pages> <year> 1977. </year>
Reference-contexts: Given the large amount of data to be searched the time required for pattern matching becomes important. At first glance, this does not sound like an onerous task|algorithms for pattern matching between text strings abound. The best of these algorithms are quite efficient (see <ref> [3] </ref> and [11]). There is, however, a complication; in biological sequence matching the patterns need not match exactly and in fact seldom do. Though efficient algorithms for exact pattern 2 matching are well known there are no inexact matching algorithms with similar performance.
Reference: [4] <author> C. Burks. </author> <title> How much sequence data the data banks will be processing in the near future. </title> <editor> In R. R. Colwell, editor, </editor> <booktitle> Biomolecular Data, </booktitle> <pages> pages 17-26. </pages> <address> New York: </address> <publisher> Oxford University Press, </publisher> <year> 1989. </year>
Reference-contexts: The SWISS-PROT database [8] contains over twenty-six thousand protein sequences with a total of eight million characters. These databases and others have been growing at exponential rates with doubling times between 18 and 24 months <ref> [4] </ref>. Given the large amount of data to be searched the time required for pattern matching becomes important. At first glance, this does not sound like an onerous task|algorithms for pattern matching between text strings abound. The best of these algorithms are quite efficient (see [3] and [11]).
Reference: [5] <author> Douglas E. Comer. </author> <title> Internetworking with TCP/IP, </title> <booktitle> Volume 1. </booktitle> <address> Englewood Cliffs, N.J. </address> : <publisher> Prentice-Hall, </publisher> <year> 1991. </year>
Reference-contexts: The server must now keep the state of the client's request until the request is completed or the server detects that the client has canceled the request. Having to wait for an acknowledgment before transmitting the next packet is very inefficient so some form of sliding window scheme <ref> [5] </ref> is required. Multi-packet requests greatly complicate server design. As has been seen, unreliability is an inherent property of UDP based server software. Under the appropriate circumstances this is not a major detraction and the protocol's other advantages can make using UDP attractive.
Reference: [6] <author> W. D. Dettloff, R. K. Singh, C. T. White, and B. W. Erickson. </author> <title> A 50 mhz 1.5m transistor asic for biosequence analysis. </title> <booktitle> International Solid State Circuit Conference Digest of Technical Papers, </booktitle> <pages> pages 40-42, </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: T. White in 1991 [17] and later expanded on by W. D. Dettloff, R. K. Singh, C. T. White and B. W. Erickson <ref> [6] </ref>. The foundation of the BioSCAN hardware is an algorithm based on work done by S. Karlin and S. F. Altschul [10, 1].
Reference: [7] <author> M. Gokhale et al. </author> <title> Splash: A reconfigurable linear logic array. </title> <booktitle> Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> page 526, </pages> <year> 1990. </year>
Reference-contexts: Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs <ref> [13, 14, 7, 9] </ref> . Among the groups building custom hardware is the BioSCAN project based at the University of North Carolina at Chapel Hill. 2.2 The BioSCAN Project The BioSCAN project takes its name from the Biological Sequence Comparative Analysis Node that was first described by C. T.
Reference: [8] <author> M. Gribskov and J. Devereux, </author> <title> editors. Sequence Analysis Primer. </title> <address> New York: </address> <publisher> Stockton Press, </publisher> <year> 1991. </year>
Reference-contexts: This is because, after the considerable task of isolating and identifying the sequence of bases in a nucleic acid or protein fragment, each new sequence must be checked against the existing catalog of sequences. The GenBank database <ref> [8] </ref>, maintained by the National Center for Biotechnology Information, contains more than eighty thousand DNA and RNA sequences, totaling over one hundred million characters. The SWISS-PROT database [8] contains over twenty-six thousand protein sequences with a total of eight million characters. <p> The GenBank database <ref> [8] </ref>, maintained by the National Center for Biotechnology Information, contains more than eighty thousand DNA and RNA sequences, totaling over one hundred million characters. The SWISS-PROT database [8] contains over twenty-six thousand protein sequences with a total of eight million characters. These databases and others have been growing at exponential rates with doubling times between 18 and 24 months [4]. Given the large amount of data to be searched the time required for pattern matching becomes important.
Reference: [9] <author> R. P. Hughey and D. P. Lopresti. B-sys: </author> <title> A 470-processor programmable systolic array. </title> <booktitle> Proceedings of the International Conference on Parallel Processing, </booktitle> <pages> pages 580-586, </pages> <year> 1991. </year> <month> 28 </month>
Reference-contexts: Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs <ref> [13, 14, 7, 9] </ref> . Among the groups building custom hardware is the BioSCAN project based at the University of North Carolina at Chapel Hill. 2.2 The BioSCAN Project The BioSCAN project takes its name from the Biological Sequence Comparative Analysis Node that was first described by C. T.
Reference: [10] <author> S. Karlin and S. F. Altschul. </author> <title> Methods for assessing the statistical significance of molec-ular sequence features by using general scoring schemes. </title> <booktitle> Proceedings of the National Academy of Sciences, </booktitle> <volume> 87 </volume> <pages> 2264-2268, </pages> <year> 1990. </year>
Reference-contexts: T. White in 1991 [17] and later expanded on by W. D. Dettloff, R. K. Singh, C. T. White and B. W. Erickson [6]. The foundation of the BioSCAN hardware is an algorithm based on work done by S. Karlin and S. F. Altschul <ref> [10, 1] </ref>. The BioSCAN project is a cooperative venture combining the efforts of the Department of Computer Science, the Department of Chemistry, and the Program in Molecular Biology and Biotechnology at the University of North Carolina at Chapel Hill with those of MCNC (formerly the Microelectronics Center of North Carolina).
Reference: [11] <author> D. E. Knuth, J. H. Morris, and V. R. Pratt. </author> <title> Fast pattern matching in strings. </title> <type> Technical Report CS-74-440, </type> <institution> Department of Computer Science, Stanford University, Stanford, Calif., </institution> <year> 1974. </year>
Reference-contexts: Given the large amount of data to be searched the time required for pattern matching becomes important. At first glance, this does not sound like an onerous task|algorithms for pattern matching between text strings abound. The best of these algorithms are quite efficient (see [3] and <ref> [11] </ref>). There is, however, a complication; in biological sequence matching the patterns need not match exactly and in fact seldom do. Though efficient algorithms for exact pattern 2 matching are well known there are no inexact matching algorithms with similar performance.
Reference: [12] <author> J. B. Kruskal. </author> <title> An overview of sequence comparison: Time warps, string edits, and macromolecules. </title> <journal> SIAM Review, </journal> <volume> 25(2) </volume> <pages> 201-237, </pages> <year> 1983. </year>
Reference-contexts: There is, however, a complication; in biological sequence matching the patterns need not match exactly and in fact seldom do. Though efficient algorithms for exact pattern 2 matching are well known there are no inexact matching algorithms with similar performance. There are several very different approaches to this problem <ref> [12] </ref>. Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs [13, 14, 7, 9] .
Reference: [13] <author> D.P. Lopresti. P-nac: </author> <title> A systolic array for comparing nucleic acid sequences. </title> <journal> Computer, </journal> <volume> 20(7) </volume> <pages> 98-99, </pages> <month> July </month> <year> 1987. </year>
Reference-contexts: Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs <ref> [13, 14, 7, 9] </ref> . Among the groups building custom hardware is the BioSCAN project based at the University of North Carolina at Chapel Hill. 2.2 The BioSCAN Project The BioSCAN project takes its name from the Biological Sequence Comparative Analysis Node that was first described by C. T.
Reference: [14] <author> A. Mukherjee. </author> <title> Hardware algorithms for determining similarity between two strings. </title> <journal> IEEE Transactions on Computers, </journal> <volume> 38 </volume> <pages> 600-603, </pages> <year> 1989. </year>
Reference-contexts: Numerous software based approaches to this problem have been proposed, including the FASTA [16] and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs <ref> [13, 14, 7, 9] </ref> . Among the groups building custom hardware is the BioSCAN project based at the University of North Carolina at Chapel Hill. 2.2 The BioSCAN Project The BioSCAN project takes its name from the Biological Sequence Comparative Analysis Node that was first described by C. T.
Reference: [15] <author> National Institutes of Health. </author> <title> The U.S. human genome project: The first five years fy 1991-1995. </title> <type> Technical Report NIH 90-1580, </type> <institution> National Center for Human Genome Research, </institution> <year> 1990. </year>
Reference-contexts: Research for the BioSCAN project, including the design of the server software, was supported in part by NSF grant MIP-9024585. 2 Background 2.1 Biological Sequence Matching: the Human Genome Initiative Since the National Institutes of Health announced the Human Genome Initiative in 1990 <ref> [15] </ref> there has been a rapid increase in the volume of biological sequence data collected each year. The goal of the Human Genome Initiative is to map the entire genetic blueprint of mankind. The code in which this blueprint is written is deoxyribonucleic acid (DNA).
Reference: [16] <author> W. R. Pearson and D. J. Lipman. </author> <title> Improved tools for biological sequence comparison. </title> <booktitle> Proceedings of the National Academy of Sciences, </booktitle> <volume> 85 </volume> <pages> 2444-2448, </pages> <year> 1988. </year>
Reference-contexts: Though efficient algorithms for exact pattern 2 matching are well known there are no inexact matching algorithms with similar performance. There are several very different approaches to this problem [12]. Numerous software based approaches to this problem have been proposed, including the FASTA <ref> [16] </ref> and BLAST [2] algorithms. Though these methods are fast and useful a number of groups have implemented or proposed more ambitious inexact pattern matching algorithms as custom hardware designs [13, 14, 7, 9] .
Reference: [17] <author> C. T. White et al. Bioscan: </author> <title> A vlsi-based system for biosequence analysis. </title> <booktitle> Proceedings of the International Conference on Computer Design: VLSI in Computers & Processors, </booktitle> <pages> pages 504-509, </pages> <year> 1991. </year> <month> 29 </month>
Reference-contexts: Among the groups building custom hardware is the BioSCAN project based at the University of North Carolina at Chapel Hill. 2.2 The BioSCAN Project The BioSCAN project takes its name from the Biological Sequence Comparative Analysis Node that was first described by C. T. White in 1991 <ref> [17] </ref> and later expanded on by W. D. Dettloff, R. K. Singh, C. T. White and B. W. Erickson [6]. The foundation of the BioSCAN hardware is an algorithm based on work done by S. Karlin and S. F. Altschul [10, 1].
References-found: 17

