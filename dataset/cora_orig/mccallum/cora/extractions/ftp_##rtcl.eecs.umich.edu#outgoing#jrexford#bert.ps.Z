URL: ftp://rtcl.eecs.umich.edu/outgoing/jrexford/bert.ps.Z
Refering-URL: http://www.eecs.umich.edu/RTCL/harts/
Root-URL: http://www.cs.umich.edu
Email: E-mail: fjrexford, hallj, kgshing@eecs.umich.edu  
Title: A Router Architecture for Real-Time Point-to-Point Networks  
Author: Jennifer Rexford, John Hall, and Kang G. Shin 
Web: Web: http://www.eecs.umich.edu/RTCL  
Address: Ann Arbor, MI 48109-2122  
Affiliation: Real-Time Computing Laboratory Department of Electrical Engineering and Computer Science University of Michigan  
Abstract: Parallel machines have the potential to satisfy the large computational demands of emerging real-time applications. These applications require a predictable communication network, where time-constrained traffic requires bounds on latency or throughput while good average performance suffices for best-effort packets. This paper presents a router architecture that tailors low-level routing, switching, arbitration and flow-control policies to the conflicting demands of each traffic class. The router implements deadline-based scheduling, with packet switching and table-driven multicast routing, to bound end-to-end delay for time-constrained traffic, while allowing best-effort traffic to capitalize on the low-latency routing and switching schemes common in modern parallel machines. To limit the cost of servicing time-constrained traffic, the router shares packet buffers and link-scheduling logic between the multiple output ports. Verilog simulations demonstrate that the design meets the performance goals of both traffic classes in a single-chip solution. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> L. R. Welch and K. </author> <title> Toda, "Architectural support for real-time systems: Issues and trade-offs," </title> <booktitle> in Proc. International Workshop on Real-Time Computing Systems and Applications, </booktitle> <month> December </month> <year> 1994. </year>
Reference: [2] <author> M. W. </author> <title> Mutka, "Using rate monotonic scheduling technology for real-time communications in a wormhole net work," </title> <booktitle> in Proc. Workshop on Parallel and Distributed Real-Time Systems, </booktitle> <month> April </month> <year> 1994. </year>
Reference-contexts: Coupled with restrictions on the source injection rate, these policies can bound end-to-end packet latency by limiting the service and blocking times for higher-priority traffic <ref> [2] </ref>. Although assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [3] <author> J.-P. Li and M. W. </author> <title> Mutka, "Priority based real-time communication for large scale wormhole networks," </title> <booktitle> in Proc. International Parallel Processing Symposium, </booktitle> <pages> pp. 433-438, </pages> <month> April </month> <year> 1994. </year>
Reference-contexts: Still, these coarse-grain priorities do not differentiate between packets with different latency tolerances. With additional virtual channels, the network has greater flexibility in assigning packet priority, perhaps based on the end-to-end delay requirement, and restricting access to virtual channels reserved for higher-priority traffic <ref> [3, 4] </ref>. Coupled with restrictions on the source injection rate, these policies can bound end-to-end packet latency by limiting the service and blocking times for higher-priority traffic [2]. Although assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [4] <author> A. Saha, </author> <title> "Simulator for real-time parallel processing architectures," </title> <booktitle> in Proc. IEEE Annual Simulation Symposium, </booktitle> <pages> pp. 74-83, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: Still, these coarse-grain priorities do not differentiate between packets with different latency tolerances. With additional virtual channels, the network has greater flexibility in assigning packet priority, perhaps based on the end-to-end delay requirement, and restricting access to virtual channels reserved for higher-priority traffic <ref> [3, 4] </ref>. Coupled with restrictions on the source injection rate, these policies can bound end-to-end packet latency by limiting the service and blocking times for higher-priority traffic [2]. Although assigning priorities to virtual channels provides some control over packet scheduling, this ties priority resolution to the number of virtual channels.
Reference: [5] <author> K. Toda, K. Nishida, E. Takahashi, N. Michell, and Y. Yamaguchi, </author> <title> "Design and implementation of a priority forwarding router chip for real-time interconnection networks," </title> <journal> International Journal of Mini and Microcomputers, </journal> <volume> vol. 17, no. 1, </volume> <pages> pp. 42-51, </pages> <year> 1995. </year>
Reference-contexts: Instead of dedicating virtual channels and flit buffers to each priority level, a router can increase priority resolution by adopting a packet-switched design. The priority-forwarding router chip <ref> [5] </ref> follows this approach by employing a 32-bit priority field in small, 8-packet priority queues at each input port. <p> As future work, we are extending the router architecture to enhance performance and flexibility. In particular, the router can improve link utilization and average latency by using virtual cut-through switching <ref> [5, 29] </ref> for time-constrained traffic; this would permit an arriving packet to proceed directly to its output link if no other packets have smaller sorting keys.
Reference: [6] <author> R. Games, A. Kanevsky, P. Krupp, and L. Monk, </author> <title> "Real-time communications scheduling for massively parallel processors," </title> <booktitle> in Proc. Real-Time Technology and Applications Symposium, </booktitle> <pages> pp. 76-85, </pages> <month> May </month> <year> 1995. </year>
Reference-contexts: Several projects have proposed mechanisms to improve predictability in the wormhole-switched networks common in modern multicomputers. In the absence of hardware support for priority-based scheduling, application and operating system software can control end-to-end performance by regulating the rate of packet injection at each source node <ref> [6] </ref>. However, this approach must limit utilization of the communication network to account for possible contention between packets, even from lower-priority traffic.
Reference: [7] <author> R. S. Raji, </author> <title> "Smart networks for control," </title> <journal> IEEE Spectrum, </journal> <volume> vol. 31, </volume> <pages> pp. 49-55, </pages> <month> June </month> <year> 1994. </year>
Reference-contexts: Consequently, recent years have seen increasing interest in developing networks that provide performance guarantees for communication in parallel machines [1-6]. Real-time systems employ a variety of network architectures, depending on the application performance requirements. Although prioritized bus and ring networks are commonly used in small-scale systems <ref> [7] </ref>, larger applications can benefit from the higher bandwidth available in multi-hop topologies. In addition, multi-hop networks often have several disjoint routes between each pair of processing nodes, improving the application's resilience to link and node failures. <p> In most real-time systems, time-constrained communication consists of 10-20 byte exchanges of command or status information <ref> [7] </ref>. Consequently, our design restricts time-constrained traffic to small, fixed-size packets, as shown in Table 2; this bounds network access latency and buffering delay while simplifying memory allocation in the router. To ensure predictable consumption of link and buffer resources, time-constrained traffic employs store-and-forward packet switching.
Reference: [8] <author> C. M. Aras, J. F. Kurose, D. S. Reeves, and H. Schulzrinne, </author> <title> "Real-time communication in packet-switched networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 82, </volume> <pages> pp. 122-139, </pages> <month> January </month> <year> 1994. </year>
Reference-contexts: Although the implementation is geared toward two-dimensional meshes, as shown in Figure 1, the architecture directly extends to other network topologies. Communication predictability can be improved by assigning priority to time-constrained traffic or to packets that have experienced large delays earlier in their routes <ref> [8] </ref>. Ultimately, though, bounding worst-case latency requires prior reservation of link and buffer resources, based on the application's anticipated traffic load. Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [8, 9, 14] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
Reference: [9] <author> D. D. Kandlur, K. G. Shin, and D. Ferrari, </author> <title> "Real-time communication in multi-hop networks," </title> <journal> IEEE Trans. on Parallel and Distributed Systems, </journal> <volume> vol. 5, </volume> <pages> pp. 1044-1056, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Under this traffic contract, the network can provide end-to-end performance guarantees through effective link-scheduling and buffer-allocation policies. The real-time router design handles a wide range of throughput and delay requirements by implementing the real-time channel <ref> [9] </ref> abstraction for packet scheduling, as described in Section 2. <p> Section 6 discusses related work, while Section 7 concludes the paper with a discussion of future research directions. 2 Real-Time Channels Real-time communication requires reservation of bandwidth and buffer resources, coupled with packet scheduling at the network links. The real-time channel model <ref> [9] </ref> provides a useful abstraction for bounding end-to-end network delay, under certain application traffic characteristics. Traffic parameters: A real-time channel is a unidirectional virtual connection that traverses one or more network links. <p> Per-hop delay bounds: The network does not admit a new connection unless it can reserve sufficient buffer and bandwidth resources without violating the requirements of existing connections <ref> [9, 14] </ref>. A connection establishment procedure decomposes the connection's end-to-end delay bound D into local delay bounds d j for each hop in its route such that d j I min and P j d j D. <p> Buffer requirements: By postponing the transmission of early time-constrained traffic, the link scheduler avoids overloading the buffer space at the downstream node <ref> [9, 10] </ref>. If the first two scheduling queues are empty, the link can transmit early time-constrained traffic from Queue 3, as long as these messages are within a small distance h 0 of their logical arrival time. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [8, 9, 14] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
Reference: [10] <author> H. Zhang, </author> <title> "Providing end-to-end performance guarantees using non-work-conserving disciplines," </title> <journal> Computer Communications, </journal> <volume> vol. 18, </volume> <pages> pp. 769-781, </pages> <month> October </month> <year> 1995. </year>
Reference-contexts: A real-time channel is a unidirectional virtual connection between two nodes, with a source traffic specification and end-to-end delay bound; separate parameters for delay and bandwidth permit the model to accommodate a wider range and larger number of connections than other disciplines <ref> [10] </ref>, at the expense of increased implementation complexity. At run-time, the network guarantees end-to-end performance through bandwidth regulation and deadline-based packet scheduling at each link. <p> Buffer requirements: By postponing the transmission of early time-constrained traffic, the link scheduler avoids overloading the buffer space at the downstream node <ref> [9, 10] </ref>. If the first two scheduling queues are empty, the link can transmit early time-constrained traffic from Queue 3, as long as these messages are within a small distance h 0 of their logical arrival time.
Reference: [11] <author> Y. Ofek and M. Yung, </author> <title> "The integrated MetaNet architecture: A switch-based multimedia LAN for parallel computing and real-time traffic," </title> <booktitle> in Proc. IEEE INFO-COM, </booktitle> <pages> pp. 802-811, </pages> <year> 1994. </year>
Reference: [12] <author> W. J. Dally and C. L. Seitz, </author> <title> "The torus routing chip," </title> <journal> Journal of Distributed Computing, </journal> <volume> vol. 1, no. 3, </volume> <pages> pp. 187-196, </pages> <year> 1986. </year>
Reference-contexts: Section 3 describes how our design tailors network routing, switching, arbitration, and flow-control policies to the conflicting requirements of these two traffic classes. Time-constrained traffic employs packet switching and small, fixed-size packets to bound worst-case performance, while best-effort packets employ wormhole switching <ref> [12] </ref> to reduce average latency and minimize buffer space requirements, even for large packets. Section 4 discusses the router's support for run-time scheduling of time-constrained packets. To reduce hardware complexity, the architecture shares packet buffers and sorting logic between the router's multiple output links. <p> Most modern parallel machines employ cut-through switching schemes for lower latency and reduced buffer space requirements. In particular, wormhole switching permits an arriving packet to proceed directly to the next node in its route, stalling in the network if the outgoing link is not available <ref> [12] </ref>. In effect, this converts the best-effort scheduling "queue" in Table 1 into a logical queue that spans multiple nodes.
Reference: [13] <author> R. L. Cruz, </author> <title> "A calculus for network delay, part I: Network elements in isolation," </title> <journal> IEEE Trans. Information Theory, </journal> <volume> vol. 37, </volume> <pages> pp. 114-131, </pages> <month> January </month> <year> 1991. </year>
Reference-contexts: To permit some variation from purely periodic traffic, a connection can generate a burst of up to B max messages in excess of the periodic restriction I min . Together, these three parameters form a linear bounded arrival process <ref> [13] </ref> that governs a connection's traffic generation at the source node. End-to-end delay bound: In addition to these traffic parameters, a connection has a bound D on end-to-end message delay, based on the minimum message spacing I min .
Reference: [14] <author> Q. Zheng and K. G. Shin, </author> <title> "On the ability of establishing real-time channels in point-to-point packet-switched networks," </title> <journal> IEEE Trans. Communications, </journal> <pages> pp. 1096-1105, </pages> <month> February/March/April </month> <year> 1994. </year>
Reference-contexts: Per-hop delay bounds: The network does not admit a new connection unless it can reserve sufficient buffer and bandwidth resources without violating the requirements of existing connections <ref> [9, 14] </ref>. A connection establishment procedure decomposes the connection's end-to-end delay bound D into local delay bounds d j for each hop in its route such that d j I min and P j d j D. <p> Admitting a new connection, and selecting a multi-hop route with suitable local delay parameters, is a computationally-intensive procedure <ref> [8, 9, 14] </ref>. Fortunately, channel establishment typically does not impose tight timing constraints; in most cases, the network can create the required channels before data transfer commences. To permit a single-chip solution, the real-time router relegates these non-real-time operations to the protocol software.
Reference: [15] <author> C. L. Liu and J. W. Layland, </author> <title> "Scheduling algorithms for multiprogramming in a hard real-time environment," </title> <journal> Journal of the ACM, </journal> <volume> vol. 20, </volume> <pages> pp. 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: Run-time link scheduling: Each link schedules time-constrained traffic in order to bound message delay without exceeding the reserved buffer space at intermediate nodes. The scheduler, which employs a multi-class variation of the earliest due-date algorithm <ref> [15] </ref>, gives highest priority to time-constrained messages that have reached their logical arrival time (i.e., ` j (m i ) t), transmitting the message with the smallest deadline ` j (m i ) + d j , as shown in Table 1.
Reference: [16] <author> J. Rexford and K. G. Shin, </author> <title> "Support for multiple classes of traffic in multicomputer routers," </title> <booktitle> in Proc. Parallel Computer Routing and Communication Workshop, </booktitle> <pages> pp. 116-130, </pages> <month> May </month> <year> 1994. </year>
Reference-contexts: However, these wormhole packets can stall in the network for an unpredictable amount of time, delaying the advancement of other packets heading for different destinations. The effective mixing of time-constrained and best-effort traffic hinges on controlling the interaction between these two classes <ref> [16] </ref>. In particular, best-effort packets should not consume arbitrary amounts of bandwidth resources while time-constrained packets await service. To control the interaction between the two traffic classes, the real-time router divides each link into two virtual channels [17].
Reference: [17] <author> W. Dally, </author> <title> "Virtual-channel flow control," </title> <journal> IEEE Trans. Parallel and Distributed Systems, </journal> <volume> vol. 3, </volume> <pages> pp. 194-205, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: In particular, best-effort packets should not consume arbitrary amounts of bandwidth resources while time-constrained packets await service. To control the interaction between the two traffic classes, the real-time router divides each link into two virtual channels <ref> [17] </ref>. A single bit on each link differentiates between time-constrained and best-effort packets; each link also includes an acknowledgement bit for flow control on the best-effort virtual channel. <p> The underlying router architecture can improve predictability by favoring older packets when assigning virtual channels or arbitrating between channels on the same physical link <ref> [17] </ref>. Although these mechanisms reduce variability in end--to-end latency, more aggressive techniques are necessary to guarantee performance under high network utilization. <p> A router can support multiple classes of traffic, such as user and system packets, by partitioning traffic onto different virtual channels, with priority-based arbitration for access to the network links <ref> [17] </ref>. Flit-level preemption of low-priority virtual channels can significantly reduce intrusion on the high-priority packets. Still, these coarse-grain priorities do not differentiate between packets with different latency tolerances.
Reference: [18] <author> W. J. Dally and C. L. Seitz, </author> <title> "Deadlock-free message routing in multiprocessor interconnection networks," </title> <journal> IEEE Trans. Computers, </journal> <volume> vol. C-36, no. 5, </volume> <pages> pp. 547-553, </pages> <month> May </month> <year> 1987. </year>
Reference-contexts: Instead, the real-time router implements dimension-ordered routing, a shortest-path scheme that completely routes a packet in the x-direction before proceeding in the y-direction to the destination, as shown by the shaded nodes in Figure 1. Dimension-ordered routing avoids packet deadlock in a square mesh <ref> [18] </ref> and also facilitates an efficient implementation based on x and y offsets in the packet header, as shown in Figure 3 (b); the offsets reach zero when the packet has arrived at its destination node.
Reference: [19] <author> L. Ni and P. McKinley, </author> <title> "A survey of wormhole routing techniques in direct networks," </title> <booktitle> IEEE Computer, </booktitle> <pages> pp. 62-76, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: The router could improve best-effort performance by implementing adaptive wormhole routing, with additional virtual channels to avoid deadlock, at the expense of increased implementation complexity <ref> [19, 20] </ref>. In particular, non-minimal adaptive routing would enable best-effort packets to circumvent links with a heavy load of time-constrained traffic. 3.4 Buffer Architecture The real-time router includes a packet memory for storing time-constrained traffic awaiting access to the outgoing links; in contrast, blocked best-effort packets stall in the network.
Reference: [20] <author> K. Aoyama and A. Chien, </author> <title> "Cost of adaptivity and virtual lanes in a wormhole router," </title> <journal> Journal of VLSI Design, </journal> <volume> vol. 2, no. 4, </volume> <pages> pp. 315-333, </pages> <year> 1995. </year>
Reference-contexts: The router could improve best-effort performance by implementing adaptive wormhole routing, with additional virtual channels to avoid deadlock, at the expense of increased implementation complexity <ref> [19, 20] </ref>. In particular, non-minimal adaptive routing would enable best-effort packets to circumvent links with a heavy load of time-constrained traffic. 3.4 Buffer Architecture The real-time router includes a packet memory for storing time-constrained traffic awaiting access to the outgoing links; in contrast, blocked best-effort packets stall in the network. <p> The router can support a finer grain of packet priorities by increasing the number of virtual channels, at the expense of implementation complexity; extra virtual channels incur the cost of additional flit buffers and larger virtual channel identifiers, as well as more complex switching and arbitration logic <ref> [20] </ref>. Instead of dedicating virtual channels and flit buffers to each priority level, a router can increase priority resolution by adopting a packet-switched design. The priority-forwarding router chip [5] follows this approach by employing a 32-bit priority field in small, 8-packet priority queues at each input port.
Reference: [21] <author> F. A. Tobagi, </author> <title> "Fast packet switch architectures for broadband integrated services digital networks," </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> vol. 78, </volume> <pages> pp. 133-167, </pages> <month> January </month> <year> 1990. </year>
Reference-contexts: The router queues time-constrained packets at the output ports to avoid the throughput limitations of input queueing <ref> [21] </ref>; this permits each output link to select a packet for transmis Time-Constrained Best-Effort Switching Packet switching Wormhole switching Packet size 20 bytes Variable length Link arbitration Deadline-driven Round-robin on input links Routing Table-driven multicast Dimension-ordered unicast Buffers Shared output queues Flit buffers at input links Flow control Rate-based Flit acknowledgements <p> Similarly, each port includes a small flit buffer to permit continuous transmission of wormhole packets in the absence of link contention. Similar to many shared-memory switches in high-speed networks <ref> [21] </ref>, our design includes an idle-address FIFO for assigning unused memory locations to arriving time-constrained packets. An incoming packet retrieves an address from this FIFO; upon packet departure, the router returns the location to this idle-address pool.
Reference: [22] <author> Q. Zheng, K. G. Shin, and C. Chen, </author> <title> "Real-time communication in ATM," </title> <booktitle> in Proc. Annual Conference on Local Computer Networks, </booktitle> <pages> pp. 156-164, </pages> <month> October </month> <year> 1994. </year>
Reference-contexts: Alternatively, the router could store additional information in the connection table to compute ` j (m i ) from a packet's actual arrival time and the logical arrival time of the connection's previous packet <ref> [22] </ref>; however, this approach would require the router to periodically refresh this connection state to correctly handle the effects of clock rollover. In addition to the connection table, the router maintains a separate horizon parameter h for each outgoing port.
Reference: [23] <author> D. Picker and R. D. Fellman, </author> <title> "Scaling and performance of a priority packet queue for real-time applications," </title> <booktitle> in Proc. Real-Time Systems Symposium, </booktitle> <pages> pp. 56-62, </pages> <month> De-cember </month> <year> 1994. </year>
Reference-contexts: To maximize link utilization and channel admissability, the router overlaps run-time communication scheduling with packet transmission on each of the five output ports. As a result, packet size determines the acceptable worst-case scheduling delay, limiting both the maximum number of time-constrained packets and the size of the sorting keys <ref> [23] </ref>; to facilitate a single-chip solution, our design efficiently handles a moderate number of packets.
Reference: [24] <author> H. J. Chao, </author> <title> "A novel architecture for queue management in the ATM network," </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> vol. 9, </volume> <pages> pp. 1110-1118, </pages> <month> September </month> <year> 1991. </year>
Reference: [25] <author> P. E. Boyer, F. M. Guillemin, M. J. Servel, and J.-P. Coudreuse, </author> <title> "Spacing cells protects and enhances utilization of ATM network links," </title> <journal> IEEE Network Magazine, </journal> <pages> pp. 38-49, </pages> <month> September </month> <year> 1992. </year>
Reference: [26] <author> E. Wallmeier and T. Worster, </author> <title> "The Spacing Policer, an algorithm for efficient peak bit rate control in ATM networks," </title> <booktitle> in Proc. International Switching Symposium, </booktitle> <pages> pp. 22-26, </pages> <month> October </month> <year> 1992. </year>
Reference: [27] <author> J. Liebeherr and D. Wrege, </author> <title> "Versatile packet multiplexer for quality-of-service networks," </title> <booktitle> in Proc. IEEE International Symposium on High Performance Distributed Computing, </booktitle> <pages> pp. 148-155, </pages> <month> August </month> <year> 1995. </year>
Reference: [28] <author> J. Rexford, A. Greenberg, and F. Bonomi, </author> <title> "Hardware-efficient fair queueing architectures for high-speed networks," </title> <booktitle> in Proc. IEEE INFOCOM, </booktitle> <month> March </month> <year> 1996. </year>
Reference: [29] <author> P. Kermani and L. Kleinrock, </author> <title> "Virtual cut-through: A new computer communication switching technique," </title> <journal> Computer Networks, </journal> <volume> vol. 3, </volume> <pages> pp. 267-286, </pages> <month> September </month> <year> 1979. </year>
Reference-contexts: As future work, we are extending the router architecture to enhance performance and flexibility. In particular, the router can improve link utilization and average latency by using virtual cut-through switching <ref> [5, 29] </ref> for time-constrained traffic; this would permit an arriving packet to proceed directly to its output link if no other packets have smaller sorting keys.
Reference: [30] <author> J. Rexford, J. Dolter, W. Feng, and K. G. Shin, </author> <title> "PP-MESS-SIM: A simulator for evaluating multicomputer interconnection networks," </title> <booktitle> in Proc. IEEE Annual Simulation Symposium, </booktitle> <pages> pp. 84-93, </pages> <month> April </month> <year> 1995. </year>
Reference-contexts: This would permit the router to efficiently handle a larger number of time-constrained packets. To complement the Verilog simulations of the router chip, work is underway to incorporate the real-time router architecture in a multicomputer network simulator <ref> [30] </ref>. This simulation environment will enable us to evaluate the design under larger network configurations and more diverse traffic patterns, while facilitating direct comparisons to alternate router architectures.
References-found: 30

