URL: http://www.cs.berkeley.edu/~amit/research/Postscript/thesis.ps
Refering-URL: http://www.cs.berkeley.edu/~amit/research/index.html
Root-URL: http://www.cs.berkeley.edu
Title: Multi-party Real-time Communication in Computer Networks  
Author: by Amit Gupta 
Note: amit@cs.berkeley.edu  
Abstract: Ph.D. Dissertation Report No. UCB/CSD-96-896 Computer Science Division University of California Berkeley CA 94720 February 1996 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Tony Ballardine, Paul Francis, and Jon Crowcroft. </author> <title> Core Based Trees (CBT): an architecture for scalable inter-domain multicast routing. </title> <booktitle> In Proceedings of SIGCOMM 93, </booktitle> <address> San Francisco, CA, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: Then for every channel, the appropriate directed subtree t, of T , that connects all destinations to the source is used. This behavior is exhibited by many current routing algorithms, including Core-Based Trees <ref> [1] </ref>. In this analysis, we relax the constraints that we previously imposed on the network topology and on the distribution of destinations among the network nodes; thus, this analysis is applicable to arbitrary network and connection topologies. <p> requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [2] <author> Anindo Banerjea, Domenico Ferrari, Bruce Mah, Mark Moran, Dinesh Verma, and Hui Zhang. </author> <title> The Tenet real-time protocol suite: Design, implementation, and experiences. </title> <type> Technical Report TR-94-059, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year> <note> Also to appear in IEEE/ACM Transactions on Networking, </note> <year> 1995. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance. <p> To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example [2, 9, 18, 97, 102, 130]). For example, in the client-service interface of the Tenet Suite 1 <ref> [2] </ref>, there is no way a client can request the establishment of a real-time channel in advance. <p> they need to use the network. 1 An alternative approach would be to provide pre-emption of existing channels; however, we believe that a good service should not be pre-emptible. 61 The service model in the existing proposals and realizations of real-time communication services, including that in the Tenet Suite 1 <ref> [2] </ref>, assumes that real-time channels are requested (and established) for an indefinite duration. Clients are not asked to specify for how long such channels (to be called immediate channels in the sequel) will be alive, and this non-negligibly simplifies their tasks.
Reference: [3] <author> Anindo Banerjea and Bruce Mah. </author> <title> The design of a real-time channel administration protocol, </title> <month> June </month> <year> 1991. </year> <type> Internal technical report. </type>
Reference-contexts: A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages.
Reference: [4] <author> Anindo Banerjea and Bruce Mah. </author> <title> The real-time channel administration protocol. </title> <booktitle> In Proceedings of the Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 160-170, </pages> <address> Heidelberg, Germany, </address> <month> November </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one. <p> A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages.
Reference: [5] <author> Arthur W. Berger, Samuel P. Morgan, and Amy R. Reibman. </author> <title> Statistical multiplexing of layered video streams over ATM networks with leaky-bucket traffic descriptors, 1993. </title> <type> preprint. </type>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [6] <author> Steven Berson and Daniel Zappala. </author> <title> Looping and wildcard filters. </title> <address> "Pre-print", </address> <month> March </month> <year> 1995. </year>
Reference-contexts: Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users. Finally, merging Wildcard filters can cause some serious looping problems <ref> [6] </ref>. The current RSVP proposal handles this problem by introducing "SCOPE" objects which list the set of senders in the RESV messages; this can lead to significant scalability problems. [30] proposed an advance-reservation service for predictive service under RSVP.
Reference: [7] <author> Riccardo Bettati, Domenico Ferrari, Amit Gupta, Wendy Heffner, Wingwai Howe, Quyen Nguyen, Mark Moran, and Raj Yavatkar. </author> <title> Connection establishment for multi-party real-time communication. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1994. </year>
Reference-contexts: As described in <ref> [7] </ref>, the Tenet protocols utilize a fully-distributed technique for connection establishment and admission control. The modifications to support resource sharing maintain this fully-distributed property. <p> At best, the network knows about some other advance reserved channels 4 overlap with that of the current request; the routing system should use this information to make the routing decisions. This is the mechanism that we proposed for the Tenet Suite 2 implementation <ref> [7] </ref>. On the other hand, advance reservations make rerouting channels much easier. If a channel fails admission tests at a particular server, the network can "reroute" that channel, or other advance-reserved channels holding reservations at that server, around that server before data is transmitted on that channel. <p> This localization can be very useful: * It reduces the establishment latency, as the admission tests for all servers in this subnetwork are made at a single node, without requiring multiple inter-node messages. The results in <ref> [7, 59] </ref> show that inter-node messages dominate connection set-up la tency. * Fault-handling becomes more difficult in advance reservation systems; a key concern is that the advance reservation information be saved in stable storage. <p> These results are similar to the connection establishment latency for Tenet Suite 1 without advance reservations, where the establishment time was about 80 to 90 ms for unicast channels with six hops 4 <ref> [7] </ref>. These measurements were made on our un-optimized initial prototype; the excessive communication overhead (50-60ms) is due to the manner in which we implemented inter-RCAP communication in this prototype, which is done via reliable TCP messages.
Reference: [8] <author> Riccardo Bettati and Amit Gupta. </author> <title> Dynamic resource migration for multi-party real-time communication. </title> <type> Technical Report TR-95-060, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> October </month> <year> 1995. </year> <month> 109 </month>
Reference-contexts: options: (a) the server can request an increase in resource allocation; (b) the routing system can route channels away from that server; (c) the network can re-route some of the existing channels away from that server; (d) the network can dynamically migrate resources using techniques similar to those described in <ref> [8] </ref>; or (e) with media-scaling, request the channels passing through that server to reduce their data rates. It will be interesting and useful to study the interaction of these diverse mechanisms and to investigate the policies for selecting among these options. 108
Reference: [9] <author> Robert Braden, David Clark, and Scott Shenker. </author> <title> Integrated services in the internet architecture: an overview. Request for Comments (Informational) RFC 1633, </title> <institution> Internet Engineering Task Force, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance. <p> The overall framework for this research is the Integrated Services (int-serv) Working Group of the Internet Engineering Task Force (IETF) <ref> [9] </ref>. The int-serv group's goal is 100 to provide support for guaranteed as well as "predictive" and other services in a consistent, integrated manner in an inter-network. A key component of this approach is the use of CBQ to logically support multiple virtual subnetworks with different sets of requirements [121].
Reference: [10] <author> Robert Braden and Lixia Zhang. </author> <booktitle> Minutes of the RSVP Working Group. In IETF meeting, </booktitle> <address> Danvers, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP <ref> [130, 82, 81, 36, 10] </ref> and ST2 [114, 97, 106, 34, 35, 33, 66, 65]. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> The protection provided by the resource partitioning mechanisms helps protect the conference channels, which, due to resource sharing, are more efficient in using network resources. 56 There is at least one other interesting scenario. In some applications (e.g., distributed simulations <ref> [10] </ref>), channels belonging to different sessions can share resource allocations. <p> This advance reservation proposal has not been accepted by the RSVP Working Group at the IETF. 3 Downgraded to "for further study" in the RSVP Working Group meeting <ref> [10] </ref> 4 Different filtering styles are incompatible; hence, RESV messages with different filtering styles are not merged together. 102 6.2.2 Class Based Queueing (CBQ) Sally Floyd and Van Jacobson have devised Class-Based-Queueing (CBQ) as a "link-sharing" scheme [50, 121, 51].
Reference: [11] <author> CCITT proposed recommendation i.311, </author> <month> June </month> <year> 1991. </year>
Reference-contexts: It is not yet clear if these mechanisms will suffice, or if these mechanisms will provide cheaper service than that with performance guarantees, or if these adaptive mechanisms will be stable. Although Asynchronous Transfer Mode (ATM) <ref> [11, 15] </ref> is expected to be the dominant technology in the near future for supporting real-time applications, the ATM standards 103 are currently under development; the current standards do not support multi-party applications and consequently the resource sharing and advance reservation issues have not arisen yet.
Reference: [12] <author> Navin Chaddha, Mohan Vishwanath, and Philip A. Chou. </author> <title> Hierarchical vector quantization of perceptually weighted block transforms. </title> <booktitle> In Proceedings of the Data Compression Conference, </booktitle> <address> Snowbird, UT, </address> <year> 1995. </year>
Reference-contexts: Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. [87] ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes <ref> [80, 101, 54, 12, 119] </ref> and putting each layer in a separate sharing group. Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users.
Reference: [13] <author> Jolly Chen, Ray Larson, and Michael Stonebraker. </author> <title> The Sequoia 2000 object browser. </title> <type> Technical Report S2K-91-04, </type> <institution> Sequoia 2000 project, University of California at Berke-ley, </institution> <year> 1991. </year>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74].
Reference: [14] <author> H. Chernoff. </author> <title> A measure of asymptotic efficiency for tests of a hypothesis based on the sum of observations. </title> <journal> Annals of Math. Stat., </journal> <volume> 23 </volume> <pages> 493-509, </pages> <year> 1952. </year>
Reference-contexts: If a conference has m channels and the sharing threshold t, the following relation holds: log ( 1 2 (1 2tlg where p is the probability that the allocation gain is at least g. We use the Chernoff bound on a sum of independent Bernoulli trials (first described in <ref> [14] </ref>) to obtain lower bounds on resource allocation gains that result from resource sharing.
Reference: [15] <author> Israel Cidon, Jeff Derby, Inder Gopal, and Bharath Kadaba. </author> <title> A critique of ATM from a data communication perspective. </title> <journal> Journal of High Speed Networking, </journal> <volume> 1(2), </volume> <month> March </month> <year> 1993. </year>
Reference-contexts: It is not yet clear if these mechanisms will suffice, or if these mechanisms will provide cheaper service than that with performance guarantees, or if these adaptive mechanisms will be stable. Although Asynchronous Transfer Mode (ATM) <ref> [11, 15] </ref> is expected to be the dominant technology in the near future for supporting real-time applications, the ATM standards 103 are currently under development; the current standards do not support multi-party applications and consequently the resource sharing and advance reservation issues have not arisen yet.
Reference: [16] <author> David Clark. </author> <title> The design philosophy of the DARPA internet protocols. </title> <booktitle> In Proceedings of ACM SIGCOMM'88, </booktitle> <pages> pages 106-114, </pages> <address> Stanford, CA, </address> <month> August </month> <year> 1988. </year>
Reference-contexts: The routing system is free to change these routes at any time; for each flow, RSVP periodically queries 1 the flows in RSVP are somewhat similar to the streams of ST2 and the channels of the Tenet protocols. 2 Soft-state was first described in <ref> [16] </ref>; RSVP was the first protocol to use soft state. 101 the routing system to dynamically adapts to these route changes. RSVP also depends on the IP multicasting to correctly forward all packets; it merely sets up the reservations that provide better service to these packets. <p> This avoidance becomes especially useful as RSVP does not have to worry about handling failures that may make this Group object unavailable; all information is available at the receivers and this design is thus in keeping with the fate-sharing principle <ref> [16] </ref>. On the other hand, this avoidance has associated costs. It is quite possible that different receivers may specify different reservation levels for the same set of senders.
Reference: [17] <author> David Clark. </author> <title> Policy routing in Internet protocols, </title> <month> May </month> <year> 1989. </year> <type> RFC 1102, </type> <institution> SRI Network Information Center. </institution>
Reference-contexts: requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [18] <author> David Clark, Scott Shenker, and Lixia Zhang. </author> <title> Supporting real-time applications in an integrated services packet network: Architecture and mechanism. </title> <booktitle> In Proceedings of ACM SIGCOMM'92, </booktitle> <pages> pages 14-26, </pages> <address> Baltimore, Maryland, </address> <month> August </month> <year> 1992. </year>
Reference-contexts: Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications [110, 13, 71, 84, 109, 48]. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [18, 40, 49, 84, 74] </ref>. Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees [4, 114, 106, 97, 31, 43]. <p> A number of protocols and schemes have been proposed to provide real-time communication services <ref> [18, 49] </ref>. These schemes are usually connection-oriented, in that they allocate network resources (e.g., bandwidth, buffers and so on) along the path data packets will travel. <p> One technique to improve utilization (and hence the connection acceptance rate) is to measure the actual traffic parameters of individual connections and to modify the amounts of resources allocated to the connection dynamically [94]. Another technique uses performance measurements over aggregations of connections to predict future performance <ref> [18] </ref>. The first approach still over-estimates aggregate resource requirements, since it fails to capture some important relationships between connections (e.g., in a conference, usually only one speaker is active at a time). <p> To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance. <p> to grant and which to deny, thereby maintaining the network load at an appropriate level [69]; and 5. packet scheduling, which refers to the algorithm for selecting the next packet that is serviced at a particular node, and when that packet may be served; two such scheduling disciplines are FIFO+ <ref> [18] </ref> and WFQ [88]. The overall framework for this research is the Integrated Services (int-serv) Working Group of the Internet Engineering Task Force (IETF) [9]. <p> Also, we are not aware of any implementation or any further research on these filters. Some researchers believe that guarantees are too expensive to provide and that most people will be willing to tolerate occasional degradation in the QoS provided if that results in a significantly cheaper network service <ref> [18, 105, 95] </ref>; they have consequently devised other techniques and mechanisms to support these applications without providing performance guarantees [70, 69].
Reference: [19] <author> Rene L. Cruz. </author> <title> A calculus for network delay, part I : Network elements in isolation. </title> <journal> IEEE Transaction of Information Theory, </journal> <volume> 37(1) </volume> <pages> 114-121, </pages> <year> 1991. </year>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [20] <author> Ying dar Lin, Tzu chieh Tsai, San chiao Huang, and Mario Gerla. HAP: </author> <title> a new model for packet arrivals. </title> <booktitle> In Proceedings of SIGCOMM 93, </booktitle> <address> San Francisco, CA, </address> <month> September </month> <year> 1993. </year>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [21] <author> S. Deering, D. Estrin, D. Farinacci, B. Fenner, V. Jacobson, and A. Helmy. </author> <title> Interoperability architecture and mechanisms for PIM-SM. </title> <type> Internet Draft, </type> <month> June </month> <year> 1995. </year>
Reference-contexts: characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) <ref> [21, 24, 25, 23, 22] </ref> and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP
Reference: [22] <author> S. Deering, D. Estrin, D. Farinacci, and V. Jacobson. </author> <title> Protocol independent multicast (PIM), dense mode protocol : Specification. </title> <type> Internet Draft, </type> <month> March </month> <year> 1994. </year>
Reference-contexts: characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) <ref> [21, 24, 25, 23, 22] </ref> and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP
Reference: [23] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, and L. Wei. </author> <title> Protocol independent multicast (PIM), sparse mode protocol : Specification. </title> <type> Internet Draft, </type> <month> March </month> <year> 1994. </year> <month> 110 </month>
Reference-contexts: characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) <ref> [21, 24, 25, 23, 22] </ref> and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP
Reference: [24] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, L. Wei, P. Sharma, and A. Helmy. </author> <title> Protocol independent multicast (PIM) : Motivation and architecture. </title> <type> Internet Draft, </type> <month> May </month> <year> 1995. </year>
Reference-contexts: characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) <ref> [21, 24, 25, 23, 22] </ref> and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP
Reference: [25] <author> S. Deering, D. Estrin, D. Farinacci, V. Jacobson, C. Liu, L. Wei, P. Sharma, and A. Helmy. </author> <title> Protocol independent multicast (PIM): Specification. </title> <note> Working Draft, </note> <month> June </month> <year> 1995. </year>
Reference-contexts: characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) <ref> [21, 24, 25, 23, 22] </ref> and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP
Reference: [26] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, and Van Jacobson. </author> <title> An architecture for wide-area multicast routing. </title> <booktitle> In Proceedings of SIGCOMM '94, </booktitle> <address> University College London, London, U.K., </address> <month> September </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [27] <author> Stephen E. Deering. </author> <title> Multicast Routing in a Datagram Internetwork. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: network to create a Multicast Group 4 (M G1), and to add each participant to the Multicast Group. * Request the network to create one channel from each participant to M G1; all channels are 1.5 Mbps. 4 This multicast group is the real-time analog of the IP HostGroup abstraction <ref> [27, 28] </ref>, in that, in such a group, we also associate real-time performance requirements with the destinations interested in listening to a "session".
Reference: [28] <author> Steve Deering. </author> <title> Host Extensions for IP Multicasting. Arpanet Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> August </month> <year> 1989. </year> <month> RFC-1112. </month>
Reference-contexts: network to create a Multicast Group 4 (M G1), and to add each participant to the Multicast Group. * Request the network to create one channel from each participant to M G1; all channels are 1.5 Mbps. 4 This multicast group is the real-time analog of the IP HostGroup abstraction <ref> [27, 28] </ref>, in that, in such a group, we also associate real-time performance requirements with the destinations interested in listening to a "session".
Reference: [29] <author> Steve Deering. </author> <title> Internet multicast routing: </title> <booktitle> State of the art and open research issues, </booktitle> <month> October </month> <year> 1993. </year> <title> MICE Seminar. </title>
Reference-contexts: If they want higher resolution, they can then attempt to join the optional Target set. In this way, receivers along the low-bandwidth 9 paths will get the base layer, while the receivers along the high-bandwidth paths will get the full video stream <ref> [80, 115, 29] </ref>. Resource sharing: Traditional real-time network systems (e.g., [44]) treat traffic on different connections independently when determining their resource requirements; for multi-party real-time communication, this results in inefficient over-allocation of resources [62]. For example, consider an audio conference of one hundred persons.
Reference: [30] <author> Mikael Degermark, Torsten Kohler, Stephen Pink, and Olov Schelen. </author> <title> Advance reservations for predictive service. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Similarly, Class-Based-Queueing (CBQ) may be viewed as being somewhat similar to resource partitioning. Advance reservation mechanisms have been proposed for ST2 [102, 37] as well as for RSVP <ref> [30] </ref>. However, the overall framework and design goals significantly impact the design choices; also, it is important to see how these mechanisms work together to provide a useful and efficient service to the multi-party applications. Due to these reasons, we have organized this chapter on a per-scheme basis. <p> Finally, merging Wildcard filters can cause some serious looping problems [6]. The current RSVP proposal handles this problem by introducing "SCOPE" objects which list the set of senders in the RESV messages; this can lead to significant scalability problems. <ref> [30] </ref> proposed an advance-reservation service for predictive service under RSVP. Since this work did not include any resource partitioning mechanisms, they ran into serious starvation problems (advance reservations starving out immediate requests).
Reference: [31] <author> L. Delgrossi and L. Berger. </author> <title> Internet stream protocol version 2 (ST2) protocol specification version ST2+. Request for Comments (Standard) RFC 1819, </title> <institution> Internet Engineering Task Force, </institution> <month> August </month> <year> 1995. </year>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one. <p> In the newer versions (modified ST2 as well as ST2+), if the senders sets the permissions appropriately, the receivers can also specify their QoS requirements, and join data streams without an explicit sender notification <ref> [31, 34, 36] </ref>. The initial ST-II protocol did not have any provision for resource sharing even though it specified Stream groups which were equivalent to the channel groups that the Tenet protocols use to specify resource sharing.
Reference: [32] <author> Luca Delgrossi, Christian Halstrick, Dietmar Hehmann, Ralf Guido Herrtwich, Oliver Krone, Jochen Sandvoss, and Carsten Vogt. </author> <title> Media scaling with HeiTS. IBM European Networking Center, </title> <address> Heidelberg, Germany, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: Recently, some researchers have argued that for efficiently supporting guaranteed performance channels, the network must handle dynamic changes in the channel traffic specification [56, 128]; several other researchers have designed mechanisms for supporting these dynamic changes <ref> [83, 32] </ref>. It will be useful and interesting to extend these mechanisms to support dynamic changes in group traffic specification. The simulation experiments used very simple, synthetic workloads; it would be 107 interesting to see the results of experiments with more realistic, complex workload models.
Reference: [33] <author> Luca Delgrossi, Christian Halstrick, Ralf Guido Herrtwich, and Heinrich Stuttgen. HeiTP: </author> <title> a transport protocol for ST-II. </title> <booktitle> In Proceedings of GLOBECOMM, </booktitle> <pages> pages 1369-1373 (40.02), </pages> <address> Orlando, Florida, </address> <month> December </month> <year> 1992. </year> <note> IEEE. </note>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [34] <author> Luca Delgrossi, Ralf Guido Herrtwich, , Frank Oliver Hoffmann, and Sibylle Schaller. </author> <title> Receiver-initiated communication with ST-II. </title> <journal> Multimedia Systems, </journal> <volume> 2(4) </volume> <pages> 141-149, </pages> <month> Oc-tober </month> <year> 1994. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> In the newer versions (modified ST2 as well as ST2+), if the senders sets the permissions appropriately, the receivers can also specify their QoS requirements, and join data streams without an explicit sender notification <ref> [31, 34, 36] </ref>. The initial ST-II protocol did not have any provision for resource sharing even though it specified Stream groups which were equivalent to the channel groups that the Tenet protocols use to specify resource sharing.
Reference: [35] <author> Luca Delgrossi, Ralf Guido Herrtwich, and Frank Oliver Hoffmann. </author> <title> An implementation of ST-II for the Heidelberg transport system. </title> <journal> Journal of Internetworking Research and Experience, </journal> <month> September </month> <year> 1993. </year> <month> 111 </month>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [36] <author> Luca Delgrossi, Ralf Guido Herrtwich, Carsten Vogt, and Lars C. Wolf. </author> <title> Reservation protocols for internetworks: A comparison of ST-II and RSVP. </title> <booktitle> In Proceedings of the Fourth International Workshop on Network and OS Support for Digital Audio and Video, </booktitle> <address> Lancaster, U.K., </address> <month> November </month> <year> 1993. </year> <note> ACM. </note>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP <ref> [130, 82, 81, 36, 10] </ref> and ST2 [114, 97, 106, 34, 35, 33, 66, 65]. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> In the newer versions (modified ST2 as well as ST2+), if the senders sets the permissions appropriately, the receivers can also specify their QoS requirements, and join data streams without an explicit sender notification <ref> [31, 34, 36] </ref>. The initial ST-II protocol did not have any provision for resource sharing even though it specified Stream groups which were equivalent to the channel groups that the Tenet protocols use to specify resource sharing.
Reference: [37] <author> Luca Delgrossi, Sibylle Schaller, Hartmut Wittig, and Lars Wolf. </author> <title> Issues of reserving resources in advance. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Analogs to resource sharing exist in the filters of Resource reSerVation Protocol (RSVP) and in the bandwidth sharing stream groups of the Stream Transport 2+ (ST2+). Similarly, Class-Based-Queueing (CBQ) may be viewed as being somewhat similar to resource partitioning. Advance reservation mechanisms have been proposed for ST2 <ref> [102, 37] </ref> as well as for RSVP [30]. However, the overall framework and design goals significantly impact the design choices; also, it is important to see how these mechanisms work together to provide a useful and efficient service to the multi-party applications. <p> The fixed size intervals can lead potentially to very high computational and state management overhead for accessing and maintaining the interval tables; we described this problem in Chapter 4. <ref> [37] </ref> provides a good description of the various issues in reserving resources in advance, in the context of ST2. However, we are not aware of any implementations (or even simulations) of advance reservation mechanisms done by the authors of that paper.
Reference: [38] <author> Alan Demers, Srinivasan Keshav, and Scott Shenker. </author> <title> Analysis and simulation of a fair queueing algorithm. </title> <journal> In Journal of Internetworking Research and Experience, </journal> <pages> pages 3-26, </pages> <month> October </month> <year> 1990. </year> <booktitle> Also in Proceedings of ACM SIGCOMM'89, </booktitle> <pages> pp 3-12. </pages>
Reference-contexts: To avoid violating the guarantees made to real-time connections, the network must either explicitly control the input rates on a per-connection basis, or adopt scheduling algorithms that will do so automatically in the nodes (e.g., Fair Queueing <ref> [38] </ref>, Weighted Fair Queueing [89, 90, 88], RCSP [125]).
Reference: [39] <author> Deborah Estrin. </author> <title> Policy requirements for inter administrative domain routing, </title> <month> Nov </month> <year> 1989. </year> <type> RFC 1125, </type> <institution> SRI Network Information Center. </institution>
Reference-contexts: Unfortunately, most routing algorithms do not enhance the overlap of related multicast trees. In fact, adaptive routing algorithms may actually push channels of the same group away from each other to "less loaded" paths <ref> [77, 67, 39, 123] </ref>. <p> requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [40] <author> Domenico Ferrari. </author> <title> Real-time communication in packet-switching wide-area networks. </title> <type> Technical Report TR-89-022, </type> <institution> International Computer Science Institute, Berkeley, Cal-ifornia, </institution> <month> May </month> <year> 1989. </year>
Reference-contexts: Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications [110, 13, 71, 84, 109, 48]. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [18, 40, 49, 84, 74] </ref>. Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees [4, 114, 106, 97, 31, 43].
Reference: [41] <author> Domenico Ferrari. </author> <title> Client requirements for real-time communication services. </title> <journal> IEEE Communications Magazine, </journal> <volume> 28(11) </volume> <pages> 65-72, </pages> <month> November </month> <year> 1990. </year>
Reference-contexts: designing the interfaces between modules to ensure this extensibility. * Speed: Although we do not need hard-real-time guarantees on RCAP requests (e.g., RCAP will establish connectivity within 50 ms), it is desirable that the connection establishment be fast; most real-time clients cannot afford long waits for their transmission to start <ref> [41] </ref>.
Reference: [42] <author> Domenico Ferrari. </author> <title> Design and applications of a delay jitter control scheme for packet-switching internetworks. </title> <booktitle> In Proceedings of the Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 72-83, </pages> <address> Heidelberg, Germany, </address> <month> November </month> <year> 1991. </year> <note> Springer-Verlag. Also in Computer Communications 15(6) 367-373, July-August 1992. </note>
Reference-contexts: To complete this general description of Scheme 1, we only have to mention the two 7 special aspects of data transfers: scheduling and distributed rate-control. Most scheduling policies can be used for real-time communication, under fairly liberal conditions <ref> [42] </ref>. For this description, we can assume the Multi-class Earliest-Due-Date (EDD) discipline in its two versions: the so-called Delay-EDD (or D-EDD) [49, 127] and Jitter EDD (or J-EDD) [42, 127]. <p> Most scheduling policies can be used for real-time communication, under fairly liberal conditions [42]. For this description, we can assume the Multi-class Earliest-Due-Date (EDD) discipline in its two versions: the so-called Delay-EDD (or D-EDD) [49, 127] and Jitter EDD (or J-EDD) <ref> [42, 127] </ref>.
Reference: [43] <author> Domenico Ferrari. </author> <title> Real-time communication in an internetwork. </title> <journal> Journal of High Speed Networks, </journal> <volume> 1(1) </volume> <pages> 79-103, </pages> <year> 1992. </year>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one.
Reference: [44] <author> Domenico Ferrari, Anindo Banerjea, and Hui Zhang. </author> <title> Network support for multimedia: a discussion of the Tenet approach. </title> <booktitle> Computer Networks and ISDN Systems, </booktitle> <pages> pages 1267-1280, </pages> <month> July </month> <year> 1994. </year>
Reference-contexts: supporting real-time applications in Integrated Services Packet Networks; we discuss some of the issues in supporting real-time communication in the next sub-section. 1.1.2 Real-time communication We now describe some of the principles that embody the Tenet view of the desirable characteristics of a solution to the problem of real-time communication <ref> [44] </ref>; in this view, continuous-media (digital audio, digital video, and so on) communication at the network and transport layers is considered to be a special case of real-time communication. <p> In this way, receivers along the low-bandwidth 9 paths will get the base layer, while the receivers along the high-bandwidth paths will get the full video stream [80, 115, 29]. Resource sharing: Traditional real-time network systems (e.g., <ref> [44] </ref>) treat traffic on different connections independently when determining their resource requirements; for multi-party real-time communication, this results in inefficient over-allocation of resources [62]. For example, consider an audio conference of one hundred persons. <p> A number of protocols and schemes have been proposed to provide real-time communication services [18, 49]. These schemes are usually connection-oriented, in that they allocate network resources (e.g., bandwidth, buffers and so on) along the path data packets will travel. Traditional real-time network systems (e.g., <ref> [44] </ref>) may over-allocate resources for two reasons: (1) they allocate resources based on a worst-case prediction of the actual traffic; and (2) they treat traffic on different connections independently when determining resource requirements. <p> In the following sections, we illustrate our approach to network resource partitioning in the framework of the Tenet real-time communication protocols <ref> [44] </ref>. As described before, these protocols are based on the real-time channel communication abstraction.
Reference: [45] <author> Domenico Ferrari and Amit Gupta. </author> <title> Resource partitioning in real-time communication. </title> <booktitle> In Proceedings of IEEE Symposium on Global Data Networking, </booktitle> <pages> pages 128-135, </pages> <address> Cairo, Egypt, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: In addition to advance reservations [47], which we will discuss in Chapter 4, other resource partitioning applications include fast establishment of real-time connections and support for mobile computing [57]. We will describe these applications in Chapter 7; the interested reader is referred to <ref> [45] </ref> for a more detailed description of these applications. 43 Many important concerns can be raised regarding resource partitioning: for instance, whether we can design efficient mechanisms for resource reservation, and whether these mechanisms can be designed for different scheduling disciplines and admission control procedures. <p> Since some of the admission tests depend on the packet scheduling discipline, the corresponding partitioned tests are also scheduler-dependent. Note that, to be accepted, a request for a new channel must pass also, besides the tests we discuss below, a buffer space test in each server <ref> [45] </ref>. <p> Note that, for EDD servers, there is also a separate bandwidth test, whose adaptation to the partitioning case is, however, trivial and will not be described here. The interested reader can find the description and the proof in <ref> [45] </ref>. 3.2.2 Resource partitioning in a FIFO server We now describe the admission control test for a FIFO server without resource partitioning. In a FIFO server, all real-time connections are assigned the same local delay bound, say d. <p> Table 4.1: An example interval table in a server Table 2 assumes that the scheduling discipline the server implements is one that requires only buffer space and processing power to be considered as resources (if a deadline-based discipline is used, we need to consider also the "schedulability" or "delay" resource <ref> [45] </ref>). In the table, buffer space is expressed as a number of packet-sized buffers, and processing power in kbits/s; times are measured in milliseconds. We have omitted several columns that contain local bounds and other channel parameters. <p> This 11 AllocationID G is for the resource sharing group. 12 This borrowing is subject to network administration and management policies, as described in <ref> [45, 58] </ref>. 96 design also promotes high flexibility and independence in decision-making, as different outgoing links on the same node may make different decisions.
Reference: [46] <author> Domenico Ferrari, Amit Gupta, Mark Moran, and Bernd Wolfinger. </author> <title> A continuous media communication service and its implementation. </title> <booktitle> In Proceedings of GLOBECOM '92, </booktitle> <address> Orlando, Florida, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages.
Reference: [47] <author> Domenico Ferrari, Amit Gupta, and Giorgio Ventre. </author> <title> Distributed advance reservation of real-time connections. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year> <month> 112 </month>
Reference-contexts: In Chapter 4, we will describe the mechanisms that we designed for the Tenet Scheme 2 to provide its users with the ability to book network resources (far) in advance of their use <ref> [47] </ref>; this advance booking requires long-lived state in the network and it thus raises some interesting questions. <p> It is interesting that in addition to providing a much-needed service to these applications, the advance reservation mechanisms also improve the network service with better planning (network dimensioning) and routing <ref> [47] </ref>. We evaluated the performance of our advance reservation mechanisms via simulations; the simulation results demonstrate the usefulness of the mechanisms that we designed. These simulations also provide useful data about the performance and some of the properties of these mechanisms. <p> They have also adapted this algorithm to maintain state information for each sharing group, both to enhance path overlap and to meet the delay restrictions specified above. 2.6.4 Resource sharing and advance reservations We have also devised techniques for providing advance reservations for multi-party real-time communication <ref> [47] </ref>. In this service, the clients can make a request for network resources in advance of their use. A client may, for example, request a connection on Mon-day for a Wednesday video-conference. <p> In addition to advance reservations <ref> [47] </ref>, which we will discuss in Chapter 4, other resource partitioning applications include fast establishment of real-time connections and support for mobile computing [57]. <p> We considered the case where the conference requests were all served by one partition, while the unicast connection requests were served by the other partition. This segregation may be a natural consequence of some aspects of multi-party communication, for instance advance reservation requirements <ref> [47] </ref>. <p> It is interesting that in addition to providing a much-needed service to these applications, the advance reservation mechanisms also improved the network service with better planning (network dimensioning) and routing <ref> [47] </ref>. We evaluated the performance of our advance reservation mechanisms via simulations; the simulation results demonstrated the usefulness of the mechanisms that we 1 These losses are defined and described in Chapter 3. 106 designed.
Reference: [48] <author> Domenico Ferrari, Joe Pasquale, and George Polyzos. </author> <title> Network issues for Sequoia 2000. </title> <booktitle> In Proceedings of COMPCOM 92, </booktitle> <pages> pages 401-406, </pages> <address> San Francisco, CA, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74].
Reference: [49] <author> Domenico Ferrari and Dinesh Verma. </author> <title> A scheme for real-time channel establishment in wide-area networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 368-379, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications [110, 13, 71, 84, 109, 48]. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [18, 40, 49, 84, 74] </ref>. Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees [4, 114, 106, 97, 31, 43]. <p> Most scheduling policies can be used for real-time communication, under fairly liberal conditions [42]. For this description, we can assume the Multi-class Earliest-Due-Date (EDD) discipline in its two versions: the so-called Delay-EDD (or D-EDD) <ref> [49, 127] </ref> and Jitter EDD (or J-EDD) [42, 127]. <p> In this chapter, we provide, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) <ref> [49] </ref>, First-In-First-Out (FIFO) [125], Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation 4 ; the simulations show that our techniques are useful and efficient, and the mechanisms work well. <p> A number of protocols and schemes have been proposed to provide real-time communication services <ref> [18, 49] </ref>. These schemes are usually connection-oriented, in that they allocate network resources (e.g., bandwidth, buffers and so on) along the path data packets will travel. <p> In addition, we are interested in the speed and computational cost of channel establishment, for which we use a different metric: the computational overhead associated with admission control. In the simulations, we use the admission control tests for the EDD scheduling discipline <ref> [49] </ref>. The time required to run these tests at a given node is proportional to n, the number of already accepted resource allocations at that node. The overall establishment overhead is computed as the sum of these n (already accepted allocations) at each node along the route of the channel. <p> With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>. <p> 2 we can assign a delay bound d new , inserting the new channel into the list without any violations of the local delay bounds if, after adding this new connection, d i l=1 where the index i goes over all real-time channels in the server, including the new one. <ref> [49] </ref>. The test ensures that, when a packet arrives over a channel k, the maximum amount of time it could possibly wait (before being transmitted) is bounded above by the delay bound d k . <p> In the simulations, we use the admission control tests for the EDD scheduling discipline <ref> [49] </ref>. The time required to run these tests at a given node is proportional to n, the number of already accepted resource allocations at that server when a new request arrives. <p> In this chapter, we provided, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) <ref> [49] </ref>, First-In-First-Out (FIFO) [125], Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation; the simulations show that our techniques are useful and efficient, and the mechanisms work well.
Reference: [50] <author> Sally Floyd. </author> <title> Issues in flexible resource management for datagram networks. </title> <booktitle> In Proceedings of the 3rd Workshop on Very High Speed Networks, </booktitle> <address> Maryland, </address> <month> March </month> <year> 1992. </year>
Reference-contexts: IETF. 3 Downgraded to "for further study" in the RSVP Working Group meeting [10] 4 Different filtering styles are incompatible; hence, RESV messages with different filtering styles are not merged together. 102 6.2.2 Class Based Queueing (CBQ) Sally Floyd and Van Jacobson have devised Class-Based-Queueing (CBQ) as a "link-sharing" scheme <ref> [50, 121, 51] </ref>. The key design goal for their effort was to provide a network with the ability to support a reasonable distribution of network resources between the different entities paying for the network. Connections belonging to each paying entity get classified into a separate class.
Reference: [51] <author> Sally Floyd. </author> <title> Link-sharing and resource management models for packet networks. </title> <type> Unpublished, </type> <month> September </month> <year> 1993. </year>
Reference-contexts: IETF. 3 Downgraded to "for further study" in the RSVP Working Group meeting [10] 4 Different filtering styles are incompatible; hence, RESV messages with different filtering styles are not merged together. 102 6.2.2 Class Based Queueing (CBQ) Sally Floyd and Van Jacobson have devised Class-Based-Queueing (CBQ) as a "link-sharing" scheme <ref> [50, 121, 51] </ref>. The key design goal for their effort was to provide a network with the ability to support a reasonable distribution of network resources between the different entities paying for the network. Connections belonging to each paying entity get classified into a separate class.
Reference: [52] <author> Shivi Fotedar, Mario Gerla, Paolo Crocetti, and Luigi Fratta. </author> <title> ATM virtual private networks. </title> <journal> Communications of the ACM, </journal> <pages> pages 101-109, </pages> <month> February </month> <year> 1995. </year>
Reference-contexts: Our concept of partition is similar to that of virtual path (VP) in ATM networks <ref> [104, 68, 103, 52] </ref>, in that both a VP and a partition can be regarded as a set of connections.
Reference: [53] <author> Alexander G. Fraser, Chuck R. Kalmanek, A.E. Kaplan, William T. Marshall, and R.C. Restrick. Xunet2: </author> <title> A nationwide testbed in high-speed networking. </title> <booktitle> In Proceedings of INFOCOM'92, Firenze, </booktitle> <address> Italy, </address> <month> May </month> <year> 1992. </year>
Reference-contexts: For this, the network topologies that we used in the simulations are based on two real wide-area networks the NSFNET backbone network, and XUNET <ref> [53] </ref>, a high-speed ATM network that spans across North America from Bell Labs in New Jersey to Berkeley, California. We assumed the rate of each link to be 45 Mbps and the propagation delay along each link to be 5 ms.
Reference: [54] <author> Mark W. Garrett and Martin Vetterli. </author> <title> Joint source/channel coding of statistically multiplexed real-time services on packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 1(1) </volume> <pages> 71-80, </pages> <month> February </month> <year> 1993. </year>
Reference-contexts: Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. [87] ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes <ref> [80, 101, 54, 12, 119] </ref> and putting each layer in a separate sharing group. Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users.
Reference: [55] <author> M. Ghanbari. </author> <title> Two-layer coding of video signals for VBR networks. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 7(5) </volume> <pages> 771-781, </pages> <month> June </month> <year> 1989. </year>
Reference-contexts: Also, for effectively supporting heterogeneity in link bandwidth in the network, as well as in the display equipment and other computing resources (for example, hardware support for video decoding), it is desirable that the senders use hierarchical (or layered) coding <ref> [113, 55, 107] </ref>. The senders can then send the data streams (corresponding to the different layers) on different multicast groups. For example, with two groups, the base layer can be sent to the base Target set, and the higher layer sent to the optional Target set.
Reference: [56] <author> Matt Grossglauser, Srinivas Keshav, and D. Tse. </author> <title> The case against variable bit rate service. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: It will be interesting to analyze other scheduling disciplines to design mechanisms and/or policies to address this issue. Recently, some researchers have argued that for efficiently supporting guaranteed performance channels, the network must handle dynamic changes in the channel traffic specification <ref> [56, 128] </ref>; several other researchers have designed mechanisms for supporting these dynamic changes [83, 32]. It will be useful and interesting to extend these mechanisms to support dynamic changes in group traffic specification.
Reference: [57] <author> Amit Gupta. </author> <title> Real-time communication with mobile hosts rerouting for handoffs. CS292J Class Report, </title> <institution> University of California at Berkeley, </institution> <month> May </month> <year> 1993. </year>
Reference-contexts: In addition to advance reservations [47], which we will discuss in Chapter 4, other resource partitioning applications include fast establishment of real-time connections and support for mobile computing <ref> [57] </ref>.
Reference: [58] <author> Amit Gupta and Domenico Ferrari. </author> <title> Resource partitioning for multi-party real-time communication. </title> <type> Technical Report TR-94-061, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> November </month> <year> 1994. </year> <note> Also in IEEE/ACM Transactions on Networking, </note> <month> October </month> <year> 1995. </year>
Reference-contexts: There is a fairly large region in which the overall channel acceptance ratio is higher than one, i.e., the acceptance rate is higher with resource partitioning than without resource partitioning. In these simulations, we observed reductions in computational overhead similar to those obtained in the first set of experiments <ref> [58] </ref>. The above-observed phenomenon (increased channel acceptance) is easily explained in the following manner. First, resource allocation requests have varying efficiencies in using resources. <p> This 11 AllocationID G is for the resource sharing group. 12 This borrowing is subject to network administration and management policies, as described in <ref> [45, 58] </ref>. 96 design also promotes high flexibility and independence in decision-making, as different outgoing links on the same node may make different decisions.
Reference: [59] <author> Amit Gupta and Domenico Ferrari. </author> <title> Admission control for advance-reserved real-time connections. </title> <booktitle> In Proceedings of IEEE HPCS 95, </booktitle> <address> Mystic, CT, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: This localization can be very useful: * It reduces the establishment latency, as the admission tests for all servers in this subnetwork are made at a single node, without requiring multiple inter-node messages. The results in <ref> [7, 59] </ref> show that inter-node messages dominate connection set-up la tency. * Fault-handling becomes more difficult in advance reservation systems; a key concern is that the advance reservation information be saved in stable storage.
Reference: [60] <author> Amit Gupta, Wendy Heffner, Mark Moran, and Clemens Szyperski. </author> <title> Multi-party real-time communication in computer networks. </title> <booktitle> In Collected abstracts of 4th International Workshop on Network and Operating Systems Support for Digital Audio and Video, </booktitle> <pages> pages 37-39, </pages> <address> Lancaster, UK, </address> <month> November </month> <year> 1993. </year> <month> 113 </month>
Reference-contexts: We ran these simulations on Galileo [72], an object-oriented real-time network simulator. Our goal was to make the experiments realistic so that the results obtained can be 28 confidently transposed to our resource sharing implementation in the Tenet Protocol Suite 2 <ref> [60] </ref>. For this, the network topologies that we used in the simulations are based on two real wide-area networks the NSFNET backbone network, and XUNET [53], a high-speed ATM network that spans across North America from Bell Labs in New Jersey to Berkeley, California. <p> The simulation experiments confirmed our intuitive feelings and expectations about the system's behavior under resource partitioning. Our goal was to make the experiments as real-life as possible, so that we could confidently predict the behavior of our implementation of resource partitioning in the Tenet Protocol Suite 2 <ref> [60] </ref>. For example, we used the NSFNET backbone network topology (shown in Figure 2.8) in our simulations. <p> Section 4.1 motivates the current research in advance reservations, while Section 4.2 discusses the service requirements for advance reservations. In Section 4.3, we describe the distributed advance reservations mechanisms we have designed for, and are implementing in, the Tenet Suite 2 <ref> [60] </ref>. The principles on which our mechanisms are based, however, are easily portable to other approaches and protocols for real-time communication. Section 4.4 describes several important system issues, including the interaction of our advance reservation mechanisms with those for resource partitioning, as well as with the routing system. <p> This version provides complete support for multi-party real-time communication protocols, including support for advance reservations. 69 Our goal was to make the experiments as realistic as possible, so that we could confidently predict the behavior of our implementation of the advance reservation service in the Tenet Suite 2 <ref> [60] </ref>. For example, we used the NSFNET backbone network topology in our simulations (see Figure 2.8). We assumed 45Mbps for each link, and we set the propagation delay along the diameter to 40 ms 6 . <p> If the network can not meet the desired service but can provide service within the acceptable range, the channel establishment succeeds. In many cases, the use of ranges avoids repeated re-negotiations between the network and the client <ref> [112, 60, 99, 100] </ref>. 5.1.3 Client interface Suite 2 RCAP is an object-oriented distributed system for supporting multi-party real-time applications. We now describe how the three components resource sharing, resource partitioning, and advance reservations affected the client interface that RCAP provides.
Reference: [61] <author> Amit Gupta, Wingwai Howe, Quyen Nguyen, and Mark Moran. </author> <title> Evaluation of resource sharing beneffits. </title> <type> Technical Report TR-94-051, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> October </month> <year> 1994. </year>
Reference-contexts: This performance evaluation also helped us in understanding how different factors (e.g., routing) impact these gains. As described in <ref> [61] </ref>, we compared the analytical results with the simulation results; the comparison showed the simulation results correspond fairly well to the analytical values.
Reference: [62] <author> Amit Gupta, Winnie Howe, Mark Moran, and Quyen Nguyen. </author> <title> Resource sharing in multi-party realtime communication. </title> <booktitle> In Proceedings of INFOCOM 95, </booktitle> <address> Boston, MA, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: Resource sharing: Traditional real-time network systems (e.g., [44]) treat traffic on different connections independently when determining their resource requirements; for multi-party real-time communication, this results in inefficient over-allocation of resources <ref> [62] </ref>. For example, consider an audio conference of one hundred persons. In a strawman proposal, the conference is set up by establishing one hundred multicast channels, one from each speaker (sender) to all listeners (destinations). It is reasonable to expect that only one person speak at any time. <p> We have devised the channels groups abstraction for the network clients to inform the service about such sharing (and other similar) relationships among different channels [63, 64]; the resource sharing channel groups allow the network clients to specify these resource sharing relationships to the network <ref> [62] </ref>. In the above example, the application would: (a) create a new channel group, and (b) ask the network to include the hundred audio channels in this channel group. <p> Heterogeneous requests: multi-party communication In the second set of experiments, we considered heterogeneous requests. Here, some requests were for simplex unicast connections; the others were for conferences, where the participants could share resources <ref> [62] </ref>. We considered the case where the conference requests were all served by one partition, while the unicast connection requests were served by the other partition. This segregation may be a natural consequence of some aspects of multi-party communication, for instance advance reservation requirements [47]. <p> The above-observed phenomenon (increased channel acceptance) is easily explained in the following manner. First, resource allocation requests have varying efficiencies in using resources. As we saw in Chapter 2, with resource sharing, the resource requirements do not increase with allocation requests for additional channels <ref> [62] </ref>; this implies that conference requests are more efficient in using resources than isolated connections. <p> also be observed that, in this workload, all conferences are of the same size, and that there exist resource sharing relationships among the conference channels (only up to 2 of the 10 channels constituting a conference may be active at any given time) so that they can share resource allocations <ref> [62, 63] </ref>. 71 In Figures 4.2-4.9, we report on the horizontal axis the fraction f of the total resources that is allocated to the immediate partition. The advance partition's allocation is 100 (0:8 f )% of the total resources. <p> Thus, moving the resource allocation boundary is necessary whenever the workload is such that the boundary falls in an area with low acceptance ratio. immediate partition, the overhead increases (due to resource sharing, the computational overhead is higher for single channels than for channels that belong to a conference <ref> [62] </ref>; the overhead increases because we accept more individual channels at the expense of conference channels).
Reference: [63] <author> Amit Gupta and Mark Moran. </author> <title> Channel groups: A unifying abstraction for specifying inter-stream relationships. </title> <type> Technical Report TR-93-015, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> March </month> <year> 1993. </year>
Reference-contexts: We have devised the channels groups abstraction for the network clients to inform the service about such sharing (and other similar) relationships among different channels <ref> [63, 64] </ref>; the resource sharing channel groups allow the network clients to specify these resource sharing relationships to the network [62]. In the above example, the application would: (a) create a new channel group, and (b) ask the network to include the hundred audio channels in this channel group. <p> In <ref> [63] </ref>, we defined the channel groups abstraction to enable clients to specify inter-channel relationships to the network. To specify a list of channels that may share resources, we define a channel group with a resource sharing relationship. <p> To specify a list of channels that may share resources, we define a channel group with a resource sharing relationship. Individual channels then join the channel group to share resources with other member channels <ref> [63] </ref>. * Resource requirements for each group. Our assumption is that at any given time the actual resources required by all group members will not exceed the resources allocated if the channels were treated independently. <p> also be observed that, in this workload, all conferences are of the same size, and that there exist resource sharing relationships among the conference channels (only up to 2 of the 10 channels constituting a conference may be active at any given time) so that they can share resource allocations <ref> [62, 63] </ref>. 71 In Figures 4.2-4.9, we report on the horizontal axis the fraction f of the total resources that is allocated to the immediate partition. The advance partition's allocation is 100 (0:8 f )% of the total resources. <p> Collecting realistic workload traces and understanding the relationships between traffic model and real data are important areas to be explored. It will be useful to characterize the user behavior when a resource request is rejected. For conference channels, establishment relationships <ref> [63] </ref> may exist among the conference channels; for example, if user A is not getting the audio channel from user B, then, at least in some scenarios, A will not be interested in seeing the video from B either.
Reference: [64] <author> Amit Gupta and Kurt Rothermel. </author> <title> Fault handling for multi-party real-time communication. </title> <type> Technical Report TR-95-059, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> October </month> <year> 1995. </year>
Reference-contexts: We have devised the channels groups abstraction for the network clients to inform the service about such sharing (and other similar) relationships among different channels <ref> [63, 64] </ref>; the resource sharing channel groups allow the network clients to specify these resource sharing relationships to the network [62]. In the above example, the application would: (a) create a new channel group, and (b) ask the network to include the hundred audio channels in this channel group. <p> link goes down, should we also reroute the advance-reserved channels that are to traverse this link in the distant future? Do we need separate mechanisms for handling advance reserved channels, or can we effectively re-use mechanisms designed for non-advance channels? These issues are addressed in Chapter 4 as well as <ref> [64] </ref>. 10 1.2.2 Network service management related issues For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively, and that the network clients be able to usefully and effectively utilize the services offered. <p> While other researchers have previously considered failure-handling for non-real-time communication as well as for uni-cast real-time communication, these failure-recovery techniques must be reexamined in the light of the changes introduced by the new protocols and services for supporting multi-party real-time communication. In <ref> [64] </ref>, we describe techniques and mechanisms for maintaining network services for multi-party real-time communication in the face of failures that may make parts of the network inaccessible. <p> This is achieved by setting 11 appropriate policies for storing state information in the network, as well as mechanisms for re-establishing connectivity for previously established connections and to set up new connections to existing conferences. <ref> [64] </ref> also describes a redundancy-based approach, using forward error correction (FEC), and dispersing the FEC'ed data among disjoint routes. <p> There exists one Channel object for each channel; in the current prototype, the Channel object is co-located with its Target set object (i.e., these two objects are located on the same RCAP daemon), though a new proposal suggests that 85 the Channel object should be located at the channel's source <ref> [64] </ref>.
Reference: [65] <author> D. Hehmann, R. G. Herrtwich, W. Schultz, T. Schutt, and R. Steinmetz. </author> <title> Implementing HeiTS: Architecture and implementation strategy of the Heidelberg high-speed transport system. </title> <booktitle> In Proc. Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 33-44, </pages> <address> Heidelberg, Germany, </address> <month> November </month> <year> 1991. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [66] <author> Ralf Guido Herrtwich and Luca Delgrossi. </author> <title> Beyond ST-II: fulfilling the requirements of multimedia communication. </title> <booktitle> In Third International Workshop on network and operating system support for digital audio and video, </booktitle> <pages> pages 23-29, </pages> <address> San Diego, California, </address> <month> November </month> <year> 1992. </year> <journal> IEEE Computer and Communications Societies. </journal>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [67] <author> Kelvin K. Y. Ho. </author> <title> Comparative analysis of virtual-circuit routing control for isdn frame-relay networks. </title> <booktitle> In IEEE Global Telecommunications Conference, number GlobeCom'90, pages 800.6.1-800.6.5, </booktitle> <address> San Diego, California, </address> <month> December </month> <year> 1990. </year>
Reference-contexts: Unfortunately, most routing algorithms do not enhance the overlap of related multicast trees. In fact, adaptive routing algorithms may actually push channels of the same group away from each other to "less loaded" paths <ref> [77, 67, 39, 123] </ref>.
Reference: [68] <author> Jay M. Hyman, Aurel A. Lazar, and Giovanni Pacifici. </author> <title> Modeling VC, VP, and VN bandwidth assignment strategies in broadband networks. </title> <booktitle> In Proceedings of the 4th International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 99-110, </pages> <address> Lancaster, U.K., </address> <month> November </month> <year> 1993. </year> <title> Lancaster University. </title> <booktitle> Lecture Notes in Computer Science 712, </booktitle> <publisher> Springer Verlag. </publisher>
Reference-contexts: Our concept of partition is similar to that of virtual path (VP) in ATM networks <ref> [104, 68, 103, 52] </ref>, in that both a VP and a partition can be regarded as a set of connections.
Reference: [69] <author> Sugih Jamin, Peter Dantzig, Scott Shenker, and Lixia Zhang. </author> <title> A measurement-based admission control algorithm for integrated services packet networks. </title> <booktitle> In Proceedings of SIGCOMM 95, </booktitle> <address> Cambridge, MA, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines which reservation requests to grant and which to deny, thereby maintaining the network load at an appropriate level <ref> [69] </ref>; and 5. packet scheduling, which refers to the algorithm for selecting the next packet that is serviced at a particular node, and when that packet may be served; two such scheduling disciplines are FIFO+ [18] and WFQ [88]. <p> that guarantees are too expensive to provide and that most people will be willing to tolerate occasional degradation in the QoS provided if that results in a significantly cheaper network service [18, 105, 95]; they have consequently devised other techniques and mechanisms to support these applications without providing performance guarantees <ref> [70, 69] </ref>. It is not yet clear if these mechanisms will suffice, or if these mechanisms will provide cheaper service than that with performance guarantees, or if these adaptive mechanisms will be stable.
Reference: [70] <author> Sugih Jamin, Scott Shenker, Lixia Zhang, and David Clark. </author> <title> An admission control algorithm for predictive real-time service. </title> <booktitle> In Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 349-356, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: that guarantees are too expensive to provide and that most people will be willing to tolerate occasional degradation in the QoS provided if that results in a significantly cheaper network service [18, 105, 95]; they have consequently devised other techniques and mechanisms to support these applications without providing performance guarantees <ref> [70, 69] </ref>. It is not yet clear if these mechanisms will suffice, or if these mechanisms will provide cheaper service than that with performance guarantees, or if these adaptive mechanisms will be stable.
Reference: [71] <author> Ahmed Karmuch, Luis Orozco-Barbosa, Nicolas D. Georganas, and Morris Goldberg. </author> <title> A multimedia medical communications system. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 8(3) </volume> <pages> 325-339, </pages> <month> April </month> <year> 1990. </year> <month> 114 </month>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74].
Reference: [72] <author> E. W. Knightly and G. Ventre. </author> <title> Galileo: a tool for simulation and analysis of real-time networks. </title> <booktitle> In Proceedings of IEEE 1993 International Conference on Network Protocols, </booktitle> <pages> pages 264-271, </pages> <address> San Francisco, CA, </address> <month> October </month> <year> 1993. </year>
Reference-contexts: In this section, we present the results of our simulations with resource sharing. We ran these simulations on Galileo <ref> [72] </ref>, an object-oriented real-time network simulator. Our goal was to make the experiments realistic so that the results obtained can be 28 confidently transposed to our resource sharing implementation in the Tenet Protocol Suite 2 [60]. <p> In this section, we describe the simulation scenario, the workload, and the results obtained with these experiments. 4.5.1 Simulator description We ran these simulations on an enhanced version of Galileo <ref> [72] </ref>, an object-oriented real-time network simulator.
Reference: [73] <author> Jim Kurose. </author> <title> On computing per-session performance bounds in high-speed multi-hop computer networks. </title> <booktitle> In ACM SigMetrics'92, </booktitle> <year> 1992. </year>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [74] <author> Jim Kurose. </author> <title> Open issues and challenges in providing quality of service guarantees in high-speed networks. </title> <journal> ACM Computer Communication Review, </journal> <volume> 23(1) </volume> <pages> 6-15, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications [110, 13, 71, 84, 109, 48]. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [18, 40, 49, 84, 74] </ref>. Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees [4, 114, 106, 97, 31, 43].
Reference: [75] <author> C.L. Liu and J.W. Layland. </author> <title> Scheduling algorithms for multiprogramming in a hard real-time environment. </title> <journal> Journal of ACM, </journal> <volume> 20(1) </volume> <pages> 46-61, </pages> <month> January </month> <year> 1973. </year>
Reference-contexts: To simplify changing from individual specifications to the group specification, all channels are given the same local delay bound during establishment, even when the scheduling discipline would allow us to give separate delay bounds per channel (such as with Earliest Due Date scheduling <ref> [75] </ref>). If a given channel requires a tighter delay bound than the bound given to group members, that channel should be established separately from the group at one or more servers.
Reference: [76] <author> Bruce Mah. </author> <title> A mechanism for administration of real-time channels. </title> <type> Master's thesis, Tech. Report UCB/CSD-93-735, </type> <institution> University of California, Berkeley, </institution> <address> CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: An interesting issue is the interaction of this globally specified relationship with the admission control decisions that are made locally at the intermediate nodes (the local decision-making is due to the distributed nature of our resource sharing technique). During channel establishment, the Real-Time Channel Administration Protocol (RCAP) <ref> [76] </ref> is responsible for admission control and resource reservation at each node. When the RCAP module at a certain node is reserving resources for a new channel, it allocates enough buffers for handling all potential delay jitter of the data packets from the 38 previous node.
Reference: [77] <author> N.F. Maxemchuck. </author> <title> Dispersity Routing in Store and Forward Networks. </title> <type> PhD dissertation, </type> <institution> University of Pennsylvania, </institution> <month> May </month> <year> 1975. </year>
Reference-contexts: Unfortunately, most routing algorithms do not enhance the overlap of related multicast trees. In fact, adaptive routing algorithms may actually push channels of the same group away from each other to "less loaded" paths <ref> [77, 67, 39, 123] </ref>.
Reference: [78] <author> Steven McCanne and Van Jacobson. </author> <title> VIC: video conference. </title> <institution> Lawrence Berkeley Laboratory and University of California, Berkeley. </institution> <note> Software on-line 2 </note> . 
Reference-contexts: Similar sharing can be expected in video channels as well, either because the senders refrain from sending video when they do not have the floor or if the video application enforces mutual exclusion, like the dynamic window switching mechanism of vic <ref> [78, 79] </ref>. Consider the link X -C; the two multicast channels (from A and from B) can share the resources on the link X-C. Without resource sharing, the network will make independent reservations for the two channels, and wastefully over-allocate resources on the link X-C by 100%.
Reference: [79] <author> Steven McCanne and Van Jacobson. </author> <title> vic: a flexible framework for packet video. </title> <booktitle> In Proceedings of ACM Multimedia '95. ACM, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: Similar sharing can be expected in video channels as well, either because the senders refrain from sending video when they do not have the floor or if the video application enforces mutual exclusion, like the dynamic window switching mechanism of vic <ref> [78, 79] </ref>. Consider the link X -C; the two multicast channels (from A and from B) can share the resources on the link X-C. Without resource sharing, the network will make independent reservations for the two channels, and wastefully over-allocate resources on the link X-C by 100%.
Reference: [80] <author> Steven McCanne and Martin Vetterli. </author> <title> Joint source/channel coding for multicast packet video. </title> <booktitle> IEEE International Conference on Image Processing, </booktitle> <month> October </month> <year> 1995. </year>
Reference-contexts: If they want higher resolution, they can then attempt to join the optional Target set. In this way, receivers along the low-bandwidth 9 paths will get the base layer, while the receivers along the high-bandwidth paths will get the full video stream <ref> [80, 115, 29] </ref>. Resource sharing: Traditional real-time network systems (e.g., [44]) treat traffic on different connections independently when determining their resource requirements; for multi-party real-time communication, this results in inefficient over-allocation of resources [62]. For example, consider an audio conference of one hundred persons. <p> Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. [87] ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes <ref> [80, 101, 54, 12, 119] </ref> and putting each layer in a separate sharing group. Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users.
Reference: [81] <author> Danny Mitzel, Deborah Estrin, Scott Shenker, and Lixia Zhang. </author> <title> An architectural comparison of ST-II and RSVP. </title> <booktitle> In Proceedings of INFOCOM 94, </booktitle> <address> Toronto, CANADA, </address> <month> June </month> <year> 1994. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP <ref> [130, 82, 81, 36, 10] </ref> and ST2 [114, 97, 106, 34, 35, 33, 66, 65]. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [82] <author> Danny Mitzel and Scott Shenker. </author> <title> Asymptotic resource consumption in multicast reservation styles. </title> <booktitle> In Proceedings of SIGCOMM 94, </booktitle> <address> London, UK, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP <ref> [130, 82, 81, 36, 10] </ref> and ST2 [114, 97, 106, 34, 35, 33, 66, 65]. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [83] <author> Rebbie Moon. </author> <title> Dynamic traffic management in Scheme 2 of the Tenet real-time protocols. </title> <type> Master's thesis, </type> <institution> University of California, Berkeley, </institution> <address> CA, </address> <month> December </month> <year> 1995. </year>
Reference-contexts: Recently, some researchers have argued that for efficiently supporting guaranteed performance channels, the network must handle dynamic changes in the channel traffic specification [56, 128]; several other researchers have designed mechanisms for supporting these dynamic changes <ref> [83, 32] </ref>. It will be useful and interesting to extend these mechanisms to support dynamic changes in group traffic specification. The simulation experiments used very simple, synthetic workloads; it would be 107 interesting to see the results of experiments with more realistic, complex workload models.
Reference: [84] <author> Mark Moran and Riccardo Gusella. </author> <title> System support for efficient dynamically-configurable multi-party interactive multimedia applications. </title> <booktitle> In Proceedings of Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 143-156, </pages> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74]. <p> Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications [110, 13, 71, 84, 109, 48]. It is widely believed that these applications should be supported in the general framework of real-time communication <ref> [18, 40, 49, 84, 74] </ref>. Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees [4, 114, 106, 97, 31, 43]. <p> Chapter 7 summarizes the dissertation by discussing our contributions and the weaknesses of our approach. We also outline current research trends as well as the directions in which this work can be extended. 14 Chapter 2 Resource sharing Many classes of applications, including distributed multimedia group communication <ref> [84] </ref> and traditional distributed processing, require or benefit from a network communication service that provides well-defined performance guarantees. A number of protocols and schemes have been proposed to provide real-time communication services [18, 49].
Reference: [85] <author> Rolf Oppliger, Amit Gupta, Mark Moran, and Riccardo Bettati. </author> <title> A security architecture for Tenet Scheme 2. </title> <type> Technical Report TR-95-051, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> August </month> <year> 1995. </year> <note> 2 ftp://ftp.ee.lbl.gov/conferencing/vic 115 </note>
Reference-contexts: Last, but perhaps most importantly, such security measures should not adversely impact the richness or the quality of service offered by the network, and the overhead (of security mechanisms and related computations) should not significantly impact the overall network performance. In <ref> [85] </ref>, we describe the security mechanisms that we designed for Tenet Scheme 2; these mechanisms were designed to work with the multi-party real-time communication techniques proposed and described in this thesis. <p> Additionally, a network-generated pseudo-random key is associated with each object for security and access control; the interested reader is referred to <ref> [85] </ref> for more information about the security scheme. When a message arrives at an RCAP daemon, the RCAP dispatcher contacts the LNS to determine if the addressed object resides on a remote node; if so, the message is forwarded to that node.
Reference: [86] <author> Antonio Ortega and Martin Vetterli. </author> <title> Multiple leaky buckets for increased statistical multiplexing of ATM video. In Proceedngs of Packet Video Workshop, </title> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [87] <author> Pramod Pancha and Magda El Zarki. </author> <title> A look at the MPEG video coding standard for variable bit rate video transmission. </title> <booktitle> Proc. IEEE INFOCOM '92, </booktitle> <month> May </month> <year> 1992. </year>
Reference-contexts: On the other hand, this avoidance has associated costs. It is quite possible that different receivers may specify different reservation levels for the same set of senders. Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. <ref> [87] </ref> ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes [80, 101, 54, 12, 119] and putting each layer in a separate sharing group.
Reference: [88] <author> Abhay Kumar J. Parekh. </author> <title> A Generalized Processor Sharing Approach to Flow Control in Integrated Services Networks. </title> <type> PhD dissertation, </type> <institution> Massachusetts Institute of Technology, </institution> <month> February </month> <year> 1992. </year>
Reference-contexts: To avoid violating the guarantees made to real-time connections, the network must either explicitly control the input rates on a per-connection basis, or adopt scheduling algorithms that will do so automatically in the nodes (e.g., Fair Queueing [38], Weighted Fair Queueing <ref> [89, 90, 88] </ref>, RCSP [125]). <p> In this chapter, we provide, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) [125], Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) <ref> [88] </ref>. We evaluated the performance of our resource partitioning mechanisms via simulation 4 ; the simulations show that our techniques are useful and efficient, and the mechanisms work well. <p> Depending on the assigned weight j and the channel traffic parameters, the server computes the performance parameters it can offer to this new channel <ref> [88] </ref>. Resource partitioning imposes a small change to this procedure. <p> which to deny, thereby maintaining the network load at an appropriate level [69]; and 5. packet scheduling, which refers to the algorithm for selecting the next packet that is serviced at a particular node, and when that packet may be served; two such scheduling disciplines are FIFO+ [18] and WFQ <ref> [88] </ref>. The overall framework for this research is the Integrated Services (int-serv) Working Group of the Internet Engineering Task Force (IETF) [9]. The int-serv group's goal is 100 to provide support for guaranteed as well as "predictive" and other services in a consistent, integrated manner in an inter-network. <p> In this chapter, we provided, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) [125], Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) <ref> [88] </ref>. We evaluated the performance of our resource partitioning mechanisms via simulation; the simulations show that our techniques are useful and efficient, and the mechanisms work well.
Reference: [89] <author> Abhay Kumar J. Parekh and Robert G. Gallager. </author> <title> A generalized processor sharing approach to flow control the single node case. </title> <booktitle> In Proceedings of the INFOCOM'92, </booktitle> <year> 1992. </year>
Reference-contexts: To avoid violating the guarantees made to real-time connections, the network must either explicitly control the input rates on a per-connection basis, or adopt scheduling algorithms that will do so automatically in the nodes (e.g., Fair Queueing [38], Weighted Fair Queueing <ref> [89, 90, 88] </ref>, RCSP [125]). <p> With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [90] <author> Abhay Kumar J. Parekh and Robert G. Gallager. </author> <title> A generalized processor sharing approach to flow control in integrated services networks: The multiple node case. </title> <booktitle> In Proceedings of the INFOCOM'93, </booktitle> <pages> pages 521-530, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year>
Reference-contexts: To avoid violating the guarantees made to real-time connections, the network must either explicitly control the input rates on a per-connection basis, or adopt scheduling algorithms that will do so automatically in the nodes (e.g., Fair Queueing [38], Weighted Fair Queueing <ref> [89, 90, 88] </ref>, RCSP [125]).
Reference: [91] <author> Colin Parris. </author> <title> Dynamic connection management for real-time networks. </title> <type> PhD dissertation, </type> <institution> University of California at Berkeley, </institution> <month> August </month> <year> 1994. </year>
Reference-contexts: Also, this interface is required to support dynamic changes in the channel traffic specification <ref> [94, 93, 92, 91] </ref>; this implies that RCAP be allowed to change the traffic specification of "live" channels 9 . In designing the new interface, a key concern was to minimize the potential error states as well as the interface complexity.
Reference: [92] <author> Colin Parris and Domenico Ferrari. </author> <title> A dynamic connection management scheme for guaranteed performance services in packet-switching integrated services networks. </title> <type> Technical Report TR-93-005, </type> <institution> International Computer Science Institute, Berkeley, Cal-ifornia, </institution> <month> January </month> <year> 1993. </year>
Reference-contexts: Also, this interface is required to support dynamic changes in the channel traffic specification <ref> [94, 93, 92, 91] </ref>; this implies that RCAP be allowed to change the traffic specification of "live" channels 9 . In designing the new interface, a key concern was to minimize the potential error states as well as the interface complexity.
Reference: [93] <author> Colin Parris, Giorgio Ventre, and Hui Zhang. </author> <title> Graceful adaptation of guaranteed performance service connections. </title> <booktitle> In Proceedings of IEEE GLOBECOM'93, </booktitle> <address> Houston, TX, </address> <month> November </month> <year> 1993. </year>
Reference-contexts: Also, this interface is required to support dynamic changes in the channel traffic specification <ref> [94, 93, 92, 91] </ref>; this implies that RCAP be allowed to change the traffic specification of "live" channels 9 . In designing the new interface, a key concern was to minimize the potential error states as well as the interface complexity.
Reference: [94] <author> Colin Parris, Hui Zhang, and Domenico Ferrari. </author> <title> Dynamic management of guaranteed performance multimedia connections, </title> <month> April </month> <year> 1993. </year> <note> To appear in ACM Journal of Multimedia Systems. </note>
Reference-contexts: One technique to improve utilization (and hence the connection acceptance rate) is to measure the actual traffic parameters of individual connections and to modify the amounts of resources allocated to the connection dynamically <ref> [94] </ref>. Another technique uses performance measurements over aggregations of connections to predict future performance [18]. The first approach still over-estimates aggregate resource requirements, since it fails to capture some important relationships between connections (e.g., in a conference, usually only one speaker is active at a time). <p> Also, this interface is required to support dynamic changes in the channel traffic specification <ref> [94, 93, 92, 91] </ref>; this implies that RCAP be allowed to change the traffic specification of "live" channels 9 . In designing the new interface, a key concern was to minimize the potential error states as well as the interface complexity.
Reference: [95] <author> Craig Partridge. </author> <title> Isochronous applications do not require jitter-controlled networks, </title> <month> September </month> <year> 1991. </year> <note> RFC 1157. </note>
Reference-contexts: Also, we are not aware of any implementation or any further research on these filters. Some researchers believe that guarantees are too expensive to provide and that most people will be willing to tolerate occasional degradation in the QoS provided if that results in a significantly cheaper network service <ref> [18, 105, 95] </ref>; they have consequently devised other techniques and mechanisms to support these applications without providing performance guarantees [70, 69].
Reference: [96] <author> Craig Partridge. </author> <title> A proposed flow specification. Request for Comments (Informational) RFC 1363, </title> <institution> Internet Engineering Task Force, </institution> <month> September </month> <year> 1992. </year>
Reference-contexts: In this approach, the system architecture is divided into five components: 1. flow specification, which describes both the characteristics of the traffic stream sent by the source, and the service requirements of the application; the proposed flow spec is described in <ref> [96] </ref>; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers
Reference: [97] <author> Craig Partridge and Stephen Pink. </author> <title> An implementation of the revised internet stream protocol (ST-2). </title> <journal> In Journal of Internetworking Research and Experience, </journal> <pages> pages 27-54, </pages> <year> 1992. </year>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one. <p> We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> While our design, simulations and implementations were done in the framework of the Tenet-style connection establishment, the principles are equally applicable to other connection setup protocols and techniques, including those followed by ST-2 <ref> [97] </ref>, RSVP [130] and OPWA [108]. This chapter is organized in the following manner. In Section 3.2 we discuss resource-partitioning-oriented admission control tests for four packet scheduling disciplines: Earliest Deadline First (EDD), First In First Out (FIFO), Rate Controlled Static Priority (RCSP), and Weighted Fair Queueing (WFQ). <p> To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance.
Reference: [98] <author> Joseph Pasquale, George Polyzos, Eric Anderson, and Vachaspati Kompella. </author> <title> The multimedia multicast channel. </title> <booktitle> In Proceedings of Third International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year> <month> 116 </month>
Reference-contexts: have not been studied for CBQ. 6.3 Other efforts Pasquale et al. have proposed a stream filter that is "... an executable module which may be placed on a port, and implements a function which takes a specific set of streams associated with that port and produces a new stream" <ref> [98] </ref>. These filters perform an application-level transformation of one or more streams. A multiplexing filter could perform a function similar to resource sharing by taking in streams from upstream nodes and multiplexing them on to a single output stream.
Reference: [99] <author> Jean Ramaekers and Giorgio Ventre. </author> <title> Client-network interaction in a real-time communication environment. </title> <booktitle> In Proceedings of GLOBECOMM '92, </booktitle> <pages> pages 1140-1144, </pages> <address> Orlando, Florida, </address> <month> December </month> <year> 1992. </year>
Reference-contexts: If the network can not meet the desired service but can provide service within the acceptable range, the channel establishment succeeds. In many cases, the use of ranges avoids repeated re-negotiations between the network and the client <ref> [112, 60, 99, 100] </ref>. 5.1.3 Client interface Suite 2 RCAP is an object-oriented distributed system for supporting multi-party real-time applications. We now describe how the three components resource sharing, resource partitioning, and advance reservations affected the client interface that RCAP provides.
Reference: [100] <author> Jean Ramaekers and Giorgio Ventre. </author> <title> Quality-of-service negotiation in a real-time communication network. </title> <type> Technical Report TR-92-023, </type> <institution> International Computer Science Institute, Berkeley, California, </institution> <month> April </month> <year> 1992. </year>
Reference-contexts: If the network can not meet the desired service but can provide service within the acceptable range, the channel establishment succeeds. In many cases, the use of ranges avoids repeated re-negotiations between the network and the client <ref> [112, 60, 99, 100] </ref>. 5.1.3 Client interface Suite 2 RCAP is an object-oriented distributed system for supporting multi-party real-time applications. We now describe how the three components resource sharing, resource partitioning, and advance reservations affected the client interface that RCAP provides.
Reference: [101] <author> Kannan Ramchandran, Antonio Ortega, K. Metin Uz, and Martin Vetterli. </author> <title> Multires-olution broadcast for digital HDTV using joint source/channel coding. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(1) </volume> <pages> 6-23, </pages> <month> January </month> <year> 1993. </year>
Reference-contexts: Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. [87] ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes <ref> [80, 101, 54, 12, 119] </ref> and putting each layer in a separate sharing group. Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users.
Reference: [102] <author> Wilko Reinhardt. </author> <title> Advance reservation of network resources for multimedia applications. </title> <booktitle> In Proceedings of ICAWA 94, </booktitle> <address> Germany, </address> <month> October </month> <year> 1994. </year>
Reference-contexts: To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance. <p> Analogs to resource sharing exist in the filters of Resource reSerVation Protocol (RSVP) and in the bandwidth sharing stream groups of the Stream Transport 2+ (ST2+). Similarly, Class-Based-Queueing (CBQ) may be viewed as being somewhat similar to resource partitioning. Advance reservation mechanisms have been proposed for ST2 <ref> [102, 37] </ref> as well as for RSVP [30]. However, the overall framework and design goals significantly impact the design choices; also, it is important to see how these mechanisms work together to provide a useful and efficient service to the multi-party applications. <p> Also, the resource sharing system is not integrated with the rest of the network; therefore, the routing system cannot attempt to maximize the resource sharing gains. 99 Several researchers have investigated providing advance reservations under ST2. <ref> [102] </ref> proposes a signaling protocol for this purpose; the mechanism is similar to our interval-table based advance reservation system, except that it relies on fixed-size intervals.
Reference: [103] <author> Ken-Ichi Sato, Satoru Ohta, and Ikuo Tokizawa. </author> <title> Broadband ATM network architecture based on virtual paths. </title> <journal> IEEE transactions on communications, </journal> <pages> pages 1212-1222, </pages> <month> August </month> <year> 1990. </year>
Reference-contexts: Our concept of partition is similar to that of virtual path (VP) in ATM networks <ref> [104, 68, 103, 52] </ref>, in that both a VP and a partition can be regarded as a set of connections.
Reference: [104] <author> J. M. Schneider, T. Preu, and P. S. Nielsen. </author> <title> Management of virtual private networks for integrated broadband communications. </title> <editor> In Deepinder P. Sidhu, editor, </editor> <booktitle> Proceedings of SIGCOMM 1993, </booktitle> <pages> pages 224-237, </pages> <address> San Francisco, California, </address> <month> September </month> <year> 1993. </year> <note> ACM. also in Computer Communication Review 23 (4), </note> <month> Oct. </month> <year> 1992. </year>
Reference-contexts: Our concept of partition is similar to that of virtual path (VP) in ATM networks <ref> [104, 68, 103, 52] </ref>, in that both a VP and a partition can be regarded as a set of connections.
Reference: [105] <author> Henning Schulzrinne. </author> <title> Dynamic configuration of conferencing applications using pattern-matching multicast. </title> <booktitle> In Proceedings of the Fifth International Workshop on Network and OS Support for Digital Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year> <note> ACM. </note>
Reference-contexts: Also, we are not aware of any implementation or any further research on these filters. Some researchers believe that guarantees are too expensive to provide and that most people will be willing to tolerate occasional degradation in the QoS provided if that results in a significantly cheaper network service <ref> [18, 105, 95] </ref>; they have consequently devised other techniques and mechanisms to support these applications without providing performance guarantees [70, 69].
Reference: [106] <editor> Karen Seo. </editor> <address> ST-II new release, </address> <month> November </month> <year> 1991. </year> <title> Connection IP (cip) mailing list. </title>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one. <p> We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively.
Reference: [107] <author> Jerome M. Shapiro. </author> <title> Embedded image coding using zerotrees of wavelet coefficients. </title> <journal> IEEE Transactions on Signal Processing, </journal> <volume> 41(12) </volume> <pages> 3445-3462, </pages> <month> December </month> <year> 1993. </year>
Reference-contexts: Also, for effectively supporting heterogeneity in link bandwidth in the network, as well as in the display equipment and other computing resources (for example, hardware support for video decoding), it is desirable that the senders use hierarchical (or layered) coding <ref> [113, 55, 107] </ref>. The senders can then send the data streams (corresponding to the different layers) on different multicast groups. For example, with two groups, the base layer can be sent to the base Target set, and the higher layer sent to the optional Target set.
Reference: [108] <author> Scott Shenker and Lee Breslau. </author> <title> Two aspects of reservation establishment. </title> <booktitle> In Proceedings of SIGCOMM 95, </booktitle> <address> Cambridge, MA, </address> <month> August </month> <year> 1995. </year>
Reference-contexts: While our design, simulations and implementations were done in the framework of the Tenet-style connection establishment, the principles are equally applicable to other connection setup protocols and techniques, including those followed by ST-2 [97], RSVP [130] and OPWA <ref> [108] </ref>. This chapter is organized in the following manner. In Section 3.2 we discuss resource-partitioning-oriented admission control tests for four packet scheduling disciplines: Earliest Deadline First (EDD), First In First Out (FIFO), Rate Controlled Static Priority (RCSP), and Weighted Fair Queueing (WFQ). <p> 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP <ref> [130, 108] </ref>; 4. admission control, which refers to the algorithm that determines which reservation requests to grant and which to deny, thereby maintaining the network load at an appropriate level [69]; and 5. packet scheduling, which refers to the algorithm for selecting the next packet that is serviced at a particular
Reference: [109] <author> Michael Stonebraker. </author> <title> An overview of the Sequoia 2000 project. </title> <booktitle> In Proceedings of COMPCOM 92, </booktitle> <address> San Francisco, CA, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74].
Reference: [110] <author> Michael Stonebraker, Jolly Chen, Nobuko Jathan, Caroline Paxson, and Jiang Wu. </author> <title> Tioga: Providing data management support for scientific visualization applications. </title> <booktitle> In Proceedings of the 19th VLDB Conference, </booktitle> <address> Dublin, Ireland, </address> <year> 1993. </year>
Reference-contexts: Of special interest are the services for supporting distributed multi-party real-time communication applications 1 such as distributed audio and video conferencing, distributed classrooms, virtual meetings and electronic town halls. Some less common, but nevertheless important, applications include real-time monitoring and control, scientific visualization and medical imaging and collaboration applications <ref> [110, 13, 71, 84, 109, 48] </ref>. It is widely believed that these applications should be supported in the general framework of real-time communication [18, 40, 49, 84, 74].
Reference: [111] <author> Fore Systems, </author> <month> June </month> <year> 1994. </year> <title> ATM Switch Specification. </title>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [112] <author> Clemens Szyperski and Giorgio Ventre. </author> <title> A characterization of multi-party interactive multimedia applications. In High Performance Network Research Report, </title> <month> January </month> <year> 1993. </year> <month> 117 </month>
Reference-contexts: If the network can not meet the desired service but can provide service within the acceptable range, the channel establishment succeeds. In many cases, the use of ranges avoids repeated re-negotiations between the network and the client <ref> [112, 60, 99, 100] </ref>. 5.1.3 Client interface Suite 2 RCAP is an object-oriented distributed system for supporting multi-party real-time applications. We now describe how the three components resource sharing, resource partitioning, and advance reservations affected the client interface that RCAP provides.
Reference: [113] <author> David Taubman and Avideh Zakhor. </author> <title> Multi-rate 3-D subband coding of video. </title> <journal> IEEE Transactions on Image Processing, </journal> <volume> 3(5) </volume> <pages> 572-588, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Also, for effectively supporting heterogeneity in link bandwidth in the network, as well as in the display equipment and other computing resources (for example, hardware support for video decoding), it is desirable that the senders use hierarchical (or layered) coding <ref> [113, 55, 107] </ref>. The senders can then send the data streams (corresponding to the different layers) on different multicast groups. For example, with two groups, the base layer can be sent to the base Target set, and the higher layer sent to the optional Target set.
Reference: [114] <author> Claudio Topolcic. </author> <title> Experimental internet stream protocol, </title> <note> version 2 (ST-II), October 1990. RFC 1190. </note>
Reference-contexts: Real-time communication requires predictable performance (e.g., the end-to-end data delivery delay be bounded); typically, the network service clients negotiate with the network service provider to obtain a desired Quality of Service (QoS), which the network service provider guarantees <ref> [4, 114, 106, 97, 31, 43] </ref>. The combined consideration of real-time and multi-party communication opens an interesting area of research that is highly relevant for emerging multimedia conferencing applications. The task of designing efficient and scalable schemes for providing the network support for these applications is a challenging one. <p> We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP [130, 82, 81, 36, 10] and ST2 <ref> [114, 97, 106, 34, 35, 33, 66, 65] </ref>. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> The experience gained in those experiments led to ST-II, the revised Stream Transport protocol. This work was done primarily by the Internet Engineering Task Force, and a comprehensive description of ST-II can be found in <ref> [114] </ref>. The ST-II standard has been substantially modified in the new release; the protocol is now dubbed ST2+[31]. We will use the name ST2 to refer to the features and the mechanisms that are common to both these protocols.
Reference: [115] <author> Thierry Turletti and Jean-Chrysostome Bolot. </author> <title> Issues with multicast video distribution in heterogeneous packet networks. </title> <booktitle> In Proceedings of the Sixth International Workshop on Packet Video, </booktitle> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: If they want higher resolution, they can then attempt to join the optional Target set. In this way, receivers along the low-bandwidth 9 paths will get the base layer, while the receivers along the high-bandwidth paths will get the full video stream <ref> [80, 115, 29] </ref>. Resource sharing: Traditional real-time network systems (e.g., [44]) treat traffic on different connections independently when determining their resource requirements; for multi-party real-time communication, this results in inefficient over-allocation of resources [62]. For example, consider an audio conference of one hundred persons.
Reference: [116] <author> Jonathan Turner. </author> <title> New directions in communications(or which way to the information age?). </title> <journal> IEEE Communication Magazine, </journal> <volume> 24(10), </volume> <month> October </month> <year> 1986. </year>
Reference-contexts: With resource sharing, the clients also need to characterize the aggregate traffic (for a group of resource sharing channels). For characterizing traffic for individual channels, many models exist, including peak rate, -, leaky-bucket, Xmin-Xavg-I-Smax, double bucket, and so on <ref> [5, 19, 20, 49, 73, 86, 89, 111, 116] </ref>.
Reference: [117] <author> Dinesh Verma. </author> <title> Guaranteed Performance Communication in High Speed Networks. </title> <type> PhD dissertation, </type> <institution> University of California at Berkeley, </institution> <month> November </month> <year> 1991. </year>
Reference-contexts: The traffic values provide an upper bound to the rate at which the send 5 ing client may put the data on the network; this traffic specification may be in terms of the Xmin-Xavg-I-Smax model <ref> [117] </ref>. The performance specification for a channel includes bounds on end-to-end delay (delay bound), the variation in the end-to-end delay (jitter bound), and the probability that end-to-end delay experienced by a packet will be within the delay bound. <p> k with a deterministic delay bound is characterized by t k , the maximum service time for any packet belonging to this channel, and by d k , the local delay bound (which is the maximum amount of time that any packet on this channel will stay in this server) <ref> [117] </ref>. In addition, the load at the server is characterized by t fl , the maximum service time for any packet (real-time or best-effort) serviced.
Reference: [118] <author> Dinesh Verma and Hui Zhang. </author> <title> Design documents for RMTP/RTIP, </title> <month> May </month> <year> 1991. </year> <type> Unpublished internal technical report. </type>
Reference-contexts: (for example, to adjoining neighbors or by caching these connections). 5.2 RMTP and RTIP RTIP is the network layer data delivery protocol in the Tenet protocols; RTIP operates at each host, switch and gateway along the channel's route, and performs rate control, jitter control, packet scheduling, and data transfer functions <ref> [118, 126, 129] </ref>. As described before, RTIP provides simplex, sequenced, unreliable, performance-guaranteed packet delivery service.
Reference: [119] <author> Mohan Vishwanath and Phil Chou. </author> <title> An efficient algorithm for hierarchical compression of video. </title> <booktitle> IEEE International Conference on Image Processing, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: Since many data streams cannot be scaled arbitrarily without serious degradation in perceived quality (e.g. [87] ), we feel that the source should specify the resource requirements (at least in terms of bandwidth). Receiver control over bandwidth requirements can be obtained by using layered coding schemes <ref> [80, 101, 54, 12, 119] </ref> and putting each layer in a separate sharing group. Also, if different receivers specify different sets of senders in their specifications, the merging can cause the system to violate the performance guarantees provided to the users.
Reference: [120] <author> D. Waitzman, C. Partridge, and S. Deering. </author> <title> Distance Vector Multicast Routing Protocol. Arpanet Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> November </month> <year> 1988. </year> <month> RFC-1075. </month>
Reference-contexts: requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [121] <author> Ian Wakeman, Atanu Ghosh, Jon Crowcroft, Sally Floyd, and Van Jacobson. </author> <title> Implementing real-time packet forwarding policies using streams. </title> <booktitle> In Proceedings of USENIX 1995 Technical Conference, </booktitle> <address> Nashville, TN, </address> <month> January </month> <year> 1995. </year>
Reference-contexts: One solution would be to support fast dynamic changes in partition allocation; we will discuss it later in this section. Another possible solution would be to permit "resource borrowing" between partitions (as in CBQ <ref> [121] </ref>); in this case, the overloaded partition would borrow resources from the underloaded one, with the promise that the resources would be returned if the second partition needed them. <p> The int-serv group's goal is 100 to provide support for guaranteed as well as "predictive" and other services in a consistent, integrated manner in an inter-network. A key component of this approach is the use of CBQ to logically support multiple virtual subnetworks with different sets of requirements <ref> [121] </ref>. <p> IETF. 3 Downgraded to "for further study" in the RSVP Working Group meeting [10] 4 Different filtering styles are incompatible; hence, RESV messages with different filtering styles are not merged together. 102 6.2.2 Class Based Queueing (CBQ) Sally Floyd and Van Jacobson have devised Class-Based-Queueing (CBQ) as a "link-sharing" scheme <ref> [50, 121, 51] </ref>. The key design goal for their effort was to provide a network with the ability to support a reasonable distribution of network resources between the different entities paying for the network. Connections belonging to each paying entity get classified into a separate class.
Reference: [122] <author> L. Wei and D. Estrin. </author> <title> The trade-offs of multicast trees and algorithms. </title> <booktitle> In Proceedings of the 1994 international conference on computer communications and networks, </booktitle> <address> San Francisco, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: requirements of the application; the proposed flow spec is described in [96]; 2. routing, which refers to the mechanisms that provide good unicast and multicast paths for data flow; the routing protocols under consideration include Protocol-Independent Multicast (PIM) [21, 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) <ref> [1, 17, 39, 26, 120, 122] </ref>; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP [130, 108]; 4. admission control, which refers to the algorithm that determines
Reference: [123] <author> Ron Widyono. </author> <title> The design and evaluation of routing algorithms for real-time channels. </title> <type> Technical Report TR-94-024, </type> <institution> International Computer Science Institute, Berkeley, Cal-ifornia, </institution> <month> June </month> <year> 1994. </year>
Reference-contexts: Unfortunately, most routing algorithms do not enhance the overlap of related multicast trees. In fact, adaptive routing algorithms may actually push channels of the same group away from each other to "less loaded" paths <ref> [77, 67, 39, 123] </ref>. <p> The Tenet group has devised a routing algorithm that uses a heuristic to find a min-cost route that is likely to satisfy the delay requirements of all destinations <ref> [123] </ref>. They have also adapted this algorithm to maintain state information for each sharing group, both to enhance path overlap and to meet the delay restrictions specified above. 2.6.4 Resource sharing and advance reservations We have also devised techniques for providing advance reservations for multi-party real-time communication [47].
Reference: [124] <author> Bernd Wolfinger and Mark Moran. </author> <title> A continuous media data transport service and protocol for real-time communication in high speed networks. </title> <booktitle> In Proceedings of the Second International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <pages> pages 171-182, </pages> <address> Heidelberg, Germany, </address> <month> November </month> <year> 1991. </year> <note> Springer-Verlag. </note>
Reference-contexts: A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages.
Reference: [125] <author> Hui Zhang and Domenico Ferrari. </author> <title> Rate-controlled static priority queueing. </title> <booktitle> In Proceedings of IEEE INFOCOM'93, </booktitle> <pages> pages 227-236, </pages> <address> San Francisco, California, </address> <month> April </month> <year> 1993. </year>
Reference-contexts: To avoid violating the guarantees made to real-time connections, the network must either explicitly control the input rates on a per-connection basis, or adopt scheduling algorithms that will do so automatically in the nodes (e.g., Fair Queueing [38], Weighted Fair Queueing [89, 90, 88], RCSP <ref> [125] </ref>). <p> In this chapter, we provide, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) <ref> [125] </ref>, Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation 4 ; the simulations show that our techniques are useful and efficient, and the mechanisms work well. <p> In this chapter, we provide, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) <ref> [125] </ref>, Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation 4 ; the simulations show that our techniques are useful and efficient, and the mechanisms work well. <p> If a given channel requires a tighter delay bound than the bound given to group members, that channel should be established separately from the group at one or more servers. For example, if the Rate-Controlled Static Priority (RCSP) scheduling algorithm <ref> [125] </ref> is used, a channel is assigned a static priority and admission control algorithms ensure that a pre-specified delay bound is met for each priority level. To implement resource sharing, we substitute the group specification for the individual channel specifications in running the admission tests and delay bound computations. <p> The test <ref> [125] </ref> ensures that, when a packet arrives, the maximum amount of time it could possibly wait (before being transmitted) is bounded above by the delay bound d associated with that server. <p> Q.E.D. 3.2.3 Resource partitioning in an RCSP server Hui Zhang and Domenico Ferrari designed the RCSP packet scheduling discipline and described the admission control tests for RCSP servers (without resource partitioning) in <ref> [125] </ref>. We first provide a brief introduction to RCSP, and then we describe admission tests for partitioned RCSP servers. A brief introduction to RCSP link; additional links can be added by replicating the scheduler portion of the server. <p> In this chapter, we provided, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) <ref> [125] </ref>, Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation; the simulations show that our techniques are useful and efficient, and the mechanisms work well. <p> In this chapter, we provided, with proofs, the admission tests with resource partitioning, for a spectrum of packet scheduling disciplines, including Earliest-Due-Date (EDD) [49], First-In-First-Out (FIFO) <ref> [125] </ref>, Rate-Controlled-Static-Priority (RCSP) [125], and Weighted-Fair-Queueing (WFQ) [88]. We evaluated the performance of our resource partitioning mechanisms via simulation; the simulations show that our techniques are useful and efficient, and the mechanisms work well.
Reference: [126] <author> Hui Zhang and Tom Fisher. </author> <title> Preliminary measurement of RMTP/RTIP. </title> <booktitle> In Proceedings of the Third International Workshop on Network and Operating System Support for Digital Audio and Video, </booktitle> <address> San Diego, CA, </address> <month> November </month> <year> 1992. </year> <note> Springer-Verlag. 118 </note>
Reference-contexts: A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages. <p> (for example, to adjoining neighbors or by caching these connections). 5.2 RMTP and RTIP RTIP is the network layer data delivery protocol in the Tenet protocols; RTIP operates at each host, switch and gateway along the channel's route, and performs rate control, jitter control, packet scheduling, and data transfer functions <ref> [118, 126, 129] </ref>. As described before, RTIP provides simplex, sequenced, unreliable, performance-guaranteed packet delivery service.
Reference: [127] <author> Hui Zhang and Srinivasan Keshav. </author> <title> Comparison of rate-based service disciplines. </title> <booktitle> In Proceedings of ACM SIGCOMM'91, </booktitle> <pages> pages 113-122, </pages> <address> Zurich, Switzerland, </address> <month> September </month> <year> 1991. </year>
Reference-contexts: Most scheduling policies can be used for real-time communication, under fairly liberal conditions [42]. For this description, we can assume the Multi-class Earliest-Due-Date (EDD) discipline in its two versions: the so-called Delay-EDD (or D-EDD) <ref> [49, 127] </ref> and Jitter EDD (or J-EDD) [42, 127]. <p> Most scheduling policies can be used for real-time communication, under fairly liberal conditions [42]. For this description, we can assume the Multi-class Earliest-Due-Date (EDD) discipline in its two versions: the so-called Delay-EDD (or D-EDD) [49, 127] and Jitter EDD (or J-EDD) <ref> [42, 127] </ref>.
Reference: [128] <author> Hui Zhang and Ed Knightly. </author> <title> A new approach to support delay sensitive VBR video in packet switched networks. </title> <booktitle> In Proceedings of Fifth International Workshop on Network and Operating Systems Support for Distributed Audio and Video, </booktitle> <address> Durham, NH, </address> <month> April </month> <year> 1995. </year>
Reference-contexts: It will be interesting to analyze other scheduling disciplines to design mechanisms and/or policies to address this issue. Recently, some researchers have argued that for efficiently supporting guaranteed performance channels, the network must handle dynamic changes in the channel traffic specification <ref> [56, 128] </ref>; several other researchers have designed mechanisms for supporting these dynamic changes [83, 32]. It will be useful and interesting to extend these mechanisms to support dynamic changes in group traffic specification.
Reference: [129] <author> Hui Zhang, Dinesh Verma, and Domenico Ferrari. </author> <title> Design and implementation of the real-time internet protocol. </title> <booktitle> In Proceedings of the IEEE Workshop on the Architecture and Implementation of High Performance Communication Subsystems, </booktitle> <address> Tucson, Arizona, </address> <month> February </month> <year> 1992. </year>
Reference-contexts: A key feature of the Tenet protocols is the separation of data delivery and control: RCAP provides signaling and RMTP/RTIP support data delivery for real-time communication <ref> [4, 3, 129, 126, 124, 46] </ref>. These protocols co-exist with the traditional Internet protocols (TCP,UDP,IP); indeed, over an internetwork, RCAP can use TCP/IP for reliable transmission of signaling messages. <p> (for example, to adjoining neighbors or by caching these connections). 5.2 RMTP and RTIP RTIP is the network layer data delivery protocol in the Tenet protocols; RTIP operates at each host, switch and gateway along the channel's route, and performs rate control, jitter control, packet scheduling, and data transfer functions <ref> [118, 126, 129] </ref>. As described before, RTIP provides simplex, sequenced, unreliable, performance-guaranteed packet delivery service.
Reference: [130] <author> Lixia Zhang, Steve Deering, Deborah Estrin, Scott Shenker, and Daniel Zappala. RSVP: </author> <title> A new resource reservation protocol. </title> <journal> IEEE Networks Magazine, </journal> <volume> 31(9) </volume> <pages> 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: We will also briefly describe the channel groups that we use to specify the resource sharing relationships, and contrast our approach with that taken recently by several other researchers, including the designers of RSVP <ref> [130, 82, 81, 36, 10] </ref> and ST2 [114, 97, 106, 34, 35, 33, 66, 65]. 41 Chapter 3 Resource partitioning For real-time communication services to achieve widespread usage, it is important that network managers be allowed to control the services effectively. <p> While our design, simulations and implementations were done in the framework of the Tenet-style connection establishment, the principles are equally applicable to other connection setup protocols and techniques, including those followed by ST-2 [97], RSVP <ref> [130] </ref> and OPWA [108]. This chapter is organized in the following manner. In Section 3.2 we discuss resource-partitioning-oriented admission control tests for four packet scheduling disciplines: Earliest Deadline First (EDD), First In First Out (FIFO), Rate Controlled Static Priority (RCSP), and Weighted Fair Queueing (WFQ). <p> To our knowledge, advance reservation services are not available within any of the existing schemes for real-time communication (see for example <ref> [2, 9, 18, 97, 102, 130] </ref>). For example, in the client-service interface of the Tenet Suite 1 [2], there is no way a client can request the establishment of a real-time channel in advance. <p> 24, 25, 23, 22] and Distance Vector Multicast Routing Protocol (DVMRP) [1, 17, 39, 26, 120, 122]; 3. resource reservation protocol, which refers to the protocol by which the resources are reserved inside the network for providing the QoS assurances; this ongoing research has led to the design of RSVP <ref> [130, 108] </ref>; 4. admission control, which refers to the algorithm that determines which reservation requests to grant and which to deny, thereby maintaining the network load at an appropriate level [69]; and 5. packet scheduling, which refers to the algorithm for selecting the next packet that is serviced at a particular <p> Instead of requiring the senders to manage the flow, RSVP has each receiver manage its part of the flow's distribution tree. This receiver-oriented design was prompted by the following seven design goals at the initial stages in the RSVP design process <ref> [130] </ref>: 1. Accommodate heterogeneous receivers. 2. Adapt to changing multicast group membership. 3. Exploit the resource needs of different applications to use network resources efficiently. 4. Allow receivers to switch channels. 5. Adapt to changes in the underlying unicast and multicast routes. 6.
References-found: 130

