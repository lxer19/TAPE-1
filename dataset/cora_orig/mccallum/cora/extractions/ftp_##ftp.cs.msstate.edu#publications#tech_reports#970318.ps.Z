URL: ftp://ftp.cs.msstate.edu/publications/tech_reports/970318.ps.Z
Refering-URL: http://www.cs.msstate.edu/PUBLICATIONS/technicalReports.html
Root-URL: 
Email: rossen@cs.msstate.edu tony@cs.msstate.edu boris@cs.msstate.edu  Email address: borisp@mc.com.  
Title: How Data Transfer Modes and Synchronization Schemes Affect the Performance of a Communication System Based
Author: Rossen Dimitrov Anthony Skjellum Boris Protopopov 
Keyword: network interface, data transfer modes, synchronization, interaction, message passing, performance, gigabit networks, Myrinet  
Note: Tutorial Section  Currently, with Mercury  
Address: MS 39762 Box 9637  Chelmsford, MA.  
Affiliation: Department of Computer Science Mississippi State University Mississippi State,  Computer Systems,  
Abstract: This paper presents a series of experiments for evaluating the influence of the interaction between Network Interfaces (NIs) and host computer systems on the performance of a messaging system based on Myrinet. Major points of interest are the data transfer between user buffers and NI local memory and the synchronization between host systems and NIs. The paper provides a taxonomy of various transfer modes and synchronization schemes, describes experiments for their performance evaluation, and analyzes the results on a specific platform as well as between different platforms. Furthermore, this paper points out the affects of the reviewed data transfer modes and synchronization schemes on the overall performance of Myrinet based message-passing systems and finally, proposes certain architectural solutions in future NICs for increasing the efficiency of their interaction with host computer systems. 
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> Basu, A., V. Buch, W. Vogels, T. von Eicken, U-Net: </author> <title> A User-Level Network Interface for Parallel and Distributed Computing, </title> <booktitle> Proceedings of the 15th ACM Symposium on Operating Systems Principles (SOSP), </booktitle> <address> Copper Mountain, Colorado, </address> <month> December 3-6, </month> <year> 1995 </year>
Reference: 2. <author> Boden, N.J., D. Cohen, R.E. Felderman, A.E. Kulawik, C.L. Seitz, J.N. Seizovic, and W.K. Su, Myrinet: </author> <title> A Gigabit-per-Second Local Area Network, </title> <journal> IEEE Micro, </journal> <volume> Vol. 15, No.1, </volume> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: Introduction Myrinet is a gigabit network <ref> [2] </ref> widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) [9], BDM/BDM Pro [6], Active Messages [3], GM [7]. <p> Introduction Myrinet is a gigabit network <ref> [2] </ref> widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) [9], BDM/BDM Pro [6], Active Messages [3], GM [7]. <p> Then, the paper presents the experimental data and analyzes the results. Finally, proposals are offered for software and hardware architectural solutions for future programmable NI adapters and communications systems based on them. LANai Adapters LANai adapters are implemented as independent microprocessor systems based on the LANai processor <ref> [2] </ref>. LANai adapters have EEPROM and up to 1 Mbyte SRAM both accessible by the LANai processor through the local bus (L-bus). LANai memory appears from the external host system bus (E-bus) as a block of asynchronous memory [2]. <p> adapters are implemented as independent microprocessor systems based on the LANai processor <ref> [2] </ref>. LANai adapters have EEPROM and up to 1 Mbyte SRAM both accessible by the LANai processor through the local bus (L-bus). LANai memory appears from the external host system bus (E-bus) as a block of asynchronous memory [2]. There are three DMA engines 5 on LANai adapters: two for handling the traffic between adapters send/receive registers and its local memory and one that can operate as an E-bus master capable of transferring data between host system memory and LANai memory. <p> In receive mode, the MCP drains the network and puts an incoming packet in the LANai memory. The host CPU is then signaled and copies data from the adapters memory to the user buffer. This mode of data transfer is referred to as zero-copy transfer <ref> [2] </ref>, although in fact, there is one copy in the LANai. The second data transfer mode uses an intermediate copy block residing in kernel space (Fig. 1.b). <p> A user library function then copies data to the user buffer. The second mode adds one extra data copy in host system memory. This extra copy is necessary because LANai DMA engine can access only contiguous pages pinned in physical memory <ref> [2] </ref>. For this reason, Myrinet device driver allocates the copy block as a kernel memory region at OS boot time. The copy block is guaranteed to occupy a memory region in permanently pinned contiguous physical pages. The third data transfer mode is depicted in Fig. 1.c. <p> Detailed description of the platforms and the network components is presented in Appendix A. Memory mapped Myrinet device drivers were used for the experiments: the Mississippi State University driver for the PCI adapters on the NT machines <ref> [2] </ref> and the Myricom driver for the SBus adapters on the Solaris machines [8]. The topology of the experimental environment is shown in Fig. 3. Sun Ultra 1 PC1Sun Ultra 2 PC2 SW 8 Fig. 3. Network topology of the experiments.
Reference: 3. <author> Culler, David, Rich Martin, Lock Liu, and Vikram Makhija. </author> <title> LANai Active Messages. </title> <note> Available from http://now.cs.berkeley.edu/AM/lam_release.html (30 July 1997). </note>
Reference-contexts: Introduction Myrinet is a gigabit network [2] widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) [9], BDM/BDM Pro [6], Active Messages <ref> [3] </ref>, GM [7].
Reference: 4. <author> Dimitrov, Rossen. </author> <title> A Windows NT Kernel-Mode Device Driver for PCI Myrinet LANai 4.x Interface Adapters. M.S. </title> <type> Project Report, </type> <institution> Mississippi State University,1997, </institution> <note> http://www.cs.msstate.edu/publications/theses_and_dissertations.html </note>
Reference-contexts: As opposed to the interrupt driven asynchronous methods for synchronization between the user process and the NI adapter, the synchronous methods can be implemented without the A new release of the Mississippi State University memory mapped Myrinet device driver for PCI LANai 4.x adapters <ref> [4] </ref> supports pinning of user memory pages on demand. 7 host operating system. In order to achieve higher flexibility and predictability of the experimental architectures, we choose to implement the synchronous approaches. Both synchronization schemes studied in this paper use polling for notification.
Reference: 5. <author> Gropp, William, Ewing Lusk, and Anthony Skjellum, </author> <title> Using MPI, </title> <publisher> MIT Press, </publisher> <year> 1994. </year>
Reference-contexts: For instance, a buffer allocated in the user address space should be passed to a kernel mode routine for translation into physical addresses and pinning in the physical memory. This operation will inevitably cause an additional overhead. In case of persistent operations <ref> [5] </ref>, user buffers might be reused, so that the overhead can be introduced in a setup stage and through amortization may not significantly affect the performance of the actual communication.
Reference: 6. <author> Henley, Gregory. J, Thomas P. McMahon, Anthony Skjellum, and Nathan E. Doss. </author> <title> Design of the BDM Family of Myrinet Control Programs. </title> <address> http://erc.msstate.edu/labs/hpcl/papers/ bdm_family_design.ps, </address> <year> 1998 </year>
Reference-contexts: Introduction Myrinet is a gigabit network [2] widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) [9], BDM/BDM Pro <ref> [6] </ref>, Active Messages [3], GM [7].
Reference: 7. <author> Myricom, GM Documentation, </author> <note> Available from http://www.myri.com/GM/doc/gm_toc.html (10 February 1998). </note>
Reference-contexts: Introduction Myrinet is a gigabit network [2] widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) [9], BDM/BDM Pro [6], Active Messages [3], GM <ref> [7] </ref>. They have certain features in common: memory mapping of Myrinet NI adapter (LANai adapter) resources into user space for bypassing host operating system, using a custom Myrinet Control Program (MCP), and to a different degree polling for synchronization, programmed I/O, and using LANai Direct Memory Access (DMA) engines.
Reference: 8. <author> Myricom, LANai 4.X Documentation, </author> <note> http://www.myri.com/myrinet/products/ documentation/mug/development/LANai4.X.doc (12 May 1996). </note>
Reference-contexts: This, in turn, may cause a slow down in the MCP progress because the access to the L-bus is arbitrated according to the following priority: E-bus, receive DMA, send DMA, LANai processor <ref> [8] </ref>. (a) (b) Fig. 2. Synchronization schemes: Synchronization flags (a) in LANai memory, (b) split in LANai and host memory. <p> A Myrinet adapter can access the host memory only through a DMA: the LANai DMA engine is the only device on the adapter equipped with an interface to the host E-bus, hence capable of accessing host memory <ref> [8] </ref>. Therefore, in order to implement the second synchronization scheme, for each flag update in host memory, the experimental MCPs, described in the next section, perform a sequence of operations for setting up the DMA transactions and checking status registers for completion. <p> Memory mapped Myrinet device drivers were used for the experiments: the Mississippi State University driver for the PCI adapters on the NT machines [2] and the Myricom driver for the SBus adapters on the Solaris machines <ref> [8] </ref>. The topology of the experimental environment is shown in Fig. 3. Sun Ultra 1 PC1Sun Ultra 2 PC2 SW 8 Fig. 3. Network topology of the experiments.
Reference: 9. <author> Pakin, Scott, Vijay Karamcheti, and Andrew Chien. </author> <title> Fast Messages: Efficient, Portable Communication for Workstation Clusters and MPPs. </title> <journal> IEEE Concurrency, </journal> <volume> Vol. 5, No. 2, </volume> <month> April - June </month> <year> 1997 </year> <month> 18 </month>
Reference-contexts: Introduction Myrinet is a gigabit network [2] widely used in clusters of workstations and embedded systems for high-performance concurrent computing. Currently, several message-passing systems based on Myrinet exist: Myricom API [2], Fast Messages (FM) <ref> [9] </ref>, BDM/BDM Pro [6], Active Messages [3], GM [7]. <p> An interesting combination of two data transfer modes (a mixed mode) might be achieved if one of the three modes is used on the send side and another one on the receive side. An experiment with such an asymmetrical architecture was conducted on the PC platforms. FM <ref> [9] </ref> uses similar approach. We used Mode1 (Fig.1.a) on the send side and Mode2 (Fig.1.b) on the receive side. Figure 8 demonstrates the measurements of the bandwidth experiments using the asymmetrical data transfer mode compared with the symmetric implementations of Mode1 and Mode2.
References-found: 9

