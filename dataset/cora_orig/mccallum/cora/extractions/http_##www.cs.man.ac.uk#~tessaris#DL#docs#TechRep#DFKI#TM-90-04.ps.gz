URL: http://www.cs.man.ac.uk/~tessaris/DL/docs/TechRep/DFKI/TM-90-04.ps.gz
Refering-URL: http://www.cs.man.ac.uk/~tessaris/DL/papers.html
Root-URL: http://www.cs.man.ac.uk
Title: Terminological Knowledge Representation: A Proposal for a Terminological Logic  
Author: Franz Baader, Hans-Jurgen Burckert, Jochen Heinsohn, Bernhard Hollunder, Jurgen Muller, Bernhard Nebel, Werner Nutt, Hans-Jurgen Profitlich 
Address: Stuhlsatzenhausweg 3, W-6600 Saarbrucken 11 Germany  
Affiliation: Deutsches Forschungszentrum fur Kunstliche Intelligenz (DFKI)  
Abstract: This paper contains a proposal for a terminological logic. The formalisms for representing knowledge as well as the needed inferences are described.
Abstract-found: 1
Intro-found: 1
Reference: [Baa91] <author> F. Baader. </author> <title> Augmenting Concept Languages by Transitive Closure of Roles: An Alternative to Terminological Cycles. </title> <note> DFKI Research Report RR-90-13, DFKI, Postfach 2080, W-6750 Kaiserslautern, Germany. To appear in Proceedings of IJCAI '91. </note>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [BH91] <author> F. Baader, P. Hanschke. </author> <title> A Schema for Integrating Concrete Domains into Concept Languages. </title> <note> DFKI Research Report RR-91-10, DFKI, Postfach 2080, W-6750 Kaiserslautern, Germany. To appear in Proceedings of IJCAI '91. </note>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [BS85] <author> R. J. Brachman, J. G. Schmolze. </author> <title> "An Overview of the kl-one knowledge representation system." </title> <journal> Cognitive Science, </journal> <volume> 9(2) </volume> <pages> 171-216, </pages> <month> April </month> <year> 1985. </year>
Reference-contexts: How can we find out, whether the procedures really do what they should do ? 3. How efficient are these procedures ? 4. How efficient may an optimal procedure for the problem be ? Terminological logics based on concept description languages like kl-one <ref> [BS85] </ref> are such formalisms that make classification, description of relations among the classes and especially their hierarchical structure possible.
Reference: [DHLMNN91] <author> F. Donini, B. Hollunder, M. Lenzerini, A. Marchetti Spaccamela, D. Nardi, W. Nutt. </author> <title> The Complexity of Existential Quantification in Concept Languages. </title> <note> DFKI Research Report RR-91-02, DFKI, Postfach 2080, </note> <institution> W-6750 Kaiserslautern Germany. </institution>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [DLNN91a] <author> F. Donini, M. Lenzerini, D. Nardi, W. Nutt. </author> <title> "The Complexity of Concept Languages." </title> <editor> In J. A. Allan, R. Fikes, E. Sandewall (editors), </editor> <booktitle> Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <address> Cambridge, Mas., </address> <year> 1991. </year>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [DLNN91b] <author> F. Donini, M. Lenzerini, D. Nardi, W. Nutt. </author> <title> "Tractable Concept Languages." </title> <note> To appear in Proceedings of IJCAI '91. </note>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [Hol90] <author> B. </author> <title> Hollunder. "Hybrid Inferences in kl-one-based Knowledge Representation Systems." </title> <booktitle> In Proceedings of the 14th German Workshop on Artificial Intelligence, </booktitle> <pages> pp. 38-47, </pages> <address> Eringerfeld, Germany, </address> <year> 1990. </year>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [HB91] <editor> B. Hollunder, F. Baader. </editor> <title> "Qualifying Number Restrictions in Concept Languages." </title> <editor> In J. A. Allan, R. Fikes, E. Sandewall (editors), </editor> <booktitle> Proceedings of the Second International Conference on Principles of Knowledge Representation and Reasoning, </booktitle> <address> Cambridge, Mas., </address> <year> 1991. </year>
Reference-contexts: Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [HN90] <author> B. Hollunder, W. Nutt. </author> <title> Subsumption Algorithms for Concept Languages. </title> <note> DFKI Research Report RR-90-04, DFKI, Postfach 2080, W-6750 Kaiser-slautern, Germany. </note>
Reference-contexts: In the following we will present a proposal for a terminological language in both abstract form and machine readable form (LISP notation). As a kernel, our language contains all the constructs provided by ALC [SS88] and some additional operators which (sometimes?) can be translated into ALCF N R <ref> [HN90] </ref>. 2 Symbols The terminological language is based on the following primitives, the symbols of the alphabet: * Concept names: CN * Role names: RN * Attribute names: AN * Individual names: IN * Object names: ON Examples with respect to our introductory example are: Person, Woman, Man, Parent are concept <p> In particular, A I 1 (d) = A I also covers the case where both values are undefined. This differs from the definitions used in <ref> [HN90] </ref> and computational linguistics in that we do not require that both attributes have to be defined on d. <p> Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
Reference: [SS88] <author> M. Schmidt-Schau, G. Smolka. </author> <title> "Attributive Concept Descriptions with Unions and Complements". </title> <journal> In Artificial Intelligence, </journal> <volume> 47, </volume> <year> 1991. </year> <month> 8 </month>
Reference-contexts: In the following we will present a proposal for a terminological language in both abstract form and machine readable form (LISP notation). As a kernel, our language contains all the constructs provided by ALC <ref> [SS88] </ref> and some additional operators which (sometimes?) can be translated into ALCF N R [HN90]. 2 Symbols The terminological language is based on the following primitives, the symbols of the alphabet: * Concept names: CN * Role names: RN * Attribute names: AN * Individual names: IN * Object names: ON <p> Retrieval. Given an concept C. Which objects occurring in the assertional axioms are instances of C ? With this formalization of our services we can develop procedures or algorithms for the services and prove their correctness, completeness, complexity, decidability; see for example <ref> [SS88, HN90, Hol90, Baa91, DLNN91a, DHLMNN91, HB91, BH91, DLNN91b] </ref>.
References-found: 10

