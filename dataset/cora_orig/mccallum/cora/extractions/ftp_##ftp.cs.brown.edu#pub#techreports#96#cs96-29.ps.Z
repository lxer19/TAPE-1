URL: ftp://ftp.cs.brown.edu/pub/techreports/96/cs96-29.ps.Z
Refering-URL: http://www.cs.brown.edu/people/rt/papers/recent-papers/recent-papers.html
Root-URL: http://www.cs.brown.edu
Abstract-found: 0
Intro-found: 1
Reference: [1] <author> J. A. Bondy and U. S. R. Murty. </author> <title> Graph Theory with Applications. </title> <publisher> North-Holland, </publisher> <address> New York, NY, </address> <year> 1976. </year>
Reference-contexts: Finally, in Section 5 we extend the main result to deal with a wider class of fi-drawings and describe some open problems. 2 2 Preliminaries. We assume familiarity with basic graph theoretic and computational geometry definitions. For more details see <ref> [1] </ref> and [26]. A graph G = (V; E) consists of a finite non empty set V (G) of vertices, and a set E (G) of unordered pairs of vertices known as edges.
Reference: [2] <author> P. Bose, G. Di Battista, W. Lenhart, and G. Liotta. </author> <title> Proximity constraints and representable trees. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 340-351. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity [3, 23, 13, 24, 10]. In <ref> [2, 3] </ref>, the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22].
Reference: [3] <author> P. Bose, W. Lenhart, and G. Liotta. </author> <title> Characterizing proximity trees. </title> <journal> Algorithmica. </journal> <note> (special issue on Graph Drawing, </note> <author> edited by G. Di Battista and R. Tamassia, </author> <note> to appear). </note>
Reference-contexts: Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity <ref> [3, 23, 13, 24, 10] </ref>. In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. <p> Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity [3, 23, 13, 24, 10]. In <ref> [2, 3] </ref>, the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. <p> All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices. As a consequence, the problem of constructing proximity drawings of graphs that have small area is considered a very challenging one by several authors (see <ref> [3, 10, 24] </ref>). Additionally, the importance of this question arises in practice, by observing that several heuristics for drawing graphs often produce proximity drawings; see, for example [11]. In this paper we present the first results on area requirements of proximity drawings.
Reference: [4] <author> R. P. Brent and H. T. Kung. </author> <title> On the area of binary tree layouts. </title> <journal> Inform. Process. Lett., </journal> <volume> 11 </volume> <pages> 521-534, </pages> <year> 1980. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [5] <author> Marek Chrobak, Michael T. Goodrich, and Roberto Tamassia. </author> <title> Convex drawings of graphs in two and three dimensions. </title> <booktitle> In Proc. 12th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 319-328, </pages> <year> 1996. </year>
Reference-contexts: Any constraint which imposes bounds on the minimum distance between vertices and (non-incident) edges in the drawing is called a resolution rule. Typical resolution rules are <ref> [5, 9] </ref>: the vertex resolution rule which requires that any two vertices have distance at least (a constant) ffi, (typically, ffi = 1); the edge resolution rule which requires that the minimum distance between any vertex and a non-incident edge is at least ffi; the angular resolution rule which states that
Reference: [6] <author> P. Crescenzi, G. Di Battista, and A. Piperno. </author> <title> A note on optimal area algorithms for upward drawings of binary trees. </title> <journal> Comput. Geom. Theory Appl., </journal> <volume> 2 </volume> <pages> 187-200, </pages> <year> 1992. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [7] <author> G. Di Battista, W. Lenhart, and G. Liotta. </author> <title> Proximity drawability: a survey. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 328-339. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: This result has been extended in [21] to all biconnected outerplanar graphs. Also, in [8] several algorithms to construct weak proximity drawings of different families of graphs are given. For a survey on proximity drawings see <ref> [7] </ref>. In this paper, we investigate the area requirement of proximity drawings. The finite resolution of display and printing devices requires that some constraints be placed on the drawing so that its dimensions cannot be arbitrarily scaled down.
Reference: [8] <author> G. Di Battista, G. Liotta, and S. H. Whitesides. </author> <title> The strength of weak proximity. </title> <editor> In F. J. Bran-denburg, editor, </editor> <booktitle> Graph Drawing (Proc. GD '95), volume 1027 of Lecture Notes in Computer Science, </booktitle> <pages> pages 178-189. </pages> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: In particular, for fi = 1, the fi-lune coincides with the Gabriel disk. Figure 1 depicts a set of fi-lunes. A different definition of proximity drawing is given in <ref> [8] </ref>. A weak proximity drawing is a straight-line drawing such that if there is an edge between a pair of vertices u, v then the proximity 1 region of u and v is empty. <p> The 3-dimensional version of the same problem has been studied in [22]. Lubiw and Sleumer [23] proved that maximal outerplanar graphs are both relative neighborhood and Gabriel drawings. This result has been extended in [21] to all biconnected outerplanar graphs. Also, in <ref> [8] </ref> several algorithms to construct weak proximity drawings of different families of graphs are given. For a survey on proximity drawings see [7]. In this paper, we investigate the area requirement of proximity drawings.
Reference: [9] <author> G. Di Battista, R. Tamassia, and I. G. Tollis. </author> <title> Area requirement and symmetry display of planar upward drawings. </title> <journal> Discrete Comput. Geom., </journal> <volume> 7 </volume> <pages> 381-401, </pages> <year> 1992. </year>
Reference-contexts: Any constraint which imposes bounds on the minimum distance between vertices and (non-incident) edges in the drawing is called a resolution rule. Typical resolution rules are <ref> [5, 9] </ref>: the vertex resolution rule which requires that any two vertices have distance at least (a constant) ffi, (typically, ffi = 1); the edge resolution rule which requires that the minimum distance between any vertex and a non-incident edge is at least ffi; the angular resolution rule which states that <p> Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices. <p> The area of a drawing can be defined in several ways depending on whether we evaluate lower or upper bounds. In this paper, we define the area of as the area of the smallest polygon covering <ref> [9] </ref>. In our proofs, we will use several geometric objects. Let IR 2 denote the euclidean plane.
Reference: [10] <author> P. Eades and S. Whitesides. </author> <title> The realization problem for Euclidean minimum spanning trees is NP-hard. </title> <journal> Algorithmica. </journal> <note> (special issue on Graph Drawing, </note> <author> edited by G. Di Battista and R. Tamassia, </author> <note> to appear). </note>
Reference-contexts: Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity <ref> [3, 23, 13, 24, 10] </ref>. In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. <p> All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices. As a consequence, the problem of constructing proximity drawings of graphs that have small area is considered a very challenging one by several authors (see <ref> [3, 10, 24] </ref>). Additionally, the importance of this question arises in practice, by observing that several heuristics for drawing graphs often produce proximity drawings; see, for example [11]. In this paper we present the first results on area requirements of proximity drawings.
Reference: [11] <author> P. D. Eades. </author> <title> Drawing free trees. </title> <journal> Bulletin of the Institute for Combinatorics and its Applications, </journal> <volume> 5 </volume> <pages> 10-36, </pages> <year> 1992. </year>
Reference-contexts: Additionally, the importance of this question arises in practice, by observing that several heuristics for drawing graphs often produce proximity drawings; see, for example <ref> [11] </ref>. In this paper we present the first results on area requirements of proximity drawings. Namely, we present a class of graphs whose proximity drawings require exponential area under several different definitions of proximity. The main contributions of the paper are listed below. 1.
Reference: [12] <author> H. Edelsbrunner, D. G. Kirkpatrick, and R. Seidel. </author> <title> On the shape of a set of points in the plane. </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> IT-29:551-559, </volume> <year> 1983. </year>
Reference-contexts: Such applications include pattern recognition and classification, geographic variation analysis, geographic information systems, computational geometry, computational morphology, and computer vision (see for example <ref> [29, 27, 12, 24, 31] </ref>). A proximity drawing is a straight-line drawing where two vertices are adjacent if and only if they are neighbors according to some definition of neighborhood.
Reference: [13] <author> H. ElGindy, G. Liotta, A. Lubiw, H. Meijer, and S. H. Whitesides. </author> <title> Recognizing rectangle of influence drawable graphs. </title> <editor> In R. Tamassia and I. G. Tollis, editors, </editor> <booktitle> Graph Drawing (Proc. GD '94), volume 894 of Lecture Notes in Computer Science, </booktitle> <pages> pages 352-363. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity <ref> [3, 23, 13, 24, 10] </ref>. In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22].
Reference: [14] <author> K. R. Gabriel and R. R. Sokal. </author> <title> A new statistical approach to geographic variation analysis. </title> <journal> Systematic Zoology, </journal> <volume> 18 </volume> <pages> 259-278, </pages> <year> 1969. </year>
Reference: [15] <author> A. Garg, M. T. Goodrich, and R. Tamassia. </author> <title> Area-optimal upward tree drawings. </title> <journal> Internat. J. Comput. Geom. Appl. </journal> <note> to appear. </note>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [16] <author> A. Garg, M. T. Goodrich, and R. Tamassia. </author> <title> Area-efficient upward tree drawings. </title> <booktitle> In Proc. 9th Annu. ACM Sympos. Comput. Geom., </booktitle> <pages> pages 359-368, </pages> <year> 1993. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [17] <author> G. Kant, G. Liotta, R. Tamassia, and I. Tollis. </author> <title> Area requirement of visibility representations of trees. </title> <booktitle> In Proc. 5th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 192-197, </pages> <address> Waterloo, Canada, </address> <year> 1993. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [18] <author> D. G. Kirkpatrick and J. D. Radke. </author> <title> A framework for computational morphology. </title> <editor> In G. T. Tou-ssaint, editor, </editor> <booktitle> Computational Geometry, </booktitle> <pages> pages 217-248. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, Nether-lands, </address> <year> 1985. </year>
Reference-contexts: Gabriel drawings and relative neighborhood drawings are just two examples of an infinite family of proximity drawings called fi-drawings that have been first introduced by Kirkpatrick and Radke <ref> [18, 27] </ref> in the computational morphology context. A fi-drawing is a straight-line drawing such that there is an edge between a pair of vertices u and v if and only if the corresponding fi-lune is empty.
Reference: [19] <author> M. R. Kramer and J. van Leeuwen. </author> <title> The complexity of wire-routing and finding minimum area layouts for arbitrary VLSI circuits. </title> <editor> In F. P. Preparata, editor, </editor> <booktitle> Advances in Computing Research, </booktitle> <volume> volume 2, </volume> <pages> pages 129-146. </pages> <publisher> JAI Press, </publisher> <address> Greenwich, Conn., </address> <year> 1985. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [20] <author> C. E. Leiserson. </author> <title> Area-efficient graph layouts (for VLSI). </title> <booktitle> In Proc. 21st Annu. IEEE Sympos. Found. Comput. Sci., </booktitle> <pages> pages 270-281, </pages> <year> 1980. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [21] <author> W. Lenhart and G. Liotta. </author> <title> Proximity drawings of outerplanar graphs. </title> <booktitle> In Graph Drawing (Proc. GD '96), Lecture Notes in Computer Science. </booktitle> <publisher> Springer-Verlag, </publisher> <year> 1996. </year>
Reference-contexts: The 3-dimensional version of the same problem has been studied in [22]. Lubiw and Sleumer [23] proved that maximal outerplanar graphs are both relative neighborhood and Gabriel drawings. This result has been extended in <ref> [21] </ref> to all biconnected outerplanar graphs. Also, in [8] several algorithms to construct weak proximity drawings of different families of graphs are given. For a survey on proximity drawings see [7]. In this paper, we investigate the area requirement of proximity drawings.
Reference: [22] <author> Giuseppe Liotta and Giuseppe Di Battista. </author> <title> Computing proximity drawings of trees in the 3-dimemsional space. </title> <booktitle> In Proc. 4th Workshop Algorithms Data Struct., volume 955 of Lecture Notes in Computer Science, </booktitle> <pages> pages 239-250. </pages> <publisher> Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in <ref> [22] </ref>. Lubiw and Sleumer [23] proved that maximal outerplanar graphs are both relative neighborhood and Gabriel drawings. This result has been extended in [21] to all biconnected outerplanar graphs. Also, in [8] several algorithms to construct weak proximity drawings of different families of graphs are given.
Reference: [23] <author> A. Lubiw and N. Sleumer. </author> <title> Maximal outerplanar graphs are relative neighborhood graphs. </title> <booktitle> In Proc. 5th Canad. Conf. Comput. Geom., </booktitle> <pages> pages 198-203, </pages> <address> Waterloo, Canada, </address> <year> 1993. </year>
Reference-contexts: Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity <ref> [3, 23, 13, 24, 10] </ref>. In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. <p> In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. Lubiw and Sleumer <ref> [23] </ref> proved that maximal outerplanar graphs are both relative neighborhood and Gabriel drawings. This result has been extended in [21] to all biconnected outerplanar graphs. Also, in [8] several algorithms to construct weak proximity drawings of different families of graphs are given. For a survey on proximity drawings see [7].
Reference: [24] <author> D. W. Matula and R. R. Sokal. </author> <title> Properties of Gabriel graphs relevant to geographic variation 11 research and clustering of points in the plane. </title> <journal> Geogr. Anal., </journal> <volume> 12 </volume> <pages> 205-222, </pages> <year> 1980. </year>
Reference-contexts: Such applications include pattern recognition and classification, geographic variation analysis, geographic information systems, computational geometry, computational morphology, and computer vision (see for example <ref> [29, 27, 12, 24, 31] </ref>). A proximity drawing is a straight-line drawing where two vertices are adjacent if and only if they are neighbors according to some definition of neighborhood. <p> Several papers have been recently published that characterize proximity drawings and show algorithms to construct proximity drawings of different classes of graphs and different definitions of proximity <ref> [3, 23, 13, 24, 10] </ref>. In [2, 3], the problem of characterizing fi-drawable trees has been addressed and an algorithm to compute Gabriel drawings and relative neighborhood drawings of trees in the plane is given. The 3-dimensional version of the same problem has been studied in [22]. <p> All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices. As a consequence, the problem of constructing proximity drawings of graphs that have small area is considered a very challenging one by several authors (see <ref> [3, 10, 24] </ref>). Additionally, the importance of this question arises in practice, by observing that several heuristics for drawing graphs often produce proximity drawings; see, for example [11]. In this paper we present the first results on area requirements of proximity drawings. <p> Property 1 A Gabriel drawing of a planar triangular graph is such that all internal faces have acute angles. Proof: By contradiction. Suppose a triangle (abc) is such that 6 abc 2 then b 2 D [a; c]: 2 Property 2 <ref> [24] </ref> In a Gabriel drawing every 3-cycle and every chordless 4-cycle is an internal face. Proof: By contradiction. Suppose a vertex v is drawn inside a 4-cycle C 4 = abcd. <p> Also, G n is triconnected. The following two results are shown in <ref> [24] </ref> (see Figure 4 for a drawing of G 2 ): Lemma 1 [24] G n is Gabriel drawable. Lemma 2 [24] G n is a maximal Gabriel graph. Lemma 3 In a Gabriel drawing of G n the external face is a 5-cycle. <p> Also, G n is triconnected. The following two results are shown in <ref> [24] </ref> (see Figure 4 for a drawing of G 2 ): Lemma 1 [24] G n is Gabriel drawable. Lemma 2 [24] G n is a maximal Gabriel graph. Lemma 3 In a Gabriel drawing of G n the external face is a 5-cycle. <p> Also, G n is triconnected. The following two results are shown in <ref> [24] </ref> (see Figure 4 for a drawing of G 2 ): Lemma 1 [24] G n is Gabriel drawable. Lemma 2 [24] G n is a maximal Gabriel graph. Lemma 3 In a Gabriel drawing of G n the external face is a 5-cycle. Sketch of Proof: As G n is triconnected, its planar embedding is fixed for any given choice of the external face.
Reference: [25] <author> C. Monma and S. Suri. </author> <title> Transitions in geometric minimum spanning trees. </title> <journal> Discrete Comput. Geom., </journal> <volume> 8 </volume> <pages> 265-293, </pages> <year> 1992. </year>
Reference-contexts: For example, we find interesting to investigate the area of relative neighborhood drawings, and minimum spanning trees. For what concerns minimum spanning trees, note that Monma and Suri <ref> [25] </ref> conjectured an exponential lower bound on the area requirement. (2) Motivated by our exponential lower bounds, it is interesting to investigate classes of graphs that admit a (weak) Gabriel drawing with polynomial area.
Reference: [26] <author> F. P. Preparata and M. I. Shamos. </author> <title> Computational Geometry: An Introduction. </title> <publisher> Springer-Verlag, </publisher> <address> New York, NY, </address> <year> 1985. </year>
Reference-contexts: Finally, in Section 5 we extend the main result to deal with a wider class of fi-drawings and describe some open problems. 2 2 Preliminaries. We assume familiarity with basic graph theoretic and computational geometry definitions. For more details see [1] and <ref> [26] </ref>. A graph G = (V; E) consists of a finite non empty set V (G) of vertices, and a set E (G) of unordered pairs of vertices known as edges.
Reference: [27] <author> J. D. Radke. </author> <title> On the shape of a set of points. </title> <editor> In G. T. Toussaint, editor, </editor> <booktitle> Computational Morphology, </booktitle> <pages> pages 105-136. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, Netherlands, </address> <year> 1988. </year>
Reference-contexts: Such applications include pattern recognition and classification, geographic variation analysis, geographic information systems, computational geometry, computational morphology, and computer vision (see for example <ref> [29, 27, 12, 24, 31] </ref>). A proximity drawing is a straight-line drawing where two vertices are adjacent if and only if they are neighbors according to some definition of neighborhood. <p> Gabriel drawings and relative neighborhood drawings are just two examples of an infinite family of proximity drawings called fi-drawings that have been first introduced by Kirkpatrick and Radke <ref> [18, 27] </ref> in the computational morphology context. A fi-drawing is a straight-line drawing such that there is an edge between a pair of vertices u and v if and only if the corresponding fi-lune is empty.
Reference: [28] <author> C. D. Thompson. </author> <title> Area-time complexity for VLSI. </title> <booktitle> In Proc. 11th Annu. ACM Sympos. Theory Comput., </booktitle> <pages> pages 81-88, </pages> <year> 1979. </year>
Reference-contexts: Once the resolution rule is given, the problem of evaluating the area of a drawing naturally arises <ref> [4, 9, 16, 17, 15, 6, 19, 20, 28] </ref>. In fact, any resolution rule implies a finite minimum area for a drawing of a graph. All known algorithms that compute (weak) proximity drawings produce representations whose area increases exponentially with the number of vertices.
Reference: [29] <author> G. T. Toussaint. </author> <title> Pattern recognition and geometrical complexity. </title> <booktitle> In Proc. 5th IEEE Internat. Conf. Pattern Recogn., </booktitle> <pages> pages 1324-1347, </pages> <year> 1980. </year>
Reference-contexts: Such applications include pattern recognition and classification, geographic variation analysis, geographic information systems, computational geometry, computational morphology, and computer vision (see for example <ref> [29, 27, 12, 24, 31] </ref>). A proximity drawing is a straight-line drawing where two vertices are adjacent if and only if they are neighbors according to some definition of neighborhood.
Reference: [30] <author> G. T. Toussaint. </author> <title> The relative neighbourhood graph of a finite planar set. </title> <journal> Pattern Recogn., </journal> <volume> 12 </volume> <pages> 261-268, </pages> <year> 1980. </year>
Reference: [31] <author> G. T. Toussaint. </author> <title> A graph-theoretical primal sketch. </title> <editor> In G. T. Toussaint, editor, </editor> <booktitle> Computational Morphology, </booktitle> <pages> pages 229-260. </pages> <publisher> North-Holland, </publisher> <address> Amsterdam, Netherlands, </address> <year> 1988. </year>
Reference-contexts: Such applications include pattern recognition and classification, geographic variation analysis, geographic information systems, computational geometry, computational morphology, and computer vision (see for example <ref> [29, 27, 12, 24, 31] </ref>). A proximity drawing is a straight-line drawing where two vertices are adjacent if and only if they are neighbors according to some definition of neighborhood.
Reference: [32] <author> R. B. Urquhart. </author> <title> Graph theoretical clustering based on limited neighbourhood sets. </title> <journal> Pattern Recogn., </journal> <volume> 15 </volume> <pages> 173-187, </pages> <year> 1982. </year> <month> 12 </month>
References-found: 32

