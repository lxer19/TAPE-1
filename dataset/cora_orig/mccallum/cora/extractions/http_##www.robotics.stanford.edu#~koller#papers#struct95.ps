URL: http://www.robotics.stanford.edu/~koller/papers/struct95.ps
Refering-URL: http://www.robotics.stanford.edu/~koller/papers/struct95.html
Root-URL: http://www.robotics.stanford.edu
Email: jf@research.att.com  daphne@cs.berkeley.edu  shor@research.att.com  
Title: A Game-Theoretic Classification of Interactive Complexity Classes (Extended Abstract) effect of varying the system's game-theoretic
Author: Joan Feigenbaum Daphne Koller Peter Shor 
Note: What is the  Symposium on Theory of Computing, 1994, pp. 734-740].  
Address: 2C-473 600 Mountain Avenue Murray Hill, NJ 07974-0636  Berkeley, CA 94720  2D-149 600 Mountain Avenue Murray Hill, NJ 07974-0636  
Affiliation: AT&T Bell Labs,  UC Berkeley Computer Science Division  AT&T Bell Labs,  
Abstract: In this paper, we investigate the connection between game theory and interactive computation. We formalize the notion of a polynomially definable game system for the language L, which, informally, consists of two arbitrarily powerful players P 1 and P 2 and a polynomial-time referee V with a common input w. Player P 1 claims that w 2 L, and player P 2 claims that w 62 L; the referee's job is to decide which of these two claims is true. In general, we wish to study the following question: There are many possible game-theoretic properties that we could investigate in this context. The focus of this paper is the question of what happens when one or both of the players P 1 and P 2 have imperfect information or imperfect recall. We use polynomially definable game systems to derive new characterizations of the complexity classes NEXP and coNEXP. We also derive partial results about other exponential complexity classes and isolate some intriguing open questions about the effects of imperfect information and imperfect recall. These results make use of recent work on complexity-theoretic aspects of games, e.g., [Koller et al., Proc. of 26th ACM Symposium on Theory of Computing, 1994, pp. 750-759] and [Lipton et al., Proc. of 26th ACM 
Abstract-found: 1
Intro-found: 1
Reference: [AH92] <author> R. Aumann and S. Hart, </author> <title> editors, </title> <booktitle> Handbook of Game Theory, </booktitle> <volume> vol. 1, </volume> <publisher> North Hol-land, </publisher> <address> Amsterdam, </address> <year> 1992. </year>
Reference-contexts: 1 Introduction Game theory provides a framework in which to model and analyze conflict and cooperation among independent decision makers. Many disciplines have benefit-ted from this framework, including economics, operations research, military strategy, politics, and biology; see, for example, <ref> [AH92] </ref> for a thorough overview of the theory and its applications. In computer science, game theory has been applied to, e.g., artificial intelligence [Ro93], distributed computing [BL85], security and privacy [FGY93], and lower bounds [Ya77].
Reference: [BFL91] <author> L. Babai, L. Fortnow, and C. Lund, </author> <title> "Nondeterministic Exponential Time has Two-Prover Interactive Protocols," Computational Complexity, </title> <booktitle> 1 (1991), </booktitle> <pages> pp. 3-40. </pages>
Reference-contexts: This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall. <p> Theorem 4.11 NEXP L (ir; pi). Proof: Recall that a language is decidable in nondeterministic exponential time if and only if it has a multiprover interactive proof system <ref> [BFL91] </ref>. The roles of all provers in such a system can be played collectively by one player with imperfect recall.
Reference: [BL85] <author> M. Ben-Or and N. Linial, </author> <title> "Collective Coin Flipping, Robust Voting Games, and Minima of Banzhaf Values," </title> <booktitle> Proceedings of the 26th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1985, </year> <pages> pp. 408-416. </pages>
Reference-contexts: Many disciplines have benefit-ted from this framework, including economics, operations research, military strategy, politics, and biology; see, for example, [AH92] for a thorough overview of the theory and its applications. In computer science, game theory has been applied to, e.g., artificial intelligence [Ro93], distributed computing <ref> [BL85] </ref>, security and privacy [FGY93], and lower bounds [Ya77]. Most importantly for structural complexity theorists, games have been used to characterize complexity classes in illuminating ways.
Reference: [CKS81] <author> A. Chandra, D. Kozen, and L. Stock-meyer, </author> <title> "Alternation," </title> <journal> Journal of the ACM, </journal> <volume> 28 (1981), </volume> <pages> pp. 114-133. </pages>
Reference-contexts: Most importantly for structural complexity theorists, games have been used to characterize complexity classes in illuminating ways. For example, a classical result of Chandra et al. <ref> [CKS81] </ref> tells us that PSPACE is characterized by two-person, perfect-information games in which the length of a played game is polynomial in the length of the description of the initial position. <p> This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall. <p> Obtain new game-theoretic characterizations of traditional complexity classes such as NEXP and coNEXP that are analogous to the <ref> [CKS81] </ref> characterization of PSPACE. In a game that models a PSPACE-complete language, both players have perfect information. We show that, by depriving one or more players of information about the progress of the game, we obtain games that model languages in higher complexity classes. <p> Such a strategy can be computed in polynomial space, using the min-max algorithm. Theorem 4.2 PSPACE L (pi; pi). Sketch of proof: This follows straightforwardly from the fact that PSPACE is equal to alternating polynomial time <ref> [CKS81] </ref>. Corollary 4.3 For any threshold 2 [0; 1], the language Value (pi; pi) is PSPACE-complete. Corollary 4.4 L (pi; pi) = PSPACE: We remark that the class 8BC-TIME (poly (n)) defined in [C89, CL86] is formally equivalent to L (pi; pi).
Reference: [C89] <author> A. Condon, </author> <title> Computational Models of Games, </title> <publisher> ACM Distinguished Dissertation, MIT Press, </publisher> <address> Cambridge, </address> <year> 1989. </year>
Reference-contexts: One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games [KMvS94, LY94]. Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing <p> Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing the players to use mixed strategies is a fundamental part of the game-theoretic paradigm. <p> The players in <ref> [C89, CL86] </ref> do toss coins, and hence the statement that they use pure strategies requires explanation. At a particular node in a game of [C89, CL86], a player may be required to toss a coin, or he may be required to make a strategic move. <p> The players in <ref> [C89, CL86] </ref> do toss coins, and hence the statement that they use pure strategies requires explanation. At a particular node in a game of [C89, CL86], a player may be required to toss a coin, or he may be required to make a strategic move. But the probabilities associated with the coin tosses are fixed in advance and not chosen strategically by the player. <p> Hence, coin tosses by either player correspond to "chance moves" in standard game-theoretic terminology; in our model, these coins would be tossed by the referee, not by either player. Whenever a player in <ref> [C89, CL86] </ref> is required to make a strategic move, he does so according to a pure strategy. of using mixed strategies is the existence of equilibria. Reif left as an open question the effect of using such strategies on the complexity classes definable by imperfect information games. <p> Corollary 4.3 For any threshold 2 [0; 1], the language Value (pi; pi) is PSPACE-complete. Corollary 4.4 L (pi; pi) = PSPACE: We remark that the class 8BC-TIME (poly (n)) defined in <ref> [C89, CL86] </ref> is formally equivalent to L (pi; pi). Next, we consider games in which at least one player has imperfect information, but both have perfect recall. This class of games provides our main open problem, stated in Question 4.9 below.
Reference: [CL86] <author> A. Condon and R. Ladner, </author> <title> "Probabilistic Game Automata," </title> <booktitle> Proceedings of the 1st Structure in Complexity Theory Conference, Lecture Notes in Computer Science, </booktitle> <volume> vol. 223, </volume> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1986, </year> <pages> pp. 144-162. </pages>
Reference-contexts: One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games [KMvS94, LY94]. Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing <p> Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing the players to use mixed strategies is a fundamental part of the game-theoretic paradigm. <p> The players in <ref> [C89, CL86] </ref> do toss coins, and hence the statement that they use pure strategies requires explanation. At a particular node in a game of [C89, CL86], a player may be required to toss a coin, or he may be required to make a strategic move. <p> The players in <ref> [C89, CL86] </ref> do toss coins, and hence the statement that they use pure strategies requires explanation. At a particular node in a game of [C89, CL86], a player may be required to toss a coin, or he may be required to make a strategic move. But the probabilities associated with the coin tosses are fixed in advance and not chosen strategically by the player. <p> Hence, coin tosses by either player correspond to "chance moves" in standard game-theoretic terminology; in our model, these coins would be tossed by the referee, not by either player. Whenever a player in <ref> [C89, CL86] </ref> is required to make a strategic move, he does so according to a pure strategy. of using mixed strategies is the existence of equilibria. Reif left as an open question the effect of using such strategies on the complexity classes definable by imperfect information games. <p> Corollary 4.3 For any threshold 2 [0; 1], the language Value (pi; pi) is PSPACE-complete. Corollary 4.4 L (pi; pi) = PSPACE: We remark that the class 8BC-TIME (poly (n)) defined in <ref> [C89, CL86] </ref> is formally equivalent to L (pi; pi). Next, we consider games in which at least one player has imperfect information, but both have perfect recall. This class of games provides our main open problem, stated in Question 4.9 below.
Reference: [DLR79] <author> D. Dobkin, R. Lipton, and S. Reiss, </author> <title> "Linear Programming is LOG-SPACE Hard for P," </title> <journal> Information Processing Letters, </journal> <volume> 8 (1979), </volume> <pages> pp. 96-97. </pages>
Reference-contexts: In this case, we can prove a lower bound only in the game-theoretic model and not in the accept-reject model. Theorem 4.6 Value (pr; pr) is EXP-hard. Proof: Our proof is based on the proof that linear programming is P-hard <ref> [DLR79] </ref>. This result can be used to show that solving two-person zero-sum games in normal (matrix) form is also P-hard. The following is a long and very technical exposition showing how this P-hardness result can be scaled up to the exponential case. <p> The other case, where w 62 L, is a little harder to see. It can be proved by equivalence to a certain linear system used by Dobkin, Lipton, and Reiss <ref> [DLR79] </ref>, which in turn is equivalent to unit resolution in Horn clauses. We will sketch a direct proof. The proof asserts that any variable in Q must get probability at least 1 jQj . This clearly suffices.
Reference: [FST88] <author> U. Feige, A. Shamir, and M. Ten-nenholtz, </author> <title> "The Noisy Oracle Model," </title> <booktitle> Advances in Cryptology - Crypto '88, Lecture Notes in Computer Science, </booktitle> <volume> vol. 403, </volume> <publisher> Springer, </publisher> <address> Berlin, </address> <year> 1990, </year> <pages> pp. 284-296. </pages>
Reference-contexts: This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall. <p> is L (pr; pr) = PSPACE? We can restate this alternative as "Are the game-theoretic and accept-reject models different for perfect recall games?" or "Is approximating the value of a perfect recall game easier than computing is exactly?" Question 4.9 has arisen before in the context of cryptographic complexity see <ref> [FST88] </ref>. It should be pointed out, of course, that the two alternatives stated explicitly in the question are not the only two; L (pr; pr) may be equal neither to EXP nor to PSPACE.
Reference: [FRS94] <author> L. Fortnow, J. Rompel, and M. Sipser, </author> <title> "On the Power of Multiprover Interactive Protocols," </title> <booktitle> Theoretical Computer Science, 134 (1994), </booktitle> <pages> pp. 545-557. </pages>
Reference-contexts: This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall. <p> Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91]. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in <ref> [FRS94] </ref>, because oracles and teams of noncommunicating provers are both examples of players with imperfect recall. An oracle has imperfect recall (actually, no recall whatsoever) by definition, because it is fixed before the game between the prover and the verifier begins. <p> The roles of all provers in such a system can be played collectively by one player with imperfect recall. This is implied by the theorem of Fortnow et al. <ref> [FRS94] </ref>, which says that a language has a multiprover proof system if and only if it has a one-prover "oracle" proof system; to see this, note that an oracle is an example of a player with imperfect recall (actually with no recall at all).
Reference: [FGY93] <author> M. Franklin, Z. Galil, and M. Yung, </author> <title> "Eavesdropping Games: A Graph-Theoretic Approach to Privacy in Distributed Systems," </title> <booktitle> Proceedings of the 34th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1993, </year> <pages> pp. 670-679. </pages>
Reference-contexts: Many disciplines have benefit-ted from this framework, including economics, operations research, military strategy, politics, and biology; see, for example, [AH92] for a thorough overview of the theory and its applications. In computer science, game theory has been applied to, e.g., artificial intelligence [Ro93], distributed computing [BL85], security and privacy <ref> [FGY93] </ref>, and lower bounds [Ya77]. Most importantly for structural complexity theorists, games have been used to characterize complexity classes in illuminating ways.
Reference: [GS89] <author> S. Goldwasser and M. Sipser, </author> <title> "Private coins versus public coins in interactive proof systems," Randomness and Computation, </title> <editor> S. Micali, editor, </editor> <volume> vol. </volume> <booktitle> 5 of Advances in Computing Research, </booktitle> <publisher> JAI Press, </publisher> <address> Greenwich, </address> <year> 1989, </year> <pages> pp. 73-90. </pages>
Reference-contexts: model, in which mixed strategies are essential, be combined with his? Question 4.21 Perfect-information games in which the depth of the game tree is polynomial retain the same language-recognition power when we replace one of the all-powerful players by a "random player." This is true in both the bounded-error model <ref> [GS89] </ref> and the unbounded-error model [Pa85]. Does a similar result about random players hold for games of imperfect information or imperfect recall? 5 Acknowledgement The work of Daphne Koller was supported by a University of California President's Postdoctoral Fellowship and by the Air Force Office of Scientific Research under Contract F49620-91-C-0080.
Reference: [JL74] <author> N. Jones and W. Laaser, </author> <title> "Complete problems for deterministic polynomial time," </title> <booktitle> Proceedings of the 6th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1974, </year> <pages> pp. 40-46. </pages>
Reference-contexts: The following is a long and very technical exposition showing how this P-hardness result can be scaled up to the exponential case. Consider a deterministic exponential time Turing machine M and some input w. Our basic construction will be as follows. Following the lines of Jones and Laaser <ref> [JL74] </ref>, we describe the computation of M on w using a set C of propositional Horn clauses.
Reference: [KLRSS94] <author> M. Kiwi, C. Lund, A. Russell, D. Spiel-man, and R. Sundaram, </author> <title> "Alternation in Interaction," </title> <booktitle> Proceedings of the 9th Conference on Structure in Complexity Theory, </booktitle> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1994, </year> <pages> pp. 294-303. </pages>
Reference-contexts: One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games [KMvS94, LY94]. Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing <p> Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing the players to use mixed strategies is a fundamental part of the game-theoretic paradigm. <p> The issue of mixed strategies in the context of imperfect information games was raised by Reif [Re79], although without the observation that the main point 1 It is clear in <ref> [KLRSS94, PR79, Re84] </ref> that the players use pure strategies, because they do not toss coins at all (except for one minor point in [KLRSS94], which is not the central model or result of the paper). <p> mixed strategies in the context of imperfect information games was raised by Reif [Re79], although without the observation that the main point 1 It is clear in [KLRSS94, PR79, Re84] that the players use pure strategies, because they do not toss coins at all (except for one minor point in <ref> [KLRSS94] </ref>, which is not the central model or result of the paper). The players in [C89, CL86] do toss coins, and hence the statement that they use pure strategies requires explanation.
Reference: [KMvS94] <author> D. Koller, N. Meggido, and B. von Stengel, </author> <title> "Fast Algorithms for Finding Randomized Strategies in Game Trees," </title> <booktitle> Proceedings of the 26th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1994, </year> <pages> pp. 750-759. </pages>
Reference-contexts: Isolate intriguing open questions about other exponential complexity classes and obtain partial answers to these questions. One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games <ref> [KMvS94, LY94] </ref>. Imperfect information games have been considered in several previous works in complexity theory, including [C89, CL86, KLRSS94, PR79, Re84]. <p> Specifically, if the opponent has N pure strategies, there exists a multiset of size d (ln N )=* 2 e such that the corresponding mixed strategy guarantees a payoff within less than * of optimal. Theorem 2.2 (cf. <ref> [KMvS94] </ref>): For any strategy in a two-player, zero-sum game in extensive form, there exists an equivalent strategy 0 such that the support of 0 contains at most l pure strategies, where l is the number of leaves in the game tree. Theorem 2.3 (cf. [KMvS94]): The optimal strategies of a two-player, <p> Theorem 2.2 (cf. <ref> [KMvS94] </ref>): For any strategy in a two-player, zero-sum game in extensive form, there exists an equivalent strategy 0 such that the support of 0 contains at most l pure strategies, where l is the number of leaves in the game tree. Theorem 2.3 (cf. [KMvS94]): The optimal strategies of a two-player, zero-sum, perfect-recall game in extensive form are the solutions of a linear program whose size is polynomial in the size of the game tree.
Reference: [Ku53] <author> H. Kuhn, </author> <title> "Extensive games and the problem of information," Contributions to the Theory of Games II, </title> <editor> H. Kuhn and A. Tucker, editors, </editor> <publisher> Princeton University Press, Princeton, </publisher> <year> 1953, </year> <pages> pp. 193-216. </pages>
Reference-contexts: Our main results and some open questions are given in Section 4. In this extended abstract, some proofs have been sketched; full proofs will be provided in the journal version of the paper. 2 The game-theoretic model We first recall the standard definition of a game in extensive form <ref> [Ku53] </ref>. The basic structure of the game is a finite directed tree whose nodes denote game states. A play of the game starts at the root, proceeds according to the players' actions, and ends at a leaf.
Reference: [LY94] <author> R. Lipton and N. Young, </author> <title> "Simple strategies for large zero-sum games with applications to complexity theory," </title> <booktitle> Proceedings of the 26th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1994, </year> <pages> pp. 734-740. </pages>
Reference-contexts: Isolate intriguing open questions about other exponential complexity classes and obtain partial answers to these questions. One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games <ref> [KMvS94, LY94] </ref>. Imperfect information games have been considered in several previous works in complexity theory, including [C89, CL86, KLRSS94, PR79, Re84]. <p> In Section 4 below, we use the following recent results about complexity theoretic aspects of games. 2 His payoff may be better if the other player uses some other strategy. Theorem 2.1 (cf. <ref> [LY94] </ref>): In any game with payoffs in [0; 1], each player has a near-optimal mixed strategy that chooses uniformly at random from a logarithmic-size multiset of pure strategies.
Reference: [LFKN92] <author> C. Lund, L. Fortnow, H. Karloff, and N. Nisan, </author> <title> "Algebraic methods for interactive proof systems," </title> <journal> Journal of the ACM, </journal> <volume> 39 (1992), </volume> <pages> pp. 859-868. </pages>
Reference-contexts: This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall.
Reference: [Pa85] <author> C. Papadimitriou, </author> <title> "Games Against Nature," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 31 (1985), </volume> <pages> pp. 288-301. </pages>
Reference-contexts: are essential, be combined with his? Question 4.21 Perfect-information games in which the depth of the game tree is polynomial retain the same language-recognition power when we replace one of the all-powerful players by a "random player." This is true in both the bounded-error model [GS89] and the unbounded-error model <ref> [Pa85] </ref>. Does a similar result about random players hold for games of imperfect information or imperfect recall? 5 Acknowledgement The work of Daphne Koller was supported by a University of California President's Postdoctoral Fellowship and by the Air Force Office of Scientific Research under Contract F49620-91-C-0080.
Reference: [PY94] <author> C. Papadimitriou and M. Yannakakis, </author> <title> "On Complexity as Bounded Rationality," </title> <booktitle> Proceedings of the 26th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1994, </year> <pages> pp. 726-733. </pages>
Reference-contexts: Reif left as an open question the effect of using such strategies on the complexity classes definable by imperfect information games. Our results can be viewed as answering Reif's question for certain types of imperfect information games. Papadimitriou and Yannakakis <ref> [PY94] </ref> consider complexity classes defined by games in which the players may use mixed strategies. <p> We can now use Theorem 2.3 to construct and solve a linear program whose size is polynomial in the size of G. Theorem 4.5 is directly comparable to the upper bound in part (c) of the Classification Theorem of <ref> [PY94] </ref>. Our bound, which makes essential use of Theorem 2.3, is considerably stronger, because our games are presented in extensive form, whereas those of [PY94] are presented in normal form. It is easy to see that a game in normal form (as in [PY94]) can be viewed as a game in <p> Theorem 4.5 is directly comparable to the upper bound in part (c) of the Classification Theorem of <ref> [PY94] </ref>. Our bound, which makes essential use of Theorem 2.3, is considerably stronger, because our games are presented in extensive form, whereas those of [PY94] are presented in normal form. It is easy to see that a game in normal form (as in [PY94]) can be viewed as a game in extensive form of the same size. <p> part (c) of the Classification Theorem of <ref> [PY94] </ref>. Our bound, which makes essential use of Theorem 2.3, is considerably stronger, because our games are presented in extensive form, whereas those of [PY94] are presented in normal form. It is easy to see that a game in normal form (as in [PY94]) can be viewed as a game in extensive form of the same size. However, as we observed, a game in extensive form generates a normal-form game that is typically exponentially larger. <p> Hence, if we want the payoff for this clause the be at least 0, we conclude that x i k jQj k 1 0; so that x i 1 jQj as required. Theorem 4.6 is analogous to the lower bound in part (c) of the Classification Theorem of <ref> [PY94] </ref>. In this case, the bounds are equally strong, and the proofs are similar. Corollary 4.7 For any threshold 2 [0; 1], the lan guage Value (pr; pr) is EXP-complete.
Reference: [PR79] <author> G. Peterson and J. Reif, </author> <title> "Multiple Per--son Alternation," </title> <booktitle> Proceedings of the 20th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1979, </year> <pages> pp. 348-363. </pages>
Reference-contexts: One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games [KMvS94, LY94]. Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing <p> Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing the players to use mixed strategies is a fundamental part of the game-theoretic paradigm. <p> The issue of mixed strategies in the context of imperfect information games was raised by Reif [Re79], although without the observation that the main point 1 It is clear in <ref> [KLRSS94, PR79, Re84] </ref> that the players use pure strategies, because they do not toss coins at all (except for one minor point in [KLRSS94], which is not the central model or result of the paper).
Reference: [Re84] <author> J. Reif, </author> <title> "The Complexity of Two-Player Games of Incomplete Information," </title> <journal> Journal of Computer and System Sciences, </journal> <volume> 29 (1984), </volume> <pages> pp. 274-301. </pages>
Reference-contexts: One interesting aspect of items 2 and 3 is that they use both results and proof techniques from recent papers on the complexity of solving games [KMvS94, LY94]. Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing <p> Imperfect information games have been considered in several previous works in complexity theory, including <ref> [C89, CL86, KLRSS94, PR79, Re84] </ref>. A crucial difference between these works and ours is that the opposing players in [C89, CL86, KLRSS94, PR79, Re84] use deterministic (pure) strategies, whereas ours use randomized (mixed) strategies. 1 (These and other game-theoretic terms are formally defined in the next section.) We claim that allowing the players to use mixed strategies is a fundamental part of the game-theoretic paradigm. <p> The issue of mixed strategies in the context of imperfect information games was raised by Reif [Re79], although without the observation that the main point 1 It is clear in <ref> [KLRSS94, PR79, Re84] </ref> that the players use pure strategies, because they do not toss coins at all (except for one minor point in [KLRSS94], which is not the central model or result of the paper). <p> Corollary 4.18 EXP NP L (ir; ir) EXP 2 " EXP Question 4.19 What is the exact complexity of L (ir; ir)? In particular, can the upper bound be improved to EXP NP ? Finally, we include two general open questions about polynomially definable game systems. Question 4.20 Reif <ref> [Re84, Re79] </ref> defines a richer classification of information structure than we (or traditional game theorists) do and develops an associated complexity hierarchy.
Reference: [Re79] <author> J. Reif, </author> <title> "Universal Games of Incomplete Information," </title> <booktitle> Proceedings of the 11th Symposium on Theory of Computing, ACM, </booktitle> <address> New York, </address> <year> 1979, </year> <pages> pp. 288-307. </pages>
Reference-contexts: Hence, the use of mixed strategies allows us to use a framework in which the two players play symmetric roles and to study the effects of varying the information of both players. The issue of mixed strategies in the context of imperfect information games was raised by Reif <ref> [Re79] </ref>, although without the observation that the main point 1 It is clear in [KLRSS94, PR79, Re84] that the players use pure strategies, because they do not toss coins at all (except for one minor point in [KLRSS94], which is not the central model or result of the paper). <p> Corollary 4.18 EXP NP L (ir; ir) EXP 2 " EXP Question 4.19 What is the exact complexity of L (ir; ir)? In particular, can the upper bound be improved to EXP NP ? Finally, we include two general open questions about polynomially definable game systems. Question 4.20 Reif <ref> [Re84, Re79] </ref> defines a richer classification of information structure than we (or traditional game theorists) do and develops an associated complexity hierarchy.
Reference: [Ro93] <author> J. Rosenschein, </author> <title> "Consenting Agents: Negotiation Mechanisms for Multi-Agent Systems," </title> <booktitle> Proceedings of the 13th International Joint Conference on Artificial Intelligence, </booktitle> <publisher> Morgan Kaufman, </publisher> <address> San Mateo, </address> <year> 1993, </year> <pages> pp. 792-799. </pages>
Reference-contexts: Many disciplines have benefit-ted from this framework, including economics, operations research, military strategy, politics, and biology; see, for example, [AH92] for a thorough overview of the theory and its applications. In computer science, game theory has been applied to, e.g., artificial intelligence <ref> [Ro93] </ref>, distributed computing [BL85], security and privacy [FGY93], and lower bounds [Ya77]. Most importantly for structural complexity theorists, games have been used to characterize complexity classes in illuminating ways.
Reference: [Sh91] <author> A. Shamir, </author> <title> "IP = PSPACE," </title> <journal> Journal of the ACM, </journal> <volume> 39 (1992), </volume> <pages> pp. 869-877. </pages>
Reference-contexts: This framework allows us to 1. Unify and generalize the game-theoretic aspects of ealier work on the complexity of interactive computation <ref> [BFL91, CKS81, FRS94, FST88, LFKN92, Sh91] </ref>. For example, game theory is a natural framework in which to state the equivalence of "oracle proof systems" and "multiprover proof systems" given in [FRS94], because oracles and teams of noncommunicating provers are both examples of players with imperfect recall.
Reference: [Ya77] <author> A. Yao, </author> <title> "Probabilistic Computation: Towards a Unified Measure of Complexity," </title> <booktitle> Proceedings of the 18th Symposium on Foundations of Computer Science, </booktitle> <publisher> IEEE Computer Society, Los Alamitos, </publisher> <year> 1977, </year> <pages> pp. 222-227. </pages>
Reference-contexts: In computer science, game theory has been applied to, e.g., artificial intelligence [Ro93], distributed computing [BL85], security and privacy [FGY93], and lower bounds <ref> [Ya77] </ref>. Most importantly for structural complexity theorists, games have been used to characterize complexity classes in illuminating ways.
Reference: [Ze13] <author> E. Zermelo, </author> " <title> Uber eine anwendung der mengenlehre auf die theorie des schach-spiels," </title> <booktitle> Proceedings of the Fifth International Congress of Mathematicians II, </booktitle> <editor> E. W. Hobson and A. E. H. Love, editors, </editor> <publisher> Cambridge University Press, </publisher> <address> Cam-bridge, </address> <year> 1913. </year>
Reference-contexts: We begin by proving that the classical PSPACE characterization of perfect-information games can be stated in our framework. Theorem 4.1 Value (pi; pi) can be computed in polynomial space. Sketch of proof: This follows from the well-known theorem <ref> [Ze13] </ref> that, in a perfect-information game (even with chance moves), there is a deterministic optimal strategy for each player. Such a strategy can be computed in polynomial space, using the min-max algorithm. Theorem 4.2 PSPACE L (pi; pi).
References-found: 26

