URL: ftp://ftp.eecs.umich.edu/groups/os_arch/asplos94.ps.Z
Refering-URL: http://www.eecs.umich.edu/UMichMP/NT/papers.html
Root-URL: http://www.cs.umich.edu
Title: Abstract  
Keyword: memor system, cache, TLB, simulation, trace driven simulation, trap-driven simulation  
Abstract: Tapeworm II is a software-based simulation tool that evaluates the cache and TLB performance of multiple-task and operating system intensive workloads. Tapeworm resides in an OS kernel and causes a host machines hardware to drive simulations with kernel traps instead of with address traces, as is conventionally done. This allows T apeworm to quickly and accurately capture complete memor y r eferencing behavior with a limited degradation in overall system performance. This paper compar es trap-driven simulation, as implemented in T apeworm, with the more common technique of tracedriven memor y simulation with respect to speed, accuracy, portability and exibility. Results : For r easonable miss ratios, T apeworm simulations are signifi cantly faster than traditional tracedriven simulations. Tapeworm typically slows a system down by less than an or der of magnitude (10x) when cache miss ratios ar e under 10%, and slowdowns approach zero as miss ratios decrease. Tapeworm can employ set sampling techniques to fur ther reduce slowdowns, but at the expense of higher measur ement variance. Unlike trace-driven simulations, which typically pr oduce identical results from run to r un, trap-driven simulations exhibit gr eater sensitivity to inherent variations in memory system behavior on a real machine. Less than 5% of Tapeworms code is machinedependent, enhancing its portability to different machines provided that they support a few essential primitive operations. Although the trap-driven approach is exible enough to simulate most TLB and cache configurations, other architectural structures, such as write buffers or instruction pipelines cannot be simulated with this appr oach. Tapeworm implementations cur rently exist for TLB and instr uc-tion cache simulation on MIPS-based DECstations and for TLB simulation on a 486-based Gateway PC. 
Abstract-found: 1
Intro-found: 1
Reference: <author> Mudge, R. </author> <title> Brown , Design tradeoffs for software-managed TLBs . ACM Transactions on Computer Systems. </title> <note> To appear in Fall, </note> <year> 1994. </year>
References-found: 1

