URL: ftp://theory.lcs.mit.edu/pub/people/danar/pebble.ps.gz
Refering-URL: http://theory.lcs.mit.edu/~danar/papers.html
Root-URL: 
Email: Email: bender@deas.harvard.edu.  Email: anto@eui.upm.es.  Email: danar@theory.lcs.mit.edu.  Email: amits@theory.lcs.mit.edu.  Email: salil@math.mit.edu. Sup  
Title: The Power of a Pebble: Exploring and Mapping Directed Graphs  
Author: Michael A. Bender Antonio Fernandez Dana Ron Amit Sahai Salil Vadhan 
Note: Supported by NSF grants CCR-95-04436 and CCR-93-13775. Laboratory for Computer Science, MIT. Current address: Dpto  Supported by the Spanish Ministry of Education, Army grant DAAH04-95-1-0607, and ARPA contract N00014-95-1-1246.  Supported by an NSF postdoctoral fellowship.  Supported by a DOD NDSEG doctoral fellowship.  ported by a DOD NDSEG doctoral fellowship.  
Address: 33 Oxford Street, Cambridge MA 02138.  Madrid.  545 Technology Square, Cambridge, MA 02139.  545 Technology Square, Cambridge, MA 02139.  545 Technology Square, Cambridge, MA 02139.  
Affiliation: Aiken Computation Laboratory, Harvard University,  de Arquitectura Tecnologa de Computadores, Universidad Politecnica de  Laboratory for Computer Science, MIT,  Laboratory for Computer Science, MIT,  Laboratory for Computer Science, MIT,  
Abstract: Exploring and mapping an unknown environment is a fundamental problem, which is studied in a variety of contexts. Many works have focused on finding efficient solutions to restricted versions of the problem. In this paper, we consider a model that makes very limited assumptions on the environment and solve the mapping problem in this general setting. We model the environment by an unknown directed graph G, and consider the problem of a robot exploring and mapping G. We do not assume that the vertices of G are labeled, and thus the robot has no hope of succeeding unless it is given some means of distinguishing between vertices. For this reason we provide the robot with a pebble a device that it can place on a vertex and use to identify the vertex later. In this paper we show: (1) If the robot knows an upper bound on the number of vertices then it can learn the graph efficiently with only one pebble. (2) If the robot does not know an upper bound on the number of vertices n, then fi(log log n) pebbles are both necessary and sufficient. In both cases our algorithms are deterministic. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. Albers and M. R. Henzinger. </author> <title> Exploring unknown environments. </title> <booktitle> In Proceedings of the Twenty Ninth Annual ACM Symposium on the Theory of Computing, </booktitle> <year> 1997. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> More sophisticated techniques <ref> [16, 1] </ref> yield improved running times. Regardless of whether there are directed edges, a more daunting difficulty arises if vertices are not uniquely labeled. This situation could result from limited sensory capabilities of a robot or the changing appearance of vertices. <p> having labeled vertices. 5 Actually, the robot may be at vertices equivalent under automorphism, but we avoid this issue in the introduction. 6 In light of our results and those of Bender and Slonim, we see that a friend is only worth log log n pebbles. 3 Albers and Henzinger <ref> [1] </ref> give improved algorithms for this problem. These works study exploration from the perspective of competitive analysis. The results are stated in terms of the deficiency of the graph (i.e., the minimum number of edges to be added to make the graph Eulerian).
Reference: [2] <author> D. Angluin, J. Westbrook, and W. Zhu. </author> <title> Robot navigation with range queries. </title> <booktitle> In Proceedings of the Twenty Eighth Annual ACM Symposium on the Theory of Computing, </booktitle> <pages> pages 469-478, </pages> <year> 1996. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [3] <author> V. Anjan. </author> <type> Doctoral Thesis. PhD thesis, </type> <institution> Mathematical Institute of the Academy of Sciences, Minsk, </institution> <year> 1987. </year>
Reference-contexts: Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments <ref> [28, 13, 12, 3, 24] </ref>.
Reference: [4] <author> B. Awerbuch, M. Betke, R. L. Rivest, and M. Singh. </author> <title> Piecemeal graph exploration by a mobile robot. </title> <booktitle> In Proceedings of the Eighth Annual ACM Conference on Computational Learning Theory, </booktitle> <pages> pages 321-328, </pages> <year> 1995. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> These works study exploration from the perspective of competitive analysis. The results are stated in terms of the deficiency of the graph (i.e., the minimum number of edges to be added to make the graph Eulerian). Betke, Rivest, and Singh [9] and together with Awerbuch <ref> [4] </ref> study the problem of piecemeal learning undirected labeled graphs. In the piecemeal learning problem the robot is required to return to its starting position periodically. Rivest and Schapire [26, 25] study the problem of learning environments modeled by finite automata.
Reference: [5] <author> R. Baeza-Yates, J. Culberson, and G. Rawlins. </author> <title> Searching in the plane. </title> <booktitle> Information and Computation, </booktitle> <pages> pages 234-252, </pages> <year> 1993. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [6] <author> E. Bar-Eli, P. Berman, A. Fiat, and P. Yan. </author> <title> On-line navigation in a room. </title> <booktitle> In Proceedings of the Third Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 8-15, </pages> <year> 1992. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [7] <author> M. A. Bender and D. </author> <title> Slonim. The power of team exploration: Two robots can learn unlabeled directed graphs. </title> <booktitle> In Proceedings of the Thirty Fifth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 75-85, </pages> <year> 1994. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> Upon finding the pebble, the robot can pick it up. However, because the graph is directed, the robot cannot retrace its steps to retrieve the pebble. Bender and Slonim <ref> [7] </ref> show that a robot given a pebble can explore and map any graph in exponential 1 In addition to undirected edges and labeled vertices, other simplifying assumptions that can be made about the environment include geometric structure (such as planarity) or random access (as on the World Wide Web). 2 <p> We now return to the problem of learning with a pebble. Although one (pebbleless) robot cannot traverse combination locks (efficiently), a robot with a pebble can learn them using random walks <ref> [7] </ref>. 4 However, consider the graph shown in Figure 2. This graph consists of two combination locks, where the end of one combination lock leads into the beginning of the other. <p> Thus, the robot can map many subgraphs, but it is not obvious how to piece these maps together. This is because the robot has little information about how the subgraphs overlap and interconnect. As a result, finding closed 4 More generally, graphs having high conductance can be learned efficiently <ref> [7] </ref>. 2 paths permits the robot to drop the pebble, map a (small) portion of the graph and retrieve the pebble, but does not solve the mapping problem. In order to solve the mapping problem, we use an algorithmic tool that we call an orienting procedure. <p> It is closely related to the notion of two-robot homing sequences introduced by Bender and Slonim <ref> [7] </ref>. In the context of learning, homing sequences were first applied by Rivest and Schapire [26, 25]; they were used for learning environments modeled by finite automata. We show that given an orienting procedure, the robot can build maps of subgraphs containing the ending vertices of the procedure. <p> Some intuition is given in Section B of the Appendix. Related work. Our work is most directly related to the work of Bender and Slonim <ref> [7] </ref>. Bender and Slonim show that two cooperating robots can explore and map unknown directed graphs with unlabeled vertices in polynomial time. The robots do not require any prior knowledge of the size of the graph.
Reference: [8] <author> P. Berman, A. Blum, A. Fiat, H. Karloff, A. Rosen, and M. Saks. </author> <title> Randomized robot navigation algorithms. </title> <booktitle> In Proceedings of the Seventh Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 74-84, </pages> <year> 1996. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [9] <author> M. Betke, R. L. Rivest, and M. Singh. </author> <title> Piecemeal learning of an unknown environment. </title> <booktitle> In Proceedings of the Sixth Annual ACM Conference on Computational Learning Theory, </booktitle> <pages> pages 277-286, </pages> <year> 1993. </year> <title> 12 It is easy to see from the proof that the success probability of 1=2 is arbitrary and can be replaced by any constant. </title> <type> 11 </type>
Reference-contexts: These works study exploration from the perspective of competitive analysis. The results are stated in terms of the deficiency of the graph (i.e., the minimum number of edges to be added to make the graph Eulerian). Betke, Rivest, and Singh <ref> [9] </ref> and together with Awerbuch [4] study the problem of piecemeal learning undirected labeled graphs. In the piecemeal learning problem the robot is required to return to its starting position periodically. Rivest and Schapire [26, 25] study the problem of learning environments modeled by finite automata.
Reference: [10] <author> A. Blum and P. Chalasani. </author> <title> An on-line algorithm for improving performance in navigation. </title> <booktitle> In Pro--ceedings of the Thirty Fourth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 2-11, </pages> <year> 1993. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [11] <author> A. Blum, P. Raghavan, and B. Schieber. </author> <title> Navigating in unfamiliar geometric terrain. </title> <booktitle> In Proceedings of the Twenty Third Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 494-504, </pages> <month> May </month> <year> 1991. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [12] <author> M. Blum and D. Kozen. </author> <title> On the power of the compass (or, why mazes are easier to search than graphs. </title> <booktitle> In Proceedings of the Nineteenth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 132-142, </pages> <month> October </month> <year> 1978. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments <ref> [28, 13, 12, 3, 24] </ref>.
Reference: [13] <author> M. Blum and W. J. Sakoda. </author> <title> On the capability of finite automata in 2 and 3 dimensional space. </title> <booktitle> In Proceedings of the Eighteenth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 147-161, </pages> <year> 1977. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments <ref> [28, 13, 12, 3, 24] </ref>.
Reference: [14] <author> T. Dean, D. Angluin, K. Basye, S. Engelson, L. Kaelbling, E. Kokkevis, and O. Maron. </author> <title> Inferring finite automata with stochastic output functions and an application to map learning. </title> <journal> Machine Learning, </journal> <volume> 18(1) </volume> <pages> 81-108, </pages> <month> January </month> <year> 1995. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> Their algorithms (with the exception of one, for permutation automata) rely on a teacher. The teacher supplies counterexamples to the robot's hypotheses. Variants of this problem that do not rely on a teacher are studied in the following works <ref> [14, 18, 27, 17] </ref>. We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. <p> Their algorithms (with the exception of one, for permutation automata) rely on a teacher. The teacher supplies counterexamples to the robot's hypotheses. Variants of this problem that do not rely on a teacher are studied in the following works [14, 18, 27, 17]. We note that Dean et. al. <ref> [14] </ref> apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively.
Reference: [15] <author> X. Deng, T. Kameda, and C. H. Papadimtriou. </author> <title> How to learn an unknown environment. </title> <booktitle> In Proceedings of the Thirty Second Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 298-303, </pages> <year> 1991. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [16] <author> X. Deng and C. H. Papadimtriou. </author> <title> Exploring an unknown graph. </title> <booktitle> In Proceedings of the Thirty First Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 356-361, </pages> <year> 1990. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> More sophisticated techniques <ref> [16, 1] </ref> yield improved running times. Regardless of whether there are directed edges, a more daunting difficulty arises if vertices are not uniquely labeled. This situation could result from limited sensory capabilities of a robot or the changing appearance of vertices. <p> Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments [28, 13, 12, 3, 24]. Deng and Papadim-itriou <ref> [16] </ref> propose and study the problem of exploring an unknown directed graph having labeled vertices. 5 Actually, the robot may be at vertices equivalent under automorphism, but we avoid this issue in the introduction. 6 In light of our results and those of Bender and Slonim, we see that a friend
Reference: [17] <author> Y. Freund, M. Kearns, Y. Mansour, D. Ron, R. Rubinfeld, and R. E. Schapire. </author> <title> Efficient algorithms for learning to play repeated games against computationally bounded adversaries. </title> <booktitle> In Proceedings of the Thirty Sixth Annual Symposium on Foundations of Computer Science, </booktitle> <pages> pages 332-341, </pages> <year> 1995. </year>
Reference-contexts: Their algorithms (with the exception of one, for permutation automata) rely on a teacher. The teacher supplies counterexamples to the robot's hypotheses. Variants of this problem that do not rely on a teacher are studied in the following works <ref> [14, 18, 27, 17] </ref>. We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively.
Reference: [18] <author> Y. Freund, M. Kearns, D. Ron, R. Rubinfeld, R. Schapire, and L. Sellie. </author> <title> Efficient learning of typical finite automata from random walks. </title> <booktitle> In Proceedings of the 24th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 315-324, </pages> <year> 1993. </year>
Reference-contexts: Their algorithms (with the exception of one, for permutation automata) rely on a teacher. The teacher supplies counterexamples to the robot's hypotheses. Variants of this problem that do not rely on a teacher are studied in the following works <ref> [14, 18, 27, 17] </ref>. We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively.
Reference: [19] <author> F. Hoffman, C. Icking, R. Klein, and K. Kriegel. </author> <title> A competitive strategy for learning a polygon. </title> <booktitle> In Proceedings of the Eighth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 166-174, </pages> <year> 1997. </year>
Reference-contexts: We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [20] <author> Z. Kohavi. </author> <title> Switching and Finite Automata Theory. </title> <publisher> McGraw-Hill, </publisher> <address> second edition, </address> <year> 1978. </year>
Reference-contexts: More precisely, if the robot sees the same output in two different executions of the procedure, then both times it ends up at the same vertex. 5 The notion of orienting procedures is analogous to the notion of (adaptive) homing sequences in automata theory <ref> [20] </ref>. It is closely related to the notion of two-robot homing sequences introduced by Bender and Slonim [7]. In the context of learning, homing sequences were first applied by Rivest and Schapire [26, 25]; they were used for learning environments modeled by finite automata.
Reference: [21] <author> Petrisor Panaite and Andrzej Pelc. </author> <title> Exploring unknown undirected graphs. </title> <booktitle> In Proceedings of the Ninth Annual ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <year> 1998. </year>
Reference-contexts: A natural way to model the problem is by a robot exploring a graph. The case where the graph has both undirected edges and labeled vertices can be solved in time linear in the number of edges by depth first search. Other search techniques <ref> [21] </ref> improve on this bound by a constant factor. Unfortunately, many exploration and mapping problems do not satisfy these constraints. For instance, if the graph represents a city (having one-way streets) or the Internet, it would contain directed edges.
Reference: [22] <author> C.H. Papadimitriou and M. Yannakakis. </author> <title> Shortest paths without a map. </title> <journal> Theoretical Computer Science, </journal> <volume> 84 </volume> <pages> 127-150, </pages> <year> 1991. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively. A sample of papers includes <ref> [5, 22, 15, 11, 6, 10, 8, 19, 2] </ref>. 2 Preliminaries Let G = (V; E) be the unknown directed graph the robot explores and maps. Suppose that the graph is strongly connected and that all the vertices of G are unlabeled and have (the same) outdegree d.
Reference: [23] <author> M. O. Rabin. </author> <title> Maze threading automata. </title> <institution> Seminar Talk presented at the University of California at Berkeley, </institution> <month> October </month> <year> 1967. </year>
Reference-contexts: Our O (log log n)-pebble algorithm (for unknown n) can be simulated by two robots. This yields a deterministic alternative to Bender and Slonim's randomized two-robot algorithm. 6 Most early work on graph exploration assumed that the robot is a finite automaton. Rabin <ref> [23] </ref> first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments [28, 13, 12, 3, 24].
Reference: [24] <author> L. Reyzin. </author> <title> Traversal problems for certain types of deterministic and non-deterministic automata. </title> <type> Unpublished manuscript, </type> <year> 1992. </year>
Reference-contexts: Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments <ref> [28, 13, 12, 3, 24] </ref>.
Reference: [25] <author> R. Rivest and R. Schapire. </author> <title> Inference of finite automata using homing sequences. </title> <journal> Information and Computation, </journal> <volume> 103(2) </volume> <pages> 299-347, </pages> <year> 1993. </year> <month> 12 </month>
Reference-contexts: It is closely related to the notion of two-robot homing sequences introduced by Bender and Slonim [7]. In the context of learning, homing sequences were first applied by Rivest and Schapire <ref> [26, 25] </ref>; they were used for learning environments modeled by finite automata. We show that given an orienting procedure, the robot can build maps of subgraphs containing the ending vertices of the procedure. <p> Betke, Rivest, and Singh [9] and together with Awerbuch [4] study the problem of piecemeal learning undirected labeled graphs. In the piecemeal learning problem the robot is required to return to its starting position periodically. Rivest and Schapire <ref> [26, 25] </ref> study the problem of learning environments modeled by finite automata. Here, an environment is represented by a directed graph, in which each vertex has one of two (or constant) possible labelings.
Reference: [26] <author> R. Rivest and R. Schapire. </author> <title> Diversity-based inference of finite automata. </title> <journal> Journal of the Association for Computing Machinery, </journal> <volume> 43(3) </volume> <pages> 555-589, </pages> <year> 1994. </year>
Reference-contexts: As such, a large body of work has focused on finding efficient solutions to variants of the problem, with restrictive assumptions on the form of the environment (cf. <ref> [13, 12, 16, 22, 14, 26, 7, 4, 1] </ref>.) In this paper, we consider a model that makes very limited assumptions about the environment, and give efficient algorithms to solve the mapping problem in this general setting. <p> It is closely related to the notion of two-robot homing sequences introduced by Bender and Slonim [7]. In the context of learning, homing sequences were first applied by Rivest and Schapire <ref> [26, 25] </ref>; they were used for learning environments modeled by finite automata. We show that given an orienting procedure, the robot can build maps of subgraphs containing the ending vertices of the procedure. <p> Betke, Rivest, and Singh [9] and together with Awerbuch [4] study the problem of piecemeal learning undirected labeled graphs. In the piecemeal learning problem the robot is required to return to its starting position periodically. Rivest and Schapire <ref> [26, 25] </ref> study the problem of learning environments modeled by finite automata. Here, an environment is represented by a directed graph, in which each vertex has one of two (or constant) possible labelings.
Reference: [27] <author> D. Ron and R. Rubinfeld. </author> <title> Exactly learning automata of small cover time. </title> <journal> Machine Learning, </journal> <volume> 27(1) </volume> <pages> 69-96, </pages> <year> 1997. </year>
Reference-contexts: Their algorithms (with the exception of one, for permutation automata) rely on a teacher. The teacher supplies counterexamples to the robot's hypotheses. Variants of this problem that do not rely on a teacher are studied in the following works <ref> [14, 18, 27, 17] </ref>. We note that Dean et. al. [14] apply a cycling technique related to ours for different purposes. Exploring and navigating in geometric environments is studied extensively.
Reference: [28] <author> A.N. Shah. </author> <title> Pebble automata on arrays. </title> <booktitle> Computer Graphics and Image Processing, </booktitle> <pages> pages 236-246, </pages> <year> 1974. </year>
Reference-contexts: Rabin [23] first proposed the idea of providing the automaton with pebbles to help it explore. This led to a body of work examining the number of pebbles needed to explore various environments <ref> [28, 13, 12, 3, 24] </ref>.
Reference: [29] <author> L. Zhang. </author> <title> A survey of the problem of learning an unknown environment. </title> <type> Unpublished manuscript, </type> <year> 1994. </year>
References-found: 29

