URL: http://www.iihe.ac.be/FtpServer/pub/internet-drafts/draft-ietf-iptel-cpl-00.ps
Refering-URL: http://www.iihe.ac.be/FtpServer/pub/internet-drafts/
Root-URL: http://www.iihe.ac.be
Title: Internet Engineering Task Force IPTEL WG CPL: A Language for User Control of Internet Telephony
Author: INTERNET-DRAFT Lennox/Schulzrinne 
Note: this Memo This document is an Internet-Draft and is in full conformance with all provisions of Section 10 of RFC2026. Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups. Note that other groups may also distribute working documents as Internet-Drafts. To view the list Internet-Draft Shadow Directories, see http://www.ietf.org/shadow.html. Copyright Notice Copyright (c) The Internet Society (1999). All Rights Reserved. This document is  Force. Comments are solicited and should be addressed to the working group's mailing list at iptel@lists.research.bell-labs.com and/or the authors. Contents  
Date: February 26, 1999 Expires: September 1999  
Affiliation: draft-ietf-iptel-cpl-00.ps Columbia University  
Abstract: Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time. It is inappropriate to use Internet-Drafts as reference material or to cite them other than as work in progress. Abstract The Call Processing Language (CPL) is a language that can be used to describe and control Internet telephony services. It is designed to be implementable on either network servers or user agent servers. It is meant to be simple, extensible, easily edited by graphical clients, and independent of operating system or signalling protocol. It is suitable for running on a server where users may not be allowed to execute arbitrary programs, as it has no variables, loops, or ability to run external programs. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Handley, H. Schulzrinne, E. Schooler, and J. Rosenberg, SIP: </author> <title> session initiation protocol, </title> <type> Internet Draft, </type> <institution> Internet Engineering Task Force, </institution> <month> Jan. </month> <year> 1999. </year> <title> Work in progress. </title>
Reference-contexts: 1 Introduction The Call Processing Language (CPL) is a language that can be used to describe and control Internet telephony services. It is not tied to any particular signalling architecture or protocol; it is anticipated that it will be used with both SIP <ref> [1] </ref> and H.323 [2]. The CPL is powerful enough to describe a large number of services and features, but it is limited in power so that it can run safely in Internet telephony servers.
Reference: [2] <author> International Telecommunication Union, </author> <title> Visual telephone systems and equipment for local area networks which provide a non-guaranteed quality of service, Recommendation H.323, </title> <institution> Telecommunication Standardization Sector of ITU, Geneva, Switzerland, </institution> <month> May </month> <year> 1996. </year>
Reference-contexts: 1 Introduction The Call Processing Language (CPL) is a language that can be used to describe and control Internet telephony services. It is not tied to any particular signalling architecture or protocol; it is anticipated that it will be used with both SIP [1] and H.323 <ref> [2] </ref>. The CPL is powerful enough to describe a large number of services and features, but it is limited in power so that it can run safely in Internet telephony servers.
Reference: [3] <author> T. Bray, J. Paoli, and C. M. Sperberg-McQueen, </author> <title> Extensible markup language (XML) 1.0, W3C Recommendation 10-February-1998, World Wide Web Consortium (W3C), </title> <month> Feb. </month> <year> 1998. </year> <note> http://www.w3.org/TR/REC-xml. </note>
Reference-contexts: The language is not Turing-complete, and provides no way to write a loop or a function. The CPL is also designed to be easily created and edited by graphical tools. It is based on XML <ref> [3] </ref>, so parsing it is easy and many parsers for it are publicly available. The structure of the language maps closely to its behavior, so an editor can understand any valid script, even ones written by hand. <p> XML is thoroughly specified by <ref> [3] </ref>, and implementors of this specification should be familiar with that document, but as a brief overview, XML consists of a hierarchical structure of tags; each tag can have a number of attributes.
Reference: [4] <author> S. Bradner, </author> <title> Key words for use in RFCs to indicate requirement levels, </title> <type> BC 2119, </type> <institution> Internet Engineering Task Force, </institution> <month> Mar. </month> <year> 1997. </year>
Reference-contexts: Lennox/Schulzrinne Expires September 1999 [Page 2] INTERNET-DRAFT draft-ietf-iptel-cpl-00.ps February 26, 1999 1.1 Conventions Of This Document In this document, the key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL are to be interpreted as described in RFC 2119 <ref> [4] </ref> and indicate requirement levels for compliant CPL implementations. In examples, non-XML strings such as -action1-, -action2-, and so forth, are sometimes used. These represent further parts of the script which are not relevant to the example in question.
Reference: [5] <author> D. Raggett, A. L. Hors, and I. Jacobs, </author> <title> HTML 4.0 specification, W3C Recommendation revised on 24-Apr-1998, World Wide Web Consortium (W3C), </title> <month> Apr. </month> <year> 1998. </year> <note> http://www.w3.org/TR/REC-html40/. </note>
Reference-contexts: XML is thoroughly specified by [3], and implementors of this specification should be familiar with that document, but as a brief overview, XML consists of a hierarchical structure of tags; each tag can have a number of attributes. It is visually and structurally very similar to HTML <ref> [5] </ref>, as both languages are simplifications of the earlier and larger standard SGML [6]. See figure 2 for the XML document corresponding to the graphical representation of a CPL script in figure 1.
Reference: [6] <author> ISO (International Organization for Standardization), </author> <title> Information processing text and office systems standard generalized markup language (SGML), ISO Standard ISO 8879:1986(E), International Organization for Standardization, </title> <address> Geneva, </address> <month> Oct. </month> <year> 1986. </year>
Reference-contexts: It is visually and structurally very similar to HTML [5], as both languages are simplifications of the earlier and larger standard SGML <ref> [6] </ref>. See figure 2 for the XML document corresponding to the graphical representation of a CPL script in figure 1. Both nodes and outputs in the CPL are represented by XML tags; parameters are represented by XML tag attributes.
Reference: [7] <author> J. Myers and C. Newman, </author> <title> ACAP application configuration access protocol, Request for Comments (Proposed Standard) 2244, </title> <institution> Internet Engineering Task Force, </institution> <month> Dec. </month> <year> 1997. </year>
Reference-contexts: CPL servers MUST support the two comparators i;octet, indicating literal comparison of UTF-8 octets, and i;ascii-casemap, which indicates that alphabetic characters in the US-ASCII range should have their upper and lower cases compared the same. If no comparitor is specified, i;ascii-casemap is assumed. Comparators are defined by ACAP <ref> [7] </ref>; for more information, see that specification. CPL servers SHOULD verify at script submission time that all requested comparators are supported by the server.
Reference: [8] <author> F. Dawson and D. Stenerson, </author> <title> Internet calendaring and scheduling core object specification (icalen-dar), Request for Comments (Proposed Standard) 2445, </title> <institution> Internet Engineering Task Force, </institution> <month> Nov. </month> <year> 1998. </year> <note> Lennox/Schulzrinne Expires September 1999 [Page 18] INTERNET-DRAFT draft-ietf-iptel-cpl-00.ps February 26, </note> <year> 1999 </year>
Reference-contexts: Note: while it would be nice to allow clients to specify their own time zone, there doesn't currently appear to be any standard registry of time zone names, and we don't want to have to define one just for the CPL. Leveraging off of the iCalendar standard <ref> [8] </ref> would be nice, but their time zone specification seems excessively heavyweight it defines time zone rules explicitly (and very verbosely) in its own syntax. Just specifying time zones as UTC offsets would be possible, but this doesn't cover daylight-savings time rules. Thus, we currently ignore the problem.
Reference: [9] <author> E. Maler and S. DeRose, </author> <title> XML linking language (XLink), Working Draft 3-March-1998, World Wide Web Consortium (W3C), </title> <month> Mar. </month> <year> 1998. </year> <note> http://www.w3.org/TR/WD-xlink. </note>
Reference-contexts: Every link ref MUST refer to a link ID specified in the same CPL script. No external links are permitted. If any subsequent version ever defines external linkages, it will use a different tag, perhaps XLINK <ref> [9] </ref>. When the CPL server initially processes the script, it MUST verify that no link refers to a node that is its parent in the tree; i.e., it MUST verify that the directed graph created by the tree and the links is acyclic.
Reference: [10] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest, </author> <title> Introduction to Algorithms. </title> <address> New York: </address> <publisher> McGraw-Hill, </publisher> <year> 1990. </year>
Reference-contexts: If it is not, the server SHOULD treat this error in the same manner as any other syntax error in a script. (This verification is algorithmically simply a matter of verifying that a depth-first search of the directed graph contains no back edges; see, for instance, <ref> [10] </ref>, Lemma 23.10. It can typically be done simultaneously with the resolution of links.) If cycles were allowed in the graph, it would introduce the possibility of non-terminating CPL scripts, a possi bility our requirements specifically excluded.

References-found: 10

