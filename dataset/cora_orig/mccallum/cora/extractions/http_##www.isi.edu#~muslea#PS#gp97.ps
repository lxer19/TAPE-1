URL: http://www.isi.edu/~muslea/PS/gp97.ps
Refering-URL: http://www.isi.edu/~muslea/papers.html
Root-URL: http://www.isi.edu
Email: muslea@isi.edu  
Title: A General-Purpose AI Planning System Based on the Genetic Programming Paradigm  
Author: Ion Muslea 
Address: 4676 Admiralty Way, Office 961 Marina del Rey, CA 90292-6695  
Affiliation: Information Sciences Institute/University of Southern California  
Abstract: In this paper we describe SINERGY, which is a general-purpose, AI planning system that is based on the genetic programming paradigm. Rather than reasoning about the world it is planning for, SINERGY uses artificial selection, recombination and fitness measure to generate linear plans that solve conjunctive goals. In order to reduce the search space and to facilitate natural domain descriptions, SINERGY introduces a domain-independent mechanism that allows the use of strongly-typed genetic programming functions. We ran SIN-ERGY on several domains (e.g., the blocks-world problem, the briefcase problem, and the robot navigation problem), and the experimental results show that our planner is capable of handling problem instances that are two orders of magnitude larger than the ones solved by UCPOP. In order to further improve SINERGY, we propose two major extensions to our planning system: a formalism for using hierarchical planning operators, and a framework for planning in dynamic en vironments.
Abstract-found: 1
Intro-found: 1
Reference: <author> Ambite, J.L. and C. </author> <title> Knoblock 1997. Planning by Rewriting: Efficiently Generating High-Quality Plans. </title> <booktitle> To appear in Proceedings of the Fourteenth National Conference on Artificial Intelligence (AAAI97). </booktitle>
Reference-contexts: More recently, we witnessed the occurrence of a new type of planning systems: the stochastic planners. The new approach trades in the completeness of the planner for the speed up of the search process. Planners like Sat-Plan (Kautz and Selman 1996) or PBR <ref> (Ambite and Knoblock 1997) </ref> are at least one order of magnitude faster than the classic planning systems, and they are also capable of handling significantly larger problem instances. In this paper we present SINERGY, which is a general-purpose, stochastic AI planner based on the genetic programming paradigm (Koza 1992).
Reference: <author> Bylander, T. </author> <year> 1992. </year> <title> Complexity Results for Extended Planning. </title> <booktitle> In Artificial Intelligence Planning Systems: Proceedings of First International Conference (AISP92), </booktitle> <pages> Pages 20-27. </pages>
Reference: <author> Chapman, D. </author> <year> 1987. </year> <title> Planning for Conjunctive Goals. </title> <journal> In Artificial Intelligence, </journal> <volume> 32, </volume> <pages> Pages 333-377. </pages>
Reference: <author> Etzioni, O. </author> <year> 1993. </year> <title> Acquiring search-control knowledge via static analysis. </title> <journal> In Artificial Intelligence, </journal> <volume> 62(2), </volume> <pages> Pages 255-302. </pages>
Reference: <author> Fikes, R. and N. </author> <title> Nilsson 1971. STRIPS: A New Approach to the Application of Theorem Proving to Problem Solving. </title> <journal> In Artificial Intelligence, </journal> <volume> 2, </volume> <pages> Pages 189-208. </pages>
Reference-contexts: Most of the traditional AI planners define their planning actions in a declarative, STRIPS-like manner <ref> (Fikes and Nilsson 1971) </ref>. In contrast, SINERGY takes an approach similar to NOAH (Sacerdoti 1975) and requires a procedural description of the planning operators.
Reference: <author> Friedland P., and Y. </author> <month> Imasaki </month> <year> 1985. </year> <title> The Concept and Implementation of Skeletal Plans. </title> <journal> In Journal of Automated Reasoning, </journal> <volume> 1, </volume> <pages> Pages 161-208. </pages>
Reference-contexts: In order to cope with the combinatorial explosion of the search problem, AI researchers proposed a wide vari ety of solutions, from search control rules (Weld 1994; Etzioni 1993; Minton 1996) to abstraction and hierarchical planning (Knoblock 1991; Knoblock 1994) to skeletal planning <ref> (Friedland and Iamasaki 1985) </ref>. More recently, we witnessed the occurrence of a new type of planning systems: the stochastic planners. The new approach trades in the completeness of the planner for the speed up of the search process.
Reference: <author> Handley, S. </author> <year> 1994. </year> <title> The Automatic Generation of Plans for a Mobile Robot via Genetic Programming with Automatically Defined Functions. </title> <editor> In Kinnear, K.E. (editor). </editor> <booktitle> Advances in Genetic Programming. </booktitle> <address> Cambridge, MA: </address> <publisher> MIT Press. </publisher> <pages> Pages 391-407. </pages>
Reference: <author> Holland, J.H. </author> <year> 1992. </year> <booktitle> Adaptation in Natural and Artificial Systems. </booktitle> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: We tested SINERGY on several domains, and the experimental results show that the planner is capable of handling problem instances that are one to two orders of magni tude larger than the ones solved by UCPOP. 2. Genetic Programming Genetic programming represents a generalization of genetic algorithms <ref> (Holland 1992) </ref> in the sense that GP creates and manipulates populations of computer programs. GP problem solvers can be seen as two-phase processes. First, they randomly generate an initial generation of programs that are expressed as function compositions.
Reference: <author> Joslin, D. and J. </author> <title> Roach 1989. A Theoretical Analysis of Conjunctive-Goal Problems. </title> <journal> In Artificial Intelligence, </journal> <volume> 41(1), </volume> <pages> Pages 97-106. </pages>
Reference: <author> Kautz, H. and B. </author> <title> Selman 1996. Pushing the Envelope: Planning, Propositional Logic, and Stochastic Search. </title> <booktitle> In Proceedings of Thirteenth National Conference of Artificial Intelligence, </booktitle> <pages> Pages 1194-1201. </pages>
Reference-contexts: More recently, we witnessed the occurrence of a new type of planning systems: the stochastic planners. The new approach trades in the completeness of the planner for the speed up of the search process. Planners like Sat-Plan <ref> (Kautz and Selman 1996) </ref> or PBR (Ambite and Knoblock 1997) are at least one order of magnitude faster than the classic planning systems, and they are also capable of handling significantly larger problem instances. <p> AI Planning and Genetic Program ming In order to solve an AI planning problem, SINERGY uses an approach similar to the one described in <ref> (Kautz and Selman 1996) </ref>: it converts the given problem P 1 to an equivalent problem P 2 of a different nature, it solves P 2 based on a stochastic algorithm, and it converts the result of P 2 to a solution for P 1 .
Reference: <author> Knoblock, C. </author> <year> 1994. </year> <title> Automatically Generating Abstractions for Planning. </title> <journal> In Artificial Intelligence, </journal> <volume> 68(2), </volume> <pages> Pages 243-302. </pages>
Reference: <author> Knoblock, C. </author> <year> 1991. </year> <title> Search Reduction in Hierarchical Problem Solving. </title> <booktitle> In Proceedings of the National Conference on Artificial Intelligence, </booktitle> <pages> Pages 686-691. </pages>
Reference: <author> Koza, J. </author> <year> 1994. </year> <title> Genetic Programming II: Automatic Discovery of Reusable Programs. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference: <author> Koza, J. </author> <year> 1992. </year> <title> Genetic Programming: On the Programming of Computers by Means of Natural Selection. </title> <address> Cambridge, MA: </address> <publisher> The MIT Press. </publisher>
Reference-contexts: In this paper we present SINERGY, which is a general-purpose, stochastic AI planner based on the genetic programming paradigm <ref> (Koza 1992) </ref>. Genetic programming (GP) is an automatic programming technique that uses evolution-like operations (e.g., reproduction and cross-over) to generate and manipulate computer programs. <p> For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. Similarly, the versions of the blocks world problem solved in <ref> (Koza 1992) </ref> and (Spector 1994) deal with a single domain concept (i.e., the BLOCK concept), and, consequently, there is no need to verify the type of the objects handled by the operators.
Reference: <author> Minton, S. </author> <year> 1996. </year> <title> Is There Any Need for Domain-Dependent Control Information?: A Reply. </title> <booktitle> In Proceedings of the Thirteenth National Conference on Artificial Intelligence, </booktitle> <pages> Pages 855-862. </pages>
Reference: <author> Sacerdoti, E. </author> <year> 1975. </year> <title> The Nonlinear Nature of Plans. </title> <booktitle> In Advance Papers of the Fourth International Conference on Artificial Intelligence (IJCAI-75), </booktitle> <pages> Pages 204-214. </pages>
Reference-contexts: Most of the traditional AI planners define their planning actions in a declarative, STRIPS-like manner (Fikes and Nilsson 1971). In contrast, SINERGY takes an approach similar to NOAH <ref> (Sacerdoti 1975) </ref> and requires a procedural description of the planning operators. In our case, the procedural approach was motivated by the use of the underlying GP problem solver that must simulate the execution of each plan in order to evaluate its fitness.
Reference: <author> Spector, L. </author> <year> 1994. </year> <title> Genetic Programming and AI Planning Systems. </title> <booktitle> In Proceedings of Twelfth National Conference of Artificial Intelligence, </booktitle> <pages> Pages 1329-1334. </pages>
Reference-contexts: For instance, Handley solves the robot navigation problem by defining a GP encoding that uses only terminals. Similarly, the versions of the blocks world problem solved in (Koza 1992) and <ref> (Spector 1994) </ref> deal with a single domain concept (i.e., the BLOCK concept), and, consequently, there is no need to verify the type of the objects handled by the operators.
Reference: <author> Weld, D. </author> <year> 1994. </year> <title> An Introduction to Least-Committed Planning. </title> <journal> In AI Magazine, </journal> <volume> 15(4), </volume> <pages> Pages 27-60. </pages>
References-found: 18

