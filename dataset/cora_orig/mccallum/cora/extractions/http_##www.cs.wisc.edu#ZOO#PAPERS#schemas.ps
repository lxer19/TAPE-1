URL: http://www.cs.wisc.edu/ZOO/PAPERS/schemas.ps
Refering-URL: http://www.cs.wisc.edu/ZOO/papers.html
Root-URL: 
Title: CONCEPTUAL SCHEMAS: MULTI-FACETED TOOLS FOR DESKTOP SCIENTIFIC EXPERIMENT MANAGEMENT  
Author: YANNIS E. IOANNIDIS MIRON LIVNY 
Keyword: Scientific databases, experiment management, conceptual model ing, graphical user interfaces, object-oriented data models  
Date: Received September 1, 1992 Revised November 1, 1992  
Address: Madison, WI 53706, USA  
Affiliation: Computer Sciences Department, University of Wisconsin  
Abstract: In this paper, we identify some of the fundamental issues that must be addressed in designing a desktop Experiment Management System (EMS). We develop an abstraction of the set of activities performed by scientists throughout the course of an experimental study, and based on that abstraction we propose an EMS architecture that can support all such activities. The proposed EMS architecture is centered around the extensive use of conceptual schemas, which express the structure of information in experimental studies. Schemas are called to play new roles that are not usually found in traditional database systems. We provide a detailed exposition of these new roles and describe certain characteristics that the data model of the EMS must have in order for schemas expressed in it to successfully play these roles. Finally, we present the specifics of our own effort to develop an EMS, focusing on the main features of the data model of the system, which we have developed based on the needs of experiment management. 
Abstract-found: 1
Intro-found: 1
Reference: [AGS90] <author> R. Agrawal, N. H. Gehani, and J. Srinivasan. </author> <title> OdeView: The graphical interface to ode. </title> <booktitle> In Proc. of the 1990 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 34-43, </pages> <address> Atlantic City, NJ, </address> <month> May </month> <year> 1990. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [ASL89] <author> A. M. Alashqur, S. Y. W. Su, and H. Lam. OQL: </author> <title> A query language for manipulating object-oriented databases. </title> <booktitle> In Proc. 15th International VLDB Conference, </booktitle> <pages> pages 433-442, </pages> <address> Amsterdam, The Netherlands, </address> <month> August </month> <year> 1989. </year> <month> 22 </month>
Reference-contexts: Moose Query Language The query language of Moose is very similar to SQL and also has the flavor of other declarative object-oriented languages <ref> [ASL89, BCD89, CDV88, KKS92, KL89] </ref>. Since 18 the query language is not the focus of this work, we are not describing it in any detail. We only want to point out that the fundamental construct in the language for traversing objects is the path expression.
Reference: [BCD89] <author> F. Bancilhon, S. Cluet, and C. Delobel. </author> <title> A query language for the O2 object-oriented database system. </title> <booktitle> In Proc. 2nd International Workshop on Database Programming Languages, </booktitle> <pages> pages 122-138, </pages> <address> Salishan Lodge, CA, </address> <month> June </month> <year> 1989. </year>
Reference-contexts: Moose Query Language The query language of Moose is very similar to SQL and also has the flavor of other declarative object-oriented languages <ref> [ASL89, BCD89, CDV88, KKS92, KL89] </ref>. Since 18 the query language is not the focus of this work, we are not describing it in any detail. We only want to point out that the fundamental construct in the language for traversing objects is the path expression.
Reference: [BH86] <author> D. Bryce and R. Hull. </author> <title> SNAP: A graphics-based schema manager. </title> <booktitle> In Proc. 2nd International Conference on Data Engineering, </booktitle> <address> Los Angeles, CA, </address> <month> February </month> <year> 1986. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [CDV88] <author> M. J. Carey, D. J. DeWitt, and S. L. Vandenberg. </author> <title> A data model and query language for EXODUS. </title> <booktitle> In Proc. of the 1988 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 413-423, </pages> <address> Chicago, IL, </address> <month> June </month> <year> 1988. </year>
Reference-contexts: Moose Query Language The query language of Moose is very similar to SQL and also has the flavor of other declarative object-oriented languages <ref> [ASL89, BCD89, CDV88, KKS92, KL89] </ref>. Since 18 the query language is not the focus of this work, we are not describing it in any detail. We only want to point out that the fundamental construct in the language for traversing objects is the path expression.
Reference: [CM90] <author> A. F. Cardenas and D. McLeod. </author> <title> Research Foundations in Object-Oriented and Semantic Database Systems. </title> <publisher> Prentice Hall, </publisher> <address> Englewood Cliffs, NJ, </address> <year> 1990. </year>
Reference-contexts: The relational model is in general inadequate due to its simplicity. Its unique semantic primitive, the relation, is not powerful enough to express every aspect of an experiment design. The much richer object-oriented and semantic data models <ref> [CM90, ZM89] </ref> are the only serious candidates for such databases. Among other features, such data models offer primitives that can be used to represent complex objects (parts-subparts), collection objects (sets), and class hierarchies with inheritance, which are very common in experiments.
Reference: [FJP90] <author> J. C. French, A. K. Jones, and J. L. Pfaltz. </author> <title> Summary of the final report of the NSF workshop on scientific database management. </title> <journal> ACM-SIGMOD record, </journal> <volume> 19(4) </volume> <pages> 32-40, </pages> <month> December </month> <year> 1990. </year>
Reference-contexts: Several technical problems need to be solved before Scientific Database Systems can become a reality. An excellent account of these problems together with an overall picture of the major scientific projects that are currently under way is given in the summary of the NSF Workshop on Scientific Database Management <ref> [FJP90] </ref>. The widespread availability of the unprecedented collections of data gathered as part of the above projects will generate much scientific activity at the level of individual scientists or small teams of scientists.
Reference: [Fog84] <author> D. Fogg. </author> <title> Lessons from a "Living In a Database" graphical query interface. </title> <booktitle> In Proc. of the 1984 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 100-106, </pages> <address> Boston, MA, </address> <month> June </month> <year> 1984. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [GGKZ85] <author> K. J. Goldman, S. A. Goldman, P. C. Kanellakis, and S. B. Zdonik. </author> <title> ISIS: Interface for a semantic information system. </title> <booktitle> In Proc. of the 1985 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 328-342, </pages> <address> Austin, TX, </address> <month> May </month> <year> 1985. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [HL92] <author> J. Hartmanis and H. Lin. </author> <title> Computing the Future. </title> <publisher> National Academy Press, </publisher> <address> Washington, DC, </address> <year> 1992. </year>
Reference-contexts: It also becomes clear that the conceptual schema undertakes these two roles not only within the EMS, but also in interactions between collaborating scientists as well. This can prove extremely important in the future, where multidisciplinary studies with large numbers of scientists participating will become more common <ref> [HL92] </ref>. 12 4.2. Necessary Data Model Characteristics In order for schemas to play the above two roles successfully, they have to be expressed in a data model that has the following three characteristics. First, for R1, the data model needs to be of high expressive power.
Reference: [IL89] <author> Y. Ioannidis and M. Livny. MOOSE: </author> <title> Modeling objects in a simulation environment. </title> <editor> In G. X. Ritter, editor, </editor> <booktitle> Information Processing 89, </booktitle> <pages> pages 821-826. </pages> <publisher> North Holland, </publisher> <month> August </month> <year> 1989. </year>
Reference-contexts: Moose: A Data Model for Scientific Experiments The EMS that we are developing is based on the Moose (Modeling Objects Of Scientific Experiments) object-oriented data model <ref> [IL89] </ref>. Although Moose is targeted for experimental data management, it is applicable in much more general settings as well. The salient features of Moose are described below. 5.1. Semantic Primitives of Moose We first present the semantic primitives of Moose that define its expressive power.
Reference: [ILH92] <author> Y. Ioannidis, M. Livny, and E. Haber. </author> <title> Graphical user interfaces for the management of scientific experiments and data. </title> <journal> ACM-Sigmod Record, </journal> <volume> 20(1) </volume> <pages> 47-53, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Therefore, the key features that have been included in the graph editor deal with making large schemas more manageable. These are the following: (a) allowing parts of the schema to be made invisible; (b) collapsing subgraphs into single nodes; and (c) using `reference' nodes to eliminate very long arcs <ref> [ILH92] </ref>. The above features are expected to prove very useful in supporting all aspects of schema use mentioned in Section 4. This expectation is justified by the results of our exposing the graph editor developed to `real' users, i.e., domain scientists, for experiment design (first stage in Figure 1). <p> The main emphasis of his research is on simulating the growth of plants based on various environmental, soil, and ecological parameters. The primary tool in his studies is the Cupid model <ref> [ILH92] </ref>, a Fortran program that simulates the necessary plant growth processes. The Cupid group has been using the graph editor that we have developed to document the structure of the input and output parameters of his model in the form of a Moose schema. <p> It is shown in Figure 5 as a screen dump of the graph editor developed. The feedback received from the Cupid group, which used Moose and the graph editor to design the schema of Figure 5 has been very encouraging <ref> [ILH92] </ref>. The main benefits expressed follow quite closely the analysis of desirable features of the data model and the system described in earlier sections.
Reference: [KKS92] <author> M. Kifer, W. Kim, and Y. Sagiv. </author> <title> Querying object-oriented databases. </title> <booktitle> In Proc. of the 1992 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 383-392, </pages> <address> San Diego, CA, </address> <month> June </month> <year> 1992. </year>
Reference-contexts: Moose Query Language The query language of Moose is very similar to SQL and also has the flavor of other declarative object-oriented languages <ref> [ASL89, BCD89, CDV88, KKS92, KL89] </ref>. Since 18 the query language is not the focus of this work, we are not describing it in any detail. We only want to point out that the fundamental construct in the language for traversing objects is the path expression.
Reference: [KL89] <author> M. Kifer and G. Lausen. F-logic: </author> <title> A higher-order language for reasoning about objects, inheritance, and scheme. </title> <booktitle> In Proc. of the 1989 ACM-SIGMOD Conference on the Management of Data, </booktitle> <pages> pages 134-146, </pages> <address> Portland, OR, </address> <month> June </month> <year> 1989. </year> <month> 23 </month>
Reference-contexts: Moose Query Language The query language of Moose is very similar to SQL and also has the flavor of other declarative object-oriented languages <ref> [ASL89, BCD89, CDV88, KKS92, KL89] </ref>. Since 18 the query language is not the focus of this work, we are not describing it in any detail. We only want to point out that the fundamental construct in the language for traversing objects is the path expression.
Reference: [KM89] <author> M. Kuntz and R. Melchert. </author> <title> Pasta-3's graphical query language: Di--rect manipulation, cooperative queries, full expressive power. </title> <booktitle> In Proc. 15th International VLDB Conference, </booktitle> <pages> pages 97-105, </pages> <address> Amsterdam, The Netherlands, </address> <month> August </month> <year> 1989. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [Liv87] <author> M. Livny. </author> <title> DELAB a simulation laboratory. </title> <booktitle> In Proc. of the 1987 Winter Simulation Conference, </booktitle> <address> Atlanta, GA, </address> <month> December </month> <year> 1987. </year>
Reference-contexts: Thus, similarly to the large-scale projects, these smaller studies will also suffer from the lack of appropriate technical support. The above is perceived as a major problem for experimental studies in most scientific disciplines even today. Based on our own experience with experimental computer science <ref> [Liv87] </ref> and from joint work that we have undertaken with scientists from a wide range of experimental disciplines (biotechnology, genetics, earth and space sciences, soil sciences, and high-energy physics), experiment and data management have become the bottleneck in such studies.
Reference: [MF91] <author> V. M. Markowitz and W. Fang. </author> <title> SDT a database schema design and translation tool. </title> <type> Technical Report LBL-27843, </type> <institution> Lawrence Berkeley Laboratory, Berkeley, </institution> <address> CA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: Examples include the `Laboratory Notebook' project in the Los Alamos National Laboratory [Nel90] and the effort to develop data management tools for scientific applications in the Lawrence Berkeley Laboratory <ref> [MF91, SM91, MS92] </ref>. Several aspects of our effort are found in at least some of these projects: schemas play several important roles, and intuitive (usually graphical) user interfaces are developed so that scientists may use them without much database expertise. On there other hand, several differences exist as well.
Reference: [MS92] <author> V. M. Markowitz and A. Shoshani. </author> <title> Query specification and translation tools. </title> <type> Technical Report LBL-31155, </type> <institution> Lawrence Berkeley Laboratory, Berkeley, </institution> <address> CA, </address> <month> April </month> <year> 1992. </year>
Reference-contexts: Examples include the `Laboratory Notebook' project in the Los Alamos National Laboratory [Nel90] and the effort to develop data management tools for scientific applications in the Lawrence Berkeley Laboratory <ref> [MF91, SM91, MS92] </ref>. Several aspects of our effort are found in at least some of these projects: schemas play several important roles, and intuitive (usually graphical) user interfaces are developed so that scientists may use them without much database expertise. On there other hand, several differences exist as well.
Reference: [Nel90] <author> D. Nelson. </author> <title> The laboratory notebook technical manual. </title> <type> Technical Report LA-UR 88-1256, </type> <institution> Los Alamos National Laboratory, </institution> <address> Los Alamos, NM, </address> <year> 1990. </year>
Reference-contexts: In addition to our own effort to develop an EMS, some research laboratories have also been engaged in similar work trying to provide database support for scientific data. Examples include the `Laboratory Notebook' project in the Los Alamos National Laboratory <ref> [Nel90] </ref> and the effort to develop data management tools for scientific applications in the Lawrence Berkeley Laboratory [MF91, SM91, MS92].
Reference: [P + 92] <author> J. Paredaens et al. </author> <title> An overview of GOOD. </title> <journal> ACM-SIGMOD Record, </journal> <volume> 20(1) </volume> <pages> 25-31, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [RC87] <author> T. R. Rogers and R. G. G. Cattell. </author> <title> Entity-relationship database user interfaces. </title> <booktitle> In Proc. of the 6th International Conference on ER Approach, </booktitle> <address> New York, NY, </address> <month> November </month> <year> 1987. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [SM91] <author> E. Szeto and V. M. Markowitz. </author> <title> ERDRAW a graphical schema specification tool. </title> <type> Technical Report LBL-PUB-3084, </type> <institution> Lawrence Berkeley Laboratory, Berkeley, </institution> <address> CA, </address> <month> May </month> <year> 1991. </year>
Reference-contexts: Examples include the `Laboratory Notebook' project in the Los Alamos National Laboratory [Nel90] and the effort to develop data management tools for scientific applications in the Lawrence Berkeley Laboratory <ref> [MF91, SM91, MS92] </ref>. Several aspects of our effort are found in at least some of these projects: schemas play several important roles, and intuitive (usually graphical) user interfaces are developed so that scientists may use them without much database expertise. On there other hand, several differences exist as well.
Reference: [WK82] <author> H. K. T. Wong and A I. Kuo. </author> <title> GUIDE: Graphical user interface for database exploration. </title> <booktitle> In Proc. 8th International VLDB Conference, </booktitle> <address> Mexico City, Mexico, </address> <month> September </month> <year> 1982. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [WTM + 92] <author> J. Wiener, O. Tsatalos, R. Miller, M. Livny, and Y. Ioannidis. </author> <title> Direct modeling of context-dependent associations in semantic data models, </title> <month> November </month> <year> 1992. </year> <note> In preparation. </note>
Reference-contexts: In the latter case, the scientist would have to constantly use some unintuitive numbering to be able to indirectly associate elements to parameter values. Finally, in Moose, part-of relationships (and less often other relationships as well) can be declared as context-dependent <ref> [WTM + 92] </ref>. A relationship of this type may be used to capture an association between a pair of object classes that depends on a third class as well.
Reference: [Zei76] <author> B. P. Zeigler. </author> <title> Theory of Modeling and Simulation. </title> <publisher> John Wiley & Sons, </publisher> <address> New York, N.Y., </address> <year> 1976. </year>
Reference-contexts: It essentially consists of multiple loops traversed by the researcher multiple times in the course of a study. In the figure, the following stages can be identified: Experiment Design: In this stage, the experimental frame of a study is laid out <ref> [Zei76] </ref>, that is, the structure of each experiment is defined. The experimental frame determines the variables that will be controlled in the experiments and defines what will be measured as output.
Reference: [Zlo77] <author> M. M. Zloof. Query-by-Example: </author> <title> A data base language. </title> <journal> IBM Systems Journal, </journal> <volume> 16(4) </volume> <pages> 324-343, </pages> <year> 1977. </year>
Reference-contexts: Such specifications are useful both in interactions between scientists and in interactions between a scientist and the EMS. (Specifying data is not a new idea; although it has not been extensively used in commercial systems, it has been proposed and studied in the context of many research prototypes, e.g., <ref> [AGS90, BH86, Fog84, GGKZ85, KM89, P + 92, RC87, WK82, Zlo77] </ref>.) The ability of the schema to play this role is important in the data collection and data exploration stages (Figure 1).
Reference: [ZM89] <author> S. B. Zdonik and D. Maier. </author> <title> Readings in Object-Oriented Database Systems. </title> <publisher> Morgan Kaufmann, </publisher> <address> San Mateo, CA, </address> <year> 1989. </year> <month> 24 </month>
Reference-contexts: The relational model is in general inadequate due to its simplicity. Its unique semantic primitive, the relation, is not powerful enough to express every aspect of an experiment design. The much richer object-oriented and semantic data models <ref> [CM90, ZM89] </ref> are the only serious candidates for such databases. Among other features, such data models offer primitives that can be used to represent complex objects (parts-subparts), collection objects (sets), and class hierarchies with inheritance, which are very common in experiments.
References-found: 27

