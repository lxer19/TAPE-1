URL: ftp://ftp.db.toronto.edu/pub/noik/gd94.ps.Z
Refering-URL: http://www.cs.toronto.edu/~noik/cv.html
Root-URL: 
Title: Encoding Presentation Emphasis Algorithms for Graphs  
Author: Emanuel G. Noik 
Address: Toronto, 6 King's College Rd., Toronto, ON, Canada M4S 1A1  
Affiliation: CSRI, University of  
Abstract: While graphs can effectively visualize one or more relations on a set of elements, drawings of large graphs can be difficult to understand. As such, many presentation emphasis techniques for visualizing graphs such as fisheye views have been proposed. A recent survey paper [9] described an abstract space of techniques and identified common shortcomings. Here we outline a high-level language that addresses several of these limitations; the language is used to: 1) select subsets of graph elements; 2) compute a real-valued priority for each element; and, 3) encode presentation strategies that automatically emphasize elements based on subset membership and priority.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> M.P. Consens, F. Ch. Eigler, M.Z. Hasan, A.O. Mendelzon, E.G. Noik, A.G. Ryman, and D. </author> <title> Vista. Architecture and applications of the Hy+ visualization system. </title> <journal> IBM Systems Journal, </journal> <volume> 33(3) </volume> <pages> 458-476, </pages> <month> Aug. </month> <year> 1994. </year>
Reference-contexts: We employ the hygraph formalism as used in the Hy+ system <ref> [1] </ref> to express nested graphs. <p> (p; f ) DOI (p; ff g) = AP I (p) + F P I (p; ff g) = AP I (p) Dist (p; f ) Since AP I values often cannot be directly compared to Dist values, and since it is more convenient to assume that Dist is in <ref> [0; 1] </ref> when formulating expressions for f:resp, we assume that all priorities (API, Dist, FPI, and DOI) are normalized before they are used. <p> In this formalization, DOI (p; F ) will be in <ref> [0; 1] </ref> for all points: the most interesting points will have a DOI of 1 and the least 0. 3 Limitations of Previous Work A recent survey of presentation emphasis techniques for visualizing graphs [9] identified several common limitations. <p> The current version of Dye, for example, includes support for computing (the lengths of and elements along) shortest paths [4]. The general syntax of a Dye program is: 3 Graphite <ref> [1, 8] </ref> can be thought of as the raw material (carbon) for producing drawings of graphs; Dye adds colour (visual emphasis through the systematic manipulation of various graphical attributes including colour) to Graphite. &lt;program&gt; ::= ["sets" [&lt;set_assignment&gt;]+ ] ["fpresponse" [&lt;response_function&gt;]+ ] ["doi" [&lt;doi_assignment&gt;]+ ] ["actions" [&lt;action_block&gt;]+ ] Unfortunately, due to strict
Reference: 2. <author> G. Di Battista, P. Eades, R. Tamassia, and I. G. Tollis. </author> <title> Algorithms for drawing graphs: an annotated bibliography. </title> <journal> Comput. Geom. Theory Appl., </journal> <note> to appear. Preprint avail. by anon. ftp from ftp.cs.brown.edu:pub/papers/compgeo/. </note>
Reference-contexts: Since the blob containment relation is restricted to be hierarchical, blobs are easily depicted by visual containment (e.g.,by nesting closed rectangular or polygonal regions). Graph layouts may be hand-drawn or may be generated automatically by a graph layout algorithm <ref> [2] </ref>. 2.2 Emphasis-related Concepts The following terminology comes in large part from the generalized fisheye view formalism [5].
Reference: 3. <author> K.M. Fairchild, S.E. Poltrock, and G.W. Furnas. Semnet: </author> <title> Three-dimensional graphic representations of large knowledge bases. </title> <editor> In R. Guindon, editor, </editor> <booktitle> Cognitive Science and its Applications for Human-Computer Interaction, </booktitle> <pages> pages 201-233. </pages> <publisher> Lawrence Erlbaum Associates, </publisher> <year> 1988. </year>
Reference-contexts: elements rather than interesting ones. techniques that generate adorned views [9] views in which elements are empha-sized by varying other graphical attributes such as colour, shading, line style and thickness, as well as audio [7], and various types of motion (e.g., in-betweening animation [11], vertical oscillations and small random movements <ref> [3] </ref>, and vibration or pulsing [12]). A quick glance at a presentation graphics text (e.g., [13]) suggests that many intriguing possibilities remain unexplored. 2. Client priority algorithms: most existing techniques use fixed (domain-dependent) algorithms to compute priorities.
Reference: 4. <author> R.W. Floyd. </author> <title> Algorithm 97: Shortest path. </title> <journal> Communications of the ACM, </journal> <volume> 5(6):345, </volume> <year> 1962. </year>
Reference-contexts: In addition, Dye is extensible algorithms can be added to evaluate queries that cannot be expressed in relational algebra (e.g.,transitive closure). The current version of Dye, for example, includes support for computing (the lengths of and elements along) shortest paths <ref> [4] </ref>.
Reference: 5. <author> G.W. Furnas. </author> <title> Generalized fisheye views. </title> <booktitle> In ACM CHI '86, </booktitle> <pages> pages 16-23, </pages> <address> Boston, MA, </address> <month> Apr. </month> <year> 1986. </year> <note> ACM. </note>
Reference-contexts: In response, Furnas suggested an analogy to the wide angle or fisheye lens: the generalized fisheye view <ref> [5] </ref>. By balancing local detail and global context, fisheye views (FEVs) display information at several levels of abstraction simultaneously. <p> Graph layouts may be hand-drawn or may be generated automatically by a graph layout algorithm [2]. 2.2 Emphasis-related Concepts The following terminology comes in large part from the generalized fisheye view formalism <ref> [5] </ref>. The generalized FEV metaphor is based on the workings of the fisheye or very wide angle lens used in photography, which magnifies the image at multiple levels greatest near the focus and least in the periphery.
Reference: 6. <author> T.R. Henry and S.E. Hudson. </author> <title> Interactive graph layout. </title> <booktitle> In ACM UIST '91, </booktitle> <pages> pages 55-64. </pages> <publisher> ACM, </publisher> <year> 1991. </year>
Reference-contexts: The layout attribute directs the Graphite layout engine to use specific layout algorithms for selected elements of the visualization, which realizes a composite layout strategy <ref> [6] </ref>. Other attributes such as line style and width, and colour do not typically impact the layout phase, and are therefore only used in the final rendering phase. 6 Summary We have argued that current approaches for incorporating visual emphasis in graph visualization are too limited.
Reference: 7. <author> B. Johnson and B. Shneiderman. </author> <title> Tree-maps: A space-filling approach to the visualization of hierarchical information structures. </title> <booktitle> In IEEE Visualization '91, </booktitle> <pages> pages 284-291, </pages> <address> San Diego, CA, </address> <month> Oct. </month> <year> 1991. </year>
Reference-contexts: study of 2 Peripheral points are convenient in situations where it is easier to identify uninteresting elements rather than interesting ones. techniques that generate adorned views [9] views in which elements are empha-sized by varying other graphical attributes such as colour, shading, line style and thickness, as well as audio <ref> [7] </ref>, and various types of motion (e.g., in-betweening animation [11], vertical oscillations and small random movements [3], and vibration or pulsing [12]). A quick glance at a presentation graphics text (e.g., [13]) suggests that many intriguing possibilities remain unexplored. 2.
Reference: 8. <author> E.G. Noik. Graphite: </author> <title> A suite of hygraph visualization utilities. </title> <editor> In A. O. Mendelzon, editor, </editor> <title> Declarative database visualization: recent papers from the Hy+/GraphLog project, </title> <type> pages 108-126. Tech. rep. </type> <institution> CSRI-285, U. of Toronto, </institution> <month> Jul. </month> <year> 1993. </year>
Reference-contexts: The current version of Dye, for example, includes support for computing (the lengths of and elements along) shortest paths [4]. The general syntax of a Dye program is: 3 Graphite <ref> [1, 8] </ref> can be thought of as the raw material (carbon) for producing drawings of graphs; Dye adds colour (visual emphasis through the systematic manipulation of various graphical attributes including colour) to Graphite. &lt;program&gt; ::= ["sets" [&lt;set_assignment&gt;]+ ] ["fpresponse" [&lt;response_function&gt;]+ ] ["doi" [&lt;doi_assignment&gt;]+ ] ["actions" [&lt;action_block&gt;]+ ] Unfortunately, due to strict <p> FPI and is used to vary node size through the v.s.x and v.s.y scaling primitives. 5 Implementation Dye was implemented as a combination lex tokenizer and yacc parser that generates C++ source code that is automatically compiled and dynamically linked with the Dye run-time library to the Graphite layout engine <ref> [8] </ref>. The Graphite framework has been Fig. 1. The original drawing of the flights database produced by an anchored force-based layout. modified to take into account the graphical attribute information generated by Dye.
Reference: 9. <author> E.G. Noik. </author> <title> A space of presentation emphasis techniques for visualizing graphs. </title> <booktitle> In GI '94: Graphics Interface 1994, </booktitle> <pages> pages 225-234, </pages> <address> Banff, AL, Canada, </address> <month> May. </month> <year> 1994. </year>
Reference-contexts: In a recent survey of emphasis techniques used in graph visualization, we reviewed a large portion of the literature in this area and identified these and other common shortcomings <ref> [9] </ref>. In this paper, we outline a high-level language that effectively addresses several of these limitations. The paper is organized as follows. <p> In this formalization, DOI (p; F ) will be in [0; 1] for all points: the most interesting points will have a DOI of 1 and the least 0. 3 Limitations of Previous Work A recent survey of presentation emphasis techniques for visualizing graphs <ref> [9] </ref> identified several common limitations. The language which we present in the next section addresses the following three: 1. Alternative presentation emphasis strategies: most existing techniques do not exploit alternative presentation strategies. <p> There has been very little study of 2 Peripheral points are convenient in situations where it is easier to identify uninteresting elements rather than interesting ones. techniques that generate adorned views <ref> [9] </ref> views in which elements are empha-sized by varying other graphical attributes such as colour, shading, line style and thickness, as well as audio [7], and various types of motion (e.g., in-betweening animation [11], vertical oscillations and small random movements [3], and vibration or pulsing [12]).
Reference: 10. <author> E.G. Noik. </author> <title> Encoding Presentation Emphasis Algorithms for Graphs. </title> <type> PhD thesis, </type> <institution> Dept. of Comp. Sci., U. of Toronto, </institution> <note> in preparation. </note>
Reference-contexts: colour (visual emphasis through the systematic manipulation of various graphical attributes including colour) to Graphite. &lt;program&gt; ::= ["sets" [&lt;set_assignment&gt;]+ ] ["fpresponse" [&lt;response_function&gt;]+ ] ["doi" [&lt;doi_assignment&gt;]+ ] ["actions" [&lt;action_block&gt;]+ ] Unfortunately, due to strict page limits, a complete description of the language could not be included it can be found in <ref> [10] </ref>. In the absence of a complete language description, we hope that the following example as will whet the reader's appetite. More extensive and numerous examples consisting of graph drawings and Dye source code were presented at the DIMACS 1994 Workshop on Graph Drawing Poster Gallery.
Reference: 11. <author> S.P. Reiss. </author> <title> A framework for abstract 3d visualization. </title> <booktitle> In VL '93: IEEE Symposium on Visual Languages, </booktitle> <pages> pages 108-115, </pages> <address> Bergen, Norway, </address> <month> Aug. </month> <year> 1993. </year>
Reference-contexts: where it is easier to identify uninteresting elements rather than interesting ones. techniques that generate adorned views [9] views in which elements are empha-sized by varying other graphical attributes such as colour, shading, line style and thickness, as well as audio [7], and various types of motion (e.g., in-betweening animation <ref> [11] </ref>, vertical oscillations and small random movements [3], and vibration or pulsing [12]). A quick glance at a presentation graphics text (e.g., [13]) suggests that many intriguing possibilities remain unexplored. 2. Client priority algorithms: most existing techniques use fixed (domain-dependent) algorithms to compute priorities.
Reference: 12. <author> D. Schaffer, Z. Zuo, L. Bartram, J. Dill, S. Dubs, S. Greenberg, and M. Roseman. </author> <title> Comparing fisheye and full-zoom techniques for navigation of hierarchically clustered networks. </title> <booktitle> In Graphics Interface '93, </booktitle> <pages> pages 87-96, </pages> <month> May. </month> <year> 1993. </year>
Reference-contexts: techniques that generate adorned views [9] views in which elements are empha-sized by varying other graphical attributes such as colour, shading, line style and thickness, as well as audio [7], and various types of motion (e.g., in-betweening animation [11], vertical oscillations and small random movements [3], and vibration or pulsing <ref> [12] </ref>). A quick glance at a presentation graphics text (e.g., [13]) suggests that many intriguing possibilities remain unexplored. 2. Client priority algorithms: most existing techniques use fixed (domain-dependent) algorithms to compute priorities.
Reference: 13. <author> E.R. Tufte. </author> <title> Envisioning Information. </title> <publisher> Graphics Press, </publisher> <address> P.O. Box 430, Cheshire, Connecticut, 06410, </address> <year> 1990. </year>
Reference-contexts: A quick glance at a presentation graphics text (e.g., <ref> [13] </ref>) suggests that many intriguing possibilities remain unexplored. 2. Client priority algorithms: most existing techniques use fixed (domain-dependent) algorithms to compute priorities.
Reference: 14. <author> J.D. Ullman. </author> <booktitle> Principles of Database and Knowledge-base Systems, </booktitle> <volume> volume 1. </volume> <publisher> Computer Science Press, </publisher> <address> 1803 Research Boulevard, Rockville, MD, 20850, </address> <year> 1988. </year>
Reference-contexts: What is required is a flexible means to describe how DOI values should be used to compute appropriate values for relevant graphical attributes. 4 Dye: A Presentation Emphasis Language Dye 3 is a special purpose specification language that is based on relational algebra with arithmetic and aggregation <ref> [14] </ref>.
References-found: 14

