URL: ftp://ftp.cs.unc.edu/pub/users/sc/COMP203-S97/topics.PS.Z
Refering-URL: http://www.cs.unc.edu/~sc/teaching/COMP203-S1997/
Root-URL: http://www.cs.unc.edu
Title: COMP 203: Parallel and Distributed Computing  
Author: Syllabus 
Date: Spring 1997  
Abstract: This is the list of topics we will cover in the course. The order of presentation of the topics is noted with each item. The reading list is subject to some change. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> S. V. Adve and K. Gharachorloo. </author> <title> Shared memory consistency models: A tutorial. </title> <journal> Computer, </journal> <volume> 29(12) </volume> <pages> 66-76, </pages> <month> Dec. </month> <year> 1996. </year>
Reference-contexts: Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. Readings: [13, Chapters 10, 19, 20, x13.4], [12, Chapter 8], <ref> [1] </ref>, [3]. (c) Scheduling and load balancing (1 lecture) (4/16) Load distribution algorithms; task migration; co-scheduling; affinity scheduling; self-scheduling in loops. Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement.
Reference: [2] <author> G. R. Andrews. </author> <title> Paradigms for process interaction in distributed systems. </title> <journal> ACM Comput. Surv., </journal> <volume> 23(1) </volume> <pages> 49-90, </pages> <month> Mar. </month> <year> 1991. </year>
Reference-contexts: Readings: [10, Chapter 5], [6]. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation. Readings: [4, Chapter 32], lecture notes. (d) Distributed algorithms (2 lectures) (1/27, 1/29) Algorithm design techniquesfilters, client/server, heartbeat, probe/echo, token-passing, replicated servers. Readings: <ref> [2] </ref>. 3. Communication (a) Interconnection network design (2 lectures) (2/3, 2/5) Topological and parametric models of interconnection networks; routing mechanisms; flow control mech anisms; communication protocols.
Reference: [3] <author> N. Carriero and D. Gelernter. </author> <title> How to write parallel programs: A guide to the perplexed. </title> <journal> ACM Comput. Surv., </journal> <volume> 21(3) </volume> <pages> 323-357, </pages> <month> Sept. </month> <year> 1989. </year>
Reference-contexts: Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. Readings: [13, Chapters 10, 19, 20, x13.4], [12, Chapter 8], [1], <ref> [3] </ref>. (c) Scheduling and load balancing (1 lecture) (4/16) Load distribution algorithms; task migration; co-scheduling; affinity scheduling; self-scheduling in loops. Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement.
Reference: [4] <author> T. H. Cormen, C. E. Leiserson, and R. L. Rivest. </author> <title> Introduction to Algorithms. </title> <publisher> The MIT Press/Mcgraw-Hill Book Company, </publisher> <year> 1995. </year> <note> ISBN 0-262-03141-8. </note>
Reference-contexts: Models and Algorithms (a) PRAM algorithms (3 lectures) (1/13, 1/15, 1/22) PRAM model of computation; Work-Time formalism and Brent's Theorem; algorithm design techniques parallel prefix, pointer jumping, Euler tours, divide and conquer, symmetry breaking; survey of data-parallel algorithms; relative power of PRAM models. Readings: [9, xx1.5-1.6, 2.1-2.3, 2.6], <ref> [4, xx30.1-30.2] </ref>, lecture notes. (b) Dense linear algebra (2 lectures) (2/24, 2/26) Matrix transposition, matrix product, Gaussian elimination; data distribution; parallel linear algebra li braries. Readings: [10, Chapter 5], [6]. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation. <p> Readings: [9, xx1.5-1.6, 2.1-2.3, 2.6], [4, xx30.1-30.2], lecture notes. (b) Dense linear algebra (2 lectures) (2/24, 2/26) Matrix transposition, matrix product, Gaussian elimination; data distribution; parallel linear algebra li braries. Readings: [10, Chapter 5], [6]. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation. Readings: <ref> [4, Chapter 32] </ref>, lecture notes. (d) Distributed algorithms (2 lectures) (1/27, 1/29) Algorithm design techniquesfilters, client/server, heartbeat, probe/echo, token-passing, replicated servers. Readings: [2]. 3. Communication (a) Interconnection network design (2 lectures) (2/3, 2/5) Topological and parametric models of interconnection networks; routing mechanisms; flow control mech anisms; communication protocols.
Reference: [5] <author> W. Dally. </author> <title> Network and processor architecture for message-driven computers. </title> <editor> In R. Suaya and G. Birtwistle, editors, </editor> <booktitle> VLSI and Parallel Computation, chapter 3, </booktitle> <pages> pages 140-222. </pages> <publisher> Morgan Kaufmann, </publisher> <year> 1990. </year>
Reference-contexts: Readings: [2]. 3. Communication (a) Interconnection network design (2 lectures) (2/3, 2/5) Topological and parametric models of interconnection networks; routing mechanisms; flow control mech anisms; communication protocols. Readings: [10, Chapter 2], [12, Chapter 7], <ref> [5] </ref>. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI.
Reference: [6] <author> J. J. Dongarra and D. W. Walker. </author> <title> Software libraries for linear algebra computations on high performance computers. </title> <journal> SIAM Review, </journal> <volume> 37(2) </volume> <pages> 151-180, </pages> <month> June </month> <year> 1995. </year>
Reference-contexts: Readings: [9, xx1.5-1.6, 2.1-2.3, 2.6], [4, xx30.1-30.2], lecture notes. (b) Dense linear algebra (2 lectures) (2/24, 2/26) Matrix transposition, matrix product, Gaussian elimination; data distribution; parallel linear algebra li braries. Readings: [10, Chapter 5], <ref> [6] </ref>. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation. Readings: [4, Chapter 32], lecture notes. (d) Distributed algorithms (2 lectures) (1/27, 1/29) Algorithm design techniquesfilters, client/server, heartbeat, probe/echo, token-passing, replicated servers. Readings: [2]. 3.
Reference: [7] <author> V. Hadzilacos and S. Toueg. </author> <title> Fault-tolerant broadcasts and related problems. </title> <editor> In S. Mullender, editor, </editor> <booktitle> Distributed Systems, chapter 5, </booktitle> <pages> pages 97-146. </pages> <publisher> Addison-Wesley Publishing Company, </publisher> <address> second edition, </address> <year> 1994. </year> <note> ISBN 0-201-62427-3. </note>
Reference-contexts: Readings: [10, Chapter 2], [12, Chapter 7], [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. Readings: [10, Chapter 3], <ref> [7] </ref>, [8], [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], [11], [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures.
Reference: [8] <author> C. A. R. Hoare. </author> <title> Communicating sequential processes. </title> <journal> Commun. ACM, </journal> <volume> 21(8) </volume> <pages> 666-677, </pages> <month> Aug. </month> <year> 1978. </year>
Reference-contexts: Readings: [10, Chapter 2], [12, Chapter 7], [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. Readings: [10, Chapter 3], [7], <ref> [8] </ref>, [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], [11], [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures.
Reference: [9] <author> J. JaJa. </author> <title> An Introduction to Parallel Algorithms. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <address> Reading, MA, </address> <year> 1992. </year> <note> ISBN 0-201-54856-9. </note>
Reference-contexts: 1. Introduction (1 lecture) (1/8) Motivation, models of computation, performance metrics, Amdahl's Law. Readings: [10, xx4.1-4.3], <ref> [9, xx1.1-1.3] </ref>, lecture notes. 2. Models and Algorithms (a) PRAM algorithms (3 lectures) (1/13, 1/15, 1/22) PRAM model of computation; Work-Time formalism and Brent's Theorem; algorithm design techniques parallel prefix, pointer jumping, Euler tours, divide and conquer, symmetry breaking; survey of data-parallel algorithms; relative power of PRAM models. <p> Models and Algorithms (a) PRAM algorithms (3 lectures) (1/13, 1/15, 1/22) PRAM model of computation; Work-Time formalism and Brent's Theorem; algorithm design techniques parallel prefix, pointer jumping, Euler tours, divide and conquer, symmetry breaking; survey of data-parallel algorithms; relative power of PRAM models. Readings: <ref> [9, xx1.5-1.6, 2.1-2.3, 2.6] </ref>, [4, xx30.1-30.2], lecture notes. (b) Dense linear algebra (2 lectures) (2/24, 2/26) Matrix transposition, matrix product, Gaussian elimination; data distribution; parallel linear algebra li braries. Readings: [10, Chapter 5], [6]. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation.
Reference: [10] <author> V. Kumar, A. Grama, A. Gupta, and G. Karypis. </author> <title> Introduction to Parallel Computing: Design and Analysis of Algorithms. </title> <publisher> The Benjamin/Cummings Publishing Company, Inc., </publisher> <address> Redwood City, CA, </address> <year> 1994. </year> <note> ISBN 0-8053-3170-0. </note>
Reference-contexts: 1. Introduction (1 lecture) (1/8) Motivation, models of computation, performance metrics, Amdahl's Law. Readings: <ref> [10, xx4.1-4.3] </ref>, [9, xx1.1-1.3], lecture notes. 2. Models and Algorithms (a) PRAM algorithms (3 lectures) (1/13, 1/15, 1/22) PRAM model of computation; Work-Time formalism and Brent's Theorem; algorithm design techniques parallel prefix, pointer jumping, Euler tours, divide and conquer, symmetry breaking; survey of data-parallel algorithms; relative power of PRAM models. <p> Readings: [9, xx1.5-1.6, 2.1-2.3, 2.6], [4, xx30.1-30.2], lecture notes. (b) Dense linear algebra (2 lectures) (2/24, 2/26) Matrix transposition, matrix product, Gaussian elimination; data distribution; parallel linear algebra li braries. Readings: <ref> [10, Chapter 5] </ref>, [6]. (c) Fast Fourier Transform (1 lecture) (3/3) Underlying mathematics; butterfly operation; implementation. Readings: [4, Chapter 32], lecture notes. (d) Distributed algorithms (2 lectures) (1/27, 1/29) Algorithm design techniquesfilters, client/server, heartbeat, probe/echo, token-passing, replicated servers. Readings: [2]. 3. <p> Readings: [2]. 3. Communication (a) Interconnection network design (2 lectures) (2/3, 2/5) Topological and parametric models of interconnection networks; routing mechanisms; flow control mech anisms; communication protocols. Readings: <ref> [10, Chapter 2] </ref>, [12, Chapter 7], [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. <p> Readings: [10, Chapter 2], [12, Chapter 7], [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. Readings: <ref> [10, Chapter 3] </ref>, [7], [8], [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], [11], [12, x8.5], lecture notes. 4.
Reference: [11] <author> J. Mellor-Crummey and M. Scott. </author> <title> Algorithms for scalable synchronization in shared-memory multiprocessors. </title> <journal> ACM Trans. Comput. Syst., </journal> <volume> 9(1) </volume> <pages> 21-65, </pages> <month> Feb. </month> <year> 1991. </year>
Reference-contexts: Readings: [10, Chapter 3], [7], [8], [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], <ref> [11] </ref>, [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda.
Reference: [12] <author> D. A. Patterson and J. L. Hennessy. </author> <title> Computer Architecture: A Quantitative Approach. </title> <publisher> Morgan Kaufmann Publishers, Inc., </publisher> <address> San Francisco, CA, </address> <note> second edition, 1996. ISBN 1-55860-329-8. </note>
Reference-contexts: Readings: [2]. 3. Communication (a) Interconnection network design (2 lectures) (2/3, 2/5) Topological and parametric models of interconnection networks; routing mechanisms; flow control mech anisms; communication protocols. Readings: [10, Chapter 2], <ref> [12, Chapter 7] </ref>, [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. <p> Readings: [10, Chapter 3], [7], [8], [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], [11], <ref> [12, x8.5] </ref>, lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. <p> Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. Readings: [13, Chapters 10, 19, 20, x13.4], <ref> [12, Chapter 8] </ref>, [1], [3]. (c) Scheduling and load balancing (1 lecture) (4/16) Load distribution algorithms; task migration; co-scheduling; affinity scheduling; self-scheduling in loops. Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement. <p> Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement. Readings: [13, Chapter 8]. (b) Vector processing (1 lecture) (4/23) Architecture, loop-level parallelism; dependence. Readings: <ref> [12, Appendix B] </ref>.
Reference: [13] <author> M. Singhal and N. Shivaratri. </author> <title> Advanced Concepts in Operating Systems. </title> <publisher> McGraw-Hill, </publisher> <year> 1994. </year> <note> ISBN 0-07-057572-X. </note>
Reference-contexts: Readings: [10, Chapter 3], [7], [8], [14]. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: <ref> [13, Chapters 1-7] </ref>, [11], [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. <p> Readings: [13, Chapters 1-7], [11], [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures. Readings: Lecture notes. (b) Shared memory (4 lectures) (3/31, 4/7, 4/9, 4/14) Models of memory consistency; implementation of consistency protocols; transactions: serializability, con currency control, commit protocols; Linda. Readings: <ref> [13, Chapters 10, 19, 20, x13.4] </ref>, [12, Chapter 8], [1], [3]. (c) Scheduling and load balancing (1 lecture) (4/16) Load distribution algorithms; task migration; co-scheduling; affinity scheduling; self-scheduling in loops. Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement. <p> Readings: [13, Chapters 10, 19, 20, x13.4], [12, Chapter 8], [1], [3]. (c) Scheduling and load balancing (1 lecture) (4/16) Load distribution algorithms; task migration; co-scheduling; affinity scheduling; self-scheduling in loops. Readings: <ref> [13, Chapter 11, xx17.4-17.6] </ref>, lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement. Readings: [13, Chapter 8]. (b) Vector processing (1 lecture) (4/23) Architecture, loop-level parallelism; dependence. Readings: [12, Appendix B]. <p> Readings: [13, Chapter 11, xx17.4-17.6], lecture notes. 5. Miscellaneous topics (a) Fault tolerance (1 lecture) (4/21) Byzantine agreement. Readings: <ref> [13, Chapter 8] </ref>. (b) Vector processing (1 lecture) (4/23) Architecture, loop-level parallelism; dependence. Readings: [12, Appendix B].
Reference: [14] <author> M. Snir, S. W. Otto, S. Huss-Lederman, D. W. Walker, and J. Dongarra. </author> <title> MPI: The Complete Reference. Scientific and Engineering Computation. </title> <publisher> The MIT Press, </publisher> <address> Cambridge, MA, </address> <year> 1996. </year> <note> ISBN 0-262-69184-1. 2 </note>
Reference-contexts: Readings: [10, Chapter 2], [12, Chapter 7], [5]. (b) Communication primitives (4 lectures) (2/10, 2/12, 2/17, 2/19) Point-to-point communication primitives; group communication patterns; broadcast in distributed systems; CSP, MPI. Readings: [10, Chapter 3], [7], [8], <ref> [14] </ref>. (c) Synchronization (4 lectures) (3/17, 3/19, 3/24, 3/26) Locks, monitors, barriers; deadlock; hardware primitives and implementation issues; clock synchroniza tion; distributed mutual exclusion; distributed deadlock detection. Readings: [13, Chapters 1-7], [11], [12, x8.5], lecture notes. 4. Computation (a) Threads (1 lecture) (3/5) Creation, coordination, termination; futures.
References-found: 14

