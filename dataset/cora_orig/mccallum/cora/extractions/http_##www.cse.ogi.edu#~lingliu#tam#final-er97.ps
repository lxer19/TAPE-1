URL: http://www.cse.ogi.edu/~lingliu/tam/final-er97.ps
Refering-URL: http://www.cse.ogi.edu/~lingliu/tam/index.html
Root-URL: http://www.cse.ogi.edu
Email: flingliu,caltong@cse.ogi.edu  
Title: ActivityFlow: Towards Incremental Specification and Flexible Coordination of Workflow Activities  
Author: Ling Liu and Calton Pu 
Address: P.O.Box 91000 Portland, Oregon 97291-1000 USA  
Affiliation: Department of Computer Science Engineering Oregon Graduate Institute  
Abstract: We introduce the ActivityFlow specification language for incremental specification and flexible coordination of workflow activities. The most interesting features of the ActivityFlow specification language include (1) a collection of specification mechanisms, which provides a workflow designer with a uniform workflow specification interface to describe different types (i.e., ad-hoc, administrative, or production) of workflows involved in their organizational processes, and helps to increase the flexibility of workflow processes in accommodating changes; (2) a set of activity modeling facilities, which enables the workflow designer to describe the flow of work declaratively and incrementally, allowing reasoning about correctness and security of complex workflow activities independently from their underlying implementation mechanisms; (3) an open architecture that supports user interaction as well as collaboration of workflow systems of different organizations.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> R. Barga and C. Pu. </author> <title> A practical and modular implementation technique of extended transaction models. </title> <booktitle> In Proceedings of the 21st International Conference on Very Large Data Bases, </booktitle> <address> Zurich, </address> <month> September </month> <year> 1995. </year>
Reference-contexts: Research and development for ActivityFlow continue along several dimensions. On the theoretical side we are investigating workflow correctness properties and the correctness assurance in the concurrent execution of activities. On the practical side, we are building value-added adapters on top of existing transaction processing systems <ref> [1] </ref> to support extended transaction models and ActivityFlow specifications. In addition, we are exploring the enhancement of process design tools to interoperate with various application development envi-ronments. The implementation architecture for the first prototype of ActivityFlow is based on the World Wide Web (WWW) technologies. <p> The prototype implementation consists of three main components: the workflow agent interface toolkit, the workflow activity engine, and the distributed object manager. Readers who are interested in detailed implementation issues may refer to <ref> [6, 1, 11] </ref>. Acknowledgement This work was partially carried out when the first author was with the University of Alberta.
Reference: 2. <author> A. K. Elmagarmid. </author> <title> Database Transaction Models for Advanced Applications. </title> <publisher> Mor-gan Kaufmann, </publisher> <year> 1992. </year>
Reference: 3. <author> D. Georgakopoulos, M. Hornick, and A. Sheth. </author> <title> An overview of workflow management: From processing modeling to workflow automation infrastructure. </title> <journal> Distributed and Parallel Database, </journal> <volume> 3(2) </volume> <pages> 119-152, </pages> <year> 1995. </year>
Reference-contexts: Over the past few years, many workflow management systems have become available on the market, or developed in research labs world wide <ref> [8, 10, 3] </ref>. <p> Users can react to situations not considered at workflow design stage. Administrative workflows are those workflows where activities are mainly performed by humans. Production workflows are predefined and use a great deal of complex information structures, and involve application programs and automatic activities <ref> [3, 7] </ref>. automated business process, namely the coordination, control and communica-tion of activities is automated, although the activities themselves can be either automated or performed by people [10].
Reference: 4. <author> M. Hsu and C. Kleissner. Objectflow: </author> <title> Towards a process management infrastructure. </title> <booktitle> Distributed and Parallel Databases, </booktitle> (4):169-194, 1996. 
Reference: 5. <author> L. Liu and R. Meersman. </author> <title> The basic building blocks for modeling communication behavior of complex objects: an activity-driven approach. </title> <journal> ACM Transactions on Database Systems, </journal> <volume> 21(3) </volume> <pages> 157-207, </pages> <month> June </month> <year> 1996. </year>
Reference-contexts: Data Declaration: The data declaration unit consists of the declaration of the classes to which the parameters of the activity belong and the set of messages (or methods) needed to manipulate the actual arguments. Constraints between these messages are also specified in this unit <ref> [5] </ref>. Procedure: The procedure unit is defined within a begin and end bracket. It describes the composition of the activity, the control flow and data flow of the activity, and the pre- and post-condition of the activity.
Reference: 6. <author> L. Liu and C. Pu. ActivityFlow: </author> <title> A formalism for incremental specification of work-flow activities. </title> <type> Technical Report TR97, </type> <institution> University of Alberta. </institution>
Reference-contexts: We provide an iterator connector for realization of conditional rollbacks. We also define the termination property and precedence preserving property to guarantee the correctness of workflow execution. Due to the space limitation, the details are omitted here. Readers may refer to <ref> [6] </ref> for further discussion. 4 Conclusion We have described the ActivityFlow approach to workflow process definition. Interesting features of ActivityFlow are the following. <p> The prototype implementation consists of three main components: the workflow agent interface toolkit, the workflow activity engine, and the distributed object manager. Readers who are interested in detailed implementation issues may refer to <ref> [6, 1, 11] </ref>. Acknowledgement This work was partially carried out when the first author was with the University of Alberta.
Reference: 7. <author> J. McCarthy. </author> <title> There is more than one kind of workflow software. </title> <type> Computerworld, </type> <month> November 2 </month> <year> 1992. </year>
Reference-contexts: Users can react to situations not considered at workflow design stage. Administrative workflows are those workflows where activities are mainly performed by humans. Production workflows are predefined and use a great deal of complex information structures, and involve application programs and automatic activities <ref> [3, 7] </ref>. automated business process, namely the coordination, control and communica-tion of activities is automated, although the activities themselves can be either automated or performed by people [10].
Reference: 8. <author> C. Mohan. </author> <title> Advanced Transaction Models Survey and Critique. </title> <booktitle> Tutorial presented at the ACM SIGMOD international conference, </booktitle> <year> 1994. </year>
Reference-contexts: Over the past few years, many workflow management systems have become available on the market, or developed in research labs world wide <ref> [8, 10, 3] </ref>. <p> Over the past few years, many workflow management systems have become available on the market, or developed in research labs world wide [8, 10, 3]. Although there are more and more successes in the workflow research and development, it is widely recognized <ref> [8, 10] </ref> that there are still technical problems, ranging from inflexible and rigid process specification and execution mechanisms, and insufficient possibilities to handle exceptions, to the need for uniform interface support for various types of workflows (i.e., ad-hoc, administrative, or production workflows) 1 , for dynamic restructuring of business processes, pro-cess
Reference: 9. <author> A. Sheth. </author> <title> Workflow Automation: </title> <booktitle> Applications, Technology and Research. Tutorial presented at the ACM SIGMOD international conference, </booktitle> <year> 1995. </year>
Reference: 10. <author> A. Sheth,G. Georgakopoulos, S.Joosten, M. Rusinkiewicz, W. Scacchi, J. Wildedn, and A. Wolf. </author> <title> Report from the nsf workshop on workflow and process automation in information systems. </title> <journal> ACM SIGMOD Record, </journal> <volume> 25(4) </volume> <pages> 55-67, </pages> <month> December </month> <year> 1996. </year>
Reference-contexts: Over the past few years, many workflow management systems have become available on the market, or developed in research labs world wide <ref> [8, 10, 3] </ref>. <p> Over the past few years, many workflow management systems have become available on the market, or developed in research labs world wide [8, 10, 3]. Although there are more and more successes in the workflow research and development, it is widely recognized <ref> [8, 10] </ref> that there are still technical problems, ranging from inflexible and rigid process specification and execution mechanisms, and insufficient possibilities to handle exceptions, to the need for uniform interface support for various types of workflows (i.e., ad-hoc, administrative, or production workflows) 1 , for dynamic restructuring of business processes, pro-cess <p> Production workflows are predefined and use a great deal of complex information structures, and involve application programs and automatic activities [3, 7]. automated business process, namely the coordination, control and communica-tion of activities is automated, although the activities themselves can be either automated or performed by people <ref> [10] </ref>. A workflow management system (WFMS) is a software system which offers a set of workflow enactment services to carry out a workflow process through automated coordination, control and communication of work activities performed by both human and computers. 2.2 Reference Architecture Management Coalition (WfMC) (see http://www.aiai.ed.ac.uk/WfMc/). A Fig. 1.
Reference: 11. <author> T. Zhou, C. Pu, and L. Liu. </author> <title> Adaptable, efficient, and modular coordination of distributed extended transactions. </title> <booktitle> In Proceeding of the International Conference on Parallel and Distributed Databases, </booktitle> <year> 1996. </year>
Reference-contexts: The prototype implementation consists of three main components: the workflow agent interface toolkit, the workflow activity engine, and the distributed object manager. Readers who are interested in detailed implementation issues may refer to <ref> [6, 1, 11] </ref>. Acknowledgement This work was partially carried out when the first author was with the University of Alberta.
References-found: 11

