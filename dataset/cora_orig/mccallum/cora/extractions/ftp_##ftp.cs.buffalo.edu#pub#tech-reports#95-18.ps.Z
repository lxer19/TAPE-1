URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/95-18.ps.Z
Refering-URL: ftp://ftp.cs.buffalo.edu/pub/tech-reports/README.html
Root-URL: 
Title: A Dynamic Diagnostic Test Generation System for I DDQ Measurement Based Diagnosis of Bridging Faults  
Author: Yiming Gong and Sreejit Chakravarty 
Address: New York Buffalo, NY 14260  
Affiliation: Department of Computer Science State University of  
Abstract: A paradigm for diagnosis, knownas dynamic diagnosis, is defined. A systembased on thisparadigm, for I DDQ measurement based diagnosis of bridging faults, is reported. Experimental evaluation of the performance of the system shows it to be substantially superior to existing systems, especially for larger circuits. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. Abramovici and M. A. Breuer. </author> <title> Multiple Fault Diagnosis of MOS Combinational Networks. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-29(6):451-460, </volume> <month> June </month> <year> 1980. </year>
Reference-contexts: To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis <ref> [1, 2, 9, 12, 28] </ref>. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. <p> Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis [1, 2, 9, 12, 28]. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In <ref> [1, 2, 12] </ref> no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. A DTS still needs to be computed apriori. In addition, the expensive step of diagnostic fault simulation is still required.
Reference: [2] <author> M. Abramovici and M. A. Breuer. </author> <title> Fault Diagnosis in Synchronous Sequential Circuits Based on an Effect-Cause Analysis. </title> <journal> IEEE Trans. on Computers, </journal> <volume> C-31(12):1165-1172, </volume> <month> Dec </month> <year> 1982. </year>
Reference-contexts: To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis <ref> [1, 2, 9, 12, 28] </ref>. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. <p> Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis [1, 2, 9, 12, 28]. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In <ref> [1, 2, 12] </ref> no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. A DTS still needs to be computed apriori. In addition, the expensive step of diagnostic fault simulation is still required.
Reference: [3] <author> M. Abramovici, M. A. Breuer, and A. D. Friedman. </author> <title> DIGITAL SYSTEMS TESTING AND TESTABLE DESIGN. </title> <publisher> Computer Science Press, </publisher> <year> 1990. </year>
Reference-contexts: Such analysis is used to gather information to improve the fabrication process. There are different approaches for fault diagnosis which includes cause-effect analysis and effect-cause analysis <ref> [3] </ref>. In cause-effect analysis, before diagnosis, simulation is used to determine the possible responses of the circuit, to a given test sequence, in the presence of the targeted faults. These responses, along with the faults which cause them, are stored in a fault dictionary.
Reference: [4] <author> R. C. Aitken. </author> <title> Fault Location with Current Monitoring. </title> <booktitle> In IEEE International Test Conference, </booktitle> <pages> pages 623-632, </pages> <year> 1991. </year>
Reference-contexts: We first present some background about BFs and I DDQ measurement. Then we present the three-phase dynamic diagnosis system. 3.1 I DDQ Test and Fault Dropping A BF between two gate outputs can be detected by I DDQ measurement iff the two shorted lines have different values <ref> [4, 6, 12] </ref>. For example, on application of t 1 = hx 1 = 1; x 2 = 1; x 3 = 0; x 4 = 1i to the circuit of Figure 2, a path from G5 to V SS and a path from V DD to G6 is activated.
Reference: [5] <author> V. Boppana and W. K. Fuchs. </author> <title> Fault Dictionary Compaction by Output Sequence Removal. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <year> 1994. </year>
Reference-contexts: In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large.
Reference: [6] <author> D. J. Burns. </author> <title> Locating High Resistance Shorts in CMOS Circuits by Analyzing Supply Current Measurement Vectors. </title> <booktitle> Int'l Symposium for Testing and Failure Analysis, </booktitle> <pages> pages 231-237, </pages> <year> 1989. </year>
Reference-contexts: We first present some background about BFs and I DDQ measurement. Then we present the three-phase dynamic diagnosis system. 3.1 I DDQ Test and Fault Dropping A BF between two gate outputs can be detected by I DDQ measurement iff the two shorted lines have different values <ref> [4, 6, 12] </ref>. For example, on application of t 1 = hx 1 = 1; x 2 = 1; x 3 = 0; x 4 = 1i to the circuit of Figure 2, a path from G5 to V SS and a path from V DD to G6 is activated.
Reference: [7] <author> P. Camurati, D. Medine, P. Prinetto, and M. S. Reorda. </author> <title> A diagnostic test pattern generation algorithm. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 52-58, </pages> <year> 1990. </year>
Reference-contexts: Although this is not the case for stuck-at faults in small circuits <ref> [7, 17, 22] </ref> it is a problem for large circuits and fault models with larger number of faults in them [8].
Reference: [8] <author> S. Chakravarty, K. Fuchs, and J. Patel. </author> <title> Evaluation and Generation of I DDQ Diagnostic Tests for Bridging Faults in Combinational Circuits. </title> <type> Technical Report 95-11, </type> <institution> State University of New York at Buffalo, Dept. of Computer Science, </institution> <year> 1995. </year>
Reference-contexts: It requires considerable CPU time and storage space. This is especially true if we move away from the classical stuck-at fault models and consider bridging faults <ref> [8] </ref>. * Static fault dictionary often requires considerable space thereby leading to maintenance problem. In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space [5, 23, 27, 28, 29, 30]. <p> Although this is not the case for stuck-at faults in small circuits [7, 17, 22] it is a problem for large circuits and fault models with larger number of faults in them <ref> [8] </ref>. Detection oriented stuck-at test sequences can be used for diagnosis purpose, but they are not good DTSs in the sense that they can not partition faults into small equivalence classes. That is they do not have good diagnostic resolution. <p> In addition, it also points to the fact that a stuck-at test set is not a good starting point for dynamic diagnostic test generation. Table 3 gives the comparison between our system and SDTG system <ref> [8] </ref>. The data under DDTG are the average and maximal number of vectors (times) over 500 instances. The data under SDTG are the vectors (times) the system generated (used). We have not reported data on the residual set size because DDTG will always out perform SDTG.
Reference: [9] <author> S. Chakravarty and Y. Gong. </author> <title> An Algorithm for Diagnosing Two-Line Bridging Faults in Combinational Circuits. </title> <booktitle> In Design Automation Conference, </booktitle> <pages> pages 520-524, </pages> <year> 1993. </year>
Reference-contexts: To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis <ref> [1, 2, 9, 12, 28] </ref>. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. <p> Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis [1, 2, 9, 12, 28]. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In <ref> [9] </ref> portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. A DTS still needs to be computed apriori. In addition, the expensive step of diagnostic fault simulation is still required. Storing and maintaining large test sequences is still a problem.
Reference: [10] <author> S. Chakravarty and Y. Gong. </author> <title> Diagnostic Simulation of Stuck-at Faults in Combinational Circuits. </title> <booktitle> In IEEE VLSI Test Symposium, </booktitle> <pages> pages 128-133, </pages> <year> 1994. </year>
Reference-contexts: The tasks that needs to be performed in cause-effect analysis are as follow. A diagnostic test sequence (DTS), targeting a given set of faults F, is precomputed. This DTS is evaluated as to its effectiveness in distinguishing between faults in the set F (diagnostic simulation <ref> [10, 11, 19, 26, 27] </ref>). A fault dictionary is computed either independently or as a by product of diagnostic simulation. This 1 apriori computation of the DTS and fault dictionary is referred to as static computation. The statically generated fault dictionary, known as static fault dictionary, is used during diagnosis. <p> The statically generated diagnostic test sequence is known as static diagnostic test sequence. Instead of using the term cause-effect we refer to this process as static diagnosis. Static diagnosis has several disadvantages. * In spite of considerable progress <ref> [10, 21, 26, 31] </ref>, unlike fault simulation, diagnostic simulation is an expensive process. It requires considerable CPU time and storage space.
Reference: [11] <author> S. Chakravarty, Y. Gong, and S. Venkataraman. </author> <title> Diagnostic Simulation of Stuck-at Faults in Combinational Circuits. </title> <note> Submitted to Journal of Electronic Testing: Theory and Applications. </note>
Reference-contexts: The tasks that needs to be performed in cause-effect analysis are as follow. A diagnostic test sequence (DTS), targeting a given set of faults F, is precomputed. This DTS is evaluated as to its effectiveness in distinguishing between faults in the set F (diagnostic simulation <ref> [10, 11, 19, 26, 27] </ref>). A fault dictionary is computed either independently or as a by product of diagnostic simulation. This 1 apriori computation of the DTS and fault dictionary is referred to as static computation. The statically generated fault dictionary, known as static fault dictionary, is used during diagnosis.
Reference: [12] <author> S. Chakravarty and M. Liu. </author> <title> I DDQ Measurement Based Diagnosis of Bridging Faults. In Journal of Electronic Testing: Theory and Application (Special Issue on I DDQ Testing ). Kluwer Academic Publishers, </title> <booktitle> 1993. </booktitle> <pages> 12 </pages>
Reference-contexts: To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis <ref> [1, 2, 9, 12, 28] </ref>. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. <p> Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis [1, 2, 9, 12, 28]. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In <ref> [1, 2, 12] </ref> no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults. A DTS still needs to be computed apriori. In addition, the expensive step of diagnostic fault simulation is still required. <p> We have developed a diagnosis system based on this paradigm. Our system targets BFs between two nodes. It assumes that I DDQ measurement is the testing technique being used. The system is a blend of several ideas which includes ideas for representing and dropping BFs <ref> [12] </ref>, fault collapsing for BFs, and techniques for exploiting stuck-at test generators for computing diagnostic test sets. The performance of the system has been evaluated through experimentation using ISCAS85 and full scan versions of ISCAS89 circuits. We have compared the performance of the proposed system with existing systems. <p> We first present some background about BFs and I DDQ measurement. Then we present the three-phase dynamic diagnosis system. 3.1 I DDQ Test and Fault Dropping A BF between two gate outputs can be detected by I DDQ measurement iff the two shorted lines have different values <ref> [4, 6, 12] </ref>. For example, on application of t 1 = hx 1 = 1; x 2 = 1; x 3 = 0; x 4 = 1i to the circuit of Figure 2, a path from G5 to V SS and a path from V DD to G6 is activated. <p> The resulting non-zero I DDQ , detected either by an internal or an external device, is used to signal the presence of a BF. In our diagnostic test generation algorithm we use a compact representation for BFs <ref> [12] </ref>. BF between lines x, y are represented by hx; yi. fhA; Big represents a set of faults fhu; viju 2 A and v 2 Bg. Representation fhA; Bi; hC; Di; : : :g means fhA; Big S S : : :. <p> Faults between lines of same logic value can be dropped from the fault list being processed. We retain the complement of this set if the input vector does not detect the fault. Efficient methods for accomplishing this is discussed in <ref> [12, 13] </ref>. This idea can be extended to include internal nodes which can take on values 0, 1 or f [13]. Here f denotes a floating value. 3.2 The Dynamic Diagnostic Test Generation System Let V (x) denote the logic value of line x.
Reference: [13] <author> S. Chakravarty and S. Suresh. </author> <title> I DDQ Measurement Based Diagnosis of Bridging Faults in Full Scan Circuits. </title> <booktitle> In 7th International Conference on VLSI Design, </booktitle> <pages> pages 179-182, </pages> <year> 1994. </year>
Reference-contexts: For example, fhf1; 2; 3g; f4; 5gig represents the set of faults fh1; 4i; h1; 5i; h2; 4i; h2; 5i; h3; 4i; h3; 5ig. Fault dropping for BFs using I DDQ is accomplished as follow <ref> [13] </ref>. On application of an input vector, the lines (gate outputs) are set to either logic 0 or logic 1. This partitions the lines in the circuit into two set, lines with logic value 0 and lines with logic value 1. <p> Faults between lines of same logic value can be dropped from the fault list being processed. We retain the complement of this set if the input vector does not detect the fault. Efficient methods for accomplishing this is discussed in <ref> [12, 13] </ref>. This idea can be extended to include internal nodes which can take on values 0, 1 or f [13]. Here f denotes a floating value. 3.2 The Dynamic Diagnostic Test Generation System Let V (x) denote the logic value of line x. <p> We retain the complement of this set if the input vector does not detect the fault. Efficient methods for accomplishing this is discussed in [12, 13]. This idea can be extended to include internal nodes which can take on values 0, 1 or f <ref> [13] </ref>. Here f denotes a floating value. 3.2 The Dynamic Diagnostic Test Generation System Let V (x) denote the logic value of line x. Two BFs, hx; yi and hu; vi, are I DDQ Equivalent iff V (x) 6= V (y) () V (u) 6= V (v).
Reference: [14] <author> F. J. Ferguson and T. Larrabee. </author> <title> Test Pattern Generation for Realistic Bridging Faults in CMOS ICs. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 492-499, </pages> <year> 1991. </year>
Reference-contexts: However, various studies have high lighted the importance of targeting non-stuck-at faults like leakage, bridging faults, etc.[14, 15]. Bridging fault (BF) occurs when two or more distinct nodes of the circuit are unintentionally connected. Bridging faults model 40% to 50% of physical faults in contemporary MOS technologies <ref> [14] </ref>. To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied.
Reference: [15] <author> J. Ferguson and J. P. Shen. </author> <title> Extraction and Simulation of Realistic CMOS Faults using Inductive Fault Analysis. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 475-484, </pages> <year> 1988. </year>
Reference: [16] <author> M. R. Garey and D. S. Johnson. </author> <title> Computers and Intractability A Guide to the Theory of NP-Completeness. </title> <editor> W. H. </editor> <publisher> Freeman and Company, </publisher> <year> 1979. </year>
Reference-contexts: There is an analogous generalization for Figure 4 (a). In general, finding whether two lines in a given circuit are equivalent or not is NP-Complete <ref> [16] </ref>. Therefore, heuristics are used to determine such sets [25]. Our heuristic is a generalization of the one used in [25]. Note that the fault equivalence given by Figure 4 (a), involving cross coupled NOT gates is unique to diagnosis and has not been discussed before.
Reference: [17] <author> T. Gr uning, H. Koopmeiners, and U. Mahlstedt. DIAGTEST: </author> <title> A Fast Diagnostic Test Pattern Generator For Combinational Circuits. </title> <booktitle> In Digest of Papers, International Conference on Computer-Aided Design, </booktitle> <pages> pages 194-197, </pages> <year> 1991. </year>
Reference-contexts: Although this is not the case for stuck-at faults in small circuits <ref> [7, 17, 22] </ref> it is a problem for large circuits and fault models with larger number of faults in them [8].
Reference: [18] <author> S. K. Jain and V. D. Agrawal. STAFAN: </author> <title> An Alternative to Fault Simulation. </title> <booktitle> In Design Automation Conference, </booktitle> <pages> pages 18-23, </pages> <year> 1984. </year>
Reference-contexts: We will deal with this problem later. Secondly, some lines cannot be set to 1 or 0 with equal probability. If line x is hard to set to 0 (1) then we say that x has low 0 (1)-controllability <ref> [18, 24] </ref>. Consider faults hx; yi, ha; bi and assume that each of x, y, a, b have low 0-controllability. Then the probability that a randomly selected test vector will set one of them to 0 and rest of them to 1 is low. <p> The controllability of the lines, based on the 6 randomly generated test set, is determined in the first phase in a manner similar to STAFAN <ref> [18] </ref>. There are a few ways to solve the low controllability problem. Let us still assume that these lines with low controllabilities are not correlated. Then increasing the number of random test vectors will help us distinguish these faults.
Reference: [19] <author> K. Kubiak, S. Parkes, W. K. Fuchs, and R. Saleh. </author> <title> Exact Evaluation of Diagnostic Test resolution. </title> <booktitle> In Proceedings 29th Design Automation Conference, </booktitle> <pages> pages 347-352, </pages> <year> 1992. </year>
Reference-contexts: The tasks that needs to be performed in cause-effect analysis are as follow. A diagnostic test sequence (DTS), targeting a given set of faults F, is precomputed. This DTS is evaluated as to its effectiveness in distinguishing between faults in the set F (diagnostic simulation <ref> [10, 11, 19, 26, 27] </ref>). A fault dictionary is computed either independently or as a by product of diagnostic simulation. This 1 apriori computation of the DTS and fault dictionary is referred to as static computation. The statically generated fault dictionary, known as static fault dictionary, is used during diagnosis.
Reference: [20] <author> H. K. Lee and D. S. Ha. </author> <title> On the Generation of Test Patterns for Combinational Circuits. </title> <type> Technical Report 12-93, </type> <institution> Dept. of Electrical Eng., </institution> <year> 1993. </year>
Reference-contexts: Table 2 presents a comparison between our system and the system which uses stuck-at test sets for diagnosis. The stuck-at test set used is from ATALANTA <ref> [20] </ref>. The data under DDTG is from our system, and the data under SSF is from using the stuck-at test set. Time for SSF is only the time required for fault dropping.
Reference: [21] <author> T. Lee, W. Chuang, I. N. Hajj, and W. K. Fuchs. </author> <title> Circuit-Level Dictionaries of CMOS Bridging Faults. </title> <booktitle> In VLSI Test Symposium, </booktitle> <pages> pages 386-391, </pages> <year> 1994. </year>
Reference-contexts: The statically generated diagnostic test sequence is known as static diagnostic test sequence. Instead of using the term cause-effect we refer to this process as static diagnosis. Static diagnosis has several disadvantages. * In spite of considerable progress <ref> [10, 21, 26, 31] </ref>, unlike fault simulation, diagnostic simulation is an expensive process. It requires considerable CPU time and storage space.
Reference: [22] <author> M. Melton and F. Brglez. </author> <title> Automatic Pattern Generation for Diagnosis of Wiring Interconnect Faults. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 389-398, </pages> <year> 1992. </year>
Reference-contexts: Although this is not the case for stuck-at faults in small circuits <ref> [7, 17, 22] </ref> it is a problem for large circuits and fault models with larger number of faults in them [8].
Reference: [23] <author> I. Pomeranz and S. M. Reddy. </author> <title> On the Generation of Small Dictionaries for Fault Location. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 272-279, </pages> <year> 1992. </year>
Reference-contexts: In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large. <p> A DTS still needs to be computed apriori. In addition, the expensive step of diagnostic fault simulation is still required. Storing and maintaining large test sequences is still a problem. This approach to diagnosis is known as dynamic diagnosis in the literature <ref> [23] </ref>. Since this approach assumes that the DTS is available, a precomputed DTS is still needed, we prefer to use the term quasi-static diagnosis. In this paper we first define an approach to diagnosis, discussed in section 2, which we refer to as dynamic diagnosis. <p> In this paper we first define an approach to diagnosis, discussed in section 2, which we refer to as dynamic diagnosis. Note that the usage of this term is different from its usage in <ref> [23] </ref>. To our knowledge, such an approach has not been discussed in the literature. In dynamic diagnosis we do away with the costly steps of computing static fault dictionaries, diagnostic simulation as well as static diagnostic test generation.
Reference: [24] <author> I. M. Ratiu, A. Sangiovanni-Vincentelli, and D. O. Pederson. VICTOR: </author> <title> A Fast VLSI Testability Analysis Program. </title> <booktitle> In IEEE Test Conference, </booktitle> <pages> pages 397-401, </pages> <year> 1982. </year>
Reference-contexts: We will deal with this problem later. Secondly, some lines cannot be set to 1 or 0 with equal probability. If line x is hard to set to 0 (1) then we say that x has low 0 (1)-controllability <ref> [18, 24] </ref>. Consider faults hx; yi, ha; bi and assume that each of x, y, a, b have low 0-controllability. Then the probability that a randomly selected test vector will set one of them to 0 and rest of them to 1 is low.
Reference: [25] <author> R. S. Reddy, I. Pomeranz, S. M. Reddy, and S. Kajihara. </author> <title> Compact Test Generation for Bridging Faults under I DDQ Testing. </title> <note> To appear at VLSI Test Symposium 1995. </note>
Reference-contexts: There is an analogous generalization for Figure 4 (a). In general, finding whether two lines in a given circuit are equivalent or not is NP-Complete [16]. Therefore, heuristics are used to determine such sets <ref> [25] </ref>. Our heuristic is a generalization of the one used in [25]. Note that the fault equivalence given by Figure 4 (a), involving cross coupled NOT gates is unique to diagnosis and has not been discussed before. The heuristic we used is as follow. <p> There is an analogous generalization for Figure 4 (a). In general, finding whether two lines in a given circuit are equivalent or not is NP-Complete [16]. Therefore, heuristics are used to determine such sets <ref> [25] </ref>. Our heuristic is a generalization of the one used in [25]. Note that the fault equivalence given by Figure 4 (a), involving cross coupled NOT gates is unique to diagnosis and has not been discussed before. The heuristic we used is as follow. Assume fhA; fvgig is a set of faults fhx; vijx 2 Ag.
Reference: [26] <author> E. M. Rudnick, W. K. Fuchs, and J. H. Patel. </author> <title> Diagnostic Fault Simulation of Sequential Circuits. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 178-186, </pages> <year> 1992. </year> <month> 13 </month>
Reference-contexts: The tasks that needs to be performed in cause-effect analysis are as follow. A diagnostic test sequence (DTS), targeting a given set of faults F, is precomputed. This DTS is evaluated as to its effectiveness in distinguishing between faults in the set F (diagnostic simulation <ref> [10, 11, 19, 26, 27] </ref>). A fault dictionary is computed either independently or as a by product of diagnostic simulation. This 1 apriori computation of the DTS and fault dictionary is referred to as static computation. The statically generated fault dictionary, known as static fault dictionary, is used during diagnosis. <p> The statically generated diagnostic test sequence is known as static diagnostic test sequence. Instead of using the term cause-effect we refer to this process as static diagnosis. Static diagnosis has several disadvantages. * In spite of considerable progress <ref> [10, 21, 26, 31] </ref>, unlike fault simulation, diagnostic simulation is an expensive process. It requires considerable CPU time and storage space.
Reference: [27] <author> P. G. Ryan, W. K. Fuchs, and I. Pomeranz. </author> <title> Fault Dictionary Compression and Equivalence Class Computation for Sequential Circuits. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 508-511, </pages> <year> 1993. </year>
Reference-contexts: The tasks that needs to be performed in cause-effect analysis are as follow. A diagnostic test sequence (DTS), targeting a given set of faults F, is precomputed. This DTS is evaluated as to its effectiveness in distinguishing between faults in the set F (diagnostic simulation <ref> [10, 11, 19, 26, 27] </ref>). A fault dictionary is computed either independently or as a by product of diagnostic simulation. This 1 apriori computation of the DTS and fault dictionary is referred to as static computation. The statically generated fault dictionary, known as static fault dictionary, is used during diagnosis. <p> In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large.
Reference: [28] <author> P. G. Ryan, S. Rawat, and W. K. Fuchs. </author> <title> Two-Stage Fault Location. </title> <booktitle> In Proceedings of the International Test Conference, </booktitle> <pages> pages 963-968, </pages> <year> 1991. </year>
Reference-contexts: In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large. <p> To improve the quality of VLSI chip, analysis of such fault must be addressed. Once we target such fault models the disadvantages of static diagnosis become more signif 2 icant. Motivated by this, alternatives to static diagnosis have been studied. One approach uses effect-cause analysis <ref> [1, 2, 9, 12, 28] </ref>. In this approach no static fault dictionary is computed thereby eliminating the corresponding storage and maintenance problems. In [1, 2, 12] no fault dictionary was computed. In [9] portion of stuck-at fault dictionary was computed, on the fly, for diagnosis of bridging faults.
Reference: [29] <author> R. E. Tulloss. </author> <title> Size Optimization of Fault Dictionaries. </title> <booktitle> In Digest of Papers 1978 Semiconductor Test Symp., </booktitle> <pages> pages 264-265, </pages> <month> Oct </month> <year> 1978. </year>
Reference-contexts: In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large.
Reference: [30] <author> R. E. Tulloss. </author> <title> Fault Dictionary Compression: Recognizing When a Fault May Be Unambiguously Represented by a Single Failure Detection. </title> <booktitle> In Digest of Papers 1980 Test Conf., </booktitle> <pages> pages 368-370, </pages> <month> Nov </month> <year> 1980. </year>
Reference-contexts: In addition, the time required to compute them is also very large. Much effort has been directed at reducing the required space <ref> [5, 23, 27, 28, 29, 30] </ref>. These techniques, although very useful for medium sized circuits and stuck-at faults, starts falling apart when larger circuits and fault models with larger number of faults are considered. * The DTS, unlike tests needed for fault detection, can be pretty large.

References-found: 30

