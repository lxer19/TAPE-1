URL: http://www-cad.eecs.berkeley.edu/HomePages/luciano/publications/tr/UCB-ERL-91-67.ps.gz
Refering-URL: http://www-cad.eecs.berkeley.edu/HomePages/luciano/publications.html
Root-URL: 
Title: Synthesis for Testability Techniques for Asynchronous Circuits  
Author: Kurt Keutzer Luciano Lavagno Alberto Sangiovanni-Vincentelli 
Address: Mountain View, CA  Berkeley, CA  Berkeley, CA  
Affiliation: Synopsys  University of California  University of California  
Abstract: Our goal is to synthesize hazard-free asynchronous circuits that are testable in the very stringent hazard-free robust path-delay-fault model. From a synthesis perspective producing circuits satisfying two very stringent requirements, namely, hazard-free operation and hazard-free robust path-delay-fault-testability, poses an especially exciting challenge. In this paper we present techniques which guarantee both hazard-free operation and hazard-free robust path-delay-fault testability, at the expense of possibly adding test inputs, and give a set of heuristics which can improve hazard-free robust path-delay-fault testability without requiring such inputs. We also present a procedure that guarantees testability in the less stringent robust gate-delay-fault model.
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> M. J. Bryan, S. Devadas, and K. Keutzer. </author> <title> Testability-Preserving Circuit Transformations. </title> <booktitle> In Proceedings of the International Conference on Computer-Aided Design, </booktitle> <month> November </month> <year> 1990. </year>
Reference-contexts: While a rigorous proof of the utility of this technique would require the introduction of the notion of ENF Reducibility from <ref> [1, 6] </ref>, the basic principle in operation is simply demonstrated.
Reference: [2] <author> T.-A. Chu. </author> <title> On the models for designing VLSI asynchronous digital systems. Integration: </title> <journal> the VLSI journal, </journal> <volume> 4 </volume> <pages> 99-113, </pages> <year> 1986. </year>
Reference-contexts: S or R for a Set-Reset flip-flop) is latched by the test clock and subsequently scanned out. * memorize two values to be applied in sequence for the application of a two-pattern test. 2.4 Asynchronous Circuit Specification The Signal Transition Graph (STG) was introduced by <ref> [2] </ref> as a specification formalism for asynchronous sequential circuits. It is an interpreted free-choice Petri net: transitions of the FC net are interpreted as value changes on input/output signals of the specified circuit. Two transitions are said to be concurrent if there exists some net marking where both are enabled.
Reference: [3] <author> T.-A. Chu. </author> <title> Synthesis of Self-timed VLSI Circuits from Graph-theoretic Specifications. </title> <type> PhD thesis, </type> <institution> MIT, </institution> <month> June </month> <year> 1987. </year>
Reference-contexts: 1 Introduction In this paper we are concerned with the problem of synthesizing asynchronous sequential circuits from a high level specification, the Signal Transition Graph (STG, <ref> [3] </ref>). In [13, 12] we presented a set of algorithms to solve this problem. They produce a circuit implementation that is guaranteed to be hazard-free if and only if a set of inequalities among path delays inside the circuit is satisfied. <p> as F . 5 There exists only one such path if I is obtained using only distributivity and associativity. 6 Obtained from a delay analysis of the circuit implementing signal t 2 , or assumed to be 0. 6 Take for example the STG reported in Figure 1 (taken from <ref> [3] </ref>). The on-set and off-set covers for signal A i , as obtained in Section 3.1, are respectively F A i = DL + DR i + LR i and R A i = D L + DR i + LR i . <p> the circuit in order to make it hfrpdft, while the column labeled Test inp. gives the number of added test inputs for each circuit. 9 Conclusion In this paper we are concerned with the problem of synthesizing asynchronous sequential circuits from a high level specification, the Signal Transition Graph (STG, <ref> [3] </ref>). We have demonstrated both heuristic techniques and effective procedures to synthesize hazard-free asynchronous circuits that are testable in the very stringent hazard-free robust path-delay-fault model.
Reference: [4] <author> S. Devadas and K. Keutzer. </author> <title> Necessary and sufficient conditions for robust delay-fault testability of logic circuits. </title> <booktitle> In Proceedings of the Sixth MIT Conference on Advanced Research on VLSI, </booktitle> <pages> pages 221-238, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: A more stringent model is the hazard-free robust delay fault model, treated in <ref> [15, 4] </ref>. 3 A robust test is said to be a hazard-free robust test if no hazards can occur on the tested path during the application of the test, regardless of gate delay values. <p> Conversely, in the very same example, a cube that appears in the initial two-level cover in order to eliminate a hazard during operation makes the circuit not hfrpdft. 3 The hazard free robust path-delay-fault model is simply called the robust path-delay-fault model in <ref> [5, 4] </ref>. 4 3 Hazard-free Asynchronous Circuit Synthesis 3.1 Synthesizing Initial Two-Level Circuit The following procedures, described in more depth in [13], derive an on-set cover F and an off-set cover R for the next-state function f of signal t i , receiving as input a live STG, S, having the <p> Starting now with an irredundant two-level cover we proceed to make the cover rgdft through the introduction of a single test input. This procedure is modeled after the procedure given in [16] to improve stuck-open fault testability. To motivate this procedure we will employ the following Lemma from <ref> [4, 7] </ref>. Lemma 6.1 : Let C be a two-level single-output circuit and let g be a gate in C. If a path through g is hazard-free robustly path-delay-fault testable then g is robustly gate-delay-fault testable. <p> The vector v 0 = t v is a relatively essential vertex of q 0 and it must be the case that the vector t v is in the off-set of C 0 . Therefore by the necessary and sufficient conditions for hfrpdft in two-level networks given in <ref> [7, 4] </ref> the path associated with t in q 0 , call it is hfrpdft. Now by Lemma 6.1 given above, because is hfrpdft then the gate g associated with cube q 0 must also be rgdft.
Reference: [5] <author> S. Devadas and K. Keutzer. </author> <title> Synthesis and optimization procedures for robustly delay-fault testable logic circuits. </title> <booktitle> In Proceedings of the 27 th Design Automation Conference, </booktitle> <pages> pages 221-227, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: Conversely, in the very same example, a cube that appears in the initial two-level cover in order to eliminate a hazard during operation makes the circuit not hfrpdft. 3 The hazard free robust path-delay-fault model is simply called the robust path-delay-fault model in <ref> [5, 4] </ref>. 4 3 Hazard-free Asynchronous Circuit Synthesis 3.1 Synthesizing Initial Two-Level Circuit The following procedures, described in more depth in [13], derive an on-set cover F and an off-set cover R for the next-state function f of signal t i , receiving as input a live STG, S, having the <p> Thus the procedure immediately above creates a two-level circuit that is completely rgdft. To create a rgdft multilevel circuit from this two-level circuit then the constrained factorization techniques of <ref> [5, 6] </ref> may be applied. To see that the circuit C 0 can be made hazard-free, observe that the input t does not change during normal operation, therefore its introduction does not create any hazards.
Reference: [6] <author> S. Devadas and K. Keutzer. </author> <title> Synthesis of robust delay-fault-testable circuits: </title> <journal> Practice. IEEE Transactions on Computer-Aided Design, </journal> <volume> 11(3) </volume> <pages> 277-300, </pages> <month> March </month> <year> 1992. </year>
Reference-contexts: While a rigorous proof of the utility of this technique would require the introduction of the notion of ENF Reducibility from <ref> [1, 6] </ref>, the basic principle in operation is simply demonstrated. <p> This is due to the collapsing of paths that is a natural by-product of algebraic factorization. As a simple illustration of this consider the following example drawn from <ref> [6] </ref>: C = ab + bc + bc and its algebraic factorization M = (a + c)b + bc. <p> Thus the procedure immediately above creates a two-level circuit that is completely rgdft. To create a rgdft multilevel circuit from this two-level circuit then the constrained factorization techniques of <ref> [5, 6] </ref> may be applied. To see that the circuit C 0 can be made hazard-free, observe that the input t does not change during normal operation, therefore its introduction does not create any hazards.
Reference: [7] <author> S. Devadas and K. Keutzer. </author> <title> Synthesis of robust delay-fault testable circuits: </title> <journal> Theory. IEEE Transactions on Computer-Aided Design, </journal> <volume> 11 </volume> <pages> 87-101, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: Starting now with an irredundant two-level cover we proceed to make the cover rgdft through the introduction of a single test input. This procedure is modeled after the procedure given in [16] to improve stuck-open fault testability. To motivate this procedure we will employ the following Lemma from <ref> [4, 7] </ref>. Lemma 6.1 : Let C be a two-level single-output circuit and let g be a gate in C. If a path through g is hazard-free robustly path-delay-fault testable then g is robustly gate-delay-fault testable. <p> The vector v 0 = t v is a relatively essential vertex of q 0 and it must be the case that the vector t v is in the off-set of C 0 . Therefore by the necessary and sufficient conditions for hfrpdft in two-level networks given in <ref> [7, 4] </ref> the path associated with t in q 0 , call it is hfrpdft. Now by Lemma 6.1 given above, because is hfrpdft then the gate g associated with cube q 0 must also be rgdft.
Reference: [8] <author> E. Eichelberger and T. W. Williams. </author> <title> A logical design structure for LSI testing. </title> <booktitle> In Proceedings of the 14 th Design Automation Conference, </booktitle> <pages> pages 462-468, </pages> <month> June </month> <year> 1977. </year>
Reference-contexts: For the purposes of this paper, we will assume that 1. each flip-flop is implemented so that it has a testing mode, in which an appropriate value can be scanned in and out <ref> [8] </ref>. 2. each designer-specified signal that is not implemented with a flip-flop is either a primary input or a primary output of the integrated circuit or is otherwise made accessible (for example by insertion of a scan D-latch normally held in transparent mode).
Reference: [9] <author> M. Hack. </author> <title> Analysis of production schemata by Petri Nets. </title> <type> Technical Report TR 94, </type> <institution> Project MAC, MIT, </institution> <year> 1972. </year>
Reference-contexts: In this case they can fire in any order. Otherwise they are said to be ordered. An STG is live if it is strongly connected and for each signal t all its transitions are ordered and alternating (t + ! t ! t + : : :). In <ref> [9] </ref> was proved that a live STG can be decomposed into Finite State machine (FSM) components that cover the net (each component is sequential and exhibits non-deterministic choice).
Reference: [10] <author> S. Kundu and S. M. Reddy. </author> <title> On the design of robust testable CMOS combinational logic circuits. </title> <booktitle> In Proceedings of the International Conference on Fault Tolerant Computing Systems, </booktitle> <pages> pages 220-225, </pages> <year> 1988. </year>
Reference-contexts: implement the two-level initial on-set cover obtained in Section 3.1 as a fully hazard-free robustly path-delay-fault testable circuit that has exactly the same hazard properties as the initial two-level cover, so that the algorithm described in Section 3.2 can be used to make it hazard-free in operation and fully hfrpdft. <ref> [10] </ref> first gave a procedure, based on Shannon decomposition, to make a combinational circuit robustly path-delay-fault testable. <p> F is then algebraically decomposed into x G + x H + R, so that the variable x does not appear in any one of G, H and R. The difference between this procedure and that of <ref> [10] </ref> is the ability to partition out a remainder R. This results in a more area efficient implementation but more importantly the factoring out of the remainder ensures hazard-free operation as we will show in Section 4.2 below. We now give the procedure in detail.
Reference: [11] <author> L. Lavagno, K. Keutzer, and A. Sangiovanni-Vincentelli. </author> <title> Synthesis of verifiably hazard-free asynchronous control circuits. </title> <type> Technical Report UCB/ERL M90/99, </type> <institution> U.C. Berkeley, </institution> <year> 1990. </year>
Reference-contexts: Notice that these initial two-level implementations are guaranteed to be prime, but not irredundant, and the redundancies cannot be removed without introducing hazards in the operation of the circuit (see, for example, <ref> [11] </ref>). 5 3.2 Removing Hazards from the Initial Implementation The following procedure, described in more depth in [12], detects and removes all possible hazards from a circuit implementation I of the next-state function f of each signal, using information from the State Graph associated with the STG specification.
Reference: [12] <author> L. Lavagno, K. Keutzer, and A. Sangiovanni-Vincentelli. </author> <title> Algorithms for synthesis of hazard-free asynchronous circuits. </title> <booktitle> In Proceedings of the Design Automation Conference, </booktitle> <month> June </month> <year> 1991. </year>
Reference-contexts: 1 Introduction In this paper we are concerned with the problem of synthesizing asynchronous sequential circuits from a high level specification, the Signal Transition Graph (STG, [3]). In <ref> [13, 12] </ref> we presented a set of algorithms to solve this problem. They produce a circuit implementation that is guaranteed to be hazard-free if and only if a set of inequalities among path delays inside the circuit is satisfied. <p> Notice that these initial two-level implementations are guaranteed to be prime, but not irredundant, and the redundancies cannot be removed without introducing hazards in the operation of the circuit (see, for example, [11]). 5 3.2 Removing Hazards from the Initial Implementation The following procedure, described in more depth in <ref> [12] </ref>, detects and removes all possible hazards from a circuit implementation I of the next-state function f of each signal, using information from the State Graph associated with the STG specification.
Reference: [13] <author> L. Lavagno, K. Keutzer, and A. Sangiovanni-Vincentelli. </author> <title> Synthesis of verifiably hazard-free asynchronous control circuits. </title> <booktitle> In Proceedings of the Conference on Advanced Research in VLSI, </booktitle> <month> March </month> <year> 1991. </year> <title> 7 We can also test additional paths to make sure that the circuit does not have other kinds of faults, such as for example stuck-at faults. </title> <type> 14 </type>
Reference-contexts: 1 Introduction In this paper we are concerned with the problem of synthesizing asynchronous sequential circuits from a high level specification, the Signal Transition Graph (STG, [3]). In <ref> [13, 12] </ref> we presented a set of algorithms to solve this problem. They produce a circuit implementation that is guaranteed to be hazard-free if and only if a set of inequalities among path delays inside the circuit is satisfied. <p> We give another algorithm for producing a rgdft circuit in Section 6. Results on applying these techniques are given in Section 8. fl This work was partially supported by the National Science Foundation under Grant UCB-BS16421 1 This is useful also to remove dynamic hazards from the circuit, see <ref> [13] </ref>. 1 2 Definitions and Notation Analysis and synthesis of hazard-free asynchronous circuits which are also delay-fault testable requires spanning the fields of logic optimization, testing and asynchronous synthesis. <p> A two-level circuit is a circuit directly implementing a cover by implementing each product term by an and gate, the sum term by an or gate adding inverters on inputs as needed. An asynchronous sequential circuit is implemented, according to the techniques described in <ref> [13] </ref>, using combinational logic, asynchronous flip-flops (Set-Reset, C-elements, : : : ) and feedback wires. <p> cover in order to eliminate a hazard during operation makes the circuit not hfrpdft. 3 The hazard free robust path-delay-fault model is simply called the robust path-delay-fault model in [5, 4]. 4 3 Hazard-free Asynchronous Circuit Synthesis 3.1 Synthesizing Initial Two-Level Circuit The following procedures, described in more depth in <ref> [13] </ref>, derive an on-set cover F and an off-set cover R for the next-state function f of signal t i , receiving as input a live STG, S, having the USC property, with initial marking m. <p> Unfortunately, while this procedure results in a hazard-free robust path-delay-fault testable implementation it may not result in an implementation that is hazard-free during normal operation, as is required. 4 We limit ourselves to such operations because, as shown in <ref> [13] </ref>, I then has exactly the same hazards as F . 5 There exists only one such path if I is obtained using only distributivity and associativity. 6 Obtained from a delay analysis of the circuit implementing signal t 2 , or assumed to be 0. 6 Take for example the
Reference: [14] <author> C. J. Lin and S. M. Reddy. </author> <title> On delay fault testing in logic circuits. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 694-703, </pages> <month> September </month> <year> 1987. </year>
Reference-contexts: 2 &gt; is said to be a robust delay test for a path , if and only if, when is faulty and the test T is applied, the circuit output is different from the expected output at sampling time, independent 3 of the delays along gate input leads not on <ref> [14] </ref>. A more stringent model is the hazard-free robust delay fault model, treated in [15, 4]. 3 A robust test is said to be a hazard-free robust test if no hazards can occur on the tested path during the application of the test, regardless of gate delay values.
Reference: [15] <author> A. Pramanick and S. Reddy. </author> <title> On the design of path delay fault testable combinational circuits. </title> <booktitle> In Proceedings of the 20 th Fault Tolerant Computing Symposium, </booktitle> <pages> pages 374-381, </pages> <month> June </month> <year> 1990. </year>
Reference-contexts: A more stringent model is the hazard-free robust delay fault model, treated in <ref> [15, 4] </ref>. 3 A robust test is said to be a hazard-free robust test if no hazards can occur on the tested path during the application of the test, regardless of gate delay values.
Reference: [16] <author> S. M. Reddy and M. K. Reddy. </author> <title> Testable realization for FET stuck-open faults in CMOS combinational logic circuits. </title> <journal> In IEEE Transactions on Computers, </journal> <volume> volume C-35, </volume> <pages> pages 742-754, </pages> <month> August </month> <year> 1986. </year>
Reference-contexts: For each redundant cube in the cover we add one test input. Starting now with an irredundant two-level cover we proceed to make the cover rgdft through the introduction of a single test input. This procedure is modeled after the procedure given in <ref> [16] </ref> to improve stuck-open fault testability. To motivate this procedure we will employ the following Lemma from [4, 7]. Lemma 6.1 : Let C be a two-level single-output circuit and let g be a gate in C.
Reference: [17] <author> S. H. Unger. </author> <title> Asynchronous Sequential Switching Circuits. </title> <publisher> Wiley Interscience, </publisher> <year> 1969. </year> <month> 15 </month>
Reference-contexts: wish to show that the techniques used to make the circuit hazard-free robustly path delay fault testable do not destroy the possibility to make the circuit hazard-free in operation using the algorithm described in Section 3.2 To do this we will find it useful to apply the following Theorem, of <ref> [17] </ref>: Theorem 4.3 Let T be a two-level representation of a logic function f . Let M be a multi-level representation of f such that it can be obtained from T using only the associative, distributive and De Morgan laws. <p> This implementation is hfrpdft. Another case in which this can be useful is when the on-set cover of f obtained by the algorithm in Section 3.1 is redundant, while the corresponding off-set cover is not. Having implemented R, we can apply Lemma 4.7 of <ref> [17] </ref> that states that introducing an inverter at the output of a circuit can does not introduce or remove hazards. <p> However, because our synthesis for testability techniques so carefully preserve the nature of the original two-level cover, we believe that the same techniques can be applied to achieve fully testable implementations of circuits produced by other asynchronous synthesis procedures, such as the ones described in <ref> [17] </ref>.
References-found: 17

