URL: ftp://ftp.cs.columbia.edu/reports/reports-1990/cucs-065-90b.ps.gz
Refering-URL: http://www.cs.columbia.edu/~library/1990.html
Root-URL: http://www.cs.columbia.edu
Title: 1.0 Introduction projection of an object in the image is interpreted wherever possible as a
Note: "The  
Abstract: It is hard to precisely define what the "vision problem" is since such definitions in the literature have not always been consistent. A reasonable definition might be : Given an image, construct a reasonable hypothesis for the 3D scene that generated the image. Even people rarely know with absolute certainty what is actually out there, but we are able to hypothesize intelligently, given an image, about what is probably in the scene. It is the purpose of this paper to propose both a general heuristic and an algorithm based on the heuristic that allows for such hypothesis formation to be generated for objects in an image that have symmetric regions and can be locally approximated by a cylindrical surface. Many, if not most, man-made objects satisfy this property. The method presented in this paper is different than previous approaches to the problem in that it is both heuristic-driven and context-sensitive and is capable of recovering 3D shape modulo scale (see section 2). The algorithm relies on a context-sensitive hierarchy, developed in the paper, where certain recoverable parameters are more context-sensitive than others. Though the notion of context-sensitivity is pervasive in such fields as computational linguistics, it is often ignored or only impli-citily acknowledged in the computational vision community (with the exception of perceptual organization researchers). The general rule in resolving context-sensitive parameters is that the more context-sensitive a parameter is, the later in the algorithm it should be resolved. Since the more context-sensitive a problem is, the more global the computation required to solve it, it is natural to try and solve the more local problems before attempting to solve the more global ones. Many objects in both the man-made world and nature exhibit some degree of symmetry. Formally, an object exhibits symmetry whenever it can be divided into two or more parts which can be permuted by the application of certain isometries which leave the original object unchanged [yale88]. Two symmetry operations for planar figures are reflection and rotation. The letter M is a reflexive symmetry while the letter S is a rotational symmetry. The letter H is both reflexively (i.e., laterally) and rotationally symmetric. If a planar figure is arbitrarily rotated in three dimensions and projected orthographically onto the image plane, the projected figure is generally no longer reflexive symmetric. A projected symmetric figure can also be generated by skewing and rotating some (other) symmetric figure in the image plane (see [freid86]). Orthographic projection is assumed throughout this paper, although it should be noted that 3D shape is recovered in this paper for objects whose images were clearly taken under perspective projection. Under orthographic projection, a right angle can project onto a right, acute, or obtuse angle in the image plane. Consequently, the reflexive symmetric contour in figure 1a projects onto the skew symmetric contour shown in figure 1b, where skew symmetry is defined in [kan81] as a symmetry not necessarily perpendicular to the axis, but at a fixed angle to it. A skewed symmetry defines two directions, a skewed-symmetry axis and a skewed-transverse axis, as shown in figure 1b. In the real world, skew symmetric contours occur often. Figure 2a is an edge image of a PUMA robot arm from the Columbia Vision and Robotics Lab, while figure 2b is a skew symmetric contour that was hand-segmented from the same image. Also shown in Figure 2b, overlaid on the skew symmetric contour, are the axes of skew recovered by SYMAN. Similarly, figure 3a shows a SUN4 SPARC workstation in the lab, figure 3b shows a hand-segmented skew symmetric contour from the same image, and figure 3c shows the deskewed contour with the recovered symmetry axes (again, using SYMAN). Symmetry and skew symmetry are discussed in greater detail in section 3. This paper presents a general algorithm for recovering 3D shape (modulo scale) from an assumption of underlying 3D object symmetry. In other words, the recovery algorithm is guided by a general heuristic referred to as the shape from objects of symmetry heuristic (hereafter referred to as the SOS heuristic). The SOS heuristic used in the sequel can be stated as follows: Although the terms symmetry and skew symmetry are defined formally in this paper (section 3), the term "symmetric object" is not. The term is difficult to define because often, in the real world, objects are not exactly symmetric but only approximately so. This motivates the need for a more general class of symmetry that takes into consideration approximate symmetry. A formal definition of this type of symmetry, termed e-symmetry, is given in [gros90b]. The term "symmetric object" is best clarified by example; this is 
Abstract-found: 1
Intro-found: 1
Reference: [barn84] <author> Barnard, S., </author> <title> Choosing a basis for perceptual space, </title> <booktitle> IEEE Workshop on Computer Vision: Representation and Control, </booktitle> <year> 1984. </year>
Reference-contexts: In addition, if the projected set of object-centered coordinate axes can be determined from the image directly then the transformation between viewer-centered and object-centered coordinate systems is easily computed (see <ref> [barn84] </ref>) to a mirror reversal. But for symmetric objects, like the car in figure 10, there is a natural 3D orthogonal coordinate system in which to parameterize it and the object's image basis (set of projected coordinate axes) can often be determined directly from the image. <p> The detected image axes P i , P j and P k intersect the horizontal axis at angles of -137, -18.5, and 88 degrees. They are shown, overlaid on the car intensity image, in figure 28. Having the image axes, the underlying 3D coordinate system is easily computed (see <ref> [barn84] </ref>) and are given in (x ,y ,z ) viewer-centered coordinates (where positive x is the right horizontal image axis, positive y is the upper vertical image axis, and positive z is perpendicular to the image plane, coming out of the page) by i = -.5 x fi - .451 y
Reference: [brad84] <author> Brady, J.M., and Asada, H., </author> <title> Smoothed local symmetries and their implementation, </title> <journal> International Journal of Robotics Research 3, </journal> <volume> No. 3, </volume> <year> 1984. </year>
Reference-contexts: The other two methods implemented as part of SYMAN are adapted from [ponce90] and [marc90]. The method described in [ponce90] has a necessary curvature-based constraint among pairs of skew symmetric contour points. This necessary constraint is used analogously to Brady's technique for finding axes of smooth local symmetry <ref> [brad84] </ref>. The method in [marc90] uses a constraint (to solve for a of transformation T , equation 3.2.1) that requires a pure skew (no rotational component) to have a linear bisector of the local transverse axes (lines connecting corresponding skew points).
Reference: [brad83] <author> Brady, J.M., and Yuille, A., </author> <title> An extremum principle for shape from contour, </title> <publisher> MIT, </publisher> <address> AI Lab., MIT-AIM 711, </address> <year> 1983. </year>
Reference-contexts: One approach to recovering shape from edges relies on heuristics. Kanade [kan81] recovers the shape of skewed contours by interpreting them as projections of real symmetries in the scene and then resolves the gradient ambiguity by selecting an interpretation that minimizes slant. Brady and Yuille - 3 - <ref> [brad83] </ref> interpret a contour as a scene curve of maximum compactness. Such heuristic-based approaches fail, by definition, when the heuristics are violated. Since the actual scene parameters are generally not known apriori, the only way to determine if a heuristic is being violated is from additional image context.
Reference: [brook81] <author> Brooks&lt;, R. A., </author> <title> Symbolic reasoning among 3-D models and 2-D images, </title> <booktitle> Artificial Intelligence 17, </booktitle> <pages> 285-348, </pages> <year> 1981. </year>
Reference-contexts: Another class of methods aimed at recovering shape from edges can be termed model-based. A good example of this type of approach is that of ACRONYM <ref> [brook81] </ref>. In ACRONYM, the domain was restricted to a few, specific classes of generalized cylinders (which were further constrained by specific model information). Another example of model-based shape from contour recovery is that of [ponce89] where torii are recovered from edge contours.
Reference: [freid86] <author> Freidberg, S.A., </author> <title> Finding Axes of Skewed Symmetry, </title> <booktitle> in Computer Vision, Graphics, and Image Processing, </booktitle> <volume> 34, </volume> <pages> 138-155, </pages> <year> 1986. </year>
Reference-contexts: If a planar figure is arbitrarily rotated in three dimensions and projected orthographically onto the image plane, the projected figure is generally no longer reflexive symmetric. A projected symmetric figure can also be generated by skewing and rotating some (other) symmetric figure in the image plane (see <ref> [freid86] </ref>). Orthographic projection is assumed throughout this paper, although it should be noted that 3D shape is recovered in this paper for objects whose images were clearly taken under perspective projection. Under orthographic projection, a right angle can project onto a right, acute, or obtuse angle in the image plane. <p> Axial ambiguity is defined as the number of skew symmetry axes, i.e., degree of skew symmetry, of the skew symmetric contour. (This defintion is not equivalent to the definiton for shear ambiguity given in <ref> [freid86] </ref>, see [gros90a].) This definition of axial ambiguity is consistent with a view towards recovering the underlying local 2D coordinate system of the planar figure in the scene. <p> This ambiguity is directly computable from the image. In this paper, the oblique-coordinate-transformation formulation of skew is used (as described above) rather than the general one of 3D orthographic mapping. The motivation for this is basically the same reason as that given in <ref> [freid86] </ref>, i.e., it is mathematically convienent. The mapping from 3D orthographic projection to image skew tranformation is, unfortunately, infinitely many to one. It is many to one, generally refered to as gradient ambiguity, because uncountably many different -planar figure, 3D orientation-pairs project onto the same image contour.
Reference: [gros90a] <author> Gross, A.D., Boult, T.E., </author> <title> Analyzing Skewed Symmetries, </title> <type> Technical Report CUCS-064-90, </type> <institution> Department of Computer Science, Columbia University. </institution>
Reference-contexts: If the underlying shapes in the scene is presumed to have some degree of real symmetry then we can expect its image to exhibit some degree of skew symmetry. In a related paper <ref> [gros90a] </ref>, methods of detecting skew symmetric contours are presented. This paper assumes that, starting with an intensity image, the edge map has been generated and that skew symmetric edges have been detected. <p> A method for finding axes of skewed symmetry given a skewed planar contour is an important step in the larger shape recovery algorithm. To find such axes of skewed symmetry, the algorithm presented in this paper relies on a symmetry analyzer named SYMAN <ref> [gros90a] </ref>. A review of techniques for finding axes of skew is given in [gros90b] (also see [ponce90][marc90],[yuen89][freid86]). SYMAN finds axes of skew given a skewed contour and can conjecture about certain properties of the skew contour such as the degree of skew symmetry (see [gros90a]). <p> on a symmetry analyzer named SYMAN <ref> [gros90a] </ref>. A review of techniques for finding axes of skew is given in [gros90b] (also see [ponce90][marc90],[yuen89][freid86]). SYMAN finds axes of skew given a skewed contour and can conjecture about certain properties of the skew contour such as the degree of skew symmetry (see [gros90a]). The SYMAN system is discussed in section 4. Many vision researchers have focused on recovering shape from contour (i.e., edges), while ignoring other image cues, such as image intensity, for two primary reasons. The first is that humans seems very adept at shape from contour, without additional cues. <p> Axial ambiguity is defined as the number of skew symmetry axes, i.e., degree of skew symmetry, of the skew symmetric contour. (This defintion is not equivalent to the definiton for shear ambiguity given in [freid86], see <ref> [gros90a] </ref>.) This definition of axial ambiguity is consistent with a view towards recovering the underlying local 2D coordinate system of the planar figure in the scene. A way of viewing axial ambiguity is as the number of local oblique coordinate systems that can be selected given a skewed image contour. <p> SYMAN, described in section 4, is capable of solving for axes of skew given a skewed contour. Although no algorithm is presented in this paper for finding skewed contours in an image (but see <ref> [gros90a] </ref> for some moment-based techniques), the constraints given in (3.2.3) provide a necessary and sufficient condition for a contour to be skew symmetric (although it does not allow for occlusion). 3.3 Some Propositions From the definitions in section 3.1, some propositions can be derived: Proposition 3.1: If a curve C fi <p> As SYMAN is not the focus of this paper, but rather a module in a larger 3D shape recovery method, the description of the system is necessarily brief. For a more detailed description of SYMAN see <ref> [gros90a] </ref>. Section 4.2 provides several examples of input to SYMAN and the solutions generated by the system. <p> A survey of current techniques for finding axes of skew is given in [gros90b]. SYMAN consists of different components. In particular, it is capable of running 4 different algorithms to recover axes of skew. Two of these algorithms are derived in <ref> [gros90a] </ref>. One of these algorithms is a fast, moment-based technique, robust under noise and discontinuities, but that does not perform well under occlusion. The second algorithm is local, i.e., required to make pointwise comparisons to look for skew pairs.
Reference: [gros90b] <author> Gross, A.D., Boult, T.E., </author> <title> Skew symmetry detection: Evaluating the state of the art, </title> <type> Technical Report, </type> <institution> Department of Computer Science, Columbia University. </institution>
Reference-contexts: This motivates the need for a more general class of symmetry that takes into consideration approximate symmetry. A formal definition of this type of symmetry, termed e-symmetry, is given in <ref> [gros90b] </ref>. The term "symmetric object" is best clarified by example; this is - 2 - done in section 5. <p> To find such axes of skewed symmetry, the algorithm presented in this paper relies on a symmetry analyzer named SYMAN [gros90a]. A review of techniques for finding axes of skew is given in <ref> [gros90b] </ref> (also see [ponce90][marc90],[yuen89][freid86]). SYMAN finds axes of skew given a skewed contour and can conjecture about certain properties of the skew contour such as the degree of skew symmetry (see [gros90a]). The SYMAN system is discussed in section 4. <p> A survey of current techniques for finding axes of skew is given in <ref> [gros90b] </ref>. SYMAN consists of different components. In particular, it is capable of running 4 different algorithms to recover axes of skew. Two of these algorithms are derived in [gros90a]. <p> The reason for wanting SYMAN to implement all of these methods is because each of the methods appears to have certain strengths and the trick seems to be in knowing when to use each technique (see <ref> [gros90b] </ref>). For example, the moment-based method used by SYMAN does not perform well under partial occlusion or when the degree of skew symmetry is large (greater than 4). The method of [ponce90] does not work well on linear or discontinuous contours.
Reference: [hor87] <author> Horaud, R., and Brady, J.M., </author> <title> On the geometric interpretation of image contours, </title> <booktitle> in Proc. First Int'l Conference on Computer Vision, </booktitle> <address> London, U.K., </address> <month> June </month> <year> 1987. </year>
Reference-contexts: These model-based methods generally take advantage of information available from extremal and/or discontinuous edges. Such shape recovery, however, is restricted to particular classes of shape models. There are also hybrid approaches that use heuristics coupled with models, such as <ref> [hor87] </ref> and [ulup88]. In [hor87], for example, a contour is interpreted as being the projection of a maximally compact 3D curve that is consistent with being the orthogonal cross-section curve of a generalized cylinder. <p> These model-based methods generally take advantage of information available from extremal and/or discontinuous edges. Such shape recovery, however, is restricted to particular classes of shape models. There are also hybrid approaches that use heuristics coupled with models, such as <ref> [hor87] </ref> and [ulup88]. In [hor87], for example, a contour is interpreted as being the projection of a maximally compact 3D curve that is consistent with being the orthogonal cross-section curve of a generalized cylinder. Such hybrid methods are still restricted to recovering shape for projections from a limited class of shape models.
Reference: [kan81] <author> Kanade, T., </author> <title> Recovery of the 3D shape of an object from a single view, </title> <journal> Artificial Intelligence, </journal> <volume> vol. 17, </volume> <pages> pages. 409-460, </pages> <year> 1981. </year> <month> - 13 </month> - 
Reference-contexts: Under orthographic projection, a right angle can project onto a right, acute, or obtuse angle in the image plane. Consequently, the reflexive symmetric contour in figure 1a projects onto the skew symmetric contour shown in figure 1b, where skew symmetry is defined in <ref> [kan81] </ref> as a symmetry not necessarily perpendicular to the axis, but at a fixed angle to it. A skewed symmetry defines two directions, a skewed-symmetry axis and a skewed-transverse axis, as shown in figure 1b. In the real world, skew symmetric contours occur often. <p> There have, in general, been three basic approaches to the problem. In this section, each of these approaches is reviewed and critiqued. One approach to recovering shape from edges relies on heuristics. Kanade <ref> [kan81] </ref> recovers the shape of skewed contours by interpreting them as projections of real symmetries in the scene and then resolves the gradient ambiguity by selecting an interpretation that minimizes slant. Brady and Yuille - 3 - [brad83] interpret a contour as a scene curve of maximum compactness. <p> The solutions for the plane orientation are constrained to lie along the locus of a hyperbola in the gradient space <ref> [kan81] </ref>.
Reference: [lowe85] <author> Lowe, D. G., </author> <title> Perceptual organization and visual recognition, </title> <publisher> Kluwer Academic Publishers, </publisher> <address> Boston, </address> <year> 1985. </year>
Reference-contexts: Such hybrid methods are still restricted to recovering shape for projections from a limited class of shape models. A third approach is that of perceptual organization, as in lowe <ref> [lowe85] </ref> and mohan [moh89]. Perceptual organization is defined in [lowe85] as the basic capablity of the human visual system to derive relevant groupings and structures from an image without prior knowledge of its contents. <p> Such hybrid methods are still restricted to recovering shape for projections from a limited class of shape models. A third approach is that of perceptual organization, as in lowe <ref> [lowe85] </ref> and mohan [moh89]. Perceptual organization is defined in [lowe85] as the basic capablity of the human visual system to derive relevant groupings and structures from an image without prior knowledge of its contents. Techniques in computer vision that try and mimmick these human capabilities are referred to in this paper as perceptual organization methods. <p> in <ref> [lowe85] </ref>[moh89] are sensitive to context while at the same time are not constrained to a set of specific models (although there are some prior expectations of regularity, parallelism, etc.). Perceptual organization techniques have not actually been used to recover 3D shape, but rather to recover meaningful 2D features. In [lowe85] an organized 2D representation of the image was generated and then, to recover the underlying shape, the recovered features were matched to a set of models (e.g., stapler). <p> The approach taken in this paper most closely resembles the perceptual organization work. A general heuristic is used that is context-sensitive in that it considers how neighboring contours impact on each other. No specific shape models are assumed. A filtering technique that is similar to the method described in <ref> [lowe85] </ref> is used to resolve axial ambiguity (section 5) and to find an object basis (section 7). The method described in this paper is different from the methods described in [lowe85] and [moh89] in that 3D shape (modulo scale) is actually recovered without models or a database. <p> No specific shape models are assumed. A filtering technique that is similar to the method described in <ref> [lowe85] </ref> is used to resolve axial ambiguity (section 5) and to find an object basis (section 7). The method described in this paper is different from the methods described in [lowe85] and [moh89] in that 3D shape (modulo scale) is actually recovered without models or a database. <p> In addition, a context-sensitive hierarchy is developed so that certain computations such as resolution of axial ambiguity are shown to be more local (less sensitive to context) than other computations, such as resolutiomn of gradient ambiguity (see section 6). In <ref> [lowe85] </ref> and [moh89], by contrast, the computations are generally global, taken over the entire image (e.g., constraint satisfaction networks), and consequently tend to be very computationally expensive. 3.0 Symmetry and Skew Symmetry Since the recovery heuristic assumes underlying symmetry in the scene, some definitions of symmetry are appropriate. <p> Stevens notes that the minimal line of curvature remains parallel as one moves along the surface's maximal line of curvature. Thus, if a set of adjacent local coordinate systems all have a parallel coordinate axis direction, using a non-accidentalness criterion analogous to <ref> [lowe85] </ref>, it is strongly indicative of an underlying locally cylindrical 3D surface in the scene. As in [lowe85] and [moh89], parallel cues are within a certain tolerance; in the examples in this section, lines were considered parallel if they were within - 15 degrees. <p> Thus, if a set of adjacent local coordinate systems all have a parallel coordinate axis direction, using a non-accidentalness criterion analogous to <ref> [lowe85] </ref>, it is strongly indicative of an underlying locally cylindrical 3D surface in the scene. As in [lowe85] and [moh89], parallel cues are within a certain tolerance; in the examples in this section, lines were considered parallel if they were within - 15 degrees.
Reference: [moh89] <author> Mohan, R., </author> <title> Perceptual organization for computer vision, </title> <type> PhD thesis, </type> <institution> School of Engineering, University of Southern California, </institution> <month> August, </month> <year> 1989. </year>
Reference-contexts: Such hybrid methods are still restricted to recovering shape for projections from a limited class of shape models. A third approach is that of perceptual organization, as in lowe [lowe85] and mohan <ref> [moh89] </ref>. Perceptual organization is defined in [lowe85] as the basic capablity of the human visual system to derive relevant groupings and structures from an image without prior knowledge of its contents. <p> In [lowe85] an organized 2D representation of the image was generated and then, to recover the underlying shape, the recovered features were matched to a set of models (e.g., stapler). In <ref> [moh89] </ref>, the end result is a set of collated features (e.g., ribbons) that are useful as high-level features for stereo matching. The approach taken in this paper most closely resembles the perceptual organization work. <p> No specific shape models are assumed. A filtering technique that is similar to the method described in [lowe85] is used to resolve axial ambiguity (section 5) and to find an object basis (section 7). The method described in this paper is different from the methods described in [lowe85] and <ref> [moh89] </ref> in that 3D shape (modulo scale) is actually recovered without models or a database. <p> In addition, a context-sensitive hierarchy is developed so that certain computations such as resolution of axial ambiguity are shown to be more local (less sensitive to context) than other computations, such as resolutiomn of gradient ambiguity (see section 6). In [lowe85] and <ref> [moh89] </ref>, by contrast, the computations are generally global, taken over the entire image (e.g., constraint satisfaction networks), and consequently tend to be very computationally expensive. 3.0 Symmetry and Skew Symmetry Since the recovery heuristic assumes underlying symmetry in the scene, some definitions of symmetry are appropriate. <p> We will alternate between these two methods. Two solutions for the skew symmetric contour of figure 5a are shown (in deskewed, derotated format) in figure 5b and figure 5c. Consider the skewed picture, taken from Mohan <ref> [moh89] </ref> (originally from Marr), shown in figure 6a. There are 4 solutions recovered by SYMAN (two solutions are duals of the first two), two of which are shown in figures 6b and 6c. <p> Thus, if a set of adjacent local coordinate systems all have a parallel coordinate axis direction, using a non-accidentalness criterion analogous to [lowe85], it is strongly indicative of an underlying locally cylindrical 3D surface in the scene. As in [lowe85] and <ref> [moh89] </ref>, parallel cues are within a certain tolerance; in the examples in this section, lines were considered parallel if they were within - 15 degrees. For the four contours in figure 12, the solutions for the skew transverse axes (i.e., the rotational component of skew transformation T ), were sorted.
Reference: [nal87a] <author> Nalwa, </author> <title> Vic, Line-drawing interpretation: Bilateral symmetry, </title> <booktitle> in Proceedings of the Image Understanding Workshop, </booktitle> <volume> vol. 2, </volume> <month> Feb., </month> <year> 1987, </year> <pages> pp. 956-967. </pages>
Reference-contexts: The elliptical contour in Figure 4 is the projected cross-section curve of a generalized cylinder and is clearly not a circular curve in the scene since the extremal edges (i.e., limbs) do not preserve bilateral symmetry (see <ref> [nal87a] </ref>). Another class of methods aimed at recovering shape from edges can be termed model-based. A good example of this type of approach is that of ACRONYM [brook81]. In ACRONYM, the domain was restricted to a few, specific classes of generalized cylinders (which were further constrained by specific model information).
Reference: [nal87b] <author> Nalwa, </author> <title> Vic, Line-drawing interpretation: </title> <booktitle> Straight-lines and conic-sections, in Proceedings of the Image Understanding Workshop, </booktitle> <volume> vol. 2, </volume> <month> Feb., </month> <year> 1987, </year> <pages> pp. 942-955. </pages>
Reference: [ponce90] <author> Ponce, J., </author> <title> On characterizing ribbons and finding skewed symmetries, accepted for publication in Computer Vision, Graphics, </title> <booktitle> and Image Processing, </booktitle> <month> Fall </month> <year> 1990. </year>
Reference-contexts: It is based on a constraint derived between tangent values of skew pairs of points and is able to solve for axes of skew under occlusion. The other two methods implemented as part of SYMAN are adapted from <ref> [ponce90] </ref> and [marc90]. The method described in [ponce90] has a necessary curvature-based constraint among pairs of skew symmetric contour points. This necessary constraint is used analogously to Brady's technique for finding axes of smooth local symmetry [brad84]. <p> It is based on a constraint derived between tangent values of skew pairs of points and is able to solve for axes of skew under occlusion. The other two methods implemented as part of SYMAN are adapted from <ref> [ponce90] </ref> and [marc90]. The method described in [ponce90] has a necessary curvature-based constraint among pairs of skew symmetric contour points. This necessary constraint is used analogously to Brady's technique for finding axes of smooth local symmetry [brad84]. <p> For example, the moment-based method used by SYMAN does not perform well under partial occlusion or when the degree of skew symmetry is large (greater than 4). The method of <ref> [ponce90] </ref> does not work well on linear or discontinuous contours. The line-based method of [marc90] is very sensitive to outliers, which occur when contours are complex and non-convex.
Reference: [ponce89] <author> Ponce, J., and Kriegman, </author> <title> D.J., On recognizing and positioning curved 3D objects from image contours, </title> <booktitle> in IEEE Proceedings of the Workshop on 3D Interpretation of Scenes, </booktitle> <pages> pages 116-123, </pages> <month> Nov. </month> <pages> 27-29, </pages> <address> 1989, Austin, TX. </address>
Reference-contexts: A good example of this type of approach is that of ACRONYM [brook81]. In ACRONYM, the domain was restricted to a few, specific classes of generalized cylinders (which were further constrained by specific model information). Another example of model-based shape from contour recovery is that of <ref> [ponce89] </ref> where torii are recovered from edge contours. These model-based methods generally take advantage of information available from extremal and/or discontinuous edges. Such shape recovery, however, is restricted to particular classes of shape models. There are also hybrid approaches that use heuristics coupled with models, such as [hor87] and [ulup88].
Reference: [rao88] <author> Rao, K., </author> <title> Shape description from sparse and imperfect data, </title> <type> Technical Report IRIS-250, </type> <institution> Institute for Robotics and Intelligent Systems, USC, </institution> <month> December </month> <year> 1988. </year> <type> Ph.D. Thesis. </type>
Reference-contexts: This paper does not consider other more general definitions of symmetry that have been defined in the context of ribbons (see [rosen86]) and generalized cylinders (see <ref> [rao88] </ref>). A method for finding axes of skewed symmetry given a skewed planar contour is an important step in the larger shape recovery algorithm. To find such axes of skewed symmetry, the algorithm presented in this paper relies on a symmetry analyzer named SYMAN [gros90a].
Reference: [rosen86] <author> Rosenfeld, A., </author> <title> Axial representation of shape, </title> <journal> Journal of Computer Vision, Graphics, and Image Processing, </journal> (33):156-173, 1986. 
Reference-contexts: This paper does not consider other more general definitions of symmetry that have been defined in the context of ribbons (see <ref> [rosen86] </ref>) and generalized cylinders (see [rao88]). A method for finding axes of skewed symmetry given a skewed planar contour is an important step in the larger shape recovery algorithm. To find such axes of skewed symmetry, the algorithm presented in this paper relies on a symmetry analyzer named SYMAN [gros90a].
Reference: [marc90] <author> Saint-Marc, P., and Medinoni, G., </author> <title> B-spline contour representation and symmetry detection, </title> <type> technical report, </type> <institution> Institute for Robotics and Intelligent Systems, University of Southern Califor-nia, </institution> <address> Los Angeles, CA, </address> <month> Feb 20, </month> <year> 1990. </year>
Reference-contexts: It is based on a constraint derived between tangent values of skew pairs of points and is able to solve for axes of skew under occlusion. The other two methods implemented as part of SYMAN are adapted from [ponce90] and <ref> [marc90] </ref>. The method described in [ponce90] has a necessary curvature-based constraint among pairs of skew symmetric contour points. This necessary constraint is used analogously to Brady's technique for finding axes of smooth local symmetry [brad84]. The method in [marc90] uses a constraint (to solve for a of transformation T , equation <p> two methods implemented as part of SYMAN are adapted from [ponce90] and <ref> [marc90] </ref>. The method described in [ponce90] has a necessary curvature-based constraint among pairs of skew symmetric contour points. This necessary constraint is used analogously to Brady's technique for finding axes of smooth local symmetry [brad84]. The method in [marc90] uses a constraint (to solve for a of transformation T , equation 3.2.1) that requires a pure skew (no rotational component) to have a linear bisector of the local transverse axes (lines connecting corresponding skew points). <p> For example, the moment-based method used by SYMAN does not perform well under partial occlusion or when the degree of skew symmetry is large (greater than 4). The method of [ponce90] does not work well on linear or discontinuous contours. The line-based method of <ref> [marc90] </ref> is very sensitive to outliers, which occur when contours are complex and non-convex. By having several methods to choose from, and some decision criteria for when to use each, it is hoped that SYMAN can be made more robust.
Reference: [stev81] <author> Stevens, K.A., </author> <title> The visual interpretation of surface contours, </title> <booktitle> Artificial Intelligence17, </booktitle> <pages> 47-73, </pages> <year> 1981. </year>
Reference-contexts: Having recovered these local 2D coordinate systems, adjacent contours are then grouped into surface collations based on the degree of parallelism among their local coordinate systems and, using a constraint from Stevens <ref> [stev81] </ref>, gradient constraints can be computed for each locally symmetric region (section 6). In section 7, a method is presented for finding an orthogonal basis for object space. <p> Why is this a desirable property, namely, what do coincident axial directions of adjacent surface patches tell us about the underlying regularity of the surface? Consider figure 17, taken from <ref> [stev81] </ref>. It is the image of an orthographically projected developable, (singly curved,) locally cylindrical surface. Stevens notes that the minimal line of curvature remains parallel as one moves along the surface's maximal line of curvature. <p> For a set of adjacent skew symmetric contours, there is generally no method for recovering the unique gradient for each skew symmetric region. Using a method from Stevens <ref> [stev81] </ref>, however, the gradient solution at each contour can be constrained. In this section, Stevens' method is reviewed briefly and then applied to constrain the gradient value of contours in the car image (figure 11). <p> This degree of freedom is equivalent to Kanade's hyperbola in the gradient space (see <ref> [stev81] </ref>). The angle of intersection b 1 is computable from the image axes. <p> = a sin b 2, cos b 2 a a 2 + 1 hhhhhh , sin b 2 -. (6.7) Since N 1 and N 2 are both functions of unknown parameter a , a constraint or solution of one normal value will propagate to the other normal value (see <ref> [stev81] </ref>). For a given angle b to correspond to the projection of a perpendicular intersection, the intersection can only have certain 3D orientations with respect to the viewer. These limits are shown in Figure 25.
Reference: [ulup88] <author> Ulupinar, F., and Nevatia, R., </author> <title> Using symmetries for analysis of shape from contour, </title> <booktitle> in Proceedings of the Second International Computer Vision Conference, </booktitle> <pages> 414-426, </pages> <month> Dec. </month> <pages> 5-8, </pages> <year> 1988. </year>
Reference-contexts: These model-based methods generally take advantage of information available from extremal and/or discontinuous edges. Such shape recovery, however, is restricted to particular classes of shape models. There are also hybrid approaches that use heuristics coupled with models, such as [hor87] and <ref> [ulup88] </ref>. In [hor87], for example, a contour is interpreted as being the projection of a maximally compact 3D curve that is consistent with being the orthogonal cross-section curve of a generalized cylinder. Such hybrid methods are still restricted to recovering shape for projections from a limited class of shape models.
Reference: [yale88] <author> Yale, P., </author> <title> Geometry and Symmetry, </title> <publisher> Dover Books, </publisher> <address> San Francisco, </address> <year> 1988. </year>
Reference-contexts: Many objects in both the man-made world and nature exhibit some degree of symmetry. Formally, an object exhibits symmetry whenever it can be divided into two or more parts which can be permuted by the application of certain isometries which leave the original object unchanged <ref> [yale88] </ref>. Two symmetry operations for planar figures are reflection and rotation. The letter M is a reflexive symmetry while the letter S is a rotational symmetry. The letter H is both reflexively (i.e., laterally) and rotationally symmetric.
References-found: 21

