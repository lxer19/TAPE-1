URL: http://www.cs.virginia.edu/~cw2e/res/drareviewps.ps
Refering-URL: http://www.cs.virginia.edu/~cw2e/res/sec_biblio.html
Root-URL: http://www.cs.virginia.edu
Title: A Survey of Authentication Protocol Literature: Version 1.0  
Author: John Clark and Jeremy Jacob 
Date: 17 November 1997  
Abstract-found: 0
Intro-found: 1
Reference: [2] <author> J. Adam. </author> <booktitle> Cryptography = Privacy? IEEE Spectrum, </booktitle> <pages> pages 2935, </pages> <month> August </month> <year> 1992. </year> <title> A racy bit of journalism providing an account of the debate surrounding the Digital Signature Standard. The views of the NSA are recorded regarding its role in the promotion of DSS (and the dropping of RSA) together with a rebuttal by Ron Rivest. A good background read. </title>
Reference-contexts: It is based on El Gamal encryption. Schneier provides a good account of the algorithm [99] and a good journalistic account of the controversy can be found in the paper by Adam <ref> [2] </ref>. Other digital signatures schemes include ESIGN, McEliece (based on algebraic coding theory). Akl provides a good tutorial guide to digital signatures in general [3]. 3.4 Hybrid Protocols There are some protocols that use both public and symmetric key cryptography.
Reference: [3] <author> Selim G. Akl. </author> <title> Digital Signatures: A Tutorial Survey. </title> <booktitle> Computer, </booktitle> <pages> pages 1524, </pages> <month> February </month> <year> 1983. </year> <title> This paper provides an overview of various forms of digital signatures and their implementation (in 1983). Public, private and hybrid approaches to digital signatures are described. Both true and and arbitrated schemes are given. A good overview. </title> <type> 69 </type>
Reference-contexts: Schneier provides a good account of the algorithm [99] and a good journalistic account of the controversy can be found in the paper by Adam [2]. Other digital signatures schemes include ESIGN, McEliece (based on algebraic coding theory). Akl provides a good tutorial guide to digital signatures in general <ref> [3] </ref>. 3.4 Hybrid Protocols There are some protocols that use both public and symmetric key cryptography. An example of such is the unusual (but seemingly very effective) Encrypted Key Exchange (EKE) protocol by Bellovin and Merritt [15].
Reference: [4] <author> Ross Anderson. </author> <title> UEPS A Second Generation Electronic Wallet. </title> <editor> In Y. Deswarte, G. Eizenberg, and J.-J. Quisquater, editors, </editor> <booktitle> Proceedings ESORICS 92. </booktitle> <publisher> Springer LNCS 648, </publisher> <year> 1992. </year> <title> In this early paper, the author describes an electronic smartcard application for the banking industry the Universal Electronic Payments System (UEPS). The approach uses key chaining. </title> <note> An outline is given of attempts to apply BAN logic to the analysis of UEPS is described. </note>

Reference: [6] <author> Ross Anderson. </author> <title> Making Smartcard Systems Robust. </title> <booktitle> In Cardis 94, </booktitle> <year> 1994. </year> <title> The author outlines aspects that need to be taken into account when designing cryptographic protocols. After providing a categorisation of the areas where attacks can occur the author returns to a familiar theme (that of robustness). The Universal Electronic Payment System (UEPS) is proposed as an example of robust design. </title>
Reference: [7] <author> Ross Anderson. </author> <title> Liability and Computer Security: Nine Principles. </title> <editor> In Dieter Gollman, editor, </editor> <booktitle> Proceedings ESORICS 94, </booktitle> <pages> pages 231245. </pages> <publisher> Springer Verlag LNCS 875, </publisher> <year> 1994. </year> <title> The author talks about the liability aspect of computer security systems. Several 'non-technical' aspects of security are addressed such as how computer evidence will stand up in court, legal differences between the USA and the UK. Nine principles are given to guide the process of creating secure systems. </title> <type> 70 </type>
Reference-contexts: Anderson provides an indication of how electronic payment systems work [9]. The same author discusses societal and legal aspects of cryptographic technology [8], <ref> [7] </ref>. 22 4 Attacking Authentication protocols In this section we detail various ways in which protocols fail and give examples. 4.1 Freshness Attacks A freshness attack occurs when a message (or message component) from a previous run of a protocol is recorded by an intruder and replayed as a message component

Reference: [9] <author> Ross Anderson and Johan Bezuidenhout. </author> <title> On the Reliability of Electronic Payment Systems. </title> <note> A paper from RA's WWW Page http://www.cl.cam.ac.uk/users/rja14/, 1995. In this paper the authors describe attempts to introduce pre-payment electricity meters in South Africa. The paper provides good background information and highlights some novel attacks on meters. </note>
Reference-contexts: Simmons provides an example of the need for authenticity in the face of a very hostile enemy for the purposes of verifying nuclear test ban treaties [100]. Anderson provides an indication of how electronic payment systems work <ref> [9] </ref>.

Reference: [11] <author> Ross Anderson and Roger Needham. </author> <title> Robustness Principles for Public Key Protocols. A paper from RA's WWW Page http://www.cl.cam.ac.uk/users/rja14/, 1995. This paper provides many principles or rules of thumb that should be used when developing cryptographic protocols. The principles are generally motivated by some good wholesome attacks. There is a general Principle of Explicitness (that one must be explicit about any properties that may be used to attack a public key primitive as well as typing freshness and any other assumptions being made). </title>
Reference-contexts: Clark and Jacob have discovered a flaw similar to the CCITT X.509 one in a recently published protocol [34]. Anderson and Needham provide introductory accounts of how protocols may fail and provide good advice on how to construct secure protocols <ref> [10, 11] </ref>. Anderson also provides a highly readable and somewhat distressing account of how management aspects as well as technical aspects can cause systems to fail [5]. 35 4.8 Conclusions Protocol construction might seem a simple task; protocols often comprise only a few messages.

Reference: [13] <author> Mihir Bellare, Joe Kilian, and Phillip Rogaway. </author> <title> The Security of Cipher Block Chaining. </title> <editor> In Yvo G. Desmedt, editor, </editor> <booktitle> Advances in Cryptology - Crypto 94, number 839 in LNCS, </booktitle> <pages> pages 341358. </pages> <publisher> Springer Verlag, </publisher> <year> 1994. </year> <title> This paper assesses the usefulness of using CBC approaches for message authentication codes. One of the few papers on the subject. A good read. </title> <note> See also [106]. 72 </note>
Reference-contexts: Criticisms of the Kerberos protocols were given by Bellovin and Merritt [14]. Other aspects relating to Cipher Block Chaining can be found in the recent paper by Bellare et al <ref> [13] </ref>. 4.5 Binding Attacks In public key cryptography the integrity of the public keys is paramount. Suppose your public key is Ky and an intruder's public key is Ki. The intruder is able to decrypt any messages encrypted with Ki.
Reference: [14] <author> S. M. Bellovin and M. Merritt. </author> <title> Limitations of the Kerberos Authen--tication System. </title> <journal> Computer Communication Review, </journal> <volume> 20(5):119132, </volume> <month> Oc-tober </month> <year> 1990. </year> <title> In this paper the authors describe several weaknesses of the then current Kerberos authentication system. The authors address potential replay attacks, secure time service provision, password guessing attacks, login spoofing, chosen plaintext attacks inter alia. Solutions are suggested and assessed. Some interesting remarks are made concerning susceptibility to ciphertext splicing type attacks. A very good read. </title>
Reference-contexts: In particular, Propagating Cipher Block Chaining (PCBC) mode was shown to be deficient and led to the Kerberos V.5 protocol adopting CBC mode (V.4 used PCBC). Criticisms of the Kerberos protocols were given by Bellovin and Merritt <ref> [14] </ref>. Other aspects relating to Cipher Block Chaining can be found in the recent paper by Bellare et al [13]. 4.5 Binding Attacks In public key cryptography the integrity of the public keys is paramount. Suppose your public key is Ky and an intruder's public key is Ki.

Reference: [16] <author> P. Bieber. </author> <title> A Logic of Communication in a Hostile Environment. </title> <booktitle> In Proceedings of the Computer Security Foundations Workshop III, </booktitle> <pages> pages 1422. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1990. </year> <title> This paper provides a quantified extension to the logic KT5 which also has communication operators (for expressing the sending and receiving of messages). Examples of how to express secrecy and authentication properties are given. </title>
Reference-contexts: It is often very difficult to determine these from many specifications. 5.2.2 Other Logics General purpose logics (or adapted forms) have also been employed in the services of authentication. Bieber <ref> [16] </ref> provides a quantified extension called CKT5 of the modal logic KT5 (together with send and receive operators) and uses it to couch and prove authentication properties.
Reference: [17] <author> Pierre Bieber and Nora Boulahia-Cuppens. </author> <title> Formal development of authentication protocols. 1993. This represents the first attempt to apply the B method to the specification and design of authentication protocols. A communications model is provided and proofs are discharged. The B method looks promising. </title>
Reference-contexts: The Z 37 language has been used in many areas of security outside of authentica-tion. Within the UK it is often the language of choice for specification for Governmental agencies. Details of these uses are omitted here. More recently, the B notation has been used to specify authentication systems <ref> [17] </ref>. This method shows some promise as tool support emerges. The use of such state-based techniques seems of limited use. There is little or no attempt to model an attacker (Kemmerer models a passive intruder, Mao and Boyd model none).
Reference: [18] <author> R. Bird, I. Gopal, A. Herzberg, P. A. Janson, S. Kutten, R. Mulva, and M. Yung. </author> <title> Systematic Design of Two-Party Authentication Protocols. </title> <editor> In J. Feigenbaum, editor, </editor> <booktitle> Proceedings of Crypto '91: Advances 73 in Cryptology, number 576 in Lecture Notes in Computer Science, </booktitle> <pages> pages 4461. </pages> <publisher> Springer Verlag, </publisher> <year> 1991. </year> <title> This paper provides a loose heuristic method for searching for flaws in cryptographic protocols. It describes the derivation and analysis of a two-party protocol that is claimed to be as secure as the cipher block chaining encryption that supports it. The protocol looks secure and compact. </title>
Reference-contexts: He does this by allowing A and B to receive messages intended for them by S. Parallel session attacks abound in the literature [103, 117, 108, 60]. Bird et al <ref> [18, 19] </ref> illustrate parallel session attacks and present informal methods for analysing for their presence. 4.4 Implementation Dependent Attacks Carlsen [31] indicates that some protocol definitions allow both secure and insecure implementations.
Reference: [19] <author> R. Bird, I. Gopal, A. Herzberg, P. A. Janson, S. Kutten, R. Mulva, and M. Yung. </author> <title> Systematic Design of a Family of Attack-Resistant Authentication protocols. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <volume> 11(5):679693, </volume> <year> 1993. </year> <title> The paper provides a brief introduction to attacks on authentication protocols and sets about developing a 3-pass mutual authentication protocol that avoids the attacks identified. The approach catches many of the principles which have now become prudent practice. It is an informal development. </title>
Reference-contexts: He does this by allowing A and B to receive messages intended for them by S. Parallel session attacks abound in the literature [103, 117, 108, 60]. Bird et al <ref> [18, 19] </ref> illustrate parallel session attacks and present informal methods for analysing for their presence. 4.4 Implementation Dependent Attacks Carlsen [31] indicates that some protocol definitions allow both secure and insecure implementations.
Reference: [20] <author> A. D. Birrell. </author> <title> Secure Communication using Remote Procedure Calls. </title> <journal> ACM Transactions on Operating Systems, </journal> <volume> 3(1):114, </volume> <month> February </month> <year> 1985. </year> <title> The original description of the Andrew Secure RPC Protocol. An analysis of this protocol can be found in [26]. </title>




Reference: [25] <author> E. F. Brickell and A. M. Odlyzko. </author> <title> Cryptanalysis: A Survey of Recent Results. </title> <booktitle> Proceedings of the IEEE, </booktitle> <volume> 76(5), </volume> <month> May </month> <year> 1988. </year> <title> This paper provides an excellent overview of some advanced (in 1988) attacks on a variety of algorithms. A number of attacks are described on knapsack variants, Ong-Schnorr-Shamir and Okamaoto-Shiraishi signatures schemes, RSA and others. It also addresses the Data Encryption Standard. </title>
Reference-contexts: Gordon [56] provides a good but simple introduction. Diffie provides an exciting account of the first decade of public key cryptography [43] with a particularly good account of the attacks on knapsacks. Brickell and Odlyzko provide an account of various attacks on public key systems (and others) <ref> [25] </ref>. Other aspects are covered in Massey's informative general paper on cryptology [81]. 2.4 One-way Hash Algorithms We shall often require evidence that a message that has been sent has not been subject to modification in any way. Typically this is carried out using a hash function.


Reference: [28] <author> Michael Burrows, Martin Abadi, and Roger M. Needham. </author> <title> The Scope of a Logic of Authentication. </title> <note> Revised Research Report 39, Digital Systems Research Center, 1994. This is intended as an annex to the original BAN report [26]. </note>
Reference: [29] <author> C. C. I. T. T. </author> <title> Recommendation X.509. The Directory-Authentication Framework. </title> <editor> C. C. I. T. T., </editor> <month> December </month> <year> 1988. </year> <note> This contains draft proposals for various protocols. </note>
Reference-contexts: This protocol (and the reasoning given above) has only recently been shown to be flawed [74]. Some key distribution protocols use public key cryptography, for example Digital's SPX (see Schneier's book [99] or Woo and Lam [117]). The draft CCITT X.509 standard <ref> [29] </ref> uses public key cryptography for authenticated communication. The ISO authentication framework makes extensive use of public key cryptography. Denning and Sacco provide an example of how to use public key cryptography to distribute session keys [42]. Martin Abadi noticed in 1994 that it was terribly flawed [1].



Reference: [33] <author> Ulf Carlsen. </author> <title> Optimal Privacy and Authentication on a Portable Communications System. Operating Systems Review, </title> <address> 28(3):1623, </address> <year> 1994. </year> <title> This paper reviews some previous work in the field of portable communication systems (PCSs). Various flaws are exposed and some fixes offered. The paper discusses both initiator and responder (i.e. the other end) protocols. Secret and public key approaches are addressed. The paper is well worth a read (the area is set to become very big). One of the suggested protocols seems flawed (the responder protocol of figure 5 of the paper does not necessarily provide authentication of the RCE to the portable). </title>
Reference-contexts: Attacks on a modified form of this protocol can be found in [108]. 49 6.3.7 Carlsen's Secret Key Initiator Protocol This protocol is fairly self-explanatory and may be found in <ref> [33] </ref>. (1) A ! B : A; Na (3) S ! B : E (Kbs : Kab; Nb; A); E (Kas : Na; B; Kab) (5) A ! B : E (Kab : N 0 b) 6.3.8 ISO Four-Pass Authentication Protocol (1) A ! B : TVPa; B; Text1 (2) S
Reference: [34] <author> John Clark and Jeremy Jacob. </author> <title> On The Security of Recent Protocols. </title> <journal> Information Processing Letters, </journal> <volume> 56(3):151155, </volume> <month> November </month> <year> 1995. </year> <title> In this paper the authors describe some attacks on recently published protocols highlighting assumptions about cipher block chaining use but also a flaw in a (corrected) version of the SPLICE authentication protocol (also independently discovered by Lowe of the Programming Research Group at Oxford). </title> <type> 82 </type>
Reference-contexts: It is a matter of opinion as to when a flaw is considered elementary and the choice is somewhat arbitrary. Clark and Jacob have discovered a flaw similar to the CCITT X.509 one in a recently published protocol <ref> [34] </ref>. Anderson and Needham provide introductory accounts of how protocols may fail and provide good advice on how to construct secure protocols [10, 11].
Reference: [35] <author> John Clark and Jeremy Jacob. </author> <title> Attacking authentication protocols. High Integrity Systems, </title> <address> 1(5):465474, </address> <month> August </month> <year> 1996. </year> <title> This paper provides a summary of ways in which protocols fail and provides many examples of such flaws. Methods of attack include: freshness attacks, type flaws, parallel session attacks, binding attacks and some implementation dependent attacks (e.g. Boyd's bit flipping with stream ciphers and cipher block chaining mishaps). Appraisal is probably best left to the reader! </title>
Reference: [36] <author> John Clark and Jeremy Jacob. </author> <title> Non-Repeatability is Not Enough. A preliminary paper. The authors demonstrate that advice on the use of cipher block chaining is either wrong or the rationale is incomplete. If predictable initial blocks are used then in many cases it will be possible for a principal to create the ciphertext for an arbitrary message of his choice. </title>
Reference-contexts: The rationale given there and in various other texts is incomplete or simply wrong. For example Schneier states that an initial block can be a serial 10 number that increments after each message but does not repeat. Clark and Jacob <ref> [36] </ref> have shown that such an approach is potentially disastrous; they show how for the most celebrated authentication protocol of all, adoption of this approach would allow a third party to create the ciphertext for an arbitrary message without having access to the key! In certain network applications it is useful
Reference: [37] <author> John Clark and Jeremy Jacob. </author> <title> Freshness is Not Enough: Note on Trusted Nonce Generation and Malicious Principals. In this paper the authors demonstrate an unusual attack on a mutual authentication protocol by Woo and Lam [117] described in section 6.3.11. Malicious choice of a nonce by one principal can cause a previously issued key to be accepted as fresh by the other principal. </title>
Reference-contexts: : E (Kps : P; Q; N1; N2) (5) S ! Q : E (Kps : Q; N1; N2; Kpq); E (Kqs : P; N1; N2; Kpq) (7) P ! Q : E (Kpq : N2) There is a novel attack on this protocol due to Clark, Jacob and Ryan <ref> [37] </ref>. Effectively, the principal Q can launch a parallel session attack that causes P to accept as new a previously issued key. <p> The first protocol then completes as normal. The second protocol proceeds with Q intercepting all communications intended for S and replaying the components of message (1.5) back as those of message (2.5) (with order reversed) to cause P to reaccept the key. This is recorded in <ref> [37] </ref>. The above is not a particularly strong attack but indicates clearly that the protocol does not provide the authenticity guarantees that it should.
Reference: [38] <author> D. Coppersmith. </author> <title> The Data Encryption Standard (DES) and its strength against attacks. </title> <journal> IBM Journal of Research and Development, </journal> <volume> 38(3):243250, </volume> <month> May </month> <year> 1994. </year> <title> In this paper the author argues that the DES algorithm is remarkably resilient to differential cryptanalytical attacks. This is because the method was known to the IBM designer team in 1974. This should wake the reader up! What is in the public domain clearly lags well behind what is known to Governments and their agents. The criteria for designing the infamous S-boxes are described and discussed. An essential read for cryptanalysts everywhere. </title>
Reference-contexts: The reader is referred to [101] for details. It is worth noting that the algorithm is remarkably resistant to attack using the published state-of-the-art cryptanalysis technique known as differential cryptanalysis discovered by Biham and Shamir in 1988. As revealed by Coppersmith in 1994 <ref> [38] </ref> this was because the technique was known to the designers of DES back in 1974! Of course, in this survey we can only comment on what is publicly known. 8 Other examples of block ciphers are MADRYGA (efficient for software implementation and operates on 8-bit blocks), NEWDES (operates on 64-bit
Reference: [39] <author> D. W. Davies and W. L. Price. </author> <title> Security for Computer Networks. </title> <publisher> John Wiley and Sons, </publisher> <address> 1 edition, </address> <year> 1994. </year> <title> This is a well-established text in the field covering a variety of network security concepts. It encompasses both theoretical approaches to authentication as well as practical examples. The information is a little dated now but this is still a useful book. </title>
Reference-contexts: Authors differ as to whether they should be passed between communicating parties in the clear (which Schneier [99] thinks is fine) or encrypted ( as recommended by Davies and Price <ref> [39] </ref>). Voydock and Kent [112] address many aspects of initial block usage insisting that they should be pseudo-random for CBC. The rationale given there and in various other texts is incomplete or simply wrong. <p> Voydock and Kent disagree [112]. The error propagation properties of the different modes of encryption vary but are not detailed here. The reader is referred to Schneier [99] or Davies and Price <ref> [39] </ref> for details. Other modes are possible, e.g.

Reference: [41] <author> D. E. Denning. </author> <title> Cryptography and Data Security. </title> <publisher> Addison Wesley, </publisher> <year> 1982. </year> <title> This has become a classic text for introductory cryptography. It covers theory of cryptography and explains the fundamentals of various algorithms before moving on to cover non-communications aspects of security. </title>
Reference-contexts: Elements of transposition and substitution are included in modern day algorithms too. It is not our intention to survey classical approaches to cryptography. They are well documented already <ref> [41, 99] </ref>. An elementary introduction has been produced by Willet [114]. 2.2.2 Modernday Cryptography Modernday symmetric key algorithms are principally block ciphers or stream ciphers. A block cipher will encrypt a block of (typically 64 or 128) plaintext bits at a time.

Reference: [43] <author> Whitfield Diffie. </author> <title> The First Ten Years in Public Key Cryptography. </title> <booktitle> Proceedings of the IEEE, </booktitle> <address> 76(5):560577, </address> <month> May </month> <year> 1988. </year> <title> An excellent survey of public key cryptography. The paper provides a technical introduction to the various advances in the area (exponential key exchanges, knapsacks, RSA, the rise-fall cycle of knapsacks etc). The paper 84 than addresses implementation issues and where public key cryptography is going. A good read generally. </title>
Reference-contexts: Hellman provides an excellent introduction to public key cryptography and the underlying mathematics [58]. Willet provides a much higher level view [115]. Gordon [56] provides a good but simple introduction. Diffie provides an exciting account of the first decade of public key cryptography <ref> [43] </ref> with a particularly good account of the attacks on knapsacks. Brickell and Odlyzko provide an account of various attacks on public key systems (and others) [25].
Reference: [44] <author> W. Diffie and M. Hellman. </author> <title> New Directions in Cryptography. </title> <journal> IEEE Transactions on Information Theory, </journal> <volume> 22(6):644654, </volume> <month> November </month> <year> 1976. </year> <title> A classic paper in the field. Heralds the birth of public key cryptography. </title>
Reference-contexts: For details of the above see Schneier [99]. 2.3 Public Key Cryptography In public key cryptography there is no shared secret between communicating parties. The first publication on the topic was the classic paper by Whitfield Diffie and Martin Hellman in 1976 <ref> [44] </ref>. In public key encryption 13 each principal A is associated with some key pair (Ka; Ka 1 ). The public key Ka is made publicly available but the principal A does not reveal the private key Ka 1 .
Reference: [45] <institution> Federal Information Processing Standard 46 the Data Encryption Standard, </institution> <year> 1976. </year> <title> This is the prime reference for the Data Encryption Standard. It is well-written and easy to read. The algorithm is of course described elsewhere. </title>
Reference-contexts: A block cipher will encrypt a block of (typically 64 or 128) plaintext bits at a time. The best known block cipher is the ubiquitous Data Encryption Standard <ref> [45] </ref>, universally referred to as DES. This has been a hugely controversial algorithm.
Reference: [46] <author> W. Fumy and P. Landrock. </author> <title> Principles of Key Management. </title> <journal> IEEE Journal on Selected Areas in Communications, </journal> <pages> pages 785793, </pages> <month> June </month> <year> 1993. </year> <title> This paper provides an overview of issues involved in key management. It describes security requirements and a hierarchical approach to providing them. It's quite high level but is quite deceptive in its range. </title>

Reference: [48] <author> Paul Gardiner, Dave Jackson, and Bill Roscoe. </author> <title> Security Modelling in CSP and FDR: </title> <type> Deliverable Bundle 3. Technical report, </type> <institution> Formal Systems (Europe) Ltd, </institution> <month> July </month> <year> 1996. </year> <title> This represents a continuation and enhancement of the work reported in [47]. The refined approach is used to detect a well-known flaw in the CCITT protocol. One enhancement is the use of a lazy spy considering only those behaviours of an intruder which are reachable given the specific history of values observed in a sequence of protocol runs (rather than the whole behaviour space of the intruder). </title> <type> 85 </type>
Reference-contexts: See also [77]. Roscoe and Gardiner provide an account of the initial results of their research in [94]. The extension of the work to handle algebraic elements is also available [47] <ref> [48] </ref>. A particularly pleasing part of the work is the willingness to 38 investigate the operation of protocols under the relaxation of trust in prin-cipals (or the weakening of assumptions). Further work on the use of CSP to capture and verify security properties has been carried out by Schnei-der [97].

Reference: [50] <author> Li Gong. </author> <title> Using One-way Functions for Authentication. </title> <journal> Computer Communication Review, </journal> <volume> 19(5):811, </volume> <month> October </month> <year> 1989. </year> <title> This brief paper presents a mutual authentication algorithm based on the notion of keyed (with passwords) one-way functions. The protocol also effects key distribution. The approach has the benefit that one-way functions are probably easier to create than encryption algorithms since there is no need to ensure invertibility. It is claimed that using one-way functions to develop authentication protocols would not necessarily restrict the capabilities that could be offered. </title>
Reference-contexts: 1 ) A ! Z (B) : E (K a : M) (2 0 ) A ! Z (B) : M ( 2 ) Z (B) ! A : bogus ( 3 ) A ! Z (B) : E (K a : bogus) 6.10.2 Gong Mutual Authentication Protocol This protocol <ref> [50] </ref> is based on the use of one-way functions rather than encryption. In the following protocol f and g are both one-way (publicly known) functions (they may be identical). Each principal A and B shares a secret, P a and P b respectively, with the authentication server S.





Reference: [56] <author> John Gordon. </author> <title> Public Key Cryptosystems. </title> <booktitle> In Proceedings of Networks '84, </booktitle> <year> 1984. </year> <title> This is an introduction to public key cryptography for the beginner. The paper is very light but there are some helpful analogies for the non-cognoscenti. The paper gives an outline of one-way functions, trapdoors, key exchange, public key approaches and electronic signatures. In general little maths is assumed (indeed the notions of modular arithmetic are explained for example) and many of the details are glossed over (e.g. on explaining the disguising of super-increasing sequences in the knapsack problem). Merkle-Hellman and RSA schemes are outlined very briefly. </title>
Reference-contexts: There are some very useful and informative papers that deal (at least in part) with public key cryptography. Hellman provides an excellent introduction to public key cryptography and the underlying mathematics [58]. Willet provides a much higher level view [115]. Gordon <ref> [56] </ref> provides a good but simple introduction. Diffie provides an exciting account of the first decade of public key cryptography [43] with a particularly good account of the attacks on knapsacks. Brickell and Odlyzko provide an account of various attacks on public key systems (and others) [25].

Reference: [58] <author> Martin E Hellman. </author> <title> The Mathematics of Public Key Cryptography. </title> <publisher> Scientific American, </publisher> <pages> pages 130139, </pages> <month> August </month> <year> 1979. </year> <title> This article provides a very good introduction to public key cryptography mathematics. The author addresses general principles such as NP-hardness and provides an explanation of knapsack and RSA approaches. The mathematics is described well and many simple examples are given. A very good place to start. </title>
Reference-contexts: Schneier [99] gives a good account of relative speeds of algorithms. There are some very useful and informative papers that deal (at least in part) with public key cryptography. Hellman provides an excellent introduction to public key cryptography and the underlying mathematics <ref> [58] </ref>. Willet provides a much higher level view [115]. Gordon [56] provides a good but simple introduction. Diffie provides an exciting account of the first decade of public key cryptography [43] with a particularly good account of the attacks on knapsacks.
Reference: [59] <author> Tzonelih Hwang and Yung-Hsiang Chen. </author> <title> On the security of SPLICE/AS: The authentication system in WIDE Internet. </title> <journal> Information Processing Letters, </journal> <volume> 53:97101, </volume> <year> 1995. </year> <title> This paper presents two attacks on the SPLICE/AS authentication protocol. The flaws are caused by signing after encryption. Solutions are offered to fix the flaws. Clark and Jacob [34] show that there still remains a flaw. </title>
Reference-contexts: Z simply allows this to be received by C as message (1.2). C performs appropriate decryptions and checks and believes that he has received the public key of S. This attack (and a similar one) was identified by Hwang and Chen <ref> [59] </ref>. They suggest that this problem can be solved by explicitly including the identifier of the requested server S in message (2). The protocol then becomes: (1) C ! AS : C; S; Nc Problems with signing after encryption arose some time ago with the draft CCITT X.509 standard. <p> C; T; L; E (K S : N 2 )) (5) AS ! S : AS; E (K 1 (6) S ! C : S; C; E (K C : S; N 2 + 1) This protocol has been shown to be flawed (in different ways) by Hwang and Chen <ref> [59] </ref> and also Gavin Lowe. 61 In the first attack it is possible to impersonate a client: ( 1 ) Z ! AS : Z; S; N 1 AS : AS; Z; N 1 ; K S ) Z : C; T; L; E (K S : N 2 )) (4 <p> 1 ( 4 ) Z ! AS : Z; C; N 3 AS : AS; Z; N 3 ; K C ) In the third attack (by Gavin Lowe) message (3) is replayed within the possible time window to re-achieve authentication. 6.8.1 Hwang and Chen's Modified SPLICE/AS Hwang and Chen <ref> [59] </ref> proposed an enhanced protocol to overcome the flaws (that they had identified) in SPLICE protocol presented above.

Reference: [61] <author> ISO/IEC. </author> <title> Information Technology Security techniques Entity Authentication Mechanisms Part 1: General Model, 1991. This is the introductory part of the ISO/IEC 9798 standard dealing with entity authentication mechanisms . Its basic function is to provide definitions and notation used in the subsequent parts. </title>
Reference-contexts: We shall sometimes refine the notion of a nonce to include a timestamp and distinguish between sequence numbers or genuinely pseudo-random nonces. Such distinctions are made in, for example, the ISO entity authentication standards (see <ref> [61] </ref>). A message may have several components; some will be plaintext and some will be encrypted. Message components will be separated by commas. <p> These distinctions are also made by the ISO entity authentication standards (see <ref> [61] </ref>). 3.1 Symmetric Key Without Trusted Third Party Perhaps the simplest (and yet effective) example in this class is the ISO One-pass Symmetric Key Unilateral Authentication Protocol [62] (see also 6.1.1) shown below. <p> For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in <ref> [61] </ref>, [62], [63], [64], [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57].
Reference: [62] <author> ISO/IEC. </author> <title> Information Technology Security techniques Entity Authentication Mechanisms Part 2: Entity authentication using symmetric techniques, 1993. This part of the ISO/IEC 9798 standard presents several unilateral and mutual authentication protocols based on shared key cryptography. Advice is given on the use of text fields and also on the choice of time varying parameters(e.g. random, sequence numbers and timestamps). </title>
Reference-contexts: These distinctions are also made by the ISO entity authentication standards (see [61]). 3.1 Symmetric Key Without Trusted Third Party Perhaps the simplest (and yet effective) example in this class is the ISO One-pass Symmetric Key Unilateral Authentication Protocol <ref> [62] </ref> (see also 6.1.1) shown below. It consists of the single message: (1) A ! B : Text2; E (Kab : [TajNa]; B; Text1) Here the text fields shown are optional; their use is implementation specific (and we shall ignore them in this discussion). <p> Woo and Lam provide several authentication protocols [116, 117] (6.3.10). Other examples include those by Gong and Carlsen's secret key initiator protocols (for mobile phone networks) (6.10.2 and 6.3.7) and the ISO Four- and Five Pass Mutual Authentication Protocols <ref> [62] </ref> (6.3.8 and 6.3.9). Denning and Sacco suggested fixing problems in the Needham Schroeder protocol using timestamps. <p> For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in [61], <ref> [62] </ref>, [63], [64], [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57]. <p> The analysis process is not entirely automated; lemmas for the tool to prove must be generated by the user. 43 6 A Library of Protocols 6.1 Symmetric Key Protocols Without Trusted Third Party 6.1.1 ISO Symmetric Key One-Pass Unilateral Authentication Protocol This protocol <ref> [62] </ref> consists of a single message from one principal A to a second B. A secret key Kab is assumed to be shared between these two principals. (1) A ! B : Text2; E (Kab : [TajNa]; B; Text1) The use of the text fields is application specific.
Reference: [63] <author> ISO/IEC. </author> <title> Information Technology Security techniques Entity Authentication Mechanisms Part 3: Entity authentication using a public key algorithm, 1995. This part of the ISO/IEC 9798 standard presents several unilateral and mutual authentication protocols based on public key cryptography. They would appear secure at present. </title>
Reference-contexts: For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in [61], [62], <ref> [63] </ref>, [64], [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57]. <p> ! S : A; B; Na (3) B ! A : E (Kt : Na; Kab); Nb; E (Kbs : A; B; Ta; Kab) 6.6 Public Key Protocols without Trusted Third Party All the ISO protocols in this section may be found in Part 3 of the ISO/IEC 9798 Standard <ref> [63] </ref>. 6.6.1 ISO Public Key One-Pass Unilateral Authentication Protocol (1) A ! B : Cert A ; [TajNa]; B; Text2; E (K 1 a : [TajNa]; B; Text1) 6.6.2 ISO Public Key Two-Pass Unilateral Authentication Protocol (1) B ! A : Rb; Text1 (2) A ! B : Cert A ;
Reference: [64] <author> ISO/IEC. </author> <title> Information Technology Security techniques Entity Authentication Mechanisms Part 4: Entity authentication using cryptographic check functions, 1993. This part of the ISO/IEC 9798 standard presents several unilateral and mutual authentication protocols based on keyed hash functions. </title>
Reference-contexts: Another approach to ensuring authenticity uses cryptographic check functions. Essentially, a message is sent together with some summary or digest calculated using a hash function using a shared key. Examples are given in section 6.2. Examples can be found in Part 4 of the ISO entity authentication standard <ref> [64] </ref>. 3.2 Symmetric Key With Trusted Third Party Symmetric key protocols that use a trusted third party (TTP) are by far the most numerous in the literature. <p> For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in [61], [62], [63], <ref> [64] </ref>, [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57]. <p> There is also a parallel session attack. 45 6.2 Authentication Using Cryptographic Check Functions All ISO protocols in this section can be found in Part 4 of the ISO 9798 Standard <ref> [64] </ref>.
Reference: [65] <author> ISO/IEC. </author> <title> Information Technology Security techniques Entity Authentication Mechanisms Part 5: Entity authentication using zero knowledge techniques, 1993. This part of the ISO/IEC 9798 standard presents several unilateral and mutual authentication protocols based on shared key cryptography. Advice on the use of optional text fields and also on the choice of time varying parameters is given too (e.g. random, sequence numbers and timestamps). </title> <type> 90 </type>
Reference-contexts: For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in [61], [62], [63], [64], <ref> [65] </ref>. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57].

Reference: [67] <author> I Lung Kao and Randy Chow. </author> <title> An Efficient and Secure Authentication Protocol Using Uncertified Keys. Operating Systems Review, </title> <address> 29(3):1421, </address> <month> July </month> <year> 1995. </year> <title> This presents various repeated authentication protocols. The authors indicate how the use of uncertified keys, i.e. whose validity is not ensured when they are first used may bring performance benefits. </title>
Reference-contexts: subject to an attack that is identical in form to the parallel session attack on the Neuman Stub-blebine repeated protocol. 6.5.4 The Kao Chow Repeated Authentication Protocols In 1995, Kao and Chow proposed a similar repeated authentication protocol that was not susceptible to the attacks on the Neuman Stubblebine protocol <ref> [67] </ref>. (1) A ! S : A; B; Na (3) B ! A : E (Kas : A; B; Na; Kab); E (Kab : Na); Nb 58 This protocol suffers when a session key is compromised (as in the Den--ning Sacco attack on the Needham Schroeder protocol).

Reference: [69] <author> R. A. Kemmerer. </author> <title> Using Formal Verification Techniques to Analyse Encryption Protocols. </title> <booktitle> In Proceedings of the 1987 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 134139. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1987. </year> <title> This is one of the first papers to apply logic to the analysis of encryption protocols (rather than algorithms). This is done using a variant of the Ina Jo specification language (and so represents a use of a well-known general specification notation for protocol specification and analysis purposes). The modern trend has been away from off-the-shelf technologies but this may change. </title>
Reference-contexts: Toolsets had been developed, or were being developed, and use could be made of the experience gained in other areas. The first such attempt appears to be that of Kemmerer, who in 1987 used the Ina Jo development environment to specify and prove properties of a cryptographic system <ref> [69] </ref>. The attempt was successful and demonstrated that proof technology could be brought to bear successfully on problems in the field. Effectively, security of the system is expressed as state invariants which are then shown to be maintained under controlled transitions.
Reference: [70] <author> C. Meadows R. Kemmerer and Jonathan Millen. </author> <title> Three Systems for Cryptographic Protocol Analysis. </title> <journal> Journal of Cryptology, </journal> <volume> 7(2):79130, </volume> <year> 1994. </year> <title> A useful paper. Three systems are described: the Interrogator, the NRL Protocol Analyser and the use of Ina Jo. The tools are used to analyse the TMN protocol with very interesting results. Well worth a read. </title>
Reference-contexts: The tool appears usable and has been used to find flaws in protocols. It is one of the tools included in a comparative study of three systems <ref> [70] </ref>. The comments there indicate that the tool at present has problems in discovering flaws in which a principal takes on more than one role (if so this is a weakness shared with other systems, see [103]). <p> Interestingly, the tool failed to find a flaw in the TMN protocol due to the way in which the properties of the RSA algorithm had been couched <ref> [70] </ref>.

Reference: [72] <author> Paul C. Kocher. </author> <title> Cryptanalysis of Diffie-Hellman, RSA, DSS, and other Systems Using Timing Attacks. Extended Abstract on PK's WWW Page http://www.cl.cam.ac.uk/users/rja14/, dec 1995. A paper that will probably cause quite a stir since it presents an attack on a variety of public key encryption schemes. The attacks are based on noting the amount of time taken to encrypt text. The preliminary results look worrying indeed. Essential reading!. </title>
Reference-contexts: In addition, more traditional forms of attack such as cryptanalysis can be launched on several protocols. Mao and Boyd [80] have recently investigated ways of protecting against such attacks. Paul Kocher's recent discovery of an attack on RSA via timing analysis might well have profound and more general impact <ref> [72] </ref>. Aspects of redundancy have also been addressed by Gong [51]. Protocols using passwords have been addressed by several authors [15], [54]. Carlsen [31] has a category called elementary flaws which is used to group protocols which are breakable with little effort because they provide little or no protection.
Reference: [73] <author> Armin Liebl. </author> <title> Authentication in Distributed Systems: A Bibliography. Operating Systems Review, </title> <address> 27(4):122136, </address> <month> October </month> <year> 1993. </year> <title> This paper provides a brief but wide ranging bibliography of seventy-one papers in authentication. It surveys the field in terms of goals of authentication, design aspects of cryptographic protocols, protocol categorisation (private, public , hybrid, one-ways functions etc.) and verification of protocols. There is a neat table of where to find relevant information on various protocols. The column indicating which protocols are flawed is now out of date! </title>
Reference-contexts: The reader is referred to Schneier for details [99]. Examples of various international standard protocols can be found in [61], [62], [63], [64], [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57]. Liebl <ref> [73] </ref> provides an overview of authentication protocols (in less detail than here). 3.6 General There are many applications of authentication technology that are not discussed above.
Reference: [74] <author> Gavin Lowe. </author> <title> An Attack on the Needham-Schroeder Public Key Authentication Protocol. </title> <journal> Information Processing Letters, </journal> <volume> 56(3):131136, </volume> <month> November </month> <year> 1995. </year> <title> Seventeen years after publication of the Needham Schroeder Public Key protocol [87] Lowe discovers what everyone else has missed a parallel session attack. This brief paper is very clear in its descriptions. The flaw was found using the FDR refinement checking tool. </title>
Reference-contexts: B then decrypts and checks that it contains his challenge and concludes that A is operational and indeed initiated the protocol. This protocol (and the reasoning given above) has only recently been shown to be flawed <ref> [74] </ref>. Some key distribution protocols use public key cryptography, for example Digital's SPX (see Schneier's book [99] or Woo and Lam [117]). The draft CCITT X.509 standard [29] uses public key cryptography for authenticated communication. The ISO authentication framework makes extensive use of public key cryptography.
Reference: [75] <author> Gavin Lowe. </author> <title> Breaking and fixing the needham schroeder public-key protocol using fdr. </title> <booktitle> In Proceedings of TACAS, </booktitle> <volume> volume 1055, </volume> <pages> pages 147166. </pages> <publisher> Springer Verlag, </publisher> <year> 1996. </year> <title> In this paper Lowe describes how the CSP refinement checker FDR was used to identify a hole in the security of the well known Needham Schroeder Public Key Protocol 6.7.1. He presents an account of how principals and intruder communications are modelled in CSP (with a restricted number of principals) and presents an argument to show that the analysis performed is sufficient to guarantee its correctness when more principals are added to the system. </title> <type> 93 </type>
Reference-contexts: The results have been very promising (subtle and hitherto unknown protocol flaws have been discovered using the approach). For example, 17 years after its publication a flaw was found in the Needham Schroeder Public Key protocol by Lowe using the FDR tool <ref> [75] </ref>. See also [77]. Roscoe and Gardiner provide an account of the initial results of their research in [94]. The extension of the work to handle algebraic elements is also available [47] [48].

Reference: [77] <author> Gavin Lowe. SPLICE-AS: </author> <title> A Case Study in Using CSP to Detect Errors in Security Protocols. </title> <type> Technical report, </type> <institution> Programming Research Group, Oxford, </institution> <year> 1996. </year> <title> In this paper the author indicate show the CSP refinement checker FDR is used to analyse a recently published protocol (which is actually a correction of a previous one). </title>
Reference-contexts: The results have been very promising (subtle and hitherto unknown protocol flaws have been discovered using the approach). For example, 17 years after its publication a flaw was found in the Needham Schroeder Public Key protocol by Lowe using the FDR tool [75]. See also <ref> [77] </ref>. Roscoe and Gardiner provide an account of the initial results of their research in [94]. The extension of the work to handle algebraic elements is also available [47] [48].



Reference: [81] <author> James L. Massey. </author> <title> An Introduction to Contemporary Cryptology. </title> <booktitle> Proceedings of the IEEE, </booktitle> <address> 76(5):533549, </address> <month> May </month> <year> 1988. </year> <title> A very good introduction to the history, terminology and theory of cryptology. The author describes both secret key and public key cryptography. The reader will need some mathematics to follow the text. the paper is unusual in that it also attempts to introduce the underlying information theoretic concepts to the reader as well as the more usual algorithm fare. </title>
Reference-contexts: Brickell and Odlyzko provide an account of various attacks on public key systems (and others) [25]. Other aspects are covered in Massey's informative general paper on cryptology <ref> [81] </ref>. 2.4 One-way Hash Algorithms We shall often require evidence that a message that has been sent has not been subject to modification in any way. Typically this is carried out using a hash function.
Reference: [82] <author> Cathy Meadows. </author> <title> Formal verification of cryptographic protocols: A survey. </title> <booktitle> In Proceedings of Asiacrypt 96, </booktitle> <year> 1996. </year> <title> Meadows provides a comprehensive account of the use of formal techniques in the development of security protocols. As well as given a survey she also indicates where formal techniques are lacking in use. For example, the use of formal techniques in the design of protocols (i.e. from specification) and also at very low levels. </title>

Reference: [84] <author> J. K. Millen, S. C. Clark, and S. B. Freedman. </author> <title> The Interrogator: Protocol Security Analysis. </title> <journal> IEEE Transactions on Software Engineering, </journal> <volume> 13(2):274288, </volume> <month> February </month> <year> 1987. </year> <title> 96 This paper gives a description of the Interrogator tool. The user guide [83] is a better place to find detailed information. </title>
Reference-contexts: Early work by Millen et al led to the development of the Interrogator tool <ref> [84] </ref>. The user guide provides an updated account of the tools facilities [83]. Protocols are specified in a prolog-based syntax. Knowledge of the various principals is built up and recorded as the protocol progresses.






Reference: [91] <author> D. Otway and O. Rees. </author> <title> Efficient and Timely Mutual Authentication. Operating Systems Review, </title> <address> 21(1):810, </address> <month> January </month> <year> 1987. </year> <title> This paper presents the well-known Otway-Rees protocol. The notation is a little different from usual. The description is of interest for historical reasons: the protocol has become one of those regularly subject to analysis techniques (e.g. BAN [26]). There are some classic replay flaws in the protocol. </title>
Reference-contexts: We shall show in section 4.1 that it is in fact flawed. There have been many other protocols that have used a trusted third party to generate and distribute keys in a similar way: the Amended Needham-Schroeder Protocol [88] (see 6.3.4), the Yahalom Protocol (see 6.3.6), the Otway-Rees Protocol <ref> [91] </ref> (see also 6.3.3) which is essentially the same as the Amended Needham-Schroeder Protocol. Woo and Lam provide several authentication protocols [116, 117] (6.3.10). <p> The above protocol is flawed in other ways too. For example, it is equally possible to record message (4) of a previous run and replay it in the current run, i.e. there is a freshness attack, as pointed out by Burrows, Abadi and Needham [26]. 24 The Otway-Rees protocol <ref> [91] </ref> provides another example of a protocol subject to a type flaw attack. (1) A ! B : M; A; B; E (Kas : Na; M; A; B) (3) S ! B : M; E (Kas : Na; Kab); E (Kbs : Nb; Kab) The above protocol causes a key Kab <p> B can check for timeliness of message (3) (allowing for clock drift and network delays). There is now no need for the extra exchange between A and B of the Needham-Schroeder protocol. 6.3.3 Otway-Rees Protocol The Otway-Rees Protocol <ref> [91] </ref> is a well-known protocol that has been shown to be flawed.
Reference: [92] <author> R. Rivest, A. Shamir, and L. Adleman. </author> <title> A Method for Obtaining Digital Signatures and Public Key Cryptosystems. </title> <journal> Communications of the ACM, </journal> <volume> 21(2):120126, </volume> <month> February </month> <year> 1978. </year> <title> The authors present the RSA algorithm for the first time in an academic journal (it had appeared previously in one of Martin Gardner's columns). A classic paper. </title>
Reference-contexts: This can be used to guarantee the authenticity of the message. The most widely known public key algorithm that allows such use was developed by Rivest, Shamir and Adleman <ref> [92] </ref> and is universally referred to as RSA. Such algorithms are often said to provide a digital signature capability. Simply encrypting using a private key does not constitute a signature. Various checks must also be made by the receiver (see Gollman [49]). The RSA algorithm [92] works as follows: 1. pick <p> by Rivest, Shamir and Adleman <ref> [92] </ref> and is universally referred to as RSA. Such algorithms are often said to provide a digital signature capability. Simply encrypting using a private key does not constitute a signature. Various checks must also be made by the receiver (see Gollman [49]). The RSA algorithm [92] works as follows: 1. pick two large primes p and q, let n = p fl q 2. choose e relatively prime to (n) = (p 1)(q 1) 3. use Euclid's algorithm to generate a d such that e fl d = 1 mod (n) 4. make the pair (n; <p> Denning and Sacco provide an example of how to use public key cryptography to distribute session keys [42]. Martin Abadi noticed in 1994 that it was terribly flawed [1]. Public key cryptography may also be used to provide digital signatures. RSA <ref> [92] </ref> can be use to sign a message by encrypting under the 21 private key. It can also be used to sign a hash value of a complete mes-sage. The actual message can also be sent in the clear with the encrypted hash value appended.


Reference: [95] <author> A. D. Rubin and P. Honeyman. </author> <title> Formal Methods for the Analysis of Authentication Protocols. </title> <type> Technical Report Technical report 937, </type> <institution> CITI, </institution> <month> November </month> <year> 1993. </year> <title> This paper provides a review of extant literature in the field of authentication protocols. The paper begins with some introductory definitions and a description of the Needham-Schroeder protocol [87], its flaws and their resolution by timestamps. This serves as a good motivation for the subject matter that follows. The various approaches to analysis are then investigated. The reference material is wide-ranging and the text is well written. </title>
Reference-contexts: We address them as follows: * the use of existing formal methods to specify and analyse authenti cation protocols; * the use of logics of knowledge and belief; * the use of expert systems and algebraic term-rewriting systems. This is the classification used by Rubin and Honeyman <ref> [95] </ref> in their review article. As indicated by Rubin and Honeyman, the above methods as implemented are all independent of the cryptographic mechanism used. This is of course a strength since in producing a protocol specification we might not yet wish to specify a particular implementational mechanism. <p> LOTOS has been used to specify the X.509 directory framework. Finite-state machines have also been used by several authors for the specification and analysis of protocols. None of these uses provides analytical support for security in the face of an active intruder. Rubin and Honeyman <ref> [95] </ref> provides some details. Recent work by the Formal Systems Europe and Programming Research Group at Oxford [94] has used verification techniques for process algebras to analyse security protocols. In particular work has been carried out using CSP. Principals in the protocol are specified as CSP processes operating in parallel. <p> Instead they provide a language for describing protocols and a partially mechanised approach to idealisation. As pointed out by Rubin and Honeyman <ref> [95] </ref> there is still informal judgement at work in the idealisation process. The reasoning process is backwards (rather than forwards as in BAN logic), thus the reasoning proceeds from the desired conclusion to derive initial beliefs. There have been other belief-logic approaches. <p> Various rewrite rules are specified as part of the protocol (e.g. the result of encrypting and then decrypting some plain text with the same key produces te original plaintext). The tool attempts to find scenarios to reach an insecure state. The tool looks technically effective but Rubin and Honeyman <ref> [95] </ref> report that these types of tools are rather difficult to use by designers. Interestingly, the tool failed to find a flaw in the TMN protocol due to the way in which the properties of the RSA algorithm had been couched [70].

Reference: [97] <author> Steve Schneider. </author> <title> Security Properties and CSP. </title> <booktitle> In Proceedings of the 1996 IEEE Symposium on Security and Privacy, </booktitle> <pages> pages 174187. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> may </month> <year> 1996. </year> <title> This paper addresses issues how confidentiality and authenticity of messages can be addressed within the CSP framework. The paper provides a brief introduction to CSP and can be read without prior knowledge of the process algebra. </title> <type> 101 </type>
Reference-contexts: A particularly pleasing part of the work is the willingness to 38 investigate the operation of protocols under the relaxation of trust in prin-cipals (or the weakening of assumptions). Further work on the use of CSP to capture and verify security properties has been carried out by Schnei-der <ref> [97] </ref>. An overview of the CSP approach to authentication protocols is given by Ryan [96]. 5.2 The Use of Logics Logics have seen widespread use in the analysis of authentication protocols.
Reference: [98] <author> B. Schneier. </author> <title> The IDEA Encryption Algorithm. </title> <journal> Dr. Dobb's Journal, </journal> <pages> pages 5056, </pages> <month> December </month> <year> 1993. </year> <title> This article provides a good, easily understood description of the IDEA conventional key encryption algorithm. This is a 64-bit block algorithm with a 128-bit key. The main diagram seems slightly out of kilter with the text though. Software implementations are about 1.5 to 2 times as fast as corresponding DES implementations. The author cites a VLSI implementation that encrypts at 177MBits/s when clocked at 35MHz. </title>
Reference-contexts: Schneier has written a readable account of the IDEA algorithm <ref> [98] </ref>. A very good overview of block ciphers (and others) can be found in Schneier's general cryptography text [99]. 2.2.3 Modes of Block Cipher Usage There are several modes in which a block cipher can be used.
Reference: [99] <author> Bruce Schneier. </author> <title> Applied Cryptography. </title> <publisher> Wiley, </publisher> <year> 1994. </year> <title> Probably the best available introductory text on modern day cryptography and its applications. It is easy to read and very wide ranging in the topics covered. Many conventional key and public key algorithms are described together with known weaknesses. A significant amount of effort is expended explaining various cryptographic protocols. There are several attacks on protocols described but some attacks that we know about are not covered. </title>
Reference-contexts: Elements of transposition and substitution are included in modern day algorithms too. It is not our intention to survey classical approaches to cryptography. They are well documented already <ref> [41, 99] </ref>. An elementary introduction has been produced by Willet [114]. 2.2.2 Modernday Cryptography Modernday symmetric key algorithms are principally block ciphers or stream ciphers. A block cipher will encrypt a block of (typically 64 or 128) plaintext bits at a time. <p> Schneier has written a readable account of the IDEA algorithm [98]. A very good overview of block ciphers (and others) can be found in Schneier's general cryptography text <ref> [99] </ref>. 2.2.3 Modes of Block Cipher Usage There are several modes in which a block cipher can be used. Principal ones are: * Electronic Code Book (ECB) * Cipher Block Chaining (CBC) * Cipher Feedback Mode (CFB) * Output Feedback Mode (OFB) ECB is the simplest mode. <p> Authors differ as to whether they should be passed between communicating parties in the clear (which Schneier <ref> [99] </ref> thinks is fine) or encrypted ( as recommended by Davies and Price [39]). Voydock and Kent [112] address many aspects of initial block usage insisting that they should be pseudo-random for CBC. The rationale given there and in various other texts is incomplete or simply wrong. <p> In such cases Cipher Feedback mode (CFB) might be used. Figure 3 is based on a figure by Schneier <ref> [99] </ref> and shows an 8-bit CFB with a 64-bit block algorithm. Here the contents of a shift register are initialised with some value. <p> leftmost byte of the direct output of the encryption function that is fed back into the shift register (other sizes are possible). 11 Schneier states that the initialisation vectors for CFB and OFB should be different for each message encrypted, though there is no additional benefit from sending them encrypted <ref> [99] </ref>. Voydock and Kent disagree [112]. The error propagation properties of the different modes of encryption vary but are not detailed here. The reader is referred to Schneier [99] or Davies and Price [39] for details. Other modes are possible, e.g. <p> vectors for CFB and OFB should be different for each message encrypted, though there is no additional benefit from sending them encrypted <ref> [99] </ref>. Voydock and Kent disagree [112]. The error propagation properties of the different modes of encryption vary but are not detailed here. The reader is referred to Schneier [99] or Davies and Price [39] for details. Other modes are possible, e.g. <p> The usual approach is to generate a bit stream and to XOR successive bits with successive bits 12 of plaintext. Clearly we should wish the bit-stream produced to be as random as possible. Indeed, a vast amount of work into pseudo-random stream generation has been carried out (see <ref> [99] </ref>). The streams produced depend on a key in some way (if identical streams were produced each time then cryptanalysis becomes easy). A keystream generator comprises a finite state machine and an output function. <p> It is also possible to use block ciphers as keystream generators (e.g. use Counter Mode and select the leftmost bit of the encrypted block output). For details of the above see Schneier <ref> [99] </ref>. 2.3 Public Key Cryptography In public key cryptography there is no shared secret between communicating parties. The first publication on the topic was the classic paper by Whitfield Diffie and Martin Hellman in 1976 [44]. <p> Sheer processing capability also affects the usability of public key encryption. Public key algorithms are generally much slower than symmetric key algorithms. Schneier <ref> [99] </ref> gives a good account of relative speeds of algorithms. There are some very useful and informative papers that deal (at least in part) with public key cryptography. Hellman provides an excellent introduction to public key cryptography and the underlying mathematics [58]. Willet provides a much higher level view [115]. <p> This protocol (and the reasoning given above) has only recently been shown to be flawed [74]. Some key distribution protocols use public key cryptography, for example Digital's SPX (see Schneier's book <ref> [99] </ref> or Woo and Lam [117]). The draft CCITT X.509 standard [29] uses public key cryptography for authenticated communication. The ISO authentication framework makes extensive use of public key cryptography. Denning and Sacco provide an example of how to use public key cryptography to distribute session keys [42]. <p> A major alternative to the use of RSA developed, amid some controversy, by the United States National Security Agency (NSA) is the Digital Signature Algorithm. It is based on El Gamal encryption. Schneier provides a good account of the algorithm <ref> [99] </ref> and a good journalistic account of the controversy can be found in the paper by Adam [2]. Other digital signatures schemes include ESIGN, McEliece (based on algebraic coding theory). <p> It also seems to tolerate fairly poor mechanisms of symmetric encryption. 3.5 Other Forms of Protocol There are many other types of authentication protocol. For example, protocols that deal with non-repudiation, secret voting, anonymous transactions, anonymous signatures etc. The reader is referred to Schneier for details <ref> [99] </ref>. Examples of various international standard protocols can be found in [61], [62], [63], [64], [65]. Recent protocols include a beacon based protocol by Seberry et al [66] and a robust password exchange protocol by Hauser et al [57].
Reference: [100] <author> G.J. Simmons. </author> <title> How to Insure that Data Aquired to Verify Treaty Compliance are Trustworthy. </title> <booktitle> Proceedings of the IEEE, </booktitle> <address> 76(5):621627, </address> <month> May </month> <year> 1988. </year> <title> A cold war summary paper! Rather less flippantly, Simmons provides a readable account on the work of treaty verification (for nuclear tests) carried out at Sandia Laboratories. Descriptions are given of both symmetric key and public key approaches. </title>
Reference-contexts: Simmons provides an example of the need for authenticity in the face of a very hostile enemy for the purposes of verifying nuclear test ban treaties <ref> [100] </ref>. Anderson provides an indication of how electronic payment systems work [9].
Reference: [101] <author> Miles E. Smid and Dennis K. Branstad. </author> <title> The Data Encryption Standard: Past and Future. </title> <booktitle> Proceedings of the IEEE, </booktitle> <address> 76(5):550559, </address> <month> May </month> <year> 1988. </year> <title> This is a good paper to read. It examines the history of DES, why it was produced, who were the major stakeholders and how it was taken up by various bodies. An overview of its applications is given. Not much technical information but a good overview of the state of play in 1988. </title>
Reference-contexts: The reader is referred to <ref> [101] </ref> for details. It is worth noting that the algorithm is remarkably resistant to attack using the published state-of-the-art cryptanalysis technique known as differential cryptanalysis discovered by Biham and Shamir in 1988.
Reference: [102] <author> Einar Snekkenes. </author> <title> Exploring the BAN Approach to Protocol Analysis. </title> <booktitle> In 1991 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 171181. </pages> <publisher> IEEE Computer Society Press, </publisher> <year> 1991. </year> <title> Snekkenes shows that BAN logic is incapable of detecting errors due to permutation of protocol steps. He also shows that it is unlikely that a BAN type approach can hope to provide good analysis of zero-knowledge type 102 protocols. A class of protocols is introduced called terminating protocols and it is shown that Dan Nesset's flawed protocol [89] belongs to this class. </title>
Reference-contexts: This would appear correct, but the situation is still rather unsatisfying. Additional problems have been identified. Snekkenes <ref> [102] </ref> showed that permutations of protocol steps left the results unaffected. It is possible that a principal may decrypt some random text to obtain some putative formula using some key that he holds. For the decryption to succeed the result of decryption must be meaningful in some way.
Reference: [103] <author> E. Snekkenes. </author> <title> Roles in Cryptographic Protocols. </title> <booktitle> In Proceedings of the 1992 IEE Symposium on Security and Privacy. </booktitle> <publisher> IEEE Computer Society Press, </publisher> <year> 1992. </year> <title> In this paper Snekkenes shows that Bieber's approach to protocol verification [16] may not detect flaws that arise due to principals taking on more than one role in a protocol. Bieber's logic may, however, be successfully modified. An example protocol is given that is deemed secure by both BAN analysis and Bieber CKT5 analysis. </title>
Reference-contexts: He does this by allowing A and B to receive messages intended for them by S. Parallel session attacks abound in the literature <ref> [103, 117, 108, 60] </ref>. Bird et al [18, 19] illustrate parallel session attacks and present informal methods for analysing for their presence. 4.4 Implementation Dependent Attacks Carlsen [31] indicates that some protocol definitions allow both secure and insecure implementations. <p> The comments there indicate that the tool at present has problems in discovering flaws in which a principal takes on more than one role (if so this is a weakness shared with other systems, see <ref> [103] </ref>). Also the paper notes There are, in general, many different ways to specify the same protocol, which are correct in some sense. Yet they lead to different running times, and some may exclude possible pene trations. Search-path pruning heuristics may lead to some penetrations being missed.
Reference: [104] <author> Einar Snekkenes. </author> <title> Formal Specification and Analysis of Cryptographic Protocols. </title> <type> PhD thesis, </type> <institution> Faculty of Mathematics and Natural Sciences, University of Oslo, Norwegian Defence Research Establishment, </institution> <address> P.O. Box 25, N-2007, Kjeller, Norway, </address> <month> jan </month> <year> 1995. </year> <title> This DPhil thesis provides a formal framework for specifying and reasoning about protocols. Numerous theories have been written in HOL to support the analysis of protocols. </title>
Reference-contexts: Snekkenes notes in his doctoral dissertation that principal operation is couched in rather complex formulae. Snekkenes has also carried out significant work that uses the HOL (Higher Order Logic) specification language and tool support to specify and prove properties about protocols <ref> [104] </ref>. 5.3 Expert Systems and Algebraic Rewriting Systems There have been a few notable attempts to provide automated analysis of protocols via search techniques. Early work by Millen et al led to the development of the Interrogator tool [84]. <p> Also the paper notes There are, in general, many different ways to specify the same protocol, which are correct in some sense. Yet they lead to different running times, and some may exclude possible pene trations. Search-path pruning heuristics may lead to some penetrations being missed. Snekkenes <ref> [104] </ref> points out that the Interrogator does not allow the identification of guess-based attacks. BAN logic does not address these either. As far as we are aware the Interrogator has not discovered any new attacks. Meadows has developed an analysis tool based on term rewriting (the NRL Protocol Analyser).
Reference: [105] <author> Jennifer G. Steiner, Clifford Neuman, and Jeffrey I. Schiller. </author> <title> Ker-beros:An Authentication Service for Open Network Systems. </title> <month> jan </month> <year> 1988. </year> <title> The most usual academic reference for the early Kerberos. Very clearly written. The paper addresses protocol issues but also administration and application programmer views. </title>
Reference: [106] <author> Stuart G. Stubblebine and Virgil D. Gligor. </author> <title> On Message Integrity in Cryptographic Protocols. </title> <booktitle> In Proceedings of the 1992 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 85104. </pages> <publisher> IEEE, </publisher> <year> 1992. </year> <title> This paper deals with the possibility of forging messages by cutting and splicing of transmitted messages. The principal mode of encryption considered is cipher block chaining (CBC). The Kerberos authentication protocols is chosen as an example to be attacked in this way. The paper addresses the adequacy (or otherwise) of checksums to protect against such malicious modification. A detailed but very good read. </title>
Reference-contexts: Thus, he can be fooled into accepting the publicly known Na as a key. Thus use of CBC mode of encryption with this protocol will not suffice. Stubblebine and Gligor <ref> [106] </ref> have demonstrated attacks via cut and paste methods where the ciphertexts of messages are split and conjoined appropriately to form the ciphertexts of other messages (which should only be formable by those in possession of the appropriate key). This is illustrated in figure 9.



Reference: [110] <author> Paul Syverson and Catherine Meadows. </author> <title> A Logic language for Specifying Cryptographic Protocol Requirements. </title> <booktitle> In Proceedings of the 1993 IEEE Symposium on Research in Security and Privacy, </booktitle> <pages> pages 165 177. </pages> <publisher> IEEE Computer Society Press, </publisher> <month> May </month> <year> 1993. </year> <title> As yet unread. Here for completeness. </title>
Reference: [111] <author> Gene Tsudik. </author> <title> Message Authentication with One-Way Hash Functions. Operating Systems Review, </title> <address> 22(5):2938, </address> <year> 1992. </year> <title> This paper assesses the merits of two approaches to using hash functions to provide message authentication: the secret prefix and secret suffix methods. The paper proposes a useful hybrid. </title>
Reference: [112] <author> Victor L. Voydock and Stephen T. Kent. </author> <title> Security Mechanisms in High-Level Network Protocols. </title> <journal> Computing Surveys, </journal> <volume> 15(2):135171, </volume> <month> June </month> <year> 1983. </year> <title> An early protocol security classic. This paper describes attacks on communications protocols and measures that can be taken to counter them. Best of all is the low level detail on cryptosystem usage (in particular, the consequences of the use of particular approaches to the choice of initialisation vectors in DES). Essential reading. </title>
Reference-contexts: Authors differ as to whether they should be passed between communicating parties in the clear (which Schneier [99] thinks is fine) or encrypted ( as recommended by Davies and Price [39]). Voydock and Kent <ref> [112] </ref> address many aspects of initial block usage insisting that they should be pseudo-random for CBC. The rationale given there and in various other texts is incomplete or simply wrong. <p> Voydock and Kent disagree <ref> [112] </ref>. The error propagation properties of the different modes of encryption vary but are not detailed here. The reader is referred to Schneier [99] or Davies and Price [39] for details. Other modes are possible, e.g.
Reference: [113] <institution> Efficient DES Key Search, </institution> <note> Crypto 93, </note> <month> August </month> <year> 1993. </year> <title> 106 This paper addresses in considerable detail a design for a pipelined key--search machine for DES. A very good paper. Probably the most detailed hardware paper to reach a conference ever! </title>
Reference-contexts: This has been a hugely controversial algorithm. The controversy has centred on whether the effective key length (56 bits reduced from 128 at the insistence of the National Security Agency) is really sufficient to withstand attacks from modern-day computing power (see Wiener <ref> [113] </ref> for details), and over the design of elements called S-boxes (the design criteria were not made public). The reader is referred to [101] for details.
Reference: [114] <author> Michael Willet. </author> <title> Cryptography Old and New. </title> <journal> Computers and Security, </journal> <volume> Vol 1:177186, </volume> <year> 1982. </year> <title> This is a simple introduction to cryptography assuming no maths whatsoever. It gives a good introductory account to the history of cryptography and introduces various types of encryption algorithm. It is of course a little dated. It takes the reader from Caesar ciphers to DES and public key cryptography (but no details on the latter). </title>
Reference-contexts: Elements of transposition and substitution are included in modern day algorithms too. It is not our intention to survey classical approaches to cryptography. They are well documented already [41, 99]. An elementary introduction has been produced by Willet <ref> [114] </ref>. 2.2.2 Modernday Cryptography Modernday symmetric key algorithms are principally block ciphers or stream ciphers. A block cipher will encrypt a block of (typically 64 or 128) plaintext bits at a time. The best known block cipher is the ubiquitous Data Encryption Standard [45], universally referred to as DES.
Reference: [115] <author> Michael willet. </author> <title> A Tutorial on Public Key Cryptography. </title> <booktitle> Computers and Security, </booktitle> <pages> pages 120, </pages> <year> 1982. </year> <title> Willett provides a very brief overview of mainstream public key cryptography (concentrating on RSA and Merkle Hellman Knapsacks). </title>
Reference-contexts: There are some very useful and informative papers that deal (at least in part) with public key cryptography. Hellman provides an excellent introduction to public key cryptography and the underlying mathematics [58]. Willet provides a much higher level view <ref> [115] </ref>. Gordon [56] provides a good but simple introduction. Diffie provides an exciting account of the first decade of public key cryptography [43] with a particularly good account of the attacks on knapsacks. Brickell and Odlyzko provide an account of various attacks on public key systems (and others) [25].


Reference: [118] <author> S. Yamaguchi, K. Okayama, and H. Miyahara. </author> <title> Design and Implementation of an Authentication System in WIDE Internet Environment. </title> <booktitle> In Proceedings of the 10th Regional Conference on Computers and Communication Systems, </booktitle> <year> 1990. </year> <title> The original description of the SPLICE Authentication System. </title> <note> See [34]. </note>

Reference: [120] <author> Paul C van Oorschot. </author> <title> An Alternate Explanation of two BAN Logic 'failures'. </title> <editor> In Tor Helleseth, editor, </editor> <booktitle> Eurocrypt '93, number 765 in LNCS, </booktitle> <pages> pages 443447. </pages> <publisher> Springer Verlag, </publisher> <year> 1993. </year> <title> This paper provides a retort to Boyd and Mao's paper at the same conference discussing limitations of BAN logic approaches [23]. Oorschot maintains (with justification) that BAN passes the first protocol simply because the formal assumption of trust in the authentication server is not actually true. The second example protocol is passed by BAN because the idealisa-tion is simply wrong. </title> <type> 109 </type>
Reference-contexts: The authors provide an example of BAN's inability to deal with a parallel session attack. Recent work by Boyd and Mao has indicated that care needs to be taken when cleartext is omitted [23] but Oorschot disputes the views they take <ref> [120] </ref>. Overall, BAN has proved of substantial use. It often seems like a marked improvement on its successors which have added conceptual apparatus to deal with its perceived deficiencies at the expense of considerable increase in complexity. This is indeed the view of Roger Needham (commenting on GNY logic).
References-found: 71

