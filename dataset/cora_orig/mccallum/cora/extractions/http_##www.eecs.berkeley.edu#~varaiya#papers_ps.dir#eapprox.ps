URL: http://www.eecs.berkeley.edu/~varaiya/papers_ps.dir/eapprox.ps
Refering-URL: http://www.eecs.berkeley.edu/~varaiya/
Root-URL: 
Title: *-Approximation of Differential Inclusions  
Author: Anuj Puri and Pravin Varaiya Vivek Borkar 
Keyword: Differential Inclusions, Computational Methods, Hybrid Systems  
Address: Berkeley, CA 94720.  Bangalore 560012, India.  
Affiliation: Department of Electrical Engineering and Computer Sciences, University of California,  Department of Electrical Engineering, Indian Institute of Science,  
Abstract: For a Lipschitz differential inclusion _x 2 f(x), we give a method to compute an arbitrarily close approimation of Reach f (X 0 ; t) | the set of states reached after time t starting from an initial set X 0 . For a differential inclusion _x 2 f (x), and any * &gt; 0, we define a finite sample graph A * . Every trajectory of the differential inclusion _x 2 f (x) is also a "trajectory" in A * . And every "trajectory" of A * has the property that dist( _(t); f ((t))) *. Using this, we can compute the *-invariant sets of the differential inclusion | the sets that remain invariant under *-perturbations in f . 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> R. Abraham, J.E. Marsden, and T. Raitu, </author> <title> Manifolds, Tensor Analysis, and Applications, </title> <publisher> Springer-Verlag, </publisher> <year> 1988. </year>
Reference-contexts: Example 2.1 Consider the differential equation _x = f (x) = 2x, and X 0 = <ref> [1; 2] </ref>. Then Reach f (X 0 ; t) = [e 2t ; 2e 2t ], Reach f (X 0 ; [0; t]) = [e 2t ; 2] and Reach f (X 0 ; [0; 1)] = (0; 2]. <p> Example 2.2 For the differential equation _x = f (x) = 2x, the differential inclusion _x 2 f * (x) = [2x *; 2x + *]. For X 0 = <ref> [1; 2] </ref>, the reach set Reach f * (X 0 ; t) = [e 2t + *(e 2t 1); 2e 2t + *(1 e 2t )] and for * &lt; 2, Reach f * (X 0 ; [0; 1)] = (*; 2]. <p> The trajectories of _x 2 f (x) are sampled every time units and then quantized to obtain the sampled trajectories T raj f (X 0 ). Example 2.3 For the differential equation _x = 2x and X 0 = <ref> [1; 2] </ref>, T raj f (X 0 ) = f ([x (0)e 2m ]) m2Z + : x (0) 2 [1; 2]g. the points that are sampled every time units. The sequence of grids in which the 5 "crosses" appear is recorded, and forms the sampled trajectory. <p> Example 2.3 For the differential equation _x = 2x and X 0 = <ref> [1; 2] </ref>, T raj f (X 0 ) = f ([x (0)e 2m ]) m2Z + : x (0) 2 [1; 2]g. the points that are sampled every time units. The sequence of grids in which the 5 "crosses" appear is recorded, and forms the sampled trajectory. Notice, it is not the sampled value that is recorded, but the grid in which the sample point appears that is recorded. <p> The contingent cone to I at x is the set T I (x) = fvj lim dist ((x + hv); I) h The result characterizing invariant sets under _x 2 f (x) is that I is invariant under f iff for x 2 I, f (x) T I (x) <ref> [5, 1] </ref>. Definition 5.2 A set I is *-invariant provided for all x 2 I, f * (x) T I (x). Definition 5.2 states that the set I is *-invariant provided it is invariant under *-perturbations of f .
Reference: [2] <author> R. Alur et. al., </author> <title> The Algorithmic Analysis of Hybrid Systems, </title> <booktitle> Theoretical Computer Science, </booktitle> <month> Feb. </month> <year> 1995. </year>
Reference-contexts: Example 2.1 Consider the differential equation _x = f (x) = 2x, and X 0 = <ref> [1; 2] </ref>. Then Reach f (X 0 ; t) = [e 2t ; 2e 2t ], Reach f (X 0 ; [0; t]) = [e 2t ; 2] and Reach f (X 0 ; [0; 1)] = (0; 2]. <p> Example 2.1 Consider the differential equation _x = f (x) = 2x, and X 0 = [1; 2]. Then Reach f (X 0 ; t) = [e 2t ; 2e 2t ], Reach f (X 0 ; [0; t]) = <ref> [e 2t ; 2] </ref> and Reach f (X 0 ; [0; 1)] = (0; 2]. There is a close relationship between the Lipschitz differential inclusion _x 2 f (x) and the convex-valued differential inclusion _x 2 co (f (x)). This is made by the following relaxation theorem [4, 15]. <p> Example 2.2 For the differential equation _x = f (x) = 2x, the differential inclusion _x 2 f * (x) = [2x *; 2x + *]. For X 0 = <ref> [1; 2] </ref>, the reach set Reach f * (X 0 ; t) = [e 2t + *(e 2t 1); 2e 2t + *(1 e 2t )] and for * &lt; 2, Reach f * (X 0 ; [0; 1)] = (*; 2]. <p> The trajectories of _x 2 f (x) are sampled every time units and then quantized to obtain the sampled trajectories T raj f (X 0 ). Example 2.3 For the differential equation _x = 2x and X 0 = <ref> [1; 2] </ref>, T raj f (X 0 ) = f ([x (0)e 2m ]) m2Z + : x (0) 2 [1; 2]g. the points that are sampled every time units. The sequence of grids in which the 5 "crosses" appear is recorded, and forms the sampled trajectory. <p> Example 2.3 For the differential equation _x = 2x and X 0 = <ref> [1; 2] </ref>, T raj f (X 0 ) = f ([x (0)e 2m ]) m2Z + : x (0) 2 [1; 2]g. the points that are sampled every time units. The sequence of grids in which the 5 "crosses" appear is recorded, and forms the sampled trajectory. Notice, it is not the sampled value that is recorded, but the grid in which the sample point appears that is recorded. <p> The cover c g is indicated by the bold square. Note, for x 2 hgi, B ffi (x) c g for ffi * 6k . 6k -grid Example 3.1 Consider the following differential inclusion: _x 1 = 2x 1 x 2 We are interested in the region R = <ref> [2; +2] </ref> fi [2; +2]. We first determine the Lipschitz constant for the differential inclusion. For x; y 2 R, suppose _y 2 f (y). <p> Note, for x 2 hgi, B ffi (x) c g for ffi * 6k . 6k -grid Example 3.1 Consider the following differential inclusion: _x 1 = 2x 1 x 2 We are interested in the region R = <ref> [2; +2] </ref> fi [2; +2]. We first determine the Lipschitz constant for the differential inclusion. For x; y 2 R, suppose _y 2 f (y). <p> But from the relaxation theorem (theorem 2.1), for a Lipschitz differential inclusion _x 2 f (x), it suffices to study the convex-valued differential inclusion _x 2 co (f (x)). The Reach Set Computation procedure we described can be automated using computer tools available for analysis of hybrid systems <ref> [2, 3, 8, 12, 10] </ref>. An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . <p> An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). <p> When we are interested in studying the differential inclusion on a bounded region, we restrict the graph A to the bounded region and get a finite graph. 12 Example 4.2 For the differential equation _x = 2x, figure 4 shows the sample graph for interval <ref> [0; 2] </ref> where the sample time = 0:5 and grid separation is fi = 0:25. To get an *-approximation of the differential equation _x 2 f (x), we need to construct the sample graph from a sufficiently small grid.
Reference: [3] <author> R.Alur, C.Courcoubetis, T.A. Henzinger and P.-H. Ho, </author> <title> Hybrid automata: an algorithmic approach to the specification and verification of hybrid systems,Hybrid Systems, </title> <publisher> LNCS 736, Springer-Verlag. </publisher>
Reference-contexts: But from the relaxation theorem (theorem 2.1), for a Lipschitz differential inclusion _x 2 f (x), it suffices to study the convex-valued differential inclusion _x 2 co (f (x)). The Reach Set Computation procedure we described can be automated using computer tools available for analysis of hybrid systems <ref> [2, 3, 8, 12, 10] </ref>. An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . <p> An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). <p> The fixed point at the origin is a saddle point with one dimensional unstable manifold. The other two fixed points at (1,1,1) and (-1,-1,1) are stable. We compute the largest invariant set contained in the region R = <ref> [3; 3] </ref> fi [3; 3] fi [3; 3]. It can be shown that k = 9 is a Lipschitz constant. The sample time is = ln2 k (see discussion in Example 4.3). A graph is constructed on a grid of size 90 fi 90 fi 90. <p> The fixed point at the origin is a saddle point with one dimensional unstable manifold. The other two fixed points at (1,1,1) and (-1,-1,1) are stable. We compute the largest invariant set contained in the region R = <ref> [3; 3] </ref> fi [3; 3] fi [3; 3]. It can be shown that k = 9 is a Lipschitz constant. The sample time is = ln2 k (see discussion in Example 4.3). A graph is constructed on a grid of size 90 fi 90 fi 90. <p> The fixed point at the origin is a saddle point with one dimensional unstable manifold. The other two fixed points at (1,1,1) and (-1,-1,1) are stable. We compute the largest invariant set contained in the region R = <ref> [3; 3] </ref> fi [3; 3] fi [3; 3]. It can be shown that k = 9 is a Lipschitz constant. The sample time is = ln2 k (see discussion in Example 4.3). A graph is constructed on a grid of size 90 fi 90 fi 90.
Reference: [4] <author> J.P. Aubin and A. Cellina, </author> <title> Differential Inclusions, </title> <publisher> Springer-Verlag, </publisher> <year> 1984. </year>
Reference-contexts: There is a close relationship between the Lipschitz differential inclusion _x 2 f (x) and the convex-valued differential inclusion _x 2 co (f (x)). This is made by the following relaxation theorem <ref> [4, 15] </ref>. Theorem 2.1 For a Lipschitz differential inclusion _x 2 f (x), cl (Reach f (X 0 ; t)) = Reach co (f) (X 0 ; t). <p> For further details on differential inclusions, see <ref> [5, 4, 15] </ref>. The following two results are obtained by using the Bellman-Gronwall inequality [9].
Reference: [5] <author> J.P. Aubin, </author> <title> Viability Theory, </title> <publisher> Birkhauser, </publisher> <year> 1991. </year>
Reference-contexts: For further details on differential inclusions, see <ref> [5, 4, 15] </ref>. The following two results are obtained by using the Bellman-Gronwall inequality [9]. <p> The contingent cone to I at x is the set T I (x) = fvj lim dist ((x + hv); I) h The result characterizing invariant sets under _x 2 f (x) is that I is invariant under f iff for x 2 I, f (x) T I (x) <ref> [5, 1] </ref>. Definition 5.2 A set I is *-invariant provided for all x 2 I, f * (x) T I (x). Definition 5.2 states that the set I is *-invariant provided it is invariant under *-perturbations of f .
Reference: [6] <author> V. Borkar and P. Varaiya, </author> <title> *-Approximation of Differential Inclusion using Rectangular Differential Inclusion, </title> <booktitle> Notes. </booktitle>
Reference-contexts: We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). Instead, a decidable class of hybrid systems such as [11, 8], can be used to approximate 11 a differential inclusion and prove the same result as Theorem 3.3 <ref> [6] </ref>. The decidable hybrid systems have the intersting property that the infinite time reachable set for them can be computed in a finite number of steps.
Reference: [7] <author> J. Guckenheimer and P. Holmes, </author> <title> Nonlinear Oscillations, Dynamical Systems, and Bifurcations of Vector Fields, </title> <publisher> Springer-Verlag, </publisher> <year> 1983. </year> <month> 23 </month>
Reference-contexts: The actual invariant set is shown in Figure 8. The invariant set is an attracting set of the equilibrium point (0; 0) (see <ref> [7] </ref>). We next use the graph method of Theorem 5.1 and Theorem 4.3 to compute the invariant set for Equation 3. A straightforward computation shows that k = 11 is a Lipschitz constant. We choose = ln2 k to be the sample time (see Example 4.3). <p> For a lightly damped system (smaller c), we expect a larger grid size to be required. This is also observed in our computational experiments. 6.2 The Lorenz Equations In this section, we study the Lorenz equations <ref> [7, 14] </ref>. The equations are _x = (y x) (4) _z = fiz + xy We study the system for = 1, = 2 and fi = 1. The system has three fixed points (see [7, 14] for a detailed description of the dynamics of the system). <p> our computational experiments. 6.2 The Lorenz Equations In this section, we study the Lorenz equations <ref> [7, 14] </ref>. The equations are _x = (y x) (4) _z = fiz + xy We study the system for = 1, = 2 and fi = 1. The system has three fixed points (see [7, 14] for a detailed description of the dynamics of the system). The fixed point at the origin is a saddle point with one dimensional unstable manifold. The other two fixed points at (1,1,1) and (-1,-1,1) are stable.
Reference: [8] <author> T. Henzinger, P. Kopke, A. Puri and P. Varaiya, </author> <title> What's Decidable About Hybrid Automata, </title> <month> STOCS </month> <year> 1995. </year>
Reference-contexts: But from the relaxation theorem (theorem 2.1), for a Lipschitz differential inclusion _x 2 f (x), it suffices to study the convex-valued differential inclusion _x 2 co (f (x)). The Reach Set Computation procedure we described can be automated using computer tools available for analysis of hybrid systems <ref> [2, 3, 8, 12, 10] </ref>. An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . <p> An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). <p> See [2, 3, 8, 12, 11, 10] for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). Instead, a decidable class of hybrid systems such as <ref> [11, 8] </ref>, can be used to approximate 11 a differential inclusion and prove the same result as Theorem 3.3 [6]. The decidable hybrid systems have the intersting property that the infinite time reachable set for them can be computed in a finite number of steps.
Reference: [9] <author> M. W. Hirsh and S. </author> <title> Smale Differential Equations, Dynamical Systems, and Linear Algebra, </title> <publisher> Academic Press, Inc., </publisher> <year> 1974. </year>
Reference-contexts: For further details on differential inclusions, see [5, 4, 15]. The following two results are obtained by using the Bellman-Gronwall inequality <ref> [9] </ref>.
Reference: [10] <author> X.Nicollin, A. Olivero, J. Sifakis, and S.Yovine, </author> <title> An Approach to the Description and Analysis of Hybrid Systems, Hybrid Systems, </title> <publisher> LNCS 736, Springer-Verlag, </publisher> <year> 1993. </year>
Reference-contexts: But from the relaxation theorem (theorem 2.1), for a Lipschitz differential inclusion _x 2 f (x), it suffices to study the convex-valued differential inclusion _x 2 co (f (x)). The Reach Set Computation procedure we described can be automated using computer tools available for analysis of hybrid systems <ref> [2, 3, 8, 12, 10] </ref>. An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . <p> An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x).
Reference: [11] <author> A. Puri and P. Varaiya, </author> <title> Decidability of Hybrid System with Rectangular Differential Inclusions, </title> <booktitle> CAV 94: Computer-Aided Verification, Lecture Notes in Computer Science 818, </booktitle> <pages> pages 95-104. </pages> <publisher> Springer-Verlag, </publisher> <year> 1994. </year>
Reference-contexts: An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). <p> See [2, 3, 8, 12, 11, 10] for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). Instead, a decidable class of hybrid systems such as <ref> [11, 8] </ref>, can be used to approximate 11 a differential inclusion and prove the same result as Theorem 3.3 [6]. The decidable hybrid systems have the intersting property that the infinite time reachable set for them can be computed in a finite number of steps.
Reference: [12] <author> A. Puri and P. Varaiya, </author> <title> Verification of Hybrid Systems using Abstractions, Hybrid Systems II, </title> <publisher> LNCS 999, Springer-Verlag, </publisher> <year> 1995. </year>
Reference-contexts: But from the relaxation theorem (theorem 2.1), for a Lipschitz differential inclusion _x 2 f (x), it suffices to study the convex-valued differential inclusion _x 2 co (f (x)). The Reach Set Computation procedure we described can be automated using computer tools available for analysis of hybrid systems <ref> [2, 3, 8, 12, 10] </ref>. An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . <p> An equivalent hybrid automaton can be constructed by associating location l g with c g , differential inclusion d g with location l g , and guard c g T c h with the edge from location l g to l h . See <ref> [2, 3, 8, 12, 11, 10] </ref> for more details on hybrid systems and their analysis. We used polyhedral inclusions to approximate the differential inclusion _x 2 f (x). <p> We want to compute the largest invariant set contained in region R = [; ] fi <ref> [12; 12] </ref>. The invariant set can be calculated exactly. <p> Computing the invariant sets and reach sets is an important problem. It is finding increasing use in the study of hybrid systems (see <ref> [12, 13] </ref>). An important problem is to find techniques to make the algorithms and methods presented in this paper more efficient in terms of space and time usage.
Reference: [13] <author> A. Puri and P. Varaiya, </author> <note> Driving Safely in Smart Cars, California PATH Research Report UCB-ITS-PRR-95-24, </note> <month> July </month> <year> 1995. </year>
Reference-contexts: Computing the invariant sets and reach sets is an important problem. It is finding increasing use in the study of hybrid systems (see <ref> [12, 13] </ref>). An important problem is to find techniques to make the algorithms and methods presented in this paper more efficient in terms of space and time usage.
Reference: [14] <author> C. </author> <title> Sparrow, The Lorenz Equations, </title> <publisher> Springer-Verlag, </publisher> <year> 1982. </year>
Reference-contexts: For a lightly damped system (smaller c), we expect a larger grid size to be required. This is also observed in our computational experiments. 6.2 The Lorenz Equations In this section, we study the Lorenz equations <ref> [7, 14] </ref>. The equations are _x = (y x) (4) _z = fiz + xy We study the system for = 1, = 2 and fi = 1. The system has three fixed points (see [7, 14] for a detailed description of the dynamics of the system). <p> our computational experiments. 6.2 The Lorenz Equations In this section, we study the Lorenz equations <ref> [7, 14] </ref>. The equations are _x = (y x) (4) _z = fiz + xy We study the system for = 1, = 2 and fi = 1. The system has three fixed points (see [7, 14] for a detailed description of the dynamics of the system). The fixed point at the origin is a saddle point with one dimensional unstable manifold. The other two fixed points at (1,1,1) and (-1,-1,1) are stable.
Reference: [15] <author> P. P. Varaiya, </author> <title> On the Trajectories of a Differential System, in A.V. </title> <editor> Balakrishnan and L.W. Neustadt, editor, </editor> <booktitle> Mathematical Theory of Control, </booktitle> <publisher> Academic Press, </publisher> <year> 1967. </year>
Reference-contexts: There is a close relationship between the Lipschitz differential inclusion _x 2 f (x) and the convex-valued differential inclusion _x 2 co (f (x)). This is made by the following relaxation theorem <ref> [4, 15] </ref>. Theorem 2.1 For a Lipschitz differential inclusion _x 2 f (x), cl (Reach f (X 0 ; t)) = Reach co (f) (X 0 ; t). <p> For further details on differential inclusions, see <ref> [5, 4, 15] </ref>. The following two results are obtained by using the Bellman-Gronwall inequality [9].
References-found: 15

