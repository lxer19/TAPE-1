URL: http://sctest.cse.ucsc.edu/papers/1993/vts.pdft.ps
Refering-URL: http://www.cse.ucsc.edu/~fjf/publications.html
Root-URL: http://www.cse.ucsc.edu
Title: Physical Design for Testability for Bridges in CMOS Circuits  
Author: F. Joel Ferguson 
Address: Santa Cruz, CA 95064  
Affiliation: Board of Studies in Computer Engineering Univeristy of California, Santa Cruz  
Abstract: Present research in design for testability has largely been confined to the logic level. In this paper we present directions for research in design for testability at the layout or physical design level. These are illustrated for bridge faults in circuits consisting of CMOS standard cells. 
Abstract-found: 1
Intro-found: 1
Reference: [Ack83] <author> J.M. Acken. </author> <title> Testing for bridging faults (shorts) in CMOS circuits. </title> <booktitle> Proceedings of Design Automation Conference, </booktitle> <pages> pages 717-718, </pages> <year> 1983. </year>
Reference-contexts: The two approaches for detecting bridges in CMOS circuits are to detect them by finding a change in logic function [MG91, FL91b], and measuring an increase in quiescent power supply current <ref> [Ack83, MGGC90, FL91a] </ref>. However there has been relatively little in the literature concerning DFT for bridge faults. 1 For the purposes of this paper we consider gate oxide shorts in a separate category than bridge faults. 2 Breaks and gate oxide shorts will be incorporated into the Carafe-Nemesis system soon.
Reference: [Ack88] <author> John M. Acken. </author> <title> Deriving Accurate Fault Models. </title> <type> PhD thesis, </type> <institution> Stanford University, Department of Electrical Engineering, </institution> <month> September </month> <year> 1988. </year>
Reference-contexts: For CMOS non-feedback bridge faults Acken's voting model is used <ref> [Ack88] </ref> to find the resulting logic values.
Reference: [FL91a] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test pattern generation for current testable faults in static CMOS circuits. </title> <booktitle> In Proceedings of the 1991 VLSI Test Symposium, </booktitle> <pages> pages 297-302. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: The two approaches for detecting bridges in CMOS circuits are to detect them by finding a change in logic function [MG91, FL91b], and measuring an increase in quiescent power supply current <ref> [Ack83, MGGC90, FL91a] </ref>. However there has been relatively little in the literature concerning DFT for bridge faults. 1 For the purposes of this paper we consider gate oxide shorts in a separate category than bridge faults. 2 Breaks and gate oxide shorts will be incorporated into the Carafe-Nemesis system soon.
Reference: [FL91b] <author> F. Joel Ferguson and Tracy Larrabee. </author> <title> Test pattern generation for realistic bridge faults in CMOS ICs. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 492-499. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: The Carafe fault extraction program and the Nemesis automatic test pattern generation program [Lar92] have been combined so that Carafe extracts the likely bridge faults in a standard cell based design, other software determines the local logical change in function of the bridge, and Nemesis generates tests to detect them <ref> [FL91b] </ref>. <p> Since bridges are a relatively common fault type and may not be detected by tests with high SSA coverage, their detection has been a major research topic recently. The two approaches for detecting bridges in CMOS circuits are to detect them by finding a change in logic function <ref> [MG91, FL91b] </ref>, and measuring an increase in quiescent power supply current [Ack83, MGGC90, FL91a].
Reference: [Gol79] <author> L.H. Goldstein. </author> <title> Controllability/oberservability analysis of digital circuits. </title> <journal> IEEE Transactions on Circuits and Systems, </journal> <volume> CAS-26:685-693, </volume> <month> Sept. </month> <year> 1979. </year>
Reference-contexts: The first step for our research will be experimentation to determine what makes an interconnect bridge fault difficult to detect. We are currently comparing the observability and controllability measures of the undetectable and detectable bridge faults <ref> [Gol79] </ref>. We will also study how the placement, routing, and logic choice rules affect a circuit's testability. Consider, as an example, the feedback bridge fault embedded in a much larger circuit, shown in Figure 4.
Reference: [Hei88] <author> Dennis V. Heinbuch. </author> <title> CMOS3 Cell Library. </title> <publisher> Addison-Wesley Publishing Company, </publisher> <year> 1988. </year>
Reference-contexts: being driven to a different value, the resulting voltage is determined by a "vote" between the pullup path (s) and the pulldown path (s), where not all paths have the same strength. are stronger than the nMOS transistors in series for the NAND gates in the CMOS3 standard cell library <ref> [Hei88] </ref>, but a single pMOS transistor is not, which can be explained by the voting model. The transistor strength model used in switch-level simulators, such as COSMOS, cannot model this fault correctly by assigning any combination of strengths to the eight transistors of the two NAND gates.
Reference: [Jee91] <author> Alvin Jee. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <type> Technical Report UCSC-CRL-91-24, </type> <institution> University of California at Santa Cruz, Computer Engineering Department, </institution> <month> February </month> <year> 1991. </year>
Reference-contexts: Now we have software that determines what circuit faults are likely to happen based on the layout, or physical design, of the circuit, and the types and distribution of point defects. An example of such software is the Carafe fault extractor <ref> [Jee91, JF93] </ref>. Carafe produces a list of realistic bridge and break faults and gives their relative likelihood. The relative likelihood of each circuit-level fault is based on the circuit's layout and defect statistics.
Reference: [JF93] <author> Alvin Jee and F. Joel Ferguson. Carafe: </author> <title> An inductive fault analysis tool for CMOS VLSI circuits. </title> <booktitle> In Proceedings of the IEEE VLSI Test Symposium, </booktitle> <year> 1993. </year> <title> G E C A </title>
Reference-contexts: Now we have software that determines what circuit faults are likely to happen based on the layout, or physical design, of the circuit, and the types and distribution of point defects. An example of such software is the Carafe fault extractor <ref> [Jee91, JF93] </ref>. Carafe produces a list of realistic bridge and break faults and gives their relative likelihood. The relative likelihood of each circuit-level fault is based on the circuit's layout and defect statistics.
Reference: [Koe87] <author> Siegmar Koeppe. </author> <title> Optimal layout to avoid CMOS stuck-open faults. </title> <booktitle> In Proceedings of Design Automation Conference, </booktitle> <pages> pages 829-835. </pages> <publisher> IEEE, </publisher> <year> 1987. </year>
Reference-contexts: However it is still possible that the sequential fault will appear near an open in the diffusion path between the vias and one of the nMOS transistor's source, but this is much less likely than a missing via. This change in layout has been discussed by Koeppe <ref> [Koe87] </ref> and Levitt and Abraham [LA90]. This list of DFT objectives is probably not exhaustive and some existing DFT techniques fall into multiple categories, but it serves to classify the P-DFT techniques that we outline later. <p> Most other papers concerning P-DFT involve changes to the layout of cells to cause breaks in conduction paths not to occur <ref> [Koe87, STTH89, LA90] </ref>. In this paper we consider P-DFT of bridges in more detail. Traditionally bridge faults have been modeled as wired-AND or a wired-OR function on the two bridged nodes, that is, the logic 0 is always stronger than the logic 1 or vice-versa.
Reference: [LA90] <author> Marc E. Levitt and Jacob A. Abraham. </author> <title> Physical design of testable VLSI: Techniques and experiments. </title> <journal> IEEE Journal of Solid-State Circuits, </journal> <volume> 25(2) </volume> <pages> 474-481, </pages> <month> April </month> <year> 1990. </year>
Reference-contexts: This change in layout has been discussed by Koeppe [Koe87] and Levitt and Abraham <ref> [LA90] </ref>. This list of DFT objectives is probably not exhaustive and some existing DFT techniques fall into multiple categories, but it serves to classify the P-DFT techniques that we outline later. <p> Most other papers concerning P-DFT involve changes to the layout of cells to cause breaks in conduction paths not to occur <ref> [Koe87, STTH89, LA90] </ref>. In this paper we consider P-DFT of bridges in more detail. Traditionally bridge faults have been modeled as wired-AND or a wired-OR function on the two bridged nodes, that is, the logic 0 is always stronger than the logic 1 or vice-versa.
Reference: [Lar92] <author> Tracy Larrabee. </author> <title> Test pattern generation using boolean satisfiability. </title> <journal> IEEE Transactions on Computer-Aided Design, </journal> <pages> pages 4-15, </pages> <month> January </month> <year> 1992. </year>
Reference-contexts: The interactive mode uses X-windows to display the circuit and any of the faults of interest. This allows the designer to view the more troublesome faults and perhaps redesign the circuit to eliminate them. The Carafe fault extraction program and the Nemesis automatic test pattern generation program <ref> [Lar92] </ref> have been combined so that Carafe extracts the likely bridge faults in a standard cell based design, other software determines the local logical change in function of the bridge, and Nemesis generates tests to detect them [FL91b].
Reference: [Mei74] <author> K.C.Y. Mei. </author> <title> Bridging and stuck-at faults. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-23(7):720-727, </volume> <month> July </month> <year> 1974. </year>
Reference-contexts: The transistor strength model used in switch-level simulators, such as COSMOS, cannot model this fault correctly by assigning any combination of strengths to the eight transistors of the two NAND gates. Bridge faults may also cause sequential behavior <ref> [Mei74] </ref> or produce oscillations in the logic value of the bridged nodes. The one necessary criterion that must be met for either oscillation or sequential behavior to occur is for the "downstream" node's logic value to outdrive the "upstream" node's logic value.
Reference: [MFS84] <author> W. Maly, F.J. Ferguson, and J. P. Shen. </author> <title> Systematic characterization of physical defects for fault analysis of MOS IC cells. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 390-399. </pages> <publisher> IEEE, </publisher> <year> 1984. </year>
Reference-contexts: We do not assume a specific fault model in our analysis. Instead we base our evaluation on the testability of the circuit's realistic faults, those that are realizable due to a single defect <ref> [MFS84] </ref>. 3 Bridge Faults in CMOS Circuits A bridge is a short between two or more cir cuit nodes 1 . Bridges are chosen because the Carafe-Nemesis system currently extracts and generates tests for only the bridge faults in the circuit 2 .
Reference: [MG91] <author> S.D. Millman and J.P. Garvey. </author> <title> An accurate bridging fault test pattern generator. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 411-418. </pages> <publisher> IEEE, </publisher> <year> 1991. </year>
Reference-contexts: Since bridges are a relatively common fault type and may not be detected by tests with high SSA coverage, their detection has been a major research topic recently. The two approaches for detecting bridges in CMOS circuits are to detect them by finding a change in logic function <ref> [MG91, FL91b] </ref>, and measuring an increase in quiescent power supply current [Ack83, MGGC90, FL91a].
Reference: [MGGC90] <author> W. Mao, R.K. Gulati, D.K. Goel, and M.D. Ciletti. QUIETEST: </author> <title> A quiescent current testing methodology for detec-tiong leakage faults. </title> <booktitle> In Proceedings of International Conference on Computer-Aided Design, </booktitle> <pages> pages 280-283. </pages> <publisher> IEEE, </publisher> <year> 1990. </year>
Reference-contexts: The two approaches for detecting bridges in CMOS circuits are to detect them by finding a change in logic function [MG91, FL91b], and measuring an increase in quiescent power supply current <ref> [Ack83, MGGC90, FL91a] </ref>. However there has been relatively little in the literature concerning DFT for bridge faults. 1 For the purposes of this paper we consider gate oxide shorts in a separate category than bridge faults. 2 Breaks and gate oxide shorts will be incorporated into the Carafe-Nemesis system soon.
Reference: [MTCC87] <author> W. Maly, M.E. Thomas, J.D. Chinn, and D.M. Campbell. </author> <title> Double-bridge test structure for the evaluation of type, size and density of spot defects. </title> <type> Technical Report CMUCAD-87-2, </type> <institution> Carnegie Mellon University, SRC-CMU Center for Computer-Aided Design, Dept. of ECE, </institution> <month> February </month> <year> 1987. </year>
Reference-contexts: Bridges are chosen because the Carafe-Nemesis system currently extracts and generates tests for only the bridge faults in the circuit 2 . Carafe originally targeted bridge faults because they are one of the most common fault types in CMOS circuit technology <ref> [SMF85, MTCC87] </ref>. Also they have been identified as potentially not detected by tests with 100% SSA coverage. Since bridges are a relatively common fault type and may not be detected by tests with high SSA coverage, their detection has been a major research topic recently.
Reference: [SCS + 92] <author> M. Saraiva, P. Casimiro, M. Santos, J.T. Sousa, F. Goncalves, I Teixeira, and J.P. Teixeira. </author> <title> Physical DFT for high coverage of realistic faults. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 642-647. </pages> <publisher> IEEE, </publisher> <year> 1992. </year>
Reference: [SMF85] <author> J.P. Shen, W. Maly, and F.J. Fergu-son. </author> <title> Inductive fault analysis of MOS integrated circuits. </title> <journal> IEEE Design and Test of Computers, </journal> <volume> 2(6) </volume> <pages> 13-26, </pages> <month> December </month> <year> 1985. </year>
Reference-contexts: Bridges are chosen because the Carafe-Nemesis system currently extracts and generates tests for only the bridge faults in the circuit 2 . Carafe originally targeted bridge faults because they are one of the most common fault types in CMOS circuit technology <ref> [SMF85, MTCC87] </ref>. Also they have been identified as potentially not detected by tests with 100% SSA coverage. Since bridges are a relatively common fault type and may not be detected by tests with high SSA coverage, their detection has been a major research topic recently.
Reference: [STTH89] <author> J.M. Soden, R.K. Treece, </author> <title> M.R. Taylor, and C.F. Hawkins. CMOS IC stuck-open fault electrical effects and design considerations. </title> <booktitle> In Proceedings of International Test Conference, </booktitle> <pages> pages 423-430. </pages> <publisher> IEEE, </publisher> <year> 1989. </year>
Reference-contexts: Most other papers concerning P-DFT involve changes to the layout of cells to cause breaks in conduction paths not to occur <ref> [Koe87, STTH89, LA90] </ref>. In this paper we consider P-DFT of bridges in more detail. Traditionally bridge faults have been modeled as wired-AND or a wired-OR function on the two bridged nodes, that is, the logic 0 is always stronger than the logic 1 or vice-versa.
Reference: [Wad78] <author> R.L. Wadsack. </author> <title> Fault modeling and logic simulation of CMOS and MOS integrated circuits. </title> <journal> Bell System Technical Journal, </journal> <volume> 57(5) </volume> <pages> 1449-1474, </pages> <month> May-June </month> <year> 1978. </year>
Reference-contexts: An example of this shown in Figure 1. A break in one of the paths from the gate's output to ground is a difficult-to-detect fault for this circuit. This would cause the gate to become a two-state FSM <ref> [Wad78] </ref>. The most likely cause of this happening is if a via (represented in Figure 1 as an "x") between the metal and diffusion regions is missing. One way to make this fault less likely is to provide a redundant connection between the two vias with diffusion.
References-found: 20

