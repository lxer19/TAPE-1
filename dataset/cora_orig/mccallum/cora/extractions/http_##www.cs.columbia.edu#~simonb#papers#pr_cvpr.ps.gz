URL: http://www.cs.columbia.edu/~simonb/papers/pr_cvpr.ps.gz
Refering-URL: http://www.cs.columbia.edu/~simonb/pub.html
Root-URL: http://www.cs.columbia.edu
Title: Pattern Rejection  
Author: Simon Baker and Shree K. Nayar 
Address: New York, USA  
Affiliation: Department of Computer Science, Columbia University,  
Note: Appeared in the Proceedings of Computer Vision and Pattern Recognition, San Francisco, 1996.  
Abstract: The efficiency of pattern recognition is particularly crucial in two scenarios; whenever there are a large number of classes to discriminate, and, whenever recognition must be performed a large number of times. We propose a single technique, namely, pattern rejection, that greatly enhances efficiency in both cases. A rejector is a generalization of a classifier, that quickly eliminates a large fraction of the candidate classes or inputs. This allows a recognition algorithm to dedicate its efforts to a much smaller number of possibilities. Importantly, a collection of rejectors may be combined to form a composite rejector, which is shown to be far more effective than any of its individual components. A simple algorithm is proposed for the construction of each of the component rejectors. Its generality is established through close relationships with the Karhunen-Loeve expansion and Fisher's discriminant analysis. Composite rejectors were constructed for two representative applications, namely, appearance matching based object recognition and local feature detection. The results demonstrate substantial efficiency improvements over existing approaches, most notably Fisher's discriminant analysis. 
Abstract-found: 1
Intro-found: 1
Reference: [Baker and Nayar 95] <author> S. Baker and S.K. Nayar, </author> <title> "A Theory of Pattern Rejection," </title> <institution> Columbia University Technical Report, CUCS-013-95, </institution> <year> 1995. </year>
Reference-contexts: We form a rejection-based classifier by first applying a rejector, , and then applying a verifier for each class label in the output of the rejector. Combining the results, we can easily classify the input. The efficiency of a rejection-based classifier can immediately be seen <ref> [Baker and Nayar 95] </ref> to be given by: T av ( rb ) = T av ( ) + E x2S (j (x)j) T ver (1) where, T av ( rb ) is the average run time of the rejection-based classifier, T av ( ); is the average run time of <p> With respect to the underlying a priori probability density function from which the vectors are drawn, the rejection domains are mutually independent. 3. The effectiveness of each of the rejectors is the same: 8- 2 =; Eff ( -) = E; say. Then, we can show (see <ref> [Baker and Nayar 95] </ref>) that a rejection-based classifier using such a composite rejector runs on average in time: T av ( rb ) dlog E 1 ne T rej + 2 T ver (2) where, T rej is the run time of each of the rejectors (assumed constant), and n is <p> If we denote by M (n); the maximum number of rejectors in that may be reached after, and including, the rejector constructed for a collection of n classes, it can be shown (see <ref> [Baker and Nayar 95] </ref>) that M (n) is polynomial: M (n) n 1=(1log 2 (1+*)) 1 (3) It is not always possible to completely satisfy the three requirements stated above. <p> See <ref> [Baker and Nayar 95] </ref> for more details. 5 Example Applications 5.1 3D Object Recognition We follow the appearance matching approach, first described in [Murase and Nayar 95]. <p> The rejector used at each step is individually constructed for the classes it seeks to distinguish between. 5.2 Local Feature Detection We constructed a composite rejector for a feature detector of the type proposed in [Nayar et al. 96]. (The details of the implementation may be found in <ref> [Baker and Nayar 95] </ref>.) The output of the composite rejector is used as input to the feature detector, and consists of pixels at which further consideration is worthwhile.
Reference: [Bentley 80] <author> J.L. Bentley, </author> <title> "Multidimensional divide-and-conquer," Communications of the ACM, output on the right consists of those pixels which our rejection algorithm has quickly decided are worthy of further consideration. On average 1.81 rejectors (each corresponding to a convolution) were applied at each pixel. </title> <booktitle> 23 </booktitle> <pages> 214-229, </pages> <year> 1980. </year>
Reference: [Duda and Hart 73] <author> R.O. Duda and P.E. Hart, </author> <title> Pattern Classification and Scene Analysis, </title> <publisher> John Wiley & Sons, </publisher> <year> 1973. </year>
Reference-contexts: Finally, the vector is intensity normalized to lie on the unit sphere, B. The data set that we used (see Figure 2) consists of 20 objects (classes). It contains 72 images of each 2 This choice of rejection vector is closely related to Fisher's discriminant analysis <ref> [Duda and Hart 73] </ref>. By working orthogonally to L n i=1 L i , we are limiting the within-class scatter of each class. Spreading out the points hr; c i i, maximizes the between-class scatter. <p> Using the same image database, we compared the performance of the composite rejector against that of Fisher's discriminant analysis [Fisher 36]. Again, we followed the same test procedure, namely, setting aside half of the data, and using the other half to construct the classifier. Then, we constructed Fisher spaces <ref> [Duda and Hart 73] </ref> of different dimensionality. In Fisher space the classes consist of tight clusters, which we model as multivariate normal distributions. We computed the mean and covariance matrix of each average number of simple rejectors required to completely discriminate between those objects.
Reference: [Fisher 36] <author> R.A. Fisher, </author> <title> "The use of multiple measurements in taxonomic problems," </title> <journal> Annals of Eugenics, </journal> <volume> 7 </volume> <pages> 179-188, </pages> <year> 1939. </year>
Reference-contexts: The results, in Figure 4, validate the hypothesized logarithmic growth in time complexity. Using the same image database, we compared the performance of the composite rejector against that of Fisher's discriminant analysis <ref> [Fisher 36] </ref>. Again, we followed the same test procedure, namely, setting aside half of the data, and using the other half to construct the classifier. Then, we constructed Fisher spaces [Duda and Hart 73] of different dimensionality.
Reference: [Friedman et al. 77] <author> J.H. Friedman, J.L. Bentley, and R.A. Finkel, </author> <title> "An algorithm for finding best matches in logarithmic expected time," </title> <journal> ACM Transactions on Mathematical Software, </journal> <volume> 3 </volume> <pages> 209-226, </pages> <year> 1977. </year>
Reference: [Fukunaga 90] <author> K. Fukunaga, </author> <title> Statistical Pattern Recognition, </title> <publisher> Academic Press, </publisher> <year> 1990. </year>
Reference: [Henrichon and Fu 69] <author> E.G. Henrichon and K-S. Fu, </author> <title> "A Nonparametric Partitioning Procedure for Pattern Classification," </title> <journal> IEEE Transactions on Computers, </journal> <volume> 18 </volume> <pages> 614-624, </pages> <year> 1969. </year>
Reference: [Murase and Nayar 95] <author> H. Murase and S.K. Nayar, </author> <title> "Visual Learning and Recognition of 3D Objects from Appearance," </title> <journal> International Journal of Computer Vision, </journal> <volume> 14 </volume> <pages> 5-24, </pages> <year> 1995. </year>
Reference-contexts: The data set is that used in <ref> [Murase and Nayar 95] </ref>. direction of the rejection vector, r. <p> See [Baker and Nayar 95] for more details. 5 Example Applications 5.1 3D Object Recognition We follow the appearance matching approach, first described in <ref> [Murase and Nayar 95] </ref>. Object recognition is reduced to pattern recognition by first segmenting the object and then scale normalizing it to an image of size 128 fi 128 pixels. <p> Since the time taken at each node is essentially the cost of one inner product (convolution), the efficiency compares very favorably with the results obtained by Murase and Nayar <ref> [Murase and Nayar 95] </ref>. Their implementation required 20 inner products, followed by a sophisticated search procedure. Next, we investigated the growth rate of the number of rejectors required as a function of the number of classes. The results, in Figure 4, validate the hypothesized logarithmic growth in time complexity.
Reference: [Nayar et al. 96] <author> S.K. Nayar, S. Baker, and H. Murase, </author> <title> "Parametric Feature Detection," </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <address> San Francisco, </address> <year> 1996. </year>
Reference-contexts: The main reason for the rejector's superior performance is its hierarchical structure. The rejector used at each step is individually constructed for the classes it seeks to distinguish between. 5.2 Local Feature Detection We constructed a composite rejector for a feature detector of the type proposed in <ref> [Nayar et al. 96] </ref>. (The details of the implementation may be found in [Baker and Nayar 95].) The output of the composite rejector is used as input to the feature detector, and consists of pixels at which further consideration is worthwhile.
Reference: [Payne and Meisel 77] <author> H.J. Payne and W.S. Meisel, </author> <title> "An Algorithm for Constructing Optimal Binary Decision Trees," </title> <journal> IEEE Transactions on Computers, </journal> <volume> 26 </volume> <pages> 905-916, </pages> <year> 1977. </year>
Reference: [Pentland et al. 94] <author> A.P. Pentland, B. Moghaddam, and T. Starner, </author> <title> "View-based and modular eigenspaces for face recognition," </title> <booktitle> In Procedings of IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 84-91, </pages> <year> 1994. </year>
Reference: [Sirovich and Kirby 87] <author> L. Sirovich and M. Kirby, </author> <title> "Low-dimensional procedure for the characterization of human faces," </title> <journal> Journal of the Optical Society of America, </journal> <volume> 4 </volume> <pages> 519-524, </pages> <year> 1987. </year>
Reference: [Turk and Pentland 91] <author> M.A. Turk and A.P. Pentland, </author> <title> "Face recognition using eigenfaces," </title> <booktitle> In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, </booktitle> <pages> pages 586-591, </pages> <year> 1991. </year>
Reference: [Weng 94] <author> J. Weng, "SHOSLIF: </author> <title> The Hierarchical Optimal Subspace Learning and Inference Framework," </title> <institution> Michigan State University Technical Report, CPS 94-15, </institution> <year> 1994. </year>
Reference: [Yianilos 93] <author> P.N. Yianilos, </author> <title> "Data Structures and Algorithms for Nearest Neighbor Search in General Metric Spaces," </title> <booktitle> In Proceedings of the ACM-SIAM Symposium on Discrete Algorithms, </booktitle> <pages> pages 311-321, </pages> <year> 1993. </year>
References-found: 15

