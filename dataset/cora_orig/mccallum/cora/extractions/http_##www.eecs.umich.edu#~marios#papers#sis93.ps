URL: http://www.eecs.umich.edu/~marios/papers/sis93.ps
Refering-URL: http://www.eecs.umich.edu/~marios/pubs.html
Root-URL: http://www.cs.umich.edu
Title: Edge-Triggering vs. Two-Phase Level-Clocking (Extended Abstract)  
Author: Marios C. Papaefthymiou Keith H. Randall 
Address: Cambridge, Massachusetts 02139  
Affiliation: MIT Laboratory for Computer Science  
Abstract: Level-clocked designs that employ a two-phase, nonoverlapping clocking scheme have the theoretical potential to operate up to twice as fast as edge-triggered designs. We have run experiments that demonstrate, however, that edge-triggering is often just as fast as two-phase clocking, and that the speed potential of two-phase clocking is generally not obtained except when the delay between any two consecutive latches is roughly uniform and close to the maximum gate delay. Moreover, our experiments show that asymmetrical clocking of a two-phase circuit often does not provide any speedup over optimal symmetric clocking schemes. Level-clocking can lead to substantial reductions in the number of storage elements in a circuit, however. Our experiments show that for edge-triggered circuitry that has been retimed to operate with the minimum possible clock period, by replacing each flip-flop by a pair of level-sensitive latches and subsequently retiming the resulting two-phase circuit, the number of storage elements can be reduced by up to 38% without increasing the clock period of the final design or affecting its I/O specification. Reductions of greater than 25% were achieved for more than one third of the circuits we tested. Our experiments were performed using Tim, a timing optimization package currently under development at MIT. We ran our tests on MCNC benchmark circuits, AT&T communication circuits, and custom circuitry designed for MIT's Alewife machine. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Burks, K. Sakallah, and T. Mudge. </author> <title> Multiphase retiming using minT c . t 92 ACM Workshop on Timing Issues in the Specification and Synthesis of Digital Systems, </title> <month> March </month> <year> 1992. </year>
Reference-contexts: The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been mentioned in <ref> [1, 6, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [21]. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [19].
Reference: [2] <author> M. R. Dagenais and N. C. Rumin. </author> <title> Automatic determination of optimal clocking parameters in synchronous MOS VLSI circuits. </title> <booktitle> In Advanced Research in VLSI: Proc. of the 5th MIT Conference, </booktitle> <pages> pages 19-33, </pages> <year> 1988. </year>
Reference: [3] <author> L. A. Glasser and D. W. Dobberpuhl. </author> <title> The Design and Analysis of VLSI Circuits. </title> <publisher> Addison-Wesley, </publisher> <address> Reading, Massachusetts, </address> <year> 1985. </year>
Reference-contexts: first step of this procedure was to replace each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches that are clocked by a two-phase, nonoverlapping clocking scheme, as shown in Figure 1. (In fact, it is common in VLSI to implement edge-triggered flip-flops by a pair of back-to-back level-sensitive latches <ref> [3, 24] </ref>.) The two-phase circuit that results after this conversion has the same clock period and the same number of storage elements as the original edge-triggered circuit, assuming that each edge-triggered flip-flop counts as two level-sensitive latches.
Reference: [4] <author> R. B. Hitchcock. </author> <title> Timing verification and the timing analysis program. </title> <booktitle> In Proc. 19th Design Automation Conference, </booktitle> <pages> pages 594-604, </pages> <month> June </month> <year> 1982. </year>
Reference: [5] <author> A. T. Ishii and C. E. Leiserson. </author> <title> A timing analysis of level-clocked circuitry. </title> <booktitle> In Advanced Research in VLSI: Proc. of the Sixth MIT Conference, </booktitle> <pages> pages 113-130. </pages> <publisher> MIT Press, </publisher> <month> April </month> <year> 1990. </year>
Reference: [6] <author> A. T. Ishii, C. E. Leiserson, and M. C. Papaefthymiou. </author> <title> Optimizing two-phase, </title> <booktitle> level-clocked circuitry. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been mentioned in <ref> [1, 6, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [21]. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [19]. <p> A similar pattern is revealed for almost all of our test circuits. This phenomenon can be justified as follows. The critical ratio R is a lower bound on the clock period of both the edge-triggered and the level-clocked circuit <ref> [6, 15] </ref>. Consequently, the longest combinational delay in the circuits is at least R under any transformation that does not change the number of storage elements around the cycles in the circuit. <p> The following lemma gives necessary and sufficient conditions for a k-phase circuit to be properly timed by a symmetric clocking scheme. Its proof is based on the notion of "rise-to-fall" times that has been introduced in <ref> [6] </ref>. 15 Lemma 2 Let G = hV; E; d; wi be a k-phase circuit, let be a symmetric clocking scheme with k phases, and let be the duty cycle of each phase. <p> First, we compute a set of O (V 3 ) possible clock periods using the O (V 2 E) algorithm from <ref> [6] </ref>, and then we binary search this set for the minimum feasible clock period.
Reference: [7] <author> N. P. Jouppi. </author> <title> Timing analysis for NMOS VLSI. </title> <booktitle> In Proc. 20th Design Automation Conference, </booktitle> <pages> pages 411-418, </pages> <month> June </month> <year> 1983. </year>
Reference: [8] <author> C. E. Leiserson, F. M. Rose, and J. B. Saxe. </author> <title> Optimizing synchronous circuitry by retiming. </title> <booktitle> 3rd Caltech Conference on VLSI, </booktitle> <year> 1983. </year> <editor> R. Bryant, </editor> <publisher> ed., </publisher> <pages> pp. 87-116. </pages>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [8, 9, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [9].
Reference: [9] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Optimizing synchronous systems. </title> <journal> Journal of VLSI and Computer Systems, </journal> <volume> 1(1) </volume> <pages> 41-67, </pages> <year> 1983. </year>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [8, 9, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [9]. <p> In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit <ref> [9] </ref>. Figure 2 illustrates the retiming operation for a gate in a circuit. Observe that retiming can change the clock period as well as the number of storage elements in a circuit.
Reference: [10] <author> C. E. Leiserson and J. B. Saxe. </author> <title> Retiming synchronous circuitry. </title> <journal> Algorithmica, </journal> <volume> 6(1), </volume> <year> 1991. </year> <note> Also available as MIT/LCS/TM-372. 17 </note>
Reference-contexts: The second step of the procedure was to use the "retiming" transformation to relocate the storage elements of the two-phase circuit that resulted from the first step. Retiming relocates storage elements in both edge-triggered and level-clocked circuitry without changing its functionality <ref> [8, 9, 10] </ref>. In addition, retiming is a "universal" transformation for speeding up circuits, in the sense that any other functionality-preserving transformation that did better than retiming would depend on the functionality of the gates in the circuit [9].
Reference: [11] <author> B. Lockyear and C. Ebeling. </author> <title> Optimal retiming of multi-phase, </title> <booktitle> level-clocked circuits. In Advanced Research in VLSI and Parallel Systems: Proc. of the 1992 Brown/MIT Conference. </booktitle> <publisher> MIT Press, </publisher> <month> March </month> <year> 1992. </year>
Reference-contexts: The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been mentioned in <ref> [1, 6, 11] </ref>. The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [21]. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [19]. <p> The concept of replacing each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches, and then using retiming for speed optimization has been mentioned in [1, 6, 11]. The potential of level-clocking for reducing the number of storage elements has been mentioned in <ref> [11] </ref>. The idea of using latches instead of flip-flops has been also used in [21]. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [19].
Reference: [12] <author> T. M. McWilliams. </author> <title> Verification of timing constraints on large digital systems. </title> <booktitle> In Proc. 17th Design Automation Conference, </booktitle> <pages> pages 139-147, </pages> <month> June </month> <year> 1980. </year>
Reference: [13] <author> J. B. Orlin. </author> <title> A faster strongly polynomial minimum cost flow algorithm. </title> <booktitle> Proc. of the 20th Annual ACM Symposium on Theory of Computing, </booktitle> <pages> pages 377-387, </pages> <month> May </month> <year> 1988. </year>
Reference: [14] <author> C. Papadimitriou and K. Steiglitz. </author> <title> Combinatorial Optimization, Algorithms and Complexity. </title> <publisher> Prentice-Hall, Inc., </publisher> <year> 1982. </year>
Reference: [15] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-weight cycles. </title> <booktitle> 3rd ACM Symposium on Parallel Algorithms and Architectures, </booktitle> <month> July </month> <year> 1991. </year>
Reference-contexts: A similar pattern is revealed for almost all of our test circuits. This phenomenon can be justified as follows. The critical ratio R is a lower bound on the clock period of both the edge-triggered and the level-clocked circuit <ref> [6, 15] </ref>. Consequently, the longest combinational delay in the circuits is at least R under any transformation that does not change the number of storage elements around the cycles in the circuit.
Reference: [16] <author> M. C. Papaefthymiou. </author> <title> Understanding retiming through maximum average-delay cycles. </title> <journal> Mathematical Systems Theory, </journal> <note> 1992. To appear. A preliminary version of the paper appeared in the proceedings of the 3rd ACM Symposium on Parallel Algorithms and Architectures, </note> <month> July </month> <year> 1991. </year>
Reference: [17] <author> M. C. Papaefthymiou and K. H. Randall. TIM: </author> <title> a timing package for two-phase, level-clocked circuitry. </title> <type> Unpublished manuscript, </type> <month> October </month> <year> 1992. </year>
Reference-contexts: Our empirical comparison focused on two specific quantitative measures: speed and number of storage elements. We ran our tests using Tim, a timing optimization tool currently under development at MIT <ref> [17] </ref>. <p> First, we briefly refer to our tools and test circuits. We move on to describe and motivate our experimental methodology, and then we discuss our results. Our experiments were performed using Tim, a timing optimization package currently under development at MIT <ref> [17] </ref>. Tim performs a variety of functions on two-phase circuitry, such as timing verification, retiming, clock tuning, and sensitivity analysis. It also performs timing verification, retiming, and sensitivity analysis on edge-triggered circuitry.
Reference: [18] <author> K. A. Sakallah, T. N. Mudge, and O. A. Olukotun. </author> <title> checkT c and minT c : Timing verification and optimal clocking of synchronous digital circuits. </title> <booktitle> In Digest of Technical Papers of the 1990 IEEE International Conference on CAD, </booktitle> <pages> pages 552-555, </pages> <month> November </month> <year> 1990. </year>
Reference: [19] <author> N. Shenoy, R. K. Brayton, and A. Sangiovanni-Vincentelli. </author> <title> Retiming of circuits with single phase level-sensitive latches. </title> <booktitle> In International Conference on Computer Design, </booktitle> <month> October </month> <year> 1991. </year>
Reference-contexts: The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in [21]. Retiming for speed has been studied in the context of single-phase level-clocked circuits in <ref> [19] </ref>. Despite the large amount of work in this area, our contribution is (we believe) the first attempt to quantify empirically the performance differences of edge-triggering and two-phase clocking. The remainder of the paper has three sections.
Reference: [20] <author> T. G. Szymanski. LEADOUT: </author> <title> A static timing analyzer for MOS circuits. </title> <booktitle> In Digest of Technical Papers of the 1986 IEEE International Conference on CAD, </booktitle> <pages> pages 130-133, </pages> <month> November </month> <year> 1986. </year>
Reference: [21] <author> T. G. Szymanski. </author> <title> Computing optimal clock schedules. </title> <booktitle> In Proc. 29th ACM/IEEE Design Automation Conference, </booktitle> <pages> pages 399-404, </pages> <month> June </month> <year> 1992. </year>
Reference-contexts: The potential of level-clocking for reducing the number of storage elements has been mentioned in [11]. The idea of using latches instead of flip-flops has been also used in <ref> [21] </ref>. Retiming for speed has been studied in the context of single-phase level-clocked circuits in [19]. Despite the large amount of work in this area, our contribution is (we believe) the first attempt to quantify empirically the performance differences of edge-triggering and two-phase clocking.
Reference: [22] <author> T. G. Szymanski and N. Shenoy. </author> <title> Verifying clock schedules. </title> <booktitle> In Digest of Technical Papers of the 1992 IEEE/ACM International Conference on CAD, </booktitle> <month> Novem-ber </month> <year> 1992. </year>
Reference: [23] <author> S. H. Unger and C. J. Tan. </author> <title> Clocking schemes for high speed digital systems. </title> <journal> IEEE Transactions on Computers, </journal> <volume> C-35(10):880-895, </volume> <month> October </month> <year> 1986. </year>
Reference: [24] <author> S. A. Ward and R. H. Halstead, Jr. </author> <title> Computation Structures. </title> <publisher> McGraw-Hill, MIT Press, </publisher> <year> 1990. </year> <month> 18 </month>
Reference-contexts: first step of this procedure was to replace each edge-triggered flip-flop by a pair of back-to-back level-sensitive latches that are clocked by a two-phase, nonoverlapping clocking scheme, as shown in Figure 1. (In fact, it is common in VLSI to implement edge-triggered flip-flops by a pair of back-to-back level-sensitive latches <ref> [3, 24] </ref>.) The two-phase circuit that results after this conversion has the same clock period and the same number of storage elements as the original edge-triggered circuit, assuming that each edge-triggered flip-flop counts as two level-sensitive latches.
References-found: 24

