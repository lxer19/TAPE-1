URL: http://www.cse.ogi.edu/~kotov/papers/atw95/atw95paper.ps
Refering-URL: http://www.cse.ogi.edu/~kotov/papers/atw95.html
Root-URL: http://www.cse.ogi.edu
Email: fellis,kotovg@cse.ogi.edu  
Title: Software Engineering and Metrics Applied to Application Generator Technology Development detailed project planning, measurements and
Author: Walter Ellis Alexei Kotov P. O. 
Note: The project used military and industrial standard project management techniques not often utilized in an academic environment. These techniques included  
Date: April 11, 1995  
Address: Box 91000, Portland, OR 97291-1000 USA  
Affiliation: Pacific Software Research Center Department of Computer Science and Engineering Oregon Graduate Institute of Science Technology  
Pubnum: http://www.cse.ogi.edu/~kotov/ATW95paper.html  
Abstract: We address the applicability of industrial-strength project management techniques to a research environment. We applied these techniques to the Software Design for Reliability and Reuse (SDRR) project of the Pacific Software Research Center (PacSoft) at the Oregon Graduate Institute of Science & Technology (OGI). The project goal was to develop a new technology for efficiently building application generators | a generator of generators. The 19-month project involving 12 developers was completed successfully on-time, within budget with zero product failures in a 3-month experimental trial comparing technologies. We focus here on the measurement techniques and the growth of the project team in accepting measurements. Prior to this project, there was no measurement infrastructure at PacSoft. PacSoft used a new product measure, the Capabilities metric, which was the basis for schedule tracking and estimates-to-complete. The early predictions for intermediate functionality were highly accurate giving the team added confidence in steering the project to a successful completion. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> Humphrey, Watts S., </author> <title> Managing the Software Project. </title> <publisher> Addison-Wesley, </publisher> <year> 1990. </year>
Reference: [2] <author> Grady, Robert B., Deborah L. Caswell, </author> <title> Software Metrics: Establishing a Company-Wide Program. </title> <publisher> Prentice-Hall Inc., </publisher> <year> 1987. </year>
Reference: [3] <author> DeMarco, Tom, </author> <title> Controlling Software Projects. Management, Measurement and Estimation. </title> <publisher> Yourdon Press, </publisher> <year> 1982. </year>
Reference: [4] <author> Albrecht, A.J. </author> <title> "Measuring Application Development Productivity," </title> <booktitle> Proceedings of the Joint SHARE, GUIDE, and IBM Application Development Symposium, </booktitle> <month> October </month> <year> 1979. </year>
Reference: [5] <author> Jones, Capers, </author> <title> Programming Productivity Issues for the Eighties, </title> <journal> IEEE Computer Society, </journal> <volume> Catalog No. 391, </volume> <year> 1981. </year>
Reference-contexts: A list of capabilities might be an answer to the question "What can this program do?" The Capabilities metric is a functional metric that is slightly different from function points and feature points metrics in the sense that it is more a characteristic of functionality than complexity ([4], <ref> [5] </ref>, and [6]). The Capabilities metric is very user-oriented because it deals with external features of the software product. Capabilities are available early in the development process (at the requirement specification phase).
Reference: [6] <editor> Jones, Capers, </editor> <booktitle> Applied Software Measurement. </booktitle> <publisher> McGraw-Hill, </publisher> <year> 1991. </year>
Reference-contexts: A list of capabilities might be an answer to the question "What can this program do?" The Capabilities metric is a functional metric that is slightly different from function points and feature points metrics in the sense that it is more a characteristic of functionality than complexity ([4], [5], and <ref> [6] </ref>). The Capabilities metric is very user-oriented because it deals with external features of the software product. Capabilities are available early in the development process (at the requirement specification phase).
Reference: [7] <author> Charles Plinta, Kenneth Lee, and Michael Rissman. </author> <title> A model solution for C 3 I message translation and validation. </title> <type> Technical Report CMU/SEI-89-TR-12 ESD-89-TR-20, </type> <institution> Software Engineering Institute, Carnegie Mellon University, </institution> <month> December </month> <year> 1989. </year>
Reference: [8] <institution> Pacific Software Research Center, </institution> <note> SDRR Project Phase I Final Scientific and Technical Report, </note> <month> February </month> <year> 1995. </year>
Reference-contexts: This is an investment that has to be made for every domain that SDRR technology is applied. * Validation Experiment. This section summarized the effort expended on de sign and implementation of the technology validation experiment <ref> [8] </ref>. * Measurement. This section accounted for the effort expended on application of measurement to the project, including building measurement infrastructure, measurement data collection and analysis, and data reporting, both internal and external.
Reference: [9] <author> Jeffrey Bell et al. </author> <title> Software Design for Reliability and Reuse: A Proof-of-Concept Demonstration. </title> <booktitle> In TRI-Ada '94 Proceedings, </booktitle> <pages> pages 396-404. </pages> <publisher> ACM, </publisher> <month> November </month> <year> 1994. </year>
Reference: [10] <institution> Pacific Software Research Center, SDRR Management Plan. </institution> <month> August </month> <year> 1993. </year>
Reference: [11] <institution> Pacific Software Research Center, Measurement Plan for the OGI SDRR Technology Development and Validation Program. </institution> <month> August </month> <year> 1993. </year>
Reference: [12] <institution> Pacific Software Research Center, Technical Interchange Briefing Materials. </institution> <month> Jan-uary </month> <year> 1995. </year> <month> 12 </month>
Reference-contexts: Introduction of a measurement program into a research team was a challenging task. It required careful management to facilitate change by capitalizing on supporting forces and confronting opposing forces. 3.1.1 Supporting Forces Several forces were supporting the introduction of measurement and project management techniques <ref> [12] </ref>. Among them were * Sponsor's Request. Our Air Force sponsors wanted the group to use measure ment as a basis for rational decision-making. 4 * Changing Social Contract For Research. Research is now expected to pro- duce practical and applicable results. * Previous Experience.
References-found: 12

