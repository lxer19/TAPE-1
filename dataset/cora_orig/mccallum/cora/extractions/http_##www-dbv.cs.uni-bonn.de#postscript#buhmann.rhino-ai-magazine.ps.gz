URL: http://www-dbv.cs.uni-bonn.de/postscript/buhmann.rhino-ai-magazine.ps.gz
Refering-URL: http://www-dbv.cs.uni-bonn.de/abstracts/buhmann.ai-magazine.html
Root-URL: http://cs.uni-bonn.de
Title: The Mobile Robot Rhino  
Author: J. Buhmann, W. Burgard, A.B. Cremers, D. Fox, T. Hofmann, F. Schneider, J. Strikos and S. Thrun 
Date: 16:1, Spring 1995  
Note: to appear in: AI Magazine,  
Address: Romerstr. 164, D-53117 Bonn, Germany  
Affiliation: Institut fur Informatik III Universitat Bonn  
Abstract: Rhino was the University of Bonn's entry in the 1994 AAAI mobile robot competition. Rhino is a mobile robot designed for indoor navigation and manipulation tasks. The general scientific goal of the Rhino project is the development and the analysis of autonomous and complex learning systems. This paper briefly describes the major components of the Rhino control software, as they were exhibited at the competition. It also sketches the basic philosophy of the Rhino architecture, and discusses some of the lessons that we learned during the competition. 
Abstract-found: 1
Intro-found: 1
Reference: [1] <author> T. Balch, G. Boone, T. Collins, H. Forbes, D. MacKenzie, and J. C. Santamaria. </author> <title> Io, Ganymede and Callisto a multiagent robot janitorial team. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <month> Spring </month> <year> 1995. </year> <note> (this issue). </note>
Reference-contexts: At the competition, Rhino found most of the objects in the starting room and then continued to clean-up the hallway. Here Rhino scored second, defeated only by a collaborating team of three robots, described in a different article in the same volume <ref> [1] </ref>. The AAAI competition ends an initial six month period of software engineering. Rhino's software is generally applicable to autonomous navigation in indoor environments. In the future, Rhino shall operate 24 hours a day, interrupted only by battery charging.
Reference: [2] <author> T. L. Dean and M. Boddy. </author> <title> An analysis of time-dependent planning. </title> <booktitle> In Proceeding of Seventh National Conference on Artificial Intelligence AAAI-92, </booktitle> <pages> pages 49-54, </pages> <address> Menlo Park, CA, 1988. </address> <publisher> AAAI, AAAI Press/The MIT Press. </publisher>
Reference-contexts: To increase the flexibility of the software, learning mechanisms support the adaptation of the robot to its sensors and the environment. For example, neural network learning is employed to interpret sonar measurements. * Real-time operation. In order to act continuously in real-time, any-time solutions <ref> [2] </ref> are employed wherever possible. Any-time algorithms are able to make decisions regardless of the time spent for computation. The more time is available, however, the better are the results. * Reactive control and deliberation.
Reference: [3] <author> C. Fedor. TCX. </author> <title> An interprocess communication system for building robotic architectures. programmer's guide to version 10.xx. </title> <institution> Carnegie Mellon University, </institution> <address> Pittsburgh, PA 15213, </address> <month> December </month> <year> 1993. </year>
Reference-contexts: The key principles for the design of Rhino's software are: Germany . * Distributed control and communication. Each module communicates with several other modules via Ethernet <ref> [3] </ref>. There is no single control unit, and commu nication is not centralized. * Asynchronous communication. Rhino's software lacks a central clock. Each of the modules runs independently of other modules. <p> We are currently implementing various learning techniques that allow Rhino to adapt to new situations, and to acquire new skills necessary for achieving a broad variety of tasks. ACKNOWLEDGMENT Some of the low-level software (TCX <ref> [3] </ref>, device drivers for the speech board and the cameras) were provided by Carnegie Mellon University, which is gratefully acknowledged. We also acknowledge the steady and helpful support by Real World Interface Inc.
Reference: [4] <author> R. A. Howard. </author> <title> Dynamic Programming and Markov Processes. </title> <publisher> MIT Press and Wiley, </publisher> <year> 1960. </year>
Reference-contexts: These paths are constantly refined and communicated to the obstacle avoidance routine, which then determines the final motion direction and velocity of the robot. Rhino's main planning engine consists of a dynamic programming routine, which computes trajectories with minimum cost to a goal location <ref> [4] </ref>. The occupancy map is translated into a cost function, such that occupied territory results in high, and free territory in low traversal cost. Dynamic programming propagates path information from the goal (s) to arbitrary locations in the map.
Reference: [5] <author> H. P. Moravec. </author> <title> Sensor fusion in certainty grids for mobile robots. </title> <journal> AI Magazine, </journal> <pages> pages 61-74, </pages> <month> Summer </month> <year> 1988. </year>
Reference-contexts: Sonar sensors are interpreted using an artificial neural network, which estimates the likelihood of occupancy of any point in a 3 meter-circle around the robot [7]. Multiple measurements are integrated using Bayesian inference <ref> [5] </ref>. Figure 3a shows a map which was constructed while manually steering the robot through the competition arena. This map describes an area of approximately 30 fi 20 meters. The hallways, rooms, large obstacles and doors can clearly be recognized.
Reference: [6] <author> R. Simmons. </author> <title> The 1994 AAAI robot competition and exhibition. </title> <journal> AI Magazine, </journal> <volume> 16(1), </volume> <month> Spring </month> <year> 1995. </year> <note> (this issue). </note>
Reference-contexts: Rhino does not require prior knowledge on the locations of walls/obstacles, nor on the topology of its environment. In the first stage of the competition (office delivery), Rhino had to move to a designated target location (see <ref> [6] </ref> for a detailed description of the competition). This stage consisted of three trials, two of which counted for the final score.
Reference: [7] <author> S. Thrun. </author> <title> Exploration and model building in mobile robot domains. </title> <booktitle> In Proceedings of the ICNN-93, </booktitle> <pages> pages 175-180, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1993. </year> <institution> IEEE Neural Network Council. </institution>
Reference-contexts: More specifically, when traveling through possibly unknown terrain, Rhino interprets its sonar readings to generate a two-dimensional, discretized probabilistic occupancy map. Sonar sensors are interpreted using an artificial neural network, which estimates the likelihood of occupancy of any point in a 3 meter-circle around the robot <ref> [7] </ref>. Multiple measurements are integrated using Bayesian inference [5]. Figure 3a shows a map which was constructed while manually steering the robot through the competition arena. This map describes an area of approximately 30 fi 20 meters. The hallways, rooms, large obstacles and doors can clearly be recognized. <p> In this prototypical example, the main hallways have already been traversed, and Rhino continues to explore the unexplored rooms. Rhino's speed at the straight-line segments of the exploration path was generally between 50 and 90 cm/sec. Further details on planning and exploration can be found in <ref> [7] </ref>. V. VISION AND OBJECT RECOGNITION The images from the color camera system are the input to a four-stage vision system, which solves two different tasks. Firstly, it has to recognize important objects typically found in the environment (e.g., objects in an office environment).
Reference: [8] <author> S. Thrun. </author> <title> A lifelong learning perspective for mobile robot control. </title> <booktitle> In Proceedings of the IEEE/RSJ/GI International Conference on Intelligent Robots and Systems, </booktitle> <month> September </month> <year> 1994. </year>
Reference-contexts: 1.3 Hertz, and camera images are processed at a rate of 0.7 Hertz. Rhino communicates with external computers (two SUN Sparc stations) via a tetherless Ethernet link. The Rhino project is generally concerned with the design of autonomous and complex learning systems <ref> [8] </ref>. The AAAI competition ended an initial six month period of software design. Key features of Rhino's control software, as exhibited at the competition, are: * Autonomy. Rhino operates completely autonomously. <p> In the future, Rhino shall operate 24 hours a day, interrupted only by battery charging. Our main scientific interest is the study and the design of autonomous, complex learning systems, which in the domain of robotics includes adaptive approaches to sensory processing and lifelong robot learning <ref> [8] </ref>. We are currently implementing various learning techniques that allow Rhino to adapt to new situations, and to acquire new skills necessary for achieving a broad variety of tasks.
References-found: 8

