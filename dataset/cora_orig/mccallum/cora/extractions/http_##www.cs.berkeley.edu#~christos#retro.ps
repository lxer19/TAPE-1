URL: http://www.cs.berkeley.edu/~christos/retro.ps
Refering-URL: http://www.cs.berkeley.edu/~christos/
Root-URL: 
Title: NP-completeness: A Retrospective  
Author: Christos H. Papadimitriou 
Address: Berkeley, USA  
Affiliation: University of California,  
Abstract: For a quarter of a century now, NP-completeness has been computer science's favorite paradigm, fad, punching bag, buzzword, alibi, and intellectual export. This paper is a fragmentary commentary on its origins, its nature, its impact, and on the attributes that have made it so pervasive and contagious.
Abstract-found: 1
Intro-found: 1
Reference: 1. <author> S. Arora, C. Lund, R. Motwani, M. Sudan, and M. Szegedy, </author> <title> "Proof verification and hardness of approximation problems." </title> <booktitle> Proc. 33rd FOCS (1992) pp. </booktitle> <pages> 14-23. </pages>
Reference-contexts: For example, it was used early on to show that certain optimization problems cannot be approximated satisfactorily [20], and indeed in a most ingenious and comprehensive way more recently <ref> [1] </ref>. By showing that even less ambitious goals than worst-case polynomial exact solution are unattainable, NP-completeness is thus a most useful tool for repeatedly pruning unpromising research directions and thus redirecting research to new ones (in a manner reminiscent of the struggle between Hercules and the monster Hydra [16]). 7. <p> The only way to make them go away is to collapse them with P or NP |as occasionally happens, recall [17] and its brilliant follow-up <ref> [1] </ref>. 11. NP-completeness is of course a valuable tool for demonstrating the difficulty of computational problems. However, NP-completeness is often used "allegorically;" a problem is shown NP-complete that is not, strictly speaking, a natural computational problem, but an artificial problem created to capture a mathematical concept.
Reference: 2. <author> S. A. </author> <title> Cook "The complexity of theorem-proving procedures," </title> <booktitle> Proc. 3rd STOC, </booktitle> <year> (1971), </year> <pages> pp. 151-158. </pages>
Reference-contexts: The founders of NP-completeness <ref> [2, 10, 13] </ref> appear to have anticipated its broad applicability and classification power. <p> Significantly, Karp seems annoyed and surprised that three other problems (linear programming, primality, and graph isomorphism) resisted at the time such classification. Primality and graph isomorphism were also mentioned by Cook <ref> [2] </ref>. Knuth was sufficiently convinced about the importance and broad applicability of the new concept to take early and deliberate action on the terminological front [11]. 5. NP-completeness has had tremendous impact even in areas where, in some sense, it should not have.
Reference: 3. <author> W. Diffie and M. E. </author> <title> Hellman "New directions in cryptography," </title> <journal> IEEE Trans. Inform. Theory, </journal> <volume> 22, </volume> <pages> pp. 644-654, </pages> <year> 1976. </year>
Reference-contexts: Fortunately, the founders of modern cryptography did not know this. Diffie and Hellman base their famous pronouncement "We stand today on the brink of a revolution in cryptography" <ref> [3] </ref> on two facts: (1) Very fast hardware and software, and (2) novel techniques for proving problems hard (they cite Karp's paper [10]). 6.
Reference: 4. <author> R. G. Downey and M. R. </author> <title> Fellows "Fixed-parameter tractability and completeness I: Basic results," </title> <journal> SIAM Journal on Computing, </journal> <volume> 24, 4, </volume> <pages> pp. 873-921, </pages> <year> 1995. </year>
Reference-contexts: In such cases NP-completeness has acted as an open-ended research paradigm, spawning variants that are appropriate for the computational context being studied; examples are classes that capture local search [8], the parity argument [14], logarithmic nondeterminism [18], the related concept of fixed-parameter tractability <ref> [4] </ref>, and approximability [17]. 10. Complexity classes introduced this way, as abstractions of natural computational problems of mysteriously intermediate complexity, are in some precise sense well-motivated, indeed necessary; they are discovered, not invented, as they have always existed by dint of their natural complete problems.
Reference: 5. <author> T. Eiter, G. </author> <title> Gottlob "Identifying the minimal transversals of a hypergraph and related problems" SIAM Journal on Computing, </title> <journal> 24, </journal> <volume> 6, </volume> <pages> pp. 1278-1304, </pages> <year> 1995. </year>
Reference-contexts: For example, AMIS is in output polynomial time; its generalization to hypergraphs is open, but was recently shown to be in output n c log n time [6]; see <ref> [5] </ref> for an extensive discussion of the hypergraph generalization of AMIS.
Reference: 6. <author> M. Fredman and L. </author> <title> Khachiyan "On the complexity of dualization of monotone disjunctive normal forms" Journal of Algorithms, </title> <journal> 21, </journal> <volume> 3, </volume> <pages> pp. 618-628, </pages> <year> 1996. </year>
Reference-contexts: For example, AMIS is in output polynomial time; its generalization to hypergraphs is open, but was recently shown to be in output n c log n time <ref> [6] </ref>; see [5] for an extensive discussion of the hypergraph generalization of AMIS.
Reference: 7. <author> P. Honeyman, R. E. Ladner, M. Yannakakis, </author> <title> "Testing the universal instance assumption," </title> <journal> Information Processing Letters, </journal> <volume> 12, </volume> <pages> pp. 14-19, </pages> <year> 1980. </year>
Reference-contexts: See <ref> [7] </ref> for an early example of such a use of NP-completeness in the theory of relational databases. 12. Beyond mathematics, NP-completeness (and complexity in general) can also be applied "allegorically" in other disciplines.
Reference: 8. <author> D. S. Johnson, C. H. Papadimitriou, M. </author> <title> Yannakakis "How Easy is Local Search?" J.CSS, </title> <note> 1988 (special issue for the 1985 FOCS Conference). </note>
Reference-contexts: In such cases NP-completeness has acted as an open-ended research paradigm, spawning variants that are appropriate for the computational context being studied; examples are classes that capture local search <ref> [8] </ref>, the parity argument [14], logarithmic nondeterminism [18], the related concept of fixed-parameter tractability [4], and approximability [17]. 10.
Reference: 9. <author> D. S. Johnson, C. H. Papadimitriou, M. </author> <title> Yannakakis "On Generating All Maximal Independent Sets", </title> <note> Information Processing Letters 1988. </note>
Reference-contexts: AMIS is known to be in output-polynomial time (see <ref> [9] </ref> for an exposition and strengthening of this result, and an early discussion of output polynomial time). For such problems we have an elegant alternative definition of output polynomial time.
Reference: 10. <author> R. M. </author> <title> Karp "Reducibility among combinatorial problems," pp. 85-103 in Complexity of Computer Computations, </title> <editor> R. E. Miller and J. W. Thatcher (eds), </editor> <year> 1972. </year>
Reference-contexts: The founders of NP-completeness <ref> [2, 10, 13] </ref> appear to have anticipated its broad applicability and classification power. <p> The founders of NP-completeness [2, 10, 13] appear to have anticipated its broad applicability and classification power. Leonid Levin [13] wrote in 1973: "The method described here clearly provides a means for readily obtaining results of [this type] for the majority of important sequential search problems." In Karp's paper <ref> [10] </ref> twenty one problems were proved NP-complete, showing beyond any doubt the surprisingly broad applicability of the method. Significantly, Karp seems annoyed and surprised that three other problems (linear programming, primality, and graph isomorphism) resisted at the time such classification. Primality and graph isomorphism were also mentioned by Cook [2]. <p> Diffie and Hellman base their famous pronouncement "We stand today on the brink of a revolution in cryptography" [3] on two facts: (1) Very fast hardware and software, and (2) novel techniques for proving problems hard (they cite Karp's paper <ref> [10] </ref>). 6. NP-completeness has also exhibited a great amount of versatility, adapting to contexts and computational aspects beyond its original scope of worst-case analysis of exact algorithms for decision and optimization problems.
Reference: 11. <author> D. E. </author> <title> Knuth "A terminological proposal," </title> <journal> SIGACT News, </journal> <volume> 6, 1, </volume> <pages> pp. 12-18, </pages> <year> 1974. </year>
Reference-contexts: Primality and graph isomorphism were also mentioned by Cook [2]. Knuth was sufficiently convinced about the importance and broad applicability of the new concept to take early and deliberate action on the terminological front <ref> [11] </ref>. 5. NP-completeness has had tremendous impact even in areas where, in some sense, it should not have.
Reference: 12. <author> R. E. </author> <title> Ladner "On the structure of polynomial time reducibility," </title> <journal> J.ACM, </journal> <volume> 22, </volume> <pages> pp. 155-171, </pages> <year> 1975. </year>
Reference-contexts: Karp, to whom this paper is also affectionately dedicated. NP that resist classification as either polynomial-time solvable or NP-complete. (Ladner's result on intermediate degrees between P and NP-completeness <ref> [12] </ref> had been known almost as soon as NP-completeness was introduced, and thus theoretically the world could be full of mysterious intermediate problems.) In several occasions, extremely broad classes of computational problems in NP have been dichotomized with surprising accuracy into polynomially solvable and NP-complete, see [21, 22] for two early
Reference: 13. <author> L. </author> <title> Levin "Universal sorting problems," Pr. </title> <journal> Inf. Transm., </journal> <volume> 9, </volume> <pages> p&gt; 265-266, </pages> <year> 1973. </year>
Reference-contexts: The founders of NP-completeness <ref> [2, 10, 13] </ref> appear to have anticipated its broad applicability and classification power. <p> The founders of NP-completeness [2, 10, 13] appear to have anticipated its broad applicability and classification power. Leonid Levin <ref> [13] </ref> wrote in 1973: "The method described here clearly provides a means for readily obtaining results of [this type] for the majority of important sequential search problems." In Karp's paper [10] twenty one problems were proved NP-complete, showing beyond any doubt the surprisingly broad applicability of the method.
Reference: 14. <author> C. H. </author> <title> Papadimitriou "On the Complexity of the Parity Argument and other Inefficient Proofs of Existence" JCSS, </title> <journal> 48, </journal> <volume> 3, </volume> <pages> 498-532, </pages> <year> 1994. </year>
Reference-contexts: In such cases NP-completeness has acted as an open-ended research paradigm, spawning variants that are appropriate for the computational context being studied; examples are classes that capture local search [8], the parity argument <ref> [14] </ref>, logarithmic nondeterminism [18], the related concept of fixed-parameter tractability [4], and approximability [17]. 10.
Reference: 15. <author> C. H. </author> <title> Papadimitriou "Database metatheory: asking the big queries," </title> <booktitle> Proc. 1995 PODS Conf., reprinted in SIGACT News, </booktitle> <month> spring </month> <year> 1996. </year>
Reference-contexts: NP-completeness is therefore valuable for another reason: It is one of the few precious features which give our science its special character, which set it apart from the other sciences (see <ref> [15] </ref> for another development of this argument). 14.
Reference: 16. <author> C. H. </author> <title> Papadimitriou "The complexity of knowledge representation," </title> <booktitle> Proc. 1996 Computational Complexity Symposium. </booktitle>
Reference-contexts: By showing that even less ambitious goals than worst-case polynomial exact solution are unattainable, NP-completeness is thus a most useful tool for repeatedly pruning unpromising research directions and thus redirecting research to new ones (in a manner reminiscent of the struggle between Hercules and the monster Hydra <ref> [16] </ref>). 7. Let me illustrate this versatility of NP-completeness by a technical interlude on an aspect of efficient computation that has interested me recently, namely, output polynomial time. Certain computational problems require an output f (x) on input x that is in the worst case exponential in the input. <p> It can be used as a metaphor for chaos in dynamical systems, for unbounded rationality in game theory, for unfairness in economics, for integrity of electoral systems in political science, for cognitive implausibility in artificial intelligence, for genetic indeterminism in genetics, and so on (see <ref> [16] </ref> for references). 13. NP-completeness is thus an important "intellectual export" of computer science to other disciplines.
Reference: 17. <author> C. H. Papadimitriou, M. </author> <title> Yannakakis "Optimization, approximation, and complexity classes" Proc. </title> <booktitle> 1988 STOC, and J.CSS,, </booktitle> <year> 1991. </year>
Reference-contexts: In such cases NP-completeness has acted as an open-ended research paradigm, spawning variants that are appropriate for the computational context being studied; examples are classes that capture local search [8], the parity argument [14], logarithmic nondeterminism [18], the related concept of fixed-parameter tractability [4], and approximability <ref> [17] </ref>. 10. Complexity classes introduced this way, as abstractions of natural computational problems of mysteriously intermediate complexity, are in some precise sense well-motivated, indeed necessary; they are discovered, not invented, as they have always existed by dint of their natural complete problems. <p> The only way to make them go away is to collapse them with P or NP |as occasionally happens, recall <ref> [17] </ref> and its brilliant follow-up [1]. 11. NP-completeness is of course a valuable tool for demonstrating the difficulty of computational problems.
Reference: 18. <author> C. H. Papadimitriou, M. </author> <title> Yannakakis "On limited nondeterminism and the complexity of the Vapnic-Chervonenkis dimension," </title> <note> special issue of J.CSS 1996 (special issue for the 1993 Structures Conf.). </note>
Reference-contexts: In such cases NP-completeness has acted as an open-ended research paradigm, spawning variants that are appropriate for the computational context being studied; examples are classes that capture local search [8], the parity argument [14], logarithmic nondeterminism <ref> [18] </ref>, the related concept of fixed-parameter tractability [4], and approximability [17]. 10.
Reference: 19. <author> R. L. </author> <note> Rivest "Cryptography," pp. 717-755 in Handbook of Theoretical Computer Science, </note> <editor> J. van Leeuwen (ed), </editor> <publisher> The MIT Press/Elsevier, </publisher> <year> 1990. </year>
Reference-contexts: NP-completeness has had tremendous impact even in areas where, in some sense, it should not have. It is now common knowledge among computer scientists that NP-completeness is largely irrelevant to public-key cryptography, since in that area one needs sophisticated cryptographic assumptions that go beyond NP-completeness and worst-case polynomial-time computation <ref> [19] </ref>; furthermore, cryptographic protocols based on NP-complete problems have been ill-fated. Fortunately, the founders of modern cryptography did not know this.
Reference: 20. <author> S. Sahni, T. </author> <title> Gonzalez "P-complete approximation problems," </title> <journal> J.ACM, </journal> <volume> 23, </volume> <pages> pp. 555-565, </pages> <year> 1976. </year>
Reference-contexts: NP-completeness has also exhibited a great amount of versatility, adapting to contexts and computational aspects beyond its original scope of worst-case analysis of exact algorithms for decision and optimization problems. For example, it was used early on to show that certain optimization problems cannot be approximated satisfactorily <ref> [20] </ref>, and indeed in a most ingenious and comprehensive way more recently [1].
Reference: 21. <author> T. J. </author> <title> Schaeffer "The complexity of satisfiability problems," </title> <booktitle> Proc. 10th STOC, </booktitle> <year> (1978), </year> <pages> pp. 216-226. </pages>
Reference-contexts: between P and NP-completeness [12] had been known almost as soon as NP-completeness was introduced, and thus theoretically the world could be full of mysterious intermediate problems.) In several occasions, extremely broad classes of computational problems in NP have been dichotomized with surprising accuracy into polynomially solvable and NP-complete, see <ref> [21, 22] </ref> for two early examples. 4. The founders of NP-completeness [2, 10, 13] appear to have anticipated its broad applicability and classification power.
Reference: 22. <author> M. </author> <title> Yannakakis "Node- and edge-deletion problems," </title> <booktitle> Proc. 10th STOC, </booktitle> <year> (1978), </year> <pages> pp. </pages> <month> 253-264. </month> <title> This article was processed using the L a T E X macro package with LLNCS style </title>
Reference-contexts: between P and NP-completeness [12] had been known almost as soon as NP-completeness was introduced, and thus theoretically the world could be full of mysterious intermediate problems.) In several occasions, extremely broad classes of computational problems in NP have been dichotomized with surprising accuracy into polynomially solvable and NP-complete, see <ref> [21, 22] </ref> for two early examples. 4. The founders of NP-completeness [2, 10, 13] appear to have anticipated its broad applicability and classification power.
References-found: 22

